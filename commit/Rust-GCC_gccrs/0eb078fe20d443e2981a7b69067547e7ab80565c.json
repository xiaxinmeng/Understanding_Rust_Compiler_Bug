{"sha": "0eb078fe20d443e2981a7b69067547e7ab80565c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGViMDc4ZmUyMGQ0NDNlMjk4MWE3YjY5MDY3NTQ3ZTdhYjgwNTY1Yw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-11-23T11:33:03Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-11-23T11:33:03Z"}, "message": "re PR middle-end/71762 (~X & Y to X < Y doesn't work for uninitialized values)\n\n2016-11-23  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/71762\n\t* match.pd ((~X & Y) -> X < Y, (X & ~Y) -> Y < X,\n\t(~X | Y) -> X <= Y, (X | ~Y) -> Y <= X): Remove.\n\n\t* gcc.dg/torture/pr71762-1.c: New testcase.\n\t* gcc.dg/torture/pr71762-2.c: Likewise.\n\t* gcc.dg/torture/pr71762-3.c: Likewise.\n\t* gcc.dg/tree-ssa/forwprop-28.c: XFAIL.\n\nFrom-SVN: r242747", "tree": {"sha": "a629c915e64cc49bb9a5f59a7fbcef57017d423a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a629c915e64cc49bb9a5f59a7fbcef57017d423a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0eb078fe20d443e2981a7b69067547e7ab80565c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0eb078fe20d443e2981a7b69067547e7ab80565c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0eb078fe20d443e2981a7b69067547e7ab80565c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0eb078fe20d443e2981a7b69067547e7ab80565c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "efb71232412323c504f3af95ed6679abfd15cb7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efb71232412323c504f3af95ed6679abfd15cb7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efb71232412323c504f3af95ed6679abfd15cb7a"}], "stats": {"total": 98, "additions": 71, "deletions": 27}, "files": [{"sha": "192d6e4ae15addff87adeea9de0a54254039d242", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0eb078fe20d443e2981a7b69067547e7ab80565c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0eb078fe20d443e2981a7b69067547e7ab80565c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0eb078fe20d443e2981a7b69067547e7ab80565c", "patch": "@@ -1,3 +1,9 @@\n+2016-11-23  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/71762\n+\t* match.pd ((~X & Y) -> X < Y, (X & ~Y) -> Y < X,\n+\t(~X | Y) -> X <= Y, (X | ~Y) -> Y <= X): Remove.\n+\n 2016-11-23  Richard Biener  <rguenther@suse.de>\n \n \tPR lto/78472"}, {"sha": "6665412a4af76a1a4ff44fb42985400d7e92b03e", "filename": "gcc/match.pd", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0eb078fe20d443e2981a7b69067547e7ab80565c/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0eb078fe20d443e2981a7b69067547e7ab80565c/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=0eb078fe20d443e2981a7b69067547e7ab80565c", "patch": "@@ -963,33 +963,6 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n   (op:c truth_valued_p@0 (logical_inverted_value @0))\n   { constant_boolean_node (op == NE_EXPR ? true : false, type); }))\n \n-/* If arg1 and arg2 are booleans (or any single bit type)\n-   then try to simplify:\n-\n-   (~X & Y) -> X < Y\n-   (X & ~Y) -> Y < X\n-   (~X | Y) -> X <= Y\n-   (X | ~Y) -> Y <= X\n-\n-   But only do this if our result feeds into a comparison as\n-   this transformation is not always a win, particularly on\n-   targets with and-not instructions.\n-   -> simplify_bitwise_binary_boolean */\n-(simplify\n-  (ne (bit_and:c (bit_not @0) @1) integer_zerop)\n-  (if (INTEGRAL_TYPE_P (TREE_TYPE (@1))\n-       && TYPE_PRECISION (TREE_TYPE (@1)) == 1)\n-   (if (TYPE_UNSIGNED (TREE_TYPE (@1)))\n-    (lt @0 @1)\n-    (gt @0 @1))))\n-(simplify\n-  (ne (bit_ior:c (bit_not @0) @1) integer_zerop)\n-  (if (INTEGRAL_TYPE_P (TREE_TYPE (@1))\n-       && TYPE_PRECISION (TREE_TYPE (@1)) == 1)\n-   (if (TYPE_UNSIGNED (TREE_TYPE (@1)))\n-    (le @0 @1)\n-    (ge @0 @1))))\n-\n /* ~~x -> x */\n (simplify\n   (bit_not (bit_not @0))"}, {"sha": "64fbed77e896587b2fad5fa3b56649fdc064df37", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0eb078fe20d443e2981a7b69067547e7ab80565c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0eb078fe20d443e2981a7b69067547e7ab80565c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0eb078fe20d443e2981a7b69067547e7ab80565c", "patch": "@@ -1,3 +1,11 @@\n+2016-11-23  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/71762\n+\t* gcc.dg/torture/pr71762-1.c: New testcase.\n+\t* gcc.dg/torture/pr71762-2.c: Likewise.\n+\t* gcc.dg/torture/pr71762-3.c: Likewise.\n+\t* gcc.dg/tree-ssa/forwprop-28.c: XFAIL.\n+\n 2016-11-23  Richard Biener  <rguenther@suse.de>\n \n \tPR lto/78472"}, {"sha": "d20cbc32c97c919768ca5132467ec066706d2b20", "filename": "gcc/testsuite/gcc.dg/torture/pr71762-1.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0eb078fe20d443e2981a7b69067547e7ab80565c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr71762-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0eb078fe20d443e2981a7b69067547e7ab80565c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr71762-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr71762-1.c?ref=0eb078fe20d443e2981a7b69067547e7ab80565c", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-fdisable-rtl-init-regs\" } */\n+\n+static _Bool\n+foo (_Bool a, _Bool b)\n+{\n+  int x = a && ! b;\n+  return x != 0;\n+}\n+\n+int y = 1;\n+int main()\n+{\n+  _Bool x;\n+  if (foo (x, y))\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "65047cb4fb34fc968cd0556762e4b821a385c719", "filename": "gcc/testsuite/gcc.dg/torture/pr71762-2.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0eb078fe20d443e2981a7b69067547e7ab80565c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr71762-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0eb078fe20d443e2981a7b69067547e7ab80565c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr71762-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr71762-2.c?ref=0eb078fe20d443e2981a7b69067547e7ab80565c", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do run } */\n+\n+static _Bool\n+foo (_Bool a, _Bool b)\n+{\n+  int x = a && ! b;\n+  return x != 0;\n+}\n+\n+int y = 1;\n+int main()\n+{\n+  _Bool x[32];\n+  if (foo (x[1], y))\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "4fd5f98da871681cfebe9c50283c07a09b93ceb8", "filename": "gcc/testsuite/gcc.dg/torture/pr71762-3.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0eb078fe20d443e2981a7b69067547e7ab80565c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr71762-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0eb078fe20d443e2981a7b69067547e7ab80565c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr71762-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr71762-3.c?ref=0eb078fe20d443e2981a7b69067547e7ab80565c", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do run } */\n+\n+static _Bool\n+foo (_Bool a, _Bool b)\n+{\n+  int x = a && ! b;\n+  return x != 0;\n+}\n+\n+int y = 1;\n+int main()\n+{\n+  register _Bool x\n+  /* Add register spec for the argv parameter to main.  */\n+#if __i386__ || __x86_64__\n+      __asm__(\"%esi\")\n+#endif\n+    ;\n+  if (foo (x, y))\n+    __builtin_abort ();\n+  return 0;\n+}"}]}