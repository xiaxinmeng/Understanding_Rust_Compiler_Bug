{"sha": "e51537ff6cdf7a85ed58883511d00ee309c21bd9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTUxNTM3ZmY2Y2RmN2E4NWVkNTg4ODM1MTFkMDBlZTMwOWMyMWJkOQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2011-08-02T09:50:34Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T09:50:34Z"}, "message": "a-cfdlli.ads, [...]: Remove unneeded with of Ada.Containers Remove commented out pragma Inline's...\n\n2011-08-02  Robert Dewar  <dewar@adacore.com>\n\n\t* a-cfdlli.ads, a-cfhase.ads, a-cforma.ads, a-cfhama.ads,\n\ta-cforse.ads: Remove unneeded with of Ada.Containers\n\tRemove commented out pragma Inline's\n\tMove specifications of new subprograms to the actual specs\n\nFrom-SVN: r177114", "tree": {"sha": "37ae65204ed46299ee18afc572349f390a7fecdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37ae65204ed46299ee18afc572349f390a7fecdd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e51537ff6cdf7a85ed58883511d00ee309c21bd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e51537ff6cdf7a85ed58883511d00ee309c21bd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e51537ff6cdf7a85ed58883511d00ee309c21bd9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e51537ff6cdf7a85ed58883511d00ee309c21bd9/comments", "author": null, "committer": null, "parents": [{"sha": "83fa09c5beeee4a76ec6910e1ca38577d5373a60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83fa09c5beeee4a76ec6910e1ca38577d5373a60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83fa09c5beeee4a76ec6910e1ca38577d5373a60"}], "stats": {"total": 137, "additions": 64, "deletions": 73}, "files": [{"sha": "888b7a109793379b1d4db4c8bc957d0b9cd9673e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e51537ff6cdf7a85ed58883511d00ee309c21bd9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e51537ff6cdf7a85ed58883511d00ee309c21bd9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e51537ff6cdf7a85ed58883511d00ee309c21bd9", "patch": "@@ -1,3 +1,10 @@\n+2011-08-02  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-cfdlli.ads, a-cfhase.ads, a-cforma.ads, a-cfhama.ads,\n+\ta-cforse.ads: Remove unneeded with of Ada.Containers\n+\tRemove commented out pragma Inline's\n+\tMove specifications of new subprograms to the actual specs\n+\n 2011-08-02  Yannick Moy  <moy@adacore.com>\n \n \t* a-cfdlli.ads, a-cfhase.ads, a-cforma.ads, a-cfhama.ads,"}, {"sha": "d961cb9535c5114baec092eaa71ec3b24c508ef6", "filename": "gcc/ada/a-cfdlli.ads", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e51537ff6cdf7a85ed58883511d00ee309c21bd9/gcc%2Fada%2Fa-cfdlli.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e51537ff6cdf7a85ed58883511d00ee309c21bd9/gcc%2Fada%2Fa-cfdlli.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfdlli.ads?ref=e51537ff6cdf7a85ed58883511d00ee309c21bd9", "patch": "@@ -49,16 +49,7 @@\n --      function Left  (Container : List; Position : Cursor) return List;\n --      function Right (Container : List; Position : Cursor) return List;\n \n---      Strict_Equal returns True if the containers are physically equal,\n---      meaning that they are structurally equal (function \"=\" returns True)\n---      and that they have the same set of cursors.\n-\n---      Left returns a container containing all elements preceding Position\n---      (excluded) in Container. Right returns a container containing all\n---      elements following Position (included) in Container. These two new\n---      functions are useful to express invariant properties in loops which\n---      iterate over containers. Left returns the part of the container already\n---      scanned and Right the part not scanned yet.\n+--    See detailed specifications for these subprograms\n \n private with Ada.Streams;\n with Ada.Containers;\n@@ -235,10 +226,18 @@ package Ada.Containers.Formal_Doubly_Linked_Lists is\n    end Generic_Sorting;\n \n    function Strict_Equal (Left, Right : List) return Boolean;\n+   --  Strict_Equal returns True if the containers are physically equal, i.e.\n+   --  they are structurally equal (function \"=\" returns True) and that they\n+   --  have the same set of cursors.\n \n-   function Left (Container : List; Position : Cursor) return List;\n-\n+   function Left  (Container : List; Position : Cursor) return List;\n    function Right (Container : List; Position : Cursor) return List;\n+   --  Left returns a container containing all elements preceding Position\n+   --  (excluded) in Container. Right returns a container containing all\n+   --  elements following Position (included) in Container. These two new\n+   --  functions can be used to express invariant properties in loops which\n+   --  iterate over containers. Left returns the part of the container already\n+   --  scanned and Right the part not scanned yet.\n \n private\n "}, {"sha": "31e3b7350e9d649e61b3019bcb51ed744ff8aaef", "filename": "gcc/ada/a-cfhama.ads", "status": "modified", "additions": 12, "deletions": 17, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e51537ff6cdf7a85ed58883511d00ee309c21bd9/gcc%2Fada%2Fa-cfhama.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e51537ff6cdf7a85ed58883511d00ee309c21bd9/gcc%2Fada%2Fa-cfhama.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfhama.ads?ref=e51537ff6cdf7a85ed58883511d00ee309c21bd9", "patch": "@@ -49,21 +49,10 @@\n --      function Left  (Container : Map; Position : Cursor) return Map;\n --      function Right (Container : Map; Position : Cursor) return Map;\n \n---      Strict_Equal returns True if the containers are physically equal,\n---      meaning that they are structurally equal (function \"=\" returns True)\n---      and that they have the same set of cursors. Overlap returns True if\n---      the containers have common keys.\n-\n---      Left returns a container containing all elements preceding Position\n---      (excluded) in Container. Right returns a container containing all\n---      elements following Position (included) in Container. These two new\n---      functions are useful to express invariant properties in loops which\n---      iterate over containers. Left returns the part of the container already\n---      scanned and Right the part not scanned yet.\n+--    See detailed specifications for these subprograms\n \n private with Ada.Containers.Hash_Tables;\n private with Ada.Streams;\n-with Ada.Containers; use Ada.Containers;\n \n generic\n    type Key_Type is private;\n@@ -206,24 +195,30 @@ package Ada.Containers.Formal_Hashed_Maps is\n    function Default_Modulus (Capacity : Count_Type) return Hash_Type;\n \n    function Strict_Equal (Left, Right : Map) return Boolean;\n+   --  Strict_Equal returns True if the containers are physically equal, i.e.\n+   --  they are structurally equal (function \"=\" returns True) and that they\n+   --  have the same set of cursors.\n \n-   function Left (Container : Map; Position : Cursor) return Map;\n-\n+   function Left  (Container : Map; Position : Cursor) return Map;\n    function Right (Container : Map; Position : Cursor) return Map;\n+   --  Left returns a container containing all elements preceding Position\n+   --  (excluded) in Container. Right returns a container containing all\n+   --  elements following Position (included) in Container. These two new\n+   --  functions can be used to express invariant properties in loops which\n+   --  iterate over containers. Left returns the part of the container already\n+   --  scanned and Right the part not scanned yet.\n \n    function Overlap (Left, Right : Map) return Boolean;\n+   --  Overlap returns True if the containers have common keys\n \n private\n-   --  pragma Inline (\"=\");\n    pragma Inline (Length);\n    pragma Inline (Is_Empty);\n    pragma Inline (Clear);\n    pragma Inline (Key);\n    pragma Inline (Element);\n-   --  pragma Inline (Move);  ???\n    pragma Inline (Contains);\n    pragma Inline (Capacity);\n-   --  pragma Inline (Reserve_Capacity);  ???\n    pragma Inline (Has_Element);\n    pragma Inline (Equivalent_Keys);\n    pragma Inline (Next);"}, {"sha": "ecc70e4e5d2bb88551041c0e405062f7cfa35d8c", "filename": "gcc/ada/a-cfhase.ads", "status": "modified", "additions": 11, "deletions": 15, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e51537ff6cdf7a85ed58883511d00ee309c21bd9/gcc%2Fada%2Fa-cfhase.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e51537ff6cdf7a85ed58883511d00ee309c21bd9/gcc%2Fada%2Fa-cfhase.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfhase.ads?ref=e51537ff6cdf7a85ed58883511d00ee309c21bd9", "patch": "@@ -49,23 +49,11 @@\n --      function Left  (Container : Set; Position : Cursor) return Set;\n --      function Right (Container : Set; Position : Cursor) return Set;\n \n---      Strict_Equal returns True if the containers are physically equal,\n---      meaning that they are structurally equal (function \"=\" returns True)\n---      and that they have the same set of cursors.\n-\n---      Left returns a container containing all elements preceding Position\n---      (excluded) in Container. Right returns a container containing all\n---      elements following Position (included) in Container. These two new\n---      functions are useful to express invariant properties in loops which\n---      iterate over containers. Left returns the part of the container already\n---      scanned and Right the part not scanned yet.\n+--    See detailed specifications for these subprograms\n \n private with Ada.Containers.Hash_Tables;\n private with Ada.Streams;\n \n-with Ada.Containers;\n-use Ada.Containers;\n-\n generic\n    type Element_Type is private;\n \n@@ -242,10 +230,18 @@ package Ada.Containers.Formal_Hashed_Sets is\n    end Generic_Keys;\n \n    function Strict_Equal (Left, Right : Set) return Boolean;\n+   --  Strict_Equal returns True if the containers are physically equal, i.e.\n+   --  they are structurally equal (function \"=\" returns True) and that they\n+   --  have the same set of cursors.\n \n-   function Left (Container : Set; Position : Cursor) return Set;\n-\n+   function Left  (Container : Set; Position : Cursor) return Set;\n    function Right (Container : Set; Position : Cursor) return Set;\n+   --  Left returns a container containing all elements preceding Position\n+   --  (excluded) in Container. Right returns a container containing all\n+   --  elements following Position (included) in Container. These two new\n+   --  functions can be used to express invariant properties in loops which\n+   --  iterate over containers. Left returns the part of the container already\n+   --  scanned and Right the part not scanned yet.\n \n private\n "}, {"sha": "088cf69917fbaa6f90c8eef6f013a7071c7ba728", "filename": "gcc/ada/a-cforma.ads", "status": "modified", "additions": 12, "deletions": 15, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e51537ff6cdf7a85ed58883511d00ee309c21bd9/gcc%2Fada%2Fa-cforma.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e51537ff6cdf7a85ed58883511d00ee309c21bd9/gcc%2Fada%2Fa-cforma.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cforma.ads?ref=e51537ff6cdf7a85ed58883511d00ee309c21bd9", "patch": "@@ -51,21 +51,10 @@\n --      function Left  (Container : Map; Position : Cursor) return Map;\n --      function Right (Container : Map; Position : Cursor) return Map;\n \n---      Strict_Equal returns True if the containers are physically equal,\n---      meaning that they are structurally equal (function \"=\" returns True)\n---      and that they have the same set of cursors. Overlap returns True if\n---      the containers have common keys.\n-\n---      Left returns a container containing all elements preceding Position\n---      (excluded) in Container. Right returns a container containing all\n---      elements following Position (included) in Container. These two new\n---      functions are useful to express invariant properties in loops which\n---      iterate over containers. Left returns the part of the container already\n---      scanned and Right the part not scanned yet.\n+--    See detailed specifications for these subprograms\n \n private with Ada.Containers.Red_Black_Trees;\n private with Ada.Streams;\n-with Ada.Containers;\n \n generic\n    type Key_Type is private;\n@@ -205,13 +194,21 @@ package Ada.Containers.Formal_Ordered_Maps is\n                     procedure (Container : Map; Position : Cursor));\n \n    function Strict_Equal (Left, Right : Map) return Boolean;\n+   --  Strict_Equal returns True if the containers are physically equal, i.e.\n+   --  they are structurally equal (function \"=\" returns True) and that they\n+   --  have the same set of cursors.\n \n-   function Left (Container : Map; Position : Cursor) return Map;\n-\n+   function Left  (Container : Map; Position : Cursor) return Map;\n    function Right (Container : Map; Position : Cursor) return Map;\n+   --  Left returns a container containing all elements preceding Position\n+   --  (excluded) in Container. Right returns a container containing all\n+   --  elements following Position (included) in Container. These two new\n+   --  functions can be used to express invariant properties in loops which\n+   --  iterate over containers. Left returns the part of the container already\n+   --  scanned and Right the part not scanned yet.\n \n    function Overlap (Left, Right : Map) return Boolean;\n-\n+   --  Overlap returns True if the containers have common keys\n private\n \n    pragma Inline (Next);"}, {"sha": "b942ba49e92ad8b2770a0516d05931d68a517896", "filename": "gcc/ada/a-cforse.ads", "status": "modified", "additions": 11, "deletions": 14, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e51537ff6cdf7a85ed58883511d00ee309c21bd9/gcc%2Fada%2Fa-cforse.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e51537ff6cdf7a85ed58883511d00ee309c21bd9/gcc%2Fada%2Fa-cforse.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cforse.ads?ref=e51537ff6cdf7a85ed58883511d00ee309c21bd9", "patch": "@@ -50,22 +50,11 @@\n --      function Left  (Container : Set; Position : Cursor) return Set;\n --      function Right (Container : Set; Position : Cursor) return Set;\n \n---      Strict_Equal returns True if the containers are physically equal,\n---      meaning that they are structurally equal (function \"=\" returns True)\n---      and that they have the same set of cursors.\n-\n---      Left returns a container containing all elements preceding Position\n---      (excluded) in Container. Right returns a container containing all\n---      elements following Position (included) in Container. These two new\n---      functions are useful to express invariant properties in loops which\n---      iterate over containers. Left returns the part of the container already\n---      scanned and Right the part not scanned yet.\n+--    See detailed specifications for these subprograms\n \n private with Ada.Containers.Red_Black_Trees;\n private with Ada.Streams;\n \n-with Ada.Containers;\n-\n generic\n    type Element_Type is private;\n \n@@ -256,10 +245,18 @@ package Ada.Containers.Formal_Ordered_Sets is\n    end Generic_Keys;\n \n    function Strict_Equal (Left, Right : Set) return Boolean;\n+   --  Strict_Equal returns True if the containers are physically equal, i.e.\n+   --  they are structurally equal (function \"=\" returns True) and that they\n+   --  have the same set of cursors.\n \n-   function Left (Container : Set; Position : Cursor) return Set;\n-\n+   function Left  (Container : Set; Position : Cursor) return Set;\n    function Right (Container : Set; Position : Cursor) return Set;\n+   --  Left returns a container containing all elements preceding Position\n+   --  (excluded) in Container. Right returns a container containing all\n+   --  elements following Position (included) in Container. These two new\n+   --  functions can be used to express invariant properties in loops which\n+   --  iterate over containers. Left returns the part of the container already\n+   --  scanned and Right the part not scanned yet.\n \n private\n "}]}