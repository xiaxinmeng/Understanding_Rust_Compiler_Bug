{"sha": "5de7c240a0d46a902633f88e5bf5e3ec7200559c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRlN2MyNDBhMGQ0NmE5MDI2MzNmODhlNWJmNWUzZWM3MjAwNTU5Yw==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-01-17T18:07:59Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-01-17T18:07:59Z"}, "message": "pa.h (FP_REG_CLASS_P): New macro.\n\n\t* pa.h (FP_REG_CLASS_P): New macro.\n\t(REGISTER_MOVE_COST): Use FP_REG_CLASS_P to simplify.  Make\n\tcopies from the SAR so expensive that they should never happen.\n\nFrom-SVN: r3259", "tree": {"sha": "9794e80978c23a9a3e596b777be49921df9cb679", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9794e80978c23a9a3e596b777be49921df9cb679"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5de7c240a0d46a902633f88e5bf5e3ec7200559c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5de7c240a0d46a902633f88e5bf5e3ec7200559c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5de7c240a0d46a902633f88e5bf5e3ec7200559c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5de7c240a0d46a902633f88e5bf5e3ec7200559c/comments", "author": null, "committer": null, "parents": [{"sha": "f133af4c9179bcd44c02c90cbde0efb7a06d3a5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f133af4c9179bcd44c02c90cbde0efb7a06d3a5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f133af4c9179bcd44c02c90cbde0efb7a06d3a5e"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "40d192956df0e4d2bb4aa225b1d560dd8e28eb7d", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5de7c240a0d46a902633f88e5bf5e3ec7200559c/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5de7c240a0d46a902633f88e5bf5e3ec7200559c/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=5de7c240a0d46a902633f88e5bf5e3ec7200559c", "patch": "@@ -561,6 +561,9 @@ enum reg_class { NO_REGS, R1_REGS, GENERAL_REGS, FP_REGS, GENERAL_OR_FP_REGS,\n #define INDEX_REG_CLASS GENERAL_REGS\n #define BASE_REG_CLASS GENERAL_REGS\n \n+#define FP_REG_CLASS_P(CLASS) \\\n+  (CLASS == FP_REGS || CLASS == SNAKE_FP_REGS || CLASS == HI_SNAKE_FP_REGS)\n+\n /* Get reg_class from a letter such as appears in the machine description.  */\n \n #define REG_CLASS_FROM_LETTER(C) \\\n@@ -1479,16 +1482,20 @@ while (0)\n   (GET_CODE (RTX) == REG ? 1 : hppa_address_cost (RTX))\n \n /* Compute extra cost of moving data between one register class\n-   and another.  */\n+   and another.\n+\n+   Make moves from SAR so expensive they should never happen.\n+\n+   Copies involving a FP register and a non-FP register are relatively \n+   expensive because they must go through memory.\n+\n+   Other copies are reasonably cheap.  */\n #define REGISTER_MOVE_COST(CLASS1, CLASS2) \\\n- ((((CLASS1 == FP_REGS || CLASS1 == SNAKE_FP_REGS\t\\\n-     || CLASS1 == HI_SNAKE_FP_REGS)\t\t\t\\\n-    && (CLASS2 == R1_REGS || CLASS2 == GENERAL_REGS\t\\\n-\t|| CLASS2 == SHIFT_REGS))\t\t\t\\\n-   || ((CLASS1 == R1_REGS || CLASS1 == GENERAL_REGS\t\\\n-\t|| CLASS1 == SHIFT_REGS)\t\t\t\\\n-       && (CLASS2 == FP_REGS || CLASS2 == SNAKE_FP_REGS\t\\\n-\t   || CLASS2 == HI_SNAKE_FP_REGS))) ? 16 : 2)\t\n+ (CLASS1 == SHIFT_REGS ? 0xffff\t\t\t\t\t\\\n+  : FP_REG_CLASS_P (CLASS1) && ! FP_REG_CLASS_P (CLASS2) ? 16\t\\\n+  : FP_REG_CLASS_P (CLASS2) && ! FP_REG_CLASS_P (CLASS1) ? 16\t\\\n+  : 2)\n+\n \n /* Provide the costs of a rtl expression.  This is in the body of a\n    switch on CODE.  The purpose for the cost of MULT is to encourage"}]}