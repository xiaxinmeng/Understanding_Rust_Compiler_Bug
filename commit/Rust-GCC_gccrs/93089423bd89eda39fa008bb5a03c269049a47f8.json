{"sha": "93089423bd89eda39fa008bb5a03c269049a47f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTMwODk0MjNiZDg5ZWRhMzlmYTAwOGJiNWEwM2MyNjkwNDlhNDdmOA==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@cygnus.com", "date": "1999-02-05T07:58:05Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "1999-02-05T07:58:05Z"}, "message": "class.c (make_class_data): The superclass of an interface should be null, not class Object.\n\n1999-02-05  Andrew Haley  <aph@cygnus.com>\n        * class.c (make_class_data): The superclass of an interface should\n        be null, not class Object.\n        * lex.c (java_lex): Sign extend hex literals.\n\nFrom-SVN: r25039", "tree": {"sha": "3e784417821635063da49b248b5d28e3eba59f15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e784417821635063da49b248b5d28e3eba59f15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93089423bd89eda39fa008bb5a03c269049a47f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93089423bd89eda39fa008bb5a03c269049a47f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93089423bd89eda39fa008bb5a03c269049a47f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93089423bd89eda39fa008bb5a03c269049a47f8/comments", "author": null, "committer": null, "parents": [{"sha": "01235b8090859696a66fbd519d5e6b163a43fbf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01235b8090859696a66fbd519d5e6b163a43fbf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01235b8090859696a66fbd519d5e6b163a43fbf4"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "31e65da1ed1e533440bf6818e68d76a54d85b3fc", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93089423bd89eda39fa008bb5a03c269049a47f8/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93089423bd89eda39fa008bb5a03c269049a47f8/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=93089423bd89eda39fa008bb5a03c269049a47f8", "patch": "@@ -1,3 +1,10 @@\n+1999-02-05  Andrew Haley  <aph@cygnus.com>\n+\n+\t* class.c (make_class_data): The superclass of an interface should\n+\tbe null, not class Object.\n+\n+\t* lex.c (java_lex): Sign extend hex literals.\n+\n 1999-02-04  Andrew Haley  <aph@cygnus.com>\n \n \t* class.c (build_utf8_ref): Output signatures using '.' as a"}, {"sha": "3f2adbddb188b14fc78536aace8516aa23b56038", "filename": "gcc/java/class.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93089423bd89eda39fa008bb5a03c269049a47f8/gcc%2Fjava%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93089423bd89eda39fa008bb5a03c269049a47f8/gcc%2Fjava%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fclass.c?ref=93089423bd89eda39fa008bb5a03c269049a47f8", "patch": "@@ -1135,7 +1135,8 @@ make_class_data (type)\n   PUSH_FIELD_VALUE (cons, \"accflags\",\n \t\t    build_int_2 (get_access_flags_from_decl (type_decl), 0));\n \n-  PUSH_FIELD_VALUE (cons, \"superclass\", super);\n+  PUSH_FIELD_VALUE (cons, \"superclass\", \n+\t\t    CLASS_INTERFACE (type_decl) ? null_pointer_node : super);\n   PUSH_FIELD_VALUE (cons, \"constants\", constant_pool_constructor);\n   PUSH_FIELD_VALUE (cons, \"methods\",\n \t\t    build1 (ADDR_EXPR, method_ptr_type_node, methods_decl));"}, {"sha": "e1e10743a5847552ae08d1b71334f78d3dd78c79", "filename": "gcc/java/lex.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93089423bd89eda39fa008bb5a03c269049a47f8/gcc%2Fjava%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93089423bd89eda39fa008bb5a03c269049a47f8/gcc%2Fjava%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flex.c?ref=93089423bd89eda39fa008bb5a03c269049a47f8", "patch": "@@ -850,11 +850,13 @@ java_lex (java_lval)\n \t  /* 2147483648 is valid if operand of a '-'. Otherwise,\n \t     2147483647 is the biggest `int' literal that can be\n \t     expressed using a 10 radix. For other radixes, everything\n-\t     that fits within 32 bits is OK. */\n+\t     that fits within 32 bits is OK.  As all literals are\n+\t     signed, we sign extend here. */\n \t  int hb = (low >> 31) & 0x1;\n \t  if (overflow || high || (hb && low & 0x7fffffff && radix == 10) ||\n \t      (hb && !(low & 0x7fffffff) && !ctxp->minus_seen && radix == 10))\n \t    JAVA_INTEGRAL_RANGE_ERROR (\"Numeric overflow for `int' literal\");\n+\t  high = -hb;\n \t}\n       ctxp->minus_seen = 0;\n       SET_LVAL_NODE_TYPE (build_int_2 (low, high),"}]}