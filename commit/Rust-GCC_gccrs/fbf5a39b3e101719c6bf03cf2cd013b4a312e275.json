{"sha": "fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmJmNWEzOWIzZTEwMTcxOWM2YmYwM2NmMmNkMDEzYjRhMzEyZTI3NQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@act-europe.fr", "date": "2003-10-21T13:42:24Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2003-10-21T13:42:24Z"}, "message": "3psoccon.ads, [...]: Files added.\n\n2003-10-21  Arnaud Charlet  <charlet@act-europe.fr>\n\n\t* 3psoccon.ads, 3veacodu.adb, 3vexpect.adb, 3vsoccon.ads,\n\t3vsocthi.adb, 3vsocthi.ads, 3vtrasym.adb, 3zsoccon.ads,\n\t3zsocthi.adb, 3zsocthi.ads, 50system.ads, 51system.ads,\n\t55system.ads, 56osinte.adb, 56osinte.ads, 56taprop.adb,\n\t56taspri.ads, 56tpopsp.adb, 57system.ads, 58system.ads,\n\t59system.ads, 5aml-tgt.adb, 5bml-tgt.adb, 5csystem.ads,\n\t5dsystem.ads, 5fosinte.adb, 5gml-tgt.adb, 5hml-tgt.adb,\n\t5isystem.ads, 5lparame.adb, 5msystem.ads, 5psystem.ads,\n\t5sml-tgt.adb, 5sosprim.adb, 5stpopsp.adb, 5tsystem.ads,\n\t5usystem.ads, 5vml-tgt.adb, 5vsymbol.adb, 5vtraent.adb,\n\t5vtraent.ads, 5wml-tgt.adb, 5xparame.ads, 5xsystem.ads,\n\t5xvxwork.ads, 5yparame.ads, 5ytiitho.adb, 5zinit.adb,\n\t5zml-tgt.adb, 5zparame.ads, 5ztaspri.ads, 5ztfsetr.adb,\n\t5zthrini.adb, 5ztiitho.adb, 5ztpopsp.adb, 7stfsetr.adb,\n\t7straces.adb, 7strafor.adb, 7strafor.ads, 7stratas.adb,\n\ta-excach.adb, a-exexda.adb, a-exexpr.adb, a-exextr.adb,\n\ta-exstat.adb, a-strsup.adb, a-strsup.ads, a-stwisu.adb,\n\ta-stwisu.ads, bld.adb, bld.ads, bld-io.adb,\n\tbld-io.ads, clean.adb, clean.ads, ctrl_c.c,\n\terroutc.adb, erroutc.ads, errutil.adb, errutil.ads,\n\terr_vars.ads, final.c, g-arrspl.adb, g-arrspl.ads,\n\tg-boubuf.adb, g-boubuf.ads, g-boumai.ads, g-bubsor.adb,\n\tg-bubsor.ads, g-comver.adb, g-comver.ads, g-ctrl_c.ads,\n\tg-dynhta.adb, g-dynhta.ads, g-eacodu.adb, g-excact.adb,\n\tg-excact.ads, g-heasor.adb, g-heasor.ads, g-memdum.adb,\n\tg-memdum.ads, gnatclean.adb, gnatsym.adb, g-pehage.adb,\n\tg-pehage.ads, g-perhas.ads, gpr2make.adb, gpr2make.ads,\n\tgprcmd.adb, gprep.adb, gprep.ads, g-semaph.adb,\n\tg-semaph.ads, g-string.adb, g-string.ads, g-strspl.ads,\n\tg-wistsp.ads, i-vthrea.adb, i-vthrea.ads, i-vxwoio.adb,\n\ti-vxwoio.ads, Makefile.generic, Makefile.prolog, Makefile.rtl,\n\tprep.adb, prep.ads, prepcomp.adb, prepcomp.ads,\n\tprj-err.adb, prj-err.ads, s-boarop.ads, s-carsi8.adb,\n\ts-carsi8.ads, s-carun8.adb, s-carun8.ads, s-casi16.adb,\n\ts-casi16.ads, s-casi32.adb, s-casi32.ads, s-casi64.adb,\n\ts-casi64.ads, s-casuti.adb, s-casuti.ads, s-caun16.adb,\n\ts-caun16.ads, s-caun32.adb, s-caun32.ads, s-caun64.adb,\n\ts-caun64.ads, scng.adb, scng.ads, s-exnint.adb,\n\ts-exnllf.adb, s-exnlli.adb, s-expint.adb, s-explli.adb,\n\ts-geveop.adb, s-geveop.ads, s-hibaen.ads, s-htable.adb,\n\ts-htable.ads, sinput-c.adb, sinput-c.ads, s-memcop.ads,\n\tsocket.c, s-purexc.ads, s-scaval.adb, s-stopoo.adb,\n\ts-strcom.adb, s-strcom.ads, s-strxdr.adb, s-rident.ads,\n\ts-thread.adb, s-thread.ads, s-tpae65.adb, s-tpae65.ads,\n\ts-tporft.adb, s-traent.adb, s-traent.ads, styleg.adb,\n\tstyleg.ads, styleg-c.adb, styleg-c.ads, s-veboop.adb,\n\ts-veboop.ads, s-vector.ads, symbols.adb, symbols.ads,\n\ttb-alvms.c, tb-alvxw.c, tempdir.adb, tempdir.ads,\n\tvms_conv.ads, vms_conv.adb, vms_data.ads,\n\tvxaddr2line.adb: Files added. Merge with ACT tree.\n\n\t* 4dintnam.ads, 4mintnam.ads, 4uintnam.ads, 52system.ads,\n\t5dosinte.ads, 5etpopse.adb, 5mosinte.ads, 5qosinte.adb,\n\t5qosinte.ads, 5qstache.adb, 5qtaprop.adb, 5qtaspri.ads,\n\t5stpopse.adb, 5uintman.adb, 5uosinte.ads, adafinal.c,\n\tg-enblsp.adb, io-aux.c, scn-nlit.adb, scn-slit.adb,\n\ts-exnflt.ads, s-exngen.adb, s-exngen.ads, s-exnlfl.ads,\n\ts-exnlin.ads, s-exnsfl.ads, s-exnsin.ads, s-exnssi.ads,\n\ts-expflt.ads, s-expgen.adb, s-expgen.ads, s-explfl.ads,\n\ts-explin.ads, s-expllf.ads, s-expsfl.ads, s-expsin.ads,\n\ts-expssi.ads, style.adb: Files removed. Merge with ACT tree.\n\n\t* 1ic.ads, 31soccon.ads, 31soliop.ads, 3asoccon.ads,\n\t3bsoccon.ads, 3gsoccon.ads, 3hsoccon.ads, 3ssoccon.ads,\n\t3ssoliop.ads, 3wsoccon.ads, 3wsocthi.adb, 3wsocthi.ads,\n\t3wsoliop.ads, 41intnam.ads, 42intnam.ads, 4aintnam.ads,\n\t4cintnam.ads, 4gintnam.ads, 4hexcpol.adb, 4hintnam.ads,\n\t4lintnam.ads, 4nintnam.ads, 4ointnam.ads, 4onumaux.ads,\n\t4pintnam.ads, 4sintnam.ads, 4vcaldel.adb, 4vcalend.adb,\n\t4vintnam.ads, 4wexcpol.adb, 4wintnam.ads, 4zintnam.ads,\n\t51osinte.adb, 51osinte.ads, 52osinte.adb, 52osinte.ads,\n\t53osinte.ads, 54osinte.ads, 5aosinte.adb, 5aosinte.ads,\n\t5asystem.ads, 5ataprop.adb, 5atasinf.ads, 5ataspri.ads,\n\t5atpopsp.adb, 5avxwork.ads, 5bosinte.adb, 5bosinte.ads,\n\t5bsystem.ads, 5cosinte.ads, 5esystem.ads, 5fintman.adb,\n\t5fosinte.ads, 5fsystem.ads, 5ftaprop.adb, 5ftasinf.ads,\n\t5ginterr.adb, 5gintman.adb, 5gmastop.adb, 5gosinte.ads,\n\t5gproinf.ads, 5gsystem.ads, 5gtaprop.adb, 5gtasinf.ads,\n\t5gtpgetc.adb, 5hosinte.adb, 5hosinte.ads, 5hsystem.ads,\n\t5htaprop.adb, 5htaspri.ads, 5htraceb.adb, 5iosinte.adb,\n\t5itaprop.adb, 5itaspri.ads, 5ksystem.ads, 5kvxwork.ads,\n\t5lintman.adb, 5lml-tgt.adb, 5losinte.ads, 5lsystem.ads,\n\t5mvxwork.ads, 5ninmaop.adb, 5nintman.adb, 5nosinte.ads,\n\t5ntaprop.adb, 5ntaspri.ads, 5ointerr.adb, 5omastop.adb,\n\t5oosinte.adb, 5oosinte.ads, 5oosprim.adb, 5oparame.adb,\n\t5osystem.ads, 5otaprop.adb, 5otaspri.ads, 5posinte.ads,\n\t5posprim.adb, 5pvxwork.ads, 5sintman.adb, 5sosinte.adb,\n\t5sosinte.ads, 5ssystem.ads, 5staprop.adb, 5stasinf.ads,\n\t5staspri.ads, 5svxwork.ads, 5tosinte.ads, 5vasthan.adb,\n\t5vinmaop.adb, 5vinterr.adb, 5vintman.adb, 5vintman.ads,\n\t5vmastop.adb, 5vosinte.adb, 5vosinte.ads, 5vosprim.adb,\n\t5vsystem.ads, 5vtaprop.adb, 5vtaspri.ads, 5vtpopde.adb,\n\t5vtpopde.ads, 5wgloloc.adb, 5wintman.adb, 5wmemory.adb,\n\t5wosprim.adb, 5wsystem.ads, 5wtaprop.adb, 5wtaspri.ads,\n\t5ysystem.ads, 5zinterr.adb, 5zintman.adb, 5zosinte.adb,\n\t5zosinte.ads, 5zosprim.adb, 5zsystem.ads, 5ztaprop.adb,\n\t6vcpp.adb, 6vcstrea.adb, 6vinterf.ads, 7sinmaop.adb,\n\t7sintman.adb, 7sosinte.adb, 7sosprim.adb, 7staprop.adb,\n\t7staspri.ads, 7stpopsp.adb, 7straceb.adb, 9drpc.adb,\n\ta-caldel.adb, a-caldel.ads, a-charac.ads, a-colien.ads,\n\ta-comlin.adb, adaint.c, adaint.h, ada-tree.def,\n\ta-diocst.adb, a-diocst.ads, a-direio.adb, a-except.adb,\n\ta-except.ads, a-excpol.adb, a-exctra.adb, a-exctra.ads,\n\ta-filico.adb, a-interr.adb, a-intsig.adb, a-intsig.ads,\n\tali.adb, ali.ads, ali-util.adb, ali-util.ads,\n\ta-ngcefu.adb, a-ngcoty.adb, a-ngelfu.adb, a-nudira.adb,\n\ta-nudira.ads, a-nuflra.adb, a-nuflra.ads, a-reatim.adb,\n\ta-reatim.ads, a-retide.ads, a-sequio.adb, a-siocst.adb,\n\ta-siocst.ads, a-ssicst.adb, a-ssicst.ads, a-strbou.adb,\n\ta-strbou.ads, a-strfix.adb, a-strmap.adb, a-strsea.ads,\n\ta-strunb.adb, a-strunb.ads, a-ststio.adb, a-stunau.adb,\n\ta-stunau.ads, a-stwibo.adb, a-stwibo.ads, a-stwifi.adb,\n\ta-stwima.adb, a-stwiun.adb, a-stwiun.ads, a-tags.adb,\n\ta-tags.ads, a-tasatt.adb, a-taside.adb, a-teioed.adb,\n\ta-textio.adb, a-textio.ads, a-tienau.adb, a-tifiio.adb,\n\ta-tiflau.adb, a-tiflio.adb, a-tigeau.adb, a-tigeau.ads,\n\ta-tiinau.adb, a-timoau.adb, a-tiocst.adb, a-tiocst.ads,\n\tatree.adb, atree.ads, a-witeio.adb, a-witeio.ads,\n\ta-wtcstr.adb, a-wtcstr.ads, a-wtdeio.adb, a-wtedit.adb,\n\ta-wtenau.adb, a-wtflau.adb, a-wtinau.adb, a-wtmoau.adb,\n\tbcheck.adb, binde.adb, bindgen.adb, bindusg.adb,\n\tchecks.adb, checks.ads, cio.c, comperr.adb,\n\tcomperr.ads, csets.adb, cstand.adb, cstreams.c,\n\tdebug_a.adb, debug_a.ads, debug.adb, decl.c,\n\teinfo.adb, einfo.ads, errout.adb, errout.ads,\n\teval_fat.adb, eval_fat.ads, exp_aggr.adb, expander.adb,\n\texpander.ads, exp_attr.adb, exp_ch11.adb, exp_ch13.adb,\n\texp_ch2.adb, exp_ch3.adb, exp_ch3.ads, exp_ch4.adb,\n\texp_ch5.adb, exp_ch6.adb, exp_ch7.adb, exp_ch7.ads,\n\texp_ch8.adb, exp_ch9.adb, exp_code.adb, exp_dbug.adb,\n\texp_dbug.ads, exp_disp.adb, exp_dist.adb, expect.c,\n\texp_fixd.adb, exp_imgv.adb, exp_intr.adb, exp_pakd.adb,\n\texp_prag.adb, exp_strm.adb, exp_strm.ads, exp_tss.adb,\n\texp_tss.ads, exp_util.adb, exp_util.ads, exp_vfpt.adb,\n\tfe.h, fmap.adb, fmap.ads, fname.adb,\n\tfname.ads, fname-uf.adb, fname-uf.ads, freeze.adb,\n\tfreeze.ads, frontend.adb, g-awk.adb, g-awk.ads,\n\tg-busora.adb, g-busora.ads, g-busorg.adb, g-busorg.ads,\n\tg-casuti.adb, g-casuti.ads, g-catiio.adb, g-catiio.ads,\n\tg-cgi.adb, g-cgi.ads, g-cgicoo.adb, g-cgicoo.ads,\n\tg-cgideb.adb, g-cgideb.ads, g-comlin.adb, g-comlin.ads,\n\tg-crc32.adb, g-crc32.ads, g-debpoo.adb, g-debpoo.ads,\n\tg-debuti.adb, g-debuti.ads, g-diopit.adb, g-diopit.ads,\n\tg-dirope.adb, g-dirope.ads, g-dyntab.adb, g-dyntab.ads,\n\tg-except.ads, g-exctra.adb, g-exctra.ads, g-expect.adb,\n\tg-expect.ads, g-hesora.adb, g-hesora.ads, g-hesorg.adb,\n\tg-hesorg.ads, g-htable.adb, g-htable.ads, gigi.h,\n\tg-io.adb, g-io.ads, g-io_aux.adb, g-io_aux.ads,\n\tg-locfil.adb, g-locfil.ads, g-md5.adb, g-md5.ads,\n\tgmem.c, gnat1drv.adb, gnatbind.adb, gnatchop.adb,\n\tgnatcmd.adb, gnatfind.adb, gnatkr.adb, gnatlbr.adb,\n\tgnatlink.adb, gnatls.adb, gnatmake.adb, gnatmem.adb,\n\tgnatname.adb, gnatprep.adb, gnatprep.ads, gnatpsta.adb,\n\tgnatxref.adb, g-os_lib.adb, g-os_lib.ads, g-regexp.adb,\n\tg-regexp.ads, g-regist.adb, g-regist.ads, g-regpat.adb,\n\tg-regpat.ads, g-soccon.ads, g-socket.adb, g-socket.ads,\n\tg-socthi.adb, g-socthi.ads, g-soliop.ads, g-souinf.ads,\n\tg-speche.adb, g-speche.ads, g-spipat.adb, g-spipat.ads,\n\tg-spitbo.adb, g-spitbo.ads, g-sptabo.ads, g-sptain.ads,\n\tg-sptavs.ads, g-table.adb, g-table.ads, g-tasloc.adb,\n\tg-tasloc.ads, g-thread.adb, g-thread.ads, g-traceb.adb,\n\tg-traceb.ads, g-trasym.adb, g-trasym.ads, hostparm.ads,\n\ti-c.ads, i-cobol.adb, i-cpp.adb, i-cstrea.ads,\n\ti-cstrin.adb, i-cstrin.ads, impunit.adb, init.c,\n\tinline.adb, interfac.ads, i-pacdec.ads, itypes.adb,\n\titypes.ads, i-vxwork.ads, lang.opt, lang-specs.h,\n\tlayout.adb, lib.adb, lib.ads, lib-list.adb,\n\tlib-load.adb, lib-load.ads, lib-sort.adb, lib-util.adb,\n\tlib-writ.adb, lib-writ.ads, lib-xref.adb, lib-xref.ads,\n\tlink.c, live.adb, make.adb, make.ads,\n\tMakefile.adalib, Makefile.in, Make-lang.in, makeusg.adb,\n\tmdll.adb, mdll-fil.adb, mdll-fil.ads, mdll-utl.adb,\n\tmdll-utl.ads, memroot.adb, memroot.ads, memtrack.adb,\n\tmisc.c, mkdir.c, mlib.adb, mlib.ads,\n\tmlib-fil.adb, mlib-fil.ads, mlib-prj.adb, mlib-prj.ads,\n\tmlib-tgt.adb, mlib-tgt.ads, mlib-utl.adb, mlib-utl.ads,\n\tnamet.adb, namet.ads, namet.h, nlists.ads,\n\tnlists.h, nmake.adt, opt.adb, opt.ads,\n\tosint.adb, osint.ads, osint-b.adb, osint-c.adb,\n\tpar.adb, par-ch10.adb, par-ch11.adb, par-ch2.adb,\n\tpar-ch3.adb, par-ch4.adb, par-ch5.adb, par-ch6.adb,\n\tpar-ch9.adb, par-endh.adb, par-labl.adb, par-load.adb,\n\tpar-prag.adb, par-sync.adb, par-tchk.adb, par-util.adb,\n\tprj.adb, prj.ads, prj-attr.adb, prj-attr.ads,\n\tprj-com.adb, prj-com.ads, prj-dect.adb, prj-dect.ads,\n\tprj-env.adb, prj-env.ads, prj-ext.adb, prj-ext.ads,\n\tprj-makr.adb, prj-makr.ads, prj-nmsc.adb, prj-nmsc.ads,\n\tprj-pars.adb, prj-pars.ads, prj-part.adb, prj-part.ads,\n\tprj-pp.adb, prj-pp.ads, prj-proc.adb, prj-proc.ads,\n\tprj-strt.adb, prj-strt.ads, prj-tree.adb, prj-tree.ads,\n\tprj-util.adb, prj-util.ads, raise.c, raise.h,\n\trepinfo.adb, repinfo.h, restrict.adb, restrict.ads,\n\trident.ads, rtsfind.adb, rtsfind.ads, s-addima.ads,\n\ts-arit64.adb, s-assert.adb, s-assert.ads, s-atacco.adb,\n\ts-atacco.ads, s-auxdec.adb, s-auxdec.ads, s-bitops.adb,\n\tscans.ads, scn.adb, scn.ads, s-crc32.adb,\n\ts-crc32.ads, s-direio.adb, sem.adb, sem.ads,\n\tsem_aggr.adb, sem_attr.adb, sem_attr.ads, sem_case.adb,\n\tsem_case.ads, sem_cat.adb, sem_cat.ads, sem_ch10.adb,\n\tsem_ch11.adb, sem_ch12.adb, sem_ch12.ads, sem_ch13.adb,\n\tsem_ch13.ads, sem_ch3.adb, sem_ch3.ads, sem_ch4.adb,\n\tsem_ch5.adb, sem_ch5.ads, sem_ch6.adb, sem_ch6.ads,\n\tsem_ch7.adb, sem_ch7.ads, sem_ch8.adb, sem_ch8.ads,\n\tsem_ch9.adb, sem_disp.adb, sem_disp.ads, sem_dist.adb,\n\tsem_elab.adb, sem_eval.adb, sem_eval.ads, sem_intr.adb,\n\tsem_maps.adb, sem_mech.adb, sem_prag.adb, sem_prag.ads,\n\tsem_res.adb, sem_res.ads, sem_type.adb, sem_type.ads,\n\tsem_util.adb, sem_util.ads, sem_warn.adb, s-errrep.adb,\n\ts-errrep.ads, s-exctab.adb, s-exctab.ads, s-exnint.ads,\n\ts-exnllf.ads, s-exnlli.ads, s-expint.ads, s-explli.ads,\n\ts-expuns.ads, s-fatflt.ads, s-fatgen.adb, s-fatgen.ads,\n\ts-fatlfl.ads, s-fatllf.ads, s-fatsfl.ads, s-fileio.adb,\n\ts-fileio.ads, s-finimp.adb, s-finimp.ads, s-finroo.adb,\n\ts-finroo.ads, sfn_scan.adb, s-gloloc.adb, s-gloloc.ads,\n\ts-imgdec.adb, s-imgenu.adb, s-imgrea.adb, s-imgwch.adb,\n\tsinfo.adb, sinfo.ads, s-inmaop.ads, sinput.adb,\n\tsinput.ads, sinput-d.adb, sinput-l.adb, sinput-l.ads,\n\tsinput-p.adb, sinput-p.ads, s-interr.adb, s-interr.ads,\n\ts-intman.ads, s-maccod.ads, s-mastop.adb, s-mastop.ads,\n\ts-memory.adb, s-memory.ads, snames.adb, snames.ads,\n\tsnames.h, s-osprim.ads, s-parame.ads, s-parint.ads,\n\ts-pooloc.adb, s-pooloc.ads, s-poosiz.adb, sprint.adb,\n\ts-proinf.ads, s-scaval.ads, s-secsta.adb, s-secsta.ads,\n\ts-sequio.adb, s-shasto.adb, s-shasto.ads, s-soflin.ads,\n\ts-stache.adb, s-stache.ads, s-stalib.adb, s-stalib.ads,\n\ts-stoele.ads, s-stopoo.ads, s-stratt.adb, s-stratt.ads,\n\ts-strops.adb, s-strops.ads, s-taasde.adb, s-taasde.ads,\n\ts-tadeca.adb, s-tadeca.ads, s-tadert.adb, s-tadert.ads,\n\ts-taenca.adb, s-taenca.ads, s-taprob.adb, s-taprob.ads,\n\ts-taprop.ads, s-tarest.adb, s-tarest.ads, s-tasdeb.adb,\n\ts-tasdeb.ads, s-tasinf.adb, s-tasinf.ads, s-tasini.adb,\n\ts-tasini.ads, s-taskin.adb, s-taskin.ads, s-tasque.adb,\n\ts-tasque.ads, s-tasren.adb, s-tasren.ads, s-tasres.ads,\n\ts-tassta.adb, s-tassta.ads, s-tasuti.adb, s-tasuti.ads,\n\ts-tataat.adb, s-tataat.ads, s-tpinop.adb, s-tpinop.ads,\n\ts-tpoben.adb, s-tpoben.ads, s-tpobop.adb, s-tpobop.ads,\n\ts-tposen.adb, s-tposen.ads, s-traceb.adb, s-traceb.ads,\n\tstringt.adb, stringt.ads, stringt.h, style.ads,\n\tstylesw.adb, stylesw.ads, s-unstyp.ads, s-vaflop.ads,\n\ts-valrea.adb, s-valuti.adb, s-vercon.adb, s-vmexta.adb,\n\ts-wchcnv.ads, s-wchcon.ads, s-widcha.adb, switch.adb,\n\tswitch.ads, switch-b.adb, switch-c.adb, switch-m.adb,\n\ts-wwdcha.adb, s-wwdwch.adb, sysdep.c, system.ads,\n\ttable.adb, table.ads, targparm.adb, targparm.ads,\n\ttargtyps.c, tbuild.adb, tbuild.ads, tracebak.c,\n\ttrans.c, tree_io.adb, treepr.adb, treeprs.adt,\n\tttypes.ads, types.ads, types.h, uintp.adb,\n\tuintp.ads, uintp.h, uname.adb, urealp.adb,\n\turealp.ads, urealp.h, usage.adb, utils2.c,\n\tutils.c, validsw.adb, validsw.ads, widechar.adb,\n\txeinfo.adb, xnmake.adb, xref_lib.adb, xref_lib.ads,\n\txr_tabls.adb, xr_tabls.ads, xtreeprs.adb, xsnames.adb,\n\teinfo.h, sinfo.h, treeprs.ads, nmake.ads, nmake.adb,\n\tgnatvsn.ads: Merge with ACT tree.\n\n\t* gnatvsn.adb: Rewritten in a simpler and more efficient way.\n\nFrom-SVN: r72751", "tree": {"sha": "bdfc70477b60f1220cb05dd233a4570dd9c6bb5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bdfc70477b60f1220cb05dd233a4570dd9c6bb5c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/comments", "author": null, "committer": null, "parents": [{"sha": "75a5a481c2048242ed62c7355381160aa1369616", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75a5a481c2048242ed62c7355381160aa1369616", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75a5a481c2048242ed62c7355381160aa1369616"}], "stats": {"total": 189495, "additions": 134639, "deletions": 54856}, "files": [{"sha": "bc1b7eb34ef841a4ba513d081126b15fe123dedf", "filename": "gcc/ada/1ic.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F1ic.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F1ic.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F1ic.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -1,4 +1,4 @@\n------------------------------------------------------------------------------\n+------------------------------------------------------------------------------\n --                                                                          --\n --                         GNAT COMPILER COMPONENTS                         --\n --                                                                          --"}, {"sha": "9f7065f6ffe564a0b4baf58589d3d9893f1c40b8", "filename": "gcc/ada/31soccon.ads", "status": "modified", "additions": 123, "deletions": 78, "changes": 201, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F31soccon.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F31soccon.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F31soccon.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---              Copyright (C) 2001 Ada Core Technologies, Inc.              --\n+--          Copyright (C) 2000-2003 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,88 +26,133 @@\n -- however invalidate  any other reasons why  the executable file  might be --\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n--- GNAT is maintained by Ada Core Technologies Inc (http://www.gnat.com).   --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+--  This package provides target dependent definitions of constant for use\n+--  by the GNAT.Sockets package (g-socket.ads). This package should not be\n+--  directly with'ed by an applications program.\n+\n --  This is the version for UnixWare\n \n package GNAT.Sockets.Constants is\n \n-   --  Families\n-\n-   AF_INET              : constant :=                2;\n-   AF_INET6             : constant :=               27;\n-\n-   --  Modes\n-\n-   SOCK_STREAM          : constant :=                2;\n-   SOCK_DGRAM           : constant :=                1;\n-\n-   --  Socket Errors\n-\n-   EBADF                : constant :=                9;\n-   ENOTSOCK             : constant :=               95;\n-   ENOTCONN             : constant :=              134;\n-   ENOBUFS              : constant :=              132;\n-   EOPNOTSUPP           : constant :=              122;\n-   EFAULT               : constant :=               14;\n-   EWOULDBLOCK          : constant :=               11;\n-   EADDRNOTAVAIL        : constant :=              126;\n-   EMSGSIZE             : constant :=               97;\n-   EADDRINUSE           : constant :=              125;\n-   EINVAL               : constant :=               22;\n-   EACCES               : constant :=               13;\n-   EAFNOSUPPORT         : constant :=              124;\n-   EISCONN              : constant :=              133;\n-   ETIMEDOUT            : constant :=              145;\n-   ECONNREFUSED         : constant :=              146;\n-   ENETUNREACH          : constant :=              128;\n-   EALREADY             : constant :=              149;\n-   EINPROGRESS          : constant :=              150;\n-   ENOPROTOOPT          : constant :=               99;\n-   EPROTONOSUPPORT      : constant :=              120;\n-   EINTR                : constant :=                4;\n-   EIO                  : constant :=                5;\n-   ESOCKTNOSUPPORT      : constant :=              121;\n-\n-   --  Host Errors\n-\n-   HOST_NOT_FOUND       : constant :=                1;\n-   TRY_AGAIN            : constant :=                2;\n-   NO_ADDRESS           : constant :=                4;\n-   NO_RECOVERY          : constant :=                3;\n-\n-   --  Control Flags\n-\n-   FIONBIO              : constant :=      -2147195266;\n-   FIONREAD             : constant :=       1074030207;\n-\n-   --  Shutdown Modes\n-\n-   SHUT_RD              : constant :=                0;\n-   SHUT_WR              : constant :=                1;\n-   SHUT_RDWR            : constant :=                2;\n-\n-   --  Protocol Levels\n-\n-   SOL_SOCKET           : constant :=            65535;\n-   IPPROTO_IP           : constant :=                0;\n-   IPPROTO_UDP          : constant :=               17;\n-   IPPROTO_TCP          : constant :=                6;\n-\n-   --  Socket Options\n-\n-   TCP_NODELAY          : constant :=                1;\n-   SO_SNDBUF            : constant :=             4097;\n-   SO_RCVBUF            : constant :=             4098;\n-   SO_REUSEADDR         : constant :=                4;\n-   SO_KEEPALIVE         : constant :=                8;\n-   SO_LINGER            : constant :=              128;\n-   SO_ERROR             : constant :=             4103;\n-   SO_BROADCAST         : constant :=               32;\n-   IP_ADD_MEMBERSHIP    : constant :=               11;\n-   IP_DROP_MEMBERSHIP   : constant :=               12;\n-   IP_MULTICAST_TTL     : constant :=               16;\n-   IP_MULTICAST_LOOP    : constant :=               10;\n+   --------------\n+   -- Families --\n+   --------------\n+\n+   AF_INET            : constant :=            2; --  IPv4 address family\n+   AF_INET6           : constant :=           27; --  IPv6 address family\n+\n+   -----------\n+   -- Modes --\n+   -----------\n+\n+   SOCK_STREAM        : constant :=            2; --  Stream socket\n+   SOCK_DGRAM         : constant :=            1; --  Datagram socket\n+\n+   -------------------\n+   -- Socket errors --\n+   -------------------\n+\n+   EACCES             : constant :=           13; --  Permission denied\n+   EADDRINUSE         : constant :=          125; --  Address already in use\n+   EADDRNOTAVAIL      : constant :=          126; --  Cannot assign address\n+   EAFNOSUPPORT       : constant :=          124; --  Addr family not supported\n+   EALREADY           : constant :=          149; --  Operation in progress\n+   EBADF              : constant :=            9; --  Bad file descriptor\n+   ECONNABORTED       : constant :=          130; --  Connection aborted\n+   ECONNREFUSED       : constant :=          146; --  Connection refused\n+   ECONNRESET         : constant :=          131; --  Connection reset by peer\n+   EDESTADDRREQ       : constant :=           96; --  Destination addr required\n+   EFAULT             : constant :=           14; --  Bad address\n+   EHOSTDOWN          : constant :=          147; --  Host is down\n+   EHOSTUNREACH       : constant :=          148; --  No route to host\n+   EINPROGRESS        : constant :=          150; --  Operation now in progress\n+   EINTR              : constant :=            4; --  Interrupted system call\n+   EINVAL             : constant :=           22; --  Invalid argument\n+   EIO                : constant :=            5; --  Input output error\n+   EISCONN            : constant :=          133; --  Socket already connected\n+   ELOOP              : constant :=           90; --  Too many symbolic lynks\n+   EMFILE             : constant :=           24; --  Too many open files\n+   EMSGSIZE           : constant :=           97; --  Message too long\n+   ENAMETOOLONG       : constant :=           78; --  Name too long\n+   ENETDOWN           : constant :=          127; --  Network is down\n+   ENETRESET          : constant :=          129; --  Disconn. on network reset\n+   ENETUNREACH        : constant :=          128; --  Network is unreachable\n+   ENOBUFS            : constant :=          132; --  No buffer space available\n+   ENOPROTOOPT        : constant :=           99; --  Protocol not available\n+   ENOTCONN           : constant :=          134; --  Socket not connected\n+   ENOTSOCK           : constant :=           95; --  Operation on non socket\n+   EOPNOTSUPP         : constant :=          122; --  Operation not supported\n+   EPFNOSUPPORT       : constant :=          123; --  Unknown protocol family\n+   EPROTONOSUPPORT    : constant :=          120; --  Unknown protocol\n+   EPROTOTYPE         : constant :=           98; --  Unknown protocol type\n+   ESHUTDOWN          : constant :=          143; --  Cannot send once shutdown\n+   ESOCKTNOSUPPORT    : constant :=          121; --  Socket type not supported\n+   ETIMEDOUT          : constant :=          145; --  Connection timed out\n+   ETOOMANYREFS       : constant :=          144; --  Too many references\n+   EWOULDBLOCK        : constant :=           11; --  Operation would block\n+\n+   -----------------\n+   -- Host errors --\n+   -----------------\n+\n+   HOST_NOT_FOUND     : constant :=            1; --  Unknown host\n+   TRY_AGAIN          : constant :=            2; --  Host name lookup failure\n+   NO_DATA            : constant :=            4; --  No data record for name\n+   NO_RECOVERY        : constant :=            3; --  Non recoverable errors\n+\n+   -------------------\n+   -- Control flags --\n+   -------------------\n+\n+   FIONBIO            : constant :=  -2147195266; --  Set/clear non-blocking io\n+   FIONREAD           : constant :=   1074030207; --  How many bytes to read\n+\n+   --------------------\n+   -- Shutdown modes --\n+   --------------------\n+\n+   SHUT_RD            : constant :=            0; --  No more recv\n+   SHUT_WR            : constant :=            1; --  No more send\n+   SHUT_RDWR          : constant :=            2; --  No more recv/send\n+\n+   ---------------------\n+   -- Protocol levels --\n+   ---------------------\n+\n+   SOL_SOCKET         : constant :=        65535; --  Options for socket level\n+   IPPROTO_IP         : constant :=            0; --  Dummy protocol for IP\n+   IPPROTO_UDP        : constant :=           17; --  UDP\n+   IPPROTO_TCP        : constant :=            6; --  TCP\n+\n+   -------------------\n+   -- Request flags --\n+   -------------------\n+\n+   MSG_OOB            : constant :=            1; --  Process out-of-band data\n+   MSG_PEEK           : constant :=            2; --  Peek at incoming data\n+   MSG_EOR            : constant :=            8; --  Send end of record\n+   MSG_WAITALL        : constant :=           64; --  Wait for full reception\n+\n+   --------------------\n+   -- Socket options --\n+   --------------------\n+\n+   TCP_NODELAY        : constant :=            1; --  Do not coalesce packets\n+   SO_SNDBUF          : constant :=         4097; --  Set/get send buffer size\n+   SO_RCVBUF          : constant :=         4098; --  Set/get recv buffer size\n+   SO_REUSEADDR       : constant :=            4; --  Bind reuse local address\n+   SO_KEEPALIVE       : constant :=            8; --  Enable keep-alive msgs\n+   SO_LINGER          : constant :=          128; --  Defer close to flush data\n+   SO_ERROR           : constant :=         4103; --  Get/clear error status\n+   SO_BROADCAST       : constant :=           32; --  Can send broadcast msgs\n+   IP_ADD_MEMBERSHIP  : constant :=           11; --  Join a multicast group\n+   IP_DROP_MEMBERSHIP : constant :=           12; --  Leave a multicast group\n+   IP_MULTICAST_TTL   : constant :=           16; --  Set/get multicast TTL\n+   IP_MULTICAST_LOOP  : constant :=           10; --  Set/get mcast loopback\n+\n end GNAT.Sockets.Constants;"}, {"sha": "754cafd6a1e5afefad8555f58742667f95086141", "filename": "gcc/ada/31soliop.ads", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F31soliop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F31soliop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F31soliop.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---              Copyright (C) 2002 Ada Core Technologies, Inc.              --\n+--            Copyright (C) 2002-2003 Ada Core Technologies, Inc.           --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,17 +26,18 @@\n -- however invalidate  any other reasons why  the executable file  might be --\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n--- GNAT is maintained by Ada Core Technologies Inc (http://www.gnat.com).   --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-package GNAT.Sockets.Linker_Options is\n+--  This package is used to provide target specific linker_options for the\n+--  support of scokets as required by the package GNAT.Sockets.\n \n-   --  This is the UnixWare version of this package.\n+--  This is the UnixWare version of this package\n \n+package GNAT.Sockets.Linker_Options is\n private\n-\n    pragma Linker_Options (\"-lnsl\");\n    pragma Linker_Options (\"-lsocket\");\n-\n end GNAT.Sockets.Linker_Options;"}, {"sha": "ef3536e4bbc88c0e49b9a4b9452c9bfa552a3d32", "filename": "gcc/ada/3asoccon.ads", "status": "modified", "additions": 123, "deletions": 78, "changes": 201, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3asoccon.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3asoccon.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F3asoccon.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---              Copyright (C) 2001 Ada Core Technologies, Inc.              --\n+--          Copyright (C) 2000-2003 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,88 +26,133 @@\n -- however invalidate  any other reasons why  the executable file  might be --\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n--- GNAT is maintained by Ada Core Technologies Inc (http://www.gnat.com).   --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+--  This package provides target dependent definitions of constant for use\n+--  by the GNAT.Sockets package (g-socket.ads). This package should not be\n+--  directly with'ed by an applications program.\n+\n --  This is the version for OSF\n \n package GNAT.Sockets.Constants is\n \n-   --  Families\n-\n-   AF_INET              : constant :=                2;\n-   AF_INET6             : constant :=               26;\n-\n-   --  Modes\n-\n-   SOCK_STREAM          : constant :=                1;\n-   SOCK_DGRAM           : constant :=                2;\n-\n-   --  Socket Errors\n-\n-   EBADF                : constant :=                9;\n-   ENOTSOCK             : constant :=               38;\n-   ENOTCONN             : constant :=               57;\n-   ENOBUFS              : constant :=               55;\n-   EOPNOTSUPP           : constant :=               45;\n-   EFAULT               : constant :=               14;\n-   EWOULDBLOCK          : constant :=               35;\n-   EADDRNOTAVAIL        : constant :=               49;\n-   EMSGSIZE             : constant :=               40;\n-   EADDRINUSE           : constant :=               48;\n-   EINVAL               : constant :=               22;\n-   EACCES               : constant :=               13;\n-   EAFNOSUPPORT         : constant :=               47;\n-   EISCONN              : constant :=               56;\n-   ETIMEDOUT            : constant :=               60;\n-   ECONNREFUSED         : constant :=               61;\n-   ENETUNREACH          : constant :=               51;\n-   EALREADY             : constant :=               37;\n-   EINPROGRESS          : constant :=               36;\n-   ENOPROTOOPT          : constant :=               42;\n-   EPROTONOSUPPORT      : constant :=               43;\n-   EINTR                : constant :=                4;\n-   EIO                  : constant :=                5;\n-   ESOCKTNOSUPPORT      : constant :=               44;\n-\n-   --  Host Errors\n-\n-   HOST_NOT_FOUND       : constant :=                1;\n-   TRY_AGAIN            : constant :=                2;\n-   NO_ADDRESS           : constant :=                4;\n-   NO_RECOVERY          : constant :=                3;\n-\n-   --  Control Flags\n-\n-   FIONBIO              : constant :=      -2147195266;\n-   FIONREAD             : constant :=       1074030207;\n-\n-   --  Shutdown Modes\n-\n-   SHUT_RD              : constant :=                0;\n-   SHUT_WR              : constant :=                1;\n-   SHUT_RDWR            : constant :=                2;\n-\n-   --  Protocol Levels\n-\n-   SOL_SOCKET           : constant :=            65535;\n-   IPPROTO_IP           : constant :=                0;\n-   IPPROTO_UDP          : constant :=               17;\n-   IPPROTO_TCP          : constant :=                6;\n-\n-   --  Socket Options\n-\n-   TCP_NODELAY          : constant :=                1;\n-   SO_SNDBUF            : constant :=             4097;\n-   SO_RCVBUF            : constant :=             4098;\n-   SO_REUSEADDR         : constant :=                4;\n-   SO_KEEPALIVE         : constant :=                8;\n-   SO_LINGER            : constant :=              128;\n-   SO_ERROR             : constant :=             4103;\n-   SO_BROADCAST         : constant :=               32;\n-   IP_ADD_MEMBERSHIP    : constant :=               12;\n-   IP_DROP_MEMBERSHIP   : constant :=               13;\n-   IP_MULTICAST_TTL     : constant :=               10;\n-   IP_MULTICAST_LOOP    : constant :=               11;\n+   --------------\n+   -- Families --\n+   --------------\n+\n+   AF_INET            : constant :=            2; --  IPv4 address family\n+   AF_INET6           : constant :=           26; --  IPv6 address family\n+\n+   -----------\n+   -- Modes --\n+   -----------\n+\n+   SOCK_STREAM        : constant :=            1; --  Stream socket\n+   SOCK_DGRAM         : constant :=            2; --  Datagram socket\n+\n+   -------------------\n+   -- Socket errors --\n+   -------------------\n+\n+   EACCES             : constant :=           13; --  Permission denied\n+   EADDRINUSE         : constant :=           48; --  Address already in use\n+   EADDRNOTAVAIL      : constant :=           49; --  Cannot assign address\n+   EAFNOSUPPORT       : constant :=           47; --  Addr family not supported\n+   EALREADY           : constant :=           37; --  Operation in progress\n+   EBADF              : constant :=            9; --  Bad file descriptor\n+   ECONNABORTED       : constant :=           53; --  Connection aborted\n+   ECONNREFUSED       : constant :=           61; --  Connection refused\n+   ECONNRESET         : constant :=           54; --  Connection reset by peer\n+   EDESTADDRREQ       : constant :=           39; --  Destination addr required\n+   EFAULT             : constant :=           14; --  Bad address\n+   EHOSTDOWN          : constant :=           64; --  Host is down\n+   EHOSTUNREACH       : constant :=           65; --  No route to host\n+   EINPROGRESS        : constant :=           36; --  Operation now in progress\n+   EINTR              : constant :=            4; --  Interrupted system call\n+   EINVAL             : constant :=           22; --  Invalid argument\n+   EIO                : constant :=            5; --  Input output error\n+   EISCONN            : constant :=           56; --  Socket already connected\n+   ELOOP              : constant :=           62; --  Too many symbolic lynks\n+   EMFILE             : constant :=           24; --  Too many open files\n+   EMSGSIZE           : constant :=           40; --  Message too long\n+   ENAMETOOLONG       : constant :=           63; --  Name too long\n+   ENETDOWN           : constant :=           50; --  Network is down\n+   ENETRESET          : constant :=           52; --  Disconn. on network reset\n+   ENETUNREACH        : constant :=           51; --  Network is unreachable\n+   ENOBUFS            : constant :=           55; --  No buffer space available\n+   ENOPROTOOPT        : constant :=           42; --  Protocol not available\n+   ENOTCONN           : constant :=           57; --  Socket not connected\n+   ENOTSOCK           : constant :=           38; --  Operation on non socket\n+   EOPNOTSUPP         : constant :=           45; --  Operation not supported\n+   EPFNOSUPPORT       : constant :=           46; --  Unknown protocol family\n+   EPROTONOSUPPORT    : constant :=           43; --  Unknown protocol\n+   EPROTOTYPE         : constant :=           41; --  Unknown protocol type\n+   ESHUTDOWN          : constant :=           58; --  Cannot send once shutdown\n+   ESOCKTNOSUPPORT    : constant :=           44; --  Socket type not supported\n+   ETIMEDOUT          : constant :=           60; --  Connection timed out\n+   ETOOMANYREFS       : constant :=           59; --  Too many references\n+   EWOULDBLOCK        : constant :=           35; --  Operation would block\n+\n+   -----------------\n+   -- Host errors --\n+   -----------------\n+\n+   HOST_NOT_FOUND     : constant :=            1; --  Unknown host\n+   TRY_AGAIN          : constant :=            2; --  Host name lookup failure\n+   NO_DATA            : constant :=            4; --  No data record for name\n+   NO_RECOVERY        : constant :=            3; --  Non recoverable errors\n+\n+   -------------------\n+   -- Control flags --\n+   -------------------\n+\n+   FIONBIO            : constant :=  -2147195266; --  Set/clear non-blocking io\n+   FIONREAD           : constant :=   1074030207; --  How many bytes to read\n+\n+   --------------------\n+   -- Shutdown modes --\n+   --------------------\n+\n+   SHUT_RD            : constant :=            0; --  No more recv\n+   SHUT_WR            : constant :=            1; --  No more send\n+   SHUT_RDWR          : constant :=            2; --  No more recv/send\n+\n+   ---------------------\n+   -- Protocol levels --\n+   ---------------------\n+\n+   SOL_SOCKET         : constant :=        65535; --  Options for socket level\n+   IPPROTO_IP         : constant :=            0; --  Dummy protocol for IP\n+   IPPROTO_UDP        : constant :=           17; --  UDP\n+   IPPROTO_TCP        : constant :=            6; --  TCP\n+\n+   -------------------\n+   -- Request flags --\n+   -------------------\n+\n+   MSG_OOB            : constant :=            1; --  Process out-of-band data\n+   MSG_PEEK           : constant :=            2; --  Peek at incoming data\n+   MSG_EOR            : constant :=            8; --  Send end of record\n+   MSG_WAITALL        : constant :=           64; --  Wait for full reception\n+\n+   --------------------\n+   -- Socket options --\n+   --------------------\n+\n+   TCP_NODELAY        : constant :=            1; --  Do not coalesce packets\n+   SO_SNDBUF          : constant :=         4097; --  Set/get send buffer size\n+   SO_RCVBUF          : constant :=         4098; --  Set/get recv buffer size\n+   SO_REUSEADDR       : constant :=            4; --  Bind reuse local address\n+   SO_KEEPALIVE       : constant :=            8; --  Enable keep-alive msgs\n+   SO_LINGER          : constant :=          128; --  Defer close to flush data\n+   SO_ERROR           : constant :=         4103; --  Get/clear error status\n+   SO_BROADCAST       : constant :=           32; --  Can send broadcast msgs\n+   IP_ADD_MEMBERSHIP  : constant :=           12; --  Join a multicast group\n+   IP_DROP_MEMBERSHIP : constant :=           13; --  Leave a multicast group\n+   IP_MULTICAST_TTL   : constant :=           10; --  Set/get multicast TTL\n+   IP_MULTICAST_LOOP  : constant :=           11; --  Set/get mcast loopback\n+\n end GNAT.Sockets.Constants;"}, {"sha": "0f5fe9d4c6bbba8f40a0286513787b9a76e881fa", "filename": "gcc/ada/3bsoccon.ads", "status": "modified", "additions": 123, "deletions": 78, "changes": 201, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3bsoccon.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3bsoccon.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F3bsoccon.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---              Copyright (C) 2001 Ada Core Technologies, Inc.              --\n+--          Copyright (C) 2000-2003 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,88 +26,133 @@\n -- however invalidate  any other reasons why  the executable file  might be --\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n--- GNAT is maintained by Ada Core Technologies Inc (http://www.gnat.com).   --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+--  This package provides target dependent definitions of constant for use\n+--  by the GNAT.Sockets package (g-socket.ads). This package should not be\n+--  directly with'ed by an applications program.\n+\n --  This is the version for AIX\n \n package GNAT.Sockets.Constants is\n \n-   --  Families\n-\n-   AF_INET              : constant :=                2;\n-   AF_INET6             : constant :=               24;\n-\n-   --  Modes\n-\n-   SOCK_STREAM          : constant :=                1;\n-   SOCK_DGRAM           : constant :=                2;\n-\n-   --  Socket Errors\n-\n-   EBADF                : constant :=                9;\n-   ENOTSOCK             : constant :=               57;\n-   ENOTCONN             : constant :=               76;\n-   ENOBUFS              : constant :=               74;\n-   EOPNOTSUPP           : constant :=               64;\n-   EFAULT               : constant :=               14;\n-   EWOULDBLOCK          : constant :=               11;\n-   EADDRNOTAVAIL        : constant :=               68;\n-   EMSGSIZE             : constant :=               59;\n-   EADDRINUSE           : constant :=               67;\n-   EINVAL               : constant :=               22;\n-   EACCES               : constant :=               13;\n-   EAFNOSUPPORT         : constant :=               66;\n-   EISCONN              : constant :=               75;\n-   ETIMEDOUT            : constant :=               78;\n-   ECONNREFUSED         : constant :=               79;\n-   ENETUNREACH          : constant :=               70;\n-   EALREADY             : constant :=               56;\n-   EINPROGRESS          : constant :=               55;\n-   ENOPROTOOPT          : constant :=               61;\n-   EPROTONOSUPPORT      : constant :=               62;\n-   EINTR                : constant :=                4;\n-   EIO                  : constant :=                5;\n-   ESOCKTNOSUPPORT      : constant :=               63;\n-\n-   --  Host Errors\n-\n-   HOST_NOT_FOUND       : constant :=                1;\n-   TRY_AGAIN            : constant :=                2;\n-   NO_ADDRESS           : constant :=                4;\n-   NO_RECOVERY          : constant :=                3;\n-\n-   --  Control Flags\n-\n-   FIONBIO              : constant :=      -2147195266;\n-   FIONREAD             : constant :=       1074030207;\n-\n-   --  Shutdown Modes\n-\n-   SHUT_RD              : constant :=                0;\n-   SHUT_WR              : constant :=                1;\n-   SHUT_RDWR            : constant :=                2;\n-\n-   --  Protocol Levels\n-\n-   SOL_SOCKET           : constant :=            65535;\n-   IPPROTO_IP           : constant :=                0;\n-   IPPROTO_UDP          : constant :=               17;\n-   IPPROTO_TCP          : constant :=                6;\n-\n-   --  Socket Options\n-\n-   TCP_NODELAY          : constant :=                1;\n-   SO_SNDBUF            : constant :=             4097;\n-   SO_RCVBUF            : constant :=             4098;\n-   SO_REUSEADDR         : constant :=                4;\n-   SO_KEEPALIVE         : constant :=                8;\n-   SO_LINGER            : constant :=              128;\n-   SO_ERROR             : constant :=             4103;\n-   SO_BROADCAST         : constant :=               32;\n-   IP_ADD_MEMBERSHIP    : constant :=               12;\n-   IP_DROP_MEMBERSHIP   : constant :=               13;\n-   IP_MULTICAST_TTL     : constant :=               10;\n-   IP_MULTICAST_LOOP    : constant :=               11;\n+   --------------\n+   -- Families --\n+   --------------\n+\n+   AF_INET            : constant :=            2; --  IPv4 address family\n+   AF_INET6           : constant :=           24; --  IPv6 address family\n+\n+   -----------\n+   -- Modes --\n+   -----------\n+\n+   SOCK_STREAM        : constant :=            1; --  Stream socket\n+   SOCK_DGRAM         : constant :=            2; --  Datagram socket\n+\n+   -------------------\n+   -- Socket errors --\n+   -------------------\n+\n+   EACCES             : constant :=           13; --  Permission denied\n+   EADDRINUSE         : constant :=           67; --  Address already in use\n+   EADDRNOTAVAIL      : constant :=           68; --  Cannot assign address\n+   EAFNOSUPPORT       : constant :=           66; --  Addr family not supported\n+   EALREADY           : constant :=           56; --  Operation in progress\n+   EBADF              : constant :=            9; --  Bad file descriptor\n+   ECONNABORTED       : constant :=           72; --  Connection aborted\n+   ECONNREFUSED       : constant :=           79; --  Connection refused\n+   ECONNRESET         : constant :=           73; --  Connection reset by peer\n+   EDESTADDRREQ       : constant :=           58; --  Destination addr required\n+   EFAULT             : constant :=           14; --  Bad address\n+   EHOSTDOWN          : constant :=           80; --  Host is down\n+   EHOSTUNREACH       : constant :=           81; --  No route to host\n+   EINPROGRESS        : constant :=           55; --  Operation now in progress\n+   EINTR              : constant :=            4; --  Interrupted system call\n+   EINVAL             : constant :=           22; --  Invalid argument\n+   EIO                : constant :=            5; --  Input output error\n+   EISCONN            : constant :=           75; --  Socket already connected\n+   ELOOP              : constant :=           85; --  Too many symbolic lynks\n+   EMFILE             : constant :=           24; --  Too many open files\n+   EMSGSIZE           : constant :=           59; --  Message too long\n+   ENAMETOOLONG       : constant :=           86; --  Name too long\n+   ENETDOWN           : constant :=           69; --  Network is down\n+   ENETRESET          : constant :=           71; --  Disconn. on network reset\n+   ENETUNREACH        : constant :=           70; --  Network is unreachable\n+   ENOBUFS            : constant :=           74; --  No buffer space available\n+   ENOPROTOOPT        : constant :=           61; --  Protocol not available\n+   ENOTCONN           : constant :=           76; --  Socket not connected\n+   ENOTSOCK           : constant :=           57; --  Operation on non socket\n+   EOPNOTSUPP         : constant :=           64; --  Operation not supported\n+   EPFNOSUPPORT       : constant :=           65; --  Unknown protocol family\n+   EPROTONOSUPPORT    : constant :=           62; --  Unknown protocol\n+   EPROTOTYPE         : constant :=           60; --  Unknown protocol type\n+   ESHUTDOWN          : constant :=           77; --  Cannot send once shutdown\n+   ESOCKTNOSUPPORT    : constant :=           63; --  Socket type not supported\n+   ETIMEDOUT          : constant :=           78; --  Connection timed out\n+   ETOOMANYREFS       : constant :=          115; --  Too many references\n+   EWOULDBLOCK        : constant :=           11; --  Operation would block\n+\n+   -----------------\n+   -- Host errors --\n+   -----------------\n+\n+   HOST_NOT_FOUND     : constant :=            1; --  Unknown host\n+   TRY_AGAIN          : constant :=            2; --  Host name lookup failure\n+   NO_DATA            : constant :=            4; --  No data record for name\n+   NO_RECOVERY        : constant :=            3; --  Non recoverable errors\n+\n+   -------------------\n+   -- Control flags --\n+   -------------------\n+\n+   FIONBIO            : constant :=  -2147195266; --  Set/clear non-blocking io\n+   FIONREAD           : constant :=   1074030207; --  How many bytes to read\n+\n+   --------------------\n+   -- Shutdown modes --\n+   --------------------\n+\n+   SHUT_RD            : constant :=            0; --  No more recv\n+   SHUT_WR            : constant :=            1; --  No more send\n+   SHUT_RDWR          : constant :=            2; --  No more recv/send\n+\n+   ---------------------\n+   -- Protocol levels --\n+   ---------------------\n+\n+   SOL_SOCKET         : constant :=        65535; --  Options for socket level\n+   IPPROTO_IP         : constant :=            0; --  Dummy protocol for IP\n+   IPPROTO_UDP        : constant :=           17; --  UDP\n+   IPPROTO_TCP        : constant :=            6; --  TCP\n+\n+   -------------------\n+   -- Request flags --\n+   -------------------\n+\n+   MSG_OOB            : constant :=            1; --  Process out-of-band data\n+   MSG_PEEK           : constant :=            2; --  Peek at incoming data\n+   MSG_EOR            : constant :=            8; --  Send end of record\n+   MSG_WAITALL        : constant :=           64; --  Wait for full reception\n+\n+   --------------------\n+   -- Socket options --\n+   --------------------\n+\n+   TCP_NODELAY        : constant :=            1; --  Do not coalesce packets\n+   SO_SNDBUF          : constant :=         4097; --  Set/get send buffer size\n+   SO_RCVBUF          : constant :=         4098; --  Set/get recv buffer size\n+   SO_REUSEADDR       : constant :=            4; --  Bind reuse local address\n+   SO_KEEPALIVE       : constant :=            8; --  Enable keep-alive msgs\n+   SO_LINGER          : constant :=          128; --  Defer close to flush data\n+   SO_ERROR           : constant :=         4103; --  Get/clear error status\n+   SO_BROADCAST       : constant :=           32; --  Can send broadcast msgs\n+   IP_ADD_MEMBERSHIP  : constant :=           12; --  Join a multicast group\n+   IP_DROP_MEMBERSHIP : constant :=           13; --  Leave a multicast group\n+   IP_MULTICAST_TTL   : constant :=           10; --  Set/get multicast TTL\n+   IP_MULTICAST_LOOP  : constant :=           11; --  Set/get mcast loopback\n+\n end GNAT.Sockets.Constants;"}, {"sha": "f19f3cde5f60d6f1ea33499bcd110bd0e990a8b1", "filename": "gcc/ada/3gsoccon.ads", "status": "modified", "additions": 123, "deletions": 78, "changes": 201, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3gsoccon.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3gsoccon.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F3gsoccon.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---              Copyright (C) 2001 Ada Core Technologies, Inc.              --\n+--          Copyright (C) 2000-2003 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,88 +26,133 @@\n -- however invalidate  any other reasons why  the executable file  might be --\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n--- GNAT is maintained by Ada Core Technologies Inc (http://www.gnat.com).   --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+--  This package provides target dependent definitions of constant for use\n+--  by the GNAT.Sockets package (g-socket.ads). This package should not be\n+--  directly with'ed by an applications program.\n+\n --  This is the version for SGI\n \n package GNAT.Sockets.Constants is\n \n-   --  Families\n-\n-   AF_INET              : constant :=                2;\n-   AF_INET6             : constant :=               24;\n-\n-   --  Modes\n-\n-   SOCK_STREAM          : constant :=                2;\n-   SOCK_DGRAM           : constant :=                1;\n-\n-   --  Socket Errors\n-\n-   EBADF                : constant :=                9;\n-   ENOTSOCK             : constant :=               95;\n-   ENOTCONN             : constant :=              134;\n-   ENOBUFS              : constant :=              132;\n-   EOPNOTSUPP           : constant :=              122;\n-   EFAULT               : constant :=               14;\n-   EWOULDBLOCK          : constant :=               11;\n-   EADDRNOTAVAIL        : constant :=              126;\n-   EMSGSIZE             : constant :=               97;\n-   EADDRINUSE           : constant :=              125;\n-   EINVAL               : constant :=               22;\n-   EACCES               : constant :=               13;\n-   EAFNOSUPPORT         : constant :=              124;\n-   EISCONN              : constant :=              133;\n-   ETIMEDOUT            : constant :=              145;\n-   ECONNREFUSED         : constant :=              146;\n-   ENETUNREACH          : constant :=              128;\n-   EALREADY             : constant :=              149;\n-   EINPROGRESS          : constant :=              150;\n-   ENOPROTOOPT          : constant :=               99;\n-   EPROTONOSUPPORT      : constant :=              120;\n-   EINTR                : constant :=                4;\n-   EIO                  : constant :=                5;\n-   ESOCKTNOSUPPORT      : constant :=              121;\n-\n-   --  Host Errors\n-\n-   HOST_NOT_FOUND       : constant :=                1;\n-   TRY_AGAIN            : constant :=                2;\n-   NO_ADDRESS           : constant :=                4;\n-   NO_RECOVERY          : constant :=                3;\n-\n-   --  Control Flags\n-\n-   FIONBIO              : constant :=      -2147195266;\n-   FIONREAD             : constant :=       1074030207;\n-\n-   --  Shutdown Modes\n-\n-   SHUT_RD              : constant :=                0;\n-   SHUT_WR              : constant :=                1;\n-   SHUT_RDWR            : constant :=                2;\n-\n-   --  Protocol Levels\n-\n-   SOL_SOCKET           : constant :=            65535;\n-   IPPROTO_IP           : constant :=                0;\n-   IPPROTO_UDP          : constant :=               17;\n-   IPPROTO_TCP          : constant :=                6;\n-\n-   --  Socket Options\n-\n-   TCP_NODELAY          : constant :=                1;\n-   SO_SNDBUF            : constant :=             4097;\n-   SO_RCVBUF            : constant :=             4098;\n-   SO_REUSEADDR         : constant :=                4;\n-   SO_KEEPALIVE         : constant :=                8;\n-   SO_LINGER            : constant :=              128;\n-   SO_ERROR             : constant :=             4103;\n-   SO_BROADCAST         : constant :=               32;\n-   IP_ADD_MEMBERSHIP    : constant :=               23;\n-   IP_DROP_MEMBERSHIP   : constant :=               24;\n-   IP_MULTICAST_TTL     : constant :=               21;\n-   IP_MULTICAST_LOOP    : constant :=               22;\n+   --------------\n+   -- Families --\n+   --------------\n+\n+   AF_INET            : constant :=            2; --  IPv4 address family\n+   AF_INET6           : constant :=           24; --  IPv6 address family\n+\n+   -----------\n+   -- Modes --\n+   -----------\n+\n+   SOCK_STREAM        : constant :=            2; --  Stream socket\n+   SOCK_DGRAM         : constant :=            1; --  Datagram socket\n+\n+   -------------------\n+   -- Socket errors --\n+   -------------------\n+\n+   EACCES             : constant :=           13; --  Permission denied\n+   EADDRINUSE         : constant :=          125; --  Address already in use\n+   EADDRNOTAVAIL      : constant :=          126; --  Cannot assign address\n+   EAFNOSUPPORT       : constant :=          124; --  Addr family not supported\n+   EALREADY           : constant :=          149; --  Operation in progress\n+   EBADF              : constant :=            9; --  Bad file descriptor\n+   ECONNABORTED       : constant :=          130; --  Connection aborted\n+   ECONNREFUSED       : constant :=          146; --  Connection refused\n+   ECONNRESET         : constant :=          131; --  Connection reset by peer\n+   EDESTADDRREQ       : constant :=           96; --  Destination addr required\n+   EFAULT             : constant :=           14; --  Bad address\n+   EHOSTDOWN          : constant :=          147; --  Host is down\n+   EHOSTUNREACH       : constant :=          148; --  No route to host\n+   EINPROGRESS        : constant :=          150; --  Operation now in progress\n+   EINTR              : constant :=            4; --  Interrupted system call\n+   EINVAL             : constant :=           22; --  Invalid argument\n+   EIO                : constant :=            5; --  Input output error\n+   EISCONN            : constant :=          133; --  Socket already connected\n+   ELOOP              : constant :=           90; --  Too many symbolic lynks\n+   EMFILE             : constant :=           24; --  Too many open files\n+   EMSGSIZE           : constant :=           97; --  Message too long\n+   ENAMETOOLONG       : constant :=           78; --  Name too long\n+   ENETDOWN           : constant :=          127; --  Network is down\n+   ENETRESET          : constant :=          129; --  Disconn. on network reset\n+   ENETUNREACH        : constant :=          128; --  Network is unreachable\n+   ENOBUFS            : constant :=          132; --  No buffer space available\n+   ENOPROTOOPT        : constant :=           99; --  Protocol not available\n+   ENOTCONN           : constant :=          134; --  Socket not connected\n+   ENOTSOCK           : constant :=           95; --  Operation on non socket\n+   EOPNOTSUPP         : constant :=          122; --  Operation not supported\n+   EPFNOSUPPORT       : constant :=          123; --  Unknown protocol family\n+   EPROTONOSUPPORT    : constant :=          120; --  Unknown protocol\n+   EPROTOTYPE         : constant :=           98; --  Unknown protocol type\n+   ESHUTDOWN          : constant :=          143; --  Cannot send once shutdown\n+   ESOCKTNOSUPPORT    : constant :=          121; --  Socket type not supported\n+   ETIMEDOUT          : constant :=          145; --  Connection timed out\n+   ETOOMANYREFS       : constant :=          144; --  Too many references\n+   EWOULDBLOCK        : constant :=           11; --  Operation would block\n+\n+   -----------------\n+   -- Host errors --\n+   -----------------\n+\n+   HOST_NOT_FOUND     : constant :=            1; --  Unknown host\n+   TRY_AGAIN          : constant :=            2; --  Host name lookup failure\n+   NO_DATA            : constant :=            4; --  No data record for name\n+   NO_RECOVERY        : constant :=            3; --  Non recoverable errors\n+\n+   -------------------\n+   -- Control flags --\n+   -------------------\n+\n+   FIONBIO            : constant :=  -2147195266; --  Set/clear non-blocking io\n+   FIONREAD           : constant :=   1074030207; --  How many bytes to read\n+\n+   --------------------\n+   -- Shutdown modes --\n+   --------------------\n+\n+   SHUT_RD            : constant :=            0; --  No more recv\n+   SHUT_WR            : constant :=            1; --  No more send\n+   SHUT_RDWR          : constant :=            2; --  No more recv/send\n+\n+   ---------------------\n+   -- Protocol levels --\n+   ---------------------\n+\n+   SOL_SOCKET         : constant :=        65535; --  Options for socket level\n+   IPPROTO_IP         : constant :=            0; --  Dummy protocol for IP\n+   IPPROTO_UDP        : constant :=           17; --  UDP\n+   IPPROTO_TCP        : constant :=            6; --  TCP\n+\n+   -------------------\n+   -- Request flags --\n+   -------------------\n+\n+   MSG_OOB            : constant :=            1; --  Process out-of-band data\n+   MSG_PEEK           : constant :=            2; --  Peek at incoming data\n+   MSG_EOR            : constant :=            8; --  Send end of record\n+   MSG_WAITALL        : constant :=           64; --  Wait for full reception\n+\n+   --------------------\n+   -- Socket options --\n+   --------------------\n+\n+   TCP_NODELAY        : constant :=            1; --  Do not coalesce packets\n+   SO_SNDBUF          : constant :=         4097; --  Set/get send buffer size\n+   SO_RCVBUF          : constant :=         4098; --  Set/get recv buffer size\n+   SO_REUSEADDR       : constant :=            4; --  Bind reuse local address\n+   SO_KEEPALIVE       : constant :=            8; --  Enable keep-alive msgs\n+   SO_LINGER          : constant :=          128; --  Defer close to flush data\n+   SO_ERROR           : constant :=         4103; --  Get/clear error status\n+   SO_BROADCAST       : constant :=           32; --  Can send broadcast msgs\n+   IP_ADD_MEMBERSHIP  : constant :=           23; --  Join a multicast group\n+   IP_DROP_MEMBERSHIP : constant :=           24; --  Leave a multicast group\n+   IP_MULTICAST_TTL   : constant :=           21; --  Set/get multicast TTL\n+   IP_MULTICAST_LOOP  : constant :=           22; --  Set/get mcast loopback\n+\n end GNAT.Sockets.Constants;"}, {"sha": "cbca2bee7a57d026970fe6a29dd1e7b7b87c270d", "filename": "gcc/ada/3hsoccon.ads", "status": "modified", "additions": 123, "deletions": 78, "changes": 201, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3hsoccon.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3hsoccon.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F3hsoccon.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---              Copyright (C) 2001 Ada Core Technologies, Inc.              --\n+--          Copyright (C) 2000-2003 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,88 +26,133 @@\n -- however invalidate  any other reasons why  the executable file  might be --\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n--- GNAT is maintained by Ada Core Technologies Inc (http://www.gnat.com).   --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+--  This package provides target dependent definitions of constant for use\n+--  by the GNAT.Sockets package (g-socket.ads). This package should not be\n+--  directly with'ed by an applications program.\n+\n --  This is the version for HP/UX\n \n package GNAT.Sockets.Constants is\n \n-   --  Families\n-\n-   AF_INET              : constant :=                2;\n-   AF_INET6             : constant :=               -1;\n-\n-   --  Modes\n-\n-   SOCK_STREAM          : constant :=                1;\n-   SOCK_DGRAM           : constant :=                2;\n-\n-   --  Socket Errors\n-\n-   EBADF                : constant :=                9;\n-   ENOTSOCK             : constant :=              216;\n-   ENOTCONN             : constant :=              235;\n-   ENOBUFS              : constant :=              233;\n-   EOPNOTSUPP           : constant :=              223;\n-   EFAULT               : constant :=               14;\n-   EWOULDBLOCK          : constant :=              246;\n-   EADDRNOTAVAIL        : constant :=              227;\n-   EMSGSIZE             : constant :=              218;\n-   EADDRINUSE           : constant :=              226;\n-   EINVAL               : constant :=               22;\n-   EACCES               : constant :=               13;\n-   EAFNOSUPPORT         : constant :=              225;\n-   EISCONN              : constant :=              234;\n-   ETIMEDOUT            : constant :=              238;\n-   ECONNREFUSED         : constant :=              239;\n-   ENETUNREACH          : constant :=              229;\n-   EALREADY             : constant :=              244;\n-   EINPROGRESS          : constant :=              245;\n-   ENOPROTOOPT          : constant :=              220;\n-   EPROTONOSUPPORT      : constant :=              221;\n-   EINTR                : constant :=                4;\n-   EIO                  : constant :=                5;\n-   ESOCKTNOSUPPORT      : constant :=              222;\n-\n-   --  Host Errors\n-\n-   HOST_NOT_FOUND       : constant :=                1;\n-   TRY_AGAIN            : constant :=                2;\n-   NO_ADDRESS           : constant :=                4;\n-   NO_RECOVERY          : constant :=                3;\n-\n-   --  Control Flags\n-\n-   FIONBIO              : constant :=      -2147195266;\n-   FIONREAD             : constant :=       1074030207;\n-\n-   --  Shutdown Modes\n-\n-   SHUT_RD              : constant :=                0;\n-   SHUT_WR              : constant :=                1;\n-   SHUT_RDWR            : constant :=                2;\n-\n-   --  Protocol Levels\n-\n-   SOL_SOCKET           : constant :=            65535;\n-   IPPROTO_IP           : constant :=                0;\n-   IPPROTO_UDP          : constant :=               17;\n-   IPPROTO_TCP          : constant :=                6;\n-\n-   --  Socket Options\n-\n-   TCP_NODELAY          : constant :=                1;\n-   SO_SNDBUF            : constant :=             4097;\n-   SO_RCVBUF            : constant :=             4098;\n-   SO_REUSEADDR         : constant :=                4;\n-   SO_KEEPALIVE         : constant :=                8;\n-   SO_LINGER            : constant :=              128;\n-   SO_ERROR             : constant :=             4103;\n-   SO_BROADCAST         : constant :=               32;\n-   IP_ADD_MEMBERSHIP    : constant :=                5;\n-   IP_DROP_MEMBERSHIP   : constant :=                6;\n-   IP_MULTICAST_TTL     : constant :=                3;\n-   IP_MULTICAST_LOOP    : constant :=                4;\n+   --------------\n+   -- Families --\n+   --------------\n+\n+   AF_INET            : constant :=            2; --  IPv4 address family\n+   AF_INET6           : constant :=           26; --  IPv6 address family\n+\n+   -----------\n+   -- Modes --\n+   -----------\n+\n+   SOCK_STREAM        : constant :=            1; --  Stream socket\n+   SOCK_DGRAM         : constant :=            2; --  Datagram socket\n+\n+   -------------------\n+   -- Socket errors --\n+   -------------------\n+\n+   EACCES             : constant :=           13; --  Permission denied\n+   EADDRINUSE         : constant :=          226; --  Address already in use\n+   EADDRNOTAVAIL      : constant :=          227; --  Cannot assign address\n+   EAFNOSUPPORT       : constant :=          225; --  Addr family not supported\n+   EALREADY           : constant :=          244; --  Operation in progress\n+   EBADF              : constant :=            9; --  Bad file descriptor\n+   ECONNABORTED       : constant :=          231; --  Connection aborted\n+   ECONNREFUSED       : constant :=          239; --  Connection refused\n+   ECONNRESET         : constant :=          232; --  Connection reset by peer\n+   EDESTADDRREQ       : constant :=          217; --  Destination addr required\n+   EFAULT             : constant :=           14; --  Bad address\n+   EHOSTDOWN          : constant :=          241; --  Host is down\n+   EHOSTUNREACH       : constant :=          242; --  No route to host\n+   EINPROGRESS        : constant :=          245; --  Operation now in progress\n+   EINTR              : constant :=            4; --  Interrupted system call\n+   EINVAL             : constant :=           22; --  Invalid argument\n+   EIO                : constant :=            5; --  Input output error\n+   EISCONN            : constant :=          234; --  Socket already connected\n+   ELOOP              : constant :=          249; --  Too many symbolic lynks\n+   EMFILE             : constant :=           24; --  Too many open files\n+   EMSGSIZE           : constant :=          218; --  Message too long\n+   ENAMETOOLONG       : constant :=          248; --  Name too long\n+   ENETDOWN           : constant :=          228; --  Network is down\n+   ENETRESET          : constant :=          230; --  Disconn. on network reset\n+   ENETUNREACH        : constant :=          229; --  Network is unreachable\n+   ENOBUFS            : constant :=          233; --  No buffer space available\n+   ENOPROTOOPT        : constant :=          220; --  Protocol not available\n+   ENOTCONN           : constant :=          235; --  Socket not connected\n+   ENOTSOCK           : constant :=          216; --  Operation on non socket\n+   EOPNOTSUPP         : constant :=          223; --  Operation not supported\n+   EPFNOSUPPORT       : constant :=          224; --  Unknown protocol family\n+   EPROTONOSUPPORT    : constant :=          221; --  Unknown protocol\n+   EPROTOTYPE         : constant :=          219; --  Unknown protocol type\n+   ESHUTDOWN          : constant :=          236; --  Cannot send once shutdown\n+   ESOCKTNOSUPPORT    : constant :=          222; --  Socket type not supported\n+   ETIMEDOUT          : constant :=          238; --  Connection timed out\n+   ETOOMANYREFS       : constant :=          237; --  Too many references\n+   EWOULDBLOCK        : constant :=          246; --  Operation would block\n+\n+   -----------------\n+   -- Host errors --\n+   -----------------\n+\n+   HOST_NOT_FOUND     : constant :=            1; --  Unknown host\n+   TRY_AGAIN          : constant :=            2; --  Host name lookup failure\n+   NO_DATA            : constant :=            4; --  No data record for name\n+   NO_RECOVERY        : constant :=            3; --  Non recoverable errors\n+\n+   -------------------\n+   -- Control flags --\n+   -------------------\n+\n+   FIONBIO            : constant :=  -2147195266; --  Set/clear non-blocking io\n+   FIONREAD           : constant :=   1074030207; --  How many bytes to read\n+\n+   --------------------\n+   -- Shutdown modes --\n+   --------------------\n+\n+   SHUT_RD            : constant :=            0; --  No more recv\n+   SHUT_WR            : constant :=            1; --  No more send\n+   SHUT_RDWR          : constant :=            2; --  No more recv/send\n+\n+   ---------------------\n+   -- Protocol levels --\n+   ---------------------\n+\n+   SOL_SOCKET         : constant :=        65535; --  Options for socket level\n+   IPPROTO_IP         : constant :=            0; --  Dummy protocol for IP\n+   IPPROTO_UDP        : constant :=           17; --  UDP\n+   IPPROTO_TCP        : constant :=            6; --  TCP\n+\n+   -------------------\n+   -- Request flags --\n+   -------------------\n+\n+   MSG_OOB            : constant :=            1; --  Process out-of-band data\n+   MSG_PEEK           : constant :=            2; --  Peek at incoming data\n+   MSG_EOR            : constant :=            8; --  Send end of record\n+   MSG_WAITALL        : constant :=           64; --  Wait for full reception\n+\n+   --------------------\n+   -- Socket options --\n+   --------------------\n+\n+   TCP_NODELAY        : constant :=            1; --  Do not coalesce packets\n+   SO_SNDBUF          : constant :=         4097; --  Set/get send buffer size\n+   SO_RCVBUF          : constant :=         4098; --  Set/get recv buffer size\n+   SO_REUSEADDR       : constant :=            4; --  Bind reuse local address\n+   SO_KEEPALIVE       : constant :=            8; --  Enable keep-alive msgs\n+   SO_LINGER          : constant :=          128; --  Defer close to flush data\n+   SO_ERROR           : constant :=         4103; --  Get/clear error status\n+   SO_BROADCAST       : constant :=           32; --  Can send broadcast msgs\n+   IP_ADD_MEMBERSHIP  : constant :=            5; --  Join a multicast group\n+   IP_DROP_MEMBERSHIP : constant :=            6; --  Leave a multicast group\n+   IP_MULTICAST_TTL   : constant :=            3; --  Set/get multicast TTL\n+   IP_MULTICAST_LOOP  : constant :=            4; --  Set/get mcast loopback\n+\n end GNAT.Sockets.Constants;"}, {"sha": "61903079b82f3fe8923d40dc111604a8028f61e3", "filename": "gcc/ada/3psoccon.ads", "status": "added", "additions": 158, "deletions": 0, "changes": 158, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3psoccon.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3psoccon.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F3psoccon.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -0,0 +1,158 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--               G N A T . S O C K E T S . C O N S T A N T S                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--          Copyright (C) 2000-2003 Free Software Foundation, Inc.          --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This package provides target dependent definitions of constant for use\n+--  by the GNAT.Sockets package (g-socket.ads). This package should not be\n+--  directly with'ed by an applications program.\n+\n+--  This is the version for Interix\n+\n+package GNAT.Sockets.Constants is\n+\n+   --------------\n+   -- Families --\n+   --------------\n+\n+   AF_INET            : constant :=            2; --  IPv4 address family\n+   AF_INET6           : constant :=           -1; --  IPv6 address family\n+\n+   -----------\n+   -- Modes --\n+   -----------\n+\n+   SOCK_STREAM        : constant :=            1; --  Stream socket\n+   SOCK_DGRAM         : constant :=            2; --  Datagram socket\n+\n+   -------------------\n+   -- Socket errors --\n+   -------------------\n+\n+   EACCES             : constant :=           13; --  Permission denied\n+   EADDRINUSE         : constant :=           48; --  Address already in use\n+   EADDRNOTAVAIL      : constant :=           49; --  Cannot assign address\n+   EAFNOSUPPORT       : constant :=           47; --  Addr family not supported\n+   EALREADY           : constant :=           37; --  Operation in progress\n+   EBADF              : constant :=            9; --  Bad file descriptor\n+   ECONNABORTED       : constant :=           53; --  Connection aborted\n+   ECONNREFUSED       : constant :=           61; --  Connection refused\n+   ECONNRESET         : constant :=           54; --  Connection reset by peer\n+   EDESTADDRREQ       : constant :=           82; --  Destination addr required\n+   EFAULT             : constant :=           14; --  Bad address\n+   EHOSTDOWN          : constant :=           64; --  Host is down\n+   EHOSTUNREACH       : constant :=           65; --  No route to host\n+   EINPROGRESS        : constant :=           80; --  Operation now in progress\n+   EINTR              : constant :=            4; --  Interrupted system call\n+   EINVAL             : constant :=           22; --  Invalid argument\n+   EIO                : constant :=            5; --  Input output error\n+   EISCONN            : constant :=           56; --  Socket already connected\n+   ELOOP              : constant :=           62; --  Too many symbolic lynks\n+   EMFILE             : constant :=           24; --  Too many open files\n+   EMSGSIZE           : constant :=           83; --  Message too long\n+   ENAMETOOLONG       : constant :=           38; --  Name too long\n+   ENETDOWN           : constant :=           50; --  Network is down\n+   ENETRESET          : constant :=           52; --  Disconn. on network reset\n+   ENETUNREACH        : constant :=           51; --  Network is unreachable\n+   ENOBUFS            : constant :=           55; --  No buffer space available\n+   ENOPROTOOPT        : constant :=           85; --  Protocol not available\n+   ENOTCONN           : constant :=           57; --  Socket not connected\n+   ENOTSOCK           : constant :=           81; --  Operation on non socket\n+   EOPNOTSUPP         : constant :=           45; --  Operation not supported\n+   EPFNOSUPPORT       : constant :=           46; --  Unknown protocol family\n+   EPROTONOSUPPORT    : constant :=           43; --  Unknown protocol\n+   EPROTOTYPE         : constant :=           84; --  Unknown protocol type\n+   ESHUTDOWN          : constant :=           58; --  Cannot send once shutdown\n+   ESOCKTNOSUPPORT    : constant :=           44; --  Socket type not supported\n+   ETIMEDOUT          : constant :=           60; --  Connection timed out\n+   ETOOMANYREFS       : constant :=           59; --  Too many references\n+   EWOULDBLOCK        : constant :=           11; --  Operation would block\n+\n+   -----------------\n+   -- Host errors --\n+   -----------------\n+\n+   HOST_NOT_FOUND     : constant :=           90; --  Unknown host\n+   TRY_AGAIN          : constant :=           91; --  Host name lookup failure\n+   NO_DATA            : constant :=           93; --  No data record for name\n+   NO_RECOVERY        : constant :=           92; --  Non recoverable errors\n+\n+   -------------------\n+   -- Control flags --\n+   -------------------\n+\n+   FIONBIO            : constant :=  -2147195390; --  Set/clear non-blocking io\n+   FIONREAD           : constant :=   1074030081; --  How many bytes to read\n+\n+   --------------------\n+   -- Shutdown modes --\n+   --------------------\n+\n+   SHUT_RD            : constant :=            0; --  No more recv\n+   SHUT_WR            : constant :=            1; --  No more send\n+   SHUT_RDWR          : constant :=            2; --  No more recv/send\n+\n+   ---------------------\n+   -- Protocol levels --\n+   ---------------------\n+\n+   SOL_SOCKET         : constant :=        65535; --  Options for socket level\n+   IPPROTO_IP         : constant :=            0; --  Dummy protocol for IP\n+   IPPROTO_UDP        : constant :=           17; --  UDP\n+   IPPROTO_TCP        : constant :=            6; --  TCP\n+\n+   -------------------\n+   -- Request flags --\n+   -------------------\n+\n+   MSG_OOB            : constant :=            1; --  Process out-of-band data\n+   MSG_PEEK           : constant :=            2; --  Peek at incoming data\n+   MSG_EOR            : constant :=            8; --  Send end of record\n+   MSG_WAITALL        : constant :=           64; --  Wait for full reception\n+\n+   --------------------\n+   -- Socket options --\n+   --------------------\n+\n+   TCP_NODELAY        : constant :=            1; --  Do not coalesce packets\n+   SO_SNDBUF          : constant :=         4097; --  Set/get send buffer size\n+   SO_RCVBUF          : constant :=         4098; --  Set/get recv buffer size\n+   SO_REUSEADDR       : constant :=            4; --  Bind reuse local address\n+   SO_KEEPALIVE       : constant :=            8; --  Enable keep-alive msgs\n+   SO_LINGER          : constant :=          128; --  Defer close to flush data\n+   SO_ERROR           : constant :=         4103; --  Get/clear error status\n+   SO_BROADCAST       : constant :=           32; --  Can send broadcast msgs\n+   IP_ADD_MEMBERSHIP  : constant :=            5; --  Join a multicast group\n+   IP_DROP_MEMBERSHIP : constant :=            6; --  Leave a multicast group\n+   IP_MULTICAST_TTL   : constant :=            3; --  Set/get multicast TTL\n+   IP_MULTICAST_LOOP  : constant :=            4; --  Set/get mcast loopback\n+\n+end GNAT.Sockets.Constants;"}, {"sha": "1ad58838ca95a2071c3f449208887a7266d35a08", "filename": "gcc/ada/3ssoccon.ads", "status": "modified", "additions": 123, "deletions": 78, "changes": 201, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3ssoccon.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3ssoccon.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F3ssoccon.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---              Copyright (C) 2001 Ada Core Technologies, Inc.              --\n+--          Copyright (C) 2000-2003 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,88 +26,133 @@\n -- however invalidate  any other reasons why  the executable file  might be --\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n--- GNAT is maintained by Ada Core Technologies Inc (http://www.gnat.com).   --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+--  This package provides target dependent definitions of constant for use\n+--  by the GNAT.Sockets package (g-socket.ads). This package should not be\n+--  directly with'ed by an applications program.\n+\n --  This is the version for Solaris\n \n package GNAT.Sockets.Constants is\n \n-   --  Families\n-\n-   AF_INET              : constant :=                2;\n-   AF_INET6             : constant :=               26;\n-\n-   --  Modes\n-\n-   SOCK_STREAM          : constant :=                2;\n-   SOCK_DGRAM           : constant :=                1;\n-\n-   --  Socket Errors\n-\n-   EBADF                : constant :=                9;\n-   ENOTSOCK             : constant :=               95;\n-   ENOTCONN             : constant :=              134;\n-   ENOBUFS              : constant :=              132;\n-   EOPNOTSUPP           : constant :=              122;\n-   EFAULT               : constant :=               14;\n-   EWOULDBLOCK          : constant :=               11;\n-   EADDRNOTAVAIL        : constant :=              126;\n-   EMSGSIZE             : constant :=               97;\n-   EADDRINUSE           : constant :=              125;\n-   EINVAL               : constant :=               22;\n-   EACCES               : constant :=               13;\n-   EAFNOSUPPORT         : constant :=              124;\n-   EISCONN              : constant :=              133;\n-   ETIMEDOUT            : constant :=              145;\n-   ECONNREFUSED         : constant :=              146;\n-   ENETUNREACH          : constant :=              128;\n-   EALREADY             : constant :=              149;\n-   EINPROGRESS          : constant :=              150;\n-   ENOPROTOOPT          : constant :=               99;\n-   EPROTONOSUPPORT      : constant :=              120;\n-   EINTR                : constant :=                4;\n-   EIO                  : constant :=                5;\n-   ESOCKTNOSUPPORT      : constant :=              121;\n-\n-   --  Host Errors\n-\n-   HOST_NOT_FOUND       : constant :=                1;\n-   TRY_AGAIN            : constant :=                2;\n-   NO_ADDRESS           : constant :=                4;\n-   NO_RECOVERY          : constant :=                3;\n-\n-   --  Control Flags\n-\n-   FIONBIO              : constant :=      -2147195266;\n-   FIONREAD             : constant :=       1074030207;\n-\n-   --  Shutdown Modes\n-\n-   SHUT_RD              : constant :=                0;\n-   SHUT_WR              : constant :=                1;\n-   SHUT_RDWR            : constant :=                2;\n-\n-   --  Protocol Levels\n-\n-   SOL_SOCKET           : constant :=            65535;\n-   IPPROTO_IP           : constant :=                0;\n-   IPPROTO_UDP          : constant :=               17;\n-   IPPROTO_TCP          : constant :=                6;\n-\n-   --  Socket Options\n-\n-   TCP_NODELAY          : constant :=                1;\n-   SO_SNDBUF            : constant :=             4097;\n-   SO_RCVBUF            : constant :=             4098;\n-   SO_REUSEADDR         : constant :=                4;\n-   SO_KEEPALIVE         : constant :=                8;\n-   SO_LINGER            : constant :=              128;\n-   SO_ERROR             : constant :=             4103;\n-   SO_BROADCAST         : constant :=               32;\n-   IP_ADD_MEMBERSHIP    : constant :=               19;\n-   IP_DROP_MEMBERSHIP   : constant :=               20;\n-   IP_MULTICAST_TTL     : constant :=               17;\n-   IP_MULTICAST_LOOP    : constant :=               18;\n+   --------------\n+   -- Families --\n+   --------------\n+\n+   AF_INET            : constant :=            2; --  IPv4 address family\n+   AF_INET6           : constant :=           26; --  IPv6 address family\n+\n+   -----------\n+   -- Modes --\n+   -----------\n+\n+   SOCK_STREAM        : constant :=            2; --  Stream socket\n+   SOCK_DGRAM         : constant :=            1; --  Datagram socket\n+\n+   -------------------\n+   -- Socket errors --\n+   -------------------\n+\n+   EACCES             : constant :=           13; --  Permission denied\n+   EADDRINUSE         : constant :=          125; --  Address already in use\n+   EADDRNOTAVAIL      : constant :=          126; --  Cannot assign address\n+   EAFNOSUPPORT       : constant :=          124; --  Addr family not supported\n+   EALREADY           : constant :=          149; --  Operation in progress\n+   EBADF              : constant :=            9; --  Bad file descriptor\n+   ECONNABORTED       : constant :=          130; --  Connection aborted\n+   ECONNREFUSED       : constant :=          146; --  Connection refused\n+   ECONNRESET         : constant :=          131; --  Connection reset by peer\n+   EDESTADDRREQ       : constant :=           96; --  Destination addr required\n+   EFAULT             : constant :=           14; --  Bad address\n+   EHOSTDOWN          : constant :=          147; --  Host is down\n+   EHOSTUNREACH       : constant :=          148; --  No route to host\n+   EINPROGRESS        : constant :=          150; --  Operation now in progress\n+   EINTR              : constant :=            4; --  Interrupted system call\n+   EINVAL             : constant :=           22; --  Invalid argument\n+   EIO                : constant :=            5; --  Input output error\n+   EISCONN            : constant :=          133; --  Socket already connected\n+   ELOOP              : constant :=           90; --  Too many symbolic lynks\n+   EMFILE             : constant :=           24; --  Too many open files\n+   EMSGSIZE           : constant :=           97; --  Message too long\n+   ENAMETOOLONG       : constant :=           78; --  Name too long\n+   ENETDOWN           : constant :=          127; --  Network is down\n+   ENETRESET          : constant :=          129; --  Disconn. on network reset\n+   ENETUNREACH        : constant :=          128; --  Network is unreachable\n+   ENOBUFS            : constant :=          132; --  No buffer space available\n+   ENOPROTOOPT        : constant :=           99; --  Protocol not available\n+   ENOTCONN           : constant :=          134; --  Socket not connected\n+   ENOTSOCK           : constant :=           95; --  Operation on non socket\n+   EOPNOTSUPP         : constant :=          122; --  Operation not supported\n+   EPFNOSUPPORT       : constant :=          123; --  Unknown protocol family\n+   EPROTONOSUPPORT    : constant :=          120; --  Unknown protocol\n+   EPROTOTYPE         : constant :=           98; --  Unknown protocol type\n+   ESHUTDOWN          : constant :=          143; --  Cannot send once shutdown\n+   ESOCKTNOSUPPORT    : constant :=          121; --  Socket type not supported\n+   ETIMEDOUT          : constant :=          145; --  Connection timed out\n+   ETOOMANYREFS       : constant :=          144; --  Too many references\n+   EWOULDBLOCK        : constant :=           11; --  Operation would block\n+\n+   -----------------\n+   -- Host errors --\n+   -----------------\n+\n+   HOST_NOT_FOUND     : constant :=            1; --  Unknown host\n+   TRY_AGAIN          : constant :=            2; --  Host name lookup failure\n+   NO_DATA            : constant :=            4; --  No data record for name\n+   NO_RECOVERY        : constant :=            3; --  Non recoverable errors\n+\n+   -------------------\n+   -- Control flags --\n+   -------------------\n+\n+   FIONBIO            : constant :=  -2147195266; --  Set/clear non-blocking io\n+   FIONREAD           : constant :=   1074030207; --  How many bytes to read\n+\n+   --------------------\n+   -- Shutdown modes --\n+   --------------------\n+\n+   SHUT_RD            : constant :=            0; --  No more recv\n+   SHUT_WR            : constant :=            1; --  No more send\n+   SHUT_RDWR          : constant :=            2; --  No more recv/send\n+\n+   ---------------------\n+   -- Protocol levels --\n+   ---------------------\n+\n+   SOL_SOCKET         : constant :=        65535; --  Options for socket level\n+   IPPROTO_IP         : constant :=            0; --  Dummy protocol for IP\n+   IPPROTO_UDP        : constant :=           17; --  UDP\n+   IPPROTO_TCP        : constant :=            6; --  TCP\n+\n+   -------------------\n+   -- Request flags --\n+   -------------------\n+\n+   MSG_OOB            : constant :=            1; --  Process out-of-band data\n+   MSG_PEEK           : constant :=            2; --  Peek at incoming data\n+   MSG_EOR            : constant :=            8; --  Send end of record\n+   MSG_WAITALL        : constant :=           64; --  Wait for full reception\n+\n+   --------------------\n+   -- Socket options --\n+   --------------------\n+\n+   TCP_NODELAY        : constant :=            1; --  Do not coalesce packets\n+   SO_SNDBUF          : constant :=         4097; --  Set/get send buffer size\n+   SO_RCVBUF          : constant :=         4098; --  Set/get recv buffer size\n+   SO_REUSEADDR       : constant :=            4; --  Bind reuse local address\n+   SO_KEEPALIVE       : constant :=            8; --  Enable keep-alive msgs\n+   SO_LINGER          : constant :=          128; --  Defer close to flush data\n+   SO_ERROR           : constant :=         4103; --  Get/clear error status\n+   SO_BROADCAST       : constant :=           32; --  Can send broadcast msgs\n+   IP_ADD_MEMBERSHIP  : constant :=           19; --  Join a multicast group\n+   IP_DROP_MEMBERSHIP : constant :=           20; --  Leave a multicast group\n+   IP_MULTICAST_TTL   : constant :=           17; --  Set/get multicast TTL\n+   IP_MULTICAST_LOOP  : constant :=           18; --  Set/get mcast loopback\n+\n end GNAT.Sockets.Constants;"}, {"sha": "18b7abb7e63dccba62b2fd00b598999db609dc6f", "filename": "gcc/ada/3ssoliop.ads", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3ssoliop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3ssoliop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F3ssoliop.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---              Copyright (C) 2001 Ada Core Technologies, Inc.              --\n+--            Copyright (C) 2001-2003 Ada Core Technologies, Inc.           --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,17 +26,18 @@\n -- however invalidate  any other reasons why  the executable file  might be --\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n--- GNAT is maintained by Ada Core Technologies Inc (http://www.gnat.com).   --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-package GNAT.Sockets.Linker_Options is\n+--  This package is used to provide target specific linker_options for the\n+--  support of scokets as required by the package GNAT.Sockets.\n \n-   --  This is the Solaris version of this package.\n+--  This is the UnixWare version of this package\n \n+package GNAT.Sockets.Linker_Options is\n private\n-\n    pragma Linker_Options (\"-lnsl\");\n    pragma Linker_Options (\"-lsocket\");\n-\n end GNAT.Sockets.Linker_Options;"}, {"sha": "2c31a28e299157df700327486c67e5aa626efbef", "filename": "gcc/ada/3veacodu.adb", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3veacodu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3veacodu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F3veacodu.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -0,0 +1,73 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--      G N A T . E X C E P T I O N _ A C T I O N S . C O R E _ D U M P     --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--            Copyright (C) 2003 Free Software Foundation, Inc.             --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This is the VMS version.\n+\n+with System;\n+with System.Aux_DEC;\n+separate (GNAT.Exception_Actions)\n+procedure Core_Dump (Occurrence : Exception_Occurrence) is\n+\n+   use System;\n+   use System.Aux_DEC;\n+\n+   pragma Unreferenced (Occurrence);\n+\n+   SS_IMGDMP : constant := 1276;\n+\n+   subtype Cond_Value_Type is Unsigned_Longword;\n+   subtype Access_Mode_Type is\n+      Unsigned_Word range 0 .. 3;\n+   Access_Mode_Zero : constant Access_Mode_Type := 0;\n+\n+   Status : Cond_Value_Type;\n+\n+   procedure Setexv (\n+     Status : out Cond_Value_Type;\n+     Vector : in  Unsigned_Longword := 0;\n+     Addres : in  Address           := Address_Zero;\n+     Acmode : in  Access_Mode_Type  := Access_Mode_Zero;\n+     Prvhnd : in  Unsigned_Longword := 0);\n+   pragma Interface (External, Setexv);\n+   pragma Import_Valued_Procedure (Setexv, \"SYS$SETEXV\",\n+     (Cond_Value_Type, Unsigned_Longword, Address, Access_Mode_Type,\n+      Unsigned_Longword),\n+     (Value, Value, Value, Value, Value));\n+\n+   procedure Lib_Signal (I : in Integer);\n+   pragma Interface (C, Lib_Signal);\n+   pragma Import_Procedure (Lib_Signal, \"LIB$SIGNAL\", Mechanism => (Value));\n+begin\n+   Setexv (Status, 1, Address_Zero, 3);\n+   Lib_Signal (SS_IMGDMP);\n+end Core_Dump;"}, {"sha": "fd239a5286c42338f828f594d5b90d1e538c0f2b", "filename": "gcc/ada/3vexpect.adb", "status": "added", "additions": 1187, "deletions": 0, "changes": 1187, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3vexpect.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3vexpect.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F3vexpect.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -0,0 +1,1187 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT LIBRARY COMPONENTS                          --\n+--                                                                          --\n+--                          G N A T . E X P E C T                           --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--             Copyright (C) 2002-2003 Ada Core Technologies, Inc.          --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This is the VMS version.\n+\n+with System;        use System;\n+with Ada.Calendar;  use Ada.Calendar;\n+\n+with GNAT.IO;\n+with GNAT.OS_Lib;   use GNAT.OS_Lib;\n+with GNAT.Regpat;   use GNAT.Regpat;\n+\n+with Unchecked_Deallocation;\n+\n+package body GNAT.Expect is\n+\n+   type Array_Of_Pd is array (Positive range <>) of Process_Descriptor_Access;\n+\n+   Save_Input  : File_Descriptor;\n+   Save_Output : File_Descriptor;\n+   Save_Error  : File_Descriptor;\n+\n+   procedure Expect_Internal\n+     (Descriptors : in out Array_Of_Pd;\n+      Result      : out Expect_Match;\n+      Timeout     : Integer;\n+      Full_Buffer : Boolean);\n+   --  Internal function used to read from the process Descriptor.\n+   --\n+   --  Three outputs are possible:\n+   --     Result=Expect_Timeout, if no output was available before the timeout\n+   --        expired.\n+   --     Result=Expect_Full_Buffer, if Full_Buffer is True and some characters\n+   --        had to be discarded from the internal buffer of Descriptor.\n+   --     Result=<integer>, indicates how many characters were added to the\n+   --        internal buffer. These characters are from indexes\n+   --        Descriptor.Buffer_Index - Result + 1 .. Descriptor.Buffer_Index\n+   --  Process_Died is raised if the process is no longer valid.\n+\n+   procedure Reinitialize_Buffer\n+     (Descriptor : in out Process_Descriptor'Class);\n+   --  Reinitialize the internal buffer.\n+   --  The buffer is deleted up to the end of the last match.\n+\n+   procedure Free is new Unchecked_Deallocation\n+     (Pattern_Matcher, Pattern_Matcher_Access);\n+\n+   procedure Call_Filters\n+     (Pid       : Process_Descriptor'Class;\n+      Str       : String;\n+      Filter_On : Filter_Type);\n+   --  Call all the filters that have the appropriate type.\n+   --  This function does nothing if the filters are locked\n+\n+   ------------------------------\n+   -- Target dependent section --\n+   ------------------------------\n+\n+   function Dup (Fd : File_Descriptor) return File_Descriptor;\n+   pragma Import (C, Dup);\n+\n+   procedure Dup2 (Old_Fd, New_Fd : File_Descriptor);\n+   pragma Import (C, Dup2);\n+\n+   procedure Kill (Pid : Process_Id; Sig_Num : Integer);\n+   pragma Import (C, Kill);\n+\n+   function Create_Pipe (Pipe : access Pipe_Type) return Integer;\n+   pragma Import (C, Create_Pipe, \"__gnat_pipe\");\n+\n+   function Poll\n+     (Fds     : System.Address;\n+      Num_Fds : Integer;\n+      Timeout : Integer;\n+      Is_Set  : System.Address)\n+      return    Integer;\n+   pragma Import (C, Poll, \"__gnat_expect_poll\");\n+   --  Check whether there is any data waiting on the file descriptor\n+   --  Out_fd, and wait if there is none, at most Timeout milliseconds\n+   --  Returns -1 in case of error, 0 if the timeout expired before\n+   --  data became available.\n+   --\n+   --  Out_Is_Set is set to 1 if data was available, 0 otherwise.\n+\n+   function Waitpid (Pid : Process_Id) return Integer;\n+   pragma Import (C, Waitpid, \"__gnat_waitpid\");\n+   --  Wait for a specific process id, and return its exit code.\n+\n+   ---------\n+   -- \"+\" --\n+   ---------\n+\n+   function \"+\" (S : String) return GNAT.OS_Lib.String_Access is\n+   begin\n+      return new String'(S);\n+   end \"+\";\n+\n+   ---------\n+   -- \"+\" --\n+   ---------\n+\n+   function \"+\"\n+     (P    : GNAT.Regpat.Pattern_Matcher)\n+      return Pattern_Matcher_Access\n+   is\n+   begin\n+      return new GNAT.Regpat.Pattern_Matcher'(P);\n+   end \"+\";\n+\n+   ----------------\n+   -- Add_Filter --\n+   ----------------\n+\n+   procedure Add_Filter\n+     (Descriptor : in out Process_Descriptor;\n+      Filter     : Filter_Function;\n+      Filter_On  : Filter_Type := Output;\n+      User_Data  : System.Address := System.Null_Address;\n+      After      : Boolean := False)\n+   is\n+      Current : Filter_List := Descriptor.Filters;\n+\n+   begin\n+      if After then\n+         while Current /= null and then Current.Next /= null loop\n+            Current := Current.Next;\n+         end loop;\n+\n+         if Current = null then\n+            Descriptor.Filters :=\n+              new Filter_List_Elem'\n+               (Filter => Filter, Filter_On => Filter_On,\n+                User_Data => User_Data, Next => null);\n+         else\n+            Current.Next :=\n+              new Filter_List_Elem'\n+              (Filter => Filter, Filter_On => Filter_On,\n+               User_Data => User_Data, Next => null);\n+         end if;\n+\n+      else\n+         Descriptor.Filters :=\n+           new Filter_List_Elem'\n+             (Filter => Filter, Filter_On => Filter_On,\n+              User_Data => User_Data, Next => Descriptor.Filters);\n+      end if;\n+   end Add_Filter;\n+\n+   ------------------\n+   -- Call_Filters --\n+   ------------------\n+\n+   procedure Call_Filters\n+     (Pid       : Process_Descriptor'Class;\n+      Str       : String;\n+      Filter_On : Filter_Type)\n+   is\n+      Current_Filter  : Filter_List;\n+\n+   begin\n+      if Pid.Filters_Lock = 0 then\n+         Current_Filter := Pid.Filters;\n+\n+         while Current_Filter /= null loop\n+            if Current_Filter.Filter_On = Filter_On then\n+               Current_Filter.Filter\n+                 (Pid, Str, Current_Filter.User_Data);\n+            end if;\n+\n+            Current_Filter := Current_Filter.Next;\n+         end loop;\n+      end if;\n+   end Call_Filters;\n+\n+   -----------\n+   -- Close --\n+   -----------\n+\n+   procedure Close\n+     (Descriptor : in out Process_Descriptor;\n+      Status     : out Integer)\n+   is\n+   begin\n+      Close (Descriptor.Input_Fd);\n+\n+      if Descriptor.Error_Fd /= Descriptor.Output_Fd then\n+         Close (Descriptor.Error_Fd);\n+      end if;\n+\n+      Close (Descriptor.Output_Fd);\n+\n+      --  ??? Should have timeouts for different signals\n+      Kill (Descriptor.Pid, 9);\n+\n+      GNAT.OS_Lib.Free (Descriptor.Buffer);\n+      Descriptor.Buffer_Size := 0;\n+\n+      Status := Waitpid (Descriptor.Pid);\n+   end Close;\n+\n+   procedure Close (Descriptor : in out Process_Descriptor) is\n+      Status : Integer;\n+   begin\n+      Close (Descriptor, Status);\n+   end Close;\n+\n+   ------------\n+   -- Expect --\n+   ------------\n+\n+   procedure Expect\n+     (Descriptor  : in out Process_Descriptor;\n+      Result      : out Expect_Match;\n+      Regexp      : String;\n+      Timeout     : Integer := 10000;\n+      Full_Buffer : Boolean := False)\n+   is\n+   begin\n+      if Regexp = \"\" then\n+         Expect (Descriptor, Result, Never_Match, Timeout, Full_Buffer);\n+      else\n+         Expect (Descriptor, Result, Compile (Regexp), Timeout, Full_Buffer);\n+      end if;\n+   end Expect;\n+\n+   procedure Expect\n+     (Descriptor  : in out Process_Descriptor;\n+      Result      : out Expect_Match;\n+      Regexp      : String;\n+      Matched     : out GNAT.Regpat.Match_Array;\n+      Timeout     : Integer := 10000;\n+      Full_Buffer : Boolean := False)\n+   is\n+   begin\n+      pragma Assert (Matched'First = 0);\n+      if Regexp = \"\" then\n+         Expect\n+           (Descriptor, Result, Never_Match, Matched, Timeout, Full_Buffer);\n+      else\n+         Expect\n+           (Descriptor, Result, Compile (Regexp), Matched, Timeout,\n+            Full_Buffer);\n+      end if;\n+   end Expect;\n+\n+   procedure Expect\n+     (Descriptor  : in out Process_Descriptor;\n+      Result      : out Expect_Match;\n+      Regexp      : GNAT.Regpat.Pattern_Matcher;\n+      Timeout     : Integer := 10000;\n+      Full_Buffer : Boolean := False)\n+   is\n+      Matched : GNAT.Regpat.Match_Array (0 .. 0);\n+\n+   begin\n+      Expect (Descriptor, Result, Regexp, Matched, Timeout, Full_Buffer);\n+   end Expect;\n+\n+   procedure Expect\n+     (Descriptor  : in out Process_Descriptor;\n+      Result      : out Expect_Match;\n+      Regexp      : GNAT.Regpat.Pattern_Matcher;\n+      Matched     : out GNAT.Regpat.Match_Array;\n+      Timeout     : Integer := 10000;\n+      Full_Buffer : Boolean := False)\n+   is\n+      N           : Expect_Match;\n+      Descriptors : Array_Of_Pd := (1 => Descriptor'Unrestricted_Access);\n+      Try_Until   : constant Time := Clock + Duration (Timeout) / 1000.0;\n+      Timeout_Tmp : Integer := Timeout;\n+\n+   begin\n+      pragma Assert (Matched'First = 0);\n+      Reinitialize_Buffer (Descriptor);\n+\n+      loop\n+         --  First, test if what is already in the buffer matches (This is\n+         --  required if this package is used in multi-task mode, since one of\n+         --  the tasks might have added something in the buffer, and we don't\n+         --  want other tasks to wait for new input to be available before\n+         --  checking the regexps).\n+\n+         Match\n+           (Regexp, Descriptor.Buffer (1 .. Descriptor.Buffer_Index), Matched);\n+\n+         if Descriptor.Buffer_Index >= 1 and then Matched (0).First /= 0 then\n+            Result := 1;\n+            Descriptor.Last_Match_Start := Matched (0).First;\n+            Descriptor.Last_Match_End := Matched (0).Last;\n+            return;\n+         end if;\n+\n+         --  Else try to read new input\n+\n+         Expect_Internal (Descriptors, N, Timeout_Tmp, Full_Buffer);\n+\n+         if N = Expect_Timeout or else N = Expect_Full_Buffer then\n+            Result := N;\n+            return;\n+         end if;\n+\n+         --  Calculate the timeout for the next turn.\n+         --  Note that Timeout is, from the caller's perspective, the maximum\n+         --  time until a match, not the maximum time until some output is\n+         --  read, and thus can not be reused as is for Expect_Internal.\n+\n+         if Timeout /= -1 then\n+            Timeout_Tmp := Integer (Try_Until - Clock) * 1000;\n+\n+            if Timeout_Tmp < 0 then\n+               Result := Expect_Timeout;\n+               exit;\n+            end if;\n+         end if;\n+      end loop;\n+\n+      --  Even if we had the general timeout above, we have to test that the\n+      --  last test we read from the external process didn't match.\n+\n+      Match\n+        (Regexp, Descriptor.Buffer (1 .. Descriptor.Buffer_Index), Matched);\n+\n+      if Matched (0).First /= 0 then\n+         Result := 1;\n+         Descriptor.Last_Match_Start := Matched (0).First;\n+         Descriptor.Last_Match_End := Matched (0).Last;\n+         return;\n+      end if;\n+   end Expect;\n+\n+   procedure Expect\n+     (Descriptor  : in out Process_Descriptor;\n+      Result      : out Expect_Match;\n+      Regexps     : Regexp_Array;\n+      Timeout     : Integer := 10000;\n+      Full_Buffer : Boolean := False)\n+   is\n+      Patterns : Compiled_Regexp_Array (Regexps'Range);\n+      Matched  : GNAT.Regpat.Match_Array (0 .. 0);\n+\n+   begin\n+      for J in Regexps'Range loop\n+         Patterns (J) := new Pattern_Matcher'(Compile (Regexps (J).all));\n+      end loop;\n+\n+      Expect (Descriptor, Result, Patterns, Matched, Timeout, Full_Buffer);\n+\n+      for J in Regexps'Range loop\n+         Free (Patterns (J));\n+      end loop;\n+   end Expect;\n+\n+   procedure Expect\n+     (Descriptor  : in out Process_Descriptor;\n+      Result      : out Expect_Match;\n+      Regexps     : Compiled_Regexp_Array;\n+      Timeout     : Integer := 10000;\n+      Full_Buffer : Boolean := False)\n+   is\n+      Matched : GNAT.Regpat.Match_Array (0 .. 0);\n+\n+   begin\n+      Expect (Descriptor, Result, Regexps, Matched, Timeout, Full_Buffer);\n+   end Expect;\n+\n+   procedure Expect\n+     (Result      : out Expect_Match;\n+      Regexps     : Multiprocess_Regexp_Array;\n+      Timeout     : Integer := 10000;\n+      Full_Buffer : Boolean := False)\n+   is\n+      Matched : GNAT.Regpat.Match_Array (0 .. 0);\n+\n+   begin\n+      Expect (Result, Regexps, Matched, Timeout, Full_Buffer);\n+   end Expect;\n+\n+   procedure Expect\n+     (Descriptor  : in out Process_Descriptor;\n+      Result      : out Expect_Match;\n+      Regexps     : Regexp_Array;\n+      Matched     : out GNAT.Regpat.Match_Array;\n+      Timeout     : Integer := 10000;\n+      Full_Buffer : Boolean := False)\n+   is\n+      Patterns : Compiled_Regexp_Array (Regexps'Range);\n+\n+   begin\n+      pragma Assert (Matched'First = 0);\n+\n+      for J in Regexps'Range loop\n+         Patterns (J) := new Pattern_Matcher'(Compile (Regexps (J).all));\n+      end loop;\n+\n+      Expect (Descriptor, Result, Patterns, Matched, Timeout, Full_Buffer);\n+\n+      for J in Regexps'Range loop\n+         Free (Patterns (J));\n+      end loop;\n+   end Expect;\n+\n+   procedure Expect\n+     (Descriptor  : in out Process_Descriptor;\n+      Result      : out Expect_Match;\n+      Regexps     : Compiled_Regexp_Array;\n+      Matched     : out GNAT.Regpat.Match_Array;\n+      Timeout     : Integer := 10000;\n+      Full_Buffer : Boolean := False)\n+   is\n+      N           : Expect_Match;\n+      Descriptors : Array_Of_Pd := (1 => Descriptor'Unrestricted_Access);\n+\n+   begin\n+      pragma Assert (Matched'First = 0);\n+\n+      Reinitialize_Buffer (Descriptor);\n+\n+      loop\n+         --  First, test if what is already in the buffer matches (This is\n+         --  required if this package is used in multi-task mode, since one of\n+         --  the tasks might have added something in the buffer, and we don't\n+         --  want other tasks to wait for new input to be available before\n+         --  checking the regexps).\n+\n+         if Descriptor.Buffer /= null then\n+            for J in Regexps'Range loop\n+               Match\n+                 (Regexps (J).all,\n+                  Descriptor.Buffer (1 .. Descriptor.Buffer_Index),\n+                  Matched);\n+\n+               if Matched (0) /= No_Match then\n+                  Result := Expect_Match (J);\n+                  Descriptor.Last_Match_Start := Matched (0).First;\n+                  Descriptor.Last_Match_End := Matched (0).Last;\n+                  return;\n+               end if;\n+            end loop;\n+         end if;\n+\n+         Expect_Internal (Descriptors, N, Timeout, Full_Buffer);\n+\n+         if N = Expect_Timeout or else N = Expect_Full_Buffer then\n+            Result := N;\n+            return;\n+         end if;\n+      end loop;\n+   end Expect;\n+\n+   procedure Expect\n+     (Result      : out Expect_Match;\n+      Regexps     : Multiprocess_Regexp_Array;\n+      Matched     : out GNAT.Regpat.Match_Array;\n+      Timeout     : Integer := 10000;\n+      Full_Buffer : Boolean := False)\n+   is\n+      N           : Expect_Match;\n+      Descriptors : Array_Of_Pd (Regexps'Range);\n+\n+   begin\n+      pragma Assert (Matched'First = 0);\n+\n+      for J in Descriptors'Range loop\n+         Descriptors (J) := Regexps (J).Descriptor;\n+         Reinitialize_Buffer (Regexps (J).Descriptor.all);\n+      end loop;\n+\n+      loop\n+         --  First, test if what is already in the buffer matches (This is\n+         --  required if this package is used in multi-task mode, since one of\n+         --  the tasks might have added something in the buffer, and we don't\n+         --  want other tasks to wait for new input to be available before\n+         --  checking the regexps).\n+\n+         for J in Regexps'Range loop\n+            Match (Regexps (J).Regexp.all,\n+                   Regexps (J).Descriptor.Buffer\n+                     (1 .. Regexps (J).Descriptor.Buffer_Index),\n+                   Matched);\n+\n+            if Matched (0) /= No_Match then\n+               Result := Expect_Match (J);\n+               Regexps (J).Descriptor.Last_Match_Start := Matched (0).First;\n+               Regexps (J).Descriptor.Last_Match_End := Matched (0).Last;\n+               return;\n+            end if;\n+         end loop;\n+\n+         Expect_Internal (Descriptors, N, Timeout, Full_Buffer);\n+\n+         if N = Expect_Timeout or else N = Expect_Full_Buffer then\n+            Result := N;\n+            return;\n+         end if;\n+      end loop;\n+   end Expect;\n+\n+   ---------------------\n+   -- Expect_Internal --\n+   ---------------------\n+\n+   procedure Expect_Internal\n+     (Descriptors : in out Array_Of_Pd;\n+      Result      : out Expect_Match;\n+      Timeout     : Integer;\n+      Full_Buffer : Boolean)\n+   is\n+      Num_Descriptors : Integer;\n+      Buffer_Size     : Integer := 0;\n+\n+      N : Integer;\n+\n+      type File_Descriptor_Array is\n+        array (Descriptors'Range) of File_Descriptor;\n+      Fds : aliased File_Descriptor_Array;\n+\n+      type Integer_Array is array (Descriptors'Range) of Integer;\n+      Is_Set : aliased Integer_Array;\n+\n+   begin\n+      for J in Descriptors'Range loop\n+         Fds (J) := Descriptors (J).Output_Fd;\n+\n+         if Descriptors (J).Buffer_Size = 0 then\n+            Buffer_Size := Integer'Max (Buffer_Size, 4096);\n+         else\n+            Buffer_Size :=\n+              Integer'Max (Buffer_Size, Descriptors (J).Buffer_Size);\n+         end if;\n+      end loop;\n+\n+      declare\n+         Buffer : aliased String (1 .. Buffer_Size);\n+         --  Buffer used for input. This is allocated only once, not for\n+         --  every iteration of the loop\n+\n+      begin\n+         --  Loop until we match or we have a timeout\n+\n+         loop\n+            Num_Descriptors :=\n+              Poll (Fds'Address, Fds'Length, Timeout, Is_Set'Address);\n+\n+            case Num_Descriptors is\n+\n+               --  Error?\n+\n+               when -1 =>\n+                  raise Process_Died;\n+\n+               --  Timeout?\n+\n+               when 0  =>\n+                  Result := Expect_Timeout;\n+                  return;\n+\n+               --  Some input\n+\n+               when others =>\n+                  for J in Descriptors'Range loop\n+                     if Is_Set (J) = 1 then\n+                        Buffer_Size := Descriptors (J).Buffer_Size;\n+\n+                        if Buffer_Size = 0 then\n+                           Buffer_Size := 4096;\n+                        end if;\n+\n+                        N := Read (Descriptors (J).Output_Fd, Buffer'Address,\n+                                   Buffer_Size);\n+\n+                        --  Error or End of file\n+\n+                        if N <= 0 then\n+                           --  ??? Note that ddd tries again up to three times\n+                           --  in that case. See LiterateA.C:174\n+                           raise Process_Died;\n+\n+                        else\n+                           --  If there is no limit to the buffer size\n+\n+                           if Descriptors (J).Buffer_Size = 0 then\n+\n+                              declare\n+                                 Tmp : String_Access := Descriptors (J).Buffer;\n+\n+                              begin\n+                                 if Tmp /= null then\n+                                    Descriptors (J).Buffer :=\n+                                      new String (1 .. Tmp'Length + N);\n+                                    Descriptors (J).Buffer (1 .. Tmp'Length) :=\n+                                      Tmp.all;\n+                                    Descriptors (J).Buffer\n+                                      (Tmp'Length + 1 .. Tmp'Length + N) :=\n+                                      Buffer (1 .. N);\n+                                    Free (Tmp);\n+                                    Descriptors (J).Buffer_Index :=\n+                                      Descriptors (J).Buffer'Last;\n+\n+                                 else\n+                                    Descriptors (J).Buffer :=\n+                                      new String (1 .. N);\n+                                    Descriptors (J).Buffer.all :=\n+                                      Buffer (1 .. N);\n+                                    Descriptors (J).Buffer_Index := N;\n+                                 end if;\n+                              end;\n+\n+                           else\n+                              --  Add what we read to the buffer\n+\n+                              if Descriptors (J).Buffer_Index + N - 1 >\n+                                Descriptors (J).Buffer_Size\n+                              then\n+                                 --  If the user wants to know when we have\n+                                 --  read more than the buffer can contain.\n+\n+                                 if Full_Buffer then\n+                                    Result := Expect_Full_Buffer;\n+                                    return;\n+                                 end if;\n+\n+                                 --  Keep as much as possible from the buffer,\n+                                 --  and forget old characters.\n+\n+                                 Descriptors (J).Buffer\n+                                   (1 .. Descriptors (J).Buffer_Size - N) :=\n+                                  Descriptors (J).Buffer\n+                                   (N - Descriptors (J).Buffer_Size +\n+                                    Descriptors (J).Buffer_Index + 1 ..\n+                                    Descriptors (J).Buffer_Index);\n+                                 Descriptors (J).Buffer_Index :=\n+                                   Descriptors (J).Buffer_Size - N;\n+                              end if;\n+\n+                              --  Keep what we read in the buffer.\n+\n+                              Descriptors (J).Buffer\n+                                (Descriptors (J).Buffer_Index + 1 ..\n+                                 Descriptors (J).Buffer_Index + N) :=\n+                                Buffer (1 .. N);\n+                              Descriptors (J).Buffer_Index :=\n+                                Descriptors (J).Buffer_Index + N;\n+                           end if;\n+\n+                           --  Call each of the output filter with what we\n+                           --  read.\n+\n+                           Call_Filters\n+                             (Descriptors (J).all, Buffer (1 .. N), Output);\n+\n+                           Result := Expect_Match (N);\n+                           return;\n+                        end if;\n+                     end if;\n+                  end loop;\n+            end case;\n+         end loop;\n+      end;\n+   end Expect_Internal;\n+\n+   ----------------\n+   -- Expect_Out --\n+   ----------------\n+\n+   function Expect_Out (Descriptor : Process_Descriptor) return String is\n+   begin\n+      return Descriptor.Buffer (1 .. Descriptor.Last_Match_End);\n+   end Expect_Out;\n+\n+   ----------------------\n+   -- Expect_Out_Match --\n+   ----------------------\n+\n+   function Expect_Out_Match (Descriptor : Process_Descriptor) return String is\n+   begin\n+      return Descriptor.Buffer\n+        (Descriptor.Last_Match_Start .. Descriptor.Last_Match_End);\n+   end Expect_Out_Match;\n+\n+   -----------\n+   -- Flush --\n+   -----------\n+\n+   procedure Flush\n+     (Descriptor : in out Process_Descriptor;\n+      Timeout    : Integer := 0)\n+   is\n+      Buffer_Size     : constant Integer := 8192;\n+      Num_Descriptors : Integer;\n+      N               : Integer;\n+      Is_Set          : aliased Integer;\n+      Buffer          : aliased String (1 .. Buffer_Size);\n+\n+   begin\n+      --  Empty the current buffer\n+\n+      Descriptor.Last_Match_End := Descriptor.Buffer_Index;\n+      Reinitialize_Buffer (Descriptor);\n+\n+      --  Read everything from the process to flush its output\n+\n+      loop\n+         Num_Descriptors :=\n+           Poll (Descriptor.Output_Fd'Address, 1, Timeout, Is_Set'Address);\n+\n+         case Num_Descriptors is\n+\n+            --  Error ?\n+\n+            when -1 =>\n+               raise Process_Died;\n+\n+            --  Timeout => End of flush\n+\n+            when 0  =>\n+               return;\n+\n+            --  Some input\n+\n+            when others =>\n+               if Is_Set = 1 then\n+                  N := Read (Descriptor.Output_Fd, Buffer'Address,\n+                             Buffer_Size);\n+\n+                  if N = -1 then\n+                     raise Process_Died;\n+                  elsif N = 0 then\n+                     return;\n+                  end if;\n+               end if;\n+         end case;\n+      end loop;\n+\n+   end Flush;\n+\n+   ------------------\n+   -- Get_Error_Fd --\n+   ------------------\n+\n+   function Get_Error_Fd\n+     (Descriptor : Process_Descriptor)\n+      return       GNAT.OS_Lib.File_Descriptor\n+   is\n+   begin\n+      return Descriptor.Error_Fd;\n+   end Get_Error_Fd;\n+\n+   ------------------\n+   -- Get_Input_Fd --\n+   ------------------\n+\n+   function Get_Input_Fd\n+     (Descriptor : Process_Descriptor)\n+      return       GNAT.OS_Lib.File_Descriptor\n+   is\n+   begin\n+      return Descriptor.Input_Fd;\n+   end Get_Input_Fd;\n+\n+   -------------------\n+   -- Get_Output_Fd --\n+   -------------------\n+\n+   function Get_Output_Fd\n+     (Descriptor : Process_Descriptor)\n+      return       GNAT.OS_Lib.File_Descriptor\n+   is\n+   begin\n+      return Descriptor.Output_Fd;\n+   end Get_Output_Fd;\n+\n+   -------------\n+   -- Get_Pid --\n+   -------------\n+\n+   function Get_Pid\n+     (Descriptor : Process_Descriptor)\n+      return       Process_Id\n+   is\n+   begin\n+      return Descriptor.Pid;\n+   end Get_Pid;\n+\n+   ---------------\n+   -- Interrupt --\n+   ---------------\n+\n+   procedure Interrupt (Descriptor : in out Process_Descriptor) is\n+      SIGINT : constant := 2;\n+\n+   begin\n+      Send_Signal (Descriptor, SIGINT);\n+   end Interrupt;\n+\n+   ------------------\n+   -- Lock_Filters --\n+   ------------------\n+\n+   procedure Lock_Filters (Descriptor : in out Process_Descriptor) is\n+   begin\n+      Descriptor.Filters_Lock := Descriptor.Filters_Lock + 1;\n+   end Lock_Filters;\n+\n+   ------------------------\n+   -- Non_Blocking_Spawn --\n+   ------------------------\n+\n+   procedure Non_Blocking_Spawn\n+     (Descriptor  : out Process_Descriptor'Class;\n+      Command     : String;\n+      Args        : GNAT.OS_Lib.Argument_List;\n+      Buffer_Size : Natural := 4096;\n+      Err_To_Out  : Boolean := False)\n+   is\n+      function Alloc_Vfork_Blocks return Integer;\n+      pragma Import (C, Alloc_Vfork_Blocks, \"decc$$alloc_vfork_blocks\");\n+\n+      function Get_Vfork_Jmpbuf return System.Address;\n+      pragma Import (C, Get_Vfork_Jmpbuf, \"decc$$get_vfork_jmpbuf\");\n+\n+      function Get_Current_Invo_Context (Addr : System.Address)\n+        return Process_Id;\n+      pragma Import (C, Get_Current_Invo_Context,\n+        \"LIB$GET_CURRENT_INVO_CONTEXT\");\n+\n+      Pipe1, Pipe2, Pipe3 : aliased Pipe_Type;\n+\n+      Arg      : String_Access;\n+      Arg_List : aliased array (1 .. Args'Length + 2) of System.Address;\n+\n+      Command_With_Path : String_Access;\n+\n+   begin\n+      --  Create the rest of the pipes\n+\n+      Set_Up_Communications\n+        (Descriptor, Err_To_Out, Pipe1'Access, Pipe2'Access, Pipe3'Access);\n+\n+      Command_With_Path := Locate_Exec_On_Path (Command);\n+\n+      if Command_With_Path = null then\n+         raise Invalid_Process;\n+      end if;\n+\n+      --  Fork a new process. It's not possible to do this in a subprogram.\n+\n+      if Alloc_Vfork_Blocks >= 0 then\n+         Descriptor.Pid := Get_Current_Invo_Context (Get_Vfork_Jmpbuf);\n+      else\n+         Descriptor.Pid := -1;\n+      end if;\n+\n+      --  Are we now in the child (or, for Windows, still in the common\n+      --  process).\n+\n+      if Descriptor.Pid = Null_Pid then\n+         --  Prepare an array of arguments to pass to C\n+\n+         Arg   := new String (1 .. Command_With_Path'Length + 1);\n+         Arg (1 .. Command_With_Path'Length) := Command_With_Path.all;\n+         Arg (Arg'Last)        := ASCII.Nul;\n+         Arg_List (1)          := Arg.all'Address;\n+\n+         for J in Args'Range loop\n+            Arg                     := new String (1 .. Args (J)'Length + 1);\n+            Arg (1 .. Args (J)'Length)  := Args (J).all;\n+            Arg (Arg'Last)              := ASCII.Nul;\n+            Arg_List (J + 2 - Args'First) := Arg.all'Address;\n+         end loop;\n+\n+         Arg_List (Arg_List'Last) := System.Null_Address;\n+\n+         --  This does not return on Unix systems\n+\n+         Set_Up_Child_Communications\n+           (Descriptor, Pipe1, Pipe2, Pipe3, Command_With_Path.all,\n+            Arg_List'Address);\n+      end if;\n+\n+      Free (Command_With_Path);\n+\n+      --  Did we have an error when spawning the child ?\n+\n+      if Descriptor.Pid < Null_Pid then\n+         raise Invalid_Process;\n+      else\n+         --  We are now in the parent process\n+\n+         Set_Up_Parent_Communications (Descriptor, Pipe1, Pipe2, Pipe3);\n+      end if;\n+\n+      --  Create the buffer\n+\n+      Descriptor.Buffer_Size := Buffer_Size;\n+\n+      if Buffer_Size /= 0 then\n+         Descriptor.Buffer := new String (1 .. Positive (Buffer_Size));\n+      end if;\n+   end Non_Blocking_Spawn;\n+\n+   -------------------------\n+   -- Reinitialize_Buffer --\n+   -------------------------\n+\n+   procedure Reinitialize_Buffer\n+     (Descriptor : in out Process_Descriptor'Class)\n+   is\n+   begin\n+      if Descriptor.Buffer_Size = 0 then\n+         declare\n+            Tmp : String_Access := Descriptor.Buffer;\n+\n+         begin\n+            Descriptor.Buffer :=\n+              new String\n+                (1 .. Descriptor.Buffer_Index - Descriptor.Last_Match_End);\n+\n+            if Tmp /= null then\n+               Descriptor.Buffer.all := Tmp\n+                 (Descriptor.Last_Match_End + 1 .. Descriptor.Buffer_Index);\n+               Free (Tmp);\n+            end if;\n+         end;\n+\n+         Descriptor.Buffer_Index := Descriptor.Buffer'Last;\n+\n+      else\n+         Descriptor.Buffer\n+           (1 .. Descriptor.Buffer_Index - Descriptor.Last_Match_End) :=\n+             Descriptor.Buffer\n+               (Descriptor.Last_Match_End + 1 .. Descriptor.Buffer_Index);\n+\n+         if Descriptor.Buffer_Index > Descriptor.Last_Match_End then\n+            Descriptor.Buffer_Index :=\n+              Descriptor.Buffer_Index - Descriptor.Last_Match_End;\n+         else\n+            Descriptor.Buffer_Index := 0;\n+         end if;\n+      end if;\n+\n+      Descriptor.Last_Match_Start := 0;\n+      Descriptor.Last_Match_End := 0;\n+   end Reinitialize_Buffer;\n+\n+   -------------------\n+   -- Remove_Filter --\n+   -------------------\n+\n+   procedure Remove_Filter\n+     (Descriptor : in out Process_Descriptor;\n+      Filter     : Filter_Function)\n+   is\n+      Previous : Filter_List := null;\n+      Current  : Filter_List := Descriptor.Filters;\n+\n+   begin\n+      while Current /= null loop\n+         if Current.Filter = Filter then\n+            if Previous = null then\n+               Descriptor.Filters := Current.Next;\n+            else\n+               Previous.Next := Current.Next;\n+            end if;\n+         end if;\n+\n+         Previous := Current;\n+         Current := Current.Next;\n+      end loop;\n+   end Remove_Filter;\n+\n+   ----------\n+   -- Send --\n+   ----------\n+\n+   procedure Send\n+     (Descriptor : in out Process_Descriptor;\n+      Str        : String;\n+      Add_LF     : Boolean := True;\n+      Empty_Buffer : Boolean := False)\n+   is\n+      N           : Natural;\n+      Full_Str    : constant String := Str & ASCII.LF;\n+      Last        : Natural;\n+      Result      : Expect_Match;\n+      Descriptors : Array_Of_Pd := (1 => Descriptor'Unrestricted_Access);\n+\n+   begin\n+      if Empty_Buffer then\n+\n+         --  Force a read on the process if there is anything waiting.\n+\n+         Expect_Internal (Descriptors, Result,\n+                          Timeout => 0, Full_Buffer => False);\n+         Descriptor.Last_Match_End := Descriptor.Buffer_Index;\n+\n+         --  Empty the buffer\n+\n+         Reinitialize_Buffer (Descriptor);\n+      end if;\n+\n+      if Add_LF then\n+         Last := Full_Str'Last;\n+      else\n+         Last := Full_Str'Last - 1;\n+      end if;\n+\n+      Call_Filters (Descriptor, Full_Str (Full_Str'First .. Last), Input);\n+\n+      N := Write (Descriptor.Input_Fd,\n+                  Full_Str'Address,\n+                  Last - Full_Str'First + 1);\n+   end Send;\n+\n+   -----------------\n+   -- Send_Signal --\n+   -----------------\n+\n+   procedure Send_Signal\n+     (Descriptor : Process_Descriptor;\n+      Signal     : Integer)\n+   is\n+   begin\n+      Kill (Descriptor.Pid, Signal);\n+      --  ??? Need to check process status here.\n+   end Send_Signal;\n+\n+   ---------------------------------\n+   -- Set_Up_Child_Communications --\n+   ---------------------------------\n+\n+   procedure Set_Up_Child_Communications\n+     (Pid   : in out Process_Descriptor;\n+      Pipe1 : in out Pipe_Type;\n+      Pipe2 : in out Pipe_Type;\n+      Pipe3 : in out Pipe_Type;\n+      Cmd   : in String;\n+      Args  : in System.Address)\n+   is\n+      pragma Warnings (Off, Pid);\n+\n+   begin\n+      --  Since the code between fork and exec on VMS executes\n+      --  in the context of the parent process, we need to\n+      --  perform the following actions:\n+      --    - save stdin, stdout, stderr\n+      --    - replace them by our pipes\n+      --    - create the child with process handle inheritance\n+      --    - revert to the previous stdin, stdout and stderr.\n+\n+      Save_Input  := Dup (GNAT.OS_Lib.Standin);\n+      Save_Output := Dup (GNAT.OS_Lib.Standout);\n+      Save_Error  := Dup (GNAT.OS_Lib.Standerr);\n+\n+      --  Since we are still called from the parent process, there is no way\n+      --  currently we can cleanly close the unneeded ends of the pipes, but\n+      --  this doesn't really matter.\n+      --  We could close Pipe1.Output, Pipe2.Input, Pipe3.Input.\n+\n+      Dup2 (Pipe1.Input,  GNAT.OS_Lib.Standin);\n+      Dup2 (Pipe2.Output, GNAT.OS_Lib.Standout);\n+      Dup2 (Pipe3.Output, GNAT.OS_Lib.Standerr);\n+\n+      Portable_Execvp (Pid.Pid'Access, Cmd & ASCII.Nul, Args);\n+\n+   end Set_Up_Child_Communications;\n+\n+   ---------------------------\n+   -- Set_Up_Communications --\n+   ---------------------------\n+\n+   procedure Set_Up_Communications\n+     (Pid        : in out Process_Descriptor;\n+      Err_To_Out : Boolean;\n+      Pipe1      : access Pipe_Type;\n+      Pipe2      : access Pipe_Type;\n+      Pipe3      : access Pipe_Type)\n+   is\n+   begin\n+      --  Create the pipes\n+\n+      if Create_Pipe (Pipe1) /= 0 then\n+         return;\n+      end if;\n+\n+      if Create_Pipe (Pipe2) /= 0 then\n+         return;\n+      end if;\n+\n+      Pid.Input_Fd  := Pipe1.Output;\n+      Pid.Output_Fd := Pipe2.Input;\n+\n+      if Err_To_Out then\n+         Pipe3.all := Pipe2.all;\n+      else\n+         if Create_Pipe (Pipe3) /= 0 then\n+            return;\n+         end if;\n+      end if;\n+\n+      Pid.Error_Fd := Pipe3.Input;\n+   end Set_Up_Communications;\n+\n+   ----------------------------------\n+   -- Set_Up_Parent_Communications --\n+   ----------------------------------\n+\n+   procedure Set_Up_Parent_Communications\n+     (Pid   : in out Process_Descriptor;\n+      Pipe1 : in out Pipe_Type;\n+      Pipe2 : in out Pipe_Type;\n+      Pipe3 : in out Pipe_Type)\n+   is\n+      pragma Warnings (Off, Pid);\n+\n+   begin\n+\n+      Dup2 (Save_Input,  GNAT.OS_Lib.Standin);\n+      Dup2 (Save_Output, GNAT.OS_Lib.Standout);\n+      Dup2 (Save_Error,  GNAT.OS_Lib.Standerr);\n+\n+      Close (Save_Input);\n+      Close (Save_Output);\n+      Close (Save_Error);\n+\n+      Close (Pipe1.Input);\n+      Close (Pipe2.Output);\n+      Close (Pipe3.Output);\n+   end Set_Up_Parent_Communications;\n+\n+   ------------------\n+   -- Trace_Filter --\n+   ------------------\n+\n+   procedure Trace_Filter\n+     (Descriptor : Process_Descriptor'Class;\n+      Str        : String;\n+      User_Data  : System.Address := System.Null_Address)\n+   is\n+      pragma Warnings (Off, Descriptor);\n+      pragma Warnings (Off, User_Data);\n+\n+   begin\n+      GNAT.IO.Put (Str);\n+   end Trace_Filter;\n+\n+   --------------------\n+   -- Unlock_Filters --\n+   --------------------\n+\n+   procedure Unlock_Filters (Descriptor : in out Process_Descriptor) is\n+   begin\n+      if Descriptor.Filters_Lock > 0 then\n+         Descriptor.Filters_Lock := Descriptor.Filters_Lock - 1;\n+      end if;\n+   end Unlock_Filters;\n+\n+end GNAT.Expect;"}, {"sha": "76b2051e07c583758bf6e6237ac89d41796f4104", "filename": "gcc/ada/3vsoccon.ads", "status": "added", "additions": 158, "deletions": 0, "changes": 158, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3vsoccon.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3vsoccon.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F3vsoccon.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -0,0 +1,158 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--               G N A T . S O C K E T S . C O N S T A N T S                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--          Copyright (C) 2000-2003 Free Software Foundation, Inc.          --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This package provides target dependent definitions of constant for use\n+--  by the GNAT.Sockets package (g-socket.ads). This package should not be\n+--  directly with'ed by an applications program.\n+\n+--  This is the version for Alpha/VMS\n+\n+package GNAT.Sockets.Constants is\n+\n+   --------------\n+   -- Families --\n+   --------------\n+\n+   AF_INET            : constant :=            2; --  IPv4 address family\n+   AF_INET6           : constant :=           26; --  IPv6 address family\n+\n+   -----------\n+   -- Modes --\n+   -----------\n+\n+   SOCK_STREAM        : constant :=            1; --  Stream socket\n+   SOCK_DGRAM         : constant :=            2; --  Datagram socket\n+\n+   -------------------\n+   -- Socket errors --\n+   -------------------\n+\n+   EACCES             : constant :=           13; --  Permission denied\n+   EADDRINUSE         : constant :=           48; --  Address already in use\n+   EADDRNOTAVAIL      : constant :=           49; --  Cannot assign address\n+   EAFNOSUPPORT       : constant :=           47; --  Addr family not supported\n+   EALREADY           : constant :=           37; --  Operation in progress\n+   EBADF              : constant :=            9; --  Bad file descriptor\n+   ECONNABORTED       : constant :=           53; --  Connection aborted\n+   ECONNREFUSED       : constant :=           61; --  Connection refused\n+   ECONNRESET         : constant :=           54; --  Connection reset by peer\n+   EDESTADDRREQ       : constant :=           39; --  Destination addr required\n+   EFAULT             : constant :=           45; --  Bad address\n+   EHOSTDOWN          : constant :=           64; --  Host is down\n+   EHOSTUNREACH       : constant :=           65; --  No route to host\n+   EINPROGRESS        : constant :=           36; --  Operation now in progress\n+   EINTR              : constant :=            4; --  Interrupted system call\n+   EINVAL             : constant :=           22; --  Invalid argument\n+   EIO                : constant :=            5; --  Input output error\n+   EISCONN            : constant :=           56; --  Socket already connected\n+   ELOOP              : constant :=           62; --  Too many symbolic lynks\n+   EMFILE             : constant :=           24; --  Too many open files\n+   EMSGSIZE           : constant :=           40; --  Message too long\n+   ENAMETOOLONG       : constant :=           63; --  Name too long\n+   ENETDOWN           : constant :=           50; --  Network is down\n+   ENETRESET          : constant :=           52; --  Disconn. on network reset\n+   ENETUNREACH        : constant :=           51; --  Network is unreachable\n+   ENOBUFS            : constant :=           55; --  No buffer space available\n+   ENOPROTOOPT        : constant :=           42; --  Protocol not available\n+   ENOTCONN           : constant :=           57; --  Socket not connected\n+   ENOTSOCK           : constant :=           38; --  Operation on non socket\n+   EOPNOTSUPP         : constant :=           95; --  Operation not supported\n+   EPFNOSUPPORT       : constant :=           46; --  Unknown protocol family\n+   EPROTONOSUPPORT    : constant :=           43; --  Unknown protocol\n+   EPROTOTYPE         : constant :=           41; --  Unknown protocol type\n+   ESHUTDOWN          : constant :=           58; --  Cannot send once shutdown\n+   ESOCKTNOSUPPORT    : constant :=           44; --  Socket type not supported\n+   ETIMEDOUT          : constant :=           60; --  Connection timed out\n+   ETOOMANYREFS       : constant :=           59; --  Too many references\n+   EWOULDBLOCK        : constant :=           35; --  Operation would block\n+\n+   -----------------\n+   -- Host errors --\n+   -----------------\n+\n+   HOST_NOT_FOUND     : constant :=            1; --  Unknown host\n+   TRY_AGAIN          : constant :=            2; --  Host name lookup failure\n+   NO_DATA            : constant :=            4; --  No data record for name\n+   NO_RECOVERY        : constant :=            3; --  Non recoverable errors\n+\n+   -------------------\n+   -- Control flags --\n+   -------------------\n+\n+   FIONBIO            : constant :=  -2147195266; --  Set/clear non-blocking io\n+   FIONREAD           : constant :=   1074030207; --  How many bytes to read\n+\n+   --------------------\n+   -- Shutdown modes --\n+   --------------------\n+\n+   SHUT_RD            : constant :=            0; --  No more recv\n+   SHUT_WR            : constant :=            1; --  No more send\n+   SHUT_RDWR          : constant :=            2; --  No more recv/send\n+\n+   ---------------------\n+   -- Protocol levels --\n+   ---------------------\n+\n+   SOL_SOCKET         : constant :=     16#FFFF#; --  Options for socket level\n+   IPPROTO_IP         : constant :=            0; --  Dummy protocol for IP\n+   IPPROTO_UDP        : constant :=           17; --  UDP\n+   IPPROTO_TCP        : constant :=            6; --  TCP\n+\n+   -------------------\n+   -- Request flags --\n+   -------------------\n+\n+   MSG_OOB            : constant :=            1; --  Process out-of-band data\n+   MSG_PEEK           : constant :=            2; --  Peek at incoming data\n+   MSG_EOR            : constant :=            8; --  Send end of record\n+   MSG_WAITALL        : constant :=           64; --  Wait for full reception\n+\n+   --------------------\n+   -- Socket options --\n+   --------------------\n+\n+   TCP_NODELAY        : constant :=            1; --  Do not coalesce packets\n+   SO_SNDBUF          : constant :=     16#1001#; --  Set/get send buffer size\n+   SO_RCVBUF          : constant :=     16#1002#; --  Set/get recv buffer size\n+   SO_REUSEADDR       : constant :=     16#0004#; --  Bind reuse local address\n+   SO_KEEPALIVE       : constant :=     16#0008#; --  Enable keep-alive msgs\n+   SO_LINGER          : constant :=     16#0080#; --  Defer close to flush data\n+   SO_ERROR           : constant :=     16#1007#; --  Get/clear error status\n+   SO_BROADCAST       : constant :=     16#0020#; --  Can send broadcast msgs\n+   IP_ADD_MEMBERSHIP  : constant :=           12; --  Join a multicast group\n+   IP_DROP_MEMBERSHIP : constant :=           13; --  Leave a multicast group\n+   IP_MULTICAST_TTL   : constant :=           10; --  Set/get multicast TTL\n+   IP_MULTICAST_LOOP  : constant :=           11; --  Set/get mcast loopback\n+\n+end GNAT.Sockets.Constants;"}, {"sha": "94bfccb1b7a7ece1649e906c41fe6c8cb67181d7", "filename": "gcc/ada/3vsocthi.adb", "status": "added", "additions": 577, "deletions": 0, "changes": 577, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3vsocthi.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3vsocthi.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F3vsocthi.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -0,0 +1,577 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--                    G N A T . S O C K E T S . T H I N                     --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--              Copyright (C) 2001-2003 Ada Core Technologies, Inc.         --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  Temporary version for Alpha/VMS.\n+\n+with GNAT.OS_Lib; use GNAT.OS_Lib;\n+with GNAT.Task_Lock;\n+\n+with Interfaces.C; use Interfaces.C;\n+\n+package body GNAT.Sockets.Thin is\n+\n+   Non_Blocking_Sockets : constant Fd_Set_Access\n+     := New_Socket_Set (No_Socket_Set);\n+   --  When this package is initialized with Process_Blocking_IO set\n+   --  to True, sockets are set in non-blocking mode to avoid blocking\n+   --  the whole process when a thread wants to perform a blocking IO\n+   --  operation. But the user can also set a socket in non-blocking\n+   --  mode by purpose. In order to make a difference between these\n+   --  two situations, we track the origin of non-blocking mode in\n+   --  Non_Blocking_Sockets. If S is in Non_Blocking_Sockets, it has\n+   --  been set in non-blocking mode by the user.\n+\n+   Quantum : constant Duration := 0.2;\n+   --  When Thread_Blocking_IO is False, we set sockets in\n+   --  non-blocking mode and we spend a period of time Quantum between\n+   --  two attempts on a blocking operation.\n+\n+   Thread_Blocking_IO : Boolean := True;\n+\n+   function Syscall_Accept\n+     (S       : C.int;\n+      Addr    : System.Address;\n+      Addrlen : access C.int)\n+      return    C.int;\n+   pragma Import (C, Syscall_Accept, \"accept\");\n+\n+   function Syscall_Connect\n+     (S       : C.int;\n+      Name    : System.Address;\n+      Namelen : C.int)\n+      return    C.int;\n+   pragma Import (C, Syscall_Connect, \"connect\");\n+\n+   function Syscall_Ioctl\n+     (S    : C.int;\n+      Req  : C.int;\n+      Arg  : Int_Access)\n+      return C.int;\n+   pragma Import (C, Syscall_Ioctl, \"ioctl\");\n+\n+   function Syscall_Recv\n+     (S     : C.int;\n+      Msg   : System.Address;\n+      Len   : C.int;\n+      Flags : C.int)\n+      return  C.int;\n+   pragma Import (C, Syscall_Recv, \"recv\");\n+\n+   function Syscall_Recvfrom\n+     (S       : C.int;\n+      Msg     : System.Address;\n+      Len     : C.int;\n+      Flags   : C.int;\n+      From    : Sockaddr_In_Access;\n+      Fromlen : access C.int)\n+      return    C.int;\n+   pragma Import (C, Syscall_Recvfrom, \"recvfrom\");\n+\n+   function Syscall_Send\n+     (S     : C.int;\n+      Msg   : System.Address;\n+      Len   : C.int;\n+      Flags : C.int)\n+      return  C.int;\n+   pragma Import (C, Syscall_Send, \"send\");\n+\n+   function Syscall_Sendto\n+     (S     : C.int;\n+      Msg   : System.Address;\n+      Len   : C.int;\n+      Flags : C.int;\n+      To    : Sockaddr_In_Access;\n+      Tolen : C.int)\n+      return  C.int;\n+   pragma Import (C, Syscall_Sendto, \"sendto\");\n+\n+   function Syscall_Socket\n+     (Domain, Typ, Protocol : C.int)\n+      return C.int;\n+   pragma Import (C, Syscall_Socket, \"socket\");\n+\n+   function  Non_Blocking_Socket (S : C.int) return Boolean;\n+   procedure Set_Non_Blocking_Socket (S : C.int; V : Boolean);\n+\n+   --------------\n+   -- C_Accept --\n+   --------------\n+\n+   function C_Accept\n+     (S       : C.int;\n+      Addr    : System.Address;\n+      Addrlen : access C.int)\n+      return    C.int\n+   is\n+      R   : C.int;\n+      Val : aliased C.int := 1;\n+\n+      Discard : C.int;\n+      pragma Warnings (Off, Discard);\n+\n+   begin\n+      loop\n+         R := Syscall_Accept (S, Addr, Addrlen);\n+         exit when Thread_Blocking_IO\n+           or else R /= Failure\n+           or else Non_Blocking_Socket (S)\n+           or else Errno /= Constants.EWOULDBLOCK;\n+         delay Quantum;\n+      end loop;\n+\n+      if not Thread_Blocking_IO\n+        and then R /= Failure\n+      then\n+         --  A socket inherits the properties ot its server especially\n+         --  the FIONBIO flag. Do not use C_Ioctl as this subprogram\n+         --  tracks sockets set in non-blocking mode by user.\n+\n+         Set_Non_Blocking_Socket (R, Non_Blocking_Socket (S));\n+         Discard := Syscall_Ioctl (R, Constants.FIONBIO, Val'Unchecked_Access);\n+      end if;\n+\n+      return R;\n+   end C_Accept;\n+\n+   ---------------\n+   -- C_Connect --\n+   ---------------\n+\n+   function C_Connect\n+     (S       : C.int;\n+      Name    : System.Address;\n+      Namelen : C.int)\n+      return    C.int\n+   is\n+      Res : C.int;\n+\n+   begin\n+      Res := Syscall_Connect (S, Name, Namelen);\n+\n+      if Thread_Blocking_IO\n+        or else Res /= Failure\n+        or else Non_Blocking_Socket (S)\n+        or else Errno /= Constants.EINPROGRESS\n+      then\n+         return Res;\n+      end if;\n+\n+      declare\n+         WSet : Fd_Set_Access;\n+         Now  : aliased Timeval;\n+\n+      begin\n+         WSet := New_Socket_Set (No_Socket_Set);\n+         loop\n+            Insert_Socket_In_Set (WSet, S);\n+            Now := Immediat;\n+            Res := C_Select\n+              (S + 1,\n+               No_Fd_Set,\n+               WSet,\n+               No_Fd_Set,\n+               Now'Unchecked_Access);\n+\n+            exit when Res > 0;\n+\n+            if Res = Failure then\n+               Free_Socket_Set (WSet);\n+               return Res;\n+            end if;\n+\n+            delay Quantum;\n+         end loop;\n+\n+         Free_Socket_Set (WSet);\n+      end;\n+\n+      Res := Syscall_Connect (S, Name, Namelen);\n+\n+      if Res = Failure\n+        and then Errno = Constants.EISCONN\n+      then\n+         return Thin.Success;\n+      else\n+         return Res;\n+      end if;\n+   end C_Connect;\n+\n+   -------------\n+   -- C_Ioctl --\n+   -------------\n+\n+   function C_Ioctl\n+     (S    : C.int;\n+      Req  : C.int;\n+      Arg  : Int_Access)\n+      return C.int\n+   is\n+   begin\n+      if not Thread_Blocking_IO\n+        and then Req = Constants.FIONBIO\n+      then\n+         if Arg.all /= 0 then\n+            Set_Non_Blocking_Socket (S, True);\n+         end if;\n+      end if;\n+\n+      return Syscall_Ioctl (S, Req, Arg);\n+   end C_Ioctl;\n+\n+   ------------\n+   -- C_Recv --\n+   ------------\n+\n+   function C_Recv\n+     (S     : C.int;\n+      Msg   : System.Address;\n+      Len   : C.int;\n+      Flags : C.int)\n+      return  C.int\n+   is\n+      Res : C.int;\n+\n+   begin\n+      loop\n+         Res := Syscall_Recv (S, Msg, Len, Flags);\n+         exit when Thread_Blocking_IO\n+           or else Res /= Failure\n+           or else Non_Blocking_Socket (S)\n+           or else Errno /= Constants.EWOULDBLOCK;\n+         delay Quantum;\n+      end loop;\n+\n+      return Res;\n+   end C_Recv;\n+\n+   ----------------\n+   -- C_Recvfrom --\n+   ----------------\n+\n+   function C_Recvfrom\n+     (S       : C.int;\n+      Msg     : System.Address;\n+      Len     : C.int;\n+      Flags   : C.int;\n+      From    : Sockaddr_In_Access;\n+      Fromlen : access C.int)\n+      return    C.int\n+   is\n+      Res : C.int;\n+\n+   begin\n+      loop\n+         Res := Syscall_Recvfrom (S, Msg, Len, Flags, From, Fromlen);\n+         exit when Thread_Blocking_IO\n+           or else Res /= Failure\n+           or else Non_Blocking_Socket (S)\n+           or else Errno /= Constants.EWOULDBLOCK;\n+         delay Quantum;\n+      end loop;\n+\n+      return Res;\n+   end C_Recvfrom;\n+\n+   ------------\n+   -- C_Send --\n+   ------------\n+\n+   function C_Send\n+     (S     : C.int;\n+      Msg   : System.Address;\n+      Len   : C.int;\n+      Flags : C.int)\n+      return  C.int\n+   is\n+      Res : C.int;\n+\n+   begin\n+      loop\n+         Res := Syscall_Send (S, Msg, Len, Flags);\n+         exit when Thread_Blocking_IO\n+           or else Res /= Failure\n+           or else Non_Blocking_Socket (S)\n+           or else Errno /= Constants.EWOULDBLOCK;\n+         delay Quantum;\n+      end loop;\n+\n+      return Res;\n+   end C_Send;\n+\n+   --------------\n+   -- C_Sendto --\n+   --------------\n+\n+   function C_Sendto\n+     (S     : C.int;\n+      Msg   : System.Address;\n+      Len   : C.int;\n+      Flags : C.int;\n+      To    : Sockaddr_In_Access;\n+      Tolen : C.int)\n+      return  C.int\n+   is\n+      Res : C.int;\n+\n+   begin\n+      loop\n+         Res := Syscall_Sendto (S, Msg, Len, Flags, To, Tolen);\n+         exit when Thread_Blocking_IO\n+           or else Res /= Failure\n+           or else Non_Blocking_Socket (S)\n+           or else Errno /= Constants.EWOULDBLOCK;\n+         delay Quantum;\n+      end loop;\n+\n+      return Res;\n+   end C_Sendto;\n+\n+   --------------\n+   -- C_Socket --\n+   --------------\n+\n+   function C_Socket\n+     (Domain   : C.int;\n+      Typ      : C.int;\n+      Protocol : C.int)\n+      return     C.int\n+   is\n+      R   : C.int;\n+      Val : aliased C.int := 1;\n+\n+      Discard : C.int;\n+      pragma Unreferenced (Discard);\n+\n+   begin\n+      R := Syscall_Socket (Domain, Typ, Protocol);\n+\n+      if not Thread_Blocking_IO\n+        and then R /= Failure\n+      then\n+         --  Do not use C_Ioctl as this subprogram tracks sockets set\n+         --  in non-blocking mode by user.\n+\n+         Discard := Syscall_Ioctl (R, Constants.FIONBIO, Val'Unchecked_Access);\n+         Set_Non_Blocking_Socket (R, False);\n+      end if;\n+\n+      return R;\n+   end C_Socket;\n+\n+   --------------\n+   -- Finalize --\n+   --------------\n+\n+   procedure Finalize is\n+   begin\n+      null;\n+   end Finalize;\n+\n+   ----------------\n+   -- Initialize --\n+   ----------------\n+\n+   procedure Initialize (Process_Blocking_IO : Boolean) is\n+   begin\n+      Thread_Blocking_IO := not Process_Blocking_IO;\n+   end Initialize;\n+\n+   -------------------------\n+   -- Non_Blocking_Socket --\n+   -------------------------\n+\n+   function Non_Blocking_Socket (S : C.int) return Boolean is\n+      R : Boolean;\n+\n+   begin\n+      Task_Lock.Lock;\n+      R := Is_Socket_In_Set (Non_Blocking_Sockets, S);\n+      Task_Lock.Unlock;\n+      return R;\n+   end Non_Blocking_Socket;\n+\n+   -----------------\n+   -- Set_Address --\n+   -----------------\n+\n+   procedure Set_Address\n+     (Sin     : Sockaddr_In_Access;\n+      Address : In_Addr)\n+   is\n+   begin\n+      Sin.Sin_Addr   := Address;\n+   end Set_Address;\n+\n+   ----------------\n+   -- Set_Family --\n+   ----------------\n+\n+   procedure Set_Family\n+     (Sin    : Sockaddr_In_Access;\n+      Family : C.int)\n+   is\n+   begin\n+      Sin.Sin_Family := C.unsigned_short (Family);\n+   end Set_Family;\n+\n+   ----------------\n+   -- Set_Length --\n+   ----------------\n+\n+   procedure Set_Length\n+     (Sin : Sockaddr_In_Access;\n+      Len : C.int)\n+   is\n+      pragma Unreferenced (Sin);\n+      pragma Unreferenced (Len);\n+\n+   begin\n+      null;\n+   end Set_Length;\n+\n+   -----------------------------\n+   -- Set_Non_Blocking_Socket --\n+   -----------------------------\n+\n+   procedure Set_Non_Blocking_Socket (S : C.int; V : Boolean) is\n+   begin\n+      Task_Lock.Lock;\n+\n+      if V then\n+         Insert_Socket_In_Set (Non_Blocking_Sockets, S);\n+      else\n+         Remove_Socket_From_Set (Non_Blocking_Sockets, S);\n+      end if;\n+\n+      Task_Lock.Unlock;\n+   end Set_Non_Blocking_Socket;\n+\n+   --------------\n+   -- Set_Port --\n+   --------------\n+\n+   procedure Set_Port\n+     (Sin  : Sockaddr_In_Access;\n+      Port : C.unsigned_short)\n+   is\n+   begin\n+      Sin.Sin_Port   := Port;\n+   end Set_Port;\n+\n+   --------------------------\n+   -- Socket_Error_Message --\n+   --------------------------\n+\n+   function Socket_Error_Message (Errno : Integer) return String is\n+      use type Interfaces.C.Strings.chars_ptr;\n+\n+      C_Msg : C.Strings.chars_ptr;\n+\n+   begin\n+      C_Msg := C_Strerror (C.int (Errno));\n+\n+      if C_Msg = C.Strings.Null_Ptr then\n+         return \"Unknown system error\";\n+\n+      else\n+         return C.Strings.Value (C_Msg);\n+      end if;\n+   end Socket_Error_Message;\n+\n+   -------------\n+   -- C_Readv --\n+   -------------\n+\n+   function C_Readv\n+     (Fd     : C.int;\n+      Iov    : System.Address;\n+      Iovcnt : C.int)\n+      return  C.int\n+   is\n+      Res : C.int;\n+      Count : C.int := 0;\n+\n+      Iovec : array (0 .. Iovcnt - 1) of Vector_Element;\n+      for Iovec'Address use Iov;\n+      pragma Import (Ada, Iovec);\n+\n+   begin\n+      for J in Iovec'Range loop\n+         Res := C_Read\n+           (Fd,\n+            Iovec (J).Base.all'Address,\n+            Interfaces.C.int (Iovec (J).Length));\n+\n+         if Res < 0 then\n+            return Res;\n+         else\n+            Count := Count + Res;\n+         end if;\n+      end loop;\n+      return Count;\n+   end C_Readv;\n+\n+   --------------\n+   -- C_Writev --\n+   --------------\n+\n+   function C_Writev\n+     (Fd     : C.int;\n+      Iov    : System.Address;\n+      Iovcnt : C.int)\n+      return  C.int\n+   is\n+      Res : C.int;\n+      Count : C.int := 0;\n+\n+      Iovec : array (0 .. Iovcnt - 1) of Vector_Element;\n+      for Iovec'Address use Iov;\n+      pragma Import (Ada, Iovec);\n+\n+   begin\n+      for J in Iovec'Range loop\n+         Res := C_Write\n+           (Fd,\n+            Iovec (J).Base.all'Address,\n+            Interfaces.C.int (Iovec (J).Length));\n+\n+         if Res < 0 then\n+            return Res;\n+         else\n+            Count := Count + Res;\n+         end if;\n+      end loop;\n+      return Count;\n+   end C_Writev;\n+\n+end GNAT.Sockets.Thin;"}, {"sha": "62a1d0825640bf830ce5bf26f0bd5db226ce1e74", "filename": "gcc/ada/3vsocthi.ads", "status": "added", "additions": 445, "deletions": 0, "changes": 445, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3vsocthi.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3vsocthi.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F3vsocthi.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -0,0 +1,445 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--                    G N A T . S O C K E T S . T H I N                     --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--            Copyright (C) 2002-2003 Ada Core Technologies, Inc.           --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This package provides a target dependent thin interface to the sockets\n+--  layer for use by the GNAT.Sockets package (g-socket.ads). This package\n+--  should not be directly with'ed by an applications program.\n+\n+--  This is the Alpha/VMS version.\n+\n+with Interfaces.C.Pointers;\n+\n+with Interfaces.C.Strings;\n+with GNAT.Sockets.Constants;\n+with GNAT.OS_Lib;\n+\n+with System;\n+\n+package GNAT.Sockets.Thin is\n+\n+   --  ??? more comments needed ???\n+\n+   package C renames Interfaces.C;\n+\n+   use type C.int;\n+   --  This is so we can declare the Failure constant below\n+\n+   Success : constant C.int :=  0;\n+   Failure : constant C.int := -1;\n+\n+   function Socket_Errno return Integer renames GNAT.OS_Lib.Errno;\n+   --  Returns last socket error number.\n+\n+   function Socket_Error_Message (Errno : Integer) return String;\n+   --  Returns the error message string for the error number Errno. If\n+   --  Errno is not known it returns \"Unknown system error\".\n+\n+   subtype Fd_Set_Access is System.Address;\n+   No_Fd_Set : constant Fd_Set_Access := System.Null_Address;\n+\n+   type Timeval_Unit is new C.int;\n+   pragma Convention (C, Timeval_Unit);\n+\n+   type Timeval is record\n+      Tv_Sec  : Timeval_Unit;\n+      Tv_Usec : Timeval_Unit;\n+   end record;\n+   pragma Convention (C, Timeval);\n+\n+   type Timeval_Access is access all Timeval;\n+   pragma Convention (C, Timeval_Access);\n+\n+   Immediat : constant Timeval := (0, 0);\n+\n+   type Int_Access is access all C.int;\n+   pragma Convention (C, Int_Access);\n+   --  Access to C integers\n+\n+   type Chars_Ptr_Array is array (C.size_t range <>) of\n+     aliased C.Strings.chars_ptr;\n+\n+   package Chars_Ptr_Pointers is\n+      new C.Pointers (C.size_t, C.Strings.chars_ptr, Chars_Ptr_Array,\n+                      C.Strings.Null_Ptr);\n+   --  Arrays of C (char *)\n+\n+   type In_Addr is record\n+      S_B1, S_B2, S_B3, S_B4 : C.unsigned_char;\n+   end record;\n+   pragma Convention (C, In_Addr);\n+   --  Internet address\n+\n+   type In_Addr_Access is access all In_Addr;\n+   pragma Convention (C, In_Addr_Access);\n+   --  Access to internet address\n+\n+   Inaddr_Any : aliased constant In_Addr := (others => 0);\n+   --  Any internet address (all the interfaces)\n+\n+   type In_Addr_Access_Array is array (C.size_t range <>)\n+     of aliased In_Addr_Access;\n+   pragma Convention (C, In_Addr_Access_Array);\n+\n+   package In_Addr_Access_Pointers is\n+     new C.Pointers (C.size_t, In_Addr_Access, In_Addr_Access_Array, null);\n+   --  Array of internet addresses\n+\n+   type Sockaddr is record\n+      Sa_Family : C.unsigned_short;\n+      Sa_Data   : C.char_array (1 .. 14);\n+   end record;\n+   pragma Convention (C, Sockaddr);\n+   --  Socket address\n+\n+   type Sockaddr_Access is access all Sockaddr;\n+   pragma Convention (C, Sockaddr_Access);\n+   --  Access to socket address\n+\n+   type Sockaddr_In is record\n+      Sin_Family : C.unsigned_short      := Constants.AF_INET;\n+      Sin_Port   : C.unsigned_short      := 0;\n+      Sin_Addr   : In_Addr               := Inaddr_Any;\n+      Sin_Zero   : C.char_array (1 .. 8) := (others => C.char'Val (0));\n+   end record;\n+   pragma Convention (C, Sockaddr_In);\n+   --  Internet socket address\n+\n+   type Sockaddr_In_Access is access all Sockaddr_In;\n+   pragma Convention (C, Sockaddr_In_Access);\n+   --  Access to internet socket address\n+\n+   procedure Set_Length\n+     (Sin : Sockaddr_In_Access;\n+      Len : C.int);\n+   pragma Inline (Set_Length);\n+   --  Set Sin.Sin_Length to Len.\n+   --  On this platform, nothing is done as there is no such field.\n+\n+   procedure Set_Family\n+     (Sin    : Sockaddr_In_Access;\n+      Family : C.int);\n+   pragma Inline (Set_Family);\n+   --  Set Sin.Sin_Family to Family\n+\n+   procedure Set_Port\n+     (Sin     : Sockaddr_In_Access;\n+      Port    : C.unsigned_short);\n+   pragma Inline (Set_Port);\n+   --  Set Sin.Sin_Port to Port\n+\n+   procedure Set_Address\n+     (Sin     : Sockaddr_In_Access;\n+      Address : In_Addr);\n+   pragma Inline (Set_Address);\n+   --  Set Sin.Sin_Addr to Address\n+\n+   type Hostent is record\n+      H_Name      : C.Strings.chars_ptr;\n+      H_Aliases   : Chars_Ptr_Pointers.Pointer;\n+      H_Addrtype  : C.int;\n+      H_Length    : C.int;\n+      H_Addr_List : In_Addr_Access_Pointers.Pointer;\n+   end record;\n+   pragma Convention (C, Hostent);\n+   --  Host entry\n+\n+   type Hostent_Access is access all Hostent;\n+   pragma Convention (C, Hostent_Access);\n+   --  Access to host entry\n+\n+   type Servent is record\n+      S_Name    : C.Strings.chars_ptr;\n+      S_Aliases : Chars_Ptr_Pointers.Pointer;\n+      S_Port    : C.int;\n+      S_Proto   : C.Strings.chars_ptr;\n+   end record;\n+   pragma Convention (C, Servent);\n+   --  Service entry\n+\n+   type Servent_Access is access all Servent;\n+   pragma Convention (C, Servent_Access);\n+   --  Access to service entry\n+\n+   type Two_Int is array (0 .. 1) of C.int;\n+   pragma Convention (C, Two_Int);\n+   --  Used with pipe()\n+\n+   function C_Accept\n+     (S       : C.int;\n+      Addr    : System.Address;\n+      Addrlen : access C.int)\n+      return    C.int;\n+\n+   function C_Bind\n+     (S       : C.int;\n+      Name    : System.Address;\n+      Namelen : C.int)\n+      return    C.int;\n+\n+   function C_Close\n+     (Fd   : C.int)\n+      return C.int;\n+\n+   function C_Connect\n+     (S       : C.int;\n+      Name    : System.Address;\n+      Namelen : C.int)\n+      return    C.int;\n+\n+   function C_Gethostbyaddr\n+     (Addr : System.Address;\n+      Len  : C.int;\n+      Typ  : C.int)\n+      return Hostent_Access;\n+\n+   function C_Gethostbyname\n+     (Name : C.char_array)\n+      return Hostent_Access;\n+\n+   function C_Gethostname\n+     (Name    : System.Address;\n+      Namelen : C.int)\n+      return    C.int;\n+\n+   function C_Getpeername\n+     (S       : C.int;\n+      Name    : System.Address;\n+      Namelen : access C.int)\n+      return    C.int;\n+\n+   function C_Getservbyname\n+     (Name  : C.char_array;\n+      Proto : C.char_array)\n+      return Servent_Access;\n+\n+   function C_Getservbyport\n+     (Port  : C.int;\n+      Proto : C.char_array)\n+      return Servent_Access;\n+\n+   function C_Getsockname\n+     (S       : C.int;\n+      Name    : System.Address;\n+      Namelen : access C.int)\n+      return    C.int;\n+\n+   function C_Getsockopt\n+     (S       : C.int;\n+      Level   : C.int;\n+      Optname : C.int;\n+      Optval  : System.Address;\n+      Optlen  : access C.int)\n+      return    C.int;\n+\n+   function C_Inet_Addr\n+     (Cp   : C.Strings.chars_ptr)\n+      return C.int;\n+\n+   function C_Ioctl\n+     (S    : C.int;\n+      Req  : C.int;\n+      Arg  : Int_Access)\n+      return C.int;\n+\n+   function C_Listen (S, Backlog : C.int) return C.int;\n+\n+   function C_Read\n+     (Fd    : C.int;\n+      Buf   : System.Address;\n+      Count : C.int)\n+      return  C.int;\n+\n+   function C_Readv\n+     (Fd     : C.int;\n+      Iov    : System.Address;\n+      Iovcnt : C.int)\n+      return   C.int;\n+\n+   function C_Recv\n+     (S     : C.int;\n+      Msg   : System.Address;\n+      Len   : C.int;\n+      Flags : C.int)\n+      return  C.int;\n+\n+   function C_Recvfrom\n+     (S       : C.int;\n+      Msg     : System.Address;\n+      Len     : C.int;\n+      Flags   : C.int;\n+      From    : Sockaddr_In_Access;\n+      Fromlen : access C.int)\n+      return    C.int;\n+\n+   function C_Select\n+     (Nfds      : C.int;\n+      Readfds   : Fd_Set_Access;\n+      Writefds  : Fd_Set_Access;\n+      Exceptfds : Fd_Set_Access;\n+      Timeout   : Timeval_Access)\n+      return      C.int;\n+\n+   function C_Send\n+     (S     : C.int;\n+      Msg   : System.Address;\n+      Len   : C.int;\n+      Flags : C.int)\n+      return  C.int;\n+\n+   function C_Sendto\n+     (S     : C.int;\n+      Msg   : System.Address;\n+      Len   : C.int;\n+      Flags : C.int;\n+      To    : Sockaddr_In_Access;\n+      Tolen : C.int)\n+      return  C.int;\n+\n+   function C_Setsockopt\n+     (S       : C.int;\n+      Level   : C.int;\n+      Optname : C.int;\n+      Optval  : System.Address;\n+      Optlen  : C.int)\n+      return    C.int;\n+\n+   function C_Shutdown\n+     (S    : C.int;\n+      How  : C.int)\n+      return C.int;\n+\n+   function C_Socket\n+     (Domain   : C.int;\n+      Typ      : C.int;\n+      Protocol : C.int)\n+      return     C.int;\n+\n+   function C_Strerror\n+     (Errnum : C.int)\n+      return   C.Strings.chars_ptr;\n+\n+   function C_System\n+     (Command : System.Address)\n+      return    C.int;\n+\n+   function C_Write\n+     (Fd    : C.int;\n+      Buf   : System.Address;\n+      Count : C.int)\n+      return  C.int;\n+\n+   function C_Writev\n+     (Fd     : C.int;\n+      Iov    : System.Address;\n+      Iovcnt : C.int)\n+      return   C.int;\n+\n+   procedure Free_Socket_Set\n+     (Set    : Fd_Set_Access);\n+   --  Free system-dependent socket set.\n+\n+   procedure Get_Socket_From_Set\n+     (Set    : Fd_Set_Access;\n+      Socket : Int_Access;\n+      Last   : Int_Access);\n+   --  Get last socket in Socket and remove it from the socket\n+   --  set. The parameter Last is a maximum value of the largest\n+   --  socket. This hint is used to avoid scanning very large socket\n+   --  sets. After a call to Get_Socket_From_Set, Last is set back to\n+   --  the real largest socket in the socket set.\n+\n+   procedure Insert_Socket_In_Set\n+     (Set    : Fd_Set_Access;\n+      Socket : C.int);\n+   --  Insert socket in the socket set.\n+\n+   function  Is_Socket_In_Set\n+     (Set    : Fd_Set_Access;\n+      Socket : C.int)\n+     return Boolean;\n+   --  Check whether Socket is in the socket set.\n+\n+   procedure Last_Socket_In_Set\n+     (Set    : Fd_Set_Access;\n+      Last   : Int_Access);\n+   --  Find the largest socket in the socket set. This is needed for\n+   --  select(). When Last_Socket_In_Set is called, parameter Last is\n+   --  a maximum value of the largest socket. This hint is used to\n+   --  avoid scanning very large socket sets. After the call, Last is\n+   --  set back to the real largest socket in the socket set.\n+\n+   function  New_Socket_Set\n+     (Set    : Fd_Set_Access)\n+     return   Fd_Set_Access;\n+   --  Allocate a new socket set which is a system-dependent structure\n+   --  and initialize by copying Set if it is non-null, by making it\n+   --  empty otherwise.\n+\n+   procedure Remove_Socket_From_Set\n+     (Set    : Fd_Set_Access;\n+      Socket : C.int);\n+   --  Remove socket from the socket set.\n+\n+   procedure Finalize;\n+   procedure Initialize (Process_Blocking_IO : Boolean);\n+\n+private\n+\n+   pragma Import (C, C_Bind,          \"DECC$BIND\");\n+   pragma Import (C, C_Close,         \"DECC$CLOSE\");\n+   pragma Import (C, C_Gethostbyaddr, \"DECC$GETHOSTBYADDR\");\n+   pragma Import (C, C_Gethostbyname, \"DECC$GETHOSTBYNAME\");\n+   pragma Import (C, C_Gethostname,   \"DECC$GETHOSTNAME\");\n+   pragma Import (C, C_Getpeername,   \"DECC$GETPEERNAME\");\n+   pragma Import (C, C_Getservbyname, \"DECC$GETSERVBYNAME\");\n+   pragma Import (C, C_Getservbyport, \"DECC$GETSERVBYPORT\");\n+   pragma Import (C, C_Getsockname,   \"DECC$GETSOCKNAME\");\n+   pragma Import (C, C_Getsockopt,    \"DECC$GETSOCKOPT\");\n+   pragma Import (C, C_Inet_Addr,     \"DECC$INET_ADDR\");\n+   pragma Import (C, C_Listen,        \"DECC$LISTEN\");\n+   pragma Import (C, C_Read,          \"DECC$READ\");\n+   pragma Import (C, C_Select,        \"DECC$SELECT\");\n+   pragma Import (C, C_Setsockopt,    \"DECC$SETSOCKOPT\");\n+   pragma Import (C, C_Shutdown,      \"DECC$SHUTDOWN\");\n+   pragma Import (C, C_Strerror,      \"DECC$STRERROR\");\n+   pragma Import (C, C_System,        \"DECC$SYSTEM\");\n+   pragma Import (C, C_Write,         \"DECC$WRITE\");\n+\n+   pragma Import (C, Free_Socket_Set, \"__gnat_free_socket_set\");\n+   pragma Import (C, Get_Socket_From_Set, \"__gnat_get_socket_from_set\");\n+   pragma Import (C, Is_Socket_In_Set, \"__gnat_is_socket_in_set\");\n+   pragma Import (C, Last_Socket_In_Set, \"__gnat_last_socket_in_set\");\n+   pragma Import (C, New_Socket_Set, \"__gnat_new_socket_set\");\n+   pragma Import (C, Insert_Socket_In_Set, \"__gnat_insert_socket_in_set\");\n+   pragma Import (C, Remove_Socket_From_Set, \"__gnat_remove_socket_from_set\");\n+end GNAT.Sockets.Thin;"}, {"sha": "26382c111305613a34e63b4919a04941555879e1", "filename": "gcc/ada/3vtrasym.adb", "status": "added", "additions": 185, "deletions": 0, "changes": 185, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3vtrasym.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3vtrasym.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F3vtrasym.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -0,0 +1,185 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--             G N A T . T R A C E B A C K . S Y M B O L I C                --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--           Copyright (C) 1999-2003 Ada Core Technologies, Inc.            --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT is maintained by Ada Core Technologies Inc (http://www.gnat.com).   --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  Run-time symbolic traceback support for VMS\n+\n+with Ada.Exceptions.Traceback; use Ada.Exceptions.Traceback;\n+with Interfaces.C;\n+with Interfaces.C.Strings;\n+with System;\n+with System.Aux_DEC;\n+with System.Soft_Links;\n+with System.Traceback_Entries;\n+\n+package body GNAT.Traceback.Symbolic is\n+\n+   pragma Warnings (Off);\n+   pragma Linker_Options (\"--for-linker=sys$library:trace.exe\");\n+\n+   use Interfaces.C.Strings;\n+   use System;\n+   use System.Aux_DEC;\n+   use System.Traceback_Entries;\n+\n+   type Dscdef1_Type is record\n+      Maxstrlen : Unsigned_Word;\n+      Dtype     : Unsigned_Byte;\n+      Class     : Unsigned_Byte;\n+      Pointer   : chars_ptr;\n+   end record;\n+\n+   for Dscdef1_Type use record\n+      Maxstrlen at 0 range 0 .. 15;\n+      Dtype     at 2 range 0 .. 7;\n+      Class     at 3 range 0 .. 7;\n+      Pointer   at 4 range 0 .. 31;\n+   end record;\n+   for Dscdef1_Type'Size use 64;\n+\n+   Image_Buf  : String (1 .. 10240);\n+   Image_Len  : Integer;\n+   Image_Need_Hdr : Boolean := True;\n+   Image_Do_Another_Line : Boolean;\n+   Image_Xtra_Msg : Boolean;\n+\n+   procedure Traceback_Image (Out_Desc : access Dscdef1_Type);\n+\n+   procedure Traceback_Image (Out_Desc : access Dscdef1_Type) is\n+      Image : String (1 .. Integer (Out_Desc.Maxstrlen));\n+   begin\n+      Image := Value (Out_Desc.Pointer,\n+                      Interfaces.C.size_t (Out_Desc.Maxstrlen));\n+\n+      if Image_Do_Another_Line and then\n+        (Image_Need_Hdr or else\n+         Image (Image'First .. Image'First + 27) /=\n+         \"  image    module    routine\")\n+      then\n+         declare\n+            First : Integer := Image_Len + 1;\n+            Last  : Integer := First + Image'Length - 1;\n+         begin\n+            Image_Buf (First .. Last + 1) := Image & ASCII.LF;\n+            Image_Len := Last + 1;\n+         end;\n+\n+         Image_Need_Hdr := False;\n+\n+         if Image (Image'First .. Image'First + 3) = \"----\" then\n+            if Image_Xtra_Msg = False then\n+               Image_Xtra_Msg := True;\n+            else\n+               Image_Xtra_Msg := False;\n+            end if;\n+         end if;\n+\n+         if Out_Desc.Maxstrlen = 79 and then not Image_Xtra_Msg then\n+            Image_Len := Image_Len - 1;\n+            Image_Do_Another_Line := False;\n+         end if;\n+      end if;\n+   end Traceback_Image;\n+\n+   subtype User_Arg_Type is Unsigned_Longword;\n+   subtype Cond_Value_Type is Unsigned_Longword;\n+\n+   procedure Show_Traceback\n+     (Status         : out Cond_Value_Type;\n+      Faulting_FP    : Address;\n+      Faulting_SP    : Address;\n+      Faulting_PC    : Address;\n+      Detail_Level   : Integer           := Integer'Null_Parameter;\n+      User_Act_Proc  : Address           := Address'Null_Parameter;\n+      User_Arg_Value : User_Arg_Type     := User_Arg_Type'Null_Parameter;\n+      Exceptionn     : Unsigned_Longword := Unsigned_Longword'Null_Parameter);\n+\n+   pragma Interface (External, Show_Traceback);\n+\n+   pragma Import_Valued_Procedure\n+     (Show_Traceback, \"TBK$SHOW_TRACEBACK\",\n+      (Cond_Value_Type, Address, Address, Address, Integer, Address,\n+       User_Arg_Type, Unsigned_Longword),\n+      (Value, Value, Value, Value, Reference, Value, Value, Reference),\n+       Detail_Level);\n+\n+\n+   ------------------------\n+   -- Symbolic_Traceback --\n+   ------------------------\n+\n+   function Symbolic_Traceback (Traceback : Tracebacks_Array) return String is\n+      Res : String (1 .. 256 * Traceback'Length);\n+      Len : Integer;\n+      Status : Cond_Value_Type;\n+\n+   begin\n+      if Traceback'Length > 0 then\n+\n+         Len := 0;\n+\n+         --  Since image computation is not thread-safe we need task lockout\n+         System.Soft_Links.Lock_Task.all;\n+         for I in Traceback'Range loop\n+            Image_Len := 0;\n+            Image_Do_Another_Line := True;\n+            Image_Xtra_Msg := False;\n+\n+            Show_Traceback\n+              (Status,\n+               FP_For (Traceback (I)),\n+               SP_For (Traceback (I)),\n+               PC_For (Traceback (I)),\n+               0,\n+               Traceback_Image'Address);\n+\n+            declare\n+               First : Integer := Len + 1;\n+               Last  : Integer := First + Image_Len - 1;\n+            begin\n+               Res (First .. Last + 1) := Image_Buf & ASCII.LF;\n+               Len := Last + 1;\n+            end;\n+         end loop;\n+         System.Soft_Links.Unlock_Task.all;\n+\n+         return Res (1 .. Len);\n+      else\n+         return \"\";\n+      end if;\n+   end Symbolic_Traceback;\n+\n+   function Symbolic_Traceback (E : Exception_Occurrence) return String is\n+   begin\n+      return Symbolic_Traceback (Tracebacks (E));\n+   end Symbolic_Traceback;\n+\n+end GNAT.Traceback.Symbolic;"}, {"sha": "b4bb31564dccb9adc4f971b726533100e03d475f", "filename": "gcc/ada/3wsoccon.ads", "status": "modified", "additions": 122, "deletions": 98, "changes": 220, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3wsoccon.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3wsoccon.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F3wsoccon.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---              Copyright (C) 2001 Ada Core Technologies, Inc.              --\n+--          Copyright (C) 2000-2003 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,109 +26,133 @@\n -- however invalidate  any other reasons why  the executable file  might be --\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n--- GNAT is maintained by Ada Core Technologies Inc (http://www.gnat.com).   --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+--  This package provides target dependent definitions of constant for use\n+--  by the GNAT.Sockets package (g-socket.ads). This package should not be\n+--  directly with'ed by an applications program.\n+\n --  This is the version for MINGW32 NT\n \n package GNAT.Sockets.Constants is\n \n-   --  Families\n-\n-   AF_INET              : constant :=                2;\n-   AF_INET6             : constant :=                3;\n-\n-   --  Modes\n-\n-   SOCK_STREAM          : constant :=                1;\n-   SOCK_DGRAM           : constant :=                2;\n-\n-   --  Socket Errors\n-\n-   EINTR                : constant :=            10004;\n-   EBADF                : constant :=            10009;\n-   EACCES               : constant :=            10013;\n-   EFAULT               : constant :=            10014;\n-   EINVAL               : constant :=            10022;\n-   EMFILE               : constant :=            10024;\n-   EWOULDBLOCK          : constant :=            10035;\n-   EINPROGRESS          : constant :=            10036;\n-   EALREADY             : constant :=            10037;\n-   ENOTSOCK             : constant :=            10038;\n-   EDESTADDRREQ         : constant :=            10039;\n-   EMSGSIZE             : constant :=            10040;\n-   EPROTOTYPE           : constant :=            10041;\n-   ENOPROTOOPT          : constant :=            10042;\n-   EPROTONOSUPPORT      : constant :=            10043;\n-   ESOCKTNOSUPPORT      : constant :=            10044;\n-   EOPNOTSUPP           : constant :=            10045;\n-   EPFNOSUPPORT         : constant :=            10046;\n-   EAFNOSUPPORT         : constant :=            10047;\n-   EADDRINUSE           : constant :=            10048;\n-   EADDRNOTAVAIL        : constant :=            10049;\n-   ENETDOWN             : constant :=            10050;\n-   ENETUNREACH          : constant :=            10051;\n-   ENETRESET            : constant :=            10052;\n-   ECONNABORTED         : constant :=            10053;\n-   ECONNRESET           : constant :=            10054;\n-   ENOBUFS              : constant :=            10055;\n-   EISCONN              : constant :=            10056;\n-   ENOTCONN             : constant :=            10057;\n-   ESHUTDOWN            : constant :=            10058;\n-   ETOOMANYREFS         : constant :=            10059;\n-   ETIMEDOUT            : constant :=            10060;\n-   ECONNREFUSED         : constant :=            10061;\n-   ELOOP                : constant :=            10062;\n-   ENAMETOOLONG         : constant :=            10063;\n-   EHOSTDOWN            : constant :=            10064;\n-   EHOSTUNREACH         : constant :=            10065;\n-   SYSNOTREADY          : constant :=            10091;\n-   VERNOTSUPPORTED      : constant :=            10092;\n-   NOTINITIALISED       : constant :=            10093;\n-   EDISCON              : constant :=            10101;\n-\n-   --  Host Errors\n-\n-   HOST_NOT_FOUND       : constant :=            11001;\n-   TRY_AGAIN            : constant :=            11002;\n-   NO_RECOVERY          : constant :=            11003;\n-   NO_ADDRESS           : constant :=            11004;\n-   NO_DATA              : constant :=            11004;\n-\n-   EIO                  : constant :=            10101;\n-\n-   --  Control Flags\n-\n-   FIONBIO              : constant :=      -2147195266;\n-   FIONREAD             : constant :=       1074030207;\n-\n-   --  Shutdown Modes\n-\n-   SHUT_RD              : constant :=                0;\n-   SHUT_WR              : constant :=                1;\n-   SHUT_RDWR            : constant :=                2;\n-\n-   --  Protocol Levels\n-\n-   SOL_SOCKET           : constant :=            65535;\n-   IPPROTO_IP           : constant :=                0;\n-   IPPROTO_UDP          : constant :=               17;\n-   IPPROTO_TCP          : constant :=                6;\n-\n-   --  Socket Options\n-\n-   TCP_NODELAY          : constant :=                1;\n-   SO_SNDBUF            : constant :=             4097;\n-   SO_RCVBUF            : constant :=             4098;\n-   SO_REUSEADDR         : constant :=                4;\n-   SO_KEEPALIVE         : constant :=                8;\n-   SO_LINGER            : constant :=              128;\n-   SO_ERROR             : constant :=             4103;\n-   SO_BROADCAST         : constant :=               32;\n-   IP_ADD_MEMBERSHIP    : constant :=                5;\n-   IP_DROP_MEMBERSHIP   : constant :=                6;\n-   IP_MULTICAST_TTL     : constant :=                3;\n-   IP_MULTICAST_LOOP    : constant :=                4;\n+   --------------\n+   -- Families --\n+   --------------\n+\n+   AF_INET            : constant :=            2; --  IPv4 address family\n+   AF_INET6           : constant :=            3; --  IPv6 address family\n+\n+   -----------\n+   -- Modes --\n+   -----------\n+\n+   SOCK_STREAM        : constant :=            1; --  Stream socket\n+   SOCK_DGRAM         : constant :=            2; --  Datagram socket\n+\n+   -------------------\n+   -- Socket errors --\n+   -------------------\n+\n+   EACCES             : constant :=        10013; --  Permission denied\n+   EADDRINUSE         : constant :=        10048; --  Address already in use\n+   EADDRNOTAVAIL      : constant :=        10049; --  Cannot assign address\n+   EAFNOSUPPORT       : constant :=        10047; --  Addr family not supported\n+   EALREADY           : constant :=        10037; --  Operation in progress\n+   EBADF              : constant :=        10009; --  Bad file descriptor\n+   ECONNABORTED       : constant :=        10053; --  Connection aborted\n+   ECONNREFUSED       : constant :=        10061; --  Connection refused\n+   ECONNRESET         : constant :=        10054; --  Connection reset by peer\n+   EDESTADDRREQ       : constant :=        10039; --  Destination addr required\n+   EFAULT             : constant :=        10014; --  Bad address\n+   EHOSTDOWN          : constant :=        10064; --  Host is down\n+   EHOSTUNREACH       : constant :=        10065; --  No route to host\n+   EINPROGRESS        : constant :=        10036; --  Operation now in progress\n+   EINTR              : constant :=        10004; --  Interrupted system call\n+   EINVAL             : constant :=        10022; --  Invalid argument\n+   EIO                : constant :=        10101; --  Input output error\n+   EISCONN            : constant :=        10056; --  Socket already connected\n+   ELOOP              : constant :=        10062; --  Too many symbolic lynks\n+   EMFILE             : constant :=        10024; --  Too many open files\n+   EMSGSIZE           : constant :=        10040; --  Message too long\n+   ENAMETOOLONG       : constant :=        10063; --  Name too long\n+   ENETDOWN           : constant :=        10050; --  Network is down\n+   ENETRESET          : constant :=        10052; --  Disconn. on network reset\n+   ENETUNREACH        : constant :=        10051; --  Network is unreachable\n+   ENOBUFS            : constant :=        10055; --  No buffer space available\n+   ENOPROTOOPT        : constant :=        10042; --  Protocol not available\n+   ENOTCONN           : constant :=        10057; --  Socket not connected\n+   ENOTSOCK           : constant :=        10038; --  Operation on non socket\n+   EOPNOTSUPP         : constant :=        10045; --  Operation not supported\n+   EPFNOSUPPORT       : constant :=        10046; --  Unknown protocol family\n+   EPROTONOSUPPORT    : constant :=        10043; --  Unknown protocol\n+   EPROTOTYPE         : constant :=        10041; --  Unknown protocol type\n+   ESHUTDOWN          : constant :=        10058; --  Cannot send once shutdown\n+   ESOCKTNOSUPPORT    : constant :=        10044; --  Socket type not supported\n+   ETIMEDOUT          : constant :=        10060; --  Connection timed out\n+   ETOOMANYREFS       : constant :=        10059; --  Too many references\n+   EWOULDBLOCK        : constant :=        10035; --  Operation would block\n+\n+   -----------------\n+   -- Host errors --\n+   -----------------\n+\n+   HOST_NOT_FOUND     : constant :=        11001; --  Unknown host\n+   TRY_AGAIN          : constant :=        11002; --  Host name lookup failure\n+   NO_DATA            : constant :=        11004; --  No data record for name\n+   NO_RECOVERY        : constant :=        11003; --  Non recoverable errors\n+\n+   -------------------\n+   -- Control flags --\n+   -------------------\n+\n+   FIONBIO            : constant :=  -2147195266; --  Set/clear non-blocking io\n+   FIONREAD           : constant :=   1074030207; --  How many bytes to read\n+\n+   --------------------\n+   -- Shutdown modes --\n+   --------------------\n+\n+   SHUT_RD            : constant :=            0; --  No more recv\n+   SHUT_WR            : constant :=            1; --  No more send\n+   SHUT_RDWR          : constant :=            2; --  No more recv/send\n+\n+   ---------------------\n+   -- Protocol levels --\n+   ---------------------\n+\n+   SOL_SOCKET         : constant :=        65535; --  Options for socket level\n+   IPPROTO_IP         : constant :=            0; --  Dummy protocol for IP\n+   IPPROTO_UDP        : constant :=           17; --  UDP\n+   IPPROTO_TCP        : constant :=            6; --  TCP\n+\n+   -------------------\n+   -- Request flags --\n+   -------------------\n+\n+   MSG_OOB            : constant :=            1; --  Process out-of-band data\n+   MSG_PEEK           : constant :=            2; --  Peek at incoming data\n+   MSG_EOR            : constant :=           -1; --  Send end of record\n+   MSG_WAITALL        : constant :=           -1; --  Wait for full reception\n+\n+   --------------------\n+   -- Socket options --\n+   --------------------\n+\n+   TCP_NODELAY        : constant :=            1; --  Do not coalesce packets\n+   SO_SNDBUF          : constant :=         4097; --  Set/get send buffer size\n+   SO_RCVBUF          : constant :=         4098; --  Set/get recv buffer size\n+   SO_REUSEADDR       : constant :=            4; --  Bind reuse local address\n+   SO_KEEPALIVE       : constant :=            8; --  Enable keep-alive msgs\n+   SO_LINGER          : constant :=          128; --  Defer close to flush data\n+   SO_ERROR           : constant :=         4103; --  Get/clear error status\n+   SO_BROADCAST       : constant :=           32; --  Can send broadcast msgs\n+   IP_ADD_MEMBERSHIP  : constant :=            5; --  Join a multicast group\n+   IP_DROP_MEMBERSHIP : constant :=            6; --  Leave a multicast group\n+   IP_MULTICAST_TTL   : constant :=            3; --  Set/get multicast TTL\n+   IP_MULTICAST_LOOP  : constant :=            4; --  Set/get mcast loopback\n \n end GNAT.Sockets.Constants;"}, {"sha": "0fb9731530f6a484a0b91749143c1c2ee7199287", "filename": "gcc/ada/3wsocthi.adb", "status": "modified", "additions": 277, "deletions": 62, "changes": 339, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3wsocthi.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3wsocthi.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F3wsocthi.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---              Copyright (C) 2001 Ada Core Technologies, Inc.              --\n+--              Copyright (C) 2001-2003 Ada Core Technologies, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,12 +26,21 @@\n -- however invalidate  any other reasons why  the executable file  might be --\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n--- GNAT is maintained by Ada Core Technologies Inc (http://www.gnat.com).   --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+--  This package provides a target dependent thin interface to the sockets\n+--  layer for use by the GNAT.Sockets package (g-socket.ads). This package\n+--  should not be directly with'ed by an applications program.\n+\n --  This version is for NT.\n \n+with GNAT.Sockets.Constants; use GNAT.Sockets.Constants;\n+\n+with System; use System;\n+\n package body GNAT.Sockets.Thin is\n \n    use type C.unsigned;\n@@ -41,75 +50,257 @@ package body GNAT.Sockets.Thin is\n    WS_Version  : constant := 16#0101#;\n    Initialized : Boolean := False;\n \n-   -----------\n-   -- Clear --\n-   -----------\n-\n-   procedure Clear\n-     (Item   : in out Fd_Set;\n-      Socket : C.int)\n+   SYSNOTREADY          : constant := 10091;\n+   VERNOTSUPPORTED      : constant := 10092;\n+   NOTINITIALISED       : constant := 10093;\n+   EDISCON              : constant := 10101;\n+\n+   function Standard_Connect\n+     (S       : C.int;\n+      Name    : System.Address;\n+      Namelen : C.int)\n+      return    C.int;\n+   pragma Import (Stdcall, Standard_Connect, \"connect\");\n+\n+   function Standard_Select\n+     (Nfds      : C.int;\n+      Readfds   : Fd_Set_Access;\n+      Writefds  : Fd_Set_Access;\n+      Exceptfds : Fd_Set_Access;\n+      Timeout   : Timeval_Access)\n+      return      C.int;\n+   pragma Import (Stdcall, Standard_Select, \"select\");\n+\n+   ---------------\n+   -- C_Connect --\n+   ---------------\n+\n+   function C_Connect\n+     (S       : C.int;\n+      Name    : System.Address;\n+      Namelen : C.int)\n+      return    C.int\n    is\n+      Res : C.int;\n+\n    begin\n-      for J in 1 .. Item.fd_count loop\n-         if Item.fd_array (J) = Socket then\n-            Item.fd_array (J .. Item.fd_count - 1) :=\n-              Item.fd_array (J + 1 .. Item.fd_count);\n-            Item.fd_count := Item.fd_count - 1;\n-            exit;\n+      Res := Standard_Connect (S, Name, Namelen);\n+\n+      if Res = -1 then\n+         if Socket_Errno = EWOULDBLOCK then\n+            Set_Socket_Errno (EINPROGRESS);\n          end if;\n-      end loop;\n-   end Clear;\n+      end if;\n \n-   -----------\n-   -- Empty --\n-   -----------\n+      return Res;\n+   end C_Connect;\n+\n+   -------------\n+   -- C_Readv --\n+   -------------\n+\n+   function C_Readv\n+     (Socket : C.int;\n+      Iov    : System.Address;\n+      Iovcnt : C.int)\n+      return  C.int\n+   is\n+      Res : C.int;\n+      Count : C.int := 0;\n+\n+      Iovec : array (0 .. Iovcnt - 1) of Vector_Element;\n+      for Iovec'Address use Iov;\n+      pragma Import (Ada, Iovec);\n \n-   procedure Empty  (Item : in out Fd_Set) is\n    begin\n-      Item := Null_Fd_Set;\n-   end Empty;\n+      for J in Iovec'Range loop\n+         Res := C_Recv\n+           (Socket,\n+            Iovec (J).Base.all'Address,\n+            C.int (Iovec (J).Length),\n+            0);\n+\n+         if Res < 0 then\n+            return Res;\n+         else\n+            Count := Count + Res;\n+         end if;\n+      end loop;\n+      return Count;\n+   end C_Readv;\n \n    --------------\n-   -- Finalize --\n+   -- C_Select --\n    --------------\n \n-   procedure Finalize is\n+   function C_Select\n+     (Nfds      : C.int;\n+      Readfds   : Fd_Set_Access;\n+      Writefds  : Fd_Set_Access;\n+      Exceptfds : Fd_Set_Access;\n+      Timeout   : Timeval_Access)\n+      return      C.int\n+   is\n+      pragma Warnings (Off, Exceptfds);\n+\n+      RFS  : Fd_Set_Access := Readfds;\n+      WFS  : Fd_Set_Access := Writefds;\n+      WFSC : Fd_Set_Access := No_Fd_Set;\n+      EFS  : Fd_Set_Access := Exceptfds;\n+      Res  : C.int;\n+      S    : aliased C.int;\n+      Last : aliased C.int;\n+\n    begin\n-      if Initialized then\n-         WSACleanup;\n-         Initialized := False;\n+      --  Asynchronous connection failures are notified in the\n+      --  exception fd set instead of the write fd set. To ensure\n+      --  POSIX compatitibility, copy write fd set into exception fd\n+      --  set. Once select() returns, check any socket present in the\n+      --  exception fd set and peek at incoming out-of-band data. If\n+      --  the test is not successfull and if the socket is present in\n+      --  the initial write fd set, then move the socket from the\n+      --  exception fd set to the write fd set.\n+\n+      if WFS /= No_Fd_Set then\n+         --  Add any socket present in write fd set into exception fd set\n+\n+         if EFS = No_Fd_Set then\n+            EFS := New_Socket_Set (WFS);\n+\n+         else\n+            WFSC := New_Socket_Set (WFS);\n+\n+            Last := Nfds - 1;\n+            loop\n+               Get_Socket_From_Set\n+                 (WFSC, S'Unchecked_Access, Last'Unchecked_Access);\n+               exit when S = -1;\n+               Insert_Socket_In_Set (EFS, S);\n+            end loop;\n+\n+            Free_Socket_Set (WFSC);\n+         end if;\n+\n+         --  Keep a copy of write fd set\n+\n+         WFSC := New_Socket_Set (WFS);\n       end if;\n-   end Finalize;\n+\n+      Res := Standard_Select (Nfds, RFS, WFS, EFS, Timeout);\n+\n+      if EFS /= No_Fd_Set then\n+         declare\n+            EFSC    : Fd_Set_Access := New_Socket_Set (EFS);\n+            Buffer  : Character;\n+            Length  : C.int;\n+            Flag    : C.int := MSG_PEEK + MSG_OOB;\n+            Fromlen : aliased C.int;\n+\n+         begin\n+            Last := Nfds - 1;\n+            loop\n+               Get_Socket_From_Set\n+                 (EFSC, S'Unchecked_Access, Last'Unchecked_Access);\n+\n+               --  No more sockets in EFSC\n+\n+               exit when S = -1;\n+\n+               --  Check out-of-band data\n+\n+               Length := C_Recvfrom\n+                 (S, Buffer'Address, 1, Flag,\n+                  null, Fromlen'Unchecked_Access);\n+\n+               --  If the signal is not an out-of-band data, then it\n+               --  is a connection failure notification.\n+\n+               if Length = -1 then\n+                  Remove_Socket_From_Set (EFS, S);\n+\n+                  --  If S is present in the initial write fd set,\n+                  --  move it from exception fd set back to write fd\n+                  --  set. Otherwise, ignore this event since the user\n+                  --  is not watching for it.\n+\n+                  if WFSC /= No_Fd_Set\n+                    and then Is_Socket_In_Set (WFSC, S)\n+                  then\n+                     Insert_Socket_In_Set (WFS, S);\n+                  end if;\n+               end if;\n+            end loop;\n+\n+            Free_Socket_Set (EFSC);\n+         end;\n+\n+         if Exceptfds = No_Fd_Set then\n+            Free_Socket_Set (EFS);\n+         end if;\n+      end if;\n+\n+      --  Free any copy of write fd set\n+\n+      if WFSC /= No_Fd_Set then\n+         Free_Socket_Set (WFSC);\n+      end if;\n+\n+      return Res;\n+   end C_Select;\n \n    --------------\n-   -- Is_Empty --\n+   -- C_Writev --\n    --------------\n \n-   function Is_Empty (Item : Fd_Set) return Boolean is\n-   begin\n-      return Item.fd_count = 0;\n-   end Is_Empty;\n+   function C_Writev\n+     (Socket : C.int;\n+      Iov    : System.Address;\n+      Iovcnt : C.int)\n+      return   C.int\n+   is\n+      Res : C.int;\n+      Count : C.int := 0;\n \n-   ------------\n-   -- Is_Set --\n-   ------------\n+      Iovec : array (0 .. Iovcnt - 1) of Vector_Element;\n+      for Iovec'Address use Iov;\n+      pragma Import (Ada, Iovec);\n \n-   function Is_Set (Item : Fd_Set; Socket : C.int) return Boolean is\n    begin\n-      for J in 1 .. Item.fd_count loop\n-         if Item.fd_array (J) = Socket then\n-            return True;\n+      for J in Iovec'Range loop\n+         Res := C_Send\n+           (Socket,\n+            Iovec (J).Base.all'Address,\n+            C.int (Iovec (J).Length),\n+            0);\n+\n+         if Res < 0 then\n+            return Res;\n+         else\n+            Count := Count + Res;\n          end if;\n       end loop;\n+      return Count;\n+   end C_Writev;\n \n-      return False;\n-   end Is_Set;\n+   --------------\n+   -- Finalize --\n+   --------------\n+\n+   procedure Finalize is\n+   begin\n+      if Initialized then\n+         WSACleanup;\n+         Initialized := False;\n+      end if;\n+   end Finalize;\n \n    ----------------\n    -- Initialize --\n    ----------------\n \n    procedure Initialize (Process_Blocking_IO : Boolean := False) is\n+      pragma Unreferenced (Process_Blocking_IO);\n+\n       Return_Value : Interfaces.C.int;\n \n    begin\n@@ -120,32 +311,56 @@ package body GNAT.Sockets.Thin is\n       end if;\n    end Initialize;\n \n-   ---------\n-   -- Max --\n-   ---------\n+   -----------------\n+   -- Set_Address --\n+   -----------------\n+\n+   procedure Set_Address\n+     (Sin     : Sockaddr_In_Access;\n+      Address : In_Addr)\n+   is\n+   begin\n+      Sin.Sin_Addr := Address;\n+   end Set_Address;\n \n-   function Max (Item : Fd_Set) return C.int is\n-      L : C.int := 0;\n+   ----------------\n+   -- Set_Family --\n+   ----------------\n \n+   procedure Set_Family\n+     (Sin    : Sockaddr_In_Access;\n+      Family : C.int)\n+   is\n    begin\n-      for J in 1 .. Item.fd_count loop\n-         if Item.fd_array (J) > L then\n-            L := Item.fd_array (J);\n-         end if;\n-      end loop;\n+      Sin.Sin_Family := C.unsigned_short (Family);\n+   end Set_Family;\n \n-      return L;\n-   end Max;\n+   ----------------\n+   -- Set_Length --\n+   ----------------\n \n-   ---------\n-   -- Set --\n-   ---------\n+   procedure Set_Length\n+     (Sin : Sockaddr_In_Access;\n+      Len : C.int)\n+   is\n+      pragma Unreferenced (Sin);\n+      pragma Unreferenced (Len);\n+\n+   begin\n+      null;\n+   end Set_Length;\n \n-   procedure Set (Item : in out Fd_Set; Socket : in C.int) is\n+   --------------\n+   -- Set_Port --\n+   --------------\n+\n+   procedure Set_Port\n+     (Sin  : Sockaddr_In_Access;\n+      Port : C.unsigned_short)\n+   is\n    begin\n-      Item.fd_count := Item.fd_count + 1;\n-      Item.fd_array (Item.fd_count) := Socket;\n-   end Set;\n+      Sin.Sin_Port := Port;\n+   end Set_Port;\n \n    --------------------------\n    -- Socket_Error_Message --"}, {"sha": "0fb5e4a798dec6408f466b3f1b9b67a650ba2dbe", "filename": "gcc/ada/3wsocthi.ads", "status": "modified", "additions": 131, "deletions": 30, "changes": 161, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3wsocthi.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3wsocthi.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F3wsocthi.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---              Copyright (C) 2001 Ada Core Technologies, Inc.              --\n+--              Copyright (C) 2001-2003 Ada Core Technologies, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,11 +26,16 @@\n -- however invalidate  any other reasons why  the executable file  might be --\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n--- GNAT is maintained by Ada Core Technologies Inc (http://www.gnat.com).   --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This version is for NT.\n+--  This package provides a target dependent thin interface to the sockets\n+--  layer for use by the GNAT.Sockets package (g-socket.ads). This package\n+--  should not be directly with'ed by an applications program.\n+\n+--  This version is for NT\n \n with Interfaces.C.Pointers;\n with Interfaces.C.Strings;\n@@ -41,8 +46,6 @@ with System;\n \n package GNAT.Sockets.Thin is\n \n-   --  ??? far more comments required ???\n-\n    package C renames Interfaces.C;\n \n    use type C.int;\n@@ -54,23 +57,15 @@ package GNAT.Sockets.Thin is\n    function Socket_Errno return Integer;\n    --  Returns last socket error number.\n \n+   procedure Set_Socket_Errno (Errno : Integer);\n+   --  Set last socket error number.\n+\n    function Socket_Error_Message (Errno : Integer) return String;\n    --  Returns the error message string for the error number Errno. If\n    --  Errno is not known it returns \"Unknown system error\".\n \n-   type Socket_Fd_Array is array (C.unsigned range 1 .. 64) of C.int;\n-   pragma Convention (C, Socket_Fd_Array);\n-\n-   type Fd_Set is record\n-      fd_count : C.unsigned;\n-      fd_array : Socket_Fd_Array;\n-   end record;\n-   pragma Convention (C, Fd_Set);\n-\n-   Null_Fd_Set : constant Fd_Set := (0, (others => 0));\n-\n-   type Fd_Set_Access is access all Fd_Set;\n-   pragma Convention (C, Fd_Set_Access);\n+   subtype Fd_Set_Access is System.Address;\n+   No_Fd_Set : constant Fd_Set_Access := System.Null_Address;\n \n    type Timeval_Unit is new C.long;\n    pragma Convention (C, Timeval_Unit);\n@@ -142,6 +137,31 @@ package GNAT.Sockets.Thin is\n    pragma Convention (C, Sockaddr_In_Access);\n    --  Access to internet socket address\n \n+   procedure Set_Length\n+     (Sin : Sockaddr_In_Access;\n+      Len : C.int);\n+   pragma Inline (Set_Length);\n+   --  Set Sin.Sin_Length to Len.\n+   --  On this platform, nothing is done as there is no such field.\n+\n+   procedure Set_Family\n+     (Sin    : Sockaddr_In_Access;\n+      Family : C.int);\n+   pragma Inline (Set_Family);\n+   --  Set Sin.Sin_Family to Family\n+\n+   procedure Set_Port\n+     (Sin  : Sockaddr_In_Access;\n+      Port : C.unsigned_short);\n+   pragma Inline (Set_Port);\n+   --  Set Sin.Sin_Port to Port\n+\n+   procedure Set_Address\n+     (Sin     : Sockaddr_In_Access;\n+      Address : In_Addr);\n+   pragma Inline (Set_Address);\n+   --  Set Sin.Sin_Addr to Address\n+\n    type Hostent is record\n       H_Name      : C.Strings.chars_ptr;\n       H_Aliases   : Chars_Ptr_Pointers.Pointer;\n@@ -156,6 +176,19 @@ package GNAT.Sockets.Thin is\n    pragma Convention (C, Hostent_Access);\n    --  Access to host entry\n \n+   type Servent is record\n+      S_Name      : C.Strings.chars_ptr;\n+      S_Aliases   : Chars_Ptr_Pointers.Pointer;\n+      S_Port      : C.int;\n+      S_Proto     : C.Strings.chars_ptr;\n+   end record;\n+   pragma Convention (C, Servent);\n+   --  Service entry\n+\n+   type Servent_Access is access all Servent;\n+   pragma Convention (C, Servent_Access);\n+   --  Access to service entry\n+\n    type Two_Int is array (0 .. 1) of C.int;\n    pragma Convention (C, Two_Int);\n    --  Used with pipe()\n@@ -173,8 +206,8 @@ package GNAT.Sockets.Thin is\n       return    C.int;\n \n    function C_Close\n-     (Fd  : C.int)\n-     return C.int;\n+     (Fd   : C.int)\n+      return C.int;\n \n    function C_Connect\n      (S       : C.int;\n@@ -203,6 +236,16 @@ package GNAT.Sockets.Thin is\n       Namelen : access C.int)\n       return    C.int;\n \n+   function C_Getservbyname\n+     (Name  : C.char_array;\n+      Proto : C.char_array)\n+      return Servent_Access;\n+\n+   function C_Getservbyport\n+     (Port  : C.int;\n+      Proto : C.char_array)\n+      return Servent_Access;\n+\n    function C_Getsockname\n      (S       : C.int;\n       Name    : System.Address;\n@@ -237,6 +280,12 @@ package GNAT.Sockets.Thin is\n       Nbyte  : C.int)\n       return   C.int;\n \n+   function C_Readv\n+     (Socket : C.int;\n+      Iov    : System.Address;\n+      Iovcnt : C.int)\n+      return   C.int;\n+\n    function C_Recv\n      (S     : C.int;\n       Buf   : System.Address;\n@@ -310,33 +359,78 @@ package GNAT.Sockets.Thin is\n       Nbyte  : C.int)\n       return   C.int;\n \n+   function C_Writev\n+     (Socket : C.int;\n+      Iov    : System.Address;\n+      Iovcnt : C.int)\n+      return   C.int;\n+\n    function WSAStartup\n      (WS_Version     : Interfaces.C.int;\n       WSADataAddress : System.Address)\n       return           Interfaces.C.int;\n \n-   procedure WSACleanup;\n+   procedure Free_Socket_Set\n+     (Set    : Fd_Set_Access);\n+   --  Free system-dependent socket set.\n+\n+   procedure Get_Socket_From_Set\n+     (Set    : Fd_Set_Access;\n+      Socket : Int_Access;\n+      Last   : Int_Access);\n+   --  Get last socket in Socket and remove it from the socket\n+   --  set. The parameter Last is a maximum value of the largest\n+   --  socket. This hint is used to avoid scanning very large socket\n+   --  sets. After a call to Get_Socket_From_Set, Last is set back to\n+   --  the real largest socket in the socket set.\n+\n+   procedure Insert_Socket_In_Set\n+     (Set    : Fd_Set_Access;\n+      Socket : C.int);\n+   --  Insert socket in the socket set\n+\n+   function  Is_Socket_In_Set\n+     (Set    : Fd_Set_Access;\n+      Socket : C.int)\n+     return Boolean;\n+   --  Check whether Socket is in the socket set\n+\n+   procedure Last_Socket_In_Set\n+     (Set  : Fd_Set_Access;\n+      Last : Int_Access);\n+   --  Find the largest socket in the socket set. This is needed for\n+   --  select(). When Last_Socket_In_Set is called, parameter Last is\n+   --  a maximum value of the largest socket. This hint is used to\n+   --  avoid scanning very large socket sets. After the call, Last is\n+   --  set back to the real largest socket in the socket set.\n+\n+   function  New_Socket_Set\n+     (Set : Fd_Set_Access)\n+     return Fd_Set_Access;\n+   --  Allocate a new socket set which is a system-dependent structure\n+   --  and initialize by copying Set if it is non-null, by making it\n+   --  empty otherwise.\n+\n+   procedure Remove_Socket_From_Set\n+     (Set    : Fd_Set_Access;\n+      Socket : C.int);\n+   --  Remove socket from the socket set\n \n-   procedure Clear    (Item : in out Fd_Set; Socket : in C.int);\n-   procedure Empty    (Item : in out Fd_Set);\n-   function  Is_Empty (Item : Fd_Set) return Boolean;\n-   function  Is_Set   (Item : Fd_Set; Socket : C.int) return Boolean;\n-   function  Max      (Item : Fd_Set) return C.int;\n-   procedure Set      (Item : in out Fd_Set; Socket : in C.int);\n+   procedure WSACleanup;\n \n    procedure Finalize;\n    procedure Initialize (Process_Blocking_IO : Boolean := False);\n \n private\n-\n    pragma Import (Stdcall, C_Accept, \"accept\");\n    pragma Import (Stdcall, C_Bind, \"bind\");\n    pragma Import (Stdcall, C_Close, \"closesocket\");\n-   pragma Import (Stdcall, C_Connect, \"connect\");\n    pragma Import (Stdcall, C_Gethostbyaddr, \"gethostbyaddr\");\n    pragma Import (Stdcall, C_Gethostbyname, \"gethostbyname\");\n    pragma Import (Stdcall, C_Gethostname, \"gethostname\");\n    pragma Import (Stdcall, C_Getpeername, \"getpeername\");\n+   pragma Import (Stdcall, C_Getservbyname, \"getservbyname\");\n+   pragma Import (Stdcall, C_Getservbyport, \"getservbyport\");\n    pragma Import (Stdcall, C_Getsockname, \"getsockname\");\n    pragma Import (Stdcall, C_Getsockopt, \"getsockopt\");\n    pragma Import (Stdcall, C_Inet_Addr, \"inet_addr\");\n@@ -345,7 +439,6 @@ private\n    pragma Import (C, C_Read, \"_read\");\n    pragma Import (Stdcall, C_Recv, \"recv\");\n    pragma Import (Stdcall, C_Recvfrom, \"recvfrom\");\n-   pragma Import (Stdcall, C_Select, \"select\");\n    pragma Import (Stdcall, C_Send, \"send\");\n    pragma Import (Stdcall, C_Sendto, \"sendto\");\n    pragma Import (Stdcall, C_Setsockopt, \"setsockopt\");\n@@ -355,7 +448,15 @@ private\n    pragma Import (C, C_System, \"_system\");\n    pragma Import (C, C_Write, \"_write\");\n    pragma Import (Stdcall, Socket_Errno, \"WSAGetLastError\");\n+   pragma Import (Stdcall, Set_Socket_Errno, \"WSASetLastError\");\n    pragma Import (Stdcall, WSAStartup, \"WSAStartup\");\n    pragma Import (Stdcall, WSACleanup, \"WSACleanup\");\n \n+   pragma Import (C, Free_Socket_Set, \"__gnat_free_socket_set\");\n+   pragma Import (C, Get_Socket_From_Set, \"__gnat_get_socket_from_set\");\n+   pragma Import (C, Is_Socket_In_Set, \"__gnat_is_socket_in_set\");\n+   pragma Import (C, Last_Socket_In_Set, \"__gnat_last_socket_in_set\");\n+   pragma Import (C, New_Socket_Set, \"__gnat_new_socket_set\");\n+   pragma Import (C, Insert_Socket_In_Set, \"__gnat_insert_socket_in_set\");\n+   pragma Import (C, Remove_Socket_From_Set, \"__gnat_remove_socket_from_set\");\n end GNAT.Sockets.Thin;"}, {"sha": "e930da934d5198e5c2ede58aa3991306c8c2039d", "filename": "gcc/ada/3wsoliop.ads", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3wsoliop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3wsoliop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F3wsoliop.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---              Copyright (C) 2001 Ada Core Technologies, Inc.              --\n+--            Copyright (C) 2001-2003 Ada Core Technologies, Inc.           --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,16 +26,18 @@\n -- however invalidate  any other reasons why  the executable file  might be --\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n--- GNAT is maintained by Ada Core Technologies Inc (http://www.gnat.com).   --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-package GNAT.Sockets.Linker_Options is\n+--  This package is used to provide target specific linker_options for the\n+--  support of scokets as required by the package GNAT.Sockets.\n \n-   --  Windows NT version of this package\n+--  This is the Windows/NT version of this package\n \n-private\n \n+package GNAT.Sockets.Linker_Options is\n+private\n    pragma Linker_Options (\"-lwsock32\");\n-\n end GNAT.Sockets.Linker_Options;"}, {"sha": "ddf2485c4dad731c1dd52bb81f9bcf1183773d32", "filename": "gcc/ada/3zsoccon.ads", "status": "added", "additions": 158, "deletions": 0, "changes": 158, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3zsoccon.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3zsoccon.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F3zsoccon.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -0,0 +1,158 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--               G N A T . S O C K E T S . C O N S T A N T S                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--          Copyright (C) 2000-2003 Free Software Foundation, Inc.          --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This package provides target dependent definitions of constant for use\n+--  by the GNAT.Sockets package (g-socket.ads). This package should not be\n+--  directly with'ed by an applications program.\n+\n+--  This is the version for VxWorks\n+\n+package GNAT.Sockets.Constants is\n+\n+   --------------\n+   -- Families --\n+   --------------\n+\n+   AF_INET            : constant :=            2; --  IPv4 address family\n+   AF_INET6           : constant :=           -1; --  IPv6 address family\n+\n+   -----------\n+   -- Modes --\n+   -----------\n+\n+   SOCK_STREAM        : constant :=            1; --  Stream socket\n+   SOCK_DGRAM         : constant :=            2; --  Datagram socket\n+\n+   -------------------\n+   -- Socket errors --\n+   -------------------\n+\n+   EACCES             : constant :=           13; --  Permission denied\n+   EADDRINUSE         : constant :=           48; --  Address already in use\n+   EADDRNOTAVAIL      : constant :=           49; --  Cannot assign address\n+   EAFNOSUPPORT       : constant :=           47; --  Addr family not supported\n+   EALREADY           : constant :=           69; --  Operation in progress\n+   EBADF              : constant :=            9; --  Bad file descriptor\n+   ECONNABORTED       : constant :=           53; --  Connection aborted\n+   ECONNREFUSED       : constant :=           61; --  Connection refused\n+   ECONNRESET         : constant :=           54; --  Connection reset by peer\n+   EDESTADDRREQ       : constant :=           40; --  Destination addr required\n+   EFAULT             : constant :=           14; --  Bad address\n+   EHOSTDOWN          : constant :=           67; --  Host is down\n+   EHOSTUNREACH       : constant :=           65; --  No route to host\n+   EINPROGRESS        : constant :=           68; --  Operation now in progress\n+   EINTR              : constant :=            4; --  Interrupted system call\n+   EINVAL             : constant :=           22; --  Invalid argument\n+   EIO                : constant :=            5; --  Input output error\n+   EISCONN            : constant :=           56; --  Socket already connected\n+   ELOOP              : constant :=           64; --  Too many symbolic lynks\n+   EMFILE             : constant :=           24; --  Too many open files\n+   EMSGSIZE           : constant :=           36; --  Message too long\n+   ENAMETOOLONG       : constant :=           26; --  Name too long\n+   ENETDOWN           : constant :=           62; --  Network is down\n+   ENETRESET          : constant :=           52; --  Disconn. on network reset\n+   ENETUNREACH        : constant :=           51; --  Network is unreachable\n+   ENOBUFS            : constant :=           55; --  No buffer space available\n+   ENOPROTOOPT        : constant :=           42; --  Protocol not available\n+   ENOTCONN           : constant :=           57; --  Socket not connected\n+   ENOTSOCK           : constant :=           50; --  Operation on non socket\n+   EOPNOTSUPP         : constant :=           45; --  Operation not supported\n+   EPFNOSUPPORT       : constant :=           46; --  Unknown protocol family\n+   EPROTONOSUPPORT    : constant :=           43; --  Unknown protocol\n+   EPROTOTYPE         : constant :=           41; --  Unknown protocol type\n+   ESHUTDOWN          : constant :=           58; --  Cannot send once shutdown\n+   ESOCKTNOSUPPORT    : constant :=           44; --  Socket type not supported\n+   ETIMEDOUT          : constant :=           60; --  Connection timed out\n+   ETOOMANYREFS       : constant :=           59; --  Too many references\n+   EWOULDBLOCK        : constant :=           70; --  Operation would block\n+\n+   -----------------\n+   -- Host errors --\n+   -----------------\n+\n+   HOST_NOT_FOUND     : constant :=            1; --  Unknown host\n+   TRY_AGAIN          : constant :=            2; --  Host name lookup failure\n+   NO_DATA            : constant :=            4; --  No data record for name\n+   NO_RECOVERY        : constant :=            3; --  Non recoverable errors\n+\n+   -------------------\n+   -- Control flags --\n+   -------------------\n+\n+   FIONBIO            : constant :=           16; --  Set/clear non-blocking io\n+   FIONREAD           : constant :=            1; --  How many bytes to read\n+\n+   --------------------\n+   -- Shutdown modes --\n+   --------------------\n+\n+   SHUT_RD            : constant :=            0; --  No more recv\n+   SHUT_WR            : constant :=            1; --  No more send\n+   SHUT_RDWR          : constant :=            2; --  No more recv/send\n+\n+   ---------------------\n+   -- Protocol levels --\n+   ---------------------\n+\n+   SOL_SOCKET         : constant :=        65535; --  Options for socket level\n+   IPPROTO_IP         : constant :=            0; --  Dummy protocol for IP\n+   IPPROTO_UDP        : constant :=           17; --  UDP\n+   IPPROTO_TCP        : constant :=            6; --  TCP\n+\n+   -------------------\n+   -- Request flags --\n+   -------------------\n+\n+   MSG_OOB            : constant :=            1; --  Process out-of-band data\n+   MSG_PEEK           : constant :=            2; --  Peek at incoming data\n+   MSG_EOR            : constant :=            8; --  Send end of record\n+   MSG_WAITALL        : constant :=           64; --  Wait for full reception\n+\n+   --------------------\n+   -- Socket options --\n+   --------------------\n+\n+   TCP_NODELAY        : constant :=            1; --  Do not coalesce packets\n+   SO_SNDBUF          : constant :=         4097; --  Set/get send buffer size\n+   SO_RCVBUF          : constant :=         4098; --  Set/get recv buffer size\n+   SO_REUSEADDR       : constant :=            4; --  Bind reuse local address\n+   SO_KEEPALIVE       : constant :=            8; --  Enable keep-alive msgs\n+   SO_LINGER          : constant :=          128; --  Defer close to flush data\n+   SO_ERROR           : constant :=         4103; --  Get/clear error status\n+   SO_BROADCAST       : constant :=           32; --  Can send broadcast msgs\n+   IP_ADD_MEMBERSHIP  : constant :=           35; --  Join a multicast group\n+   IP_DROP_MEMBERSHIP : constant :=           36; --  Leave a multicast group\n+   IP_MULTICAST_TTL   : constant :=           33; --  Set/get multicast TTL\n+   IP_MULTICAST_LOOP  : constant :=           34; --  Set/get mcast loopback\n+\n+end GNAT.Sockets.Constants;"}, {"sha": "c40e3520bd5d8a00b7d372da260d4816456e2ec6", "filename": "gcc/ada/3zsocthi.adb", "status": "added", "additions": 632, "deletions": 0, "changes": 632, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3zsocthi.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3zsocthi.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F3zsocthi.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -0,0 +1,632 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--                    G N A T . S O C K E T S . T H I N                     --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--            Copyright (C) 2002-2003 Ada Core Technologies, Inc.           --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This package provides a target dependent thin interface to the sockets\n+--  layer for use by the GNAT.Sockets package (g-socket.ads). This package\n+--  should not be directly with'ed by an applications program.\n+\n+--  This version is for VxWorks\n+\n+with GNAT.OS_Lib;  use GNAT.OS_Lib;\n+with GNAT.Task_Lock;\n+\n+with Interfaces.C; use Interfaces.C;\n+with Unchecked_Conversion;\n+\n+package body GNAT.Sockets.Thin is\n+\n+   Non_Blocking_Sockets : Fd_Set_Access := New_Socket_Set (No_Socket_Set);\n+   --  When this package is initialized with Process_Blocking_IO set\n+   --  to True, sockets are set in non-blocking mode to avoid blocking\n+   --  the whole process when a thread wants to perform a blocking IO\n+   --  operation. But the user can also set a socket in non-blocking\n+   --  mode by purpose. In order to make a difference between these\n+   --  two situations, we track the origin of non-blocking mode in\n+   --  Non_Blocking_Sockets. If S is in Non_Blocking_Sockets, it has\n+   --  been set in non-blocking mode by the user.\n+\n+   Quantum : constant Duration := 0.2;\n+   --  When Thread_Blocking_IO is False, we set sockets in\n+   --  non-blocking mode and we spend a period of time Quantum between\n+   --  two attempts on a blocking operation.\n+   Thread_Blocking_IO : Boolean := True;\n+\n+   --  The following types and variables are required to create a Hostent\n+   --  record \"by hand\".\n+\n+   type In_Addr_Access_Array_Access is access In_Addr_Access_Array;\n+\n+   Alias_Access : Chars_Ptr_Pointers.Pointer :=\n+                    new C.Strings.chars_ptr'(C.Strings.Null_Ptr);\n+\n+   In_Addr_Access_Array_A : In_Addr_Access_Array_Access :=\n+                              new In_Addr_Access_Array'(new In_Addr, null);\n+\n+   In_Addr_Access_Ptr : In_Addr_Access_Pointers.Pointer :=\n+                          In_Addr_Access_Array_A\n+                            (In_Addr_Access_Array_A'First)'Access;\n+\n+   Local_Hostent : Hostent_Access := new Hostent;\n+\n+   -----------------------\n+   -- Local Subprograms --\n+   -----------------------\n+\n+   --  All these require comments ???\n+\n+   function Syscall_Accept\n+     (S       : C.int;\n+      Addr    : System.Address;\n+      Addrlen : access C.int)\n+      return    C.int;\n+   pragma Import (C, Syscall_Accept, \"accept\");\n+\n+   function Syscall_Connect\n+     (S       : C.int;\n+      Name    : System.Address;\n+      Namelen : C.int)\n+      return    C.int;\n+   pragma Import (C, Syscall_Connect, \"connect\");\n+\n+   function Syscall_Ioctl\n+     (S    : C.int;\n+      Req  : C.int;\n+      Arg  : Int_Access)\n+      return C.int;\n+   pragma Import (C, Syscall_Ioctl, \"ioctl\");\n+\n+   function Syscall_Recv\n+     (S     : C.int;\n+      Msg   : System.Address;\n+      Len   : C.int;\n+      Flags : C.int)\n+      return  C.int;\n+   pragma Import (C, Syscall_Recv, \"recv\");\n+\n+   function Syscall_Recvfrom\n+     (S       : C.int;\n+      Msg     : System.Address;\n+      Len     : C.int;\n+      Flags   : C.int;\n+      From    : Sockaddr_In_Access;\n+      Fromlen : access C.int)\n+      return    C.int;\n+   pragma Import (C, Syscall_Recvfrom, \"recvfrom\");\n+\n+   function Syscall_Send\n+     (S     : C.int;\n+      Msg   : System.Address;\n+      Len   : C.int;\n+      Flags : C.int)\n+      return  C.int;\n+   pragma Import (C, Syscall_Send, \"send\");\n+\n+   function Syscall_Sendto\n+     (S     : C.int;\n+      Msg   : System.Address;\n+      Len   : C.int;\n+      Flags : C.int;\n+      To    : Sockaddr_In_Access;\n+      Tolen : C.int)\n+      return  C.int;\n+   pragma Import (C, Syscall_Sendto, \"sendto\");\n+\n+   function Syscall_Socket\n+     (Domain   : C.int;\n+      Typ      : C.int;\n+      Protocol : C.int)\n+      return     C.int;\n+   pragma Import (C, Syscall_Socket, \"socket\");\n+\n+   function  Non_Blocking_Socket (S : C.int) return Boolean;\n+   procedure Set_Non_Blocking_Socket (S : C.int; V : Boolean);\n+\n+   --------------\n+   -- C_Accept --\n+   --------------\n+\n+   function C_Accept\n+     (S       : C.int;\n+      Addr    : System.Address;\n+      Addrlen : access C.int)\n+      return    C.int\n+   is\n+      R   : C.int;\n+      Val : aliased C.int := 1;\n+      Res : C.int;\n+\n+   begin\n+      loop\n+         R := Syscall_Accept (S, Addr, Addrlen);\n+         exit when Thread_Blocking_IO\n+           or else R /= Failure\n+           or else Non_Blocking_Socket (S)\n+           or else Errno /= Constants.EWOULDBLOCK;\n+         delay Quantum;\n+      end loop;\n+\n+      if not Thread_Blocking_IO\n+        and then R /= Failure\n+      then\n+         --  A socket inherits the properties ot its server especially\n+         --  the FIONBIO flag. Do not use C_Ioctl as this subprogram\n+         --  tracks sockets set in non-blocking mode by user.\n+\n+         Set_Non_Blocking_Socket (R, Non_Blocking_Socket (S));\n+         Res := Syscall_Ioctl (R, Constants.FIONBIO, Val'Unchecked_Access);\n+      end if;\n+\n+      return R;\n+   end C_Accept;\n+\n+   ---------------\n+   -- C_Connect --\n+   ---------------\n+\n+   function C_Connect\n+     (S       : C.int;\n+      Name    : System.Address;\n+      Namelen : C.int)\n+      return    C.int\n+   is\n+      Res : C.int;\n+\n+   begin\n+      Res := Syscall_Connect (S, Name, Namelen);\n+\n+      if Thread_Blocking_IO\n+        or else Res /= Failure\n+        or else Non_Blocking_Socket (S)\n+        or else Errno /= Constants.EINPROGRESS\n+      then\n+         return Res;\n+      end if;\n+\n+      declare\n+         WSet : Fd_Set_Access;\n+         Now  : aliased Timeval;\n+\n+      begin\n+         WSet := New_Socket_Set (No_Socket_Set);\n+\n+         loop\n+            Insert_Socket_In_Set (WSet, S);\n+            Now := Immediat;\n+            Res := C_Select\n+              (S + 1,\n+               No_Fd_Set,\n+               WSet,\n+               No_Fd_Set,\n+               Now'Unchecked_Access);\n+\n+            exit when Res > 0;\n+\n+            if Res = Failure then\n+               Free_Socket_Set (WSet);\n+               return Res;\n+            end if;\n+\n+            delay Quantum;\n+         end loop;\n+\n+         Free_Socket_Set (WSet);\n+      end;\n+\n+      Res := Syscall_Connect (S, Name, Namelen);\n+\n+      if Res = Failure\n+        and then Errno = Constants.EISCONN\n+      then\n+         return Thin.Success;\n+      else\n+         return Res;\n+      end if;\n+   end C_Connect;\n+\n+   ---------------------\n+   -- C_Gethostbyaddr --\n+   ---------------------\n+\n+   function C_Gethostbyaddr\n+     (Addr : System.Address;\n+      Len  : C.int;\n+      Typ  : C.int)\n+      return Hostent_Access\n+   is\n+      pragma Warnings (Off, Len);\n+      pragma Warnings (Off, Typ);\n+\n+      type int_Access is access int;\n+      function To_Pointer is\n+        new Unchecked_Conversion (System.Address, int_Access);\n+\n+      procedure VxWorks_Gethostbyaddr\n+        (Addr : C.int; Buf : out C.char_array);\n+      pragma Import (C, VxWorks_Gethostbyaddr, \"hostGetByAddr\");\n+\n+      Host_Name : C.char_array (1 .. Max_Name_Length);\n+\n+   begin\n+      VxWorks_Gethostbyaddr (To_Pointer (Addr).all, Host_Name);\n+\n+      In_Addr_Access_Ptr.all.all := To_In_Addr (To_Pointer (Addr).all);\n+      Local_Hostent.all.H_Name := C.Strings.New_Char_Array (Host_Name);\n+\n+      return Local_Hostent;\n+   end C_Gethostbyaddr;\n+\n+   ---------------------\n+   -- C_Gethostbyname --\n+   ---------------------\n+\n+   function C_Gethostbyname\n+     (Name : C.char_array)\n+      return Hostent_Access\n+   is\n+      function VxWorks_Gethostbyname\n+        (Name : C.char_array)\n+        return C.int;\n+      pragma Import (C, VxWorks_Gethostbyname, \"hostGetByName\");\n+\n+      Addr : C.int;\n+\n+   begin\n+      Addr := VxWorks_Gethostbyname (Name);\n+\n+      In_Addr_Access_Ptr.all.all := To_In_Addr (Addr);\n+      Local_Hostent.all.H_Name := C.Strings.New_Char_Array (To_C (Host_Name));\n+\n+      return Local_Hostent;\n+   end C_Gethostbyname;\n+\n+   ---------------------\n+   -- C_Getservbyname --\n+   ---------------------\n+\n+   function C_Getservbyname\n+     (Name  : C.char_array;\n+      Proto : C.char_array)\n+      return  Servent_Access\n+   is\n+      pragma Warnings (Off, Name);\n+      pragma Warnings (Off, Proto);\n+\n+   begin\n+      return null;\n+   end C_Getservbyname;\n+\n+   ---------------------\n+   -- C_Getservbyport --\n+   ---------------------\n+\n+   function C_Getservbyport\n+     (Port  : C.int;\n+      Proto : C.char_array)\n+      return  Servent_Access\n+   is\n+      pragma Warnings (Off, Port);\n+      pragma Warnings (Off, Proto);\n+\n+   begin\n+      return null;\n+   end C_Getservbyport;\n+\n+   -------------\n+   -- C_Ioctl --\n+   -------------\n+\n+   function C_Ioctl\n+     (S    : C.int;\n+      Req  : C.int;\n+      Arg  : Int_Access)\n+      return C.int\n+   is\n+   begin\n+      if not Thread_Blocking_IO\n+        and then Req = Constants.FIONBIO\n+      then\n+         if Arg.all /= 0 then\n+            Set_Non_Blocking_Socket (S, True);\n+         end if;\n+      end if;\n+\n+      return Syscall_Ioctl (S, Req, Arg);\n+   end C_Ioctl;\n+\n+   ------------\n+   -- C_Recv --\n+   ------------\n+\n+   function C_Recv\n+     (S     : C.int;\n+      Msg   : System.Address;\n+      Len   : C.int;\n+      Flags : C.int)\n+      return  C.int\n+   is\n+      Res : C.int;\n+\n+   begin\n+      loop\n+         Res := Syscall_Recv (S, Msg, Len, Flags);\n+         exit when Thread_Blocking_IO\n+           or else Res /= Failure\n+           or else Non_Blocking_Socket (S)\n+           or else Errno /= Constants.EWOULDBLOCK;\n+         delay Quantum;\n+      end loop;\n+\n+      return Res;\n+   end C_Recv;\n+\n+   ----------------\n+   -- C_Recvfrom --\n+   ----------------\n+\n+   function C_Recvfrom\n+     (S       : C.int;\n+      Msg     : System.Address;\n+      Len     : C.int;\n+      Flags   : C.int;\n+      From    : Sockaddr_In_Access;\n+      Fromlen : access C.int)\n+      return    C.int\n+   is\n+      Res : C.int;\n+\n+   begin\n+      loop\n+         Res := Syscall_Recvfrom (S, Msg, Len, Flags, From, Fromlen);\n+         exit when Thread_Blocking_IO\n+           or else Res /= Failure\n+           or else Non_Blocking_Socket (S)\n+           or else Errno /= Constants.EWOULDBLOCK;\n+         delay Quantum;\n+      end loop;\n+\n+      return Res;\n+   end C_Recvfrom;\n+\n+   ------------\n+   -- C_Send --\n+   ------------\n+\n+   function C_Send\n+     (S     : C.int;\n+      Msg   : System.Address;\n+      Len   : C.int;\n+      Flags : C.int)\n+      return  C.int\n+   is\n+      Res : C.int;\n+\n+   begin\n+      loop\n+         Res := Syscall_Send (S, Msg, Len, Flags);\n+         exit when Thread_Blocking_IO\n+           or else Res /= Failure\n+           or else Non_Blocking_Socket (S)\n+           or else Errno /= Constants.EWOULDBLOCK;\n+         delay Quantum;\n+      end loop;\n+\n+      return Res;\n+   end C_Send;\n+\n+   --------------\n+   -- C_Sendto --\n+   --------------\n+\n+   function C_Sendto\n+     (S     : C.int;\n+      Msg   : System.Address;\n+      Len   : C.int;\n+      Flags : C.int;\n+      To    : Sockaddr_In_Access;\n+      Tolen : C.int)\n+      return  C.int\n+   is\n+      Res : C.int;\n+\n+   begin\n+      loop\n+         Res := Syscall_Sendto (S, Msg, Len, Flags, To, Tolen);\n+         exit when Thread_Blocking_IO\n+           or else Res /= Failure\n+           or else Non_Blocking_Socket (S)\n+           or else Errno /= Constants.EWOULDBLOCK;\n+         delay Quantum;\n+      end loop;\n+\n+      return Res;\n+   end C_Sendto;\n+\n+   --------------\n+   -- C_Socket --\n+   --------------\n+\n+   function C_Socket\n+     (Domain   : C.int;\n+      Typ      : C.int;\n+      Protocol : C.int)\n+      return     C.int\n+   is\n+      R   : C.int;\n+      Val : aliased C.int := 1;\n+      Res : C.int;\n+\n+   begin\n+      R := Syscall_Socket (Domain, Typ, Protocol);\n+\n+      if not Thread_Blocking_IO\n+        and then R /= Failure\n+      then\n+         --  Do not use C_Ioctl as this subprogram tracks sockets set\n+         --  in non-blocking mode by user.\n+\n+         Res := Syscall_Ioctl (R, Constants.FIONBIO, Val'Unchecked_Access);\n+         Set_Non_Blocking_Socket (R, False);\n+      end if;\n+\n+      return R;\n+   end C_Socket;\n+\n+   --------------\n+   -- Finalize --\n+   --------------\n+\n+   procedure Finalize is\n+   begin\n+      null;\n+   end Finalize;\n+\n+   ----------------\n+   -- Initialize --\n+   ----------------\n+\n+   procedure Initialize (Process_Blocking_IO : Boolean) is\n+   begin\n+      Thread_Blocking_IO := not Process_Blocking_IO;\n+   end Initialize;\n+\n+   -------------------------\n+   -- Non_Blocking_Socket --\n+   -------------------------\n+\n+   function Non_Blocking_Socket (S : C.int) return Boolean is\n+      R : Boolean;\n+\n+   begin\n+      Task_Lock.Lock;\n+      R := Is_Socket_In_Set (Non_Blocking_Sockets, S);\n+      Task_Lock.Unlock;\n+      return R;\n+   end Non_Blocking_Socket;\n+\n+   -----------------\n+   -- Set_Address --\n+   -----------------\n+\n+   procedure Set_Address\n+     (Sin     : Sockaddr_In_Access;\n+      Address : In_Addr)\n+   is\n+   begin\n+      Sin.Sin_Addr   := Address;\n+   end Set_Address;\n+\n+   ----------------\n+   -- Set_Family --\n+   ----------------\n+\n+   procedure Set_Family\n+     (Sin    : Sockaddr_In_Access;\n+      Family : C.int)\n+   is\n+   begin\n+      Sin.Sin_Family := C.unsigned_char (Family);\n+   end Set_Family;\n+\n+   ----------------\n+   -- Set_Length --\n+   ----------------\n+\n+   procedure Set_Length\n+     (Sin : Sockaddr_In_Access;\n+      Len : C.int)\n+   is\n+   begin\n+      Sin.Sin_Length := C.unsigned_char (Len);\n+   end Set_Length;\n+\n+   -----------------------------\n+   -- Set_Non_Blocking_Socket --\n+   -----------------------------\n+\n+   procedure Set_Non_Blocking_Socket (S : C.int; V : Boolean) is\n+   begin\n+      Task_Lock.Lock;\n+      if V then\n+         Insert_Socket_In_Set (Non_Blocking_Sockets, S);\n+      else\n+         Remove_Socket_From_Set (Non_Blocking_Sockets, S);\n+      end if;\n+\n+      Task_Lock.Unlock;\n+   end Set_Non_Blocking_Socket;\n+\n+   --------------\n+   -- Set_Port --\n+   --------------\n+\n+   procedure Set_Port\n+     (Sin  : Sockaddr_In_Access;\n+      Port : C.unsigned_short)\n+   is\n+   begin\n+      Sin.Sin_Port   := Port;\n+   end Set_Port;\n+\n+   --------------------------\n+   -- Socket_Error_Message --\n+   --------------------------\n+\n+   function Socket_Error_Message (Errno : Integer) return String is\n+      use type Interfaces.C.Strings.chars_ptr;\n+\n+      C_Msg : C.Strings.chars_ptr;\n+\n+   begin\n+      C_Msg := C_Strerror (C.int (Errno));\n+\n+      if C_Msg = C.Strings.Null_Ptr then\n+         return \"Unknown system error\";\n+\n+      else\n+         return C.Strings.Value (C_Msg);\n+      end if;\n+   end Socket_Error_Message;\n+\n+--  Package elaboration\n+\n+begin\n+   Local_Hostent.all.H_Aliases   := Alias_Access;\n+\n+   --  VxWorks currently only supports AF_INET\n+\n+   Local_Hostent.all.H_Addrtype  := Constants.AF_INET;\n+\n+   Local_Hostent.all.H_Length    := 1;\n+   Local_Hostent.all.H_Addr_List := In_Addr_Access_Ptr;\n+\n+end GNAT.Sockets.Thin;"}, {"sha": "7ff589b5444cbf6e43a30a1b8ccfbad82508f0d7", "filename": "gcc/ada/3zsocthi.ads", "status": "added", "additions": 446, "deletions": 0, "changes": 446, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3zsocthi.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F3zsocthi.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F3zsocthi.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -0,0 +1,446 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--                    G N A T . S O C K E T S . T H I N                     --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--            Copyright (C) 2002-2003 Ada Core Technologies, Inc.           --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This package provides a target dependent thin interface to the sockets\n+--  layer for use by the GNAT.Sockets package (g-socket.ads). This package\n+--  should not be directly with'ed by an applications program.\n+\n+--  This is the version for VxWorks\n+\n+with Interfaces.C.Pointers;\n+\n+with Ada.Unchecked_Conversion;\n+with Interfaces.C.Strings;\n+with GNAT.Sockets.Constants;\n+with GNAT.OS_Lib;\n+\n+with System;\n+\n+package GNAT.Sockets.Thin is\n+\n+   package C renames Interfaces.C;\n+\n+   use type C.int;\n+   --  This is so we can declare the Failure constant below\n+\n+   Success : constant C.int :=  0;\n+   Failure : constant C.int := -1;\n+\n+   function Socket_Errno return Integer renames GNAT.OS_Lib.Errno;\n+   --  Returns last socket error number.\n+\n+   function Socket_Error_Message (Errno : Integer) return String;\n+   --  Returns the error message string for the error number Errno. If\n+   --  Errno is not known it returns \"Unknown system error\".\n+\n+   subtype Fd_Set_Access is System.Address;\n+   No_Fd_Set : constant Fd_Set_Access := System.Null_Address;\n+\n+   type Timeval_Unit is new C.int;\n+   pragma Convention (C, Timeval_Unit);\n+\n+   type Timeval is record\n+      Tv_Sec  : Timeval_Unit;\n+      Tv_Usec : Timeval_Unit;\n+   end record;\n+   pragma Convention (C, Timeval);\n+\n+   type Timeval_Access is access all Timeval;\n+   pragma Convention (C, Timeval_Access);\n+\n+   Immediat : constant Timeval := (0, 0);\n+\n+   type Int_Access is access all C.int;\n+   pragma Convention (C, Int_Access);\n+   --  Access to C integers\n+\n+   type Chars_Ptr_Array is array (C.size_t range <>) of\n+     aliased C.Strings.chars_ptr;\n+\n+   package Chars_Ptr_Pointers is\n+      new C.Pointers (C.size_t, C.Strings.chars_ptr, Chars_Ptr_Array,\n+                      C.Strings.Null_Ptr);\n+   --  Arrays of C (char *)\n+\n+   type In_Addr is record\n+      S_B1, S_B2, S_B3, S_B4 : C.unsigned_char;\n+   end record;\n+   pragma Convention (C, In_Addr);\n+   --  Internet address\n+\n+   function To_In_Addr is new Ada.Unchecked_Conversion (C.int, In_Addr);\n+\n+   type In_Addr_Access is access all In_Addr;\n+   pragma Convention (C, In_Addr_Access);\n+   --  Access to internet address\n+\n+   Inaddr_Any : aliased constant In_Addr := (others => 0);\n+   --  Any internet address (all the interfaces)\n+\n+   type In_Addr_Access_Array is array (C.size_t range <>)\n+     of aliased In_Addr_Access;\n+   pragma Convention (C, In_Addr_Access_Array);\n+\n+   package In_Addr_Access_Pointers is\n+     new C.Pointers (C.size_t, In_Addr_Access, In_Addr_Access_Array, null);\n+   --  Array of internet addresses\n+\n+   type Sockaddr is record\n+      Sa_Length : C.unsigned_char;\n+      Sa_Family : C.unsigned_char;\n+      Sa_Data   : C.char_array (1 .. 14);\n+   end record;\n+   pragma Convention (C, Sockaddr);\n+   --  Socket address\n+\n+   type Sockaddr_Access is access all Sockaddr;\n+   pragma Convention (C, Sockaddr_Access);\n+   --  Access to socket address\n+\n+   type Sockaddr_In is record\n+      Sin_Length : C.unsigned_char       := 0;\n+      Sin_Family : C.unsigned_char       := Constants.AF_INET;\n+      Sin_Port   : C.unsigned_short      := 0;\n+      Sin_Addr   : In_Addr               := Inaddr_Any;\n+      Sin_Zero   : C.char_array (1 .. 8) := (others => C.char'Val (0));\n+   end record;\n+   pragma Convention (C, Sockaddr_In);\n+   --  Internet socket address\n+\n+   type Sockaddr_In_Access is access all Sockaddr_In;\n+   pragma Convention (C, Sockaddr_In_Access);\n+   --  Access to internet socket address\n+\n+   procedure Set_Length\n+     (Sin : Sockaddr_In_Access;\n+      Len : C.int);\n+   pragma Inline (Set_Length);\n+   --  Set Sin.Sin_Length to Len.\n+\n+   procedure Set_Family\n+     (Sin     : Sockaddr_In_Access;\n+      Family  : C.int);\n+   pragma Inline (Set_Family);\n+   --  Set Sin.Sin_Family to Family.\n+\n+   procedure Set_Port\n+     (Sin     : Sockaddr_In_Access;\n+      Port    : C.unsigned_short);\n+   pragma Inline (Set_Port);\n+   --  Set Sin.Sin_Port to Port.\n+\n+   procedure Set_Address\n+     (Sin        : Sockaddr_In_Access;\n+      Address    : In_Addr);\n+   pragma Inline (Set_Address);\n+   --  Set Sin.Sin_Addr to Address.\n+\n+   type Hostent is record\n+      H_Name      : C.Strings.chars_ptr;\n+      H_Aliases   : Chars_Ptr_Pointers.Pointer;\n+      H_Addrtype  : C.int;\n+      H_Length    : C.int;\n+      H_Addr_List : In_Addr_Access_Pointers.Pointer;\n+   end record;\n+   pragma Convention (C, Hostent);\n+   --  Host entry\n+\n+   type Hostent_Access is access all Hostent;\n+   pragma Convention (C, Hostent_Access);\n+   --  Access to host entry\n+\n+   type Servent is record\n+      S_Name      : C.Strings.chars_ptr;\n+      S_Aliases   : Chars_Ptr_Pointers.Pointer;\n+      S_Port      : C.int;\n+      S_Proto     : C.Strings.chars_ptr;\n+   end record;\n+   pragma Convention (C, Servent);\n+   --  Service entry\n+\n+   type Servent_Access is access all Servent;\n+   pragma Convention (C, Servent_Access);\n+   --  Access to service entry\n+\n+   type Two_Int is array (0 .. 1) of C.int;\n+   pragma Convention (C, Two_Int);\n+   --  Used with pipe()\n+\n+   function C_Accept\n+     (S       : C.int;\n+      Addr    : System.Address;\n+      Addrlen : access C.int)\n+      return    C.int;\n+\n+   function C_Bind\n+     (S       : C.int;\n+      Name    : System.Address;\n+      Namelen : C.int)\n+      return    C.int;\n+\n+   function C_Close\n+     (Fd   : C.int)\n+      return C.int;\n+\n+   function C_Connect\n+     (S       : C.int;\n+      Name    : System.Address;\n+      Namelen : C.int)\n+      return    C.int;\n+\n+   function C_Gethostbyaddr\n+     (Addr : System.Address;\n+      Len  : C.int;\n+      Typ  : C.int)\n+      return Hostent_Access;\n+\n+   function C_Gethostbyname\n+     (Name : C.char_array)\n+      return Hostent_Access;\n+\n+   function C_Gethostname\n+     (Name    : System.Address;\n+      Namelen : C.int)\n+      return    C.int;\n+\n+   function C_Getpeername\n+     (S       : C.int;\n+      Name    : System.Address;\n+      Namelen : access C.int)\n+      return    C.int;\n+\n+   function C_Getservbyname\n+     (Name  : C.char_array;\n+      Proto : C.char_array)\n+      return Servent_Access;\n+\n+   function C_Getservbyport\n+     (Port  : C.int;\n+      Proto : C.char_array)\n+      return Servent_Access;\n+\n+   function C_Getsockname\n+     (S       : C.int;\n+      Name    : System.Address;\n+      Namelen : access C.int)\n+      return    C.int;\n+\n+   function C_Getsockopt\n+     (S       : C.int;\n+      Level   : C.int;\n+      Optname : C.int;\n+      Optval  : System.Address;\n+      Optlen  : access C.int)\n+      return    C.int;\n+\n+   function C_Inet_Addr\n+     (Cp   : C.Strings.chars_ptr)\n+      return C.int;\n+\n+   function C_Ioctl\n+     (S    : C.int;\n+      Req  : C.int;\n+      Arg  : Int_Access)\n+      return C.int;\n+\n+   function C_Listen (S, Backlog : C.int) return C.int;\n+\n+   function C_Read\n+     (Fd    : C.int;\n+      Buf   : System.Address;\n+      Count : C.int)\n+      return  C.int;\n+\n+   function C_Readv\n+     (Fd     : C.int;\n+      Iov    : System.Address;\n+      Iovcnt : C.int)\n+      return   C.int;\n+\n+   function C_Recv\n+     (S     : C.int;\n+      Msg   : System.Address;\n+      Len   : C.int;\n+      Flags : C.int)\n+      return  C.int;\n+\n+   function C_Recvfrom\n+     (S       : C.int;\n+      Msg     : System.Address;\n+      Len     : C.int;\n+      Flags   : C.int;\n+      From    : Sockaddr_In_Access;\n+      Fromlen : access C.int)\n+      return    C.int;\n+\n+   function C_Select\n+     (Nfds      : C.int;\n+      Readfds   : Fd_Set_Access;\n+      Writefds  : Fd_Set_Access;\n+      Exceptfds : Fd_Set_Access;\n+      Timeout   : Timeval_Access)\n+      return      C.int;\n+\n+   function C_Send\n+     (S     : C.int;\n+      Msg   : System.Address;\n+      Len   : C.int;\n+      Flags : C.int)\n+      return  C.int;\n+\n+   function C_Sendto\n+     (S     : C.int;\n+      Msg   : System.Address;\n+      Len   : C.int;\n+      Flags : C.int;\n+      To    : Sockaddr_In_Access;\n+      Tolen : C.int)\n+      return  C.int;\n+\n+   function C_Setsockopt\n+     (S       : C.int;\n+      Level   : C.int;\n+      Optname : C.int;\n+      Optval  : System.Address;\n+      Optlen  : C.int)\n+      return    C.int;\n+\n+   function C_Shutdown\n+     (S    : C.int;\n+      How  : C.int)\n+      return C.int;\n+\n+   function C_Socket\n+     (Domain   : C.int;\n+      Typ      : C.int;\n+      Protocol : C.int)\n+      return     C.int;\n+\n+   function C_Strerror\n+     (Errnum : C.int)\n+      return   C.Strings.chars_ptr;\n+\n+   function C_System\n+     (Command : System.Address)\n+      return    C.int;\n+\n+   function C_Write\n+     (Fd    : C.int;\n+      Buf   : System.Address;\n+      Count : C.int)\n+      return  C.int;\n+\n+   function C_Writev\n+     (Fd     : C.int;\n+      Iov    : System.Address;\n+      Iovcnt : C.int)\n+      return   C.int;\n+\n+   procedure Free_Socket_Set\n+     (Set    : Fd_Set_Access);\n+   --  Free system-dependent socket set\n+\n+   procedure Get_Socket_From_Set\n+     (Set    : Fd_Set_Access;\n+      Socket : Int_Access;\n+      Last   : Int_Access);\n+   --  Get last socket in Socket and remove it from the socket\n+   --  set. The parameter Last is a maximum value of the largest\n+   --  socket. This hint is used to avoid scanning very large socket\n+   --  sets. After a call to Get_Socket_From_Set, Last is set back to\n+   --  the real largest socket in the socket set.\n+\n+   procedure Insert_Socket_In_Set\n+     (Set    : Fd_Set_Access;\n+      Socket : C.int);\n+   --  Insert socket in the socket set\n+\n+   function  Is_Socket_In_Set\n+     (Set    : Fd_Set_Access;\n+      Socket : C.int)\n+     return Boolean;\n+   --  Check whether Socket is in the socket set\n+\n+   procedure Last_Socket_In_Set\n+     (Set    : Fd_Set_Access;\n+      Last   : Int_Access);\n+   --  Find the largest socket in the socket set. This is needed for\n+   --  select(). When Last_Socket_In_Set is called, parameter Last is\n+   --  a maximum value of the largest socket. This hint is used to\n+   --  avoid scanning very large socket sets. After the call, Last is\n+   --  set back to the real largest socket in the socket set.\n+\n+   function  New_Socket_Set\n+     (Set    : Fd_Set_Access)\n+     return   Fd_Set_Access;\n+   --  Allocate a new socket set which is a system-dependent structure\n+   --  and initialize by copying Set if it is non-null, by making it\n+   --  empty otherwise.\n+\n+   procedure Remove_Socket_From_Set\n+     (Set    : Fd_Set_Access;\n+      Socket : C.int);\n+   --  Remove socket from the socket set\n+\n+   procedure Finalize;\n+   procedure Initialize (Process_Blocking_IO : Boolean);\n+\n+private\n+\n+   pragma Import (C, C_Bind, \"bind\");\n+   pragma Import (C, C_Close, \"close\");\n+   pragma Import (C, C_Gethostname, \"gethostname\");\n+   pragma Import (C, C_Getpeername, \"getpeername\");\n+   pragma Import (C, C_Getsockname, \"getsockname\");\n+   pragma Import (C, C_Getsockopt, \"getsockopt\");\n+   pragma Import (C, C_Inet_Addr, \"inet_addr\");\n+   pragma Import (C, C_Listen, \"listen\");\n+   pragma Import (C, C_Read, \"read\");\n+   pragma Import (C, C_Readv, \"readv\");\n+   pragma Import (C, C_Select, \"select\");\n+   pragma Import (C, C_Setsockopt, \"setsockopt\");\n+   pragma Import (C, C_Shutdown, \"shutdown\");\n+   pragma Import (C, C_Strerror, \"strerror\");\n+   pragma Import (C, C_System, \"system\");\n+   pragma Import (C, C_Write, \"write\");\n+   pragma Import (C, C_Writev, \"writev\");\n+\n+   pragma Import (C, Free_Socket_Set, \"__gnat_free_socket_set\");\n+   pragma Import (C, Get_Socket_From_Set, \"__gnat_get_socket_from_set\");\n+   pragma Import (C, Is_Socket_In_Set, \"__gnat_is_socket_in_set\");\n+   pragma Import (C, Last_Socket_In_Set, \"__gnat_last_socket_in_set\");\n+   pragma Import (C, New_Socket_Set, \"__gnat_new_socket_set\");\n+   pragma Import (C, Insert_Socket_In_Set, \"__gnat_insert_socket_in_set\");\n+   pragma Import (C, Remove_Socket_From_Set, \"__gnat_remove_socket_from_set\");\n+\n+end GNAT.Sockets.Thin;"}, {"sha": "b7009ab569e27ea647986ed1e220bee0dcdde36b", "filename": "gcc/ada/41intnam.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F41intnam.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F41intnam.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F41intnam.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -27,7 +27,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "edc911596905035ad080a9e76d69ee0b7d89b2a7", "filename": "gcc/ada/42intnam.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F42intnam.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F42intnam.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F42intnam.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -27,7 +27,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "95509a89d946df30ae5794ba8ac1052ec83b3a72", "filename": "gcc/ada/4aintnam.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F4aintnam.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F4aintnam.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F4aintnam.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -27,7 +27,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "fa56138b4617b07c810e8fe5dbc1d4c142ed8dec", "filename": "gcc/ada/4cintnam.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F4cintnam.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F4cintnam.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F4cintnam.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -27,7 +27,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "37e77777c8e73074bd80958ee7514aaa7a49f149", "filename": "gcc/ada/4dintnam.ads", "status": "removed", "additions": 0, "deletions": 97, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75a5a481c2048242ed62c7355381160aa1369616/gcc%2Fada%2F4dintnam.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75a5a481c2048242ed62c7355381160aa1369616/gcc%2Fada%2F4dintnam.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F4dintnam.ads?ref=75a5a481c2048242ed62c7355381160aa1369616", "patch": "@@ -1,97 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                GNU ADA RUN-TIME LIBRARY (GNARL) COMPONENTS               --\n---                                                                          --\n---                   A D A . I N T E R R U P T S . N A M E S                --\n---                                                                          --\n---                                  S p e c                                 --\n---                                                                          --\n---             Copyright (C) 1991-2002 Free Software Foundation, Inc.       --\n---                                                                          --\n--- GNARL is free software; you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion. GNARL is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNARL; see file COPYING.  If not, write --\n--- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n--- MA 02111-1307, USA.                                                      --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This is a DOS/DJGPPv2 (FSU THREAD) version of this package.\n---\n---  The following signals are reserved by the run time:\n---\n---  SIGFPE, SIGILL, SIGSEGV, SIGABRT, SIGTRAP, SIGINT, SIGALRM\n---  SIGSTOP, SIGKILL\n---\n---  The pragma Unreserve_All_Interrupts affects the following signal(s):\n---\n---  SIGINT: Made available for Ada handler\n-\n---  This target-dependent package spec contains names of interrupts\n---  supported by the local system.\n-\n-with System.OS_Interface;\n---  used for names of interrupts\n-\n-package Ada.Interrupts.Names is\n-\n-   --  Beware that the mapping of names to signals may be\n-   --  many-to-one.  There may be aliases.  Also, for all\n-   --  signal names that are not supported on the current system\n-   --  the value of the corresponding constant will be zero.\n-\n-   SIGHUP : constant Interrupt_ID :=\n-     System.OS_Interface.SIGHUP;      --  hangup\n-\n-   SIGINT : constant Interrupt_ID :=\n-     System.OS_Interface.SIGINT;      --  interrupt (rubout)\n-\n-   SIGQUIT : constant Interrupt_ID :=\n-     System.OS_Interface.SIGQUIT;     --  quit (ASCD FS)\n-\n-   SIGILL : constant Interrupt_ID :=\n-     System.OS_Interface.SIGILL;      --  illegal instruction (not reset)\n-\n-   SIGABRT : constant Interrupt_ID := --  used by abort,\n-     System.OS_Interface.SIGABRT;     --  replace SIGIOT in the  future\n-\n-   SIGFPE : constant Interrupt_ID :=\n-     System.OS_Interface.SIGFPE;      --  floating point exception\n-\n-   SIGKILL : constant Interrupt_ID :=\n-     System.OS_Interface.SIGKILL;     --  kill (cannot be caught or ignored)\n-\n-   SIGSEGV : constant Interrupt_ID :=\n-     System.OS_Interface.SIGSEGV;     --  segmentation violation\n-\n-   SIGPIPE : constant Interrupt_ID := --  write on a pipe with\n-     System.OS_Interface.SIGPIPE;     --  no one to read it\n-\n-   SIGALRM : constant Interrupt_ID :=\n-     System.OS_Interface.SIGALRM;     --  alarm clock\n-\n-   SIGTERM : constant Interrupt_ID :=\n-     System.OS_Interface.SIGTERM;     --  software termination signal from kill\n-\n-   SIGUSR1 : constant Interrupt_ID :=\n-     System.OS_Interface.SIGUSR1;     --  user defined signal 1\n-\n-   SIGUSR2 : constant Interrupt_ID :=\n-     System.OS_Interface.SIGUSR2;     --  user defined signal 2\n-\n-end Ada.Interrupts.Names;"}, {"sha": "afd82f2bb6cc8d00389c96cc2bc4cb2883b73c1c", "filename": "gcc/ada/4gintnam.ads", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F4gintnam.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F4gintnam.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F4gintnam.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,8 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---             Copyright (C) 1997-2002, Florida State University            --\n+--             Copyright (C) 1991-1994, Florida State University            --\n+--             Copyright (C) 1995-2003, Ada Core Technologies               --\n --                                                                          --\n -- GNARL is free software; you can redistribute it  and/or modify it  under --\n -- terms  of  the  GNU  Library General Public License  as published by the --\n@@ -26,27 +27,26 @@\n -- however invalidate  any other reasons why  the executable file  might be --\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University. It is --\n--- now maintained by Ada Core Technologies Inc. in cooperation with Florida --\n--- State University (http://www.gnat.com).                                  --\n+-- GNARL was developed by the GNARL team at Florida State University.       --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n --  This is the Irix version of this package\n---\n+\n --  The following signals are reserved by the run time (Athread library):\n---\n+\n --  SIGFPE, SIGILL, SIGSEGV, SIGBUS, SIGTRAP, SIGSTOP, SIGKILL\n---\n+\n --  The following signals are reserved by the run time (Pthread library):\n---\n+\n --  SIGTSTP, SIGILL, SIGTRAP, SIGEMT, SIGFPE, SIGBUS, SIGSTOP, SIGKILL,\n --  SIGSEGV, SIGSYS, SIGXCPU, SIGXFSZ, SIGPROF, SIGPTINTR, SIGPTRESCHED,\n --  SIGABRT, SIGINT\n---\n+\n --  The pragma Unreserve_All_Interrupts affects the following signal\n --  (Pthread library):\n---\n+\n --  SIGINT: made available for Ada handler\n \n --  This target-dependent package spec contains names of interrupts"}, {"sha": "7deb26a86035aef48e2042786cefb85b55f1b04d", "filename": "gcc/ada/4hexcpol.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F4hexcpol.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F4hexcpol.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F4hexcpol.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -28,7 +28,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "0e01a0fa74e09d0dfbfe51d3b0fb4cf7dd328e51", "filename": "gcc/ada/4hintnam.ads", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F4hintnam.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F4hintnam.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F4hintnam.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,8 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---             Copyright (C) 1991-2002, Florida State University            --\n+--             Copyright (C) 1991-1994, Florida State University            --\n+--             Copyright (C) 1995-2003, Ada Core Technologies               --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,21 +27,20 @@\n -- however invalidate  any other reasons why  the executable file  might be --\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University. It is --\n--- now maintained by Ada Core Technologies Inc. in cooperation with Florida --\n--- State University (http://www.gnat.com).                                  --\n+-- GNARL was developed by the GNARL team at Florida State University.       --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n --  This is a HP-UX version of this package.\n---\n+\n --  The following signals are reserved by the run time:\n---\n+\n --  SIGFPE, SIGILL, SIGSEGV, SIGBUS, SIGTRAP, SIGTERM, SIGABRT, SIGINT,\n --  SIGALRM, SIGSTOP, SIGKILL\n---\n+\n --  The pragma Unreserve_All_Interrupts affects the following signal(s):\n---\n+\n --  SIGINT: made available for Ada handler\n \n --  This target-dependent package spec contains names of interrupts"}, {"sha": "ce9ccc774dbcafc43d0f30c6e1d6bdf3f703d53b", "filename": "gcc/ada/4lintnam.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F4lintnam.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F4lintnam.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F4lintnam.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -27,7 +27,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "f893e55518966f14d22e9766ce7412761ed80196", "filename": "gcc/ada/4mintnam.ads", "status": "removed", "additions": 0, "deletions": 145, "changes": 145, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75a5a481c2048242ed62c7355381160aa1369616/gcc%2Fada%2F4mintnam.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75a5a481c2048242ed62c7355381160aa1369616/gcc%2Fada%2F4mintnam.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F4mintnam.ads?ref=75a5a481c2048242ed62c7355381160aa1369616", "patch": "@@ -1,145 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                GNU ADA RUN-TIME LIBRARY (GNARL) COMPONENTS               --\n---                                                                          --\n---                   A D A . I N T E R R U P T S . N A M E S                --\n---                                                                          --\n---                                  S p e c                                 --\n---                                                                          --\n---          Copyright (C) 1996-2002 Free Software Foundation, Inc.          --\n---                                                                          --\n--- GNARL is free software; you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion. GNARL is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNARL; see file COPYING.  If not, write --\n--- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n--- MA 02111-1307, USA.                                                      --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This is a Machten version of this package.\n---\n---  The following signals are reserved by the run time:\n---\n---  SIGFPE, SIGILL, SIGSEGV, SIGBUS, SIGTRAP, SIGABRT, SIGINT,\n---  SIGALRM, SIGEMT, SIGCHLD, SIGSTOP, SIGKILL\n---\n---  The pragma Unreserve_All_Interrupts affects the following signal(s):\n---\n---  SIGINT: made available for Ada handlers\n-\n---  This target-dependent package spec contains names of interrupts\n---  supported by the local system.\n-\n-with System.OS_Interface;\n---  used for names of interrupts\n-\n-package Ada.Interrupts.Names is\n-\n-   --  Beware that the mapping of names to signals may be\n-   --  many-to-one.  There may be aliases.  Also, for all\n-   --  signal names that are not supported on the current system\n-   --  the value of the corresponding constant will be zero.\n-\n-   SIGHUP : constant Interrupt_ID :=\n-     System.OS_Interface.SIGHUP;      --  hangup\n-\n-   SIGINT : constant Interrupt_ID :=\n-     System.OS_Interface.SIGINT;      --  interrupt (rubout)\n-\n-   SIGQUIT : constant Interrupt_ID :=\n-     System.OS_Interface.SIGQUIT;     --  quit (ASCD FS)\n-\n-   SIGILL : constant Interrupt_ID :=\n-     System.OS_Interface.SIGILL;      --  illegal instruction (not reset)\n-\n-   SIGTRAP : constant Interrupt_ID :=\n-     System.OS_Interface.SIGTRAP;     --  trace trap (not reset)\n-\n-   SIGABRT : constant Interrupt_ID := --  used by abort,\n-     System.OS_Interface.SIGABRT;     --  replace SIGIOT in the  future\n-\n-   SIGIOT : constant Interrupt_ID :=\n-     System.OS_Interface.SIGIOT;      --  IOT instruction\n-\n-   SIGBUS : constant Interrupt_ID :=\n-     System.OS_Interface.SIGBUS;      --  bus error\n-\n-   SIGFPE : constant Interrupt_ID :=\n-     System.OS_Interface.SIGFPE;      --  floating point exception\n-\n-   SIGKILL : constant Interrupt_ID :=\n-     System.OS_Interface.SIGKILL;     --  kill (cannot be caught or ignored)\n-\n-   SIGUSR1 : constant Interrupt_ID :=\n-     System.OS_Interface.SIGUSR1;     --  user defined signal 1\n-\n-   SIGSEGV : constant Interrupt_ID :=\n-     System.OS_Interface.SIGSEGV;     --  segmentation violation\n-\n-   SIGUSR2 : constant Interrupt_ID :=\n-     System.OS_Interface.SIGUSR2;     --  user defined signal 2\n-\n-   SIGPIPE : constant Interrupt_ID := --  write on a pipe with\n-     System.OS_Interface.SIGPIPE;     --  no one to read it\n-\n-   SIGALRM : constant Interrupt_ID :=\n-     System.OS_Interface.SIGALRM;     --  alarm clock\n-\n-   SIGTERM : constant Interrupt_ID :=\n-     System.OS_Interface.SIGTERM;     --  software termination signal from kill\n-\n-   SIGCHLD : constant Interrupt_ID :=\n-     System.OS_Interface.SIGCHLD;     --  4.3BSD's/POSIX name for SIGCLD\n-\n-   SIGCONT : constant Interrupt_ID :=\n-     System.OS_Interface.SIGCONT;     --  stopped process has been continued\n-\n-   SIGSTOP : constant Interrupt_ID :=\n-     System.OS_Interface.SIGSTOP;     --  stop (cannot be caught or ignored)\n-\n-   SIGTSTP : constant Interrupt_ID :=\n-     System.OS_Interface.SIGTSTP;     --  user stop requested from tty\n-\n-   SIGTTIN : constant Interrupt_ID :=\n-     System.OS_Interface.SIGTTIN;     --  background tty read attempted\n-\n-   SIGTTOU : constant Interrupt_ID :=\n-     System.OS_Interface.SIGTTOU;     --  background tty write attempted\n-\n-   SIGURG : constant Interrupt_ID :=\n-     System.OS_Interface.SIGURG;      --  urgent condition on IO channel\n-\n-   SIGXCPU : constant Interrupt_ID :=\n-     System.OS_Interface.SIGXCPU;     --  CPU time limit exceeded\n-\n-   SIGXFSZ : constant Interrupt_ID :=\n-     System.OS_Interface.SIGXFSZ;     --  filesize limit exceeded\n-\n-   SIGVTALRM : constant Interrupt_ID :=\n-     System.OS_Interface.SIGVTALRM;   --  virtual timer expired\n-\n-   SIGPROF : constant Interrupt_ID :=\n-     System.OS_Interface.SIGPROF;     --  profiling timer expired\n-\n-   SIGWINCH : constant Interrupt_ID :=\n-     System.OS_Interface.SIGWINCH;    --  window size change\n-\n-   SIGIO : constant Interrupt_ID :=   --  input/output possible,\n-     System.OS_Interface.SIGIO;\n-\n-end Ada.Interrupts.Names;"}, {"sha": "427ba5cc18aded40dfe98dfd69efc95fa3dc425d", "filename": "gcc/ada/4nintnam.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F4nintnam.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F4nintnam.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F4nintnam.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -28,7 +28,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "6733730b37271d6957b4d9797960f215eeb525a4", "filename": "gcc/ada/4ointnam.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F4ointnam.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F4ointnam.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F4ointnam.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,8 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---            Copyright (C) 1991-1997 Florida State University              --\n+--             Copyright (C) 1991-1994, Florida State University            --\n+--             Copyright (C) 1995-2003, Ada Core Technologies               --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,9 +27,8 @@\n -- however invalidate  any other reasons why  the executable file  might be --\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University. It is --\n--- now maintained by Ada Core Technologies Inc. in cooperation with Florida --\n--- State University (http://www.gnat.com).                                  --\n+-- GNARL was developed by the GNARL team at Florida State University.       --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "1512401b785be58ec9c6ea53d5cb880eb737fcf6", "filename": "gcc/ada/4onumaux.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F4onumaux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F4onumaux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F4onumaux.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                       (C Library Version for x86)                        --\n --                                                                          --\n---          Copyright (C) 1992-1998 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2002 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "f9cac69dc990068000e8edf1cce80659d1263090", "filename": "gcc/ada/4pintnam.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F4pintnam.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F4pintnam.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F4pintnam.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -27,7 +27,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "d6fc181ea9eb13d52462303a9d3f41938405717c", "filename": "gcc/ada/4sintnam.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F4sintnam.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F4sintnam.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F4sintnam.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -27,7 +27,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "a5ddb4a5c812d0d0698154b36c72b7e1b0d71381", "filename": "gcc/ada/4uintnam.ads", "status": "removed", "additions": 0, "deletions": 154, "changes": 154, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75a5a481c2048242ed62c7355381160aa1369616/gcc%2Fada%2F4uintnam.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75a5a481c2048242ed62c7355381160aa1369616/gcc%2Fada%2F4uintnam.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F4uintnam.ads?ref=75a5a481c2048242ed62c7355381160aa1369616", "patch": "@@ -1,154 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                GNU ADA RUN-TIME LIBRARY (GNARL) COMPONENTS               --\n---                                                                          --\n---                   A D A . I N T E R R U P T S . N A M E S                --\n---                                                                          --\n---                                  S p e c                                 --\n---                                                                          --\n---             Copyright (C) 1991-2002 Free Software Foundation, Inc.       --\n---                                                                          --\n--- GNARL is free software; you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion. GNARL is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNARL; see file COPYING.  If not, write --\n--- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n--- MA 02111-1307, USA.                                                      --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This is a Sun OS (FSU THREADS) version of this package.\n---\n---  The following signals are reserved by the run time:\n---\n---  SIGFPE, SIGILL, SIGSEGV, SIGBUS, SIGTRAP, SIGABRT, SIGINT,\n---  SIGALRM, SIGEMT, SIGCHLD, SIGSTOP, SIGKILL\n---\n---  The pragma Unreserve_All_Interrupts affects the following signal(s):\n---\n---  SIGINT: made available for Ada handlers\n-\n-with System.OS_Interface;\n---  used for names of interrupts\n-\n-package Ada.Interrupts.Names is\n-\n-   --  Beware that the mapping of names to signals may be\n-   --  many-to-one.  There may be aliases.  Also, for all\n-   --  signal names that are not supported on the current system\n-   --  the value of the corresponding constant will be zero.\n-\n-   SIGHUP : constant Interrupt_ID :=\n-     System.OS_Interface.SIGHUP;      --  hangup\n-\n-   SIGINT : constant Interrupt_ID :=\n-     System.OS_Interface.SIGINT;      --  interrupt (rubout)\n-\n-   SIGQUIT : constant Interrupt_ID :=\n-     System.OS_Interface.SIGQUIT;     --  quit (ASCD FS)\n-\n-   SIGILL : constant Interrupt_ID :=\n-     System.OS_Interface.SIGILL;      --  illegal instruction (not reset)\n-\n-   SIGTRAP : constant Interrupt_ID :=\n-     System.OS_Interface.SIGTRAP;     --  trace trap (not reset)\n-\n-   SIGIOT : constant Interrupt_ID :=\n-     System.OS_Interface.SIGIOT;      --  IOT instruction\n-\n-   SIGABRT : constant Interrupt_ID := --  used by abort,\n-     System.OS_Interface.SIGABRT;     --  replace SIGIOT in the  future\n-\n-   SIGEMT : constant Interrupt_ID :=\n-     System.OS_Interface.SIGEMT;      --  EMT instruction\n-\n-   SIGFPE : constant Interrupt_ID :=\n-     System.OS_Interface.SIGFPE;      --  floating point exception\n-\n-   SIGKILL : constant Interrupt_ID :=\n-     System.OS_Interface.SIGKILL;     --  kill (cannot be caught or ignored)\n-\n-   SIGBUS : constant Interrupt_ID :=\n-     System.OS_Interface.SIGBUS;      --  bus error\n-\n-   SIGSEGV : constant Interrupt_ID :=\n-     System.OS_Interface.SIGSEGV;     --  segmentation violation\n-\n-   SIGSYS : constant Interrupt_ID :=\n-     System.OS_Interface.SIGSYS;      --  bad argument to system call\n-\n-   SIGPIPE : constant Interrupt_ID := --  write on a pipe with\n-     System.OS_Interface.SIGPIPE;     --  no one to read it\n-\n-   SIGALRM : constant Interrupt_ID :=\n-     System.OS_Interface.SIGALRM;     --  alarm clock\n-\n-   SIGTERM : constant Interrupt_ID :=\n-     System.OS_Interface.SIGTERM;     --  software termination signal from kill\n-\n-   SIGUSR1 : constant Interrupt_ID :=\n-     System.OS_Interface.SIGUSR1;     --  user defined signal 1\n-\n-   SIGUSR2 : constant Interrupt_ID :=\n-     System.OS_Interface.SIGUSR2;     --  user defined signal 2\n-\n-   SIGCLD : constant Interrupt_ID :=\n-     System.OS_Interface.SIGCLD;      --  child status change\n-\n-   SIGCHLD : constant Interrupt_ID :=\n-     System.OS_Interface.SIGCHLD;     --  4.3BSD's/POSIX name for SIGCLD\n-\n-   SIGWINCH : constant Interrupt_ID :=\n-     System.OS_Interface.SIGWINCH;    --  window size change\n-\n-   SIGURG : constant Interrupt_ID :=\n-     System.OS_Interface.SIGURG;      --  urgent condition on IO channel\n-\n-   SIGPOLL : constant Interrupt_ID :=\n-     System.OS_Interface.SIGPOLL;     --  pollable event occurred\n-\n-   SIGIO : constant Interrupt_ID :=   --  input/output possible,\n-     System.OS_Interface.SIGIO;       --  SIGPOLL alias (Solaris)\n-\n-   SIGSTOP : constant Interrupt_ID :=\n-     System.OS_Interface.SIGSTOP;     --  stop (cannot be caught or ignored)\n-\n-   SIGTSTP : constant Interrupt_ID :=\n-     System.OS_Interface.SIGTSTP;     --  user stop requested from tty\n-\n-   SIGCONT : constant Interrupt_ID :=\n-     System.OS_Interface.SIGCONT;     --  stopped process has been continued\n-\n-   SIGTTIN : constant Interrupt_ID :=\n-     System.OS_Interface.SIGTTIN;     --  background tty read attempted\n-\n-   SIGTTOU : constant Interrupt_ID :=\n-     System.OS_Interface.SIGTTOU;     --  background tty write attempted\n-\n-   SIGVTALRM : constant Interrupt_ID :=\n-     System.OS_Interface.SIGVTALRM;   --  virtual timer expired\n-\n-   SIGPROF : constant Interrupt_ID :=\n-     System.OS_Interface.SIGPROF;     --  profiling timer expired\n-\n-   SIGXCPU : constant Interrupt_ID :=\n-     System.OS_Interface.SIGXCPU;     --  CPU time limit exceeded\n-\n-   SIGXFSZ : constant Interrupt_ID :=\n-     System.OS_Interface.SIGXFSZ;     --  filesize limit exceeded\n-\n-end Ada.Interrupts.Names;"}, {"sha": "a95eae657b8ad8798e1b571b839dac00d241fefc", "filename": "gcc/ada/4vcaldel.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F4vcaldel.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F4vcaldel.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F4vcaldel.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,8 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---             Copyright (C) 1991-2000 Florida State University             --\n+--             Copyright (C) 1991-1994, Florida State University            --\n+--             Copyright (C) 1995-2003, Ada Core Technologies               --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,9 +27,8 @@\n -- however invalidate  any other reasons why  the executable file  might be --\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University. It is --\n--- now maintained by Ada Core Technologies Inc. in cooperation with Florida --\n--- State University (http://www.gnat.com).                                  --\n+-- GNARL was developed by the GNARL team at Florida State University.       --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "74c2923cbf2ffaf343676fee56c70c91e0c96af8", "filename": "gcc/ada/4vcalend.adb", "status": "modified", "additions": 18, "deletions": 25, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F4vcalend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F4vcalend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F4vcalend.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 1992-2000 Free Software Foundation, Inc.        --\n+--            Copyright (C) 1992-2003 Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -235,21 +235,25 @@ package body Ada.Calendar is\n       Status   : Unsigned_Longword;\n       Timbuf   : Unsigned_Word_Array (1 .. 7);\n \n+      Subsecs   : constant Time := Date mod 10_000_000;\n+      Date_Secs : constant Time := Date - Subsecs;\n+\n    begin\n-      Numtim (Status, Timbuf, Date);\n+      Numtim (Status, Timbuf, Date_Secs);\n \n       if Status mod 2 /= 1\n         or else Timbuf (1) not in Ada_Year_Min .. Ada_Year_Max\n       then\n          raise Time_Error;\n       end if;\n \n-      Seconds\n-        := Day_Duration (Timbuf (6) + 60 * (Timbuf (5) + 60 * Timbuf (4)))\n-           + Day_Duration (Timbuf (7)) / 100.0;\n-      Day       := Integer (Timbuf (3));\n-      Month     := Integer (Timbuf (2));\n-      Year      := Integer (Timbuf (1));\n+      Seconds := Day_Duration (Timbuf (6)\n+                   + 60 * (Timbuf (5) + 60 * Timbuf (4)))\n+                   + Duration (Subsecs) / 10_000_000.0;\n+\n+      Day   := Integer (Timbuf (3));\n+      Month := Integer (Timbuf (2));\n+      Year  := Integer (Timbuf (1));\n    end Split;\n \n    -------------\n@@ -280,6 +284,8 @@ package body Ada.Calendar is\n       Date        : Time;\n       Int_Secs    : Integer;\n       Day_Hack    : Boolean := False;\n+      Subsecs     : Day_Duration;\n+\n    begin\n       --  The following checks are redundant with respect to the constraint\n       --  error checks that should normally be made on parameters, but we\n@@ -305,30 +311,17 @@ package body Ada.Calendar is\n          Int_Secs := Integer (Seconds);\n       end if;\n \n+      Subsecs := Seconds - Day_Duration (Int_Secs);\n+\n       --  Cvt_Vectim barfs on the largest Day_Duration, so trick it by\n       --  setting it to zero and then adding the difference after conversion.\n \n       if Int_Secs = 86_400 then\n          Int_Secs := 0;\n          Day_Hack := True;\n-         Timbuf (7) := 0;\n-      else\n-         Timbuf (7) := Unsigned_Word\n-          (100.0 * Duration (Seconds - Day_Duration (Int_Secs)));\n-         --  Cvt_Vectim accurate only to within .01 seconds\n-      end if;\n-\n-      --  Similar hack needed for 86399 and 100/100ths, since that gets\n-      --  treated as 86400 (largest Day_Duration). This can happen because\n-      --  Duration has more accuracy than VMS system time conversion calls\n-      --  can handle.\n-\n-      if Int_Secs = 86_399 and then Timbuf (7) = 100 then\n-         Int_Secs := 0;\n-         Day_Hack := True;\n-         Timbuf (7) := 0;\n       end if;\n \n+      Timbuf (7) := 0;\n       Timbuf (6) := Unsigned_Word (Int_Secs mod 60);\n       Timbuf (5) := Unsigned_Word ((Int_Secs / 60) mod 60);\n       Timbuf (4) := Unsigned_Word (Int_Secs / 3600);\n@@ -346,8 +339,8 @@ package body Ada.Calendar is\n          Date := Date + 10_000_000 * 86_400;\n       end if;\n \n+      Date := Date + Time (10_000_000.0 * Subsecs);\n       return Date;\n-\n    end Time_Of;\n \n    ----------"}, {"sha": "7eec58fbeb73f291f8fa899bb20a3a8f19ea638a", "filename": "gcc/ada/4vintnam.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F4vintnam.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F4vintnam.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F4vintnam.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -27,7 +27,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "afa93c1d3f2c0cae702194a268a3a4c3d4aec5a9", "filename": "gcc/ada/4wexcpol.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F4wexcpol.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F4wexcpol.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F4wexcpol.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -28,7 +28,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "4d02e17bf603ec48c2596b2fbc3b8adb2bcae35c", "filename": "gcc/ada/4wintnam.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F4wintnam.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F4wintnam.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F4wintnam.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1997-1998 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1997-2002 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -27,7 +27,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "757b15376fb4fd1231c960bf63393be1d5d9d652", "filename": "gcc/ada/4zintnam.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F4zintnam.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F4zintnam.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F4zintnam.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -27,7 +27,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "e3277e56789e8a2a611317730afafe7941c36df9", "filename": "gcc/ada/50system.ads", "status": "added", "additions": 163, "deletions": 0, "changes": 163, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F50system.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F50system.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F50system.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -0,0 +1,163 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                        GNAT RUN-TIME COMPONENTS                          --\n+--                                                                          --\n+--                               S Y S T E M                                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                        (VxWorks/HIE Version PPC)                         --\n+--                                                                          --\n+--          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+pragma Restrictions (No_Exception_Handlers);\n+pragma Restrictions (No_Implicit_Dynamic_Code);\n+pragma Restrictions (No_Finalization);\n+pragma Discard_Names;\n+\n+package System is\n+pragma Pure (System);\n+--  Note that we take advantage of the implementation permission to\n+--  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+\n+   type Name is (SYSTEM_NAME_GNAT);\n+   System_Name : constant Name := SYSTEM_NAME_GNAT;\n+\n+   --  System-Dependent Named Numbers\n+\n+   Min_Int               : constant := Long_Long_Integer'First;\n+   Max_Int               : constant := Long_Long_Integer'Last;\n+\n+   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n+   Max_Nonbinary_Modulus : constant := Integer'Last;\n+\n+   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n+   Max_Digits            : constant := Long_Long_Float'Digits;\n+\n+   Max_Mantissa          : constant := 63;\n+   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n+\n+   Tick                  : constant := 1.0 / 60.0;\n+\n+   --  Storage-related Declarations\n+\n+   type Address is private;\n+   Null_Address : constant Address;\n+\n+   Storage_Unit : constant := 8;\n+   Word_Size    : constant := 32;\n+   Memory_Size  : constant := 2 ** 32;\n+\n+   --  Address comparison\n+\n+   function \"<\"  (Left, Right : Address) return Boolean;\n+   function \"<=\" (Left, Right : Address) return Boolean;\n+   function \">\"  (Left, Right : Address) return Boolean;\n+   function \">=\" (Left, Right : Address) return Boolean;\n+   function \"=\"  (Left, Right : Address) return Boolean;\n+\n+   pragma Import (Intrinsic, \"<\");\n+   pragma Import (Intrinsic, \"<=\");\n+   pragma Import (Intrinsic, \">\");\n+   pragma Import (Intrinsic, \">=\");\n+   pragma Import (Intrinsic, \"=\");\n+\n+   --  Other System-Dependent Declarations\n+\n+   type Bit_Order is (High_Order_First, Low_Order_First);\n+   Default_Bit_Order : constant Bit_Order := High_Order_First;\n+\n+   --  Priority-related Declarations (RM D.1)\n+\n+   --  256        is reserved for the VxWorks kernel\n+   --  248 - 255  correspond to hardware interrupt levels 0 .. 7\n+   --  247        is a catchall default \"interrupt\" priority for signals,\n+   --             allowing higher priority than normal tasks, but lower than\n+   --             hardware priority levels.  Protected Object ceilings can\n+   --             override these values.\n+   --  246        is used by the Interrupt_Manager task\n+\n+   Max_Priority           : constant Positive := 245;\n+   Max_Interrupt_Priority : constant Positive := 255;\n+\n+   subtype Any_Priority       is Integer      range   0 .. 255;\n+   subtype Priority           is Any_Priority range   0 .. 245;\n+   subtype Interrupt_Priority is Any_Priority range 246 .. 255;\n+\n+   Default_Priority : constant Priority := 122;\n+\n+private\n+\n+   type Address is mod Memory_Size;\n+   Null_Address : constant Address := 0;\n+\n+   --------------------------------------\n+   -- System Implementation Parameters --\n+   --------------------------------------\n+\n+   --  These parameters provide information about the target that is used\n+   --  by the compiler. They are in the private part of System, where they\n+   --  can be accessed using the special circuitry in the Targparm unit\n+   --  whose source should be consulted for more detailed descriptions\n+   --  of the individual switch values.\n+\n+   AAMP                      : constant Boolean := False;\n+   Backend_Divide_Checks     : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := False;\n+   Command_Line_Args         : constant Boolean := False;\n+   Configurable_Run_Time     : constant Boolean := True;\n+   Denorm                    : constant Boolean := True;\n+   Duration_32_Bits          : constant Boolean := True;\n+   Exit_Status_Supported     : constant Boolean := True;\n+   Fractional_Fixed_Ops      : constant Boolean := False;\n+   Frontend_Layout           : constant Boolean := False;\n+   Functions_Return_By_DSP   : constant Boolean := False;\n+   Machine_Overflows         : constant Boolean := False;\n+   Machine_Rounds            : constant Boolean := True;\n+   OpenVMS                   : constant Boolean := False;\n+   Signed_Zeros              : constant Boolean := True;\n+   Stack_Check_Default       : constant Boolean := False;\n+   Stack_Check_Probes        : constant Boolean := False;\n+   Support_64_Bit_Divides    : constant Boolean := False;\n+   Support_Aggregates        : constant Boolean := True;\n+   Support_Composite_Assign  : constant Boolean := True;\n+   Support_Composite_Compare : constant Boolean := True;\n+   Support_Long_Shifts       : constant Boolean := True;\n+   Suppress_Standard_Library : constant Boolean := True;\n+   Use_Ada_Main_Program_Name : constant Boolean := True;\n+   ZCX_By_Default            : constant Boolean := False;\n+   GCC_ZCX_Support           : constant Boolean := False;\n+   Front_End_ZCX_Support     : constant Boolean := False;\n+\n+   --  Obsolete entries, to be removed eventually (bootstrap issues!)\n+\n+   High_Integrity_Mode       : constant Boolean := True;\n+   Long_Shifts_Inlined       : constant Boolean := False;\n+\n+end System;"}, {"sha": "9916e8846f45b00255b0a4b54b60af893e53c7d5", "filename": "gcc/ada/51osinte.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F51osinte.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F51osinte.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F51osinte.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -27,7 +27,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "509aee8ccd066ab8cd7e36fe7d71a6658fae3946", "filename": "gcc/ada/51osinte.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F51osinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F51osinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F51osinte.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -27,7 +27,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "01404ee32aa2480444eea698baeaa4dbb594160a", "filename": "gcc/ada/51system.ads", "status": "renamed", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F51system.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F51system.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F51system.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -5,9 +5,9 @@\n --                               S Y S T E M                                --\n --                                                                          --\n --                                 S p e c                                  --\n---                         (LynxOS PPC/x86 Version)\n+--                         (SCO UnixWare Version)                           --\n --                                                                          --\n---          Copyright (C) 1992-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -58,7 +58,7 @@ pragma Pure (System);\n    Max_Mantissa          : constant := 63;\n    Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n \n-   Tick                  : constant := 1.0;\n+   Tick                  : constant := 0.01;\n \n    --  Storage-related Declarations\n \n@@ -86,7 +86,7 @@ pragma Pure (System);\n    --  Other System-Dependent Declarations\n \n    type Bit_Order is (High_Order_First, Low_Order_First);\n-   Default_Bit_Order : constant Bit_Order := High_Order_First;\n+   Default_Bit_Order : constant Bit_Order := Low_Order_First;\n \n    --  Priority-related Declarations (RM D.1)\n \n@@ -118,21 +118,33 @@ private\n    Backend_Divide_Checks     : constant Boolean := False;\n    Backend_Overflow_Checks   : constant Boolean := False;\n    Command_Line_Args         : constant Boolean := True;\n+   Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := True;\n+   Duration_32_Bits          : constant Boolean := False;\n+   Exit_Status_Supported     : constant Boolean := True;\n    Fractional_Fixed_Ops      : constant Boolean := False;\n    Frontend_Layout           : constant Boolean := False;\n    Functions_Return_By_DSP   : constant Boolean := False;\n-   Long_Shifts_Inlined       : constant Boolean := True;\n-   High_Integrity_Mode       : constant Boolean := False;\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := False;\n    Stack_Check_Probes        : constant Boolean := False;\n+   Support_64_Bit_Divides    : constant Boolean := True;\n+   Support_Aggregates        : constant Boolean := True;\n+   Support_Composite_Assign  : constant Boolean := True;\n+   Support_Composite_Compare : constant Boolean := True;\n+   Support_Long_Shifts       : constant Boolean := True;\n+   Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := False;\n    GCC_ZCX_Support           : constant Boolean := False;\n    Front_End_ZCX_Support     : constant Boolean := False;\n \n+   --  Obsolete entries, to be removed eventually (bootstrap issues!)\n+\n+   High_Integrity_Mode       : constant Boolean := False;\n+   Long_Shifts_Inlined       : constant Boolean := True;\n+\n end System;", "previous_filename": "gcc/ada/52system.ads"}, {"sha": "156601442b338702ecf54fb7775adcc5a6582db7", "filename": "gcc/ada/52osinte.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F52osinte.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F52osinte.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F52osinte.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---           Copyright (C) 1999-2002 Free Software Foundation, Inc.         --\n+--           Copyright (C) 1999-2003 Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -27,7 +27,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n@@ -424,6 +424,7 @@ package body System.OS_Interface is\n       protocol : int)\n       return     int\n    is\n+      pragma Unreferenced (attr, protocol);\n    begin\n       return 0;\n    end pthread_mutexattr_setprotocol;\n@@ -433,6 +434,7 @@ package body System.OS_Interface is\n       prioceiling : int)\n       return        int\n    is\n+      pragma Unreferenced (attr, prioceiling);\n    begin\n       return 0;\n    end pthread_mutexattr_setprioceiling;\n@@ -442,6 +444,7 @@ package body System.OS_Interface is\n       contentionscope : int)\n       return            int\n    is\n+      pragma Unreferenced (attr, contentionscope);\n    begin\n       return 0;\n    end pthread_attr_setscope;\n@@ -464,6 +467,7 @@ package body System.OS_Interface is\n       detachstate : int)\n       return        int\n    is\n+      pragma Unreferenced (attr, detachstate);\n    begin\n       return 0;\n    end pthread_attr_setdetachstate;"}, {"sha": "ba2e532cc2466a17403d2af02423686dbe99e79e", "filename": "gcc/ada/52osinte.ads", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F52osinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F52osinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F52osinte.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,8 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1999-2001 Free Software Foundation, Inc.          --\n+--                                                                          --\n+--          Copyright (C) 1999-2003 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -27,7 +28,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n@@ -457,6 +458,9 @@ package System.OS_Interface is\n    pragma Inline (pthread_create);\n    --  LynxOS has a non standard pthread_create\n \n+   function pthread_detach (thread : pthread_t) return int;\n+   pragma Inline (pthread_detach);\n+\n    procedure pthread_exit (status : System.Address);\n    pragma Import (C, pthread_exit, \"pthread_exit\");\n "}, {"sha": "b4934b464c530a60d277865c50541fcb4a981f85", "filename": "gcc/ada/53osinte.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F53osinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F53osinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F53osinte.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -27,7 +27,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "037fd09e829130261d8eb5951946b1309723e944", "filename": "gcc/ada/54osinte.ads", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F54osinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F54osinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F54osinte.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -26,9 +26,8 @@\n -- however invalidate  any other reasons why  the executable file  might be --\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University. It is --\n--- now maintained by Ada Core Technologies Inc. in cooperation with Florida --\n--- State University (http://www.gnat.com).                                  --\n+-- GNARL was developed by the GNARL team at Florida State University.       --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "65bcc0ebd7fc408036a6dc59c26d469b401d83cf", "filename": "gcc/ada/55system.ads", "status": "added", "additions": 150, "deletions": 0, "changes": 150, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F55system.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F55system.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F55system.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -0,0 +1,150 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                        GNAT RUN-TIME COMPONENTS                          --\n+--                                                                          --\n+--                               S Y S T E M                                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                         (GNU-Linux/ia64 Version)                         --\n+--                                                                          --\n+--          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+package System is\n+pragma Pure (System);\n+--  Note that we take advantage of the implementation permission to\n+--  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+\n+   type Name is (SYSTEM_NAME_GNAT);\n+   System_Name : constant Name := SYSTEM_NAME_GNAT;\n+\n+   --  System-Dependent Named Numbers\n+\n+   Min_Int               : constant := Long_Long_Integer'First;\n+   Max_Int               : constant := Long_Long_Integer'Last;\n+\n+   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n+   Max_Nonbinary_Modulus : constant := Integer'Last;\n+\n+   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n+   Max_Digits            : constant := Long_Long_Float'Digits;\n+\n+   Max_Mantissa          : constant := 63;\n+   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n+\n+   Tick                  : constant := 0.01;\n+\n+   --  Storage-related Declarations\n+\n+   type Address is private;\n+   Null_Address : constant Address;\n+\n+   Storage_Unit : constant := 8;\n+   Word_Size    : constant := 64;\n+   Memory_Size  : constant := 2 ** 64;\n+\n+   --  Address comparison\n+\n+   function \"<\"  (Left, Right : Address) return Boolean;\n+   function \"<=\" (Left, Right : Address) return Boolean;\n+   function \">\"  (Left, Right : Address) return Boolean;\n+   function \">=\" (Left, Right : Address) return Boolean;\n+   function \"=\"  (Left, Right : Address) return Boolean;\n+\n+   pragma Import (Intrinsic, \"<\");\n+   pragma Import (Intrinsic, \"<=\");\n+   pragma Import (Intrinsic, \">\");\n+   pragma Import (Intrinsic, \">=\");\n+   pragma Import (Intrinsic, \"=\");\n+\n+   --  Other System-Dependent Declarations\n+\n+   type Bit_Order is (High_Order_First, Low_Order_First);\n+   Default_Bit_Order : constant Bit_Order := Low_Order_First;\n+\n+   --  Priority-related Declarations (RM D.1)\n+\n+   Max_Priority           : constant Positive := 30;\n+   Max_Interrupt_Priority : constant Positive := 31;\n+\n+   subtype Any_Priority       is Integer      range  0 .. 31;\n+   subtype Priority           is Any_Priority range  0 .. 30;\n+   subtype Interrupt_Priority is Any_Priority range 31 .. 31;\n+\n+   Default_Priority : constant Priority := 15;\n+\n+private\n+\n+   type Address is mod Memory_Size;\n+   Null_Address : constant Address := 0;\n+\n+   --------------------------------------\n+   -- System Implementation Parameters --\n+   --------------------------------------\n+\n+   --  These parameters provide information about the target that is used\n+   --  by the compiler. They are in the private part of System, where they\n+   --  can be accessed using the special circuitry in the Targparm unit\n+   --  whose source should be consulted for more detailed descriptions\n+   --  of the individual switch values.\n+\n+   AAMP                      : constant Boolean := False;\n+   Backend_Divide_Checks     : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := False;\n+   Command_Line_Args         : constant Boolean := True;\n+   Configurable_Run_Time     : constant Boolean := False;\n+   Denorm                    : constant Boolean := True;\n+   Duration_32_Bits          : constant Boolean := False;\n+   Exit_Status_Supported     : constant Boolean := True;\n+   Fractional_Fixed_Ops      : constant Boolean := False;\n+   Frontend_Layout           : constant Boolean := False;\n+   Functions_Return_By_DSP   : constant Boolean := False;\n+   Machine_Overflows         : constant Boolean := False;\n+   Machine_Rounds            : constant Boolean := True;\n+   OpenVMS                   : constant Boolean := False;\n+   Signed_Zeros              : constant Boolean := True;\n+   Stack_Check_Default       : constant Boolean := False;\n+   Stack_Check_Probes        : constant Boolean := False;\n+   Support_64_Bit_Divides    : constant Boolean := True;\n+   Support_Aggregates        : constant Boolean := True;\n+   Support_Composite_Assign  : constant Boolean := True;\n+   Support_Composite_Compare : constant Boolean := True;\n+   Support_Long_Shifts       : constant Boolean := True;\n+   Suppress_Standard_Library : constant Boolean := False;\n+   Use_Ada_Main_Program_Name : constant Boolean := False;\n+   ZCX_By_Default            : constant Boolean := False;\n+   GCC_ZCX_Support           : constant Boolean := False;\n+   Front_End_ZCX_Support     : constant Boolean := False;\n+\n+   --  Obsolete entries, to be removed eventually (bootstrap issues!)\n+\n+   High_Integrity_Mode       : constant Boolean := False;\n+   Long_Shifts_Inlined       : constant Boolean := True;\n+\n+end System;"}, {"sha": "0cb052632a33c8e9c2397c2bcc48804434971c04", "filename": "gcc/ada/56osinte.adb", "status": "added", "additions": 154, "deletions": 0, "changes": 154, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F56osinte.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F56osinte.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F56osinte.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -0,0 +1,154 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                GNU ADA RUN-TIME LIBRARY (GNARL) COMPONENTS               --\n+--                                                                          --\n+--                   S Y S T E M . O S _ I N T E R F A C E                  --\n+--                                                                          --\n+--                                  B o d y                                 --\n+--                                                                          --\n+--           Copyright (C) 2001-2002 Ada Core Technologies, Inc.            --\n+--                                                                          --\n+-- GNARL is free software; you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion. GNARL is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNARL; see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNARL was developed by the GNARL team at Florida State University.       --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This is a LynxOS (POSIX Threads) version of this package\n+\n+pragma Polling (Off);\n+--  Turn off polling, we do not want ATC polling to take place during\n+--  tasking operations. It causes infinite loops and other problems.\n+\n+with Interfaces.C;\n+\n+package body System.OS_Interface is\n+\n+   use Interfaces.C;\n+\n+   -----------------\n+   -- To_Duration --\n+   -----------------\n+\n+   function To_Duration (TS : timespec) return Duration is\n+   begin\n+      return Duration (TS.tv_sec) + Duration (TS.tv_nsec) / 10#1#E9;\n+   end To_Duration;\n+\n+   function To_Duration (TV : struct_timeval) return Duration is\n+   begin\n+      return Duration (TV.tv_sec) + Duration (TV.tv_usec) / 10#1#E6;\n+   end To_Duration;\n+\n+   -----------------\n+   -- To_Timespec --\n+   -----------------\n+\n+   function To_Timespec (D : Duration) return timespec is\n+      S : time_t;\n+      F : Duration;\n+\n+   begin\n+      S := time_t (Long_Long_Integer (D));\n+      F := D - Duration (S);\n+\n+      --  If F has negative value due to a round-up, adjust for positive F\n+      --  value.\n+\n+      if F < 0.0 then\n+         S := S - 1;\n+         F := F + 1.0;\n+      end if;\n+\n+      return timespec'(tv_sec => S,\n+                       tv_nsec => long (Long_Long_Integer (F * 10#1#E9)));\n+   end To_Timespec;\n+\n+   ----------------\n+   -- To_Timeval --\n+   ----------------\n+\n+   function To_Timeval (D : Duration) return struct_timeval is\n+      S : time_t;\n+      F : Duration;\n+\n+   begin\n+      S := time_t (Long_Long_Integer (D));\n+      F := D - Duration (S);\n+\n+      --  If F has negative value due to a round-up, adjust for positive F\n+      --  value.\n+\n+      if F < 0.0 then\n+         S := S - 1;\n+         F := F + 1.0;\n+      end if;\n+\n+      return\n+        struct_timeval'\n+          (tv_sec => S,\n+           tv_usec => time_t (Long_Long_Integer (F * 10#1#E6)));\n+   end To_Timeval;\n+\n+   -------------\n+   -- sigwait --\n+   -------------\n+\n+   function sigwait\n+     (set :  access sigset_t;\n+      sig :  access Signal)\n+      return int\n+   is\n+      function sigwaitinfo\n+        (set   : access sigset_t;\n+         info  : System.Address) return Signal;\n+      pragma Import (C, sigwaitinfo, \"sigwaitinfo\");\n+\n+   begin\n+      sig.all := sigwaitinfo (set, Null_Address);\n+\n+      if sig.all = -1 then\n+         return errno;\n+      end if;\n+\n+      return 0;\n+   end sigwait;\n+\n+   --------------------\n+   -- Get_Stack_Base --\n+   --------------------\n+\n+   function Get_Stack_Base (thread : pthread_t) return Address is\n+      pragma Warnings (Off, thread);\n+\n+   begin\n+      return Null_Address;\n+   end Get_Stack_Base;\n+\n+   ------------------\n+   -- pthread_init --\n+   ------------------\n+\n+   procedure pthread_init is\n+   begin\n+      null;\n+   end pthread_init;\n+\n+end System.OS_Interface;"}, {"sha": "c6bcbeb9ad47dca742cabf578621424fa74b9c44", "filename": "gcc/ada/56osinte.ads", "status": "renamed", "additions": 185, "deletions": 160, "changes": 345, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F56osinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F56osinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F56osinte.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1997-2001, Free Software Foundation, Inc.         --\n+--             Copyright (C) 2002-2003 Ada Core Technologies, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -27,11 +27,11 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is a MACOS (FSU THREAD) version of this package.\n+--  This is a LynxOS (POSIX Threads) version of this package.\n \n --  This package encapsulates all direct interfaces to OS services\n --  that are needed by children of System.\n@@ -44,7 +44,10 @@ with Interfaces.C;\n package System.OS_Interface is\n    pragma Preelaborate;\n \n-   pragma Linker_Options (\"-lgthreads\");\n+   pragma Linker_Options (\"-mthreads\");\n+   --  Selects the POSIX 1.c runtime, rather than the non-threading runtime\n+   --  or the deprecated legacy threads library. The -mthreads flag is\n+   --  defined in patch.LynxOS and matches the definition for Lynx's gcc.\n \n    subtype int            is Interfaces.C.int;\n    subtype short          is Interfaces.C.short;\n@@ -63,7 +66,7 @@ package System.OS_Interface is\n    function errno return int;\n    pragma Import (C, errno, \"__get_errno\");\n \n-   EAGAIN    : constant := 35;\n+   EAGAIN    : constant := 11;\n    EINTR     : constant := 4;\n    EINVAL    : constant := 22;\n    ENOMEM    : constant := 12;\n@@ -73,49 +76,71 @@ package System.OS_Interface is\n    -- Signals --\n    -------------\n \n-   Max_Interrupt : constant := 31;\n+   Max_Interrupt : constant := 63;\n+\n+   --  Max_Interrupt is the number of OS signals, as defined in:\n+   --\n+   --   /usr/include/sys/signal.h\n+   --\n+   --\n+   --  The lowest numbered signal is 1, but 0 is a valid argument to some\n+   --  library functions, eg. kill(2). However, 0 is not just another\n+   --  signal: For instance 'I in Signal' and similar should be used with\n+   --  caution.\n+\n    type Signal is new int range 0 .. Max_Interrupt;\n-   for Signal'Size use int'Size;\n-\n-   SIGHUP      : constant := 1; --  hangup\n-   SIGINT      : constant := 2; --  interrupt (rubout)\n-   SIGQUIT     : constant := 3; --  quit (ASCD FS)\n-   SIGILL      : constant := 4; --  illegal instruction (not reset)\n-   SIGTRAP     : constant := 5; --  trace trap (not reset)\n-   SIGIOT      : constant := 6; --  IOT instruction\n-   SIGABRT     : constant := 6; --  used by abort, replace SIGIOT in the future\n-   SIGEMT      : constant := 7; --  EMT instruction\n-   SIGFPE      : constant := 8; --  floating point exception\n-   SIGKILL     : constant := 9; --  kill (cannot be caught or ignored)\n-   SIGBUS      : constant := 10; --  bus error\n-   SIGSEGV     : constant := 11; --  segmentation violation\n-   SIGSYS      : constant := 12; --  bad argument to system call\n-   SIGPIPE     : constant := 13; --  write on a pipe with no one to read it\n-   SIGALRM     : constant := 14; --  alarm clock\n-   SIGTERM     : constant := 15; --  software termination signal from kill\n-   SIGUSR1     : constant := 30; --  user defined signal 1\n-   SIGUSR2     : constant := 31; --  user defined signal 2\n-   SIGCLD      : constant := 20; --  alias for SIGCHLD\n-   SIGCHLD     : constant := 20; --  child status change\n-   SIGWINCH    : constant := 28; --  window size change\n-   SIGURG      : constant := 16; --  urgent condition on IO channel\n-   SIGIO       : constant := 23; --  I/O possible (Solaris SIGPOLL alias)\n-   SIGSTOP     : constant := 17; --  stop (cannot be caught or ignored)\n-   SIGTSTP     : constant := 18; --  user stop requested from tty\n-   SIGCONT     : constant := 19; --  stopped process has been continued\n-   SIGTTIN     : constant := 21; --  background tty read attempted\n-   SIGTTOU     : constant := 22; --  background tty write attempted\n-   SIGVTALRM   : constant := 26; --  virtual timer expired\n-   SIGPROF     : constant := 27; --  profiling timer expired\n-   SIGXCPU     : constant := 24; --  CPU time limit exceeded\n-   SIGXFSZ     : constant := 25; --  filesize limit exceeded\n+   for  Signal'Size use int'Size;\n+\n+   SIGHUP        : constant := 1;  --  hangup\n+   SIGINT        : constant := 2;  --  interrupt (rubout)\n+   SIGQUIT       : constant := 3;  --  quit (ASCD FS)\n+   SIGILL        : constant := 4;  --  illegal instruction (not reset)\n+   SIGTRAP       : constant := 5;  --  trace trap (not reset)\n+   SIGBRK        : constant := 6;  --  break\n+   SIGIOT        : constant := 6;  --  IOT instruction\n+   SIGABRT       : constant := 6;  --  used by abort, replace SIGIOT in future\n+   SIGCORE       : constant := 7;  --  kill with core dump\n+   SIGEMT        : constant := 7;  --  EMT instruction\n+   SIGFPE        : constant := 8;  --  floating point exception\n+   SIGKILL       : constant := 9;  --  kill (cannot be caught or ignored)\n+   SIGBUS        : constant := 10; --  bus error\n+   SIGSEGV       : constant := 11; --  segmentation violation\n+   SIGSYS        : constant := 12; --  bad argument to system call\n+   SIGPIPE       : constant := 13; --  write on a pipe with no one to read it\n+   SIGALRM       : constant := 14; --  alarm clock\n+   SIGTERM       : constant := 15; --  software termination signal from kill\n+   SIGURG        : constant := 16; --  urgent condition on IO channel\n+   SIGSTOP       : constant := 17; --  stop (cannot be caught or ignored)\n+   SIGTSTP       : constant := 18; --  user stop requested from tty\n+   SIGCONT       : constant := 19; --  stopped process has been continued\n+   SIGCLD        : constant := 20; --  alias for SIGCHLD\n+   SIGCHLD       : constant := 20; --  child status change\n+   SIGTTIN       : constant := 21; --  background tty read attempted\n+   SIGTTOU       : constant := 22; --  background tty write attempted\n+   SIGIO         : constant := 23; --  I/O possible (Solaris SIGPOLL alias)\n+   SIGPOLL       : constant := 23; --  pollable event occurred\n+   SIGTHREADKILL : constant := 24; --  Reserved by LynxOS runtime\n+   SIGXCPU       : constant := 24; --  CPU time limit exceeded\n+   SIGXFSZ       : constant := 25; --  filesize limit exceeded\n+   SIGVTALRM     : constant := 26; --  virtual timer expired\n+   SIGPROF       : constant := 27; --  profiling timer expired\n+   SIGWINCH      : constant := 28; --  window size change\n+   SIGLOST       : constant := 29; --  SUN 4.1 compatibility\n+   SIGUSR1       : constant := 30; --  user defined signal 1\n+   SIGUSR2       : constant := 31; --  user defined signal 2\n+\n+   SIGPRIO       : constant := 32;\n+   --  sent to a process with its priority or group is changed\n \n    SIGADAABORT : constant := SIGABRT;\n+   --  Change this if you want to use another signal for task abort.\n+   --  SIGTERM might be a good one.\n \n    type Signal_Set is array (Natural range <>) of Signal;\n \n-   Unmasked    : constant Signal_Set := (SIGTRAP, SIGALRM, SIGEMT, SIGCHLD);\n-   Reserved    : constant Signal_Set := (SIGKILL, SIGSTOP);\n+   Unmasked    : constant Signal_Set :=\n+     (SIGTRAP, SIGTTIN, SIGTTOU, SIGTSTP, SIGPROF, SIGTHREADKILL);\n+   Reserved    : constant Signal_Set := (SIGABRT, SIGKILL, SIGSTOP, SIGPRIO);\n \n    type sigset_t is private;\n \n@@ -135,16 +160,16 @@ package System.OS_Interface is\n    pragma Import (C, sigemptyset, \"sigemptyset\");\n \n    type struct_sigaction is record\n-      sa_handler : System.Address;\n-      sa_mask    : sigset_t;\n-      sa_flags   : int;\n+      sa_handler   : System.Address;\n+      sa_mask      : sigset_t;\n+      sa_flags     : int;\n    end record;\n    pragma Convention (C, struct_sigaction);\n    type struct_sigaction_ptr is access all struct_sigaction;\n \n-   SIG_BLOCK   : constant := 1;\n-   SIG_UNBLOCK : constant := 2;\n-   SIG_SETMASK : constant := 3;\n+   SIG_BLOCK   : constant := 0;\n+   SIG_UNBLOCK : constant := 1;\n+   SIG_SETMASK : constant := 2;\n \n    SIG_DFL : constant := 0;\n    SIG_IGN : constant := 1;\n@@ -159,9 +184,8 @@ package System.OS_Interface is\n    -- Time --\n    ----------\n \n-   Time_Slice_Supported : constant Boolean := False;\n-   --  Indicates wether time slicing is supported (i.e FSU threads have been\n-   --  compiled with DEF_RR)\n+   Time_Slice_Supported : constant Boolean := True;\n+   --  Indicates whether time slicing is supported\n \n    type timespec is private;\n \n@@ -174,13 +198,27 @@ package System.OS_Interface is\n       tp       : access timespec) return int;\n    pragma Import (C, clock_gettime, \"clock_gettime\");\n \n+   function clock_getres\n+     (clock_id : clockid_t;\n+      res      : access timespec) return int;\n+   pragma Import (C, clock_getres, \"clock_getres\");\n+\n    function To_Duration (TS : timespec) return Duration;\n    pragma Inline (To_Duration);\n \n    function To_Timespec (D : Duration) return timespec;\n    pragma Inline (To_Timespec);\n \n+   type struct_timezone is record\n+      tz_minuteswest : int;\n+      tz_dsttime     : int;\n+   end record;\n+   pragma Convention (C, struct_timezone);\n+   type struct_timezone_ptr is access all struct_timezone;\n+\n    type struct_timeval is private;\n+   --  This is needed on systems that do not have clock_gettime()\n+   --  but do have gettimeofday().\n \n    function To_Duration (TV : struct_timeval) return Duration;\n    pragma Inline (To_Duration);\n@@ -192,9 +230,9 @@ package System.OS_Interface is\n    -- Priority Scheduling --\n    -------------------------\n \n-   SCHED_FIFO  : constant := 0;\n-   SCHED_RR    : constant := 1;\n-   SCHED_OTHER : constant := 2;\n+   SCHED_FIFO  : constant := 16#200000#;\n+   SCHED_RR    : constant := 16#100000#;\n+   SCHED_OTHER : constant := 16#400000#;\n \n    -------------\n    -- Process --\n@@ -213,9 +251,6 @@ package System.OS_Interface is\n    ---------\n \n    function lwp_self return System.Address;\n-   --  lwp_self does not exist on this thread library, revert to pthread_self\n-   --  which is the closest approximation (with getpid). This function is\n-   --  needed to share 7staprop.adb across POSIX-like targets.\n    pragma Import (C, lwp_self, \"pthread_self\");\n \n    -------------\n@@ -224,7 +259,6 @@ package System.OS_Interface is\n \n    type Thread_Body is access\n      function (arg : System.Address) return System.Address;\n-\n    type pthread_t           is private;\n    subtype Thread_Id        is pthread_t;\n \n@@ -236,57 +270,54 @@ package System.OS_Interface is\n    type pthread_key_t       is private;\n \n    PTHREAD_CREATE_DETACHED : constant := 1;\n+   PTHREAD_CREATE_JOINABLE : constant := 0;\n \n    -----------\n    -- Stack --\n    -----------\n \n    Stack_Base_Available : constant Boolean := False;\n-   --  Indicates wether the stack base is available on this target.\n-   --  This allows us to share s-osinte.adb between all the FSU run time.\n-   --  Note that this value can only be true if pthread_t has a complete\n-   --  definition that corresponds exactly to the C header files.\n+   --  Indicates whether the stack base is available on this target.\n \n    function Get_Stack_Base (thread : pthread_t) return Address;\n    pragma Inline (Get_Stack_Base);\n-   --  returns the stack base of the specified thread.\n+   --  Returns the stack base of the specified thread.\n    --  Only call this function when Stack_Base_Available is True.\n \n    function Get_Page_Size return size_t;\n    function Get_Page_Size return Address;\n    pragma Import (C, Get_Page_Size, \"getpagesize\");\n-   --  returns the size of a page, or 0 if this is not relevant on this\n+   --  Returns the size of a page, or 0 if this is not relevant on this\n    --  target\n \n-   PROT_NONE  : constant := 0;\n-   PROT_READ  : constant := 1;\n-   PROT_WRITE : constant := 2;\n-   PROT_EXEC  : constant := 4;\n+   PROT_NONE  : constant := 1;\n+   PROT_READ  : constant := 2;\n+   PROT_WRITE : constant := 4;\n+   PROT_EXEC  : constant := 8;\n    PROT_ALL   : constant := PROT_READ + PROT_WRITE + PROT_EXEC;\n \n-   PROT_ON    : constant := PROT_NONE;\n+   PROT_ON    : constant := PROT_READ;\n    PROT_OFF   : constant := PROT_ALL;\n \n    function mprotect (addr : Address; len : size_t; prot : int) return int;\n    pragma Import (C, mprotect);\n \n-   ---------------------------------------\n-   -- Nonstandard Thread Initialization --\n-   ---------------------------------------\n+   -----------------------------------------\n+   --  Nonstandard Thread Initialization  --\n+   -----------------------------------------\n \n    procedure pthread_init;\n-   --  FSU_THREADS requires pthread_init, which is nonstandard\n-   --  and this should be invoked during the elaboration of s-taprop.adb\n-   pragma Import (C, pthread_init, \"pthread_init\");\n+   --  This is a dummy procedure to share some GNULLI files\n \n-   -------------------------\n-   -- POSIX.1c  Section 3 --\n-   -------------------------\n+   ---------------------------\n+   --  POSIX.1c  Section 3  --\n+   ---------------------------\n \n    function sigwait\n      (set : access sigset_t;\n       sig : access Signal) return int;\n-   --  FSU_THREADS has a nonstandard sigwait\n+   pragma Inline (sigwait);\n+   --  LynxOS has non standard sigwait\n \n    function pthread_kill\n      (thread : pthread_t;\n@@ -298,13 +329,14 @@ package System.OS_Interface is\n    function pthread_sigmask\n      (how  : int;\n       set  : sigset_t_ptr;\n-      oset : sigset_t_ptr)\n-      return int;\n-   pragma Import (C, pthread_sigmask, \"sigprocmask\");\n+      oset : sigset_t_ptr) return int;\n+   pragma Import (C, pthread_sigmask, \"pthread_sigmask\");\n+   --  The behavior of pthread_sigmask on LynxOS requires\n+   --  further investigation.\n \n-   --------------------------\n-   -- POSIX.1c  Section 11 --\n-   --------------------------\n+   ----------------------------\n+   --  POSIX.1c  Section 11  --\n+   ----------------------------\n \n    function pthread_mutexattr_init\n      (attr : access pthread_mutexattr_t) return int;\n@@ -323,10 +355,10 @@ package System.OS_Interface is\n    pragma Import (C, pthread_mutex_destroy, \"pthread_mutex_destroy\");\n \n    function pthread_mutex_lock (mutex : access pthread_mutex_t) return int;\n-   --  FSU_THREADS has nonstandard pthread_mutex_lock\n+   pragma Import (C, pthread_mutex_lock, \"pthread_mutex_lock\");\n \n    function pthread_mutex_unlock (mutex : access pthread_mutex_t) return int;\n-   --  FSU_THREADS has nonstandard pthread_mutex_lock\n+   pragma Import (C, pthread_mutex_unlock, \"pthread_mutex_unlock\");\n \n    function pthread_condattr_init\n      (attr : access pthread_condattr_t) return int;\n@@ -350,13 +382,13 @@ package System.OS_Interface is\n    function pthread_cond_wait\n      (cond  : access pthread_cond_t;\n       mutex : access pthread_mutex_t) return int;\n-   --  FSU_THREADS has a nonstandard pthread_cond_wait\n+   pragma Import (C, pthread_cond_wait, \"pthread_cond_wait\");\n \n    function pthread_cond_timedwait\n      (cond    : access pthread_cond_t;\n       mutex   : access pthread_mutex_t;\n       abstime : access timespec) return int;\n-   --  FSU_THREADS has a nonstandard pthread_cond_timedwait\n+   pragma Import (C, pthread_cond_timedwait, \"pthread_cond_timedwait\");\n \n    Relative_Timed_Wait : constant Boolean := False;\n    --  pthread_cond_timedwait requires an absolute delay time\n@@ -366,53 +398,46 @@ package System.OS_Interface is\n    --------------------------\n \n    PTHREAD_PRIO_NONE    : constant := 0;\n-   PTHREAD_PRIO_PROTECT : constant := 2;\n    PTHREAD_PRIO_INHERIT : constant := 1;\n+   PTHREAD_PRIO_PROTECT : constant := 2;\n \n    function pthread_mutexattr_setprotocol\n      (attr     : access pthread_mutexattr_t;\n       protocol : int) return int;\n    pragma Import (C, pthread_mutexattr_setprotocol);\n \n    function pthread_mutexattr_setprioceiling\n-     (attr     : access pthread_mutexattr_t;\n+     (attr        : access pthread_mutexattr_t;\n       prioceiling : int) return int;\n-   pragma Import\n-     (C, pthread_mutexattr_setprioceiling,\n-      \"pthread_mutexattr_setprio_ceiling\");\n+   pragma Import (C, pthread_mutexattr_setprioceiling);\n \n    type struct_sched_param is record\n-      sched_priority : int;  --  scheduling priority\n+      sched_priority : int;\n    end record;\n \n    function pthread_setschedparam\n      (thread : pthread_t;\n       policy : int;\n       param  : access struct_sched_param) return int;\n-   --  FSU_THREADS does not have pthread_setschedparam\n+   pragma Import (C, pthread_setschedparam, \"pthread_setschedparam\");\n \n    function pthread_attr_setscope\n      (attr            : access pthread_attr_t;\n       contentionscope : int) return int;\n    pragma Import (C, pthread_attr_setscope, \"pthread_attr_setscope\");\n \n    function pthread_attr_setinheritsched\n-     (attr            : access pthread_attr_t;\n+     (attr         : access pthread_attr_t;\n       inheritsched : int) return int;\n    pragma Import (C, pthread_attr_setinheritsched);\n \n    function pthread_attr_setschedpolicy\n      (attr   : access pthread_attr_t;\n       policy : int) return int;\n-   pragma Import (C, pthread_attr_setschedpolicy, \"pthread_attr_setsched\");\n-\n-   function pthread_attr_setschedparam\n-     (attr        : access pthread_attr_t;\n-      sched_param : int) return int;\n-   pragma Import (C, pthread_attr_setschedparam, \"pthread_attr_setschedparam\");\n+   pragma Import (C, pthread_attr_setschedpolicy);\n \n    function sched_yield return int;\n-   --  FSU_THREADS does not have sched_yield;\n+   pragma Import (C, sched_yield, \"sched_yield\");\n \n    ---------------------------\n    -- P1003.1c - Section 16 --\n@@ -428,7 +453,7 @@ package System.OS_Interface is\n    function pthread_attr_setdetachstate\n      (attr        : access pthread_attr_t;\n       detachstate : int) return int;\n-   --  FSU_THREADS has a nonstandard pthread_attr_setdetachstate\n+   pragma Import (C, pthread_attr_setdetachstate);\n \n    function pthread_attr_setstacksize\n      (attr      : access pthread_attr_t;\n@@ -452,26 +477,31 @@ package System.OS_Interface is\n    -- POSIX.1c  Section 17 --\n    --------------------------\n \n-   function pthread_setspecific\n+   function st_setspecific\n      (key   : pthread_key_t;\n       value : System.Address) return int;\n-   pragma Import (C, pthread_setspecific, \"pthread_setspecific\");\n+   pragma Import (C, st_setspecific, \"st_setspecific\");\n \n-   function pthread_getspecific (key : pthread_key_t) return System.Address;\n-   --  FSU_THREADS has a nonstandard pthread_getspecific\n+   function st_getspecific\n+     (key    : pthread_key_t;\n+      retval : System.Address) return int;\n+   pragma Import (C, st_getspecific, \"st_getspecific\");\n \n    type destructor_pointer is access procedure (arg : System.Address);\n \n-   function pthread_key_create\n-     (key        : access pthread_key_t;\n-      destructor : destructor_pointer) return int;\n-   pragma Import (C, pthread_key_create, \"pthread_key_create\");\n+   function st_keycreate\n+     (destructor : destructor_pointer;\n+      key        : access pthread_key_t) return int;\n+   pragma Import (C, st_keycreate, \"st_keycreate\");\n \n private\n \n-   type sigset_t is new int;\n+   type sigset_t is record\n+      X1, X2 : long;\n+   end record;\n+   pragma Convention (C, sigset_t);\n \n-   type pid_t is new int;\n+   type pid_t is new long;\n \n    type time_t is new long;\n \n@@ -481,76 +511,71 @@ private\n    end record;\n    pragma Convention (C, timespec);\n \n-   type clockid_t is new int;\n+   type clockid_t is new unsigned_char;\n    CLOCK_REALTIME : constant clockid_t := 0;\n \n    type struct_timeval is record\n-      tv_sec       : long;\n-      tv_usec      : long;\n+      tv_sec  : time_t;\n+      tv_usec : time_t;\n    end record;\n    pragma Convention (C, struct_timeval);\n \n+   type st_attr_t is record\n+      stksize      : int;\n+      prio         : int;\n+      inheritsched : int;\n+      state        : int;\n+      sched        : int;\n+      detachstate  : int;\n+      guardsize    : int;\n+   end record;\n+   pragma Convention (C, st_attr_t);\n+\n    type pthread_attr_t is record\n-      flags           : int;\n-      stacksize       : int;\n-      contentionscope : int;\n-      inheritsched    : int;\n-      detachstate     : int;\n-      sched           : int;\n-      prio            : int;\n-      starttime       : timespec;\n-      deadline        : timespec;\n-      period          : timespec;\n+      pthread_attr_magic : unsigned;\n+      st                 : st_attr_t;\n+      pthread_attr_scope : int;\n    end record;\n    pragma Convention (C, pthread_attr_t);\n \n    type pthread_condattr_t is record\n-      flags : int;\n+      cv_magic   : unsigned;\n+      cv_pshared : unsigned;\n    end record;\n    pragma Convention (C, pthread_condattr_t);\n \n    type pthread_mutexattr_t is record\n-      flags        : int;\n-      prio_ceiling : int;\n-      protocol     : int;\n+      m_flags   : unsigned;\n+      m_prio_c  : int;\n+      m_pshared : int;\n    end record;\n    pragma Convention (C, pthread_mutexattr_t);\n \n-   type sigjmp_buf is array (Integer range 0 .. 9) of int;\n-\n-   type pthread_t_struct is record\n-      context    : sigjmp_buf;\n-      pbody      : sigjmp_buf;\n-      errno      : int;\n-      ret        : int;\n-      stack_base : System.Address;\n-   end record;\n-   pragma Convention (C, pthread_t_struct);\n-\n-   type pthread_t is access all pthread_t_struct;\n+   type tid_t is new short;\n+   type pthread_t is new tid_t;\n \n-   type queue_t is record\n-      head : System.Address;\n-      tail : System.Address;\n-   end record;\n-   pragma Convention (C, queue_t);\n+   type block_obj_t is new System.Address;\n+   --  typedef struct _block_obj_s {\n+   --     struct st_entry *b_head;\n+   --  } block_obj_t;\n \n    type pthread_mutex_t is record\n-      queue        : queue_t;\n-      lock         : plain_char;\n-      owner        : System.Address;\n-      flags        : int;\n-      prio_ceiling : int;\n-      protocol     : int;\n-      prev_max_ceiling_prio  : int;\n+      m_flags      : unsigned;\n+      m_owner      : tid_t;\n+      m_wait       : block_obj_t;\n+      m_prio_c     : int;\n+      m_oldprio    : int;\n+      m_count      : int;\n+      m_referenced : int;\n    end record;\n    pragma Convention (C, pthread_mutex_t);\n+   type pthread_mutex_t_ptr is access all pthread_mutex_t;\n \n    type pthread_cond_t is record\n-      queue   : queue_t;\n-      flags   : int;\n-      waiters : int;\n-      mutex   : System.Address;\n+      cv_magic  : unsigned;\n+      cv_wait   : block_obj_t;\n+      cv_mutex  : pthread_mutex_t_ptr;\n+      cv_refcnt : int;\n    end record;\n    pragma Convention (C, pthread_cond_t);\n ", "previous_filename": "gcc/ada/5mosinte.ads"}, {"sha": "60e87f005a8cefb9f2a96731d00f8d984d37cc3e", "filename": "gcc/ada/56taprop.adb", "status": "added", "additions": 1201, "deletions": 0, "changes": 1201, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F56taprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F56taprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F56taprop.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -0,0 +1,1201 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                GNU ADA RUN-TIME LIBRARY (GNARL) COMPONENTS               --\n+--                                                                          --\n+--     S Y S T E M . T A S K _ P R I M I T I V E S . O P E R A T I O N S    --\n+--                                                                          --\n+--                                  B o d y                                 --\n+--                                                                          --\n+--         Copyright (C) 1992-2003, Free Software Foundation, Inc.          --\n+--                                                                          --\n+-- GNARL is free software; you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion. GNARL is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNARL; see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNARL was developed by the GNARL team at Florida State University.       --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This is a LynxOS version of this file, adapted to make\n+--  SCHED_FIFO and ceiling locking (Annex D compliance) work properly\n+\n+--  This package contains all the GNULL primitives that interface directly\n+--  with the underlying OS.\n+\n+pragma Polling (Off);\n+--  Turn off polling, we do not want ATC polling to take place during\n+--  tasking operations. It causes infinite loops and other problems.\n+\n+with System.Tasking.Debug;\n+--  used for Known_Tasks\n+\n+with System.Task_Info;\n+--  used for Task_Info_Type\n+\n+with Interfaces.C;\n+--  used for int\n+--           size_t\n+\n+with System.Interrupt_Management;\n+--  used for Keep_Unmasked\n+--           Abort_Task_Interrupt\n+--           Interrupt_ID\n+\n+with System.Interrupt_Management.Operations;\n+--  used for Set_Interrupt_Mask\n+--           All_Tasks_Mask\n+pragma Elaborate_All (System.Interrupt_Management.Operations);\n+\n+with System.Parameters;\n+--  used for Size_Type\n+\n+with System.Tasking;\n+--  used for Ada_Task_Control_Block\n+--           Task_ID\n+\n+with System.Soft_Links;\n+--  used for Defer/Undefer_Abort\n+\n+--  Note that we do not use System.Tasking.Initialization directly since\n+--  this is a higher level package that we shouldn't depend on. For example\n+--  when using the restricted run time, it is replaced by\n+--  System.Tasking.Restricted.Initialization\n+\n+with System.OS_Primitives;\n+--  used for Delay_Modes\n+\n+with Unchecked_Conversion;\n+with Unchecked_Deallocation;\n+\n+package body System.Task_Primitives.Operations is\n+\n+   use System.Tasking.Debug;\n+   use System.Tasking;\n+   use Interfaces.C;\n+   use System.OS_Interface;\n+   use System.Parameters;\n+   use System.OS_Primitives;\n+\n+   package SSL renames System.Soft_Links;\n+\n+   ----------------\n+   -- Local Data --\n+   ----------------\n+\n+   --  The followings are logically constants, but need to be initialized\n+   --  at run time.\n+\n+   Single_RTS_Lock : aliased RTS_Lock;\n+   --  This is a lock to allow only one thread of control in the RTS at\n+   --  a time; it is used to execute in mutual exclusion from all other tasks.\n+   --  Used mainly in Single_Lock mode, but also to protect All_Tasks_List\n+\n+   ATCB_Key : aliased pthread_key_t;\n+   --  Key used to find the Ada Task_ID associated with a thread\n+\n+   Environment_Task_ID : Task_ID;\n+   --  A variable to hold Task_ID for the environment task.\n+\n+   Locking_Policy : Character;\n+   pragma Import (C, Locking_Policy, \"__gl_locking_policy\");\n+   --  Value of the pragma Locking_Policy:\n+   --    'C' for Ceiling_Locking\n+   --    'I' for Inherit_Locking\n+   --    ' ' for none.\n+\n+   Unblocked_Signal_Mask : aliased sigset_t;\n+   --  The set of signals that should unblocked in all tasks\n+\n+   --  The followings are internal configuration constants needed.\n+\n+   Next_Serial_Number : Task_Serial_Number := 100;\n+   --  We start at 100, to reserve some special values for\n+   --  using in error checking.\n+\n+   Time_Slice_Val : Integer;\n+   pragma Import (C, Time_Slice_Val, \"__gl_time_slice_val\");\n+\n+   Dispatching_Policy : Character;\n+   pragma Import (C, Dispatching_Policy, \"__gl_task_dispatching_policy\");\n+\n+   FIFO_Within_Priorities : constant Boolean := Dispatching_Policy = 'F';\n+   --  Indicates whether FIFO_Within_Priorities is set.\n+\n+   Foreign_Task_Elaborated : aliased Boolean := True;\n+   --  Used to identified fake tasks (i.e., non-Ada Threads).\n+\n+   --------------------\n+   -- Local Packages --\n+   --------------------\n+\n+   package Specific is\n+\n+      procedure Initialize (Environment_Task : Task_ID);\n+      pragma Inline (Initialize);\n+      --  Initialize various data needed by this package.\n+\n+      function Is_Valid_Task return Boolean;\n+      pragma Inline (Is_Valid_Task);\n+      --  Does the current thread have an ATCB?\n+\n+      procedure Set (Self_Id : Task_ID);\n+      pragma Inline (Set);\n+      --  Set the self id for the current task.\n+\n+      function Self return Task_ID;\n+      pragma Inline (Self);\n+      --  Return a pointer to the Ada Task Control Block of the calling task.\n+\n+   end Specific;\n+\n+   package body Specific is separate;\n+   --  The body of this package is target specific.\n+\n+   ---------------------------------\n+   -- Support for foreign threads --\n+   ---------------------------------\n+\n+   function Register_Foreign_Thread (Thread : Thread_Id) return Task_ID;\n+   --  Allocate and Initialize a new ATCB for the current Thread.\n+\n+   function Register_Foreign_Thread\n+     (Thread : Thread_Id) return Task_ID is separate;\n+\n+   -----------------------\n+   -- Local Subprograms --\n+   -----------------------\n+\n+   procedure Abort_Handler (Sig : Signal);\n+   --  Signal handler used to implement asynchronous abort.\n+\n+   procedure Set_OS_Priority (T : Task_ID; Prio : System.Any_Priority);\n+   --  This procedure calls the scheduler of the OS to set thread's priority\n+\n+   function To_Address is new Unchecked_Conversion (Task_ID, System.Address);\n+\n+   -------------------\n+   -- Abort_Handler --\n+   -------------------\n+\n+   procedure Abort_Handler (Sig : Signal) is\n+      pragma Unreferenced (Sig);\n+\n+      T       : Task_ID := Self;\n+      Result  : Interfaces.C.int;\n+      Old_Set : aliased sigset_t;\n+\n+   begin\n+      --  It is not safe to raise an exception when using ZCX and the GCC\n+      --  exception handling mechanism.\n+\n+      if ZCX_By_Default and then GCC_ZCX_Support then\n+         return;\n+      end if;\n+\n+      if T.Deferral_Level = 0\n+        and then T.Pending_ATC_Level < T.ATC_Nesting_Level and then\n+        not T.Aborting\n+      then\n+         T.Aborting := True;\n+\n+         --  Make sure signals used for RTS internal purpose are unmasked\n+\n+         Result := pthread_sigmask (SIG_UNBLOCK,\n+           Unblocked_Signal_Mask'Unchecked_Access, Old_Set'Unchecked_Access);\n+         pragma Assert (Result = 0);\n+\n+         raise Standard'Abort_Signal;\n+      end if;\n+   end Abort_Handler;\n+\n+   -----------------\n+   -- Stack_Guard --\n+   -----------------\n+\n+   procedure Stack_Guard (T : ST.Task_ID; On : Boolean) is\n+      Stack_Base : constant Address := Get_Stack_Base (T.Common.LL.Thread);\n+      Guard_Page_Address : Address;\n+\n+      Res : Interfaces.C.int;\n+\n+   begin\n+      if Stack_Base_Available then\n+\n+         --  Compute the guard page address\n+\n+         Guard_Page_Address :=\n+           Stack_Base - (Stack_Base mod Get_Page_Size) + Get_Page_Size;\n+\n+         if On then\n+            Res := mprotect (Guard_Page_Address, Get_Page_Size, PROT_ON);\n+         else\n+            Res := mprotect (Guard_Page_Address, Get_Page_Size, PROT_OFF);\n+         end if;\n+\n+         pragma Assert (Res = 0);\n+      end if;\n+   end Stack_Guard;\n+\n+   --------------------\n+   -- Get_Thread_Id  --\n+   --------------------\n+\n+   function Get_Thread_Id (T : ST.Task_ID) return OSI.Thread_Id is\n+   begin\n+      return T.Common.LL.Thread;\n+   end Get_Thread_Id;\n+\n+   ----------\n+   -- Self --\n+   ----------\n+\n+   function Self return Task_ID renames Specific.Self;\n+\n+   ---------------------\n+   -- Initialize_Lock --\n+   ---------------------\n+\n+   procedure Initialize_Lock\n+     (Prio : System.Any_Priority;\n+      L    : access Lock)\n+   is\n+      Attributes : aliased pthread_mutexattr_t;\n+      Result : Interfaces.C.int;\n+\n+   begin\n+      Result := pthread_mutexattr_init (Attributes'Access);\n+      pragma Assert (Result = 0 or else Result = ENOMEM);\n+\n+      if Result = ENOMEM then\n+         raise Storage_Error;\n+      end if;\n+\n+      if Locking_Policy = 'C' then\n+         L.Ceiling := Prio;\n+      end if;\n+\n+      Result := pthread_mutex_init (L.Mutex'Access, Attributes'Access);\n+      pragma Assert (Result = 0 or else Result = ENOMEM);\n+\n+      if Result = ENOMEM then\n+         raise Storage_Error;\n+      end if;\n+\n+      Result := pthread_mutexattr_destroy (Attributes'Access);\n+      pragma Assert (Result = 0);\n+   end Initialize_Lock;\n+\n+   procedure Initialize_Lock (L : access RTS_Lock; Level : Lock_Level) is\n+      pragma Unreferenced (Level);\n+\n+      Attributes : aliased pthread_mutexattr_t;\n+      Result : Interfaces.C.int;\n+\n+   begin\n+      Result := pthread_mutexattr_init (Attributes'Access);\n+      pragma Assert (Result = 0 or else Result = ENOMEM);\n+\n+      if Result = ENOMEM then\n+         raise Storage_Error;\n+      end if;\n+\n+      Result := pthread_mutex_init (L, Attributes'Access);\n+      pragma Assert (Result = 0 or else Result = ENOMEM);\n+\n+      if Result = ENOMEM then\n+         Result := pthread_mutexattr_destroy (Attributes'Access);\n+         raise Storage_Error;\n+      end if;\n+\n+      Result := pthread_mutexattr_destroy (Attributes'Access);\n+      pragma Assert (Result = 0);\n+   end Initialize_Lock;\n+\n+   -------------------\n+   -- Finalize_Lock --\n+   -------------------\n+\n+   procedure Finalize_Lock (L : access Lock) is\n+      Result : Interfaces.C.int;\n+\n+   begin\n+      Result := pthread_mutex_destroy (L.Mutex'Access);\n+      pragma Assert (Result = 0);\n+   end Finalize_Lock;\n+\n+   procedure Finalize_Lock (L : access RTS_Lock) is\n+      Result : Interfaces.C.int;\n+\n+   begin\n+      Result := pthread_mutex_destroy (L);\n+      pragma Assert (Result = 0);\n+   end Finalize_Lock;\n+\n+   ----------------\n+   -- Write_Lock --\n+   ----------------\n+\n+   procedure Write_Lock (L : access Lock; Ceiling_Violation : out Boolean) is\n+      Result : Interfaces.C.int;\n+      T : constant Task_ID := Self;\n+\n+   begin\n+      if Locking_Policy = 'C' then\n+         if T.Common.Current_Priority > L.Ceiling then\n+            Ceiling_Violation := True;\n+            return;\n+         end if;\n+\n+         L.Saved_Priority := T.Common.Current_Priority;\n+\n+         if T.Common.Current_Priority < L.Ceiling then\n+            Set_OS_Priority (T, L.Ceiling);\n+         end if;\n+      end if;\n+\n+      Result := pthread_mutex_lock (L.Mutex'Access);\n+\n+      --  Assume that the cause of EINVAL is a priority ceiling violation\n+\n+      Ceiling_Violation := (Result = EINVAL);\n+      pragma Assert (Result = 0 or else Result = EINVAL);\n+   end Write_Lock;\n+\n+   --  No tricks on RTS_Locks\n+\n+   procedure Write_Lock\n+     (L : access RTS_Lock; Global_Lock : Boolean := False)\n+   is\n+      Result : Interfaces.C.int;\n+\n+   begin\n+      if not Single_Lock or else Global_Lock then\n+         Result := pthread_mutex_lock (L);\n+         pragma Assert (Result = 0);\n+      end if;\n+   end Write_Lock;\n+\n+   procedure Write_Lock (T : Task_ID) is\n+      Result : Interfaces.C.int;\n+   begin\n+      if not Single_Lock then\n+         Result := pthread_mutex_lock (T.Common.LL.L'Access);\n+         pragma Assert (Result = 0);\n+      end if;\n+   end Write_Lock;\n+\n+   ---------------\n+   -- Read_Lock --\n+   ---------------\n+\n+   procedure Read_Lock (L : access Lock; Ceiling_Violation : out Boolean) is\n+   begin\n+      Write_Lock (L, Ceiling_Violation);\n+   end Read_Lock;\n+\n+   ------------\n+   -- Unlock --\n+   ------------\n+\n+   procedure Unlock (L : access Lock) is\n+      Result : Interfaces.C.int;\n+      T : constant Task_ID := Self;\n+\n+   begin\n+      Result := pthread_mutex_unlock (L.Mutex'Access);\n+      pragma Assert (Result = 0);\n+\n+      if Locking_Policy = 'C' then\n+         if T.Common.Current_Priority > L.Saved_Priority then\n+            Set_OS_Priority (T, L.Saved_Priority);\n+         end if;\n+      end if;\n+   end Unlock;\n+\n+   procedure Unlock (L : access RTS_Lock; Global_Lock : Boolean := False) is\n+      Result : Interfaces.C.int;\n+\n+   begin\n+      if not Single_Lock or else Global_Lock then\n+         Result := pthread_mutex_unlock (L);\n+         pragma Assert (Result = 0);\n+      end if;\n+   end Unlock;\n+\n+   procedure Unlock (T : Task_ID) is\n+      Result : Interfaces.C.int;\n+\n+   begin\n+      if not Single_Lock then\n+         Result := pthread_mutex_unlock (T.Common.LL.L'Access);\n+         pragma Assert (Result = 0);\n+      end if;\n+   end Unlock;\n+\n+   -----------\n+   -- Sleep --\n+   -----------\n+\n+   procedure Sleep\n+     (Self_ID : Task_ID;\n+      Reason   : System.Tasking.Task_States)\n+   is\n+      pragma Unreferenced (Reason);\n+\n+      Result : Interfaces.C.int;\n+\n+   begin\n+      if Single_Lock then\n+         Result := pthread_cond_wait\n+           (Self_ID.Common.LL.CV'Access, Single_RTS_Lock'Access);\n+      else\n+         Result := pthread_cond_wait\n+           (Self_ID.Common.LL.CV'Access, Self_ID.Common.LL.L'Access);\n+      end if;\n+\n+      --  EINTR is not considered a failure.\n+\n+      pragma Assert (Result = 0 or else Result = EINTR);\n+   end Sleep;\n+\n+   -----------------\n+   -- Timed_Sleep --\n+   -----------------\n+\n+   --  This is for use within the run-time system, so abort is\n+   --  assumed to be already deferred, and the caller should be\n+   --  holding its own ATCB lock.\n+\n+   procedure Timed_Sleep\n+     (Self_ID  : Task_ID;\n+      Time     : Duration;\n+      Mode     : ST.Delay_Modes;\n+      Reason   : Task_States;\n+      Timedout : out Boolean;\n+      Yielded  : out Boolean)\n+   is\n+      pragma Unreferenced (Reason);\n+\n+      Check_Time : constant Duration := Monotonic_Clock;\n+      Rel_Time   : Duration;\n+      Abs_Time   : Duration;\n+      Request    : aliased timespec;\n+      Result     : Interfaces.C.int;\n+\n+   begin\n+      Timedout := True;\n+      Yielded := False;\n+\n+      if Mode = Relative then\n+         Abs_Time := Duration'Min (Time, Max_Sensible_Delay) + Check_Time;\n+\n+         if Relative_Timed_Wait then\n+            Rel_Time := Duration'Min (Max_Sensible_Delay, Time);\n+         end if;\n+\n+      else\n+         Abs_Time := Duration'Min (Check_Time + Max_Sensible_Delay, Time);\n+\n+         if Relative_Timed_Wait then\n+            Rel_Time := Duration'Min (Max_Sensible_Delay, Time - Check_Time);\n+         end if;\n+      end if;\n+\n+      if Abs_Time > Check_Time then\n+         if Relative_Timed_Wait then\n+            Request := To_Timespec (Rel_Time);\n+         else\n+            Request := To_Timespec (Abs_Time);\n+         end if;\n+\n+         loop\n+            exit when Self_ID.Pending_ATC_Level < Self_ID.ATC_Nesting_Level\n+              or else Self_ID.Pending_Priority_Change;\n+\n+            if Single_Lock then\n+               Result := pthread_cond_timedwait\n+                 (Self_ID.Common.LL.CV'Access, Single_RTS_Lock'Access,\n+                  Request'Access);\n+\n+            else\n+               Result := pthread_cond_timedwait\n+                 (Self_ID.Common.LL.CV'Access, Self_ID.Common.LL.L'Access,\n+                  Request'Access);\n+            end if;\n+\n+            exit when Abs_Time <= Monotonic_Clock;\n+\n+            if Result = 0 or Result = EINTR then\n+\n+               --  Somebody may have called Wakeup for us\n+\n+               Timedout := False;\n+               exit;\n+            end if;\n+\n+            pragma Assert (Result = ETIMEDOUT);\n+         end loop;\n+      end if;\n+   end Timed_Sleep;\n+\n+   -----------------\n+   -- Timed_Delay --\n+   -----------------\n+\n+   --  This is for use in implementing delay statements, so we assume\n+   --  the caller is abort-deferred but is holding no locks.\n+\n+   procedure Timed_Delay\n+     (Self_ID  : Task_ID;\n+      Time     : Duration;\n+      Mode     : ST.Delay_Modes)\n+   is\n+      Check_Time : constant Duration := Monotonic_Clock;\n+      Abs_Time   : Duration;\n+      Rel_Time   : Duration;\n+      Request    : aliased timespec;\n+      Result     : Interfaces.C.int;\n+\n+   begin\n+      --  Only the little window between deferring abort and\n+      --  locking Self_ID is the reason we need to\n+      --  check for pending abort and priority change below!\n+\n+      SSL.Abort_Defer.all;\n+\n+      if Single_Lock then\n+         Lock_RTS;\n+      end if;\n+\n+      --  Comments needed in code below ???\n+\n+      Write_Lock (Self_ID);\n+\n+      if Mode = Relative then\n+         Abs_Time := Duration'Min (Time, Max_Sensible_Delay) + Check_Time;\n+\n+         if Relative_Timed_Wait then\n+            Rel_Time := Duration'Min (Max_Sensible_Delay, Time);\n+         end if;\n+\n+      else\n+         Abs_Time := Duration'Min (Check_Time + Max_Sensible_Delay, Time);\n+\n+         if Relative_Timed_Wait then\n+            Rel_Time := Duration'Min (Max_Sensible_Delay, Time - Check_Time);\n+         end if;\n+      end if;\n+\n+      if Abs_Time > Check_Time then\n+         if Relative_Timed_Wait then\n+            Request := To_Timespec (Rel_Time);\n+         else\n+            Request := To_Timespec (Abs_Time);\n+         end if;\n+\n+         Self_ID.Common.State := Delay_Sleep;\n+\n+         loop\n+            if Self_ID.Pending_Priority_Change then\n+               Self_ID.Pending_Priority_Change := False;\n+               Self_ID.Common.Base_Priority := Self_ID.New_Base_Priority;\n+               Set_Priority (Self_ID, Self_ID.Common.Base_Priority);\n+            end if;\n+\n+            exit when Self_ID.Pending_ATC_Level < Self_ID.ATC_Nesting_Level;\n+\n+            if Single_Lock then\n+               Result := pthread_cond_timedwait (Self_ID.Common.LL.CV'Access,\n+                 Single_RTS_Lock'Access, Request'Access);\n+            else\n+               Result := pthread_cond_timedwait (Self_ID.Common.LL.CV'Access,\n+                 Self_ID.Common.LL.L'Access, Request'Access);\n+            end if;\n+\n+            exit when Abs_Time <= Monotonic_Clock;\n+\n+            pragma Assert (Result = 0\n+                             or else Result = ETIMEDOUT\n+                             or else Result = EINTR);\n+         end loop;\n+\n+         Self_ID.Common.State := Runnable;\n+      end if;\n+\n+      Unlock (Self_ID);\n+\n+      if Single_Lock then\n+         Unlock_RTS;\n+      end if;\n+\n+      Result := sched_yield;\n+      SSL.Abort_Undefer.all;\n+   end Timed_Delay;\n+\n+   ---------------------\n+   -- Monotonic_Clock --\n+   ---------------------\n+\n+   function Monotonic_Clock return Duration is\n+      TS     : aliased timespec;\n+      Result : Interfaces.C.int;\n+\n+   begin\n+      Result := clock_gettime\n+        (clock_id => CLOCK_REALTIME, tp => TS'Unchecked_Access);\n+      pragma Assert (Result = 0);\n+      return To_Duration (TS);\n+   end Monotonic_Clock;\n+\n+   -------------------\n+   -- RT_Resolution --\n+   -------------------\n+\n+   function RT_Resolution return Duration is\n+      Res    : aliased timespec;\n+      Result : Interfaces.C.int;\n+\n+   begin\n+      Result := clock_getres\n+        (clock_id => CLOCK_REALTIME, Res => Res'Unchecked_Access);\n+      pragma Assert (Result = 0);\n+      return To_Duration (Res);\n+   end RT_Resolution;\n+\n+   ------------\n+   -- Wakeup --\n+   ------------\n+\n+   procedure Wakeup (T : Task_ID; Reason : System.Tasking.Task_States) is\n+      pragma Unreferenced (Reason);\n+\n+      Result : Interfaces.C.int;\n+\n+   begin\n+      Result := pthread_cond_signal (T.Common.LL.CV'Access);\n+      pragma Assert (Result = 0);\n+   end Wakeup;\n+\n+   -----------\n+   -- Yield --\n+   -----------\n+\n+   procedure Yield (Do_Yield : Boolean := True) is\n+      Result : Interfaces.C.int;\n+\n+   begin\n+      if Do_Yield then\n+         Result := sched_yield;\n+      end if;\n+   end Yield;\n+\n+   ------------------\n+   -- Set_Priority --\n+   ------------------\n+\n+   procedure Set_OS_Priority (T : Task_ID; Prio : System.Any_Priority) is\n+      Result : Interfaces.C.int;\n+      Param  : aliased struct_sched_param;\n+\n+   begin\n+      Param.sched_priority := Interfaces.C.int (Prio);\n+\n+      if Time_Slice_Supported and then Time_Slice_Val > 0 then\n+         Result := pthread_setschedparam\n+           (T.Common.LL.Thread, SCHED_RR, Param'Access);\n+\n+      elsif FIFO_Within_Priorities or else Time_Slice_Val = 0 then\n+         Result := pthread_setschedparam\n+           (T.Common.LL.Thread, SCHED_FIFO, Param'Access);\n+\n+      else\n+         Result := pthread_setschedparam\n+           (T.Common.LL.Thread, SCHED_OTHER, Param'Access);\n+      end if;\n+\n+      pragma Assert (Result = 0);\n+   end Set_OS_Priority;\n+\n+   type Prio_Array_Type is array (System.Any_Priority) of Integer;\n+   pragma Atomic_Components (Prio_Array_Type);\n+   Prio_Array : Prio_Array_Type;\n+   --  Comments needed for these declarations ???\n+\n+   procedure Set_Priority\n+     (T                   : Task_ID;\n+      Prio                : System.Any_Priority;\n+      Loss_Of_Inheritance : Boolean := False)\n+   is\n+      Array_Item : Integer;\n+\n+   begin\n+      Set_OS_Priority (T, Prio);\n+\n+      if Locking_Policy = 'C' then\n+         --  Annex D requirements: loss of inheritance puts task at the\n+         --  beginning of the queue for that prio; copied from 5ztaprop\n+         --  (VxWorks)\n+\n+         if Loss_Of_Inheritance\n+           and then Prio < T.Common.Current_Priority then\n+\n+            Array_Item := Prio_Array (T.Common.Base_Priority) + 1;\n+            Prio_Array (T.Common.Base_Priority) := Array_Item;\n+\n+            loop\n+               Yield;\n+               exit when Array_Item = Prio_Array (T.Common.Base_Priority)\n+                 or else Prio_Array (T.Common.Base_Priority) = 1;\n+            end loop;\n+\n+            Prio_Array (T.Common.Base_Priority) :=\n+              Prio_Array (T.Common.Base_Priority) - 1;\n+         end if;\n+      end if;\n+\n+      T.Common.Current_Priority := Prio;\n+   end Set_Priority;\n+\n+   ------------------\n+   -- Get_Priority --\n+   ------------------\n+\n+   function Get_Priority (T : Task_ID) return System.Any_Priority is\n+   begin\n+      return T.Common.Current_Priority;\n+   end Get_Priority;\n+\n+   ----------------\n+   -- Enter_Task --\n+   ----------------\n+\n+   procedure Enter_Task (Self_ID : Task_ID) is\n+   begin\n+      Self_ID.Common.LL.Thread := pthread_self;\n+      Self_ID.Common.LL.LWP := lwp_self;\n+\n+      Specific.Set (Self_ID);\n+\n+      Lock_RTS;\n+\n+      for J in Known_Tasks'Range loop\n+         if Known_Tasks (J) = null then\n+            Known_Tasks (J) := Self_ID;\n+            Self_ID.Known_Tasks_Index := J;\n+            exit;\n+         end if;\n+      end loop;\n+\n+      Unlock_RTS;\n+   end Enter_Task;\n+\n+   --------------\n+   -- New_ATCB --\n+   --------------\n+\n+   function New_ATCB (Entry_Num : Task_Entry_Index) return Task_ID is\n+   begin\n+      return new Ada_Task_Control_Block (Entry_Num);\n+   end New_ATCB;\n+\n+   -------------------\n+   -- Is_Valid_Task --\n+   -------------------\n+\n+   function Is_Valid_Task return Boolean renames Specific.Is_Valid_Task;\n+\n+   -----------------------------\n+   -- Register_Foreign_Thread --\n+   -----------------------------\n+\n+   function Register_Foreign_Thread return Task_ID is\n+   begin\n+      if Is_Valid_Task then\n+         return Self;\n+      else\n+         return Register_Foreign_Thread (pthread_self);\n+      end if;\n+   end Register_Foreign_Thread;\n+\n+   ----------------------\n+   --  Initialize_TCB  --\n+   ----------------------\n+\n+   procedure Initialize_TCB (Self_ID : Task_ID; Succeeded : out Boolean) is\n+      Mutex_Attr : aliased pthread_mutexattr_t;\n+      Result     : Interfaces.C.int;\n+      Cond_Attr  : aliased pthread_condattr_t;\n+\n+   begin\n+      --  Give the task a unique serial number.\n+\n+      Self_ID.Serial_Number := Next_Serial_Number;\n+      Next_Serial_Number := Next_Serial_Number + 1;\n+      pragma Assert (Next_Serial_Number /= 0);\n+\n+      if not Single_Lock then\n+         Result := pthread_mutexattr_init (Mutex_Attr'Access);\n+         pragma Assert (Result = 0 or else Result = ENOMEM);\n+\n+         if Result = 0 then\n+            Result := pthread_mutex_init (Self_ID.Common.LL.L'Access,\n+              Mutex_Attr'Access);\n+            pragma Assert (Result = 0 or else Result = ENOMEM);\n+         end if;\n+\n+         if Result /= 0 then\n+            Succeeded := False;\n+            return;\n+         end if;\n+\n+         Result := pthread_mutexattr_destroy (Mutex_Attr'Access);\n+         pragma Assert (Result = 0);\n+      end if;\n+\n+      Result := pthread_condattr_init (Cond_Attr'Access);\n+      pragma Assert (Result = 0 or else Result = ENOMEM);\n+\n+      if Result = 0 then\n+         Result := pthread_cond_init (Self_ID.Common.LL.CV'Access,\n+           Cond_Attr'Access);\n+         pragma Assert (Result = 0 or else Result = ENOMEM);\n+      end if;\n+\n+      if Result = 0 then\n+         Succeeded := True;\n+      else\n+         if not Single_Lock then\n+            Result := pthread_mutex_destroy (Self_ID.Common.LL.L'Access);\n+            pragma Assert (Result = 0);\n+         end if;\n+\n+         Succeeded := False;\n+      end if;\n+\n+      Result := pthread_condattr_destroy (Cond_Attr'Access);\n+      pragma Assert (Result = 0);\n+   end Initialize_TCB;\n+\n+   -----------------\n+   -- Create_Task --\n+   -----------------\n+\n+   procedure Create_Task\n+     (T          : Task_ID;\n+      Wrapper    : System.Address;\n+      Stack_Size : System.Parameters.Size_Type;\n+      Priority   : System.Any_Priority;\n+      Succeeded  : out Boolean)\n+   is\n+      Attributes          : aliased pthread_attr_t;\n+      Adjusted_Stack_Size : Interfaces.C.size_t;\n+      Result              : Interfaces.C.int;\n+\n+      function Thread_Body_Access is new\n+        Unchecked_Conversion (System.Address, Thread_Body);\n+\n+      use System.Task_Info;\n+\n+   begin\n+      if Stack_Size = Unspecified_Size then\n+         Adjusted_Stack_Size := Interfaces.C.size_t (Default_Stack_Size);\n+\n+      elsif Stack_Size < Minimum_Stack_Size then\n+         Adjusted_Stack_Size := Interfaces.C.size_t (Minimum_Stack_Size);\n+\n+      else\n+         Adjusted_Stack_Size := Interfaces.C.size_t (Stack_Size);\n+      end if;\n+\n+      if Stack_Base_Available then\n+         --  If Stack Checking is supported then allocate 2 additional pages:\n+         --\n+         --  In the worst case, stack is allocated at something like\n+         --  N * Get_Page_Size - epsilon, we need to add the size for 2 pages\n+         --  to be sure the effective stack size is greater than what\n+         --  has been asked.\n+\n+         Adjusted_Stack_Size := Adjusted_Stack_Size + 2 * Get_Page_Size;\n+      end if;\n+\n+      Result := pthread_attr_init (Attributes'Access);\n+      pragma Assert (Result = 0 or else Result = ENOMEM);\n+\n+      if Result /= 0 then\n+         Succeeded := False;\n+         return;\n+      end if;\n+\n+      Result := pthread_attr_setdetachstate\n+        (Attributes'Access, PTHREAD_CREATE_DETACHED);\n+      pragma Assert (Result = 0);\n+\n+      Result := pthread_attr_setstacksize\n+        (Attributes'Access, Adjusted_Stack_Size);\n+      pragma Assert (Result = 0);\n+\n+      if T.Common.Task_Info /= Default_Scope then\n+\n+         --  We are assuming that Scope_Type has the same values than the\n+         --  corresponding C macros\n+\n+         Result := pthread_attr_setscope\n+           (Attributes'Access, Task_Info_Type'Pos (T.Common.Task_Info));\n+         pragma Assert (Result = 0);\n+      end if;\n+\n+      --  Since the initial signal mask of a thread is inherited from the\n+      --  creator, and the Environment task has all its signals masked, we\n+      --  do not need to manipulate caller's signal mask at this point.\n+      --  All tasks in RTS will have All_Tasks_Mask initially.\n+\n+      Result := pthread_create\n+        (T.Common.LL.Thread'Access,\n+         Attributes'Access,\n+         Thread_Body_Access (Wrapper),\n+         To_Address (T));\n+      pragma Assert (Result = 0 or else Result = EAGAIN);\n+\n+      Succeeded := Result = 0;\n+\n+      Result := pthread_attr_destroy (Attributes'Access);\n+      pragma Assert (Result = 0);\n+\n+      Set_Priority (T, Priority);\n+   end Create_Task;\n+\n+   ------------------\n+   -- Finalize_TCB --\n+   ------------------\n+\n+   procedure Finalize_TCB (T : Task_ID) is\n+      Result : Interfaces.C.int;\n+      Tmp    : Task_ID := T;\n+      Is_Self : constant Boolean := T = Self;\n+\n+      procedure Free is new\n+        Unchecked_Deallocation (Ada_Task_Control_Block, Task_ID);\n+\n+   begin\n+      if not Single_Lock then\n+         Result := pthread_mutex_destroy (T.Common.LL.L'Access);\n+         pragma Assert (Result = 0);\n+      end if;\n+\n+      Result := pthread_cond_destroy (T.Common.LL.CV'Access);\n+      pragma Assert (Result = 0);\n+\n+      if T.Known_Tasks_Index /= -1 then\n+         Known_Tasks (T.Known_Tasks_Index) := null;\n+      end if;\n+\n+      Free (Tmp);\n+\n+      if Is_Self then\n+         Result := st_setspecific (ATCB_Key, System.Null_Address);\n+         pragma Assert (Result = 0);\n+      end if;\n+\n+   end Finalize_TCB;\n+\n+   ---------------\n+   -- Exit_Task --\n+   ---------------\n+\n+   procedure Exit_Task is\n+   begin\n+      Specific.Set (null);\n+   end Exit_Task;\n+\n+   ----------------\n+   -- Abort_Task --\n+   ----------------\n+\n+   procedure Abort_Task (T : Task_ID) is\n+      Result : Interfaces.C.int;\n+\n+   begin\n+      Result := pthread_kill (T.Common.LL.Thread,\n+        Signal (System.Interrupt_Management.Abort_Task_Interrupt));\n+      pragma Assert (Result = 0);\n+   end Abort_Task;\n+\n+   ----------------\n+   -- Check_Exit --\n+   ----------------\n+\n+   --  Dummy versions\n+\n+   function Check_Exit (Self_ID : ST.Task_ID) return Boolean is\n+      pragma Unreferenced (Self_ID);\n+   begin\n+      return True;\n+   end Check_Exit;\n+\n+   --------------------\n+   -- Check_No_Locks --\n+   --------------------\n+\n+   function Check_No_Locks (Self_ID : ST.Task_ID) return Boolean is\n+      pragma Unreferenced (Self_ID);\n+   begin\n+      return True;\n+   end Check_No_Locks;\n+\n+   ----------------------\n+   -- Environment_Task --\n+   ----------------------\n+\n+   function Environment_Task return Task_ID is\n+   begin\n+      return Environment_Task_ID;\n+   end Environment_Task;\n+\n+   --------------\n+   -- Lock_RTS --\n+   --------------\n+\n+   procedure Lock_RTS is\n+   begin\n+      Write_Lock (Single_RTS_Lock'Access, Global_Lock => True);\n+   end Lock_RTS;\n+\n+   ----------------\n+   -- Unlock_RTS --\n+   ----------------\n+\n+   procedure Unlock_RTS is\n+   begin\n+      Unlock (Single_RTS_Lock'Access, Global_Lock => True);\n+   end Unlock_RTS;\n+\n+   ------------------\n+   -- Suspend_Task --\n+   ------------------\n+\n+   function Suspend_Task\n+     (T           : ST.Task_ID;\n+      Thread_Self : Thread_Id)\n+      return        Boolean\n+   is\n+      pragma Unreferenced (T);\n+      pragma Unreferenced (Thread_Self);\n+\n+   begin\n+      return False;\n+   end Suspend_Task;\n+\n+   -----------------\n+   -- Resume_Task --\n+   -----------------\n+\n+   function Resume_Task\n+     (T           : ST.Task_ID;\n+      Thread_Self : Thread_Id)\n+      return        Boolean\n+   is\n+      pragma Unreferenced (T);\n+      pragma Unreferenced (Thread_Self);\n+\n+   begin\n+      return False;\n+   end Resume_Task;\n+\n+   ----------------\n+   -- Initialize --\n+   ----------------\n+\n+   procedure Initialize (Environment_Task : Task_ID) is\n+      act     : aliased struct_sigaction;\n+      old_act : aliased struct_sigaction;\n+      Tmp_Set : aliased sigset_t;\n+      Result  : Interfaces.C.int;\n+\n+      function State\n+        (Int  : System.Interrupt_Management.Interrupt_ID)\n+         return Character;\n+      pragma Import (C, State, \"__gnat_get_interrupt_state\");\n+      --  Get interrupt state.  Defined in a-init.c\n+      --  The input argument is the interrupt number,\n+      --  and the result is one of the following:\n+\n+      Default : constant Character := 's';\n+      --    'n'   this interrupt not set by any Interrupt_State pragma\n+      --    'u'   Interrupt_State pragma set state to User\n+      --    'r'   Interrupt_State pragma set state to Runtime\n+      --    's'   Interrupt_State pragma set state to System (use \"default\"\n+      --           system handler)\n+\n+   begin\n+      Environment_Task_ID := Environment_Task;\n+\n+      --  Initialize the lock used to synchronize chain of all ATCBs.\n+\n+      Initialize_Lock (Single_RTS_Lock'Access, RTS_Lock_Level);\n+\n+      Specific.Initialize (Environment_Task);\n+\n+      Enter_Task (Environment_Task);\n+\n+      --  Install the abort-signal handler\n+\n+      if State (System.Interrupt_Management.Abort_Task_Interrupt)\n+                                                     /= Default\n+      then\n+         act.sa_flags := 0;\n+         act.sa_handler := Abort_Handler'Address;\n+\n+         Result := sigemptyset (Tmp_Set'Access);\n+         pragma Assert (Result = 0);\n+         act.sa_mask := Tmp_Set;\n+\n+         Result :=\n+           sigaction\n+           (Signal (System.Interrupt_Management.Abort_Task_Interrupt),\n+            act'Unchecked_Access,\n+            old_act'Unchecked_Access);\n+\n+         pragma Assert (Result = 0);\n+      end if;\n+   end Initialize;\n+\n+begin\n+   declare\n+      Result : Interfaces.C.int;\n+\n+   begin\n+      --  Mask Environment task for all signals. The original mask of the\n+      --  Environment task will be recovered by Interrupt_Server task\n+      --  during the elaboration of s-interr.adb.\n+\n+      System.Interrupt_Management.Operations.Set_Interrupt_Mask\n+        (System.Interrupt_Management.Operations.All_Tasks_Mask'Access);\n+\n+      --  Prepare the set of signals that should unblocked in all tasks\n+\n+      Result := sigemptyset (Unblocked_Signal_Mask'Access);\n+      pragma Assert (Result = 0);\n+\n+      for J in Interrupt_Management.Interrupt_ID loop\n+         if System.Interrupt_Management.Keep_Unmasked (J) then\n+            Result := sigaddset (Unblocked_Signal_Mask'Access, Signal (J));\n+            pragma Assert (Result = 0);\n+         end if;\n+      end loop;\n+   end;\n+end System.Task_Primitives.Operations;"}, {"sha": "bf079fd34a30df61001492bdf18a7c58e78c35e3", "filename": "gcc/ada/56taspri.ads", "status": "renamed", "additions": 36, "deletions": 77, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F56taspri.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F56taspri.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F56taspri.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,8 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---            Copyright (C) 1991-2001, Florida State University             --\n+--             Copyright (C) 1991-1994, Florida State University            --\n+--             Copyright (C) 1995-2003, Ada Core Technologies               --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,32 +27,33 @@\n -- however invalidate  any other reasons why  the executable file  might be --\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University. It is --\n--- now maintained by Ada Core Technologies Inc. in cooperation with Florida --\n--- State University (http://www.gnat.com).                                  --\n+-- GNARL was developed by the GNARL team at Florida State University.       --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  RT_GNU/Linux version\n+--  This is a LynxOS version of this package, derived from\n+--  7staspri.ads\n \n pragma Polling (Off);\n --  Turn off polling, we do not want ATC polling to take place during\n --  tasking operations. It causes infinite loops and other problems.\n \n with System.OS_Interface;\n+--  used for pthread_mutex_t\n+--           pthread_cond_t\n+--           pthread_t\n \n package System.Task_Primitives is\n \n    type Lock is limited private;\n-   --  Used for implementation of protected objects.\n-\n-   type Lock_Ptr is limited private;\n+   --  Should be used for implementation of protected objects.\n \n    type RTS_Lock is limited private;\n-   --  Used inside the runtime system. The difference between Lock and the\n-   --  RTS_Lock is that the later one serves only as a semaphore so that do\n-   --  not check for ceiling violations.\n-   type RTS_Lock_Ptr is limited private;\n+   --  Should be used inside the runtime system.\n+   --  The difference between Lock and the RTS_Lock is that the later\n+   --  one serves only as a semaphore so that do not check for\n+   --  ceiling violations.\n \n    type Task_Body_Access is access procedure;\n    --  Pointer to the task body's entry point (or possibly a wrapper\n@@ -64,75 +66,32 @@ package System.Task_Primitives is\n \n private\n \n-   type RT_GNU_Linux_Lock is record\n-      Ceiling_Priority     : System.Any_Priority;\n-      Pre_Locking_Priority : System.Any_Priority;\n-      --  Used to store the task's active priority before it\n-      --  acquires the lock\n-\n-      Owner : System.Address;\n-      --  This is really a Task_ID, but we can't use that type\n-      --  here because this System.Tasking is \"with\"\n-      --  the current package -- a circularity.\n+   type Lock is record\n+      Mutex          : aliased System.OS_Interface.pthread_mutex_t;\n+      Ceiling        : System.Any_Priority;\n+      Saved_Priority : System.Any_Priority;\n    end record;\n \n-   type Lock is new RT_GNU_Linux_Lock;\n-   type RTS_Lock is new RT_GNU_Linux_Lock;\n-\n-   type RTS_Lock_Ptr is access all RTS_Lock;\n-   type Lock_Ptr is access all Lock;\n+   type RTS_Lock is new System.OS_Interface.pthread_mutex_t;\n \n    type Private_Data is record\n-      Stack : System.Address;\n-      --  A stack space needed for the task. the space is allocated\n-      --  when the task is being created and is deallocated when\n-      --  the TCB for the task is finalized\n-\n-      Uses_Fp : Integer;\n-      --  A flag to indicate whether the task is going to use floating-\n-      --  point unit. It's set to 1, indicating FP unit is always going\n-      --  to be used. The reason is that it is in this private record and\n-      --  necessary operation has to be provided for a user to call so as\n-      --  to change its value\n-\n-      Magic : Integer;\n-      --  A special value is going to be stored in it when a task is\n-      --  created. The value is RT_TASK_MAGIC (16#754d2774#) as declared\n-      --  in System.OS_Interface\n-\n-      State : System.OS_Interface.Rt_Task_States;\n-      --  Shows whether the task is RT_TASK_READY, RT_TASK_DELAYED or\n-      --  RT_TASK_DORMANT to support suspend, wait, wakeup.\n-\n-      Stack_Bottom : System.Address;\n-\n-      Active_Priority  : System.Any_Priority;\n-      --  Active priority of the task\n-\n-      Period : System.OS_Interface.RTIME;\n-      --  Intended originally to store the period of the task, but not used\n-      --  in the current implementation\n-\n-      Resume_Time : System.OS_Interface.RTIME;\n-      --  Store the time the task has to be awakened\n-\n-      Next : System.Address;\n-      --  This really is a Task_ID, used to link the Available_TCBs.\n-\n-      Succ : System.Address;\n-      pragma Volatile (Succ);\n-      Pred : System.Address;\n-      pragma Volatile (Pred);\n-      --  These really are Task_ID, used to implement a circular doubly\n-      --  linked list for task queue\n-\n-      L : aliased RTS_Lock;\n-\n-      Outer_Lock : RTS_Lock_Ptr := null;\n-      --  Used to track which Lock the task is holding is the outermost\n-      --  one in order to implement priority setting and inheritance\n+      Thread : aliased System.OS_Interface.pthread_t;\n+      pragma Atomic (Thread);\n+      --  Thread field may be updated by two different threads of control.\n+      --  (See, Enter_Task and Create_Task in s-taprop.adb).\n+      --  They put the same value (thr_self value). We do not want to\n+      --  use lock on those operations and the only thing we have to\n+      --  make sure is that they are updated in atomic fashion.\n+\n+      LWP : aliased System.Address;\n+      --  The purpose of this field is to provide a better tasking support on\n+      --  gdb. The order of the two first fields (Thread and LWP) is important.\n+      --  On targets where lwp is not relevant, this is equivalent to Thread.\n+\n+      CV : aliased System.OS_Interface.pthread_cond_t;\n+\n+      L  : aliased RTS_Lock;\n+      --  Protection for all components is lock L\n    end record;\n \n-   --  ????  May need to use pragma Atomic or Volatile on some\n-   --  components; may also need to specify aliased for some.\n end System.Task_Primitives;", "previous_filename": "gcc/ada/5qtaspri.ads"}, {"sha": "ece470e63664a4da0293730aa9d7f563376a6359", "filename": "gcc/ada/56tpopsp.adb", "status": "added", "additions": 110, "deletions": 0, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F56tpopsp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F56tpopsp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F56tpopsp.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -0,0 +1,110 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                GNU ADA RUN-TIME LIBRARY (GNARL) COMPONENTS               --\n+--                                                                          --\n+--                SYSTEM.TASK_PRIMITIVES.OPERATIONS.SPECIFIC                --\n+--                                                                          --\n+--                                  B o d y                                 --\n+--                                                                          --\n+--         Copyright (C) 1992-2003, Free Software Foundation, Inc.          --\n+--                                                                          --\n+-- GNARL is free software; you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion. GNARL is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNARL; see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNARL was developed by the GNARL team at Florida State University.       --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This is a LynxOS version of this package.\n+\n+separate (System.Task_Primitives.Operations)\n+package body Specific is\n+\n+   ----------------\n+   -- Initialize --\n+   ----------------\n+\n+   procedure Initialize (Environment_Task : Task_ID) is\n+      pragma Warnings (Off, Environment_Task);\n+      Result : Interfaces.C.int;\n+\n+   begin\n+      Result := st_keycreate (null, ATCB_Key'Access);\n+      pragma Assert (Result = 0);\n+   end Initialize;\n+\n+   -------------------\n+   -- Is_Valid_Task --\n+   -------------------\n+\n+   function Is_Valid_Task return Boolean is\n+      Result : Interfaces.C.int;\n+      Value : aliased System.Address;\n+   begin\n+      Result := st_getspecific (ATCB_Key, Value'Address);\n+      pragma Assert (Result = 0);\n+      return (Value /= System.Null_Address);\n+   end Is_Valid_Task;\n+\n+   ---------\n+   -- Set --\n+   ---------\n+\n+   procedure Set (Self_Id : Task_ID) is\n+      Result : Interfaces.C.int;\n+\n+   begin\n+      Result := st_setspecific (ATCB_Key, To_Address (Self_Id));\n+      pragma Assert (Result = 0);\n+   end Set;\n+\n+   ----------\n+   -- Self --\n+   ----------\n+\n+   --  To make Ada tasks and C threads interoperate better, we have added some\n+   --  functionality to Self. Suppose a C main program (with threads) calls an\n+   --  Ada procedure and the Ada procedure calls the tasking runtime system.\n+   --  Eventually, a call will be made to self. Since the call is not coming\n+   --  from an Ada task, there will be no corresponding ATCB.\n+\n+   --  What we do in Self is to catch references that do not come from\n+   --  recognized Ada tasks, and create an ATCB for the calling thread.\n+\n+   --  The new ATCB will be \"detached\" from the normal Ada task master\n+   --  hierarchy, much like the existing implicitly created signal-server\n+   --  tasks.\n+\n+   function Self return Task_ID is\n+      Result : Interfaces.C.int;\n+      Value : aliased System.Address;\n+\n+   begin\n+      Result := st_getspecific (ATCB_Key, Value'Address);\n+\n+      --  If the key value is Null, then it is a non-Ada task.\n+\n+      if Value /= System.Null_Address then\n+         return To_Task_Id (Value);\n+      else\n+         return Register_Foreign_Thread;\n+      end if;\n+   end Self;\n+\n+end Specific;"}, {"sha": "caeae17a168d6ecce76bca5a0efe6527c7ee4e92", "filename": "gcc/ada/57system.ads", "status": "added", "additions": 150, "deletions": 0, "changes": 150, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F57system.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F57system.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F57system.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -0,0 +1,150 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                        GNAT RUN-TIME COMPONENTS                          --\n+--                                                                          --\n+--                               S Y S T E M                                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                           (LynxOS PPC Version)                           --\n+--                                                                          --\n+--          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+package System is\n+pragma Pure (System);\n+--  Note that we take advantage of the implementation permission to\n+--  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+\n+   type Name is (SYSTEM_NAME_GNAT);\n+   System_Name : constant Name := SYSTEM_NAME_GNAT;\n+\n+   --  System-Dependent Named Numbers\n+\n+   Min_Int               : constant := Long_Long_Integer'First;\n+   Max_Int               : constant := Long_Long_Integer'Last;\n+\n+   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n+   Max_Nonbinary_Modulus : constant := Integer'Last;\n+\n+   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n+   Max_Digits            : constant := Long_Long_Float'Digits;\n+\n+   Max_Mantissa          : constant := 63;\n+   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n+\n+   Tick                  : constant := 0.01;\n+\n+   --  Storage-related Declarations\n+\n+   type Address is private;\n+   Null_Address : constant Address;\n+\n+   Storage_Unit : constant := 8;\n+   Word_Size    : constant := 32;\n+   Memory_Size  : constant := 2 ** 32;\n+\n+   --  Address comparison\n+\n+   function \"<\"  (Left, Right : Address) return Boolean;\n+   function \"<=\" (Left, Right : Address) return Boolean;\n+   function \">\"  (Left, Right : Address) return Boolean;\n+   function \">=\" (Left, Right : Address) return Boolean;\n+   function \"=\"  (Left, Right : Address) return Boolean;\n+\n+   pragma Import (Intrinsic, \"<\");\n+   pragma Import (Intrinsic, \"<=\");\n+   pragma Import (Intrinsic, \">\");\n+   pragma Import (Intrinsic, \">=\");\n+   pragma Import (Intrinsic, \"=\");\n+\n+   --  Other System-Dependent Declarations\n+\n+   type Bit_Order is (High_Order_First, Low_Order_First);\n+   Default_Bit_Order : constant Bit_Order := High_Order_First;\n+\n+   --  Priority-related Declarations (RM D.1)\n+\n+   Max_Priority           : constant Positive := 254;\n+   Max_Interrupt_Priority : constant Positive := 255;\n+\n+   subtype Any_Priority       is Integer      range   0 .. 255;\n+   subtype Priority           is Any_Priority range   0 .. 254;\n+   subtype Interrupt_Priority is Any_Priority range 255 .. 255;\n+\n+   Default_Priority : constant Priority := 15;\n+\n+private\n+\n+   type Address is mod Memory_Size;\n+   Null_Address : constant Address := 0;\n+\n+   --------------------------------------\n+   -- System Implementation Parameters --\n+   --------------------------------------\n+\n+   --  These parameters provide information about the target that is used\n+   --  by the compiler. They are in the private part of System, where they\n+   --  can be accessed using the special circuitry in the Targparm unit\n+   --  whose source should be consulted for more detailed descriptions\n+   --  of the individual switch values.\n+\n+   AAMP                      : constant Boolean := False;\n+   Backend_Divide_Checks     : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := False;\n+   Command_Line_Args         : constant Boolean := True;\n+   Configurable_Run_Time     : constant Boolean := False;\n+   Denorm                    : constant Boolean := True;\n+   Duration_32_Bits          : constant Boolean := False;\n+   Exit_Status_Supported     : constant Boolean := True;\n+   Fractional_Fixed_Ops      : constant Boolean := False;\n+   Frontend_Layout           : constant Boolean := False;\n+   Functions_Return_By_DSP   : constant Boolean := False;\n+   Machine_Overflows         : constant Boolean := False;\n+   Machine_Rounds            : constant Boolean := True;\n+   OpenVMS                   : constant Boolean := False;\n+   Signed_Zeros              : constant Boolean := True;\n+   Stack_Check_Default       : constant Boolean := False;\n+   Stack_Check_Probes        : constant Boolean := False;\n+   Support_64_Bit_Divides    : constant Boolean := True;\n+   Support_Aggregates        : constant Boolean := True;\n+   Support_Composite_Assign  : constant Boolean := True;\n+   Support_Composite_Compare : constant Boolean := True;\n+   Support_Long_Shifts       : constant Boolean := True;\n+   Suppress_Standard_Library : constant Boolean := False;\n+   Use_Ada_Main_Program_Name : constant Boolean := False;\n+   ZCX_By_Default            : constant Boolean := False;\n+   GCC_ZCX_Support           : constant Boolean := False;\n+   Front_End_ZCX_Support     : constant Boolean := False;\n+\n+   --  Obsolete entries, to be removed eventually (bootstrap issues!)\n+\n+   High_Integrity_Mode       : constant Boolean := False;\n+   Long_Shifts_Inlined       : constant Boolean := True;\n+\n+end System;"}, {"sha": "130b5f0d451fca5e64cf8bf28fc972b116e4bcfe", "filename": "gcc/ada/58system.ads", "status": "added", "additions": 150, "deletions": 0, "changes": 150, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F58system.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F58system.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F58system.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -0,0 +1,150 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                        GNAT RUN-TIME COMPONENTS                          --\n+--                                                                          --\n+--                               S Y S T E M                                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                           (LynxOS x86 Version)                           --\n+--                                                                          --\n+--          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+package System is\n+pragma Pure (System);\n+--  Note that we take advantage of the implementation permission to\n+--  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+\n+   type Name is (SYSTEM_NAME_GNAT);\n+   System_Name : constant Name := SYSTEM_NAME_GNAT;\n+\n+   --  System-Dependent Named Numbers\n+\n+   Min_Int               : constant := Long_Long_Integer'First;\n+   Max_Int               : constant := Long_Long_Integer'Last;\n+\n+   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n+   Max_Nonbinary_Modulus : constant := Integer'Last;\n+\n+   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n+   Max_Digits            : constant := Long_Long_Float'Digits;\n+\n+   Max_Mantissa          : constant := 63;\n+   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n+\n+   Tick                  : constant := 0.01;\n+\n+   --  Storage-related Declarations\n+\n+   type Address is private;\n+   Null_Address : constant Address;\n+\n+   Storage_Unit : constant := 8;\n+   Word_Size    : constant := 32;\n+   Memory_Size  : constant := 2 ** 32;\n+\n+   --  Address comparison\n+\n+   function \"<\"  (Left, Right : Address) return Boolean;\n+   function \"<=\" (Left, Right : Address) return Boolean;\n+   function \">\"  (Left, Right : Address) return Boolean;\n+   function \">=\" (Left, Right : Address) return Boolean;\n+   function \"=\"  (Left, Right : Address) return Boolean;\n+\n+   pragma Import (Intrinsic, \"<\");\n+   pragma Import (Intrinsic, \"<=\");\n+   pragma Import (Intrinsic, \">\");\n+   pragma Import (Intrinsic, \">=\");\n+   pragma Import (Intrinsic, \"=\");\n+\n+   --  Other System-Dependent Declarations\n+\n+   type Bit_Order is (High_Order_First, Low_Order_First);\n+   Default_Bit_Order : constant Bit_Order := Low_Order_First;\n+\n+   --  Priority-related Declarations (RM D.1)\n+\n+   Max_Priority           : constant Positive := 254;\n+   Max_Interrupt_Priority : constant Positive := 255;\n+\n+   subtype Any_Priority       is Integer      range   0 .. 255;\n+   subtype Priority           is Any_Priority range   0 .. 254;\n+   subtype Interrupt_Priority is Any_Priority range 255 .. 255;\n+\n+   Default_Priority : constant Priority := 15;\n+\n+private\n+\n+   type Address is mod Memory_Size;\n+   Null_Address : constant Address := 0;\n+\n+   --------------------------------------\n+   -- System Implementation Parameters --\n+   --------------------------------------\n+\n+   --  These parameters provide information about the target that is used\n+   --  by the compiler. They are in the private part of System, where they\n+   --  can be accessed using the special circuitry in the Targparm unit\n+   --  whose source should be consulted for more detailed descriptions\n+   --  of the individual switch values.\n+\n+   AAMP                      : constant Boolean := False;\n+   Backend_Divide_Checks     : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := False;\n+   Command_Line_Args         : constant Boolean := True;\n+   Configurable_Run_Time     : constant Boolean := False;\n+   Denorm                    : constant Boolean := True;\n+   Duration_32_Bits          : constant Boolean := False;\n+   Exit_Status_Supported     : constant Boolean := True;\n+   Fractional_Fixed_Ops      : constant Boolean := False;\n+   Frontend_Layout           : constant Boolean := False;\n+   Functions_Return_By_DSP   : constant Boolean := False;\n+   Machine_Overflows         : constant Boolean := False;\n+   Machine_Rounds            : constant Boolean := True;\n+   OpenVMS                   : constant Boolean := False;\n+   Signed_Zeros              : constant Boolean := True;\n+   Stack_Check_Default       : constant Boolean := False;\n+   Stack_Check_Probes        : constant Boolean := False;\n+   Support_64_Bit_Divides    : constant Boolean := True;\n+   Support_Aggregates        : constant Boolean := True;\n+   Support_Composite_Assign  : constant Boolean := True;\n+   Support_Composite_Compare : constant Boolean := True;\n+   Support_Long_Shifts       : constant Boolean := True;\n+   Suppress_Standard_Library : constant Boolean := False;\n+   Use_Ada_Main_Program_Name : constant Boolean := False;\n+   ZCX_By_Default            : constant Boolean := False;\n+   GCC_ZCX_Support           : constant Boolean := False;\n+   Front_End_ZCX_Support     : constant Boolean := False;\n+\n+   --  Obsolete entries, to be removed eventually (bootstrap issues!)\n+\n+   High_Integrity_Mode       : constant Boolean := False;\n+   Long_Shifts_Inlined       : constant Boolean := True;\n+\n+end System;"}, {"sha": "f155af878b057691a20d0484188e5b4a1ccdbb73", "filename": "gcc/ada/59system.ads", "status": "added", "additions": 164, "deletions": 0, "changes": 164, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F59system.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F59system.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F59system.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -0,0 +1,164 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                        GNAT RUN-TIME COMPONENTS                          --\n+--                                                                          --\n+--                               S Y S T E M                                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                            (PPC ELF Version)                             --\n+--                                                                          --\n+--          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+pragma Restrictions (No_Exception_Handlers);\n+pragma Restrictions (No_Implicit_Dynamic_Code);\n+pragma Restrictions (No_Finalization);\n+pragma Discard_Names;\n+--  Above pragmas need commenting ???\n+\n+package System is\n+pragma Pure (System);\n+--  Note that we take advantage of the implementation permission to\n+--  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+\n+   type Name is (SYSTEM_NAME_GNAT);\n+   System_Name : constant Name := SYSTEM_NAME_GNAT;\n+\n+   --  System-Dependent Named Numbers\n+\n+   Min_Int               : constant := Long_Long_Integer'First;\n+   Max_Int               : constant := Long_Long_Integer'Last;\n+\n+   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n+   Max_Nonbinary_Modulus : constant := Integer'Last;\n+\n+   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n+   Max_Digits            : constant := Long_Long_Float'Digits;\n+\n+   Max_Mantissa          : constant := 63;\n+   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n+\n+   Tick                  : constant := 1.0 / 60.0;\n+\n+   --  Storage-related Declarations\n+\n+   type Address is private;\n+   Null_Address : constant Address;\n+\n+   Storage_Unit : constant := 8;\n+   Word_Size    : constant := 32;\n+   Memory_Size  : constant := 2 ** 32;\n+\n+   --  Address comparison\n+\n+   function \"<\"  (Left, Right : Address) return Boolean;\n+   function \"<=\" (Left, Right : Address) return Boolean;\n+   function \">\"  (Left, Right : Address) return Boolean;\n+   function \">=\" (Left, Right : Address) return Boolean;\n+   function \"=\"  (Left, Right : Address) return Boolean;\n+\n+   pragma Import (Intrinsic, \"<\");\n+   pragma Import (Intrinsic, \"<=\");\n+   pragma Import (Intrinsic, \">\");\n+   pragma Import (Intrinsic, \">=\");\n+   pragma Import (Intrinsic, \"=\");\n+\n+   --  Other System-Dependent Declarations\n+\n+   type Bit_Order is (High_Order_First, Low_Order_First);\n+   Default_Bit_Order : constant Bit_Order := High_Order_First;\n+\n+   --  Priority-related Declarations (RM D.1)\n+\n+   --  256        is reserved for the VxWorks kernel\n+   --  248 - 255  correspond to hardware interrupt levels 0 .. 7\n+   --  247        is a catchall default \"interrupt\" priority for signals,\n+   --             allowing higher priority than normal tasks, but lower than\n+   --             hardware priority levels.  Protected Object ceilings can\n+   --             override these values.\n+   --  246        is used by the Interrupt_Manager task\n+\n+   Max_Priority           : constant Positive := 245;\n+   Max_Interrupt_Priority : constant Positive := 255;\n+\n+   subtype Any_Priority       is Integer      range   0 .. 255;\n+   subtype Priority           is Any_Priority range   0 .. 245;\n+   subtype Interrupt_Priority is Any_Priority range 246 .. 255;\n+\n+   Default_Priority : constant Priority := 122;\n+\n+private\n+\n+   type Address is mod Memory_Size;\n+   Null_Address : constant Address := 0;\n+\n+   --------------------------------------\n+   -- System Implementation Parameters --\n+   --------------------------------------\n+\n+   --  These parameters provide information about the target that is used\n+   --  by the compiler. They are in the private part of System, where they\n+   --  can be accessed using the special circuitry in the Targparm unit\n+   --  whose source should be consulted for more detailed descriptions\n+   --  of the individual switch values.\n+\n+   AAMP                      : constant Boolean := False;\n+   Backend_Divide_Checks     : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := False;\n+   Command_Line_Args         : constant Boolean := False;\n+   Configurable_Run_Time     : constant Boolean := True;\n+   Denorm                    : constant Boolean := True;\n+   Duration_32_Bits          : constant Boolean := True;\n+   Exit_Status_Supported     : constant Boolean := False;\n+   Fractional_Fixed_Ops      : constant Boolean := False;\n+   Frontend_Layout           : constant Boolean := False;\n+   Functions_Return_By_DSP   : constant Boolean := False;\n+   Machine_Overflows         : constant Boolean := False;\n+   Machine_Rounds            : constant Boolean := True;\n+   OpenVMS                   : constant Boolean := False;\n+   Signed_Zeros              : constant Boolean := True;\n+   Stack_Check_Default       : constant Boolean := False;\n+   Stack_Check_Probes        : constant Boolean := False;\n+   Support_64_Bit_Divides    : constant Boolean := False;\n+   Support_Aggregates        : constant Boolean := True;\n+   Support_Composite_Assign  : constant Boolean := True;\n+   Support_Composite_Compare : constant Boolean := True;\n+   Support_Long_Shifts       : constant Boolean := True;\n+   Suppress_Standard_Library : constant Boolean := True;\n+   Use_Ada_Main_Program_Name : constant Boolean := False;\n+   ZCX_By_Default            : constant Boolean := False;\n+   GCC_ZCX_Support           : constant Boolean := False;\n+   Front_End_ZCX_Support     : constant Boolean := False;\n+\n+   --  Obsolete entries, to be removed eventually (bootstrap issues!)\n+\n+   High_Integrity_Mode       : constant Boolean := True;\n+   Long_Shifts_Inlined       : constant Boolean := False;\n+\n+end System;"}, {"sha": "60e998e024de32f28874dbe0eaa0dcea2ebbe404", "filename": "gcc/ada/5aml-tgt.adb", "status": "added", "additions": 385, "deletions": 0, "changes": 385, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5aml-tgt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5aml-tgt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5aml-tgt.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -0,0 +1,385 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--                             M L I B . T G T                              --\n+--                             (True64 Version)                             --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--              Copyright (C) 2002-2003 Free Software Foundation, Inc.      --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This package provides a set of target dependent routines to build\n+--  static, dynamic and shared libraries.\n+\n+--  This is the True64 version of the body.\n+\n+with MLib.Fil;\n+with MLib.Utl;\n+with Namet;  use Namet;\n+with Opt;\n+with Output; use Output;\n+with Prj.Com;\n+with System;\n+\n+package body MLib.Tgt is\n+\n+   use GNAT;\n+   use MLib;\n+\n+   Expect_Unresolved : aliased String := \"-Wl,-expect_unresolved,*\";\n+\n+   No_Arguments        : aliased Argument_List         := (1 .. 0 => null);\n+   Empty_Argument_List : constant Argument_List_Access := No_Arguments'Access;\n+\n+   Wl_Init_String : aliased String         := \"-Wl,-init\";\n+   Wl_Init        : constant String_Access := Wl_Init_String'Access;\n+   Wl_Fini_String : aliased String         := \"-Wl,-fini\";\n+   Wl_Fini        : constant String_Access := Wl_Fini_String'Access;\n+\n+   Init_Fini_List :  constant Argument_List_Access :=\n+                       new Argument_List'(1 => Wl_Init,\n+                                          2 => null,\n+                                          3 => Wl_Fini,\n+                                          4 => null);\n+   --  Used to put switches for automatic elaboration/finalization\n+\n+   ---------------------\n+   -- Archive_Builder --\n+   ---------------------\n+\n+   function Archive_Builder return String is\n+   begin\n+      return \"ar\";\n+   end Archive_Builder;\n+\n+   -----------------------------\n+   -- Archive_Builder_Options --\n+   -----------------------------\n+\n+   function Archive_Builder_Options return String_List_Access is\n+   begin\n+      return new String_List'(1 => new String'(\"cr\"));\n+   end Archive_Builder_Options;\n+\n+   -----------------\n+   -- Archive_Ext --\n+   -----------------\n+\n+   function Archive_Ext return  String is\n+   begin\n+      return \"a\";\n+   end Archive_Ext;\n+\n+   ---------------------\n+   -- Archive_Indexer --\n+   ---------------------\n+\n+   function Archive_Indexer return String is\n+   begin\n+      return \"ranlib\";\n+   end Archive_Indexer;\n+\n+   ---------------------------\n+   -- Build_Dynamic_Library --\n+   ---------------------------\n+\n+   procedure Build_Dynamic_Library\n+     (Ofiles       : Argument_List;\n+      Foreign      : Argument_List;\n+      Afiles       : Argument_List;\n+      Options      : Argument_List;\n+      Interfaces   : Argument_List;\n+      Lib_Filename : String;\n+      Lib_Dir      : String;\n+      Driver_Name  : Name_Id := No_Name;\n+      Lib_Address  : String  := \"\";\n+      Lib_Version  : String  := \"\";\n+      Relocatable  : Boolean := False;\n+      Auto_Init    : Boolean := False)\n+   is\n+      pragma Unreferenced (Foreign);\n+      pragma Unreferenced (Afiles);\n+      pragma Unreferenced (Interfaces);\n+      pragma Unreferenced (Lib_Address);\n+      pragma Unreferenced (Relocatable);\n+\n+      Lib_File : constant String :=\n+        Lib_Dir & Directory_Separator & \"lib\" &\n+        Fil.Ext_To (Lib_Filename, DLL_Ext);\n+\n+      Version_Arg          : String_Access;\n+      Symbolic_Link_Needed : Boolean := False;\n+\n+      Init_Fini : Argument_List_Access := Empty_Argument_List;\n+\n+   begin\n+      if Opt.Verbose_Mode then\n+         Write_Str (\"building relocatable shared library \");\n+         Write_Line (Lib_File);\n+      end if;\n+\n+      --  If specified, add automatic elaboration/finalization\n+\n+      if Auto_Init then\n+         Init_Fini := Init_Fini_List;\n+         Init_Fini (2) := new String'(\"-Wl,\" & Lib_Filename & \"init\");\n+         Init_Fini (4) := new String'(\"-Wl,\" & Lib_Filename & \"final\");\n+      end if;\n+\n+      if Lib_Version = \"\" then\n+         Utl.Gcc\n+           (Output_File => Lib_File,\n+            Objects     => Ofiles,\n+            Options     =>\n+              Options &\n+              Expect_Unresolved'Access &\n+              Init_Fini.all,\n+            Driver_Name => Driver_Name);\n+\n+      else\n+         Version_Arg := new String'(\"-Wl,-soname,\" & Lib_Version);\n+\n+         if Is_Absolute_Path (Lib_Version) then\n+            Utl.Gcc\n+              (Output_File => Lib_Version,\n+               Objects     => Ofiles,\n+               Options     =>\n+                 Options &\n+                 Version_Arg &\n+                 Expect_Unresolved'Access &\n+                 Init_Fini.all,\n+               Driver_Name => Driver_Name);\n+            Symbolic_Link_Needed := Lib_Version /= Lib_File;\n+\n+         else\n+            Utl.Gcc\n+              (Output_File => Lib_Dir & Directory_Separator & Lib_Version,\n+               Objects     => Ofiles,\n+               Options     =>\n+                 Options &\n+                 Version_Arg &\n+                 Expect_Unresolved'Access &\n+                 Init_Fini.all,\n+               Driver_Name => Driver_Name);\n+            Symbolic_Link_Needed :=\n+              Lib_Dir & Directory_Separator & Lib_Version /= Lib_File;\n+         end if;\n+\n+         if Symbolic_Link_Needed then\n+            declare\n+               Success : Boolean;\n+               Oldpath : String (1 .. Lib_Version'Length + 1);\n+               Newpath : String (1 .. Lib_File'Length + 1);\n+               Result  : Integer;\n+\n+               function Symlink\n+                 (Oldpath : System.Address;\n+                  Newpath : System.Address)\n+                  return    Integer;\n+               pragma Import (C, Symlink, \"__gnat_symlink\");\n+\n+            begin\n+               Oldpath (1 .. Lib_Version'Length) := Lib_Version;\n+               Oldpath (Oldpath'Last)            := ASCII.NUL;\n+               Newpath (1 .. Lib_File'Length)    := Lib_File;\n+               Newpath (Newpath'Last)            := ASCII.NUL;\n+\n+               Delete_File (Lib_File, Success);\n+\n+               Result := Symlink (Oldpath'Address, Newpath'Address);\n+            end;\n+         end if;\n+      end if;\n+   end Build_Dynamic_Library;\n+\n+   -------------------------\n+   -- Default_DLL_Address --\n+   -------------------------\n+\n+   function Default_DLL_Address return String is\n+   begin\n+      return \"\";\n+   end Default_DLL_Address;\n+\n+   -------------\n+   -- DLL_Ext --\n+   -------------\n+\n+   function DLL_Ext return String is\n+   begin\n+      return \"so\";\n+   end DLL_Ext;\n+\n+   --------------------\n+   -- Dynamic_Option --\n+   --------------------\n+\n+   function Dynamic_Option return String is\n+   begin\n+      return \"-shared\";\n+   end Dynamic_Option;\n+\n+   -------------------\n+   -- Is_Object_Ext --\n+   -------------------\n+\n+   function Is_Object_Ext (Ext : String) return Boolean is\n+   begin\n+      return Ext = \".o\";\n+   end Is_Object_Ext;\n+\n+   --------------\n+   -- Is_C_Ext --\n+   --------------\n+\n+   function Is_C_Ext (Ext : String) return Boolean is\n+   begin\n+      return Ext = \".c\";\n+   end Is_C_Ext;\n+\n+   --------------------\n+   -- Is_Archive_Ext --\n+   --------------------\n+\n+   function Is_Archive_Ext (Ext : String) return Boolean is\n+   begin\n+      return Ext = \".a\" or else Ext = \".so\";\n+   end Is_Archive_Ext;\n+\n+   -------------\n+   -- Libgnat --\n+   -------------\n+\n+   function Libgnat return String is\n+   begin\n+      return \"libgnat.a\";\n+   end Libgnat;\n+\n+   ------------------------\n+   -- Library_Exists_For --\n+   ------------------------\n+\n+   function Library_Exists_For (Project : Project_Id) return Boolean is\n+   begin\n+      if not Projects.Table (Project).Library then\n+         Prj.Com.Fail (\"INTERNAL ERROR: Library_Exists_For called \" &\n+                       \"for non library project\");\n+         return False;\n+\n+      else\n+         declare\n+            Lib_Dir : constant String :=\n+              Get_Name_String (Projects.Table (Project).Library_Dir);\n+            Lib_Name : constant String :=\n+              Get_Name_String (Projects.Table (Project).Library_Name);\n+\n+         begin\n+            if Projects.Table (Project).Library_Kind = Static then\n+               return Is_Regular_File\n+                 (Lib_Dir & Directory_Separator & \"lib\" &\n+                  Fil.Ext_To (Lib_Name, Archive_Ext));\n+\n+            else\n+               return Is_Regular_File\n+                 (Lib_Dir & Directory_Separator & \"lib\" &\n+                  Fil.Ext_To (Lib_Name, DLL_Ext));\n+            end if;\n+         end;\n+      end if;\n+   end Library_Exists_For;\n+\n+   ---------------------------\n+   -- Library_File_Name_For --\n+   ---------------------------\n+\n+   function Library_File_Name_For (Project : Project_Id) return Name_Id is\n+   begin\n+      if not Projects.Table (Project).Library then\n+         Prj.Com.Fail (\"INTERNAL ERROR: Library_File_Name_For called \" &\n+                       \"for non library project\");\n+         return No_Name;\n+\n+      else\n+         declare\n+            Lib_Name : constant String :=\n+              Get_Name_String (Projects.Table (Project).Library_Name);\n+\n+         begin\n+            Name_Len := 3;\n+            Name_Buffer (1 .. Name_Len) := \"lib\";\n+\n+            if Projects.Table (Project).Library_Kind = Static then\n+               Add_Str_To_Name_Buffer (Fil.Ext_To (Lib_Name, Archive_Ext));\n+\n+            else\n+               Add_Str_To_Name_Buffer (Fil.Ext_To (Lib_Name, DLL_Ext));\n+            end if;\n+\n+            return Name_Find;\n+         end;\n+      end if;\n+   end Library_File_Name_For;\n+\n+   --------------------------------\n+   -- Linker_Library_Path_Option --\n+   --------------------------------\n+\n+   function Linker_Library_Path_Option return String_Access is\n+   begin\n+      return new String'(\"-Wl,-rpath,\");\n+   end Linker_Library_Path_Option;\n+\n+   ----------------\n+   -- Object_Ext --\n+   ----------------\n+\n+   function Object_Ext return String is\n+   begin\n+      return \"o\";\n+   end Object_Ext;\n+\n+   ----------------\n+   -- PIC_Option --\n+   ----------------\n+\n+   function PIC_Option return String is\n+   begin\n+      return \"\";\n+   end PIC_Option;\n+\n+   -----------------------------------------------\n+   -- Standalone_Library_Auto_Init_Is_Supported --\n+   -----------------------------------------------\n+\n+   function Standalone_Library_Auto_Init_Is_Supported return Boolean is\n+   begin\n+      return True;\n+   end Standalone_Library_Auto_Init_Is_Supported;\n+\n+   ---------------------------\n+   -- Support_For_Libraries --\n+   ---------------------------\n+\n+   function Support_For_Libraries return Library_Support is\n+   begin\n+      return Full;\n+   end Support_For_Libraries;\n+\n+end MLib.Tgt;"}, {"sha": "e0b683e52cdd180c05359e5504c9afe7de8e3932", "filename": "gcc/ada/5aosinte.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5aosinte.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5aosinte.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5aosinte.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -27,7 +27,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "f84484ccb634316b5da54d38e141f1485736398b", "filename": "gcc/ada/5aosinte.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5aosinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5aosinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5aosinte.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -27,7 +27,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "3e445d90b270c0cec079cdf505c6f8b2bcb2a656", "filename": "gcc/ada/5asystem.ads", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5asystem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5asystem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5asystem.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -118,24 +118,35 @@ private\n    Backend_Divide_Checks     : constant Boolean := False;\n    Backend_Overflow_Checks   : constant Boolean := False;\n    Command_Line_Args         : constant Boolean := True;\n+   Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := False;\n+   Duration_32_Bits          : constant Boolean := False;\n    Exit_Status_Supported     : constant Boolean := True;\n    Fractional_Fixed_Ops      : constant Boolean := False;\n    Frontend_Layout           : constant Boolean := False;\n    Functions_Return_By_DSP   : constant Boolean := False;\n-   Long_Shifts_Inlined       : constant Boolean := True;\n-   High_Integrity_Mode       : constant Boolean := False;\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := True;\n    Stack_Check_Probes        : constant Boolean := True;\n+   Support_64_Bit_Divides    : constant Boolean := True;\n+   Support_Aggregates        : constant Boolean := True;\n+   Support_Composite_Assign  : constant Boolean := True;\n+   Support_Composite_Compare : constant Boolean := True;\n+   Support_Long_Shifts       : constant Boolean := True;\n+   Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := False;\n    GCC_ZCX_Support           : constant Boolean := False;\n    Front_End_ZCX_Support     : constant Boolean := False;\n \n+   --  Obsolete entries, to be removed eventually (bootstrap issues!)\n+\n+   High_Integrity_Mode       : constant Boolean := False;\n+   Long_Shifts_Inlined       : constant Boolean := True;\n+\n    --  Note: Denorm is False because denormals are only handled properly\n    --  if the -mieee switch is set, and we do not require this usage.\n "}, {"sha": "259790b46f1b932d14728807461ea4a7214cc19e", "filename": "gcc/ada/5ataprop.adb", "status": "modified", "additions": 184, "deletions": 70, "changes": 254, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5ataprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5ataprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5ataprop.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2001, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2003, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -108,6 +108,9 @@ package body System.Task_Primitives.Operations is\n    --  a time; it is used to execute in mutual exclusion from all other tasks.\n    --  Used mainly in Single_Lock mode, but also to protect All_Tasks_List\n \n+   ATCB_Key : aliased pthread_key_t;\n+   --  Key used to find the Ada Task_ID associated with a thread\n+\n    Environment_Task_ID : Task_ID;\n    --  A variable to hold Task_ID for the environment task.\n \n@@ -128,15 +131,8 @@ package body System.Task_Primitives.Operations is\n \n    Curpid : pid_t;\n \n-   -----------------------\n-   -- Local Subprograms --\n-   -----------------------\n-\n-   procedure Abort_Handler (Sig : Signal);\n-\n-   function To_Task_ID is new Unchecked_Conversion (System.Address, Task_ID);\n-\n-   function To_Address is new Unchecked_Conversion (Task_ID, System.Address);\n+   Foreign_Task_Elaborated : aliased Boolean := True;\n+   --  Used to identified fake tasks (i.e., non-Ada Threads).\n \n    --------------------\n    -- Local Packages --\n@@ -148,6 +144,10 @@ package body System.Task_Primitives.Operations is\n       pragma Inline (Initialize);\n       --  Initialize various data needed by this package.\n \n+      function Is_Valid_Task return Boolean;\n+      pragma Inline (Is_Valid_Task);\n+      --  Does executing thread have a TCB?\n+\n       procedure Set (Self_Id : Task_ID);\n       pragma Inline (Set);\n       --  Set the self id for the current task.\n@@ -161,16 +161,44 @@ package body System.Task_Primitives.Operations is\n    package body Specific is separate;\n    --  The body of this package is target specific.\n \n+   ---------------------------------\n+   -- Support for foreign threads --\n+   ---------------------------------\n+\n+   function Register_Foreign_Thread (Thread : Thread_Id) return Task_ID;\n+   --  Allocate and Initialize a new ATCB for the current Thread.\n+\n+   function Register_Foreign_Thread\n+     (Thread : Thread_Id) return Task_ID is separate;\n+\n+   -----------------------\n+   -- Local Subprograms --\n+   -----------------------\n+\n+   procedure Abort_Handler (Sig : Signal);\n+   --  Signal handler used to implement asynchronous abortion.\n+\n+   function To_Address is new Unchecked_Conversion (Task_ID, System.Address);\n+\n    -------------------\n    -- Abort_Handler --\n    -------------------\n \n    procedure Abort_Handler (Sig : Signal) is\n+      pragma Unreferenced (Sig);\n+\n       T       : constant Task_ID := Self;\n       Result  : Interfaces.C.int;\n       Old_Set : aliased sigset_t;\n \n    begin\n+      --  It is not safe to raise an exception when using ZCX and the GCC\n+      --  exception handling mechanism.\n+\n+      if ZCX_By_Default and then GCC_ZCX_Support then\n+         return;\n+      end if;\n+\n       if T.Deferral_Level = 0\n         and then T.Pending_ATC_Level < T.ATC_Nesting_Level and then\n         not T.Aborting\n@@ -195,6 +223,9 @@ package body System.Task_Primitives.Operations is\n    --  bottom of a thread stack, so nothing is needed.\n \n    procedure Stack_Guard (T : ST.Task_ID; On : Boolean) is\n+      pragma Unreferenced (T);\n+      pragma Unreferenced (On);\n+\n    begin\n       null;\n    end Stack_Guard;\n@@ -257,6 +288,8 @@ package body System.Task_Primitives.Operations is\n    end Initialize_Lock;\n \n    procedure Initialize_Lock (L : access RTS_Lock; Level : Lock_Level) is\n+      pragma Unreferenced (Level);\n+\n       Attributes : aliased pthread_mutexattr_t;\n       Result     : Interfaces.C.int;\n \n@@ -398,14 +431,17 @@ package body System.Task_Primitives.Operations is\n      (Self_ID : Task_ID;\n       Reason  : System.Tasking.Task_States)\n    is\n+      pragma Unreferenced (Reason);\n+\n       Result : Interfaces.C.int;\n+\n    begin\n       if Single_Lock then\n          Result := pthread_cond_wait\n-           (Self_ID.Common.LL.CV'Access, Single_RTS_Lock'Access);\n+                     (Self_ID.Common.LL.CV'Access, Single_RTS_Lock'Access);\n       else\n          Result := pthread_cond_wait\n-           (Self_ID.Common.LL.CV'Access, Self_ID.Common.LL.L'Access);\n+                     (Self_ID.Common.LL.CV'Access, Self_ID.Common.LL.L'Access);\n       end if;\n \n       --  EINTR is not considered a failure.\n@@ -429,6 +465,8 @@ package body System.Task_Primitives.Operations is\n       Timedout : out Boolean;\n       Yielded  : out Boolean)\n    is\n+      pragma Unreferenced (Reason);\n+\n       Check_Time : constant Duration := Monotonic_Clock;\n       Abs_Time   : Duration;\n       Request    : aliased timespec;\n@@ -453,19 +491,23 @@ package body System.Task_Primitives.Operations is\n \n             if Single_Lock then\n                Result := pthread_cond_timedwait\n-                 (Self_ID.Common.LL.CV'Access, Single_RTS_Lock'Access,\n-                  Request'Access);\n+                           (Self_ID.Common.LL.CV'Access,\n+                            Single_RTS_Lock'Access,\n+                            Request'Access);\n \n             else\n                Result := pthread_cond_timedwait\n-                 (Self_ID.Common.LL.CV'Access, Self_ID.Common.LL.L'Access,\n-                  Request'Access);\n+                           (Self_ID.Common.LL.CV'Access,\n+                            Self_ID.Common.LL.L'Access,\n+                            Request'Access);\n             end if;\n \n             exit when Abs_Time <= Monotonic_Clock;\n \n             if Result = 0 or Result = EINTR then\n-               --  somebody may have called Wakeup for us\n+\n+               --  Somebody may have called Wakeup for us\n+\n                Timedout := False;\n                exit;\n             end if;\n@@ -526,8 +568,10 @@ package body System.Task_Primitives.Operations is\n             exit when Self_ID.Pending_ATC_Level < Self_ID.ATC_Nesting_Level;\n \n             if Single_Lock then\n-               Result := pthread_cond_timedwait (Self_ID.Common.LL.CV'Access,\n-                 Single_RTS_Lock'Access, Request'Access);\n+               Result := pthread_cond_timedwait\n+                           (Self_ID.Common.LL.CV'Access,\n+                            Single_RTS_Lock'Access,\n+                            Request'Access);\n             else\n                Result := pthread_cond_timedwait (Self_ID.Common.LL.CV'Access,\n                  Self_ID.Common.LL.L'Access, Request'Access);\n@@ -581,7 +625,10 @@ package body System.Task_Primitives.Operations is\n    ------------\n \n    procedure Wakeup (T : Task_ID; Reason : System.Tasking.Task_States) is\n+      pragma Unreferenced (Reason);\n+\n       Result : Interfaces.C.int;\n+\n    begin\n       Result := pthread_cond_signal (T.Common.LL.CV'Access);\n       pragma Assert (Result = 0);\n@@ -604,10 +651,12 @@ package body System.Task_Primitives.Operations is\n    ------------------\n \n    procedure Set_Priority\n-     (T : Task_ID;\n-      Prio : System.Any_Priority;\n+     (T                   : Task_ID;\n+      Prio                : System.Any_Priority;\n       Loss_Of_Inheritance : Boolean := False)\n    is\n+      pragma Unreferenced (Loss_Of_Inheritance);\n+\n       Result : Interfaces.C.int;\n       Param  : aliased struct_sched_param;\n \n@@ -617,15 +666,15 @@ package body System.Task_Primitives.Operations is\n \n       if Time_Slice_Val > 0 then\n          Result := pthread_setschedparam\n-           (T.Common.LL.Thread, SCHED_RR, Param'Access);\n+                     (T.Common.LL.Thread, SCHED_RR, Param'Access);\n \n       elsif FIFO_Within_Priorities or else Time_Slice_Val = 0 then\n          Result := pthread_setschedparam\n-           (T.Common.LL.Thread, SCHED_FIFO, Param'Access);\n+                     (T.Common.LL.Thread, SCHED_FIFO, Param'Access);\n \n       else\n          Result := pthread_setschedparam\n-           (T.Common.LL.Thread, SCHED_OTHER, Param'Access);\n+                     (T.Common.LL.Thread, SCHED_OTHER, Param'Access);\n       end if;\n \n       pragma Assert (Result = 0);\n@@ -671,6 +720,25 @@ package body System.Task_Primitives.Operations is\n       return new Ada_Task_Control_Block (Entry_Num);\n    end New_ATCB;\n \n+   -------------------\n+   -- Is_Valid_Task --\n+   -------------------\n+\n+   function Is_Valid_Task return Boolean renames Specific.Is_Valid_Task;\n+\n+   -----------------------------\n+   -- Register_Foreign_Thread --\n+   -----------------------------\n+\n+   function Register_Foreign_Thread return Task_ID is\n+   begin\n+      if Is_Valid_Task then\n+         return Self;\n+      else\n+         return Register_Foreign_Thread (pthread_self);\n+      end if;\n+   end Register_Foreign_Thread;\n+\n    --------------------\n    -- Initialize_TCB --\n    --------------------\n@@ -686,8 +754,8 @@ package body System.Task_Primitives.Operations is\n          pragma Assert (Result = 0 or else Result = ENOMEM);\n \n          if Result = 0 then\n-            Result := pthread_mutex_init (Self_ID.Common.LL.L'Access,\n-              Mutex_Attr'Access);\n+            Result := pthread_mutex_init\n+                        (Self_ID.Common.LL.L'Access, Mutex_Attr'Access);\n             pragma Assert (Result = 0 or else Result = ENOMEM);\n          end if;\n \n@@ -704,8 +772,8 @@ package body System.Task_Primitives.Operations is\n       pragma Assert (Result = 0 or else Result = ENOMEM);\n \n       if Result = 0 then\n-         Result := pthread_cond_init (Self_ID.Common.LL.CV'Access,\n-           Cond_Attr'Access);\n+         Result := pthread_cond_init\n+                     (Self_ID.Common.LL.CV'Access, Cond_Attr'Access);\n          pragma Assert (Result = 0 or else Result = ENOMEM);\n       end if;\n \n@@ -765,52 +833,53 @@ package body System.Task_Primitives.Operations is\n       end if;\n \n       Result := pthread_attr_setdetachstate\n-        (Attributes'Access, PTHREAD_CREATE_DETACHED);\n+                  (Attributes'Access, PTHREAD_CREATE_DETACHED);\n       pragma Assert (Result = 0);\n \n       Result := pthread_attr_setstacksize\n-        (Attributes'Access, Adjusted_Stack_Size);\n-      pragma Assert (Result = 0);\n-\n-      --  Set the scheduling parameters explicitly, since this is the only\n-      --  way to force the OS to take the scope attribute into account\n-\n-      Result := pthread_attr_setinheritsched\n-        (Attributes'Access, PTHREAD_EXPLICIT_SCHED);\n+                  (Attributes'Access, Adjusted_Stack_Size);\n       pragma Assert (Result = 0);\n \n       Param.sched_priority :=\n         Interfaces.C.int (Underlying_Priorities (Priority));\n       Result := pthread_attr_setschedparam\n-        (Attributes'Access, Param'Access);\n+                  (Attributes'Access, Param'Access);\n       pragma Assert (Result = 0);\n \n       if Time_Slice_Val > 0 then\n          Result := pthread_attr_setschedpolicy\n-           (Attributes'Access, System.OS_Interface.SCHED_RR);\n+                     (Attributes'Access, System.OS_Interface.SCHED_RR);\n \n       elsif FIFO_Within_Priorities or else Time_Slice_Val = 0 then\n          Result := pthread_attr_setschedpolicy\n-           (Attributes'Access, System.OS_Interface.SCHED_FIFO);\n+                     (Attributes'Access, System.OS_Interface.SCHED_FIFO);\n \n       else\n          Result := pthread_attr_setschedpolicy\n-           (Attributes'Access, System.OS_Interface.SCHED_OTHER);\n+                     (Attributes'Access, System.OS_Interface.SCHED_OTHER);\n       end if;\n \n       pragma Assert (Result = 0);\n \n+      --  Set the scheduling parameters explicitly, since this is the\n+      --  only way to force the OS to take e.g. the sched policy and scope\n+      --  attributes into account.\n+\n+      Result := pthread_attr_setinheritsched\n+                  (Attributes'Access, PTHREAD_EXPLICIT_SCHED);\n+      pragma Assert (Result = 0);\n+\n       T.Common.Current_Priority := Priority;\n \n       if T.Common.Task_Info /= null then\n          case T.Common.Task_Info.Contention_Scope is\n             when System.Task_Info.Process_Scope =>\n                Result := pthread_attr_setscope\n-                  (Attributes'Access, PTHREAD_SCOPE_PROCESS);\n+                           (Attributes'Access, PTHREAD_SCOPE_PROCESS);\n \n             when System.Task_Info.System_Scope =>\n                Result := pthread_attr_setscope\n-                  (Attributes'Access, PTHREAD_SCOPE_SYSTEM);\n+                           (Attributes'Access, PTHREAD_SCOPE_SYSTEM);\n \n             when System.Task_Info.Default_Scope =>\n                Result := 0;\n@@ -825,10 +894,10 @@ package body System.Task_Primitives.Operations is\n       --  All tasks in RTS will have All_Tasks_Mask initially.\n \n       Result := pthread_create\n-        (T.Common.LL.Thread'Access,\n-         Attributes'Access,\n-         Thread_Body_Access (Wrapper),\n-         To_Address (T));\n+                  (T.Common.LL.Thread'Access,\n+                   Attributes'Access,\n+                   Thread_Body_Access (Wrapper),\n+                   To_Address (T));\n       pragma Assert (Result = 0 or else Result = EAGAIN);\n \n       Succeeded := Result = 0;\n@@ -837,6 +906,9 @@ package body System.Task_Primitives.Operations is\n       pragma Assert (Result = 0);\n \n       if T.Common.Task_Info /= null then\n+         --  ??? We're using a process-wide function to implement a task\n+         --  specific characteristic.\n+\n          if T.Common.Task_Info.Bind_To_Cpu_Number = 0 then\n             Result := bind_to_cpu (Curpid, 0);\n          elsif T.Common.Task_Info.Bind_To_Cpu_Number > 0 then\n@@ -858,6 +930,7 @@ package body System.Task_Primitives.Operations is\n    procedure Finalize_TCB (T : Task_ID) is\n       Result : Interfaces.C.int;\n       Tmp    : Task_ID := T;\n+      Is_Self : constant Boolean := T = Self;\n \n       procedure Free is new\n         Unchecked_Deallocation (Ada_Task_Control_Block, Task_ID);\n@@ -876,6 +949,12 @@ package body System.Task_Primitives.Operations is\n       end if;\n \n       Free (Tmp);\n+\n+      if Is_Self then\n+         Result := pthread_setspecific (ATCB_Key, System.Null_Address);\n+         pragma Assert (Result = 0);\n+      end if;\n+\n    end Finalize_TCB;\n \n    ---------------\n@@ -884,7 +963,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Exit_Task is\n    begin\n-      pthread_exit (System.Null_Address);\n+      Specific.Set (null);\n    end Exit_Task;\n \n    ----------------\n@@ -895,19 +974,22 @@ package body System.Task_Primitives.Operations is\n       Result : Interfaces.C.int;\n \n    begin\n-      Result := pthread_kill (T.Common.LL.Thread,\n-        Signal (System.Interrupt_Management.Abort_Task_Interrupt));\n+      Result :=\n+        pthread_kill\n+          (T.Common.LL.Thread,\n+           Signal (System.Interrupt_Management.Abort_Task_Interrupt));\n       pragma Assert (Result = 0);\n    end Abort_Task;\n \n    ----------------\n    -- Check_Exit --\n    ----------------\n \n-   --  Dummy versions. The only currently working versions is for solaris\n-   --  (native).\n+   --  Dummy version\n \n    function Check_Exit (Self_ID : ST.Task_ID) return Boolean is\n+      pragma Unreferenced (Self_ID);\n+\n    begin\n       return True;\n    end Check_Exit;\n@@ -917,6 +999,8 @@ package body System.Task_Primitives.Operations is\n    --------------------\n \n    function Check_No_Locks (Self_ID : ST.Task_ID) return Boolean is\n+      pragma Unreferenced (Self_ID);\n+\n    begin\n       return True;\n    end Check_No_Locks;\n@@ -954,7 +1038,12 @@ package body System.Task_Primitives.Operations is\n \n    function Suspend_Task\n      (T           : ST.Task_ID;\n-      Thread_Self : Thread_Id) return Boolean is\n+      Thread_Self : Thread_Id)\n+      return        Boolean\n+   is\n+      pragma Warnings (Off, T);\n+      pragma Warnings (Off, Thread_Self);\n+\n    begin\n       return False;\n    end Suspend_Task;\n@@ -965,7 +1054,12 @@ package body System.Task_Primitives.Operations is\n \n    function Resume_Task\n      (T           : ST.Task_ID;\n-      Thread_Self : Thread_Id) return Boolean is\n+      Thread_Self : Thread_Id)\n+      return        Boolean\n+   is\n+      pragma Warnings (Off, T);\n+      pragma Warnings (Off, Thread_Self);\n+\n    begin\n       return False;\n    end Resume_Task;\n@@ -975,41 +1069,61 @@ package body System.Task_Primitives.Operations is\n    ----------------\n \n    procedure Initialize (Environment_Task : Task_ID) is\n-      act       : aliased struct_sigaction;\n-      old_act   : aliased struct_sigaction;\n-      Tmp_Set   : aliased sigset_t;\n-      Result    : Interfaces.C.int;\n+      act     : aliased struct_sigaction;\n+      old_act : aliased struct_sigaction;\n+      Tmp_Set : aliased sigset_t;\n+      Result  : Interfaces.C.int;\n+\n+      function State (Int : System.Interrupt_Management.Interrupt_ID)\n+                     return Character;\n+      pragma Import (C, State, \"__gnat_get_interrupt_state\");\n+      --  Get interrupt state.  Defined in a-init.c\n+      --  The input argument is the interrupt number,\n+      --  and the result is one of the following:\n+\n+      Default : constant Character := 's';\n+      --    'n'   this interrupt not set by any Interrupt_State pragma\n+      --    'u'   Interrupt_State pragma set state to User\n+      --    'r'   Interrupt_State pragma set state to Runtime\n+      --    's'   Interrupt_State pragma set state to System (use \"default\"\n+      --           system handler)\n \n    begin\n       Environment_Task_ID := Environment_Task;\n \n-      Initialize_Lock (Single_RTS_Lock'Access, RTS_Lock_Level);\n       --  Initialize the lock used to synchronize chain of all ATCBs.\n \n+      Initialize_Lock (Single_RTS_Lock'Access, RTS_Lock_Level);\n+\n       Specific.Initialize (Environment_Task);\n \n       Enter_Task (Environment_Task);\n \n       --  Install the abort-signal handler\n \n-      act.sa_flags := 0;\n-      act.sa_handler := Abort_Handler'Address;\n+      if State (System.Interrupt_Management.Abort_Task_Interrupt)\n+        /= Default\n+      then\n+         act.sa_flags := 0;\n+         act.sa_handler := Abort_Handler'Address;\n \n-      Result := sigemptyset (Tmp_Set'Access);\n-      pragma Assert (Result = 0);\n-      act.sa_mask := Tmp_Set;\n+         Result := sigemptyset (Tmp_Set'Access);\n+         pragma Assert (Result = 0);\n+         act.sa_mask := Tmp_Set;\n \n-      Result :=\n-        sigaction\n-          (Signal (System.Interrupt_Management.Abort_Task_Interrupt),\n-           act'Unchecked_Access,\n-           old_act'Unchecked_Access);\n-      pragma Assert (Result = 0);\n+         Result :=\n+           sigaction\n+           (Signal (System.Interrupt_Management.Abort_Task_Interrupt),\n+            act'Unchecked_Access,\n+            old_act'Unchecked_Access);\n+         pragma Assert (Result = 0);\n+      end if;\n    end Initialize;\n \n begin\n    declare\n       Result : Interfaces.C.int;\n+\n    begin\n       --  Mask Environment task for all signals. The original mask of the\n       --  Environment task will be recovered by Interrupt_Server task"}, {"sha": "179f469c37c3c59f3336718a99058b9f0f8c96d7", "filename": "gcc/ada/5atasinf.ads", "status": "modified", "additions": 10, "deletions": 14, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5atasinf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5atasinf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5atasinf.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                           (Compiler Interface)                           --\n --                                                                          --\n---         Copyright (C) 1998-2000 Free Software Foundation, Inc.           --\n+--         Copyright (C) 1998-2003 Free Software Foundation, Inc.           --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,18 +32,21 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is a DEC Unix 4.0d version of this package.\n-\n --  This package contains the definitions and routines associated with the\n---  implementation of the Task_Info pragma.\n+--  implementation and use of the Task_Info pragma. It is specialized\n+--  appropriately for targets that make use of this pragma.\n \n --  Note: the compiler generates direct calls to this interface, via Rtsfind.\n --  Any changes to this interface may require corresponding compiler changes.\n \n-with Unchecked_Deallocation;\n+--  This unit may be used directly from an application program by providing\n+--  an appropriate WITH, and the interface can be expected to remain stable.\n+\n+--  This is a DEC Unix 4.0d version of this package.\n+\n package System.Task_Info is\n-pragma Elaborate_Body;\n---  To ensure that a body is allowed\n+   pragma Elaborate_Body;\n+   --  To ensure that a body is allowed\n \n    -----------------------------------------\n    -- Implementation of Task_Info Feature --\n@@ -96,13 +99,6 @@ pragma Elaborate_Body;\n    --  implementations, but it must be a type that can be used as a\n    --  discriminant (i.e. a scalar or access type).\n \n-   type Task_Image_Type is access String;\n-   --  Used to generate a meaningful identifier for tasks that are variables\n-   --  and components of variables.\n-\n-   procedure Free_Task_Image is new\n-     Unchecked_Deallocation (String, Task_Image_Type);\n-\n    Unspecified_Thread_Attribute : aliased Thread_Attributes :=\n      Thread_Attributes'(-1, Default_Scope);\n "}, {"sha": "2caf54b5f251f55f4fe75b0c48cadf32b7f3f5b9", "filename": "gcc/ada/5ataspri.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5ataspri.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5ataspri.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5ataspri.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -27,7 +27,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "dc4c0135f50f7619c24bbb2227e5864a324cd324", "filename": "gcc/ada/5atpopsp.adb", "status": "modified", "additions": 21, "deletions": 173, "changes": 194, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5atpopsp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5atpopsp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5atpopsp.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -2,12 +2,11 @@\n --                                                                          --\n --                GNU ADA RUN-TIME LIBRARY (GNARL) COMPONENTS               --\n --                                                                          --\n---    S Y S T E M . T A S K _ P R I M I T I V E S . O P E R A T I O N S .   --\n---                              S P E C I F I C                             --\n+--                SYSTEM.TASK_PRIMITIVES.OPERATIONS.SPECIFIC                --\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2001, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2003, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -34,194 +33,42 @@\n \n --  This is a POSIX version of this package where foreign threads are\n --  recognized.\n---  Currently, DEC Unix, SCO UnixWare, Solaris pthread, HPUX pthread,\n---  GNU/Linux threads and RTEMS use this version.\n-\n-with System.Task_Info;\n---  Use for Unspecified_Task_Info\n \n-with System.Soft_Links;\n---  used to initialize TSD for a C thread, in function Self\n+--  Currently, DEC Unix, SCO UnixWare, Solaris pthread, HPUX pthread,\n+--  GNU/Linux threads, and RTEMS use this version.\n \n separate (System.Task_Primitives.Operations)\n package body Specific is\n \n-   ------------------\n-   --  Local Data  --\n-   ------------------\n-\n-   --  The followings are logically constants, but need to be initialized\n-   --  at run time.\n-\n-   ATCB_Key : aliased pthread_key_t;\n-   --  Key used to find the Ada Task_ID associated with a thread\n-\n-   --  The following are used to allow the Self function to\n-   --  automatically generate ATCB's for C threads that happen to call\n-   --  Ada procedure, which in turn happen to call the Ada runtime system.\n-\n-   type Fake_ATCB;\n-   type Fake_ATCB_Ptr is access Fake_ATCB;\n-   type Fake_ATCB is record\n-      Stack_Base : Interfaces.C.unsigned := 0;\n-      --  A value of zero indicates the node is not in use.\n-      Next : Fake_ATCB_Ptr;\n-      Real_ATCB : aliased Ada_Task_Control_Block (0);\n-   end record;\n-\n-   Fake_ATCB_List : Fake_ATCB_Ptr;\n-   --  A linear linked list.\n-   --  The list is protected by Single_RTS_Lock;\n-   --  Nodes are added to this list from the front.\n-   --  Once a node is added to this list, it is never removed.\n-\n-   Fake_Task_Elaborated : aliased Boolean := True;\n-   --  Used to identified fake tasks (i.e., non-Ada Threads).\n-\n-   Next_Fake_ATCB : Fake_ATCB_Ptr;\n-   --  Used to allocate one Fake_ATCB in advance. See comment in New_Fake_ATCB\n-\n-   -----------------------\n-   -- Local Subprograms --\n-   -----------------------\n-\n-   ---------------------------------\n-   --  Support for New_Fake_ATCB  --\n-   ---------------------------------\n-\n-   function New_Fake_ATCB return Task_ID;\n-   --  Allocate and Initialize a new ATCB. This code can safely be called from\n-   --  a foreign thread, as it doesn't access implicitly or explicitly\n-   --  \"self\" before having initialized the new ATCB.\n-\n-   -------------------\n-   -- New_Fake_ATCB --\n-   -------------------\n-\n-   function New_Fake_ATCB return Task_ID is\n-      Self_ID   : Task_ID;\n-      P, Q      : Fake_ATCB_Ptr;\n-      Succeeded : Boolean;\n-      Result    : Interfaces.C.int;\n-\n-   begin\n-      --  This section is ticklish.\n-      --  We dare not call anything that might require an ATCB, until\n-      --  we have the new ATCB in place.\n-\n-      Lock_RTS;\n-      Q := null;\n-      P := Fake_ATCB_List;\n-\n-      while P /= null loop\n-         if P.Stack_Base = 0 then\n-            Q := P;\n-         end if;\n-\n-         P := P.Next;\n-      end loop;\n-\n-      if Q = null then\n-\n-         --  Create a new ATCB with zero entries.\n-\n-         Self_ID := Next_Fake_ATCB.Real_ATCB'Access;\n-         Next_Fake_ATCB.Stack_Base := 1;\n-         Next_Fake_ATCB.Next := Fake_ATCB_List;\n-         Fake_ATCB_List := Next_Fake_ATCB;\n-         Next_Fake_ATCB := null;\n-\n-      else\n-         --  Reuse an existing fake ATCB.\n-\n-         Self_ID := Q.Real_ATCB'Access;\n-         Q.Stack_Base := 1;\n-      end if;\n-\n-      --  Record this as the Task_ID for the current thread.\n-\n-      Self_ID.Common.LL.Thread := pthread_self;\n-      Result := pthread_setspecific (ATCB_Key, To_Address (Self_ID));\n-      pragma Assert (Result = 0);\n-\n-      --  Do the standard initializations\n-\n-      System.Tasking.Initialize_ATCB\n-        (Self_ID, null, Null_Address, Null_Task, Fake_Task_Elaborated'Access,\n-         System.Priority'First, Task_Info.Unspecified_Task_Info, 0, Self_ID,\n-         Succeeded);\n-      pragma Assert (Succeeded);\n-\n-      --  Finally, it is safe to use an allocator in this thread.\n-\n-      if Next_Fake_ATCB = null then\n-         Next_Fake_ATCB := new Fake_ATCB;\n-      end if;\n-\n-      Self_ID.Master_of_Task := 0;\n-      Self_ID.Master_Within := Self_ID.Master_of_Task + 1;\n-\n-      for L in Self_ID.Entry_Calls'Range loop\n-         Self_ID.Entry_Calls (L).Self := Self_ID;\n-         Self_ID.Entry_Calls (L).Level := L;\n-      end loop;\n-\n-      Self_ID.Common.State := Runnable;\n-      Self_ID.Awake_Count := 1;\n-\n-      --  Since this is not an ordinary Ada task, we will start out undeferred\n-\n-      Self_ID.Deferral_Level := 0;\n-\n-      System.Soft_Links.Create_TSD (Self_ID.Common.Compiler_Data);\n-\n-      --  ????\n-      --  The following call is commented out to avoid dependence on\n-      --  the System.Tasking.Initialization package.\n-      --  It seems that if we want Ada.Task_Attributes to work correctly\n-      --  for C threads we will need to raise the visibility of this soft\n-      --  link to System.Soft_Links.\n-      --  We are putting that off until this new functionality is otherwise\n-      --  stable.\n-      --  System.Tasking.Initialization.Initialize_Attributes_Link.all (T);\n-\n-      for J in Known_Tasks'Range loop\n-         if Known_Tasks (J) = null then\n-            Known_Tasks (J) := Self_ID;\n-            Self_ID.Known_Tasks_Index := J;\n-            exit;\n-         end if;\n-      end loop;\n-\n-      --  Must not unlock until Next_ATCB is again allocated.\n-\n-      Unlock_RTS;\n-      return Self_ID;\n-   end New_Fake_ATCB;\n-\n    ----------------\n    -- Initialize --\n    ----------------\n \n    procedure Initialize (Environment_Task : Task_ID) is\n+      pragma Warnings (Off, Environment_Task);\n       Result : Interfaces.C.int;\n+\n    begin\n       Result := pthread_key_create (ATCB_Key'Access, null);\n       pragma Assert (Result = 0);\n-      Result := pthread_setspecific (ATCB_Key, To_Address (Environment_Task));\n-      pragma Assert (Result = 0);\n+   end Initialize;\n \n-      --  Create a free ATCB for use on the Fake_ATCB_List.\n+   -------------------\n+   -- Is_Valid_Task --\n+   -------------------\n \n-      Next_Fake_ATCB := new Fake_ATCB;\n-   end Initialize;\n+   function Is_Valid_Task return Boolean is\n+   begin\n+      return pthread_getspecific (ATCB_Key) /= System.Null_Address;\n+   end Is_Valid_Task;\n \n    ---------\n    -- Set --\n    ---------\n \n    procedure Set (Self_Id : Task_ID) is\n-      Result  : Interfaces.C.int;\n+      Result : Interfaces.C.int;\n+\n    begin\n       Result := pthread_setspecific (ATCB_Key, To_Address (Self_Id));\n       pragma Assert (Result = 0);\n@@ -246,16 +93,17 @@ package body Specific is\n \n    function Self return Task_ID is\n       Result : System.Address;\n+\n    begin\n       Result := pthread_getspecific (ATCB_Key);\n \n       --  If the key value is Null, then it is a non-Ada task.\n \n-      if Result = System.Null_Address then\n-         return New_Fake_ATCB;\n+      if Result /= System.Null_Address then\n+         return To_Task_Id (Result);\n+      else\n+         return Register_Foreign_Thread;\n       end if;\n-\n-      return To_Task_ID (Result);\n    end Self;\n \n end Specific;"}, {"sha": "6d5e424a33c241280d93835f0993e6c0bbd4dae8", "filename": "gcc/ada/5avxwork.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5avxwork.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5avxwork.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5avxwork.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -27,7 +27,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "2f18936c5db7db7616a50ea145c464002969f020", "filename": "gcc/ada/5bml-tgt.adb", "status": "added", "additions": 398, "deletions": 0, "changes": 398, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5bml-tgt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5bml-tgt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5bml-tgt.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -0,0 +1,398 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--                             M L I B . T G T                              --\n+--                              (AIX Version)                               --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--              Copyright (C) 2003, Ada Core Technologies, Inc.             --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This package provides a set of target dependent routines to build\n+--  static, dynamic or relocatable libraries.\n+\n+--  This is the AIX version of the body.\n+\n+with Ada.Strings.Fixed; use Ada.Strings.Fixed;\n+with Ada.Text_IO; use Ada.Text_IO;\n+with MLib.Fil;\n+with MLib.Utl;\n+with Namet;  use Namet;\n+with Opt;\n+with Output; use Output;\n+with Prj.Com;\n+with Sdefault;\n+\n+package body MLib.Tgt is\n+\n+   No_Arguments        : aliased Argument_List         := (1 .. 0 => null);\n+   Empty_Argument_List : constant Argument_List_Access := No_Arguments'Access;\n+\n+   Wl_Initfini_String  : constant String := \"-Wl,-binitfini:\";\n+\n+   Init_Fini_List      :  constant Argument_List_Access :=\n+                            new Argument_List'(1 => null);\n+   --  Used to put switch for automatic elaboration/finalization\n+\n+   Bexpall : aliased String := \"-Wl,-bexpall\";\n+   Bexpall_Option : constant String_Access := Bexpall'Access;\n+   --  The switch to export all symbols\n+\n+   Lpthreads : aliased String := \"-lpthreads\";\n+   Native_Thread_Options : aliased Argument_List := (1 => Lpthreads'Access);\n+   --  The switch to use when linking a library against libgnarl when using\n+   --  Native threads.\n+\n+   Lgthreads : aliased String := \"-lgthreads\";\n+   Lmalloc   : aliased String := \"-lmalloc\";\n+   FSU_Thread_Options : aliased Argument_List :=\n+                          (1 => Lgthreads'Access, 2 => Lmalloc'Access);\n+   --  The switches to use when linking a library against libgnarl when using\n+   --  FSU threads.\n+\n+   Thread_Options : Argument_List_Access := null;\n+   --  Designate the thread switches to used when linking a library against\n+   --  libgnarl. Depends on the thread library (Native or FSU). Resolved for\n+   --  the first library linked against libgnarl.\n+\n+   ---------------------\n+   -- Archive_Builder --\n+   ---------------------\n+\n+   function Archive_Builder return String is\n+   begin\n+      return \"ar\";\n+   end Archive_Builder;\n+\n+   -----------------------------\n+   -- Archive_Builder_Options --\n+   -----------------------------\n+\n+   function Archive_Builder_Options return String_List_Access is\n+   begin\n+      return new String_List'(1 => new String'(\"cr\"));\n+   end Archive_Builder_Options;\n+\n+   -----------------\n+   -- Archive_Ext --\n+   -----------------\n+\n+   function Archive_Ext return String is\n+   begin\n+      return \"a\";\n+   end Archive_Ext;\n+\n+   ---------------------\n+   -- Archive_Indexer --\n+   ---------------------\n+\n+   function Archive_Indexer return String is\n+   begin\n+      return \"ranlib\";\n+   end Archive_Indexer;\n+\n+   ---------------------------\n+   -- Build_Dynamic_Library --\n+   ---------------------------\n+\n+   procedure Build_Dynamic_Library\n+     (Ofiles       : Argument_List;\n+      Foreign      : Argument_List;\n+      Afiles       : Argument_List;\n+      Options      : Argument_List;\n+      Interfaces   : Argument_List;\n+      Lib_Filename : String;\n+      Lib_Dir      : String;\n+      Driver_Name  : Name_Id := No_Name;\n+      Lib_Address  : String  := \"\";\n+      Lib_Version  : String  := \"\";\n+      Relocatable  : Boolean := False;\n+      Auto_Init    : Boolean := False)\n+   is\n+      pragma Unreferenced (Foreign);\n+      pragma Unreferenced (Afiles);\n+      pragma Unreferenced (Interfaces);\n+      pragma Unreferenced (Lib_Address);\n+      pragma Unreferenced (Lib_Version);\n+      pragma Unreferenced (Relocatable);\n+\n+      Lib_File : constant String :=\n+        Lib_Dir & Directory_Separator & \"lib\" &\n+        MLib.Fil.Ext_To (Lib_Filename, DLL_Ext);\n+      --  The file name of the library\n+\n+      Init_Fini : Argument_List_Access := Empty_Argument_List;\n+      --  The switch for automatic initialization of Stand-Alone Libraries.\n+      --  Changed to a real switch when Auto_Init is True.\n+\n+      Options_2 : Argument_List_Access := Empty_Argument_List;\n+      --  Changed to the thread options, if -lgnarl is specified\n+\n+   begin\n+      if Opt.Verbose_Mode then\n+         Write_Str (\"building relocatable shared library \");\n+         Write_Line (Lib_File);\n+      end if;\n+\n+      --  If specified, add automatic elaboration/finalization\n+\n+      if Auto_Init then\n+         Init_Fini := Init_Fini_List;\n+         Init_Fini (1) :=\n+           new String'(Wl_Initfini_String & Lib_Filename & \"init:\" &\n+                       Lib_Filename & \"final\");\n+      end if;\n+\n+      --  Look for -lgnarl in Options. If found, set the thread options.\n+\n+      for J in Options'Range loop\n+         if Options (J).all = \"-lgnarl\" then\n+\n+            --  If Thread_Options is null, read s-osinte.ads to discover the\n+            --  thread library and set Thread_Options accordingly.\n+\n+            if Thread_Options = null then\n+               declare\n+                  File : Ada.Text_IO.File_Type;\n+                  Line : String (1 .. 100);\n+                  Last : Natural;\n+\n+               begin\n+                  Open (File, In_File,\n+                        Sdefault.Include_Dir_Default_Name.all &\n+                        \"/s-osinte.ads\");\n+\n+                  while not End_Of_File (File) loop\n+                     Get_Line (File, Line, Last);\n+\n+                     if Index (Line (1 .. Last), \"-lpthreads\") /= 0 then\n+                        Thread_Options := Native_Thread_Options'Access;\n+                        exit;\n+\n+                     elsif Index (Line (1 .. Last), \"-lgthreads\") /= 0 then\n+                        Thread_Options := FSU_Thread_Options'Access;\n+                        exit;\n+                     end if;\n+                  end loop;\n+\n+                  Close (File);\n+\n+                  if Thread_Options = null then\n+                     Prj.Com.Fail (\"cannot find the thread library in use\");\n+                  end if;\n+\n+               exception\n+                  when others =>\n+                     Prj.Com.Fail (\"cannot open s-osinte.ads\");\n+               end;\n+            end if;\n+\n+            Options_2 := Thread_Options;\n+            exit;\n+         end if;\n+      end loop;\n+\n+      --  Finally, call GCC (or the driver specified) to build the library\n+\n+      MLib.Utl.Gcc\n+           (Output_File => Lib_File,\n+            Objects     => Ofiles,\n+            Options     => Options & Bexpall_Option & Init_Fini.all,\n+            Driver_Name => Driver_Name,\n+            Options_2   => Options_2.all);\n+   end Build_Dynamic_Library;\n+\n+   -------------------------\n+   -- Default_DLL_Address --\n+   -------------------------\n+\n+   function Default_DLL_Address return String is\n+   begin\n+      return \"\";\n+   end Default_DLL_Address;\n+\n+   -------------\n+   -- DLL_Ext --\n+   -------------\n+\n+   function DLL_Ext return String is\n+   begin\n+      return \"a\";\n+   end DLL_Ext;\n+\n+   --------------------\n+   -- Dynamic_Option --\n+   --------------------\n+\n+   function Dynamic_Option return String is\n+   begin\n+      return \"-shared\";\n+   end Dynamic_Option;\n+\n+   -------------------\n+   -- Is_Object_Ext --\n+   -------------------\n+\n+   function Is_Object_Ext (Ext : String) return Boolean is\n+   begin\n+      return Ext = \".o\";\n+   end Is_Object_Ext;\n+\n+   --------------\n+   -- Is_C_Ext --\n+   --------------\n+\n+   function Is_C_Ext (Ext : String) return Boolean is\n+   begin\n+      return Ext = \".c\";\n+   end Is_C_Ext;\n+\n+   --------------------\n+   -- Is_Archive_Ext --\n+   --------------------\n+\n+   function Is_Archive_Ext (Ext : String) return Boolean is\n+   begin\n+      return Ext = \".a\";\n+   end Is_Archive_Ext;\n+\n+   -------------\n+   -- Libgnat --\n+   -------------\n+\n+   function Libgnat return String is\n+   begin\n+      return \"libgnat.a\";\n+   end Libgnat;\n+\n+   ------------------------\n+   -- Library_Exists_For --\n+   ------------------------\n+\n+   function Library_Exists_For (Project : Project_Id) return Boolean is\n+   begin\n+      if not Projects.Table (Project).Library then\n+         Prj.Com.Fail (\"INTERNAL ERROR: Library_Exists_For called \" &\n+                       \"for non library project\");\n+         return False;\n+\n+      else\n+         declare\n+            Lib_Dir : constant String :=\n+              Get_Name_String (Projects.Table (Project).Library_Dir);\n+            Lib_Name : constant String :=\n+              Get_Name_String (Projects.Table (Project).Library_Name);\n+\n+         begin\n+            if Projects.Table (Project).Library_Kind = Static then\n+               return Is_Regular_File\n+                 (Lib_Dir & Directory_Separator & \"lib\" &\n+                  Fil.Ext_To (Lib_Name, Archive_Ext));\n+\n+            else\n+               return Is_Regular_File\n+                 (Lib_Dir & Directory_Separator & \"lib\" &\n+                  Fil.Ext_To (Lib_Name, DLL_Ext));\n+            end if;\n+         end;\n+      end if;\n+   end Library_Exists_For;\n+\n+   ---------------------------\n+   -- Library_File_Name_For --\n+   ---------------------------\n+\n+   function Library_File_Name_For (Project : Project_Id) return Name_Id is\n+   begin\n+      if not Projects.Table (Project).Library then\n+         Prj.Com.Fail (\"INTERNAL ERROR: Library_File_Name_For called \" &\n+                       \"for non library project\");\n+         return No_Name;\n+\n+      else\n+         declare\n+            Lib_Name : constant String :=\n+              Get_Name_String (Projects.Table (Project).Library_Name);\n+\n+         begin\n+            Name_Len := 3;\n+            Name_Buffer (1 .. Name_Len) := \"lib\";\n+\n+            if Projects.Table (Project).Library_Kind = Static then\n+               Add_Str_To_Name_Buffer (Fil.Ext_To (Lib_Name, Archive_Ext));\n+\n+            else\n+               Add_Str_To_Name_Buffer (Fil.Ext_To (Lib_Name, DLL_Ext));\n+            end if;\n+\n+            return Name_Find;\n+         end;\n+      end if;\n+   end Library_File_Name_For;\n+\n+   --------------------------------\n+   -- Linker_Library_Path_Option --\n+   --------------------------------\n+\n+   function Linker_Library_Path_Option return String_Access is\n+   begin\n+      --  On AIX, any path specify with an -L switch is automatically added\n+      --  to the library path. So, nothing is needed here.\n+\n+      return null;\n+   end Linker_Library_Path_Option;\n+\n+   ----------------\n+   -- Object_Ext --\n+   ----------------\n+\n+   function Object_Ext return String is\n+   begin\n+      return \"o\";\n+   end Object_Ext;\n+\n+   ----------------\n+   -- PIC_Option --\n+   ----------------\n+\n+   function PIC_Option return String is\n+   begin\n+      return \"-fPIC\";\n+   end PIC_Option;\n+\n+   -----------------------------------------------\n+   -- Standalone_Library_Auto_Init_Is_Supported --\n+   -----------------------------------------------\n+\n+   function Standalone_Library_Auto_Init_Is_Supported return Boolean is\n+   begin\n+      return True;\n+   end Standalone_Library_Auto_Init_Is_Supported;\n+\n+   ---------------------------\n+   -- Support_For_Libraries --\n+   ---------------------------\n+\n+   function Support_For_Libraries return Library_Support is\n+   begin\n+      return Full;\n+   end Support_For_Libraries;\n+\n+end MLib.Tgt;"}, {"sha": "5fe86b1d6063c7a87cb83187089d69693ee48ba3", "filename": "gcc/ada/5bosinte.adb", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5bosinte.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5bosinte.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5bosinte.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1997-2001, Free Software Fundation, Inc.          --\n+--          Copyright (C) 1997-2002, Free Software Fundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -77,8 +77,8 @@ package body System.OS_Interface is\n          F := F + 1.0;\n       end if;\n \n-      return timespec' (tv_sec => S,\n-        tv_nsec => long (Long_Long_Integer (F * 10#1#E9)));\n+      return timespec'(tv_sec => S,\n+                       tv_nsec => long (Long_Long_Integer (F * 10#1#E9)));\n    end To_Timespec;\n \n    ----------------\n@@ -101,8 +101,10 @@ package body System.OS_Interface is\n          F := F + 1.0;\n       end if;\n \n-      return struct_timeval' (tv_sec => S,\n-        tv_usec => long (Long_Long_Integer (F * 10#1#E6)));\n+      return\n+        struct_timeval'\n+          (tv_sec => S,\n+           tv_usec => long (Long_Long_Integer (F * 10#1#E6)));\n    end To_Timeval;\n \n    -------------------\n@@ -112,14 +114,17 @@ package body System.OS_Interface is\n    function clock_gettime\n      (clock_id : clockid_t;\n       tp       : access timespec)\n-      return int\n+      return     int\n    is\n+      pragma Warnings (Off, clock_id);\n+\n       Result : int;\n       tv     : aliased struct_timeval;\n \n       function gettimeofday\n-        (tv : access struct_timeval;\n-         tz : System.Address := System.Null_Address) return int;\n+        (tv   : access struct_timeval;\n+         tz   : System.Address := System.Null_Address)\n+         return int;\n       pragma Import (C, gettimeofday, \"gettimeofday\");\n \n    begin\n@@ -145,6 +150,8 @@ package body System.OS_Interface is\n    end sched_yield;\n \n    function Get_Stack_Base (thread : pthread_t) return Address is\n+      pragma Warnings (Off, thread);\n+\n    begin\n       return Null_Address;\n    end Get_Stack_Base;"}, {"sha": "ab144c0f4d6ee27e2971697e8849d4dbcd780bba", "filename": "gcc/ada/5bosinte.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5bosinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5bosinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5bosinte.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -27,7 +27,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "fa28445a42395fc74b00331fe13b924ca0b12607", "filename": "gcc/ada/5bsystem.ads", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5bsystem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5bsystem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5bsystem.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -118,22 +118,33 @@ private\n    Backend_Divide_Checks     : constant Boolean := False;\n    Backend_Overflow_Checks   : constant Boolean := False;\n    Command_Line_Args         : constant Boolean := True;\n+   Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := True;\n+   Duration_32_Bits          : constant Boolean := False;\n    Exit_Status_Supported     : constant Boolean := True;\n    Fractional_Fixed_Ops      : constant Boolean := False;\n    Frontend_Layout           : constant Boolean := False;\n    Functions_Return_By_DSP   : constant Boolean := False;\n-   Long_Shifts_Inlined       : constant Boolean := True;\n-   High_Integrity_Mode       : constant Boolean := False;\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := False;\n    Stack_Check_Probes        : constant Boolean := False;\n+   Support_64_Bit_Divides    : constant Boolean := True;\n+   Support_Aggregates        : constant Boolean := True;\n+   Support_Composite_Assign  : constant Boolean := True;\n+   Support_Composite_Compare : constant Boolean := True;\n+   Support_Long_Shifts       : constant Boolean := True;\n+   Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := False;\n    GCC_ZCX_Support           : constant Boolean := False;\n    Front_End_ZCX_Support     : constant Boolean := False;\n \n+   --  Obsolete entries, to be removed eventually (bootstrap issues!)\n+\n+   High_Integrity_Mode       : constant Boolean := False;\n+   Long_Shifts_Inlined       : constant Boolean := True;\n+\n end System;"}, {"sha": "86c507e0251375094ede6b1cf8bd625129ffe667", "filename": "gcc/ada/5cosinte.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5cosinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5cosinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5cosinte.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -27,7 +27,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "8ddf3b06a6a749e879ccb2ab96fe5ee3a07c3cfd", "filename": "gcc/ada/5csystem.ads", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5csystem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5csystem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5csystem.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -0,0 +1,160 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                        GNAT RUN-TIME COMPONENTS                          --\n+--                                                                          --\n+--                               S Y S T E M                                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                       (VxWorks Version Sparc/64)                         --\n+--                                                                          --\n+--          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+package System is\n+pragma Pure (System);\n+--  Note that we take advantage of the implementation permission to\n+--  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+\n+   type Name is (SYSTEM_NAME_GNAT);\n+   System_Name : constant Name := SYSTEM_NAME_GNAT;\n+\n+   --  System-Dependent Named Numbers\n+\n+   Min_Int               : constant := Long_Long_Integer'First;\n+   Max_Int               : constant := Long_Long_Integer'Last;\n+\n+   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n+   Max_Nonbinary_Modulus : constant := Integer'Last;\n+\n+   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n+   Max_Digits            : constant := Long_Long_Float'Digits;\n+\n+   Max_Mantissa          : constant := 63;\n+   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n+\n+   Tick                  : constant := 1.0 / 60.0;\n+\n+   --  Storage-related Declarations\n+\n+   --  VxWorks for UltraSparc uses 64bit words but 32bit pointers\n+\n+   type Address is private;\n+   Null_Address : constant Address;\n+\n+   Storage_Unit : constant := 8;\n+   Word_Size    : constant := 64;\n+   Memory_Size  : constant := 2 ** 32;\n+\n+   --  Address comparison\n+\n+   function \"<\"  (Left, Right : Address) return Boolean;\n+   function \"<=\" (Left, Right : Address) return Boolean;\n+   function \">\"  (Left, Right : Address) return Boolean;\n+   function \">=\" (Left, Right : Address) return Boolean;\n+   function \"=\"  (Left, Right : Address) return Boolean;\n+\n+   pragma Import (Intrinsic, \"<\");\n+   pragma Import (Intrinsic, \"<=\");\n+   pragma Import (Intrinsic, \">\");\n+   pragma Import (Intrinsic, \">=\");\n+   pragma Import (Intrinsic, \"=\");\n+\n+   --  Other System-Dependent Declarations\n+\n+   type Bit_Order is (High_Order_First, Low_Order_First);\n+   Default_Bit_Order : constant Bit_Order := High_Order_First;\n+\n+   --  Priority-related Declarations (RM D.1)\n+\n+   --  256        is reserved for the VxWorks kernel\n+   --  248 - 255  correspond to hardware interrupt levels 0 .. 7\n+   --  247        is a catchall default \"interrupt\" priority for signals,\n+   --             allowing higher priority than normal tasks, but lower than\n+   --             hardware priority levels.  Protected Object ceilings can\n+   --             override these values.\n+   --  246        is used by the Interrupt_Manager task\n+\n+   Max_Priority           : constant Positive := 245;\n+   Max_Interrupt_Priority : constant Positive := 255;\n+\n+   subtype Any_Priority       is Integer      range   0 .. 255;\n+   subtype Priority           is Any_Priority range   0 .. 245;\n+   subtype Interrupt_Priority is Any_Priority range 246 .. 255;\n+\n+   Default_Priority : constant Priority := 122;\n+\n+private\n+\n+   type Address is mod Memory_Size;\n+   Null_Address : constant Address := 0;\n+\n+   --------------------------------------\n+   -- System Implementation Parameters --\n+   --------------------------------------\n+\n+   --  These parameters provide information about the target that is used\n+   --  by the compiler. They are in the private part of System, where they\n+   --  can be accessed using the special circuitry in the Targparm unit\n+   --  whose source should be consulted for more detailed descriptions\n+   --  of the individual switch values.\n+\n+   AAMP                      : constant Boolean := False;\n+   Backend_Divide_Checks     : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := False;\n+   Command_Line_Args         : constant Boolean := False;\n+   Configurable_Run_Time     : constant Boolean := False;\n+   Denorm                    : constant Boolean := True;\n+   Duration_32_Bits          : constant Boolean := False;\n+   Exit_Status_Supported     : constant Boolean := True;\n+   Fractional_Fixed_Ops      : constant Boolean := False;\n+   Frontend_Layout           : constant Boolean := False;\n+   Functions_Return_By_DSP   : constant Boolean := False;\n+   Machine_Overflows         : constant Boolean := False;\n+   Machine_Rounds            : constant Boolean := True;\n+   OpenVMS                   : constant Boolean := False;\n+   Signed_Zeros              : constant Boolean := True;\n+   Stack_Check_Default       : constant Boolean := False;\n+   Stack_Check_Probes        : constant Boolean := False;\n+   Support_64_Bit_Divides    : constant Boolean := True;\n+   Support_Aggregates        : constant Boolean := True;\n+   Support_Composite_Assign  : constant Boolean := True;\n+   Support_Composite_Compare : constant Boolean := True;\n+   Support_Long_Shifts       : constant Boolean := True;\n+   Suppress_Standard_Library : constant Boolean := False;\n+   Use_Ada_Main_Program_Name : constant Boolean := True;\n+   ZCX_By_Default            : constant Boolean := False;\n+   GCC_ZCX_Support           : constant Boolean := False;\n+   Front_End_ZCX_Support     : constant Boolean := False;\n+\n+   --  Obsolete entries, to be removed eventually (bootstrap issues!)\n+\n+   High_Integrity_Mode       : constant Boolean := False;\n+   Long_Shifts_Inlined       : constant Boolean := False;\n+\n+end System;"}, {"sha": "b76c1233c49f68bd28ff2eec3d96f61786515154", "filename": "gcc/ada/5dosinte.ads", "status": "removed", "additions": 0, "deletions": 536, "changes": 536, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75a5a481c2048242ed62c7355381160aa1369616/gcc%2Fada%2F5dosinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75a5a481c2048242ed62c7355381160aa1369616/gcc%2Fada%2F5dosinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5dosinte.ads?ref=75a5a481c2048242ed62c7355381160aa1369616", "patch": "@@ -1,536 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                GNU ADA RUN-TIME LIBRARY (GNARL) COMPONENTS               --\n---                                                                          --\n---                   S Y S T E M . O S _ I N T E R F A C E                  --\n---                                                                          --\n---                                  S p e c                                 --\n---                                                                          --\n---          Copyright (C) 1992-2001, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNARL is free software; you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion. GNARL is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNARL; see file COPYING.  If not, write --\n--- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n--- MA 02111-1307, USA.                                                      --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This is a DOS/DJGPPv2 (FSU THREAD) version of this package.\n-\n---  This package encapsulates all direct interfaces to OS services\n---  that are needed by children of System.\n-\n---  PLEASE DO NOT add any with-clauses to this package\n---  or remove the pragma Elaborate_Body.\n---  It is designed to be a bottom-level (leaf) package.\n-\n-with Interfaces.C;\n-package System.OS_Interface is\n-   pragma Preelaborate;\n-\n-   --\n-   --  A short name for libgthreads.a to keep Mike Feldman happy.\n-   --\n-   pragma Linker_Options (\"-lgthre\");\n-\n-   subtype int            is Interfaces.C.int;\n-   subtype short          is Interfaces.C.short;\n-   subtype long           is Interfaces.C.long;\n-   subtype unsigned       is Interfaces.C.unsigned;\n-   subtype unsigned_short is Interfaces.C.unsigned_short;\n-   subtype unsigned_long  is Interfaces.C.unsigned_long;\n-   subtype unsigned_char  is Interfaces.C.unsigned_char;\n-   subtype plain_char     is Interfaces.C.plain_char;\n-   subtype size_t         is Interfaces.C.size_t;\n-\n-   -----------\n-   -- Errno --\n-   -----------\n-\n-   function errno return int;\n-   pragma Import (C, errno, \"__get_errno\");\n-\n-   EAGAIN : constant := 5;\n-   EINTR  : constant := 13;\n-   EINVAL : constant := 14;\n-   ENOMEM : constant := 25;\n-\n-   -------------\n-   -- Signals --\n-   -------------\n-\n-   Max_Interrupt : constant := 319;\n-   type Signal is new int range 0 .. Max_Interrupt;\n-\n-   SIGHUP  : constant := 294; --  hangup\n-   SIGINT  : constant := 295; --  interrupt (rubout)\n-   SIGQUIT : constant := 298; --  quit (ASCD FS)\n-   SIGILL  : constant := 290; --  illegal instruction (not reset)\n-   SIGABRT : constant := 288; --  used by abort\n-   SIGFPE  : constant := 289; --  floating point exception\n-   SIGKILL : constant := 296; --  kill (cannot be caught or ignored)\n-   SIGSEGV : constant := 291; --  segmentation violation\n-   SIGPIPE : constant := 297; --  write on a pipe with no one to read it\n-   SIGALRM : constant := 293; --  alarm clock\n-   SIGTERM : constant := 292; --  software termination signal from kill\n-   SIGUSR1 : constant := 299; --  user defined signal 1\n-   SIGUSR2 : constant := 300; --  user defined signal 2\n-   SIGBUS  : constant := 0;\n-\n-   SIGADAABORT : constant := SIGABRT;\n-\n-   type Signal_Set is array (Natural range <>) of Signal;\n-\n-   Unmasked : constant Signal_Set := (SIGTRAP, SIGALRM);\n-   Reserved : constant Signal_Set := (0 .. 0 => SIGSTOP);\n-\n-   type sigset_t is private;\n-\n-   function sigaddset (set : access sigset_t; sig : Signal) return int;\n-   pragma Import (C, sigaddset, \"sigaddset\");\n-\n-   function sigdelset (set : access sigset_t; sig : Signal) return int;\n-   pragma Import (C, sigdelset, \"sigdelset\");\n-\n-   function sigfillset (set : access sigset_t) return int;\n-   pragma Import (C, sigfillset, \"sigfillset\");\n-\n-   function sigismember (set : access sigset_t; sig : Signal) return int;\n-   pragma Import (C, sigismember, \"sigismember\");\n-\n-   function sigemptyset (set : access sigset_t) return int;\n-   pragma Import (C, sigemptyset, \"sigemptyset\");\n-\n-   type struct_sigaction is record\n-      sa_flags   : int;\n-      sa_handler : System.Address;\n-      sa_mask    : sigset_t;\n-   end record;\n-   pragma Convention (C, struct_sigaction);\n-   type struct_sigaction_ptr is access all struct_sigaction;\n-\n-   SIG_BLOCK   : constant := 1;\n-   SIG_UNBLOCK : constant := 3;\n-   SIG_SETMASK : constant := 2;\n-\n-   SIG_DFL : constant := 0;\n-   SIG_IGN : constant := -1;\n-\n-   function sigaction\n-     (sig  : Signal;\n-      act  : struct_sigaction_ptr;\n-      oact : struct_sigaction_ptr) return int;\n-   pragma Import (C, sigaction, \"sigaction\");\n-\n-   ----------\n-   -- Time --\n-   ----------\n-\n-   Time_Slice_Supported : constant Boolean := False;\n-   --  Indicates wether time slicing is supported (i.e FSU threads have been\n-   --  compiled with DEF_RR)\n-\n-   type timespec is private;\n-\n-   function nanosleep (rqtp, rmtp : access timespec) return int;\n-   --  FSU_THREADS has nonstandard nanosleep\n-   type clockid_t is private;\n-\n-   CLOCK_REALTIME : constant clockid_t;\n-\n-   function clock_gettime\n-     (clock_id : clockid_t;\n-      tp       : access timespec) return int;\n-   pragma Import (C, clock_gettime, \"clock_gettime\");\n-\n-   function To_Duration (TS : timespec) return Duration;\n-   pragma Inline (To_Duration);\n-\n-   function To_Timespec (D : Duration) return timespec;\n-   pragma Inline (To_Timespec);\n-\n-   type struct_timeval is private;\n-\n-   function To_Duration (TV : struct_timeval) return Duration;\n-   pragma Inline (To_Duration);\n-\n-   function To_Timeval (D : Duration) return struct_timeval;\n-   pragma Inline (To_Timeval);\n-\n-   -------------------------\n-   -- Priority Scheduling --\n-   -------------------------\n-\n-   SCHED_FIFO  : constant := 0;\n-   SCHED_RR    : constant := 1;\n-   SCHED_OTHER : constant := 2;\n-\n-   -------------\n-   -- Process --\n-   -------------\n-\n-   type pid_t is private;\n-\n-   function kill (pid : pid_t; sig : Signal) return int;\n-   pragma Import (C, kill, \"kill\");\n-\n-   function getpid return pid_t;\n-   pragma Import (C, getpid, \"getpid\");\n-\n-   ---------\n-   -- LWP --\n-   ---------\n-\n-   function lwp_self return System.Address;\n-   --  lwp_self does not exist on this thread library, revert to pthread_self\n-   --  which is the closest approximation (with getpid). This function is\n-   --  needed to share 7staprop.adb across POSIX-like targets.\n-   pragma Import (C, lwp_self, \"pthread_self\");\n-\n-   -------------\n-   -- Threads --\n-   -------------\n-\n-   type Thread_Body is access\n-     function (arg : System.Address) return System.Address;\n-\n-   type pthread_t           is private;\n-   subtype Thread_Id        is pthread_t;\n-\n-   type pthread_mutex_t     is limited private;\n-   type pthread_cond_t      is limited private;\n-   type pthread_attr_t      is limited private;\n-   type pthread_mutexattr_t is limited private;\n-   type pthread_condattr_t  is limited private;\n-   type pthread_key_t       is private;\n-\n-   PTHREAD_CREATE_DETACHED : constant := 1;\n-\n-   -----------\n-   -- Stack --\n-   -----------\n-\n-   Stack_Base_Available : constant Boolean := False;\n-   --  Indicates wether the stack base is available on this target.\n-   --  This allows us to share s-osinte.adb between all the FSU run time.\n-   --  Note that this value can only be true if pthread_t has a complete\n-   --  definition that corresponds exactly to the C header files.\n-\n-   function Get_Stack_Base (thread : pthread_t) return Address;\n-   pragma Inline (Get_Stack_Base);\n-   --  returns the stack base of the specified thread.\n-   --  Only call this function when Stack_Base_Available is True.\n-\n-   function Get_Page_Size return size_t;\n-   function Get_Page_Size return Address;\n-   pragma Import (C, Get_Page_Size, \"getpagesize\");\n-   --  returns the size of a page, or 0 if this is not relevant on this\n-   --  target\n-\n-   PROT_NONE  : constant := 0;\n-   PROT_READ  : constant := 1;\n-   PROT_WRITE : constant := 2;\n-   PROT_EXEC  : constant := 4;\n-   PROT_ALL   : constant := PROT_READ + PROT_WRITE + PROT_EXEC;\n-\n-   PROT_ON    : constant := PROT_NONE;\n-   PROT_OFF   : constant := PROT_ALL;\n-\n-   function mprotect\n-     (addr : Address; len : size_t; prot : int) return int;\n-   pragma Import (C, mprotect);\n-\n-   ---------------------------------------\n-   -- Nonstandard Thread Initialization --\n-   ---------------------------------------\n-\n-   procedure pthread_init;\n-   --  FSU_THREADS requires pthread_init, which is nonstandard\n-   --  and this should be invoked during the elaboration of s-taprop.adb\n-   pragma Import (C, pthread_init, \"pthread_init\");\n-\n-   -------------------------\n-   -- POSIX.1c  Section 3 --\n-   -------------------------\n-\n-   function sigwait (set : access sigset_t; sig : access Signal) return int;\n-   --  FSU_THREADS has a nonstandard sigwait\n-\n-   function pthread_kill (thread : pthread_t; sig : Signal) return int;\n-   pragma Import (C, pthread_kill, \"pthread_kill\");\n-\n-   type sigset_t_ptr is access all sigset_t;\n-\n-   function pthread_sigmask\n-     (how  : int;\n-      set  : sigset_t_ptr;\n-      oset : sigset_t_ptr) return int;\n-   pragma Import (C, pthread_sigmask, \"sigprocmask\");\n-\n-   --------------------------\n-   -- POSIX.1c  Section 11 --\n-   --------------------------\n-\n-   function pthread_mutexattr_init\n-     (attr : access pthread_mutexattr_t) return int;\n-   pragma Import (C, pthread_mutexattr_init, \"pthread_mutexattr_init\");\n-\n-   function pthread_mutexattr_destroy\n-     (attr : access pthread_mutexattr_t) return int;\n-   pragma Import (C, pthread_mutexattr_destroy, \"pthread_mutexattr_destroy\");\n-\n-   function pthread_mutex_init\n-     (mutex : access pthread_mutex_t;\n-      attr  : access pthread_mutexattr_t) return int;\n-   pragma Import (C, pthread_mutex_init, \"pthread_mutex_init\");\n-\n-   function pthread_mutex_destroy (mutex : access pthread_mutex_t) return int;\n-   pragma Import (C, pthread_mutex_destroy, \"pthread_mutex_destroy\");\n-\n-   function pthread_mutex_lock (mutex : access pthread_mutex_t) return int;\n-   --  FSU_THREADS has nonstandard pthread_mutex_lock\n-\n-   function pthread_mutex_unlock (mutex : access pthread_mutex_t) return int;\n-   --  FSU_THREADS has nonstandard pthread_mutex_lock\n-\n-   function pthread_condattr_init\n-     (attr : access pthread_condattr_t) return int;\n-   pragma Import (C, pthread_condattr_init, \"pthread_condattr_init\");\n-\n-   function pthread_condattr_destroy\n-     (attr : access pthread_condattr_t) return int;\n-   pragma Import (C, pthread_condattr_destroy, \"pthread_condattr_destroy\");\n-\n-   function pthread_cond_init\n-     (cond : access pthread_cond_t;\n-      attr : access pthread_condattr_t) return int;\n-   pragma Import (C, pthread_cond_init, \"pthread_cond_init\");\n-\n-   function pthread_cond_destroy (cond : access pthread_cond_t) return int;\n-   pragma Import (C, pthread_cond_destroy, \"pthread_cond_destroy\");\n-\n-   function pthread_cond_signal (cond : access pthread_cond_t) return int;\n-   pragma Import (C, pthread_cond_signal, \"pthread_cond_signal\");\n-\n-   function pthread_cond_wait\n-     (cond  : access pthread_cond_t;\n-      mutex : access pthread_mutex_t) return int;\n-   --  FSU_THREADS has a nonstandard pthread_cond_wait\n-\n-   function pthread_cond_timedwait\n-     (cond    : access pthread_cond_t;\n-      mutex   : access pthread_mutex_t;\n-      abstime : access timespec) return int;\n-   --  FSU_THREADS has a nonstandard pthread_cond_timedwait\n-\n-   Relative_Timed_Wait : constant Boolean := False;\n-   --  pthread_cond_timedwait requires an absolute delay time\n-\n-   --------------------------\n-   -- POSIX.1c  Section 13 --\n-   --------------------------\n-\n-   PTHREAD_PRIO_NONE    : constant := 0;\n-   PTHREAD_PRIO_PROTECT : constant := 2;\n-   PTHREAD_PRIO_INHERIT : constant := 1;\n-\n-   function pthread_mutexattr_setprotocol\n-     (attr     : access pthread_mutexattr_t;\n-      protocol : int) return int;\n-   pragma Import (C, pthread_mutexattr_setprotocol);\n-\n-   function pthread_mutexattr_setprioceiling\n-     (attr     : access pthread_mutexattr_t;\n-      prioceiling : int) return int;\n-   pragma Import (C, pthread_mutexattr_setprioceiling);\n-\n-   type struct_sched_param is record\n-      sched_priority : int;  --  scheduling priority\n-   end record;\n-\n-   function pthread_setschedparam\n-     (thread : pthread_t;\n-      policy : int;\n-      param  : access struct_sched_param) return int;\n-   --  FSU_THREADS does not have pthread_setschedparam\n-\n-   function pthread_attr_setscope\n-     (attr            : access pthread_attr_t;\n-      contentionscope : int) return int;\n-   pragma Import (C, pthread_attr_setscope, \"pthread_attr_setscope\");\n-\n-   function pthread_attr_setinheritsched\n-     (attr            : access pthread_attr_t;\n-      inheritsched : int) return int;\n-   pragma Import (C, pthread_attr_setinheritsched);\n-\n-   function pthread_attr_setschedpolicy\n-     (attr   : access pthread_attr_t;\n-      policy : int) return int;\n-   pragma Import (C, pthread_attr_setschedpolicy, \"pthread_attr_setsched\");\n-\n-   function sched_yield return int;\n-   --  FSU_THREADS does not have sched_yield;\n-\n-   ---------------------------\n-   -- P1003.1c - Section 16 --\n-   ---------------------------\n-\n-   function pthread_attr_init (attributes : access pthread_attr_t) return int;\n-   pragma Import (C, pthread_attr_init);\n-\n-   function pthread_attr_destroy\n-     (attributes : access pthread_attr_t) return int;\n-   pragma Import (C, pthread_attr_destroy);\n-\n-   function pthread_attr_setdetachstate\n-     (attr        : access pthread_attr_t;\n-      detachstate : int) return int;\n-   --  FSU_THREADS has a nonstandard pthread_attr_setdetachstate\n-\n-   function pthread_attr_setstacksize\n-     (attr      : access pthread_attr_t;\n-      stacksize : size_t) return int;\n-   pragma Import (C, pthread_attr_setstacksize);\n-\n-   function pthread_create\n-     (thread        : access pthread_t;\n-      attributes    : access pthread_attr_t;\n-      start_routine : Thread_Body;\n-      arg           : System.Address) return int;\n-   pragma Import (C, pthread_create);\n-\n-   procedure pthread_exit (status : System.Address);\n-   pragma Import (C, pthread_exit, \"pthread_exit\");\n-\n-   function pthread_self return pthread_t;\n-   pragma Import (C, pthread_self, \"pthread_self\");\n-\n-   --------------------------\n-   -- POSIX.1c  Section 17 --\n-   --------------------------\n-\n-   function pthread_setspecific\n-     (key   : pthread_key_t;\n-      value : System.Address) return  int;\n-   pragma Import (C, pthread_setspecific, \"pthread_setspecific\");\n-\n-   function pthread_getspecific (key : pthread_key_t) return System.Address;\n-   --  FSU_THREADS has a nonstandard pthread_getspecific\n-\n-   type destructor_pointer is access procedure (arg : System.Address);\n-\n-   function pthread_key_create\n-     (key        : access pthread_key_t;\n-      destructor : destructor_pointer) return int;\n-   pragma Import (C, pthread_key_create, \"pthread_key_create\");\n-\n-private\n-\n-   type bits_arr_t is array (Integer range 1 .. 10) of long;\n-   type sigset_t is record\n-      bits : bits_arr_t;\n-   end record;\n-\n-   type pid_t is new int;\n-\n-   type time_t is new long;\n-\n-   type timespec is record\n-      tv_sec  : time_t;\n-      tv_nsec : long;\n-   end record;\n-   pragma Convention (C, timespec);\n-\n-   type clockid_t is new int;\n-   CLOCK_REALTIME : constant clockid_t := 0;\n-\n-   type struct_timeval is record\n-      tv_sec  : long;\n-      tv_usec : long;\n-   end record;\n-   pragma Convention (C, struct_timeval);\n-\n-   type pthread_attr_t is record\n-      flags           : int;\n-      stacksize       : int;\n-      contentionscope : int;\n-      inheritsched    : int;\n-      detachstate     : int;\n-      sched           : int;\n-      prio            : int;\n-      starttime       : timespec;\n-      deadline        : timespec;\n-      period          : timespec;\n-   end record;\n-   pragma Convention (C, pthread_attr_t);\n-\n-   type pthread_condattr_t is record\n-      flags : int;\n-   end record;\n-   pragma Convention (C, pthread_condattr_t);\n-\n-   type pthread_mutexattr_t is record\n-      flags        : int;\n-      prio_ceiling : int;\n-      protocol     : int;\n-   end record;\n-   pragma Convention (C, pthread_mutexattr_t);\n-\n-   type sigjmp_buf is array (Integer range 0 .. 43) of int;\n-\n-   type pthread_t_struct is record\n-      context    : sigjmp_buf;\n-      pbody      : sigjmp_buf;\n-      errno      : int;\n-      ret        : int;\n-      stack_base : System.Address;\n-   end record;\n-   pragma Convention (C, pthread_t_struct);\n-\n-   type pthread_t is access all pthread_t_struct;\n-\n-   type queue_t is record\n-      head : System.Address;\n-      tail : System.Address;\n-   end record;\n-   pragma Convention (C, queue_t);\n-\n-   type pthread_mutex_t is record\n-      queue        : queue_t;\n-      lock         : plain_char;\n-      owner        : System.Address;\n-      flags        : int;\n-      prio_ceiling : int;\n-      protocol     : int;\n-      prev_max_ceiling_prio  : int;\n-   end record;\n-   pragma Convention (C, pthread_mutex_t);\n-\n-   type pthread_cond_t is record\n-      queue   : queue_t;\n-      flags   : int;\n-      waiters : int;\n-      mutex   : System.Address;\n-   end record;\n-   pragma Convention (C, pthread_cond_t);\n-\n-   type pthread_key_t is new int;\n-\n-end System.OS_Interface;"}, {"sha": "1fa021d51877250a606972296747de4fdc2f3962", "filename": "gcc/ada/5dsystem.ads", "status": "added", "additions": 158, "deletions": 0, "changes": 158, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5dsystem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5dsystem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5dsystem.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -0,0 +1,158 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                        GNAT RUN-TIME COMPONENTS                          --\n+--                                                                          --\n+--                               S Y S T E M                                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                         (VxWorks Version Xscale)                         --\n+--                                                                          --\n+--          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+package System is\n+pragma Pure (System);\n+--  Note that we take advantage of the implementation permission to\n+--  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+\n+   type Name is (SYSTEM_NAME_GNAT);\n+   System_Name : constant Name := SYSTEM_NAME_GNAT;\n+\n+   --  System-Dependent Named Numbers\n+\n+   Min_Int               : constant := Long_Long_Integer'First;\n+   Max_Int               : constant := Long_Long_Integer'Last;\n+\n+   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n+   Max_Nonbinary_Modulus : constant := Integer'Last;\n+\n+   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n+   Max_Digits            : constant := Long_Long_Float'Digits;\n+\n+   Max_Mantissa          : constant := 63;\n+   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n+\n+   Tick                  : constant := 1.0 / 60.0;\n+\n+   --  Storage-related Declarations\n+\n+   type Address is private;\n+   Null_Address : constant Address;\n+\n+   Storage_Unit : constant := 8;\n+   Word_Size    : constant := 32;\n+   Memory_Size  : constant := 2 ** 32;\n+\n+   --  Address comparison\n+\n+   function \"<\"  (Left, Right : Address) return Boolean;\n+   function \"<=\" (Left, Right : Address) return Boolean;\n+   function \">\"  (Left, Right : Address) return Boolean;\n+   function \">=\" (Left, Right : Address) return Boolean;\n+   function \"=\"  (Left, Right : Address) return Boolean;\n+\n+   pragma Import (Intrinsic, \"<\");\n+   pragma Import (Intrinsic, \"<=\");\n+   pragma Import (Intrinsic, \">\");\n+   pragma Import (Intrinsic, \">=\");\n+   pragma Import (Intrinsic, \"=\");\n+\n+   --  Other System-Dependent Declarations\n+\n+   type Bit_Order is (High_Order_First, Low_Order_First);\n+   Default_Bit_Order : constant Bit_Order := Low_Order_First;\n+\n+   --  Priority-related Declarations (RM D.1)\n+\n+   --  256        is reserved for the VxWorks kernel\n+   --  248 - 255  correspond to hardware interrupt levels 0 .. 7\n+   --  247        is a catchall default \"interrupt\" priority for signals,\n+   --             allowing higher priority than normal tasks, but lower than\n+   --             hardware priority levels.  Protected Object ceilings can\n+   --             override these values.\n+   --  246        is used by the Interrupt_Manager task\n+\n+   Max_Priority           : constant Positive := 245;\n+   Max_Interrupt_Priority : constant Positive := 255;\n+\n+   subtype Any_Priority       is Integer      range   0 .. 255;\n+   subtype Priority           is Any_Priority range   0 .. 245;\n+   subtype Interrupt_Priority is Any_Priority range 246 .. 255;\n+\n+   Default_Priority : constant Priority := 122;\n+\n+private\n+\n+   type Address is mod Memory_Size;\n+   Null_Address : constant Address := 0;\n+\n+   --------------------------------------\n+   -- System Implementation Parameters --\n+   --------------------------------------\n+\n+   --  These parameters provide information about the target that is used\n+   --  by the compiler. They are in the private part of System, where they\n+   --  can be accessed using the special circuitry in the Targparm unit\n+   --  whose source should be consulted for more detailed descriptions\n+   --  of the individual switch values.\n+\n+   AAMP                      : constant Boolean := False;\n+   Backend_Divide_Checks     : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := False;\n+   Command_Line_Args         : constant Boolean := False;\n+   Configurable_Run_Time     : constant Boolean := False;\n+   Denorm                    : constant Boolean := True;\n+   Duration_32_Bits          : constant Boolean := False;\n+   Exit_Status_Supported     : constant Boolean := True;\n+   Fractional_Fixed_Ops      : constant Boolean := False;\n+   Frontend_Layout           : constant Boolean := False;\n+   Functions_Return_By_DSP   : constant Boolean := False;\n+   Machine_Overflows         : constant Boolean := False;\n+   Machine_Rounds            : constant Boolean := True;\n+   OpenVMS                   : constant Boolean := False;\n+   Signed_Zeros              : constant Boolean := True;\n+   Stack_Check_Default       : constant Boolean := False;\n+   Stack_Check_Probes        : constant Boolean := False;\n+   Support_64_Bit_Divides    : constant Boolean := True;\n+   Support_Aggregates        : constant Boolean := True;\n+   Support_Composite_Assign  : constant Boolean := True;\n+   Support_Composite_Compare : constant Boolean := True;\n+   Support_Long_Shifts       : constant Boolean := True;\n+   Suppress_Standard_Library : constant Boolean := False;\n+   Use_Ada_Main_Program_Name : constant Boolean := True;\n+   ZCX_By_Default            : constant Boolean := False;\n+   GCC_ZCX_Support           : constant Boolean := False;\n+   Front_End_ZCX_Support     : constant Boolean := False;\n+\n+   --  Obsolete entries, to be removed eventually (bootstrap issues!)\n+\n+   High_Integrity_Mode       : constant Boolean := False;\n+   Long_Shifts_Inlined       : constant Boolean := False;\n+\n+end System;"}, {"sha": "d48b684f84c599337ec9728ab3bd1b285673a474", "filename": "gcc/ada/5esystem.ads", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5esystem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5esystem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5esystem.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -118,22 +118,33 @@ private\n    Backend_Divide_Checks     : constant Boolean := False;\n    Backend_Overflow_Checks   : constant Boolean := False;\n    Command_Line_Args         : constant Boolean := True;\n+   Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := True;\n+   Duration_32_Bits          : constant Boolean := False;\n    Exit_Status_Supported     : constant Boolean := True;\n    Fractional_Fixed_Ops      : constant Boolean := False;\n    Frontend_Layout           : constant Boolean := False;\n    Functions_Return_By_DSP   : constant Boolean := False;\n-   Long_Shifts_Inlined       : constant Boolean := True;\n-   High_Integrity_Mode       : constant Boolean := False;\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := False;\n    Stack_Check_Probes        : constant Boolean := True;\n+   Support_64_Bit_Divides    : constant Boolean := True;\n+   Support_Aggregates        : constant Boolean := True;\n+   Support_Composite_Assign  : constant Boolean := True;\n+   Support_Composite_Compare : constant Boolean := True;\n+   Support_Long_Shifts       : constant Boolean := True;\n+   Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := False;\n    GCC_ZCX_Support           : constant Boolean := False;\n    Front_End_ZCX_Support     : constant Boolean := True;\n \n+   --  Obsolete entries, to be removed eventually (bootstrap issues!)\n+\n+   High_Integrity_Mode       : constant Boolean := False;\n+   Long_Shifts_Inlined       : constant Boolean := True;\n+\n end System;"}, {"sha": "2a290e105da672aa620615f92216069ea3fd1687", "filename": "gcc/ada/5fintman.adb", "status": "modified", "additions": 72, "deletions": 22, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5fintman.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5fintman.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5fintman.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,8 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---            Copyright (C) 1991-2001, Florida State University             --\n+--             Copyright (C) 1991-1994, Florida State University            --\n+--             Copyright (C) 1995-2003, Ada Core Technologies               --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,9 +27,8 @@\n -- however invalidate  any other reasons why  the executable file  might be --\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University. It is --\n--- now maintained by Ada Core Technologies Inc. in cooperation with Florida --\n--- State University (http://www.gnat.com).                                  --\n+-- GNARL was developed by the GNARL team at Florida State University.       --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n@@ -63,7 +63,7 @@ package body System.Interrupt_Management is\n    -- Initialize_Interrupts --\n    ---------------------------\n \n-   --  Nothing needs to be done on this platform.\n+   --  Nothing needs to be done on this platform\n \n    procedure Initialize_Interrupts is\n    begin\n@@ -77,26 +77,76 @@ package body System.Interrupt_Management is\n    use type Interfaces.C.int;\n \n begin\n-   Abort_Task_Interrupt := SIGABRT;\n-   --  Change this if you want to use another signal for task abort.\n-   --  SIGTERM might be a good one.\n+   declare\n+      function State (Int : Interrupt_ID) return Character;\n+      pragma Import (C, State, \"__gnat_get_interrupt_state\");\n+\n+      --  Get interrupt state.  Defined in a-init.c\n+      --  The input argument is the interrupt number,\n+      --  and the result is one of the following:\n+\n+      User    : constant Character := 'u';\n+      Runtime : constant Character := 'r';\n+      Default : constant Character := 's';\n+      --    'n'   this interrupt not set by any Interrupt_State pragma\n+      --    'u'   Interrupt_State pragma set state to User\n+      --    'r'   Interrupt_State pragma set state to Runtime\n+      --    's'   Interrupt_State pragma set state to System (use \"default\"\n+      --           system handler)\n \n-   for I in Exception_Interrupts'Range loop\n-      Keep_Unmasked (Exception_Interrupts (I)) := True;\n-   end loop;\n+   begin\n+      Abort_Task_Interrupt := SIGABRT;\n+\n+      --  Change this if you want to use another signal for task abort.\n+      --  SIGTERM might be a good one.\n+\n+      pragma Assert (Keep_Unmasked = (Interrupt_ID'Range => False));\n+      pragma Assert (Reserve = (Interrupt_ID'Range => False));\n+\n+      --  Process state of exception signals\n+\n+      for J in Exception_Interrupts'Range loop\n+         if State (Exception_Interrupts (J)) /= User then\n+            Keep_Unmasked (Exception_Interrupts (J)) := True;\n+            Reserve (Exception_Interrupts (J)) := True;\n+         end if;\n+      end loop;\n+\n+      if State (Abort_Task_Interrupt) /= User then\n+         Keep_Unmasked (Abort_Task_Interrupt) := True;\n+         Reserve (Abort_Task_Interrupt) := True;\n+      end if;\n+\n+      --  Set SIGINT to unmasked state as long as it's\n+      --  not in \"User\" state.  Check for Unreserve_All_Interrupts last\n+\n+      if State (SIGINT) /= User then\n+         Keep_Unmasked (SIGINT) := True;\n+      end if;\n+\n+      --  Check all signals for state that requires keeping them\n+      --  unmasked and reserved\n+\n+      for J in Interrupt_ID'Range loop\n+         if State (J) = Default or else State (J) = Runtime then\n+            Keep_Unmasked (J) := True;\n+            Reserve (J) := True;\n+         end if;\n+      end loop;\n \n-   --  By keeping SIGINT unmasked, allow the user to do a Ctrl-C, but in the\n-   --  same time, disable the ability of handling this signal via\n-   --  Ada.Interrupts.\n-   --  The pragma Unreserve_All_Interrupts let the user the ability to\n-   --  change this behavior.\n+      --  Process pragma Unreserve_All_Interrupts. This overrides any\n+      --  settings due to pragma Interrupt_State:\n \n-   if Unreserve_All_Interrupts = 0 then\n-      Keep_Unmasked (SIGINT) := True;\n-   end if;\n+      if Unreserve_All_Interrupts /= 0 then\n+         Keep_Unmasked (SIGINT) := False;\n+         Reserve (SIGINT) := False;\n+      end if;\n \n-   Keep_Unmasked (Abort_Task_Interrupt) := True;\n+      --  We do not have Signal 0 in reality. We just use this value\n+      --  to identify not existing signals (see s-intnam.ads). Therefore,\n+      --  Signal 0 should not be used in all signal related operations hence\n+      --  mark it as reserved.\n \n-   Reserve := Keep_Unmasked or Keep_Masked;\n-   Reserve (0) := True;\n+      Reserve (0) := True;\n+   end;\n end System.Interrupt_Management;"}, {"sha": "9c4c616dfa2c3924ecca79a822f3e5a0a8199c1f", "filename": "gcc/ada/5fosinte.adb", "status": "added", "additions": 120, "deletions": 0, "changes": 120, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5fosinte.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5fosinte.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5fosinte.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -0,0 +1,120 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                GNU ADA RUN-TIME LIBRARY (GNARL) COMPONENTS               --\n+--                                                                          --\n+--                   S Y S T E M . O S _ I N T E R F A C E                  --\n+--                                                                          --\n+--                                  B o d y                                 --\n+--                                                                          --\n+--         Copyright (C) 1992-2002, Free Software Foundation, Inc.          --\n+--                                                                          --\n+-- GNARL is free software; you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion. GNARL is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNARL; see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNARL was developed by the GNARL team at Florida State University.       --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This is the IRIX version of this package.\n+\n+--  This package encapsulates all direct interfaces to OS services\n+--  that are needed by children of System.\n+\n+pragma Polling (Off);\n+--  Turn off polling, we do not want ATC polling to take place during\n+--  tasking operations. It causes infinite loops and other problems.\n+\n+with Interfaces.C; use Interfaces.C;\n+\n+package body System.OS_Interface is\n+\n+   ------------------\n+   -- pthread_init --\n+   ------------------\n+\n+   procedure pthread_init is\n+   begin\n+      null;\n+   end pthread_init;\n+\n+   -----------------\n+   -- To_Duration --\n+   -----------------\n+\n+   function To_Duration (TS : timespec) return Duration is\n+   begin\n+      return Duration (TS.tv_sec) + Duration (TS.tv_nsec) / 10#1#E9;\n+   end To_Duration;\n+\n+   function To_Duration (TV : struct_timeval) return Duration is\n+   begin\n+      return Duration (TV.tv_sec) + Duration (TV.tv_usec) / 10#1#E6;\n+   end To_Duration;\n+\n+   -----------------\n+   -- To_Timespec --\n+   -----------------\n+\n+   function To_Timespec (D : Duration) return timespec is\n+      S : time_t;\n+      F : Duration;\n+\n+   begin\n+      S := time_t (Long_Long_Integer (D));\n+      F := D - Duration (S);\n+\n+      --  If F has negative value due to a round-up, adjust for positive F\n+      --  value.\n+\n+      if F < 0.0 then\n+         S := S - 1;\n+         F := F + 1.0;\n+      end if;\n+\n+      return timespec'(tv_sec => S,\n+                       tv_nsec => long (Long_Long_Integer (F * 10#1#E9)));\n+   end To_Timespec;\n+\n+   ----------------\n+   -- To_Timeval --\n+   ----------------\n+\n+   function To_Timeval (D : Duration) return struct_timeval is\n+      S : time_t;\n+      F : Duration;\n+\n+   begin\n+      S := time_t (Long_Long_Integer (D));\n+      F := D - Duration (S);\n+\n+      --  If F has negative value due to a round-up, adjust for positive F\n+      --  value.\n+\n+      if F < 0.0 then\n+         S := S - 1;\n+         F := F + 1.0;\n+      end if;\n+\n+      return\n+        struct_timeval'\n+          (tv_sec => S,\n+           tv_usec => time_t (Long_Long_Integer (F * 10#1#E6)));\n+   end To_Timeval;\n+\n+end System.OS_Interface;"}, {"sha": "ef3f9941d0a171c25f16e54cd35cf557cabefc45", "filename": "gcc/ada/5fosinte.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5fosinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5fosinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5fosinte.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -27,7 +27,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "05351d8e932d197f63e0203ffba83036b9fa8072", "filename": "gcc/ada/5fsystem.ads", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5fsystem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5fsystem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5fsystem.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -118,24 +118,35 @@ private\n    Backend_Divide_Checks     : constant Boolean := False;\n    Backend_Overflow_Checks   : constant Boolean := False;\n    Command_Line_Args         : constant Boolean := True;\n+   Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := False;\n+   Duration_32_Bits          : constant Boolean := False;\n    Exit_Status_Supported     : constant Boolean := True;\n    Fractional_Fixed_Ops      : constant Boolean := False;\n    Frontend_Layout           : constant Boolean := False;\n    Functions_Return_By_DSP   : constant Boolean := True;\n-   Long_Shifts_Inlined       : constant Boolean := True;\n-   High_Integrity_Mode       : constant Boolean := False;\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := False;\n    Stack_Check_Probes        : constant Boolean := True;\n+   Support_64_Bit_Divides    : constant Boolean := True;\n+   Support_Aggregates        : constant Boolean := True;\n+   Support_Composite_Assign  : constant Boolean := True;\n+   Support_Composite_Compare : constant Boolean := True;\n+   Support_Long_Shifts       : constant Boolean := True;\n+   Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n    GCC_ZCX_Support           : constant Boolean := False;\n    Front_End_ZCX_Support     : constant Boolean := True;\n \n+   --  Obsolete entries, to be removed eventually (bootstrap issues!)\n+\n+   High_Integrity_Mode       : constant Boolean := False;\n+   Long_Shifts_Inlined       : constant Boolean := True;\n+\n    --  Note: Denorm is False because denormals are not supported on the\n    --  R10000, and we want the code to be valid for this processor.\n "}, {"sha": "af9ecb59c225918ba9871c9b292e24f744b75f50", "filename": "gcc/ada/5ftaprop.adb", "status": "modified", "additions": 164, "deletions": 40, "changes": 204, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5ftaprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5ftaprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5ftaprop.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2001, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2003, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -111,14 +111,14 @@ package body System.Task_Primitives.Operations is\n    --  The followings are logically constants, but need to be initialized\n    --  at run time.\n \n-   ATCB_Key : aliased pthread_key_t;\n-   --  Key used to find the Ada Task_ID associated with a thread\n-\n    Single_RTS_Lock : aliased RTS_Lock;\n    --  This is a lock to allow only one thread of control in the RTS at\n    --  a time; it is used to execute in mutual exclusion from all other tasks.\n    --  Used mainly in Single_Lock mode, but also to protect All_Tasks_List\n \n+   ATCB_Key : aliased pthread_key_t;\n+   --  Key used to find the Ada Task_ID associated with a thread\n+\n    Environment_Task_ID : Task_ID;\n    --  A variable to hold Task_ID for the environment task.\n \n@@ -129,26 +129,74 @@ package body System.Task_Primitives.Operations is\n \n    Unblocked_Signal_Mask : aliased sigset_t;\n \n+   Foreign_Task_Elaborated : aliased Boolean := True;\n+   --  Used to identified fake tasks (i.e., non-Ada Threads).\n+\n+   --------------------\n+   -- Local Packages --\n+   --------------------\n+\n+   package Specific is\n+\n+      procedure Initialize (Environment_Task : Task_ID);\n+      pragma Inline (Initialize);\n+      --  Initialize various data needed by this package.\n+\n+      function Is_Valid_Task return Boolean;\n+      pragma Inline (Is_Valid_Task);\n+      --  Does executing thread have a TCB?\n+\n+      procedure Set (Self_Id : Task_ID);\n+      pragma Inline (Set);\n+      --  Set the self id for the current task.\n+\n+      function Self return Task_ID;\n+      pragma Inline (Self);\n+      --  Return a pointer to the Ada Task Control Block of the calling task.\n+\n+   end Specific;\n+\n+   package body Specific is separate;\n+   --  The body of this package is target specific.\n+\n+   ---------------------------------\n+   -- Support for foreign threads --\n+   ---------------------------------\n+\n+   function Register_Foreign_Thread (Thread : Thread_Id) return Task_ID;\n+   --  Allocate and Initialize a new ATCB for the current Thread.\n+\n+   function Register_Foreign_Thread\n+     (Thread : Thread_Id) return Task_ID is separate;\n+\n    -----------------------\n    -- Local Subprograms --\n    -----------------------\n \n-   function To_Task_ID is new Unchecked_Conversion (System.Address, Task_ID);\n-\n    function To_Address is new Unchecked_Conversion (Task_ID, System.Address);\n \n    procedure Abort_Handler (Sig : Signal);\n+   --  Signal handler used to implement asynchronous abort.\n \n    -------------------\n    -- Abort_Handler --\n    -------------------\n \n    procedure Abort_Handler (Sig : Signal) is\n-      T       : Task_ID := Self;\n+      pragma Unreferenced (Sig);\n+\n+      T       : constant Task_ID := Self;\n       Result  : Interfaces.C.int;\n       Old_Set : aliased sigset_t;\n \n    begin\n+      --  It is not safe to raise an exception when using ZCX and the GCC\n+      --  exception handling mechanism.\n+\n+      if ZCX_By_Default and then GCC_ZCX_Support then\n+         return;\n+      end if;\n+\n       if T.Deferral_Level = 0\n         and then T.Pending_ATC_Level < T.ATC_Nesting_Level\n       then\n@@ -172,6 +220,9 @@ package body System.Task_Primitives.Operations is\n    --  bottom of a thread stack, so nothing is needed.\n \n    procedure Stack_Guard (T : ST.Task_ID; On : Boolean) is\n+      pragma Unreferenced (On);\n+      pragma Unreferenced (T);\n+\n    begin\n       null;\n    end Stack_Guard;\n@@ -189,15 +240,7 @@ package body System.Task_Primitives.Operations is\n    -- Self --\n    ----------\n \n-   function Self return Task_ID is\n-      Result : System.Address;\n-\n-   begin\n-      Result := pthread_getspecific (ATCB_Key);\n-      pragma Assert (Result /= System.Null_Address);\n-\n-      return To_Task_ID (Result);\n-   end Self;\n+   function Self return Task_ID renames Specific.Self;\n \n    ---------------------\n    -- Initialize_Lock --\n@@ -248,6 +291,8 @@ package body System.Task_Primitives.Operations is\n    end Initialize_Lock;\n \n    procedure Initialize_Lock (L : access RTS_Lock; Level : Lock_Level) is\n+      pragma Unreferenced (Level);\n+\n       Attributes : aliased pthread_mutexattr_t;\n       Result : Interfaces.C.int;\n \n@@ -351,13 +396,15 @@ package body System.Task_Primitives.Operations is\n \n    procedure Unlock (L : access Lock) is\n       Result : Interfaces.C.int;\n+\n    begin\n       Result := pthread_mutex_unlock (L);\n       pragma Assert (Result = 0);\n    end Unlock;\n \n    procedure Unlock (L : access RTS_Lock; Global_Lock : Boolean := False) is\n       Result : Interfaces.C.int;\n+\n    begin\n       if not Single_Lock or else Global_Lock then\n          Result := pthread_mutex_unlock (L);\n@@ -367,6 +414,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Unlock (T : Task_ID) is\n       Result : Interfaces.C.int;\n+\n    begin\n       if not Single_Lock then\n          Result := pthread_mutex_unlock (T.Common.LL.L'Access);\n@@ -382,7 +430,10 @@ package body System.Task_Primitives.Operations is\n      (Self_ID : ST.Task_ID;\n       Reason  : System.Tasking.Task_States)\n    is\n+      pragma Unreferenced (Reason);\n+\n       Result : Interfaces.C.int;\n+\n    begin\n       if Single_Lock then\n          Result := pthread_cond_wait\n@@ -409,6 +460,8 @@ package body System.Task_Primitives.Operations is\n       Timedout : out Boolean;\n       Yielded  : out Boolean)\n    is\n+      pragma Unreferenced (Reason);\n+\n       Check_Time : constant Duration := Monotonic_Clock;\n       Abs_Time   : Duration;\n       Request    : aliased timespec;\n@@ -560,7 +613,10 @@ package body System.Task_Primitives.Operations is\n    ------------\n \n    procedure Wakeup (T : ST.Task_ID; Reason : System.Tasking.Task_States) is\n+      pragma Unreferenced (Reason);\n+\n       Result : Interfaces.C.int;\n+\n    begin\n       Result := pthread_cond_signal (T.Common.LL.CV'Access);\n       pragma Assert (Result = 0);\n@@ -572,6 +628,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Yield (Do_Yield : Boolean := True) is\n       Result : Interfaces.C.int;\n+\n    begin\n       if Do_Yield then\n          Result := sched_yield;\n@@ -587,6 +644,8 @@ package body System.Task_Primitives.Operations is\n       Prio                : System.Any_Priority;\n       Loss_Of_Inheritance : Boolean := False)\n    is\n+      pragma Unreferenced (Loss_Of_Inheritance);\n+\n       Result       : Interfaces.C.int;\n       Param        : aliased struct_sched_param;\n       Sched_Policy : Interfaces.C.int;\n@@ -634,8 +693,7 @@ package body System.Task_Primitives.Operations is\n \n    begin\n       Self_ID.Common.LL.Thread := pthread_self;\n-      Result := pthread_setspecific (ATCB_Key, To_Address (Self_ID));\n-      pragma Assert (Result = 0);\n+      Specific.Set (Self_ID);\n \n       if Self_ID.Common.Task_Info /= null\n         and then Self_ID.Common.Task_Info.Scope = PTHREAD_SCOPE_SYSTEM\n@@ -668,6 +726,25 @@ package body System.Task_Primitives.Operations is\n       return new Ada_Task_Control_Block (Entry_Num);\n    end New_ATCB;\n \n+   -------------------\n+   -- Is_Valid_Task --\n+   -------------------\n+\n+   function Is_Valid_Task return Boolean renames Specific.Is_Valid_Task;\n+\n+   -----------------------------\n+   -- Register_Foreign_Thread --\n+   -----------------------------\n+\n+   function Register_Foreign_Thread return Task_ID is\n+   begin\n+      if Is_Valid_Task then\n+         return Self;\n+      else\n+         return Register_Foreign_Thread (pthread_self);\n+      end if;\n+   end Register_Foreign_Thread;\n+\n    --------------------\n    -- Initialize_TCB --\n    --------------------\n@@ -759,7 +836,7 @@ package body System.Task_Primitives.Operations is\n       pragma Assert (Result = 0);\n \n       Result := pthread_attr_setstacksize\n-        (Attributes'Access, Interfaces.C.size_t (Adjusted_Stack_Size));\n+        (Attributes'Access, Adjusted_Stack_Size);\n       pragma Assert (Result = 0);\n \n       if T.Common.Task_Info /= null then\n@@ -807,7 +884,7 @@ package body System.Task_Primitives.Operations is\n          System.IO.Put_Line\n            (\"Request for PTHREAD_SCOPE_SYSTEM in Task_Info pragma for task\");\n          System.IO.Put (\"\"\"\");\n-         System.IO.Put (T.Common.Task_Image.all);\n+         System.IO.Put (T.Common.Task_Image (1 .. T.Common.Task_Image_Len));\n          System.IO.Put_Line (\"\"\" could not be honored. \");\n          System.IO.Put_Line (\"Scope changed to PTHREAD_SCOPE_PROCESS\");\n \n@@ -827,7 +904,14 @@ package body System.Task_Primitives.Operations is\n \n       Succeeded := Result = 0;\n \n-      Set_Priority (T, Priority);\n+      --  The following needs significant commenting ???\n+\n+      if T.Common.Task_Info /= null then\n+         T.Common.Base_Priority := T.Common.Task_Info.Priority;\n+         Set_Priority (T, T.Common.Task_Info.Priority);\n+      else\n+         Set_Priority (T, Priority);\n+      end if;\n \n       Result := pthread_attr_destroy (Attributes'Access);\n       pragma Assert (Result = 0);\n@@ -840,6 +924,7 @@ package body System.Task_Primitives.Operations is\n    procedure Finalize_TCB (T : Task_ID) is\n       Result : Interfaces.C.int;\n       Tmp    : Task_ID := T;\n+      Is_Self : constant Boolean := T = Self;\n \n       procedure Free is new\n         Unchecked_Deallocation (Ada_Task_Control_Block, Task_ID);\n@@ -858,6 +943,12 @@ package body System.Task_Primitives.Operations is\n       end if;\n \n       Free (Tmp);\n+\n+      if Is_Self then\n+         Result := pthread_setspecific (ATCB_Key, System.Null_Address);\n+         pragma Assert (Result = 0);\n+      end if;\n+\n    end Finalize_TCB;\n \n    ---------------\n@@ -866,7 +957,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Exit_Task is\n    begin\n-      pthread_exit (System.Null_Address);\n+      Specific.Set (null);\n    end Exit_Task;\n \n    ----------------\n@@ -875,6 +966,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Abort_Task (T : Task_ID) is\n       Result : Interfaces.C.int;\n+\n    begin\n       Result := pthread_kill (T.Common.LL.Thread,\n         Signal (System.Interrupt_Management.Abort_Task_Interrupt));\n@@ -885,10 +977,11 @@ package body System.Task_Primitives.Operations is\n    -- Check_Exit --\n    ----------------\n \n-   --  Dummy versions. The only currently working versions is for solaris\n-   --  (native).\n+   --  Dummy version\n \n    function Check_Exit (Self_ID : ST.Task_ID) return Boolean is\n+      pragma Unreferenced (Self_ID);\n+\n    begin\n       return True;\n    end Check_Exit;\n@@ -898,6 +991,8 @@ package body System.Task_Primitives.Operations is\n    --------------------\n \n    function Check_No_Locks (Self_ID : ST.Task_ID) return Boolean is\n+      pragma Unreferenced (Self_ID);\n+\n    begin\n       return True;\n    end Check_No_Locks;\n@@ -935,7 +1030,12 @@ package body System.Task_Primitives.Operations is\n \n    function Suspend_Task\n      (T           : ST.Task_ID;\n-      Thread_Self : Thread_Id) return Boolean is\n+      Thread_Self : Thread_Id)\n+      return        Boolean\n+   is\n+      pragma Unreferenced (T);\n+      pragma Unreferenced (Thread_Self);\n+\n    begin\n       return False;\n    end Suspend_Task;\n@@ -946,7 +1046,12 @@ package body System.Task_Primitives.Operations is\n \n    function Resume_Task\n      (T           : ST.Task_ID;\n-      Thread_Self : Thread_Id) return Boolean is\n+      Thread_Self : Thread_Id)\n+      return        Boolean\n+   is\n+      pragma Unreferenced (T);\n+      pragma Unreferenced (Thread_Self);\n+\n    begin\n       return False;\n    end Resume_Task;\n@@ -961,34 +1066,56 @@ package body System.Task_Primitives.Operations is\n       Tmp_Set : aliased sigset_t;\n       Result  : Interfaces.C.int;\n \n+      function State (Int : System.Interrupt_Management.Interrupt_ID)\n+                     return Character;\n+      pragma Import (C, State, \"__gnat_get_interrupt_state\");\n+      --  Get interrupt state.  Defined in a-init.c\n+      --  The input argument is the interrupt number,\n+      --  and the result is one of the following:\n+\n+      Default : constant Character := 's';\n+      --    'n'   this interrupt not set by any Interrupt_State pragma\n+      --    'u'   Interrupt_State pragma set state to User\n+      --    'r'   Interrupt_State pragma set state to Runtime\n+      --    's'   Interrupt_State pragma set state to System (use \"default\"\n+      --           system handler)\n+\n    begin\n       Environment_Task_ID := Environment_Task;\n \n       --  Initialize the lock used to synchronize chain of all ATCBs.\n+\n       Initialize_Lock (Single_RTS_Lock'Access, RTS_Lock_Level);\n \n+      Specific.Initialize (Environment_Task);\n+\n       Enter_Task (Environment_Task);\n \n       --  Install the abort-signal handler\n \n-      act.sa_flags := 0;\n-      act.sa_handler := Abort_Handler'Address;\n+      if State (System.Interrupt_Management.Abort_Task_Interrupt)\n+                                                        /= Default\n+      then\n+         act.sa_flags := 0;\n+         act.sa_handler := Abort_Handler'Address;\n \n-      Result := sigemptyset (Tmp_Set'Access);\n-      pragma Assert (Result = 0);\n-      act.sa_mask := Tmp_Set;\n+         Result := sigemptyset (Tmp_Set'Access);\n+         pragma Assert (Result = 0);\n+         act.sa_mask := Tmp_Set;\n \n-      Result :=\n-        sigaction (\n-          Signal (System.Interrupt_Management.Abort_Task_Interrupt),\n-          act'Unchecked_Access,\n-          old_act'Unchecked_Access);\n-      pragma Assert (Result = 0);\n+         Result :=\n+           sigaction (\n+             Signal (System.Interrupt_Management.Abort_Task_Interrupt),\n+             act'Unchecked_Access,\n+             old_act'Unchecked_Access);\n+         pragma Assert (Result = 0);\n+      end if;\n    end Initialize;\n \n begin\n    declare\n       Result : Interfaces.C.int;\n+\n    begin\n       --  Mask Environment task for all signals. The original mask of the\n       --  Environment task will be recovered by Interrupt_Server task\n@@ -1009,9 +1136,6 @@ begin\n          end if;\n       end loop;\n \n-      Result := pthread_key_create (ATCB_Key'Access, null);\n-      pragma Assert (Result = 0);\n-\n       --  Pick the highest resolution Clock for Clock_Realtime\n       --  ??? This code currently doesn't work (see c94007[ab] for example)\n       --"}, {"sha": "2954f8ee66cd3bcacc94b9001572da21b4c1981b", "filename": "gcc/ada/5ftasinf.ads", "status": "modified", "additions": 10, "deletions": 14, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5ftasinf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5ftasinf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5ftasinf.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -5,9 +5,8 @@\n --                     S Y S T E M . T A S K _ I N F O                      --\n --                                                                          --\n --                                 S p e c                                  --\n---                           (Compiler Interface)                           --\n --                                                                          --\n---          Copyright (C) 1992-2000 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -33,19 +32,23 @@\n ------------------------------------------------------------------------------\n \n --  This package contains the definitions and routines associated with the\n---  implementation of the Task_Info pragma. It is specialized appropriately\n---  for targets that make use of this pragma.\n+--  implementation and use of the Task_Info pragma. It is specialized\n+--  appropriately for targets that make use of this pragma.\n \n --  Note: the compiler generates direct calls to this interface, via Rtsfind.\n --  Any changes to this interface may require corresponding compiler changes.\n \n+--  This unit may be used directly from an application program by providing\n+--  an appropriate WITH, and the interface can be expected to remain stable.\n+\n+--  This is the IRIX (kernel threads) version of this package\n+\n with Interfaces.C;\n with System.OS_Interface;\n-with Unchecked_Deallocation;\n \n package System.Task_Info is\n-pragma Elaborate_Body;\n---  To ensure that a body is allowed\n+   pragma Elaborate_Body;\n+   --  To ensure that a body is allowed\n \n    package OSI renames System.OS_Interface;\n \n@@ -127,13 +130,6 @@ pragma Elaborate_Body;\n \n    type Task_Info_Type is access all Thread_Attributes;\n \n-   type Task_Image_Type is access String;\n-   --  Used to generate a meaningful identifier for tasks that are variables\n-   --  and components of variables.\n-\n-   procedure Free_Task_Image is new\n-     Unchecked_Deallocation (String, Task_Image_Type);\n-\n    Unspecified_Task_Info : constant Task_Info_Type := null;\n    --  Value passed to task in the absence of a Task_Info pragma\n "}, {"sha": "b2a861ae02944fcd39d428528ea633cdc0c63899", "filename": "gcc/ada/5ginterr.adb", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5ginterr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5ginterr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5ginterr.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---              Copyright (C) 1998-2001 Free Software Fundation             --\n+--              Copyright (C) 1998-2002 Free Software Fundation             --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -27,7 +27,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n@@ -244,7 +244,11 @@ package body System.Interrupts is\n    -------------------------------------\n \n    function Has_Interrupt_Or_Attach_Handler\n-     (Object : access Dynamic_Interrupt_Protection) return Boolean is\n+     (Object : access Dynamic_Interrupt_Protection)\n+      return   Boolean\n+   is\n+      pragma Unreferenced (Object);\n+\n    begin\n       return True;\n    end Has_Interrupt_Or_Attach_Handler;\n@@ -278,6 +282,8 @@ package body System.Interrupts is\n      (Object : access Static_Interrupt_Protection)\n       return   Boolean\n    is\n+      pragma Unreferenced (Object);\n+\n    begin\n       return True;\n    end Has_Interrupt_Or_Attach_Handler;\n@@ -288,7 +294,7 @@ package body System.Interrupts is\n \n    procedure Install_Handlers\n      (Object       : access Static_Interrupt_Protection;\n-      New_Handlers : in New_Handler_Array)\n+      New_Handlers : New_Handler_Array)\n    is\n    begin\n       for N in New_Handlers'Range loop"}, {"sha": "57771303f16fdee6022b66480325d15c092e4fb2", "filename": "gcc/ada/5gintman.adb", "status": "modified", "additions": 84, "deletions": 13, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5gintman.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5gintman.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5gintman.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,8 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---            Copyright (C) 1997-1998, Florida State University             --\n+--             Copyright (C) 1991-1994, Florida State University            --\n+--             Copyright (C) 1995-2003, Ada Core Technologies               --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,9 +27,8 @@\n -- however invalidate  any other reasons why  the executable file  might be --\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University. It is --\n--- now maintained by Ada Core Technologies Inc. in cooperation with Florida --\n--- State University (http://www.gnat.com).                                  --\n+-- GNARL was developed by the GNARL team at Florida State University.       --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n@@ -40,12 +40,15 @@\n --  Make a careful study of all signals available under the OS,\n --  to see which need to be reserved, kept always unmasked,\n --  or kept always unmasked.\n+\n --  Be on the lookout for special signals that\n --  may be used by the thread library.\n \n with System.OS_Interface;\n --  used for various Constants, Signal and types\n \n+with Interfaces.C;\n+--  used for \"int\"\n package body System.Interrupt_Management is\n \n    use System.OS_Interface;\n@@ -75,6 +78,10 @@ package body System.Interrupt_Management is\n    --                 unnamed signal number 48 for pthread_kill!\n    --\n \n+   Unreserve_All_Interrupts : Interfaces.C.int;\n+   pragma Import\n+     (C, Unreserve_All_Interrupts, \"__gl_unreserve_all_interrupts\");\n+\n    ----------------------\n    -- Notify_Exception --\n    ----------------------\n@@ -98,16 +105,80 @@ package body System.Interrupt_Management is\n    end Initialize_Interrupts;\n \n begin\n-   Abort_Task_Interrupt := Abort_Signal;\n+   declare\n+      function State (Int : Interrupt_ID) return Character;\n+      pragma Import (C, State, \"__gnat_get_interrupt_state\");\n+      --  Get interrupt state.  Defined in a-init.c\n+      --  The input argument is the interrupt number,\n+      --  and the result is one of the following:\n+\n+      User    : constant Character := 'u';\n+      Runtime : constant Character := 'r';\n+      Default : constant Character := 's';\n+      --    'n'   this interrupt not set by any Interrupt_State pragma\n+      --    'u'   Interrupt_State pragma set state to User\n+      --    'r'   Interrupt_State pragma set state to Runtime\n+      --    's'   Interrupt_State pragma set state to System (use \"default\"\n+      --           system handler)\n+\n+      use Interfaces.C;\n+\n+   begin\n+      Abort_Task_Interrupt := Abort_Signal;\n+\n+      pragma Assert (Keep_Unmasked = (Interrupt_ID'Range => False));\n+      pragma Assert (Reserve = (Interrupt_ID'Range => False));\n+\n+      --  Process state of exception signals\n+\n+      for J in Exception_Interrupts'Range loop\n+         if State (Exception_Interrupts (J)) /= User then\n+            Keep_Unmasked (Exception_Interrupts (J)) := True;\n+            Reserve (Exception_Interrupts (J)) := True;\n+         end if;\n+      end loop;\n+\n+      if State (Abort_Task_Interrupt) /= User then\n+         Keep_Unmasked (Abort_Task_Interrupt) := True;\n+         Reserve (Abort_Task_Interrupt) := True;\n+      end if;\n+\n+      --  Set SIGINT to unmasked state as long as it's\n+      --  not in \"User\" state.  Check for Unreserve_All_Interrupts last\n+\n+      if State (SIGINT) /= User then\n+         Keep_Unmasked (SIGINT) := True;\n+      end if;\n+\n+      --  Check all signals for state that requires keeping them\n+      --  unmasked and reserved\n+\n+      for J in Interrupt_ID'Range loop\n+         if State (J) = Default or else State (J) = Runtime then\n+            Keep_Unmasked (J) := True;\n+            Reserve (J) := True;\n+         end if;\n+      end loop;\n+\n+      --  Add target-specific reserved signals\n+\n+      for J in Reserved_Interrupts'Range loop\n+         Reserve (Interrupt_ID (Reserved_Interrupts (J))) := True;\n+      end loop;\n+\n+      --  Process pragma Unreserve_All_Interrupts. This overrides any\n+      --  settings due to pragma Interrupt_State:\n \n-   for I in Reserved_Interrupts'Range loop\n-      Keep_Unmasked (Reserved_Interrupts (I)) := True;\n-      Reserve (Reserved_Interrupts (I)) := True;\n-   end loop;\n+      if Unreserve_All_Interrupts /= 0 then\n+         Keep_Unmasked (SIGINT) := False;\n+         Reserve (SIGINT) := False;\n+      end if;\n \n-   for I in Exception_Interrupts'Range loop\n-      Keep_Unmasked (Exception_Interrupts (I)) := True;\n-      Reserve (Reserved_Interrupts (I)) := True;\n-   end loop;\n+      --  We do not have Signal 0 in reality. We just use this value\n+      --  to identify not existing signals (see s-intnam.ads). Therefore,\n+      --  Signal 0 should not be used in all signal related operations hence\n+      --  mark it as reserved.\n \n+      Reserve (0) := True;\n+   end;\n end System.Interrupt_Management;"}, {"sha": "7f6785cba12f54877af434337d94279a5db6060f", "filename": "gcc/ada/5gmastop.adb", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5gmastop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5gmastop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5gmastop.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -7,7 +7,7 @@\n --                                 B o d y                                  --\n --                         (Version for IRIX/MIPS)                          --\n --                                                                          --\n---          Copyright (C) 1999-2001 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1999-2003 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -183,6 +183,8 @@ package body System.Machine_State_Operations is\n    -------------------\n \n    procedure Enter_Handler (M : Machine_State; Handler : Handler_Loc) is\n+      pragma Warnings (Off, M);\n+      pragma Warnings (Off, Handler);\n \n       LOADI : constant String (1 .. 2) := 'l' & LSC;\n       --  This is \"lw\" in o32 mode, and \"ld\" in n32/n64 mode\n@@ -282,6 +284,8 @@ package body System.Machine_State_Operations is\n      (M    : Machine_State;\n       Info : Subprogram_Info_Type)\n    is\n+      pragma Warnings (Off, Info);\n+\n       Scp : Sigcontext_Ptr := To_Sigcontext_Ptr (M);\n \n       procedure Exc_Unwind (Scp : Sigcontext_Ptr; Fde : Long_Integer := 0);\n@@ -406,7 +410,11 @@ package body System.Machine_State_Operations is\n \n    procedure Set_Signal_Machine_State\n      (M       : Machine_State;\n-      Context : System.Address) is\n+      Context : System.Address)\n+   is\n+      pragma Warnings (Off, M);\n+      pragma Warnings (Off, Context);\n+\n    begin\n       null;\n    end Set_Signal_Machine_State;"}, {"sha": "027ae8a8684af0d47b292e5e4602231ade12726d", "filename": "gcc/ada/5gml-tgt.adb", "status": "added", "additions": 368, "deletions": 0, "changes": 368, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5gml-tgt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5gml-tgt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5gml-tgt.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -0,0 +1,368 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--                             M L I B . T G T                              --\n+--                              (IRIX Version)                              --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--              Copyright (C) 2003, Ada Core Technologies, Inc.             --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This package provides a set of target dependent routines to build\n+--  static, dynamic and shared libraries.\n+\n+--  This is the IRIX version of the body.\n+\n+with MLib.Fil;\n+with MLib.Utl;\n+with Namet;  use Namet;\n+with Opt;\n+with Output; use Output;\n+with Prj.Com;\n+with System;\n+\n+package body MLib.Tgt is\n+\n+   No_Arguments        : aliased Argument_List         := (1 .. 0 => null);\n+   Empty_Argument_List : constant Argument_List_Access := No_Arguments'Access;\n+\n+   Wl_Init_String : aliased String         := \"-Wl,-init\";\n+   Wl_Init        : constant String_Access := Wl_Init_String'Access;\n+   Wl_Fini_String : aliased String         := \"-Wl,-fini\";\n+   Wl_Fini        : constant String_Access := Wl_Fini_String'Access;\n+\n+   Init_Fini_List :  constant Argument_List_Access :=\n+                       new Argument_List'(1 => Wl_Init,\n+                                          2 => null,\n+                                          3 => Wl_Fini,\n+                                          4 => null);\n+   --  Used to put switches for automatic elaboration/finalization\n+\n+   ---------------------\n+   -- Archive_Builder --\n+   ---------------------\n+\n+   function Archive_Builder return String is\n+   begin\n+      return \"ar\";\n+   end Archive_Builder;\n+\n+   -----------------------------\n+   -- Archive_Builder_Options --\n+   -----------------------------\n+\n+   function Archive_Builder_Options return String_List_Access is\n+   begin\n+      return new String_List'(1 => new String'(\"cr\"));\n+   end Archive_Builder_Options;\n+\n+   -----------------\n+   -- Archive_Ext --\n+   -----------------\n+\n+   function Archive_Ext return String is\n+   begin\n+      return \"a\";\n+   end Archive_Ext;\n+\n+   ---------------------\n+   -- Archive_Indexer --\n+   ---------------------\n+\n+   function Archive_Indexer return String is\n+   begin\n+      return \"ranlib\";\n+   end Archive_Indexer;\n+\n+   ---------------------------\n+   -- Build_Dynamic_Library --\n+   ---------------------------\n+\n+   procedure Build_Dynamic_Library\n+     (Ofiles       : Argument_List;\n+      Foreign      : Argument_List;\n+      Afiles       : Argument_List;\n+      Options      : Argument_List;\n+      Interfaces   : Argument_List;\n+      Lib_Filename : String;\n+      Lib_Dir      : String;\n+      Driver_Name  : Name_Id := No_Name;\n+      Lib_Address  : String  := \"\";\n+      Lib_Version  : String  := \"\";\n+      Relocatable  : Boolean := False;\n+      Auto_Init    : Boolean := False)\n+   is\n+      pragma Unreferenced (Foreign);\n+      pragma Unreferenced (Afiles);\n+      pragma Unreferenced (Interfaces);\n+      pragma Unreferenced (Lib_Address);\n+      pragma Unreferenced (Relocatable);\n+\n+      Lib_File : constant String :=\n+        Lib_Dir & Directory_Separator & \"lib\" &\n+        MLib.Fil.Ext_To (Lib_Filename, DLL_Ext);\n+\n+      Version_Arg          : String_Access;\n+      Symbolic_Link_Needed : Boolean := False;\n+\n+      Init_Fini : Argument_List_Access := Empty_Argument_List;\n+\n+   begin\n+      if Opt.Verbose_Mode then\n+         Write_Str (\"building relocatable shared library \");\n+         Write_Line (Lib_File);\n+      end if;\n+\n+      --  If specified, add automatic elaboration/finalization\n+      if Auto_Init then\n+         Init_Fini := Init_Fini_List;\n+         Init_Fini (2) := new String'(\"-Wl,\" & Lib_Filename & \"init\");\n+         Init_Fini (4) := new String'(\"-Wl,\" & Lib_Filename & \"final\");\n+      end if;\n+\n+      if Lib_Version = \"\" then\n+         MLib.Utl.Gcc\n+           (Output_File => Lib_File,\n+            Objects     => Ofiles,\n+            Options     => Options & Init_Fini.all,\n+            Driver_Name => Driver_Name);\n+\n+      else\n+         Version_Arg := new String'(\"-Wl,-soname,\" & Lib_Version);\n+\n+         if Is_Absolute_Path (Lib_Version) then\n+            MLib.Utl.Gcc\n+              (Output_File => Lib_Version,\n+               Objects     => Ofiles,\n+               Options     => Options & Version_Arg & Init_Fini.all,\n+               Driver_Name => Driver_Name);\n+            Symbolic_Link_Needed := Lib_Version /= Lib_File;\n+\n+         else\n+            MLib.Utl.Gcc\n+              (Output_File => Lib_Dir & Directory_Separator & Lib_Version,\n+               Objects     => Ofiles,\n+               Options     => Options & Version_Arg & Init_Fini.all,\n+               Driver_Name => Driver_Name);\n+            Symbolic_Link_Needed :=\n+              Lib_Dir & Directory_Separator & Lib_Version /= Lib_File;\n+         end if;\n+\n+         if Symbolic_Link_Needed then\n+            declare\n+               Success : Boolean;\n+               Oldpath : String (1 .. Lib_Version'Length + 1);\n+               Newpath : String (1 .. Lib_File'Length + 1);\n+               Result  : Integer;\n+\n+               function Symlink\n+                 (Oldpath : System.Address;\n+                  Newpath : System.Address)\n+                  return    Integer;\n+               pragma Import (C, Symlink, \"__gnat_symlink\");\n+\n+            begin\n+               Oldpath (1 .. Lib_Version'Length) := Lib_Version;\n+               Oldpath (Oldpath'Last)            := ASCII.NUL;\n+               Newpath (1 .. Lib_File'Length)    := Lib_File;\n+               Newpath (Newpath'Last)            := ASCII.NUL;\n+\n+               Delete_File (Lib_File, Success);\n+\n+               Result := Symlink (Oldpath'Address, Newpath'Address);\n+            end;\n+         end if;\n+      end if;\n+   end Build_Dynamic_Library;\n+\n+   -------------------------\n+   -- Default_DLL_Address --\n+   -------------------------\n+\n+   function Default_DLL_Address return String is\n+   begin\n+      return \"\";\n+   end Default_DLL_Address;\n+\n+   -------------\n+   -- DLL_Ext --\n+   -------------\n+\n+   function DLL_Ext return String is\n+   begin\n+      return \"so\";\n+   end DLL_Ext;\n+\n+   --------------------\n+   -- Dynamic_Option --\n+   --------------------\n+\n+   function Dynamic_Option return String is\n+   begin\n+      return \"-shared\";\n+   end Dynamic_Option;\n+\n+   -------------------\n+   -- Is_Object_Ext --\n+   -------------------\n+\n+   function Is_Object_Ext (Ext : String) return Boolean is\n+   begin\n+      return Ext = \".o\";\n+   end Is_Object_Ext;\n+\n+   --------------\n+   -- Is_C_Ext --\n+   --------------\n+\n+   function Is_C_Ext (Ext : String) return Boolean is\n+   begin\n+      return Ext = \".c\";\n+   end Is_C_Ext;\n+\n+   --------------------\n+   -- Is_Archive_Ext --\n+   --------------------\n+\n+   function Is_Archive_Ext (Ext : String) return Boolean is\n+   begin\n+      return Ext = \".a\" or else Ext = \".so\";\n+   end Is_Archive_Ext;\n+\n+   -------------\n+   -- Libgnat --\n+   -------------\n+\n+   function Libgnat return String is\n+   begin\n+      return \"libgnat.a\";\n+   end Libgnat;\n+\n+   ------------------------\n+   -- Library_Exists_For --\n+   ------------------------\n+\n+   function Library_Exists_For (Project : Project_Id) return Boolean is\n+   begin\n+      if not Projects.Table (Project).Library then\n+         Prj.Com.Fail (\"INTERNAL ERROR: Library_Exists_For called \" &\n+                       \"for non library project\");\n+         return False;\n+\n+      else\n+         declare\n+            Lib_Dir : constant String :=\n+              Get_Name_String (Projects.Table (Project).Library_Dir);\n+            Lib_Name : constant String :=\n+              Get_Name_String (Projects.Table (Project).Library_Name);\n+\n+         begin\n+            if Projects.Table (Project).Library_Kind = Static then\n+               return Is_Regular_File\n+                 (Lib_Dir & Directory_Separator & \"lib\" &\n+                  Fil.Ext_To (Lib_Name, Archive_Ext));\n+\n+            else\n+               return Is_Regular_File\n+                 (Lib_Dir & Directory_Separator & \"lib\" &\n+                  Fil.Ext_To (Lib_Name, DLL_Ext));\n+            end if;\n+         end;\n+      end if;\n+   end Library_Exists_For;\n+\n+   ---------------------------\n+   -- Library_File_Name_For --\n+   ---------------------------\n+\n+   function Library_File_Name_For (Project : Project_Id) return Name_Id is\n+   begin\n+      if not Projects.Table (Project).Library then\n+         Prj.Com.Fail (\"INTERNAL ERROR: Library_File_Name_For called \" &\n+                       \"for non library project\");\n+         return No_Name;\n+\n+      else\n+         declare\n+            Lib_Name : constant String :=\n+              Get_Name_String (Projects.Table (Project).Library_Name);\n+\n+         begin\n+            Name_Len := 3;\n+            Name_Buffer (1 .. Name_Len) := \"lib\";\n+\n+            if Projects.Table (Project).Library_Kind = Static then\n+               Add_Str_To_Name_Buffer (Fil.Ext_To (Lib_Name, Archive_Ext));\n+\n+            else\n+               Add_Str_To_Name_Buffer (Fil.Ext_To (Lib_Name, DLL_Ext));\n+            end if;\n+\n+            return Name_Find;\n+         end;\n+      end if;\n+   end Library_File_Name_For;\n+\n+   --------------------------------\n+   -- Linker_Library_Path_Option --\n+   --------------------------------\n+\n+   function Linker_Library_Path_Option return String_Access is\n+   begin\n+      return new String'(\"-Wl,-rpath,\");\n+   end Linker_Library_Path_Option;\n+\n+   ----------------\n+   -- Object_Ext --\n+   ----------------\n+\n+   function Object_Ext return String is\n+   begin\n+      return \"o\";\n+   end Object_Ext;\n+\n+   ----------------\n+   -- PIC_Option --\n+   ----------------\n+\n+   function PIC_Option return String is\n+   begin\n+      return \"-fPIC\";\n+   end PIC_Option;\n+\n+   -----------------------------------------------\n+   -- Standalone_Library_Auto_Init_Is_Supported --\n+   -----------------------------------------------\n+\n+   function Standalone_Library_Auto_Init_Is_Supported return Boolean is\n+   begin\n+      return True;\n+   end Standalone_Library_Auto_Init_Is_Supported;\n+\n+   ---------------------------\n+   -- Support_For_Libraries --\n+   ---------------------------\n+\n+   function Support_For_Libraries return Library_Support is\n+   begin\n+      return Full;\n+   end Support_For_Libraries;\n+\n+end MLib.Tgt;"}, {"sha": "17cf4505965b9c41f04474b533b31fbf1a8ee17d", "filename": "gcc/ada/5gosinte.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5gosinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5gosinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5gosinte.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -27,7 +27,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "a4259c3c916f22ced3f7fb9d9251e5bf631c093e", "filename": "gcc/ada/5gproinf.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5gproinf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5gproinf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5gproinf.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---               Copyright (C) 1997 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1997-2003 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -30,6 +30,7 @@\n -- Extensive contributions were provided by Ada Core Technologies Inc.      --\n --                                                                          --\n ------------------------------------------------------------------------------\n+\n --  This package contains the definitions and routines used as parameters\n --  to the run-time system at program startup for the SGI implementation.\n "}, {"sha": "c18318ca3647fe7e982de4b81171686a92c20780", "filename": "gcc/ada/5gsystem.ads", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5gsystem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5gsystem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5gsystem.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                           (SGI Irix, n32 ABI)                            --\n --                                                                          --\n---          Copyright (C) 1992-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -58,7 +58,7 @@ pragma Pure (System);\n    Max_Mantissa          : constant := 63;\n    Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n \n-   Tick                  : constant := 1.0;\n+   Tick                  : constant := 0.01;\n \n    --  Storage-related Declarations\n \n@@ -118,22 +118,34 @@ private\n    Backend_Divide_Checks     : constant Boolean := False;\n    Backend_Overflow_Checks   : constant Boolean := False;\n    Command_Line_Args         : constant Boolean := True;\n+   Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := False;\n+   Duration_32_Bits          : constant Boolean := False;\n+   Exit_Status_Supported     : constant Boolean := True;\n    Fractional_Fixed_Ops      : constant Boolean := False;\n    Frontend_Layout           : constant Boolean := False;\n    Functions_Return_By_DSP   : constant Boolean := True;\n-   Long_Shifts_Inlined       : constant Boolean := True;\n-   High_Integrity_Mode       : constant Boolean := False;\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := False;\n    Stack_Check_Probes        : constant Boolean := True;\n+   Support_64_Bit_Divides    : constant Boolean := True;\n+   Support_Aggregates        : constant Boolean := True;\n+   Support_Composite_Assign  : constant Boolean := True;\n+   Support_Composite_Compare : constant Boolean := True;\n+   Support_Long_Shifts       : constant Boolean := True;\n+   Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   ZCX_By_Default            : constant Boolean := True;\n+   ZCX_By_Default            : constant Boolean := False;\n    GCC_ZCX_Support           : constant Boolean := False;\n-   Front_End_ZCX_Support     : constant Boolean := True;\n+   Front_End_ZCX_Support     : constant Boolean := False;\n+\n+   --  Obsolete entries, to be removed eventually (bootstrap issues!)\n+\n+   High_Integrity_Mode       : constant Boolean := False;\n+   Long_Shifts_Inlined       : constant Boolean := True;\n \n    --  Note: Denorm is False because denormals are not supported on the\n    --  R10000, and we want the code to be valid for this processor."}, {"sha": "b9b88c3fb5d6b9c60e48c8763b1dc743810e11b1", "filename": "gcc/ada/5gtaprop.adb", "status": "modified", "additions": 61, "deletions": 14, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5gtaprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5gtaprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5gtaprop.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2001, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2003, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -96,9 +96,9 @@ package body System.Task_Primitives.Operations is\n \n    package SSL renames System.Soft_Links;\n \n-   ------------------\n-   --  Local Data  --\n-   ------------------\n+   -----------------\n+   -- Local Data  --\n+   -----------------\n \n    --  The followings are logically constants, but need to be initialized\n    --  at run time.\n@@ -212,6 +212,7 @@ package body System.Task_Primitives.Operations is\n    procedure Initialize_Lock (L : access RTS_Lock; Level : Lock_Level) is\n       Attributes : aliased pthread_mutexattr_t;\n       Result : Interfaces.C.int;\n+\n    begin\n       Result := pthread_mutexattr_init (Attributes'Access);\n \n@@ -265,6 +266,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Write_Lock (L : access Lock; Ceiling_Violation : out Boolean) is\n       Result : Interfaces.C.int;\n+\n    begin\n       Result := pthread_mutex_lock (L);\n \n@@ -276,6 +278,7 @@ package body System.Task_Primitives.Operations is\n      (L : access RTS_Lock; Global_Lock : Boolean := False)\n    is\n       Result : Interfaces.C.int;\n+\n    begin\n       if not Single_Lock or else Global_Lock then\n          Result := pthread_mutex_lock (L);\n@@ -285,6 +288,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Write_Lock (T : Task_ID) is\n       Result : Interfaces.C.int;\n+\n    begin\n       if not Single_Lock then\n          Result := pthread_mutex_lock (T.Common.LL.L'Access);\n@@ -307,13 +311,15 @@ package body System.Task_Primitives.Operations is\n \n    procedure Unlock (L : access Lock) is\n       Result : Interfaces.C.int;\n+\n    begin\n       Result := pthread_mutex_unlock (L);\n       pragma Assert (Result = 0);\n    end Unlock;\n \n    procedure Unlock (L : access RTS_Lock; Global_Lock : Boolean := False) is\n       Result : Interfaces.C.int;\n+\n    begin\n       if not Single_Lock or else Global_Lock then\n          Result := pthread_mutex_unlock (L);\n@@ -323,6 +329,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Unlock (T : Task_ID) is\n       Result : Interfaces.C.int;\n+\n    begin\n       if not Single_Lock then\n          Result := pthread_mutex_unlock (T.Common.LL.L'Access);\n@@ -339,6 +346,7 @@ package body System.Task_Primitives.Operations is\n       Reason   : System.Tasking.Task_States)\n    is\n       Result : Interfaces.C.int;\n+\n    begin\n       if Single_Lock then\n          Result := pthread_cond_wait\n@@ -349,6 +357,7 @@ package body System.Task_Primitives.Operations is\n       end if;\n \n       --  EINTR is not considered a failure.\n+\n       pragma Assert (Result = 0 or else Result = EINTR);\n    end Sleep;\n \n@@ -368,6 +377,7 @@ package body System.Task_Primitives.Operations is\n       Abs_Time   : Duration;\n       Request    : aliased struct_timeval;\n       Result     : Interfaces.C.int;\n+\n    begin\n       Timedout := True;\n       Yielded := False;\n@@ -427,7 +437,7 @@ package body System.Task_Primitives.Operations is\n    begin\n       --  Only the little window between deferring abort and\n       --  locking Self_ID is the reason we need to\n-      --  check for pending abort and priority change below! :(\n+      --  check for pending abort and priority change below!\n \n       SSL.Abort_Defer.all;\n \n@@ -524,6 +534,7 @@ package body System.Task_Primitives.Operations is\n       Reason : System.Tasking.Task_States)\n    is\n       Result : Interfaces.C.int;\n+\n    begin\n       Result := pthread_cond_signal (T.Common.LL.CV'Access);\n       pragma Assert (Result = 0);\n@@ -545,11 +556,14 @@ package body System.Task_Primitives.Operations is\n    ------------------\n \n    procedure Set_Priority\n-     (T : Task_ID;\n-      Prio : System.Any_Priority;\n+     (T                   : Task_ID;\n+      Prio                : System.Any_Priority;\n       Loss_Of_Inheritance : Boolean := False)\n    is\n+      pragma Unreferenced (Loss_Of_Inheritance);\n+\n       Result : Interfaces.C.int;\n+\n    begin\n       T.Common.Current_Priority := Prio;\n       Result := pthread_setprio (T.Common.LL.Thread, Interfaces.C.int (Prio));\n@@ -572,6 +586,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Enter_Task (Self_ID : Task_ID) is\n       Result : Interfaces.C.int;\n+\n    begin\n       Self_ID.Common.LL.Thread := pthread_self;\n       Self_ID.Common.LL.LWP := sproc_self;\n@@ -603,6 +618,24 @@ package body System.Task_Primitives.Operations is\n       return new Ada_Task_Control_Block (Entry_Num);\n    end New_ATCB;\n \n+   -------------------\n+   -- Is_Valid_Task --\n+   -------------------\n+\n+   function Is_Valid_Task return Boolean is\n+   begin\n+      return False;\n+   end Is_Valid_Task;\n+\n+   -----------------------------\n+   -- Register_Foreign_Thread --\n+   -----------------------------\n+\n+   function Register_Foreign_Thread return Task_ID is\n+   begin\n+      return null;\n+   end Register_Foreign_Thread;\n+\n    ----------------------\n    --  Initialize_TCB  --\n    ----------------------\n@@ -769,8 +802,10 @@ package body System.Task_Primitives.Operations is\n    ---------------\n \n    procedure Exit_Task is\n+      Result : Interfaces.C.int;\n+\n    begin\n-      pthread_exit (System.Null_Address);\n+      Result := pthread_set_ada_tcb (pthread_self, System.Null_Address);\n    end Exit_Task;\n \n    ----------------\n@@ -779,20 +814,24 @@ package body System.Task_Primitives.Operations is\n \n    procedure Abort_Task (T : Task_ID) is\n       Result : Interfaces.C.int;\n+\n    begin\n-      Result := pthread_kill (T.Common.LL.Thread,\n-        Interfaces.C.int (System.Interrupt_Management.Abort_Task_Interrupt));\n+      Result :=\n+        pthread_kill (T.Common.LL.Thread,\n+                      Interfaces.C.int\n+                        (System.Interrupt_Management.Abort_Task_Interrupt));\n       pragma Assert (Result = 0);\n    end Abort_Task;\n \n    ----------------\n    -- Check_Exit --\n    ----------------\n \n-   --  Dummy versions.  The only currently working versions is for solaris\n-   --  (native).\n+   --  Dummy version\n \n    function Check_Exit (Self_ID : ST.Task_ID) return Boolean is\n+      pragma Unreferenced (Self_ID);\n+\n    begin\n       return True;\n    end Check_Exit;\n@@ -839,7 +878,9 @@ package body System.Task_Primitives.Operations is\n \n    function Suspend_Task\n      (T           : ST.Task_ID;\n-      Thread_Self : Thread_Id) return Boolean is\n+      Thread_Self : Thread_Id)\n+      return        Boolean\n+   is\n    begin\n       if T.Common.LL.Thread /= Thread_Self then\n          return pthread_suspend (T.Common.LL.Thread) = 0;\n@@ -854,7 +895,9 @@ package body System.Task_Primitives.Operations is\n \n    function Resume_Task\n      (T           : ST.Task_ID;\n-      Thread_Self : Thread_Id) return Boolean is\n+      Thread_Self : Thread_Id)\n+      return        Boolean\n+   is\n    begin\n       if T.Common.LL.Thread /= Thread_Self then\n          return pthread_resume (T.Common.LL.Thread) = 0;\n@@ -880,6 +923,10 @@ package body System.Task_Primitives.Operations is\n         Environment_Task.Common.Current_Priority);\n    end Initialize;\n \n+   --------------------------------\n+   -- Initialize_Athread_Library --\n+   --------------------------------\n+\n    procedure Initialize_Athread_Library is\n       Result : Interfaces.C.int;\n       Init   : aliased pthread_init_struct;"}, {"sha": "8cb4f232d7f287737f7a09aebec17aeb89ad7ac1", "filename": "gcc/ada/5gtasinf.ads", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5gtasinf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5gtasinf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5gtasinf.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,16 +32,22 @@\n ------------------------------------------------------------------------------\n \n --  This package contains the definitions and routines associated with the\n---  implementation of the Task_Info pragma.\n+--  implementation and use of the Task_Info pragma. It is specialized\n+--  appropriately for targets that make use of this pragma.\n+\n+--  Note: the compiler generates direct calls to this interface, via Rtsfind.\n+--  Any changes to this interface may require corresponding compiler changes.\n+\n+--  This unit may be used directly from an application program by providing\n+--  an appropriate WITH, and the interface can be expected to remain stable.\n \n --  This is the SGI (libathread) specific version of this module.\n \n with System.OS_Interface;\n-with Unchecked_Deallocation;\n \n package System.Task_Info is\n-pragma Elaborate_Body;\n---  To ensure that a body is allowed\n+   pragma Elaborate_Body;\n+   --  To ensure that a body is allowed\n \n    ---------------------------------------------------------\n    -- Binding of Tasks to sprocs and sprocs to processors --\n@@ -273,13 +279,6 @@ pragma Elaborate_Body;\n       NDPRI            : Non_Degrading_Priority := NDP_NONE)\n       return             Task_Info_Type;\n \n-   type Task_Image_Type is access String;\n-   --  Used to generate a meaningful identifier for tasks that are variables\n-   --  and components of variables.\n-\n-   procedure Free_Task_Image is new\n-     Unchecked_Deallocation (String, Task_Image_Type);\n-\n    Unspecified_Task_Info : constant Task_Info_Type := null;\n \n end System.Task_Info;"}, {"sha": "6b36c9d54f8031d1d68bfed43df3b4e4a587483a", "filename": "gcc/ada/5gtpgetc.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5gtpgetc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5gtpgetc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5gtpgetc.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -27,7 +27,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "5398d563990963ba67363de98ef0c6f3655e8dd7", "filename": "gcc/ada/5hml-tgt.adb", "status": "added", "additions": 373, "deletions": 0, "changes": 373, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5hml-tgt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5hml-tgt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5hml-tgt.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -0,0 +1,373 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--                             M L I B . T G T                              --\n+--                             (HP-UX Version)                              --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--              Copyright (C) 2003, Ada Core Technologies, Inc.             --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This package provides a set of target dependent routines to build\n+--  libraries (static only on HP-UX).\n+\n+--  This is the HP-UX version of the body.\n+\n+with MLib.Fil;\n+with MLib.Utl;\n+with Namet;  use Namet;\n+with Opt;\n+with Output; use Output;\n+with Prj.Com;\n+with System;\n+\n+package body MLib.Tgt is\n+\n+   No_Arguments        : aliased Argument_List         := (1 .. 0 => null);\n+   Empty_Argument_List : constant Argument_List_Access := No_Arguments'Access;\n+\n+   Wl_Init_String : aliased String         := \"-Wl,+init\";\n+   Wl_Init        : constant String_Access := Wl_Init_String'Access;\n+   Wl_Fini_String : aliased String         := \"-Wl,+fini\";\n+   Wl_Fini        : constant String_Access := Wl_Fini_String'Access;\n+\n+   Init_Fini_List :  constant Argument_List_Access :=\n+                       new Argument_List'(1 => Wl_Init,\n+                                          2 => null,\n+                                          3 => Wl_Fini,\n+                                          4 => null);\n+   --  Used to put switches for automatic elaboration/finalization\n+   ---------------------\n+   -- Archive_Builder --\n+   ---------------------\n+\n+   function Archive_Builder return String is\n+   begin\n+      return \"ar\";\n+   end Archive_Builder;\n+\n+   -----------------------------\n+   -- Archive_Builder_Options --\n+   -----------------------------\n+\n+   function Archive_Builder_Options return String_List_Access is\n+   begin\n+      return new String_List'(1 => new String'(\"cr\"));\n+   end Archive_Builder_Options;\n+\n+   -----------------\n+   -- Archive_Ext --\n+   -----------------\n+\n+   function Archive_Ext return String is\n+   begin\n+      return \"a\";\n+   end Archive_Ext;\n+\n+   ---------------------\n+   -- Archive_Indexer --\n+   ---------------------\n+\n+   function Archive_Indexer return String is\n+   begin\n+      return \"ranlib\";\n+   end Archive_Indexer;\n+\n+   ---------------------------\n+   -- Build_Dynamic_Library --\n+   ---------------------------\n+\n+   procedure Build_Dynamic_Library\n+     (Ofiles       : Argument_List;\n+      Foreign      : Argument_List;\n+      Afiles       : Argument_List;\n+      Options      : Argument_List;\n+      Interfaces   : Argument_List;\n+      Lib_Filename : String;\n+      Lib_Dir      : String;\n+      Driver_Name  : Name_Id := No_Name;\n+      Lib_Address  : String  := \"\";\n+      Lib_Version  : String  := \"\";\n+      Relocatable  : Boolean := False;\n+      Auto_Init    : Boolean := False)\n+   is\n+      pragma Unreferenced (Foreign);\n+      pragma Unreferenced (Afiles);\n+      pragma Unreferenced (Interfaces);\n+      pragma Unreferenced (Lib_Address);\n+      pragma Unreferenced (Relocatable);\n+\n+      Lib_File : constant String :=\n+        Lib_Dir & Directory_Separator & \"lib\" &\n+        MLib.Fil.Ext_To (Lib_Filename, DLL_Ext);\n+\n+      Version_Arg          : String_Access;\n+      Symbolic_Link_Needed : Boolean := False;\n+\n+      Init_Fini : Argument_List_Access := Empty_Argument_List;\n+\n+      Common_Options : Argument_List := Options & new String'(PIC_Option);\n+      --  Common set of options to the gcc command performing the link.\n+      --  On HPUX, this command eventually resorts to collect2, which may\n+      --  generate a C file and compile it on the fly. This compilation shall\n+      --  also generate position independant code for the final link to\n+      --  succeed.\n+   begin\n+      if Opt.Verbose_Mode then\n+         Write_Str (\"building relocatable shared library \");\n+         Write_Line (Lib_File);\n+      end if;\n+\n+      --  If specified, add automatic elaboration/finalization\n+      if Auto_Init then\n+         Init_Fini := Init_Fini_List;\n+         Init_Fini (2) := new String'(\"-Wl,\" & Lib_Filename & \"init\");\n+         Init_Fini (4) := new String'(\"-Wl,\" & Lib_Filename & \"final\");\n+      end if;\n+\n+      if Lib_Version = \"\" then\n+         MLib.Utl.Gcc\n+           (Output_File => Lib_File,\n+            Objects     => Ofiles,\n+            Options     => Common_Options & Init_Fini.all,\n+            Driver_Name => Driver_Name);\n+\n+      else\n+         Version_Arg := new String'(\"-Wl,+h,\" & Lib_Version);\n+\n+         if Is_Absolute_Path (Lib_Version) then\n+            MLib.Utl.Gcc\n+              (Output_File => Lib_Version,\n+               Objects     => Ofiles,\n+               Options     => Common_Options & Version_Arg & Init_Fini.all,\n+               Driver_Name => Driver_Name);\n+            Symbolic_Link_Needed := Lib_Version /= Lib_File;\n+\n+         else\n+            MLib.Utl.Gcc\n+              (Output_File => Lib_Dir & Directory_Separator & Lib_Version,\n+               Objects     => Ofiles,\n+               Options     => Common_Options & Version_Arg & Init_Fini.all,\n+               Driver_Name => Driver_Name);\n+            Symbolic_Link_Needed :=\n+              Lib_Dir & Directory_Separator & Lib_Version /= Lib_File;\n+         end if;\n+\n+         if Symbolic_Link_Needed then\n+            declare\n+               Success : Boolean;\n+               Oldpath : String (1 .. Lib_Version'Length + 1);\n+               Newpath : String (1 .. Lib_File'Length + 1);\n+               Result  : Integer;\n+\n+               function Symlink\n+                 (Oldpath : System.Address;\n+                  Newpath : System.Address)\n+                  return    Integer;\n+               pragma Import (C, Symlink, \"__gnat_symlink\");\n+\n+            begin\n+               Oldpath (1 .. Lib_Version'Length) := Lib_Version;\n+               Oldpath (Oldpath'Last)            := ASCII.NUL;\n+               Newpath (1 .. Lib_File'Length)    := Lib_File;\n+               Newpath (Newpath'Last)            := ASCII.NUL;\n+\n+               Delete_File (Lib_File, Success);\n+\n+               Result := Symlink (Oldpath'Address, Newpath'Address);\n+            end;\n+         end if;\n+      end if;\n+   end Build_Dynamic_Library;\n+\n+   -------------------------\n+   -- Default_DLL_Address --\n+   -------------------------\n+\n+   function Default_DLL_Address return String is\n+   begin\n+      return \"\";\n+   end Default_DLL_Address;\n+\n+   -------------\n+   -- DLL_Ext --\n+   -------------\n+\n+   function DLL_Ext return String is\n+   begin\n+      return \"sl\";\n+   end DLL_Ext;\n+\n+   --------------------\n+   -- Dynamic_Option --\n+   --------------------\n+\n+   function Dynamic_Option return String is\n+   begin\n+      return \"-shared\";\n+   end Dynamic_Option;\n+\n+   -------------------\n+   -- Is_Object_Ext --\n+   -------------------\n+\n+   function Is_Object_Ext (Ext : String) return Boolean is\n+   begin\n+      return Ext = \".o\";\n+   end Is_Object_Ext;\n+\n+   --------------\n+   -- Is_C_Ext --\n+   --------------\n+\n+   function Is_C_Ext (Ext : String) return Boolean is\n+   begin\n+      return Ext = \".c\";\n+   end Is_C_Ext;\n+\n+   --------------------\n+   -- Is_Archive_Ext --\n+   --------------------\n+\n+   function Is_Archive_Ext (Ext : String) return Boolean is\n+   begin\n+      return Ext = \".a\" or else Ext = \".so\";\n+   end Is_Archive_Ext;\n+\n+   -------------\n+   -- Libgnat --\n+   -------------\n+\n+   function Libgnat return String is\n+   begin\n+      return \"libgnat.a\";\n+   end Libgnat;\n+\n+   ------------------------\n+   -- Library_Exists_For --\n+   ------------------------\n+\n+   function Library_Exists_For (Project : Project_Id) return Boolean is\n+   begin\n+      if not Projects.Table (Project).Library then\n+         Prj.Com.Fail (\"INTERNAL ERROR: Library_Exists_For called \" &\n+                       \"for non library project\");\n+         return False;\n+\n+      else\n+         declare\n+            Lib_Dir : constant String :=\n+              Get_Name_String (Projects.Table (Project).Library_Dir);\n+            Lib_Name : constant String :=\n+              Get_Name_String (Projects.Table (Project).Library_Name);\n+\n+         begin\n+            if Projects.Table (Project).Library_Kind = Static then\n+               return Is_Regular_File\n+                 (Lib_Dir & Directory_Separator & \"lib\" &\n+                  Fil.Ext_To (Lib_Name, Archive_Ext));\n+\n+            else\n+               return Is_Regular_File\n+                 (Lib_Dir & Directory_Separator & \"lib\" &\n+                  Fil.Ext_To (Lib_Name, DLL_Ext));\n+            end if;\n+         end;\n+      end if;\n+   end Library_Exists_For;\n+\n+   ---------------------------\n+   -- Library_File_Name_For --\n+   ---------------------------\n+\n+   function Library_File_Name_For (Project : Project_Id) return Name_Id is\n+   begin\n+      if not Projects.Table (Project).Library then\n+         Prj.Com.Fail (\"INTERNAL ERROR: Library_File_Name_For called \" &\n+                       \"for non library project\");\n+         return No_Name;\n+\n+      else\n+         declare\n+            Lib_Name : constant String :=\n+              Get_Name_String (Projects.Table (Project).Library_Name);\n+\n+         begin\n+            Name_Len := 3;\n+            Name_Buffer (1 .. Name_Len) := \"lib\";\n+\n+            if Projects.Table (Project).Library_Kind = Static then\n+               Add_Str_To_Name_Buffer (Fil.Ext_To (Lib_Name, Archive_Ext));\n+\n+            else\n+               Add_Str_To_Name_Buffer (Fil.Ext_To (Lib_Name, DLL_Ext));\n+            end if;\n+\n+            return Name_Find;\n+         end;\n+      end if;\n+   end Library_File_Name_For;\n+\n+   --------------------------------\n+   -- Linker_Library_Path_Option --\n+   --------------------------------\n+\n+   function Linker_Library_Path_Option return String_Access is\n+   begin\n+      return new String'(\"-Wl,+b,\");\n+   end Linker_Library_Path_Option;\n+\n+   ----------------\n+   -- Object_Ext --\n+   ----------------\n+\n+   function Object_Ext return String is\n+   begin\n+      return \"o\";\n+   end Object_Ext;\n+\n+   ----------------\n+   -- PIC_Option --\n+   ----------------\n+\n+   function PIC_Option return String is\n+   begin\n+      return \"-fPIC\";\n+   end PIC_Option;\n+\n+   -----------------------------------------------\n+   -- Standalone_Library_Auto_Init_Is_Supported --\n+   -----------------------------------------------\n+\n+   function Standalone_Library_Auto_Init_Is_Supported return Boolean is\n+   begin\n+      return True;\n+   end Standalone_Library_Auto_Init_Is_Supported;\n+\n+   ---------------------------\n+   -- Support_For_Libraries --\n+   ---------------------------\n+\n+   function Support_For_Libraries return Library_Support is\n+   begin\n+      return Full;\n+   end Support_For_Libraries;\n+\n+end MLib.Tgt;"}, {"sha": "dcd169ccf62cbf4e317bb1a3703de160437cfbdf", "filename": "gcc/ada/5hosinte.adb", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5hosinte.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5hosinte.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5hosinte.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,8 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---            Copyright (C) 1991-2001, Florida State University             --\n+--             Copyright (C) 1991-1994, Florida State University            --\n+--             Copyright (C) 1995-2003, Ada Core Technologies               --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,9 +27,8 @@\n -- however invalidate  any other reasons why  the executable file  might be --\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University. It is --\n--- now maintained by Ada Core Technologies Inc. in cooperation with Florida --\n--- State University (http://www.gnat.com).                                  --\n+-- GNARL was developed by the GNARL team at Florida State University.       --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n@@ -74,8 +74,8 @@ package body System.OS_Interface is\n          F := F + 1.0;\n       end if;\n \n-      return timespec' (tv_sec => S,\n-        tv_nsec => long (Long_Long_Integer (F * 10#1#E9)));\n+      return timespec'(tv_sec => S,\n+                       tv_nsec => long (Long_Long_Integer (F * 10#1#E9)));\n    end To_Timespec;\n \n    function To_Duration (TV : struct_timeval) return Duration is\n@@ -98,8 +98,10 @@ package body System.OS_Interface is\n          F := F + 1.0;\n       end if;\n \n-      return struct_timeval' (tv_sec => S,\n-        tv_usec => time_t (Long_Long_Integer (F * 10#1#E6)));\n+      return\n+        struct_timeval'\n+          (tv_sec => S,\n+           tv_usec => time_t (Long_Long_Integer (F * 10#1#E6)));\n    end To_Timeval;\n \n    ---------------------------\n@@ -128,6 +130,7 @@ package body System.OS_Interface is\n    --  DCE_THREADS does not have pthread_kill. Instead, we just ignore it.\n \n    function pthread_kill (thread : pthread_t; sig : Signal) return int is\n+      pragma Unreferenced (thread, sig);\n    begin\n       return 0;\n    end pthread_kill;\n@@ -539,6 +542,8 @@ package body System.OS_Interface is\n    end pthread_key_create;\n \n    function Get_Stack_Base (thread : pthread_t) return Address is\n+      pragma Warnings (Off, thread);\n+\n    begin\n       return Null_Address;\n    end Get_Stack_Base;"}, {"sha": "1e51907f1af19c46bdc05aa74409856f6399c8fe", "filename": "gcc/ada/5hosinte.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5hosinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5hosinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5hosinte.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,8 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---             Copyright (C) 1997-2001, Florida State University            --\n+--             Copyright (C) 1991-1994, Florida State University            --\n+--             Copyright (C) 1995-2003, Ada Core Technologies               --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,9 +27,8 @@\n -- however invalidate  any other reasons why  the executable file  might be --\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University. It is --\n--- now maintained by Ada Core Technologies Inc. in cooperation with Florida --\n--- State University (http://www.gnat.com).                                  --\n+-- GNARL was developed by the GNARL team at Florida State University.       --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "8be952a18c29f3cf617315d960e728a22a82f7d4", "filename": "gcc/ada/5hparame.ads", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5hparame.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5hparame.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5hparame.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -141,8 +141,8 @@ pragma Pure (Parameters);\n    ---------------------\n \n    --  In the following sections, constant parameters are defined to\n-   --  allow some optimizations within the tasking run time based on\n-   --  restrictions on the tasking features.\n+   --  allow some optimizations and fine tuning within the tasking run time\n+   --  based on restrictions on the tasking features.\n \n    ----------------------\n    -- Locking Strategy --\n@@ -182,6 +182,14 @@ pragma Pure (Parameters);\n    --  point. A value of False for Dynamic_Priority_Support corresponds\n    --  to pragma Restrictions (No_Dynamic_Priorities);\n \n+   ---------------------\n+   -- Task Attributes --\n+   ---------------------\n+\n+   Default_Attribute_Count : constant := 4;\n+   --  Number of pre-allocated Address-sized task attributes stored in the\n+   --  task control block.\n+\n    --------------------\n    -- Runtime Traces --\n    --------------------"}, {"sha": "43e22cbaabc0b13372d7bd2e24fd0271b673d926", "filename": "gcc/ada/5hsystem.ads", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5hsystem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5hsystem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5hsystem.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -118,24 +118,35 @@ private\n    Backend_Divide_Checks     : constant Boolean := False;\n    Backend_Overflow_Checks   : constant Boolean := False;\n    Command_Line_Args         : constant Boolean := True;\n+   Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := True;\n+   Duration_32_Bits          : constant Boolean := False;\n    Exit_Status_Supported     : constant Boolean := True;\n    Fractional_Fixed_Ops      : constant Boolean := False;\n    Frontend_Layout           : constant Boolean := False;\n    Functions_Return_By_DSP   : constant Boolean := False;\n-   Long_Shifts_Inlined       : constant Boolean := False;\n-   High_Integrity_Mode       : constant Boolean := False;\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := False;\n    Stack_Check_Default       : constant Boolean := False;\n    Stack_Check_Probes        : constant Boolean := False;\n+   Support_64_Bit_Divides    : constant Boolean := True;\n+   Support_Aggregates        : constant Boolean := True;\n+   Support_Composite_Assign  : constant Boolean := True;\n+   Support_Composite_Compare : constant Boolean := True;\n+   Support_Long_Shifts       : constant Boolean := True;\n+   Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := False;\n    GCC_ZCX_Support           : constant Boolean := True;\n    Front_End_ZCX_Support     : constant Boolean := False;\n \n+   --  Obsolete entries, to be removed eventually (bootstrap issues!)\n+\n+   High_Integrity_Mode       : constant Boolean := False;\n+   Long_Shifts_Inlined       : constant Boolean := False;\n+\n    --------------------------\n    -- Underlying Priorities --\n    ---------------------------"}, {"sha": "434806c426efc76a455514cadf69e07aeb712fa8", "filename": "gcc/ada/5htaprop.adb", "status": "modified", "additions": 152, "deletions": 61, "changes": 213, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5htaprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5htaprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5htaprop.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2001, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2003, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,7 +31,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is a HP-UX DCE threads version of this package\n+--  This is a HP-UX DCE threads (HPUX 10) version of this package\n \n --  This package contains all the GNULL primitives that interface directly\n --  with the underlying OS.\n@@ -100,14 +100,14 @@ package body System.Task_Primitives.Operations is\n    --  The followings are logically constants, but need to be initialized\n    --  at run time.\n \n-   ATCB_Key : aliased pthread_key_t;\n-   --  Key used to find the Ada Task_ID associated with a thread\n-\n    Single_RTS_Lock : aliased RTS_Lock;\n    --  This is a lock to allow only one thread of control in the RTS at\n    --  a time; it is used to execute in mutual exclusion from all other tasks.\n    --  Used mainly in Single_Lock mode, but also to protect All_Tasks_List\n \n+   ATCB_Key : aliased pthread_key_t;\n+   --  Key used to find the Ada Task_ID associated with a thread\n+\n    Environment_Task_ID : Task_ID;\n    --  A variable to hold Task_ID for the environment task.\n \n@@ -117,32 +117,71 @@ package body System.Task_Primitives.Operations is\n    Time_Slice_Val : Integer;\n    pragma Import (C, Time_Slice_Val, \"__gl_time_slice_val\");\n \n-   Locking_Policy : Character;\n-   pragma Import (C, Locking_Policy, \"__gl_locking_policy\");\n-\n    Dispatching_Policy : Character;\n    pragma Import (C, Dispatching_Policy, \"__gl_task_dispatching_policy\");\n \n+   --  Note: the reason that Locking_Policy is not needed is that this\n+   --  is not implemented for DCE threads. The HPUX 10 port is at this\n+   --  stage considered dead, and no further work is planned on it.\n+\n    FIFO_Within_Priorities : constant Boolean := Dispatching_Policy = 'F';\n    --  Indicates whether FIFO_Within_Priorities is set.\n \n-   --  The followings are internal configuration constants needed.\n+   Foreign_Task_Elaborated : aliased Boolean := True;\n+   --  Used to identified fake tasks (i.e., non-Ada Threads).\n+\n+   --------------------\n+   -- Local Packages --\n+   --------------------\n+\n+   package Specific is\n+\n+      procedure Initialize (Environment_Task : Task_ID);\n+      pragma Inline (Initialize);\n+      --  Initialize various data needed by this package.\n+\n+      function Is_Valid_Task return Boolean;\n+      pragma Inline (Is_Valid_Task);\n+      --  Does the executing thread have a TCB?\n+\n+      procedure Set (Self_Id : Task_ID);\n+      pragma Inline (Set);\n+      --  Set the self id for the current task.\n+\n+      function Self return Task_ID;\n+      pragma Inline (Self);\n+      --  Return a pointer to the Ada Task Control Block of the calling task.\n+\n+   end Specific;\n+\n+   package body Specific is separate;\n+   --  The body of this package is target specific.\n+\n+   ---------------------------------\n+   -- Support for foreign threads --\n+   ---------------------------------\n+\n+   function Register_Foreign_Thread (Thread : Thread_Id) return Task_ID;\n+   --  Allocate and Initialize a new ATCB for the current Thread.\n+\n+   function Register_Foreign_Thread\n+     (Thread : Thread_Id) return Task_ID is separate;\n \n    -----------------------\n    -- Local Subprograms --\n    -----------------------\n \n    procedure Abort_Handler (Sig : Signal);\n \n-   function To_Task_ID is new Unchecked_Conversion (System.Address, Task_ID);\n-\n    function To_Address is new Unchecked_Conversion (Task_ID, System.Address);\n \n    -------------------\n    -- Abort_Handler --\n    -------------------\n \n    procedure Abort_Handler (Sig : Signal) is\n+      pragma Unreferenced (Sig);\n+\n       Self_Id : constant Task_ID := Self;\n       Result  : Interfaces.C.int;\n       Old_Set : aliased sigset_t;\n@@ -173,6 +212,7 @@ package body System.Task_Primitives.Operations is\n    --  ??? Check the comment above\n \n    procedure Stack_Guard (T : ST.Task_ID; On : Boolean) is\n+      pragma Unreferenced (T, On);\n    begin\n       null;\n    end Stack_Guard;\n@@ -190,13 +230,7 @@ package body System.Task_Primitives.Operations is\n    -- Self --\n    ----------\n \n-   function Self return Task_ID is\n-      Result : System.Address;\n-   begin\n-      Result := pthread_getspecific (ATCB_Key);\n-      pragma Assert (Result /= System.Null_Address);\n-      return To_Task_ID (Result);\n-   end Self;\n+   function Self return Task_ID renames Specific.Self;\n \n    ---------------------\n    -- Initialize_Lock --\n@@ -238,6 +272,8 @@ package body System.Task_Primitives.Operations is\n    end Initialize_Lock;\n \n    procedure Initialize_Lock (L : access RTS_Lock; Level : Lock_Level) is\n+      pragma Unreferenced (Level);\n+\n       Attributes : aliased pthread_mutexattr_t;\n       Result     : Interfaces.C.int;\n \n@@ -285,6 +321,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Write_Lock (L : access Lock; Ceiling_Violation : out Boolean) is\n       Result : Interfaces.C.int;\n+\n    begin\n       L.Owner_Priority := Get_Priority (Self);\n \n@@ -302,6 +339,7 @@ package body System.Task_Primitives.Operations is\n      (L : access RTS_Lock; Global_Lock : Boolean := False)\n    is\n       Result : Interfaces.C.int;\n+\n    begin\n       if not Single_Lock or else Global_Lock then\n          Result := pthread_mutex_lock (L);\n@@ -311,6 +349,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Write_Lock (T : Task_ID) is\n       Result : Interfaces.C.int;\n+\n    begin\n       if not Single_Lock then\n          Result := pthread_mutex_lock (T.Common.LL.L'Access);\n@@ -333,6 +372,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Unlock (L : access Lock) is\n       Result : Interfaces.C.int;\n+\n    begin\n       Result := pthread_mutex_unlock (L.L'Access);\n       pragma Assert (Result = 0);\n@@ -349,6 +389,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Unlock (T : Task_ID) is\n       Result : Interfaces.C.int;\n+\n    begin\n       if not Single_Lock then\n          Result := pthread_mutex_unlock (T.Common.LL.L'Access);\n@@ -364,6 +405,8 @@ package body System.Task_Primitives.Operations is\n      (Self_ID : Task_ID;\n       Reason  : System.Tasking.Task_States)\n    is\n+      pragma Unreferenced (Reason);\n+\n       Result : Interfaces.C.int;\n    begin\n       if Single_Lock then\n@@ -390,6 +433,8 @@ package body System.Task_Primitives.Operations is\n       Timedout : out Boolean;\n       Yielded  : out Boolean)\n    is\n+      pragma Unreferenced (Reason);\n+\n       Check_Time : constant Duration := Monotonic_Clock;\n       Abs_Time   : Duration;\n       Request    : aliased timespec;\n@@ -426,7 +471,9 @@ package body System.Task_Primitives.Operations is\n             exit when Abs_Time <= Monotonic_Clock;\n \n             if Result = 0 or Result = EINTR then\n-               --  somebody may have called Wakeup for us\n+\n+               --  Somebody may have called Wakeup for us\n+\n                Timedout := False;\n                exit;\n             end if;\n@@ -538,7 +585,10 @@ package body System.Task_Primitives.Operations is\n    ------------\n \n    procedure Wakeup (T : Task_ID; Reason : System.Tasking.Task_States) is\n+      pragma Unreferenced (Reason);\n+\n       Result : Interfaces.C.int;\n+\n    begin\n       Result := pthread_cond_signal (T.Common.LL.CV'Access);\n       pragma Assert (Result = 0);\n@@ -550,6 +600,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Yield (Do_Yield : Boolean := True) is\n       Result : Interfaces.C.int;\n+\n    begin\n       if Do_Yield then\n          Result := sched_yield;\n@@ -571,8 +622,8 @@ package body System.Task_Primitives.Operations is\n    --  scheduling.\n \n    procedure Set_Priority\n-     (T : Task_ID;\n-      Prio : System.Any_Priority;\n+     (T                   : Task_ID;\n+      Prio                : System.Any_Priority;\n       Loss_Of_Inheritance : Boolean := False)\n    is\n       Result     : Interfaces.C.int;\n@@ -643,13 +694,9 @@ package body System.Task_Primitives.Operations is\n    ----------------\n \n    procedure Enter_Task (Self_ID : Task_ID) is\n-      Result  : Interfaces.C.int;\n-\n    begin\n       Self_ID.Common.LL.Thread := pthread_self;\n-\n-      Result := pthread_setspecific (ATCB_Key, To_Address (Self_ID));\n-      pragma Assert (Result = 0);\n+      Specific.Set (Self_ID);\n \n       Lock_RTS;\n \n@@ -673,6 +720,25 @@ package body System.Task_Primitives.Operations is\n       return new Ada_Task_Control_Block (Entry_Num);\n    end New_ATCB;\n \n+   -------------------\n+   -- Is_Valid_Task --\n+   -------------------\n+\n+   function Is_Valid_Task return Boolean renames Specific.Is_Valid_Task;\n+\n+   -----------------------------\n+   -- Register_Foreign_Thread --\n+   -----------------------------\n+\n+   function Register_Foreign_Thread return Task_ID is\n+   begin\n+      if Is_Valid_Task then\n+         return Self;\n+      else\n+         return Register_Foreign_Thread (pthread_self);\n+      end if;\n+   end Register_Foreign_Thread;\n+\n    --------------------\n    -- Initialize_TCB --\n    --------------------\n@@ -798,6 +864,7 @@ package body System.Task_Primitives.Operations is\n    procedure Finalize_TCB (T : Task_ID) is\n       Result : Interfaces.C.int;\n       Tmp    : Task_ID := T;\n+      Is_Self : constant Boolean := T = Self;\n \n       procedure Free is new\n         Unchecked_Deallocation (Ada_Task_Control_Block, Task_ID);\n@@ -816,6 +883,12 @@ package body System.Task_Primitives.Operations is\n       end if;\n \n       Free (Tmp);\n+\n+      if Is_Self then\n+         Result := pthread_setspecific (ATCB_Key, System.Null_Address);\n+         pragma Assert (Result = 0);\n+      end if;\n+\n    end Finalize_TCB;\n \n    ---------------\n@@ -824,7 +897,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Exit_Task is\n    begin\n-      pthread_exit (System.Null_Address);\n+      Specific.Set (null);\n    end Exit_Task;\n \n    ----------------\n@@ -851,6 +924,7 @@ package body System.Task_Primitives.Operations is\n    --  (native).\n \n    function Check_Exit (Self_ID : ST.Task_ID) return Boolean is\n+      pragma Unreferenced (Self_ID);\n    begin\n       return True;\n    end Check_Exit;\n@@ -860,6 +934,7 @@ package body System.Task_Primitives.Operations is\n    --------------------\n \n    function Check_No_Locks (Self_ID : ST.Task_ID) return Boolean is\n+      pragma Unreferenced (Self_ID);\n    begin\n       return True;\n    end Check_No_Locks;\n@@ -897,7 +972,12 @@ package body System.Task_Primitives.Operations is\n \n    function Suspend_Task\n      (T           : ST.Task_ID;\n-      Thread_Self : Thread_Id) return Boolean is\n+      Thread_Self : Thread_Id)\n+      return        Boolean\n+   is\n+      pragma Unreferenced (T);\n+      pragma Unreferenced (Thread_Self);\n+\n    begin\n       return False;\n    end Suspend_Task;\n@@ -908,7 +988,12 @@ package body System.Task_Primitives.Operations is\n \n    function Resume_Task\n      (T           : ST.Task_ID;\n-      Thread_Self : Thread_Id) return Boolean is\n+      Thread_Self : Thread_Id)\n+      return        Boolean\n+   is\n+      pragma Unreferenced (T);\n+      pragma Unreferenced (Thread_Self);\n+\n    begin\n       return False;\n    end Resume_Task;\n@@ -923,50 +1008,56 @@ package body System.Task_Primitives.Operations is\n       Tmp_Set   : aliased sigset_t;\n       Result    : Interfaces.C.int;\n \n-   begin\n+      function State (Int : System.Interrupt_Management.Interrupt_ID)\n+                     return Character;\n+      pragma Import (C, State, \"__gnat_get_interrupt_state\");\n+      --  Get interrupt state.  Defined in a-init.c\n+      --  The input argument is the interrupt number,\n+      --  and the result is one of the following:\n \n+      Default : constant Character := 's';\n+      --    'n'   this interrupt not set by any Interrupt_State pragma\n+      --    'u'   Interrupt_State pragma set state to User\n+      --    'r'   Interrupt_State pragma set state to Runtime\n+      --    's'   Interrupt_State pragma set state to System (use \"default\"\n+      --           system handler)\n+\n+   begin\n       Environment_Task_ID := Environment_Task;\n \n-      Initialize_Lock (Single_RTS_Lock'Access, RTS_Lock_Level);\n       --  Initialize the lock used to synchronize chain of all ATCBs.\n \n+      Initialize_Lock (Single_RTS_Lock'Access, RTS_Lock_Level);\n+\n+      Specific.Initialize (Environment_Task);\n+\n       Enter_Task (Environment_Task);\n \n       --  Install the abort-signal handler\n \n-      act.sa_flags := 0;\n-      act.sa_handler := Abort_Handler'Address;\n+      if State (System.Interrupt_Management.Abort_Task_Interrupt)\n+                                                     /= Default\n+      then\n+         act.sa_flags := 0;\n+         act.sa_handler := Abort_Handler'Address;\n \n-      Result := sigemptyset (Tmp_Set'Access);\n-      pragma Assert (Result = 0);\n-      act.sa_mask := Tmp_Set;\n+         Result := sigemptyset (Tmp_Set'Access);\n+         pragma Assert (Result = 0);\n+         act.sa_mask := Tmp_Set;\n \n-      Result :=\n-        sigaction (\n-          Signal (System.Interrupt_Management.Abort_Task_Interrupt),\n-          act'Unchecked_Access,\n-          old_act'Unchecked_Access);\n-      pragma Assert (Result = 0);\n+         Result :=\n+           sigaction (\n+             Signal (System.Interrupt_Management.Abort_Task_Interrupt),\n+             act'Unchecked_Access,\n+             old_act'Unchecked_Access);\n+         pragma Assert (Result = 0);\n+      end if;\n    end Initialize;\n \n-   procedure do_nothing (arg : System.Address);\n-\n-   procedure do_nothing (arg : System.Address) is\n-   begin\n-      null;\n-   end do_nothing;\n+   --  NOTE: Unlike other pthread implementations, we do *not* mask all\n+   --  signals here since we handle signals using the process-wide primitive\n+   --  signal, rather than using sigthreadmask and sigwait. The reason of\n+   --  this difference is that sigwait doesn't work when some critical\n+   --  signals (SIGABRT, SIGPIPE) are masked.\n \n-begin\n-   declare\n-      Result : Interfaces.C.int;\n-   begin\n-      --  NOTE: Unlike other pthread implementations, we do *not* mask all\n-      --  signals here since we handle signals using the process-wide primitive\n-      --  signal, rather than using sigthreadmask and sigwait. The reason of\n-      --  this difference is that sigwait doesn't work when some critical\n-      --  signals (SIGABRT, SIGPIPE) are masked.\n-\n-      Result := pthread_key_create (ATCB_Key'Access, do_nothing'Access);\n-      pragma Assert (Result = 0);\n-   end;\n end System.Task_Primitives.Operations;"}, {"sha": "4f422c24271e8c97673a719b7012f3ec3dcea00e", "filename": "gcc/ada/5htaspri.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5htaspri.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5htaspri.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5htaspri.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -27,7 +27,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "67cb6d33eb4bb2bd4a2b2807b879933b929a04ba", "filename": "gcc/ada/5htraceb.adb", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5htraceb.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5htraceb.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5htraceb.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---           Copyright (C) 1999-2002 Ada Core Technologies, Inc.            --\n+--           Copyright (C) 1999-2003 Ada Core Technologies, Inc.            --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -290,7 +290,8 @@ package body System.Traceback is\n       Max_Len     : Natural;\n       Len         : out Natural;\n       Exclude_Min : System.Address := System.Null_Address;\n-      Exclude_Max : System.Address := System.Null_Address)\n+      Exclude_Max : System.Address := System.Null_Address;\n+      Skip_Frames : Natural := 1)\n    is\n       type Tracebacks_Array is array (1 .. Max_Len) of System.Address;\n       pragma Suppress_Initialization (Tracebacks_Array);\n@@ -551,9 +552,8 @@ package body System.Traceback is\n    --  Start of processing for Call_Chain\n \n    begin\n-      --  Fetch the state for this subprogram's frame and pop it so that the\n-      --  backtrace starts at the right point for our caller, that is at its\n-      --  own frame.\n+      --  Fetch the state for this subprogram's frame and pop it so that we\n+      --  start with an initial out_rlo \"here\".\n \n       U_init_frame_record (Frame'Access);\n       Frame.top_sr0 := 0;\n@@ -563,6 +563,12 @@ package body System.Traceback is\n \n       Pop_Success := Pop_Frame (Frame'Access);\n \n+      --  Skip the requested number of frames.\n+\n+      for I in 1 .. Skip_Frames loop\n+         Pop_Success := Pop_Frame (Frame'Access);\n+      end loop;\n+\n       --  Loop popping frames and storing locations until either a problem\n       --  occurs, or the top of the call chain is reached, or the provided\n       --  array is full."}, {"sha": "36c082c86aa12dfec7eb0af1cd3b29b6a535d9b3", "filename": "gcc/ada/5iosinte.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5iosinte.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5iosinte.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5iosinte.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,8 @@\n --                                                                          --\n --                                   B o d y                                --\n --                                                                          --\n---             Copyright (C) 1991-2002 Florida State University             --\n+--             Copyright (C) 1991-1994, Florida State University            --\n+--             Copyright (C) 1995-2003, Ada Core Technologies               --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,9 +27,8 @@\n -- however invalidate  any other reasons why  the executable file  might be --\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University. It is --\n--- now maintained by Ada Core Technologies Inc. in cooperation with Florida --\n--- State University (http://www.gnat.com).                                  --\n+-- GNARL was developed by the GNARL team at Florida State University.       --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "b418fd2e834af0fc2641c0a612aed5305e935cd6", "filename": "gcc/ada/5isystem.ads", "status": "added", "additions": 166, "deletions": 0, "changes": 166, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5isystem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5isystem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5isystem.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -0,0 +1,166 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                        GNAT RUN-TIME COMPONENTS                          --\n+--                                                                          --\n+--                               S Y S T E M                                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                      (VxWorks/LEVEL B Version PPC)                       --\n+--                                                                          --\n+--          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  Level B certifiable VxWorks version\n+\n+pragma Restrictions (No_Finalization);\n+pragma Restrictions (No_Exception_Registration);\n+pragma Restrictions (No_Abort_Statements);\n+\n+pragma Restrictions (Max_Asynchronous_Select_Nesting => 0);\n+\n+package System is\n+pragma Pure (System);\n+--  Note that we take advantage of the implementation permission to\n+--  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+\n+   type Name is (SYSTEM_NAME_GNAT);\n+   System_Name : constant Name := SYSTEM_NAME_GNAT;\n+\n+   --  System-Dependent Named Numbers\n+\n+   Min_Int               : constant := Long_Long_Integer'First;\n+   Max_Int               : constant := Long_Long_Integer'Last;\n+\n+   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n+   Max_Nonbinary_Modulus : constant := Integer'Last;\n+\n+   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n+   Max_Digits            : constant := Long_Long_Float'Digits;\n+\n+   Max_Mantissa          : constant := 63;\n+   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n+\n+   Tick                  : constant := 1.0 / 60.0;\n+\n+   --  Storage-related Declarations\n+\n+   type Address is private;\n+   Null_Address : constant Address;\n+\n+   Storage_Unit : constant := 8;\n+   Word_Size    : constant := 32;\n+   Memory_Size  : constant := 2 ** 32;\n+\n+   --  Address comparison\n+\n+   function \"<\"  (Left, Right : Address) return Boolean;\n+   function \"<=\" (Left, Right : Address) return Boolean;\n+   function \">\"  (Left, Right : Address) return Boolean;\n+   function \">=\" (Left, Right : Address) return Boolean;\n+   function \"=\"  (Left, Right : Address) return Boolean;\n+\n+   pragma Import (Intrinsic, \"<\");\n+   pragma Import (Intrinsic, \"<=\");\n+   pragma Import (Intrinsic, \">\");\n+   pragma Import (Intrinsic, \">=\");\n+   pragma Import (Intrinsic, \"=\");\n+\n+   --  Other System-Dependent Declarations\n+\n+   type Bit_Order is (High_Order_First, Low_Order_First);\n+   Default_Bit_Order : constant Bit_Order := High_Order_First;\n+\n+   --  Priority-related Declarations (RM D.1)\n+\n+   --  256        is reserved for the VxWorks kernel\n+   --  248 - 255  correspond to hardware interrupt levels 0 .. 7\n+   --  247        is a catchall default \"interrupt\" priority for signals,\n+   --             allowing higher priority than normal tasks, but lower than\n+   --             hardware priority levels.  Protected Object ceilings can\n+   --             override these values.\n+   --  246        is used by the Interrupt_Manager task\n+\n+   Max_Priority           : constant Positive := 245;\n+   Max_Interrupt_Priority : constant Positive := 255;\n+\n+   subtype Any_Priority       is Integer      range   0 .. 255;\n+   subtype Priority           is Any_Priority range   0 .. 245;\n+   subtype Interrupt_Priority is Any_Priority range 246 .. 255;\n+\n+   Default_Priority : constant Priority := 122;\n+\n+private\n+\n+   type Address is mod Memory_Size;\n+   Null_Address : constant Address := 0;\n+\n+   --------------------------------------\n+   -- System Implementation Parameters --\n+   --------------------------------------\n+\n+   --  These parameters provide information about the target that is used\n+   --  by the compiler. They are in the private part of System, where they\n+   --  can be accessed using the special circuitry in the Targparm unit\n+   --  whose source should be consulted for more detailed descriptions\n+   --  of the individual switch values.\n+\n+   AAMP                      : constant Boolean := False;\n+   Backend_Divide_Checks     : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := False;\n+   Command_Line_Args         : constant Boolean := False;\n+   Configurable_Run_Time     : constant Boolean := True;\n+   Denorm                    : constant Boolean := True;\n+   Duration_32_Bits          : constant Boolean := True;\n+   Exit_Status_Supported     : constant Boolean := True;\n+   Fractional_Fixed_Ops      : constant Boolean := False;\n+   Frontend_Layout           : constant Boolean := False;\n+   Functions_Return_By_DSP   : constant Boolean := False;\n+   Machine_Overflows         : constant Boolean := False;\n+   Machine_Rounds            : constant Boolean := True;\n+   OpenVMS                   : constant Boolean := False;\n+   Signed_Zeros              : constant Boolean := True;\n+   Stack_Check_Default       : constant Boolean := False;\n+   Stack_Check_Probes        : constant Boolean := False;\n+   Support_64_Bit_Divides    : constant Boolean := True;\n+   Support_Aggregates        : constant Boolean := True;\n+   Support_Composite_Assign  : constant Boolean := True;\n+   Support_Composite_Compare : constant Boolean := True;\n+   Support_Long_Shifts       : constant Boolean := True;\n+   Suppress_Standard_Library : constant Boolean := False;\n+   Use_Ada_Main_Program_Name : constant Boolean := True;\n+   ZCX_By_Default            : constant Boolean := False;\n+   GCC_ZCX_Support           : constant Boolean := False;\n+   Front_End_ZCX_Support     : constant Boolean := False;\n+\n+   --  Obsolete entries, to be removed eventually (bootstrap issues!)\n+\n+   High_Integrity_Mode       : constant Boolean := True;\n+   Long_Shifts_Inlined       : constant Boolean := False;\n+\n+end System;"}, {"sha": "2f0864085611e103bddcb6152b22e8bdf619fa6b", "filename": "gcc/ada/5itaprop.adb", "status": "modified", "additions": 124, "deletions": 151, "changes": 275, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5itaprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5itaprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5itaprop.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -26,8 +26,8 @@\n -- however invalidate  any other reasons why  the executable file  might be --\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University. It is --\n--- now maintained by Ada Core Technologies, Inc. (http://www.gnat.com).     --\n+-- GNARL was developed by the GNARL team at Florida State University.       --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n@@ -101,11 +101,6 @@ package body System.Task_Primitives.Operations is\n    --  Local Data  --\n    ------------------\n \n-   Max_Stack_Size : constant := 2000 * 1024;\n-   --  GNU/LinuxThreads does not return an error value when requesting\n-   --  a task stack size which is too large, so we have to check this\n-   --  ourselves.\n-\n    --  The followings are logically constants, but need to be initialized\n    --  at run time.\n \n@@ -114,6 +109,9 @@ package body System.Task_Primitives.Operations is\n    --  a time; it is used to execute in mutual exclusion from all other tasks.\n    --  Used mainly in Single_Lock mode, but also to protect All_Tasks_List\n \n+   ATCB_Key : aliased pthread_key_t;\n+   --  Key used to find the Ada Task_ID associated with a thread\n+\n    Environment_Task_ID : Task_ID;\n    --  A variable to hold Task_ID for the environment task.\n \n@@ -143,44 +141,8 @@ package body System.Task_Primitives.Operations is\n    Mutex_Attr   : aliased pthread_mutexattr_t;\n    Cond_Attr    : aliased pthread_condattr_t;\n \n-   -----------------------\n-   -- Local Subprograms --\n-   -----------------------\n-\n-   subtype unsigned_short is Interfaces.C.unsigned_short;\n-   subtype unsigned_long is Interfaces.C.unsigned_long;\n-\n-   procedure Abort_Handler\n-     (signo         : Signal;\n-      gs            : unsigned_short;\n-      fs            : unsigned_short;\n-      es            : unsigned_short;\n-      ds            : unsigned_short;\n-      edi           : unsigned_long;\n-      esi           : unsigned_long;\n-      ebp           : unsigned_long;\n-      esp           : unsigned_long;\n-      ebx           : unsigned_long;\n-      edx           : unsigned_long;\n-      ecx           : unsigned_long;\n-      eax           : unsigned_long;\n-      trapno        : unsigned_long;\n-      err           : unsigned_long;\n-      eip           : unsigned_long;\n-      cs            : unsigned_short;\n-      eflags        : unsigned_long;\n-      esp_at_signal : unsigned_long;\n-      ss            : unsigned_short;\n-      fpstate       : System.Address;\n-      oldmask       : unsigned_long;\n-      cr2           : unsigned_long);\n-\n-   function To_Task_ID is new Unchecked_Conversion (System.Address, Task_ID);\n-\n-   function To_Address is new Unchecked_Conversion (Task_ID, System.Address);\n-\n-   function To_pthread_t is new Unchecked_Conversion\n-     (Integer, System.OS_Interface.pthread_t);\n+   Foreign_Task_Elaborated : aliased Boolean := True;\n+   --  Used to identified fake tasks (i.e., non-Ada Threads).\n \n    --------------------\n    -- Local Packages --\n@@ -192,6 +154,10 @@ package body System.Task_Primitives.Operations is\n       pragma Inline (Initialize);\n       --  Initialize various data needed by this package.\n \n+      function Is_Valid_Task return Boolean;\n+      pragma Inline (Is_Valid_Task);\n+      --  Does executing thread have a TCB?\n+\n       procedure Set (Self_Id : Task_ID);\n       pragma Inline (Set);\n       --  Set the self id for the current task.\n@@ -205,92 +171,45 @@ package body System.Task_Primitives.Operations is\n    package body Specific is separate;\n    --  The body of this package is target specific.\n \n+   ---------------------------------\n+   -- Support for foreign threads --\n+   ---------------------------------\n+\n+   function Register_Foreign_Thread (Thread : Thread_Id) return Task_ID;\n+   --  Allocate and Initialize a new ATCB for the current Thread.\n+\n+   function Register_Foreign_Thread\n+     (Thread : Thread_Id) return Task_ID is separate;\n+\n+   -----------------------\n+   -- Local Subprograms --\n+   -----------------------\n+\n+   subtype unsigned_long is Interfaces.C.unsigned_long;\n+\n+   procedure Abort_Handler (signo : Signal);\n+\n+   function To_Address is new Unchecked_Conversion (Task_ID, System.Address);\n+\n+   function To_pthread_t is new Unchecked_Conversion\n+     (unsigned_long, System.OS_Interface.pthread_t);\n+\n    -------------------\n    -- Abort_Handler --\n    -------------------\n \n-   --  Target-dependent binding of inter-thread Abort signal to\n-   --  the raising of the Abort_Signal exception.\n-\n-   --  The technical issues and alternatives here are essentially\n-   --  the same as for raising exceptions in response to other\n-   --  signals (e.g. Storage_Error).  See code and comments in\n-   --  the package body System.Interrupt_Management.\n-\n-   --  Some implementations may not allow an exception to be propagated\n-   --  out of a handler, and others might leave the signal or\n-   --  interrupt that invoked this handler masked after the exceptional\n-   --  return to the application code.\n-\n-   --  GNAT exceptions are originally implemented using setjmp()/longjmp().\n-   --  On most UNIX systems, this will allow transfer out of a signal handler,\n-   --  which is usually the only mechanism available for implementing\n-   --  asynchronous handlers of this kind.  However, some\n-   --  systems do not restore the signal mask on longjmp(), leaving the\n-   --  abort signal masked.\n-\n-   --  Alternative solutions include:\n-\n-   --       1. Change the PC saved in the system-dependent Context\n-   --          parameter to point to code that raises the exception.\n-   --          Normal return from this handler will then raise\n-   --          the exception after the mask and other system state has\n-   --          been restored (see example below).\n-   --       2. Use siglongjmp()/sigsetjmp() to implement exceptions.\n-   --       3. Unmask the signal in the Abortion_Signal exception handler\n-   --          (in the RTS).\n-\n-   --  Note that with the new exception mechanism, it is not correct to\n-   --  simply \"raise\" an exception from a signal handler, that's why we\n-   --  use Raise_From_Signal_Handler\n-\n-   procedure Abort_Handler\n-     (signo   : Signal;\n-      gs            : unsigned_short;\n-      fs            : unsigned_short;\n-      es            : unsigned_short;\n-      ds            : unsigned_short;\n-      edi           : unsigned_long;\n-      esi           : unsigned_long;\n-      ebp           : unsigned_long;\n-      esp           : unsigned_long;\n-      ebx           : unsigned_long;\n-      edx           : unsigned_long;\n-      ecx           : unsigned_long;\n-      eax           : unsigned_long;\n-      trapno        : unsigned_long;\n-      err           : unsigned_long;\n-      eip           : unsigned_long;\n-      cs            : unsigned_short;\n-      eflags        : unsigned_long;\n-      esp_at_signal : unsigned_long;\n-      ss            : unsigned_short;\n-      fpstate       : System.Address;\n-      oldmask       : unsigned_long;\n-      cr2           : unsigned_long)\n-   is\n+   procedure Abort_Handler (signo : Signal) is\n+      pragma Unreferenced (signo);\n+\n       Self_Id : Task_ID := Self;\n       Result  : Interfaces.C.int;\n       Old_Set : aliased sigset_t;\n \n-      function To_Machine_State_Ptr is new\n-        Unchecked_Conversion (Address, Machine_State_Ptr);\n-\n-      --  These are not directly visible\n-\n-      procedure Raise_From_Signal_Handler\n-        (E : Ada.Exceptions.Exception_Id;\n-         M : System.Address);\n-      pragma Import\n-        (Ada, Raise_From_Signal_Handler,\n-         \"ada__exceptions__raise_from_signal_handler\");\n-      pragma No_Return (Raise_From_Signal_Handler);\n-\n-      mstate  : Machine_State_Ptr;\n-      message : aliased constant String := \"\" & ASCII.Nul;\n-      --  a null terminated String.\n-\n    begin\n+      if ZCX_By_Default and then GCC_ZCX_Support then\n+         return;\n+      end if;\n+\n       if Self_Id.Deferral_Level = 0\n         and then Self_Id.Pending_ATC_Level < Self_Id.ATC_Nesting_Level\n         and then not Self_Id.Aborting\n@@ -303,16 +222,7 @@ package body System.Task_Primitives.Operations is\n            Unblocked_Signal_Mask'Unchecked_Access, Old_Set'Unchecked_Access);\n          pragma Assert (Result = 0);\n \n-         mstate := To_Machine_State_Ptr (SSL.Get_Machine_State_Addr.all);\n-         mstate.eip := eip;\n-         mstate.ebx := ebx;\n-         mstate.esp := esp_at_signal;\n-         mstate.ebp := ebp;\n-         mstate.esi := esi;\n-         mstate.edi := edi;\n-\n-         Raise_From_Signal_Handler\n-           (Standard'Abort_Signal'Identity, message'Address);\n+         raise Standard'Abort_Signal;\n       end if;\n    end Abort_Handler;\n \n@@ -760,6 +670,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Yield (Do_Yield : Boolean := True) is\n       Result : Interfaces.C.int;\n+      pragma Unreferenced (Result);\n \n    begin\n       if Do_Yield then\n@@ -852,6 +763,25 @@ package body System.Task_Primitives.Operations is\n       return new Ada_Task_Control_Block (Entry_Num);\n    end New_ATCB;\n \n+   -------------------\n+   -- Is_Valid_Task --\n+   -------------------\n+\n+   function Is_Valid_Task return Boolean renames Specific.Is_Valid_Task;\n+\n+   -----------------------------\n+   -- Register_Foreign_Thread --\n+   -----------------------------\n+\n+   function Register_Foreign_Thread return Task_ID is\n+   begin\n+      if Is_Valid_Task then\n+         return Self;\n+      else\n+         return Register_Foreign_Thread (pthread_self);\n+      end if;\n+   end Register_Foreign_Thread;\n+\n    --------------------\n    -- Initialize_TCB --\n    --------------------\n@@ -906,23 +836,41 @@ package body System.Task_Primitives.Operations is\n       Priority   : System.Any_Priority;\n       Succeeded  : out Boolean)\n    is\n+      Adjusted_Stack_Size : Interfaces.C.size_t;\n+\n       Attributes : aliased pthread_attr_t;\n       Result     : Interfaces.C.int;\n \n       function Thread_Body_Access is new\n         Unchecked_Conversion (System.Address, Thread_Body);\n \n    begin\n+      if Stack_Size = Unspecified_Size then\n+         Adjusted_Stack_Size := Interfaces.C.size_t (Default_Stack_Size);\n+\n+      elsif Stack_Size < Minimum_Stack_Size then\n+         Adjusted_Stack_Size := Interfaces.C.size_t (Minimum_Stack_Size);\n+\n+      else\n+         Adjusted_Stack_Size := Interfaces.C.size_t (Stack_Size);\n+      end if;\n+\n       Result := pthread_attr_init (Attributes'Access);\n       pragma Assert (Result = 0 or else Result = ENOMEM);\n \n-      if Result /= 0 or else Stack_Size > Max_Stack_Size then\n+      if Result /= 0 then\n          Succeeded := False;\n          return;\n       end if;\n \n-      Result := pthread_attr_setdetachstate\n-        (Attributes'Access, PTHREAD_CREATE_DETACHED);\n+      Result :=\n+        pthread_attr_setstacksize\n+          (Attributes'Access, Adjusted_Stack_Size);\n+      pragma Assert (Result = 0);\n+\n+      Result :=\n+        pthread_attr_setdetachstate\n+          (Attributes'Access, PTHREAD_CREATE_DETACHED);\n       pragma Assert (Result = 0);\n \n       --  Since the initial signal mask of a thread is inherited from the\n@@ -952,6 +900,7 @@ package body System.Task_Primitives.Operations is\n    procedure Finalize_TCB (T : Task_ID) is\n       Result : Interfaces.C.int;\n       Tmp    : Task_ID := T;\n+      Is_Self : constant Boolean := T = Self;\n \n       procedure Free is new\n         Unchecked_Deallocation (Ada_Task_Control_Block, Task_ID);\n@@ -970,6 +919,12 @@ package body System.Task_Primitives.Operations is\n       end if;\n \n       Free (Tmp);\n+\n+      if Is_Self then\n+         Result := pthread_setspecific (ATCB_Key, System.Null_Address);\n+         pragma Assert (Result = 0);\n+      end if;\n+\n    end Finalize_TCB;\n \n    ---------------\n@@ -978,7 +933,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Exit_Task is\n    begin\n-      pthread_exit (System.Null_Address);\n+      Specific.Set (null);\n    end Exit_Task;\n \n    ----------------\n@@ -1066,10 +1021,24 @@ package body System.Task_Primitives.Operations is\n    ----------------\n \n    procedure Initialize (Environment_Task : Task_ID) is\n-      act       : aliased struct_sigaction;\n-      old_act   : aliased struct_sigaction;\n-      Tmp_Set   : aliased sigset_t;\n-      Result    : Interfaces.C.int;\n+      act     : aliased struct_sigaction;\n+      old_act : aliased struct_sigaction;\n+      Tmp_Set : aliased sigset_t;\n+      Result  : Interfaces.C.int;\n+\n+      function State (Int : System.Interrupt_Management.Interrupt_ID)\n+                     return Character;\n+      pragma Import (C, State, \"__gnat_get_interrupt_state\");\n+      --  Get interrupt state.  Defined in a-init.c\n+      --  The input argument is the interrupt number,\n+      --  and the result is one of the following:\n+\n+      Default : constant Character := 's';\n+      --    'n'   this interrupt not set by any Interrupt_State pragma\n+      --    'u'   Interrupt_State pragma set state to User\n+      --    'r'   Interrupt_State pragma set state to Runtime\n+      --    's'   Interrupt_State pragma set state to System (use \"default\"\n+      --           system handler)\n \n    begin\n       Environment_Task_ID := Environment_Task;\n@@ -1090,19 +1059,23 @@ package body System.Task_Primitives.Operations is\n \n       --  Install the abort-signal handler\n \n-      act.sa_flags := 0;\n-      act.sa_handler := Abort_Handler'Address;\n+      if State (System.Interrupt_Management.Abort_Task_Interrupt)\n+        /= Default\n+      then\n+         act.sa_flags := 0;\n+         act.sa_handler := Abort_Handler'Address;\n \n-      Result := sigemptyset (Tmp_Set'Access);\n-      pragma Assert (Result = 0);\n-      act.sa_mask := Tmp_Set;\n+         Result := sigemptyset (Tmp_Set'Access);\n+         pragma Assert (Result = 0);\n+         act.sa_mask := Tmp_Set;\n \n-      Result :=\n-        sigaction\n-          (Signal (Interrupt_Management.Abort_Task_Interrupt),\n-           act'Unchecked_Access,\n-           old_act'Unchecked_Access);\n-      pragma Assert (Result = 0);\n+         Result :=\n+           sigaction\n+           (Signal (Interrupt_Management.Abort_Task_Interrupt),\n+            act'Unchecked_Access,\n+            old_act'Unchecked_Access);\n+         pragma Assert (Result = 0);\n+      end if;\n    end Initialize;\n \n begin"}, {"sha": "078ef3e0e8ae80846f71bfd7f09420c3cf6eef94", "filename": "gcc/ada/5itaspri.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5itaspri.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5itaspri.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5itaspri.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -27,7 +27,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "3e1e3cf98959ce2231a4b044c7800437504b06d3", "filename": "gcc/ada/5ksystem.ads", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5ksystem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5ksystem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5ksystem.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -126,22 +126,33 @@ private\n    Backend_Divide_Checks     : constant Boolean := False;\n    Backend_Overflow_Checks   : constant Boolean := False;\n    Command_Line_Args         : constant Boolean := False;\n+   Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := True;\n+   Duration_32_Bits          : constant Boolean := False;\n    Exit_Status_Supported     : constant Boolean := True;\n    Fractional_Fixed_Ops      : constant Boolean := False;\n    Frontend_Layout           : constant Boolean := False;\n    Functions_Return_By_DSP   : constant Boolean := False;\n-   Long_Shifts_Inlined       : constant Boolean := False;\n-   High_Integrity_Mode       : constant Boolean := False;\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := False;\n    Stack_Check_Default       : constant Boolean := False;\n    Stack_Check_Probes        : constant Boolean := False;\n+   Support_64_Bit_Divides    : constant Boolean := True;\n+   Support_Aggregates        : constant Boolean := True;\n+   Support_Composite_Assign  : constant Boolean := True;\n+   Support_Composite_Compare : constant Boolean := True;\n+   Support_Long_Shifts       : constant Boolean := True;\n+   Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := True;\n    ZCX_By_Default            : constant Boolean := False;\n    GCC_ZCX_Support           : constant Boolean := False;\n    Front_End_ZCX_Support     : constant Boolean := False;\n \n+   --  Obsolete entries, to be removed eventually (bootstrap issues!)\n+\n+   High_Integrity_Mode       : constant Boolean := False;\n+   Long_Shifts_Inlined       : constant Boolean := False;\n+\n end System;"}, {"sha": "a0f10be72a05562cdbff56b0928edff0b119e1bd", "filename": "gcc/ada/5kvxwork.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5kvxwork.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5kvxwork.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5kvxwork.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -27,7 +27,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "56871f3d9ecc1c8ec7c24edcfce0cba2a796fe9b", "filename": "gcc/ada/5lintman.adb", "status": "modified", "additions": 84, "deletions": 27, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5lintman.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5lintman.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5lintman.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,8 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---             Copyright (C) 1991-2002 Florida State University             --\n+--             Copyright (C) 1991-1994, Florida State University            --\n+--             Copyright (C) 1995-2003, Ada Core Technologies               --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,9 +27,8 @@\n -- however invalidate  any other reasons why  the executable file  might be --\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University. It is --\n--- now maintained by Ada Core Technologies Inc. in cooperation with Florida --\n--- State University (http://www.gnat.com).                                  --\n+-- GNARL was developed by the GNARL team at Florida State University.       --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n@@ -133,6 +133,9 @@ package body System.Interrupt_Management is\n    -- Notify_Exception --\n    ----------------------\n \n+   pragma Warnings (Off);\n+   --  Because many unaccessed arguments\n+\n    Signal_Mask : aliased sigset_t;\n    --  The set of signals handled by Notify_Exception\n \n@@ -191,6 +194,7 @@ package body System.Interrupt_Management is\n       oldmask       : unsigned_long;\n       cr2           : unsigned_long)\n    is\n+      pragma Warnings (On);\n \n       function To_Machine_State_Ptr is new\n         Unchecked_Conversion (Address, Machine_State_Ptr);\n@@ -207,7 +211,7 @@ package body System.Interrupt_Management is\n \n       mstate  : Machine_State_Ptr;\n       message : aliased constant String := \"\" & ASCII.Nul;\n-      --  a null terminated String.\n+      --  A null terminated String.\n \n       Result  : int;\n \n@@ -218,7 +222,7 @@ package body System.Interrupt_Management is\n \n       --  ??? The original signal mask (the one we had before coming into this\n       --  signal catching function) should be restored by\n-      --  Raise_From_Signal_Handler. For now, restore it explicitly\n+      --  Raise_From_Signal_Handler. For now, restore it explicitely\n \n       Result := pthread_sigmask (SIG_UNBLOCK, Signal_Mask'Access, null);\n       pragma Assert (Result = 0);\n@@ -269,8 +273,22 @@ begin\n       old_act : aliased struct_sigaction;\n       Result  : int;\n \n-   begin\n+      function State (Int : Interrupt_ID) return Character;\n+      pragma Import (C, State, \"__gnat_get_interrupt_state\");\n+      --  Get interrupt state.  Defined in a-init.c\n+      --  The input argument is the interrupt number,\n+      --  and the result is one of the following:\n+\n+      User    : constant Character := 'u';\n+      Runtime : constant Character := 'r';\n+      Default : constant Character := 's';\n+      --    'n'   this interrupt not set by any Interrupt_State pragma\n+      --    'u'   Interrupt_State pragma set state to User\n+      --    'r'   Interrupt_State pragma set state to Runtime\n+      --    's'   Interrupt_State pragma set state to System (use \"default\"\n+      --           system handler)\n \n+   begin\n       --  Need to call pthread_init very early because it is doing signal\n       --  initializations.\n \n@@ -281,64 +299,103 @@ begin\n       act.sa_handler := Notify_Exception'Address;\n \n       act.sa_flags := 0;\n+\n       --  On some targets, we set sa_flags to SA_NODEFER so that during the\n       --  handler execution we do not change the Signal_Mask to be masked for\n       --  the Signal.\n+\n       --  This is a temporary fix to the problem that the Signal_Mask is\n       --  not restored after the exception (longjmp) from the handler.\n       --  The right fix should be made in sigsetjmp so that we save\n       --  the Signal_Set and restore it after a longjmp.\n-      --  Since SA_NODEFER is obsolete, instead we reset explicitly\n+\n+      --  Since SA_NODEFER is obsolete, instead we reset explicitely\n       --  the mask in the exception handler.\n \n       Result := sigemptyset (Signal_Mask'Access);\n       pragma Assert (Result = 0);\n \n+      --  Add signals that map to Ada exceptions to the mask.\n+\n       for J in Exception_Interrupts'Range loop\n-         Result :=\n-           sigaddset (Signal_Mask'Access, Signal (Exception_Interrupts (J)));\n-         pragma Assert (Result = 0);\n+         if State (Exception_Interrupts (J)) /= Default  then\n+            Result :=\n+            sigaddset (Signal_Mask'Access, Signal (Exception_Interrupts (J)));\n+            pragma Assert (Result = 0);\n+         end if;\n       end loop;\n \n       act.sa_mask := Signal_Mask;\n \n+      pragma Assert (Keep_Unmasked = (Interrupt_ID'Range => False));\n+      pragma Assert (Reserve = (Interrupt_ID'Range => False));\n+\n+      --  Process state of exception signals\n+\n       for J in Exception_Interrupts'Range loop\n-         Keep_Unmasked (Exception_Interrupts (J)) := True;\n-         Result :=\n-           sigaction\n-           (Signal (Exception_Interrupts (J)),\n-            act'Unchecked_Access,\n-            old_act'Unchecked_Access);\n-         pragma Assert (Result = 0);\n+         if State (Exception_Interrupts (J)) /= User then\n+            Keep_Unmasked (Exception_Interrupts (J)) := True;\n+            Reserve (Exception_Interrupts (J)) := True;\n+\n+            if State (Exception_Interrupts (J)) /= Default then\n+               Result :=\n+                 sigaction\n+                 (Signal (Exception_Interrupts (J)), act'Unchecked_Access,\n+                  old_act'Unchecked_Access);\n+               pragma Assert (Result = 0);\n+            end if;\n+         end if;\n       end loop;\n \n-      Keep_Unmasked (Abort_Task_Interrupt) := True;\n+      if State (Abort_Task_Interrupt) /= User then\n+         Keep_Unmasked (Abort_Task_Interrupt) := True;\n+         Reserve (Abort_Task_Interrupt) := True;\n+      end if;\n \n-      --  By keeping SIGINT unmasked, allow the user to do a Ctrl-C, but in the\n-      --  same time, disable the ability of handling this signal\n-      --  via Ada.Interrupts.\n-      --  The pragma Unreserve_All_Interrupts allows the user to\n-      --  change this behavior.\n+      --  Set SIGINT to unmasked state as long as it's\n+      --  not in \"User\" state.  Check for Unreserve_All_Interrupts last\n \n-      if Unreserve_All_Interrupts = 0 then\n+      if State (SIGINT) /= User then\n          Keep_Unmasked (SIGINT) := True;\n+         Reserve (SIGINT) := True;\n       end if;\n \n+      --  Check all signals for state that requires keeping them\n+      --  unmasked and reserved\n+\n+      for J in Interrupt_ID'Range loop\n+         if State (J) = Default or else State (J) = Runtime then\n+            Keep_Unmasked (J) := True;\n+            Reserve (J) := True;\n+         end if;\n+      end loop;\n+\n+      --  Add the set of signals that must always be unmasked for this target\n+\n       for J in Unmasked'Range loop\n          Keep_Unmasked (Interrupt_ID (Unmasked (J))) := True;\n+         Reserve (Interrupt_ID (Unmasked (J))) := True;\n       end loop;\n \n-      Reserve := Keep_Unmasked or Keep_Masked;\n+      --  Add target-specific reserved signals\n \n       for J in Reserved'Range loop\n          Reserve (Interrupt_ID (Reserved (J))) := True;\n       end loop;\n \n-      Reserve (0) := True;\n+      --  Process pragma Unreserve_All_Interrupts. This overrides any\n+      --  settings due to pragma Interrupt_State:\n+\n+      if Unreserve_All_Interrupts /= 0 then\n+         Keep_Unmasked (SIGINT) := False;\n+         Reserve (SIGINT) := False;\n+      end if;\n+\n       --  We do not have Signal 0 in reality. We just use this value\n       --  to identify non-existent signals (see s-intnam.ads). Therefore,\n       --  Signal 0 should not be used in all signal related operations hence\n       --  mark it as reserved.\n \n+      Reserve (0) := True;\n    end;\n end System.Interrupt_Management;"}, {"sha": "ad40c10b0df570149023d18259ed2c5d61f94b71", "filename": "gcc/ada/5lml-tgt.adb", "status": "modified", "additions": 152, "deletions": 122, "changes": 274, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5lml-tgt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5lml-tgt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5lml-tgt.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---              Copyright (C) 2001, Ada Core Technologies, Inc.             --\n+--              Copyright (C) 2001-2003, Free Software Foundation, Inc.     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -21,7 +21,7 @@\n -- MA 02111-1307, USA.                                                      --\n --                                                                          --\n -- GNAT was originally developed  by the GNAT team at  New York University. --\n--- It is now maintained by Ada Core Technologies Inc (http://www.gnat.com). --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n@@ -30,73 +30,69 @@\n \n --  This is the GNU/Linux version of the body.\n \n-with Ada.Characters.Handling;   use Ada.Characters.Handling;\n-with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n with MLib.Fil;\n with MLib.Utl;\n-with Namet;       use Namet;\n+with Namet;  use Namet;\n with Opt;\n-with Osint;       use Osint;\n-with Output;      use Output;\n+with Output; use Output;\n+with Prj.Com;\n with System;\n \n package body MLib.Tgt is\n \n    use GNAT;\n    use MLib;\n \n-   --  ??? serious lack of comments below, all these declarations need to\n-   --  be commented, none are:\n+   No_Arguments        : aliased Argument_List         := (1 .. 0 => null);\n+   Empty_Argument_List : constant Argument_List_Access := No_Arguments'Access;\n \n-   package Files renames MLib.Fil;\n-   package Tools renames MLib.Utl;\n+   Wl_Init_String : aliased String         := \"-Wl,-init\";\n+   Wl_Init        : constant String_Access := Wl_Init_String'Access;\n+   Wl_Fini_String : aliased String         := \"-Wl,-fini\";\n+   Wl_Fini        : constant String_Access := Wl_Fini_String'Access;\n \n-   Args : Argument_List_Access := new Argument_List (1 .. 20);\n-   Last_Arg : Natural := 0;\n+   Init_Fini_List :  constant Argument_List_Access :=\n+                       new Argument_List'(1 => Wl_Init,\n+                                          2 => null,\n+                                          3 => Wl_Fini,\n+                                          4 => null);\n+   --  Used to put switches for automatic elaboration/finalization\n \n-   Cp      : constant String_Access := Locate_Exec_On_Path (\"cp\");\n-   Force   : constant String_Access := new String'(\"-f\");\n+   ---------------------\n+   -- Archive_Builder --\n+   ---------------------\n \n-   procedure Add_Arg (Arg : String);\n-\n-   -------------\n-   -- Add_Arg --\n-   -------------\n-\n-   procedure Add_Arg (Arg : String) is\n+   function Archive_Builder return String is\n    begin\n-      if Last_Arg = Args'Last then\n-         declare\n-            New_Args : constant Argument_List_Access :=\n-                         new Argument_List (1 .. Args'Last * 2);\n+      return \"ar\";\n+   end Archive_Builder;\n \n-         begin\n-            New_Args (Args'Range) := Args.all;\n-            Args := New_Args;\n-         end;\n-      end if;\n+   -----------------------------\n+   -- Archive_Builder_Options --\n+   -----------------------------\n \n-      Last_Arg := Last_Arg + 1;\n-      Args (Last_Arg) := new String'(Arg);\n-   end Add_Arg;\n+   function Archive_Builder_Options return String_List_Access is\n+   begin\n+      return new String_List'(1 => new String'(\"cr\"));\n+   end Archive_Builder_Options;\n \n    -----------------\n    -- Archive_Ext --\n    -----------------\n \n    function Archive_Ext return  String is\n    begin\n-      return  \"a\";\n+      return \"a\";\n    end Archive_Ext;\n \n-   -----------------\n-   -- Base_Option --\n-   -----------------\n+   ---------------------\n+   -- Archive_Indexer --\n+   ---------------------\n \n-   function Base_Option return String is\n+   function Archive_Indexer return String is\n    begin\n-      return \"\";\n-   end Base_Option;\n+      return \"ranlib\";\n+   end Archive_Indexer;\n \n    ---------------------------\n    -- Build_Dynamic_Library --\n@@ -107,50 +103,67 @@ package body MLib.Tgt is\n       Foreign      : Argument_List;\n       Afiles       : Argument_List;\n       Options      : Argument_List;\n+      Interfaces   : Argument_List;\n       Lib_Filename : String;\n       Lib_Dir      : String;\n+      Driver_Name  : Name_Id := No_Name;\n       Lib_Address  : String  := \"\";\n       Lib_Version  : String  := \"\";\n-      Relocatable  : Boolean := False)\n+      Relocatable  : Boolean := False;\n+      Auto_Init    : Boolean := False)\n    is\n+      pragma Unreferenced (Foreign);\n+      pragma Unreferenced (Afiles);\n+      pragma Unreferenced (Interfaces);\n+      pragma Unreferenced (Lib_Address);\n+      pragma Unreferenced (Relocatable);\n+\n       Lib_File : constant String :=\n         Lib_Dir & Directory_Separator & \"lib\" &\n-        Files.Ext_To (Lib_Filename, DLL_Ext);\n-\n-      use type Argument_List;\n-      use type String_Access;\n-\n-      Version_Arg  : String_Access;\n+        Fil.Ext_To (Lib_Filename, DLL_Ext);\n \n+      Version_Arg          : String_Access;\n       Symbolic_Link_Needed : Boolean := False;\n \n+      Init_Fini : Argument_List_Access := Empty_Argument_List;\n+\n    begin\n       if Opt.Verbose_Mode then\n          Write_Str (\"building relocatable shared library \");\n          Write_Line (Lib_File);\n       end if;\n \n+      --  If specified, add automatic elaboration/finalization\n+      if Auto_Init then\n+         Init_Fini := Init_Fini_List;\n+         Init_Fini (2) := new String'(\"-Wl,\" & Lib_Filename & \"init\");\n+         Init_Fini (4) := new String'(\"-Wl,\" & Lib_Filename & \"final\");\n+      end if;\n+\n       if Lib_Version = \"\" then\n-         Tools.Gcc\n+         Utl.Gcc\n            (Output_File => Lib_File,\n             Objects     => Ofiles,\n-            Options     => Options);\n+            Options     => Options & Init_Fini.all,\n+            Driver_Name => Driver_Name);\n \n       else\n          Version_Arg := new String'(\"-Wl,-soname,\" & Lib_Version);\n \n          if Is_Absolute_Path (Lib_Version) then\n-            Tools.Gcc\n+            Utl.Gcc\n               (Output_File => Lib_Version,\n                Objects     => Ofiles,\n-               Options     => Options & Version_Arg);\n+               Options     => Options & Version_Arg & Init_Fini.all,\n+               Driver_Name => Driver_Name);\n             Symbolic_Link_Needed := Lib_Version /= Lib_File;\n \n          else\n-            Tools.Gcc\n+            Utl.Gcc\n               (Output_File => Lib_Dir & Directory_Separator & Lib_Version,\n                Objects     => Ofiles,\n-               Options     => Options & Version_Arg);\n+               Options     => Options & Version_Arg & Init_Fini.all,\n+               Driver_Name => Driver_Name);\n             Symbolic_Link_Needed :=\n               Lib_Dir & Directory_Separator & Lib_Version /= Lib_File;\n          end if;\n@@ -182,60 +195,6 @@ package body MLib.Tgt is\n       end if;\n    end Build_Dynamic_Library;\n \n-   --------------------\n-   -- Copy_ALI_Files --\n-   --------------------\n-\n-   procedure Copy_ALI_Files\n-     (From : Name_Id;\n-      To   : Name_Id)\n-   is\n-      Dir      : Dir_Type;\n-      Name     : String (1 .. 1_000);\n-      Last     : Natural;\n-      Success  : Boolean;\n-      From_Dir : constant String := Get_Name_String (From);\n-      To_Dir   : constant String_Access :=\n-                   new String'(Get_Name_String (To));\n-\n-   begin\n-      Last_Arg := 0;\n-      Open (Dir, From_Dir);\n-\n-      loop\n-         Read (Dir, Name, Last);\n-         exit when Last = 0;\n-         if Last > 4\n-\n-           and then\n-           To_Lower (Name (Last - 3 .. Last)) = \".ali\"\n-         then\n-            Add_Arg (From_Dir & Directory_Separator & Name (1 .. Last));\n-         end if;\n-      end loop;\n-\n-      if Last_Arg /= 0 then\n-         if not Opt.Quiet_Output then\n-            Write_Str (\"cp -f \");\n-\n-            for J in 1 .. Last_Arg loop\n-               Write_Str (Args (J).all);\n-               Write_Char (' ');\n-            end loop;\n-\n-            Write_Line (To_Dir.all);\n-         end if;\n-\n-         Spawn (Cp.all,\n-                Force & Args (1 .. Last_Arg) & To_Dir,\n-                Success);\n-\n-         if not Success then\n-            Fail (\"could not copy ALI files to library dir\");\n-         end if;\n-      end if;\n-   end Copy_ALI_Files;\n-\n    -------------------------\n    -- Default_DLL_Address --\n    -------------------------\n@@ -260,7 +219,7 @@ package body MLib.Tgt is\n \n    function Dynamic_Option return String is\n    begin\n-      return  \"-shared\";\n+      return \"-shared\";\n    end Dynamic_Option;\n \n    -------------------\n@@ -299,25 +258,78 @@ package body MLib.Tgt is\n       return \"libgnat.a\";\n    end Libgnat;\n \n-   -----------------------------\n-   -- Libraries_Are_Supported --\n-   -----------------------------\n+   ------------------------\n+   -- Library_Exists_For --\n+   ------------------------\n \n-   function Libraries_Are_Supported return Boolean is\n+   function Library_Exists_For (Project : Project_Id) return Boolean is\n    begin\n-      return True;\n-   end Libraries_Are_Supported;\n+      if not Projects.Table (Project).Library then\n+         Prj.Com.Fail (\"INTERNAL ERROR: Library_Exists_For called \" &\n+                       \"for non library project\");\n+         return False;\n+\n+      else\n+         declare\n+            Lib_Dir : constant String :=\n+              Get_Name_String (Projects.Table (Project).Library_Dir);\n+            Lib_Name : constant String :=\n+              Get_Name_String (Projects.Table (Project).Library_Name);\n+\n+         begin\n+            if Projects.Table (Project).Library_Kind = Static then\n+               return Is_Regular_File\n+                 (Lib_Dir & Directory_Separator & \"lib\" &\n+                  Fil.Ext_To (Lib_Name, Archive_Ext));\n+\n+            else\n+               return Is_Regular_File\n+                 (Lib_Dir & Directory_Separator & \"lib\" &\n+                  Fil.Ext_To (Lib_Name, DLL_Ext));\n+            end if;\n+         end;\n+      end if;\n+   end Library_Exists_For;\n+\n+   ---------------------------\n+   -- Library_File_Name_For --\n+   ---------------------------\n+\n+   function Library_File_Name_For (Project : Project_Id) return Name_Id is\n+   begin\n+      if not Projects.Table (Project).Library then\n+         Prj.Com.Fail (\"INTERNAL ERROR: Library_File_Name_For called \" &\n+                       \"for non library project\");\n+         return No_Name;\n+\n+      else\n+         declare\n+            Lib_Name : constant String :=\n+              Get_Name_String (Projects.Table (Project).Library_Name);\n+\n+         begin\n+            Name_Len := 3;\n+            Name_Buffer (1 .. Name_Len) := \"lib\";\n+\n+            if Projects.Table (Project).Library_Kind = Static then\n+               Add_Str_To_Name_Buffer (Fil.Ext_To (Lib_Name, Archive_Ext));\n+\n+            else\n+               Add_Str_To_Name_Buffer (Fil.Ext_To (Lib_Name, DLL_Ext));\n+            end if;\n+\n+            return Name_Find;\n+         end;\n+      end if;\n+   end Library_File_Name_For;\n \n    --------------------------------\n    -- Linker_Library_Path_Option --\n    --------------------------------\n \n-   function Linker_Library_Path_Option\n-     (Directory : String)\n-      return      String_Access\n-   is\n+   function Linker_Library_Path_Option return String_Access is\n    begin\n-      return new String'(\"-Wl,-rpath,\" & Directory);\n+      return new String'(\"-Wl,-rpath,\");\n    end Linker_Library_Path_Option;\n \n    ----------------\n@@ -326,7 +338,7 @@ package body MLib.Tgt is\n \n    function Object_Ext return String is\n    begin\n-      return  \"o\";\n+      return \"o\";\n    end Object_Ext;\n \n    ----------------\n@@ -335,7 +347,25 @@ package body MLib.Tgt is\n \n    function PIC_Option return String is\n    begin\n-      return  \"-fPIC\";\n+      return \"-fPIC\";\n    end PIC_Option;\n \n+   -----------------------------------------------\n+   -- Standalone_Library_Auto_Init_Is_Supported --\n+   -----------------------------------------------\n+\n+   function Standalone_Library_Auto_Init_Is_Supported return Boolean is\n+   begin\n+      return True;\n+   end Standalone_Library_Auto_Init_Is_Supported;\n+\n+   ---------------------------\n+   -- Support_For_Libraries --\n+   ---------------------------\n+\n+   function Support_For_Libraries return Library_Support is\n+   begin\n+      return Full;\n+   end Support_For_Libraries;\n+\n end MLib.Tgt;"}, {"sha": "498fa62574e328adcfe1f012c06ebda5a99fae3f", "filename": "gcc/ada/5losinte.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5losinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5losinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5losinte.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -27,7 +27,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "9b17c1587339d29862958c5ebb6d52468edbb8b1", "filename": "gcc/ada/5lparame.adb", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5lparame.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5lparame.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5lparame.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -0,0 +1,73 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--                    S Y S T E M . P A R A M E T E R S                     --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--          Copyright (C) 1995-2003 Free Software Foundation, Inc.          --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This is the Linux (native) specific version\n+\n+package body System.Parameters is\n+\n+   -------------------------\n+   -- Adjust_Storage_Size --\n+   -------------------------\n+\n+   function Adjust_Storage_Size (Size : Size_Type) return Size_Type is\n+   begin\n+      if Size = Unspecified_Size then\n+         return Default_Stack_Size;\n+\n+      elsif Size < Minimum_Stack_Size then\n+         return Minimum_Stack_Size;\n+\n+      else\n+         return Size;\n+      end if;\n+   end Adjust_Storage_Size;\n+\n+   ------------------------\n+   -- Default_Stack_Size --\n+   ------------------------\n+\n+   function Default_Stack_Size return Size_Type is\n+   begin\n+      return 2 * 1024 * 1024;\n+   end Default_Stack_Size;\n+\n+   ------------------------\n+   -- Minimum_Stack_Size --\n+   ------------------------\n+\n+   function Minimum_Stack_Size return Size_Type is\n+   begin\n+      return 8 * 1024;\n+   end Minimum_Stack_Size;\n+\n+end System.Parameters;"}, {"sha": "8bcf78082214130369906b1b8ea54de695f52a2b", "filename": "gcc/ada/5lsystem.ads", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5lsystem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5lsystem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5lsystem.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -58,7 +58,7 @@ pragma Pure (System);\n    Max_Mantissa          : constant := 63;\n    Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n \n-   Tick                  : constant := 0.01;\n+   Tick                  : constant := 0.000_001;\n \n    --  Storage-related Declarations\n \n@@ -118,22 +118,33 @@ private\n    Backend_Divide_Checks     : constant Boolean := False;\n    Backend_Overflow_Checks   : constant Boolean := False;\n    Command_Line_Args         : constant Boolean := True;\n+   Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := True;\n+   Duration_32_Bits          : constant Boolean := False;\n    Exit_Status_Supported     : constant Boolean := True;\n    Fractional_Fixed_Ops      : constant Boolean := False;\n    Frontend_Layout           : constant Boolean := False;\n    Functions_Return_By_DSP   : constant Boolean := False;\n-   Long_Shifts_Inlined       : constant Boolean := True;\n-   High_Integrity_Mode       : constant Boolean := False;\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := False;\n    Stack_Check_Probes        : constant Boolean := False;\n+   Support_64_Bit_Divides    : constant Boolean := True;\n+   Support_Aggregates        : constant Boolean := True;\n+   Support_Composite_Assign  : constant Boolean := True;\n+   Support_Composite_Compare : constant Boolean := True;\n+   Support_Long_Shifts       : constant Boolean := True;\n+   Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   ZCX_By_Default            : constant Boolean := False;\n-   GCC_ZCX_Support           : constant Boolean := False;\n+   ZCX_By_Default            : constant Boolean := True;\n+   GCC_ZCX_Support           : constant Boolean := True;\n    Front_End_ZCX_Support     : constant Boolean := False;\n \n+   --  Obsolete entries, to be removed eventually (bootstrap issues!)\n+\n+   High_Integrity_Mode       : constant Boolean := False;\n+   Long_Shifts_Inlined       : constant Boolean := True;\n+\n end System;"}, {"sha": "19c96d0d6ead5b754b12ae34c4b55d663fc17139", "filename": "gcc/ada/5msystem.ads", "status": "added", "additions": 158, "deletions": 0, "changes": 158, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5msystem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5msystem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5msystem.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -0,0 +1,158 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                        GNAT RUN-TIME COMPONENTS                          --\n+--                                                                          --\n+--                               S Y S T E M                                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                         (VxWorks Version Mips)                           --\n+--                                                                          --\n+--          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+package System is\n+pragma Pure (System);\n+--  Note that we take advantage of the implementation permission to\n+--  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+\n+   type Name is (SYSTEM_NAME_GNAT);\n+   System_Name : constant Name := SYSTEM_NAME_GNAT;\n+\n+   --  System-Dependent Named Numbers\n+\n+   Min_Int               : constant := Long_Long_Integer'First;\n+   Max_Int               : constant := Long_Long_Integer'Last;\n+\n+   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n+   Max_Nonbinary_Modulus : constant := Integer'Last;\n+\n+   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n+   Max_Digits            : constant := Long_Long_Float'Digits;\n+\n+   Max_Mantissa          : constant := 63;\n+   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n+\n+   Tick                  : constant := 1.0 / 60.0;\n+\n+   --  Storage-related Declarations\n+\n+   type Address is private;\n+   Null_Address : constant Address;\n+\n+   Storage_Unit : constant := 8;\n+   Word_Size    : constant := 32;\n+   Memory_Size  : constant := 2 ** 32;\n+\n+   --  Address comparison\n+\n+   function \"<\"  (Left, Right : Address) return Boolean;\n+   function \"<=\" (Left, Right : Address) return Boolean;\n+   function \">\"  (Left, Right : Address) return Boolean;\n+   function \">=\" (Left, Right : Address) return Boolean;\n+   function \"=\"  (Left, Right : Address) return Boolean;\n+\n+   pragma Import (Intrinsic, \"<\");\n+   pragma Import (Intrinsic, \"<=\");\n+   pragma Import (Intrinsic, \">\");\n+   pragma Import (Intrinsic, \">=\");\n+   pragma Import (Intrinsic, \"=\");\n+\n+   --  Other System-Dependent Declarations\n+\n+   type Bit_Order is (High_Order_First, Low_Order_First);\n+   Default_Bit_Order : constant Bit_Order := High_Order_First;\n+\n+   --  Priority-related Declarations (RM D.1)\n+\n+   --  256        is reserved for the VxWorks kernel\n+   --  248 - 255  correspond to hardware interrupt levels 0 .. 7\n+   --  247        is a catchall default \"interrupt\" priority for signals,\n+   --             allowing higher priority than normal tasks, but lower than\n+   --             hardware priority levels.  Protected Object ceilings can\n+   --             override these values.\n+   --  246        is used by the Interrupt_Manager task\n+\n+   Max_Priority           : constant Positive := 245;\n+   Max_Interrupt_Priority : constant Positive := 255;\n+\n+   subtype Any_Priority       is Integer      range   0 .. 255;\n+   subtype Priority           is Any_Priority range   0 .. 245;\n+   subtype Interrupt_Priority is Any_Priority range 246 .. 255;\n+\n+   Default_Priority : constant Priority := 122;\n+\n+private\n+\n+   type Address is mod Memory_Size;\n+   Null_Address : constant Address := 0;\n+\n+   --------------------------------------\n+   -- System Implementation Parameters --\n+   --------------------------------------\n+\n+   --  These parameters provide information about the target that is used\n+   --  by the compiler. They are in the private part of System, where they\n+   --  can be accessed using the special circuitry in the Targparm unit\n+   --  whose source should be consulted for more detailed descriptions\n+   --  of the individual switch values.\n+\n+   AAMP                      : constant Boolean := False;\n+   Backend_Divide_Checks     : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := False;\n+   Command_Line_Args         : constant Boolean := False;\n+   Configurable_Run_Time     : constant Boolean := False;\n+   Denorm                    : constant Boolean := False;\n+   Duration_32_Bits          : constant Boolean := False;\n+   Exit_Status_Supported     : constant Boolean := True;\n+   Fractional_Fixed_Ops      : constant Boolean := False;\n+   Frontend_Layout           : constant Boolean := False;\n+   Functions_Return_By_DSP   : constant Boolean := False;\n+   Machine_Overflows         : constant Boolean := False;\n+   Machine_Rounds            : constant Boolean := True;\n+   OpenVMS                   : constant Boolean := False;\n+   Signed_Zeros              : constant Boolean := True;\n+   Stack_Check_Default       : constant Boolean := False;\n+   Stack_Check_Probes        : constant Boolean := False;\n+   Support_64_Bit_Divides    : constant Boolean := True;\n+   Support_Aggregates        : constant Boolean := True;\n+   Support_Composite_Assign  : constant Boolean := True;\n+   Support_Composite_Compare : constant Boolean := True;\n+   Support_Long_Shifts       : constant Boolean := True;\n+   Suppress_Standard_Library : constant Boolean := False;\n+   Use_Ada_Main_Program_Name : constant Boolean := True;\n+   ZCX_By_Default            : constant Boolean := False;\n+   GCC_ZCX_Support           : constant Boolean := False;\n+   Front_End_ZCX_Support     : constant Boolean := False;\n+\n+   --  Obsolete entries, to be removed eventually (bootstrap issues!)\n+\n+   High_Integrity_Mode       : constant Boolean := False;\n+   Long_Shifts_Inlined       : constant Boolean := False;\n+\n+end System;"}, {"sha": "2e31d728aed396f2ecf28e333f2e76d38ac0aa2d", "filename": "gcc/ada/5mvxwork.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5mvxwork.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5mvxwork.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5mvxwork.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -27,7 +27,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "f99a104f671ee904131cb842f663d54bfd28c70e", "filename": "gcc/ada/5ninmaop.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5ninmaop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5ninmaop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5ninmaop.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -27,7 +27,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "9ef33ab5a15d0de02e96bd68f61505b7ffccc741", "filename": "gcc/ada/5nintman.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5nintman.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5nintman.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5nintman.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -27,7 +27,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "20b4d9de1fc5f24d89eb2fcdde972e0f26f56a0d", "filename": "gcc/ada/5nosinte.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5nosinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5nosinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5nosinte.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -27,7 +27,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "365b0d911d315ac848f3b9a61115161bd1fa5eb0", "filename": "gcc/ada/5ntaprop.adb", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5ntaprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5ntaprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5ntaprop.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -26,8 +26,8 @@\n -- however invalidate  any other reasons why  the executable file  might be --\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University. It is --\n--- now maintained by Ada Core Technologies, Inc. (http://www.gnat.com).     --\n+-- GNARL was developed by the GNARL team at Florida State University.       --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n@@ -266,6 +266,24 @@ package body System.Task_Primitives.Operations is\n       return new Ada_Task_Control_Block (Entry_Num);\n    end New_ATCB;\n \n+   -------------------\n+   -- Is_Valid_Task --\n+   -------------------\n+\n+   function Is_Valid_Task return Boolean is\n+   begin\n+      return False;\n+   end Is_Valid_Task;\n+\n+   -----------------------------\n+   -- Register_Foreign_Thread --\n+   -----------------------------\n+\n+   function Register_Foreign_Thread return Task_ID is\n+   begin\n+      return null;\n+   end Register_Foreign_Thread;\n+\n    ----------------------\n    --  Initialize_TCB  --\n    ----------------------"}, {"sha": "6e6025c589dc244d4e0c1c21c7528cf67949d36d", "filename": "gcc/ada/5ntaspri.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5ntaspri.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5ntaspri.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5ntaspri.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -27,7 +27,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "7dbe33f26a71367d3edb6117a406a07515d30fcc", "filename": "gcc/ada/5ointerr.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5ointerr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5ointerr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5ointerr.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,8 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---            Copyright (C) 1991-2002 Florida State University              --\n+--             Copyright (C) 1991-1994, Florida State University            --\n+--             Copyright (C) 1995-2003, Ada Core Technologies               --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,9 +27,8 @@\n -- however invalidate  any other reasons why  the executable file  might be --\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University. It is --\n--- now maintained by Ada Core Technologies Inc. in cooperation with Florida --\n--- State University (http://www.gnat.com).                                  --\n+-- GNARL was developed by the GNARL team at Florida State University.       --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "aa704d3a187fbece93043f539b73cea18711ccee", "filename": "gcc/ada/5omastop.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5omastop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5omastop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5omastop.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -463,7 +463,7 @@ package body System.Machine_State_Operations is\n          return To_Address (MS.eip);\n       else\n          --  When doing a call the return address is pushed to the stack.\n-         --  We want to return the call point address, so we subtract\n+         --  We want to return the call point address, so we substract\n          --  Asm_Call_Size from the return address. This value is set\n          --  to 5 as an asm call takes 5 bytes on x86 architectures.\n "}, {"sha": "e2a241118d5f395056983c80d20ccbd966e2a239", "filename": "gcc/ada/5oosinte.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5oosinte.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5oosinte.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5oosinte.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,8 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---            Copyright (C) 1991-2002 Florida State University              --\n+--             Copyright (C) 1991-1994, Florida State University            --\n+--             Copyright (C) 1995-2003, Ada Core Technologies               --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,9 +27,8 @@\n -- however invalidate  any other reasons why  the executable file  might be --\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University. It is --\n--- now maintained by Ada Core Technologies Inc. in cooperation with Florida --\n--- State University (http://www.gnat.com).                                  --\n+-- GNARL was developed by the GNARL team at Florida State University.       --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "450a6064bfafbc533353b9b588c60d4d682bff51", "filename": "gcc/ada/5oosinte.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5oosinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5oosinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5oosinte.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,8 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---            Copyright (C) 1991-2001 Florida State University              --\n+--             Copyright (C) 1991-1994, Florida State University            --\n+--             Copyright (C) 1995-2003, Ada Core Technologies               --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,9 +27,8 @@\n -- however invalidate  any other reasons why  the executable file  might be --\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University. It is --\n--- now maintained by Ada Core Technologies Inc. in cooperation with Florida --\n--- State University (http://www.gnat.com).                                  --\n+-- GNARL was developed by the GNARL team at Florida State University.       --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "42e414cde449b5792a50e959bd2351446a71f25a", "filename": "gcc/ada/5oosprim.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5oosprim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5oosprim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5oosprim.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -27,7 +27,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "1ae7463618b38b359bd0cea66cfb53579dc454da", "filename": "gcc/ada/5oparame.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5oparame.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5oparame.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5oparame.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1997-1998 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1997-2002 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "17acb5bc21e579e02a989b7b655e6e7e27cbf656", "filename": "gcc/ada/5osystem.ads", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5osystem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5osystem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5osystem.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -118,22 +118,33 @@ private\n    Backend_Divide_Checks     : constant Boolean := False;\n    Backend_Overflow_Checks   : constant Boolean := False;\n    Command_Line_Args         : constant Boolean := True;\n+   Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := True;\n+   Duration_32_Bits          : constant Boolean := False;\n    Exit_Status_Supported     : constant Boolean := True;\n    Fractional_Fixed_Ops      : constant Boolean := False;\n    Frontend_Layout           : constant Boolean := False;\n    Functions_Return_By_DSP   : constant Boolean := False;\n-   Long_Shifts_Inlined       : constant Boolean := True;\n-   High_Integrity_Mode       : constant Boolean := False;\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n    OpenVMS                   : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := False;\n    Stack_Check_Probes        : constant Boolean := False;\n+   Support_64_Bit_Divides    : constant Boolean := True;\n+   Support_Aggregates        : constant Boolean := True;\n+   Support_Composite_Assign  : constant Boolean := True;\n+   Support_Composite_Compare : constant Boolean := True;\n+   Support_Long_Shifts       : constant Boolean := True;\n+   Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := False;\n    GCC_ZCX_Support           : constant Boolean := False;\n    Front_End_ZCX_Support     : constant Boolean := True;\n \n+   --  Obsolete entries, to be removed eventually (bootstrap issues!)\n+\n+   High_Integrity_Mode       : constant Boolean := False;\n+   Long_Shifts_Inlined       : constant Boolean := True;\n+\n end System;"}, {"sha": "924f477bb674599e3caf47f5b861fabe1a5715cd", "filename": "gcc/ada/5otaprop.adb", "status": "modified", "additions": 49, "deletions": 26, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5otaprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5otaprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5otaprop.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2002, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2003, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,8 +26,8 @@\n -- however invalidate  any other reasons why  the executable file  might be --\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University. It is --\n--- now maintained by Ada Core Technologies, Inc. (http://www.gnat.com).     --\n+-- GNARL was developed by the GNARL team at Florida State University.       --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n@@ -200,8 +200,8 @@ package body System.Task_Primitives.Operations is\n    --  ??? Check the comment above\n \n    procedure Stack_Guard (T : ST.Task_ID; On : Boolean) is\n-      pragma Warnings (Off, T);\n-      pragma Warnings (Off, On);\n+      pragma Unreferenced (T);\n+      pragma Unreferenced (On);\n \n    begin\n       null;\n@@ -253,7 +253,7 @@ package body System.Task_Primitives.Operations is\n    end Initialize_Lock;\n \n    procedure Initialize_Lock (L : access RTS_Lock; Level : Lock_Level) is\n-      pragma Warnings (Off, Level);\n+      pragma Unreferenced (Level);\n \n    begin\n       if DosCreateMutexSem\n@@ -289,7 +289,7 @@ package body System.Task_Primitives.Operations is\n    procedure Write_Lock (L : access Lock; Ceiling_Violation : out Boolean) is\n       Self_ID      : constant Task_ID := Thread_Local_Data_Ptr.Self_ID;\n       Old_Priority : constant Any_Priority :=\n-        Self_ID.Common.LL.Current_Priority;\n+                       Self_ID.Common.LL.Current_Priority;\n \n    begin\n       if L.Priority < Old_Priority then\n@@ -316,7 +316,8 @@ package body System.Task_Primitives.Operations is\n    end Write_Lock;\n \n    procedure Write_Lock\n-     (L : access RTS_Lock; Global_Lock : Boolean := False)\n+     (L           : access RTS_Lock;\n+      Global_Lock : Boolean := False)\n    is\n       Self_ID      : Task_ID;\n       Old_Priority : Any_Priority;\n@@ -347,6 +348,7 @@ package body System.Task_Primitives.Operations is\n    procedure Write_Lock (T : Task_ID) is\n    begin\n       if not Single_Lock then\n+\n          --  Request the lock and then update the lock owner data\n \n          Must_Not_Fail\n@@ -417,6 +419,7 @@ package body System.Task_Primitives.Operations is\n          Must_Not_Fail (DosReleaseMutexSem (L.Mutex));\n \n          --  Reset priority after unlocking to avoid priority inversion\n+\n          Thread_Local_Data_Ptr.Lock_Prio_Level :=\n            Thread_Local_Data_Ptr.Lock_Prio_Level - 1;\n \n@@ -429,6 +432,7 @@ package body System.Task_Primitives.Operations is\n    procedure Unlock (T : Task_ID) is\n    begin\n       if not Single_Lock then\n+\n          --  Check the owner data\n \n          pragma Assert (Suppress_Owner_Check\n@@ -449,7 +453,7 @@ package body System.Task_Primitives.Operations is\n      (Self_ID : Task_ID;\n       Reason  : System.Tasking.Task_States)\n    is\n-      pragma Warnings (Off, Reason);\n+      pragma Unreferenced (Reason);\n \n       Count : aliased ULONG; -- Used to store dummy result\n \n@@ -502,7 +506,7 @@ package body System.Task_Primitives.Operations is\n       Timedout : out Boolean;\n       Yielded  : out Boolean)\n    is\n-      pragma Warnings (Off, Reason);\n+      pragma Unreferenced (Reason);\n \n       Check_Time : constant Duration := OSP.Monotonic_Clock;\n       Rel_Time   : Duration;\n@@ -676,7 +680,8 @@ package body System.Task_Primitives.Operations is\n    ------------\n \n    procedure Wakeup (T : Task_ID; Reason : System.Tasking.Task_States) is\n-      pragma Warnings (Off, Reason);\n+      pragma Unreferenced (Reason);\n+\n    begin\n       Sem_Must_Not_Fail (DosPostEventSem (T.Common.LL.CV));\n    end Wakeup;\n@@ -742,7 +747,7 @@ package body System.Task_Primitives.Operations is\n       Prio                : System.Any_Priority;\n       Loss_Of_Inheritance : Boolean := False)\n    is\n-      pragma Warnings (Off, Loss_Of_Inheritance);\n+      pragma Unreferenced (Loss_Of_Inheritance);\n \n    begin\n       T.Common.Current_Priority := Prio;\n@@ -799,9 +804,27 @@ package body System.Task_Primitives.Operations is\n       return new Ada_Task_Control_Block (Entry_Num);\n    end New_ATCB;\n \n-   ----------------------\n-   --  Initialize_TCB  --\n-   ----------------------\n+   -------------------\n+   -- Is_Valid_Task --\n+   -------------------\n+\n+   function Is_Valid_Task return Boolean is\n+   begin\n+      return False;\n+   end Is_Valid_Task;\n+\n+   -----------------------------\n+   -- Register_Foreign_Thread --\n+   -----------------------------\n+\n+   function Register_Foreign_Thread return Task_ID is\n+   begin\n+      return null;\n+   end Register_Foreign_Thread;\n+\n+   --------------------\n+   -- Initialize_TCB --\n+   --------------------\n \n    procedure Initialize_TCB (Self_ID : Task_ID; Succeeded : out Boolean) is\n    begin\n@@ -879,7 +902,7 @@ package body System.Task_Primitives.Operations is\n       --  recommend a minimum size of 32 kB.  (The original was 4 kB)\n       --  Systems that use many tasks (say > 30) and require much\n       --  memory may run out of virtual address space, since OS/2\n-      --  has a per-process limit of 512 MB, of which max. 300 MB is\n+      --  has a per-proces limit of 512 MB, of which max. 300 MB is\n       --  usable in practise.\n \n       if Stack_Size = Unspecified_Size then\n@@ -973,19 +996,15 @@ package body System.Task_Primitives.Operations is\n \n    procedure Exit_Task is\n    begin\n-      DosExit (EXIT_THREAD, 0);\n-\n-      --  Do not finalize TCB here.\n-      --  GNARL layer is responsible for that.\n-\n+      Thread_Local_Data_Ptr := null;\n    end Exit_Task;\n \n    ----------------\n    -- Abort_Task --\n    ----------------\n \n    procedure Abort_Task (T : Task_ID) is\n-      pragma Warnings (Off, T);\n+      pragma Unreferenced (T);\n \n    begin\n       null;\n@@ -999,8 +1018,7 @@ package body System.Task_Primitives.Operations is\n    -- Check_Exit --\n    ----------------\n \n-   --  Dummy versions.  The only currently working versions is for solaris\n-   --  (native).\n+   --  Dummy version\n \n    function Check_Exit (Self_ID : ST.Task_ID) return Boolean is\n    begin\n@@ -1013,6 +1031,7 @@ package body System.Task_Primitives.Operations is\n \n    function Check_No_Locks (Self_ID : ST.Task_ID) return Boolean is\n       TLD : constant Access_Thread_Local_Data := Thread_Local_Data_Ptr;\n+\n    begin\n       return Self_ID = TLD.Self_ID\n         and then TLD.Lock_Prio_Level = 0;\n@@ -1051,7 +1070,9 @@ package body System.Task_Primitives.Operations is\n \n    function Suspend_Task\n      (T           : ST.Task_ID;\n-      Thread_Self : Thread_Id) return Boolean is\n+      Thread_Self : Thread_Id)\n+      return        Boolean\n+   is\n    begin\n       if Thread_Id (T.Common.LL.Thread) /= Thread_Self then\n          return DosSuspendThread (T.Common.LL.Thread) = NO_ERROR;\n@@ -1066,7 +1087,9 @@ package body System.Task_Primitives.Operations is\n \n    function Resume_Task\n      (T           : ST.Task_ID;\n-      Thread_Self : Thread_Id) return Boolean is\n+      Thread_Self : Thread_Id)\n+      return        Boolean\n+   is\n    begin\n       if Thread_Id (T.Common.LL.Thread) /= Thread_Self then\n          return DosResumeThread (T.Common.LL.Thread) = NO_ERROR;"}, {"sha": "cb5b0295b13c414da44549805fa72ad32d9dc244", "filename": "gcc/ada/5otaspri.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5otaspri.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5otaspri.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5otaspri.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,8 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---            Copyright (C) 1991-2001 Florida State University              --\n+--             Copyright (C) 1991-1994, Florida State University            --\n+--             Copyright (C) 1995-2003, Ada Core Technologies               --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,9 +27,8 @@\n -- however invalidate  any other reasons why  the executable file  might be --\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University. It is --\n--- now maintained by Ada Core Technologies Inc. in cooperation with Florida --\n--- State University (http://www.gnat.com).                                  --\n+-- GNARL was developed by the GNARL team at Florida State University.       --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "fa94ad21feb70781ef1e9c4ca7d386d1b53ce3be", "filename": "gcc/ada/5posinte.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5posinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5posinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5posinte.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -27,7 +27,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "ed8a6f40f55ae285d36e49c7922e6bfbabfa9e6c", "filename": "gcc/ada/5posprim.adb", "status": "modified", "additions": 13, "deletions": 25, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5posprim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5posprim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5posprim.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1998-2001 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1998-2003 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,7 +32,7 @@\n ------------------------------------------------------------------------------\n \n --  This version uses gettimeofday and select\n---  Currently OpenNT, Dec Unix, Solaris and SCO UnixWare use this file.\n+--  This file is suitable for OpenNT, Dec Unix and SCO UnixWare.\n \n package body System.OS_Primitives is\n \n@@ -41,45 +41,34 @@ package body System.OS_Primitives is\n    --  these declarations in System.OS_Interface and move these ones in\n    --  the spec.\n \n-   type struct_timezone is record\n-      tz_minuteswest  : Integer;\n-      tz_dsttime   : Integer;\n-   end record;\n-   pragma Convention (C, struct_timezone);\n-   type struct_timezone_ptr is access all struct_timezone;\n-\n    type struct_timeval is record\n-      tv_sec       : Integer;\n-      tv_usec      : Integer;\n+      tv_sec  : Integer;\n+      tv_usec : Integer;\n    end record;\n    pragma Convention (C, struct_timeval);\n \n-   function gettimeofday\n+   procedure gettimeofday\n      (tv : access struct_timeval;\n-      tz : struct_timezone_ptr) return Integer;\n+      tz : Address := Null_Address);\n    pragma Import (C, gettimeofday, \"gettimeofday\");\n \n-   type fd_set is null record;\n-   type fd_set_ptr is access all fd_set;\n-\n-   function C_select\n-     (n         : Integer    := 0;\n+   procedure C_select\n+     (n         : Integer := 0;\n       readfds,\n       writefds,\n-      exceptfds : fd_set_ptr := null;\n-      timeout   : access struct_timeval) return Integer;\n+      exceptfds : Address := Null_Address;\n+      timeout   : access struct_timeval);\n    pragma Import (C, C_select, \"select\");\n \n    -----------\n    -- Clock --\n    -----------\n \n    function Clock return Duration is\n-      TV     : aliased struct_timeval;\n-      Result : Integer;\n+      TV : aliased struct_timeval;\n \n    begin\n-      Result := gettimeofday (TV'Access, null);\n+      gettimeofday (TV'Access);\n       return Duration (TV.tv_sec) + Duration (TV.tv_usec) / 10#1#E6;\n    end Clock;\n \n@@ -97,7 +86,6 @@ package body System.OS_Primitives is\n      (Time : Duration;\n       Mode : Integer)\n    is\n-      Result     : Integer;\n       Rel_Time   : Duration;\n       Abs_Time   : Duration;\n       Check_Time : Duration := Clock;\n@@ -123,7 +111,7 @@ package body System.OS_Primitives is\n             timeval.tv_usec :=\n               Integer ((Rel_Time - Duration (timeval.tv_sec)) * 10#1#E6);\n \n-            Result := C_select (timeout => timeval'Unchecked_Access);\n+            C_select (timeout => timeval'Unchecked_Access);\n             Check_Time := Clock;\n \n             exit when Abs_Time <= Check_Time;"}, {"sha": "11058290e59e55567ef646b75c65a522b16f8526", "filename": "gcc/ada/5psystem.ads", "status": "added", "additions": 150, "deletions": 0, "changes": 150, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5psystem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5psystem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5psystem.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -0,0 +1,150 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                        GNAT RUN-TIME COMPONENTS                          --\n+--                                                                          --\n+--                               S Y S T E M                                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                        (OpenNT/Interix Version)                          --\n+--                                                                          --\n+--          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+package System is\n+pragma Pure (System);\n+--  Note that we take advantage of the implementation permission to\n+--  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+\n+   type Name is (SYSTEM_NAME_GNAT);\n+   System_Name : constant Name := SYSTEM_NAME_GNAT;\n+\n+   --  System-Dependent Named Numbers\n+\n+   Min_Int               : constant := Long_Long_Integer'First;\n+   Max_Int               : constant := Long_Long_Integer'Last;\n+\n+   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n+   Max_Nonbinary_Modulus : constant := Integer'Last;\n+\n+   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n+   Max_Digits            : constant := Long_Long_Float'Digits;\n+\n+   Max_Mantissa          : constant := 63;\n+   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n+\n+   Tick                  : constant := 0.01;\n+\n+   --  Storage-related Declarations\n+\n+   type Address is private;\n+   Null_Address : constant Address;\n+\n+   Storage_Unit : constant := 8;\n+   Word_Size    : constant := 32;\n+   Memory_Size  : constant := 2 ** 32;\n+\n+   --  Address comparison\n+\n+   function \"<\"  (Left, Right : Address) return Boolean;\n+   function \"<=\" (Left, Right : Address) return Boolean;\n+   function \">\"  (Left, Right : Address) return Boolean;\n+   function \">=\" (Left, Right : Address) return Boolean;\n+   function \"=\"  (Left, Right : Address) return Boolean;\n+\n+   pragma Import (Intrinsic, \"<\");\n+   pragma Import (Intrinsic, \"<=\");\n+   pragma Import (Intrinsic, \">\");\n+   pragma Import (Intrinsic, \">=\");\n+   pragma Import (Intrinsic, \"=\");\n+\n+   --  Other System-Dependent Declarations\n+\n+   type Bit_Order is (High_Order_First, Low_Order_First);\n+   Default_Bit_Order : constant Bit_Order := Low_Order_First;\n+\n+   --  Priority-related Declarations (RM D.1)\n+\n+   Max_Priority           : constant Positive := 30;\n+   Max_Interrupt_Priority : constant Positive := 31;\n+\n+   subtype Any_Priority       is Integer      range  0 .. 31;\n+   subtype Priority           is Any_Priority range  0 .. 30;\n+   subtype Interrupt_Priority is Any_Priority range 31 .. 31;\n+\n+   Default_Priority : constant Priority := 15;\n+\n+private\n+\n+   type Address is mod Memory_Size;\n+   Null_Address : constant Address := 0;\n+\n+   --------------------------------------\n+   -- System Implementation Parameters --\n+   --------------------------------------\n+\n+   --  These parameters provide information about the target that is used\n+   --  by the compiler. They are in the private part of System, where they\n+   --  can be accessed using the special circuitry in the Targparm unit\n+   --  whose source should be consulted for more detailed descriptions\n+   --  of the individual switch values.\n+\n+   AAMP                      : constant Boolean := False;\n+   Backend_Divide_Checks     : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := False;\n+   Command_Line_Args         : constant Boolean := True;\n+   Configurable_Run_Time     : constant Boolean := False;\n+   Denorm                    : constant Boolean := True;\n+   Duration_32_Bits          : constant Boolean := False;\n+   Exit_Status_Supported     : constant Boolean := True;\n+   Fractional_Fixed_Ops      : constant Boolean := False;\n+   Frontend_Layout           : constant Boolean := False;\n+   Functions_Return_By_DSP   : constant Boolean := False;\n+   Machine_Overflows         : constant Boolean := False;\n+   Machine_Rounds            : constant Boolean := True;\n+   OpenVMS                   : constant Boolean := False;\n+   Signed_Zeros              : constant Boolean := True;\n+   Stack_Check_Default       : constant Boolean := False;\n+   Stack_Check_Probes        : constant Boolean := False;\n+   Support_64_Bit_Divides    : constant Boolean := True;\n+   Support_Aggregates        : constant Boolean := True;\n+   Support_Composite_Assign  : constant Boolean := True;\n+   Support_Composite_Compare : constant Boolean := True;\n+   Support_Long_Shifts       : constant Boolean := True;\n+   Suppress_Standard_Library : constant Boolean := False;\n+   Use_Ada_Main_Program_Name : constant Boolean := False;\n+   ZCX_By_Default            : constant Boolean := False;\n+   GCC_ZCX_Support           : constant Boolean := False;\n+   Front_End_ZCX_Support     : constant Boolean := False;\n+\n+   --  Obsolete entries, to be removed eventually (bootstrap issues!)\n+\n+   High_Integrity_Mode       : constant Boolean := False;\n+   Long_Shifts_Inlined       : constant Boolean := True;\n+\n+end System;"}, {"sha": "17118681fc33bc87791c25b3ddd2e4e4358041bd", "filename": "gcc/ada/5pvxwork.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5pvxwork.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5pvxwork.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5pvxwork.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "patch": "@@ -27,7 +27,7 @@\n -- covered by the  GNU Public License.                                      --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "06f0e6cfc96e6c3b1a8e0881fb5a96a2b76b18c7", "filename": "gcc/ada/5qosinte.ads", "status": "removed", "additions": 0, "deletions": 186, "changes": 186, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75a5a481c2048242ed62c7355381160aa1369616/gcc%2Fada%2F5qosinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75a5a481c2048242ed62c7355381160aa1369616/gcc%2Fada%2F5qosinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5qosinte.ads?ref=75a5a481c2048242ed62c7355381160aa1369616", "patch": "@@ -1,186 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                GNU ADA RUN-TIME LIBRARY (GNARL) COMPONENTS               --\n---                                                                          --\n---                   S Y S T E M . O S _ I N T E R F A C E                  --\n---                                                                          --\n---                                  S p e c                                 --\n---                                                                          --\n---             Copyright (C) 1991-2001 Florida State University             --\n---                                                                          --\n--- GNARL is free software; you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion. GNARL is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNARL; see file COPYING.  If not, write --\n--- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n--- MA 02111-1307, USA.                                                      --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University. It is --\n--- now maintained by Ada Core Technologies Inc. in cooperation with Florida --\n--- State University (http://www.gnat.com).                                  --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  RT GNU/Linux version.\n-\n---  This package encapsulates all direct interfaces to OS services\n---  that are needed by children of System.\n-\n---  PLEASE DO NOT add any with-clauses to this package\n---  or remove the pragma Elaborate_Body.\n---  It is designed to be a bottom-level (leaf) package.\n-\n-with Interfaces.C;\n-\n-package System.OS_Interface is\n-\n-   pragma Preelaborate;\n-\n-   subtype int            is Interfaces.C.int;\n-   subtype unsigned_long  is Interfaces.C.unsigned_long;\n-\n-   --  RT GNU/Linux kernel threads should not use the\n-   --  OS signal interfaces.\n-\n-   Max_Interrupt : constant := 2;\n-   type Signal is new int range 0 .. Max_Interrupt;\n-   type sigset_t is new Integer;\n-\n-   ----------\n-   -- Time --\n-   ----------\n-\n-   RT_TICKS_PER_SEC : constant := 1193180;\n-   --  the amount of time units in one second.\n-\n-   RT_TIME_END : constant := 16#7fffFfffFfffFfff#;\n-\n-   type RTIME is range -2 ** 63 .. 2 ** 63 - 1;\n-   --  the introduction of type RTIME is due to the fact that RT-GNU/Linux\n-   --  uses this type to represent time. In RT-GNU/Linux, it's a long long\n-   --  integer that takes 64 bits for storage\n-\n-   -------------------------\n-   -- Priority Scheduling --\n-   -------------------------\n-\n-   RT_LOWEST_PRIORITY : constant System.Any_Priority :=\n-     System.Any_Priority'First;\n-   --  for the lowest priority task in RT-GNU/Linux. By the design, this\n-   --  task is the regular GNU/Linux kernel.\n-\n-   RT_TASK_MAGIC : constant := 16#754d2774#;\n-   --  a special constant used as a label for a task that has been created\n-\n-   ----------------------------\n-   -- RT constants and types --\n-   ----------------------------\n-\n-   SFIF : Integer;\n-   pragma Import (C, SFIF, \"SFIF\");\n-   --  Interrupt emulation flag used by RT-GNU/Linux. If it's 0, the regular\n-   --  GNU/Linux kernel is preempted. Otherwise, the regular Linux kernel is\n-   --  running\n-\n-   GFP_ATOMIC : constant := 16#1#;\n-   GFP_KERNEL : constant := 16#3#;\n-   --  constants to indicate the priority of a call to kmalloc.\n-   --  GFP_KERNEL is used in the current implementation to allocate\n-   --  stack space for a task. Since GFP_ATOMIC has higher priority,\n-   --  if necessary, replace GFP_KERNEL with GFP_ATOMIC\n-\n-   type Rt_Task_States is (RT_TASK_READY, RT_TASK_DELAYED, RT_TASK_DORMANT);\n-\n-   -------------\n-   -- Threads --\n-   -------------\n-\n-   type Thread_Body is access\n-     function (arg : System.Address) return System.Address;\n-\n-   --  ??? need to define a type for references to (IDs of)\n-   --  RT GNU/Linux lock objects, and implement the lock objects.\n-\n-   subtype Thread_Id is System.Address;\n-\n-   -------------------------------\n-   -- Useful imported functions --\n-   -------------------------------\n-\n-   -------------------------------------\n-   -- Functions from GNU/Linux kernel --\n-   -------------------------------------\n-\n-   function Kmalloc (size : Integer; Priority : Integer) return System.Address;\n-   pragma Import (C, Kmalloc, \"kmalloc\");\n-\n-   procedure Kfree (Ptr : System.Address);\n-   pragma Import (C, Kfree, \"kfree\");\n-\n-   procedure Printk (Msg : String);\n-   pragma Import (C, Printk, \"printk\");\n-\n-   ---------------------\n-   -- RT time related --\n-   ---------------------\n-\n-   function Rt_Get_Time return RTIME;\n-   pragma Import (C, Rt_Get_Time, \"rt_get_time\");\n-\n-   function Rt_Request_Timer (Fn : System.Address) return Integer;\n-   procedure Rt_Request_Timer (Fn : System.Address);\n-   pragma Import (C, Rt_Request_Timer, \"rt_request_timer\");\n-\n-   procedure Rt_Free_Timer;\n-   pragma Import (C, Rt_Free_Timer, \"rt_free_timer\");\n-\n-   procedure Rt_Set_Timer (T : RTIME);\n-   pragma Import (C, Rt_Set_Timer, \"rt_set_timer\");\n-\n-   procedure Rt_No_Timer;\n-   pragma Import (C, Rt_No_Timer, \"rt_no_timer\");\n-\n-   ---------------------\n-   -- RT FIFO related --\n-   ---------------------\n-\n-   function Rtf_Create (Fifo : Integer; Size : Integer) return Integer;\n-   pragma Import (C, Rtf_Create, \"rtf_create\");\n-\n-   function Rtf_Destroy (Fifo : Integer) return Integer;\n-   pragma Import (C, Rtf_Destroy, \"rtf_destroy\");\n-\n-   function Rtf_Resize (Minor : Integer; Size : Integer) return Integer;\n-   pragma Import (C, Rtf_Resize, \"rtf_resize\");\n-\n-   function Rtf_Put\n-     (Fifo  : Integer;\n-      Buf   : System.Address;\n-      Count : Integer) return Integer;\n-   pragma Import (C, Rtf_Put, \"rtf_put\");\n-\n-   function Rtf_Get\n-     (Fifo  : Integer;\n-      Buf   : System.Address;\n-      Count : Integer) return Integer;\n-   pragma Import (C, Rtf_Get, \"rtf_get\");\n-\n-   function Rtf_Create_Handler\n-     (Fifo    : Integer;\n-      Handler : System.Address) return Integer;\n-   pragma Import (C, Rtf_Create_Handler, \"rtf_create_handler\");\n-\n-private\n-   type Require_Body;\n-end System.OS_Interface;"}, {"sha": "aa1e97be6942702a7813e0ed7a78417020404b83", "filename": "gcc/ada/5qtaprop.adb", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75a5a481c2048242ed62c7355381160aa1369616/gcc%2Fada%2F5qtaprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75a5a481c2048242ed62c7355381160aa1369616/gcc%2Fada%2F5qtaprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5qtaprop.adb?ref=75a5a481c2048242ed62c7355381160aa1369616"}, {"sha": "d8d5963fca2529e017caef2414ebb56ccaefa071", "filename": "gcc/ada/5sintman.adb", "status": "modified", "additions": 70, "deletions": 17, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5sintman.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5sintman.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5sintman.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "901e7a68bee43112c3b6f2a6969c6f105e3899fb", "filename": "gcc/ada/5sml-tgt.adb", "status": "added", "additions": 367, "deletions": 0, "changes": 367, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5sml-tgt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5sml-tgt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5sml-tgt.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "299625dadc2c3e078c43949a3b50d1617e50b6b3", "filename": "gcc/ada/5sosinte.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5sosinte.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5sosinte.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5sosinte.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "a9bc30c2aa424b965f90e4e6ee009e4c4137259e", "filename": "gcc/ada/5sosinte.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5sosinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5sosinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5sosinte.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "b6d529d206c3aa174161ba69c8b6445df21c3346", "filename": "gcc/ada/5sosprim.adb", "status": "added", "additions": 124, "deletions": 0, "changes": 124, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5sosprim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5sosprim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5sosprim.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "80621a76517773dfbf0aa8f32185cfeac3b5fcda", "filename": "gcc/ada/5ssystem.ads", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5ssystem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5ssystem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5ssystem.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "588c0d3a0c7d4d5da53acd729157230692c3f56d", "filename": "gcc/ada/5staprop.adb", "status": "modified", "additions": 272, "deletions": 381, "changes": 653, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5staprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5staprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5staprop.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "ded456effa19f475a36fff81a86f7e8399e2048b", "filename": "gcc/ada/5stasinf.ads", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5stasinf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5stasinf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5stasinf.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "b1cb08b1df197dad1aa2061a61e7706be1ad543e", "filename": "gcc/ada/5staspri.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5staspri.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5staspri.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5staspri.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "a6c1e9e89b365c9481df25839d50b68e833b553a", "filename": "gcc/ada/5stpopse.adb", "status": "removed", "additions": 0, "deletions": 204, "changes": 204, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75a5a481c2048242ed62c7355381160aa1369616/gcc%2Fada%2F5stpopse.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75a5a481c2048242ed62c7355381160aa1369616/gcc%2Fada%2F5stpopse.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5stpopse.adb?ref=75a5a481c2048242ed62c7355381160aa1369616"}, {"sha": "8ff57977b9c83a8dee4811bc5df9ff9cc5a70a3b", "filename": "gcc/ada/5stpopsp.adb", "status": "added", "additions": 109, "deletions": 0, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5stpopsp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5stpopsp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5stpopsp.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "4fc9fd156e39c2eed539c7e01996b4a81b07b469", "filename": "gcc/ada/5svxwork.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5svxwork.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5svxwork.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5svxwork.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "14570656b9b569832932f0d610b12eb3071dcb29", "filename": "gcc/ada/5tosinte.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5tosinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5tosinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5tosinte.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "14fcaf06e074304fe49eed5777f8b442a6ff655c", "filename": "gcc/ada/5tsystem.ads", "status": "added", "additions": 236, "deletions": 0, "changes": 236, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5tsystem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5tsystem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5tsystem.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "42531492ae7a14af95339dd0b0c92569f0ed658a", "filename": "gcc/ada/5uintman.adb", "status": "removed", "additions": 0, "deletions": 257, "changes": 257, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75a5a481c2048242ed62c7355381160aa1369616/gcc%2Fada%2F5uintman.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75a5a481c2048242ed62c7355381160aa1369616/gcc%2Fada%2F5uintman.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5uintman.adb?ref=75a5a481c2048242ed62c7355381160aa1369616"}, {"sha": "6afffa96aab2be0bb1701c089073fa68c2171229", "filename": "gcc/ada/5uosinte.ads", "status": "removed", "additions": 0, "deletions": 552, "changes": 552, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75a5a481c2048242ed62c7355381160aa1369616/gcc%2Fada%2F5uosinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75a5a481c2048242ed62c7355381160aa1369616/gcc%2Fada%2F5uosinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5uosinte.ads?ref=75a5a481c2048242ed62c7355381160aa1369616"}, {"sha": "dca552ebc5a2c2e91d9752d6bf70cb62168fd578", "filename": "gcc/ada/5usystem.ads", "status": "added", "additions": 150, "deletions": 0, "changes": 150, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5usystem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5usystem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5usystem.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "5f6c67ecf3d0e5da008684dd3000353ab2de3a81", "filename": "gcc/ada/5vasthan.adb", "status": "modified", "additions": 35, "deletions": 14, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vasthan.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vasthan.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5vasthan.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "02e191150c5abab8c871c02e8571692c98ce12c5", "filename": "gcc/ada/5vinmaop.adb", "status": "modified", "additions": 30, "deletions": 12, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vinmaop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vinmaop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5vinmaop.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "2f78912d8c6aa52bc9ceeec0d031edf2accee423", "filename": "gcc/ada/5vinterr.adb", "status": "modified", "additions": 73, "deletions": 64, "changes": 137, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vinterr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vinterr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5vinterr.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "1190378766f2d106888b13f3f70777dce0e7da92", "filename": "gcc/ada/5vintman.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vintman.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vintman.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5vintman.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "60f410b01d72cfccd77cb691341f4e385c7977bf", "filename": "gcc/ada/5vintman.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vintman.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vintman.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5vintman.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "5bb3f8a1eff3aa92657f367601a35d7a4aa35ebc", "filename": "gcc/ada/5vmastop.adb", "status": "modified", "additions": 41, "deletions": 45, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vmastop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vmastop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5vmastop.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "3dba336db29b8ca2048edd3da9dad749556dfc61", "filename": "gcc/ada/5vml-tgt.adb", "status": "added", "additions": 571, "deletions": 0, "changes": 571, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vml-tgt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vml-tgt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5vml-tgt.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "0b806daa809fa655ec81be83586d7636b7f92fd9", "filename": "gcc/ada/5vosinte.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vosinte.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vosinte.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5vosinte.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "2a14f44c9794dac739bec7b54467122886945985", "filename": "gcc/ada/5vosinte.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vosinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vosinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5vosinte.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "c49c861bf3495ec34d558c674298f7911284d533", "filename": "gcc/ada/5vosprim.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vosprim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vosprim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5vosprim.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "5b41ab79ec6f158330757edab59880cf2f1eaab8", "filename": "gcc/ada/5vparame.ads", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vparame.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vparame.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5vparame.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "d505491c86b925cdafbbbaf30576d28e5b0446d6", "filename": "gcc/ada/5vsymbol.adb", "status": "added", "additions": 528, "deletions": 0, "changes": 528, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vsymbol.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vsymbol.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5vsymbol.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "3a66df33bfed3769097d4ea5b7e0df744c26239f", "filename": "gcc/ada/5vsystem.ads", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vsystem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vsystem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5vsystem.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "8a291c2f72e62c1833bab9afbf3cb2ee41342810", "filename": "gcc/ada/5vtaprop.adb", "status": "modified", "additions": 139, "deletions": 58, "changes": 197, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vtaprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vtaprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5vtaprop.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "09179325c812448a2fa57dc6d9eb26b8b2375f9f", "filename": "gcc/ada/5vtaspri.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vtaspri.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vtaspri.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5vtaspri.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "1e5c6ca3135f06f53abc5bb640a6b601c5f0a222", "filename": "gcc/ada/5vtpopde.adb", "status": "modified", "additions": 24, "deletions": 8, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vtpopde.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vtpopde.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5vtpopde.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "46d92470f0b4a8896bc6f40c815188781127856b", "filename": "gcc/ada/5vtpopde.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vtpopde.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vtpopde.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5vtpopde.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "bab8daf7f0840a974a4871078082c6c3e4411f81", "filename": "gcc/ada/5vtraent.adb", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vtraent.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vtraent.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5vtraent.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "ed71437ea62272cbc6d4809c7134d2338b07da46", "filename": "gcc/ada/5vtraent.ads", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vtraent.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5vtraent.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5vtraent.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "2b775b239db823fea38367fd63576fe4a27c37c2", "filename": "gcc/ada/5wgloloc.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5wgloloc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5wgloloc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5wgloloc.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "362e50132ff75417c1479cacee44a6e1e364d613", "filename": "gcc/ada/5wintman.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5wintman.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5wintman.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5wintman.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "a81665a0a5923eb4d07a5a1111e169f43f0cedae", "filename": "gcc/ada/5wmemory.adb", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5wmemory.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5wmemory.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5wmemory.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "ffb3b2acf686c54717cb78f3fe534855ea860f10", "filename": "gcc/ada/5wml-tgt.adb", "status": "added", "additions": 354, "deletions": 0, "changes": 354, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5wml-tgt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5wml-tgt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5wml-tgt.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "5ec73987a7236f24c2186c38c49f66fa39680178", "filename": "gcc/ada/5wosprim.adb", "status": "modified", "additions": 90, "deletions": 29, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5wosprim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5wosprim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5wosprim.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "9316644e0d9833f47c965b609226cc1c9e90ade0", "filename": "gcc/ada/5wsystem.ads", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5wsystem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5wsystem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5wsystem.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "506ece210c1311bde565d6731d3a2130e7709f2f", "filename": "gcc/ada/5wtaprop.adb", "status": "modified", "additions": 164, "deletions": 196, "changes": 360, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5wtaprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5wtaprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5wtaprop.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "01cde2c69100a6e2443d9aae5d5e749548192090", "filename": "gcc/ada/5wtaspri.ads", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5wtaspri.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5wtaspri.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5wtaspri.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "d1d48188176134bd328f6c0d94ac8b9fcfc14ab4", "filename": "gcc/ada/5xparame.ads", "status": "added", "additions": 203, "deletions": 0, "changes": 203, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5xparame.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5xparame.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5xparame.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "c7fa20898df7c68e32c55904c260594c37dfb5c3", "filename": "gcc/ada/5xsystem.ads", "status": "added", "additions": 236, "deletions": 0, "changes": 236, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5xsystem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5xsystem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5xsystem.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "4183ee6bb1f6f76df5a0a263c4b2309bad2cfc8c", "filename": "gcc/ada/5xvxwork.ads", "status": "renamed", "additions": 23, "deletions": 20, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5xvxwork.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5xvxwork.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5xvxwork.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "previous_filename": "gcc/ada/5etpopse.adb"}, {"sha": "af397c2aeb73a5c43ad0df4bcb646c6a24212e5b", "filename": "gcc/ada/5yparame.ads", "status": "added", "additions": 203, "deletions": 0, "changes": 203, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5yparame.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5yparame.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5yparame.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "69602c86d78c79fdd648a7e21a9db79871a6f8e8", "filename": "gcc/ada/5ysystem.ads", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5ysystem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5ysystem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5ysystem.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "f0027fd24e100964c8e276cd800373c9e0d0ee73", "filename": "gcc/ada/5ytiitho.adb", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5ytiitho.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5ytiitho.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5ytiitho.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "c947057f044935eb5b708186c784ca6513c5c6b2", "filename": "gcc/ada/5zinit.adb", "status": "added", "additions": 285, "deletions": 0, "changes": 285, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5zinit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5zinit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5zinit.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "674c08f3322cbcfbaa8e0df540439d73269d570b", "filename": "gcc/ada/5zinterr.adb", "status": "modified", "additions": 21, "deletions": 14, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5zinterr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5zinterr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5zinterr.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "2933f240a398e70a90062f2930a29433bbea02c0", "filename": "gcc/ada/5zintman.adb", "status": "modified", "additions": 43, "deletions": 7, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5zintman.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5zintman.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5zintman.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "7016a222cd62fa5410a23f0bf35c5b6c1f7dd164", "filename": "gcc/ada/5zml-tgt.adb", "status": "added", "additions": 322, "deletions": 0, "changes": 322, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5zml-tgt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5zml-tgt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5zml-tgt.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "7c665e7d2a4f3efe070d1fdbb4930d1103070c7b", "filename": "gcc/ada/5zosinte.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5zosinte.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5zosinte.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5zosinte.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "fb14fa0762f29d95afa06ceec8a58d8ab88fee38", "filename": "gcc/ada/5zosinte.ads", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5zosinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5zosinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5zosinte.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "0f32bbe6dce75215ae34c1027046154f6fd174df", "filename": "gcc/ada/5zosprim.adb", "status": "modified", "additions": 24, "deletions": 6, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5zosprim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5zosprim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5zosprim.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "774280f830773514691a68f2384e123786947132", "filename": "gcc/ada/5zparame.ads", "status": "added", "additions": 203, "deletions": 0, "changes": 203, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5zparame.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5zparame.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5zparame.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "12bbec478ffda44dd754caabd4f44eb254a1b8f8", "filename": "gcc/ada/5zsystem.ads", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5zsystem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5zsystem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5zsystem.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "2451e91dce5525986c4f48f5ea2f162d58e186db", "filename": "gcc/ada/5ztaprop.adb", "status": "modified", "additions": 275, "deletions": 189, "changes": 464, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5ztaprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5ztaprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5ztaprop.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "efd41ccd98426f3170b6a3083a698d69d50c842c", "filename": "gcc/ada/5ztaspri.ads", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5ztaspri.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5ztaspri.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5ztaspri.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "0cd3d1b1107cdfbef01e7c9de43e30a2496dcde8", "filename": "gcc/ada/5ztfsetr.adb", "status": "added", "additions": 107, "deletions": 0, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5ztfsetr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5ztfsetr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5ztfsetr.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "ded9a5118bb6375ea4a7a672ec4728d2a33eac09", "filename": "gcc/ada/5zthrini.adb", "status": "added", "additions": 113, "deletions": 0, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5zthrini.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5zthrini.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5zthrini.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "f5c60043deea88eebd947cbd42e3bccf20b5bec0", "filename": "gcc/ada/5ztiitho.adb", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5ztiitho.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5ztiitho.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5ztiitho.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "6a69c38b511f4d1e2272e4415e561e076ce98d1d", "filename": "gcc/ada/5ztpopsp.adb", "status": "renamed", "additions": 33, "deletions": 36, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5ztpopsp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F5ztpopsp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5ztpopsp.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "previous_filename": "gcc/ada/5qstache.adb"}, {"sha": "864e2377ce6c7357a4aff2632331ee6766aacd80", "filename": "gcc/ada/6vcpp.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F6vcpp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F6vcpp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F6vcpp.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "1a320bc545e40d4d78166ac93af551317254b334", "filename": "gcc/ada/6vcstrea.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F6vcstrea.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F6vcstrea.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F6vcstrea.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "e4c39108cc913544081ce1632e8a092f321608a0", "filename": "gcc/ada/6vinterf.ads", "status": "modified", "additions": 28, "deletions": 6, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F6vinterf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F6vinterf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F6vinterf.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "8c767b231e47e20f7906f8ab3f0ec5d859263f7a", "filename": "gcc/ada/7sinmaop.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F7sinmaop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F7sinmaop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F7sinmaop.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "72b1cf873805e43fae7795bb6963adb17e88029e", "filename": "gcc/ada/7sintman.adb", "status": "modified", "additions": 78, "deletions": 31, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F7sintman.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F7sintman.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F7sintman.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "b646a789b5064b856d4631c13b3ab2cadf46653b", "filename": "gcc/ada/7sosinte.adb", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F7sosinte.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F7sosinte.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F7sosinte.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "7cc3251057654446af88ba4994000e679c3351cb", "filename": "gcc/ada/7sosprim.adb", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F7sosprim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F7sosprim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F7sosprim.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "6ce0b46811bdb2126b6dc982e72ab03866e96e54", "filename": "gcc/ada/7staprop.adb", "status": "modified", "additions": 159, "deletions": 75, "changes": 234, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F7staprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F7staprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F7staprop.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "1717cce47f574d86506e49ae8025f0dbe44a2db3", "filename": "gcc/ada/7staspri.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F7staspri.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F7staspri.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F7staspri.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "a8e166d04edfe0601159b26d1c830cea10c13435", "filename": "gcc/ada/7stfsetr.adb", "status": "added", "additions": 313, "deletions": 0, "changes": 313, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F7stfsetr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F7stfsetr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F7stfsetr.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "1b84b8feb48c6fed4a4617cd4849184ded8d32a5", "filename": "gcc/ada/7stpopsp.adb", "status": "modified", "additions": 16, "deletions": 21, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F7stpopsp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F7stpopsp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F7stpopsp.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "1811c5a603bb4dcffb845903fe1038640926c2cc", "filename": "gcc/ada/7straceb.adb", "status": "modified", "additions": 24, "deletions": 9, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F7straceb.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F7straceb.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F7straceb.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "46822242a409e9767cf74c697a2737e00625a370", "filename": "gcc/ada/7straces.adb", "status": "renamed", "additions": 43, "deletions": 14, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F7straces.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F7straces.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F7straces.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "previous_filename": "gcc/ada/s-explin.ads"}, {"sha": "8aa564463ad8d1bfe4c6cf0e98cc52957a623e88", "filename": "gcc/ada/7strafor.adb", "status": "added", "additions": 113, "deletions": 0, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F7strafor.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F7strafor.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F7strafor.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "fe232beeea835e9bb7b2d170aa788e7e1ab30e49", "filename": "gcc/ada/7strafor.ads", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F7strafor.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F7strafor.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F7strafor.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "0e18aed2d96ea8efffbd5c0f84de7ead3524083c", "filename": "gcc/ada/7stratas.adb", "status": "added", "additions": 367, "deletions": 0, "changes": 367, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F7stratas.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F7stratas.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F7stratas.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "dab584ed9083b946d7e67f95f331082fcd1b71c9", "filename": "gcc/ada/9drpc.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F9drpc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2F9drpc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F9drpc.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "b8d103e4ad2fbbab0809f4a4b5d808cbcbce4679", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 259, "deletions": 0, "changes": 259, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "60c99135661152f1fc0eb180bdf23680b54d69c9", "filename": "gcc/ada/Make-lang.in", "status": "modified", "additions": 2066, "deletions": 1099, "changes": 3165, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMake-lang.in?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "ba084dcfbbdb61e9679a75e9b5207dee101b0996", "filename": "gcc/ada/Makefile.adalib", "status": "modified", "additions": 26, "deletions": 19, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2FMakefile.adalib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2FMakefile.adalib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.adalib?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "9847e892183c27147e16b41677201ee400a02948", "filename": "gcc/ada/Makefile.generic", "status": "added", "additions": 409, "deletions": 0, "changes": 409, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2FMakefile.generic", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2FMakefile.generic", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.generic?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "3ffc2a1a8007b09ccce604536b6cd4a69ab77da9", "filename": "gcc/ada/Makefile.in", "status": "modified", "additions": 851, "deletions": 771, "changes": 1622, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.in?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "5766fa98ae14af423d3ac1cedcf393abce324bef", "filename": "gcc/ada/Makefile.prolog", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2FMakefile.prolog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2FMakefile.prolog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.prolog?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "f44db99ba00d858b9a9f905b052d8c89c9faba82", "filename": "gcc/ada/Makefile.rtl", "status": "added", "additions": 448, "deletions": 0, "changes": 448, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "baf763de4677ea456a3ed0e85dd3138dcc14dd9c", "filename": "gcc/ada/a-caldel.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-caldel.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-caldel.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-caldel.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "c2ea1a8aa3ab423cc15df4f66eaf87467a21c1b9", "filename": "gcc/ada/a-caldel.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-caldel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-caldel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-caldel.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "6aca8404a47e319450c6fba1ea3c1f8a1119a98e", "filename": "gcc/ada/a-charac.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-charac.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-charac.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-charac.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "0be926866700002452e57a853a143118ae22fd80", "filename": "gcc/ada/a-colien.ads", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-colien.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-colien.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-colien.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "fe96ff9d8521f0d829f9033c5fa59ee4cac22423", "filename": "gcc/ada/a-comlin.adb", "status": "modified", "additions": 40, "deletions": 6, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-comlin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-comlin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-comlin.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "0e5d99afa95c89dbbc0ada8083290551f87d2605", "filename": "gcc/ada/a-diocst.adb", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-diocst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-diocst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-diocst.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "339703c31eb21b01249861b43e7ac4cd374a5b2d", "filename": "gcc/ada/a-diocst.ads", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-diocst.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-diocst.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-diocst.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "310e24f6102889bb564c445f70514bab75dd8b53", "filename": "gcc/ada/a-direio.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-direio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-direio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-direio.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "c582dac8328a91e8fdc0e763619630ef65c69fa7", "filename": "gcc/ada/a-excach.adb", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-excach.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-excach.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-excach.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "d6a6f5ff3c67400f077ffaab763ae441cf786b7d", "filename": "gcc/ada/a-except.adb", "status": "modified", "additions": 686, "deletions": 1944, "changes": 2630, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-except.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-except.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-except.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "6510f339dcd21487f32987dc2582306ad2c44462", "filename": "gcc/ada/a-except.ads", "status": "modified", "additions": 13, "deletions": 55, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-except.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-except.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-except.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "feb6d53b9b64f9644f970d88da2e3078bbbe58bc", "filename": "gcc/ada/a-excpol.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-excpol.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-excpol.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-excpol.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "4028f4443c0ca25885ddc4423bc9dd84e1311d7e", "filename": "gcc/ada/a-exctra.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-exctra.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-exctra.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exctra.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "97a110f2cf2c4375a619229ccaedf1175f09b743", "filename": "gcc/ada/a-exctra.ads", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-exctra.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-exctra.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exctra.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "b88d643092f8568272f3e06dae410ff1cd732598", "filename": "gcc/ada/a-exexda.adb", "status": "added", "additions": 526, "deletions": 0, "changes": 526, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-exexda.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-exexda.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exexda.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "3d8e44c41d95c784a16671bed58fba486f4869e3", "filename": "gcc/ada/a-exexpr.adb", "status": "added", "additions": 525, "deletions": 0, "changes": 525, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-exexpr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-exexpr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exexpr.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "0ddb29348850766cdb8e19639678f536f76c664c", "filename": "gcc/ada/a-exextr.adb", "status": "added", "additions": 327, "deletions": 0, "changes": 327, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-exextr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-exextr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exextr.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "e840418c7e753449d58a3bbe880fffc11ef36496", "filename": "gcc/ada/a-exstat.adb", "status": "added", "additions": 255, "deletions": 0, "changes": 255, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-exstat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-exstat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exstat.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "7f953bff653ecca9eb8827db7768de8bb7cf4bd1", "filename": "gcc/ada/a-filico.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-filico.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-filico.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-filico.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "72e42a8f8a776d4d79801622b6e1bd3f47f29322", "filename": "gcc/ada/a-interr.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-interr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-interr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-interr.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "44e658a4328e41d2b49d4c4f93b77e32633d7ef8", "filename": "gcc/ada/a-intsig.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-intsig.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-intsig.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-intsig.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "750466951b859498b74dd038a205bea870947539", "filename": "gcc/ada/a-intsig.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-intsig.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-intsig.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-intsig.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "672218a54c6ec6bf7cc22de03bf1039433b1bce7", "filename": "gcc/ada/a-ngcefu.adb", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-ngcefu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-ngcefu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ngcefu.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "c5b2769991084cf2528d86eb24f5667b1a7fe593", "filename": "gcc/ada/a-ngcoty.adb", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-ngcoty.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-ngcoty.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ngcoty.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "c7c526eb32fef603880351b9fd1b7d1a2cc719b0", "filename": "gcc/ada/a-ngelfu.adb", "status": "modified", "additions": 9, "deletions": 16, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-ngelfu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-ngelfu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ngelfu.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "f3ef91afdf6a6cc3d3378ade49d0b9ad73fdc562", "filename": "gcc/ada/a-nudira.adb", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-nudira.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-nudira.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-nudira.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "58314e032501407486e24134d6818eb38b6192e3", "filename": "gcc/ada/a-nudira.ads", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-nudira.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-nudira.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-nudira.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "14d74593af0f0da010a607c895c5dab83a75145b", "filename": "gcc/ada/a-nuflra.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-nuflra.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-nuflra.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-nuflra.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "dacdd7c5eff724b185377ddbeaab73f6b85995a8", "filename": "gcc/ada/a-nuflra.ads", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-nuflra.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-nuflra.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-nuflra.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "352119ac5f6667550d889eb65bb9f8e2e338568b", "filename": "gcc/ada/a-reatim.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-reatim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-reatim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-reatim.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "ae5249f457c25d2deedeeb3791780ef46e29bf3f", "filename": "gcc/ada/a-reatim.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-reatim.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-reatim.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-reatim.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "29e2e8d6c4725917fecdca388e4bb484ba55fe75", "filename": "gcc/ada/a-retide.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-retide.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-retide.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-retide.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "90b543a7b0328cc2855849d5f601877c9c66f2e7", "filename": "gcc/ada/a-sequio.adb", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-sequio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-sequio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-sequio.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "36899453f1a10040b676fc18db230a681799f638", "filename": "gcc/ada/a-siocst.adb", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-siocst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-siocst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-siocst.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "ab8fe13f21d1c5d4e26afec87742ab9637743a0e", "filename": "gcc/ada/a-siocst.ads", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-siocst.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-siocst.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-siocst.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "3f572be897a766c3cba761a5a0017e220adc3b9e", "filename": "gcc/ada/a-ssicst.adb", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-ssicst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-ssicst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ssicst.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "98166e71d3b2b9e969b6a462808f2f972c7d9fe0", "filename": "gcc/ada/a-ssicst.ads", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-ssicst.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-ssicst.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ssicst.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "886c03ff68a6156f39a7028ed7c76821fd632c1e", "filename": "gcc/ada/a-strbou.adb", "status": "modified", "additions": 6, "deletions": 1681, "changes": 1687, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-strbou.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-strbou.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strbou.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "7e9f54f1b0a2fcadcd1fae41fe03eee3f554a5c1", "filename": "gcc/ada/a-strbou.ads", "status": "modified", "additions": 401, "deletions": 25, "changes": 426, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-strbou.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-strbou.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strbou.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "03a5061c49b00e05596f337f44b091a76b6537f8", "filename": "gcc/ada/a-strfix.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-strfix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-strfix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strfix.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "ba02086a3164618f9948ba518a1eb7d003c617e6", "filename": "gcc/ada/a-strmap.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-strmap.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-strmap.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strmap.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "7096ccffc94489f7173d68aa021c60757b57aafe", "filename": "gcc/ada/a-strsea.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-strsea.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-strsea.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strsea.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "8ae039336d9e158f4b036b24a445b0ac279a6c08", "filename": "gcc/ada/a-strsup.adb", "status": "added", "additions": 1807, "deletions": 0, "changes": 1807, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-strsup.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-strsup.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strsup.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "7716ca79e25dd92a335ff21bcf542fd41e04bcd3", "filename": "gcc/ada/a-strsup.ads", "status": "added", "additions": 473, "deletions": 0, "changes": 473, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-strsup.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-strsup.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strsup.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "d9c411f5601944b68e22174cec8695717b57cc13", "filename": "gcc/ada/a-strunb.adb", "status": "modified", "additions": 299, "deletions": 198, "changes": 497, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-strunb.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-strunb.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strunb.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "996eb0e10cf484a1441651bda6be9281edfe924a", "filename": "gcc/ada/a-strunb.ads", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-strunb.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-strunb.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strunb.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "8df6a379ba9046abcb5dab41d9016f54e92642c7", "filename": "gcc/ada/a-ststio.adb", "status": "modified", "additions": 24, "deletions": 6, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-ststio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-ststio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ststio.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "2fe26cc8e723ef8846a1cd173533cc89f38adad8", "filename": "gcc/ada/a-stunau.adb", "status": "modified", "additions": 27, "deletions": 5, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-stunau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-stunau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stunau.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "2da87482fa0cf10244370295339f756065972506", "filename": "gcc/ada/a-stunau.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-stunau.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-stunau.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stunau.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "9d0661a6c96d2d63fe71547ce49f74aec711e5c9", "filename": "gcc/ada/a-stwibo.adb", "status": "modified", "additions": 9, "deletions": 1719, "changes": 1728, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-stwibo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-stwibo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stwibo.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "9cebf6f484baec836c683f0cf68994c920756e3e", "filename": "gcc/ada/a-stwibo.ads", "status": "modified", "additions": 404, "deletions": 25, "changes": 429, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-stwibo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-stwibo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stwibo.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "100fb8019e650c47e86a5b701a0dcc8adab91378", "filename": "gcc/ada/a-stwifi.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-stwifi.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-stwifi.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stwifi.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "e3bacd4498aae8dd55767aefb9bb65cb48761d29", "filename": "gcc/ada/a-stwima.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-stwima.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-stwima.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stwima.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "ebf15f712642d7b6c0416142c4b7b69421160705", "filename": "gcc/ada/a-stwisu.adb", "status": "added", "additions": 1809, "deletions": 0, "changes": 1809, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-stwisu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-stwisu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stwisu.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "8ea068642f8fa5e1f30a505398fbefc56c3d314a", "filename": "gcc/ada/a-stwisu.ads", "status": "added", "additions": 478, "deletions": 0, "changes": 478, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-stwisu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-stwisu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stwisu.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "5e88d3e9997e7e4389c79d7ca75896e4b38ec28e", "filename": "gcc/ada/a-stwiun.adb", "status": "modified", "additions": 324, "deletions": 226, "changes": 550, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-stwiun.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-stwiun.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stwiun.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "6b348d456fd81f0fb8b9037d27db7dbb9a2ff853", "filename": "gcc/ada/a-stwiun.ads", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-stwiun.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-stwiun.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stwiun.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "f88874d79fa739e3fff205c5b3cb5977cc8ebc79", "filename": "gcc/ada/a-tags.adb", "status": "modified", "additions": 33, "deletions": 36, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-tags.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-tags.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tags.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "8dc78c6797ada8cce292cea97ad6952901ffc4fc", "filename": "gcc/ada/a-tags.ads", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-tags.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-tags.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tags.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "92f9f7921bded5995e4793876d1629feedced42c", "filename": "gcc/ada/a-tasatt.adb", "status": "modified", "additions": 158, "deletions": 198, "changes": 356, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-tasatt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-tasatt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tasatt.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "c15ce991e0bcdf9ca9702ec5b3aa3ffbef5624e1", "filename": "gcc/ada/a-taside.adb", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-taside.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-taside.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-taside.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "e4ad7156e8f65cdead0c2930c77ca9526eb8222a", "filename": "gcc/ada/a-teioed.adb", "status": "modified", "additions": 127, "deletions": 43, "changes": 170, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-teioed.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-teioed.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-teioed.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "b61ebd3c80af46ea979b44fdc4c4a62381efe4b0", "filename": "gcc/ada/a-textio.adb", "status": "modified", "additions": 44, "deletions": 12, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-textio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-textio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-textio.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "4f38370c77a8cc3b80769d7746407e77bebfa6a9", "filename": "gcc/ada/a-textio.ads", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-textio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-textio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-textio.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "3b529321438d3c3a1f48aeac92b2bd891464dc5c", "filename": "gcc/ada/a-tienau.adb", "status": "modified", "additions": 3, "deletions": 39, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-tienau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-tienau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tienau.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "52f8e70645835bdf50b9502f2347f77b59df5878", "filename": "gcc/ada/a-tifiio.adb", "status": "modified", "additions": 545, "deletions": 10, "changes": 555, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-tifiio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-tifiio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tifiio.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "bfe6cb28639c55e91473cdc2aaccee1aa593154b", "filename": "gcc/ada/a-tiflau.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-tiflau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-tiflau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tiflau.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "e90478c7c1910eecf944a6bfbee22bdd69b4c66a", "filename": "gcc/ada/a-tiflio.adb", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-tiflio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-tiflio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tiflio.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "0e4e43035adfd51db78a0cb61bdc86766fa45254", "filename": "gcc/ada/a-tigeau.adb", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-tigeau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-tigeau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tigeau.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "659553c794ce2a82ddbc76b8c42660075f087c97", "filename": "gcc/ada/a-tigeau.ads", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-tigeau.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-tigeau.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tigeau.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "f9d7ce0052aaae36112a04b28fad5bd332123098", "filename": "gcc/ada/a-tiinau.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-tiinau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-tiinau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tiinau.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "d147748fd3f5722f9fcdbd84959fdd7ac93582b2", "filename": "gcc/ada/a-timoau.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-timoau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-timoau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-timoau.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "e8dd0b0b022933b011f434f897c7a7648046d7ca", "filename": "gcc/ada/a-tiocst.adb", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-tiocst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-tiocst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tiocst.adb?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}, {"sha": "282a5905c586e1027ddbd29c77e646d0e8ff7068", "filename": "gcc/ada/a-tiocst.ads", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-tiocst.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf5a39b3e101719c6bf03cf2cd013b4a312e275/gcc%2Fada%2Fa-tiocst.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tiocst.ads?ref=fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}]}