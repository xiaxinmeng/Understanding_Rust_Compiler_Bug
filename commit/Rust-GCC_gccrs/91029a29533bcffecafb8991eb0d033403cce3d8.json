{"sha": "91029a29533bcffecafb8991eb0d033403cce3d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTEwMjlhMjk1MzNiY2ZmZWNhZmI4OTkxZWIwZDAzMzQwM2NjZTNkOA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2000-04-24T21:20:14Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2000-04-24T21:20:14Z"}, "message": "aclocal.m4 (gcc_AC_HEADER_STRING, [...]): Use the three argument form of AC_DEFINE.\n\n\t* aclocal.m4 (gcc_AC_HEADER_STRING, gcc_AC_FUNC_PRINTF_PTR,\n\tgcc_AC_C_VOLATILE, gcc_AC_FUNC_MKDIR_TAKES_ONE_ARG): Use the three\n\targument form of AC_DEFINE.\n\n\t* configure.in (DEFAULT_LINKER, DEFAULT_ASSEMBLER,\n\tHAVE_INTTYPES_H, PACKAGE, VERSION, ENABLE_WIN32_REGISTRY,\n\tWIN32_REGISTRY_KEY, HAVE_GAS_SUBSECTION_ORDERING, HAVE_GAS_WEAK,\n\tHAVE_GAS_HIDDEN, HAVE_AS_REGISTER_PSEUDO_OP, AS_SPARC64_FLAG,\n\tHAVE_AS_OFFSETABLE_LO10, ENABLE_NEW_GXX_ABI): Likewise.\n\n\t* acconfig.h: Delete stubs made redundant by 3-arg AC_DEFINE.\n\nFrom-SVN: r33389", "tree": {"sha": "930de3fed757954e453ca6dc4cf7b7d8882edcef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/930de3fed757954e453ca6dc4cf7b7d8882edcef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91029a29533bcffecafb8991eb0d033403cce3d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91029a29533bcffecafb8991eb0d033403cce3d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91029a29533bcffecafb8991eb0d033403cce3d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91029a29533bcffecafb8991eb0d033403cce3d8/comments", "author": null, "committer": null, "parents": [{"sha": "3c9a2b55615908e38b39e6232de0985094cb4bc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c9a2b55615908e38b39e6232de0985094cb4bc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c9a2b55615908e38b39e6232de0985094cb4bc6"}], "stats": {"total": 218, "additions": 90, "deletions": 128}, "files": [{"sha": "f33367358b1020a687b906ca619f220e36813be8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91029a29533bcffecafb8991eb0d033403cce3d8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91029a29533bcffecafb8991eb0d033403cce3d8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=91029a29533bcffecafb8991eb0d033403cce3d8", "patch": "@@ -1,3 +1,17 @@\n+2000-04-24  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* aclocal.m4 (gcc_AC_HEADER_STRING, gcc_AC_FUNC_PRINTF_PTR,\n+\tgcc_AC_C_VOLATILE, gcc_AC_FUNC_MKDIR_TAKES_ONE_ARG): Use the three\n+\targument form of AC_DEFINE.\n+\n+\t* configure.in (DEFAULT_LINKER, DEFAULT_ASSEMBLER,\n+\tHAVE_INTTYPES_H, PACKAGE, VERSION, ENABLE_WIN32_REGISTRY,\n+\tWIN32_REGISTRY_KEY, HAVE_GAS_SUBSECTION_ORDERING, HAVE_GAS_WEAK,\n+\tHAVE_GAS_HIDDEN, HAVE_AS_REGISTER_PSEUDO_OP, AS_SPARC64_FLAG,\n+\tHAVE_AS_OFFSETABLE_LO10, ENABLE_NEW_GXX_ABI): Likewise.\n+\n+\t* acconfig.h: Delete stubs made redundant by 3-arg AC_DEFINE.\n+\n 2000-04-24  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* Makefile.in (GCC_FOR_TARGET, GCC_CFLAGS, LIBGCC2_INCLUDES,"}, {"sha": "958843e480b940862bfbbb9220cc7c385f5a62d7", "filename": "gcc/acconfig.h", "status": "modified", "additions": 0, "deletions": 55, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91029a29533bcffecafb8991eb0d033403cce3d8/gcc%2Facconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91029a29533bcffecafb8991eb0d033403cce3d8/gcc%2Facconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Facconfig.h?ref=91029a29533bcffecafb8991eb0d033403cce3d8", "patch": "@@ -1,18 +1,9 @@\n-/* Define if you can safely include both <string.h> and <strings.h>.  */\n-#undef STRING_WITH_STRINGS\n-\n-/* Define if printf supports \"%p\".  */\n-#undef HAVE_PRINTF_PTR\n-\n /* Define if you want to enable namespaces (-fhonor-std) by default. */\n #undef ENABLE_STD_NAMESPACE\n #if !defined(ENABLE_STD_NAMESPACE)\n #  define ENABLE_STD_NAMESPACE 0\n #endif\n \n-/* Define if you want to always select the new-abi for g++.  */\n-#undef ENABLE_NEW_GXX_ABI\n-\n /* Define if you want more run-time sanity checks.  This one gets a grab\n    bag of miscellaneous but relatively cheap checks.  */\n #undef ENABLE_CHECKING\n@@ -39,54 +30,22 @@\n /* Define to 1 if NLS is requested.  */\n #undef ENABLE_NLS\n \n-/* Define to 1 if installation paths should be looked up in Windows32\n-   Registry. Ignored on non windows32 hosts. */\n-#undef ENABLE_WIN32_REGISTRY\n-\n-/* Define to be the last portion of registry key on windows hosts.  */\n-#undef WIN32_REGISTRY_KEY\n-\n /* Define as 1 if you have catgets and don't want to use GNU gettext.  */\n #undef HAVE_CATGETS\n \n /* Define as 1 if you have gettext and don't want to use GNU gettext.  */\n #undef HAVE_GETTEXT\n \n-/* Define if your compiler understands volatile.  */\n-#undef HAVE_VOLATILE\n-\n /* Define if your assembler supports specifying the maximum number\n    of bytes to skip when using the GAS .p2align command. */\n #undef HAVE_GAS_MAX_SKIP_P2ALIGN\n \n /* Define if your assembler supports .balign and .p2align.  */\n #undef HAVE_GAS_BALIGN_AND_P2ALIGN\n \n-/* Define if the assembler supports 64bit sparc.  */\n-#undef AS_SPARC64_FLAG\n-\n-/* Define if your assembler supports offsetable %lo().  */\n-#undef HAVE_AS_OFFSETABLE_LO10\n-\n-/* Define if your assembler supports .register.  */\n-#undef HAVE_AS_REGISTER_PSEUDO_OP\n-\n-/* Define if your assembler supports .subsection and .subsection -1 starts\n-   emitting at the beginning of your section */\n-#undef HAVE_GAS_SUBSECTION_ORDERING\n-\n-/* Define if your assembler supports .weak.  */\n-#undef HAVE_GAS_WEAK\n-\n-/* Define if your assembler supports .hidden.  */\n-#undef HAVE_GAS_HIDDEN\n-\n /* Define if your assembler uses the old HImode fild and fist notation.  */\n #undef HAVE_GAS_FILDS_FISTS\n \n-/* Define if you have a working <inttypes.h> header file.  */\n-#undef HAVE_INTTYPES_H\n-\n /* Define if your locale.h file contains LC_MESSAGES.  */\n #undef HAVE_LC_MESSAGES\n \n@@ -165,18 +124,4 @@\n /* Whether environ must be declared.  */\n #undef NEED_DECLARATION_ENVIRON\n \n-/* Define to enable the use of a default assembler. */\n-#undef DEFAULT_ASSEMBLER\n-\n-/* Define to enable the use of a default linker. */\n-#undef DEFAULT_LINKER\n-\n-/* Define if host mkdir takes a single argument. */\n-#undef MKDIR_TAKES_ONE_ARG\n-\n-/* Define to the name of the distribution.  */\n-#undef PACKAGE\n-\n-/* Define to the version of the distribution.  */\n-#undef VERSION\n @TOP@"}, {"sha": "9ef6b64855cdebf28e199e9295802b8572489b5f", "filename": "gcc/aclocal.m4", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91029a29533bcffecafb8991eb0d033403cce3d8/gcc%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91029a29533bcffecafb8991eb0d033403cce3d8/gcc%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Faclocal.m4?ref=91029a29533bcffecafb8991eb0d033403cce3d8", "patch": "@@ -5,7 +5,7 @@ AC_DEFUN(gcc_AC_HEADER_STRING,\n [AC_TRY_COMPILE([#include <string.h>\n #include <strings.h>], , gcc_cv_header_string=yes, gcc_cv_header_string=no)])\n if test $gcc_cv_header_string = yes; then\n-  AC_DEFINE(STRING_WITH_STRINGS)\n+  AC_DEFINE(STRING_WITH_STRINGS, 1, [Define if you can safely include both <string.h> and <strings.h>.])\n fi\n ])\n \n@@ -98,7 +98,7 @@ main()\n \tgcc_cv_func_printf_ptr=no)\n rm -f core core.* *.core])\n if test $gcc_cv_func_printf_ptr = yes ; then\n-  AC_DEFINE(HAVE_PRINTF_PTR)\n+  AC_DEFINE(HAVE_PRINTF_PTR, 1, [Define if printf supports \"%p\".])\n fi\n ])\n \n@@ -172,7 +172,7 @@ AC_DEFUN(gcc_AC_C_VOLATILE,\n [AC_TRY_COMPILE(, [volatile int foo;],\n         gcc_cv_c_volatile=yes, gcc_cv_c_volatile=no)])\n if test $gcc_cv_c_volatile = yes ; then\n-  AC_DEFINE(HAVE_VOLATILE)\n+  AC_DEFINE(HAVE_VOLATILE, 1, [Define if your compiler understands volatile.])\n fi\n ])\n \n@@ -212,7 +212,7 @@ AC_DEFUN(gcc_AC_FUNC_MKDIR_TAKES_ONE_ARG,\n #endif], [mkdir (\"foo\", 0);], \n         gcc_cv_mkdir_takes_one_arg=no, gcc_cv_mkdir_takes_one_arg=yes)])\n if test $gcc_cv_mkdir_takes_one_arg = yes ; then\n-  AC_DEFINE(MKDIR_TAKES_ONE_ARG)\n+  AC_DEFINE(MKDIR_TAKES_ONE_ARG, 1, [Define if host mkdir takes a single argument.])\n fi\n ])\n "}, {"sha": "17fb30c753d56d132b969ba7883a431a7bbf7300", "filename": "gcc/config.in", "status": "modified", "additions": 56, "deletions": 55, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91029a29533bcffecafb8991eb0d033403cce3d8/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91029a29533bcffecafb8991eb0d033403cce3d8/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=91029a29533bcffecafb8991eb0d033403cce3d8", "patch": "@@ -1,19 +1,10 @@\n /* config.in.  Generated automatically from configure.in by autoheader.  */\n-/* Define if you can safely include both <string.h> and <strings.h>.  */\n-#undef STRING_WITH_STRINGS\n-\n-/* Define if printf supports \"%p\".  */\n-#undef HAVE_PRINTF_PTR\n-\n /* Define if you want to enable namespaces (-fhonor-std) by default. */\n #undef ENABLE_STD_NAMESPACE\n #if !defined(ENABLE_STD_NAMESPACE)\n #  define ENABLE_STD_NAMESPACE 0\n #endif\n \n-/* Define if you want to always select the new-abi for g++.  */\n-#undef ENABLE_NEW_GXX_ABI\n-\n /* Define if you want more run-time sanity checks.  This one gets a grab\n    bag of miscellaneous but relatively cheap checks.  */\n #undef ENABLE_CHECKING\n@@ -40,54 +31,22 @@\n /* Define to 1 if NLS is requested.  */\n #undef ENABLE_NLS\n \n-/* Define to 1 if installation paths should be looked up in Windows32\n-   Registry. Ignored on non windows32 hosts. */\n-#undef ENABLE_WIN32_REGISTRY\n-\n-/* Define to be the last portion of registry key on windows hosts.  */\n-#undef WIN32_REGISTRY_KEY\n-\n /* Define as 1 if you have catgets and don't want to use GNU gettext.  */\n #undef HAVE_CATGETS\n \n /* Define as 1 if you have gettext and don't want to use GNU gettext.  */\n #undef HAVE_GETTEXT\n \n-/* Define if your compiler understands volatile.  */\n-#undef HAVE_VOLATILE\n-\n /* Define if your assembler supports specifying the maximum number\n    of bytes to skip when using the GAS .p2align command. */\n #undef HAVE_GAS_MAX_SKIP_P2ALIGN\n \n /* Define if your assembler supports .balign and .p2align.  */\n #undef HAVE_GAS_BALIGN_AND_P2ALIGN\n \n-/* Define if the assembler supports 64bit sparc.  */\n-#undef AS_SPARC64_FLAG\n-\n-/* Define if your assembler supports offsetable %lo().  */\n-#undef HAVE_AS_OFFSETABLE_LO10\n-\n-/* Define if your assembler supports .register.  */\n-#undef HAVE_AS_REGISTER_PSEUDO_OP\n-\n-/* Define if your assembler supports .subsection and .subsection -1 starts\n-   emitting at the beginning of your section */\n-#undef HAVE_GAS_SUBSECTION_ORDERING\n-\n-/* Define if your assembler supports .weak.  */\n-#undef HAVE_GAS_WEAK\n-\n-/* Define if your assembler supports .hidden.  */\n-#undef HAVE_GAS_HIDDEN\n-\n /* Define if your assembler uses the old HImode fild and fist notation.  */\n #undef HAVE_GAS_FILDS_FISTS\n \n-/* Define if you have a working <inttypes.h> header file.  */\n-#undef HAVE_INTTYPES_H\n-\n /* Define if your locale.h file contains LC_MESSAGES.  */\n #undef HAVE_LC_MESSAGES\n \n@@ -166,20 +125,6 @@\n /* Whether environ must be declared.  */\n #undef NEED_DECLARATION_ENVIRON\n \n-/* Define to enable the use of a default assembler. */\n-#undef DEFAULT_ASSEMBLER\n-\n-/* Define to enable the use of a default linker. */\n-#undef DEFAULT_LINKER\n-\n-/* Define if host mkdir takes a single argument. */\n-#undef MKDIR_TAKES_ONE_ARG\n-\n-/* Define to the name of the distribution.  */\n-#undef PACKAGE\n-\n-/* Define to the version of the distribution.  */\n-#undef VERSION\n \n /* Define if using alloca.c.  */\n #undef C_ALLOCA\n@@ -419,12 +364,68 @@\n /* Define if you have the i library (-li).  */\n #undef HAVE_LIBI\n \n+/* Define to enable the use of a default linker. */\n+#undef DEFAULT_LINKER\n+\n+/* Define to enable the use of a default assembler. */\n+#undef DEFAULT_ASSEMBLER\n+\n+/* Define if your compiler understands volatile. */\n+#undef HAVE_VOLATILE\n+\n+/* Define if you can safely include both <string.h> and <strings.h>. */\n+#undef STRING_WITH_STRINGS\n+\n+/* Define if you have a working <inttypes.h> header file. */\n+#undef HAVE_INTTYPES_H\n+\n /* Define if enumerated bitfields are treated as unsigned values. */\n #undef ENUM_BITFIELDS_ARE_UNSIGNED\n \n+/* Define if printf supports %p. */\n+#undef HAVE_PRINTF_PTR\n+\n /* Define if mmap can get us zeroed pages from /dev/zero. */\n #undef HAVE_MMAP_ANYWHERE\n \n /* Define if read-only mmap of a plain file works. */\n #undef HAVE_MMAP_FILE\n \n+/* Define if host mkdir takes a single argument. */\n+#undef MKDIR_TAKES_ONE_ARG\n+\n+/* Define to the name of the distribution. */\n+#undef PACKAGE\n+\n+/* Define to the version of the distribution. */\n+#undef VERSION\n+\n+/* Define to 1 if installation paths should be looked up in Windows32\n+   Registry. Ignored on non windows32 hosts. */\n+#undef ENABLE_WIN32_REGISTRY\n+\n+/* Define to be the last portion of registry key on windows hosts. */\n+#undef WIN32_REGISTRY_KEY\n+\n+/* Define if your assembler supports .subsection and .subsection -1 starts\n+   emitting at the beginning of your section. */\n+#undef HAVE_GAS_SUBSECTION_ORDERING\n+\n+/* Define if your assembler supports .weak. */\n+#undef HAVE_GAS_WEAK\n+\n+/* Define if your assembler supports .hidden. */\n+#undef HAVE_GAS_HIDDEN\n+\n+/* Define if your assembler supports .register. */\n+#undef HAVE_AS_REGISTER_PSEUDO_OP\n+\n+/* Define if the assembler supports 64bit sparc. */\n+#undef AS_SPARC64_FLAG\n+\n+/* Define if your assembler supports offsetable %lo(). */\n+#undef HAVE_AS_OFFSETABLE_LO10\n+\n+/* Define if you want to always select the new-abi for g++. */\n+#undef ENABLE_NEW_GXX_ABI\n+"}, {"sha": "aad3105e3a30e3965392cf50b1fd2df2c1bf7cf3", "filename": "gcc/configure.in", "status": "modified", "additions": 16, "deletions": 14, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91029a29533bcffecafb8991eb0d033403cce3d8/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91029a29533bcffecafb8991eb0d033403cce3d8/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=91029a29533bcffecafb8991eb0d033403cce3d8", "patch": "@@ -101,7 +101,7 @@ if test x\"${DEFAULT_LINKER+set}\" = x\"set\"; then\n   elif $DEFAULT_LINKER -v < /dev/null 2>&1 | grep GNU > /dev/null; then\n     gnu_ld_flag=yes\n   fi\n-  AC_DEFINE_UNQUOTED(DEFAULT_LINKER,\"$DEFAULT_LINKER\")\n+  AC_DEFINE_UNQUOTED(DEFAULT_LINKER,\"$DEFAULT_LINKER\", [Define to enable the use of a default linker.])\n fi\n \n # With GNU as\n@@ -119,7 +119,7 @@ if test x\"${DEFAULT_ASSEMBLER+set}\" = x\"set\"; then\n   elif $DEFAULT_ASSEMBLER -v < /dev/null 2>&1 | grep GNU > /dev/null; then\n     gas_flag=yes\n   fi\n-  AC_DEFINE_UNQUOTED(DEFAULT_ASSEMBLER,\"$DEFAULT_ASSEMBLER\")\n+  AC_DEFINE_UNQUOTED(DEFAULT_ASSEMBLER,\"$DEFAULT_ASSEMBLER\", [Define to enable the use of a default assembler.])\n fi\n \n # With stabs\n@@ -365,7 +365,7 @@ AC_CACHE_VAL(gcc_cv_header_inttypes_h,\n   gcc_cv_header_inttypes_h=no)])\n AC_MSG_RESULT($gcc_cv_header_inttypes_h)\n if test $gcc_cv_header_inttypes_h = yes; then\n-  AC_DEFINE(HAVE_INTTYPES_H)\n+  AC_DEFINE(HAVE_INTTYPES_H, 1, [Define if you have a working <inttypes.h> header file.])\n fi\n \n #\n@@ -3974,8 +3974,8 @@ changequote([,])dnl\n # Internationalization\n PACKAGE=gcc\n VERSION=\"$gcc_version\"\n-AC_DEFINE_UNQUOTED(PACKAGE, \"$PACKAGE\")\n-AC_DEFINE_UNQUOTED(VERSION, \"$VERSION\")\n+AC_DEFINE_UNQUOTED(PACKAGE, \"$PACKAGE\", [Define to the name of the distribution.])\n+AC_DEFINE_UNQUOTED(VERSION, \"$VERSION\", [Define to the version of the distribution.])\n AC_SUBST(PACKAGE)\n AC_SUBST(VERSION)\n \n@@ -4001,7 +4001,8 @@ AC_ARG_ENABLE(win32-registry,\n \n AC_MSG_CHECKING(whether windows registry support is requested)\n if test x$enable_win32_registry != xno; then\n-  AC_DEFINE(ENABLE_WIN32_REGISTRY)\n+  AC_DEFINE(ENABLE_WIN32_REGISTRY, 1, [Define to 1 if installation paths should be looked up in Windows32\n+   Registry. Ignored on non windows32 hosts.])\n   AC_MSG_RESULT(yes)\n else\n   AC_MSG_RESULT(no)\n@@ -4025,7 +4026,7 @@ esac\n \n if test x$enable_win32_registry != xno; then\n   AC_MSG_CHECKING(registry key on windows hosts)\n-  AC_DEFINE_UNQUOTED(WIN32_REGISTRY_KEY, \"$gcc_cv_win32_registry_key\")\n+  AC_DEFINE_UNQUOTED(WIN32_REGISTRY_KEY, \"$gcc_cv_win32_registry_key\", [Define to be the last portion of registry key on windows hosts.])\n   AC_MSG_RESULT($gcc_cv_win32_registry_key)\n fi\n \n@@ -4335,7 +4336,8 @@ EOF\n \t\t\t\t\t:\n \t\t\t\telse\n \t\t\t\t\tgcc_cv_as_subsections=\"working .subsection -1\"\n-\t\t\t\t\tAC_DEFINE(HAVE_GAS_SUBSECTION_ORDERING)\n+\t\t\t\t\tAC_DEFINE(HAVE_GAS_SUBSECTION_ORDERING, 1, [Define if your assembler supports .subsection and .subsection -1 starts\n+   emitting at the beginning of your section.])\n \t\t\t\tfi\n \t\t\tfi\n \t\tfi\n@@ -4350,7 +4352,7 @@ if test x$gcc_cv_as != x; then\n \t# Check if we have .weak\n \techo \"\t.weak foobar\" > conftest.s\n \tif $gcc_cv_as -o conftest.o conftest.s > /dev/null 2>&1; then\n-\t\tAC_DEFINE(HAVE_GAS_WEAK)\n+\t\tAC_DEFINE(HAVE_GAS_WEAK, 1, [Define if your assembler supports .weak.])\n \t\tgcc_cv_as_weak=\"yes\"\n \tfi\n \trm -f conftest.s conftest.o conftest.nm1 conftest.nm2\n@@ -4364,7 +4366,7 @@ if test x$gcc_cv_as != x; then\n \techo \"\t.hidden foobar\" > conftest.s\n \techo \"foobar:\" >> conftest.s\n \tif $gcc_cv_as -o conftest.o conftest.s > /dev/null 2>&1; then\n-\t\tAC_DEFINE(HAVE_GAS_HIDDEN)\n+\t\tAC_DEFINE(HAVE_GAS_HIDDEN, 1, [Define if your assembler supports .hidden.])\n \t\tgcc_cv_as_hidden=\"yes\"\n \tfi\n \trm -f conftest.s conftest.o conftest.nm1 conftest.nm2\n@@ -4388,7 +4390,7 @@ case \"$target\" in\n \tfi\n     ])\n     if test \"x$gcc_cv_as_register_pseudo_op\" = xyes; then\n-\tAC_DEFINE(HAVE_AS_REGISTER_PSEUDO_OP)\n+\tAC_DEFINE(HAVE_AS_REGISTER_PSEUDO_OP, 1, [Define if your assembler supports .register.])\n     fi\n \n     case \"$tm_file\" in\n@@ -4420,7 +4422,7 @@ changequote(, )\n \t    dep_tmake_file=`echo \" $dep_tmake_file \" | sed -e 's, [^ ]*/config/sparc/t-sol2-64 , ,' -e 's,^ ,,' -e 's, $,,'`\n changequote([, ])\n \telse\n-\t    AC_DEFINE_UNQUOTED(AS_SPARC64_FLAG, \"$gcc_cv_as_flags64\")\n+\t    AC_DEFINE_UNQUOTED(AS_SPARC64_FLAG, \"$gcc_cv_as_flags64\", [Define if the assembler supports 64bit sparc.])\n \tfi\n \t;;\n     *) gcc_cv_as_flags64=${gcc_cv_as_flags64-no}\n@@ -4451,7 +4453,7 @@ changequote([, ])\n \t    fi\n \t])\n \tif test \"x$gcc_cv_as_offsetable_lo10\" = xyes; then\n-\t    AC_DEFINE(HAVE_AS_OFFSETABLE_LO10)\n+\t    AC_DEFINE(HAVE_AS_OFFSETABLE_LO10, 1, [Define if your assembler supports offsetable %lo().])\n \tfi\n     fi\n     ;;\n@@ -4570,7 +4572,7 @@ AC_ARG_ENABLE(new-gxx-abi,\n \t\t\t  select the new abi for g++. You must select an ABI\n \t\t\t  at configuration time, so that the correct runtime\n \t\t\t  support is built. You cannot mix ABIs.],\n-[AC_DEFINE(ENABLE_NEW_GXX_ABI)\n+[AC_DEFINE(ENABLE_NEW_GXX_ABI, 1, [Define if you want to always select the new-abi for g++.])\n GXX_ABI_FLAG='-fnew-abi'\n echo \"Building a new-abi g++ compiler.\"\n ])"}]}