{"sha": "3d569e76dfe5e431ce9c02938ff958e589fe35f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q1NjllNzZkZmU1ZTQzMWNlOWMwMjkzOGZmOTU4ZTU4OWZlMzVmNA==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2015-11-09T19:56:57Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2015-11-09T19:56:57Z"}, "message": "Re: [PATCH] Minor refactoring in tree-ssanames.c & freelists verifier\n\n\t* tree-ssanames.c (verify_ssaname_freelists): Simplify check for\n\tbeing in gimple/ssa form.  Remove redundant check for SSA_NAME.\n\tFix comment typo.\n\nFrom-SVN: r230049", "tree": {"sha": "a1eff9f3af73f80d8cb25e4a260a0a8f651e95ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1eff9f3af73f80d8cb25e4a260a0a8f651e95ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d569e76dfe5e431ce9c02938ff958e589fe35f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d569e76dfe5e431ce9c02938ff958e589fe35f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d569e76dfe5e431ce9c02938ff958e589fe35f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d569e76dfe5e431ce9c02938ff958e589fe35f4/comments", "author": null, "committer": null, "parents": [{"sha": "4483f3eeb72ef2ba566b0603d7660b15bb3bf124", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4483f3eeb72ef2ba566b0603d7660b15bb3bf124", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4483f3eeb72ef2ba566b0603d7660b15bb3bf124"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "43a8d4954d4700f266e5dd6e4bbdf55d802659e8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d569e76dfe5e431ce9c02938ff958e589fe35f4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d569e76dfe5e431ce9c02938ff958e589fe35f4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3d569e76dfe5e431ce9c02938ff958e589fe35f4", "patch": "@@ -1,3 +1,9 @@\n+2015-11-09  Jeff Law  <law@redhat.com>\n+\n+\t* tree-ssanames.c (verify_ssaname_freelists): Simplify check for\n+\tbeing in gimple/ssa form.  Remove redundant check for SSA_NAME.\n+\tFix comment typo.\n+\n 2015-11-09  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* config/rs6000/rs6000.opt (-mpower9-fusion): Add new switches for"}, {"sha": "b599bb5bf1268b6815b55e3740c1739efae79c2a", "filename": "gcc/tree-ssanames.c", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d569e76dfe5e431ce9c02938ff958e589fe35f4/gcc%2Ftree-ssanames.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d569e76dfe5e431ce9c02938ff958e589fe35f4/gcc%2Ftree-ssanames.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssanames.c?ref=3d569e76dfe5e431ce9c02938ff958e589fe35f4", "patch": "@@ -124,17 +124,13 @@ ssanames_print_statistics (void)\n DEBUG_FUNCTION void\n verify_ssaname_freelists (struct function *fun)\n {\n-  /* Do nothing if we are in RTL format.  */\n-  basic_block bb;\n-  FOR_EACH_BB_FN (bb, fun)\n-    {\n-      if (bb->flags & BB_RTL)\n-\treturn;\n-    }\n+  if (!gimple_in_ssa_p (fun))\n+    return;\n \n   bitmap names_in_il = BITMAP_ALLOC (NULL);\n \n   /* Walk the entire IL noting every SSA_NAME we see.  */\n+  basic_block bb;\n   FOR_EACH_BB_FN (bb, fun)\n     {\n       tree t;\n@@ -163,8 +159,7 @@ verify_ssaname_freelists (struct function *fun)\n \t  ssa_op_iter iter;\n \t  gimple *stmt = gsi_stmt (gsi);\n \t  FOR_EACH_SSA_TREE_OPERAND (t, stmt, iter, SSA_OP_ALL_OPERANDS)\n-\t    if (TREE_CODE (t) == SSA_NAME)\n-\t      bitmap_set_bit (names_in_il, SSA_NAME_VERSION (t));\n+\t    bitmap_set_bit (names_in_il, SSA_NAME_VERSION (t));\n \t}\n     }\n \n@@ -218,7 +213,7 @@ verify_ssaname_freelists (struct function *fun)\n      debug/non-debug compilations have the same SSA_NAMEs.  So for each\n      lost SSA_NAME, see if it's likely one from that wart.  These will always\n      be marked as default definitions.  So we loosely assume that anything\n-     marked as a default definition isn't leaked by pretening they are\n+     marked as a default definition isn't leaked by pretending they are\n      in the IL.  */\n   for (unsigned int i = UNUSED_NAME_VERSION + 1; i < num_ssa_names; i++)\n     if (ssa_name (i) && SSA_NAME_IS_DEFAULT_DEF (ssa_name (i)))"}]}