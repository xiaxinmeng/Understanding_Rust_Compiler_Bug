{"sha": "e28cae4f9c4c30a0f303ab58092215a100adcc91", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTI4Y2FlNGY5YzRjMzBhMGYzMDNhYjU4MDkyMjE1YTEwMGFkY2M5MQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-07-24T05:41:45Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-07-24T05:41:45Z"}, "message": "(start_init): Second arg is now a tree.\n\nFrom-SVN: r4980", "tree": {"sha": "d9292f8f26895107ac5bb52ce727ea31ebd27d20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9292f8f26895107ac5bb52ce727ea31ebd27d20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e28cae4f9c4c30a0f303ab58092215a100adcc91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e28cae4f9c4c30a0f303ab58092215a100adcc91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e28cae4f9c4c30a0f303ab58092215a100adcc91", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e28cae4f9c4c30a0f303ab58092215a100adcc91/comments", "author": null, "committer": null, "parents": [{"sha": "8245685d318255018188268f28f8796872b347b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8245685d318255018188268f28f8796872b347b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8245685d318255018188268f28f8796872b347b0"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "f8702e2cc6b6653c1b617b246ee5d7cd1594af2f", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e28cae4f9c4c30a0f303ab58092215a100adcc91/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e28cae4f9c4c30a0f303ab58092215a100adcc91/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=e28cae4f9c4c30a0f303ab58092215a100adcc91", "patch": "@@ -5181,14 +5181,18 @@ struct initializer_stack *initializer_stack;\n /* Prepare to parse and output the initializer for variable DECL.  */\n \n void\n-start_init (decl, asmspec, top_level)\n+start_init (decl, asmspec_tree, top_level)\n      tree decl;\n-     char *asmspec;\n+     tree asmspec_tree;\n      int top_level;\n {\n   char *locus;\n   struct initializer_stack *p\n     = (struct initializer_stack *) xmalloc (sizeof (struct initializer_stack));\n+  char *asmspec = 0;\n+\n+  if (asmspec_tree)\n+    asmspec = TREE_STRING_POINTER (asmspec_tree);\n \n   p->decl = constructor_decl;\n   p->asmspec = constructor_asmspec;"}]}