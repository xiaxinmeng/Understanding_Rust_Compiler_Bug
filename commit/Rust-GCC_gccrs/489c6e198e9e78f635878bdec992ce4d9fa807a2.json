{"sha": "489c6e198e9e78f635878bdec992ce4d9fa807a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg5YzZlMTk4ZTllNzhmNjM1ODc4YmRlYzk5MmNlNGQ5ZmE4MDdhMg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-12T13:19:15Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-12T13:19:15Z"}, "message": "[multiple changes]\n\n2013-04-12  Robert Dewar  <dewar@adacore.com>\n\n\t* checks.adb, sem_elab.adb, repinfo.adb, sem_ch4.adb, restrict.adb,\n\trestrict.ads: Minor reformatting.\n\n2013-04-12  Ed Schonberg  <schonberg@adacore.com>\n\n\t* lib-xref.adb: Retrieve original name of classwide type if any.\n\n2013-04-12  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_ch11.ads: Minor reformatting.\n\nFrom-SVN: r197910", "tree": {"sha": "dee6613608262bd3a26f31a89d7813d8d30eabc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dee6613608262bd3a26f31a89d7813d8d30eabc4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/489c6e198e9e78f635878bdec992ce4d9fa807a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/489c6e198e9e78f635878bdec992ce4d9fa807a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/489c6e198e9e78f635878bdec992ce4d9fa807a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/489c6e198e9e78f635878bdec992ce4d9fa807a2/comments", "author": null, "committer": null, "parents": [{"sha": "a7e68e7fa76aa33eab48a30186abcb4d3b291322", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7e68e7fa76aa33eab48a30186abcb4d3b291322", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7e68e7fa76aa33eab48a30186abcb4d3b291322"}], "stats": {"total": 84, "additions": 58, "deletions": 26}, "files": [{"sha": "3a29f199b18abed3039c8735cb577eb81f7e3c84", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/489c6e198e9e78f635878bdec992ce4d9fa807a2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/489c6e198e9e78f635878bdec992ce4d9fa807a2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=489c6e198e9e78f635878bdec992ce4d9fa807a2", "patch": "@@ -1,3 +1,16 @@\n+2013-04-12  Robert Dewar  <dewar@adacore.com>\n+\n+\t* checks.adb, sem_elab.adb, repinfo.adb, sem_ch4.adb, restrict.adb,\n+\trestrict.ads: Minor reformatting.\n+\n+2013-04-12  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* lib-xref.adb: Retrieve original name of classwide type if any.\n+\n+2013-04-12  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_ch11.ads: Minor reformatting.\n+\n 2013-04-12  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* aspects.adb: Alphabetize subprogram bodies in this unit. Add"}, {"sha": "5544aad1a46d19950dfb2097fb31ad643f01d236", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/489c6e198e9e78f635878bdec992ce4d9fa807a2/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/489c6e198e9e78f635878bdec992ce4d9fa807a2/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=489c6e198e9e78f635878bdec992ce4d9fa807a2", "patch": "@@ -6242,9 +6242,9 @@ package body Checks is\n          return;\n       end if;\n \n-      --  Do not insert checks within a predicate function.  This will arise\n-      --  if the current unit and the predicate function are  being compiled\n-      --  with  validity checks enabled.\n+      --  Do not insert checks within a predicate function. This will arise\n+      --  if the current unit and the predicate function are being compiled\n+      --  with validity checks enabled.\n \n       if Present (Predicate_Function (Typ))\n         and then Current_Scope = Predicate_Function (Typ)"}, {"sha": "5f2f6b5f0a827d0e56fdcbb3ae4947caff94d197", "filename": "gcc/ada/exp_ch11.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/489c6e198e9e78f635878bdec992ce4d9fa807a2/gcc%2Fada%2Fexp_ch11.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/489c6e198e9e78f635878bdec992ce4d9fa807a2/gcc%2Fada%2Fexp_ch11.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.ads?ref=489c6e198e9e78f635878bdec992ce4d9fa807a2", "patch": "@@ -96,4 +96,5 @@ package Exp_Ch11 is\n    --  handler (and restriction No_Exception_Propagation is set), or if there\n    --  is a local handler marking that it has a local raise. E is the entity\n    --  of the corresponding exception.\n+\n end Exp_Ch11;"}, {"sha": "28ae480338d3fe96dbaf31b2169b9ff2c2a7554b", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/489c6e198e9e78f635878bdec992ce4d9fa807a2/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/489c6e198e9e78f635878bdec992ce4d9fa807a2/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=489c6e198e9e78f635878bdec992ce4d9fa807a2", "patch": "@@ -1364,6 +1364,23 @@ package body Lib.Xref is\n             then\n                Tref := Etype (Tref);\n \n+               --  Another special case: an object of a classwide type\n+               --  initialized with a tag-indeterminate call gets a subtype\n+               --  of the classwide type during expansion. See if the original\n+               --  type in the declaration is named, and return it instead\n+               --  of going to the root type.\n+\n+               if Ekind (Tref) = E_Class_Wide_Subtype\n+                 and then Nkind (Parent (Ent)) = N_Object_Declaration\n+                 and then\n+                   Nkind (Original_Node (Object_Definition (Parent (Ent))))\n+                     = N_Identifier\n+               then\n+                  Tref :=\n+                    Entity\n+                      (Original_Node ((Object_Definition (Parent (Ent)))));\n+               end if;\n+\n             --  For anything else, exit\n \n             else"}, {"sha": "37dd5e4888621f684cfa19269f985df43970d9fe", "filename": "gcc/ada/repinfo.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/489c6e198e9e78f635878bdec992ce4d9fa807a2/gcc%2Fada%2Frepinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/489c6e198e9e78f635878bdec992ce4d9fa807a2/gcc%2Fada%2Frepinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo.adb?ref=489c6e198e9e78f635878bdec992ce4d9fa807a2", "patch": "@@ -1041,11 +1041,13 @@ package body Repinfo is\n          Write_Str (\"for \");\n          List_Name (Ent);\n          Write_Str (\"'\" & Attr_Name & \" use System.\");\n+\n          if Bytes_Big_Endian xor Reverse_Storage_Order (Ent) then\n             Write_Str (\"High\");\n          else\n             Write_Str (\"Low\");\n          end if;\n+\n          Write_Line (\"_Order_First;\");\n       end List_Attr;\n \n@@ -1060,6 +1062,7 @@ package body Repinfo is\n          if Is_Record_Type (Ent) then\n             List_Attr (\"Bit_Order\");\n          end if;\n+\n          List_Attr (\"Scalar_Storage_Order\");\n       end if;\n    end List_Scalar_Storage_Order;"}, {"sha": "6502bb1df7a76b23f95ca7b663174d6e61700e36", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/489c6e198e9e78f635878bdec992ce4d9fa807a2/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/489c6e198e9e78f635878bdec992ce4d9fa807a2/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=489c6e198e9e78f635878bdec992ce4d9fa807a2", "patch": "@@ -69,22 +69,22 @@ package body Restrict is\n    --  Once set True, this is never turned off again.\n \n    No_Use_Of_Attribute : array (Attribute_Id) of Source_Ptr :=\n-                          (others => No_Location);\n+                           (others => No_Location);\n \n    No_Use_Of_Attribute_Warning : array (Attribute_Id) of Boolean :=\n-                                  (others => False);\n+                                   (others => False);\n \n    No_Use_Of_Attribute_Set : Boolean := False;\n-   --  Indicates that No_Use_Of_Attribute was set at least once.\n+   --  Indicates that No_Use_Of_Attribute was set at least once\n \n    No_Use_Of_Pragma : array (Pragma_Id) of Source_Ptr :=\n                         (others => No_Location);\n \n    No_Use_Of_Pragma_Warning : array (Pragma_Id) of Boolean :=\n-                                  (others => False);\n+                                (others => False);\n \n    No_Use_Of_Pragma_Set : Boolean := False;\n-   --  Indicates that No_Use_Of_Pragma was set at least once.\n+   --  Indicates that No_Use_Of_Pragma was set at least once\n \n    -----------------------\n    -- Local Subprograms --\n@@ -322,7 +322,7 @@ package body Restrict is\n          return;\n       end if;\n \n-      --  If nothing set, nothing to check.\n+      --  If nothing set, nothing to check\n \n       if not No_Use_Of_Attribute_Set then\n          return;\n@@ -334,8 +334,7 @@ package body Restrict is\n          Error_Msg_Node_1 := N;\n          Error_Msg_Warn := No_Use_Of_Attribute_Warning (A_Id);\n          Error_Msg_N\n-           (\"<violation of restriction `No_Use_Of_Attribute '='> &`#\",\n-            N);\n+           (\"<violation of restriction `No_Use_Of_Attribute '='> &`#\", N);\n       end if;\n    end Check_Restriction_No_Use_Of_Attribute;\n \n@@ -356,7 +355,7 @@ package body Restrict is\n          return;\n       end if;\n \n-      --  If nothing set, nothing to check.\n+      --  If nothing set, nothing to check\n \n       if not No_Use_Of_Pragma_Set then\n          return;\n@@ -368,8 +367,7 @@ package body Restrict is\n          Error_Msg_Node_1 := Id;\n          Error_Msg_Warn := No_Use_Of_Pragma_Warning (P_Id);\n          Error_Msg_N\n-           (\"<violation of restriction `No_Use_Of_Pragma '='> &`#\",\n-            Id);\n+           (\"<violation of restriction `No_Use_Of_Pragma '='> &`#\", Id);\n       end if;\n    end Check_Restriction_No_Use_Of_Pragma;\n \n@@ -381,6 +379,10 @@ package body Restrict is\n       function Chars_Is (E : Entity_Id; S : String) return Boolean;\n       --  Return True iff Chars (E) matches S (given in lower case)\n \n+      --------------\n+      -- Chars_Is --\n+      --------------\n+\n       function Chars_Is (E : Entity_Id; S : String) return Boolean is\n          Nam : constant Name_Id := Chars (E);\n       begin"}, {"sha": "b01ffe46a355d121658a09774f2e53b380a9bff8", "filename": "gcc/ada/restrict.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/489c6e198e9e78f635878bdec992ce4d9fa807a2/gcc%2Fada%2Frestrict.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/489c6e198e9e78f635878bdec992ce4d9fa807a2/gcc%2Fada%2Frestrict.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.ads?ref=489c6e198e9e78f635878bdec992ce4d9fa807a2", "patch": "@@ -253,12 +253,12 @@ package Restrict is\n    --  being ignored here.\n \n    procedure Check_Restriction_No_Use_Of_Attribute (N : Node_Id);\n-   --  N is the node of an attribute definition clause.  An error message\n+   --  N is the node of an attribute definition clause. An error message\n    --  (warning) will be issued if a restriction (warning) was previously set\n    --  for this attribute using Set_No_Use_Of_Attribute.\n \n-   procedure Check_Restriction_No_Use_Of_Pragma  (N : Node_Id);\n-   --  N is the node of a pragma.  An error message (warning) will be issued\n+   procedure Check_Restriction_No_Use_Of_Pragma (N : Node_Id);\n+   --  N is the node of a pragma. An error message (warning) will be issued\n    --  if a restriction (warning) was previously set for this pragma using\n    --  Set_No_Use_Of_Pragma.\n "}, {"sha": "7ac29bb14df7e575ea563fafab8b9ab3568caa03", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/489c6e198e9e78f635878bdec992ce4d9fa807a2/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/489c6e198e9e78f635878bdec992ce4d9fa807a2/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=489c6e198e9e78f635878bdec992ce4d9fa807a2", "patch": "@@ -414,8 +414,7 @@ package body Sem_Ch4 is\n          Check_Restriction (No_Allocators, N);\n \n          --  Processing for No_Standard_Allocators_After_Elaboration, loop to\n-         --  look at enclosing context, checking task case and main subprogram\n-         --  case.\n+         --  look at enclosing context, checking task/main subprogram case.\n \n          C := N;\n          P := Parent (C);"}, {"sha": "fe640d5e2046bfd2b491d377aba2de07469995d5", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/489c6e198e9e78f635878bdec992ce4d9fa807a2/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/489c6e198e9e78f635878bdec992ce4d9fa807a2/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=489c6e198e9e78f635878bdec992ce4d9fa807a2", "patch": "@@ -3339,14 +3339,11 @@ package body Sem_Elab is\n             if Nkind (Item) = N_Pragma\n               and then Pragma_Name (Item) = Name_Elaborate_All\n             then\n-               --  Return if some previous error on the pragma itself\n-               --  The pragma may be unanalyzed, because of a previous error,\n-               --  or if it is the context of a subunit, inherited by its\n-               --  parent.\n+               --  Return if some previous error on the pragma itself. The\n+               --  pragma may be unanalyzed, because of a previous error, or\n+               --  if it is the context of a subunit, inherited by its parent.\n \n-               if Error_Posted (Item)\n-                 or else not Analyzed (Item)\n-               then\n+               if Error_Posted (Item) or else not Analyzed (Item) then\n                   return;\n                end if;\n "}]}