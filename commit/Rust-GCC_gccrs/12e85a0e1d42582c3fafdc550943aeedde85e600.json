{"sha": "12e85a0e1d42582c3fafdc550943aeedde85e600", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTJlODVhMGUxZDQyNTgyYzNmYWZkYzU1MDk0M2FlZWRkZTg1ZTYwMA==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "joern.rennecke@superh.com", "date": "2002-04-12T12:14:33Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2002-04-12T12:14:33Z"}, "message": "sh.c (calc_live_regs, [...]): Use of PR_MEDIA_REG / PR_REG depends on TARGET_SHMEDIA, not TARGET_SH5.\n\n\t* sh.c (calc_live_regs, sh_pr_n_sets): Use of PR_MEDIA_REG / PR_REG\n\tdepends on TARGET_SHMEDIA, not TARGET_SH5.\n\nFrom-SVN: r52220", "tree": {"sha": "cf272dbb75ca71853cb62e94c1e4a850a7545c40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf272dbb75ca71853cb62e94c1e4a850a7545c40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12e85a0e1d42582c3fafdc550943aeedde85e600", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12e85a0e1d42582c3fafdc550943aeedde85e600", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12e85a0e1d42582c3fafdc550943aeedde85e600", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12e85a0e1d42582c3fafdc550943aeedde85e600/comments", "author": null, "committer": null, "parents": [{"sha": "1ab3e58a2fddcddbd142fa5734289de4d83a85b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ab3e58a2fddcddbd142fa5734289de4d83a85b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ab3e58a2fddcddbd142fa5734289de4d83a85b1"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "3200abb3ecf04780dc26e6f66566102bf4ee4331", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e85a0e1d42582c3fafdc550943aeedde85e600/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e85a0e1d42582c3fafdc550943aeedde85e600/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=12e85a0e1d42582c3fafdc550943aeedde85e600", "patch": "@@ -1,3 +1,8 @@\n+Fri Apr 12 12:11:26 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n+\n+\t* sh.c (calc_live_regs, sh_pr_n_sets): Use of PR_MEDIA_REG / PR_REG\n+\tdepends on TARGET_SHMEDIA, not TARGET_SH5.\n+\n 2002-04-12  Hans-Peter Nilsson  <hp@bitrange.com>\n \n \t* function.c (fixup_var_refs_1) <SET, handling VAR in SET_SRC>:"}, {"sha": "d80801b54eec8b55154f0f7a95d67ab6d9be80a2", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e85a0e1d42582c3fafdc550943aeedde85e600/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e85a0e1d42582c3fafdc550943aeedde85e600/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=12e85a0e1d42582c3fafdc550943aeedde85e600", "patch": "@@ -4351,10 +4351,11 @@ calc_live_regs (count_ptr, live_regs_mask)\n \t  break;\n \t}\n   pr_initial = has_hard_reg_initial_val (Pmode,\n-\t\t\t\t\t TARGET_SH5 ? PR_MEDIA_REG : PR_REG);\n+\t\t\t\t\t TARGET_SHMEDIA\n+\t\t\t\t\t ? PR_MEDIA_REG : PR_REG);\n   pr_live = (pr_initial\n-\t     ? REGNO (pr_initial) != (TARGET_SH5 ? PR_MEDIA_REG : PR_REG)\n-\t     : regs_ever_live[TARGET_SH5 ? PR_MEDIA_REG : PR_REG]);\n+\t     ? REGNO (pr_initial) != (TARGET_SHMEDIA ? PR_MEDIA_REG : PR_REG)\n+\t     : regs_ever_live[TARGET_SHMEDIA ? PR_MEDIA_REG : PR_REG]);\n   /* Force PR to be live if the prologue has to call the SHmedia\n      argument decoder or register saver.  */\n   if (TARGET_SHCOMPACT\n@@ -4364,7 +4365,7 @@ calc_live_regs (count_ptr, live_regs_mask)\n     pr_live = 1;\n   for (count = 0, reg = FIRST_PSEUDO_REGISTER - 1; reg >= 0; reg--)\n     {\n-      if (reg == (TARGET_SH5 ? PR_MEDIA_REG : PR_REG)\n+      if (reg == (TARGET_SHMEDIA ? PR_MEDIA_REG : PR_REG)\n \t  ? pr_live\n \t  : (interrupt_handler && ! pragma_trapa)\n \t  ? (/* Need to save all the regs ever live.  */\n@@ -6705,7 +6706,7 @@ sh_adjust_cost (insn, link, dep_insn, cost)\n int\n sh_pr_n_sets ()\n {\n-  return REG_N_SETS (TARGET_SH5 ? PR_MEDIA_REG : PR_REG);\n+  return REG_N_SETS (TARGET_SHMEDIA ? PR_MEDIA_REG : PR_REG);\n }\n \n /* SHmedia requires registers for branches, so we can't generate new"}]}