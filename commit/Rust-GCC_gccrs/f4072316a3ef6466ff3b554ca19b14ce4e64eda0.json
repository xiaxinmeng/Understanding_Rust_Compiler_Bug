{"sha": "f4072316a3ef6466ff3b554ca19b14ce4e64eda0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQwNzIzMTZhM2VmNjQ2NmZmM2I1NTRjYTE5YjE0Y2U0ZTY0ZWRhMA==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-03-09T21:51:39Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-03-09T21:51:39Z"}, "message": "re PR libfortran/31099 (Runtime error on legal code using RECL)\n\n2007-03-09  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libgfortran/31099\n\t* io/open.c (new_unit): Initialize bytes_left and recl_subrecord.\n\t* io/transfer.c (next_record_w): Set bytes left to record length for\n\tsequential unformatted I/O.\n\t(next_record_r): Ditto.\n\t(read_block_direct): Fix test for exceeding bytes_left.\n\nFrom-SVN: r122763", "tree": {"sha": "f373d27e1481d619ffecd03c0e976bc2f878ccbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f373d27e1481d619ffecd03c0e976bc2f878ccbe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4072316a3ef6466ff3b554ca19b14ce4e64eda0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4072316a3ef6466ff3b554ca19b14ce4e64eda0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4072316a3ef6466ff3b554ca19b14ce4e64eda0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4072316a3ef6466ff3b554ca19b14ce4e64eda0/comments", "author": null, "committer": null, "parents": [{"sha": "7cd4f641a0bbc98177446251888dbd96e3fd12f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cd4f641a0bbc98177446251888dbd96e3fd12f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cd4f641a0bbc98177446251888dbd96e3fd12f5"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "7f906581425308a24ab9a4c51e49a86bf5518b6e", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4072316a3ef6466ff3b554ca19b14ce4e64eda0/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4072316a3ef6466ff3b554ca19b14ce4e64eda0/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=f4072316a3ef6466ff3b554ca19b14ce4e64eda0", "patch": "@@ -1,3 +1,12 @@\n+2007-03-09  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/31099\n+\t* io/open.c (new_unit): Initialize bytes_left and recl_subrecord.\n+\t* io/transfer.c (next_record_w): Set bytes left to record length for\n+\tsequential unformatted I/O.\n+\t(next_record_r): Ditto.\n+\t(read_block_direct): Fix test for exceeding bytes_left.\n+\n 2007-03-08  Daniel Franke  <franke.daniel@gmail.com>\n \n \tPR fortran/30947"}, {"sha": "783c5e84503fc9c32e6daba9af7e77479c892af1", "filename": "libgfortran/io/open.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4072316a3ef6466ff3b554ca19b14ce4e64eda0/libgfortran%2Fio%2Fopen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4072316a3ef6466ff3b554ca19b14ce4e64eda0/libgfortran%2Fio%2Fopen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fopen.c?ref=f4072316a3ef6466ff3b554ca19b14ce4e64eda0", "patch": "@@ -437,6 +437,8 @@ new_unit (st_parameter_open *opp, gfc_unit *u, unit_flags * flags)\n     {\n       u->flags.has_recl = 1;\n       u->recl = opp->recl_in;\n+      u->recl_subrecord = u->recl;\n+      u->bytes_left = u->recl;\n     }\n   else\n     {"}, {"sha": "42f824939427798c020efbc587514c88cc184557", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4072316a3ef6466ff3b554ca19b14ce4e64eda0/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4072316a3ef6466ff3b554ca19b14ce4e64eda0/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=f4072316a3ef6466ff3b554ca19b14ce4e64eda0", "patch": "@@ -434,11 +434,10 @@ read_block_direct (st_parameter_dt *dtp, void *buf, size_t *nbytes)\n \n   /* Check whether we exceed the total record length.  */\n \n-  if (dtp->u.p.current_unit->flags.has_recl)\n+  if (dtp->u.p.current_unit->flags.has_recl\n+      && (*nbytes > (size_t) dtp->u.p.current_unit->bytes_left))\n     {\n-      to_read_record =\n-\t*nbytes > (size_t) dtp->u.p.current_unit->bytes_left ?\n-\t*nbytes : (size_t) dtp->u.p.current_unit->bytes_left;\n+      to_read_record = (size_t) dtp->u.p.current_unit->bytes_left;\n       short_record = 1;\n     }\n   else\n@@ -2152,6 +2151,7 @@ next_record_r (st_parameter_dt *dtp)\n     \n     case UNFORMATTED_SEQUENTIAL:\n       next_record_r_unf (dtp, 1);\n+      dtp->u.p.current_unit->bytes_left = dtp->u.p.current_unit->recl;\n       break;\n \n     case FORMATTED_DIRECT:\n@@ -2377,6 +2377,7 @@ next_record_w (st_parameter_dt *dtp, int done)\n \n     case UNFORMATTED_SEQUENTIAL:\n       next_record_w_unf (dtp, 0);\n+      dtp->u.p.current_unit->bytes_left = dtp->u.p.current_unit->recl;\n       break;\n \n     case FORMATTED_STREAM:"}]}