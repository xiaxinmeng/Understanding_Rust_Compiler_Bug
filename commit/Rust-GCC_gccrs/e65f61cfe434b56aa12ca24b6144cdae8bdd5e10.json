{"sha": "e65f61cfe434b56aa12ca24b6144cdae8bdd5e10", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTY1ZjYxY2ZlNDM0YjU2YWExMmNhMjRiNjE0NGNkYWU4YmRkNWUxMA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-06-01T00:23:46Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-06-01T00:23:46Z"}, "message": "(dbxout_type): Always emit cross-references if\nuse_gnu_debug_info_extensions set.\n\nFrom-SVN: r7410", "tree": {"sha": "ed417da8802edc70c3234613a7a1e6fd797af10a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed417da8802edc70c3234613a7a1e6fd797af10a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e65f61cfe434b56aa12ca24b6144cdae8bdd5e10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e65f61cfe434b56aa12ca24b6144cdae8bdd5e10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e65f61cfe434b56aa12ca24b6144cdae8bdd5e10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e65f61cfe434b56aa12ca24b6144cdae8bdd5e10/comments", "author": null, "committer": null, "parents": [{"sha": "b2526fe62130664473daca50df92ad112e861cf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2526fe62130664473daca50df92ad112e861cf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2526fe62130664473daca50df92ad112e861cf7"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "efcdaa6c2e28b8dd631af8edea2e846e62b8c172", "filename": "gcc/dbxout.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e65f61cfe434b56aa12ca24b6144cdae8bdd5e10/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e65f61cfe434b56aa12ca24b6144cdae8bdd5e10/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=e65f61cfe434b56aa12ca24b6144cdae8bdd5e10", "patch": "@@ -979,10 +979,13 @@ dbxout_type (type, full, show_arg_types)\n #ifdef DBX_NO_XREFS\n   /* For systems where dbx output does not allow the `=xsNAME:' syntax,\n      leave the type-number completely undefined rather than output\n-     a cross-reference.  */\n-  if (TREE_CODE (type) == RECORD_TYPE || TREE_CODE (type) == UNION_TYPE\n-      || TREE_CODE (type) == QUAL_UNION_TYPE\n-      || TREE_CODE (type) == ENUMERAL_TYPE)\n+     a cross-reference.  If we have already used GNU debug info extensions,\n+     then it is OK to output a cross reference.  This is necessary to get\n+     proper C++ debug output.  */\n+  if ((TREE_CODE (type) == RECORD_TYPE || TREE_CODE (type) == UNION_TYPE\n+       || TREE_CODE (type) == QUAL_UNION_TYPE\n+       || TREE_CODE (type) == ENUMERAL_TYPE)\n+      && ! use_gnu_debug_info_extensions)\n     /* We must use the same test here as we use twice below when deciding\n        whether to emit a cross-reference.  */\n     if ((TYPE_NAME (type) != 0"}]}