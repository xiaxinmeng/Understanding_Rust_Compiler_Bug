{"sha": "a76b4376584366c04cfe2dba19377cdc87622fba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTc2YjQzNzY1ODQzNjZjMDRjZmUyZGJhMTkzNzdjZGM4NzYyMmZiYQ==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2005-10-16T00:59:09Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2005-10-16T00:59:09Z"}, "message": "Modify update_version for SVN\n\nFrom-SVN: r105454", "tree": {"sha": "eedab77f773da858823a07112e07fcf86a6fc23d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eedab77f773da858823a07112e07fcf86a6fc23d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a76b4376584366c04cfe2dba19377cdc87622fba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a76b4376584366c04cfe2dba19377cdc87622fba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a76b4376584366c04cfe2dba19377cdc87622fba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a76b4376584366c04cfe2dba19377cdc87622fba/comments", "author": null, "committer": null, "parents": [{"sha": "9e87dfda26b4de79c825ed020efee185801358d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e87dfda26b4de79c825ed020efee185801358d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e87dfda26b4de79c825ed020efee185801358d3"}], "stats": {"total": 133, "additions": 133, "deletions": 0}, "files": [{"sha": "00edc6507149cc4069bbe1fc21c8ea36a2b57e02", "filename": "maintainer-scripts/update_version_svn", "status": "added", "additions": 133, "deletions": 0, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a76b4376584366c04cfe2dba19377cdc87622fba/maintainer-scripts%2Fupdate_version_svn", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a76b4376584366c04cfe2dba19377cdc87622fba/maintainer-scripts%2Fupdate_version_svn", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/maintainer-scripts%2Fupdate_version_svn?ref=a76b4376584366c04cfe2dba19377cdc87622fba", "patch": "@@ -0,0 +1,133 @@\n+#!/bin/sh\n+#\n+# Update the current version date in all files in the tree containing\n+# it.  Consider all release branches except those matching the regular\n+# expression in $IGNORE_BRANCHES, and also consider those branches listed\n+# in $ADD_BRANCHES.\n+\n+SVNROOT=${SVNROOT:-\"file:///svn/gcc\"}\n+IGNORE_BRANCHES='gcc-(2_95|3_0|3_1|3_2|3_3)-branch'\n+ADD_BRANCHES='HEAD autovect-branch dfp-branch'\n+\n+# Run this from /tmp.\n+export SVNROOT\n+/bin/rm -rf /tmp/$$\n+/bin/mkdir /tmp/$$\n+cd /tmp/$$\n+\n+# The path to cvs.\n+SVN=${SVN:-/usr/bin/svn}\n+\n+# Compute the branches which we should update.\n+BRANCHES=`$SVN ls $SVNROOT/branches \\\n+\t  | sed -e 's/\\///' \\\n+          | egrep 'gcc-[0-9]+_[0-9]+-branch$' \\\n+          | egrep -v $IGNORE_BRANCHES`\n+\n+# Always update the mainline.\n+BRANCHES=\"${BRANCHES} ${ADD_BRANCHES}\"\n+BRANCHES=\"HEAD\"\n+# ARGS is passed to 'cvs co'\n+CURR_DATE=`/bin/date +\"%Y%m%d\"`\n+\n+# version is contained within a char*\n+textstring_FILES=\"gcc/version.c\"\n+\n+# version is contained within a #define\n+cppdefine_FILES=\"libstdc++-v3/include/bits/c++config\"\n+\n+# version is all there is\n+datestamp_FILES=\"gcc/DATESTAMP\"\n+\n+FILES=\"$textstring_FILES $cppdefine_FILES $datestamp_FILES\"\n+DIRS=\"$textstring_DIRS $cppdefine_DIRS $datestamp_DIRS\"\n+\n+# Assume all will go well.\n+RESULT=0\n+for BRANCH in $BRANCHES; do\n+  echo \"Working on \\\"$BRANCH\\\".\"\n+  # Check out the files on the branch.  HEAD is a special case; if\n+  # you check out files with -r HEAD, CVS will not let you check \n+  # in changes.\n+  if test \"$BRANCH\" = HEAD; then \n+    for i in $FILES; do\n+      ${SVN} co -N ${SVNROOT}/trunk/`dirname $i` `basename $i`\n+    done\n+  else\n+    for i in $FILES; do\n+      ${SVN} co -N ${SVNROOT}/branches/${BRANCH}/`dirname $i` `basename $i`\n+    done\n+  fi\n+\n+  # There are no files to commit yet.\n+  COMMIT_FILES=\"\"\n+   \n+  for file in $textstring_FILES; do\n+    dirname=`basename $file`\n+    file=`basename $file`\n+    file=\"$dirname/$file\"\n+    echo \"$file\"\n+    exit 0;\n+    if test -f $file; then \n+      /bin/sed  <$file >$file.new -e \\\n+  \"s/\\(.*\\\"[^ ]*\\) [0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]/\\1 ${CURR_DATE}/\" \n+\n+      if /usr/bin/cmp -s $file $file.new; then\n+\trm -f $file.new\n+      else\n+\tmv -f $file.new $file\n+        COMMIT_FILES=\"$COMMIT_FILES $file\"\n+      fi\n+    fi\n+  done\n+  for file in $cppdefine_FILES; do\n+    dirname=`basename $file`\n+    file=`basename $file`\n+    file=\"$dirname/$file\"\n+    if test -f $file; then\n+      /bin/sed <$file >$file.new -e \\\n+  \"s/\\(#.*\\) [0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]/\\1 ${CURR_DATE}/\"\n+\n+      if /usr/bin/cmp -s $file $file.new; then\n+\trm -f $file.new\n+      else\n+\tmv -f $file.new $file\n+        COMMIT_FILES=\"$COMMIT_FILES $file\"\n+      fi\n+    fi\n+  done\n+\n+  for file in $datestamp_FILES; do\n+    dirname=`basename $file`\n+    file=`basename $file`\n+    file=\"$dirname/$file\"\n+    if test -f $file; then\n+      echo ${CURR_DATE} > $file.new\n+\n+      if /usr/bin/cmp -s $file $file.new; then\n+\trm -f $file.new\n+      else\n+\tmv -f $file.new $file\n+        COMMIT_FILES=\"$COMMIT_FILES $file\"\n+      fi\n+    fi\n+  done\n+  echo \"$COMMIT_FILES\"  \n+  if test -n \"$COMMIT_FILES\"; then\n+    for i in $COMMIT_FILES; do\n+    echo \"Attempting to commit $i\"\n+    if ! ${SVN} commit -m \"Daily bump.\" $i; then\n+       # If we could not commit the files, indicate failure.\n+       RESULT=1\n+     fi\n+    done\n+  fi\n+  \n+  # Remove the files.\n+  for i in $FILES; do\n+   rm -rf /tmp/$$/`basename $i`\n+  done\n+done\n+\n+/bin/rm -rf /tmp/$$\n+exit $RESULT"}]}