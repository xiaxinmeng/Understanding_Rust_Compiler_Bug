{"sha": "294340bf912a36414f18890b6a917237f178dfc9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjk0MzQwYmY5MTJhMzY0MTRmMTg4OTBiNmE5MTcyMzdmMTc4ZGZjOQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2006-12-23T22:10:10Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2006-12-23T22:10:10Z"}, "message": "Makefile.in (final.o): Depend on vecprim.h.\n\n\t* Makefile.in (final.o): Depend on vecprim.h.\n\t* final.c: Include vecprim.h.\n\t(insn_addresses_): Change the type to VEC(int,heap)*.\n\t* insn-addr.h (INSN_ADDRESSES_DEFN): Remove.\n\t(INSN_ADDRESSES, INSN_ADDRESSES_ALLOC, INSN_ADDRESSES_SIZE,\n\tINSN_ADDRESSES_NEW): Use VEC instead of VARRAY.\n\nFrom-SVN: r120177", "tree": {"sha": "46e966a10c5cfd38bdcd802c2fcdba4bc35d4581", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46e966a10c5cfd38bdcd802c2fcdba4bc35d4581"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/294340bf912a36414f18890b6a917237f178dfc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/294340bf912a36414f18890b6a917237f178dfc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/294340bf912a36414f18890b6a917237f178dfc9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/294340bf912a36414f18890b6a917237f178dfc9/comments", "author": null, "committer": null, "parents": [{"sha": "8aceba8c95eb83e52287f1ec5ebccc505306e474", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8aceba8c95eb83e52287f1ec5ebccc505306e474", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8aceba8c95eb83e52287f1ec5ebccc505306e474"}], "stats": {"total": 72, "additions": 48, "deletions": 24}, "files": [{"sha": "01e740ff6f5a12500fbd0dcc4eb8eb4896758135", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/294340bf912a36414f18890b6a917237f178dfc9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/294340bf912a36414f18890b6a917237f178dfc9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=294340bf912a36414f18890b6a917237f178dfc9", "patch": "@@ -4,6 +4,13 @@\n \t* doc/invoke.texi (-fforce-mem): Remove.\n \t* opts.c (common_handle_option): Don't handle OPT_fforce_mem.\n \n+\t* Makefile.in (final.o): Depend on vecprim.h.\n+\t* final.c: Include vecprim.h.\n+\t(insn_addresses_): Change the type to VEC(int,heap)*.\n+\t* insn-addr.h (INSN_ADDRESSES_DEFN): Remove.\n+\t(INSN_ADDRESSES, INSN_ADDRESSES_ALLOC, INSN_ADDRESSES_SIZE,\n+\tINSN_ADDRESSES_NEW): Use VEC instead of VARRAY.\n+\n 2006-12-23  Marcin Dalecki  <martin@dalecki.de>\n \n \t* cgraphunit.c (cgraph_optimize): Fixed obvious thinko in memory"}, {"sha": "632bf0950bd849d314a97738f4e8b8adf9360fe9", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/294340bf912a36414f18890b6a917237f178dfc9/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/294340bf912a36414f18890b6a917237f178dfc9/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=294340bf912a36414f18890b6a917237f178dfc9", "patch": "@@ -2593,7 +2593,7 @@ final.o : final.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    insn-config.h $(INSN_ATTR_H) $(FUNCTION_H) output.h hard-reg-set.h \\\n    except.h debug.h xcoffout.h toplev.h reload.h dwarf2out.h tree-pass.h \\\n    $(BASIC_BLOCK_H) $(TM_P_H) $(TARGET_H) $(EXPR_H) $(CFGLAYOUT_H) dbxout.h \\\n-   $(TIMEVAR_H) $(CGRAPH_H) $(COVERAGE_H) $(REAL_H)\n+   $(TIMEVAR_H) $(CGRAPH_H) $(COVERAGE_H) $(REAL_H) vecprim.h\n recog.o : recog.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(FUNCTION_H) $(BASIC_BLOCK_H) $(REGS_H) $(RECOG_H) $(EXPR_H) \\\n    $(FLAGS_H) insn-config.h $(INSN_ATTR_H) toplev.h output.h reload.h \\"}, {"sha": "bd96444ea485483633d5fe732d41b822120b09ef", "filename": "gcc/final.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/294340bf912a36414f18890b6a917237f178dfc9/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/294340bf912a36414f18890b6a917237f178dfc9/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=294340bf912a36414f18890b6a917237f178dfc9", "patch": "@@ -76,6 +76,7 @@ Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n #include \"timevar.h\"\n #include \"cgraph.h\"\n #include \"coverage.h\"\n+#include \"vecprim.h\"\n \n #ifdef XCOFF_DEBUGGING_INFO\n #include \"xcoffout.h\"\t\t/* Needed for external data\n@@ -320,7 +321,7 @@ dbr_sequence_length (void)\n \n static int *insn_lengths;\n \n-varray_type insn_addresses_;\n+VEC(int,heap) *insn_addresses_;\n \n /* Max uid for which the above arrays are valid.  */\n static int insn_lengths_max_uid;"}, {"sha": "baa3cdadcae567422125945e0828c00b153f7549", "filename": "gcc/insn-addr.h", "status": "modified", "additions": 38, "deletions": 22, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/294340bf912a36414f18890b6a917237f178dfc9/gcc%2Finsn-addr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/294340bf912a36414f18890b6a917237f178dfc9/gcc%2Finsn-addr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finsn-addr.h?ref=294340bf912a36414f18890b6a917237f178dfc9", "patch": "@@ -19,32 +19,48 @@ Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n 02110-1301, USA.  */\n \n #ifndef GCC_INSN_ADDR_H\n-#define GCC_INSN_ADDR_H \n+#define GCC_INSN_ADDR_H\n \n-#include \"varray.h\"\n+#include \"vecprim.h\"\n \n-extern GTY(()) varray_type insn_addresses_;\n+extern VEC(int,heap) *insn_addresses_;\n extern int insn_current_address;\n \n-#define INSN_ADDRESSES_DEFN() varray_type insn_addresses_\n-#define INSN_ADDRESSES(id) VARRAY_INT (insn_addresses_, (id))\n-#define INSN_ADDRESSES_ALLOC(size) \\\n-  VARRAY_INT_INIT (insn_addresses_, (size), \"insn_addresses\")\n-#define INSN_ADDRESSES_FREE() (insn_addresses_ = 0)\n+#define INSN_ADDRESSES(id) (*&(VEC_address (int, insn_addresses_) [id]))\n+#define INSN_ADDRESSES_ALLOC(size)\t\t\t\\\n+  do\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+      insn_addresses_ = VEC_alloc (int, heap, size);\t\\\n+      VEC_safe_grow (int, heap, insn_addresses_, size);\t\\\n+      memset (VEC_address (int, insn_addresses_),\t\\\n+\t      0, sizeof (int) * size);\t\t\t\\\n+    }\t\t\t\t\t\t\t\\\n+  while (0)\n+#define INSN_ADDRESSES_FREE() (VEC_free (int, heap, insn_addresses_))\n #define INSN_ADDRESSES_SET_P() (insn_addresses_ != 0)\n-#define INSN_ADDRESSES_SIZE() VARRAY_SIZE (insn_addresses_)\n-#define INSN_ADDRESSES_NEW(insn, addr) do \\\n-  {\t\t\t\t\t\t\t\t\t\\\n-    unsigned insn_uid__ = INSN_UID ((insn));\t\t\t\t\\\n-    int insn_addr__ = (addr);\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-    if (INSN_ADDRESSES_SET_P ())\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\tif (INSN_ADDRESSES_SIZE () <= insn_uid__)\t\t\t\\\n-\t  VARRAY_GROW (insn_addresses_, insn_uid__ + 1);\t\t\\\n-\tINSN_ADDRESSES (insn_uid__) = insn_addr__;\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n-  }\t\t\t\t\t\t\t\t\t\\\n-while (0)\n+#define INSN_ADDRESSES_SIZE() (VEC_length (int, insn_addresses_))\n+\n+static inline void\n+insn_addresses_new (rtx insn, int insn_addr)\n+{\n+  unsigned insn_uid = INSN_UID ((insn));\n+\n+  if (INSN_ADDRESSES_SET_P ())\n+    {\n+      size_t size = INSN_ADDRESSES_SIZE ();\n+      if (size <= insn_uid)\n+\t{\n+\t  int *p;\n+\t  VEC_safe_grow (int, heap, insn_addresses_, insn_uid + 1);\n+\t  p = VEC_address (int, insn_addresses_);\n+\t  memset (&p[size],\n+\t\t  0, sizeof (int) * (insn_uid + 1 - size));\n+\t}\n+      INSN_ADDRESSES (insn_uid) = insn_addr;\n+    }\n+}\n+\n+#define INSN_ADDRESSES_NEW(insn, addr)\t\t\\\n+  (insn_addresses_new (insn, addr))\n \n #endif /* ! GCC_INSN_ADDR_H */"}]}