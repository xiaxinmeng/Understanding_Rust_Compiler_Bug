{"sha": "63987ca445d31c4489f09881e3ff007294896ea2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM5ODdjYTQ0NWQzMWM0NDg5ZjA5ODgxZTNmZjAwNzI5NDg5NmVhMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-12-21T09:11:58Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-12-21T09:11:58Z"}, "message": "re PR rtl-optimization/82973 (ICE in output_constant_pool_2, at varasm.c:3896 on aarch64)\n\n\tPR rtl-optimization/82973\n\t* emit-rtl.h (valid_for_const_vec_duplicate_p): Rename to ...\n\t(valid_for_const_vector_p): ... this.\n\t* emit-rtl.c (valid_for_const_vec_duplicate_p): Rename to ...\n\t(valid_for_const_vector_p): ... this.  Adjust function comment.\n\t(gen_vec_duplicate): Adjust caller.\n\t* optabs.c (expand_vector_broadcast): Likewise.\n\t* simplify-rtx.c (simplify_const_unary_operation): Don't optimize into\n\tCONST_VECTOR if some element isn't simplified valid_for_const_vector_p\n\tconstant.\n\t(simplify_const_binary_operation): Likewise.  Use CONST_FIXED_P macro\n\tinstead of GET_CODE == CONST_FIXED.\n\t(simplify_subreg): Use CONST_FIXED_P macro instead of\n\tGET_CODE == CONST_FIXED.\n\n\t* gfortran.dg/pr82973.f90: New test.\n\nFrom-SVN: r255939", "tree": {"sha": "665893af419d9b78dd93543f5724412f63319d47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/665893af419d9b78dd93543f5724412f63319d47"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63987ca445d31c4489f09881e3ff007294896ea2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63987ca445d31c4489f09881e3ff007294896ea2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63987ca445d31c4489f09881e3ff007294896ea2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63987ca445d31c4489f09881e3ff007294896ea2/comments", "author": null, "committer": null, "parents": [{"sha": "c0cc00c4f0e806d28ef6ed25671c75626817176e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0cc00c4f0e806d28ef6ed25671c75626817176e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0cc00c4f0e806d28ef6ed25671c75626817176e"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "add58ce0dd14f27ecc8c43ac72ed2c2e3976d465", "filename": "gcc/testsuite/gfortran.dg/pr82973.f90", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63987ca445d31c4489f09881e3ff007294896ea2/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr82973.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63987ca445d31c4489f09881e3ff007294896ea2/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr82973.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr82973.f90?ref=63987ca445d31c4489f09881e3ff007294896ea2", "patch": "@@ -0,0 +1,31 @@\n+! PR rtl-optimization/82973\n+! { dg-do compile }\n+! { dg-options \"-Ofast -frounding-math\" }\n+\n+program pr82973\n+  integer, parameter :: n=16\n+  real, dimension(n) :: ar, br, modulo_result, floor_result\n+  integer, dimension(n) :: ai, bi , imodulo_result, ifloor_result\n+  ai(1:4) = 5\n+  ai(5:8) = -5\n+  ai(9:12) = 1\n+  ai(13:16) = -1\n+  bi(1:4) = (/ 3,-3, 1, -1/)\n+  bi(5:8) = bi(1:4)\n+  bi(9:12) = bi(1:4)\n+  bi(13:16) = bi(1:4)\n+  ar = ai\n+  br = bi\n+  modulo_result = modulo(ar,br)\n+  imodulo_result = modulo(ai,bi)\n+  floor_result = ar-floor(ar/br)*br\n+  ifloor_result = nint(real(ai-floor(real(ai)/real(bi))*bi))\n+  do i=1,n\n+    if (modulo_result(i) /= floor_result(i)) then\n+      call abort()\n+    end if\n+    if (imodulo_result(i) /= ifloor_result(i)) then\n+      call abort ()\n+    end if\n+  end do\n+end program pr82973"}]}