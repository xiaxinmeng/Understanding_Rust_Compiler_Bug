{"sha": "2c01018fc8b33c49336de71df3a9fdb9366c5059", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmMwMTAxOGZjOGIzM2M0OTMzNmRlNzFkZjNhOWZkYjkzNjZjNTA1OQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1998-09-10T00:07:33Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1998-09-10T00:07:33Z"}, "message": "alpha.c (alphaev5_insn_pipe): Abort on default case.\n\n        * alpha.c (alphaev5_insn_pipe): Abort on default case.\n        (alphaev5_next_group): Swallow CLOBBERs and USEs.\n\nFrom-SVN: r22373", "tree": {"sha": "c51dfd87fd5b4f7ea645bb5d41c86a3642644d34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c51dfd87fd5b4f7ea645bb5d41c86a3642644d34"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c01018fc8b33c49336de71df3a9fdb9366c5059", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c01018fc8b33c49336de71df3a9fdb9366c5059", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c01018fc8b33c49336de71df3a9fdb9366c5059", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c01018fc8b33c49336de71df3a9fdb9366c5059/comments", "author": null, "committer": null, "parents": [{"sha": "704e23f0d4a6e168dbd31782edfa0e20fa77a9cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/704e23f0d4a6e168dbd31782edfa0e20fa77a9cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/704e23f0d4a6e168dbd31782edfa0e20fa77a9cc"}], "stats": {"total": 37, "additions": 24, "deletions": 13}, "files": [{"sha": "007a142edd42aa44b007b9b5efa0a18e5a37d754", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c01018fc8b33c49336de71df3a9fdb9366c5059/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c01018fc8b33c49336de71df3a9fdb9366c5059/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2c01018fc8b33c49336de71df3a9fdb9366c5059", "patch": "@@ -1,3 +1,10 @@\n+Thu Sep 10 00:03:34 1998  Richard Henderson  <rth@cygnus.com>\n+\n+\t* alpha.c (alphaev5_insn_pipe): Abort on default case.\n+\t(alphaev5_next_group): Swallow CLOBBERs and USEs.\n+\n+\t* c-tree.h (warn_long_long): Declare it.\n+\n Wed Sep  9 23:31:36 1998  (Stephen L Moshier) <moshier@world.std.com>\n \n \t* emit-rtl.c (gen_lowpart_common): Disable optimization of"}, {"sha": "f0795f3fa54c77e1b252ee55128a671481dddbd4", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 17, "deletions": 13, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c01018fc8b33c49336de71df3a9fdb9366c5059/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c01018fc8b33c49336de71df3a9fdb9366c5059/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=2c01018fc8b33c49336de71df3a9fdb9366c5059", "patch": "@@ -4327,8 +4327,10 @@ alphaev5_insn_pipe (insn)\n \n     case TYPE_FMUL:\n       return EV5_FM;\n+\n+    default:\n+      abort();\n     }\n-  abort();\n }\n \n /* IN_USE is a mask of the slots currently filled within the\n@@ -4347,13 +4349,14 @@ alphaev5_next_group (insn, pin_use, plen)\n \n   len = in_use = 0;\n \n-  if (GET_RTX_CLASS (GET_CODE (insn)) != 'i')\n-    goto next;\n+  if (GET_RTX_CLASS (GET_CODE (insn)) != 'i'\n+      || GET_CODE (PATTERN (insn)) == CLOBBER\n+      || GET_CODE (PATTERN (insn)) == USE)\n+    goto next_and_done;\n \n-  do\n+  while (1)\n     {\n       enum alphaev5_pipe pipe;\n-      rtx prev;\n \n       pipe = alphaev5_insn_pipe (insn);\n       switch (pipe)\n@@ -4370,7 +4373,7 @@ alphaev5_next_group (insn, pin_use, plen)\n \t    len = -1;\n \t  else\n \t    len = get_attr_length (insn);\n-\t  goto next;\n+\t  goto next_and_done;\n \n \t/* ??? Most of the places below, we would like to abort, as \n \t   it would indicate an error either in Haifa, or in the \n@@ -4439,28 +4442,29 @@ alphaev5_next_group (insn, pin_use, plen)\n       /* ??? If this is predicted not-taken, slotting continues, except\n \t that no more IBR, FBR, or JSR insns may be slotted.  */\n       if (GET_CODE (insn) == JUMP_INSN)\n-\tgoto next;\n+\tgoto next_and_done;\n \n+    next:\n       insn = next_nonnote_insn (insn);\n \n-      if (GET_RTX_CLASS (GET_CODE (insn)) != 'i')\n+      if (!insn || GET_RTX_CLASS (GET_CODE (insn)) != 'i')\n \tgoto done;\n \n       /* Let Haifa tell us where it thinks insn group boundaries are.  */\n       if (GET_MODE (insn) == TImode)\n \tgoto done;\n \n+      if (GET_CODE (insn) == CLOBBER || GET_CODE (insn) == USE)\n+\tgoto next;\n     }\n-  while (insn);\n+\n+ next_and_done:\n+  insn = next_nonnote_insn (insn);\n \n  done:\n   *plen = len;\n   *pin_use = in_use;\n   return insn;\n-\n- next:\n-  insn = next_nonnote_insn (insn);\n-  goto done;\n }\n \n static void"}]}