{"sha": "27af94e7b9a4702ea93348f917fd2ad82adb6853", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdhZjk0ZTdiOWE0NzAyZWE5MzM0OGY5MTdmZDJhZDgyYWRiNjg1Mw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2019-08-14T09:52:01Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-08-14T09:52:01Z"}, "message": "[Ada] Remove documentation of gnatelim\n\n2019-08-14  Arnaud Charlet  <charlet@adacore.com>\n\ngcc/ada/\n\n\t* doc/gnat_ugn/gnat_and_program_execution.rst: Remove\n\tdocumentation of gnatelim.\n\nFrom-SVN: r274462", "tree": {"sha": "5d74764249572c3fe0273b1d5ec5f7b1c513c6b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d74764249572c3fe0273b1d5ec5f7b1c513c6b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27af94e7b9a4702ea93348f917fd2ad82adb6853", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27af94e7b9a4702ea93348f917fd2ad82adb6853", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27af94e7b9a4702ea93348f917fd2ad82adb6853", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27af94e7b9a4702ea93348f917fd2ad82adb6853/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3a02b4697e38e506c2856c104261cfe87550548a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a02b4697e38e506c2856c104261cfe87550548a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a02b4697e38e506c2856c104261cfe87550548a"}], "stats": {"total": 274, "additions": 7, "deletions": 267}, "files": [{"sha": "b7bacdcd0aded9840ab35e144198d07f640b6257", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27af94e7b9a4702ea93348f917fd2ad82adb6853/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27af94e7b9a4702ea93348f917fd2ad82adb6853/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=27af94e7b9a4702ea93348f917fd2ad82adb6853", "patch": "@@ -1,3 +1,8 @@\n+2019-08-14  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* doc/gnat_ugn/gnat_and_program_execution.rst: Remove\n+\tdocumentation of gnatelim.\n+\n 2019-08-14  Bob Duff  <duff@adacore.com>\n \n \t* sem_prag.adb (Validate_Compile_Time_Warning_Error): Attach the"}, {"sha": "d2675c7c1511f801a0a59c66dee31910dff9dc3b", "filename": "gcc/ada/doc/gnat_ugn/gnat_and_program_execution.rst", "status": "modified", "additions": 2, "deletions": 267, "changes": 269, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27af94e7b9a4702ea93348f917fd2ad82adb6853/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_and_program_execution.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27af94e7b9a4702ea93348f917fd2ad82adb6853/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_and_program_execution.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_and_program_execution.rst?ref=27af94e7b9a4702ea93348f917fd2ad82adb6853", "patch": "@@ -1406,18 +1406,8 @@ This section presents several topics related to program performance.\n It first describes some of the tradeoffs that need to be considered\n and some of the techniques for making your program run faster.\n \n-.. only:: PRO or GPL\n-\n-   It then documents the unused subprogram/data elimination feature\n-   and the ``gnatelim`` tool,\n-   which can reduce the size of program executables.\n-\n-\n-.. only:: FSF\n-\n-   It then documents the unused subprogram/data elimination feature,\n-   which can reduce the size of program executables.\n-\n+It then documents the unused subprogram/data elimination feature,\n+which can reduce the size of program executables.\n \n .. _Performance_Considerations:\n \n@@ -2596,261 +2586,6 @@ It can be observed that the procedure ``Unused`` and the object\n ``Unused_Data`` are removed by the linker when using the\n appropriate options.\n \n-.. only:: PRO or GPL\n-\n-  .. _Reducing_Size_of_Ada_Executables_with_gnatelim:\n-\n-  Reducing Size of Ada Executables with ``gnatelim``\n-  --------------------------------------------------\n-\n-  .. index:: gnatelim\n-\n-  This section describes ``gnatelim``, a tool which detects unused\n-  subprograms and helps the compiler to create a smaller executable for your\n-  program.\n-\n-  ``gnatelim`` is a project-aware tool.\n-  (See :ref:`Using_Project_Files_with_GNAT_Tools` for a description of\n-  the project-related switches but note that ``gnatelim`` does not support\n-  the :samp:`-U {main_unit}`, :samp:`--subdirs={dir}`, or\n-  :samp:`--no_objects_dir` switches.)\n-  The project file package that can specify\n-  ``gnatelim`` switches is named ``Eliminate``.\n-\n-  .. _About_gnatelim:\n-\n-  About ``gnatelim``\n-  ^^^^^^^^^^^^^^^^^^\n-\n-  When a program shares a set of Ada\n-  packages with other programs, it may happen that this program uses\n-  only a fraction of the subprograms defined in these packages. The code\n-  created for these unused subprograms increases the size of the executable.\n-\n-  ``gnatelim`` tracks unused subprograms in an Ada program and\n-  outputs a list of GNAT-specific pragmas ``Eliminate`` marking all the\n-  subprograms that are declared but never called. By placing the list of\n-  ``Eliminate`` pragmas in the GNAT configuration file :file:`gnat.adc` and\n-  recompiling your program, you may decrease the size of its executable,\n-  because the compiler will not generate the code for 'eliminated' subprograms.\n-  See ``Pragma_Eliminate`` in the :title:`GNAT_Reference_Manual` for more\n-  information about this pragma.\n-\n-  ``gnatelim`` needs as its input data the name of the main subprogram.\n-\n-  If a set of source files is specified as ``gnatelim`` arguments, it\n-  treats these files as a complete set of sources making up a program to\n-  analyse, and analyses only these sources.\n-\n-  If ``gnatelim`` is called with a project file and :samp:`-U` option is\n-  used, then in process all the files from the argument project but\n-  not just the closure of the main subprogram.\n-\n-  In all the other cases (that are typical cases of ``gnatelim`` usage, when\n-  the only ``gnatelim`` parameter is the name of the source file containing\n-  the main subprogram) gnatelim needs the full closure of the main subprogram.\n-  When called with a project file, gnatelim computes this closure itself.\n-  Otherwise it assumes that it can reuse the results of the previous\n-  build of the main subprogram.\n-\n-  If the set of sources to be processed by ``gnatelim`` contains sources with\n-  preprocessing directives\n-  then the needed options should be provided to run preprocessor as a part of\n-  the ``gnatelim`` call, and the generated set of pragmas ``Eliminate``\n-  will correspond to preprocessed sources.\n-\n-\n-  .. _Running_gnatelim:\n-\n-  Running ``gnatelim``\n-  ^^^^^^^^^^^^^^^^^^^^\n-\n-  ``gnatelim`` has the following command-line interface:\n-\n-\n-    ::\n-\n-        $ gnatelim [switches] -main=`main_unit_name {filename} [-cargs gcc_switches]\n-\n-  ``main_unit_name`` should be a name of a source file that contains the main\n-  subprogram of a program (partition).\n-\n-  Each ``filename`` is the name (including the extension) of a source\n-  file to process. 'Wildcards' are allowed, and\n-  the file name may contain path information.\n-\n-  ``gcc_switches`` is a list of switches for\n-  ``gcc``. They will be passed on to all compiler invocations made by\n-  ``gnatelim`` to generate the ASIS trees. Here you can provide\n-  :switch:`-I` switches to form the source search path,\n-  use the :switch:`-gnatec` switch to set the configuration file,\n-  use the :switch:`-gnat05` switch if sources should be compiled in\n-  Ada 2005 mode etc.\n-\n-  ``gnatelim`` has the following switches:\n-\n-\n-  .. index:: --version (gnatelim)\n-\n-  :samp:`--version`\n-    Display Copyright and version, then exit disregarding all other options.\n-\n-\n-  .. index:: --help (gnatelim)\n-\n-  :samp:`--help`\n-    Display usage, then exit disregarding all other options.\n-\n-\n-  .. index:: -P (gnatelim)\n-\n-  :samp:`-P {file}`\n-    Indicates the name of the project file that describes the set of sources\n-    to be processed.\n-\n-\n-  .. index:: -X (gnatelim)\n-\n-  :samp:`-X{name}={value}`\n-    Indicates that external variable ``name`` in the argument project\n-    has the value ``value``. Has no effect if no project is specified as\n-    tool argument.\n-\n-\n-  .. index:: --RTS (gnatelim)\n-\n-  :samp:`--RTS={rts-path}`\n-    Specifies the default location of the runtime library. Same meaning as the\n-    equivalent ``gnatmake`` flag (:ref:`Switches_for_gnatmake`).\n-\n-\n-  .. index:: -U (gnatelim)\n-\n-  :samp:`-U`\n-    Process all the sources from the argument project. If no project file\n-    is specified, this option has no effect. If this option is used with the\n-    project file, ``gnatelim`` does not require the preliminary build of the\n-    argument main subprogram.\n-\n-\n-  .. index:: -files (gnatelim)\n-\n-  :samp:`-files={filename}`\n-    Take the argument source files from the specified file. This file should be an\n-    ordinary text file containing file names separated by spaces or\n-    line breaks. You can use this switch more than once in the same call to\n-    ``gnatelim``. You also can combine this switch with\n-    an explicit list of files.\n-\n-\n-  .. index:: -log (gnatelim)\n-\n-  :samp:`-log`\n-    Duplicate all the output sent to :file:`stderr` into a log file. The log file\n-    is named :file:`gnatelim.log` and is located in the current directory.\n-\n-    .. index:: --no-elim-dispatch (gnatelim)\n-\n-  :samp:`--no-elim-dispatch`\n-    Do not generate pragmas for dispatching operations.\n-\n-\n-  .. index:: --ignore (gnatelim)\n-\n-  :samp:`--ignore={filename}`\n-    Do not generate pragmas for subprograms declared in the sources\n-    listed in a specified file\n-\n-  .. index:: -o (gnatelim)\n-\n-\n-  :samp:`-o={report_file}`\n-    Put ``gnatelim`` output into a specified file. If this file already exists,\n-    it is overridden. If this switch is not used, ``gnatelim`` outputs its results\n-    into :file:`stderr`\n-\n-\n-  .. index:: -j (gnatelim)\n-\n-  :samp:`-j{n}`\n-    Use ``n`` processes to carry out the tree creations (internal representations\n-    of the argument sources). On a multiprocessor machine this speeds up processing\n-    of big sets of argument sources. If ``n`` is 0, then the maximum number of\n-    parallel tree creations is the number of core processors on the platform.\n-    This possibility is disabled if ``gnatelim`` has to compute the closure\n-    of the main unit.\n-\n-\n-  .. index:: -q (gnatelim)\n-\n-  :samp:`-q`\n-    Quiet mode: by default ``gnatelim`` outputs to the standard error\n-    stream the number of program units left to be processed. This option turns\n-    this trace off.\n-\n-  .. index:: -t (gnatelim)\n-\n-\n-  :samp:`-t`\n-    Print out execution time.\n-\n-\n-  .. index:: -v (gnatelim)\n-\n-  :samp:`-v`\n-    Verbose mode: ``gnatelim`` version information is printed as Ada\n-    comments to the standard output stream. Also, in addition to the number of\n-    program units left ``gnatelim`` will output the name of the current unit\n-    being processed.\n-\n-\n-  .. index:: -wq (gnatelim)\n-\n-  :samp:`-wq`\n-    Quiet warning mode - some warnings are suppressed. In particular warnings that\n-    indicate that the analysed set of sources is incomplete to make up a\n-    partition and that some subprogram bodies are missing are not generated.\n-\n-\n-\n-  .. _Processing_Precompiled_Libraries:\n-\n-  Processing Precompiled Libraries\n-  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-  If some program uses a precompiled Ada library, it can be processed by\n-  ``gnatelim`` in a usual way. ``gnatelim`` will newer generate an\n-  Eliminate pragma for a subprogram if the body of this subprogram has not\n-  been analysed, this is a typical case for subprograms from precompiled\n-  libraries. Switch :switch:`-wq` may be used to suppress\n-  warnings about missing source files and non-analyzed subprogram bodies\n-  that can be generated when processing precompiled Ada libraries.\n-\n-\n-  .. _Correcting_the_List_of_Eliminate_Pragmas:\n-\n-  Correcting the List of Eliminate Pragmas\n-  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-  In some rare cases ``gnatelim`` may try to eliminate\n-  subprograms that are actually called in the program. In this case, the\n-  compiler will generate an error message of the form:\n-\n-    ::\n-\n-        main.adb:4:08: cannot reference subprogram \"P\" eliminated at elim.out:5\n-\n-  You will need to manually remove the wrong ``Eliminate`` pragmas from\n-  the configuration file indicated in the error message. You should recompile\n-  your program from scratch after that, because you need a consistent\n-  configuration file(s) during the entire compilation.\n-\n-  If ``gnatelim`` is called with a project file and with ``-U`` option\n-  the generated set of pragmas may contain pragmas for subprograms that\n-  does not belong to the closure of the argument main subprogram. These\n-  pragmas has no effect when the set of pragmas is used to reduce the size\n-  of executable.\n-\n \n .. index:: Overflow checks\n .. index:: Checks (overflow)"}]}