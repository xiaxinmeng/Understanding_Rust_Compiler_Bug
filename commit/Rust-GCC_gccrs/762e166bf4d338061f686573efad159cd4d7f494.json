{"sha": "762e166bf4d338061f686573efad159cd4d7f494", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzYyZTE2NmJmNGQzMzgwNjFmNjg2NTczZWZhZDE1OWNkNGQ3ZjQ5NA==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2001-05-06T17:10:53Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2001-05-06T17:10:53Z"}, "message": "invoke.texi (Option Summary): Add -momit-leaf-frame-pointer (i386 Options): Document -momit-leaf-frame-pointer.\n\n\t* invoke.texi (Option Summary): Add -momit-leaf-frame-pointer\n\t(i386 Options): Document -momit-leaf-frame-pointer.\n\nFrom-SVN: r41881", "tree": {"sha": "474c75d0b4c7f8d286bd469ed3fb54adb9c93cff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/474c75d0b4c7f8d286bd469ed3fb54adb9c93cff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/762e166bf4d338061f686573efad159cd4d7f494", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/762e166bf4d338061f686573efad159cd4d7f494", "html_url": "https://github.com/Rust-GCC/gccrs/commit/762e166bf4d338061f686573efad159cd4d7f494", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/762e166bf4d338061f686573efad159cd4d7f494/comments", "author": null, "committer": null, "parents": [{"sha": "714a0864cc92b27ba75cff579b33a44702556ad3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/714a0864cc92b27ba75cff579b33a44702556ad3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/714a0864cc92b27ba75cff579b33a44702556ad3"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "98450e415e0054590c36bfacb84dac83f0327145", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/762e166bf4d338061f686573efad159cd4d7f494/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/762e166bf4d338061f686573efad159cd4d7f494/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=762e166bf4d338061f686573efad159cd4d7f494", "patch": "@@ -1,3 +1,8 @@\n+2001-05-06  Andreas Jaeger  <aj@suse.de>\n+\n+\t* invoke.texi (Option Summary): Add -momit-leaf-frame-pointer\n+\t(i386 Options): Document -momit-leaf-frame-pointer.\n+\n 2001-05-06  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* c-typeck.c (internal_build_compound_expr): Check for\n@@ -74,7 +79,7 @@\n \t(L_regs_d3_4): New for _.d3 and _.d4.\n \t(L_regs_d5_6): Likewise.\n \t(L_regs_d1_2): Likewise.\n-\t* config/m68hc11/t-m68hc11-gas (T_CPPFLAGS): Compile new parts.\t\n+\t* config/m68hc11/t-m68hc11-gas (T_CPPFLAGS): Compile new parts.\n \n 2001-05-04  Stephane Carrez  <Stephane.Carrez@worldnet.fr>\n \n@@ -87,7 +92,7 @@\n \t* config/m68hc11/larith.asm (divmodhi4): Empty for 68HC12.\n \t(__mulsi3): Rewrite for 68HC12.\n \t* config/m68hc11/m68hc11.md (divmodhi4): Use idivs for 68HC12.\n-\tMark 'x' constraint with earlyclobber to prevent a \n+\tMark 'x' constraint with earlyclobber to prevent a\n \tRELOAD_FOR_OTHER_ADDRESS to go in it.\n \t(mulhi3_m68hc12): New pattern.\n \t(mulhi3_m68hc11): Rename of mulhi3.\n@@ -144,7 +149,7 @@\n \t`bool' parameter to `int'.\n \n \t* hash.c (hash_lookup): Likewise.\n-\t\n+\n \t* hash.h (hash_lookup): Likewise.\n \n \t* tlink.c (symbol_hash_lookup, demangled_hash_lookup): Likewise."}, {"sha": "c496458482caf18994daffc9e81af9db62310087", "filename": "gcc/invoke.texi", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/762e166bf4d338061f686573efad159cd4d7f494/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/762e166bf4d338061f686573efad159cd4d7f494/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=762e166bf4d338061f686573efad159cd4d7f494", "patch": "@@ -473,7 +473,7 @@ in the following sections.\n -mpreferred-stack-boundary=@var{num} @gol\n -mthreads -mno-align-stringops -minline-all-stringops @gol\n -mpush-args -maccumulate-outgoing-args -m128bit-long-double @gol\n--m96bit-long-double -mregparm=@var{num}}\n+-m96bit-long-double -mregparm=@var{num} -momit-leaf-frame-pointer}\n \n @emph{HPPA Options}\n @gccoptlist{\n@@ -6924,6 +6924,14 @@ By default GCC inlines string operations only when destination is known to be\n aligned at least to 4 byte boundary. This enables more inlining, increase code\n size, but may improve performance of code that depends on fast memcpy, strlen\n and memset for short lengths.\n+\n+@item -momit-leaf-frame-pointer\n+@kindex -momit-leaf-frame-pointer\n+Don't keep the frame pointer in a register for leaf functions.  This\n+avoids the instructions to save, set up and restore frame pointers and\n+makes an extra register available in leaf functions.  The option\n+@samp{-fomit-frame-pointer} removes the frame pointer for all functions\n+which might make debugging harder.\n @end table\n \n @node HPPA Options"}]}