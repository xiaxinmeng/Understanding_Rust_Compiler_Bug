{"sha": "865335eb760ae8c008bfe63c778737f7d9d04f9c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODY1MzM1ZWI3NjBhZThjMDA4YmZlNjNjNzc4NzM3ZjdkOWQwNGY5Yw==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@gnat.com", "date": "2001-10-31T00:26:02Z"}, "committer": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2001-10-31T00:26:02Z"}, "message": "gnatdll.adb: Minor reformatting throughout.\n\n\t* gnatdll.adb: Minor reformatting throughout. Many ??? added for\n\tundocumented declarations.\n\nFrom-SVN: r46663", "tree": {"sha": "a0f7c9a5bb3abf03b6ece32ae4442b15e5dd9f89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0f7c9a5bb3abf03b6ece32ae4442b15e5dd9f89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/865335eb760ae8c008bfe63c778737f7d9d04f9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/865335eb760ae8c008bfe63c778737f7d9d04f9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/865335eb760ae8c008bfe63c778737f7d9d04f9c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/865335eb760ae8c008bfe63c778737f7d9d04f9c/comments", "author": null, "committer": null, "parents": [{"sha": "5e257178526c3ffa66107c136dfc8b74b176cca7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e257178526c3ffa66107c136dfc8b74b176cca7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e257178526c3ffa66107c136dfc8b74b176cca7"}], "stats": {"total": 112, "additions": 60, "deletions": 52}, "files": [{"sha": "96159b7d035709ff8e4ba11d7d9531137024f58a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/865335eb760ae8c008bfe63c778737f7d9d04f9c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/865335eb760ae8c008bfe63c778737f7d9d04f9c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=865335eb760ae8c008bfe63c778737f7d9d04f9c", "patch": "@@ -1,3 +1,8 @@\n+2001-10-30  Robert Dewar <dewar@gnat.com>\n+\n+\t* gnatdll.adb: Minor reformatting throughout. Many ??? added for \n+\tundocumented declarations.\n+\n 2001-10-30  Pascal Obry <obry@gnat.com>\n \n \t* gnatdll.adb (Parse_Command_Line): handle -g option to be passed "}, {"sha": "fbeb470c2755d30e608c3876efef1be1e9c6de11", "filename": "gcc/ada/gnatdll.adb", "status": "modified", "additions": 55, "deletions": 52, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/865335eb760ae8c008bfe63c778737f7d9d04f9c/gcc%2Fada%2Fgnatdll.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/865335eb760ae8c008bfe63c778737f7d9d04f9c/gcc%2Fada%2Fgnatdll.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatdll.adb?ref=865335eb760ae8c008bfe63c778737f7d9d04f9c", "patch": "@@ -26,8 +26,8 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  GNATDLL is a Windows specific tool to build DLL.\n---  Both relocatable and non-relocatable DLL are supported\n+--  GNATDLL is a Windows specific tool for building a DLL.\n+--  Both relocatable and non-relocatable DLL's are supported\n \n with Ada.Text_IO;\n with Ada.Strings.Unbounded;\n@@ -50,57 +50,58 @@ procedure Gnatdll is\n    use type OS_Lib.Argument_List;\n \n    procedure Syntax;\n-   --  print out usage.\n+   --  Print out usage\n \n    procedure Check (Filename : String);\n-   --  check that filename exist.\n+   --  Check that the file whose name is Filename exists\n \n    procedure Parse_Command_Line;\n-   --  parse the command line arguments of gnatdll.\n+   --  Parse the command line arguments passed to gnatdll\n \n    procedure Check_Context;\n-   --  check the context before runing any commands to build the library.\n+   --  Check the context before runing any commands to build the library\n \n    Syntax_Error  : exception;\n    Context_Error : exception;\n+   --  What are these for ???\n \n-   Help          : Boolean := False;\n+   Help : Boolean := False;\n+   --  What is this for ???\n \n    Version : constant String := Gnatvsn.Gnat_Version_String;\n-\n-   --  default address for non relocatable DLL (Win32)\n+   --  Why should it be necessary to make a copy of this\n \n    Default_DLL_Address : constant String := \"0x11000000\";\n+   --  Default address for non relocatable DLL (Win32)\n \n    Lib_Filename        : Unbounded_String := Null_Unbounded_String;\n    Def_Filename        : Unbounded_String := Null_Unbounded_String;\n    List_Filename       : Unbounded_String := Null_Unbounded_String;\n    DLL_Address         : Unbounded_String :=\n-     To_Unbounded_String (Default_DLL_Address);\n-\n-   --  list of objects to put inside the library\n+                           To_Unbounded_String (Default_DLL_Address);\n+   --  What are the above ???\n \n    Objects_Files : Argument_List_Access := Null_Argument_List_Access;\n+   --  List of objects to put inside the library\n \n-   --  for each Ada files specified we keep record of the corresponding\n-   --  Ali. This list of ali is used to build the binder program.\n-\n-   Ali_Files     : Argument_List_Access := Null_Argument_List_Access;\n-\n-   --  a list of options set in the command line.\n-\n-   Options       : Argument_List_Access := Null_Argument_List_Access;\n+   Ali_Files : Argument_List_Access := Null_Argument_List_Access;\n+   --  For each Ada file specified, we keep arecord of the corresponding\n+   --  ALI file. This list of SLI files is used to build the binder program.\n \n-   --  gnat linker and binder args options\n+   Options : Argument_List_Access := Null_Argument_List_Access;\n+   --  A list of options set in the command line.\n \n    Largs_Options : Argument_List_Access := Null_Argument_List_Access;\n    Bargs_Options : Argument_List_Access := Null_Argument_List_Access;\n+   --  GNAT linker and binder args options\n \n    type Build_Mode_State is (Import_Lib, Dynamic_Lib, Nil);\n+   --  Comments needed ???\n \n    Build_Mode             : Build_Mode_State := Nil;\n    Must_Build_Relocatable : Boolean := True;\n    Build_Import           : Boolean := True;\n+   --  Comments needed\n \n    ------------\n    -- Syntax --\n@@ -168,35 +169,32 @@ procedure Gnatdll is\n       --  for each ali file in Afiles set put a corresponding object file in\n       --  Ofiles set.\n \n-      --  these are arbitrary limits, a better way will be to use linked list.\n-\n       Max_Files   : constant := 5_000;\n       Max_Options : constant :=   100;\n-\n-      --  objects files to put in the library\n+      --  These are arbitrary limits, a better way will be to use linked list.\n+      --  No, a better choice would be to use tables ???\n+      --  Limits on what???\n \n       Ofiles : OS_Lib.Argument_List (1 .. Max_Files);\n       O      : Positive := Ofiles'First;\n-\n-      --  ali files.\n+      --  List of object files to put in the library. O is the next entry\n+      --  to be used.\n \n       Afiles : OS_Lib.Argument_List (1 .. Max_Files);\n       A      : Positive := Afiles'First;\n-\n-      --  gcc options.\n+      --  List of ALI files. A is the next entry to be used.\n \n       Gopts  : OS_Lib.Argument_List (1 .. Max_Options);\n       G      : Positive := Gopts'First;\n-\n-      --  largs options\n+      --  List of gcc options. G is the next entry to be used.\n \n       Lopts  : OS_Lib.Argument_List (1 .. Max_Options);\n       L      : Positive := Lopts'First;\n-\n-      --  bargs options\n+      --  A list of -largs options (L is next entry to be used)\n \n       Bopts  : OS_Lib.Argument_List (1 .. Max_Options);\n       B      : Positive := Bopts'First;\n+      --  A list of -bargs options (B is next entry to be used)\n \n       --------------\n       -- Add_File --\n@@ -205,12 +203,13 @@ procedure Gnatdll is\n       procedure Add_File (Filename : in String) is\n       begin\n          --  others files are to be put inside the dynamic library\n+         --  ??? this makes no sense, should it be \"Other files ...\"\n \n          if Files.Is_Ali (Filename) then\n \n             Check (Filename);\n \n-            --  record it to generate the binder program when\n+            --  Record it to generate the binder program when\n             --  building dynamic library\n \n             Afiles (A) := new String'(Filename);\n@@ -220,13 +219,13 @@ procedure Gnatdll is\n \n             Check (Filename);\n \n-            --  just record this object file\n+            --  Just record this object file\n \n             Ofiles (O) := new String'(Filename);\n             O := O + 1;\n \n          else\n-            --  unknown file type\n+            --  Unknown file type\n \n             Exceptions.Raise_Exception\n               (Syntax_Error'Identity,\n@@ -242,6 +241,7 @@ procedure Gnatdll is\n          File   : Text_IO.File_Type;\n          Buffer : String (1 .. 500);\n          Last   : Natural;\n+\n       begin\n          Text_IO.Open (File, Text_IO.In_File, List_Filename);\n \n@@ -265,8 +265,9 @@ procedure Gnatdll is\n          end loop;\n       end Ali_To_Object_List;\n \n-   begin\n+   --  Start of processing for Parse_Command_Line\n \n+   begin\n       Initialize_Option_Scan ('-', False, \"bargs largs\");\n \n       --  scan gnatdll switches\n@@ -285,7 +286,8 @@ procedure Gnatdll is\n                G := G + 1;\n \n             when 'v' =>\n-               --  verbose mode on.\n+\n+               --  Turn verbose mode on\n \n                MDLL.Verbose := True;\n                if MDLL.Quiet then\n@@ -295,7 +297,8 @@ procedure Gnatdll is\n                end if;\n \n             when 'q' =>\n-               --  quiet mode on.\n+\n+               --  Turn quiet mode on\n \n                MDLL.Quiet := True;\n                if MDLL.Verbose then\n@@ -312,7 +315,7 @@ procedure Gnatdll is\n \n                if Parameter = \"\" then\n \n-                  --  default address for a relocatable dynamic library.\n+                  --  Default address for a relocatable dynamic library.\n                   --  address for a non relocatable dynamic library.\n \n                   DLL_Address := To_Unbounded_String (Default_DLL_Address);\n@@ -329,7 +332,7 @@ procedure Gnatdll is\n \n             when 'd' =>\n \n-               --  build a non relocatable DLL.\n+               --  Build a non relocatable DLL\n \n                Lib_Filename := To_Unbounded_String (Parameter);\n \n@@ -355,10 +358,9 @@ procedure Gnatdll is\n                raise Invalid_Switch;\n \n          end case;\n-\n       end loop;\n \n-      --  get parameters\n+      --  Get parameters\n \n       loop\n          declare\n@@ -369,7 +371,7 @@ procedure Gnatdll is\n          end;\n       end loop;\n \n-      --  get largs parameters\n+      --  Get largs parameters\n \n       Goto_Section (\"largs\");\n \n@@ -386,7 +388,7 @@ procedure Gnatdll is\n          end case;\n       end loop;\n \n-      --  get bargs parameters\n+      --  Get bargs parameters\n \n       Goto_Section (\"bargs\");\n \n@@ -403,22 +405,22 @@ procedure Gnatdll is\n          end case;\n       end loop;\n \n-      --  if list filename has been specified parse it\n+      --  if list filename has been specified, parse it\n \n       if List_Filename /= Null_Unbounded_String then\n          Add_Files_From_List (To_String (List_Filename));\n       end if;\n \n-      --  check if the set of parameters are compatible.\n+      --  Check if the set of parameters are compatible.\n \n       if Build_Mode = Nil and then not Help and then not Verbose then\n          Exceptions.Raise_Exception\n            (Syntax_Error'Identity,\n             \"nothing to do.\");\n       end if;\n \n-      --  check if we want to build an import library (option -e and no file\n-      --  specified)\n+      --  Check if we want to build an import library (option -e and\n+      --  no file specified)\n \n       if Build_Mode = Dynamic_Lib\n         and then A = Afiles'First\n@@ -470,16 +472,17 @@ procedure Gnatdll is\n \n       Check (To_String (Def_Filename));\n \n-      --  check that each object file specified exist\n-      --  raises Context_Error if it does not.\n+      --  Check that each object file specified exists and raise exception\n+      --  Context_Error if it does not.\n \n       for F in Objects_Files'Range loop\n          Check (Objects_Files (F).all);\n       end loop;\n    end Check_Context;\n \n-begin\n+--  Start of processing for Gnatdll\n \n+begin\n    if Ada.Command_Line.Argument_Count = 0 then\n       Help := True;\n    else"}]}