{"sha": "b9497ab5ed4bbc634652f6d699df73543c5b527f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjk0OTdhYjVlZDRiYmM2MzQ2NTJmNmQ2OTlkZjczNTQzYzViNTI3Zg==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2010-01-05T14:02:37Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2010-01-05T14:02:37Z"}, "message": "stdint.m4 (GCC_HEADER_STDINT): Don't typedef uint8_t etc.\n\n\tconfig:\n\t* stdint.m4 (GCC_HEADER_STDINT): Don't typedef uint8_t etc. if\n\tcorresponding macros already exist.\n\n\tlibdecnumber:\n\t* configure: Regenerate.\n\n\tlibgfortran:\n\t* configure: Regenerate.\n\n\tlibgomp:\n\t* configure: Regenerate.\n\n\tlibstdc++-v3:\n\t* configure: Regenerate.\n\nFrom-SVN: r155648", "tree": {"sha": "eaefc673a50905bb9e7786e5d87fbffeb8e9d17c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eaefc673a50905bb9e7786e5d87fbffeb8e9d17c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9497ab5ed4bbc634652f6d699df73543c5b527f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9497ab5ed4bbc634652f6d699df73543c5b527f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9497ab5ed4bbc634652f6d699df73543c5b527f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9497ab5ed4bbc634652f6d699df73543c5b527f/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "82aee9233b2e880723cf6aba5db1fe42000a9ef5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82aee9233b2e880723cf6aba5db1fe42000a9ef5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82aee9233b2e880723cf6aba5db1fe42000a9ef5"}], "stats": {"total": 241, "additions": 241, "deletions": 0}, "files": [{"sha": "b6f0c2dc324c47b2bc161406d27d6b961008937d", "filename": "config/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9497ab5ed4bbc634652f6d699df73543c5b527f/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9497ab5ed4bbc634652f6d699df73543c5b527f/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=b9497ab5ed4bbc634652f6d699df73543c5b527f", "patch": "@@ -1,3 +1,8 @@\n+2010-01-05  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* stdint.m4 (GCC_HEADER_STDINT): Don't typedef uint8_t etc. if\n+\tcorresponding macros already exist.\n+\n 2010-01-02  Richard Guenther  <rguenther@suse.de>\n \n \tPR lto/41529"}, {"sha": "d63081d07e208c83fcfc6a470ffc4e3ebe99cdcc", "filename": "config/stdint.m4", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9497ab5ed4bbc634652f6d699df73543c5b527f/config%2Fstdint.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9497ab5ed4bbc634652f6d699df73543c5b527f/config%2Fstdint.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fstdint.m4?ref=b9497ab5ed4bbc634652f6d699df73543c5b527f", "patch": "@@ -234,49 +234,61 @@ if test \"$acx_cv_header_stdint\" = stddef.h; then\n     #define _UINT8_T\n     #ifndef __uint8_t_defined\n     #define __uint8_t_defined\n+    #ifndef uint8_t\n     typedef unsigned $acx_cv_type_int8_t uint8_t;\n     #endif\n     #endif\n+    #endif\n \n     #ifndef _UINT16_T\n     #define _UINT16_T\n     #ifndef __uint16_t_defined\n     #define __uint16_t_defined\n+    #ifndef uint16_t\n     typedef unsigned $acx_cv_type_int16_t uint16_t;\n     #endif\n     #endif\n+    #endif\n \n     #ifndef _UINT32_T\n     #define _UINT32_T\n     #ifndef __uint32_t_defined\n     #define __uint32_t_defined\n+    #ifndef uint32_t\n     typedef unsigned $acx_cv_type_int32_t uint32_t;\n     #endif\n     #endif\n+    #endif\n \n     #ifndef _INT8_T\n     #define _INT8_T\n     #ifndef __int8_t_defined\n     #define __int8_t_defined\n+    #ifndef int8_t\n     typedef $acx_cv_type_int8_t int8_t;\n     #endif\n     #endif\n+    #endif\n \n     #ifndef _INT16_T\n     #define _INT16_T\n     #ifndef __int16_t_defined\n     #define __int16_t_defined\n+    #ifndef int16_t\n     typedef $acx_cv_type_int16_t int16_t;\n     #endif\n     #endif\n+    #endif\n \n     #ifndef _INT32_T\n     #define _INT32_T\n     #ifndef __int32_t_defined\n     #define __int32_t_defined\n+    #ifndef int32_t\n     typedef $acx_cv_type_int32_t int32_t;\n     #endif\n     #endif\n+    #endif\n EOF\n elif test \"$ac_cv_type_u_int32_t\" = yes; then\n   sed 's/^ *//' >> tmp-stdint.h <<EOF\n@@ -296,25 +308,31 @@ elif test \"$ac_cv_type_u_int32_t\" = yes; then\n     #define _UINT8_T\n     #ifndef __uint8_t_defined\n     #define __uint8_t_defined\n+    #ifndef uint8_t\n     typedef u_int8_t uint8_t;\n     #endif\n     #endif\n+    #endif\n \n     #ifndef _UINT16_T\n     #define _UINT16_T\n     #ifndef __uint16_t_defined\n     #define __uint16_t_defined\n+    #ifndef uint16_t\n     typedef u_int16_t uint16_t;\n     #endif\n     #endif\n+    #endif\n \n     #ifndef _UINT32_T\n     #define _UINT32_T\n     #ifndef __uint32_t_defined\n     #define __uint32_t_defined\n+    #ifndef uint32_t\n     typedef u_int32_t uint32_t;\n     #endif\n     #endif\n+    #endif\n EOF\n else\n   sed 's/^ *//' >> tmp-stdint.h <<EOF\n@@ -364,25 +382,31 @@ elif test \"$ac_cv_type_u_int64_t\" = yes; then\n     #define _UINT64_T\n     #ifndef __uint64_t_defined\n     #define __uint64_t_defined\n+    #ifndef uint64_t\n     typedef u_int64_t uint64_t;\n     #endif\n     #endif\n+    #endif\n EOF\n elif test -n \"$acx_cv_type_int64_t\"; then\n   sed 's/^ *//' >> tmp-stdint.h <<EOF\n \n     /* architecture has a 64-bit type, $acx_cv_type_int64_t */\n     #ifndef _INT64_T\n     #define _INT64_T\n+    #ifndef int64_t\n     typedef $acx_cv_type_int64_t int64_t;\n     #endif\n+    #endif\n     #ifndef _UINT64_T\n     #define _UINT64_T\n     #ifndef __uint64_t_defined\n     #define __uint64_t_defined\n+    #ifndef uint64_t\n     typedef unsigned $acx_cv_type_int64_t uint64_t;\n     #endif\n     #endif\n+    #endif\n EOF\n else\n   sed 's/^ *//' >> tmp-stdint.h <<EOF\n@@ -392,13 +416,17 @@ else\n     #ifndef _INT64_T\n     #define _INT64_T\n     #ifndef __int64_t_defined\n+    #ifndef int64_t\n     typedef long long int64_t;\n     #endif\n     #endif\n+    #endif\n     #ifndef _UINT64_T\n     #define _UINT64_T\n+    #ifndef uint64_t\n     typedef unsigned long long uint64_t;\n     #endif\n+    #endif\n \n     #elif defined __GNUC__ && defined (__STDC__) && __STDC__-0\n     /* NextStep 2.0 cc is really gcc 1.93 but it defines __GNUC__ = 2 and\n@@ -410,24 +438,32 @@ else\n \n     # ifndef _INT64_T\n     # define _INT64_T\n+    # ifndef int64_t\n     __extension__ typedef long long int64_t;\n     # endif\n+    # endif\n     # ifndef _UINT64_T\n     # define _UINT64_T\n+    # ifndef uint64_t\n     __extension__ typedef unsigned long long uint64_t;\n     # endif\n+    # endif\n \n     #elif !defined __STRICT_ANSI__\n     # if defined _MSC_VER || defined __WATCOMC__ || defined __BORLANDC__\n \n     #  ifndef _INT64_T\n     #  define _INT64_T\n+    #  ifndef int64_t\n     typedef __int64 int64_t;\n     #  endif\n+    #  endif\n     #  ifndef _UINT64_T\n     #  define _UINT64_T\n+    #  ifndef uint64_t\n     typedef unsigned __int64 uint64_t;\n     #  endif\n+    #  endif\n     # endif /* compiler */\n \n     #endif /* ANSI version */\n@@ -440,11 +476,15 @@ if test \"$ac_cv_type_uintptr_t\" != yes; then\n \n     /* Define intptr_t based on sizeof(void*) = $ac_cv_sizeof_void_p */\n     #ifndef __uintptr_t_defined\n+    #ifndef uintptr_t\n     typedef u$acx_cv_type_intptr_t uintptr_t;\n     #endif\n+    #endif\n     #ifndef __intptr_t_defined\n+    #ifndef intptr_t\n     typedef $acx_cv_type_intptr_t  intptr_t;\n     #endif\n+    #endif\n EOF\n fi\n \n@@ -496,16 +536,20 @@ if test \"$ac_cv_type_uintmax_t\" != yes; then\n   sed 's/^ *//' >> tmp-stdint.h <<EOF\n \n     /* Define intmax based on what we found */\n+    #ifndef intmax_t\n     #ifdef _INT64_T\n     typedef int64_t       intmax_t;\n     #else\n     typedef long          intmax_t;\n     #endif\n+    #endif\n+    #ifndef uintmax_t\n     #ifdef _UINT64_T\n     typedef uint64_t      uintmax_t;\n     #else\n     typedef unsigned long uintmax_t;\n     #endif\n+    #endif\n EOF\n fi\n "}, {"sha": "b218e422918235d324290bf06ee90d819f3c5d34", "filename": "libdecnumber/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9497ab5ed4bbc634652f6d699df73543c5b527f/libdecnumber%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9497ab5ed4bbc634652f6d699df73543c5b527f/libdecnumber%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2FChangeLog?ref=b9497ab5ed4bbc634652f6d699df73543c5b527f", "patch": "@@ -1,3 +1,7 @@\n+2010-01-05  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* configure: Regenerate.\n+\n 2009-11-28  Jakub Jelinek  <jakub@redhat.com>\n \n \t* decContext.c (decContextTestEndian): Move adj definition into"}, {"sha": "f621fc7ccaee4380865c9c7dcf71a13c47a2ec1b", "filename": "libdecnumber/configure", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9497ab5ed4bbc634652f6d699df73543c5b527f/libdecnumber%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9497ab5ed4bbc634652f6d699df73543c5b527f/libdecnumber%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2Fconfigure?ref=b9497ab5ed4bbc634652f6d699df73543c5b527f", "patch": "@@ -6162,49 +6162,61 @@ if test \"$acx_cv_header_stdint\" = stddef.h; then\n     #define _UINT8_T\n     #ifndef __uint8_t_defined\n     #define __uint8_t_defined\n+    #ifndef uint8_t\n     typedef unsigned $acx_cv_type_int8_t uint8_t;\n     #endif\n     #endif\n+    #endif\n \n     #ifndef _UINT16_T\n     #define _UINT16_T\n     #ifndef __uint16_t_defined\n     #define __uint16_t_defined\n+    #ifndef uint16_t\n     typedef unsigned $acx_cv_type_int16_t uint16_t;\n     #endif\n     #endif\n+    #endif\n \n     #ifndef _UINT32_T\n     #define _UINT32_T\n     #ifndef __uint32_t_defined\n     #define __uint32_t_defined\n+    #ifndef uint32_t\n     typedef unsigned $acx_cv_type_int32_t uint32_t;\n     #endif\n     #endif\n+    #endif\n \n     #ifndef _INT8_T\n     #define _INT8_T\n     #ifndef __int8_t_defined\n     #define __int8_t_defined\n+    #ifndef int8_t\n     typedef $acx_cv_type_int8_t int8_t;\n     #endif\n     #endif\n+    #endif\n \n     #ifndef _INT16_T\n     #define _INT16_T\n     #ifndef __int16_t_defined\n     #define __int16_t_defined\n+    #ifndef int16_t\n     typedef $acx_cv_type_int16_t int16_t;\n     #endif\n     #endif\n+    #endif\n \n     #ifndef _INT32_T\n     #define _INT32_T\n     #ifndef __int32_t_defined\n     #define __int32_t_defined\n+    #ifndef int32_t\n     typedef $acx_cv_type_int32_t int32_t;\n     #endif\n     #endif\n+    #endif\n EOF\n elif test \"$ac_cv_type_u_int32_t\" = yes; then\n   sed 's/^ *//' >> tmp-stdint.h <<EOF\n@@ -6224,25 +6236,31 @@ elif test \"$ac_cv_type_u_int32_t\" = yes; then\n     #define _UINT8_T\n     #ifndef __uint8_t_defined\n     #define __uint8_t_defined\n+    #ifndef uint8_t\n     typedef u_int8_t uint8_t;\n     #endif\n     #endif\n+    #endif\n \n     #ifndef _UINT16_T\n     #define _UINT16_T\n     #ifndef __uint16_t_defined\n     #define __uint16_t_defined\n+    #ifndef uint16_t\n     typedef u_int16_t uint16_t;\n     #endif\n     #endif\n+    #endif\n \n     #ifndef _UINT32_T\n     #define _UINT32_T\n     #ifndef __uint32_t_defined\n     #define __uint32_t_defined\n+    #ifndef uint32_t\n     typedef u_int32_t uint32_t;\n     #endif\n     #endif\n+    #endif\n EOF\n else\n   sed 's/^ *//' >> tmp-stdint.h <<EOF\n@@ -6292,25 +6310,31 @@ elif test \"$ac_cv_type_u_int64_t\" = yes; then\n     #define _UINT64_T\n     #ifndef __uint64_t_defined\n     #define __uint64_t_defined\n+    #ifndef uint64_t\n     typedef u_int64_t uint64_t;\n     #endif\n     #endif\n+    #endif\n EOF\n elif test -n \"$acx_cv_type_int64_t\"; then\n   sed 's/^ *//' >> tmp-stdint.h <<EOF\n \n     /* architecture has a 64-bit type, $acx_cv_type_int64_t */\n     #ifndef _INT64_T\n     #define _INT64_T\n+    #ifndef int64_t\n     typedef $acx_cv_type_int64_t int64_t;\n     #endif\n+    #endif\n     #ifndef _UINT64_T\n     #define _UINT64_T\n     #ifndef __uint64_t_defined\n     #define __uint64_t_defined\n+    #ifndef uint64_t\n     typedef unsigned $acx_cv_type_int64_t uint64_t;\n     #endif\n     #endif\n+    #endif\n EOF\n else\n   sed 's/^ *//' >> tmp-stdint.h <<EOF\n@@ -6320,13 +6344,17 @@ else\n     #ifndef _INT64_T\n     #define _INT64_T\n     #ifndef __int64_t_defined\n+    #ifndef int64_t\n     typedef long long int64_t;\n     #endif\n     #endif\n+    #endif\n     #ifndef _UINT64_T\n     #define _UINT64_T\n+    #ifndef uint64_t\n     typedef unsigned long long uint64_t;\n     #endif\n+    #endif\n \n     #elif defined __GNUC__ && defined (__STDC__) && __STDC__-0\n     /* NextStep 2.0 cc is really gcc 1.93 but it defines __GNUC__ = 2 and\n@@ -6338,24 +6366,32 @@ else\n \n     # ifndef _INT64_T\n     # define _INT64_T\n+    # ifndef int64_t\n     __extension__ typedef long long int64_t;\n     # endif\n+    # endif\n     # ifndef _UINT64_T\n     # define _UINT64_T\n+    # ifndef uint64_t\n     __extension__ typedef unsigned long long uint64_t;\n     # endif\n+    # endif\n \n     #elif !defined __STRICT_ANSI__\n     # if defined _MSC_VER || defined __WATCOMC__ || defined __BORLANDC__\n \n     #  ifndef _INT64_T\n     #  define _INT64_T\n+    #  ifndef int64_t\n     typedef __int64 int64_t;\n     #  endif\n+    #  endif\n     #  ifndef _UINT64_T\n     #  define _UINT64_T\n+    #  ifndef uint64_t\n     typedef unsigned __int64 uint64_t;\n     #  endif\n+    #  endif\n     # endif /* compiler */\n \n     #endif /* ANSI version */\n@@ -6368,11 +6404,15 @@ if test \"$ac_cv_type_uintptr_t\" != yes; then\n \n     /* Define intptr_t based on sizeof(void*) = $ac_cv_sizeof_void_p */\n     #ifndef __uintptr_t_defined\n+    #ifndef uintptr_t\n     typedef u$acx_cv_type_intptr_t uintptr_t;\n     #endif\n+    #endif\n     #ifndef __intptr_t_defined\n+    #ifndef intptr_t\n     typedef $acx_cv_type_intptr_t  intptr_t;\n     #endif\n+    #endif\n EOF\n fi\n \n@@ -6422,16 +6462,20 @@ if test \"$ac_cv_type_uintmax_t\" != yes; then\n   sed 's/^ *//' >> tmp-stdint.h <<EOF\n \n     /* Define intmax based on what we found */\n+    #ifndef intmax_t\n     #ifdef _INT64_T\n     typedef int64_t       intmax_t;\n     #else\n     typedef long          intmax_t;\n     #endif\n+    #endif\n+    #ifndef uintmax_t\n     #ifdef _UINT64_T\n     typedef uint64_t      uintmax_t;\n     #else\n     typedef unsigned long uintmax_t;\n     #endif\n+    #endif\n EOF\n fi\n "}, {"sha": "fbd9dd43309165a1a6260eb5c8b49d7132247e65", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9497ab5ed4bbc634652f6d699df73543c5b527f/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9497ab5ed4bbc634652f6d699df73543c5b527f/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=b9497ab5ed4bbc634652f6d699df73543c5b527f", "patch": "@@ -1,3 +1,7 @@\n+2010-01-05  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* configure: Regenerate.\n+\n 2010-01-03  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \tPR libfortran/42420"}, {"sha": "46e08630fc64ed68876f9acab282464e306f3447", "filename": "libgfortran/configure", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9497ab5ed4bbc634652f6d699df73543c5b527f/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9497ab5ed4bbc634652f6d699df73543c5b527f/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=b9497ab5ed4bbc634652f6d699df73543c5b527f", "patch": "@@ -27623,49 +27623,61 @@ if test \"$acx_cv_header_stdint\" = stddef.h; then\n     #define _UINT8_T\n     #ifndef __uint8_t_defined\n     #define __uint8_t_defined\n+    #ifndef uint8_t\n     typedef unsigned $acx_cv_type_int8_t uint8_t;\n     #endif\n     #endif\n+    #endif\n \n     #ifndef _UINT16_T\n     #define _UINT16_T\n     #ifndef __uint16_t_defined\n     #define __uint16_t_defined\n+    #ifndef uint16_t\n     typedef unsigned $acx_cv_type_int16_t uint16_t;\n     #endif\n     #endif\n+    #endif\n \n     #ifndef _UINT32_T\n     #define _UINT32_T\n     #ifndef __uint32_t_defined\n     #define __uint32_t_defined\n+    #ifndef uint32_t\n     typedef unsigned $acx_cv_type_int32_t uint32_t;\n     #endif\n     #endif\n+    #endif\n \n     #ifndef _INT8_T\n     #define _INT8_T\n     #ifndef __int8_t_defined\n     #define __int8_t_defined\n+    #ifndef int8_t\n     typedef $acx_cv_type_int8_t int8_t;\n     #endif\n     #endif\n+    #endif\n \n     #ifndef _INT16_T\n     #define _INT16_T\n     #ifndef __int16_t_defined\n     #define __int16_t_defined\n+    #ifndef int16_t\n     typedef $acx_cv_type_int16_t int16_t;\n     #endif\n     #endif\n+    #endif\n \n     #ifndef _INT32_T\n     #define _INT32_T\n     #ifndef __int32_t_defined\n     #define __int32_t_defined\n+    #ifndef int32_t\n     typedef $acx_cv_type_int32_t int32_t;\n     #endif\n     #endif\n+    #endif\n EOF\n elif test \"$ac_cv_type_u_int32_t\" = yes; then\n   sed 's/^ *//' >> tmp-stdint.h <<EOF\n@@ -27685,25 +27697,31 @@ elif test \"$ac_cv_type_u_int32_t\" = yes; then\n     #define _UINT8_T\n     #ifndef __uint8_t_defined\n     #define __uint8_t_defined\n+    #ifndef uint8_t\n     typedef u_int8_t uint8_t;\n     #endif\n     #endif\n+    #endif\n \n     #ifndef _UINT16_T\n     #define _UINT16_T\n     #ifndef __uint16_t_defined\n     #define __uint16_t_defined\n+    #ifndef uint16_t\n     typedef u_int16_t uint16_t;\n     #endif\n     #endif\n+    #endif\n \n     #ifndef _UINT32_T\n     #define _UINT32_T\n     #ifndef __uint32_t_defined\n     #define __uint32_t_defined\n+    #ifndef uint32_t\n     typedef u_int32_t uint32_t;\n     #endif\n     #endif\n+    #endif\n EOF\n else\n   sed 's/^ *//' >> tmp-stdint.h <<EOF\n@@ -27753,25 +27771,31 @@ elif test \"$ac_cv_type_u_int64_t\" = yes; then\n     #define _UINT64_T\n     #ifndef __uint64_t_defined\n     #define __uint64_t_defined\n+    #ifndef uint64_t\n     typedef u_int64_t uint64_t;\n     #endif\n     #endif\n+    #endif\n EOF\n elif test -n \"$acx_cv_type_int64_t\"; then\n   sed 's/^ *//' >> tmp-stdint.h <<EOF\n \n     /* architecture has a 64-bit type, $acx_cv_type_int64_t */\n     #ifndef _INT64_T\n     #define _INT64_T\n+    #ifndef int64_t\n     typedef $acx_cv_type_int64_t int64_t;\n     #endif\n+    #endif\n     #ifndef _UINT64_T\n     #define _UINT64_T\n     #ifndef __uint64_t_defined\n     #define __uint64_t_defined\n+    #ifndef uint64_t\n     typedef unsigned $acx_cv_type_int64_t uint64_t;\n     #endif\n     #endif\n+    #endif\n EOF\n else\n   sed 's/^ *//' >> tmp-stdint.h <<EOF\n@@ -27781,13 +27805,17 @@ else\n     #ifndef _INT64_T\n     #define _INT64_T\n     #ifndef __int64_t_defined\n+    #ifndef int64_t\n     typedef long long int64_t;\n     #endif\n     #endif\n+    #endif\n     #ifndef _UINT64_T\n     #define _UINT64_T\n+    #ifndef uint64_t\n     typedef unsigned long long uint64_t;\n     #endif\n+    #endif\n \n     #elif defined __GNUC__ && defined (__STDC__) && __STDC__-0\n     /* NextStep 2.0 cc is really gcc 1.93 but it defines __GNUC__ = 2 and\n@@ -27799,24 +27827,32 @@ else\n \n     # ifndef _INT64_T\n     # define _INT64_T\n+    # ifndef int64_t\n     __extension__ typedef long long int64_t;\n     # endif\n+    # endif\n     # ifndef _UINT64_T\n     # define _UINT64_T\n+    # ifndef uint64_t\n     __extension__ typedef unsigned long long uint64_t;\n     # endif\n+    # endif\n \n     #elif !defined __STRICT_ANSI__\n     # if defined _MSC_VER || defined __WATCOMC__ || defined __BORLANDC__\n \n     #  ifndef _INT64_T\n     #  define _INT64_T\n+    #  ifndef int64_t\n     typedef __int64 int64_t;\n     #  endif\n+    #  endif\n     #  ifndef _UINT64_T\n     #  define _UINT64_T\n+    #  ifndef uint64_t\n     typedef unsigned __int64 uint64_t;\n     #  endif\n+    #  endif\n     # endif /* compiler */\n \n     #endif /* ANSI version */\n@@ -27829,11 +27865,15 @@ if test \"$ac_cv_type_uintptr_t\" != yes; then\n \n     /* Define intptr_t based on sizeof(void*) = $ac_cv_sizeof_void_p */\n     #ifndef __uintptr_t_defined\n+    #ifndef uintptr_t\n     typedef u$acx_cv_type_intptr_t uintptr_t;\n     #endif\n+    #endif\n     #ifndef __intptr_t_defined\n+    #ifndef intptr_t\n     typedef $acx_cv_type_intptr_t  intptr_t;\n     #endif\n+    #endif\n EOF\n fi\n \n@@ -27883,16 +27923,20 @@ if test \"$ac_cv_type_uintmax_t\" != yes; then\n   sed 's/^ *//' >> tmp-stdint.h <<EOF\n \n     /* Define intmax based on what we found */\n+    #ifndef intmax_t\n     #ifdef _INT64_T\n     typedef int64_t       intmax_t;\n     #else\n     typedef long          intmax_t;\n     #endif\n+    #endif\n+    #ifndef uintmax_t\n     #ifdef _UINT64_T\n     typedef uint64_t      uintmax_t;\n     #else\n     typedef unsigned long uintmax_t;\n     #endif\n+    #endif\n EOF\n fi\n "}, {"sha": "4bd7efa6ecd66899b85b82f847291fefa9692224", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9497ab5ed4bbc634652f6d699df73543c5b527f/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9497ab5ed4bbc634652f6d699df73543c5b527f/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=b9497ab5ed4bbc634652f6d699df73543c5b527f", "patch": "@@ -1,3 +1,7 @@\n+2010-01-05  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* configure: Regenerate.\n+\n 2010-01-04  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR libgomp/42602"}, {"sha": "02e2861fb5d0408fb83c548dc50c91b609432a37", "filename": "libgomp/configure", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9497ab5ed4bbc634652f6d699df73543c5b527f/libgomp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9497ab5ed4bbc634652f6d699df73543c5b527f/libgomp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfigure?ref=b9497ab5ed4bbc634652f6d699df73543c5b527f", "patch": "@@ -18846,49 +18846,61 @@ if test \"$acx_cv_header_stdint\" = stddef.h; then\n     #define _UINT8_T\n     #ifndef __uint8_t_defined\n     #define __uint8_t_defined\n+    #ifndef uint8_t\n     typedef unsigned $acx_cv_type_int8_t uint8_t;\n     #endif\n     #endif\n+    #endif\n \n     #ifndef _UINT16_T\n     #define _UINT16_T\n     #ifndef __uint16_t_defined\n     #define __uint16_t_defined\n+    #ifndef uint16_t\n     typedef unsigned $acx_cv_type_int16_t uint16_t;\n     #endif\n     #endif\n+    #endif\n \n     #ifndef _UINT32_T\n     #define _UINT32_T\n     #ifndef __uint32_t_defined\n     #define __uint32_t_defined\n+    #ifndef uint32_t\n     typedef unsigned $acx_cv_type_int32_t uint32_t;\n     #endif\n     #endif\n+    #endif\n \n     #ifndef _INT8_T\n     #define _INT8_T\n     #ifndef __int8_t_defined\n     #define __int8_t_defined\n+    #ifndef int8_t\n     typedef $acx_cv_type_int8_t int8_t;\n     #endif\n     #endif\n+    #endif\n \n     #ifndef _INT16_T\n     #define _INT16_T\n     #ifndef __int16_t_defined\n     #define __int16_t_defined\n+    #ifndef int16_t\n     typedef $acx_cv_type_int16_t int16_t;\n     #endif\n     #endif\n+    #endif\n \n     #ifndef _INT32_T\n     #define _INT32_T\n     #ifndef __int32_t_defined\n     #define __int32_t_defined\n+    #ifndef int32_t\n     typedef $acx_cv_type_int32_t int32_t;\n     #endif\n     #endif\n+    #endif\n EOF\n elif test \"$ac_cv_type_u_int32_t\" = yes; then\n   sed 's/^ *//' >> tmp-stdint.h <<EOF\n@@ -18908,25 +18920,31 @@ elif test \"$ac_cv_type_u_int32_t\" = yes; then\n     #define _UINT8_T\n     #ifndef __uint8_t_defined\n     #define __uint8_t_defined\n+    #ifndef uint8_t\n     typedef u_int8_t uint8_t;\n     #endif\n     #endif\n+    #endif\n \n     #ifndef _UINT16_T\n     #define _UINT16_T\n     #ifndef __uint16_t_defined\n     #define __uint16_t_defined\n+    #ifndef uint16_t\n     typedef u_int16_t uint16_t;\n     #endif\n     #endif\n+    #endif\n \n     #ifndef _UINT32_T\n     #define _UINT32_T\n     #ifndef __uint32_t_defined\n     #define __uint32_t_defined\n+    #ifndef uint32_t\n     typedef u_int32_t uint32_t;\n     #endif\n     #endif\n+    #endif\n EOF\n else\n   sed 's/^ *//' >> tmp-stdint.h <<EOF\n@@ -18976,25 +18994,31 @@ elif test \"$ac_cv_type_u_int64_t\" = yes; then\n     #define _UINT64_T\n     #ifndef __uint64_t_defined\n     #define __uint64_t_defined\n+    #ifndef uint64_t\n     typedef u_int64_t uint64_t;\n     #endif\n     #endif\n+    #endif\n EOF\n elif test -n \"$acx_cv_type_int64_t\"; then\n   sed 's/^ *//' >> tmp-stdint.h <<EOF\n \n     /* architecture has a 64-bit type, $acx_cv_type_int64_t */\n     #ifndef _INT64_T\n     #define _INT64_T\n+    #ifndef int64_t\n     typedef $acx_cv_type_int64_t int64_t;\n     #endif\n+    #endif\n     #ifndef _UINT64_T\n     #define _UINT64_T\n     #ifndef __uint64_t_defined\n     #define __uint64_t_defined\n+    #ifndef uint64_t\n     typedef unsigned $acx_cv_type_int64_t uint64_t;\n     #endif\n     #endif\n+    #endif\n EOF\n else\n   sed 's/^ *//' >> tmp-stdint.h <<EOF\n@@ -19004,13 +19028,17 @@ else\n     #ifndef _INT64_T\n     #define _INT64_T\n     #ifndef __int64_t_defined\n+    #ifndef int64_t\n     typedef long long int64_t;\n     #endif\n     #endif\n+    #endif\n     #ifndef _UINT64_T\n     #define _UINT64_T\n+    #ifndef uint64_t\n     typedef unsigned long long uint64_t;\n     #endif\n+    #endif\n \n     #elif defined __GNUC__ && defined (__STDC__) && __STDC__-0\n     /* NextStep 2.0 cc is really gcc 1.93 but it defines __GNUC__ = 2 and\n@@ -19022,24 +19050,32 @@ else\n \n     # ifndef _INT64_T\n     # define _INT64_T\n+    # ifndef int64_t\n     __extension__ typedef long long int64_t;\n     # endif\n+    # endif\n     # ifndef _UINT64_T\n     # define _UINT64_T\n+    # ifndef uint64_t\n     __extension__ typedef unsigned long long uint64_t;\n     # endif\n+    # endif\n \n     #elif !defined __STRICT_ANSI__\n     # if defined _MSC_VER || defined __WATCOMC__ || defined __BORLANDC__\n \n     #  ifndef _INT64_T\n     #  define _INT64_T\n+    #  ifndef int64_t\n     typedef __int64 int64_t;\n     #  endif\n+    #  endif\n     #  ifndef _UINT64_T\n     #  define _UINT64_T\n+    #  ifndef uint64_t\n     typedef unsigned __int64 uint64_t;\n     #  endif\n+    #  endif\n     # endif /* compiler */\n \n     #endif /* ANSI version */\n@@ -19052,11 +19088,15 @@ if test \"$ac_cv_type_uintptr_t\" != yes; then\n \n     /* Define intptr_t based on sizeof(void*) = $ac_cv_sizeof_void_p */\n     #ifndef __uintptr_t_defined\n+    #ifndef uintptr_t\n     typedef u$acx_cv_type_intptr_t uintptr_t;\n     #endif\n+    #endif\n     #ifndef __intptr_t_defined\n+    #ifndef intptr_t\n     typedef $acx_cv_type_intptr_t  intptr_t;\n     #endif\n+    #endif\n EOF\n fi\n \n@@ -19106,16 +19146,20 @@ if test \"$ac_cv_type_uintmax_t\" != yes; then\n   sed 's/^ *//' >> tmp-stdint.h <<EOF\n \n     /* Define intmax based on what we found */\n+    #ifndef intmax_t\n     #ifdef _INT64_T\n     typedef int64_t       intmax_t;\n     #else\n     typedef long          intmax_t;\n     #endif\n+    #endif\n+    #ifndef uintmax_t\n     #ifdef _UINT64_T\n     typedef uint64_t      uintmax_t;\n     #else\n     typedef unsigned long uintmax_t;\n     #endif\n+    #endif\n EOF\n fi\n "}, {"sha": "5b2e5d7a9e01afe258c7bac6bca6e468d629b533", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9497ab5ed4bbc634652f6d699df73543c5b527f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9497ab5ed4bbc634652f6d699df73543c5b527f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b9497ab5ed4bbc634652f6d699df73543c5b527f", "patch": "@@ -1,3 +1,7 @@\n+2010-01-05  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* configure: Regenerate.\n+\n 2010-01-05  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* testsuite/22_locale/time_get/get_monthname/char/6.cc: New."}, {"sha": "82f7f59ddabd083c8edb8a9a7355939729065889", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9497ab5ed4bbc634652f6d699df73543c5b527f/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9497ab5ed4bbc634652f6d699df73543c5b527f/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=b9497ab5ed4bbc634652f6d699df73543c5b527f", "patch": "@@ -61794,49 +61794,61 @@ if test \"$acx_cv_header_stdint\" = stddef.h; then\n     #define _UINT8_T\n     #ifndef __uint8_t_defined\n     #define __uint8_t_defined\n+    #ifndef uint8_t\n     typedef unsigned $acx_cv_type_int8_t uint8_t;\n     #endif\n     #endif\n+    #endif\n \n     #ifndef _UINT16_T\n     #define _UINT16_T\n     #ifndef __uint16_t_defined\n     #define __uint16_t_defined\n+    #ifndef uint16_t\n     typedef unsigned $acx_cv_type_int16_t uint16_t;\n     #endif\n     #endif\n+    #endif\n \n     #ifndef _UINT32_T\n     #define _UINT32_T\n     #ifndef __uint32_t_defined\n     #define __uint32_t_defined\n+    #ifndef uint32_t\n     typedef unsigned $acx_cv_type_int32_t uint32_t;\n     #endif\n     #endif\n+    #endif\n \n     #ifndef _INT8_T\n     #define _INT8_T\n     #ifndef __int8_t_defined\n     #define __int8_t_defined\n+    #ifndef int8_t\n     typedef $acx_cv_type_int8_t int8_t;\n     #endif\n     #endif\n+    #endif\n \n     #ifndef _INT16_T\n     #define _INT16_T\n     #ifndef __int16_t_defined\n     #define __int16_t_defined\n+    #ifndef int16_t\n     typedef $acx_cv_type_int16_t int16_t;\n     #endif\n     #endif\n+    #endif\n \n     #ifndef _INT32_T\n     #define _INT32_T\n     #ifndef __int32_t_defined\n     #define __int32_t_defined\n+    #ifndef int32_t\n     typedef $acx_cv_type_int32_t int32_t;\n     #endif\n     #endif\n+    #endif\n EOF\n elif test \"$ac_cv_type_u_int32_t\" = yes; then\n   sed 's/^ *//' >> tmp-stdint.h <<EOF\n@@ -61856,25 +61868,31 @@ elif test \"$ac_cv_type_u_int32_t\" = yes; then\n     #define _UINT8_T\n     #ifndef __uint8_t_defined\n     #define __uint8_t_defined\n+    #ifndef uint8_t\n     typedef u_int8_t uint8_t;\n     #endif\n     #endif\n+    #endif\n \n     #ifndef _UINT16_T\n     #define _UINT16_T\n     #ifndef __uint16_t_defined\n     #define __uint16_t_defined\n+    #ifndef uint16_t\n     typedef u_int16_t uint16_t;\n     #endif\n     #endif\n+    #endif\n \n     #ifndef _UINT32_T\n     #define _UINT32_T\n     #ifndef __uint32_t_defined\n     #define __uint32_t_defined\n+    #ifndef uint32_t\n     typedef u_int32_t uint32_t;\n     #endif\n     #endif\n+    #endif\n EOF\n else\n   sed 's/^ *//' >> tmp-stdint.h <<EOF\n@@ -61924,25 +61942,31 @@ elif test \"$ac_cv_type_u_int64_t\" = yes; then\n     #define _UINT64_T\n     #ifndef __uint64_t_defined\n     #define __uint64_t_defined\n+    #ifndef uint64_t\n     typedef u_int64_t uint64_t;\n     #endif\n     #endif\n+    #endif\n EOF\n elif test -n \"$acx_cv_type_int64_t\"; then\n   sed 's/^ *//' >> tmp-stdint.h <<EOF\n \n     /* architecture has a 64-bit type, $acx_cv_type_int64_t */\n     #ifndef _INT64_T\n     #define _INT64_T\n+    #ifndef int64_t\n     typedef $acx_cv_type_int64_t int64_t;\n     #endif\n+    #endif\n     #ifndef _UINT64_T\n     #define _UINT64_T\n     #ifndef __uint64_t_defined\n     #define __uint64_t_defined\n+    #ifndef uint64_t\n     typedef unsigned $acx_cv_type_int64_t uint64_t;\n     #endif\n     #endif\n+    #endif\n EOF\n else\n   sed 's/^ *//' >> tmp-stdint.h <<EOF\n@@ -61952,13 +61976,17 @@ else\n     #ifndef _INT64_T\n     #define _INT64_T\n     #ifndef __int64_t_defined\n+    #ifndef int64_t\n     typedef long long int64_t;\n     #endif\n     #endif\n+    #endif\n     #ifndef _UINT64_T\n     #define _UINT64_T\n+    #ifndef uint64_t\n     typedef unsigned long long uint64_t;\n     #endif\n+    #endif\n \n     #elif defined __GNUC__ && defined (__STDC__) && __STDC__-0\n     /* NextStep 2.0 cc is really gcc 1.93 but it defines __GNUC__ = 2 and\n@@ -61970,24 +61998,32 @@ else\n \n     # ifndef _INT64_T\n     # define _INT64_T\n+    # ifndef int64_t\n     __extension__ typedef long long int64_t;\n     # endif\n+    # endif\n     # ifndef _UINT64_T\n     # define _UINT64_T\n+    # ifndef uint64_t\n     __extension__ typedef unsigned long long uint64_t;\n     # endif\n+    # endif\n \n     #elif !defined __STRICT_ANSI__\n     # if defined _MSC_VER || defined __WATCOMC__ || defined __BORLANDC__\n \n     #  ifndef _INT64_T\n     #  define _INT64_T\n+    #  ifndef int64_t\n     typedef __int64 int64_t;\n     #  endif\n+    #  endif\n     #  ifndef _UINT64_T\n     #  define _UINT64_T\n+    #  ifndef uint64_t\n     typedef unsigned __int64 uint64_t;\n     #  endif\n+    #  endif\n     # endif /* compiler */\n \n     #endif /* ANSI version */\n@@ -62000,11 +62036,15 @@ if test \"$ac_cv_type_uintptr_t\" != yes; then\n \n     /* Define intptr_t based on sizeof(void*) = $ac_cv_sizeof_void_p */\n     #ifndef __uintptr_t_defined\n+    #ifndef uintptr_t\n     typedef u$acx_cv_type_intptr_t uintptr_t;\n     #endif\n+    #endif\n     #ifndef __intptr_t_defined\n+    #ifndef intptr_t\n     typedef $acx_cv_type_intptr_t  intptr_t;\n     #endif\n+    #endif\n EOF\n fi\n \n@@ -62054,16 +62094,20 @@ if test \"$ac_cv_type_uintmax_t\" != yes; then\n   sed 's/^ *//' >> tmp-stdint.h <<EOF\n \n     /* Define intmax based on what we found */\n+    #ifndef intmax_t\n     #ifdef _INT64_T\n     typedef int64_t       intmax_t;\n     #else\n     typedef long          intmax_t;\n     #endif\n+    #endif\n+    #ifndef uintmax_t\n     #ifdef _UINT64_T\n     typedef uint64_t      uintmax_t;\n     #else\n     typedef unsigned long uintmax_t;\n     #endif\n+    #endif\n EOF\n fi\n "}]}