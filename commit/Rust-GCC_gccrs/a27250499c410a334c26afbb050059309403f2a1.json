{"sha": "a27250499c410a334c26afbb050059309403f2a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTI3MjUwNDk5YzQxMGEzMzRjMjZhZmJiMDUwMDU5MzA5NDAzZjJhMQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2001-06-02T10:54:32Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2001-06-02T10:54:32Z"}, "message": "Fix typo in comment\n\nFrom-SVN: r42794", "tree": {"sha": "5723d0b240b51f0e8597e08213b24ab8dc331773", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5723d0b240b51f0e8597e08213b24ab8dc331773"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a27250499c410a334c26afbb050059309403f2a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a27250499c410a334c26afbb050059309403f2a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a27250499c410a334c26afbb050059309403f2a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a27250499c410a334c26afbb050059309403f2a1/comments", "author": null, "committer": null, "parents": [{"sha": "be128cd9e00b78aa7f68919c27f6f598b613a3d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be128cd9e00b78aa7f68919c27f6f598b613a3d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be128cd9e00b78aa7f68919c27f6f598b613a3d4"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "5e8b5b70154576021032bd16e98e8778361c1076", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a27250499c410a334c26afbb050059309403f2a1/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a27250499c410a334c26afbb050059309403f2a1/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=a27250499c410a334c26afbb050059309403f2a1", "patch": "@@ -7008,7 +7008,7 @@ expand_expr (exp, target, tmode, modifier)\n \t  {\n \t    rtx offset_rtx = expand_expr (offset, NULL_RTX, VOIDmode, 0);\n \n-\t    /* If this object is in memory, put it into a register.\n+\t    /* If this object is in a register, put it into memory.\n \t       This case can't occur in C, but can in Ada if we have\n \t       unchecked conversion of an expression from a scalar type to\n \t       an array or record type.  */"}]}