{"sha": "1d3337fc41728b59856f33b9945b4c55e81cf9f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQzMzM3ZmM0MTcyOGI1OTg1NmYzM2I5OTQ1YjRjNTVlODFjZjlmOA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@cygnus.com", "date": "1998-07-22T12:50:10Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1998-07-22T12:50:10Z"}, "message": "Avoid irix 6.2/irix 6.3 header file conflict.\n\n\t* fixinc.irix (math.h): Install wrapper instead of copying.\n\nFrom-SVN: r21339", "tree": {"sha": "1951e821d923c5f33187ce5340a691cf96741a48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1951e821d923c5f33187ce5340a691cf96741a48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d3337fc41728b59856f33b9945b4c55e81cf9f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d3337fc41728b59856f33b9945b4c55e81cf9f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d3337fc41728b59856f33b9945b4c55e81cf9f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d3337fc41728b59856f33b9945b4c55e81cf9f8/comments", "author": null, "committer": null, "parents": [{"sha": "2491f72d97bb8c0f8d28827e055755081b93e809", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2491f72d97bb8c0f8d28827e055755081b93e809", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2491f72d97bb8c0f8d28827e055755081b93e809"}], "stats": {"total": 64, "additions": 35, "deletions": 29}, "files": [{"sha": "85315e7d2176969abfbd1b76af4088048e65ec17", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d3337fc41728b59856f33b9945b4c55e81cf9f8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d3337fc41728b59856f33b9945b4c55e81cf9f8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1d3337fc41728b59856f33b9945b4c55e81cf9f8", "patch": "@@ -1,3 +1,7 @@\n+Wed Jul 22 12:47:49 1998  Jim Wilson  <wilson@cygnus.com>\n+\n+\t* fixinc.irix (math.h): Install wrapper instead of copying.\n+\n Wed Jul 22 12:37:14 1998  Alexandre Petit-Bianco <apbianco@cygnus.com>\n \n \t* tree.def (EXPR_WITH_FILE_LOCATION): Defined as an 'e' expression"}, {"sha": "5a7cb3f227ce01799a5e25833d14eb82260f4492", "filename": "gcc/fixinc.irix", "status": "modified", "additions": 31, "deletions": 29, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d3337fc41728b59856f33b9945b4c55e81cf9f8/gcc%2Ffixinc.irix", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d3337fc41728b59856f33b9945b4c55e81cf9f8/gcc%2Ffixinc.irix", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc.irix?ref=1d3337fc41728b59856f33b9945b4c55e81cf9f8", "patch": "@@ -1,5 +1,7 @@\n #! /bin/sh\n # Install modified versions of certain problematic Irix include files.\n+# If possible, create a wrapper (see fixinc.wrap) instead of copying files.\n+#\n # Copyright (C) 1997 Free Software Foundation, Inc.\n # Contributed by Brendan Kehoe (brendan@cygnus.com).\n #\n@@ -59,40 +61,40 @@ echo 'Building fixincludes in ' ${LIB}\n #\tADD ANY OTHERS, the \"Making directories:\" and symlinks code from\n #\tfixinc.svr4 may have to go back in.\n \n-# The Irix math.h defines struct exception, which conflicts with\n+# This math.h fix is copied from fixinc.wrap.  We want to avoid copying\n+# math.h because both math.h and stdlib.h have a declaration for initstate,\n+# and this declaration changed between Irix 6.2 and Irix 6.3.  If we copy this\n+# file, then the same toolchain can't be shared between 6.2 and 6.3+.\n+\n+# Some math.h files define struct exception, which conflicts with\n # the class exception defined in the C++ file std/stdexcept.h.  We\n # redefine it to __math_exception.  This is not a great fix, but I\n # haven't been able to think of anything better.\n file=math.h\n-base=`basename $file`\n-if [ -r ${LIB}/$file ]; then\n-  file_to_fix=${LIB}/$file\n-else\n-  if [ -r ${INPUT}/$file ]; then\n-    file_to_fix=${INPUT}/$file\n-  else\n-    file_to_fix=\"\"\n-  fi\n-fi\n-if [ \\! -z \"$file_to_fix\" ]; then\n-  echo Checking $file_to_fix\n-  sed -e '/struct exception/i\\\n-#ifdef __cplusplus\\\n-#define exception __math_exception\\\n-#endif'\\\n-      -e '/struct exception/a\\\n-#ifdef __cplusplus\\\n-#undef exception\\\n-#endif' $file_to_fix > /tmp/$base\n-  if cmp $file_to_fix /tmp/$base >/dev/null 2>&1; then \\\n-    true\n-  else\n-    echo Fixed $file_to_fix\n-    rm -f ${LIB}/$file\n-    cp /tmp/$base ${LIB}/$file\n-    chmod a+r ${LIB}/$file\n+if [ -r $INPUT/$file ]; then\n+  echo Checking $INPUT/$file\n+  if grep 'struct exception' $INPUT/$file >/dev/null\n+  then\n+    echo Fixed $file\n+    rm -f $LIB/$file\n+    cat <<'__EOF__' >$LIB/$file\n+#ifndef _MATH_H_WRAPPER\n+#ifdef __cplusplus\n+# define exception __math_exception\n+#endif\n+#include_next <math.h>\n+#ifdef __cplusplus\n+# undef exception\n+#endif\n+#define _MATH_H_WRAPPER\n+#endif /* _MATH_H_WRAPPER */\n+__EOF__\n+    # Define _MATH_H_WRAPPER at the end of the wrapper, not the start,\n+    # so that if #include_next gets another instance of the wrapper,\n+    # this will follow the #include_next chain until we arrive at\n+    # the real <math.h>.\n+    chmod a+r $LIB/$file\n   fi\n-  rm -f /tmp/$base\n fi\n \n # In limits.h, put #ifndefs around things that are supposed to be defined"}]}