{"sha": "43362d74b08ce76e44f6dbea8d133e739054f87f", "node_id": "C_kwDOANBUbNoAKDQzMzYyZDc0YjA4Y2U3NmU0NGY2ZGJlYThkMTMzZTczOTA1NGY4N2Y", "commit": {"author": {"name": "Justin Squirek", "email": "squirek@adacore.com", "date": "2021-08-14T11:32:17Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-10-04T08:45:05Z"}, "message": "[Ada] Crash on allocator in alternative accessibility modes\n\ngcc/ada/\n\n\t* sem_util.adb (Function_Or_Allocator_Level): Properly handle\n\tdirect function calls in the default alternative accessibility\n\tchecking mode.", "tree": {"sha": "4e0ffbe5b6c0dce0c4f47ebc849e13d79e21cbf2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e0ffbe5b6c0dce0c4f47ebc849e13d79e21cbf2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43362d74b08ce76e44f6dbea8d133e739054f87f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43362d74b08ce76e44f6dbea8d133e739054f87f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43362d74b08ce76e44f6dbea8d133e739054f87f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43362d74b08ce76e44f6dbea8d133e739054f87f/comments", "author": {"login": "AdaDoom3", "id": 3445599, "node_id": "MDQ6VXNlcjM0NDU1OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3445599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdaDoom3", "html_url": "https://github.com/AdaDoom3", "followers_url": "https://api.github.com/users/AdaDoom3/followers", "following_url": "https://api.github.com/users/AdaDoom3/following{/other_user}", "gists_url": "https://api.github.com/users/AdaDoom3/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdaDoom3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdaDoom3/subscriptions", "organizations_url": "https://api.github.com/users/AdaDoom3/orgs", "repos_url": "https://api.github.com/users/AdaDoom3/repos", "events_url": "https://api.github.com/users/AdaDoom3/events{/privacy}", "received_events_url": "https://api.github.com/users/AdaDoom3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf1c69fb8c6b4ce894b95250028ed1ae5982c739", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf1c69fb8c6b4ce894b95250028ed1ae5982c739", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf1c69fb8c6b4ce894b95250028ed1ae5982c739"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "47c3401c5daffdb48949bd6d567b74071e033c0d", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43362d74b08ce76e44f6dbea8d133e739054f87f/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43362d74b08ce76e44f6dbea8d133e739054f87f/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=43362d74b08ce76e44f6dbea8d133e739054f87f", "patch": "@@ -391,8 +391,7 @@ package body Sem_Util is\n            and then (Is_Static_Coextension (N)\n                       or else Is_Dynamic_Coextension (N))\n          then\n-            return Make_Level_Literal\n-                     (Scope_Depth (Standard_Standard));\n+            return Make_Level_Literal (Scope_Depth (Standard_Standard));\n          end if;\n \n          --  Named access types have a designated level\n@@ -416,9 +415,14 @@ package body Sem_Util is\n                if Debug_Flag_Underscore_B then\n                   return Make_Level_Literal (Typ_Access_Level (Etype (N)));\n \n-               --  Otherwise the level is that of the subprogram\n+               --  For function calls the level is that of the subprogram,\n+               --  otherwise (for allocators etc.) we get the level of the\n+               --  corresponding anonymous access type which is calculated\n+               --  through the normal path of execution.\n \n-               else\n+               elsif Nkind (N) = N_Function_Call\n+                 and then Nkind (Name (N)) /= N_Explicit_Dereference\n+               then\n                   return Make_Level_Literal\n                            (Subprogram_Access_Level (Entity (Name (N))));\n                end if;\n@@ -29287,7 +29291,7 @@ package body Sem_Util is\n                            (Designated_Type (Btyp), Allow_Alt_Model);\n                end if;\n \n-               --  When an anonymous access type's Assoc_Ent is specifiedi,\n+               --  When an anonymous access type's Assoc_Ent is specified,\n                --  calculate the result based on the general accessibility\n                --  level routine.\n "}]}