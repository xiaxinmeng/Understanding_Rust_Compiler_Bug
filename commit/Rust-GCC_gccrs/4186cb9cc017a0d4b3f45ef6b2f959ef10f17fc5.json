{"sha": "4186cb9cc017a0d4b3f45ef6b2f959ef10f17fc5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDE4NmNiOWNjMDE3YTBkNGIzZjQ1ZWY2YjJmOTU5ZWYxMGYxN2ZjNQ==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@bitrange.com", "date": "2021-07-29T16:02:47Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@bitrange.com", "date": "2021-07-29T23:27:26Z"}, "message": "fix breakage from \"libstdc++: Remove unnecessary uses of <utility>\"\n\nCommit r12-2534 was incomplete and (by inspection derived\nfrom an MMIX build) failing for targets without an insn for\ncompare_and_swap for pointer-size objects, IOW for targets\nfor which \"ATOMIC_POINTER_LOCK_FREE != 2\" is true:\n\nx/gcc/libstdc++-v3/src/c++17/memory_resource.cc: In member function\n 'std::pmr::memory_resource*\nstd::pmr::{anonymous}::atomic_mem_res::exchange(std::pmr::memory_resource*)':\nx/gcc/libstdc++-v3/src/c++17/memory_resource.cc:140:21: error:\n 'exchange' is not a member of 'std'\n  140 |         return std::exchange(val, r);\n      |                     ^~~~~~~~\nmake[5]: *** [Makefile:577: memory_resource.lo] Error 1\nmake[5]: Leaving directory\n '/home/hp/tmp/newmmix-r12-2579-p3/gccobj/mmix/libstdc++-v3/src/c++17'\n\nThis fix was derived from edits elsewhere in that patch.\n\nTested mmix-knuth-mmixware, restoring build (together with\ntarget-reviving patches as MMIX is currently and at that commit\nbroken for target-specific reasons).\n\nlibstdc++-v3/:\n\t* src/c++17/memory_resource.cc: Use __exchange instead\n\tof std::exchange.", "tree": {"sha": "05724767fc2f19e823587101fc6eba74742b0f8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05724767fc2f19e823587101fc6eba74742b0f8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4186cb9cc017a0d4b3f45ef6b2f959ef10f17fc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4186cb9cc017a0d4b3f45ef6b2f959ef10f17fc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4186cb9cc017a0d4b3f45ef6b2f959ef10f17fc5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4186cb9cc017a0d4b3f45ef6b2f959ef10f17fc5/comments", "author": null, "committer": null, "parents": [{"sha": "ef22e9c725cc94b68c27b09503bfc4b4064d8dbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef22e9c725cc94b68c27b09503bfc4b4064d8dbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef22e9c725cc94b68c27b09503bfc4b4064d8dbf"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "1ba79903f870517296bbd0d1343de1532057ebe3", "filename": "libstdc++-v3/src/c++17/memory_resource.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4186cb9cc017a0d4b3f45ef6b2f959ef10f17fc5/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Fmemory_resource.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4186cb9cc017a0d4b3f45ef6b2f959ef10f17fc5/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Fmemory_resource.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Fmemory_resource.cc?ref=4186cb9cc017a0d4b3f45ef6b2f959ef10f17fc5", "patch": "@@ -29,7 +29,7 @@\n #include <new>\n #if ATOMIC_POINTER_LOCK_FREE != 2\n # include <bits/std_mutex.h>\t// std::mutex, std::lock_guard\n-# include <bits/move.h>\t\t// std::exchange\n+# include <bits/move.h>\t\t// std::__exchange\n #endif\n \n namespace std _GLIBCXX_VISIBILITY(default)\n@@ -117,7 +117,7 @@ namespace pmr\n       memory_resource* exchange(memory_resource* r)\n       {\n \tlock_guard<mutex> lock(mx);\n-\treturn std::exchange(val, r);\n+\treturn std::__exchange(val, r);\n       }\n     };\n #else\n@@ -137,7 +137,7 @@ namespace pmr\n \n       memory_resource* exchange(memory_resource* r)\n       {\n-\treturn std::exchange(val, r);\n+\treturn std::__exchange(val, r);\n       }\n     };\n #endif // ATOMIC_POINTER_LOCK_FREE == 2"}]}