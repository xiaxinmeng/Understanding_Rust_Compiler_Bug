{"sha": "8cac6af6f8ba5cce69161459e572e59c2be60e75", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGNhYzZhZjZmOGJhNWNjZTY5MTYxNDU5ZTU3MmU1OWMyYmU2MGU3NQ==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-04-07T00:16:39Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-04-07T00:16:39Z"}, "message": "Daily bump.", "tree": {"sha": "2177a580b2989018e91b6c00e6b1a8743ccbe62a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2177a580b2989018e91b6c00e6b1a8743ccbe62a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8cac6af6f8ba5cce69161459e572e59c2be60e75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cac6af6f8ba5cce69161459e572e59c2be60e75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cac6af6f8ba5cce69161459e572e59c2be60e75", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cac6af6f8ba5cce69161459e572e59c2be60e75/comments", "author": null, "committer": null, "parents": [{"sha": "b29ddf93a4dd0cb9f0110cec785092f86c9d109e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b29ddf93a4dd0cb9f0110cec785092f86c9d109e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b29ddf93a4dd0cb9f0110cec785092f86c9d109e"}], "stats": {"total": 296, "additions": 295, "deletions": 1}, "files": [{"sha": "ebba0ee7e371d5b378c1e081779bd4a7c32d0433", "filename": "gcc/ChangeLog", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cac6af6f8ba5cce69161459e572e59c2be60e75/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cac6af6f8ba5cce69161459e572e59c2be60e75/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8cac6af6f8ba5cce69161459e572e59c2be60e75", "patch": "@@ -1,3 +1,45 @@\n+2021-04-06  Vladimir N. Makarov  <vmakarov@redhat.com>\n+\n+\tPR target/99781\n+\t* lra-constraints.c (split_reg): Don't check paradoxical_subreg_p.\n+\t* lra-lives.c (clear_sparseset_regnos, regnos_in_sparseset_p): New\n+\tfunctions.\n+\t(process_bb_lives): Don't update biggest mode of hard reg for\n+\timplicit in multi-register group.  Use the new functions for\n+\tupdating dead_set and unused_set by register notes.\n+\n+2021-04-06  Xianmiao Qu  <xianmiao_qu@c-sky.com>\n+\n+\t* config/csky/csky_pipeline_ck802.md : Use insn reservation name\n+\tinstead of *.\n+\n+2021-04-06  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\t* config/i386/x86-tune-costs.h (skylake_memcpy): Updated.\n+\t(skylake_memset): Likewise.\n+\t(skylake_cost): Change CLEAR_RATIO to 17.\n+\t* config/i386/x86-tune.def (X86_TUNE_PREFER_KNOWN_REP_MOVSB_STOSB):\n+\tReplace m_CANNONLAKE, m_ICELAKE_CLIENT, m_ICELAKE_SERVER,\n+\tm_TIGERLAKE and m_SAPPHIRERAPIDS with m_SKYLAKE and m_CORE_AVX512.\n+\n+2021-04-06  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/99880\n+\t* tree-vect-loop.c (maybe_set_vectorized_backedge_value): Only\n+\tset vectorized defs of relevant PHIs.\n+\n+2021-04-06  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/99924\n+\t* tree-vect-slp.c (vect_bb_partition_graph_r): Do not mark\n+\tnodes w/o scalar stmts as visited.\n+\n+2021-04-06  Alex Coplan  <alex.coplan@arm.com>\n+\n+\tPR target/99748\n+\t* config/arm/arm.c (arm_libcall_uses_aapcs_base): Also use base\n+\tPCS for [su]fix_optab.\n+\n 2021-04-03  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* config/darwin.c (machopic_legitimize_pic_address): Check"}, {"sha": "44feb2ed6bdd2bd960ac3125f50fb2d3ef566d87", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cac6af6f8ba5cce69161459e572e59c2be60e75/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cac6af6f8ba5cce69161459e572e59c2be60e75/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=8cac6af6f8ba5cce69161459e572e59c2be60e75", "patch": "@@ -1 +1 @@\n-20210406\n+20210407"}, {"sha": "06cd140050758b19f43effb9b47bac7b8d7229c2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cac6af6f8ba5cce69161459e572e59c2be60e75/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cac6af6f8ba5cce69161459e572e59c2be60e75/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8cac6af6f8ba5cce69161459e572e59c2be60e75", "patch": "@@ -1,3 +1,27 @@\n+2021-04-06  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/96673\n+\t* init.c (get_nsdmi): Don't defer access checking.\n+\n+2021-04-06  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/99901\n+\t* decl.c (cp_finish_decl): mark_needed an implicitly inline\n+\tstatic data member with an out-of-class redeclaration.\n+\n+2021-04-06  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/91241\n+\t* mangle.c (write_compact_number): Add sanity check.\n+\t(write_local_name): Use list_length for parm number.\n+\n+2021-04-06  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/99899\n+\t* pt.c (do_auto_deduction): Don't exit early when deducing the\n+\tarray type of a structured binding.  Also handle adc_decomp_type\n+\tduring constraint checking.\n+\n 2021-04-05  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/96311"}, {"sha": "5a02930019c10eca3276f907b1acb9400b5fc806", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cac6af6f8ba5cce69161459e572e59c2be60e75/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cac6af6f8ba5cce69161459e572e59c2be60e75/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=8cac6af6f8ba5cce69161459e572e59c2be60e75", "patch": "@@ -1,3 +1,23 @@\n+2021-04-06  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/99917\n+\t* dmd/MERGE: Merge upstream dmd d16195406.\n+\n+2021-04-06  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (build_frame_type): Use Array::find to get index of\n+\telement.\n+\n+2021-04-06  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-diagnostic.cc (vwarning): Increment gaggedWarnings if warning\n+\tmessage\twas suppressed.\n+\t(vdeprecation): Likewise for deprecation messages.\n+\n+2021-04-06  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* dmd/MERGE: Merge upstream dmd 5cc71ff83.\n+\n 2021-04-05  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \tPR d/99914"}, {"sha": "1ca1876e0538895367a11993b23f2ddf5cd71495", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cac6af6f8ba5cce69161459e572e59c2be60e75/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cac6af6f8ba5cce69161459e572e59c2be60e75/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=8cac6af6f8ba5cce69161459e572e59c2be60e75", "patch": "@@ -1,3 +1,11 @@\n+2021-04-06  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* de.po: Update.\n+\n+2021-04-06  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* sv.po: Update.\n+\n 2021-03-29  Joseph Myers  <joseph@codesourcery.com>\n \n \t* sv.po: Update."}, {"sha": "97874f96f8b1b4c6c271934fccbab877e2f5a8a4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cac6af6f8ba5cce69161459e572e59c2be60e75/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cac6af6f8ba5cce69161459e572e59c2be60e75/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8cac6af6f8ba5cce69161459e572e59c2be60e75", "patch": "@@ -1,3 +1,64 @@\n+2021-04-06  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/96673\n+\t* g++.dg/cpp1y/nsdmi-aggr13.C: New test.\n+\n+2021-04-06  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/99901\n+\t* g++.dg/cpp1z/inline-var9.C: New test.\n+\n+2021-04-06  Vladimir N. Makarov  <vmakarov@redhat.com>\n+\n+\tPR target/99781\n+\t* g++.target/aarch64/sve/pr99781.C: New.\n+\n+2021-04-06  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\t* gcc.target/i386/memcpy-strategy-9.c: New test.\n+\t* gcc.target/i386/memcpy-strategy-10.c: Likewise.\n+\t* gcc.target/i386/memcpy-strategy-11.c: Likewise.\n+\t* gcc.target/i386/memset-strategy-7.c: Likewise.\n+\t* gcc.target/i386/memset-strategy-8.c: Likewise.\n+\t* gcc.target/i386/memset-strategy-9.c: Likewise.\n+\n+2021-04-06  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/99880\n+\t* gcc.dg/torture/pr99880.c: New testcase.\n+\n+2021-04-06  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* g++.dg/modules/builtin-3_a.C: Remove dump scans.\n+\t* g++.dg/modules/builtin-3_b.C: Remove dump scans.\n+\n+2021-04-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/96573\n+\t* gcc.dg/pr96573.c: Instead of __builtin_bswap accept also\n+\tVEC_PERM_EXPR with bswapping permutation.\n+\n+2021-04-06  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/99924\n+\t* gfortran.dg/vect/pr99924.f90: New testcase.\n+\n+2021-04-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/97900\n+\t* g++.dg/ext/vector40.C: Add -Wno-psabi -w to dg-options.\n+\n+2021-04-06  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/91241\n+\t* g++.dg/abi/lambda-defarg1.C: New test.\n+\n+2021-04-06  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/99899\n+\t* g++.dg/cpp2a/concepts-placeholder7.C: New test.\n+\t* g++.dg/cpp2a/concepts-placeholder8.C: New test.\n+\n 2021-04-05  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/96311"}, {"sha": "05826962dba2bf8c309353bf09978aa66823db66", "filename": "libcody/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cac6af6f8ba5cce69161459e572e59c2be60e75/libcody%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cac6af6f8ba5cce69161459e572e59c2be60e75/libcody%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2FChangeLog?ref=8cac6af6f8ba5cce69161459e572e59c2be60e75", "patch": "@@ -1,3 +1,7 @@\n+2021-04-06  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* LICENSE.gcc: Delete.\n+\n 2021-01-12  Nathan Sidwell  <nathan@acm.org>\n \n \t* Makefile.in: Remove auto parallelize, swallow Makesub.in. Don't"}, {"sha": "b8af4864fbd5e7c566002ac1f921e1813e0e400b", "filename": "libphobos/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cac6af6f8ba5cce69161459e572e59c2be60e75/libphobos%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cac6af6f8ba5cce69161459e572e59c2be60e75/libphobos%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FChangeLog?ref=8cac6af6f8ba5cce69161459e572e59c2be60e75", "patch": "@@ -1,3 +1,7 @@\n+2021-04-06  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* libdruntime/MERGE: Merge upstream druntime 1134b710.\n+\n 2021-04-03  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* libdruntime/MERGE: Merge upstream druntime 483bc129."}, {"sha": "dcd3b68d11187fce5e4237be3705ba65cfb42c61", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 131, "deletions": 0, "changes": 131, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cac6af6f8ba5cce69161459e572e59c2be60e75/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cac6af6f8ba5cce69161459e572e59c2be60e75/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8cac6af6f8ba5cce69161459e572e59c2be60e75", "patch": "@@ -1,3 +1,134 @@\n+2021-04-06  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/move.h (forward, move, move_if_noexcept)\n+\t(addressof): Add _GLIBCXX_NODISCARD.\n+\t* include/bits/ranges_cmp.h (identity::operator()): Add\n+\tnodiscard attribute.\n+\t* include/c_global/cstddef (to_integer): Likewise.\n+\t* include/std/bit (bit_cast): Likewise.\n+\t* include/std/utility (as_const, to_underlying): Likewise.\n+\n+2021-04-06  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/move.h (forward): Change static_assert message\n+\tto be unambiguous about what must be true.\n+\t* testsuite/20_util/forward/c_neg.cc: Adjust dg-error.\n+\t* testsuite/20_util/forward/f_neg.cc: Likewise.\n+\n+2021-04-06  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/alloc_traits.h: Use markdown for code font.\n+\t* include/bits/basic_string.h: Fix @param names.\n+\t* include/bits/max_size_type.h: Remove period after @file.\n+\t* include/bits/regex.h: Fix duplicate @retval names, and rename.\n+\t* include/ext/pb_ds/detail/priority_queue_base_dispatch.hpp: Add\n+\tgroup open to match existing group close.\n+\t* include/ext/pb_ds/priority_queue.hpp: Add blank line before group\n+\topen.\n+\n+2021-04-06  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/tr1/regex:\n+\n+2021-04-06  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/atomic_base.h: Fix doxygen group close.\n+\t* include/bits/basic_ios.h: Likewise.\n+\t* include/bits/forward_list.h: Likewise.\n+\t* include/bits/fs_dir.h: Likewise.\n+\t* include/bits/fs_ops.h: Likewise.\n+\t* include/bits/fs_path.h: Likewise.\n+\t* include/bits/functional_hash.h: Likewise.\n+\t* include/bits/gslice.h: Likewise.\n+\t* include/bits/gslice_array.h: Likewise.\n+\t* include/bits/hashtable_policy.h: Likewise.\n+\t* include/bits/indirect_array.h: Likewise.\n+\t* include/bits/locale_classes.h: Likewise.\n+\t* include/bits/locale_facets.h: Likewise.\n+\t* include/bits/locale_facets_nonio.h: Likewise.\n+\t* include/bits/mask_array.h: Likewise.\n+\t* include/bits/refwrap.h: Likewise.\n+\t* include/bits/regex.h: Likewise.\n+\t* include/bits/regex_automaton.h: Likewise.\n+\t* include/bits/regex_compiler.h: Likewise.\n+\t* include/bits/regex_constants.h: Likewise.\n+\t* include/bits/regex_error.h: Likewise.\n+\t* include/bits/regex_executor.h: Likewise.\n+\t* include/bits/regex_scanner.h: Likewise.\n+\t* include/bits/shared_ptr.h: Likewise.\n+\t* include/bits/shared_ptr_atomic.h: Likewise.\n+\t* include/bits/shared_ptr_base.h: Likewise.\n+\t* include/bits/slice_array.h: Likewise.\n+\t* include/bits/specfun.h: Likewise.\n+\t* include/bits/std_function.h: Likewise.\n+\t* include/bits/std_mutex.h: Likewise.\n+\t* include/bits/stl_deque.h: Likewise.\n+\t* include/bits/stl_iterator.h: Likewise.\n+\t* include/bits/stl_iterator_base_types.h: Likewise.\n+\t* include/bits/stl_map.h: Likewise.\n+\t* include/bits/stl_multimap.h: Likewise.\n+\t* include/bits/stl_multiset.h: Likewise.\n+\t* include/bits/stl_numeric.h: Likewise.\n+\t* include/bits/stl_pair.h: Likewise.\n+\t* include/bits/stl_set.h: Likewise.\n+\t* include/bits/stl_uninitialized.h: Likewise.\n+\t* include/bits/stream_iterator.h: Likewise.\n+\t* include/bits/streambuf_iterator.h: Likewise.\n+\t* include/bits/unique_ptr.h: Likewise.\n+\t* include/bits/unordered_map.h: Likewise.\n+\t* include/bits/unordered_set.h: Likewise.\n+\t* include/decimal/decimal: Likewise.\n+\t* include/experimental/any: Likewise.\n+\t* include/experimental/array: Likewise.\n+\t* include/experimental/bits/fs_dir.h: Likewise.\n+\t* include/experimental/bits/fs_fwd.h: Likewise.\n+\t* include/experimental/bits/fs_ops.h: Likewise.\n+\t* include/experimental/bits/fs_path.h: Likewise.\n+\t* include/experimental/buffer: Likewise.\n+\t* include/experimental/internet: Likewise.\n+\t* include/experimental/optional: Likewise.\n+\t* include/experimental/propagate_const: Likewise.\n+\t* include/experimental/socket: Likewise.\n+\t* include/ext/pb_ds/assoc_container.hpp: Likewise.\n+\t* include/ext/pb_ds/detail/priority_queue_base_dispatch.hpp:\n+\tLikewise.\n+\t* include/ext/pb_ds/detail/tree_policy/node_metadata_selector.hpp: Likewise.\n+\t* include/ext/pb_ds/detail/trie_policy/node_metadata_selector.hpp: Likewise.\n+\t* include/ext/pb_ds/detail/types_traits.hpp: Likewise.\n+\t* include/ext/pb_ds/exception.hpp: Likewise.\n+\t* include/ext/pb_ds/priority_queue.hpp: Likewise.\n+\t* include/ext/pb_ds/tag_and_trait.hpp: Likewise.\n+\t* include/ext/random: Likewise.\n+\t* include/std/any: Likewise.\n+\t* include/std/atomic: Likewise.\n+\t* include/std/bitset: Likewise.\n+\t* include/std/chrono: Likewise.\n+\t* include/std/complex: Likewise.\n+\t* include/std/condition_variable: Likewise.\n+\t* include/std/fstream: Likewise.\n+\t* include/std/future: Likewise.\n+\t* include/std/iostream: Likewise.\n+\t* include/std/istream: Likewise.\n+\t* include/std/mutex: Likewise.\n+\t* include/std/numeric: Likewise.\n+\t* include/std/ostream: Likewise.\n+\t* include/std/ratio: Likewise.\n+\t* include/std/shared_mutex: Likewise.\n+\t* include/std/stdexcept: Likewise.\n+\t* include/std/streambuf: Likewise.\n+\t* include/std/system_error: Likewise.\n+\t* include/std/thread: Likewise.\n+\t* include/std/valarray: Likewise.\n+\t* include/std/variant: Likewise.\n+\t* include/tr1/cmath: Likewise.\n+\t* include/tr1/regex: Likewise.\n+\t* include/tr2/dynamic_bitset: Likewise.\n+\t* libsupc++/atomic_lockfree_defines.h: Likewise.\n+\t* libsupc++/exception: Likewise.\n+\t* libsupc++/exception.h: Likewise.\n+\t* libsupc++/exception_ptr.h: Likewise.\n+\t* libsupc++/nested_exception.h: Likewise.\n+\n 2021-03-31  Alexandre Oliva  <oliva@adacore.com>\n \n \t* testsuite/30_threads/future/members/poll.cc: Use faster"}]}