{"sha": "711e0acdbb2645f5a8aa89014488c24e89ccb0f7", "node_id": "C_kwDOANBUbNoAKDcxMWUwYWNkYmIyNjQ1ZjVhOGFhODkwMTQ0ODhjMjRlODljY2IwZjc", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-12-16T08:25:40Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-12-16T08:29:55Z"}, "message": "middle-end/108086 - more operand scanner reduction in inlining\n\nThere's another round of redundant operand scanning in\nremap_gimple_stmt.  The following removes this and also improves\none special-case to call a cheaper inline function.\n\n\tPR middle-end/108086\n\t* tree-inline.cc (remap_gimple_stmt): Add stmts to the\n\tsequence without updating them.  Simplify x == x detection.", "tree": {"sha": "fccb8ee327260a35e1d6c2265806ae69ef6b4efb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fccb8ee327260a35e1d6c2265806ae69ef6b4efb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/711e0acdbb2645f5a8aa89014488c24e89ccb0f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/711e0acdbb2645f5a8aa89014488c24e89ccb0f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/711e0acdbb2645f5a8aa89014488c24e89ccb0f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/711e0acdbb2645f5a8aa89014488c24e89ccb0f7/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18af26fc375398f0a7cd7bae5aabebd447f8c899", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18af26fc375398f0a7cd7bae5aabebd447f8c899", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18af26fc375398f0a7cd7bae5aabebd447f8c899"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "02d8c39c3e88862aa6833f761d6987e48865edf8", "filename": "gcc/tree-inline.cc", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/711e0acdbb2645f5a8aa89014488c24e89ccb0f7/gcc%2Ftree-inline.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/711e0acdbb2645f5a8aa89014488c24e89ccb0f7/gcc%2Ftree-inline.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.cc?ref=711e0acdbb2645f5a8aa89014488c24e89ccb0f7", "patch": "@@ -1535,7 +1535,7 @@ remap_gimple_stmt (gimple *stmt, copy_body_data *id)\n       if (id->reset_location)\n \tgimple_set_location (bind, input_location);\n       id->debug_stmts.safe_push (bind);\n-      gimple_seq_add_stmt (&stmts, bind);\n+      gimple_seq_add_stmt_without_update (&stmts, bind);\n       return stmts;\n     }\n \n@@ -1765,7 +1765,7 @@ remap_gimple_stmt (gimple *stmt, copy_body_data *id)\n     }\n   else\n     {\n-      if (gimple_assign_copy_p (stmt)\n+      if (gimple_assign_single_p (stmt)\n \t  && gimple_assign_lhs (stmt) == gimple_assign_rhs1 (stmt)\n \t  && auto_var_in_fn_p (gimple_assign_lhs (stmt), id->src_fn))\n \t{\n@@ -1833,7 +1833,7 @@ remap_gimple_stmt (gimple *stmt, copy_body_data *id)\n \t  if (id->reset_location)\n \t    gimple_set_location (copy, input_location);\n \t  id->debug_stmts.safe_push (copy);\n-\t  gimple_seq_add_stmt (&stmts, copy);\n+\t  gimple_seq_add_stmt_without_update (&stmts, copy);\n \t  return stmts;\n \t}\n       if (gimple_debug_source_bind_p (stmt))\n@@ -1845,7 +1845,7 @@ remap_gimple_stmt (gimple *stmt, copy_body_data *id)\n \t  if (id->reset_location)\n \t    gimple_set_location (copy, input_location);\n \t  id->debug_stmts.safe_push (copy);\n-\t  gimple_seq_add_stmt (&stmts, copy);\n+\t  gimple_seq_add_stmt_without_update (&stmts, copy);\n \t  return stmts;\n \t}\n       if (gimple_debug_nonbind_marker_p (stmt))\n@@ -1859,7 +1859,7 @@ remap_gimple_stmt (gimple *stmt, copy_body_data *id)\n \n \t  gdebug *copy = as_a <gdebug *> (gimple_copy (stmt));\n \t  id->debug_stmts.safe_push (copy);\n-\t  gimple_seq_add_stmt (&stmts, copy);\n+\t  gimple_seq_add_stmt_without_update (&stmts, copy);\n \t  return stmts;\n \t}\n \n@@ -1967,7 +1967,7 @@ remap_gimple_stmt (gimple *stmt, copy_body_data *id)\n \t       !gsi_end_p (egsi);\n \t       gsi_next (&egsi))\n \t    walk_gimple_op (gsi_stmt (egsi), remap_gimple_op_r, &wi);\n-\t  gimple_seq_add_seq (&stmts, extra_stmts);\n+\t  gimple_seq_add_seq_without_update (&stmts, extra_stmts);\n \t}\n     }\n \n@@ -2006,14 +2006,14 @@ remap_gimple_stmt (gimple *stmt, copy_body_data *id)\n \t\t\t\t     gimple_cond_code (cond),\n \t\t\t\t     gimple_cond_lhs (cond),\n \t\t\t\t     gimple_cond_rhs (cond));\n-\t    gimple_seq_add_stmt (&stmts, cmp);\n+\t    gimple_seq_add_stmt_without_update (&stmts, cmp);\n \t    gimple_cond_set_code (cond, NE_EXPR);\n \t    gimple_cond_set_lhs (cond, gimple_assign_lhs (cmp));\n \t    gimple_cond_set_rhs (cond, boolean_false_node);\n \t  }\n     }\n \n-  gimple_seq_add_stmt (&stmts, copy);\n+  gimple_seq_add_stmt_without_update (&stmts, copy);\n   return stmts;\n }\n "}]}