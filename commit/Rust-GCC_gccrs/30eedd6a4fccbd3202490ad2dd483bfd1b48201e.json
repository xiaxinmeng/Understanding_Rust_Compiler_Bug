{"sha": "30eedd6a4fccbd3202490ad2dd483bfd1b48201e", "node_id": "C_kwDOANBUbNoAKDMwZWVkZDZhNGZjY2JkMzIwMjQ5MGFkMmRkNDgzYmZkMWI0ODIwMWU", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2023-02-08T20:58:37Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-02-12T07:15:02Z"}, "message": "RISC-V: Add vmsbc C++ API tests\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.target/riscv/rvv/base/vmsbc_vv-1.C: New test.\n\t* g++.target/riscv/rvv/base/vmsbc_vv-2.C: New test.\n\t* g++.target/riscv/rvv/base/vmsbc_vv-3.C: New test.\n\t* g++.target/riscv/rvv/base/vmsbc_vvm-1.C: New test.\n\t* g++.target/riscv/rvv/base/vmsbc_vvm-2.C: New test.\n\t* g++.target/riscv/rvv/base/vmsbc_vvm-3.C: New test.\n\t* g++.target/riscv/rvv/base/vmsbc_vx_rv32-1.C: New test.\n\t* g++.target/riscv/rvv/base/vmsbc_vx_rv32-2.C: New test.\n\t* g++.target/riscv/rvv/base/vmsbc_vx_rv32-3.C: New test.\n\t* g++.target/riscv/rvv/base/vmsbc_vx_rv64-1.C: New test.\n\t* g++.target/riscv/rvv/base/vmsbc_vx_rv64-2.C: New test.\n\t* g++.target/riscv/rvv/base/vmsbc_vx_rv64-3.C: New test.\n\t* g++.target/riscv/rvv/base/vmsbc_vxm_rv32-1.C: New test.\n\t* g++.target/riscv/rvv/base/vmsbc_vxm_rv32-2.C: New test.\n\t* g++.target/riscv/rvv/base/vmsbc_vxm_rv32-3.C: New test.\n\t* g++.target/riscv/rvv/base/vmsbc_vxm_rv64-1.C: New test.\n\t* g++.target/riscv/rvv/base/vmsbc_vxm_rv64-2.C: New test.\n\t* g++.target/riscv/rvv/base/vmsbc_vxm_rv64-3.C: New test.", "tree": {"sha": "3ef031198cb4fd38709e8c5af1b236b39416ead4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ef031198cb4fd38709e8c5af1b236b39416ead4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30eedd6a4fccbd3202490ad2dd483bfd1b48201e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30eedd6a4fccbd3202490ad2dd483bfd1b48201e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30eedd6a4fccbd3202490ad2dd483bfd1b48201e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "485c710b4e698eaef62e4a0037a173a876734c21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/485c710b4e698eaef62e4a0037a173a876734c21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/485c710b4e698eaef62e4a0037a173a876734c21"}], "stats": {"total": 5238, "additions": 5238, "deletions": 0}, "files": [{"sha": "b90a5183d722e93a7588401dbb29d3502dd21275", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vmsbc_vv-1.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vv-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vv-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vv-1.C?ref=30eedd6a4fccbd3202490ad2dd483bfd1b48201e", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vbool64_t test___riscv_vmsbc(vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint8m1_t op1,vint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint8m2_t op1,vint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vint8m4_t op1,vint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc(vint8m8_t op1,vint8m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint16m1_t op1,vint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint16m2_t op1,vint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint16m4_t op1,vint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vint16m8_t op1,vint16m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint32m1_t op1,vint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint32m2_t op1,vint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint32m4_t op1,vint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint32m8_t op1,vint32m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint64m1_t op1,vint64m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint64m2_t op1,vint64m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint64m4_t op1,vint64m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint64m8_t op1,vint64m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint8m1_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint8m2_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vuint8m4_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc(vuint8m8_t op1,vuint8m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint16m1_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint16m2_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint16m4_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vuint16m8_t op1,vuint16m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint32m1_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint32m2_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint32m4_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint32m8_t op1,vuint32m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint64m1_t op1,vuint64m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint64m2_t op1,vuint64m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint64m4_t op1,vuint64m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint64m8_t op1,vuint64m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */"}, {"sha": "6c7d2720c6671015a59efafa833d4b4952afd18a", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vmsbc_vv-2.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vv-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vv-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vv-2.C?ref=30eedd6a4fccbd3202490ad2dd483bfd1b48201e", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vbool64_t test___riscv_vmsbc(vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint8m1_t op1,vint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint8m2_t op1,vint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vint8m4_t op1,vint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc(vint8m8_t op1,vint8m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint16m1_t op1,vint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint16m2_t op1,vint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint16m4_t op1,vint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vint16m8_t op1,vint16m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint32m1_t op1,vint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint32m2_t op1,vint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint32m4_t op1,vint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint32m8_t op1,vint32m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint64m1_t op1,vint64m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint64m2_t op1,vint64m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint64m4_t op1,vint64m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint64m8_t op1,vint64m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint8m1_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint8m2_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vuint8m4_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc(vuint8m8_t op1,vuint8m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint16m1_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint16m2_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint16m4_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vuint16m8_t op1,vuint16m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint32m1_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint32m2_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint32m4_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint32m8_t op1,vuint32m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint64m1_t op1,vuint64m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint64m2_t op1,vuint64m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint64m4_t op1,vuint64m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint64m8_t op1,vuint64m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */"}, {"sha": "a2e931c8f1f7c2842e2fa7447dccfcc1d6e4e274", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vmsbc_vv-3.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vv-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vv-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vv-3.C?ref=30eedd6a4fccbd3202490ad2dd483bfd1b48201e", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vbool64_t test___riscv_vmsbc(vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint8m1_t op1,vint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint8m2_t op1,vint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vint8m4_t op1,vint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc(vint8m8_t op1,vint8m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint16m1_t op1,vint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint16m2_t op1,vint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint16m4_t op1,vint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vint16m8_t op1,vint16m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint32m1_t op1,vint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint32m2_t op1,vint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint32m4_t op1,vint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint32m8_t op1,vint32m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint64m1_t op1,vint64m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint64m2_t op1,vint64m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint64m4_t op1,vint64m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint64m8_t op1,vint64m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint8m1_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint8m2_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vuint8m4_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc(vuint8m8_t op1,vuint8m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint16m1_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint16m2_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint16m4_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vuint16m8_t op1,vuint16m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint32m1_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint32m2_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint32m4_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint32m8_t op1,vuint32m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint64m1_t op1,vuint64m1_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint64m2_t op1,vuint64m2_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint64m4_t op1,vuint64m4_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint64m8_t op1,vuint64m8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */"}, {"sha": "f49cc379eec9acd9bd196a1dc99364033f0f2cb3", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vmsbc_vvm-1.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vvm-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vvm-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vvm-1.C?ref=30eedd6a4fccbd3202490ad2dd483bfd1b48201e", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vbool64_t test___riscv_vmsbc(vint8mf8_t op1,vint8mf8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint8mf4_t op1,vint8mf4_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint8mf2_t op1,vint8mf2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint8m1_t op1,vint8m1_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint8m2_t op1,vint8m2_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vint8m4_t op1,vint8m4_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc(vint8m8_t op1,vint8m8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint16mf4_t op1,vint16mf4_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint16mf2_t op1,vint16mf2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint16m1_t op1,vint16m1_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint16m2_t op1,vint16m2_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint16m4_t op1,vint16m4_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vint16m8_t op1,vint16m8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint32mf2_t op1,vint32mf2_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint32m1_t op1,vint32m1_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint32m2_t op1,vint32m2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint32m4_t op1,vint32m4_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint32m8_t op1,vint32m8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint64m1_t op1,vint64m1_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint64m2_t op1,vint64m2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint64m4_t op1,vint64m4_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint64m8_t op1,vint64m8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint8mf8_t op1,vuint8mf8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint8mf4_t op1,vuint8mf4_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint8mf2_t op1,vuint8mf2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint8m1_t op1,vuint8m1_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint8m2_t op1,vuint8m2_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vuint8m4_t op1,vuint8m4_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc(vuint8m8_t op1,vuint8m8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint16mf4_t op1,vuint16mf4_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint16mf2_t op1,vuint16mf2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint16m1_t op1,vuint16m1_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint16m2_t op1,vuint16m2_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint16m4_t op1,vuint16m4_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vuint16m8_t op1,vuint16m8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint32mf2_t op1,vuint32mf2_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint32m1_t op1,vuint32m1_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint32m2_t op1,vuint32m2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint32m4_t op1,vuint32m4_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint32m8_t op1,vuint32m8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint64m1_t op1,vuint64m1_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint64m2_t op1,vuint64m2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint64m4_t op1,vuint64m4_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint64m8_t op1,vuint64m8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */"}, {"sha": "c8e23b99c4e609308298f69c2d0f5a95622b7a64", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vmsbc_vvm-2.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vvm-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vvm-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vvm-2.C?ref=30eedd6a4fccbd3202490ad2dd483bfd1b48201e", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vbool64_t test___riscv_vmsbc(vint8mf8_t op1,vint8mf8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint8mf4_t op1,vint8mf4_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint8mf2_t op1,vint8mf2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint8m1_t op1,vint8m1_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint8m2_t op1,vint8m2_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vint8m4_t op1,vint8m4_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc(vint8m8_t op1,vint8m8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint16mf4_t op1,vint16mf4_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint16mf2_t op1,vint16mf2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint16m1_t op1,vint16m1_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint16m2_t op1,vint16m2_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint16m4_t op1,vint16m4_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vint16m8_t op1,vint16m8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint32mf2_t op1,vint32mf2_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint32m1_t op1,vint32m1_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint32m2_t op1,vint32m2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint32m4_t op1,vint32m4_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint32m8_t op1,vint32m8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint64m1_t op1,vint64m1_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint64m2_t op1,vint64m2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint64m4_t op1,vint64m4_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint64m8_t op1,vint64m8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint8mf8_t op1,vuint8mf8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint8mf4_t op1,vuint8mf4_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint8mf2_t op1,vuint8mf2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint8m1_t op1,vuint8m1_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint8m2_t op1,vuint8m2_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vuint8m4_t op1,vuint8m4_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc(vuint8m8_t op1,vuint8m8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint16mf4_t op1,vuint16mf4_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint16mf2_t op1,vuint16mf2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint16m1_t op1,vuint16m1_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint16m2_t op1,vuint16m2_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint16m4_t op1,vuint16m4_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vuint16m8_t op1,vuint16m8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint32mf2_t op1,vuint32mf2_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint32m1_t op1,vuint32m1_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint32m2_t op1,vuint32m2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint32m4_t op1,vuint32m4_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint32m8_t op1,vuint32m8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint64m1_t op1,vuint64m1_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint64m2_t op1,vuint64m2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint64m4_t op1,vuint64m4_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint64m8_t op1,vuint64m8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */"}, {"sha": "175c72b3b1016743cab00b84d310b459ba0abd6c", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vmsbc_vvm-3.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vvm-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vvm-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vvm-3.C?ref=30eedd6a4fccbd3202490ad2dd483bfd1b48201e", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vbool64_t test___riscv_vmsbc(vint8mf8_t op1,vint8mf8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint8mf4_t op1,vint8mf4_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint8mf2_t op1,vint8mf2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint8m1_t op1,vint8m1_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint8m2_t op1,vint8m2_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vint8m4_t op1,vint8m4_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc(vint8m8_t op1,vint8m8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint16mf4_t op1,vint16mf4_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint16mf2_t op1,vint16mf2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint16m1_t op1,vint16m1_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint16m2_t op1,vint16m2_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint16m4_t op1,vint16m4_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vint16m8_t op1,vint16m8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint32mf2_t op1,vint32mf2_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint32m1_t op1,vint32m1_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint32m2_t op1,vint32m2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint32m4_t op1,vint32m4_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint32m8_t op1,vint32m8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint64m1_t op1,vint64m1_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint64m2_t op1,vint64m2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint64m4_t op1,vint64m4_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint64m8_t op1,vint64m8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint8mf8_t op1,vuint8mf8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint8mf4_t op1,vuint8mf4_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint8mf2_t op1,vuint8mf2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint8m1_t op1,vuint8m1_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint8m2_t op1,vuint8m2_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vuint8m4_t op1,vuint8m4_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc(vuint8m8_t op1,vuint8m8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint16mf4_t op1,vuint16mf4_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint16mf2_t op1,vuint16mf2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint16m1_t op1,vuint16m1_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint16m2_t op1,vuint16m2_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint16m4_t op1,vuint16m4_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vuint16m8_t op1,vuint16m8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint32mf2_t op1,vuint32mf2_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint32m1_t op1,vuint32m1_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint32m2_t op1,vuint32m2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint32m4_t op1,vuint32m4_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint32m8_t op1,vuint32m8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint64m1_t op1,vuint64m1_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint64m2_t op1,vuint64m2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint64m4_t op1,vuint64m4_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint64m8_t op1,vuint64m8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */"}, {"sha": "5de53e3f948fb07e0d14e0d6809dc6a33673e5b5", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vmsbc_vx_rv32-1.C", "status": "added", "additions": 289, "deletions": 0, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vx_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vx_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vx_rv32-1.C?ref=30eedd6a4fccbd3202490ad2dd483bfd1b48201e", "patch": "@@ -0,0 +1,289 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vbool64_t test___riscv_vmsbc(vint8mf8_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint8mf4_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint8mf2_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint8m1_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint8m2_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vint8m4_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc(vint8m8_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint16mf4_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint16mf2_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint16m1_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint16m2_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint16m4_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vint16m8_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint32mf2_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint32m1_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint32m2_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint32m4_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint32m8_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint64m1_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint64m2_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint64m4_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint64m8_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint8mf8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint8mf4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint8mf2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint8m1_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint8m2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vuint8m4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc(vuint8m8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint16mf4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint16mf2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint16m1_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint16m2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint16m4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vuint16m8_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint32mf2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint32m1_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint32m2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint32m4_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint32m8_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint64m1_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint64m2_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint64m4_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint64m8_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 8 } } */"}, {"sha": "9eb3ca6abee4b06d1d07e290bd567bf625c96686", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vmsbc_vx_rv32-2.C", "status": "added", "additions": 289, "deletions": 0, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vx_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vx_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vx_rv32-2.C?ref=30eedd6a4fccbd3202490ad2dd483bfd1b48201e", "patch": "@@ -0,0 +1,289 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vbool64_t test___riscv_vmsbc(vint8mf8_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint8mf4_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint8mf2_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint8m1_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint8m2_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vint8m4_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc(vint8m8_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint16mf4_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint16mf2_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint16m1_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint16m2_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint16m4_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vint16m8_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint32mf2_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint32m1_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint32m2_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint32m4_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint32m8_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint64m1_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint64m2_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint64m4_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint64m8_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint8mf8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint8mf4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint8mf2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint8m1_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint8m2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vuint8m4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc(vuint8m8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint16mf4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint16mf2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint16m1_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint16m2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint16m4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vuint16m8_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint32mf2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint32m1_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint32m2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint32m4_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint32m8_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint64m1_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint64m2_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint64m4_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint64m8_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 8 } } */"}, {"sha": "19cd0b9abff6763cf8926f5e7dbc875b72c79bcb", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vmsbc_vx_rv32-3.C", "status": "added", "additions": 289, "deletions": 0, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vx_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vx_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vx_rv32-3.C?ref=30eedd6a4fccbd3202490ad2dd483bfd1b48201e", "patch": "@@ -0,0 +1,289 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vbool64_t test___riscv_vmsbc(vint8mf8_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint8mf4_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint8mf2_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint8m1_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint8m2_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vint8m4_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc(vint8m8_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint16mf4_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint16mf2_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint16m1_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint16m2_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint16m4_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vint16m8_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint32mf2_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint32m1_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint32m2_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint32m4_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint32m8_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint64m1_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint64m2_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint64m4_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint64m8_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint8mf8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint8mf4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint8mf2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint8m1_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint8m2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vuint8m4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc(vuint8m8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint16mf4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint16mf2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint16m1_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint16m2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint16m4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vuint16m8_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint32mf2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint32m1_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint32m2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint32m4_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint32m8_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint64m1_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint64m2_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint64m4_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint64m8_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vmsbc\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 8 } } */"}, {"sha": "34db39e19de60c6894c147e85c6f65828c4c1489", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vmsbc_vx_rv64-1.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vx_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vx_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vx_rv64-1.C?ref=30eedd6a4fccbd3202490ad2dd483bfd1b48201e", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vbool64_t test___riscv_vmsbc(vint8mf8_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint8mf4_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint8mf2_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint8m1_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint8m2_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vint8m4_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc(vint8m8_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint16mf4_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint16mf2_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint16m1_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint16m2_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint16m4_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vint16m8_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint32mf2_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint32m1_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint32m2_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint32m4_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint32m8_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint64m1_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint64m2_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint64m4_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint64m8_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint8mf8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint8mf4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint8mf2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint8m1_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint8m2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vuint8m4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc(vuint8m8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint16mf4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint16mf2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint16m1_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint16m2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint16m4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vuint16m8_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint32mf2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint32m1_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint32m2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint32m4_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint32m8_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint64m1_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint64m2_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint64m4_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint64m8_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */"}, {"sha": "3e8189b263644c4a7bd5b6b2116c3f7ab4fb6782", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vmsbc_vx_rv64-2.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vx_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vx_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vx_rv64-2.C?ref=30eedd6a4fccbd3202490ad2dd483bfd1b48201e", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vbool64_t test___riscv_vmsbc(vint8mf8_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint8mf4_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint8mf2_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint8m1_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint8m2_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vint8m4_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc(vint8m8_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint16mf4_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint16mf2_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint16m1_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint16m2_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint16m4_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vint16m8_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint32mf2_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint32m1_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint32m2_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint32m4_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint32m8_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint64m1_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint64m2_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint64m4_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint64m8_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint8mf8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint8mf4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint8mf2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint8m1_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint8m2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vuint8m4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc(vuint8m8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint16mf4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint16mf2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint16m1_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint16m2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint16m4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vuint16m8_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint32mf2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint32m1_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint32m2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint32m4_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint32m8_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint64m1_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint64m2_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint64m4_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint64m8_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */"}, {"sha": "f4d252b24dca615b81f476cc5f8509c91396a544", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vmsbc_vx_rv64-3.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vx_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vx_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vx_rv64-3.C?ref=30eedd6a4fccbd3202490ad2dd483bfd1b48201e", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vbool64_t test___riscv_vmsbc(vint8mf8_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint8mf4_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint8mf2_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint8m1_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint8m2_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vint8m4_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc(vint8m8_t op1,int8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint16mf4_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint16mf2_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint16m1_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint16m2_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint16m4_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vint16m8_t op1,int16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint32mf2_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint32m1_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint32m2_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint32m4_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint32m8_t op1,int32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint64m1_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint64m2_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint64m4_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint64m8_t op1,int64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint8mf8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint8mf4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint8mf2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint8m1_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint8m2_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vuint8m4_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc(vuint8m8_t op1,uint8_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint16mf4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint16mf2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint16m1_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint16m2_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint16m4_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vuint16m8_t op1,uint16_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint32mf2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint32m1_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint32m2_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint32m4_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint32m8_t op1,uint32_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint64m1_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint64m2_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint64m4_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint64m8_t op1,uint64_t op2,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 2 } } */"}, {"sha": "9b8e942a9dbff83cac892816d86f929d7b4d2ed9", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vmsbc_vxm_rv32-1.C", "status": "added", "additions": 289, "deletions": 0, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vxm_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vxm_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vxm_rv32-1.C?ref=30eedd6a4fccbd3202490ad2dd483bfd1b48201e", "patch": "@@ -0,0 +1,289 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vbool64_t test___riscv_vmsbc(vint8mf8_t op1,int8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint8mf4_t op1,int8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint8mf2_t op1,int8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint8m1_t op1,int8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint8m2_t op1,int8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vint8m4_t op1,int8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc(vint8m8_t op1,int8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint16mf4_t op1,int16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint16mf2_t op1,int16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint16m1_t op1,int16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint16m2_t op1,int16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint16m4_t op1,int16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vint16m8_t op1,int16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint32mf2_t op1,int32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint32m1_t op1,int32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint32m2_t op1,int32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint32m4_t op1,int32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint32m8_t op1,int32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint64m1_t op1,int64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint64m2_t op1,int64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint64m4_t op1,int64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint64m8_t op1,int64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint8mf8_t op1,uint8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint8mf4_t op1,uint8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint8mf2_t op1,uint8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint8m1_t op1,uint8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint8m2_t op1,uint8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vuint8m4_t op1,uint8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc(vuint8m8_t op1,uint8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint16mf4_t op1,uint16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint16mf2_t op1,uint16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint16m1_t op1,uint16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint16m2_t op1,uint16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint16m4_t op1,uint16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vuint16m8_t op1,uint16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint32mf2_t op1,uint32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint32m1_t op1,uint32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint32m2_t op1,uint32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint32m4_t op1,uint32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint32m8_t op1,uint32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint64m1_t op1,uint64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint64m2_t op1,uint64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint64m4_t op1,uint64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint64m8_t op1,uint64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 8 } } */"}, {"sha": "6d560fcd48209d7561ff42ce8e846b5f3cf7bc85", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vmsbc_vxm_rv32-2.C", "status": "added", "additions": 289, "deletions": 0, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vxm_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vxm_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vxm_rv32-2.C?ref=30eedd6a4fccbd3202490ad2dd483bfd1b48201e", "patch": "@@ -0,0 +1,289 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vbool64_t test___riscv_vmsbc(vint8mf8_t op1,int8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint8mf4_t op1,int8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint8mf2_t op1,int8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint8m1_t op1,int8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint8m2_t op1,int8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vint8m4_t op1,int8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc(vint8m8_t op1,int8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint16mf4_t op1,int16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint16mf2_t op1,int16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint16m1_t op1,int16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint16m2_t op1,int16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint16m4_t op1,int16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vint16m8_t op1,int16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint32mf2_t op1,int32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint32m1_t op1,int32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint32m2_t op1,int32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint32m4_t op1,int32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint32m8_t op1,int32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint64m1_t op1,int64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint64m2_t op1,int64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint64m4_t op1,int64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint64m8_t op1,int64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint8mf8_t op1,uint8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint8mf4_t op1,uint8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint8mf2_t op1,uint8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint8m1_t op1,uint8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint8m2_t op1,uint8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vuint8m4_t op1,uint8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc(vuint8m8_t op1,uint8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint16mf4_t op1,uint16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint16mf2_t op1,uint16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint16m1_t op1,uint16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint16m2_t op1,uint16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint16m4_t op1,uint16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vuint16m8_t op1,uint16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint32mf2_t op1,uint32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint32m1_t op1,uint32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint32m2_t op1,uint32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint32m4_t op1,uint32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint32m8_t op1,uint32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint64m1_t op1,uint64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint64m2_t op1,uint64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint64m4_t op1,uint64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint64m8_t op1,uint64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 8 } } */"}, {"sha": "363d34253de54241282e272de1747f5f2cee7875", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vmsbc_vxm_rv32-3.C", "status": "added", "additions": 289, "deletions": 0, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vxm_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vxm_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vxm_rv32-3.C?ref=30eedd6a4fccbd3202490ad2dd483bfd1b48201e", "patch": "@@ -0,0 +1,289 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vbool64_t test___riscv_vmsbc(vint8mf8_t op1,int8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint8mf4_t op1,int8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint8mf2_t op1,int8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint8m1_t op1,int8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint8m2_t op1,int8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vint8m4_t op1,int8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc(vint8m8_t op1,int8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint16mf4_t op1,int16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint16mf2_t op1,int16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint16m1_t op1,int16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint16m2_t op1,int16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint16m4_t op1,int16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vint16m8_t op1,int16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint32mf2_t op1,int32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint32m1_t op1,int32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint32m2_t op1,int32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint32m4_t op1,int32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint32m8_t op1,int32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint64m1_t op1,int64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint64m2_t op1,int64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint64m4_t op1,int64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint64m8_t op1,int64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint8mf8_t op1,uint8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint8mf4_t op1,uint8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint8mf2_t op1,uint8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint8m1_t op1,uint8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint8m2_t op1,uint8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vuint8m4_t op1,uint8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc(vuint8m8_t op1,uint8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint16mf4_t op1,uint16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint16mf2_t op1,uint16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint16m1_t op1,uint16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint16m2_t op1,uint16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint16m4_t op1,uint16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vuint16m8_t op1,uint16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint32mf2_t op1,uint32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint32m1_t op1,uint32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint32m2_t op1,uint32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint32m4_t op1,uint32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint32m8_t op1,uint32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint64m1_t op1,uint64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint64m2_t op1,uint64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint64m4_t op1,uint64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint64m8_t op1,uint64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vmsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 8 } } */"}, {"sha": "a37f49d881ef06fabe4c49544491fdfcbc1d6718", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vmsbc_vxm_rv64-1.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vxm_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vxm_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vxm_rv64-1.C?ref=30eedd6a4fccbd3202490ad2dd483bfd1b48201e", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vbool64_t test___riscv_vmsbc(vint8mf8_t op1,int8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint8mf4_t op1,int8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint8mf2_t op1,int8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint8m1_t op1,int8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint8m2_t op1,int8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vint8m4_t op1,int8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc(vint8m8_t op1,int8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint16mf4_t op1,int16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint16mf2_t op1,int16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint16m1_t op1,int16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint16m2_t op1,int16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint16m4_t op1,int16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vint16m8_t op1,int16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint32mf2_t op1,int32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint32m1_t op1,int32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint32m2_t op1,int32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint32m4_t op1,int32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint32m8_t op1,int32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint64m1_t op1,int64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint64m2_t op1,int64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint64m4_t op1,int64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint64m8_t op1,int64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint8mf8_t op1,uint8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint8mf4_t op1,uint8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint8mf2_t op1,uint8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint8m1_t op1,uint8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint8m2_t op1,uint8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vuint8m4_t op1,uint8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc(vuint8m8_t op1,uint8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint16mf4_t op1,uint16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint16mf2_t op1,uint16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint16m1_t op1,uint16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint16m2_t op1,uint16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint16m4_t op1,uint16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vuint16m8_t op1,uint16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint32mf2_t op1,uint32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint32m1_t op1,uint32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint32m2_t op1,uint32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint32m4_t op1,uint32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint32m8_t op1,uint32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint64m1_t op1,uint64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint64m2_t op1,uint64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint64m4_t op1,uint64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint64m8_t op1,uint64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */"}, {"sha": "cd47571f49af8715a108309bf91bd99578170426", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vmsbc_vxm_rv64-2.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vxm_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vxm_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vxm_rv64-2.C?ref=30eedd6a4fccbd3202490ad2dd483bfd1b48201e", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vbool64_t test___riscv_vmsbc(vint8mf8_t op1,int8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint8mf4_t op1,int8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint8mf2_t op1,int8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint8m1_t op1,int8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint8m2_t op1,int8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vint8m4_t op1,int8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc(vint8m8_t op1,int8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint16mf4_t op1,int16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint16mf2_t op1,int16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint16m1_t op1,int16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint16m2_t op1,int16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint16m4_t op1,int16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vint16m8_t op1,int16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint32mf2_t op1,int32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint32m1_t op1,int32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint32m2_t op1,int32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint32m4_t op1,int32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint32m8_t op1,int32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint64m1_t op1,int64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint64m2_t op1,int64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint64m4_t op1,int64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint64m8_t op1,int64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint8mf8_t op1,uint8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint8mf4_t op1,uint8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint8mf2_t op1,uint8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint8m1_t op1,uint8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint8m2_t op1,uint8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vuint8m4_t op1,uint8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc(vuint8m8_t op1,uint8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint16mf4_t op1,uint16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint16mf2_t op1,uint16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint16m1_t op1,uint16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint16m2_t op1,uint16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint16m4_t op1,uint16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vuint16m8_t op1,uint16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint32mf2_t op1,uint32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint32m1_t op1,uint32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint32m2_t op1,uint32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint32m4_t op1,uint32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint32m8_t op1,uint32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint64m1_t op1,uint64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint64m2_t op1,uint64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint64m4_t op1,uint64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint64m8_t op1,uint64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */"}, {"sha": "892df21c01e3f94b6cc257d78494b1268b5c49d5", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vmsbc_vxm_rv64-3.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vxm_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30eedd6a4fccbd3202490ad2dd483bfd1b48201e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vxm_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvmsbc_vxm_rv64-3.C?ref=30eedd6a4fccbd3202490ad2dd483bfd1b48201e", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vbool64_t test___riscv_vmsbc(vint8mf8_t op1,int8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint8mf4_t op1,int8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint8mf2_t op1,int8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint8m1_t op1,int8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint8m2_t op1,int8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vint8m4_t op1,int8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc(vint8m8_t op1,int8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint16mf4_t op1,int16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint16mf2_t op1,int16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint16m1_t op1,int16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint16m2_t op1,int16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint16m4_t op1,int16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vint16m8_t op1,int16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint32mf2_t op1,int32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint32m1_t op1,int32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint32m2_t op1,int32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint32m4_t op1,int32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vint32m8_t op1,int32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vint64m1_t op1,int64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vint64m2_t op1,int64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vint64m4_t op1,int64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vint64m8_t op1,int64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint8mf8_t op1,uint8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint8mf4_t op1,uint8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint8mf2_t op1,uint8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint8m1_t op1,uint8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint8m2_t op1,uint8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vuint8m4_t op1,uint8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool1_t test___riscv_vmsbc(vuint8m8_t op1,uint8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint16mf4_t op1,uint16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint16mf2_t op1,uint16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint16m1_t op1,uint16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint16m2_t op1,uint16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint16m4_t op1,uint16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool2_t test___riscv_vmsbc(vuint16m8_t op1,uint16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint32mf2_t op1,uint32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint32m1_t op1,uint32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint32m2_t op1,uint32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint32m4_t op1,uint32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool4_t test___riscv_vmsbc(vuint32m8_t op1,uint32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool64_t test___riscv_vmsbc(vuint64m1_t op1,uint64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool32_t test___riscv_vmsbc(vuint64m2_t op1,uint64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool16_t test___riscv_vmsbc(vuint64m4_t op1,uint64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+vbool8_t test___riscv_vmsbc(vuint64m8_t op1,uint64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vmsbc(op1,op2,borrowin,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */"}]}