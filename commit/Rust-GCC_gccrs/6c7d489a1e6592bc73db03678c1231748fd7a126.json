{"sha": "6c7d489a1e6592bc73db03678c1231748fd7a126", "node_id": "C_kwDOANBUbNoAKDZjN2Q0ODlhMWU2NTkyYmM3M2RiMDM2NzhjMTIzMTc0OGZkN2ExMjY", "commit": {"author": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2021-11-30T03:22:32Z"}, "committer": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2021-11-30T03:22:32Z"}, "message": "rs6000: Remove builtin mask check from builtin_decl [PR102347]\n\nAs the discussion in PR102347, currently builtin_decl is invoked so\nearly, it's when making up the function_decl for builtin functions,\nat that time the rs6000_builtin_mask could be wrong for those\nbuiltins sitting in #pragma/attribute target functions, though it\nwill be updated properly later when LTO processes all nodes.\n\nThis patch is to align with the practice i386 port adopts, also\nalign with r10-7462 by relaxing builtin mask checking in some places.\n\ngcc/ChangeLog:\n\n\tPR target/102347\n\t* config/rs6000/rs6000-call.c (rs6000_builtin_decl): Remove builtin mask\n\tcheck.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/102347\n\t* gcc.target/powerpc/pr102347.c: New test.", "tree": {"sha": "f8bc09379c1a4dcbb0de0b7ab4f2e3dfede31599", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8bc09379c1a4dcbb0de0b7ab4f2e3dfede31599"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c7d489a1e6592bc73db03678c1231748fd7a126", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c7d489a1e6592bc73db03678c1231748fd7a126", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c7d489a1e6592bc73db03678c1231748fd7a126", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c7d489a1e6592bc73db03678c1231748fd7a126/comments", "author": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aca68829d723a11f73b84d59401568015959f432", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aca68829d723a11f73b84d59401568015959f432", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aca68829d723a11f73b84d59401568015959f432"}], "stats": {"total": 29, "additions": 19, "deletions": 10}, "files": [{"sha": "cd477fa4876607b4613c9f57ef78a0afa18790fa", "filename": "gcc/config/rs6000/rs6000-call.c", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c7d489a1e6592bc73db03678c1231748fd7a126/gcc%2Fconfig%2Frs6000%2Frs6000-call.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c7d489a1e6592bc73db03678c1231748fd7a126/gcc%2Fconfig%2Frs6000%2Frs6000-call.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-call.c?ref=6c7d489a1e6592bc73db03678c1231748fd7a126", "patch": "@@ -16633,26 +16633,20 @@ rs6000_new_builtin_decl (unsigned code, bool /* initialize_p */)\n   return rs6000_builtin_decls_x[code];\n }\n \n-/* Returns the rs6000 builtin decl for CODE.  */\n+/* Returns the rs6000 builtin decl for CODE.  Note that we don't check\n+   the builtin mask here since there could be some #pragma/attribute\n+   target functions and the rs6000_builtin_mask could be wrong when\n+   this checking happens, though it will be updated properly later.  */\n \n tree\n rs6000_builtin_decl (unsigned code, bool initialize_p ATTRIBUTE_UNUSED)\n {\n   if (new_builtins_are_live)\n     return rs6000_new_builtin_decl (code, initialize_p);\n \n-  HOST_WIDE_INT fnmask;\n-\n   if (code >= RS6000_BUILTIN_COUNT)\n     return error_mark_node;\n \n-  fnmask = rs6000_builtin_info[code].mask;\n-  if ((fnmask & rs6000_builtin_mask) != fnmask)\n-    {\n-      rs6000_invalid_builtin ((enum rs6000_builtins)code);\n-      return error_mark_node;\n-    }\n-\n   return rs6000_builtin_decls[code];\n }\n "}, {"sha": "05c439a8dac172d3cf6dd25ec0033f7465f14780", "filename": "gcc/testsuite/gcc.target/powerpc/pr102347.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c7d489a1e6592bc73db03678c1231748fd7a126/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr102347.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c7d489a1e6592bc73db03678c1231748fd7a126/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr102347.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr102347.c?ref=6c7d489a1e6592bc73db03678c1231748fd7a126", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do link } */\n+/* { dg-require-effective-target power10_ok } */\n+/* { dg-require-effective-target lto } */\n+/* { dg-options \"-flto -mdejagnu-cpu=power9\" } */\n+\n+/* Verify there are no error messages in LTO mode.  */\n+\n+#pragma GCC target \"cpu=power10\"\n+int main ()\n+{\n+  float *b;\n+  __vector_quad c;\n+  __builtin_mma_disassemble_acc (b, &c);\n+  return 0;\n+}"}]}