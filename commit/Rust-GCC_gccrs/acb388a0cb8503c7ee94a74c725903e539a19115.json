{"sha": "acb388a0cb8503c7ee94a74c725903e539a19115", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWNiMzg4YTBjYjg1MDNjN2VlOTRhNzRjNzI1OTAzZTUzOWExOTExNQ==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2008-05-16T16:44:28Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2008-05-16T16:44:28Z"}, "message": "re PR fortran/34325 (Wrong error message for syntax error)\n\n2008-05-16  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n    PR fortran/34325\n    * decl.c (match_attr_spec): Check for matching pairs of parenthesis.\n    * expr.c (gfc_specification_expr): Supplement the error message with the\n    type that was found.\n    * resolve.c (gfc_resolve_index): Likewise.\n    * match.c (gfc_match_parens): Clarify error message with \"at or before\".\n    (gfc_match_do): Check for matching pairs of parenthesis.\n\nFrom-SVN: r135428", "tree": {"sha": "6527e06cef13e036e6dae35e43a6daa568e57d2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6527e06cef13e036e6dae35e43a6daa568e57d2f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/acb388a0cb8503c7ee94a74c725903e539a19115", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acb388a0cb8503c7ee94a74c725903e539a19115", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acb388a0cb8503c7ee94a74c725903e539a19115", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acb388a0cb8503c7ee94a74c725903e539a19115/comments", "author": null, "committer": null, "parents": [{"sha": "d1325932580a13fea6ce6e257c30e756405d5ac3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1325932580a13fea6ce6e257c30e756405d5ac3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1325932580a13fea6ce6e257c30e756405d5ac3"}], "stats": {"total": 34, "additions": 28, "deletions": 6}, "files": [{"sha": "73bd3e295a65b6d385c052b306bda1fa2a5b6d5f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acb388a0cb8503c7ee94a74c725903e539a19115/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acb388a0cb8503c7ee94a74c725903e539a19115/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=acb388a0cb8503c7ee94a74c725903e539a19115", "patch": "@@ -1,3 +1,13 @@\n+2008-05-16  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+    PR fortran/34325\n+    * decl.c (match_attr_spec): Check for matching pairs of parenthesis.\n+    * expr.c (gfc_specification_expr): Supplement the error message with the\n+    type that was found.\n+    * resolve.c (gfc_resolve_index): Likewise.\n+    * match.c (gfc_match_parens): Clarify error message with \"at or before\".\n+    (gfc_match_do): Check for matching pairs of parenthesis.\n+\n 2008-05-16  Tobias Burnus  <burnus@net-b.de\n \n \t* intrinsic.texi: Write Fortran 77/90/95 instead of F77/90/95;"}, {"sha": "5a1ce038f1fc0e322c4c8a2f7ca1f2d5c88ed984", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acb388a0cb8503c7ee94a74c725903e539a19115/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acb388a0cb8503c7ee94a74c725903e539a19115/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=acb388a0cb8503c7ee94a74c725903e539a19115", "patch": "@@ -2934,6 +2934,13 @@ match_attr_spec (void)\n \t  goto cleanup;\n \t}\n \n+      /* Check to make sure any parens are paired up correctly.  */\n+      if (gfc_match_parens () == MATCH_ERROR)\n+\t{\n+\t  m = MATCH_ERROR;\n+\t  goto cleanup;\n+\t}\n+\n       seen[d]++;\n       seen_at[d] = gfc_current_locus;\n "}, {"sha": "e6c1e4e9dbec0987c59e585a38c4e4390d5f7909", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acb388a0cb8503c7ee94a74c725903e539a19115/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acb388a0cb8503c7ee94a74c725903e539a19115/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=acb388a0cb8503c7ee94a74c725903e539a19115", "patch": "@@ -2573,7 +2573,8 @@ gfc_specification_expr (gfc_expr *e)\n \n   if (e->ts.type != BT_INTEGER)\n     {\n-      gfc_error (\"Expression at %L must be of INTEGER type\", &e->where);\n+      gfc_error (\"Expression at %L must be of INTEGER type, found %s\",\n+\t\t &e->where, gfc_basic_typename (e->ts.type));\n       return FAILURE;\n     }\n "}, {"sha": "d3f665f4440ee6703ed7a4d34deb5e217cfa283d", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acb388a0cb8503c7ee94a74c725903e539a19115/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acb388a0cb8503c7ee94a74c725903e539a19115/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=acb388a0cb8503c7ee94a74c725903e539a19115", "patch": "@@ -153,12 +153,12 @@ gfc_match_parens (void)\n \n   if (count > 0)\n     {\n-      gfc_error (\"Missing ')' in statement before %L\", &where);\n+      gfc_error (\"Missing ')' in statement at or before %L\", &where);\n       return MATCH_ERROR;\n     }\n   if (count < 0)\n     {\n-      gfc_error (\"Missing '(' in statement before %L\", &where);\n+      gfc_error (\"Missing '(' in statement at or before %L\", &where);\n       return MATCH_ERROR;\n     }\n \n@@ -553,7 +553,6 @@ gfc_match_name (char *buffer)\n       return MATCH_ERROR;\n     }\n \n-\n   buffer[i] = '\\0';\n   gfc_current_locus = old_loc;\n \n@@ -1749,6 +1748,11 @@ gfc_match_do (void)\n   if (gfc_match_char (',') != MATCH_YES && gfc_match (\"% \") != MATCH_YES)\n     return MATCH_NO;\n \n+  /* Check for balanced parens.  */\n+  \n+  if (gfc_match_parens () == MATCH_ERROR)\n+    return MATCH_ERROR;\n+\n   /* See if we have a DO WHILE.  */\n   if (gfc_match (\" while ( %e )%t\", &iter.end) == MATCH_YES)\n     {"}, {"sha": "bf886240061088161bca62817198e2479258b934", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acb388a0cb8503c7ee94a74c725903e539a19115/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acb388a0cb8503c7ee94a74c725903e539a19115/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=acb388a0cb8503c7ee94a74c725903e539a19115", "patch": "@@ -3510,8 +3510,8 @@ gfc_resolve_index (gfc_expr *index, int check_scalar)\n \n   if (index->ts.type != BT_INTEGER && index->ts.type != BT_REAL)\n     {\n-      gfc_error (\"Array index at %L must be of INTEGER type\",\n-\t\t &index->where);\n+      gfc_error (\"Array index at %L must be of INTEGER type, found %s\",\n+\t\t &index->where, gfc_basic_typename (index->ts.type));\n       return FAILURE;\n     }\n "}]}