{"sha": "003dd7a72fac48ef8dad290770e75d2adc58ee25", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDAzZGQ3YTcyZmFjNDhlZjhkYWQyOTA3NzBlNzVkMmFkYzU4ZWUyNQ==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2006-02-15T09:35:23Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-02-15T09:35:23Z"}, "message": "gnatlink.adb (Process_Binder_File): If -shared is specified, invoke gcc to link with option -shared-libgcc.\n\n2006-02-13  Vincent Celier  <celier@adacore.com>\n\n\t* gnatlink.adb (Process_Binder_File): If -shared is specified, invoke\n\tgcc to link with option -shared-libgcc.\n\t(Gnatlink): Remove duplicate switches -shared-libgcc\n\nFrom-SVN: r111046", "tree": {"sha": "6e726427d19c93aa99a04a26a4767488004fe5d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e726427d19c93aa99a04a26a4767488004fe5d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/003dd7a72fac48ef8dad290770e75d2adc58ee25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/003dd7a72fac48ef8dad290770e75d2adc58ee25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/003dd7a72fac48ef8dad290770e75d2adc58ee25", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/003dd7a72fac48ef8dad290770e75d2adc58ee25/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4430b4899566b604ab3fc71cf33e101bd75840a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4430b4899566b604ab3fc71cf33e101bd75840a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4430b4899566b604ab3fc71cf33e101bd75840a1"}], "stats": {"total": 60, "additions": 46, "deletions": 14}, "files": [{"sha": "a2e63823846623f55ea6a6bdbce7051c732c6449", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 46, "deletions": 14, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/003dd7a72fac48ef8dad290770e75d2adc58ee25/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/003dd7a72fac48ef8dad290770e75d2adc58ee25/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=003dd7a72fac48ef8dad290770e75d2adc58ee25", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1996-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -52,6 +52,11 @@ with System.CRTL;\n procedure Gnatlink is\n    pragma Ident (Gnatvsn.Gnat_Static_Version_String);\n \n+   Shared_Libgcc_String : constant String := \"-shared-libgcc\";\n+   Shared_Libgcc        : constant String_Access :=\n+                            new String'(Shared_Libgcc_String);\n+   --  Used to invoke gcc when the binder is invoked with -shared\n+\n    package Gcc_Linker_Options is new Table.Table (\n      Table_Component_Type => String_Access,\n      Table_Index_Type     => Integer,\n@@ -174,22 +179,22 @@ procedure Gnatlink is\n    Object_List_File_Required : Boolean := False;\n    --  Set to True to force generation of a response file\n \n-   function Base_Name (File_Name : in String) return String;\n+   function Base_Name (File_Name : String) return String;\n    --  Return just the file name part without the extension (if present)\n \n-   procedure Delete (Name : in String);\n+   procedure Delete (Name : String);\n    --  Wrapper to unlink as status is ignored by this application\n \n-   procedure Error_Msg (Message : in String);\n+   procedure Error_Msg (Message : String);\n    --  Output the error or warning Message\n \n-   procedure Exit_With_Error (Error : in String);\n+   procedure Exit_With_Error (Error : String);\n    --  Output Error and exit program with a fatal condition\n \n    procedure Process_Args;\n    --  Go through all the arguments and build option tables\n \n-   procedure Process_Binder_File (Name : in String);\n+   procedure Process_Binder_File (Name : String);\n    --  Reads the binder file and extracts linker arguments\n \n    procedure Write_Header;\n@@ -202,7 +207,7 @@ procedure Gnatlink is\n    -- Base_Name --\n    ---------------\n \n-   function Base_Name (File_Name : in String) return String is\n+   function Base_Name (File_Name : String) return String is\n       Findex1 : Natural;\n       Findex2 : Natural;\n \n@@ -237,7 +242,7 @@ procedure Gnatlink is\n    -- Delete --\n    ------------\n \n-   procedure Delete (Name : in String) is\n+   procedure Delete (Name : String) is\n       Status : int;\n       pragma Unreferenced (Status);\n    begin\n@@ -249,7 +254,7 @@ procedure Gnatlink is\n    -- Error_Msg --\n    ---------------\n \n-   procedure Error_Msg (Message : in String) is\n+   procedure Error_Msg (Message : String) is\n    begin\n       Write_Str (Base_Name (Command_Name));\n       Write_Str (\": \");\n@@ -261,7 +266,7 @@ procedure Gnatlink is\n    -- Exit_With_Error --\n    ---------------------\n \n-   procedure Exit_With_Error (Error : in String) is\n+   procedure Exit_With_Error (Error : String) is\n    begin\n       Error_Msg (Error);\n       Exit_Program (E_Fatal);\n@@ -626,7 +631,7 @@ procedure Gnatlink is\n    -- Process_Binder_File --\n    -------------------------\n \n-   procedure Process_Binder_File (Name : in String) is\n+   procedure Process_Binder_File (Name : String) is\n       Fd : FILEs;\n       --  Binder file's descriptor\n \n@@ -729,7 +734,7 @@ procedure Gnatlink is\n       function Index (S, Pattern : String) return Natural;\n       --  Return the last occurrence of Pattern in S, or 0 if none\n \n-      function Is_Option_Present (Opt : in String) return Boolean;\n+      function Is_Option_Present (Opt : String) return Boolean;\n       --  Return true if the option Opt is already present in\n       --  Linker_Options table.\n \n@@ -791,7 +796,7 @@ procedure Gnatlink is\n       -- Is_Option_Present --\n       -----------------------\n \n-      function Is_Option_Present (Opt : in String) return Boolean is\n+      function Is_Option_Present (Opt : String) return Boolean is\n       begin\n          for I in 1 .. Linker_Options.Last loop\n \n@@ -931,7 +936,9 @@ procedure Gnatlink is\n \n          --  If target is using the GNU linker we must add a special header\n          --  and footer in the response file.\n+\n          --  The syntax is : INPUT (object1.o object2.o ... )\n+\n          --  Because the GNU linker does not like name with characters such\n          --  as '!', we must put the object paths between double quotes.\n \n@@ -999,6 +1006,7 @@ procedure Gnatlink is\n \n          declare\n             N : Integer;\n+\n          begin\n             N := Objs_End - Objs_Begin + 1;\n \n@@ -1288,6 +1296,13 @@ procedure Gnatlink is\n          end loop;\n       end if;\n \n+      --  If -shared was specified, invoke gcc with -shared-libgcc\n+\n+      if GNAT_Shared then\n+         Linker_Options.Increment_Last;\n+         Linker_Options.Table (Linker_Options.Last) := Shared_Libgcc;\n+      end if;\n+\n       Status := fclose (Fd);\n    end Process_Binder_File;\n \n@@ -1302,7 +1317,9 @@ procedure Gnatlink is\n          Write_Str (\"GNATLINK \");\n          Write_Str (Gnat_Version_String);\n          Write_Eol;\n-         Write_Str (\"Copyright 1995-2005 Free Software Foundation, Inc\");\n+         Write_Str (\"Copyright 1995-\" &\n+                    Current_Year &\n+                    \", Free Software Foundation, Inc\");\n          Write_Eol;\n       end if;\n    end Write_Header;\n@@ -1710,6 +1727,7 @@ begin\n \n          Clean_Link_Option_Set : declare\n             J : Natural := Linker_Options.First;\n+            Shared_Libgcc_Seen : Boolean := False;\n \n          begin\n             while J <= Linker_Options.Last loop\n@@ -1731,6 +1749,20 @@ begin\n                   end if;\n                end if;\n \n+               --  Remove duplicate -shared-libgcc switch\n+\n+               if Linker_Options.Table (J).all = Shared_Libgcc_String then\n+                  if Shared_Libgcc_Seen then\n+                     Linker_Options.Table (J .. Linker_Options.Last - 1) :=\n+                       Linker_Options.Table (J + 1 .. Linker_Options.Last);\n+                     Linker_Options.Decrement_Last;\n+                     Num_Args := Num_Args - 1;\n+\n+                  else\n+                     Shared_Libgcc_Seen := True;\n+                  end if;\n+               end if;\n+\n                --  Here we just check for a canonical form that matches the\n                --  pragma Linker_Options set in the NT runtime.\n "}]}