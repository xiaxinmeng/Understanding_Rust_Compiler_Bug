{"sha": "e3abc83ebaea2312510ace3da69436393e73046c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTNhYmM4M2ViYWVhMjMxMjUxMGFjZTNkYTY5NDM2MzkzZTczMDQ2Yw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2016-05-09T15:30:32Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2016-05-09T15:30:32Z"}, "message": "Fix handling of negative bitpos in expand_debug_expr\n\nexpand_debug_expr handled negative bit positions using:\n\n                else if (bitpos < 0)\n                  {\n                    HOST_WIDE_INT units\n                      = (-bitpos + BITS_PER_UNIT - 1) / BITS_PER_UNIT;\n                    op0 = adjust_address_nv (op0, mode1, units);\n                    bitpos += units * BITS_PER_UNIT;\n                  }\n\nHere \"units\" is the negative of the (negative) byte offset, so I think\nwe should be offsetting OP0 by -units instead.  E.g. a bitpos of -17\nwould give units==3, so this code would move OP0 up by 3 bytes and set\nbitpos to 7, giving a total bitpos of 31.\n\nJust noticed by inspection.  An assert triggered for:\n\n        gcc.target/i386/mpx/bitfields-1-lbv.c\n        gcc.target/i386/mpx/field-addr-7-lbv.c\n        gcc.target/i386/mpx/reference-3-lbv.cpp\n        gcc.target/i386/mpx/reference-4-lbv.cpp\n\nat -m32 but otherwise this case doesn't seem to trigger during a\nbootstrap and regtest.\n\nTested on x86_64-linux-gnu.\n\ngcc/\n\t* cfgexpand.c (expand_debug_expr): Fix address offset for negative\n\tbitpos.\n\nFrom-SVN: r236041", "tree": {"sha": "17ca09172235f42f9b155a4381183327145e72ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17ca09172235f42f9b155a4381183327145e72ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3abc83ebaea2312510ace3da69436393e73046c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3abc83ebaea2312510ace3da69436393e73046c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3abc83ebaea2312510ace3da69436393e73046c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3abc83ebaea2312510ace3da69436393e73046c/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b9a28869b9314fb06386f6fd2c52d42644d6618d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9a28869b9314fb06386f6fd2c52d42644d6618d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9a28869b9314fb06386f6fd2c52d42644d6618d"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "314f5f6d67ffd19748806ad2436e8d85d805a7f5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3abc83ebaea2312510ace3da69436393e73046c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3abc83ebaea2312510ace3da69436393e73046c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e3abc83ebaea2312510ace3da69436393e73046c", "patch": "@@ -1,3 +1,8 @@\n+2016-05-09  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* cfgexpand.c (expand_debug_expr): Fix address offset for negative\n+\tbitpos.\n+\n 2016-05-09  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* tree-affine.c (wide_int_constant_multiple_p): Add missing"}, {"sha": "77a1964d4c051e30a5b834a87668a61f3f9cd3df", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3abc83ebaea2312510ace3da69436393e73046c/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3abc83ebaea2312510ace3da69436393e73046c/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=e3abc83ebaea2312510ace3da69436393e73046c", "patch": "@@ -4473,7 +4473,7 @@ expand_debug_expr (tree exp)\n \t      {\n \t\tHOST_WIDE_INT units\n \t\t  = (-bitpos + BITS_PER_UNIT - 1) / BITS_PER_UNIT;\n-\t\top0 = adjust_address_nv (op0, mode1, units);\n+\t\top0 = adjust_address_nv (op0, mode1, -units);\n \t\tbitpos += units * BITS_PER_UNIT;\n \t      }\n \t    else if (bitpos == 0 && bitsize == GET_MODE_BITSIZE (mode))"}]}