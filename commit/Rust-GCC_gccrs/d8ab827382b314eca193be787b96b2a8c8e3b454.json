{"sha": "d8ab827382b314eca193be787b96b2a8c8e3b454", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDhhYjgyNzM4MmIzMTRlY2ExOTNiZTc4N2I5NmIyYThjOGUzYjQ1NA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2011-12-20T09:09:50Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2011-12-20T09:09:50Z"}, "message": "re PR libstdc++/51365 (cannot use final empty class in std::tuple)\n\n\tPR libstdc++/51365\n\t* include/std/tuple (_Tuple_impl): Check __is_final as well as\n\tis_empty.\n\t* testsuite/20_util/tuple/51365.cc: New.\n\nFrom-SVN: r182523", "tree": {"sha": "cf2589681d56c8b7868a84c08fd43bf2736cf334", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf2589681d56c8b7868a84c08fd43bf2736cf334"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8ab827382b314eca193be787b96b2a8c8e3b454", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8ab827382b314eca193be787b96b2a8c8e3b454", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8ab827382b314eca193be787b96b2a8c8e3b454", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8ab827382b314eca193be787b96b2a8c8e3b454/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1bb4b6a35a7cd3a5e76dca3fe5c0fe4d07725080", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bb4b6a35a7cd3a5e76dca3fe5c0fe4d07725080", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bb4b6a35a7cd3a5e76dca3fe5c0fe4d07725080"}], "stats": {"total": 45, "additions": 42, "deletions": 3}, "files": [{"sha": "8775d0ab156b478c366710ad42871a3893f85549", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8ab827382b314eca193be787b96b2a8c8e3b454/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8ab827382b314eca193be787b96b2a8c8e3b454/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d8ab827382b314eca193be787b96b2a8c8e3b454", "patch": "@@ -1,3 +1,10 @@\n+2011-12-20  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\tPR libstdc++/51365\n+\t* include/std/tuple (_Tuple_impl): Check __is_final as well as\n+\tis_empty.\n+\t* testsuite/20_util/tuple/51365.cc: New.\n+\n 2011-12-19  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* libsupc++/eh_tm.cc (free_any_cxa_exception): Use"}, {"sha": "4d4691f104f3d1a0bb8aa5658e6b63bba17e2723", "filename": "libstdc++-v3/include/std/tuple", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8ab827382b314eca193be787b96b2a8c8e3b454/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8ab827382b314eca193be787b96b2a8c8e3b454/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple?ref=d8ab827382b314eca193be787b96b2a8c8e3b454", "patch": "@@ -69,7 +69,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     struct __add_r_ref<_Tp&>\n     { typedef _Tp& type; };\n \n-  template<std::size_t _Idx, typename _Head, bool _IsEmpty>\n+  template<std::size_t _Idx, typename _Head, bool _IsEmptyNotFinal>\n     struct _Head_base;\n \n   template<std::size_t _Idx, typename _Head>\n@@ -201,6 +201,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       void _M_swap(_Tuple_impl&) noexcept { /* no-op */ }\n     };\n \n+  // Use the Empty Base-class Optimization for empty, non-final types.\n+  template<typename _Tp>\n+    using __empty_not_final\n+      = typename conditional<__is_final(_Tp), false_type, is_empty<_Tp>>::type;\n+\n   /**\n    * Recursive tuple implementation. Here we store the @c Head element\n    * and derive from a @c Tuple_impl containing the remaining elements\n@@ -209,12 +214,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   template<std::size_t _Idx, typename _Head, typename... _Tail>\n     struct _Tuple_impl<_Idx, _Head, _Tail...>\n     : public _Tuple_impl<_Idx + 1, _Tail...>,\n-      private _Head_base<_Idx, _Head, std::is_empty<_Head>::value>\n+      private _Head_base<_Idx, _Head, __empty_not_final<_Head>::value>\n     {\n       template<std::size_t, typename...> friend class _Tuple_impl;\n \n       typedef _Tuple_impl<_Idx + 1, _Tail...> _Inherited;\n-      typedef _Head_base<_Idx, _Head, std::is_empty<_Head>::value> _Base;\n+      typedef _Head_base<_Idx, _Head, __empty_not_final<_Head>::value> _Base;\n \n       static constexpr _Head&  \n       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }"}, {"sha": "0e0f7016bd54dc83807d34bf08013da3ddfb3873", "filename": "libstdc++-v3/testsuite/20_util/tuple/51365.cc", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8ab827382b314eca193be787b96b2a8c8e3b454/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2F51365.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8ab827382b314eca193be787b96b2a8c8e3b454/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2F51365.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2F51365.cc?ref=d8ab827382b314eca193be787b96b2a8c8e3b454", "patch": "@@ -0,0 +1,27 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <tuple>\n+\n+// libstdc++/51365\n+\n+struct F final { };\n+std::tuple<F> t;\n+"}]}