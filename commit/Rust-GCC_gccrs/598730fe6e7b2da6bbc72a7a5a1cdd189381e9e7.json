{"sha": "598730fe6e7b2da6bbc72a7a5a1cdd189381e9e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTk4NzMwZmU2ZTdiMmRhNmJiYzcyYTdhNWExY2RkMTg5MzgxZTllNw==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "2000-12-06T03:23:34Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2000-12-06T03:23:34Z"}, "message": "configure.target (hpux): Set os_include_dir.\n\n        * configure.target (hpux): Set os_include_dir.\n        * config/os/hpux/bits/ctype_base.h: New file\n        * config/os/hpux/bits/ctype_inline.h: New file\n        * config/os/hpux/bits/ctype_noinline.h: New file\n        * config/os/hpux/bits/os_defines.h: New file\n\nForgot to commit last week...\n\nFrom-SVN: r38061", "tree": {"sha": "b51b231c758a4af00b1c958a50e558dbb9ed47bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b51b231c758a4af00b1c958a50e558dbb9ed47bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/598730fe6e7b2da6bbc72a7a5a1cdd189381e9e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/598730fe6e7b2da6bbc72a7a5a1cdd189381e9e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/598730fe6e7b2da6bbc72a7a5a1cdd189381e9e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/598730fe6e7b2da6bbc72a7a5a1cdd189381e9e7/comments", "author": null, "committer": null, "parents": [{"sha": "dfb2c798ab94f7a4356b9ac9fc07e4b82d164de1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfb2c798ab94f7a4356b9ac9fc07e4b82d164de1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfb2c798ab94f7a4356b9ac9fc07e4b82d164de1"}], "stats": {"total": 257, "additions": 257, "deletions": 0}, "files": [{"sha": "33e1661d7e4ef1704703b874b2515492e435a3fd", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/598730fe6e7b2da6bbc72a7a5a1cdd189381e9e7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/598730fe6e7b2da6bbc72a7a5a1cdd189381e9e7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=598730fe6e7b2da6bbc72a7a5a1cdd189381e9e7", "patch": "@@ -1,3 +1,11 @@\n+Tue Dec  5 20:24:15 2000  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* configure.target (hpux): Set os_include_dir.\n+\t* config/os/hpux/bits/ctype_base.h: New file\n+\t* config/os/hpux/bits/ctype_inline.h: New file\n+\t* config/os/hpux/bits/ctype_noinline.h: New file\n+\t* config/os/hpux/bits/os_defines.h: New file\n+\n 2000-12-05  Alexandre Petit-Bianco  <apbianco@redhat.com>\n \n \t* src/Makefile.am (libstdc++.INC): Revert for libjava builds."}, {"sha": "8b5e0a07252e391e0987f96f4d541bb6ea699699", "filename": "libstdc++-v3/config/os/hpux/bits/ctype_base.h", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/598730fe6e7b2da6bbc72a7a5a1cdd189381e9e7/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/598730fe6e7b2da6bbc72a7a5a1cdd189381e9e7/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fctype_base.h?ref=598730fe6e7b2da6bbc72a7a5a1cdd189381e9e7", "patch": "@@ -0,0 +1,59 @@\n+// Locale support -*- C++ -*-\n+\n+// Copyright (C) 1997-1999 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+//\n+// ISO C++ 14882: 22.1  Locales\n+//\n+  \n+// Default information, may not be appropriate for specific host.\n+  \n+  struct ctype_base\n+  {\n+    typedef unsigned int \tmask;\n+    // Non-standard typedefs.\n+    typedef const int* \t\t__to_type;\n+\n+    enum\n+    {\n+      space = (1 << 5),\t// Whitespace\n+      print = (1 << 6),\t// Printing\n+      cntrl = (1 << 9),\t// Control character\n+      upper = (1 << 0),\t// UPPERCASE\n+      lower = (1 << 1),\t// lowercase\n+      alpha = (1 << 5),\t// Alphabetic\n+      digit = (1 << 2),\t// Numeric\n+      punct = (1 << 10),// Punctuation\n+      xdigit = (1 << 4),// Hexadecimal numeric\n+      alnum = (1 << 11),// Alphanumeric\n+      graph = (1 << 7)\t// Graphical\n+    };\n+  };\n+\n+\n+"}, {"sha": "952b0da8c9808c7fb5e2297070ee5be2744ed436", "filename": "libstdc++-v3/config/os/hpux/bits/ctype_inline.h", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/598730fe6e7b2da6bbc72a7a5a1cdd189381e9e7/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/598730fe6e7b2da6bbc72a7a5a1cdd189381e9e7/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fctype_inline.h?ref=598730fe6e7b2da6bbc72a7a5a1cdd189381e9e7", "patch": "@@ -0,0 +1,72 @@\n+// Locale support -*- C++ -*-\n+\n+// Copyright (C) 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+//\n+// ISO C++ 14882: 22.1  Locales\n+//\n+  \n+// ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)\n+// functions go in ctype.cc\n+  \n+  bool\n+  ctype<char>::\n+  is(mask __m, char __c) const throw()\n+  { return _M_table[(unsigned char)(__c)] & __m; }\n+\n+  const char*\n+  ctype<char>::\n+  is(const char* __low, const char* __high, mask* __vec) const throw()\n+  {\n+    while (__low < __high)\n+      *__vec++ = _M_table[(unsigned char)(*__low++)];\n+    return __high;\n+  }\n+\n+  const char*\n+  ctype<char>::\n+  scan_is(mask __m, const char* __low, const char* __high) const throw()\n+  {\n+    while (__low < __high && !this->is(__m, *__low))\n+      ++__low;\n+    return __low;\n+  }\n+\n+  const char*\n+  ctype<char>::\n+  scan_not(mask __m, const char* __low, const char* __high) const throw()\n+  {\n+    while (__low < __high && this->is(__m, *__low) != 0)\n+      ++__low;\n+    return __low;\n+  }\n+\n+\n+\n+\n+"}, {"sha": "bc99064b0dc51e42d60b52ad1c264c8be8a7344c", "filename": "libstdc++-v3/config/os/hpux/bits/ctype_noninline.h", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/598730fe6e7b2da6bbc72a7a5a1cdd189381e9e7/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/598730fe6e7b2da6bbc72a7a5a1cdd189381e9e7/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fctype_noninline.h?ref=598730fe6e7b2da6bbc72a7a5a1cdd189381e9e7", "patch": "@@ -0,0 +1,71 @@\n+// Locale support -*- C++ -*-\n+\n+// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+//\n+// ISO C++ 14882: 22.1  Locales\n+//\n+  \n+// Information as gleaned from /usr/include/ctype.h\n+  \n+  ctype<char>::ctype(const mask* __table = 0, bool __del = false, \n+\tsize_t __refs = 0) \n+    : _Ctype_nois<char>(__refs), _M_del(__table != 0 && __del), \n+      _M_toupper(NULL), _M_tolower(NULL),\n+      _M_ctable(NULL), _M_table(__table == 0 ? _M_ctable: __table) \n+    { }\n+\n+  char\n+  ctype<char>::do_toupper(char __c) const\n+  { return ::toupper((int) __c); }\n+\n+  const char*\n+  ctype<char>::do_toupper(char* __low, const char* __high) const\n+  {\n+    while (__low < __high)\n+      {\n+\t*__low = ::toupper((int) *__low);\n+\t++__low;\n+      }\n+    return __high;\n+  }\n+\n+  char\n+  ctype<char>::do_tolower(char __c) const\n+  { return ::tolower((int) __c); }\n+\n+  const char* \n+  ctype<char>::do_tolower(char* __low, const char* __high) const\n+  {\n+    while (__low < __high)\n+      {\n+\t*__low = ::tolower((int) *__low);\n+\t++__low;\n+      }\n+    return __high;\n+  }"}, {"sha": "358343954636a5ad6780d0d9a90e90970f4aabbf", "filename": "libstdc++-v3/config/os/hpux/bits/os_defines.h", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/598730fe6e7b2da6bbc72a7a5a1cdd189381e9e7/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/598730fe6e7b2da6bbc72a7a5a1cdd189381e9e7/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fos_defines.h?ref=598730fe6e7b2da6bbc72a7a5a1cdd189381e9e7", "patch": "@@ -0,0 +1,44 @@\n+// Specific definitions for generic platforms  -*- C++ -*-\n+\n+// Copyright (C) 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+\n+#ifndef _GLIBCPP_OS_DEFINES\n+#  define _GLIBCPP_OS_DEFINES\n+\n+\n+/* System-specific #define, typedefs, corrections, etc, go here.  This\n+   file will come before all others. */\n+\n+#define __off_t off_t\n+#define __off64_t off64_t\n+#define __ssize_t ssize_t\n+\n+#endif\n+\n+"}, {"sha": "ac4e172dd2ef552080ea2c0023b7c207937a1287", "filename": "libstdc++-v3/configure.target", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/598730fe6e7b2da6bbc72a7a5a1cdd189381e9e7/libstdc%2B%2B-v3%2Fconfigure.target", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/598730fe6e7b2da6bbc72a7a5a1cdd189381e9e7/libstdc%2B%2B-v3%2Fconfigure.target", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.target?ref=598730fe6e7b2da6bbc72a7a5a1cdd189381e9e7", "patch": "@@ -105,6 +105,9 @@ case \"${target_os}\" in\n   solaris2.7* | solaris2.8*)\n     os_include_dir=\"config/os/solaris/solaris2.7\"\n     ;;\n+  hpux)\n+    os_include_dir=\"config/os/hpux\"\n+    ;;\n   *)\n     os_include_dir=\"config/os/generic\"\n     ;;"}]}