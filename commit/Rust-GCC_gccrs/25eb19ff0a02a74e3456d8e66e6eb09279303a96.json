{"sha": "25eb19ff0a02a74e3456d8e66e6eb09279303a96", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjVlYjE5ZmYwYTAyYTc0ZTM0NTZkOGU2NmU2ZWIwOTI3OTMwM2E5Ng==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-07-23T19:11:48Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-07-23T19:11:48Z"}, "message": "except.c (process_start_catch_block_old): Call start_decl_1 for catch parm.\n\n\t* except.c (process_start_catch_block_old): Call start_decl_1 for\n\tcatch parm.\n\t* decl.c (start_decl_1): Avoid duplicate error.\n\t* init.c (expand_default_init): Only perform the initialization if\n\tit will do something.\n\t* parse.y (base_class): Check for invalid base class.\n\nFrom-SVN: r21353", "tree": {"sha": "3b2494b60d39021ab9864336047b4e944cb916e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b2494b60d39021ab9864336047b4e944cb916e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25eb19ff0a02a74e3456d8e66e6eb09279303a96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25eb19ff0a02a74e3456d8e66e6eb09279303a96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25eb19ff0a02a74e3456d8e66e6eb09279303a96", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25eb19ff0a02a74e3456d8e66e6eb09279303a96/comments", "author": null, "committer": null, "parents": [{"sha": "ca2b325127fdbacb4c2073e26a5191af17f126e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca2b325127fdbacb4c2073e26a5191af17f126e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca2b325127fdbacb4c2073e26a5191af17f126e4"}], "stats": {"total": 740, "additions": 392, "deletions": 348}, "files": [{"sha": "c580d553c261e87634b058579cc225691631682c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25eb19ff0a02a74e3456d8e66e6eb09279303a96/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25eb19ff0a02a74e3456d8e66e6eb09279303a96/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=25eb19ff0a02a74e3456d8e66e6eb09279303a96", "patch": "@@ -1,3 +1,16 @@\n+1998-07-23  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* except.c (process_start_catch_block_old): Call start_decl_1 for\n+\tcatch parm.\n+\t* decl.c (start_decl_1): Avoid duplicate error.\n+\n+\t* init.c (expand_default_init): Only perform the initialization if\n+\tit will do something.\n+\n+1998-07-23  H.J. Lu  (hjl@gnu.org)\n+\n+\t* parse.y (base_class): Check for invalid base class.\n+\n 1998-07-23  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* decl2.c (import_export_template): Fold in..."}, {"sha": "87c2fd0fe190c414461f96f90706b55dfcaf1712", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25eb19ff0a02a74e3456d8e66e6eb09279303a96/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25eb19ff0a02a74e3456d8e66e6eb09279303a96/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=25eb19ff0a02a74e3456d8e66e6eb09279303a96", "patch": "@@ -6617,6 +6617,7 @@ start_decl_1 (decl)\n \t  cp_error (\"variable `%#D' has initializer but incomplete type\",\n \t\t    decl);\n \t  initialized = 0;\n+\t  type = TREE_TYPE (decl) = error_mark_node;\n \t}\n       else if (TYPE_SIZE (complete_type (TREE_TYPE (type))) == NULL_TREE)\n \t{\n@@ -6639,8 +6640,7 @@ start_decl_1 (decl)\n \t\t decl);\n \t  /* Change the type so that assemble_variable will give\n \t     DECL an rtl we can live with: (mem (const_int 0)).  */\n-\t  TREE_TYPE (decl) = error_mark_node;\n-\t  type = error_mark_node;\n+\t  type = TREE_TYPE (decl) = error_mark_node;\n \t}\n       else\n \t{"}, {"sha": "0c260867ed035a527f692c254e70f7592b3609d8", "filename": "gcc/cp/except.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25eb19ff0a02a74e3456d8e66e6eb09279303a96/gcc%2Fcp%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25eb19ff0a02a74e3456d8e66e6eb09279303a96/gcc%2Fcp%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexcept.c?ref=25eb19ff0a02a74e3456d8e66e6eb09279303a96", "patch": "@@ -699,7 +699,9 @@ process_start_catch_block_old (declspecs, declarator)\n       DECL_INITIAL (decl) = init;\n       decl = pushdecl (decl);\n \n-      cp_finish_decl (decl, init, NULL_TREE, 0, LOOKUP_ONLYCONVERTING);\n+      start_decl_1 (decl);\n+      cp_finish_decl (decl, DECL_INITIAL (decl),\n+\t\t      NULL_TREE, 0, LOOKUP_ONLYCONVERTING);\n     }\n   else\n     {"}, {"sha": "931d033d688be9481310e8a5c8c2c1fed597bbd7", "filename": "gcc/cp/init.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25eb19ff0a02a74e3456d8e66e6eb09279303a96/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25eb19ff0a02a74e3456d8e66e6eb09279303a96/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=25eb19ff0a02a74e3456d8e66e6eb09279303a96", "patch": "@@ -1200,7 +1200,8 @@ expand_default_init (binfo, true_exp, exp, init, alias_this, flags)\n \n   rval = build_method_call (exp, ctor_identifier,\n \t\t\t    parms, binfo, flags);\n-  expand_expr_stmt (rval);\n+  if (TREE_SIDE_EFFECTS (rval))\n+    expand_expr_stmt (rval);\n }\n \n /* This function is responsible for initializing EXP with INIT"}, {"sha": "085e87b372c21c4fd2aefcf87b3688dc9258ce5f", "filename": "gcc/cp/parse.c", "status": "modified", "additions": 356, "deletions": 342, "changes": 698, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25eb19ff0a02a74e3456d8e66e6eb09279303a96/gcc%2Fcp%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25eb19ff0a02a74e3456d8e66e6eb09279303a96/gcc%2Fcp%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.c?ref=25eb19ff0a02a74e3456d8e66e6eb09279303a96", "patch": "@@ -680,43 +680,43 @@ static const short yyrline[] = { 0,\n   2065,  2069,  2081,  2083,  2086,  2106,  2108,  2111,  2113,  2118,\n   2120,  2122,  2124,  2126,  2128,  2132,  2137,  2140,  2142,  2146,\n   2152,  2157,  2162,  2164,  2168,  2173,  2176,  2183,  2211,  2217,\n-  2219,  2222,  2225,  2227,  2231,  2233,  2237,  2263,  2292,  2295,\n-  2296,  2317,  2340,  2342,  2346,  2357,  2371,  2376,  2383,  2386,\n-  2394,  2405,  2414,  2418,  2433,  2436,  2441,  2443,  2445,  2447,\n-  2449,  2451,  2454,  2456,  2460,  2466,  2468,  2471,  2474,  2476,\n-  2487,  2492,  2495,  2500,  2503,  2504,  2515,  2518,  2519,  2530,\n-  2532,  2535,  2537,  2540,  2547,  2555,  2562,  2568,  2574,  2582,\n-  2586,  2591,  2595,  2598,  2607,  2609,  2613,  2616,  2621,  2625,\n-  2631,  2642,  2645,  2649,  2653,  2661,  2666,  2672,  2675,  2677,\n-  2679,  2685,  2688,  2690,  2692,  2694,  2698,  2701,  2719,  2729,\n-  2731,  2732,  2736,  2741,  2744,  2746,  2748,  2750,  2754,  2760,\n-  2763,  2765,  2767,  2769,  2773,  2776,  2779,  2781,  2783,  2785,\n-  2789,  2792,  2795,  2797,  2799,  2801,  2813,  2824,  2828,  2833,\n-  2837,  2842,  2844,  2848,  2851,  2853,  2857,  2859,  2860,  2863,\n-  2865,  2867,  2873,  2888,  2894,  2900,  2914,  2916,  2920,  2934,\n-  2936,  2938,  2942,  2948,  2961,  2963,  2967,  2980,  2986,  2988,\n-  2989,  2990,  2998,  3003,  3012,  3013,  3017,  3020,  3026,  3032,\n-  3035,  3037,  3039,  3041,  3045,  3049,  3053,  3056,  3061,  3064,\n-  3066,  3068,  3070,  3072,  3074,  3076,  3078,  3082,  3086,  3090,\n-  3094,  3095,  3097,  3099,  3101,  3103,  3105,  3107,  3109,  3111,\n-  3119,  3121,  3122,  3123,  3126,  3132,  3134,  3139,  3141,  3144,\n-  3158,  3161,  3164,  3168,  3171,  3178,  3180,  3183,  3185,  3187,\n-  3190,  3193,  3196,  3199,  3201,  3204,  3208,  3210,  3216,  3218,\n-  3219,  3221,  3226,  3228,  3230,  3232,  3234,  3237,  3238,  3240,\n-  3243,  3244,  3247,  3247,  3250,  3250,  3253,  3253,  3255,  3257,\n-  3259,  3261,  3267,  3273,  3276,  3279,  3285,  3287,  3289,  3293,\n-  3295,  3296,  3297,  3299,  3302,  3309,  3314,  3322,  3326,  3328,\n-  3331,  3333,  3336,  3340,  3342,  3345,  3347,  3350,  3367,  3373,\n-  3381,  3383,  3385,  3389,  3392,  3393,  3401,  3405,  3409,  3412,\n-  3413,  3419,  3422,  3425,  3427,  3431,  3436,  3439,  3449,  3454,\n-  3455,  3462,  3465,  3468,  3470,  3473,  3475,  3485,  3499,  3503,\n-  3506,  3508,  3512,  3516,  3519,  3522,  3524,  3528,  3530,  3537,\n-  3544,  3547,  3550,  3554,  3558,  3564,  3568,  3573,  3575,  3578,\n-  3583,  3589,  3600,  3603,  3605,  3609,  3614,  3616,  3623,  3626,\n-  3628,  3630,  3636,  3641,  3644,  3646,  3648,  3650,  3652,  3654,\n-  3656,  3658,  3660,  3662,  3664,  3666,  3668,  3670,  3672,  3674,\n-  3676,  3678,  3680,  3682,  3684,  3686,  3688,  3690,  3692,  3694,\n-  3696,  3698,  3700,  3702,  3704,  3706,  3709,  3711\n+  2219,  2222,  2225,  2227,  2231,  2233,  2237,  2270,  2306,  2309,\n+  2310,  2331,  2354,  2356,  2360,  2371,  2385,  2390,  2397,  2400,\n+  2408,  2419,  2428,  2432,  2447,  2450,  2455,  2457,  2459,  2461,\n+  2463,  2465,  2468,  2470,  2474,  2480,  2482,  2485,  2488,  2490,\n+  2501,  2506,  2509,  2514,  2517,  2518,  2529,  2532,  2533,  2544,\n+  2546,  2549,  2551,  2554,  2561,  2569,  2576,  2582,  2588,  2596,\n+  2600,  2605,  2609,  2612,  2621,  2623,  2627,  2630,  2635,  2639,\n+  2645,  2656,  2659,  2663,  2667,  2675,  2680,  2686,  2689,  2691,\n+  2693,  2699,  2702,  2704,  2706,  2708,  2712,  2715,  2733,  2743,\n+  2745,  2746,  2750,  2755,  2758,  2760,  2762,  2764,  2768,  2774,\n+  2777,  2779,  2781,  2783,  2787,  2790,  2793,  2795,  2797,  2799,\n+  2803,  2806,  2809,  2811,  2813,  2815,  2827,  2838,  2842,  2847,\n+  2851,  2856,  2858,  2862,  2865,  2867,  2871,  2873,  2874,  2877,\n+  2879,  2881,  2887,  2902,  2908,  2914,  2928,  2930,  2934,  2948,\n+  2950,  2952,  2956,  2962,  2975,  2977,  2981,  2994,  3000,  3002,\n+  3003,  3004,  3012,  3017,  3026,  3027,  3031,  3034,  3040,  3046,\n+  3049,  3051,  3053,  3055,  3059,  3063,  3067,  3070,  3075,  3078,\n+  3080,  3082,  3084,  3086,  3088,  3090,  3092,  3096,  3100,  3104,\n+  3108,  3109,  3111,  3113,  3115,  3117,  3119,  3121,  3123,  3125,\n+  3133,  3135,  3136,  3137,  3140,  3146,  3148,  3153,  3155,  3158,\n+  3172,  3175,  3178,  3182,  3185,  3192,  3194,  3197,  3199,  3201,\n+  3204,  3207,  3210,  3213,  3215,  3218,  3222,  3224,  3230,  3232,\n+  3233,  3235,  3240,  3242,  3244,  3246,  3248,  3251,  3252,  3254,\n+  3257,  3258,  3261,  3261,  3264,  3264,  3267,  3267,  3269,  3271,\n+  3273,  3275,  3281,  3287,  3290,  3293,  3299,  3301,  3303,  3307,\n+  3309,  3310,  3311,  3313,  3316,  3323,  3328,  3336,  3340,  3342,\n+  3345,  3347,  3350,  3354,  3356,  3359,  3361,  3364,  3381,  3387,\n+  3395,  3397,  3399,  3403,  3406,  3407,  3415,  3419,  3423,  3426,\n+  3427,  3433,  3436,  3439,  3441,  3445,  3450,  3453,  3463,  3468,\n+  3469,  3476,  3479,  3482,  3484,  3487,  3489,  3499,  3513,  3517,\n+  3520,  3522,  3526,  3530,  3533,  3536,  3538,  3542,  3544,  3551,\n+  3558,  3561,  3564,  3568,  3572,  3578,  3582,  3587,  3589,  3592,\n+  3597,  3603,  3614,  3617,  3619,  3623,  3628,  3630,  3637,  3640,\n+  3642,  3644,  3650,  3655,  3658,  3660,  3662,  3664,  3666,  3668,\n+  3670,  3672,  3674,  3676,  3678,  3680,  3682,  3684,  3686,  3688,\n+  3690,  3692,  3694,  3696,  3698,  3700,  3702,  3704,  3706,  3708,\n+  3710,  3712,  3714,  3716,  3718,  3720,  3723,  3725\n };\n #endif\n \n@@ -6098,7 +6098,14 @@ case 496:\n case 497:\n #line 2239 \"parse.y\"\n {\n-\t\t  tree type = TREE_TYPE (yyvsp[0].ttype);\n+\t\t  tree type;\n+\t\t  if (yyvsp[0].ttype == NULL_TREE)\n+\t\t    {\n+\t\t      error (\"invalid base class\");\n+\t\t      type = error_mark_node;\n+\t\t    }\n+\t\t  else\n+\t\t    type = TREE_TYPE (yyvsp[0].ttype);\n \t\t  if (! is_aggr_type (type, 1))\n \t\t    yyval.ttype = NULL_TREE;\n \t\t  else if (current_aggr == signature_type_node\n@@ -6123,9 +6130,16 @@ case 497:\n \t\t;\n     break;}\n case 498:\n-#line 2264 \"parse.y\"\n+#line 2271 \"parse.y\"\n {\n-\t\t  tree type = TREE_TYPE (yyvsp[0].ttype);\n+\t\t  tree type;\n+\t\t  if (yyvsp[0].ttype == NULL_TREE)\n+\t\t    {\n+\t\t      error (\"invalid base class\");\n+\t\t      type = error_mark_node;\n+\t\t    }\n+\t\t  else\n+\t\t    type = TREE_TYPE (yyvsp[0].ttype);\n \t\t  if (current_aggr == signature_type_node)\n \t\t    error (\"access and source specifiers not allowed in signature\");\n \t\t  if (! is_aggr_type (type, 1))\n@@ -6152,11 +6166,11 @@ case 498:\n \t\t;\n     break;}\n case 499:\n-#line 2294 \"parse.y\"\n+#line 2308 \"parse.y\"\n { yyval.ttype = TYPE_MAIN_DECL (yyvsp[0].ttype); ;\n     break;}\n case 501:\n-#line 2297 \"parse.y\"\n+#line 2311 \"parse.y\"\n {\n \t\t  if (current_aggr == signature_type_node)\n \t\t    {\n@@ -6179,7 +6193,7 @@ case 501:\n \t\t;\n     break;}\n case 502:\n-#line 2318 \"parse.y\"\n+#line 2332 \"parse.y\"\n {\n \t\t  if (current_aggr == signature_type_node)\n \t\t    {\n@@ -6202,13 +6216,13 @@ case 502:\n \t\t;\n     break;}\n case 504:\n-#line 2343 \"parse.y\"\n+#line 2357 \"parse.y\"\n { if (yyvsp[-1].ttype != ridpointers[(int)RID_VIRTUAL])\n \t\t    cp_error (\"`%D' access\", yyvsp[-1].ttype);\n \t\t  yyval.ttype = access_default_virtual_node; ;\n     break;}\n case 505:\n-#line 2347 \"parse.y\"\n+#line 2361 \"parse.y\"\n {\n \t\t  if (yyvsp[-2].ttype != access_default_virtual_node)\n \t\t    error (\"multiple access specifiers\");\n@@ -6221,7 +6235,7 @@ case 505:\n \t\t;\n     break;}\n case 506:\n-#line 2358 \"parse.y\"\n+#line 2372 \"parse.y\"\n { if (yyvsp[-1].ttype != ridpointers[(int)RID_VIRTUAL])\n \t\t    cp_error (\"`%D' access\", yyvsp[-1].ttype);\n \t\t  else if (yyval.ttype == access_public_node)\n@@ -6235,21 +6249,21 @@ case 506:\n \t\t;\n     break;}\n case 507:\n-#line 2373 \"parse.y\"\n+#line 2387 \"parse.y\"\n { yyvsp[-1].ttype = begin_class_definition (yyvsp[-1].ttype); ;\n     break;}\n case 508:\n-#line 2378 \"parse.y\"\n+#line 2392 \"parse.y\"\n {\n \t\t    yyval.ttype = build_self_reference ();\n \t\t;\n     break;}\n case 509:\n-#line 2385 \"parse.y\"\n+#line 2399 \"parse.y\"\n { if (yyval.ttype) yyval.ttype = build_tree_list (access_public_node, yyval.ttype); ;\n     break;}\n case 510:\n-#line 2387 \"parse.y\"\n+#line 2401 \"parse.y\"\n {\n \t\t  if (current_aggr == signature_type_node)\n \t\t    yyval.ttype = build_tree_list (access_public_node, yyvsp[0].ttype);\n@@ -6259,7 +6273,7 @@ case 510:\n \t\t;\n     break;}\n case 511:\n-#line 2395 \"parse.y\"\n+#line 2409 \"parse.y\"\n {\n \t\t  tree visspec = yyvsp[-2].ttype;\n \n@@ -6272,19 +6286,19 @@ case 511:\n \t\t;\n     break;}\n case 512:\n-#line 2406 \"parse.y\"\n+#line 2420 \"parse.y\"\n {\n \t\t  if (current_aggr == signature_type_node)\n \t\t    error (\"access specifier not allowed in signature\");\n \t\t;\n     break;}\n case 513:\n-#line 2416 \"parse.y\"\n+#line 2430 \"parse.y\"\n { if (yyval.ttype == void_type_node) yyval.ttype = NULL_TREE; \n \t\t;\n     break;}\n case 514:\n-#line 2419 \"parse.y\"\n+#line 2433 \"parse.y\"\n { /* In pushdecl, we created a reverse list of names\n \t\t     in this binding level.  Make sure that the chain\n \t\t     of what we're trying to add isn't the item itself\n@@ -6299,95 +6313,95 @@ case 514:\n \t\t;\n     break;}\n case 515:\n-#line 2435 \"parse.y\"\n+#line 2449 \"parse.y\"\n { ;\n     break;}\n case 516:\n-#line 2437 \"parse.y\"\n+#line 2451 \"parse.y\"\n { error (\"missing ';' before right brace\");\n \t\t  yyungetc ('}', 0); ;\n     break;}\n case 517:\n-#line 2442 \"parse.y\"\n+#line 2456 \"parse.y\"\n { yyval.ttype = finish_method (yyval.ttype); ;\n     break;}\n case 518:\n-#line 2444 \"parse.y\"\n+#line 2458 \"parse.y\"\n { yyval.ttype = finish_method (yyval.ttype); ;\n     break;}\n case 519:\n-#line 2446 \"parse.y\"\n+#line 2460 \"parse.y\"\n { yyval.ttype = finish_method (yyval.ttype); ;\n     break;}\n case 520:\n-#line 2448 \"parse.y\"\n+#line 2462 \"parse.y\"\n { yyval.ttype = finish_method (yyval.ttype); ;\n     break;}\n case 521:\n-#line 2450 \"parse.y\"\n+#line 2464 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 522:\n-#line 2452 \"parse.y\"\n+#line 2466 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  pedantic = yyvsp[-1].itype; ;\n     break;}\n case 523:\n-#line 2455 \"parse.y\"\n+#line 2469 \"parse.y\"\n { yyval.ttype = finish_member_template_decl (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 524:\n-#line 2457 \"parse.y\"\n+#line 2471 \"parse.y\"\n { yyval.ttype = finish_member_class_template (yyvsp[-2].ttype, yyvsp[-1].ftype.t); ;\n     break;}\n case 525:\n-#line 2465 \"parse.y\"\n+#line 2479 \"parse.y\"\n { yyval.ttype = grok_x_components (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 526:\n-#line 2467 \"parse.y\"\n+#line 2481 \"parse.y\"\n { yyval.ttype = grok_x_components (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 527:\n-#line 2469 \"parse.y\"\n+#line 2483 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, NULL_TREE, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, NULL_TREE)); ;\n     break;}\n case 528:\n-#line 2472 \"parse.y\"\n+#line 2486 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, NULL_TREE, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, NULL_TREE)); ;\n     break;}\n case 529:\n-#line 2475 \"parse.y\"\n+#line 2489 \"parse.y\"\n { yyval.ttype = grokbitfield (NULL_TREE, NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 530:\n-#line 2477 \"parse.y\"\n+#line 2491 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 531:\n-#line 2488 \"parse.y\"\n+#line 2502 \"parse.y\"\n { tree specs, attrs;\n \t\t  split_specs_attrs (yyvsp[-4].ttype, &specs, &attrs);\n \t\t  yyval.ttype = grokfield (yyvsp[-3].ttype, specs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, attrs)); ;\n     break;}\n case 532:\n-#line 2493 \"parse.y\"\n+#line 2507 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, NULL_TREE, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, NULL_TREE)); ;\n     break;}\n case 533:\n-#line 2496 \"parse.y\"\n+#line 2510 \"parse.y\"\n { yyval.ttype = do_class_using_decl (yyvsp[0].ttype); ;\n     break;}\n case 534:\n-#line 2502 \"parse.y\"\n+#line 2516 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 536:\n-#line 2505 \"parse.y\"\n+#line 2519 \"parse.y\"\n {\n \t\t  /* In this context, void_type_node encodes\n \t\t     friends.  They have been recorded elsewhere.  */\n@@ -6398,11 +6412,11 @@ case 536:\n \t\t;\n     break;}\n case 537:\n-#line 2517 \"parse.y\"\n+#line 2531 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 539:\n-#line 2520 \"parse.y\"\n+#line 2534 \"parse.y\"\n {\n \t\t  /* In this context, void_type_node encodes\n \t\t     friends.  They have been recorded elsewhere.  */\n@@ -6413,102 +6427,102 @@ case 539:\n \t\t;\n     break;}\n case 544:\n-#line 2542 \"parse.y\"\n+#line 2556 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 545:\n-#line 2548 \"parse.y\"\n+#line 2562 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokbitfield (yyval.ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 546:\n-#line 2557 \"parse.y\"\n+#line 2571 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 547:\n-#line 2563 \"parse.y\"\n+#line 2577 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 548:\n-#line 2569 \"parse.y\"\n+#line 2583 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokbitfield (yyval.ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 549:\n-#line 2575 \"parse.y\"\n+#line 2589 \"parse.y\"\n { split_specs_attrs (yyvsp[-3].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-3].ttype = current_declspecs;\n \t\t  yyval.ttype = grokbitfield (NULL_TREE, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 550:\n-#line 2584 \"parse.y\"\n+#line 2598 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 551:\n-#line 2587 \"parse.y\"\n+#line 2601 \"parse.y\"\n { yyval.ttype = grokbitfield (yyval.ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 552:\n-#line 2593 \"parse.y\"\n+#line 2607 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 553:\n-#line 2596 \"parse.y\"\n+#line 2610 \"parse.y\"\n { yyval.ttype = grokbitfield (yyval.ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 554:\n-#line 2599 \"parse.y\"\n+#line 2613 \"parse.y\"\n { yyval.ttype = grokbitfield (NULL_TREE, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 556:\n-#line 2610 \"parse.y\"\n+#line 2624 \"parse.y\"\n { TREE_CHAIN (yyvsp[0].ttype) = yyval.ttype; yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 557:\n-#line 2615 \"parse.y\"\n+#line 2629 \"parse.y\"\n { yyval.ttype = build_enumerator (yyval.ttype, NULL_TREE); ;\n     break;}\n case 558:\n-#line 2617 \"parse.y\"\n+#line 2631 \"parse.y\"\n { yyval.ttype = build_enumerator (yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 559:\n-#line 2623 \"parse.y\"\n+#line 2637 \"parse.y\"\n { yyval.ftype.t = build_decl_list (yyvsp[-1].ftype.t, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 560:\n-#line 2626 \"parse.y\"\n+#line 2640 \"parse.y\"\n { yyval.ftype.t = build_decl_list (yyvsp[0].ftype.t, NULL_TREE); \n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag; ;\n     break;}\n case 561:\n-#line 2633 \"parse.y\"\n+#line 2647 \"parse.y\"\n {\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids array dimensions with parenthesized type in new\");\n@@ -6518,71 +6532,71 @@ case 561:\n \t\t;\n     break;}\n case 562:\n-#line 2644 \"parse.y\"\n+#line 2658 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 563:\n-#line 2646 \"parse.y\"\n+#line 2660 \"parse.y\"\n { yyval.ttype = decl_tree_cons (NULL_TREE, yyvsp[0].ttype, yyval.ttype); ;\n     break;}\n case 564:\n-#line 2651 \"parse.y\"\n+#line 2665 \"parse.y\"\n { yyval.ftype.t = IDENTIFIER_AS_LIST (yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = 0; ;\n     break;}\n case 565:\n-#line 2654 \"parse.y\"\n+#line 2668 \"parse.y\"\n { yyval.ftype.t = decl_tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ftype.t); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 566:\n-#line 2663 \"parse.y\"\n+#line 2677 \"parse.y\"\n { yyval.itype = suspend_momentary (); ;\n     break;}\n case 567:\n-#line 2668 \"parse.y\"\n+#line 2682 \"parse.y\"\n { resume_momentary ((int) yyvsp[-1].itype); yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 568:\n-#line 2674 \"parse.y\"\n+#line 2688 \"parse.y\"\n { resume_momentary ((int) yyvsp[-3].itype); yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 569:\n-#line 2676 \"parse.y\"\n+#line 2690 \"parse.y\"\n { resume_momentary ((int) yyvsp[-3].itype); yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 570:\n-#line 2678 \"parse.y\"\n+#line 2692 \"parse.y\"\n { resume_momentary ((int) yyvsp[-1].itype); yyval.ttype = empty_parms (); ;\n     break;}\n case 571:\n-#line 2680 \"parse.y\"\n+#line 2694 \"parse.y\"\n { resume_momentary ((int) yyvsp[-3].itype); yyval.ttype = NULL_TREE; ;\n     break;}\n case 572:\n-#line 2687 \"parse.y\"\n+#line 2701 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 573:\n-#line 2689 \"parse.y\"\n+#line 2703 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 574:\n-#line 2691 \"parse.y\"\n+#line 2705 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 575:\n-#line 2693 \"parse.y\"\n+#line 2707 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 576:\n-#line 2695 \"parse.y\"\n+#line 2709 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 578:\n-#line 2703 \"parse.y\"\n+#line 2717 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    {\n@@ -6601,7 +6615,7 @@ case 578:\n \t\t;\n     break;}\n case 579:\n-#line 2720 \"parse.y\"\n+#line 2734 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = IDENTIFIER_GLOBAL_VALUE (yyvsp[0].ttype);\n@@ -6611,97 +6625,97 @@ case 579:\n \t\t;\n     break;}\n case 582:\n-#line 2733 \"parse.y\"\n+#line 2747 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 583:\n-#line 2738 \"parse.y\"\n+#line 2752 \"parse.y\"\n { yyval.ttype = get_type_decl (yyvsp[0].ttype); ;\n     break;}\n case 584:\n-#line 2743 \"parse.y\"\n+#line 2757 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, yyvsp[-2].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 585:\n-#line 2745 \"parse.y\"\n+#line 2759 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 586:\n-#line 2747 \"parse.y\"\n+#line 2761 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, NULL_TREE); ;\n     break;}\n case 587:\n-#line 2749 \"parse.y\"\n+#line 2763 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 588:\n-#line 2751 \"parse.y\"\n+#line 2765 \"parse.y\"\n { push_nested_class (yyvsp[-1].ttype, 3);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyval.ttype, yyvsp[0].ttype);\n \t\t  TREE_COMPLEXITY (yyval.ttype) = current_class_depth; ;\n     break;}\n case 590:\n-#line 2762 \"parse.y\"\n+#line 2776 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 591:\n-#line 2764 \"parse.y\"\n+#line 2778 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 592:\n-#line 2766 \"parse.y\"\n+#line 2780 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 593:\n-#line 2768 \"parse.y\"\n+#line 2782 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 594:\n-#line 2770 \"parse.y\"\n+#line 2784 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 596:\n-#line 2778 \"parse.y\"\n+#line 2792 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 597:\n-#line 2780 \"parse.y\"\n+#line 2794 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 598:\n-#line 2782 \"parse.y\"\n+#line 2796 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 599:\n-#line 2784 \"parse.y\"\n+#line 2798 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 600:\n-#line 2786 \"parse.y\"\n+#line 2800 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 602:\n-#line 2794 \"parse.y\"\n+#line 2808 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, yyvsp[-2].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 603:\n-#line 2796 \"parse.y\"\n+#line 2810 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 604:\n-#line 2798 \"parse.y\"\n+#line 2812 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 605:\n-#line 2800 \"parse.y\"\n+#line 2814 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, NULL_TREE); ;\n     break;}\n case 606:\n-#line 2802 \"parse.y\"\n+#line 2816 \"parse.y\"\n { if (TREE_CODE (OP0 (yyvsp[0].ttype)) == NAMESPACE_DECL)\n \t\t    {\n \t\t      push_decl_namespace (OP0 (yyvsp[0].ttype));\n@@ -6715,7 +6729,7 @@ case 606:\n \t\t;\n     break;}\n case 607:\n-#line 2814 \"parse.y\"\n+#line 2828 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  if (yyvsp[-1].ttype != current_class_type)\n@@ -6726,51 +6740,51 @@ case 607:\n \t\t;\n     break;}\n case 608:\n-#line 2826 \"parse.y\"\n+#line 2840 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 609:\n-#line 2829 \"parse.y\"\n+#line 2843 \"parse.y\"\n { got_scope = NULL_TREE;\n  \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 610:\n-#line 2835 \"parse.y\"\n+#line 2849 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 611:\n-#line 2838 \"parse.y\"\n+#line 2852 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 613:\n-#line 2845 \"parse.y\"\n+#line 2859 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 614:\n-#line 2850 \"parse.y\"\n+#line 2864 \"parse.y\"\n { yyval.ttype = build_functional_cast (yyvsp[-3].ftype.t, yyvsp[-1].ttype); ;\n     break;}\n case 615:\n-#line 2852 \"parse.y\"\n+#line 2866 \"parse.y\"\n { yyval.ttype = reparse_decl_as_expr (yyvsp[-3].ftype.t, yyvsp[-1].ttype); ;\n     break;}\n case 616:\n-#line 2854 \"parse.y\"\n+#line 2868 \"parse.y\"\n { yyval.ttype = reparse_absdcl_as_expr (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 621:\n-#line 2866 \"parse.y\"\n+#line 2880 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 622:\n-#line 2868 \"parse.y\"\n+#line 2882 \"parse.y\"\n { got_scope = yyval.ttype = make_typename_type (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 623:\n-#line 2875 \"parse.y\"\n+#line 2889 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) == IDENTIFIER_NODE)\n \t\t    {\n@@ -6786,31 +6800,31 @@ case 623:\n \t\t;\n     break;}\n case 624:\n-#line 2889 \"parse.y\"\n+#line 2903 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype = TREE_TYPE (yyval.ttype);\n \t\t;\n     break;}\n case 625:\n-#line 2895 \"parse.y\"\n+#line 2909 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyval.ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype;\n \t\t;\n     break;}\n case 626:\n-#line 2901 \"parse.y\"\n+#line 2915 \"parse.y\"\n { got_scope = yyval.ttype = complete_type (TREE_TYPE (yyvsp[-1].ttype)); ;\n     break;}\n case 628:\n-#line 2917 \"parse.y\"\n+#line 2931 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 629:\n-#line 2922 \"parse.y\"\n+#line 2936 \"parse.y\"\n {\n \t\t  if (TREE_CODE_CLASS (TREE_CODE (yyvsp[-1].ttype)) == 't')\n \t\t    yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype);\n@@ -6825,26 +6839,26 @@ case 629:\n \t\t;\n     break;}\n case 630:\n-#line 2935 \"parse.y\"\n+#line 2949 \"parse.y\"\n { yyval.ttype = TREE_TYPE (yyvsp[0].ttype); ;\n     break;}\n case 631:\n-#line 2937 \"parse.y\"\n+#line 2951 \"parse.y\"\n { yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 632:\n-#line 2939 \"parse.y\"\n+#line 2953 \"parse.y\"\n { yyval.ttype = make_typename_type (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 633:\n-#line 2944 \"parse.y\"\n+#line 2958 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    cp_error (\"`%T' is not a class or namespace\", yyvsp[0].ttype);\n \t\t;\n     break;}\n case 634:\n-#line 2949 \"parse.y\"\n+#line 2963 \"parse.y\"\n {\n \t\t  if (TREE_CODE_CLASS (TREE_CODE (yyvsp[-1].ttype)) == 't')\n \t\t    yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype);\n@@ -6859,15 +6873,15 @@ case 634:\n \t\t;\n     break;}\n case 635:\n-#line 2962 \"parse.y\"\n+#line 2976 \"parse.y\"\n { got_scope = yyval.ttype = make_typename_type (yyvsp[-2].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 636:\n-#line 2964 \"parse.y\"\n+#line 2978 \"parse.y\"\n { got_scope = yyval.ttype = make_typename_type (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 637:\n-#line 2969 \"parse.y\"\n+#line 2983 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) != IDENTIFIER_NODE)\n \t\t    yyvsp[-1].ttype = lastiddecl;\n@@ -6881,31 +6895,31 @@ case 637:\n \t\t;\n     break;}\n case 638:\n-#line 2981 \"parse.y\"\n+#line 2995 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) != IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype = complete_type (TREE_TYPE (yyval.ttype));\n \t\t;\n     break;}\n case 639:\n-#line 2987 \"parse.y\"\n+#line 3001 \"parse.y\"\n { got_scope = yyval.ttype = complete_type (TREE_TYPE (yyval.ttype)); ;\n     break;}\n case 642:\n-#line 2991 \"parse.y\"\n+#line 3005 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyval.ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype;\n \t\t;\n     break;}\n case 643:\n-#line 3000 \"parse.y\"\n+#line 3014 \"parse.y\"\n { yyval.ttype = build_min_nt (TEMPLATE_ID_EXPR, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 644:\n-#line 3005 \"parse.y\"\n+#line 3019 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = IDENTIFIER_GLOBAL_VALUE (yyvsp[0].ttype);\n@@ -6915,148 +6929,148 @@ case 644:\n \t\t;\n     break;}\n case 646:\n-#line 3014 \"parse.y\"\n+#line 3028 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 647:\n-#line 3019 \"parse.y\"\n+#line 3033 \"parse.y\"\n { got_scope = NULL_TREE; ;\n     break;}\n case 648:\n-#line 3021 \"parse.y\"\n+#line 3035 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; got_scope = NULL_TREE; ;\n     break;}\n case 649:\n-#line 3028 \"parse.y\"\n+#line 3042 \"parse.y\"\n { got_scope = void_type_node; ;\n     break;}\n case 650:\n-#line 3034 \"parse.y\"\n+#line 3048 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 651:\n-#line 3036 \"parse.y\"\n+#line 3050 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 652:\n-#line 3038 \"parse.y\"\n+#line 3052 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 653:\n-#line 3040 \"parse.y\"\n+#line 3054 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 654:\n-#line 3042 \"parse.y\"\n+#line 3056 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, arg);\n \t\t;\n     break;}\n case 655:\n-#line 3046 \"parse.y\"\n+#line 3060 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 657:\n-#line 3055 \"parse.y\"\n+#line 3069 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 658:\n-#line 3057 \"parse.y\"\n+#line 3071 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 659:\n-#line 3063 \"parse.y\"\n+#line 3077 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 660:\n-#line 3065 \"parse.y\"\n+#line 3079 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 661:\n-#line 3067 \"parse.y\"\n+#line 3081 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[0].ftype.t, NULL_TREE); ;\n     break;}\n case 662:\n-#line 3069 \"parse.y\"\n+#line 3083 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, NULL_TREE); ;\n     break;}\n case 663:\n-#line 3071 \"parse.y\"\n+#line 3085 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 664:\n-#line 3073 \"parse.y\"\n+#line 3087 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 665:\n-#line 3075 \"parse.y\"\n+#line 3089 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[0].ftype.t, NULL_TREE); ;\n     break;}\n case 666:\n-#line 3077 \"parse.y\"\n+#line 3091 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, NULL_TREE); ;\n     break;}\n case 667:\n-#line 3079 \"parse.y\"\n+#line 3093 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, arg);\n \t\t;\n     break;}\n case 668:\n-#line 3083 \"parse.y\"\n+#line 3097 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 670:\n-#line 3092 \"parse.y\"\n+#line 3106 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 672:\n-#line 3096 \"parse.y\"\n+#line 3110 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 673:\n-#line 3098 \"parse.y\"\n+#line 3112 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, empty_parms (), yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 674:\n-#line 3100 \"parse.y\"\n+#line 3114 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 675:\n-#line 3102 \"parse.y\"\n+#line 3116 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, NULL_TREE); ;\n     break;}\n case 676:\n-#line 3104 \"parse.y\"\n+#line 3118 \"parse.y\"\n { yyval.ttype = make_call_declarator (NULL_TREE, yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 677:\n-#line 3106 \"parse.y\"\n+#line 3120 \"parse.y\"\n { set_quals_and_spec (yyval.ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 678:\n-#line 3108 \"parse.y\"\n+#line 3122 \"parse.y\"\n { set_quals_and_spec (yyval.ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 679:\n-#line 3110 \"parse.y\"\n+#line 3124 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 680:\n-#line 3112 \"parse.y\"\n+#line 3126 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, NULL_TREE, NULL_TREE); ;\n     break;}\n case 687:\n-#line 3135 \"parse.y\"\n+#line 3149 \"parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids label declarations\"); ;\n     break;}\n case 690:\n-#line 3146 \"parse.y\"\n+#line 3160 \"parse.y\"\n { tree link;\n \t\t  for (link = yyvsp[-1].ttype; link; link = TREE_CHAIN (link))\n \t\t    {\n@@ -7067,225 +7081,225 @@ case 690:\n \t\t;\n     break;}\n case 691:\n-#line 3160 \"parse.y\"\n+#line 3174 \"parse.y\"\n {;\n     break;}\n case 693:\n-#line 3166 \"parse.y\"\n+#line 3180 \"parse.y\"\n { yyval.ttype = begin_compound_stmt (0); ;\n     break;}\n case 694:\n-#line 3168 \"parse.y\"\n+#line 3182 \"parse.y\"\n { yyval.ttype = finish_compound_stmt (0, yyvsp[-1].ttype); ;\n     break;}\n case 695:\n-#line 3173 \"parse.y\"\n+#line 3187 \"parse.y\"\n {\n \t\t  yyval.ttype = begin_if_stmt ();\n \t\t  cond_stmt_keyword = \"if\";\n \t\t;\n     break;}\n case 696:\n-#line 3178 \"parse.y\"\n+#line 3192 \"parse.y\"\n { finish_if_stmt_cond (yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 697:\n-#line 3180 \"parse.y\"\n+#line 3194 \"parse.y\"\n { yyval.ttype = finish_then_clause (yyvsp[-3].ttype); ;\n     break;}\n case 699:\n-#line 3185 \"parse.y\"\n+#line 3199 \"parse.y\"\n { yyval.ttype = begin_compound_stmt (0); ;\n     break;}\n case 700:\n-#line 3187 \"parse.y\"\n+#line 3201 \"parse.y\"\n { yyval.ttype = finish_compound_stmt (0, yyvsp[-1].ttype); ;\n     break;}\n case 701:\n-#line 3192 \"parse.y\"\n+#line 3206 \"parse.y\"\n {;\n     break;}\n case 703:\n-#line 3198 \"parse.y\"\n+#line 3212 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 704:\n-#line 3200 \"parse.y\"\n+#line 3214 \"parse.y\"\n { finish_expr_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 705:\n-#line 3202 \"parse.y\"\n+#line 3216 \"parse.y\"\n { begin_else_clause (); ;\n     break;}\n case 706:\n-#line 3204 \"parse.y\"\n+#line 3218 \"parse.y\"\n { \n \t\t  finish_else_clause (yyvsp[-3].ttype); \n \t\t  finish_if_stmt ();\n \t\t;\n     break;}\n case 707:\n-#line 3209 \"parse.y\"\n+#line 3223 \"parse.y\"\n { finish_if_stmt (); ;\n     break;}\n case 708:\n-#line 3211 \"parse.y\"\n+#line 3225 \"parse.y\"\n {\n \t\t  yyval.ttype = begin_while_stmt ();\n \t\t  cond_stmt_keyword = \"while\";\n \t\t;\n     break;}\n case 709:\n-#line 3216 \"parse.y\"\n+#line 3230 \"parse.y\"\n { finish_while_stmt_cond (yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 710:\n-#line 3218 \"parse.y\"\n+#line 3232 \"parse.y\"\n { finish_while_stmt (yyvsp[-3].ttype); ;\n     break;}\n case 711:\n-#line 3220 \"parse.y\"\n+#line 3234 \"parse.y\"\n { yyval.ttype = begin_do_stmt (); ;\n     break;}\n case 712:\n-#line 3222 \"parse.y\"\n+#line 3236 \"parse.y\"\n {\n \t\t  finish_do_body (yyvsp[-2].ttype);\n \t\t  cond_stmt_keyword = \"do\";\n \t\t;\n     break;}\n case 713:\n-#line 3227 \"parse.y\"\n+#line 3241 \"parse.y\"\n { finish_do_stmt (yyvsp[-1].ttype, yyvsp[-5].ttype); ;\n     break;}\n case 714:\n-#line 3229 \"parse.y\"\n+#line 3243 \"parse.y\"\n { yyval.ttype = begin_for_stmt (); ;\n     break;}\n case 715:\n-#line 3231 \"parse.y\"\n+#line 3245 \"parse.y\"\n { finish_for_init_stmt (yyvsp[-2].ttype); ;\n     break;}\n case 716:\n-#line 3233 \"parse.y\"\n+#line 3247 \"parse.y\"\n { finish_for_cond (yyvsp[-1].ttype, yyvsp[-5].ttype); ;\n     break;}\n case 717:\n-#line 3235 \"parse.y\"\n+#line 3249 \"parse.y\"\n { finish_for_expr (yyvsp[-1].ttype, yyvsp[-8].ttype); ;\n     break;}\n case 718:\n-#line 3237 \"parse.y\"\n+#line 3251 \"parse.y\"\n { finish_for_stmt (yyvsp[-3].ttype, yyvsp[-10].ttype); ;\n     break;}\n case 719:\n-#line 3239 \"parse.y\"\n+#line 3253 \"parse.y\"\n { begin_switch_stmt (); ;\n     break;}\n case 720:\n-#line 3241 \"parse.y\"\n+#line 3255 \"parse.y\"\n { yyval.ttype = finish_switch_cond (yyvsp[-1].ttype); ;\n     break;}\n case 721:\n-#line 3243 \"parse.y\"\n+#line 3257 \"parse.y\"\n { finish_switch_stmt (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 722:\n-#line 3245 \"parse.y\"\n+#line 3259 \"parse.y\"\n { finish_case_label (yyvsp[-1].ttype, NULL_TREE); ;\n     break;}\n case 724:\n-#line 3248 \"parse.y\"\n+#line 3262 \"parse.y\"\n { finish_case_label (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 726:\n-#line 3251 \"parse.y\"\n+#line 3265 \"parse.y\"\n { finish_case_label (NULL_TREE, NULL_TREE); ;\n     break;}\n case 728:\n-#line 3254 \"parse.y\"\n+#line 3268 \"parse.y\"\n { finish_break_stmt (); ;\n     break;}\n case 729:\n-#line 3256 \"parse.y\"\n+#line 3270 \"parse.y\"\n { finish_continue_stmt (); ;\n     break;}\n case 730:\n-#line 3258 \"parse.y\"\n+#line 3272 \"parse.y\"\n { finish_return_stmt (NULL_TREE); ;\n     break;}\n case 731:\n-#line 3260 \"parse.y\"\n+#line 3274 \"parse.y\"\n { finish_return_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 732:\n-#line 3262 \"parse.y\"\n+#line 3276 \"parse.y\"\n { \n \t\t  finish_asm_stmt (yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE, NULL_TREE,\n \t\t\t\t   NULL_TREE); \n \t\t;\n     break;}\n case 733:\n-#line 3268 \"parse.y\"\n+#line 3282 \"parse.y\"\n { \n \t\t  finish_asm_stmt (yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE,\n \t\t\t\t   NULL_TREE); \n \t\t;\n     break;}\n case 734:\n-#line 3274 \"parse.y\"\n+#line 3288 \"parse.y\"\n { finish_asm_stmt (yyvsp[-8].ttype, yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 735:\n-#line 3278 \"parse.y\"\n+#line 3292 \"parse.y\"\n { finish_asm_stmt (yyvsp[-10].ttype, yyvsp[-8].ttype, yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype); ;\n     break;}\n case 736:\n-#line 3280 \"parse.y\"\n+#line 3294 \"parse.y\"\n { \n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids computed gotos\");\n \t\t  finish_goto_stmt (yyvsp[-1].ttype);\n \t\t;\n     break;}\n case 737:\n-#line 3286 \"parse.y\"\n+#line 3300 \"parse.y\"\n { finish_goto_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 738:\n-#line 3288 \"parse.y\"\n+#line 3302 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 739:\n-#line 3290 \"parse.y\"\n+#line 3304 \"parse.y\"\n { error (\"label must be followed by statement\");\n \t\t  yyungetc ('}', 0);\n \t\t  finish_stmt (); ;\n     break;}\n case 740:\n-#line 3294 \"parse.y\"\n+#line 3308 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 743:\n-#line 3298 \"parse.y\"\n+#line 3312 \"parse.y\"\n { do_local_using_decl (yyvsp[0].ttype); ;\n     break;}\n case 745:\n-#line 3304 \"parse.y\"\n+#line 3318 \"parse.y\"\n {\n \t\t  if (! current_function_parms_stored)\n \t\t    store_parm_decls ();\n \t\t  expand_start_early_try_stmts ();\n \t\t;\n     break;}\n case 746:\n-#line 3310 \"parse.y\"\n+#line 3324 \"parse.y\"\n { \n                   expand_start_all_catch (); \n                 ;\n     break;}\n case 747:\n-#line 3314 \"parse.y\"\n+#line 3328 \"parse.y\"\n {\n \t\t  int nested = (hack_decl_function_context\n \t\t\t\t(current_function_decl) != NULL_TREE);\n@@ -7294,41 +7308,41 @@ case 747:\n \t\t;\n     break;}\n case 748:\n-#line 3324 \"parse.y\"\n+#line 3338 \"parse.y\"\n { yyval.ttype = begin_try_block (); ;\n     break;}\n case 749:\n-#line 3326 \"parse.y\"\n+#line 3340 \"parse.y\"\n { finish_try_block (yyvsp[-1].ttype); ;\n     break;}\n case 750:\n-#line 3328 \"parse.y\"\n+#line 3342 \"parse.y\"\n { finish_handler_sequence (yyvsp[-3].ttype); ;\n     break;}\n case 753:\n-#line 3338 \"parse.y\"\n+#line 3352 \"parse.y\"\n { yyval.ttype = begin_handler(); ;\n     break;}\n case 754:\n-#line 3340 \"parse.y\"\n+#line 3354 \"parse.y\"\n { finish_handler_parms (yyvsp[-1].ttype); ;\n     break;}\n case 755:\n-#line 3342 \"parse.y\"\n+#line 3356 \"parse.y\"\n { finish_handler (yyvsp[-3].ttype); ;\n     break;}\n case 758:\n-#line 3352 \"parse.y\"\n+#line 3366 \"parse.y\"\n { expand_start_catch_block (NULL_TREE, NULL_TREE); ;\n     break;}\n case 759:\n-#line 3368 \"parse.y\"\n+#line 3382 \"parse.y\"\n { check_for_new_type (\"inside exception declarations\", yyvsp[-1].ftype);\n \t\t  expand_start_catch_block (TREE_PURPOSE (yyvsp[-1].ftype.t),\n \t\t\t\t\t    TREE_VALUE (yyvsp[-1].ftype.t)); ;\n     break;}\n case 760:\n-#line 3375 \"parse.y\"\n+#line 3389 \"parse.y\"\n { tree label;\n \t\tdo_label:\n \t\t  label = define_label (input_filename, lineno, yyvsp[-1].ttype);\n@@ -7337,98 +7351,98 @@ case 760:\n \t\t;\n     break;}\n case 761:\n-#line 3382 \"parse.y\"\n+#line 3396 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 762:\n-#line 3384 \"parse.y\"\n+#line 3398 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 763:\n-#line 3386 \"parse.y\"\n+#line 3400 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 764:\n-#line 3391 \"parse.y\"\n+#line 3405 \"parse.y\"\n { if (yyvsp[-1].ttype) cplus_expand_expr_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 766:\n-#line 3394 \"parse.y\"\n+#line 3408 \"parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids compound statements inside for initializations\");\n \t\t;\n     break;}\n case 767:\n-#line 3403 \"parse.y\"\n+#line 3417 \"parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 768:\n-#line 3406 \"parse.y\"\n+#line 3420 \"parse.y\"\n { emit_line_note (input_filename, lineno); ;\n     break;}\n case 769:\n-#line 3411 \"parse.y\"\n+#line 3425 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 771:\n-#line 3414 \"parse.y\"\n+#line 3428 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 772:\n-#line 3421 \"parse.y\"\n+#line 3435 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 775:\n-#line 3428 \"parse.y\"\n+#line 3442 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 776:\n-#line 3433 \"parse.y\"\n+#line 3447 \"parse.y\"\n { yyval.ttype = build_tree_list (yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 777:\n-#line 3438 \"parse.y\"\n+#line 3452 \"parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyval.ttype, NULL_TREE); ;\n     break;}\n case 778:\n-#line 3440 \"parse.y\"\n+#line 3454 \"parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyval.ttype); ;\n     break;}\n case 779:\n-#line 3451 \"parse.y\"\n+#line 3465 \"parse.y\"\n {\n \t\t  yyval.ttype = empty_parms();\n \t\t;\n     break;}\n case 781:\n-#line 3456 \"parse.y\"\n+#line 3470 \"parse.y\"\n { yyval.ttype = finish_parmlist (build_tree_list (NULL_TREE, yyvsp[0].ftype.t), 0);\n \t\t  check_for_new_type (\"inside parameter list\", yyvsp[0].ftype); ;\n     break;}\n case 782:\n-#line 3464 \"parse.y\"\n+#line 3478 \"parse.y\"\n { yyval.ttype = finish_parmlist (yyval.ttype, 0); ;\n     break;}\n case 783:\n-#line 3466 \"parse.y\"\n+#line 3480 \"parse.y\"\n { yyval.ttype = finish_parmlist (yyvsp[-1].ttype, 1); ;\n     break;}\n case 784:\n-#line 3469 \"parse.y\"\n+#line 3483 \"parse.y\"\n { yyval.ttype = finish_parmlist (yyvsp[-1].ttype, 1); ;\n     break;}\n case 785:\n-#line 3471 \"parse.y\"\n+#line 3485 \"parse.y\"\n { yyval.ttype = finish_parmlist (build_tree_list (NULL_TREE,\n \t\t\t\t\t\t\t yyvsp[-1].ftype.t), 1); ;\n     break;}\n case 786:\n-#line 3474 \"parse.y\"\n+#line 3488 \"parse.y\"\n { yyval.ttype = finish_parmlist (NULL_TREE, 1); ;\n     break;}\n case 787:\n-#line 3476 \"parse.y\"\n+#line 3490 \"parse.y\"\n {\n \t\t  /* This helps us recover from really nasty\n \t\t     parse errors, for example, a missing right\n@@ -7440,7 +7454,7 @@ case 787:\n \t\t;\n     break;}\n case 788:\n-#line 3486 \"parse.y\"\n+#line 3500 \"parse.y\"\n {\n \t\t  /* This helps us recover from really nasty\n \t\t     parse errors, for example, a missing right\n@@ -7453,98 +7467,98 @@ case 788:\n \t\t;\n     break;}\n case 789:\n-#line 3501 \"parse.y\"\n+#line 3515 \"parse.y\"\n { maybe_snarf_defarg (); ;\n     break;}\n case 790:\n-#line 3503 \"parse.y\"\n+#line 3517 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 793:\n-#line 3514 \"parse.y\"\n+#line 3528 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[0].ftype);\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ftype.t); ;\n     break;}\n case 794:\n-#line 3517 \"parse.y\"\n+#line 3531 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[-1].ftype);\n \t\t  yyval.ttype = build_tree_list (yyvsp[0].ttype, yyvsp[-1].ftype.t); ;\n     break;}\n case 795:\n-#line 3520 \"parse.y\"\n+#line 3534 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[0].ftype);\n \t\t  yyval.ttype = chainon (yyval.ttype, yyvsp[0].ftype.t); ;\n     break;}\n case 796:\n-#line 3523 \"parse.y\"\n+#line 3537 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 797:\n-#line 3525 \"parse.y\"\n+#line 3539 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, build_tree_list (yyvsp[0].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 799:\n-#line 3531 \"parse.y\"\n+#line 3545 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[-1].ftype);\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[-1].ftype.t); ;\n     break;}\n case 800:\n-#line 3541 \"parse.y\"\n+#line 3555 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag;\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype); ;\n     break;}\n case 801:\n-#line 3545 \"parse.y\"\n+#line 3559 \"parse.y\"\n { yyval.ftype.t = build_tree_list (yyvsp[-1].ftype.t, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 802:\n-#line 3548 \"parse.y\"\n+#line 3562 \"parse.y\"\n { yyval.ftype.t = build_tree_list (get_decl_list (yyvsp[-1].ftype.t), yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 803:\n-#line 3551 \"parse.y\"\n+#line 3565 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 804:\n-#line 3555 \"parse.y\"\n+#line 3569 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[0].ftype.t);\n \t\t  yyval.ftype.t = build_tree_list (specs, NULL_TREE); \n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag; ;\n     break;}\n case 805:\n-#line 3559 \"parse.y\"\n+#line 3573 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ttype);\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = 0; ;\n     break;}\n case 806:\n-#line 3566 \"parse.y\"\n+#line 3580 \"parse.y\"\n { yyval.ftype.t = build_tree_list (NULL_TREE, yyvsp[0].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag;  ;\n     break;}\n case 807:\n-#line 3569 \"parse.y\"\n+#line 3583 \"parse.y\"\n { yyval.ftype.t = build_tree_list (yyvsp[0].ttype, yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag;  ;\n     break;}\n case 810:\n-#line 3580 \"parse.y\"\n+#line 3594 \"parse.y\"\n { see_typename (); ;\n     break;}\n case 811:\n-#line 3585 \"parse.y\"\n+#line 3599 \"parse.y\"\n {\n \t\t  error (\"type specifier omitted for parameter\");\n \t\t  yyval.ttype = build_tree_list (integer_type_node, NULL_TREE);\n \t\t;\n     break;}\n case 812:\n-#line 3590 \"parse.y\"\n+#line 3604 \"parse.y\"\n {\n \t\t  error (\"type specifier omitted for parameter\");\n \t\t  if (TREE_CODE (yyval.ttype) == SCOPE_REF\n@@ -7555,188 +7569,188 @@ case 812:\n \t\t;\n     break;}\n case 813:\n-#line 3602 \"parse.y\"\n+#line 3616 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 814:\n-#line 3604 \"parse.y\"\n+#line 3618 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 815:\n-#line 3606 \"parse.y\"\n+#line 3620 \"parse.y\"\n { yyval.ttype = build_decl_list (NULL_TREE, NULL_TREE); ;\n     break;}\n case 816:\n-#line 3611 \"parse.y\"\n+#line 3625 \"parse.y\"\n { yyval.ttype = build_decl_list (NULL_TREE, groktypename(yyvsp[0].ftype.t)); ;\n     break;}\n case 818:\n-#line 3617 \"parse.y\"\n+#line 3631 \"parse.y\"\n {\n \t\t  TREE_CHAIN (yyvsp[0].ttype) = yyval.ttype;\n \t\t  yyval.ttype = yyvsp[0].ttype;\n \t\t;\n     break;}\n case 819:\n-#line 3625 \"parse.y\"\n+#line 3639 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 820:\n-#line 3627 \"parse.y\"\n+#line 3641 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 821:\n-#line 3629 \"parse.y\"\n+#line 3643 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 822:\n-#line 3631 \"parse.y\"\n+#line 3645 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 823:\n-#line 3638 \"parse.y\"\n+#line 3652 \"parse.y\"\n { got_scope = NULL_TREE; ;\n     break;}\n case 824:\n-#line 3643 \"parse.y\"\n+#line 3657 \"parse.y\"\n { yyval.ttype = ansi_opname[MULT_EXPR]; ;\n     break;}\n case 825:\n-#line 3645 \"parse.y\"\n+#line 3659 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUNC_DIV_EXPR]; ;\n     break;}\n case 826:\n-#line 3647 \"parse.y\"\n+#line 3661 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUNC_MOD_EXPR]; ;\n     break;}\n case 827:\n-#line 3649 \"parse.y\"\n+#line 3663 \"parse.y\"\n { yyval.ttype = ansi_opname[PLUS_EXPR]; ;\n     break;}\n case 828:\n-#line 3651 \"parse.y\"\n+#line 3665 \"parse.y\"\n { yyval.ttype = ansi_opname[MINUS_EXPR]; ;\n     break;}\n case 829:\n-#line 3653 \"parse.y\"\n+#line 3667 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_AND_EXPR]; ;\n     break;}\n case 830:\n-#line 3655 \"parse.y\"\n+#line 3669 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_IOR_EXPR]; ;\n     break;}\n case 831:\n-#line 3657 \"parse.y\"\n+#line 3671 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_XOR_EXPR]; ;\n     break;}\n case 832:\n-#line 3659 \"parse.y\"\n+#line 3673 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_NOT_EXPR]; ;\n     break;}\n case 833:\n-#line 3661 \"parse.y\"\n+#line 3675 \"parse.y\"\n { yyval.ttype = ansi_opname[COMPOUND_EXPR]; ;\n     break;}\n case 834:\n-#line 3663 \"parse.y\"\n+#line 3677 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 835:\n-#line 3665 \"parse.y\"\n+#line 3679 \"parse.y\"\n { yyval.ttype = ansi_opname[LT_EXPR]; ;\n     break;}\n case 836:\n-#line 3667 \"parse.y\"\n+#line 3681 \"parse.y\"\n { yyval.ttype = ansi_opname[GT_EXPR]; ;\n     break;}\n case 837:\n-#line 3669 \"parse.y\"\n+#line 3683 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 838:\n-#line 3671 \"parse.y\"\n+#line 3685 \"parse.y\"\n { yyval.ttype = ansi_assopname[yyvsp[0].code]; ;\n     break;}\n case 839:\n-#line 3673 \"parse.y\"\n+#line 3687 \"parse.y\"\n { yyval.ttype = ansi_opname [MODIFY_EXPR]; ;\n     break;}\n case 840:\n-#line 3675 \"parse.y\"\n+#line 3689 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 841:\n-#line 3677 \"parse.y\"\n+#line 3691 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 842:\n-#line 3679 \"parse.y\"\n+#line 3693 \"parse.y\"\n { yyval.ttype = ansi_opname[POSTINCREMENT_EXPR]; ;\n     break;}\n case 843:\n-#line 3681 \"parse.y\"\n+#line 3695 \"parse.y\"\n { yyval.ttype = ansi_opname[PREDECREMENT_EXPR]; ;\n     break;}\n case 844:\n-#line 3683 \"parse.y\"\n+#line 3697 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_ANDIF_EXPR]; ;\n     break;}\n case 845:\n-#line 3685 \"parse.y\"\n+#line 3699 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_ORIF_EXPR]; ;\n     break;}\n case 846:\n-#line 3687 \"parse.y\"\n+#line 3701 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_NOT_EXPR]; ;\n     break;}\n case 847:\n-#line 3689 \"parse.y\"\n+#line 3703 \"parse.y\"\n { yyval.ttype = ansi_opname[COND_EXPR]; ;\n     break;}\n case 848:\n-#line 3691 \"parse.y\"\n+#line 3705 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 849:\n-#line 3693 \"parse.y\"\n+#line 3707 \"parse.y\"\n { yyval.ttype = ansi_opname[COMPONENT_REF]; ;\n     break;}\n case 850:\n-#line 3695 \"parse.y\"\n+#line 3709 \"parse.y\"\n { yyval.ttype = ansi_opname[MEMBER_REF]; ;\n     break;}\n case 851:\n-#line 3697 \"parse.y\"\n+#line 3711 \"parse.y\"\n { yyval.ttype = ansi_opname[CALL_EXPR]; ;\n     break;}\n case 852:\n-#line 3699 \"parse.y\"\n+#line 3713 \"parse.y\"\n { yyval.ttype = ansi_opname[ARRAY_REF]; ;\n     break;}\n case 853:\n-#line 3701 \"parse.y\"\n+#line 3715 \"parse.y\"\n { yyval.ttype = ansi_opname[NEW_EXPR]; ;\n     break;}\n case 854:\n-#line 3703 \"parse.y\"\n+#line 3717 \"parse.y\"\n { yyval.ttype = ansi_opname[DELETE_EXPR]; ;\n     break;}\n case 855:\n-#line 3705 \"parse.y\"\n+#line 3719 \"parse.y\"\n { yyval.ttype = ansi_opname[VEC_NEW_EXPR]; ;\n     break;}\n case 856:\n-#line 3707 \"parse.y\"\n+#line 3721 \"parse.y\"\n { yyval.ttype = ansi_opname[VEC_DELETE_EXPR]; ;\n     break;}\n case 857:\n-#line 3710 \"parse.y\"\n+#line 3724 \"parse.y\"\n { yyval.ttype = grokoptypename (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 858:\n-#line 3712 \"parse.y\"\n+#line 3726 \"parse.y\"\n { yyval.ttype = ansi_opname[ERROR_MARK]; ;\n     break;}\n }\n@@ -7937,7 +7951,7 @@ case 858:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 3715 \"parse.y\"\n+#line 3729 \"parse.y\"\n \n \n #ifdef SPEW_DEBUG"}, {"sha": "2dab9f0a241e739a2536f64e7a0076b3adebe542", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25eb19ff0a02a74e3456d8e66e6eb09279303a96/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25eb19ff0a02a74e3456d8e66e6eb09279303a96/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=25eb19ff0a02a74e3456d8e66e6eb09279303a96", "patch": "@@ -2237,7 +2237,14 @@ base_class_list:\n base_class:\n \t  base_class.1\n \t\t{\n-\t\t  tree type = TREE_TYPE ($1);\n+\t\t  tree type;\n+\t\t  if ($1 == NULL_TREE)\n+\t\t    {\n+\t\t      error (\"invalid base class\");\n+\t\t      type = error_mark_node;\n+\t\t    }\n+\t\t  else\n+\t\t    type = TREE_TYPE ($1);\n \t\t  if (! is_aggr_type (type, 1))\n \t\t    $$ = NULL_TREE;\n \t\t  else if (current_aggr == signature_type_node\n@@ -2262,7 +2269,14 @@ base_class:\n \t\t}\n \t| base_class_access_list see_typename base_class.1\n \t\t{\n-\t\t  tree type = TREE_TYPE ($3);\n+\t\t  tree type;\n+\t\t  if ($3 == NULL_TREE)\n+\t\t    {\n+\t\t      error (\"invalid base class\");\n+\t\t      type = error_mark_node;\n+\t\t    }\n+\t\t  else\n+\t\t    type = TREE_TYPE ($3);\n \t\t  if (current_aggr == signature_type_node)\n \t\t    error (\"access and source specifiers not allowed in signature\");\n \t\t  if (! is_aggr_type (type, 1))"}]}