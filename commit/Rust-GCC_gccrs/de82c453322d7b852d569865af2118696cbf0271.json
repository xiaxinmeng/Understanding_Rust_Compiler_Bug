{"sha": "de82c453322d7b852d569865af2118696cbf0271", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGU4MmM0NTMzMjJkN2I4NTJkNTY5ODY1YWYyMTE4Njk2Y2JmMDI3MQ==", "commit": {"author": {"name": "Revital Eres", "email": "eres@il.ibm.com", "date": "2008-02-19T09:19:36Z"}, "committer": {"name": "Revital Eres", "email": "revitale@gcc.gnu.org", "date": "2008-02-19T09:19:36Z"}, "message": "SMS: Minor misc fixes\n\nFrom-SVN: r132423", "tree": {"sha": "b86cf20201973c9b84277e0b31e98777a2e286b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b86cf20201973c9b84277e0b31e98777a2e286b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de82c453322d7b852d569865af2118696cbf0271", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de82c453322d7b852d569865af2118696cbf0271", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de82c453322d7b852d569865af2118696cbf0271", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de82c453322d7b852d569865af2118696cbf0271/comments", "author": {"login": "revit13", "id": 16211463, "node_id": "MDQ6VXNlcjE2MjExNDYz", "avatar_url": "https://avatars.githubusercontent.com/u/16211463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/revit13", "html_url": "https://github.com/revit13", "followers_url": "https://api.github.com/users/revit13/followers", "following_url": "https://api.github.com/users/revit13/following{/other_user}", "gists_url": "https://api.github.com/users/revit13/gists{/gist_id}", "starred_url": "https://api.github.com/users/revit13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/revit13/subscriptions", "organizations_url": "https://api.github.com/users/revit13/orgs", "repos_url": "https://api.github.com/users/revit13/repos", "events_url": "https://api.github.com/users/revit13/events{/privacy}", "received_events_url": "https://api.github.com/users/revit13/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "80fa012e02ac0601af67460f794c49a9f6c7e679", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80fa012e02ac0601af67460f794c49a9f6c7e679", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80fa012e02ac0601af67460f794c49a9f6c7e679"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "ea1635cc3e716807ed911bfa5a75b5dacce5f4d5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de82c453322d7b852d569865af2118696cbf0271/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de82c453322d7b852d569865af2118696cbf0271/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=de82c453322d7b852d569865af2118696cbf0271", "patch": "@@ -1,3 +1,10 @@\n+2008-02-19  Revital Eres  <eres@il.ibm.com> \n+\n+\t* modulo-sched.c (sms_schedule): Change dump message when\n+\tcreate_ddg function fails.\n+\t(try_scheduling_node_in_cycle): Rename row to cycle.\n+\t(print_partial_schedule): Rename CYCLE to ROW.\n+\n 2008-02-19  Christian Bruel  <christian.bruel@st.com>\n             Zdenek Dvorak  <ook@ucw.cz>\n \t"}, {"sha": "0fe180fac016d616caf19be5ebd6cde876155f35", "filename": "gcc/modulo-sched.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de82c453322d7b852d569865af2118696cbf0271/gcc%2Fmodulo-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de82c453322d7b852d569865af2118696cbf0271/gcc%2Fmodulo-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmodulo-sched.c?ref=de82c453322d7b852d569865af2118696cbf0271", "patch": "@@ -1045,7 +1045,7 @@ sms_schedule (void)\n       if (! (g = create_ddg (bb, 0)))\n         {\n           if (dump_file)\n-\t    fprintf (dump_file, \"SMS doloop\\n\");\n+\t    fprintf (dump_file, \"SMS create_ddg failed\\n\");\n \t  continue;\n         }\n \n@@ -1669,24 +1669,24 @@ calculate_must_precede_follow (ddg_node_ptr u_node, int start, int end,\n \n static bool\n try_scheduling_node_in_cycle (partial_schedule_ptr ps, ddg_node_ptr u_node,\n-\t\t\t      int u, int row, sbitmap sched_nodes,\n+\t\t\t      int u, int cycle, sbitmap sched_nodes,\n \t\t\t      int *num_splits, sbitmap must_precede,\n \t\t\t      sbitmap must_follow)\n {\n   ps_insn_ptr psi;\n   bool success = 0;\n \n   verify_partial_schedule (ps, sched_nodes);\n-  psi = ps_add_node_check_conflicts (ps, u_node, row,\n+  psi = ps_add_node_check_conflicts (ps, u_node, cycle,\n \t\t\t\t     must_precede, must_follow);\n   if (psi)\n     {\n-      SCHED_TIME (u_node) = row;\n+      SCHED_TIME (u_node) = cycle;\n       SET_BIT (sched_nodes, u);\n       success = 1;\n       *num_splits = 0;\n       if (dump_file)\n-\tfprintf (dump_file, \"Scheduled w/o split in %d\\n\", row);\n+\tfprintf (dump_file, \"Scheduled w/o split in %d\\n\", cycle);\n \n     }\n \n@@ -2472,7 +2472,7 @@ print_partial_schedule (partial_schedule_ptr ps, FILE *dump)\n     {\n       ps_insn_ptr ps_i = ps->rows[i];\n \n-      fprintf (dump, \"\\n[CYCLE %d ]: \", i);\n+      fprintf (dump, \"\\n[ROW %d ]: \", i);\n       while (ps_i)\n \t{\n \t  fprintf (dump, \"%d, \","}]}