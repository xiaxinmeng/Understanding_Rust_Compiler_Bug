{"sha": "c0b0ee6f188f16485717954d20d82a293299ff01", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzBiMGVlNmYxODhmMTY0ODU3MTc5NTRkMjBkODJhMjkzMjk5ZmYwMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-09-16T19:15:45Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-09-16T19:15:45Z"}, "message": "i386.c (ix86_expand_reduc_v4sf): Rename to ...\n\n\t* config/i386/i386.c (ix86_expand_reduc_v4sf): Rename to ...\n\t(ix86_expand_reduc): ... this.  Handle also V8SFmode and V4DFmode.\n\t* config/i386/sse.md (reduc_splus_v4sf, reduc_smax_v4sf,\n\treduc_smin_v4sf): Adjust callers.\n\t(reduc_smax_v8sf, reduc_smin_v8sf, reduc_smax_v4df, reduc_smin_v4df):\n\tNew expanders.\n\n\t* gcc.dg/vect/vect-reduc-10.c: New test.\n\t* gcc.target/i386/avx-reduc-1.c: New test.\n\nFrom-SVN: r178916", "tree": {"sha": "09d69cbd98459ab74099f74ced05945923ef2646", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09d69cbd98459ab74099f74ced05945923ef2646"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0b0ee6f188f16485717954d20d82a293299ff01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0b0ee6f188f16485717954d20d82a293299ff01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0b0ee6f188f16485717954d20d82a293299ff01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0b0ee6f188f16485717954d20d82a293299ff01/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6e2cb3913952ef1b7fd31f4f5b8754f55f689d9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e2cb3913952ef1b7fd31f4f5b8754f55f689d9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e2cb3913952ef1b7fd31f4f5b8754f55f689d9a"}], "stats": {"total": 200, "additions": 183, "deletions": 17}, "files": [{"sha": "94a61ec48f6bffb8bda508cd6047ce74001dfd8c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0b0ee6f188f16485717954d20d82a293299ff01/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0b0ee6f188f16485717954d20d82a293299ff01/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c0b0ee6f188f16485717954d20d82a293299ff01", "patch": "@@ -1,5 +1,12 @@\n 2011-09-16  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* config/i386/i386.c (ix86_expand_reduc_v4sf): Rename to ...\n+\t(ix86_expand_reduc): ... this.  Handle also V8SFmode and V4DFmode.\n+\t* config/i386/sse.md (reduc_splus_v4sf, reduc_smax_v4sf,\n+\treduc_smin_v4sf): Adjust callers.\n+\t(reduc_smax_v8sf, reduc_smin_v8sf, reduc_smax_v4df, reduc_smin_v4df):\n+\tNew expanders.\n+\n \t* config/i386/sse.md (vec_extract_hi_<mode>,\n \tvec_extract_hi_v16hi, vec_extract_hi_v32qi): Use\n \tvextracti128 instead of vextractf128 for -mavx2 and"}, {"sha": "707f217ab616345acbea9ea9dc22b1b384acd79b", "filename": "gcc/config/i386/i386-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0b0ee6f188f16485717954d20d82a293299ff01/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0b0ee6f188f16485717954d20d82a293299ff01/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-protos.h?ref=c0b0ee6f188f16485717954d20d82a293299ff01", "patch": "@@ -211,7 +211,7 @@ extern rtx ix86_tls_module_base (void);\n extern void ix86_expand_vector_init (bool, rtx, rtx);\n extern void ix86_expand_vector_set (bool, rtx, rtx, int);\n extern void ix86_expand_vector_extract (bool, rtx, rtx, int);\n-extern void ix86_expand_reduc_v4sf (rtx (*)(rtx, rtx, rtx), rtx, rtx);\n+extern void ix86_expand_reduc (rtx (*)(rtx, rtx, rtx), rtx, rtx);\n \n extern void ix86_expand_vec_extract_even_odd (rtx, rtx, rtx, unsigned);\n extern bool ix86_expand_pinsr (rtx *);"}, {"sha": "d6438394157a8290b0b5c71bc5fa764ff0c40bfb", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 34, "deletions": 13, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0b0ee6f188f16485717954d20d82a293299ff01/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0b0ee6f188f16485717954d20d82a293299ff01/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=c0b0ee6f188f16485717954d20d82a293299ff01", "patch": "@@ -32696,24 +32696,45 @@ ix86_expand_vector_extract (bool mmx_ok, rtx target, rtx vec, int elt)\n     }\n }\n \n-/* Expand a vector reduction on V4SFmode for SSE1.  FN is the binary\n-   pattern to reduce; DEST is the destination; IN is the input vector.  */\n+/* Expand a vector reduction.  FN is the binary pattern to reduce;\n+   DEST is the destination; IN is the input vector.  */\n \n void\n-ix86_expand_reduc_v4sf (rtx (*fn) (rtx, rtx, rtx), rtx dest, rtx in)\n+ix86_expand_reduc (rtx (*fn) (rtx, rtx, rtx), rtx dest, rtx in)\n {\n-  rtx tmp1, tmp2, tmp3;\n+  rtx tmp1, tmp2, tmp3, tmp4, tmp5;\n+  enum machine_mode mode = GET_MODE (in);\n \n-  tmp1 = gen_reg_rtx (V4SFmode);\n-  tmp2 = gen_reg_rtx (V4SFmode);\n-  tmp3 = gen_reg_rtx (V4SFmode);\n+  tmp1 = gen_reg_rtx (mode);\n+  tmp2 = gen_reg_rtx (mode);\n+  tmp3 = gen_reg_rtx (mode);\n \n-  emit_insn (gen_sse_movhlps (tmp1, in, in));\n-  emit_insn (fn (tmp2, tmp1, in));\n-\n-  emit_insn (gen_sse_shufps_v4sf (tmp3, tmp2, tmp2,\n-\t\t\t\t  const1_rtx, const1_rtx,\n-\t\t\t\t  GEN_INT (1+4), GEN_INT (1+4)));\n+  switch (mode)\n+    {\n+    case V4SFmode:\n+      emit_insn (gen_sse_movhlps (tmp1, in, in));\n+      emit_insn (fn (tmp2, tmp1, in));\n+      emit_insn (gen_sse_shufps_v4sf (tmp3, tmp2, tmp2,\n+\t\t\t\t      const1_rtx, const1_rtx,\n+\t\t\t\t      GEN_INT (1+4), GEN_INT (1+4)));\n+      break;\n+    case V8SFmode:\n+      tmp4 = gen_reg_rtx (mode);\n+      tmp5 = gen_reg_rtx (mode);\n+      emit_insn (gen_avx_vperm2f128v8sf3 (tmp4, in, in, const1_rtx));\n+      emit_insn (fn (tmp5, tmp4, in));\n+      emit_insn (gen_avx_shufps256 (tmp1, tmp5, tmp5, GEN_INT (2+12)));\n+      emit_insn (fn (tmp2, tmp1, tmp5));\n+      emit_insn (gen_avx_shufps256 (tmp3, tmp2, tmp2, const1_rtx));\n+      break;\n+    case V4DFmode:\n+      emit_insn (gen_avx_vperm2f128v4df3 (tmp1, in, in, const1_rtx));\n+      emit_insn (fn (tmp2, tmp1, in));\n+      emit_insn (gen_avx_shufpd256 (tmp3, tmp2, tmp2, const1_rtx));\n+      break;\n+    default:\n+      gcc_unreachable ();\n+    }\n   emit_insn (fn (dest, tmp2, tmp3));\n }\n \f"}, {"sha": "8d462472ec1aa62362b8568d258cb5fdb676ef7e", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 39, "deletions": 3, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0b0ee6f188f16485717954d20d82a293299ff01/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0b0ee6f188f16485717954d20d82a293299ff01/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=c0b0ee6f188f16485717954d20d82a293299ff01", "patch": "@@ -1253,7 +1253,7 @@\n       emit_insn (gen_sse3_haddv4sf3 (operands[0], tmp, tmp));\n     }\n   else\n-    ix86_expand_reduc_v4sf (gen_addv4sf3, operands[0], operands[1]);\n+    ix86_expand_reduc (gen_addv4sf3, operands[0], operands[1]);\n   DONE;\n })\n \n@@ -1263,7 +1263,7 @@\n    (match_operand:V4SF 1 \"register_operand\" \"\")]\n   \"TARGET_SSE\"\n {\n-  ix86_expand_reduc_v4sf (gen_smaxv4sf3, operands[0], operands[1]);\n+  ix86_expand_reduc (gen_smaxv4sf3, operands[0], operands[1]);\n   DONE;\n })\n \n@@ -1272,7 +1272,43 @@\n    (match_operand:V4SF 1 \"register_operand\" \"\")]\n   \"TARGET_SSE\"\n {\n-  ix86_expand_reduc_v4sf (gen_sminv4sf3, operands[0], operands[1]);\n+  ix86_expand_reduc (gen_sminv4sf3, operands[0], operands[1]);\n+  DONE;\n+})\n+\n+(define_expand \"reduc_smax_v8sf\"\n+  [(match_operand:V8SF 0 \"register_operand\" \"\")\n+   (match_operand:V8SF 1 \"register_operand\" \"\")]\n+  \"TARGET_AVX\"\n+{\n+  ix86_expand_reduc (gen_smaxv8sf3, operands[0], operands[1]);\n+  DONE;\n+})\n+\n+(define_expand \"reduc_smin_v8sf\"\n+  [(match_operand:V8SF 0 \"register_operand\" \"\")\n+   (match_operand:V8SF 1 \"register_operand\" \"\")]\n+  \"TARGET_AVX\"\n+{\n+  ix86_expand_reduc (gen_sminv8sf3, operands[0], operands[1]);\n+  DONE;\n+})\n+\n+(define_expand \"reduc_smax_v4df\"\n+  [(match_operand:V4DF 0 \"register_operand\" \"\")\n+   (match_operand:V4DF 1 \"register_operand\" \"\")]\n+  \"TARGET_AVX\"\n+{\n+  ix86_expand_reduc (gen_smaxv4df3, operands[0], operands[1]);\n+  DONE;\n+})\n+\n+(define_expand \"reduc_smin_v4df\"\n+  [(match_operand:V4DF 0 \"register_operand\" \"\")\n+   (match_operand:V4DF 1 \"register_operand\" \"\")]\n+  \"TARGET_AVX\"\n+{\n+  ix86_expand_reduc (gen_sminv4df3, operands[0], operands[1]);\n   DONE;\n })\n "}, {"sha": "010f028ac3c477a146fa5a2072b292089142a0ad", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0b0ee6f188f16485717954d20d82a293299ff01/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0b0ee6f188f16485717954d20d82a293299ff01/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c0b0ee6f188f16485717954d20d82a293299ff01", "patch": "@@ -1,5 +1,8 @@\n 2011-09-16  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* gcc.dg/vect/vect-reduc-10.c: New test.\n+\t* gcc.target/i386/avx-reduc-1.c: New test.\n+\n \t* gcc.target/i386/sse2-extract-1.c: New test.\n \t* gcc.target/i386/avx-extract-1.c: New test.\n "}, {"sha": "ad2199956be47ab0828f3956b38af71c1e1c745a", "filename": "gcc/testsuite/gcc.dg/vect/vect-reduc-10.c", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0b0ee6f188f16485717954d20d82a293299ff01/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0b0ee6f188f16485717954d20d82a293299ff01/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-10.c?ref=c0b0ee6f188f16485717954d20d82a293299ff01", "patch": "@@ -0,0 +1,51 @@\n+#include \"tree-vect.h\"\n+\n+extern void abort (void);\n+double ad[1024];\n+float af[1024];\n+short as[1024];\n+int ai[1024];\n+long long all[1024];\n+unsigned short aus[1024];\n+unsigned int au[1024];\n+unsigned long long aull[1024];\n+\n+#define F(var) \\\n+__attribute__((noinline, noclone)) __typeof (var[0]) \\\n+f##var (void) \\\n+{ \\\n+  int i; \\\n+  __typeof (var[0]) r = 0; \\\n+  for (i = 0; i < 1024; i++) \\\n+    r = r > var[i] ? r : var[i]; \\\n+  return r; \\\n+}\n+\n+#define TESTS \\\n+F (ad) F (af) F (as) F (ai) F (all) F (aus) F (au) F (aull)\n+\n+TESTS\n+\n+int\n+main ()\n+{\n+  int i;\n+\n+  check_vect ();\n+\n+  for (i = 0; i < 1024; i++)\n+    {\n+#undef F\n+#define F(var) var[i] = i;\n+      TESTS\n+    }\n+  for (i = 1023; i < 32 * 1024; i += 1024 + 271)\n+    {\n+#undef F\n+#define F(var) var[i & 1023] = i; if (f##var () != i) abort ();\n+      TESTS\n+    }\n+  return 0;\n+}\n+\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "1df1ee032cd3be9ad8020b16da48b7f75210b6a4", "filename": "gcc/testsuite/gcc.target/i386/avx-reduc-1.c", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0b0ee6f188f16485717954d20d82a293299ff01/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-reduc-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0b0ee6f188f16485717954d20d82a293299ff01/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-reduc-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-reduc-1.c?ref=c0b0ee6f188f16485717954d20d82a293299ff01", "patch": "@@ -0,0 +1,48 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O3 -mavx\" } */\n+/* { dg-require-effective-target avx_runtime } */\n+\n+extern void abort (void);\n+double ad[1024];\n+float af[1024];\n+short as[1024];\n+int ai[1024];\n+long long all[1024];\n+unsigned short aus[1024];\n+unsigned int au[1024];\n+unsigned long long aull[1024];\n+\n+#define F(var) \\\n+__attribute__((noinline, noclone)) __typeof (var[0]) \\\n+f##var (void) \\\n+{ \\\n+  int i; \\\n+  __typeof (var[0]) r = 0; \\\n+  for (i = 0; i < 1024; i++) \\\n+    r = r > var[i] ? r : var[i]; \\\n+  return r; \\\n+}\n+\n+#define TESTS \\\n+F (ad) F (af) F (as) F (ai) F (all) F (aus) F (au) F (aull)\n+\n+TESTS\n+\n+int\n+main ()\n+{\n+  int i;\n+  for (i = 0; i < 1024; i++)\n+    {\n+#undef F\n+#define F(var) var[i] = i;\n+      TESTS\n+    }\n+  for (i = 1023; i < 32 * 1024; i += 1024 + 271)\n+    {\n+#undef F\n+#define F(var) var[i & 1023] = i; if (f##var () != i) abort ();\n+      TESTS\n+    }\n+  return 0;\n+}"}]}