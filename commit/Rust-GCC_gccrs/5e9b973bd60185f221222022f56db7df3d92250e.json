{"sha": "5e9b973bd60185f221222022f56db7df3d92250e", "node_id": "C_kwDOANBUbNoAKDVlOWI5NzNiZDYwMTg1ZjIyMTIyMjAyMmY1NmRiN2RmM2Q5MjI1MGU", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-11-23T09:30:02Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-11-23T09:30:02Z"}, "message": "openmp: Fix up handling of reduction clauses on the loop construct [PR102431]\n\nWe were using unshare_expr and walk_tree_without_duplicate replacement\nof the placeholder vars.  The OMP_CLAUSE_REDUCTION_{INIT,MERGE} can contain\nother trees that need to be duplicated though, e.g. BLOCKs referenced in\nBIND_EXPR(s), or local VAR_DECLs.  This patch uses the inliner code to copy\nall of that.  There is a slight complication that those local VAR_DECLs or\nplaceholders don't have DECL_CONTEXT set, they will get that only when\nthey are gimplified later on, so this patch sets DECL_CONTEXT for those\ntemporarily and resets it afterwards.\n\n2021-11-23  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR middle-end/102431\n\t* gimplify.c (replace_reduction_placeholders): Remove.\n\t(note_no_context_vars): New function.\n\t(gimplify_omp_loop): For OMP_PARALLEL's BIND_EXPR create a new\n\tBLOCK.  Use copy_tree_body_r with walk_tree instead of unshare_expr\n\tand replace_reduction_placeholders for duplication of\n\tOMP_CLAUSE_REDUCTION_{INIT,MERGE} expressions.  Ensure all mentioned\n\tautomatic vars have DECL_CONTEXT set to non-NULL before doing so\n\tand reset it afterwards for those vars and their corresponding\n\tvars.\n\n\t* c-c++-common/gomp/pr102431.c: New test.\n\t* g++.dg/gomp/pr102431.C: New test.\n\t* gfortran.dg/gomp/pr102431.f90: New test.", "tree": {"sha": "194d9284a366f336a971164be0951e164621485c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/194d9284a366f336a971164be0951e164621485c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e9b973bd60185f221222022f56db7df3d92250e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e9b973bd60185f221222022f56db7df3d92250e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e9b973bd60185f221222022f56db7df3d92250e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e9b973bd60185f221222022f56db7df3d92250e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4eae6450e46224454ce067ac43bd7e9f66fc18b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4eae6450e46224454ce067ac43bd7e9f66fc18b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4eae6450e46224454ce067ac43bd7e9f66fc18b"}], "stats": {"total": 125, "additions": 99, "deletions": 26}, "files": [{"sha": "8e0adbe7484da46c8922d024ed098652271cb015", "filename": "gcc/gimplify.c", "status": "modified", "additions": 60, "deletions": 26, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e9b973bd60185f221222022f56db7df3d92250e/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e9b973bd60185f221222022f56db7df3d92250e/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=5e9b973bd60185f221222022f56db7df3d92250e", "patch": "@@ -13128,21 +13128,15 @@ gimplify_omp_for (tree *expr_p, gimple_seq *pre_p)\n /* Helper for gimplify_omp_loop, called through walk_tree.  */\n \n static tree\n-replace_reduction_placeholders (tree *tp, int *walk_subtrees, void *data)\n+note_no_context_vars (tree *tp, int *, void *data)\n {\n-  if (DECL_P (*tp))\n+  if (VAR_P (*tp)\n+      && DECL_CONTEXT (*tp) == NULL_TREE\n+      && !is_global_var (*tp))\n     {\n-      tree *d = (tree *) data;\n-      if (*tp == OMP_CLAUSE_REDUCTION_PLACEHOLDER (d[0]))\n-\t{\n-\t  *tp = OMP_CLAUSE_REDUCTION_PLACEHOLDER (d[1]);\n-\t  *walk_subtrees = 0;\n-\t}\n-      else if (*tp == OMP_CLAUSE_REDUCTION_DECL_PLACEHOLDER (d[0]))\n-\t{\n-\t  *tp = OMP_CLAUSE_REDUCTION_DECL_PLACEHOLDER (d[1]);\n-\t  *walk_subtrees = 0;\n-\t}\n+      vec<tree> *d = (vec<tree> *) data;\n+      d->safe_push (*tp);\n+      DECL_CONTEXT (*tp) = current_function_decl;\n     }\n   return NULL_TREE;\n }\n@@ -13312,7 +13306,8 @@ gimplify_omp_loop (tree *expr_p, gimple_seq *pre_p)\n     {\n       if (pass == 2)\n \t{\n-\t  tree bind = build3 (BIND_EXPR, void_type_node, NULL, NULL, NULL);\n+\t  tree bind = build3 (BIND_EXPR, void_type_node, NULL, NULL,\n+\t\t\t      make_node (BLOCK));\n \t  append_to_statement_list (*expr_p, &BIND_EXPR_BODY (bind));\n \t  *expr_p = make_node (OMP_PARALLEL);\n \t  TREE_TYPE (*expr_p) = void_type_node;\n@@ -13379,25 +13374,64 @@ gimplify_omp_loop (tree *expr_p, gimple_seq *pre_p)\n \t    *pc = copy_node (c);\n \t    OMP_CLAUSE_DECL (*pc) = unshare_expr (OMP_CLAUSE_DECL (c));\n \t    TREE_TYPE (*pc) = unshare_expr (TREE_TYPE (c));\n-\t    OMP_CLAUSE_REDUCTION_INIT (*pc)\n-\t      = unshare_expr (OMP_CLAUSE_REDUCTION_INIT (c));\n-\t    OMP_CLAUSE_REDUCTION_MERGE (*pc)\n-\t      = unshare_expr (OMP_CLAUSE_REDUCTION_MERGE (c));\n \t    if (OMP_CLAUSE_REDUCTION_PLACEHOLDER (*pc))\n \t      {\n+\t\tauto_vec<tree> no_context_vars;\n+\t\tint walk_subtrees = 0;\n+\t\tnote_no_context_vars (&OMP_CLAUSE_REDUCTION_PLACEHOLDER (c),\n+\t\t\t\t      &walk_subtrees, &no_context_vars);\n+\t\tif (tree p = OMP_CLAUSE_REDUCTION_DECL_PLACEHOLDER (c))\n+\t\t  note_no_context_vars (&p, &walk_subtrees, &no_context_vars);\n+\t\twalk_tree_without_duplicates (&OMP_CLAUSE_REDUCTION_INIT (c),\n+\t\t\t\t\t      note_no_context_vars,\n+\t\t\t\t\t      &no_context_vars);\n+\t\twalk_tree_without_duplicates (&OMP_CLAUSE_REDUCTION_MERGE (c),\n+\t\t\t\t\t      note_no_context_vars,\n+\t\t\t\t\t      &no_context_vars);\n+\n \t\tOMP_CLAUSE_REDUCTION_PLACEHOLDER (*pc)\n \t\t  = copy_node (OMP_CLAUSE_REDUCTION_PLACEHOLDER (c));\n \t\tif (OMP_CLAUSE_REDUCTION_DECL_PLACEHOLDER (*pc))\n \t\t  OMP_CLAUSE_REDUCTION_DECL_PLACEHOLDER (*pc)\n \t\t    = copy_node (OMP_CLAUSE_REDUCTION_DECL_PLACEHOLDER (c));\n-\t\ttree nc = *pc;\n-\t\ttree data[2] = { c, nc };\n-\t\twalk_tree_without_duplicates (&OMP_CLAUSE_REDUCTION_INIT (nc),\n-\t\t\t\t\t      replace_reduction_placeholders,\n-\t\t\t\t\t      data);\n-\t\twalk_tree_without_duplicates (&OMP_CLAUSE_REDUCTION_MERGE (nc),\n-\t\t\t\t\t      replace_reduction_placeholders,\n-\t\t\t\t\t      data);\n+\n+\t\thash_map<tree, tree> decl_map;\n+\t\tdecl_map.put (OMP_CLAUSE_DECL (c), OMP_CLAUSE_DECL (c));\n+\t\tdecl_map.put (OMP_CLAUSE_REDUCTION_PLACEHOLDER (c),\n+\t\t\t      OMP_CLAUSE_REDUCTION_PLACEHOLDER (*pc));\n+\t\tif (OMP_CLAUSE_REDUCTION_DECL_PLACEHOLDER (*pc))\n+\t\t  decl_map.put (OMP_CLAUSE_REDUCTION_DECL_PLACEHOLDER (c),\n+\t\t\t\tOMP_CLAUSE_REDUCTION_DECL_PLACEHOLDER (*pc));\n+\n+\t\tcopy_body_data id;\n+\t\tmemset (&id, 0, sizeof (id));\n+\t\tid.src_fn = current_function_decl;\n+\t\tid.dst_fn = current_function_decl;\n+\t\tid.src_cfun = cfun;\n+\t\tid.decl_map = &decl_map;\n+\t\tid.copy_decl = copy_decl_no_change;\n+\t\tid.transform_call_graph_edges = CB_CGE_DUPLICATE;\n+\t\tid.transform_new_cfg = true;\n+\t\tid.transform_return_to_modify = false;\n+\t\tid.transform_lang_insert_block = NULL;\n+\t\tid.eh_lp_nr = 0;\n+\t\twalk_tree (&OMP_CLAUSE_REDUCTION_INIT (*pc), copy_tree_body_r,\n+\t\t\t   &id, NULL);\n+\t\twalk_tree (&OMP_CLAUSE_REDUCTION_MERGE (*pc), copy_tree_body_r,\n+\t\t\t   &id, NULL);\n+\n+\t\tfor (tree d : no_context_vars)\n+\t\t  {\n+\t\t    DECL_CONTEXT (d) = NULL_TREE;\n+\t\t    DECL_CONTEXT (*decl_map.get (d)) = NULL_TREE;\n+\t\t  }\n+\t      }\n+\t    else\n+\t      {\n+\t\tOMP_CLAUSE_REDUCTION_INIT (*pc)\n+\t\t  = unshare_expr (OMP_CLAUSE_REDUCTION_INIT (c));\n+\t\tOMP_CLAUSE_REDUCTION_MERGE (*pc)\n+\t\t  = unshare_expr (OMP_CLAUSE_REDUCTION_MERGE (c));\n \t      }\n \t    pc = &OMP_CLAUSE_CHAIN (*pc);\n \t    break;"}, {"sha": "bf4f3cb71b3a9904202a557ff290c9786cce7be1", "filename": "gcc/testsuite/c-c++-common/gomp/pr102431.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e9b973bd60185f221222022f56db7df3d92250e/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr102431.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e9b973bd60185f221222022f56db7df3d92250e/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr102431.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr102431.c?ref=5e9b973bd60185f221222022f56db7df3d92250e", "patch": "@@ -0,0 +1,16 @@\n+/* PR middle-end/102431 */\n+\n+struct S { int s; } s;\n+void add (struct S *, struct S *);\n+void init (struct S *);\n+void bar (int i, struct S *);\n+#pragma omp declare reduction (+:struct S:add (&omp_out, &omp_in)) initializer (init (&omp_priv))\n+\n+void\n+foo (void)\n+{\n+  int i;\n+  #pragma omp loop bind(teams) reduction(+:s)\n+  for (i = 0; i < 8; i++)\n+    bar (i, &s);\n+}"}, {"sha": "7db36f48540a2b635a0473961262a943937efd68", "filename": "gcc/testsuite/g++.dg/gomp/pr102431.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e9b973bd60185f221222022f56db7df3d92250e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr102431.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e9b973bd60185f221222022f56db7df3d92250e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr102431.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr102431.C?ref=5e9b973bd60185f221222022f56db7df3d92250e", "patch": "@@ -0,0 +1,13 @@\n+// PR middle-end/102431\n+\n+struct S { S (); ~S (); S (const S &); void add (const S &); int s; } s;\n+void bar (int, S &);\n+#pragma omp declare reduction (+:S:omp_out.add (omp_in))\n+\n+void\n+foo ()\n+{\n+  #pragma omp loop bind(teams) reduction(+:s)\n+  for (int i = 0; i < 8; i++)\n+    bar (i, s);\n+}"}, {"sha": "71efed80d24f0a4e41e33699105bc3c090499f44", "filename": "gcc/testsuite/gfortran.dg/gomp/pr102431.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e9b973bd60185f221222022f56db7df3d92250e/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr102431.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e9b973bd60185f221222022f56db7df3d92250e/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr102431.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr102431.f90?ref=5e9b973bd60185f221222022f56db7df3d92250e", "patch": "@@ -0,0 +1,10 @@\n+! PR middle-end/102431\n+\n+program pr102431\n+  integer :: a(2)\n+  a(:) = 0\n+  !$omp parallel loop reduction(+:a)\n+  do i = 1, 8\n+    a = a + 1\n+  end do\n+end"}]}