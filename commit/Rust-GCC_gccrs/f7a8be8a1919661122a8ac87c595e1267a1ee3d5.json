{"sha": "f7a8be8a1919661122a8ac87c595e1267a1ee3d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjdhOGJlOGExOTE5NjYxMTIyYThhYzg3YzU5NWUxMjY3YTFlZTNkNQ==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2020-06-09T14:53:23Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-07-16T09:18:09Z"}, "message": "[Ada] Ada2020: AI12-0055 No_Dynamic_CPU_Assignment restriction\n\ngcc/ada/\n\n\t* libgnat/s-rident.ads (No_Dynamic_CPU_Assignment): New\n\trestriction. Add it to all relevant profiles.\n\t* sem_ch13.adb (Attribute_CPU): Check No_Dynamic_CPU_Assignment\n\trestriction.\n\t(Attribute_CPU, Attribute_Dispatching_Domain,\n\tAttribute_Interrupt_Priority): Remove error checks -- these are\n\tchecked in the parser.\n\t* sem_prag.adb (Pragma_CPU): Check No_Dynamic_CPU_Assignment\n\trestriction.  We've got a little violation of DRY here.\n\t* sem.ads, sem_ch3.ads: Minor comment fix.", "tree": {"sha": "6fa25f1f3bc668e6439ff992bcf0aaef7281c895", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6fa25f1f3bc668e6439ff992bcf0aaef7281c895"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7a8be8a1919661122a8ac87c595e1267a1ee3d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7a8be8a1919661122a8ac87c595e1267a1ee3d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7a8be8a1919661122a8ac87c595e1267a1ee3d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7a8be8a1919661122a8ac87c595e1267a1ee3d5/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ebc2b117e43191de355187553586aef30048f098", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebc2b117e43191de355187553586aef30048f098", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebc2b117e43191de355187553586aef30048f098"}], "stats": {"total": 156, "additions": 74, "deletions": 82}, "files": [{"sha": "8572016abbee4b41489a0ff34b7da3b0bb273b40", "filename": "gcc/ada/libgnat/s-rident.ads", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7a8be8a1919661122a8ac87c595e1267a1ee3d5/gcc%2Fada%2Flibgnat%2Fs-rident.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7a8be8a1919661122a8ac87c595e1267a1ee3d5/gcc%2Fada%2Flibgnat%2Fs-rident.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-rident.ads?ref=f7a8be8a1919661122a8ac87c595e1267a1ee3d5", "patch": "@@ -62,10 +62,10 @@\n --  then the binder could fail to recognize the R (restrictions line) in the\n --  ali file, leading to bind errors when restrictions were added or removed.\n \n---  The latest implementation avoids both this problem by using a named\n---  scheme for recording restrictions, rather than a positional scheme which\n---  fails completely if restrictions are added or subtracted. Now the worst\n---  that happens at bind time in inconsistent builds is that unrecognized\n+--  The latest implementation avoids this problem by using a named scheme\n+--  for recording restrictions, rather than a positional scheme that fails\n+--  completely if restrictions are added or subtracted. Now the worst that\n+--  happens at bind time in inconsistent builds is that unrecognized\n --  restrictions are ignored, and the consistency checking for restrictions\n --  might be incomplete, which is no big deal.\n \n@@ -104,6 +104,7 @@ package System.Rident is\n       No_Dispatch,                               -- (RM H.4(19))\n       No_Dispatching_Calls,                      -- GNAT\n       No_Dynamic_Attachment,                     -- Ada 2012 (RM E.7(10/3))\n+      No_Dynamic_CPU_Assignment,                 -- Ada 202x (RM D.7(10/3))\n       No_Dynamic_Priorities,                     -- (RM D.9(9))\n       No_Enumeration_Maps,                       -- GNAT\n       No_Entry_Calls_In_Elaboration_Code,        -- GNAT\n@@ -438,6 +439,7 @@ package System.Rident is\n                           (No_Abort_Statements             => True,\n                            No_Asynchronous_Control         => True,\n                            No_Dynamic_Attachment           => True,\n+                           No_Dynamic_CPU_Assignment       => True,\n                            No_Dynamic_Priorities           => True,\n                            No_Local_Protected_Objects      => True,\n                            No_Protected_Type_Allocators    => True,\n@@ -469,6 +471,7 @@ package System.Rident is\n                           (No_Abort_Statements             => True,\n                            No_Asynchronous_Control         => True,\n                            No_Dynamic_Attachment           => True,\n+                           No_Dynamic_CPU_Assignment       => True,\n                            No_Dynamic_Priorities           => True,\n                            No_Entry_Queue                  => True,\n                            No_Local_Protected_Objects      => True,\n@@ -511,6 +514,7 @@ package System.Rident is\n                           (No_Abort_Statements             => True,\n                            No_Asynchronous_Control         => True,\n                            No_Dynamic_Attachment           => True,\n+                           No_Dynamic_CPU_Assignment       => True,\n                            No_Dynamic_Priorities           => True,\n                            No_Entry_Queue                  => True,\n                            No_Local_Protected_Objects      => True,\n@@ -578,6 +582,7 @@ package System.Rident is\n                           (No_Abort_Statements             => True,\n                            No_Asynchronous_Control         => True,\n                            No_Dynamic_Attachment           => True,\n+                           No_Dynamic_CPU_Assignment       => True,\n                            No_Dynamic_Priorities           => True,\n                            No_Local_Protected_Objects      => True,\n                            No_Protected_Type_Allocators    => True,\n@@ -616,6 +621,7 @@ package System.Rident is\n                           (No_Abort_Statements             => True,\n                            No_Asynchronous_Control         => True,\n                            No_Dynamic_Attachment           => True,\n+                           No_Dynamic_CPU_Assignment       => True,\n                            No_Dynamic_Priorities           => True,\n                            No_Local_Protected_Objects      => True,\n                            No_Protected_Type_Allocators    => True,\n@@ -666,6 +672,7 @@ package System.Rident is\n                           (No_Abort_Statements             => True,\n                            No_Asynchronous_Control         => True,\n                            No_Dynamic_Attachment           => True,\n+                           No_Dynamic_CPU_Assignment       => True,\n                            No_Dynamic_Priorities           => True,\n                            No_Entry_Queue                  => True,\n                            No_Local_Protected_Objects      => True,"}, {"sha": "f320b32d9959c6026cfa98f2b30032fc4f83c0cc", "filename": "gcc/ada/sem.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7a8be8a1919661122a8ac87c595e1267a1ee3d5/gcc%2Fada%2Fsem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7a8be8a1919661122a8ac87c595e1267a1ee3d5/gcc%2Fada%2Fsem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.ads?ref=f7a8be8a1919661122a8ac87c595e1267a1ee3d5", "patch": "@@ -138,7 +138,7 @@\n --  this is the one case where this model falls down. Here is how we patch\n --  it up without causing too much distortion to our basic model.\n \n---  A switch (In_Spec_Expression) is set to show that we are in the initial\n+--  A flag (In_Spec_Expression) is set to show that we are in the initial\n --  occurrence of a default expression. The analyzer is then called on this\n --  expression with the switch set true. Analysis and resolution proceed almost\n --  as usual, except that Freeze_Expression will not freeze non-static"}, {"sha": "9008b60dc15cb49ab44a081309d20a0648a99f4b", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 56, "deletions": 74, "changes": 130, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7a8be8a1919661122a8ac87c595e1267a1ee3d5/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7a8be8a1919661122a8ac87c595e1267a1ee3d5/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=f7a8be8a1919661122a8ac87c595e1267a1ee3d5", "patch": "@@ -6442,37 +6442,31 @@ package body Sem_Ch13 is\n          ---------\n \n          when Attribute_CPU =>\n+            pragma Assert (From_Aspect_Specification (N));\n+            --  The parser forbids this clause in source code, so it must have\n+            --  come from an aspect specification.\n \n-            --  CPU attribute definition clause not allowed except from aspect\n-            --  specification.\n+            if not Is_Task_Type (U_Ent) then\n+               Error_Msg_N (\"CPU can only be defined for task\", Nam);\n \n-            if From_Aspect_Specification (N) then\n-               if not Is_Task_Type (U_Ent) then\n-                  Error_Msg_N (\"CPU can only be defined for task\", Nam);\n-\n-               elsif Duplicate_Clause then\n-                  null;\n+            elsif Duplicate_Clause then\n+               null;\n \n-               else\n-                  --  The expression must be analyzed in the special manner\n-                  --  described in \"Handling of Default and Per-Object\n-                  --  Expressions\" in sem.ads.\n+            else\n+               --  The expression must be analyzed in the special manner\n+               --  described in \"Handling of Default and Per-Object\n+               --  Expressions\" in sem.ads.\n \n-                  --  The visibility to the components must be established\n-                  --  and restored before and after analysis.\n+               --  The visibility to the components must be established\n+               --  and restored before and after analysis.\n \n-                  Push_Type (U_Ent);\n-                  Preanalyze_Spec_Expression (Expr, RTE (RE_CPU_Range));\n-                  Pop_Type (U_Ent);\n+               Push_Type (U_Ent);\n+               Preanalyze_Spec_Expression (Expr, RTE (RE_CPU_Range));\n+               Pop_Type (U_Ent);\n \n-                  if not Is_OK_Static_Expression (Expr) then\n-                     Check_Restriction (Static_Priorities, Expr);\n-                  end if;\n+               if not Is_OK_Static_Expression (Expr) then\n+                  Check_Restriction (No_Dynamic_CPU_Assignment, Expr);\n                end if;\n-\n-            else\n-               Error_Msg_N\n-                 (\"attribute& cannot be set with definition clause\", N);\n             end if;\n \n          ----------------------\n@@ -6536,36 +6530,30 @@ package body Sem_Ch13 is\n          ------------------------\n \n          when Attribute_Dispatching_Domain =>\n+            pragma Assert (From_Aspect_Specification (N));\n+            --  The parser forbids this clause in source code, so it must have\n+            --  come from an aspect specification.\n \n-            --  Dispatching_Domain attribute definition clause not allowed\n-            --  except from aspect specification.\n-\n-            if From_Aspect_Specification (N) then\n-               if not Is_Task_Type (U_Ent) then\n-                  Error_Msg_N\n-                    (\"Dispatching_Domain can only be defined for task\", Nam);\n-\n-               elsif Duplicate_Clause then\n-                  null;\n+            if not Is_Task_Type (U_Ent) then\n+               Error_Msg_N\n+                 (\"Dispatching_Domain can only be defined for task\", Nam);\n \n-               else\n-                  --  The expression must be analyzed in the special manner\n-                  --  described in \"Handling of Default and Per-Object\n-                  --  Expressions\" in sem.ads.\n+            elsif Duplicate_Clause then\n+               null;\n \n-                  --  The visibility to the components must be restored\n+            else\n+               --  The expression must be analyzed in the special manner\n+               --  described in \"Handling of Default and Per-Object\n+               --  Expressions\" in sem.ads.\n \n-                  Push_Type (U_Ent);\n+               --  The visibility to the components must be restored\n \n-                  Preanalyze_Spec_Expression\n-                    (Expr, RTE (RE_Dispatching_Domain));\n+               Push_Type (U_Ent);\n \n-                  Pop_Type (U_Ent);\n-               end if;\n+               Preanalyze_Spec_Expression\n+                 (Expr, RTE (RE_Dispatching_Domain));\n \n-            else\n-               Error_Msg_N\n-                 (\"attribute& cannot be set with definition clause\", N);\n+               Pop_Type (U_Ent);\n             end if;\n \n          ------------------\n@@ -6623,43 +6611,37 @@ package body Sem_Ch13 is\n          ------------------------\n \n          when Attribute_Interrupt_Priority =>\n+            pragma Assert (From_Aspect_Specification (N));\n+            --  The parser forbids this clause in source code, so it must have\n+            --  come from an aspect specification.\n \n-            --  Interrupt_Priority attribute definition clause not allowed\n-            --  except from aspect specification.\n-\n-            if From_Aspect_Specification (N) then\n-               if not Is_Concurrent_Type (U_Ent) then\n-                  Error_Msg_N\n-                    (\"Interrupt_Priority can only be defined for task and \"\n-                     & \"protected object\", Nam);\n+            if not Is_Concurrent_Type (U_Ent) then\n+               Error_Msg_N\n+                 (\"Interrupt_Priority can only be defined for task and \"\n+                  & \"protected object\", Nam);\n \n-               elsif Duplicate_Clause then\n-                  null;\n+            elsif Duplicate_Clause then\n+               null;\n \n-               else\n-                  --  The expression must be analyzed in the special manner\n-                  --  described in \"Handling of Default and Per-Object\n-                  --  Expressions\" in sem.ads.\n+            else\n+               --  The expression must be analyzed in the special manner\n+               --  described in \"Handling of Default and Per-Object\n+               --  Expressions\" in sem.ads.\n \n-                  --  The visibility to the components must be restored\n+               --  The visibility to the components must be restored\n \n-                  Push_Type (U_Ent);\n+               Push_Type (U_Ent);\n \n-                  Preanalyze_Spec_Expression\n-                    (Expr, RTE (RE_Interrupt_Priority));\n+               Preanalyze_Spec_Expression\n+                 (Expr, RTE (RE_Interrupt_Priority));\n \n-                  Pop_Type (U_Ent);\n+               Pop_Type (U_Ent);\n \n-                  --  Check the No_Task_At_Interrupt_Priority restriction\n+               --  Check the No_Task_At_Interrupt_Priority restriction\n \n-                  if Is_Task_Type (U_Ent) then\n-                     Check_Restriction (No_Task_At_Interrupt_Priority, N);\n-                  end if;\n+               if Is_Task_Type (U_Ent) then\n+                  Check_Restriction (No_Task_At_Interrupt_Priority, N);\n                end if;\n-\n-            else\n-               Error_Msg_N\n-                 (\"attribute& cannot be set with definition clause\", N);\n             end if;\n \n          --------------"}, {"sha": "bb2990496be86e1965097ff1c550537e7df38dcb", "filename": "gcc/ada/sem_ch3.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7a8be8a1919661122a8ac87c595e1267a1ee3d5/gcc%2Fada%2Fsem_ch3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7a8be8a1919661122a8ac87c595e1267a1ee3d5/gcc%2Fada%2Fsem_ch3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.ads?ref=f7a8be8a1919661122a8ac87c595e1267a1ee3d5", "patch": "@@ -241,7 +241,7 @@ package Sem_Ch3 is\n    --  Default and per object expressions do not freeze their components, and\n    --  must be analyzed and resolved accordingly. The analysis is done by\n    --  calling the Preanalyze_And_Resolve routine and setting the global\n-   --  In_Default_Expression flag. See the documentation section entitled\n+   --  In_Spec_Expression flag. See the documentation section entitled\n    --  \"Handling of Default and Per-Object Expressions\" in sem.ads for full\n    --  details. N is the expression to be analyzed, T is the expected type.\n    --  This mechanism is also used for aspect specifications that have an"}, {"sha": "91c3d6d3bc6bcfe778660c810d7f834d5cee0bde", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7a8be8a1919661122a8ac87c595e1267a1ee3d5/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7a8be8a1919661122a8ac87c595e1267a1ee3d5/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=f7a8be8a1919661122a8ac87c595e1267a1ee3d5", "patch": "@@ -14855,13 +14855,13 @@ package body Sem_Prag is\n             Ada_2012_Pragma;\n             Check_No_Identifiers;\n             Check_Arg_Count (1);\n+            Arg := Get_Pragma_Arg (Arg1);\n \n             --  Subprogram case\n \n             if Nkind (P) = N_Subprogram_Body then\n                Check_In_Main_Program;\n \n-               Arg := Get_Pragma_Arg (Arg1);\n                Analyze_And_Resolve (Arg, Any_Integer);\n \n                Ent := Defining_Unit_Name (Specification (P));\n@@ -14908,7 +14908,6 @@ package body Sem_Prag is\n             --  Task case\n \n             elsif Nkind (P) = N_Task_Definition then\n-               Arg := Get_Pragma_Arg (Arg1);\n                Ent := Defining_Identifier (Parent (P));\n \n                --  The expression must be analyzed in the special manner\n@@ -14917,6 +14916,10 @@ package body Sem_Prag is\n \n                Preanalyze_Spec_Expression (Arg, RTE (RE_CPU_Range));\n \n+               if not Is_OK_Static_Expression (Arg) then\n+                  Check_Restriction (No_Dynamic_CPU_Assignment, N);\n+               end if;\n+\n             --  Anything else is incorrect\n \n             else"}]}