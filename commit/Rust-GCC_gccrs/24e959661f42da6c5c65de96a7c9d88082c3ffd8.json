{"sha": "24e959661f42da6c5c65de96a7c9d88082c3ffd8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjRlOTU5NjYxZjQyZGE2YzVjNjVkZTk2YTdjOWQ4ODA4MmMzZmZkOA==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2018-05-24T13:06:28Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-24T13:06:28Z"}, "message": "[Ada] Missing error on illegal access to discriminant\n\nThe compiler does not report an error on the illegal access to a renamed\ndiscriminant when the actual object is a parameter of a subprogram.\n\n2018-05-24  Javier Miranda  <miranda@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch3.adb (Is_Visible_Component): For untagged types add missing\n\tcheck for renamed discriminants.\n\t* sem_ch4.adb (Analyze_Overloaded_Selected_Component,\n\tAnalyze_Selected_Component, Check_Misspelled_Selector): For calls to\n\tIs_Visible_Component pass the associated selector node to allow\n\tchecking renamed discriminants on untagged types.\n\ngcc/testsuite/\n\n\t* gnat.dg/discr52.adb: New testcase.\n\nFrom-SVN: r260664", "tree": {"sha": "575ba6090c393eb39e9941dc6668e309bb1fcd35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/575ba6090c393eb39e9941dc6668e309bb1fcd35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24e959661f42da6c5c65de96a7c9d88082c3ffd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24e959661f42da6c5c65de96a7c9d88082c3ffd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24e959661f42da6c5c65de96a7c9d88082c3ffd8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24e959661f42da6c5c65de96a7c9d88082c3ffd8/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5a5925ee30a8f8b43d045726aa7b2a82c6a6af61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a5925ee30a8f8b43d045726aa7b2a82c6a6af61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a5925ee30a8f8b43d045726aa7b2a82c6a6af61"}], "stats": {"total": 52, "additions": 48, "deletions": 4}, "files": [{"sha": "ddee2dca18801709d45473ac69dd2b7b5aa32b00", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e959661f42da6c5c65de96a7c9d88082c3ffd8/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e959661f42da6c5c65de96a7c9d88082c3ffd8/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=24e959661f42da6c5c65de96a7c9d88082c3ffd8", "patch": "@@ -1,3 +1,12 @@\n+2018-05-24  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_ch3.adb (Is_Visible_Component): For untagged types add missing\n+\tcheck for renamed discriminants.\n+\t* sem_ch4.adb (Analyze_Overloaded_Selected_Component,\n+\tAnalyze_Selected_Component, Check_Misspelled_Selector): For calls to\n+\tIs_Visible_Component pass the associated selector node to allow\n+\tchecking renamed discriminants on untagged types.\n+\n 2018-05-24  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch8.adb (Analyze_Use_Type): Do not assign the Prev_Use_Clause"}, {"sha": "00e81ce48564079968056551349b1ada3a434c98", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e959661f42da6c5c65de96a7c9d88082c3ffd8/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e959661f42da6c5c65de96a7c9d88082c3ffd8/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=24e959661f42da6c5c65de96a7c9d88082c3ffd8", "patch": "@@ -18797,7 +18797,18 @@ package body Sem_Ch3 is\n       --  This test only concerns tagged types\n \n       if not Is_Tagged_Type (Original_Type) then\n-         return True;\n+\n+         --  Check if this is a renamed discriminant (hidden either by the\n+         --  derived type or by some ancestor), unless we are analyzing code\n+         --  generated by the expander since it may reference such components\n+         --  (for example see the expansion of Deep_Adjust).\n+\n+         if Ekind (C) = E_Discriminant and then Present (N) then\n+            return not Comes_From_Source (N)\n+              or else not Is_Completely_Hidden (C);\n+         else\n+            return True;\n+         end if;\n \n       --  If it is _Parent or _Tag, there is no visibility issue\n "}, {"sha": "f17741758dd0a5e00e867dbb638d35511aa41c22", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e959661f42da6c5c65de96a7c9d88082c3ffd8/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e959661f42da6c5c65de96a7c9d88082c3ffd8/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=24e959661f42da6c5c65de96a7c9d88082c3ffd8", "patch": "@@ -3905,7 +3905,7 @@ package body Sem_Ch4 is\n             Comp := First_Entity (T);\n             while Present (Comp) loop\n                if Chars (Comp) = Chars (Sel)\n-                 and then Is_Visible_Component (Comp)\n+                 and then Is_Visible_Component (Comp, Sel)\n                then\n \n                   --  AI05-105:  if the context is an object renaming with\n@@ -5324,7 +5324,7 @@ package body Sem_Ch4 is\n                Comp := First_Component (Base_Type (Prefix_Type));\n                while Present (Comp) loop\n                   if Chars (Comp) = Chars (Sel)\n-                    and then Is_Visible_Component (Comp)\n+                    and then Is_Visible_Component (Comp, Sel)\n                   then\n                      Set_Entity_With_Checks (Sel, Comp);\n                      Generate_Reference (Comp, Sel);\n@@ -6031,7 +6031,7 @@ package body Sem_Ch4 is\n \n       Comp  := First_Entity (Prefix);\n       while Nr_Of_Suggestions <= Max_Suggestions and then Present (Comp) loop\n-         if Is_Visible_Component (Comp) then\n+         if Is_Visible_Component (Comp, Sel) then\n             if Is_Bad_Spelling_Of (Chars (Comp), Chars (Sel)) then\n                Nr_Of_Suggestions := Nr_Of_Suggestions + 1;\n "}, {"sha": "d71ee6c4f129fe26bd01a833784c2cbc0e546b09", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e959661f42da6c5c65de96a7c9d88082c3ffd8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e959661f42da6c5c65de96a7c9d88082c3ffd8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=24e959661f42da6c5c65de96a7c9d88082c3ffd8", "patch": "@@ -1,3 +1,7 @@\n+2018-05-24  Javier Miranda  <miranda@adacore.com>\n+\n+\t* gnat.dg/discr52.adb: New testcase.\n+\n 2018-05-24  Ed Schonberg  <schonberg@adacore.com>\n \n \t* gnat.dg/others1.adb: New testcase."}, {"sha": "3f91f0aa8d30662a2b1180efad7066786ea51087", "filename": "gcc/testsuite/gnat.dg/discr52.adb", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e959661f42da6c5c65de96a7c9d88082c3ffd8/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr52.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e959661f42da6c5c65de96a7c9d88082c3ffd8/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr52.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr52.adb?ref=24e959661f42da6c5c65de96a7c9d88082c3ffd8", "patch": "@@ -0,0 +1,20 @@\n+--  { dg-do compile }\n+\n+procedure Discr52 is\n+   type T_Root (Root_Disc : Natural) is record\n+      Data : Natural := 0;\n+   end record;\n+\n+   type T_Derived (deriv_disc : Natural) is\n+     new T_Root (root_disc => deriv_disc);\n+\n+   Derived : T_Derived (Deriv_Disc => 3);\n+   Value   : Natural;\n+\n+   procedure Do_Test (Obj : T_Derived) is\n+   begin\n+      Value := Obj.root_disc; --  { dg-error \"no selector \\\"root_disc\\\" for type \\\"T_Derived\\\" defined at line \\\\d+\" }\n+   end;\n+begin\n+   Do_Test (Derived);\n+end;"}]}