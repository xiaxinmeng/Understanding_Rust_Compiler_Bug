{"sha": "8398e82eccc1a725ed34a9c81be37a7c2bec9bda", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM5OGU4MmVjY2MxYTcyNWVkMzRhOWM4MWJlMzdhN2MyYmVjOWJkYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-01-03T10:55:53Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-01-03T10:55:53Z"}, "message": "[multiple changes]\n\n2013-01-03  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch8.adb, einfo.ads, einfo.adb: Minor code reorganization.\n\n2013-01-03  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_ch3.adb (Make_Controlling_Function_Wrappers): Exclude\n\tinternal entities associated with interfaces and add minimum\n\tdecoration to the defining entity of the generated wrapper to\n\tallow overriding interface primitives.\n\t* sem_disp.ads (Override_Dispatching_Operation): Addition of a\n\tnew formal (Is_Wrapper).\n\t* sem_disp.adb (Override_Dispatching_Operation): When overriding\n\tinterface primitives the new formal helps identifying that the\n\tnew operation is not fully decorated.\n\nFrom-SVN: r194846", "tree": {"sha": "ba4ad934659d79b98c1bc07a1b32e67120d5abf8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba4ad934659d79b98c1bc07a1b32e67120d5abf8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8398e82eccc1a725ed34a9c81be37a7c2bec9bda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8398e82eccc1a725ed34a9c81be37a7c2bec9bda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8398e82eccc1a725ed34a9c81be37a7c2bec9bda", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8398e82eccc1a725ed34a9c81be37a7c2bec9bda/comments", "author": null, "committer": null, "parents": [{"sha": "8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5"}], "stats": {"total": 195, "additions": 112, "deletions": 83}, "files": [{"sha": "56a36b10e244efce343ce16dfbd64f72c72f14a9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8398e82eccc1a725ed34a9c81be37a7c2bec9bda/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8398e82eccc1a725ed34a9c81be37a7c2bec9bda/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8398e82eccc1a725ed34a9c81be37a7c2bec9bda", "patch": "@@ -1,3 +1,19 @@\n+2013-01-03  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch8.adb, einfo.ads, einfo.adb: Minor code reorganization.\n+\n+2013-01-03  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_ch3.adb (Make_Controlling_Function_Wrappers): Exclude\n+\tinternal entities associated with interfaces and add minimum\n+\tdecoration to the defining entity of the generated wrapper to\n+\tallow overriding interface primitives.\n+\t* sem_disp.ads (Override_Dispatching_Operation): Addition of a\n+\tnew formal (Is_Wrapper).\n+\t* sem_disp.adb (Override_Dispatching_Operation): When overriding\n+\tinterface primitives the new formal helps identifying that the\n+\tnew operation is not fully decorated.\n+\n 2013-01-03  Thomas Quinot  <quinot@adacore.com>\n \n \t* sem_ch7.adb, sem_ch10.adb, einfo.adb, einfo.ads, sem_ch12.adb,"}, {"sha": "b4b5159e9e69a9286b371bedb3102e9404ae1455", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8398e82eccc1a725ed34a9c81be37a7c2bec9bda/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8398e82eccc1a725ed34a9c81be37a7c2bec9bda/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=8398e82eccc1a725ed34a9c81be37a7c2bec9bda", "patch": "@@ -2175,16 +2175,16 @@ package body Einfo is\n       return Flag127 (Id);\n    end Is_Valued_Procedure;\n \n-   function Is_Visible_Lib_Unit (Id : E) return B is\n-   begin\n-      return Flag116 (Id);\n-   end Is_Visible_Lib_Unit;\n-\n    function Is_Visible_Formal (Id : E) return B is\n    begin\n       return Flag206 (Id);\n    end Is_Visible_Formal;\n \n+   function Is_Visible_Lib_Unit (Id : E) return B is\n+   begin\n+      return Flag116 (Id);\n+   end Is_Visible_Lib_Unit;\n+\n    function Is_VMS_Exception (Id : E) return B is\n    begin\n       return Flag133 (Id);\n@@ -4735,16 +4735,16 @@ package body Einfo is\n       Set_Flag127 (Id, V);\n    end Set_Is_Valued_Procedure;\n \n-   procedure Set_Is_Visible_Lib_Unit (Id : E; V : B := True) is\n-   begin\n-      Set_Flag116 (Id, V);\n-   end Set_Is_Visible_Lib_Unit;\n-\n    procedure Set_Is_Visible_Formal (Id : E; V : B := True) is\n    begin\n       Set_Flag206 (Id, V);\n    end Set_Is_Visible_Formal;\n \n+   procedure Set_Is_Visible_Lib_Unit (Id : E; V : B := True) is\n+   begin\n+      Set_Flag116 (Id, V);\n+   end Set_Is_Visible_Lib_Unit;\n+\n    procedure Set_Is_VMS_Exception (Id : E; V : B := True) is\n    begin\n       pragma Assert (Ekind (Id) = E_Exception);\n@@ -7600,8 +7600,8 @@ package body Einfo is\n       W (\"Is_Unsigned_Type\",                Flag144 (Id));\n       W (\"Is_VMS_Exception\",                Flag133 (Id));\n       W (\"Is_Valued_Procedure\",             Flag127 (Id));\n-      W (\"Is_Visible_Lib_Unit\",             Flag116 (Id));\n       W (\"Is_Visible_Formal\",               Flag206 (Id));\n+      W (\"Is_Visible_Lib_Unit\",             Flag116 (Id));\n       W (\"Is_Volatile\",                     Flag16  (Id));\n       W (\"Itype_Printed\",                   Flag202 (Id));\n       W (\"Kill_Elaboration_Checks\",         Flag32  (Id));"}, {"sha": "f6407715ab31150c2e97fc2fa6613be15644e0d3", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8398e82eccc1a725ed34a9c81be37a7c2bec9bda/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8398e82eccc1a725ed34a9c81be37a7c2bec9bda/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=8398e82eccc1a725ed34a9c81be37a7c2bec9bda", "patch": "@@ -846,8 +846,9 @@ package Einfo is\n --       full details of the use of discriminals.\n \n --    Discriminal_Link (Node10)\n---       Defined in discriminals (which have an Ekind of E_In_Parameter,\n---       or E_Constant), points back to corresponding discriminant.\n+--       Defined in E_In_Parameter or E_Constant entities. For discriminals,\n+--       points back to corresponding discriminant. For other entities, must\n+--       remain Empty.\n \n --    Discriminant_Checking_Func (Node20)\n --       Defined in components. Points to the defining identifier of the\n@@ -2168,7 +2169,7 @@ package Einfo is\n \n --    Is_Discriminal (synthesized)\n --       Applies to all entities, true for renamings of discriminants. Such\n---       entities appear as constants or in parameters.\n+--       entities appear as constants or IN parameters.\n \n --    Is_Dispatch_Table_Entity (Flag234)\n --       Applies to all entities. Set to indicate to the backend that this\n@@ -2856,18 +2857,18 @@ package Einfo is\n --       Defined in procedure entities. Set if an Import_Valued_Procedure\n --       or Export_Valued_Procedure pragma applies to the procedure entity.\n \n---    Is_Visible_Lib_Unit (Flag116)\n---       Defined in all (root or child) library unit entities. Once compiled,\n---       library units remain chained to the entities in the parent scope, and\n---       a separate flag must be used to indicate whether the names are visible\n---       by selected notation, or not.\n-\n --    Is_Visible_Formal (Flag206)\n --       Defined in all entities. Set True for instances of the formals of a\n --       formal package. Indicates that the entity must be made visible in the\n --       body of the instance, to reproduce the visibility of the generic.\n --       This simplifies visibility settings in instance bodies.\n \n+--    Is_Visible_Lib_Unit (Flag116)\n+--       Defined in all (root or child) library unit entities. Once compiled,\n+--       library units remain chained to the entities in the parent scope, and\n+--       a separate flag must be used to indicate whether the names are visible\n+--       by selected notation, or not.\n+\n --    Is_VMS_Exception (Flag133)\n --       Defined in all entities. Set only for exception entities where the\n --       exception was specified in an Import_Exception or Export_Exception\n@@ -5091,7 +5092,7 @@ package Einfo is\n    --  E_Constant\n    --  E_Loop_Parameter\n    --    Current_Value                       (Node9)    (always Empty)\n-   --    Discriminal_Link                    (Node10)   (discriminals only)\n+   --    Discriminal_Link                    (Node10)\n    --    Full_View                           (Node11)\n    --    Esize                               (Uint12)\n    --    Extra_Accessibility                 (Node13)   (constants only)\n@@ -6310,8 +6311,8 @@ package Einfo is\n    function Is_Unsigned_Type                    (Id : E) return B;\n    function Is_VMS_Exception                    (Id : E) return B;\n    function Is_Valued_Procedure                 (Id : E) return B;\n-   function Is_Visible_Lib_Unit                 (Id : E) return B;\n    function Is_Visible_Formal                   (Id : E) return B;\n+   function Is_Visible_Lib_Unit                 (Id : E) return B;\n    function Is_Volatile                         (Id : E) return B;\n    function Itype_Printed                       (Id : E) return B;\n    function Kill_Elaboration_Checks             (Id : E) return B;\n@@ -6908,8 +6909,8 @@ package Einfo is\n    procedure Set_Is_Unsigned_Type                (Id : E; V : B := True);\n    procedure Set_Is_VMS_Exception                (Id : E; V : B := True);\n    procedure Set_Is_Valued_Procedure             (Id : E; V : B := True);\n-   procedure Set_Is_Visible_Lib_Unit             (Id : E; V : B := True);\n    procedure Set_Is_Visible_Formal               (Id : E; V : B := True);\n+   procedure Set_Is_Visible_Lib_Unit             (Id : E; V : B := True);\n    procedure Set_Is_Volatile                     (Id : E; V : B := True);\n    procedure Set_Itype_Printed                   (Id : E; V : B := True);\n    procedure Set_Kill_Elaboration_Checks         (Id : E; V : B := True);\n@@ -7629,8 +7630,8 @@ package Einfo is\n    pragma Inline (Is_Unsigned_Type);\n    pragma Inline (Is_VMS_Exception);\n    pragma Inline (Is_Valued_Procedure);\n-   pragma Inline (Is_Visible_Lib_Unit);\n    pragma Inline (Is_Visible_Formal);\n+   pragma Inline (Is_Visible_Lib_Unit);\n    pragma Inline (Itype_Printed);\n    pragma Inline (Kill_Elaboration_Checks);\n    pragma Inline (Kill_Range_Checks);\n@@ -8035,8 +8036,8 @@ package Einfo is\n    pragma Inline (Set_Is_Unsigned_Type);\n    pragma Inline (Set_Is_VMS_Exception);\n    pragma Inline (Set_Is_Valued_Procedure);\n-   pragma Inline (Set_Is_Visible_Lib_Unit);\n    pragma Inline (Set_Is_Visible_Formal);\n+   pragma Inline (Set_Is_Visible_Lib_Unit);\n    pragma Inline (Set_Is_Volatile);\n    pragma Inline (Set_Itype_Printed);\n    pragma Inline (Set_Kill_Elaboration_Checks);"}, {"sha": "15d5de0bd20c417b7c3f196a8b1601d5b0a2a463", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8398e82eccc1a725ed34a9c81be37a7c2bec9bda/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8398e82eccc1a725ed34a9c81be37a7c2bec9bda/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=8398e82eccc1a725ed34a9c81be37a7c2bec9bda", "patch": "@@ -8274,7 +8274,10 @@ package body Exp_Ch3 is\n          --  Input attributes, since each type will have its own version of\n          --  Input constructed by the expander. The test for Comes_From_Source\n          --  is needed to distinguish inherited operations from renamings\n-         --  (which also have Alias set).\n+         --  (which also have Alias set). We exclude internal entities with\n+         --  Interface_Alias to avoid generating duplicated wrappers since\n+         --  the primitive which covers the interface is also available in\n+         --  the list of primitive operations.\n \n          --  The function may be abstract, or require_Overriding may be set\n          --  for it, because tests for null extensions may already have reset\n@@ -8284,6 +8287,7 @@ package body Exp_Ch3 is\n \n          if Comes_From_Source (Subp)\n            or else No (Alias (Subp))\n+           or else Present (Interface_Alias (Subp))\n            or else Ekind (Subp) /= E_Function\n            or else not Has_Controlling_Result (Subp)\n            or else Is_Access_Type (Etype (Subp))\n@@ -8400,11 +8404,15 @@ package body Exp_Ch3 is\n \n             Append_To (Body_List, Func_Body);\n \n-            --  Replace the inherited function with the wrapper function\n-            --  in the primitive operations list.\n+            --  Replace the inherited function with the wrapper function in the\n+            --  primitive operations list. We add the minimum decoration needed\n+            --  to override interface primitives.\n+\n+            Set_Ekind (Defining_Unit_Name (Func_Spec), E_Function);\n \n             Override_Dispatching_Operation\n-              (Tag_Typ, Subp, New_Op => Defining_Unit_Name (Func_Spec));\n+              (Tag_Typ, Subp, New_Op => Defining_Unit_Name (Func_Spec),\n+               Is_Wrapper => True);\n          end if;\n \n       <<Next_Prim>>"}, {"sha": "6f2dd2ea2f1fdf23028877661cfdce6337a67125", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8398e82eccc1a725ed34a9c81be37a7c2bec9bda/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8398e82eccc1a725ed34a9c81be37a7c2bec9bda/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=8398e82eccc1a725ed34a9c81be37a7c2bec9bda", "patch": "@@ -5147,9 +5147,8 @@ package body Sem_Ch10 is\n \n       elsif not Is_Immediately_Visible (Uname) then\n          Set_Is_Visible_Lib_Unit (Uname);\n-         if not Private_Present (With_Clause)\n-           or else Private_With_OK\n-         then\n+\n+         if not Private_Present (With_Clause) or else Private_With_OK then\n             Set_Is_Immediately_Visible (Uname);\n          end if;\n \n@@ -5177,7 +5176,7 @@ package body Sem_Ch10 is\n         and then Ada_Version >= Ada_2005\n       then\n          declare\n-            Decl1 : constant Node_Id  := Unit_Declaration_Node (P);\n+            Decl1 : constant Node_Id := Unit_Declaration_Node (P);\n             Decl2 : Node_Id;\n             P2    : Entity_Id;\n             U2    : Entity_Id;\n@@ -5190,9 +5189,7 @@ package body Sem_Ch10 is\n                P2 := Scope (U2);\n                Decl2  := Unit_Declaration_Node (P2);\n \n-               if Is_Child_Unit (U2)\n-                 and then Is_Visible_Lib_Unit (U2)\n-               then\n+               if Is_Child_Unit (U2) and then Is_Visible_Lib_Unit (U2) then\n                   if Is_Generic_Instance (P)\n                     and then Nkind (Decl1) = N_Package_Declaration\n                     and then Generic_Parent (Specification (Decl1)) = P2"}, {"sha": "bd14f37a3b9ff6b4199ca4fb6366b77d68576955", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8398e82eccc1a725ed34a9c81be37a7c2bec9bda/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8398e82eccc1a725ed34a9c81be37a7c2bec9bda/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=8398e82eccc1a725ed34a9c81be37a7c2bec9bda", "patch": "@@ -1765,7 +1765,7 @@ package body Sem_Ch4 is\n                    (Is_Immediately_Visible (Scope (DT))\n                      or else\n                        (Is_Child_Unit (Scope (DT))\n-                          and then Is_Visible_Lib_Unit (Scope (DT))))\n+                         and then Is_Visible_Lib_Unit (Scope (DT))))\n                then\n                   Set_Etype (N, Available_View (DT));\n \n@@ -6320,13 +6320,12 @@ package body Sem_Ch4 is\n           (Is_Immediately_Visible (Scope (Typ))\n             or else\n               (Is_Child_Unit (Scope (Typ))\n-                 and then Is_Visible_Lib_Unit (Scope (Typ))))\n+                and then Is_Visible_Lib_Unit (Scope (Typ))))\n       then\n          return Available_View (Typ);\n       else\n          return Typ;\n       end if;\n-\n    end Process_Implicit_Dereference_Prefix;\n \n    --------------------------------"}, {"sha": "a3be9db025eb527147839d8a55e3092d7b814824", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 28, "deletions": 31, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8398e82eccc1a725ed34a9c81be37a7c2bec9bda/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8398e82eccc1a725ed34a9c81be37a7c2bec9bda/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=8398e82eccc1a725ed34a9c81be37a7c2bec9bda", "patch": "@@ -5144,13 +5144,12 @@ package body Sem_Ch8 is\n \n             if Is_New_Candidate then\n                if Is_Child_Unit (Id) or else P_Name = Standard_Standard then\n-                  exit when Is_Visible_Lib_Unit (Id)\n-                    or else Is_Immediately_Visible (Id);\n-\n+                  exit when Is_Visible_Lib_Unit (Id);\n                else\n-                  exit when not Is_Hidden (Id)\n-                    or else Is_Immediately_Visible (Id);\n+                  exit when not Is_Hidden (Id);\n                end if;\n+\n+               exit when Is_Immediately_Visible (Id);\n             end if;\n \n             Id := Homonym (Id);\n@@ -5329,33 +5328,34 @@ package body Sem_Ch8 is\n                   --  declares the desired entity. This error can use a\n                   --  specialized message.\n \n-                  if In_Open_Scopes (P_Name)\n-                    and then Present (Homonym (P_Name))\n-                    and then Is_Compilation_Unit (Homonym (P_Name))\n-                    and then\n-                     (Is_Immediately_Visible (Homonym (P_Name))\n-                        or else Is_Visible_Lib_Unit (Homonym (P_Name)))\n-                  then\n+                  if In_Open_Scopes (P_Name) then\n                      declare\n                         H : constant Entity_Id := Homonym (P_Name);\n \n                      begin\n-                        Id := First_Entity (H);\n-                        while Present (Id) loop\n-                           if Chars (Id) = Chars (Selector) then\n-                              Error_Msg_Qual_Level := 99;\n-                              Error_Msg_Name_1 := Chars (Selector);\n-                              Error_Msg_NE\n-                                (\"% not declared in&\", N, P_Name);\n-                              Error_Msg_NE\n-                                (\"\\use fully qualified name starting with\"\n-                                  & \" Standard to make& visible\", N, H);\n-                              Error_Msg_Qual_Level := 0;\n-                              goto Done;\n-                           end if;\n+                        if Present (H)\n+                          and then Is_Compilation_Unit (H)\n+                          and then\n+                            (Is_Immediately_Visible (H)\n+                              or else Is_Visible_Lib_Unit (H))\n+                        then\n+                           Id := First_Entity (H);\n+                           while Present (Id) loop\n+                              if Chars (Id) = Chars (Selector) then\n+                                 Error_Msg_Qual_Level := 99;\n+                                 Error_Msg_Name_1 := Chars (Selector);\n+                                 Error_Msg_NE\n+                                   (\"% not declared in&\", N, P_Name);\n+                                 Error_Msg_NE\n+                                   (\"\\use fully qualified name starting with \"\n+                                    & \"Standard to make& visible\", N, H);\n+                                 Error_Msg_Qual_Level := 0;\n+                                 goto Done;\n+                              end if;\n \n-                           Next_Entity (Id);\n-                        end loop;\n+                              Next_Entity (Id);\n+                           end loop;\n+                        end if;\n \n                         --  If not found, standard error message\n \n@@ -8049,9 +8049,7 @@ package body Sem_Ch8 is\n       --  appear after all visible declarations in the parent entity list.\n \n       while Present (Id) loop\n-         if Is_Child_Unit (Id)\n-           and then Is_Visible_Lib_Unit (Id)\n-         then\n+         if Is_Child_Unit (Id) and then Is_Visible_Lib_Unit (Id) then\n             Set_Is_Potentially_Use_Visible (Id);\n          end if;\n \n@@ -8544,7 +8542,6 @@ package body Sem_Ch8 is\n          Write_Str (\" === \");\n          Write_Name (Chars (E));\n          Write_Eol;\n-\n          Next_Entity (E);\n       end loop;\n    end we;"}, {"sha": "4ce0a158662024eb0cc93f9ed15adc5128cea0a0", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 19, "deletions": 10, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8398e82eccc1a725ed34a9c81be37a7c2bec9bda/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8398e82eccc1a725ed34a9c81be37a7c2bec9bda/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=8398e82eccc1a725ed34a9c81be37a7c2bec9bda", "patch": "@@ -2213,7 +2213,8 @@ package body Sem_Disp is\n    procedure Override_Dispatching_Operation\n      (Tagged_Type : Entity_Id;\n       Prev_Op     : Entity_Id;\n-      New_Op      : Entity_Id)\n+      New_Op      : Entity_Id;\n+      Is_Wrapper  : Boolean := False)\n    is\n       Elmt : Elmt_Id;\n       Prim : Node_Id;\n@@ -2278,7 +2279,8 @@ package body Sem_Disp is\n          --  operations that it implements (for operations inherited from the\n          --  parent itself, this check is made when building the derived type).\n \n-         --  Note: This code is only executed in case of late overriding\n+         --  Note: This code is executed with internally generated wrappers of\n+         --  functions with controlling result and late overridings.\n \n          Elmt := First_Elmt (Primitive_Operations (Tagged_Type));\n          while Present (Elmt) loop\n@@ -2293,18 +2295,25 @@ package body Sem_Disp is\n             elsif Is_Subprogram (Prim)\n               and then Present (Interface_Alias (Prim))\n               and then Alias (Prim) = Prev_Op\n-              and then Present (Etype (New_Op))\n             then\n                Set_Alias (Prim, New_Op);\n-               Check_Subtype_Conformant (New_Op, Prim);\n-               Set_Is_Abstract_Subprogram (Prim,\n-                 Is_Abstract_Subprogram (New_Op));\n \n-               --  Ensure that this entity will be expanded to fill the\n-               --  corresponding entry in its dispatch table.\n+               --  No further decoration needed yet for internally generated\n+               --  wrappers of controlling functions since (at this stage)\n+               --  they are not yet decorated.\n+\n+               if not Is_Wrapper then\n+                  Check_Subtype_Conformant (New_Op, Prim);\n+\n+                  Set_Is_Abstract_Subprogram (Prim,\n+                    Is_Abstract_Subprogram (New_Op));\n \n-               if not Is_Abstract_Subprogram (Prim) then\n-                  Set_Has_Delayed_Freeze (Prim);\n+                  --  Ensure that this entity will be expanded to fill the\n+                  --  corresponding entry in its dispatch table.\n+\n+                  if not Is_Abstract_Subprogram (Prim) then\n+                     Set_Has_Delayed_Freeze (Prim);\n+                  end if;\n                end if;\n             end if;\n "}, {"sha": "ff1ebc4d7eef0adda2000291118447f3d9f69280", "filename": "gcc/ada/sem_disp.ads", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8398e82eccc1a725ed34a9c81be37a7c2bec9bda/gcc%2Fada%2Fsem_disp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8398e82eccc1a725ed34a9c81be37a7c2bec9bda/gcc%2Fada%2Fsem_disp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.ads?ref=8398e82eccc1a725ed34a9c81be37a7c2bec9bda", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -121,10 +121,12 @@ package Sem_Disp is\n    procedure Override_Dispatching_Operation\n      (Tagged_Type : Entity_Id;\n       Prev_Op     : Entity_Id;\n-      New_Op      : Entity_Id);\n+      New_Op      : Entity_Id;\n+      Is_Wrapper  : Boolean := False);\n    --  Replace an implicit dispatching operation with an explicit one.\n    --  Prev_Op is an inherited primitive operation which is overridden\n-   --  by the explicit declaration of New_Op.\n+   --  by the explicit declaration of New_Op. Is_Wrapper is True when\n+   --  New_Op is an internally generated wrapper of a controlling function.\n \n    procedure Propagate_Tag (Control : Node_Id; Actual : Node_Id);\n    --  If a function call is tag-indeterminate,  its controlling argument is"}]}