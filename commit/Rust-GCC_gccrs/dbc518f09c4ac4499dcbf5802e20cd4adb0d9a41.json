{"sha": "dbc518f09c4ac4499dcbf5802e20cd4adb0d9a41", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJjNTE4ZjA5YzRhYzQ0OTlkY2JmNTgwMmUyMGNkNGFkYjBkOWE0MQ==", "commit": {"author": {"name": "Volker Reichelt", "email": "v.reichelt@netcologne.de", "date": "2008-03-29T00:39:48Z"}, "committer": {"name": "Volker Reichelt", "email": "reichelt@gcc.gnu.org", "date": "2008-03-29T00:39:48Z"}, "message": "* c-parser.c (c_parser_next_token_is_keyword): Simplify.\n\nFrom-SVN: r133709", "tree": {"sha": "57f75bc45584c17de8ed5e3315e30bd3f84f1184", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57f75bc45584c17de8ed5e3315e30bd3f84f1184"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dbc518f09c4ac4499dcbf5802e20cd4adb0d9a41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbc518f09c4ac4499dcbf5802e20cd4adb0d9a41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbc518f09c4ac4499dcbf5802e20cd4adb0d9a41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbc518f09c4ac4499dcbf5802e20cd4adb0d9a41/comments", "author": {"login": "VReichelt", "id": 85767072, "node_id": "MDQ6VXNlcjg1NzY3MDcy", "avatar_url": "https://avatars.githubusercontent.com/u/85767072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VReichelt", "html_url": "https://github.com/VReichelt", "followers_url": "https://api.github.com/users/VReichelt/followers", "following_url": "https://api.github.com/users/VReichelt/following{/other_user}", "gists_url": "https://api.github.com/users/VReichelt/gists{/gist_id}", "starred_url": "https://api.github.com/users/VReichelt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VReichelt/subscriptions", "organizations_url": "https://api.github.com/users/VReichelt/orgs", "repos_url": "https://api.github.com/users/VReichelt/repos", "events_url": "https://api.github.com/users/VReichelt/events{/privacy}", "received_events_url": "https://api.github.com/users/VReichelt/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fc1ca42854276d2be9197a075c6f219bb12329d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc1ca42854276d2be9197a075c6f219bb12329d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc1ca42854276d2be9197a075c6f219bb12329d7"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "ddfa08c127c34d095f275f15218466f22bd9a5f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbc518f09c4ac4499dcbf5802e20cd4adb0d9a41/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbc518f09c4ac4499dcbf5802e20cd4adb0d9a41/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dbc518f09c4ac4499dcbf5802e20cd4adb0d9a41", "patch": "@@ -1,3 +1,7 @@\n+2008-03-28  Volker Reichelt  <v.reichelt@netcologne.de>\n+\n+\t* c-parser.c (c_parser_next_token_is_keyword): Simplify.\n+\n 2008-03-28  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/i386/sse.md (*and<mode>3): Pass <MODE>mode instead"}, {"sha": "c0f862801645a019e797a31cfda0c98fe4c1167f", "filename": "gcc/c-parser.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbc518f09c4ac4499dcbf5802e20cd4adb0d9a41/gcc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbc518f09c4ac4499dcbf5802e20cd4adb0d9a41/gcc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parser.c?ref=dbc518f09c4ac4499dcbf5802e20cd4adb0d9a41", "patch": "@@ -443,12 +443,7 @@ c_parser_next_token_is_not (c_parser *parser, enum cpp_ttype type)\n static inline bool\n c_parser_next_token_is_keyword (c_parser *parser, enum rid keyword)\n {\n-  c_token *token;\n-\n-  /* Peek at the next token.  */\n-  token = c_parser_peek_token (parser);\n-  /* Check to see if it is the indicated keyword.  */\n-  return token->keyword == keyword;\n+  return c_parser_peek_token (parser)->keyword == keyword;\n }\n \n /* Return true if TOKEN can start a type name,"}]}