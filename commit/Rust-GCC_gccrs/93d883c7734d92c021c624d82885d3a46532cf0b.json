{"sha": "93d883c7734d92c021c624d82885d3a46532cf0b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTNkODgzYzc3MzRkOTJjMDIxYzYyNGQ4Mjg4NWQzYTQ2NTMyY2YwYg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@adacore.com", "date": "2020-12-03T01:10:26Z"}, "committer": {"name": "Alexandre Oliva", "email": "oliva@gnu.org", "date": "2020-12-03T01:10:26Z"}, "message": "options.exp: unsupport tests that depend on missing language\n\nThere's a help.exp test that checks that the help message for\n-Wabsolute-value mentions it's available in C and ObjC, when compiling\na C++ program.\n\nHowever, if GCC is built with the C++ language disabled, the\n.cc file is compiled as C, and the message [available in C...] becomes\n[disabled] instead, because that's the default for the flag in C.\n\nI suppose it might also be possible to disable the C language, and\nthen the multitude of help.exp tests that name c as the source\nlanguage will fail.\n\nThis patch avoids these fails: it detects the message \"compiler not\ninstalled\" in the compiler output, and bails out as \"unsupported\".\n\n\nfor  gcc/testsuite/ChangeLog\n\n\t* lib/options.exp (check_for_options_with_filter): Detect\n\tunavailable compiler for the selected language, and bail out\n\tas unsupported.", "tree": {"sha": "0ae9eed72ce3bb85cc83fde884d107d6f5bf1345", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ae9eed72ce3bb85cc83fde884d107d6f5bf1345"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93d883c7734d92c021c624d82885d3a46532cf0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93d883c7734d92c021c624d82885d3a46532cf0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93d883c7734d92c021c624d82885d3a46532cf0b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93d883c7734d92c021c624d82885d3a46532cf0b/comments", "author": null, "committer": null, "parents": [{"sha": "5106ff7e6095a281de4c4eead6a3a69a7c59f882", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5106ff7e6095a281de4c4eead6a3a69a7c59f882", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5106ff7e6095a281de4c4eead6a3a69a7c59f882"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "7700144fd440b917218f991c98c6b897517fc90a", "filename": "gcc/testsuite/lib/options.exp", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93d883c7734d92c021c624d82885d3a46532cf0b/gcc%2Ftestsuite%2Flib%2Foptions.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93d883c7734d92c021c624d82885d3a46532cf0b/gcc%2Ftestsuite%2Flib%2Foptions.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Foptions.exp?ref=93d883c7734d92c021c624d82885d3a46532cf0b", "patch": "@@ -59,6 +59,11 @@ proc check_for_options_with_filter { language gcc_options exclude \\\n     set gcc_output [gcc_target_compile $srcfname $filebase.x executable $gcc_options]\n     remote_file build delete $srcfname $filebase.x $filebase.gcno\n \n+    if {[regexp -- \"compiler not installed on this system\" $gcc_output]} {\n+\tunsupported \"$test: $language compiler not available\"\n+\treturn\n+    }\n+\n     if { $exclude != \"\" } {\n \tset lines [split $gcc_output \"\\n\"]\n \tset gcc_output \"\""}]}