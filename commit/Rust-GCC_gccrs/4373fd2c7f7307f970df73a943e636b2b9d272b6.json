{"sha": "4373fd2c7f7307f970df73a943e636b2b9d272b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDM3M2ZkMmM3ZjczMDdmOTcwZGY3M2E5NDNlNjM2YjJiOWQyNzJiNg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-06-09T08:01:05Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-06-09T08:01:52Z"}, "message": "gcc-changelog: fix deduction for root ChangeLog\n\ncontrib/ChangeLog:\n\n\t* gcc-changelog/git_commit.py: Fix ChangeLog regex in order to\n\tmatch the top-level ChangeLog.\n\t* gcc-changelog/test_email.py: Add test.\n\t* gcc-changelog/test_patches.txt: Likewise.", "tree": {"sha": "4c9be71104c6dae96984751a09f0ddaa4487d4a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c9be71104c6dae96984751a09f0ddaa4487d4a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4373fd2c7f7307f970df73a943e636b2b9d272b6", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl7fQfoACgkQTcGC3A+n\nN4UuQQf/VTKhDBWZusE7SJhOd3qHh2DCdcaCQSXobBIBuuJsek3leBlnfNM8URHf\nk18l9ZinHt7VoXLLnd5fNO5Jc3vd76yDPgd7Gx9vFrucbbh3KXDyoWsnPQDp43jC\nSerSQVoZmhu0jKcRpa9v62aiGml9cgByMXym8nhgaSyOttepJPKnuRyKWH2rEmh3\ntqcKLcxetSHYDkqEquntJpvL/s9JWlOvp59QiQPidjVv1H3F+jXRUBIjfTtRpKRH\nFVFIPMIWh+LvJRc27DQ7cAEvBl6or7Y6gOZNpcUZuiowE2c4ujmmGuiFKRqIgqEn\nPv3OKo+ZGCzH/cCW4Pv6UMrU3uZPeA==\n=4NRi\n-----END PGP SIGNATURE-----", "payload": "tree 4c9be71104c6dae96984751a09f0ddaa4487d4a9\nparent d6dbb71e468d0db561cc9eca99eeaca1efb81c11\nauthor Martin Liska <mliska@suse.cz> 1591689665 +0200\ncommitter Martin Liska <mliska@suse.cz> 1591689712 +0200\n\ngcc-changelog: fix deduction for root ChangeLog\n\ncontrib/ChangeLog:\n\n\t* gcc-changelog/git_commit.py: Fix ChangeLog regex in order to\n\tmatch the top-level ChangeLog.\n\t* gcc-changelog/test_email.py: Add test.\n\t* gcc-changelog/test_patches.txt: Likewise.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4373fd2c7f7307f970df73a943e636b2b9d272b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4373fd2c7f7307f970df73a943e636b2b9d272b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4373fd2c7f7307f970df73a943e636b2b9d272b6/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6dbb71e468d0db561cc9eca99eeaca1efb81c11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6dbb71e468d0db561cc9eca99eeaca1efb81c11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6dbb71e468d0db561cc9eca99eeaca1efb81c11"}], "stats": {"total": 78, "additions": 76, "deletions": 2}, "files": [{"sha": "f85d4c83c63f772072519e681903164a477c9fd3", "filename": "contrib/gcc-changelog/git_commit.py", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4373fd2c7f7307f970df73a943e636b2b9d272b6/contrib%2Fgcc-changelog%2Fgit_commit.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4373fd2c7f7307f970df73a943e636b2b9d272b6/contrib%2Fgcc-changelog%2Fgit_commit.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_commit.py?ref=4373fd2c7f7307f970df73a943e636b2b9d272b6", "patch": "@@ -150,7 +150,7 @@\n author_line_regex = \\\n         re.compile(r'^(?P<datetime>\\d{4}-\\d{2}-\\d{2})\\ {2}(?P<name>.*  <.*>)')\n additional_author_regex = re.compile(r'^\\t(?P<spaces>\\ *)?(?P<name>.*  <.*>)')\n-changelog_regex = re.compile(r'^(?:[fF]or +)?([a-z0-9+-/]*)/ChangeLog:?')\n+changelog_regex = re.compile(r'^(?:[fF]or +)?([a-z0-9+-/]*)ChangeLog:?')\n pr_regex = re.compile(r'\\tPR (?P<component>[a-z+-]+\\/)?([0-9]+)$')\n dr_regex = re.compile(r'\\tDR ([0-9]+)$')\n star_prefix_regex = re.compile(r'\\t\\*(?P<spaces>\\ *)(?P<content>.*)')\n@@ -359,7 +359,8 @@ def parse_changelog(self):\n                                          % LINE_LIMIT, line))\n             m = changelog_regex.match(line)\n             if m:\n-                last_entry = ChangeLogEntry(m.group(1), self.top_level_authors,\n+                last_entry = ChangeLogEntry(m.group(1).rstrip('/'),\n+                                            self.top_level_authors,\n                                             self.top_level_prs)\n                 self.changelog_entries.append(last_entry)\n             elif self.find_changelog_location(line):"}, {"sha": "04ddad3f100578e92b4e1ed0d1d3b6bd8b507ba9", "filename": "contrib/gcc-changelog/test_email.py", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4373fd2c7f7307f970df73a943e636b2b9d272b6/contrib%2Fgcc-changelog%2Ftest_email.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4373fd2c7f7307f970df73a943e636b2b9d272b6/contrib%2Fgcc-changelog%2Ftest_email.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Ftest_email.py?ref=4373fd2c7f7307f970df73a943e636b2b9d272b6", "patch": "@@ -331,3 +331,8 @@ def test_libstdcxx_html_regenerated(self):\n         assert len(email.errors) == 1\n         msg = 'changed file not mentioned in a ChangeLog'\n         assert email.errors[0].message == msg\n+\n+    def test_not_deduce(self):\n+        email = self.from_patch_glob('0001-configure.patch')\n+        assert not email.errors\n+        assert len(email.changelog_entries) == 2"}, {"sha": "15fe0df1ccc0ad2b13e5a42999a78888b48d249b", "filename": "contrib/gcc-changelog/test_patches.txt", "status": "modified", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4373fd2c7f7307f970df73a943e636b2b9d272b6/contrib%2Fgcc-changelog%2Ftest_patches.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4373fd2c7f7307f970df73a943e636b2b9d272b6/contrib%2Fgcc-changelog%2Ftest_patches.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Ftest_patches.txt?ref=4373fd2c7f7307f970df73a943e636b2b9d272b6", "patch": "@@ -3058,4 +3058,72 @@ index 967e5f5f348..95d21b5bf9f 100644\n +\n -- \n 2.25.4\n+=== 0001-configure.patch ===\n+From dbe341cf6a77bb28c5fdf8b32dcb0ff1c2a27348 Mon Sep 17 00:00:00 2001\n+From: Martin Liska <mliska@suse.cz>\n+Date: Tue, 9 Jun 2020 09:39:36 +0200\n+Subject: [PATCH] c++: Fix --disable-bootstrap with older g++.\n+\n+Previously I had AX_CXX_COMPILE_STDCXX in the gcc directory configure, which\n+added -std=c++11 to CXX if needed, but then CXX is overridden from the\n+toplevel directory, so it didn't have the desired effect.  Fixed by moving\n+the check to the toplevel.  Currently it is only used when building GCC\n+without bootstrapping; other packages that share the toplevel directory\n+can adjust the condition if they also want to require C++11 support.\n \n+ChangeLog:\n+\n+\t* configure.ac: Check AX_CXX_COMPILE_STDCXX if not bootstrapping.\n+\t* configure: Regenerate.\n+\n+gcc/ChangeLog:\n+\n+\t* aclocal.m4: Remove ax_cxx_compile_stdcxx.m4.\n+\t* configure.ac: Remove AX_CXX_COMPILE_STDCXX.\n+\t* configure: Regenerate.\n+\n+---\n+ configure        | 999 ++++++++++++++++++++++++++++++++++++++++++++++-\n+ configure.ac     |   6 +-\n+ gcc/aclocal.m4   |   1 -\n+ gcc/configure    | 997 +---------------------------------------------\n+ gcc/configure.ac |   2 -\n+ 5 files changed, 1004 insertions(+), 1001 deletions(-)\n+\n+diff --git a/configure b/configure\n+index b7897446c70..a0c5aca9e8d 100755\n+--- a/configure\n++++ b/configure\n+@@ -1 +1,2 @@\n+ \n++\n+diff --git a/configure.ac b/configure.ac\n+index 59bd92a3e53..1a53ed418e4 100644\n+--- a/configure.ac\n++++ b/configure.ac\n+@@ -1 +1,2 @@\n+ \n++\n+diff --git a/gcc/aclocal.m4 b/gcc/aclocal.m4\n+index e93c1535063..1737d59d1cb 100644\n+--- a/gcc/aclocal.m4\n++++ b/gcc/aclocal.m4\n+@@ -1 +1,2 @@\n+ \n++\n+diff --git a/gcc/configure b/gcc/configure\n+index 46850710424..629c7c7e153 100755\n+--- a/gcc/configure\n++++ b/gcc/configure\n+@@ -1 +1,2 @@\n+ \n++\n+diff --git a/gcc/configure.ac b/gcc/configure.ac\n+index 60d83c30771..9e7efd13ecc 100644\n+--- a/gcc/configure.ac\n++++ b/gcc/configure.ac\n+@@ -1 +1,2 @@\n+ \n++\n+-- \n+2.26.2"}]}