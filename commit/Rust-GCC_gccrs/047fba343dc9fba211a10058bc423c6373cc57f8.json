{"sha": "047fba343dc9fba211a10058bc423c6373cc57f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ3ZmJhMzQzZGM5ZmJhMjExYTEwMDU4YmM0MjNjNjM3M2NjNTdmOA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2018-08-01T14:40:35Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2018-08-01T14:40:35Z"}, "message": "Fix over-widening handling of COND_EXPRs (PR 86749)\n\nThis PR is a wrong-code bug caused by the over-widening support.\nThe minimum input precisions for a COND_EXPR are supposed to apply\nonly to the \"then\" and \"else\" values, but here we were applying\nthem to the operands of a nested COND_EXPR comparison instead.\n\n2018-08-01  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\tPR tree-optimization/86749\n\t* tree-vect-patterns.c (vect_determine_min_output_precision_1):\n\tIf the lhs is used in a COND_EXPR, check that it is being used\n\tas the \"then\" or \"else\" value.\n\ngcc/testsuite/\n\tPR tree-optimization/86749\n\t* gcc.dg/vect/pr86749.c: New test.\n\nFrom-SVN: r263213", "tree": {"sha": "1c73f7e0d6103bcca887c20c97a53240e62ba7f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c73f7e0d6103bcca887c20c97a53240e62ba7f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/047fba343dc9fba211a10058bc423c6373cc57f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/047fba343dc9fba211a10058bc423c6373cc57f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/047fba343dc9fba211a10058bc423c6373cc57f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/047fba343dc9fba211a10058bc423c6373cc57f8/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "094db6beb9cea0aedbde326f271d2b6fab762b1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/094db6beb9cea0aedbde326f271d2b6fab762b1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/094db6beb9cea0aedbde326f271d2b6fab762b1d"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "405298dfd2b9d194e0ad10a67660e06a97e8c752", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/047fba343dc9fba211a10058bc423c6373cc57f8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/047fba343dc9fba211a10058bc423c6373cc57f8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=047fba343dc9fba211a10058bc423c6373cc57f8", "patch": "@@ -1,3 +1,10 @@\n+2018-08-01  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/86749\n+\t* tree-vect-patterns.c (vect_determine_min_output_precision_1):\n+\tIf the lhs is used in a COND_EXPR, check that it is being used\n+\tas the \"then\" or \"else\" value.\n+\n 2018-08-01  Tom de Vries  <tdevries@suse.de>\n \n \tPR target/86800"}, {"sha": "7f75e108268bb45429899e52a2572e9ebc37cb42", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/047fba343dc9fba211a10058bc423c6373cc57f8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/047fba343dc9fba211a10058bc423c6373cc57f8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=047fba343dc9fba211a10058bc423c6373cc57f8", "patch": "@@ -1,3 +1,8 @@\n+2018-08-01  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/86749\n+\t* gcc.dg/vect/pr86749.c: New test.\n+\n 2018-08-01  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/86661"}, {"sha": "803bcb0c620bd744067a85e882caa2d43292fc68", "filename": "gcc/testsuite/gcc.dg/vect/pr86749.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/047fba343dc9fba211a10058bc423c6373cc57f8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr86749.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/047fba343dc9fba211a10058bc423c6373cc57f8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr86749.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr86749.c?ref=047fba343dc9fba211a10058bc423c6373cc57f8", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-additional-options \"-O3\" } */\n+\n+#include \"tree-vect.h\"\n+\n+short a, b, f, g;\n+int c = 4, d, e = -1L;\n+long h = 4;\n+\n+int\n+main ()\n+{\n+  check_vect ();\n+\n+  long i;\n+  for (; d <= 55; d++)\n+    {\n+      g = c >= 2 ? 0 : b << c;\n+      f = g - a;\n+      i = (f ^ 9223372036854775807) < 0 ? f : h;\n+      e &= i;\n+    }\n+  if (e != 4)\n+    __builtin_abort ();\n+\n+  return 0;\n+}"}, {"sha": "d41c61a3908cc758ca262aa97844f57df8351cbd", "filename": "gcc/tree-vect-patterns.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/047fba343dc9fba211a10058bc423c6373cc57f8/gcc%2Ftree-vect-patterns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/047fba343dc9fba211a10058bc423c6373cc57f8/gcc%2Ftree-vect-patterns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-patterns.c?ref=047fba343dc9fba211a10058bc423c6373cc57f8", "patch": "@@ -4399,6 +4399,14 @@ vect_determine_min_output_precision_1 (stmt_vec_info stmt_info, tree lhs)\n       stmt_vec_info use_stmt_info = vinfo->lookup_stmt (use_stmt);\n       if (!use_stmt_info || !use_stmt_info->min_input_precision)\n \treturn false;\n+      /* The input precision recorded for COND_EXPRs applies only to the\n+\t \"then\" and \"else\" values.  */\n+      gassign *assign = dyn_cast <gassign *> (stmt_info->stmt);\n+      if (assign\n+\t  && gimple_assign_rhs_code (assign) == COND_EXPR\n+\t  && use->use != gimple_assign_rhs2_ptr (assign)\n+\t  && use->use != gimple_assign_rhs3_ptr (assign))\n+\treturn false;\n       precision = MAX (precision, use_stmt_info->min_input_precision);\n     }\n "}]}