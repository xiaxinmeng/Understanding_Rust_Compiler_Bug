{"sha": "edde16fc017f0b070f82c309d78a3ef5377d83bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWRkZTE2ZmMwMTdmMGIwNzBmODJjMzA5ZDc4YTNlZjUzNzdkODNiZA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-06-13T01:31:03Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-06-13T01:31:03Z"}, "message": "re PR c++/87410 (internal compiler error: in fold_convert_loc, at fold-const.c:2530)\n\n\tPR c++/87410\n\t* g++.dg/cpp1y/pr87410.C: New test.\n\nFrom-SVN: r272230", "tree": {"sha": "fb479c35507a48837a54dec1fcd4f6cb12fff08e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb479c35507a48837a54dec1fcd4f6cb12fff08e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/edde16fc017f0b070f82c309d78a3ef5377d83bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edde16fc017f0b070f82c309d78a3ef5377d83bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edde16fc017f0b070f82c309d78a3ef5377d83bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edde16fc017f0b070f82c309d78a3ef5377d83bd/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "12e0d27abb0f74ea4d8262cd6809c0fe779e6875", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12e0d27abb0f74ea4d8262cd6809c0fe779e6875", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12e0d27abb0f74ea4d8262cd6809c0fe779e6875"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "591d1f4a3432e6dea3024796fec365b517a9178f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edde16fc017f0b070f82c309d78a3ef5377d83bd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edde16fc017f0b070f82c309d78a3ef5377d83bd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=edde16fc017f0b070f82c309d78a3ef5377d83bd", "patch": "@@ -1,3 +1,8 @@\n+2019-06-12  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/87410\n+\t* g++.dg/cpp1y/pr87410.C: New test.\n+\n 2019-06-12  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/66999 - 'this' captured by reference."}, {"sha": "5a691e40b0a5fcffa4b64fb1490f9f6a400e07d6", "filename": "gcc/testsuite/g++.dg/cpp1y/pr87410.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edde16fc017f0b070f82c309d78a3ef5377d83bd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr87410.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edde16fc017f0b070f82c309d78a3ef5377d83bd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr87410.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr87410.C?ref=edde16fc017f0b070f82c309d78a3ef5377d83bd", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/87410\n+// { dg-do compile { target c++14 } }\n+\n+template <long a> using b = const char[a];\n+template <typename, int c, int e, typename f>\n+constexpr auto g(b<c> &, b<e> &, f) {}\n+template <typename d, int a> auto h(b<a> &) {\n+  auto i = j(static_cast<d **>(nullptr));\n+  return **i;\n+}\n+class k {\n+  using l = k;\n+  const int &m() const;\n+  friend constexpr auto j(l **n) -> decltype(n) {\n+    g<int>(\"\", \"\", static_cast<const int &(k::*)() const>(&k::m));\n+    return n;\n+  }\n+};\n+k o = h<k, 1>(\"\");"}]}