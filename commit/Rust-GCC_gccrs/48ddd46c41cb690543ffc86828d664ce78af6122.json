{"sha": "48ddd46c41cb690543ffc86828d664ce78af6122", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhkZGQ0NmM0MWNiNjkwNTQzZmZjODY4MjhkNjY0Y2U3OGFmNjEyMg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2002-09-30T13:00:32Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2002-09-30T13:00:32Z"}, "message": "i386.h (TARGET_CPP_CPU_BUILTINS): Define __SSE_MATH__.\n\n\n\t* i386.h (TARGET_CPP_CPU_BUILTINS): Define __SSE_MATH__.\n\n\t* gcse.c (cprop_jump): Check that the register has not\n\tbeen modified\n\t(cprop_jump): Likewise.\n\nFrom-SVN: r57648", "tree": {"sha": "33d3f218be00b75d8fa831ceef6ceaea83289f19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33d3f218be00b75d8fa831ceef6ceaea83289f19"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48ddd46c41cb690543ffc86828d664ce78af6122", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48ddd46c41cb690543ffc86828d664ce78af6122", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48ddd46c41cb690543ffc86828d664ce78af6122", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48ddd46c41cb690543ffc86828d664ce78af6122/comments", "author": null, "committer": null, "parents": [{"sha": "ca25149e05e3fbd98290f71f1d41d008cd77cf56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca25149e05e3fbd98290f71f1d41d008cd77cf56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca25149e05e3fbd98290f71f1d41d008cd77cf56"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "76793fb896f0ff29d76a76c7ab763ae4961a848f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ddd46c41cb690543ffc86828d664ce78af6122/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ddd46c41cb690543ffc86828d664ce78af6122/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=48ddd46c41cb690543ffc86828d664ce78af6122", "patch": "@@ -1,3 +1,11 @@\n+Mon Sep 30 14:57:18 CEST 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.h (TARGET_CPP_CPU_BUILTINS): Define __SSE_MATH__.\n+\n+\t* gcse.c (cprop_jump): Check that the register has not\n+\tbeen modified\n+\t(cprop_jump): Likewise.\n+\n 2002-09-30  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* arm.h (BASE_REG_CLASS): Always return LO_REGS for Thumb."}, {"sha": "af9c37fc131776369171bcaf648b75e7d3180386", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ddd46c41cb690543ffc86828d664ce78af6122/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ddd46c41cb690543ffc86828d664ce78af6122/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=48ddd46c41cb690543ffc86828d664ce78af6122", "patch": "@@ -529,6 +529,10 @@ extern int x86_prefetch_sse;\n \tbuiltin_define (\"__SSE__\");\t\t\t\t\\\n       if (TARGET_SSE2)\t\t\t\t\t\t\\\n \tbuiltin_define (\"__SSE2__\");\t\t\t\t\\\n+      if (TARGET_SSE_MATH && TARGET_SSE)\t\t\t\\\n+\tbuiltin_define (\"__SSE_MATH__\");\t\t\t\\\n+      if (TARGET_SSE_MATH && TARGET_SSE2)\t\t\t\\\n+\tbuiltin_define (\"__SSE2_MATH__\");\t\t\t\\\n \t\t\t\t\t\t\t\t\\\n       /* Built-ins based on -march=.  */\t\t\t\\\n       if (ix86_arch == PROCESSOR_I486)\t\t\t\t\\"}, {"sha": "081275a0c7de1e87728c2d40c6094f28c991455b", "filename": "gcc/gcse.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ddd46c41cb690543ffc86828d664ce78af6122/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ddd46c41cb690543ffc86828d664ce78af6122/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=48ddd46c41cb690543ffc86828d664ce78af6122", "patch": "@@ -4054,7 +4054,9 @@ cprop_jump (bb, setcc, jump, from, src)\n \n   /* First substitute in the INSN condition as the SET_SRC of the JUMP,\n      then substitute that given values in this expanded JUMP.  */\n-  if (setcc != NULL)\n+  if (setcc != NULL\n+      && !modified_between_p (from, setcc, jump)\n+      && !modified_between_p (src, setcc, jump))\n     {\n       rtx setcc_set = single_set (setcc);\n       new_set = simplify_replace_rtx (SET_SRC (set),\n@@ -4068,14 +4070,19 @@ cprop_jump (bb, setcc, jump, from, src)\n \n   /* If no simplification can be made, then try the next\n      register.  */\n-  if (rtx_equal_p (new, new_set))\n+  if (rtx_equal_p (new, new_set) || rtx_equal_p (new, SET_SRC (set)))\n     return 0;\n \n   /* If this is now a no-op delete it, otherwise this must be a valid insn.  */\n   if (new == pc_rtx)\n     delete_insn (jump);\n   else\n     {\n+      /* Ensure the value computed inside the jump insn to be equivalent\n+         to one computed by setcc.  */\n+      if (setcc \n+\t  && modified_in_p (new, setcc))\n+\treturn 0;\n       if (! validate_change (jump, &SET_SRC (set), new, 0))\n \treturn 0;\n "}]}