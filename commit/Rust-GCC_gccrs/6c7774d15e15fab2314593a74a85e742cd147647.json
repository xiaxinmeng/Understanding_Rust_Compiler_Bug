{"sha": "6c7774d15e15fab2314593a74a85e742cd147647", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM3Nzc0ZDE1ZTE1ZmFiMjMxNDU5M2E3NGE4NWU3NDJjZDE0NzY0Nw==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.vnet.ibm.com", "date": "2017-03-24T14:01:18Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2017-03-24T14:01:18Z"}, "message": "S/390: arch12: New vector popcount variants\n\narch12 provides pop count vector instructions for bigger elements than\njust chars.\n\ngcc/testsuite/ChangeLog:\n\n2017-03-24  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n\n\t* gcc.target/s390/vxe/popcount-1.c: New test.\n\ngcc/ChangeLog:\n\n2017-03-24  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n\n\t* config/s390/vector.md (\"popcountv16qi2\", \"popcountv8hi2\")\n\t(\"popcountv4si2\", \"popcountv2di2\"): Rename to ...\n\t(\"popcount<mode>2\", \"popcountv8hi2_vx\", \"popcountv4si2_vx\")\n\t(\"popcountv2di2_vx\"): ... these and add !TARGET_VXE to the\n\tcondition.\n\t(\"popcount<mode>2_vxe\"): New pattern.\n\nFrom-SVN: r246454", "tree": {"sha": "32502085f377be3095fd554f6d0bc4f895c45c0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32502085f377be3095fd554f6d0bc4f895c45c0f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c7774d15e15fab2314593a74a85e742cd147647", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c7774d15e15fab2314593a74a85e742cd147647", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c7774d15e15fab2314593a74a85e742cd147647", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c7774d15e15fab2314593a74a85e742cd147647/comments", "author": null, "committer": null, "parents": [{"sha": "9ec988605d388be904e9b6f391ea67b4f456385a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ec988605d388be904e9b6f391ea67b4f456385a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ec988605d388be904e9b6f391ea67b4f456385a"}], "stats": {"total": 139, "additions": 131, "deletions": 8}, "files": [{"sha": "b669724c749484e0ab7ffd82480f88018f500c38", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c7774d15e15fab2314593a74a85e742cd147647/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c7774d15e15fab2314593a74a85e742cd147647/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6c7774d15e15fab2314593a74a85e742cd147647", "patch": "@@ -1,3 +1,12 @@\n+2017-03-24  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n+\n+\t* config/s390/vector.md (\"popcountv16qi2\", \"popcountv8hi2\")\n+\t(\"popcountv4si2\", \"popcountv2di2\"): Rename to ...\n+\t(\"popcount<mode>2\", \"popcountv8hi2_vx\", \"popcountv4si2_vx\")\n+\t(\"popcountv2di2_vx\"): ... these and add !TARGET_VXE to the\n+\tcondition.\n+\t(\"popcount<mode>2_vxe\"): New pattern.\n+\n 2017-03-24  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* common/config/s390/s390-common.c (processor_flags_table): Add"}, {"sha": "d4c0e95503f814289dedf4d88768ae8d04e51508", "filename": "gcc/config/s390/vector.md", "status": "modified", "additions": 30, "deletions": 8, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c7774d15e15fab2314593a74a85e742cd147647/gcc%2Fconfig%2Fs390%2Fvector.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c7774d15e15fab2314593a74a85e742cd147647/gcc%2Fconfig%2Fs390%2Fvector.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fvector.md?ref=6c7774d15e15fab2314593a74a85e742cd147647", "patch": "@@ -715,11 +715,33 @@\n \n ; Vector population count\n \n-(define_insn \"popcountv16qi2\"\n+(define_expand \"popcount<mode>2\"\n+  [(set (match_operand:VI_HW                0 \"register_operand\" \"=v\")\n+\t(unspec:VI_HW [(match_operand:VI_HW 1 \"register_operand\"  \"v\")]\n+\t\t      UNSPEC_POPCNT))]\n+  \"TARGET_VX\"\n+{\n+  if (TARGET_VXE)\n+    emit_insn (gen_popcount<mode>2_vxe (operands[0], operands[1]));\n+  else\n+    emit_insn (gen_popcount<mode>2_vx (operands[0], operands[1]));\n+  DONE;\n+})\n+\n+; vpopctb, vpopcth, vpopctf, vpopctg\n+(define_insn \"popcount<mode>2_vxe\"\n+  [(set (match_operand:VI_HW                0 \"register_operand\" \"=v\")\n+\t(unspec:VI_HW [(match_operand:VI_HW 1 \"register_operand\"  \"v\")]\n+\t\t      UNSPEC_POPCNT))]\n+  \"TARGET_VXE\"\n+  \"vpopct<bhfgq>\\t%v0,%v1\"\n+  [(set_attr \"op_type\" \"VRR\")])\n+\n+(define_insn \"popcountv16qi2_vx\"\n   [(set (match_operand:V16QI                0 \"register_operand\" \"=v\")\n \t(unspec:V16QI [(match_operand:V16QI 1 \"register_operand\"  \"v\")]\n \t\t      UNSPEC_POPCNT))]\n-  \"TARGET_VX\"\n+  \"TARGET_VX && !TARGET_VXE\"\n   \"vpopct\\t%v0,%v1,0\"\n   [(set_attr \"op_type\" \"VRR\")])\n \n@@ -729,7 +751,7 @@\n ; of the result, add it to the result and extend it to halfword\n ; element size (unpack).\n \n-(define_expand \"popcountv8hi2\"\n+(define_expand \"popcountv8hi2_vx\"\n   [(set (match_dup 2)\n \t(unspec:V16QI [(subreg:V16QI (match_operand:V8HI 1 \"register_operand\" \"v\") 0)]\n \t\t      UNSPEC_POPCNT))\n@@ -761,28 +783,28 @@\n \t(and:V8HI (subreg:V8HI (match_dup 2) 0)\n \t\t  (subreg:V8HI (match_dup 3) 0)))\n ]\n-  \"TARGET_VX\"\n+  \"TARGET_VX && !TARGET_VXE\"\n {\n   operands[2] = gen_reg_rtx (V16QImode);\n   operands[3] = gen_reg_rtx (V16QImode);\n   operands[4] = gen_reg_rtx (V16QImode);\n   operands[5] = CONST0_RTX (V16QImode);\n })\n \n-(define_expand \"popcountv4si2\"\n+(define_expand \"popcountv4si2_vx\"\n   [(set (match_dup 2)\n \t(unspec:V16QI [(subreg:V16QI (match_operand:V4SI 1 \"register_operand\" \"v\") 0)]\n \t\t      UNSPEC_POPCNT))\n    (set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n \t(unspec:V4SI [(match_dup 2) (match_dup 3)]\n \t\t     UNSPEC_VEC_VSUM))]\n-  \"TARGET_VX\"\n+  \"TARGET_VX && !TARGET_VXE\"\n {\n   operands[2] = gen_reg_rtx (V16QImode);\n   operands[3] = force_reg (V16QImode, CONST0_RTX (V16QImode));\n })\n \n-(define_expand \"popcountv2di2\"\n+(define_expand \"popcountv2di2_vx\"\n   [(set (match_dup 2)\n \t(unspec:V16QI [(subreg:V16QI (match_operand:V2DI 1 \"register_operand\" \"v\") 0)]\n \t\t      UNSPEC_POPCNT))\n@@ -792,7 +814,7 @@\n    (set (match_operand:V2DI 0 \"register_operand\" \"=v\")\n \t(unspec:V2DI [(match_dup 3) (match_dup 5)]\n \t\t     UNSPEC_VEC_VSUMG))]\n-  \"TARGET_VX\"\n+  \"TARGET_VX && !TARGET_VXE\"\n {\n   operands[2] = gen_reg_rtx (V16QImode);\n   operands[3] = gen_reg_rtx (V4SImode);"}, {"sha": "6edd4c150e8879ef231bd11e069cab6234c0b8d6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c7774d15e15fab2314593a74a85e742cd147647/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c7774d15e15fab2314593a74a85e742cd147647/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6c7774d15e15fab2314593a74a85e742cd147647", "patch": "@@ -1,3 +1,7 @@\n+2017-03-24  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n+\n+\t* gcc.target/s390/vxe/popcount-1.c: New test.\n+\n 2017-03-24  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* gcc.target/s390/vxe/bitops-1.c: New test."}, {"sha": "9ea835a1cf0703ff29281f49419b39cc72f2430e", "filename": "gcc/testsuite/gcc.target/s390/vxe/popcount-1.c", "status": "added", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c7774d15e15fab2314593a74a85e742cd147647/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvxe%2Fpopcount-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c7774d15e15fab2314593a74a85e742cd147647/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvxe%2Fpopcount-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvxe%2Fpopcount-1.c?ref=6c7774d15e15fab2314593a74a85e742cd147647", "patch": "@@ -0,0 +1,88 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O3 -mzarch -march=arch12 --save-temps\" } */\n+/* { dg-require-effective-target s390_vxe } */\n+\n+/* Vectorization currently only works for v4si.  v8hi at least uses 2x\n+   vpopctf but no vpopcth.  */\n+\n+typedef unsigned char     uv16qi __attribute__((vector_size(16)));\n+typedef unsigned short     uv8hi __attribute__((vector_size(16)));\n+typedef unsigned int       uv4si __attribute__((vector_size(16)));\n+typedef unsigned long long uv2di __attribute__((vector_size(16)));\n+\n+uv16qi __attribute__((noinline))\n+vpopctb (uv16qi a)\n+{\n+  uv16qi r;\n+  int i;\n+\n+  for (i = 0; i < 16; i++)\n+    r[i] = __builtin_popcount (a[i]);\n+\n+  return r;\n+}\n+/* { dg-final { scan-assembler \"vpopctb\\t%v24,%v24\" { xfail *-*-* } } } */\n+\n+uv8hi __attribute__((noinline))\n+vpopcth (uv8hi a)\n+{\n+  uv8hi r;\n+  int i;\n+\n+  for (i = 0; i < 8; i++)\n+    r[i] = __builtin_popcount (a[i]);\n+\n+  return r;\n+}\n+/* { dg-final { scan-assembler \"vpopcth\\t%v24,%v24\" { xfail *-*-* } } } */\n+\n+uv4si __attribute__((noinline))\n+vpopctf (uv4si a)\n+{\n+  uv4si r;\n+  int i;\n+\n+  for (i = 0; i < 4; i++)\n+    r[i] = __builtin_popcount (a[i]);\n+\n+  return r;\n+}\n+/* { dg-final { scan-assembler \"vpopctf\\t%v24,%v24\" } } */\n+\n+uv2di __attribute__((noinline))\n+vpopctg (uv2di a)\n+{\n+  uv2di r;\n+  int i;\n+\n+  for (i = 0; i < 2; i++)\n+    r[i] = __builtin_popcount (a[i]);\n+\n+  return r;\n+}\n+/* { dg-final { scan-assembler \"vpopctg\\t%v24,%v24\" { xfail *-*-* } } } */\n+\n+int\n+main ()\n+{\n+  uv16qi a = (uv16qi){ 42, 1, ~0, 2, 42, 1, ~0, 2, 42, 1, ~0, 2, 42, 1, ~0, 2 };\n+  if (__builtin_s390_vec_any_ne (vpopctb (a),\n+\t\t\t\t (uv16qi){ 3, 1, 8, 1, 3, 1, 8, 1,\n+\t\t\t\t\t   3, 1, 8, 1, 3, 1, 8, 1 }))\n+    __builtin_abort ();\n+\n+  if (__builtin_s390_vec_any_ne (vpopcth ((uv8hi){ 42, 1, ~0, 2, 42, 1, ~0, 2 }),\n+\t\t\t\t (uv8hi){ 3, 1, 16, 1, 3, 1, 16, 1 }))\n+    __builtin_abort ();\n+\n+  if (__builtin_s390_vec_any_ne (vpopctf ((uv4si){ 42, 1, ~0, 2 }),\n+\t\t\t\t (uv4si){ 3, 1, 32, 1 }))\n+    __builtin_abort ();\n+\n+  if (__builtin_s390_vec_any_ne (vpopctg ((uv2di){ 42, 1 }),\n+\t\t\t\t\t  (uv2di){ 3, 1 }))\n+      __builtin_abort ();\n+\n+\n+  return 0;\n+}"}]}