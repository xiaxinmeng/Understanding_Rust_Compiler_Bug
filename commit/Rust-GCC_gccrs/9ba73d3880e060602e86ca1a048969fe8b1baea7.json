{"sha": "9ba73d3880e060602e86ca1a048969fe8b1baea7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWJhNzNkMzg4MGUwNjA2MDJlODZjYTFhMDQ4OTY5ZmU4YjFiYWVhNw==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1996-01-16T22:40:15Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1996-01-16T22:40:15Z"}, "message": "expr.c (expand_expr, [...]): Make sure cleanups live on the function_obstack as they are used by the...\n\n\t* expr.c (expand_expr, case COND_EXPR): Make sure cleanups live on\n\tthe function_obstack as they are used by the exception handling code.\n\t(defer_cleanups_to): Ditto.\n\t(TRUTH_ANDIF_EXPR): Ditto.\n\t(TRUTH_ORIF_EXPR): Ditto.\nFixes eh43.C\n\nFrom-SVN: r11033", "tree": {"sha": "8cec261e23f0f8482bcebc73bfb5c852924f36e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8cec261e23f0f8482bcebc73bfb5c852924f36e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ba73d3880e060602e86ca1a048969fe8b1baea7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ba73d3880e060602e86ca1a048969fe8b1baea7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ba73d3880e060602e86ca1a048969fe8b1baea7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ba73d3880e060602e86ca1a048969fe8b1baea7/comments", "author": null, "committer": null, "parents": [{"sha": "f14c3e3d872e4a527640c3255e16187b48d3e32b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f14c3e3d872e4a527640c3255e16187b48d3e32b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f14c3e3d872e4a527640c3255e16187b48d3e32b"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "941ee6cc2c4677d284532041348d4c3b505bcbf5", "filename": "gcc/expr.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ba73d3880e060602e86ca1a048969fe8b1baea7/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ba73d3880e060602e86ca1a048969fe8b1baea7/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=9ba73d3880e060602e86ca1a048969fe8b1baea7", "patch": "@@ -6406,6 +6406,10 @@ expand_expr (exp, target, tmode, modifier)\n \t    /* ??? deprecated, use sequences instead.  */\n \t    reorder_insns (NEXT_INSN (last), get_last_insn (), dest_right_flag);\n \n+\t    /* All cleanups must be on the function_obstack.  */\n+\t    push_obstacks_nochange ();\n+\t    resume_temporary_allocation ();\n+\n \t    /* convert flag, which is an rtx, into a tree. */\n \t    cond = make_node (RTL_EXPR);\n \t    TREE_TYPE (cond) = integer_type_node;\n@@ -6422,6 +6426,8 @@ expand_expr (exp, target, tmode, modifier)\n \t\t\t\t  left_cleanups, right_cleanups);\n \t    new_cleanups = fold (new_cleanups);\n \n+\t    pop_obstacks ();\n+\n \t    /* Now add in the conditionalized cleanups. */\n \t    cleanups_this_call\n \t      = tree_cons (NULL_TREE, new_cleanups, cleanups_this_call);\n@@ -9156,6 +9162,10 @@ defer_cleanups_to (old_cleanups)\n       /* reverse them so that we can build them in the right order.  */\n       cleanups = nreverse (cleanups);\n \n+      /* All cleanups must be on the function_obstack.  */\n+      push_obstacks_nochange ();\n+      resume_temporary_allocation ();\n+\n       while (cleanups)\n \t{\n \t  if (new_cleanups)\n@@ -9166,6 +9176,8 @@ defer_cleanups_to (old_cleanups)\n \n \t  cleanups = TREE_CHAIN (cleanups);\n \t}\n+\n+      pop_obstacks ();\n     }\n \n   return new_cleanups;\n@@ -9361,6 +9373,10 @@ do_jump (exp, if_false_label, if_true_label)\n \t    emit_move_insn (flag, const1_rtx);\n \t    emit_insns (seq2);\n \n+\t    /* All cleanups must be on the function_obstack.  */\n+\t    push_obstacks_nochange ();\n+\t    resume_temporary_allocation ();\n+\n \t    /* convert flag, which is an rtx, into a tree. */\n \t    cond = make_node (RTL_EXPR);\n \t    TREE_TYPE (cond) = integer_type_node;\n@@ -9373,6 +9389,8 @@ do_jump (exp, if_false_label, if_true_label)\n \t\t\t\t  cleanups, integer_zero_node);\n \t    new_cleanups = fold (new_cleanups);\n \n+\t    pop_obstacks ();\n+\n \t    /* Now add in the conditionalized cleanups. */\n \t    cleanups_this_call\n \t      = tree_cons (NULL_TREE, new_cleanups, cleanups_this_call);\n@@ -9419,6 +9437,10 @@ do_jump (exp, if_false_label, if_true_label)\n \t    emit_move_insn (flag, const1_rtx);\n \t    emit_insns (seq2);\n \n+\t    /* All cleanups must be on the function_obstack.  */\n+\t    push_obstacks_nochange ();\n+\t    resume_temporary_allocation ();\n+\n \t    /* convert flag, which is an rtx, into a tree. */\n \t    cond = make_node (RTL_EXPR);\n \t    TREE_TYPE (cond) = integer_type_node;\n@@ -9431,6 +9453,8 @@ do_jump (exp, if_false_label, if_true_label)\n \t\t\t\t  cleanups, integer_zero_node);\n \t    new_cleanups = fold (new_cleanups);\n \n+\t    pop_obstacks ();\n+\n \t    /* Now add in the conditionalized cleanups. */\n \t    cleanups_this_call\n \t      = tree_cons (NULL_TREE, new_cleanups, cleanups_this_call);"}]}