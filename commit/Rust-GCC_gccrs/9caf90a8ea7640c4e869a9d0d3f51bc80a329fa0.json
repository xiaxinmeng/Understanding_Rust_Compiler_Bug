{"sha": "9caf90a8ea7640c4e869a9d0d3f51bc80a329fa0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWNhZjkwYThlYTc2NDBjNGU4NjlhOWQwZDNmNTFiYzgwYTMyOWZhMA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-05-17T19:10:19Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-05-17T19:10:19Z"}, "message": "tree-into-ssa.c (update_ssa): Clean up by shortening the live range of DFS.\n\n\t* tree-into-ssa.c (update_ssa): Clean up by shortening the\n\tlive range of DFS.\n\nFrom-SVN: r99847", "tree": {"sha": "544422dc0a2a80acc7cc68573bdbe1f17698abc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/544422dc0a2a80acc7cc68573bdbe1f17698abc8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9caf90a8ea7640c4e869a9d0d3f51bc80a329fa0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9caf90a8ea7640c4e869a9d0d3f51bc80a329fa0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9caf90a8ea7640c4e869a9d0d3f51bc80a329fa0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9caf90a8ea7640c4e869a9d0d3f51bc80a329fa0/comments", "author": null, "committer": null, "parents": [{"sha": "221ca26767d6974bde165585f15595c12b63a56f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/221ca26767d6974bde165585f15595c12b63a56f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/221ca26767d6974bde165585f15595c12b63a56f"}], "stats": {"total": 37, "additions": 21, "deletions": 16}, "files": [{"sha": "e475fd9a331468a0ebca268b97ca3c69a3eb42bf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9caf90a8ea7640c4e869a9d0d3f51bc80a329fa0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9caf90a8ea7640c4e869a9d0d3f51bc80a329fa0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9caf90a8ea7640c4e869a9d0d3f51bc80a329fa0", "patch": "@@ -1,3 +1,8 @@\n+2005-05-17  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* tree-into-ssa.c (update_ssa): Clean up by shortening the\n+\tlive range of DFS.\n+\n 2005-05-17  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* config/cris/cris.md (ncond, ocode, rcond): Remove separate"}, {"sha": "4a95072414d6b625644b892a4f2ce647aeab7429", "filename": "gcc/tree-into-ssa.c", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9caf90a8ea7640c4e869a9d0d3f51bc80a329fa0/gcc%2Ftree-into-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9caf90a8ea7640c4e869a9d0d3f51bc80a329fa0/gcc%2Ftree-into-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-into-ssa.c?ref=9caf90a8ea7640c4e869a9d0d3f51bc80a329fa0", "patch": "@@ -2611,7 +2611,7 @@ switch_virtuals_to_full_rewrite (void)\n void\n update_ssa (unsigned update_flags)\n {\n-  bitmap *dfs, blocks;\n+  bitmap blocks;\n   basic_block bb, start_bb;\n   bitmap_iterator bi;\n   unsigned i;\n@@ -2646,13 +2646,8 @@ update_ssa (unsigned update_flags)\n \n   if (insert_phi_p)\n     {\n-      /* If the caller requested PHI nodes to be added, compute\n-\t dominance frontiers and initialize live-in information data\n-\t structures (DEF_BLOCKS).  */\n-      dfs = (bitmap *) xmalloc (last_basic_block * sizeof (bitmap *));\n-      FOR_EACH_BB (bb)\n-\tdfs[bb->index] = BITMAP_ALLOC (NULL);\n-      compute_dominance_frontiers (dfs);\n+      /* If the caller requested PHI nodes to be added, initialize\n+\t live-in information data structures (DEF_BLOCKS).  */\n \n       /* For each SSA name N, the DEF_BLOCKS table describes where the\n \t name is defined, which blocks have PHI nodes for N, and which\n@@ -2663,7 +2658,6 @@ update_ssa (unsigned update_flags)\n     }\n   else\n     {\n-      dfs = NULL;\n       def_blocks = NULL;\n     }\n \n@@ -2738,6 +2732,15 @@ update_ssa (unsigned update_flags)\n      and for symbols in SYMS_TO_RENAME.  */\n   if (insert_phi_p)\n     {\n+      bitmap *dfs;\n+\n+      /* If the caller requested PHI nodes to be added, compute\n+\t dominance frontiers.  */\n+      dfs = xmalloc (last_basic_block * sizeof (bitmap *));\n+      FOR_EACH_BB (bb)\n+\tdfs[bb->index] = BITMAP_ALLOC (NULL);\n+      compute_dominance_frontiers (dfs);\n+\n       if (sbitmap_first_set_bit (old_ssa_names) >= 0)\n \t{\n \t  /* insert_update_phi_nodes_for will call add_new_name_mapping\n@@ -2757,6 +2760,10 @@ update_ssa (unsigned update_flags)\n \tinsert_updated_phi_nodes_for (referenced_var (i), dfs, blocks,\n \t                              update_flags);\n \n+      FOR_EACH_BB (bb)\n+\tBITMAP_FREE (dfs[bb->index]);\n+      free (dfs);\n+\n       /* Insertion of PHI nodes may have added blocks to the region.\n \t We need to re-compute START_BB to include the newly added\n \t blocks.  */\n@@ -2813,13 +2820,6 @@ update_ssa (unsigned update_flags)\n \n   /* Free allocated memory.  */\n done:\n-  if (insert_phi_p)\n-    {\n-      FOR_EACH_BB (bb)\n-\tBITMAP_FREE (dfs[bb->index]);\n-      free (dfs);\n-    }\n-\n   BITMAP_FREE (blocks);\n   delete_update_ssa ();\n "}]}