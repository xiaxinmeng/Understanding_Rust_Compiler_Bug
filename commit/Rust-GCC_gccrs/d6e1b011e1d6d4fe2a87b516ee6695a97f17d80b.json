{"sha": "d6e1b011e1d6d4fe2a87b516ee6695a97f17d80b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDZlMWIwMTFlMWQ2ZDRmZTJhODdiNTE2ZWU2Njk1YTk3ZjE3ZDgwYg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-10-11T03:03:17Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-10-11T03:03:17Z"}, "message": "(struct function): New field `machine'.\n\nFrom-SVN: r5722", "tree": {"sha": "d6543f7baf05ca82dd0b7156e62e2d65724bcfb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6543f7baf05ca82dd0b7156e62e2d65724bcfb3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6e1b011e1d6d4fe2a87b516ee6695a97f17d80b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6e1b011e1d6d4fe2a87b516ee6695a97f17d80b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6e1b011e1d6d4fe2a87b516ee6695a97f17d80b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6e1b011e1d6d4fe2a87b516ee6695a97f17d80b/comments", "author": null, "committer": null, "parents": [{"sha": "467664666aa2cb822298f9be1252d5f6263d9ea3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/467664666aa2cb822298f9be1252d5f6263d9ea3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/467664666aa2cb822298f9be1252d5f6263d9ea3"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "153fece8ed40e3aa827e1fe39f1603ae9c9dc5e7", "filename": "gcc/function.h", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6e1b011e1d6d4fe2a87b516ee6695a97f17d80b/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6e1b011e1d6d4fe2a87b516ee6695a97f17d80b/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=d6e1b011e1d6d4fe2a87b516ee6695a97f17d80b", "patch": "@@ -160,6 +160,8 @@ struct function\n \n   /* For md files.  */\n   int uses_pic_offset_table;\n+  /* tm.h can use this to store whatever it likes.  */\n+  struct machine_function *machine;\n \n   /* For reorg.  */\n   rtx epilogue_delay_list;\n@@ -193,7 +195,13 @@ extern struct function *outer_function_chain;\n /* Put all this function's BLOCK nodes into a vector and return it.\n    Also store in each NOTE for the beginning or end of a block\n    the index of that block in the vector.  */\n-tree *identify_blocks PROTO((tree, rtx));\n+extern tree *identify_blocks PROTO((tree, rtx));\n+\n+/* These variables hold pointers to functions to\n+   save and restore machine-specific data,\n+   in push_function_context and pop_function_context.  */\n+extern void (*save_machine_status) ();\n+extern void (*restore_machine_status) ();\n \n #ifdef rtx\n #undef rtx"}]}