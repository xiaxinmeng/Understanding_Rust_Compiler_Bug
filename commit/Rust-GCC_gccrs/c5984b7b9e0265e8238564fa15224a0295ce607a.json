{"sha": "c5984b7b9e0265e8238564fa15224a0295ce607a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzU5ODRiN2I5ZTAyNjVlODIzODU2NGZhMTUyMjRhMDI5NWNlNjA3YQ==", "commit": {"author": {"name": "Bruce Korb", "email": "autogen@linuxbox.com", "date": "1999-11-29T14:35:50Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "1999-11-29T14:35:50Z"}, "message": "don't skip GLIBC files any more, more C++ header testing, corrected spelling of mach\n\nFrom-SVN: r30704", "tree": {"sha": "089bf7e443ea788dd810833602b874d8279266fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/089bf7e443ea788dd810833602b874d8279266fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5984b7b9e0265e8238564fa15224a0295ce607a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5984b7b9e0265e8238564fa15224a0295ce607a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5984b7b9e0265e8238564fa15224a0295ce607a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5984b7b9e0265e8238564fa15224a0295ce607a/comments", "author": null, "committer": null, "parents": [{"sha": "97c1c80b37a9f61753836c4dd059e9bf4a06f099", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97c1c80b37a9f61753836c4dd059e9bf4a06f099", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97c1c80b37a9f61753836c4dd059e9bf4a06f099"}], "stats": {"total": 107, "additions": 43, "deletions": 64}, "files": [{"sha": "d07e23c30a53fd639e93f92f73809e3c60aed9ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5984b7b9e0265e8238564fa15224a0295ce607a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5984b7b9e0265e8238564fa15224a0295ce607a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c5984b7b9e0265e8238564fa15224a0295ce607a", "patch": "@@ -1,3 +1,10 @@\n+1999-11-29  Bruce Korb  <autogen@linuxbox.com>\n+\n+\t* fixinc/fixincl.c(process): don't skip GLIBC files any more.\n+\t* fixinc/hackshell.tpl: ditto\n+\t* fixinc/fixtests.c(double_slash_test): more C++ header testing\n+\t* fixinc/inclhack.def(AAB_fd_zero_glibc*): corrected spelling of mach\n+\n 1999-11-29  Bernd Schmidt  <bernds@cygnus.co.uk>\n \n \t* reload.c (push_reload): When looking for a register to put into"}, {"sha": "bf7d839a06cc86804638deca9c7abda0bb1509a9", "filename": "gcc/fixinc/fixincl.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5984b7b9e0265e8238564fa15224a0295ce607a/gcc%2Ffixinc%2Ffixincl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5984b7b9e0265e8238564fa15224a0295ce607a/gcc%2Ffixinc%2Ffixincl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.c?ref=c5984b7b9e0265e8238564fa15224a0295ce607a", "patch": "@@ -38,9 +38,6 @@ Boston, MA 02111-1307, USA.  */\n     Any file that contains this string is presumed to have\n     been carefully constructed and will not be fixed  */\n \n-static const char gnu_lib_mark[] =\n-    \"This file is part of the GNU C Library\";\n-\n /*  The contents of this string are not very important.  It is mostly\n     just used as part of the \"I am alive and working\" test.  */\n \n@@ -1341,11 +1338,6 @@ process ()\n #endif\n   if (VLEVEL( VERB_PROGRESS ))\n     fprintf (stderr, \"%6d %-50s   \\r\", data_map_size, pz_curr_file );\n-  if (strstr (pz_curr_data, gnu_lib_mark) != (char *) NULL)\n-    {\n-      UNLOAD_DATA();\n-      return;\n-    }\n \n   process_chain_head = NOPROCESS;\n "}, {"sha": "a3e2d81284ad43be8c1743697b7af75dd807f0c1", "filename": "gcc/fixinc/fixincl.x", "status": "modified", "additions": 19, "deletions": 37, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5984b7b9e0265e8238564fa15224a0295ce607a/gcc%2Ffixinc%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5984b7b9e0265e8238564fa15224a0295ce607a/gcc%2Ffixinc%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.x?ref=c5984b7b9e0265e8238564fa15224a0295ce607a", "patch": "@@ -326,18 +326,12 @@ tSCC zAab_Fd_Zero_Glibc_1_0List[] =\n /*\n  *  Machine/OS name selection pattern\n  */\n-#define apzAab_Fd_Zero_Glibc_1_0Machs (const char**)NULL\n-\n-/*\n- *  content selection pattern - do fix if pattern found\n- */\n-tSCC zAab_Fd_Zero_Glibc_1_0Select0[] =\n-       \"i[34567]86-*-linux-gnu*\";\n-\n-#define    AAB_FD_ZERO_GLIBC_1_0_TEST_CT  1\n-#define    AAB_FD_ZERO_GLIBC_1_0_RE_CT    1\n-tTestDesc aAab_Fd_Zero_Glibc_1_0Tests[] = {\n-  { TT_EGREP,    zAab_Fd_Zero_Glibc_1_0Select0, (regex_t*)NULL }, };\n+tSCC* apzAab_Fd_Zero_Glibc_1_0Machs[] = {\n+        \"i[34567]86-*-linux-gnu*\",\n+        (const char*)NULL };\n+#define AAB_FD_ZERO_GLIBC_1_0_TEST_CT  0\n+#define AAB_FD_ZERO_GLIBC_1_0_RE_CT    0\n+#define aAab_Fd_Zero_Glibc_1_0Tests   (tTestDesc*)NULL\n \n /*\n  *  Fix Command Arguments for Aab_Fd_Zero_Glibc_1_0\n@@ -372,18 +366,12 @@ tSCC zAab_Fd_Zero_Glibc_1_XList[] =\n /*\n  *  Machine/OS name selection pattern\n  */\n-#define apzAab_Fd_Zero_Glibc_1_XMachs (const char**)NULL\n-\n-/*\n- *  content selection pattern - do fix if pattern found\n- */\n-tSCC zAab_Fd_Zero_Glibc_1_XSelect0[] =\n-       \"i[34567]86-*-linux-gnu*\";\n-\n-#define    AAB_FD_ZERO_GLIBC_1_X_TEST_CT  1\n-#define    AAB_FD_ZERO_GLIBC_1_X_RE_CT    1\n-tTestDesc aAab_Fd_Zero_Glibc_1_XTests[] = {\n-  { TT_EGREP,    zAab_Fd_Zero_Glibc_1_XSelect0, (regex_t*)NULL }, };\n+tSCC* apzAab_Fd_Zero_Glibc_1_XMachs[] = {\n+        \"i[34567]86-*-linux-gnu*\",\n+        (const char*)NULL };\n+#define AAB_FD_ZERO_GLIBC_1_X_TEST_CT  0\n+#define AAB_FD_ZERO_GLIBC_1_X_RE_CT    0\n+#define aAab_Fd_Zero_Glibc_1_XTests   (tTestDesc*)NULL\n \n /*\n  *  Fix Command Arguments for Aab_Fd_Zero_Glibc_1_X\n@@ -418,18 +406,12 @@ tSCC zAab_Fd_Zero_Glibc_2_0List[] =\n /*\n  *  Machine/OS name selection pattern\n  */\n-#define apzAab_Fd_Zero_Glibc_2_0Machs (const char**)NULL\n-\n-/*\n- *  content selection pattern - do fix if pattern found\n- */\n-tSCC zAab_Fd_Zero_Glibc_2_0Select0[] =\n-       \"i[34567]86-*-linux-gnu*\";\n-\n-#define    AAB_FD_ZERO_GLIBC_2_0_TEST_CT  1\n-#define    AAB_FD_ZERO_GLIBC_2_0_RE_CT    1\n-tTestDesc aAab_Fd_Zero_Glibc_2_0Tests[] = {\n-  { TT_EGREP,    zAab_Fd_Zero_Glibc_2_0Select0, (regex_t*)NULL }, };\n+tSCC* apzAab_Fd_Zero_Glibc_2_0Machs[] = {\n+        \"i[34567]86-*-linux-gnu*\",\n+        (const char*)NULL };\n+#define AAB_FD_ZERO_GLIBC_2_0_TEST_CT  0\n+#define AAB_FD_ZERO_GLIBC_2_0_RE_CT    0\n+#define aAab_Fd_Zero_Glibc_2_0Tests   (tTestDesc*)NULL\n \n /*\n  *  Fix Command Arguments for Aab_Fd_Zero_Glibc_2_0\n@@ -4394,7 +4376,7 @@ extern char *\\tsprintf();\\\\\\n\\\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          79\n+#define REGEX_COUNT          76\n #define MACH_LIST_SIZE_LIMIT 279\n #define FIX_COUNT            112\n "}, {"sha": "4ee9e86ee366b02e9bac735933e45feccea80c4d", "filename": "gcc/fixinc/fixtests.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5984b7b9e0265e8238564fa15224a0295ce607a/gcc%2Ffixinc%2Ffixtests.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5984b7b9e0265e8238564fa15224a0295ce607a/gcc%2Ffixinc%2Ffixtests.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixtests.c?ref=c5984b7b9e0265e8238564fa15224a0295ce607a", "patch": "@@ -114,7 +114,9 @@ TEST_FOR_FIX_PROC_HEAD( double_slash_test )\n     return SKIP_FIX;\n   if (strstr( fname, \"xx/\" ) != NULL)\n     return SKIP_FIX;\n-  if (strstr( fname, \"++/\" ) != NULL)\n+  if (strstr( fname, \"++\" ) != NULL)\n+    return SKIP_FIX;\n+  if (strstr( text, \"extern \\\"C++\\\"\" ) != NULL)\n     return SKIP_FIX;\n \n   /*  Now look for the comment markers in the text */"}, {"sha": "83fb27ce4b1fffd2656a060aabc96b9167435202", "filename": "gcc/fixinc/hackshell.tpl", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5984b7b9e0265e8238564fa15224a0295ce607a/gcc%2Ffixinc%2Fhackshell.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5984b7b9e0265e8238564fa15224a0295ce607a/gcc%2Ffixinc%2Fhackshell.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Fhackshell.tpl?ref=c5984b7b9e0265e8238564fa15224a0295ce607a", "patch": "@@ -9,9 +9,7 @@\n   for file in $files; do\n \n     # Skip unreadable files, symlinks to directories and glibc files\n-    if test ! -r \"${file}\" || test -d \"${file}/.\" \\\n-       || fgrep 'This file is part of the GNU C Library' \"${file}\" \\\n-\t    > /dev/null 2>&1; then\n+    if test ! -r \"${file}\" || test -d \"${file}/.\" ; then\n       continue\n     fi\n "}, {"sha": "d1633cfbe5ff2df45a6624fe278bc200dcfd7e04", "filename": "gcc/fixinc/inclhack.def", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5984b7b9e0265e8238564fa15224a0295ce607a/gcc%2Ffixinc%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5984b7b9e0265e8238564fa15224a0295ce607a/gcc%2Ffixinc%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.def?ref=c5984b7b9e0265e8238564fa15224a0295ce607a", "patch": "@@ -160,7 +160,7 @@ typedef char * va_list;\n fix = {\n     hackname = AAB_fd_zero_glibc_1_0;\n     files    = asm/posix_types.h;\n-    select   = 'i[34567]86-*-linux-gnu*';\n+    mach     = 'i[34567]86-*-linux-gnu*';\n \n     /*\n      * Define _POSIX_TYPES_H_WRAPPER at the end of the wrapper, not\n@@ -199,7 +199,7 @@ fix = {\n fix = {\n     hackname = AAB_fd_zero_glibc_1_x;\n     files    = gnu/types.h;\n-    select   = 'i[34567]86-*-linux-gnu*';\n+    mach     = 'i[34567]86-*-linux-gnu*';\n \n     /*\n      * Define _TYPES_H_WRAPPER at the end of the wrapper, not\n@@ -238,7 +238,7 @@ fix = {\n fix = {\n     hackname = AAB_fd_zero_glibc_2_0;\n     files    = selectbits.h;\n-    select   = 'i[34567]86-*-linux-gnu*';\n+    mach     = 'i[34567]86-*-linux-gnu*';\n \n     /*\n      * Define _SELECTBITS_H_WRAPPER at the end of the wrapper, not"}, {"sha": "2210b4a7b2915873a16ad58146bddc2bcad73f7c", "filename": "gcc/fixinc/inclhack.sh", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5984b7b9e0265e8238564fa15224a0295ce607a/gcc%2Ffixinc%2Finclhack.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5984b7b9e0265e8238564fa15224a0295ce607a/gcc%2Ffixinc%2Finclhack.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.sh?ref=c5984b7b9e0265e8238564fa15224a0295ce607a", "patch": "@@ -354,9 +354,7 @@ while [ $# != 0 ]; do\n   for file in $files; do\n \n     # Skip unreadable files, symlinks to directories and glibc files\n-    if test ! -r \"${file}\" || test -d \"${file}/.\" \\\n-       || fgrep 'This file is part of the GNU C Library' \"${file}\" \\\n-\t    > /dev/null 2>&1; then\n+    if test ! -r \"${file}\" || test -d \"${file}/.\" ; then\n       continue\n     fi\n \n@@ -524,8 +522,7 @@ _EOF_\n     # Fix   8:  Aab_Fd_Zero_Glibc_1_0\n     #\n     case \"${file}\" in ./asm/posix_types.h )\n-    if ( test -n \"`egrep 'i[34567]86-*-linux-gnu*' ${file}`\"\n-       ) > /dev/null 2>&1 ; then\n+    case \"$target_canonical\" in i[34567]86-*-linux-gnu* )\n     echo \"aab_fd_zero_glibc_1_0 replacing file ${file}\" >&2\n     cat > ${DESTFILE} << '_EOF_'\n /* This file fixes __FD_ZERO bug for glibc-1.x. */\n@@ -544,7 +541,8 @@ _EOF_\n _EOF_\n     continue\n \n-    fi # end of select 'if'\n+    ;; # case end for machine type test\n+    esac\n     ;; # case end for file name test\n     esac\n \n@@ -553,8 +551,7 @@ _EOF_\n     # Fix   9:  Aab_Fd_Zero_Glibc_1_X\n     #\n     case \"${file}\" in ./gnu/types.h )\n-    if ( test -n \"`egrep 'i[34567]86-*-linux-gnu*' ${file}`\"\n-       ) > /dev/null 2>&1 ; then\n+    case \"$target_canonical\" in i[34567]86-*-linux-gnu* )\n     echo \"aab_fd_zero_glibc_1_x replacing file ${file}\" >&2\n     cat > ${DESTFILE} << '_EOF_'\n /* This file fixes __FD_ZERO bug for glibc-1.x. */\n@@ -573,7 +570,8 @@ _EOF_\n _EOF_\n     continue\n \n-    fi # end of select 'if'\n+    ;; # case end for machine type test\n+    esac\n     ;; # case end for file name test\n     esac\n \n@@ -582,8 +580,7 @@ _EOF_\n     # Fix  10:  Aab_Fd_Zero_Glibc_2_0\n     #\n     case \"${file}\" in ./selectbits.h )\n-    if ( test -n \"`egrep 'i[34567]86-*-linux-gnu*' ${file}`\"\n-       ) > /dev/null 2>&1 ; then\n+    case \"$target_canonical\" in i[34567]86-*-linux-gnu* )\n     echo \"aab_fd_zero_glibc_2_0 replacing file ${file}\" >&2\n     cat > ${DESTFILE} << '_EOF_'\n /* This file fixes __FD_ZERO bug for glibc-2.0.x. */\n@@ -602,7 +599,8 @@ _EOF_\n _EOF_\n     continue\n \n-    fi # end of select 'if'\n+    ;; # case end for machine type test\n+    esac\n     ;; # case end for file name test\n     esac\n "}]}