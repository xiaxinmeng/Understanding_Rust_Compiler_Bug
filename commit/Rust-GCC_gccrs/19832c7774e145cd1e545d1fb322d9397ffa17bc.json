{"sha": "19832c7774e145cd1e545d1fb322d9397ffa17bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk4MzJjNzc3NGUxNDVjZDFlNTQ1ZDFmYjMyMmQ5Mzk3ZmZhMTdiYw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-09-15T17:21:35Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-09-15T17:21:35Z"}, "message": "calls.c (precompute_arguments): Fix typo in comment.\n\n\t* calls.c (precompute_arguments): Fix typo in comment.\n\t* expr.c (preexpand_calls): Don't preexpand the cleanup in a\n\tTARGET_EXPR.\n\nFrom-SVN: r29438", "tree": {"sha": "028193b2d6284162a3a403d4a102ccff8fa34296", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/028193b2d6284162a3a403d4a102ccff8fa34296"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19832c7774e145cd1e545d1fb322d9397ffa17bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19832c7774e145cd1e545d1fb322d9397ffa17bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19832c7774e145cd1e545d1fb322d9397ffa17bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19832c7774e145cd1e545d1fb322d9397ffa17bc/comments", "author": null, "committer": null, "parents": [{"sha": "640e1822bce00ad625e6edb6cd9ff410ee50f425", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/640e1822bce00ad625e6edb6cd9ff410ee50f425", "html_url": "https://github.com/Rust-GCC/gccrs/commit/640e1822bce00ad625e6edb6cd9ff410ee50f425"}], "stats": {"total": 75, "additions": 70, "deletions": 5}, "files": [{"sha": "da8c5cb196bf285e244f17a13aedc8a7d7e57813", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19832c7774e145cd1e545d1fb322d9397ffa17bc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19832c7774e145cd1e545d1fb322d9397ffa17bc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=19832c7774e145cd1e545d1fb322d9397ffa17bc", "patch": "@@ -1,3 +1,9 @@\n+Wed Sep 15 10:25:12 1999  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* calls.c (precompute_arguments): Fix typo in comment.\n+\t* expr.c (preexpand_calls): Don't preexpand the cleanup in a\n+\tTARGET_EXPR.\n+\n Wed Sep 15 09:59:59 1999  Mark Mitchell  <mark@codesourcery.com>\n \n \t* dsp16xx.c (override_options): Fix typos in GC root registration."}, {"sha": "6a36ef01c6e110a6bbfb75cb4f4f6046e612de5d", "filename": "gcc/calls.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19832c7774e145cd1e545d1fb322d9397ffa17bc/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19832c7774e145cd1e545d1fb322d9397ffa17bc/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=19832c7774e145cd1e545d1fb322d9397ffa17bc", "patch": "@@ -1199,7 +1199,7 @@ compute_argument_block_size (reg_parm_stack_space, args_size)\n   return unadjusted_args_size;\n }\n \n-/* Precompute parameters has needed for a function call.\n+/* Precompute parameters as needed for a function call.\n \n    IS_CONST indicates the target function is a pure function.\n "}, {"sha": "c51a97a93f42628fa1475e08f52db26c0252fcf0", "filename": "gcc/expr.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19832c7774e145cd1e545d1fb322d9397ffa17bc/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19832c7774e145cd1e545d1fb322d9397ffa17bc/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=19832c7774e145cd1e545d1fb322d9397ffa17bc", "patch": "@@ -8542,10 +8542,17 @@ preexpand_calls (exp)\n   for (i = 0; i < nops; i++)\n     if (TREE_OPERAND (exp, i) != 0)\n       {\n-\ttype = TREE_CODE_CLASS (TREE_CODE (TREE_OPERAND (exp, i)));\n-\tif (type == 'e' || type == '<' || type == '1' || type == '2'\n-\t    || type == 'r')\n-\t  preexpand_calls (TREE_OPERAND (exp, i));\n+\tif (TREE_CODE (exp) == TARGET_EXPR && i == 2)\n+\t  /* We don't need to preexpand the cleanup for a TARGET_EXPR.\n+\t     It doesn't happen before the call is made.  */\n+\t  ;\n+\telse\n+\t  {\n+\t    type = TREE_CODE_CLASS (TREE_CODE (TREE_OPERAND (exp, i)));\n+\t    if (type == 'e' || type == '<' || type == '1' || type == '2'\n+\t\t|| type == 'r')\n+\t      preexpand_calls (TREE_OPERAND (exp, i));\n+\t  }\n       }\n }\n \f"}, {"sha": "3168f3f499db369d1c9069e66437d9f22bea449a", "filename": "gcc/testsuite/g++.old-deja/g++.other/crash10.C", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19832c7774e145cd1e545d1fb322d9397ffa17bc/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19832c7774e145cd1e545d1fb322d9397ffa17bc/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash10.C?ref=19832c7774e145cd1e545d1fb322d9397ffa17bc", "patch": "@@ -0,0 +1,52 @@\n+// Build don't link:\n+// Origin: Loring Holden <lsh@cs.brown.edu>\n+\n+template <class T>\n+class REFptr {\n+   public:\n+      REFptr();\n+      REFptr(T *pObj);\n+      virtual ~REFptr();\n+      operator T* () const;\n+};\n+\n+class GEL;\n+class GELsubc {\n+   public :\n+      virtual GEL *GELcast() const;\n+};\n+class GELptr : public REFptr<GEL>{\n+   public :                                        \n+      GELptr(const GELptr  &p);\n+      GELptr(const GELsubc &p);\n+};\n+class GEL { };\n+\n+class GEOM;\n+class GEOMptr : public REFptr<GEOM>, public GELsubc {\n+   public:\n+      GEOMptr() { }\n+      GEOMptr(GEOM  *g); \n+};\n+class GEOM : public GEL {\n+   public: \n+      GEOM(const GEOMptr &o);\n+      GEOM();\n+};\n+\n+class TEXT2D;\n+class TEXT2Dptr : public REFptr<TEXT2D> {\n+   public:\n+      TEXT2Dptr();\n+      TEXT2Dptr(TEXT2D *g); \n+};\n+class TEXT2D : public GEOM { };\n+\n+void testit(const GELptr g);\n+\n+void\n+FPS()\n+{\n+  TEXT2Dptr fps_text;\n+  testit(GEOMptr(&*fps_text));\n+}"}]}