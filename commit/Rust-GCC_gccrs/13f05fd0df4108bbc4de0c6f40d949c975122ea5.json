{"sha": "13f05fd0df4108bbc4de0c6f40d949c975122ea5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTNmMDVmZDBkZjQxMDhiYmM0ZGUwYzZmNDBkOTQ5Yzk3NTEyMmVhNQ==", "commit": {"author": {"name": "Bryce McKinlay", "email": "mckinlay@redhat.com", "date": "2004-05-27T19:47:36Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2004-05-27T19:47:36Z"}, "message": "configure.ac: Remove --enable-tree-browser option.\n\n\t* configure.ac: Remove --enable-tree-browser option.\n\tDefine TREEBROWSER when ac_tree_checking is defined.\n\t* configure: Rebuilt.\n\nFrom-SVN: r82338", "tree": {"sha": "78f1ccfb5ab93f69078355af53ee095ae832bea8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78f1ccfb5ab93f69078355af53ee095ae832bea8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13f05fd0df4108bbc4de0c6f40d949c975122ea5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13f05fd0df4108bbc4de0c6f40d949c975122ea5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13f05fd0df4108bbc4de0c6f40d949c975122ea5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13f05fd0df4108bbc4de0c6f40d949c975122ea5/comments", "author": null, "committer": null, "parents": [{"sha": "7c50e202bc44878533a9eec75fed6c1744e0a281", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c50e202bc44878533a9eec75fed6c1744e0a281", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c50e202bc44878533a9eec75fed6c1744e0a281"}], "stats": {"total": 41, "additions": 16, "deletions": 25}, "files": [{"sha": "500ce95aff86ff8b6480004b3c254c6ca6ed7686", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13f05fd0df4108bbc4de0c6f40d949c975122ea5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13f05fd0df4108bbc4de0c6f40d949c975122ea5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=13f05fd0df4108bbc4de0c6f40d949c975122ea5", "patch": "@@ -1,3 +1,9 @@\n+2004-05-27  Bryce McKinlay  <mckinlay@redhat.com>\n+\n+\t* configure.ac: Remove --enable-tree-browser option.\n+\tDefine TREEBROWSER when ac_tree_checking is defined.\n+\t* configure: Rebuilt.\n+\n 2004-05-27  Olivier Hainque  <hainque@act-europe.fr>\n \n \t* expr.c (store_constructor): Restore sanity check on"}, {"sha": "99b9901994d76ba274c3647d8b400763f39a24c3", "filename": "gcc/configure", "status": "modified", "additions": 5, "deletions": 16, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13f05fd0df4108bbc4de0c6f40d949c975122ea5/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13f05fd0df4108bbc4de0c6f40d949c975122ea5/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=13f05fd0df4108bbc4de0c6f40d949c975122ea5", "patch": "@@ -309,7 +309,7 @@ ac_includes_default=\"\\\n # include <unistd.h>\n #endif\"\n \n-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os build_subdir host_subdir target_subdir GENINSRC CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT NO_MINUS_C_MINUS_O OUTPUT_OPTION CPP strict1_warn warn_cflags WERROR nocommon_flag EGREP valgrind_path valgrind_path_defines valgrind_command coverage_flags TREEBROWSER enable_multilib enable_shared TARGET_SYSTEM_ROOT TARGET_SYSTEM_ROOT_DEFINE CROSS_SYSTEM_HEADER_DIR onestep SET_MAKE AWK LN LN_S RANLIB ac_ct_RANLIB INSTALL INSTALL_PROGRAM INSTALL_DATA make_compare_target have_mktemp_command MAKEINFO BUILD_INFO GENERATED_MANPAGES FLEX BISON stage1_cflags COLLECT2_LIBS GNAT_LIBEXC LDEXP_LIB TARGET_GETGROUPS_T LIBICONV LIBICONV_DEP manext objext gthread_flags extra_modes_file FORBUILD PACKAGE VERSION USE_NLS LIBINTL LIBINTL_DEP INCINTL XGETTEXT GMSGFMT POSUB CATALOGS CROSS ALL SYSTEM_HEADER_DIR inhibit_libc BUILD_PREFIX BUILD_PREFIX_1 CC_FOR_BUILD BUILD_CFLAGS STMP_FIXINC STMP_FIXPROTO collect2 libgcc_visibility GGC zlibdir zlibinc MAINT ANDER BANSHEEINC BANSHEELIB gcc_tooldir dollar slibdir objdir subdirs srcdir all_boot_languages all_compilers all_gtfiles all_gtfiles_files_langs all_gtfiles_files_files all_lang_makefrags all_lang_makefiles all_languages all_stagestuff build_exeext build_install_headers_dir build_xm_file_list build_xm_include_list build_xm_defines check_languages cc_set_by_configure quoted_cc_set_by_configure cpp_install_dir xmake_file tmake_file extra_gcc_objs extra_headers_list extra_objs extra_parts extra_passes extra_programs float_h_file gcc_config_arguments gcc_gxx_include_dir libstdcxx_incdir gcc_version gcc_version_full gcc_version_trigger host_exeext host_xm_file_list host_xm_include_list host_xm_defines out_host_hook_obj install lang_opt_files lang_specs_files lang_tree_files local_prefix md_file objc_boehm_gc out_file out_object_file stage_prefix_set_by_configure quoted_stage_prefix_set_by_configure symbolic_link thread_file tm_file_list tm_include_list tm_defines tm_p_file_list tm_p_include_list xm_file_list xm_include_list xm_defines target_noncanonical c_target_objs cxx_target_objs target_cpu_default GMPLIBS GMPINC LIBOBJS LTLIBOBJS'\n+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os build_subdir host_subdir target_subdir GENINSRC CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT NO_MINUS_C_MINUS_O OUTPUT_OPTION CPP strict1_warn warn_cflags WERROR nocommon_flag TREEBROWSER EGREP valgrind_path valgrind_path_defines valgrind_command coverage_flags enable_multilib enable_shared TARGET_SYSTEM_ROOT TARGET_SYSTEM_ROOT_DEFINE CROSS_SYSTEM_HEADER_DIR onestep SET_MAKE AWK LN LN_S RANLIB ac_ct_RANLIB INSTALL INSTALL_PROGRAM INSTALL_DATA make_compare_target have_mktemp_command MAKEINFO BUILD_INFO GENERATED_MANPAGES FLEX BISON stage1_cflags COLLECT2_LIBS GNAT_LIBEXC LDEXP_LIB TARGET_GETGROUPS_T LIBICONV LIBICONV_DEP manext objext gthread_flags extra_modes_file FORBUILD PACKAGE VERSION USE_NLS LIBINTL LIBINTL_DEP INCINTL XGETTEXT GMSGFMT POSUB CATALOGS CROSS ALL SYSTEM_HEADER_DIR inhibit_libc BUILD_PREFIX BUILD_PREFIX_1 CC_FOR_BUILD BUILD_CFLAGS STMP_FIXINC STMP_FIXPROTO collect2 libgcc_visibility GGC zlibdir zlibinc MAINT ANDER BANSHEEINC BANSHEELIB gcc_tooldir dollar slibdir objdir subdirs srcdir all_boot_languages all_compilers all_gtfiles all_gtfiles_files_langs all_gtfiles_files_files all_lang_makefrags all_lang_makefiles all_languages all_stagestuff build_exeext build_install_headers_dir build_xm_file_list build_xm_include_list build_xm_defines check_languages cc_set_by_configure quoted_cc_set_by_configure cpp_install_dir xmake_file tmake_file extra_gcc_objs extra_headers_list extra_objs extra_parts extra_passes extra_programs float_h_file gcc_config_arguments gcc_gxx_include_dir libstdcxx_incdir gcc_version gcc_version_full gcc_version_trigger host_exeext host_xm_file_list host_xm_include_list host_xm_defines out_host_hook_obj install lang_opt_files lang_specs_files lang_tree_files local_prefix md_file objc_boehm_gc out_file out_object_file stage_prefix_set_by_configure quoted_stage_prefix_set_by_configure symbolic_link thread_file tm_file_list tm_include_list tm_defines tm_p_file_list tm_p_include_list xm_file_list xm_include_list xm_defines target_noncanonical c_target_objs cxx_target_objs target_cpu_default GMPLIBS GMPINC LIBOBJS LTLIBOBJS'\n ac_subst_files='language_hooks'\n \n # Initialize some variables set by options.\n@@ -876,7 +876,6 @@ Optional Features:\n \t\t\t  optimization. Values are opt, noopt,\n \t\t\t  default is noopt\n   --enable-gather-detailed-mem-stats         enable detailed memory allocation stats gathering\n-  --enable-tree-browser   enable the tree browsing routines for debugging\n   --enable-multilib       enable library support for multiple ABIs\n   --enable-__cxa_atexit   enable __cxa_atexit for C++\n   --enable-threads        enable thread usage for target GCC\n@@ -3959,7 +3958,9 @@ cat >>confdefs.h <<\\_ACEOF\n #define ENABLE_TREE_CHECKING 1\n _ACEOF\n \n+  TREEBROWSER=tree-browser.o\n fi\n+\n if test x$ac_rtl_checking != x ; then\n \n cat >>confdefs.h <<\\_ACEOF\n@@ -4623,18 +4624,6 @@ _ACEOF\n \n fi\n \n-# Check whether --enable-tree-browser or --disable-tree-browser was given.\n-if test \"${enable_tree_browser+set}\" = set; then\n-  enableval=\"$enable_tree_browser\"\n-\n-else\n-  enable_tree_browser=no\n-fi;\n-if test x$enable_tree_browser = xyes ; then\n-  TREEBROWSER=tree-browser.o\n-fi\n-\n-\n # -------------------------------\n # Miscenalleous configure options\n # -------------------------------\n@@ -5245,7 +5234,7 @@ if test \"${gcc_cv_prog_makeinfo_modern+set}\" = set; then\n else\n     ac_prog_version=`$MAKEINFO --version 2>&1 |\n                    sed -n 's/^.*GNU texinfo.* \\([0-9][0-9.]*\\).*$/\\1/p'`\n-  echo \"configure:5248: version of makeinfo is $ac_prog_version\" >&5\n+  echo \"configure:5237: version of makeinfo is $ac_prog_version\" >&5\n   case $ac_prog_version in\n     '')     gcc_cv_prog_makeinfo_modern=no;;\n     4.[2-9]*)\n@@ -13095,12 +13084,12 @@ s,@strict1_warn@,$strict1_warn,;t t\n s,@warn_cflags@,$warn_cflags,;t t\n s,@WERROR@,$WERROR,;t t\n s,@nocommon_flag@,$nocommon_flag,;t t\n+s,@TREEBROWSER@,$TREEBROWSER,;t t\n s,@EGREP@,$EGREP,;t t\n s,@valgrind_path@,$valgrind_path,;t t\n s,@valgrind_path_defines@,$valgrind_path_defines,;t t\n s,@valgrind_command@,$valgrind_command,;t t\n s,@coverage_flags@,$coverage_flags,;t t\n-s,@TREEBROWSER@,$TREEBROWSER,;t t\n s,@enable_multilib@,$enable_multilib,;t t\n s,@enable_shared@,$enable_shared,;t t\n s,@TARGET_SYSTEM_ROOT@,$TARGET_SYSTEM_ROOT,;t t"}, {"sha": "71f6f0d49a09dcc466c21d1b33ffd5f7167654cf", "filename": "gcc/configure.ac", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13f05fd0df4108bbc4de0c6f40d949c975122ea5/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13f05fd0df4108bbc4de0c6f40d949c975122ea5/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=13f05fd0df4108bbc4de0c6f40d949c975122ea5", "patch": "@@ -425,8 +425,12 @@ if test x$ac_tree_checking != x ; then\n   AC_DEFINE(ENABLE_TREE_CHECKING, 1,\n [Define if you want all operations on trees (the basic data\n    structure of the front ends) to be checked for dynamic type safety\n-   at runtime.  This is moderately expensive.])\n+   at runtime.  This is moderately expensive.  The tree browser debugging\n+   routines will also be enabled by this option.\n+   ])\n+  TREEBROWSER=tree-browser.o\n fi\n+AC_SUBST(TREEBROWSER)\n if test x$ac_rtl_checking != x ; then\n   AC_DEFINE(ENABLE_RTL_CHECKING, 1,\n [Define if you want all operations on RTL (the basic data structure\n@@ -543,14 +547,6 @@ if test x$enable_gather_detailed_mem_stats = xyes ; then\n         [Define to enable detailed memory allocation stats gathering.])\n fi\n \n-AC_ARG_ENABLE(tree-browser,\n-[  --enable-tree-browser   enable the tree browsing routines for debugging], [],\n-[enable_tree_browser=no])\n-if test x$enable_tree_browser = xyes ; then\n-  TREEBROWSER=tree-browser.o\n-fi\n-AC_SUBST(TREEBROWSER)\n-\n # -------------------------------\n # Miscenalleous configure options\n # -------------------------------"}]}