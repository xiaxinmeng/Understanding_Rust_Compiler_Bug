{"sha": "5d2ac65e2bc080b106e425fc6cd41877430d7712", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQyYWM2NWUyYmMwODBiMTA2ZTQyNWZjNmNkNDE4Nzc0MzBkNzcxMg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-29T01:26:03Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-29T01:26:03Z"}, "message": "(expand_call): Always allocate TARGET in mode of result expression;\n\nVALREG might have been promoted.\nEnsure TARGET is a REG when checking for promotion and verify that we\nget back the mode we expect.\n\nFrom-SVN: r3907", "tree": {"sha": "174a88c648e61dae77756af0d9a7d1273aab3da2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/174a88c648e61dae77756af0d9a7d1273aab3da2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d2ac65e2bc080b106e425fc6cd41877430d7712", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d2ac65e2bc080b106e425fc6cd41877430d7712", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d2ac65e2bc080b106e425fc6cd41877430d7712", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d2ac65e2bc080b106e425fc6cd41877430d7712/comments", "author": null, "committer": null, "parents": [{"sha": "994571561f3bd92c6826964be7d0b2339e0db115", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/994571561f3bd92c6826964be7d0b2339e0db115", "html_url": "https://github.com/Rust-GCC/gccrs/commit/994571561f3bd92c6826964be7d0b2339e0db115"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "14b2000161b1fc4a466f6132f751ea116a9e7b3a", "filename": "gcc/calls.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d2ac65e2bc080b106e425fc6cd41877430d7712/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d2ac65e2bc080b106e425fc6cd41877430d7712/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=5d2ac65e2bc080b106e425fc6cd41877430d7712", "patch": "@@ -1834,10 +1834,12 @@ expand_call (exp, target, ignore)\n     target = copy_to_reg (valreg);\n \n #ifdef PROMOTE_FUNCTION_RETURN\n-  /* If we promoted this return value, make the proper SUBREG.  */\n-  if (GET_MODE (target) != TYPE_MODE (TREE_TYPE (exp)))\n+  /* If we promoted this return value, make the proper SUBREG.  TARGET\n+     might be const0_rtx here, so be careful.  */\n+  if (GET_CODE (target) == REG\n+      && GET_MODE (target) != TYPE_MODE (TREE_TYPE (exp)))\n     {\n-      enum machine_mode mode = GET_MODE (target);\n+      enum machine_mode mode = TYPE_MODE (TREE_TYPE (exp));\n       int unsignedp = TREE_UNSIGNED (TREE_TYPE (exp));\n \n       if (TREE_CODE (TREE_TYPE (exp)) == INTEGER_TYPE\n@@ -1851,6 +1853,10 @@ expand_call (exp, target, ignore)\n \t  PROMOTE_MODE (mode, unsignedp, TREE_TYPE (exp));\n \t}\n \n+      /* If we didn't promote as expected, something is wrong.  */\n+      if (mode != GET_MODE (target))\n+\tabort ();\n+\n       target = gen_rtx (SUBREG, TYPE_MODE (TREE_TYPE (exp)), target, 0);\n       SUBREG_PROMOTED_VAR_P (target) = 1;\n       SUBREG_PROMOTED_UNSIGNED_P (target) = unsignedp;"}]}