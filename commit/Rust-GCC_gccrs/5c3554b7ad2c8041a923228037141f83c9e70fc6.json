{"sha": "5c3554b7ad2c8041a923228037141f83c9e70fc6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWMzNTU0YjdhZDJjODA0MWE5MjMyMjgwMzcxNDFmODNjOWU3MGZjNg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-08-01T11:18:36Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-08-01T11:18:36Z"}, "message": "re PR middle-end/36988 (ICE in gimple_rhs_has_side_effects, at gimple.c:2369)\n\n2008-08-01  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/36988\n\t* tree-ssa-ccp.c (ccp_fold): Conversions of constants only\n\tdo not matter if that doesn't change volatile qualification.\n\n\t* gcc.c-torture/compile/pr36988.c: New testcase.\n\nFrom-SVN: r138512", "tree": {"sha": "86b09e89c117c517dac0ea8fa7d515551511a1fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86b09e89c117c517dac0ea8fa7d515551511a1fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c3554b7ad2c8041a923228037141f83c9e70fc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c3554b7ad2c8041a923228037141f83c9e70fc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c3554b7ad2c8041a923228037141f83c9e70fc6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c3554b7ad2c8041a923228037141f83c9e70fc6/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "585df50b0c63b895742726b556732faac623fa35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/585df50b0c63b895742726b556732faac623fa35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/585df50b0c63b895742726b556732faac623fa35"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "d22df09d33ed7885e8055d59bc2629c91f753768", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c3554b7ad2c8041a923228037141f83c9e70fc6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c3554b7ad2c8041a923228037141f83c9e70fc6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5c3554b7ad2c8041a923228037141f83c9e70fc6", "patch": "@@ -1,3 +1,9 @@\n+2008-08-01  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/36988\n+\t* tree-ssa-ccp.c (ccp_fold): Conversions of constants only\n+\tdo not matter if that doesn't change volatile qualification.\n+\n 2008-08-01  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* configure.ac: Do not generate libada-mk.  Do not subst"}, {"sha": "78287a71c3566e1489d425f7944d0b0179a74f8c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c3554b7ad2c8041a923228037141f83c9e70fc6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c3554b7ad2c8041a923228037141f83c9e70fc6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5c3554b7ad2c8041a923228037141f83c9e70fc6", "patch": "@@ -1,3 +1,8 @@\n+2008-08-01  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/36988\n+\t* gcc.c-torture/compile/pr36988.c: New testcase.\n+\n 2008-08-01  Olivier Hainque  <hainque@adacore.com>\n \n \t* gnat.dg/raise_from_pure.ad[bs],"}, {"sha": "44118d5dda3c8c95cbde0a8b33251d24bc56e39f", "filename": "gcc/testsuite/gcc.c-torture/compile/pr36988.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c3554b7ad2c8041a923228037141f83c9e70fc6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr36988.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c3554b7ad2c8041a923228037141f83c9e70fc6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr36988.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr36988.c?ref=5c3554b7ad2c8041a923228037141f83c9e70fc6", "patch": "@@ -0,0 +1,11 @@\n+typedef struct {\n+    unsigned char mbxCommand;\n+} MAILBOX_t;\n+void lpfc_sli_brdrestart(void)\n+{\n+  volatile unsigned int word0;\n+  MAILBOX_t *mb;\n+  mb = (MAILBOX_t *) &word0;\n+  mb->mbxCommand = 0x1A;\n+  __writel((*(unsigned int *) mb));\n+}"}, {"sha": "b867bba08d5e02033f4ff911b4866afec823f94e", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c3554b7ad2c8041a923228037141f83c9e70fc6/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c3554b7ad2c8041a923228037141f83c9e70fc6/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=5c3554b7ad2c8041a923228037141f83c9e70fc6", "patch": "@@ -989,7 +989,13 @@ ccp_fold (gimple stmt)\n \t\t allowed places.  */\n               if ((subcode == NOP_EXPR || subcode == CONVERT_EXPR)\n \t\t  && ((POINTER_TYPE_P (TREE_TYPE (lhs))\n-\t\t       && POINTER_TYPE_P (TREE_TYPE (op0)))\n+\t\t       && POINTER_TYPE_P (TREE_TYPE (op0))\n+\t\t       /* Do not allow differences in volatile qualification\n+\t\t\t  as this might get us confused as to whether a\n+\t\t\t  propagation destination statement is volatile\n+\t\t\t  or not.  See PR36988.  */\n+\t\t       && (TYPE_VOLATILE (TREE_TYPE (TREE_TYPE (lhs)))\n+\t\t\t   == TYPE_VOLATILE (TREE_TYPE (TREE_TYPE (op0)))))\n \t\t      || useless_type_conversion_p (TREE_TYPE (lhs),\n \t\t\t\t\t\t    TREE_TYPE (op0))))\n                 return op0;"}]}