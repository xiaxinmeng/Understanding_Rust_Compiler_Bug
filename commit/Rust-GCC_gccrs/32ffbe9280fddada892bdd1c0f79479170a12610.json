{"sha": "32ffbe9280fddada892bdd1c0f79479170a12610", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzJmZmJlOTI4MGZkZGFkYTg5MmJkZDFjMGY3OTQ3OTE3MGExMjYxMA==", "commit": {"author": {"name": "Stuart Ballard", "email": "stuart.ballard@corp.fast.net", "date": "2003-11-26T21:45:55Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-11-26T21:45:55Z"}, "message": "HashMap.java (putAll): Use Iterator hasNext() method.\n\n2003-11-26  Stuart Ballard <stuart.ballard@corp.fast.net>\n\n\t* java/util/HashMap.java (putAll): Use Iterator hasNext() method.\n\t(putAllInternal): Likewise.\n\t* java/util/Hashtable.java (putAll): Use Iterator hasNext() method.\n\t(putAllInternal): Likewise.\n\nFrom-SVN: r73964", "tree": {"sha": "b857ce5d013437441b7802f8fe68371d767cbd24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b857ce5d013437441b7802f8fe68371d767cbd24"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32ffbe9280fddada892bdd1c0f79479170a12610", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32ffbe9280fddada892bdd1c0f79479170a12610", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32ffbe9280fddada892bdd1c0f79479170a12610", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32ffbe9280fddada892bdd1c0f79479170a12610/comments", "author": null, "committer": null, "parents": [{"sha": "cb5599c77a0be19736dd8be35a1b136aa6ecee52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb5599c77a0be19736dd8be35a1b136aa6ecee52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb5599c77a0be19736dd8be35a1b136aa6ecee52"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "260c7ce12d65520e2eee55154aa62c95e3e3e23e", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32ffbe9280fddada892bdd1c0f79479170a12610/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32ffbe9280fddada892bdd1c0f79479170a12610/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=32ffbe9280fddada892bdd1c0f79479170a12610", "patch": "@@ -1,3 +1,10 @@\n+2003-11-26  Stuart Ballard <stuart.ballard@corp.fast.net>\n+\n+\t* java/util/HashMap.java (putAll): Use Iterator hasNext() method.\n+\t(putAllInternal): Likewise.\n+\t* java/util/Hashtable.java (putAll): Use Iterator hasNext() method.\n+\t(putAllInternal): Likewise.\n+\n 2003-11-26  Michael Koch  <konqueror@gmx.de>\n \n \t* java/net/URLStreamHandler.java"}, {"sha": "6317ba7cec1339db3a74c5f12d34416963867e37", "filename": "libjava/java/util/HashMap.java", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32ffbe9280fddada892bdd1c0f79479170a12610/libjava%2Fjava%2Futil%2FHashMap.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32ffbe9280fddada892bdd1c0f79479170a12610/libjava%2Fjava%2Futil%2FHashMap.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FHashMap.java?ref=32ffbe9280fddada892bdd1c0f79479170a12610", "patch": "@@ -381,8 +381,7 @@ public Object put(Object key, Object value)\n   public void putAll(Map m)\n   {\n     Iterator itr = m.entrySet().iterator();\n-    int msize = m.size();\n-    while (msize-- > 0)\n+    while (itr.hasNext())\n       {\n         Map.Entry e = (Map.Entry) itr.next();\n         // Optimize in case the Entry is one of our own.\n@@ -709,10 +708,10 @@ Iterator iterator(int type)\n   void putAllInternal(Map m)\n   {\n     Iterator itr = m.entrySet().iterator();\n-    int msize = m.size();\n-    size = msize;\n-    while (msize-- > 0)\n+    size = 0;\n+    while (itr.hasNext())\n       {\n+        size++;\n \tMap.Entry e = (Map.Entry) itr.next();\n \tObject key = e.getKey();\n \tint idx = hash(key);"}, {"sha": "b0de0a231b8cb03c87999f495d208bfd6a5ca548", "filename": "libjava/java/util/Hashtable.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32ffbe9280fddada892bdd1c0f79479170a12610/libjava%2Fjava%2Futil%2FHashtable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32ffbe9280fddada892bdd1c0f79479170a12610/libjava%2Fjava%2Futil%2FHashtable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FHashtable.java?ref=32ffbe9280fddada892bdd1c0f79479170a12610", "patch": "@@ -510,7 +510,7 @@ public synchronized void putAll(Map m)\n   {\n     Iterator itr = m.entrySet().iterator();\n \n-    for (int msize = m.size(); msize > 0; msize--)\n+    while (itr.hasNext())\n       {\n         Map.Entry e = (Map.Entry) itr.next();\n         // Optimize in case the Entry is one of our own.\n@@ -859,11 +859,11 @@ HashEntry getEntry(Object o)\n   void putAllInternal(Map m)\n   {\n     Iterator itr = m.entrySet().iterator();\n-    int msize = m.size();\n-    this.size = msize;\n+    size = 0;\n \n-    for (; msize > 0; msize--)\n+    while (itr.hasNext())\n       {\n+        size++;\n \tMap.Entry e = (Map.Entry) itr.next();\n \tObject key = e.getKey();\n \tint idx = hash(key);"}]}