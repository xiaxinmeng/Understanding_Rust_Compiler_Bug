{"sha": "c775c2094bfdd9b85ad67e451a3fe690780e84d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzc3NWMyMDk0YmZkZDliODVhZDY3ZTQ1MWEzZmU2OTA3ODBlODRkNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-12T10:32:58Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-12T10:32:58Z"}, "message": "[multiple changes]\n\n2010-10-12  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch9.adb (Has_Pragma_Priority): New name for Has_Priority_Pragma\n\t* gnat_rm.texi (pragma Suppress_All): Document new placement rules\n\t* par-prag.adb (P_Pragma, case Suppress_All): Set\n\tHas_Pragma_Suppress_All flag.\n\t* sem_prag.adb (Has_Pragma_Priority): New name for Has_Priority_Pragma\n\t(Analyze_Pragma, case Suppress_All): Remove placement check\n\t(Process_Compilation_Unit_Pragmas): Use Has_Pragma_Suppress_All flag\n\t* sem_prag.ads (Process_Compilation_Unit_Pragmas): Update documentation\n\t* sinfo.adb (Has_Pragma_Suppress_All): New flag\n\t(Has_Pragma_Priority): New name for Has_Priority_Pragma\n\t* sinfo.ads (Has_Pragma_Suppress_All): New flag\n\t(Has_Pragma_Priority): New name for Has_Priority_Pragma\n\n2010-10-12  Arnaud Charlet  <charlet@adacore.com>\n\n\t* lib-xref.ads: Mark j/J as reserved for C++ classes.\n\n2010-10-12  Jose Ruiz  <ruiz@adacore.com>\n\n\t* a-exetim-default.ads, a-exetim-posix.adb: New.\n\t* gcc-interface/Makefile.in (LIBGNAT_TARGET_PAIRS for linux): Use the\n\tPOSIX Realtime support to implement CPU clocks.\n\t(EXTRA_GNATRTL_TASKING_OBJS for linux): Add the a-exetim.o object\n\tto the tasking library.\n\t(THREADSLIB): Make the POSIX.1b Realtime Extensions library (librt)\n\tavailable for shared libraries.\n\t* gcc-interface/Make-lang.in: Update dependencies.\n\n2010-10-12  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch13.adb (Analyze_Aspect_Specifications): For Pre/Post, break\n\tapart expressions with AND THEN clauses into separate pragmas.\n\t* sinput.ads, sinput.adab (Get_Logical_Line_Number_Img): New function.\n\nFrom-SVN: r165356", "tree": {"sha": "8af4d89af00b768007bd849898eda91e84c78a80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8af4d89af00b768007bd849898eda91e84c78a80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c775c2094bfdd9b85ad67e451a3fe690780e84d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c775c2094bfdd9b85ad67e451a3fe690780e84d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c775c2094bfdd9b85ad67e451a3fe690780e84d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c775c2094bfdd9b85ad67e451a3fe690780e84d4/comments", "author": null, "committer": null, "parents": [{"sha": "811ef5ba910ae7449d73226143271a89d1da6936", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/811ef5ba910ae7449d73226143271a89d1da6936", "html_url": "https://github.com/Rust-GCC/gccrs/commit/811ef5ba910ae7449d73226143271a89d1da6936"}], "stats": {"total": 712, "additions": 550, "deletions": 162}, "files": [{"sha": "f267703f602f477e05393408c9e5c5d7a59f8461", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c775c2094bfdd9b85ad67e451a3fe690780e84d4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c775c2094bfdd9b85ad67e451a3fe690780e84d4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c775c2094bfdd9b85ad67e451a3fe690780e84d4", "patch": "@@ -1,3 +1,39 @@\n+2010-10-12  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch9.adb (Has_Pragma_Priority): New name for Has_Priority_Pragma\n+\t* gnat_rm.texi (pragma Suppress_All): Document new placement rules\n+\t* par-prag.adb (P_Pragma, case Suppress_All): Set\n+\tHas_Pragma_Suppress_All flag.\n+\t* sem_prag.adb (Has_Pragma_Priority): New name for Has_Priority_Pragma\n+\t(Analyze_Pragma, case Suppress_All): Remove placement check\n+\t(Process_Compilation_Unit_Pragmas): Use Has_Pragma_Suppress_All flag\n+\t* sem_prag.ads (Process_Compilation_Unit_Pragmas): Update documentation\n+\t* sinfo.adb (Has_Pragma_Suppress_All): New flag\n+\t(Has_Pragma_Priority): New name for Has_Priority_Pragma\n+\t* sinfo.ads (Has_Pragma_Suppress_All): New flag\n+\t(Has_Pragma_Priority): New name for Has_Priority_Pragma\n+\n+2010-10-12  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* lib-xref.ads: Mark j/J as reserved for C++ classes.\n+\n+2010-10-12  Jose Ruiz  <ruiz@adacore.com>\n+\n+\t* a-exetim-default.ads, a-exetim-posix.adb: New.\n+\t* gcc-interface/Makefile.in (LIBGNAT_TARGET_PAIRS for linux): Use the\n+\tPOSIX Realtime support to implement CPU clocks.\n+\t(EXTRA_GNATRTL_TASKING_OBJS for linux): Add the a-exetim.o object\n+\tto the tasking library.\n+\t(THREADSLIB): Make the POSIX.1b Realtime Extensions library (librt)\n+\tavailable for shared libraries.\n+\t* gcc-interface/Make-lang.in: Update dependencies.\n+\n+2010-10-12  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch13.adb (Analyze_Aspect_Specifications): For Pre/Post, break\n+\tapart expressions with AND THEN clauses into separate pragmas.\n+\t* sinput.ads, sinput.adab (Get_Logical_Line_Number_Img): New function.\n+\n 2010-10-12  Robert Dewar  <dewar@adacore.com>\n \n \t* par-ch13.adb (P_Aspect_Specifications): Fix handling of 'Class aspects"}, {"sha": "edc6f19a205170f57e1ee9f2e2acad8c54f70c84", "filename": "gcc/ada/a-exetim-default.ads", "status": "added", "additions": 98, "deletions": 0, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c775c2094bfdd9b85ad67e451a3fe690780e84d4/gcc%2Fada%2Fa-exetim-default.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c775c2094bfdd9b85ad67e451a3fe690780e84d4/gcc%2Fada%2Fa-exetim-default.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exetim-default.ads?ref=c775c2094bfdd9b85ad67e451a3fe690780e84d4", "patch": "@@ -0,0 +1,98 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--                   A D A . E X E C U T I O N _ T I M E                    --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--          Copyright (C) 2007-2010, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+with Ada.Task_Identification;\n+with Ada.Real_Time;\n+\n+package Ada.Execution_Time is\n+\n+   type CPU_Time is private;\n+\n+   CPU_Time_First : constant CPU_Time;\n+   CPU_Time_Last  : constant CPU_Time;\n+   CPU_Time_Unit  : constant := Ada.Real_Time.Time_Unit;\n+   CPU_Tick       : constant Ada.Real_Time.Time_Span;\n+\n+   function Clock\n+     (T : Ada.Task_Identification.Task_Id\n+          := Ada.Task_Identification.Current_Task)\n+      return CPU_Time;\n+\n+   function \"+\"\n+     (Left  : CPU_Time;\n+      Right : Ada.Real_Time.Time_Span) return CPU_Time;\n+\n+   function \"+\"\n+     (Left  : Ada.Real_Time.Time_Span;\n+      Right : CPU_Time) return CPU_Time;\n+\n+   function \"-\"\n+     (Left  : CPU_Time;\n+      Right : Ada.Real_Time.Time_Span) return CPU_Time;\n+\n+   function \"-\"\n+     (Left  : CPU_Time;\n+      Right : CPU_Time) return Ada.Real_Time.Time_Span;\n+\n+   function \"<\"  (Left, Right : CPU_Time) return Boolean;\n+   function \"<=\" (Left, Right : CPU_Time) return Boolean;\n+   function \">\"  (Left, Right : CPU_Time) return Boolean;\n+   function \">=\" (Left, Right : CPU_Time) return Boolean;\n+\n+   procedure Split\n+     (T  : CPU_Time;\n+      SC : out Ada.Real_Time.Seconds_Count;\n+      TS : out Ada.Real_Time.Time_Span);\n+\n+   function Time_Of\n+     (SC : Ada.Real_Time.Seconds_Count;\n+      TS : Ada.Real_Time.Time_Span := Ada.Real_Time.Time_Span_Zero)\n+      return CPU_Time;\n+\n+private\n+\n+   type CPU_Time is new Ada.Real_Time.Time;\n+\n+   CPU_Time_First : constant CPU_Time  := CPU_Time (Ada.Real_Time.Time_First);\n+   CPU_Time_Last  : constant CPU_Time  := CPU_Time (Ada.Real_Time.Time_Last);\n+\n+   CPU_Tick : constant Ada.Real_Time.Time_Span := Ada.Real_Time.Tick;\n+\n+   pragma Import (Intrinsic, \"<\");\n+   pragma Import (Intrinsic, \"<=\");\n+   pragma Import (Intrinsic, \">\");\n+   pragma Import (Intrinsic, \">=\");\n+\n+end Ada.Execution_Time;"}, {"sha": "fe00abe55956789fb330774d725ee15a814b0ac1", "filename": "gcc/ada/a-exetim-posix.adb", "status": "added", "additions": 157, "deletions": 0, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c775c2094bfdd9b85ad67e451a3fe690780e84d4/gcc%2Fada%2Fa-exetim-posix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c775c2094bfdd9b85ad67e451a3fe690780e84d4/gcc%2Fada%2Fa-exetim-posix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exetim-posix.adb?ref=c775c2094bfdd9b85ad67e451a3fe690780e84d4", "patch": "@@ -0,0 +1,157 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--                   A D A . E X E C U T I O N _ T I M E                    --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--         Copyright (C) 2007-2010, Free Software Foundation, Inc.          --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This is the POSIX (Realtime Extension) version of this package\n+\n+with Ada.Task_Identification;  use Ada.Task_Identification;\n+with Ada.Unchecked_Conversion;\n+\n+with System.OS_Interface; use System.OS_Interface;\n+\n+with Interfaces.C; use Interfaces.C;\n+\n+package body Ada.Execution_Time is\n+\n+   pragma Linker_Options (\"-lrt\");\n+   --  POSIX.1b Realtime Extensions library. Needed to have access to function\n+   --  clock_gettime.\n+\n+   ---------\n+   -- \"+\" --\n+   ---------\n+\n+   function \"+\"\n+     (Left  : CPU_Time;\n+      Right : Ada.Real_Time.Time_Span) return CPU_Time\n+   is\n+      use type Ada.Real_Time.Time;\n+   begin\n+      return CPU_Time (Ada.Real_Time.Time (Left) + Right);\n+   end \"+\";\n+\n+   function \"+\"\n+     (Left  : Ada.Real_Time.Time_Span;\n+      Right : CPU_Time) return CPU_Time\n+   is\n+      use type Ada.Real_Time.Time;\n+   begin\n+      return CPU_Time (Left + Ada.Real_Time.Time (Right));\n+   end \"+\";\n+\n+   ---------\n+   -- \"-\" --\n+   ---------\n+\n+   function \"-\"\n+     (Left  : CPU_Time;\n+      Right : Ada.Real_Time.Time_Span) return CPU_Time\n+   is\n+      use type Ada.Real_Time.Time;\n+   begin\n+      return CPU_Time (Ada.Real_Time.Time (Left) - Right);\n+   end \"-\";\n+\n+   function \"-\"\n+     (Left  : CPU_Time;\n+      Right : CPU_Time) return Ada.Real_Time.Time_Span\n+   is\n+      use type Ada.Real_Time.Time;\n+   begin\n+      return (Ada.Real_Time.Time (Left) - Ada.Real_Time.Time (Right));\n+   end \"-\";\n+\n+   -----------\n+   -- Clock --\n+   -----------\n+\n+   function Clock\n+     (T : Ada.Task_Identification.Task_Id :=\n+            Ada.Task_Identification.Current_Task)\n+      return CPU_Time\n+   is\n+      TS     : aliased timespec;\n+      Result : Interfaces.C.int;\n+\n+      function To_CPU_Time is\n+        new Ada.Unchecked_Conversion (Duration, CPU_Time);\n+      --  Time is equal to Duration (although it is a private type) and\n+      --  CPU_Time is equal to Time.\n+\n+      function clock_gettime\n+        (clock_id : Interfaces.C.int;\n+         tp       : access timespec)\n+         return int;\n+      pragma Import (C, clock_gettime, \"clock_gettime\");\n+      --  Function from the POSIX.1b Realtime Extensions library\n+\n+      CLOCK_THREAD_CPUTIME_ID : constant := 3;\n+      --  Identifier for the clock returning per-task CPU time\n+\n+   begin\n+      if T = Ada.Task_Identification.Null_Task_Id then\n+         raise Program_Error;\n+      end if;\n+\n+      Result := clock_gettime\n+        (clock_id => CLOCK_THREAD_CPUTIME_ID, tp => TS'Unchecked_Access);\n+      pragma Assert (Result = 0);\n+\n+      return To_CPU_Time (To_Duration (TS));\n+   end Clock;\n+\n+   -----------\n+   -- Split --\n+   -----------\n+\n+   procedure Split\n+     (T  : CPU_Time;\n+      SC : out Ada.Real_Time.Seconds_Count;\n+      TS : out Ada.Real_Time.Time_Span)\n+   is\n+      use type Ada.Real_Time.Time;\n+   begin\n+      Ada.Real_Time.Split (Ada.Real_Time.Time (T), SC, TS);\n+   end Split;\n+\n+   -------------\n+   -- Time_Of --\n+   -------------\n+\n+   function Time_Of\n+     (SC : Ada.Real_Time.Seconds_Count;\n+      TS : Ada.Real_Time.Time_Span := Ada.Real_Time.Time_Span_Zero)\n+      return CPU_Time\n+   is\n+   begin\n+      return CPU_Time (Ada.Real_Time.Time_Of (SC, TS));\n+   end Time_Of;\n+\n+end Ada.Execution_Time;"}, {"sha": "dd392ec624900e8c0ca0c6bd3f40958ebf45422d", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c775c2094bfdd9b85ad67e451a3fe690780e84d4/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c775c2094bfdd9b85ad67e451a3fe690780e84d4/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=c775c2094bfdd9b85ad67e451a3fe690780e84d4", "patch": "@@ -10428,7 +10428,7 @@ package body Exp_Ch9 is\n \n       --  Add the _Priority component if a Priority pragma is present\n \n-      if Present (Taskdef) and then Has_Priority_Pragma (Taskdef) then\n+      if Present (Taskdef) and then Has_Pragma_Priority (Taskdef) then\n          declare\n             Prag : constant Node_Id :=\n                      Find_Task_Or_Protected_Pragma (Taskdef, Name_Priority);\n@@ -12057,7 +12057,7 @@ package body Exp_Ch9 is\n       --  defined value, see D.3(10).\n \n       if Present (Pdef)\n-        and then Has_Priority_Pragma (Pdef)\n+        and then Has_Pragma_Priority (Pdef)\n       then\n          declare\n             Prio : constant Node_Id :=\n@@ -12357,7 +12357,7 @@ package body Exp_Ch9 is\n       --  Priority parameter. Set to Unspecified_Priority unless there is a\n       --  priority pragma, in which case we take the value from the pragma.\n \n-      if Present (Tdef) and then Has_Priority_Pragma (Tdef) then\n+      if Present (Tdef) and then Has_Pragma_Priority (Tdef) then\n          Append_To (Args,\n            Make_Selected_Component (Loc,\n              Prefix => Make_Identifier (Loc, Name_uInit),"}, {"sha": "6bbeb4a6f1d304afb26c81c87fbbc08d4d041a4e", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 41, "deletions": 40, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c775c2094bfdd9b85ad67e451a3fe690780e84d4/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c775c2094bfdd9b85ad67e451a3fe690780e84d4/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=c775c2094bfdd9b85ad67e451a3fe690780e84d4", "patch": "@@ -1618,19 +1618,19 @@ ada/errout.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/widechar.ads \n \n ada/erroutc.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n-   ada/a-uncdea.ads ada/alloc.ads ada/atree.ads ada/atree.adb \\\n-   ada/casing.ads ada/debug.ads ada/einfo.ads ada/err_vars.ads \\\n-   ada/erroutc.ads ada/erroutc.adb ada/hostparm.ads ada/interfac.ads \\\n-   ada/namet.ads ada/namet.adb ada/nlists.ads ada/opt.ads ada/output.ads \\\n-   ada/output.adb ada/rident.ads ada/sinfo.ads ada/sinput.ads \\\n-   ada/sinput.adb ada/snames.ads ada/system.ads ada/s-exctab.ads \\\n-   ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads \\\n-   ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads \\\n-   ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads \\\n-   ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads \\\n-   ada/table.adb ada/targparm.ads ada/tree_io.ads ada/types.ads \\\n-   ada/uintp.ads ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads \\\n-   ada/widechar.ads \n+   ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n+   ada/atree.adb ada/casing.ads ada/debug.ads ada/einfo.ads \\\n+   ada/err_vars.ads ada/erroutc.ads ada/erroutc.adb ada/hostparm.ads \\\n+   ada/interfac.ads ada/namet.ads ada/namet.adb ada/nlists.ads ada/opt.ads \\\n+   ada/output.ads ada/output.adb ada/rident.ads ada/sinfo.ads \\\n+   ada/sinput.ads ada/sinput.adb ada/snames.ads ada/system.ads \\\n+   ada/s-exctab.ads ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads \\\n+   ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads \\\n+   ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb \\\n+   ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads \\\n+   ada/table.ads ada/table.adb ada/targparm.ads ada/tree_io.ads \\\n+   ada/types.ads ada/uintp.ads ada/unchconv.ads ada/unchdeal.ads \\\n+   ada/urealp.ads ada/widechar.ads \n \n ada/eval_fat.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n@@ -2642,19 +2642,19 @@ ada/inline.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/uname.ads ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads \n \n ada/instpar.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n-   ada/a-uncdea.ads ada/alloc.ads ada/atree.ads ada/atree.adb \\\n-   ada/casing.ads ada/debug.ads ada/einfo.ads ada/gnatvsn.ads \\\n-   ada/hostparm.ads ada/instpar.ads ada/instpar.adb ada/interfac.ads \\\n-   ada/namet.ads ada/nlists.ads ada/opt.ads ada/output.ads \\\n-   ada/sdefault.ads ada/sinfo.ads ada/sinput.ads ada/sinput.adb \\\n-   ada/sinput-l.ads ada/snames.ads ada/system.ads ada/s-carun8.ads \\\n-   ada/s-crc32.ads ada/s-crc32.adb ada/s-exctab.ads ada/s-imenne.ads \\\n-   ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads ada/s-secsta.ads \\\n-   ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads \\\n-   ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads \\\n-   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/tree_io.ads \\\n-   ada/types.ads ada/uintp.ads ada/unchconv.ads ada/unchdeal.ads \\\n-   ada/urealp.ads ada/widechar.ads \n+   ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n+   ada/atree.adb ada/casing.ads ada/debug.ads ada/einfo.ads \\\n+   ada/gnatvsn.ads ada/hostparm.ads ada/instpar.ads ada/instpar.adb \\\n+   ada/interfac.ads ada/namet.ads ada/nlists.ads ada/opt.ads \\\n+   ada/output.ads ada/sdefault.ads ada/sinfo.ads ada/sinput.ads \\\n+   ada/sinput.adb ada/sinput-l.ads ada/snames.ads ada/system.ads \\\n+   ada/s-carun8.ads ada/s-crc32.ads ada/s-crc32.adb ada/s-exctab.ads \\\n+   ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads \\\n+   ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads \\\n+   ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads \\\n+   ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads ada/table.adb \\\n+   ada/tree_io.ads ada/types.ads ada/uintp.ads ada/unchconv.ads \\\n+   ada/unchdeal.ads ada/urealp.ads ada/widechar.ads \n \n ada/interfac.o : ada/interfac.ads ada/system.ads \n \n@@ -2978,8 +2978,8 @@ ada/prep.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/unchdeal.ads ada/urealp.ads \n \n ada/prepcomp.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n-   ada/a-uncdea.ads ada/alloc.ads ada/atree.ads ada/atree.adb \\\n-   ada/casing.ads ada/csets.ads ada/debug.ads ada/einfo.ads \\\n+   ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n+   ada/atree.adb ada/casing.ads ada/csets.ads ada/debug.ads ada/einfo.ads \\\n    ada/err_vars.ads ada/errout.ads ada/erroutc.ads ada/gnat.ads \\\n    ada/g-dyntab.ads ada/g-dyntab.adb ada/g-hesorg.ads ada/hostparm.ads \\\n    ada/interfac.ads ada/lib.ads ada/lib-writ.ads ada/namet.ads \\\n@@ -4377,8 +4377,8 @@ ada/tbuild.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/widechar.ads \n \n ada/tree_gen.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n-   ada/a-uncdea.ads ada/alloc.ads ada/atree.ads ada/casing.ads \\\n-   ada/debug.ads ada/einfo.ads ada/elists.ads ada/fname.ads \\\n+   ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n+   ada/casing.ads ada/debug.ads ada/einfo.ads ada/elists.ads ada/fname.ads \\\n    ada/hostparm.ads ada/lib.ads ada/namet.ads ada/nlists.ads ada/opt.ads \\\n    ada/osint.ads ada/osint-c.ads ada/output.ads ada/repinfo.ads \\\n    ada/sem_aux.ads ada/sinfo.ads ada/sinput.ads ada/snames.ads \\\n@@ -4391,16 +4391,17 @@ ada/tree_gen.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/urealp.ads \n \n ada/tree_in.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n-   ada/a-uncdea.ads ada/alloc.ads ada/atree.ads ada/casing.ads \\\n-   ada/csets.ads ada/debug.ads ada/einfo.ads ada/elists.ads ada/fname.ads \\\n-   ada/hostparm.ads ada/lib.ads ada/namet.ads ada/nlists.ads ada/opt.ads \\\n-   ada/output.ads ada/repinfo.ads ada/sem_aux.ads ada/sinfo.ads \\\n-   ada/sinput.ads ada/snames.ads ada/stand.ads ada/stringt.ads \\\n-   ada/system.ads ada/s-exctab.ads ada/s-memory.ads ada/s-os_lib.ads \\\n-   ada/s-parame.ads ada/s-stalib.ads ada/s-string.ads ada/s-traent.ads \\\n-   ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads ada/table.adb \\\n-   ada/tree_in.ads ada/tree_in.adb ada/tree_io.ads ada/types.ads \\\n-   ada/uintp.ads ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads \n+   ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n+   ada/casing.ads ada/csets.ads ada/debug.ads ada/einfo.ads ada/elists.ads \\\n+   ada/fname.ads ada/hostparm.ads ada/lib.ads ada/namet.ads ada/nlists.ads \\\n+   ada/opt.ads ada/output.ads ada/repinfo.ads ada/sem_aux.ads \\\n+   ada/sinfo.ads ada/sinput.ads ada/snames.ads ada/stand.ads \\\n+   ada/stringt.ads ada/system.ads ada/s-exctab.ads ada/s-memory.ads \\\n+   ada/s-os_lib.ads ada/s-parame.ads ada/s-stalib.ads ada/s-string.ads \\\n+   ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads \\\n+   ada/table.adb ada/tree_in.ads ada/tree_in.adb ada/tree_io.ads \\\n+   ada/types.ads ada/uintp.ads ada/unchconv.ads ada/unchdeal.ads \\\n+   ada/urealp.ads \n \n ada/tree_io.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/debug.ads ada/hostparm.ads ada/output.ads \\"}, {"sha": "b8240967dc0fe33a80abed37a36f4688c0634b8f", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c775c2094bfdd9b85ad67e451a3fe690780e84d4/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c775c2094bfdd9b85ad67e451a3fe690780e84d4/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=c775c2094bfdd9b85ad67e451a3fe690780e84d4", "patch": "@@ -1074,6 +1074,8 @@ ifeq ($(strip $(filter-out %86 linux%,$(arch) $(osys))),)\n     THREADSLIB = -lmarte\n   else\n     LIBGNAT_TARGET_PAIRS += \\\n+    a-exetim.adb<a-exetim-posix.adb \\\n+    a-exetim.ads<a-exetim-default.ads \\\n     s-linux.ads<s-linux.ads \\\n     s-osinte.adb<s-osinte-posix.adb\n \n@@ -1099,9 +1101,9 @@ ifeq ($(strip $(filter-out %86 linux%,$(arch) $(osys))),)\n       EH_MECHANISM=-gcc\n     endif\n \n-    THREADSLIB = -lpthread\n+    THREADSLIB = -lpthread -lrt\n     EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o\n-    EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n+    EXTRA_GNATRTL_TASKING_OBJS=s-linux.o a-exetim.o\n   endif\n \n   TOOLS_TARGET_PAIRS =  \\\n@@ -1785,6 +1787,8 @@ endif\n \n ifeq ($(strip $(filter-out powerpc% linux%,$(arch) $(osys))),)\n   LIBGNAT_TARGET_PAIRS_COMMON = \\\n+  a-exetim.adb<a-exetim-posix.adb \\\n+  a-exetim.ads<a-exetim-default.ads \\\n   a-intnam.ads<a-intnam-linux.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n   s-intman.adb<s-intman-posix.adb \\\n@@ -1836,9 +1840,9 @@ ifeq ($(strip $(filter-out powerpc% linux%,$(arch) $(osys))),)\n     mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb \\\n     indepsw.adb<indepsw-gnu.adb\n \n-  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n+  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o a-exetim.o\n   EH_MECHANISM=-gcc\n-  THREADSLIB = -lpthread\n+  THREADSLIB = -lpthread -lrt\n   GNATLIB_SHARED = gnatlib-shared-dual\n   GMEM_LIB = gmemlib\n   LIBRARY_VERSION := $(LIB_VERSION)\n@@ -1983,6 +1987,8 @@ endif\n \n ifeq ($(strip $(filter-out %ia64 linux%,$(arch) $(osys))),)\n   LIBGNAT_TARGET_PAIRS = \\\n+  a-exetim.adb<a-exetim-posix.adb \\\n+  a-exetim.ads<a-exetim-default.ads \\\n   a-intnam.ads<a-intnam-linux.ads \\\n   a-numaux.ads<a-numaux-libc-x86.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n@@ -2004,10 +2010,10 @@ ifeq ($(strip $(filter-out %ia64 linux%,$(arch) $(osys))),)\n     mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb \\\n     indepsw.adb<indepsw-gnu.adb\n \n-  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n+  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o a-exetim.o\n   EH_MECHANISM=-gcc\n   MISCLIB=\n-  THREADSLIB=-lpthread\n+  THREADSLIB=-lpthread -lrt\n   GNATLIB_SHARED=gnatlib-shared-dual\n   GMEM_LIB = gmemlib\n   LIBRARY_VERSION := $(LIB_VERSION)\n@@ -2072,6 +2078,8 @@ endif\n \n ifeq ($(strip $(filter-out %x86_64 linux%,$(arch) $(osys))),)\n   LIBGNAT_TARGET_PAIRS = \\\n+  a-exetim.adb<a-exetim-posix.adb \\\n+  a-exetim.ads<a-exetim-default.ads \\\n   a-intnam.ads<a-intnam-linux.ads \\\n   a-numaux.adb<a-numaux-x86.adb \\\n   a-numaux.ads<a-numaux-x86.ads \\\n@@ -2095,9 +2103,9 @@ ifeq ($(strip $(filter-out %x86_64 linux%,$(arch) $(osys))),)\n     indepsw.adb<indepsw-gnu.adb\n \n   EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o\n-  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n+  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o a-exetim.o\n   EH_MECHANISM=-gcc\n-  THREADSLIB=-lpthread\n+  THREADSLIB=-lpthread -lrt\n   GNATLIB_SHARED=gnatlib-shared-dual\n   GMEM_LIB = gmemlib\n   LIBRARY_VERSION := $(LIB_VERSION)"}, {"sha": "919de82d079d30113b5d47bfca42f87c26d8786f", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c775c2094bfdd9b85ad67e451a3fe690780e84d4/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c775c2094bfdd9b85ad67e451a3fe690780e84d4/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=c775c2094bfdd9b85ad67e451a3fe690780e84d4", "patch": "@@ -4815,11 +4815,13 @@ pragma Suppress_All;\n @end smallexample\n \n @noindent\n-This pragma can only appear immediately following a compilation\n-unit.  The effect is to apply @code{Suppress (All_Checks)} to the unit\n-which it follows.  This pragma is implemented for compatibility with DEC\n-Ada 83 usage.  The use of pragma @code{Suppress (All_Checks)} as a normal\n-configuration pragma is the preferred usage in GNAT@.\n+This pragma can appear anywhere within a unit.\n+The effect is to apply @code{Suppress (All_Checks)} to the unit\n+in which it appears.  This pragma is implemented for compatibility with DEC\n+Ada 83 usage where it appears at the end of a unit, and for compatibility\n+with Rational Ada, where it appears as a program unit pragma.\n+The use of the standard Ada pragma @code{Suppress (All_Checks)}\n+as a normal configuration pragma is the preferred usage in GNAT@.\n \n @node Pragma Suppress_Exception_Locations\n @unnumberedsec Pragma Suppress_Exception_Locations"}, {"sha": "9fb8b2df5653bd4e40f0693e867f89cbf802302c", "filename": "gcc/ada/lib-xref.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c775c2094bfdd9b85ad67e451a3fe690780e84d4/gcc%2Fada%2Flib-xref.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c775c2094bfdd9b85ad67e451a3fe690780e84d4/gcc%2Fada%2Flib-xref.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.ads?ref=c775c2094bfdd9b85ad67e451a3fe690780e84d4", "patch": "@@ -549,7 +549,7 @@ package Lib.Xref is\n    --    g     C/C++ macro                     C/C++ fun-like macro\n    --    h     Interface (Ada 2005)            Abstract type\n    --    i     signed integer object           signed integer type\n-   --    j     (unused)                        (unused)\n+   --    j     C++ class object                C++ class\n    --    k     generic package                 package\n    --    l     label on loop                   label on statement\n    --    m     modular integer object          modular integer type"}, {"sha": "109326cc1835df1119a4d99cea020d669f44eb01", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c775c2094bfdd9b85ad67e451a3fe690780e84d4/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c775c2094bfdd9b85ad67e451a3fe690780e84d4/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=c775c2094bfdd9b85ad67e451a3fe690780e84d4", "patch": "@@ -982,6 +982,33 @@ begin\n          end if;\n       end Style_Checks;\n \n+      -------------------------\n+      -- Suppress_All (GNAT) --\n+      -------------------------\n+\n+      --  pragma Suppress_All\n+\n+      --  This is a rather odd pragma, because other compilers allow it in\n+      --  strange places. DEC allows it at the end of units, and Rational\n+      --  allows it as a program unit pragma, when it would be more natural\n+      --  if it were a configuration pragma.\n+\n+      --  Since the reason we provide this pragma is for compatibility with\n+      --  these other compilers, we want to accomodate these strange placement\n+      --  rules, and the easiest thing is simply to allow it anywhere in a\n+      --  unit. If this pragma appears anywhere within a unit, then the effect\n+      --  is as though a pragma Suppress (All_Checks) had appeared as the first\n+      --  line of the current file, i.e. as the first configuration pragma in\n+      --  the current unit.\n+\n+      --  To get this effect, we set the flag Has_Pragma_Suppress_All in the\n+      --  compilation unit node for the current source file then in the last\n+      --  stage of parsing a file, if this flag is set, we materialize the\n+      --  Suppress (All_Checks) pragma, marked as not coming from Source.\n+\n+      when Pragma_Suppress_All =>\n+         Set_Has_Pragma_Suppress_All (Cunit (Current_Source_Unit));\n+\n       ---------------------\n       -- Warnings (GNAT) --\n       ---------------------\n@@ -1204,7 +1231,6 @@ begin\n            Pragma_Stream_Convert                |\n            Pragma_Subtitle                      |\n            Pragma_Suppress                      |\n-           Pragma_Suppress_All                  |\n            Pragma_Suppress_Debug_Info           |\n            Pragma_Suppress_Exception_Locations  |\n            Pragma_Suppress_Initialization       |"}, {"sha": "46603614cb314cc28282525971580d2c00028576", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 67, "deletions": 40, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c775c2094bfdd9b85ad67e451a3fe690780e84d4/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c775c2094bfdd9b85ad67e451a3fe690780e84d4/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=c775c2094bfdd9b85ad67e451a3fe690780e84d4", "patch": "@@ -50,6 +50,7 @@ with Sem_Res;  use Sem_Res;\n with Sem_Type; use Sem_Type;\n with Sem_Util; use Sem_Util;\n with Sem_Warn; use Sem_Warn;\n+with Sinput;   use Sinput;\n with Snames;   use Snames;\n with Stand;    use Stand;\n with Sinfo;    use Sinfo;\n@@ -81,10 +82,10 @@ package body Sem_Ch13 is\n    --  posted as required, and a value of No_Uint is returned.\n \n    function Is_Operational_Item (N : Node_Id) return Boolean;\n-   --  A specification for a stream attribute is allowed before the full\n-   --  type is declared, as explained in AI-00137 and the corrigendum.\n-   --  Attributes that do not specify a representation characteristic are\n-   --  operational attributes.\n+   --  A specification for a stream attribute is allowed before the full type\n+   --  is declared, as explained in AI-00137 and the corrigendum. Attributes\n+   --  that do not specify a representation characteristic are operational\n+   --  attributes.\n \n    procedure New_Stream_Subprogram\n      (N    : Node_Id;\n@@ -666,6 +667,7 @@ package body Sem_Ch13 is\n             Loc  : constant Source_Ptr := Sloc (Aspect);\n             Id   : constant Node_Id    := Identifier (Aspect);\n             Expr : constant Node_Id    := Expression (Aspect);\n+            Eloc :          Source_Ptr := Sloc (Expr);\n             Nam  : constant Name_Id    := Chars (Id);\n             A_Id : constant Aspect_Id  := Get_Aspect_Id (Nam);\n             Anod : Node_Id;\n@@ -675,11 +677,15 @@ package body Sem_Ch13 is\n             Set_Entity (Aspect, E);\n             Ent := New_Occurrence_Of (E, Sloc (Id));\n \n-            --  Check for duplicate aspect\n+            --  Check for duplicate aspect. Note that the Comes_From_Source\n+            --  test allows duplicate Pre/Post's that we generate internally\n+            --  to escape being flagged here.\n \n             Anod := First (L);\n             while Anod /= Aspect loop\n-               if Nam = Chars (Identifier (Anod)) then\n+               if Nam = Chars (Identifier (Anod))\n+                 and then Comes_From_Source (Aspect)\n+               then\n                   Error_Msg_Name_1 := Nam;\n                   Error_Msg_Sloc := Sloc (Anod);\n                   Error_Msg_NE\n@@ -826,7 +832,7 @@ package body Sem_Ch13 is\n                   Aitem :=\n                     Make_Pragma (Loc,\n                       Pragma_Argument_Associations => New_List (\n-                        New_Occurrence_Of (E, Sloc (Expr)),\n+                        New_Occurrence_Of (E, Eloc),\n                         Relocate_Node (Expr)),\n                       Pragma_Identifier            =>\n                       Make_Identifier (Sloc (Id), Chars (Id)));\n@@ -848,7 +854,7 @@ package body Sem_Ch13 is\n                     Make_Pragma (Loc,\n                       Pragma_Argument_Associations => New_List (\n                         Relocate_Node (Expr),\n-                        New_Occurrence_Of (E, Sloc (Expr))),\n+                        New_Occurrence_Of (E, Eloc)),\n                       Pragma_Identifier            =>\n                         Make_Identifier (Sloc (Id), Chars (Id)),\n                       Class_Present                => Class_Present (Aspect));\n@@ -858,53 +864,74 @@ package body Sem_Ch13 is\n \n                   Delay_Required := False;\n \n-               --  Aspect Pre corresponds to pragma Precondition with single\n-               --  argument that is the expression (we never give a message\n-               --  argument). This is inserted right after the declaration,\n-               --  to get the required pragma placement.\n-\n-               when Aspect_Pre =>\n+               --  Aspects Pre/Post generate Precondition/Postcondition pragmas\n+               --  with a first argument that is the expression, and a second\n+               --  argument that is an informative message if the test fails.\n+               --  This is inserted right after the declaration, to get the\n+               --  required pragma placement.\n \n-                  --  Construct the pragma\n+               when Aspect_Pre | Aspect_Post => declare\n+                  Pname : Name_Id;\n+                  Msg   : Node_Id;\n \n-                  Aitem :=\n-                    Make_Pragma (Loc,\n-                      Pragma_Identifier            =>\n-                        Make_Identifier (Sloc (Id), Name_Precondition),\n-                      Class_Present                => Class_Present (Aspect),\n-                      Pragma_Argument_Associations => New_List (\n-                        Make_Pragma_Argument_Association (Sloc (Expr),\n-                          Chars      => Name_Check,\n-                          Expression => Relocate_Node (Expr))));\n-\n-                  --  We don't have to play the delay game here. The required\n-                  --  delay in this case is already implemented by the pragma.\n+               begin\n+                  if A_Id = Aspect_Pre then\n+                     Pname := Name_Precondition;\n+                  else\n+                     Pname := Name_Postcondition;\n+                  end if;\n \n-                  Delay_Required := False;\n+                  --  If the expressions is of the form A and then B, then\n+                  --  we generate separate Pre/Post aspects for the separate\n+                  --  clauses. Since we allow multiple pragmas, there is no\n+                  --  problem in allowing multiple Pre/Post aspects internally.\n+\n+                  while Nkind (Expr) = N_And_Then loop\n+                     Insert_After (Aspect,\n+                       Make_Aspect_Specification (Sloc (Right_Opnd (Expr)),\n+                         Identifier    => Identifier (Aspect),\n+                         Expression    => Relocate_Node (Right_Opnd (Expr)),\n+                         Class_Present => Class_Present (Aspect)));\n+                     Rewrite (Expr, Relocate_Node (Left_Opnd (Expr)));\n+                     Eloc := Sloc (Expr);\n+                  end loop;\n \n-               --  Aspect Post corresponds to pragma Postcondition with single\n-               --  argument that is the expression (we never give a message\n-               --  argument. This is inserted right after the declaration,\n-               --  to get the required pragma placement.\n+                  --  Proceed with handling what's left after this split up\n \n-               when Aspect_Post =>\n+                  Msg :=\n+                    Make_String_Literal (Eloc,\n+                      Strval => \"failed \"\n+                                  & Get_Name_String (Pname)\n+                                  & \" from line \"\n+                                  & Get_Logical_Line_Number_Img (Eloc));\n \n                   --  Construct the pragma\n \n                   Aitem :=\n-                    Make_Pragma (Sloc (Aspect),\n+                    Make_Pragma (Loc,\n                       Pragma_Identifier            =>\n-                        Make_Identifier (Sloc (Id), Name_Postcondition),\n+                        Make_Identifier (Sloc (Id),\n+                          Chars => Pname),\n                       Class_Present                => Class_Present (Aspect),\n                       Pragma_Argument_Associations => New_List (\n-                        Make_Pragma_Argument_Association (Sloc (Expr),\n+                        Make_Pragma_Argument_Association (Eloc,\n                           Chars      => Name_Check,\n-                          Expression => Relocate_Node (Expr))));\n+                          Expression => Relocate_Node (Expr)),\n+                        Make_Pragma_Argument_Association (Eloc,\n+                          Chars      => Name_Message,\n+                          Expression => Msg)));\n \n-                  --  We don't have to play the delay game here. The required\n-                  --  delay in this case is already implemented by the pragma.\n+                  Set_From_Aspect_Specification (Aitem, True);\n \n-                  Delay_Required := False;\n+                  --  For Pre/Post cases, insert immediately after the entity\n+                  --  declaration, since that is the required pragma placement.\n+                  --  Note that for these aspects, we do not have to worry\n+                  --  about delay issues, since the pragmas themselves deal\n+                  --  with delay of visibility for the expression analysis.\n+\n+                  Insert_After (N, Aitem);\n+                  goto Continue;\n+               end;\n \n                --  Aspects currently unimplemented\n "}, {"sha": "91a6e8fb4ea1d7d9a1f233b8e76682abeeb9548d", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 27, "deletions": 45, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c775c2094bfdd9b85ad67e451a3fe690780e84d4/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c775c2094bfdd9b85ad67e451a3fe690780e84d4/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=c775c2094bfdd9b85ad67e451a3fe690780e84d4", "patch": "@@ -8970,11 +8970,11 @@ package body Sem_Prag is\n                Pragma_Misplaced;\n                return;\n \n-            elsif Has_Priority_Pragma (P) then\n+            elsif Has_Pragma_Priority (P) then\n                Error_Pragma (\"duplicate pragma% not allowed\");\n \n             else\n-               Set_Has_Priority_Pragma (P, True);\n+               Set_Has_Pragma_Priority (P, True);\n                Record_Rep_Item (Defining_Identifier (Parent (P)), N);\n             end if;\n          end Interrupt_Priority;\n@@ -10994,10 +10994,10 @@ package body Sem_Prag is\n                Pragma_Misplaced;\n             end if;\n \n-            if Has_Priority_Pragma (P) then\n+            if Has_Pragma_Priority (P) then\n                Error_Pragma (\"duplicate pragma% not allowed\");\n             else\n-               Set_Has_Priority_Pragma (P, True);\n+               Set_Has_Pragma_Priority (P, True);\n \n                if Nkind_In (P, N_Protected_Definition, N_Task_Definition) then\n                   Record_Rep_Item (Defining_Identifier (Parent (P)), N);\n@@ -12196,25 +12196,16 @@ package body Sem_Prag is\n \n          --  pragma Suppress_All;\n \n-         --  The only check made here is that the pragma appears in the proper\n-         --  place, i.e. following a compilation unit. If indeed it appears in\n-         --  this context, then the parser has already inserted an equivalent\n-         --  pragma Suppress (All_Checks) to get the required effect.\n+         --  The only check made here is that the pragma has no arguments.\n+         --  There are no placement rules, and the processing required (setting\n+         --  the Has_Pragma_Suppress_All flag in the compilation unit node was\n+         --  taken care of by the parser). Process_Compilation_Unit_Pragmas\n+         --  then creates and inserts a pragma Suppress (All_Checks).\n \n          when Pragma_Suppress_All =>\n             GNAT_Pragma;\n             Check_Arg_Count (0);\n \n-            if Nkind (Parent (N)) /= N_Compilation_Unit_Aux\n-              or else not Is_List_Member (N)\n-              or else List_Containing (N) /= Pragmas_After (Parent (N))\n-            then\n-               if not CodePeer_Mode then\n-                  Error_Pragma\n-                    (\"misplaced pragma%, must follow compilation unit\");\n-               end if;\n-            end if;\n-\n          -------------------------\n          -- Suppress_Debug_Info --\n          -------------------------\n@@ -13782,35 +13773,26 @@ package body Sem_Prag is\n    procedure Process_Compilation_Unit_Pragmas (N : Node_Id) is\n    begin\n       --  A special check for pragma Suppress_All, a very strange DEC pragma,\n-      --  strange because it comes at the end of the unit. If we have a pragma\n-      --  Suppress_All in the Pragmas_After of the current unit, then we insert\n-      --  a pragma Suppress (All_Checks) at the start of the context clause to\n-      --  ensure the correct processing.\n-\n-      declare\n-         PA : constant List_Id := Pragmas_After (Aux_Decls_Node (N));\n-         P  : Node_Id;\n+      --  strange because it comes at the end of the unit. Rational has the\n+      --  same name for a pragma, but treats it as a program unit pragma, In\n+      --  GNAT we just decide to allow it anywhere at all. If it appeared then\n+      --  the flag Has_Pragma_Suppress_All was set on the compilation unit\n+      --  node, and we insert a pragma Suppress (All_Checks) at the start of\n+      --  the context clause to ensure the correct processing.\n+\n+      if Has_Pragma_Suppress_All (N) then\n+         Prepend_To (Context_Items (N),\n+           Make_Pragma (Sloc (N),\n+             Chars                        => Name_Suppress,\n+             Pragma_Argument_Associations => New_List (\n+               Make_Pragma_Argument_Association (Sloc (N),\n+                 Expression =>\n+                   Make_Identifier (Sloc (N),\n+                     Chars => Name_All_Checks)))));\n+      end if;\n \n-      begin\n-         if Present (PA) then\n-            P := First (PA);\n-            while Present (P) loop\n-               if Pragma_Name (P) = Name_Suppress_All then\n-                  Prepend_To (Context_Items (N),\n-                    Make_Pragma (Sloc (P),\n-                      Chars => Name_Suppress,\n-                      Pragma_Argument_Associations => New_List (\n-                        Make_Pragma_Argument_Association (Sloc (P),\n-                          Expression =>\n-                            Make_Identifier (Sloc (P),\n-                              Chars => Name_All_Checks)))));\n-                  exit;\n-               end if;\n+      --  Nothing else to do at the current time!\n \n-               Next (P);\n-            end loop;\n-         end if;\n-      end;\n    end Process_Compilation_Unit_Pragmas;\n \n    --------"}, {"sha": "4106120b094920bc82cd412b48f18eceef427d0d", "filename": "gcc/ada/sem_prag.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c775c2094bfdd9b85ad67e451a3fe690780e84d4/gcc%2Fada%2Fsem_prag.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c775c2094bfdd9b85ad67e451a3fe690780e84d4/gcc%2Fada%2Fsem_prag.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.ads?ref=c775c2094bfdd9b85ad67e451a3fe690780e84d4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -99,8 +99,8 @@ package Sem_Prag is\n    procedure Process_Compilation_Unit_Pragmas (N : Node_Id);\n    --  Called at the start of processing compilation unit N to deal with any\n    --  special issues regarding pragmas. In particular, we have to deal with\n-   --  Suppress_All at this stage, since it appears after the unit instead of\n-   --  before.\n+   --  Suppress_All at this stage, since it can appear after the unit instead\n+   --  of before (actually we allow it to appear anywhere).\n \n    procedure Set_Encoded_Interface_Name (E : Entity_Id; S : Node_Id);\n    --  This routine is used to set an encoded interface name. The node S is an"}, {"sha": "66199c2069b126c5dbb35c76b1c3717ccaee1dc9", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c775c2094bfdd9b85ad67e451a3fe690780e84d4/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c775c2094bfdd9b85ad67e451a3fe690780e84d4/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=c775c2094bfdd9b85ad67e451a3fe690780e84d4", "patch": "@@ -1453,15 +1453,23 @@ package body Sinfo is\n       return Flag17 (N);\n    end Has_No_Elaboration_Code;\n \n-   function Has_Priority_Pragma\n+   function Has_Pragma_Priority\n       (N : Node_Id) return Boolean is\n    begin\n       pragma Assert (False\n         or else NT (N).Nkind = N_Protected_Definition\n         or else NT (N).Nkind = N_Subprogram_Body\n         or else NT (N).Nkind = N_Task_Definition);\n       return Flag6 (N);\n-   end Has_Priority_Pragma;\n+   end Has_Pragma_Priority;\n+\n+   function Has_Pragma_Suppress_All\n+      (N : Node_Id) return Boolean is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Compilation_Unit);\n+      return Flag14 (N);\n+   end Has_Pragma_Suppress_All;\n \n    function Has_Private_View\n       (N : Node_Id) return Boolean is\n@@ -4406,15 +4414,23 @@ package body Sinfo is\n       Set_Flag17 (N, Val);\n    end Set_Has_No_Elaboration_Code;\n \n-   procedure Set_Has_Priority_Pragma\n+   procedure Set_Has_Pragma_Priority\n       (N : Node_Id; Val : Boolean := True) is\n    begin\n       pragma Assert (False\n         or else NT (N).Nkind = N_Protected_Definition\n         or else NT (N).Nkind = N_Subprogram_Body\n         or else NT (N).Nkind = N_Task_Definition);\n       Set_Flag6 (N, Val);\n-   end Set_Has_Priority_Pragma;\n+   end Set_Has_Pragma_Priority;\n+\n+   procedure Set_Has_Pragma_Suppress_All\n+      (N : Node_Id; Val : Boolean := True) is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Compilation_Unit);\n+      Set_Flag14 (N, Val);\n+   end Set_Has_Pragma_Suppress_All;\n \n    procedure Set_Has_Private_View\n       (N : Node_Id; Val : Boolean := True) is"}, {"sha": "6009160b391c6b49e16c47d74916afcea9479020", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 26, "deletions": 8, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c775c2094bfdd9b85ad67e451a3fe690780e84d4/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c775c2094bfdd9b85ad67e451a3fe690780e84d4/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=c775c2094bfdd9b85ad67e451a3fe690780e84d4", "patch": "@@ -1133,7 +1133,16 @@ package Sinfo is\n    --    generate elaboration code, and non-preelaborated packages which do\n    --    not generate elaboration code.\n \n-   --  Has_Priority_Pragma (Flag6-Sem)\n+   --  Has_Pragma_Suppress_All (Flag14-Sem)\n+   --    This flag is set in an N_Compilation_Unit node if the Suppress_All\n+   --    pragma appears anywhere in the unit. This accomodates the rather\n+   --    strange placement rules of other compilers (DEC permits it at the\n+   --    end of a unit, and Rational allows it as a program unit pragma). We\n+   --    allow it anywhere at all, and consider it equivalent to a pragma\n+   --    Suppress (All_Checks) appearing at the start of the configuration\n+   --    pragmas for the unit.\n+\n+   --  Has_Pragma_Priority (Flag6-Sem)\n    --    A flag present in N_Subprogram_Body, N_Task_Definition and\n    --    N_Protected_Definition nodes to flag the presence of either a Priority\n    --    or Interrupt_Priority pragma in the declaration sequence (public or\n@@ -4462,7 +4471,7 @@ package Sinfo is\n       --  Acts_As_Spec (Flag4-Sem)\n       --  Bad_Is_Detected (Flag15) used only by parser\n       --  Do_Storage_Check (Flag17-Sem)\n-      --  Has_Priority_Pragma (Flag6-Sem)\n+      --  Has_Pragma_Priority (Flag6-Sem)\n       --  Is_Protected_Subprogram_Body (Flag7-Sem)\n       --  Is_Entry_Barrier_Function (Flag8-Sem)\n       --  Is_Task_Master (Flag5-Sem)\n@@ -4946,7 +4955,7 @@ package Sinfo is\n       --  Visible_Declarations (List2)\n       --  Private_Declarations (List3) (set to No_List if no private part)\n       --  End_Label (Node4)\n-      --  Has_Priority_Pragma (Flag6-Sem)\n+      --  Has_Pragma_Priority (Flag6-Sem)\n       --  Has_Storage_Size_Pragma (Flag5-Sem)\n       --  Has_Task_Info_Pragma (Flag7-Sem)\n       --  Has_Task_Name_Pragma (Flag8-Sem)\n@@ -5033,7 +5042,7 @@ package Sinfo is\n       --  Visible_Declarations (List2)\n       --  Private_Declarations (List3) (set to No_List if no private part)\n       --  End_Label (Node4)\n-      --  Has_Priority_Pragma (Flag6-Sem)\n+      --  Has_Pragma_Priority (Flag6-Sem)\n \n       ------------------------------------------\n       -- 9.4  Protected Operation Declaration --\n@@ -5547,6 +5556,7 @@ package Sinfo is\n       --  Acts_As_Spec (Flag4-Sem) flag for subprogram body with no spec\n       --  Context_Pending (Flag16-Sem)\n       --  First_Inlined_Subprogram (Node3-Sem)\n+      --  Has_Pragma_Suppress_All (Flag14-Sem)\n \n       --  N_Compilation_Unit_Aux\n       --  Sloc is a copy of the Sloc from the N_Compilation_Unit node\n@@ -8291,9 +8301,12 @@ package Sinfo is\n    function Has_No_Elaboration_Code\n      (N : Node_Id) return Boolean;    -- Flag17\n \n-   function Has_Priority_Pragma\n+   function Has_Pragma_Priority\n      (N : Node_Id) return Boolean;    -- Flag6\n \n+   function Has_Pragma_Suppress_All\n+     (N : Node_Id) return Boolean;    -- Flag14\n+\n    function Has_Private_View\n      (N : Node_Id) return Boolean;    -- Flag11\n \n@@ -9233,9 +9246,12 @@ package Sinfo is\n    procedure Set_Has_No_Elaboration_Code\n      (N : Node_Id; Val : Boolean := True);    -- Flag17\n \n-   procedure Set_Has_Priority_Pragma\n+   procedure Set_Has_Pragma_Priority\n      (N : Node_Id; Val : Boolean := True);    -- Flag6\n \n+   procedure Set_Has_Pragma_Suppress_All\n+     (N : Node_Id; Val : Boolean := True);    -- Flag14\n+\n    procedure Set_Has_Private_View\n      (N : Node_Id; Val : Boolean := True);    -- Flag11\n \n@@ -11593,7 +11609,8 @@ package Sinfo is\n    pragma Inline (Has_Local_Raise);\n    pragma Inline (Has_Self_Reference);\n    pragma Inline (Has_No_Elaboration_Code);\n-   pragma Inline (Has_Priority_Pragma);\n+   pragma Inline (Has_Pragma_Priority);\n+   pragma Inline (Has_Pragma_Suppress_All);\n    pragma Inline (Has_Private_View);\n    pragma Inline (Has_Relative_Deadline_Pragma);\n    pragma Inline (Has_Storage_Size_Pragma);\n@@ -11903,7 +11920,8 @@ package Sinfo is\n    pragma Inline (Set_Has_Local_Raise);\n    pragma Inline (Set_Has_Dynamic_Range_Check);\n    pragma Inline (Set_Has_No_Elaboration_Code);\n-   pragma Inline (Set_Has_Priority_Pragma);\n+   pragma Inline (Set_Has_Pragma_Priority);\n+   pragma Inline (Set_Has_Pragma_Suppress_All);\n    pragma Inline (Set_Has_Private_View);\n    pragma Inline (Set_Has_Relative_Deadline_Pragma);\n    pragma Inline (Set_Has_Storage_Size_Pragma);"}, {"sha": "650efa95e3544e92a578539e4be581b290ab3923", "filename": "gcc/ada/sinput.adb", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c775c2094bfdd9b85ad67e451a3fe690780e84d4/gcc%2Fada%2Fsinput.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c775c2094bfdd9b85ad67e451a3fe690780e84d4/gcc%2Fada%2Fsinput.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput.adb?ref=c775c2094bfdd9b85ad67e451a3fe690780e84d4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -227,8 +227,7 @@ package body Sinput is\n          Get_Name_String_And_Append\n            (Reference_Name (Get_Source_File_Index (Ptr)));\n          Add_Char_To_Name_Buffer (':');\n-         Add_Nat_To_Name_Buffer\n-           (Nat (Get_Logical_Line_Number (Ptr)));\n+         Add_Nat_To_Name_Buffer (Nat (Get_Logical_Line_Number (Ptr)));\n \n          Ptr := Instantiation_Location (Ptr);\n          exit when Ptr = No_Location;\n@@ -299,6 +298,19 @@ package body Sinput is\n       end if;\n    end Get_Logical_Line_Number;\n \n+   ---------------------------------\n+   -- Get_Logical_Line_Number_Img --\n+   ---------------------------------\n+\n+   function Get_Logical_Line_Number_Img\n+     (P : Source_Ptr) return String\n+   is\n+   begin\n+      Name_Len := 0;\n+      Add_Nat_To_Name_Buffer (Nat (Get_Logical_Line_Number (P)));\n+      return Name_Buffer (1 .. Name_Len);\n+   end Get_Logical_Line_Number_Img;\n+\n    ------------------------------\n    -- Get_Physical_Line_Number --\n    ------------------------------"}, {"sha": "a6a976778e6da37d73c6ffcad96a19492fc52e40", "filename": "gcc/ada/sinput.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c775c2094bfdd9b85ad67e451a3fe690780e84d4/gcc%2Fada%2Fsinput.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c775c2094bfdd9b85ad67e451a3fe690780e84d4/gcc%2Fada%2Fsinput.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput.ads?ref=c775c2094bfdd9b85ad67e451a3fe690780e84d4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -487,6 +487,11 @@ package Sinput is\n    --  reference pragmas have been encountered, the value returned is\n    --  the same as the physical line number.\n \n+   function Get_Logical_Line_Number_Img\n+     (P : Source_Ptr) return String;\n+   --  Same as above function, but returns the line number as a string of\n+   --  decimal digits, with no leading space. Destroys Name_Buffer.\n+\n    function Get_Physical_Line_Number\n      (P : Source_Ptr) return Physical_Line_Number;\n    --  The line number of the specified source position is obtained by"}]}