{"sha": "868e82ab1fa87c6801acb82b0fb4e079e4e25356", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODY4ZTgyYWIxZmE4N2M2ODAxYWNiODJiMGZiNGUwNzllNGUyNTM1Ng==", "commit": {"author": {"name": "Gavin Koch", "email": "gavin@cygnus.com", "date": "1997-12-03T16:47:25Z"}, "committer": {"name": "Gavin Romig-Koch", "email": "gavin@gcc.gnu.org", "date": "1997-12-03T16:47:25Z"}, "message": "mips.md (muldi3_r4000): Broaden the output template and attribute assignments to handle three operand...\n\n\t* mips/mips.md (muldi3_r4000): Broaden the output template\n\tand attribute assignments to handle three operand dmult;\n\trename to muldi3_internal2.\n\t(muldi3): Call the new muldi3_internal2 for R4000, and\n\tany GENERATE_MULT3 chip.\n\nFrom-SVN: r16927", "tree": {"sha": "c62cbd9fc23ed0f7a3ead910b70c9210d903f441", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c62cbd9fc23ed0f7a3ead910b70c9210d903f441"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/868e82ab1fa87c6801acb82b0fb4e079e4e25356", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/868e82ab1fa87c6801acb82b0fb4e079e4e25356", "html_url": "https://github.com/Rust-GCC/gccrs/commit/868e82ab1fa87c6801acb82b0fb4e079e4e25356", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/868e82ab1fa87c6801acb82b0fb4e079e4e25356/comments", "author": null, "committer": null, "parents": [{"sha": "716cc7f77892817814bee28ba5b6f09f72a45523", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/716cc7f77892817814bee28ba5b6f09f72a45523", "html_url": "https://github.com/Rust-GCC/gccrs/commit/716cc7f77892817814bee28ba5b6f09f72a45523"}], "stats": {"total": 38, "additions": 27, "deletions": 11}, "files": [{"sha": "8f9f3245604fb153c8f39f72d963cd7b64026a78", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/868e82ab1fa87c6801acb82b0fb4e079e4e25356/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/868e82ab1fa87c6801acb82b0fb4e079e4e25356/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=868e82ab1fa87c6801acb82b0fb4e079e4e25356", "patch": "@@ -1,3 +1,11 @@\n+Wed Dec  3 11:41:13 1997  Gavin Koch  <gavin@cygnus.com>\n+\n+\t* mips/mips.md (muldi3_r4000): Broaden the output template\n+\tand attribute assignments to handle three operand dmult;\n+\trename to muldi3_internal2.\n+\t(muldi3): Call the new muldi3_internal2 for R4000, and\n+\tany GENERATE_MULT3 chip.\n+\n Tue Dec  2 19:40:43 1997  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* stmt.c (expand_decl_cleanup): Update thisblock after eh_region_start."}, {"sha": "dcd82fde57149ede648de41986c17ac3b3457a5d", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 19, "deletions": 11, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/868e82ab1fa87c6801acb82b0fb4e079e4e25356/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/868e82ab1fa87c6801acb82b0fb4e079e4e25356/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=868e82ab1fa87c6801acb82b0fb4e079e4e25356", "patch": "@@ -1111,10 +1111,10 @@\n   \"TARGET_64BIT\"\n   \"\n {\n-  if (mips_cpu != PROCESSOR_R4000)\n-    emit_insn (gen_muldi3_internal (operands[0], operands[1], operands[2]));\n+  if (GENERATE_MULT3 || mips_cpu == PROCESSOR_R4000)\n+    emit_insn (gen_muldi3_internal2 (operands[0], operands[1], operands[2]));\n   else\n-    emit_insn (gen_muldi3_r4000 (operands[0], operands[1], operands[2]));\n+    emit_insn (gen_muldi3_internal (operands[0], operands[1], operands[2]));\n   DONE;\n }\")\n \n@@ -1135,28 +1135,36 @@\n    (set_attr \"mode\"\t\"DI\")\n    (set_attr \"length\"\t\"1\")])\n \n-(define_insn \"muldi3_r4000\"\n+(define_insn \"muldi3_internal2\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n \t(mult:DI (match_operand:DI 1 \"se_register_operand\" \"d\")\n \t\t (match_operand:DI 2 \"register_operand\" \"d\")))\n    (clobber (match_scratch:DI 3 \"=h\"))\n    (clobber (match_scratch:DI 4 \"=l\"))\n    (clobber (match_scratch:DI 5 \"=a\"))]\n-  \"TARGET_64BIT && mips_cpu == PROCESSOR_R4000\"\n+  \"TARGET_64BIT && (GENERATE_MULT3 || mips_cpu == PROCESSOR_R4000)\"\n   \"*\n {\n-  rtx xoperands[10];\n+  if (GENERATE_MULT3)\n+    output_asm_insn (\\\"dmult\\\\t%0,%1,%2\\\", operands);\n+  else \n+    {\n+    rtx xoperands[10];\n \n-  xoperands[0] = operands[0];\n-  xoperands[1] = gen_rtx (REG, DImode, LO_REGNUM);\n+    xoperands[0] = operands[0];\n+    xoperands[1] = gen_rtx (REG, DImode, LO_REGNUM);\n \n-  output_asm_insn (\\\"dmult\\\\t%1,%2\\\", operands);\n-  output_asm_insn (mips_move_1word (xoperands, insn, FALSE), xoperands);\n+    output_asm_insn (\\\"dmult\\\\t%1,%2\\\", operands);\n+    output_asm_insn (mips_move_1word (xoperands, insn, FALSE), xoperands);\n+    }\n   return \\\"\\\";\n }\"\n   [(set_attr \"type\"\t\"imul\")\n    (set_attr \"mode\"\t\"DI\")\n-   (set_attr \"length\"\t\"3\")])\t\t;; mult + mflo + delay\n+   (set (attr \"length\")\n+\t(if_then_else (ne (symbol_ref \"GENERATE_MULT3\") (const_int 0))\n+\t\t       (const_int 1)\n+\t\t       (const_int 3)))]) \t;; mult + mflo + delay\n \n ;; ??? We could define a mulditi3 pattern when TARGET_64BIT.\n "}]}