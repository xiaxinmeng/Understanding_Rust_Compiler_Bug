{"sha": "65a07a30aa7cf0ac4fc0b7f9643d7a2b28f7f1c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjVhMDdhMzBhYTdjZjBhYzRmYzBiN2Y5NjQzZDdhMmIyOGY3ZjFjNg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2009-10-27T14:14:44Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-10-27T14:14:44Z"}, "message": "s-fileio.adb, [...]: Minor reformatting\n\n2009-10-27  Robert Dewar  <dewar@adacore.com>\n\n\t* s-fileio.adb, s-fileio.ads, sem_util.adb, sem_warn.adb,\n\tsem_warn.ads: Minor reformatting\n\nFrom-SVN: r153597", "tree": {"sha": "ab6c5760c6fc0bb57b7c99d73113a6e3b815d6c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab6c5760c6fc0bb57b7c99d73113a6e3b815d6c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65a07a30aa7cf0ac4fc0b7f9643d7a2b28f7f1c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65a07a30aa7cf0ac4fc0b7f9643d7a2b28f7f1c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65a07a30aa7cf0ac4fc0b7f9643d7a2b28f7f1c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65a07a30aa7cf0ac4fc0b7f9643d7a2b28f7f1c6/comments", "author": null, "committer": null, "parents": [{"sha": "3d9d6c8e59b0e95d3e24ffa6b1a71bc1c23a7516", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d9d6c8e59b0e95d3e24ffa6b1a71bc1c23a7516", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d9d6c8e59b0e95d3e24ffa6b1a71bc1c23a7516"}], "stats": {"total": 117, "additions": 58, "deletions": 59}, "files": [{"sha": "9ba4bcf4bd7af725e4f2f1b14cb00b1afcc89e79", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65a07a30aa7cf0ac4fc0b7f9643d7a2b28f7f1c6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65a07a30aa7cf0ac4fc0b7f9643d7a2b28f7f1c6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=65a07a30aa7cf0ac4fc0b7f9643d7a2b28f7f1c6", "patch": "@@ -1,3 +1,8 @@\n+2009-10-27  Robert Dewar  <dewar@adacore.com>\n+\n+\t* s-fileio.adb, s-fileio.ads, sem_util.adb, sem_warn.adb,\n+\tsem_warn.ads: Minor reformatting\n+\n 2009-10-27  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_warn.adb, sem_util.adb, sem_util.ads: Minor reformatting. Add"}, {"sha": "803c2da99e79916d953e14e79a26e5aa5ef49d8f", "filename": "gcc/ada/s-fileio.adb", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65a07a30aa7cf0ac4fc0b7f9643d7a2b28f7f1c6/gcc%2Fada%2Fs-fileio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65a07a30aa7cf0ac4fc0b7f9643d7a2b28f7f1c6/gcc%2Fada%2Fs-fileio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fileio.adb?ref=65a07a30aa7cf0ac4fc0b7f9643d7a2b28f7f1c6", "patch": "@@ -523,8 +523,7 @@ package body System.File_IO is\n    function Form_Boolean\n      (Form    : String;\n       Keyword : String;\n-      Default : Boolean)\n-      return    Boolean\n+      Default : Boolean) return Boolean\n    is\n       V1, V2 : Natural;\n       pragma Unreferenced (V2);\n@@ -553,8 +552,7 @@ package body System.File_IO is\n    function Form_Integer\n      (Form    : String;\n       Keyword : String;\n-      Default : Integer)\n-      return    Integer\n+      Default : Integer) return Integer\n    is\n       V1, V2 : Natural;\n       V      : Integer;"}, {"sha": "5ee0c5b99d9865543d4c9d8bddaca889ada90978", "filename": "gcc/ada/s-fileio.ads", "status": "modified", "additions": 36, "deletions": 38, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65a07a30aa7cf0ac4fc0b7f9643d7a2b28f7f1c6/gcc%2Fada%2Fs-fileio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65a07a30aa7cf0ac4fc0b7f9643d7a2b28f7f1c6/gcc%2Fada%2Fs-fileio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fileio.ads?ref=65a07a30aa7cf0ac4fc0b7f9643d7a2b28f7f1c6", "patch": "@@ -125,8 +125,8 @@ package System.File_IO is\n    --  if used with temporary files or standard files.\n \n    function Form (File : FCB.AFCB_Ptr) return String;\n-   --  Returns the form as supplied by create, open or reset\n-   --  The string is normalized to all lower case letters.\n+   --  Returns the form as supplied by create, open or reset The string is\n+   --  normalized to all lower case letters.\n \n    function Is_Open (File : FCB.AFCB_Ptr) return Boolean;\n    --  Determines if file is open or not\n@@ -145,56 +145,54 @@ package System.File_IO is\n    --  not opened in the normal manner. Note that the caller is responsible\n    --  for task lock out to protect the global data structures if this is\n    --  necessary (it is needed for the calls from within this unit itself,\n-   --  but not required for the calls from Text_IO and Wide_Text_IO that\n-   --  are made during elaboration of the environment task).\n+   --  but not required for the calls from Text_IO and [Wide_]Wide_Text_IO\n+   --  that are made during elaboration of the environment task).\n \n    procedure Check_File_Open (File : FCB.AFCB_Ptr);\n-   --  If the current file is not open, then Status_Error is raised.\n-   --  Otherwise control returns normally (with File pointing to the\n-   --  control block for the open file.\n+   --  If the current file is not open, then Status_Error is raised. Otherwise\n+   --  control returns normally (with File pointing to the control block for\n+   --  the open file.\n \n    procedure Check_Read_Status (File : FCB.AFCB_Ptr);\n-   --  If the current file is not open, then Status_Error is raised. If\n-   --  the file is open, then the mode is checked to ensure that reading\n-   --  is permitted, and if not Mode_Error is raised, otherwise control\n-   --  returns normally.\n+   --  If the current file is not open, then Status_Error is raised. If the\n+   --  file is open, then the mode is checked to make sure that reading is\n+   --  permitted, and if not Mode_Error is raised, otherwise control returns\n+   --  normally.\n \n    procedure Check_Write_Status (File : FCB.AFCB_Ptr);\n-   --  If the current file is not open, then Status_Error is raised. If\n-   --  the file is open, then the mode is checked to ensure that writing\n-   --  is permitted, and if not Mode_Error is raised, otherwise control\n-   --  returns normally.\n+   --  If the current file is not open, then Status_Error is raised. If the\n+   --  file is open, then the mode is checked to ensure that writing is\n+   --  permitted, and if not Mode_Error is raised, otherwise control returns\n+   --  normally.\n \n    function End_Of_File (File : FCB.AFCB_Ptr) return Boolean;\n    --  File must be opened in read mode. True is returned if the stream is\n    --  currently positioned at the end of file, otherwise False is returned.\n    --  The position of the stream is not affected.\n \n    procedure Flush (File : FCB.AFCB_Ptr);\n-   --  Flushes the stream associated with the given file. The file must be\n-   --  open and in write mode (if not, an appropriate exception is raised)\n+   --  Flushes the stream associated with the given file. The file must be open\n+   --  and in write mode (if not, an appropriate exception is raised)\n \n    function Form_Boolean\n      (Form    : String;\n       Keyword : String;\n-      Default : Boolean)\n-      return    Boolean;\n-   --  Searches form string for an entry of the form Keyword=xx where xx is\n-   --  either Yes/No or y/n. Returns True if Yes or Y is found, False if No\n-   --  or N is found. If the keyword parameter is not found, returns the\n-   --  value given as Default. May raise Use_Error if a form string syntax\n-   --  error is detected. Keyword and Form must be in lower case.\n+      Default : Boolean) return Boolean;\n+   --  Searches form string for an entry of the form keyword=xx where xx is\n+   --  either yes/no or y/n. Returns True if yes or y is found, False if no or\n+   --  n is found. If the keyword parameter is not found, returns the value\n+   --  given as Default. May raise Use_Error if a form string syntax error is\n+   --  detected. Keyword and Form must be in lower case.\n \n    function Form_Integer\n      (Form    : String;\n       Keyword : String;\n-      Default : Integer)\n-      return    Integer;\n-   --  Searches form string for an entry of the form Keyword=xx where xx is\n-   --  an unsigned decimal integer in the range 0 to 999_999. Returns this\n-   --  integer value if it is found. If the keyword parameter is not found,\n-   --  returns the value given as Default. Raise Use_Error if a form string\n-   --  syntax error is detected. Keyword and Form must be in lower case.\n+      Default : Integer) return Integer;\n+   --  Searches form string for an entry of the form Keyword=xx where xx is an\n+   --  unsigned decimal integer in the range 0 to 999_999. Returns this integer\n+   --  value if it is found. If the keyword parameter is not found, returns the\n+   --  value given as Default. Raise Use_Error if a form string syntax error is\n+   --  detected. Keyword and Form must be in lower case.\n \n    procedure Form_Parameter\n      (Form    : String;\n@@ -221,22 +219,22 @@ package System.File_IO is\n       Buf   : Address;\n       Siz   : Interfaces.C_Streams.size_t;\n       Count : out Interfaces.C_Streams.size_t);\n-   --  Reads Siz bytes from File.Stream into Buf. The caller has checked\n-   --  that the file is open in read mode. Device Error is raised if an error\n+   --  Reads Siz bytes from File.Stream into Buf. The caller has checked that\n+   --  the file is open in read mode. Device Error is raised if an error\n    --  occurs. Count is the actual number of bytes read, which may be less\n    --  than Siz if the end of file is encountered.\n \n    procedure Append_Set (File : FCB.AFCB_Ptr);\n-   --  If the mode of the file is Append_File, then the file is positioned\n-   --  at the end of file using fseek, otherwise this call has no effect.\n+   --  If the mode of the file is Append_File, then the file is positioned at\n+   --  the end of file using fseek, otherwise this call has no effect.\n \n    procedure Write_Buf\n      (File : FCB.AFCB_Ptr;\n       Buf  : Address;\n       Siz  : Interfaces.C_Streams.size_t);\n-   --  Writes size_t bytes to File.Stream from Buf. The caller has checked\n-   --  that the file is open in write mode. Raises Device_Error if the\n-   --  complete buffer cannot be written.\n+   --  Writes size_t bytes to File.Stream from Buf. The caller has checked that\n+   --  the file is open in write mode. Raises Device_Error if the complete\n+   --  buffer cannot be written.\n \n    procedure Make_Unbuffered (File : FCB.AFCB_Ptr);\n "}, {"sha": "5baf60c8deafdae131901133be24274940f91bdf", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65a07a30aa7cf0ac4fc0b7f9643d7a2b28f7f1c6/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65a07a30aa7cf0ac4fc0b7f9643d7a2b28f7f1c6/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=65a07a30aa7cf0ac4fc0b7f9643d7a2b28f7f1c6", "patch": "@@ -2146,7 +2146,7 @@ package body Sem_Util is\n       --  If we have entity names, then must be same entity\n \n       if Is_Entity_Name (A1) then\n-         if Is_Entity_Name (A2)then\n+         if Is_Entity_Name (A2) then\n             return Entity (A1) = Entity (A2);\n          else\n             return False;\n@@ -2249,8 +2249,8 @@ package body Sem_Util is\n          return Denotes_Same_Prefix (A2, A1);\n \n       elsif Nkind_In (A1, N_Selected_Component, N_Indexed_Component, N_Slice)\n-        and then\n-          Nkind_In (A2, N_Selected_Component, N_Indexed_Component, N_Slice)\n+              and then\n+            Nkind_In (A2, N_Selected_Component, N_Indexed_Component, N_Slice)\n       then\n          declare\n             Root1, Root2 : Node_Id;"}, {"sha": "12143c8e792430d1d391bbacf3b11bf36ef83939", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65a07a30aa7cf0ac4fc0b7f9643d7a2b28f7f1c6/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65a07a30aa7cf0ac4fc0b7f9643d7a2b28f7f1c6/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=65a07a30aa7cf0ac4fc0b7f9643d7a2b28f7f1c6", "patch": "@@ -3554,17 +3554,15 @@ package body Sem_Warn is\n \n       --  Exclude calls rewritten as enumeration literals\n \n-      if not Nkind_In\n-               (N, N_Function_Call, N_Procedure_Call_Statement)\n-      then\n+      if not Nkind_In (N, N_Function_Call, N_Procedure_Call_Statement) then\n          return;\n       end if;\n \n-      --  Exclude calls to library subprograms. Container operations\n-      --  specify safe behavior when source and target coincide.\n+      --  Exclude calls to library subprograms. Container operations specify\n+      --  safe behavior when source and target coincide.\n \n-      if Is_Predefined_File_Name (\n-         Unit_File_Name (Get_Source_Unit (Sloc (Subp))))\n+      if Is_Predefined_File_Name\n+           (Unit_File_Name (Get_Source_Unit (Sloc (Subp))))\n       then\n          return;\n       end if;\n@@ -3596,7 +3594,8 @@ package body Sem_Warn is\n                      null;\n \n                   elsif Is_Generic_Type (Etype (Act1))\n-                    or else Is_Generic_Type (Etype (Act2))\n+                          or else\n+                        Is_Generic_Type (Etype (Act2))\n                   then\n                      null;\n \n@@ -3634,9 +3633,8 @@ package body Sem_Warn is\n \n                         if Is_Entity_Name (First_Actual (N))\n                           and then Nkind (Original_Node (N)) = Nkind (N)\n-                          and then\n-                            Nkind (Name (Original_Node (N))) =\n-                              N_Selected_Component\n+                          and then Nkind (Name (Original_Node (N))) =\n+                                                         N_Selected_Component\n                           and then\n                             Is_Entity_Name (Prefix (Name (Original_Node (N))))\n                           and then\n@@ -3645,7 +3643,7 @@ package body Sem_Warn is\n                         then\n                            if Act1 = First_Actual (N) then\n                               Error_Msg_FE\n-                                (\"in-out prefix overlaps with actual for&?\",\n+                                (\"`IN OUT` prefix overlaps with actual for&?\",\n                                  Act1, Form);\n                            else\n                               Error_Msg_FE"}, {"sha": "365ad397d1b3f8e923acef0dfdb4d5f122ab48a3", "filename": "gcc/ada/sem_warn.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65a07a30aa7cf0ac4fc0b7f9643d7a2b28f7f1c6/gcc%2Fada%2Fsem_warn.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65a07a30aa7cf0ac4fc0b7f9643d7a2b28f7f1c6/gcc%2Fada%2Fsem_warn.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.ads?ref=65a07a30aa7cf0ac4fc0b7f9643d7a2b28f7f1c6", "patch": "@@ -211,8 +211,8 @@ package Sem_Warn is\n    --  an only OUT parameter, or if Warn_On_All_Unread_Out_Parameters is set.\n \n    procedure Warn_On_Overlapping_Actuals (Subp : Entity_Id; N : Node_Id);\n-   --  Called on a subprogram call. Checks whether an in-out actual that is\n-   --  not by-copy may overlap with another actual, thus leadind to aliasing\n+   --  Called on a subprogram call. Checks whether an IN OUT actual that is\n+   --  not by-copy may overlap with another actual, thus leading to aliasing\n    --  in the body of the called subprogram.\n \n    procedure Warn_On_Suspicious_Index (Name : Entity_Id; X : Node_Id);"}]}