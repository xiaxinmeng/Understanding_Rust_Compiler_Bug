{"sha": "d6d8e6a7e1379f9dfdf2f39efcc82d9185cca6d0", "node_id": "C_kwDOANBUbNoAKGQ2ZDhlNmE3ZTEzNzlmOWRmZGYyZjM5ZWZjYzgyZDkxODVjY2E2ZDA", "commit": {"author": {"name": "Takayuki 'January June' Suwa", "email": "jjsuwa_sys3175@yahoo.co.jp", "date": "2022-07-15T10:51:40Z"}, "committer": {"name": "Max Filippov", "email": "jcmvbkbc@gmail.com", "date": "2022-07-16T07:27:42Z"}, "message": "xtensa: Optimize \"bitwise AND with imm1\" followed by \"branch if (not) equal to imm2\"\n\nThis patch enhances the effectiveness of the previously posted one:\n\"xtensa: Optimize bitwise AND operation with some specific forms of constants\".\n\n    /* example */\n    extern void foo(int);\n    void test(int a) {\n      if ((a & (-1U << 8)) == (128 << 8))  /* 0 or one of \"b4const\" */\n        foo(a);\n    }\n\n    ;; before\n\t.global\ttest\n    test:\n\tmovi\ta3, -0x100\n\tmovi.n\ta4, 1\n\tand\ta3, a2, a3\n\tslli\ta4, a4, 15\n\tbne\ta3, a4, .L3\n\tj.l\tfoo, a9\n    .L1:\n\tret.n\n\n    ;; after\n\t.global test\n    test:\n\tsrli\ta3, a2, 8\n\tbnei\ta3, 128, .L1\n\tj.l\tfoo, a9\n    .L1:\n\tret.n\n\ngcc/ChangeLog:\n\n\t* config/xtensa/xtensa.md\n\t(*masktrue_const_pow2_minus_one, *masktrue_const_negative_pow2,\n\t*masktrue_const_shifted_mask): If the immediate for bitwise AND is\n\trepresented as '-(1 << N)', decrease the lower bound of N from 12\n\tto 1.  And the other immediate for conditional branch is now no\n\tlonger limited to zero, but also one of some positive integers.\n\tFinally, remove the checks of some conditions, because the comparison\n\texpressions that don't satisfy such checks are determined as\n\tcompile-time constants and thus will be optimized away before\n\tRTL expansion.", "tree": {"sha": "9ce1ad9bc1badeceb2bb4f809dc658d9749a5e46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ce1ad9bc1badeceb2bb4f809dc658d9749a5e46"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6d8e6a7e1379f9dfdf2f39efcc82d9185cca6d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6d8e6a7e1379f9dfdf2f39efcc82d9185cca6d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6d8e6a7e1379f9dfdf2f39efcc82d9185cca6d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6d8e6a7e1379f9dfdf2f39efcc82d9185cca6d0/comments", "author": {"login": "jjsuwa-sys3175", "id": 73290592, "node_id": "MDQ6VXNlcjczMjkwNTky", "avatar_url": "https://avatars.githubusercontent.com/u/73290592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjsuwa-sys3175", "html_url": "https://github.com/jjsuwa-sys3175", "followers_url": "https://api.github.com/users/jjsuwa-sys3175/followers", "following_url": "https://api.github.com/users/jjsuwa-sys3175/following{/other_user}", "gists_url": "https://api.github.com/users/jjsuwa-sys3175/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjsuwa-sys3175/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjsuwa-sys3175/subscriptions", "organizations_url": "https://api.github.com/users/jjsuwa-sys3175/orgs", "repos_url": "https://api.github.com/users/jjsuwa-sys3175/repos", "events_url": "https://api.github.com/users/jjsuwa-sys3175/events{/privacy}", "received_events_url": "https://api.github.com/users/jjsuwa-sys3175/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jcmvbkbc", "id": 166731, "node_id": "MDQ6VXNlcjE2NjczMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcmvbkbc", "html_url": "https://github.com/jcmvbkbc", "followers_url": "https://api.github.com/users/jcmvbkbc/followers", "following_url": "https://api.github.com/users/jcmvbkbc/following{/other_user}", "gists_url": "https://api.github.com/users/jcmvbkbc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcmvbkbc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcmvbkbc/subscriptions", "organizations_url": "https://api.github.com/users/jcmvbkbc/orgs", "repos_url": "https://api.github.com/users/jcmvbkbc/repos", "events_url": "https://api.github.com/users/jcmvbkbc/events{/privacy}", "received_events_url": "https://api.github.com/users/jcmvbkbc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1884f8978237b15013576a720bcb32e7c5647574", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1884f8978237b15013576a720bcb32e7c5647574", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1884f8978237b15013576a720bcb32e7c5647574"}], "stats": {"total": 73, "additions": 44, "deletions": 29}, "files": [{"sha": "c02f1a566411caa8a04cbada926690df256f3b42", "filename": "gcc/config/xtensa/xtensa.md", "status": "modified", "additions": 44, "deletions": 29, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6d8e6a7e1379f9dfdf2f39efcc82d9185cca6d0/gcc%2Fconfig%2Fxtensa%2Fxtensa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6d8e6a7e1379f9dfdf2f39efcc82d9185cca6d0/gcc%2Fconfig%2Fxtensa%2Fxtensa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.md?ref=d6d8e6a7e1379f9dfdf2f39efcc82d9185cca6d0", "patch": "@@ -1716,63 +1716,78 @@\n \n (define_insn_and_split \"*masktrue_const_pow2_minus_one\"\n   [(set (pc)\n-\t(if_then_else (match_operator 3 \"boolean_operator\"\n+\t(if_then_else (match_operator 4 \"boolean_operator\"\n \t\t\t[(and:SI (match_operand:SI 0 \"register_operand\" \"r\")\n \t\t\t\t (match_operand:SI 1 \"const_int_operand\" \"i\"))\n-\t\t\t (const_int 0)])\n-\t\t      (label_ref (match_operand 2 \"\" \"\"))\n+\t\t\t (match_operand:SI 2 \"const_int_operand\" \"i\")])\n+\t\t      (label_ref (match_operand 3 \"\" \"\"))\n \t\t      (pc)))]\n-  \"IN_RANGE (exact_log2 (INTVAL (operands[1]) + 1), 17, 31)\"\n+  \"IN_RANGE (exact_log2 (INTVAL (operands[1]) + 1), 17, 31)\n+   /* && (~INTVAL (operands[1]) & INTVAL (operands[2])) == 0  // can be omitted */\n+   && xtensa_b4const_or_zero (INTVAL (operands[2]) << (32 - floor_log2 (INTVAL (operands[1]) + 1)))\"\n   \"#\"\n   \"&& can_create_pseudo_p ()\"\n-  [(set (match_dup 4)\n+  [(set (match_dup 5)\n \t(ashift:SI (match_dup 0)\n \t\t   (match_dup 1)))\n    (set (pc)\n-\t(if_then_else (match_op_dup 3\n-\t\t\t[(match_dup 4)\n-\t\t\t (const_int 0)])\n-\t\t      (label_ref (match_dup 2))\n+\t(if_then_else (match_op_dup 4\n+\t\t\t[(match_dup 5)\n+\t\t\t (match_dup 2)])\n+\t\t      (label_ref (match_dup 3))\n \t\t      (pc)))]\n {\n-  operands[1] = GEN_INT (32 - floor_log2 (INTVAL (operands[1]) + 1));\n-  operands[4] = gen_reg_rtx (SImode);\n+  int shift = 32 - floor_log2 (INTVAL (operands[1]) + 1);\n+  operands[1] = GEN_INT (shift);\n+  operands[2] = GEN_INT (INTVAL (operands[2]) << shift);\n+  operands[5] = gen_reg_rtx (SImode);\n }\n   [(set_attr \"type\"\t\"jump\")\n    (set_attr \"mode\"\t\"none\")\n    (set (attr \"length\")\n-\t(if_then_else (match_test \"TARGET_DENSITY\n-\t\t\t\t   && INTVAL (operands[1]) == 0x7FFFFFFF\")\n-\t\t      (const_int 5)\n-\t\t      (const_int 6)))])\n+\t(if_then_else (match_test \"(TARGET_DENSITY && INTVAL (operands[1]) == 0x7FFFFFFF)\n+\t\t\t\t   && INTVAL (operands[2]) == 0\")\n+\t\t      (const_int 4)\n+\t\t      (if_then_else (match_test \"TARGET_DENSITY\n+\t\t\t\t\t\t && (INTVAL (operands[1]) == 0x7FFFFFFF\n+\t\t\t\t\t\t     || INTVAL (operands[2]) == 0)\")\n+\t\t\t\t    (const_int 5)\n+\t\t\t\t    (const_int 6))))])\n \n (define_insn_and_split \"*masktrue_const_negative_pow2\"\n   [(set (pc)\n-\t(if_then_else (match_operator 3 \"boolean_operator\"\n+\t(if_then_else (match_operator 4 \"boolean_operator\"\n \t\t\t[(and:SI (match_operand:SI 0 \"register_operand\" \"r\")\n \t\t\t\t (match_operand:SI 1 \"const_int_operand\" \"i\"))\n-\t\t\t (const_int 0)])\n-\t\t      (label_ref (match_operand 2 \"\" \"\"))\n+\t\t\t (match_operand:SI 2 \"const_int_operand\" \"i\")])\n+\t\t      (label_ref (match_operand 3 \"\" \"\"))\n \t\t      (pc)))]\n-  \"IN_RANGE (exact_log2 (-INTVAL (operands[1])), 12, 30)\"\n+  \"IN_RANGE (exact_log2 (-INTVAL (operands[1])), 1, 30)\n+   /* && (~INTVAL (operands[1]) & INTVAL (operands[2])) == 0  // can be omitted */\n+   && xtensa_b4const_or_zero (INTVAL (operands[2]) >> floor_log2 (-INTVAL (operands[1])))\"\n   \"#\"\n   \"&& can_create_pseudo_p ()\"\n-  [(set (match_dup 4)\n+  [(set (match_dup 5)\n \t(lshiftrt:SI (match_dup 0)\n \t\t     (match_dup 1)))\n    (set (pc)\n-\t(if_then_else (match_op_dup 3\n-\t\t\t[(match_dup 4)\n-\t\t\t (const_int 0)])\n-\t\t      (label_ref (match_dup 2))\n+\t(if_then_else (match_op_dup 4\n+\t\t\t[(match_dup 5)\n+\t\t\t (match_dup 2)])\n+\t\t      (label_ref (match_dup 3))\n \t\t      (pc)))]\n {\n-  operands[1] = GEN_INT (floor_log2 (-INTVAL (operands[1])));\n-  operands[4] = gen_reg_rtx (SImode);\n+  int shift = floor_log2 (-INTVAL (operands[1]));\n+  operands[1] = GEN_INT (shift);\n+  operands[2] = GEN_INT (INTVAL (operands[2]) >> shift);\n+  operands[5] = gen_reg_rtx (SImode);\n }\n   [(set_attr \"type\"\t\"jump\")\n    (set_attr \"mode\"\t\"none\")\n-   (set_attr \"length\"\t\"6\")])\n+   (set (attr \"length\")\n+\t(if_then_else (match_test \"TARGET_DENSITY && INTVAL (operands[2]) == 0\")\n+\t\t      (const_int 5)\n+\t\t      (const_int 6)))])\n \n (define_insn_and_split \"*masktrue_const_shifted_mask\"\n   [(set (pc)\n@@ -1782,8 +1797,8 @@\n \t\t\t (match_operand:SI 2 \"const_int_operand\" \"i\")])\n \t\t      (label_ref (match_operand 3 \"\" \"\"))\n \t\t      (pc)))]\n-  \"(INTVAL (operands[2]) & ((1 << ctz_hwi (INTVAL (operands[1]))) - 1)) == 0\n-   && xtensa_b4const_or_zero ((uint32_t)INTVAL (operands[2]) >> ctz_hwi (INTVAL (operands[1])))\"\n+  \"/* (INTVAL (operands[2]) & ((1 << ctz_hwi (INTVAL (operands[1]))) - 1)) == 0  // can be omitted\n+   && */ xtensa_b4const_or_zero ((uint32_t)INTVAL (operands[2]) >> ctz_hwi (INTVAL (operands[1])))\"\n   \"#\"\n   \"&& can_create_pseudo_p ()\"\n   [(set (match_dup 6)"}]}