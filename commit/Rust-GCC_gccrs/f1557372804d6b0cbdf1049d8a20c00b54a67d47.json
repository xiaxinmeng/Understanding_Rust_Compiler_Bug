{"sha": "f1557372804d6b0cbdf1049d8a20c00b54a67d47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjE1NTczNzI4MDRkNmIwY2JkZjEwNDlkOGEyMGMwMGI1NGE2N2Q0Nw==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2013-10-01T09:18:30Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2013-10-01T09:18:30Z"}, "message": "target-supports.exp (check_effective_target_ptr32plus): Fail for MSP430.\n\n\t* lib/target-supports.exp (check_effective_target_ptr32plus): Fail\n\tfor MSP430.\n\t* gcc.c-torture/compile/20010327-1.c: Only run the test for\n\tptr32plus targets.\n\t* gcc.c-torture/compile/pr41181.c: Likewise.\n\t* gcc.c-torture/compile/calls.c: Likewise.\n\t* gcc.c-torture/compile/990617-1.c: Likewise.\n\t* gcc.c-torture/compile/pr55955.c: Only run the test for\n\tint32plus targets.\n\t* gcc.c-torture/compile/limits-externdecl.c: Likewise.\n\nFrom-SVN: r203055", "tree": {"sha": "84e20c9ac1a81205144f669314c7c83c4f37b706", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84e20c9ac1a81205144f669314c7c83c4f37b706"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1557372804d6b0cbdf1049d8a20c00b54a67d47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1557372804d6b0cbdf1049d8a20c00b54a67d47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1557372804d6b0cbdf1049d8a20c00b54a67d47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1557372804d6b0cbdf1049d8a20c00b54a67d47/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "818625cf9eb14c87e7ea46471321c38fda7cb6a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/818625cf9eb14c87e7ea46471321c38fda7cb6a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/818625cf9eb14c87e7ea46471321c38fda7cb6a5"}], "stats": {"total": 41, "additions": 30, "deletions": 11}, "files": [{"sha": "2e49e458188679ba33ba76da3bfea8d80cfedbd6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1557372804d6b0cbdf1049d8a20c00b54a67d47/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1557372804d6b0cbdf1049d8a20c00b54a67d47/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f1557372804d6b0cbdf1049d8a20c00b54a67d47", "patch": "@@ -1,3 +1,16 @@\n+2013-10-01  Nick Clifton  <nickc@redhat.com>\n+\n+\t* lib/target-supports.exp (check_effective_target_ptr32plus): Fail\n+\tfor MSP430.\n+\t* gcc.c-torture/compile/20010327-1.c: Only run the test for\n+\tptr32plus targets.\n+\t* gcc.c-torture/compile/pr41181.c: Likewise.\n+\t* gcc.c-torture/compile/calls.c: Likewise.\n+\t* gcc.c-torture/compile/990617-1.c: Likewise.\n+\t* gcc.c-torture/compile/pr55955.c: Only run the test for\n+\tint32plus targets.\n+\t* gcc.c-torture/compile/limits-externdecl.c: Likewise.\n+\n 2013-10-01  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/58553"}, {"sha": "7e9c0c73a0275e40bffeb5285f3ee78d852bc88e", "filename": "gcc/testsuite/gcc.c-torture/compile/20010327-1.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1557372804d6b0cbdf1049d8a20c00b54a67d47/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20010327-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1557372804d6b0cbdf1049d8a20c00b54a67d47/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20010327-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20010327-1.c?ref=f1557372804d6b0cbdf1049d8a20c00b54a67d47", "patch": "@@ -1,7 +1,4 @@\n-/* { dg-skip-if \"non-SI pointers\" { m32c-*-* } { \"*\" } { \"\" } } */\n-/* { dg-skip-if \"HI mode pointer for avr\" { \"avr-*-*\" } { \"*\" } { \"\" } } */ \n-/* { dg-skip-if \"HI mode pointer for pdp11\" { \"pdp11-*-*\" } { \"*\" } { \"\" } } */ \n-/* { dg-skip-if \"non-SI pointers for w64\" { \"x86_64-*-mingw*\" } { \"*\" } { \"\" } } */ \n+/* { dg-require-effective-target ptr32plus } */\n \n /* This testcase tests whether GCC can produce static initialized data\n    that references addresses of size 'unsigned long', even if that's not"}, {"sha": "d2e186a7182c7d91b8b2510a1da70240d37aae6a", "filename": "gcc/testsuite/gcc.c-torture/compile/20020604-1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1557372804d6b0cbdf1049d8a20c00b54a67d47/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20020604-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1557372804d6b0cbdf1049d8a20c00b54a67d47/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20020604-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20020604-1.c?ref=f1557372804d6b0cbdf1049d8a20c00b54a67d47", "patch": "@@ -1,7 +1,6 @@\n /* { dg-do assemble } */\n-/* { dg-skip-if \"The array is too big\" { \"avr-*-*\" \"pdp11-*-*\" } { \"*\" } { \"\" } } */ \n+/* { dg-require-effective-target ptr32plus } */\n /* { dg-xfail-if \"The array too big\" { \"h8300-*-*\" } { \"-mno-h\" \"-mn\" } { \"\" } } */\n-/* { dg-skip-if \"\" { m32c-*-* } { } { } } */\n \n /* PR c/6957\n    This testcase ICEd at -O2 on IA-32, because"}, {"sha": "4b3b7c2c142e52c31b61d443925d651f4adb6a93", "filename": "gcc/testsuite/gcc.c-torture/compile/20080625-1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1557372804d6b0cbdf1049d8a20c00b54a67d47/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20080625-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1557372804d6b0cbdf1049d8a20c00b54a67d47/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20080625-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20080625-1.c?ref=f1557372804d6b0cbdf1049d8a20c00b54a67d47", "patch": "@@ -1,4 +1,5 @@\n-/* { dg-skip-if \"too much data\" { \"avr-*-*\" \"m32c-*-*\" \"pdp11-*-*\" } { \"*\" } { \"\" } } */\n+/* { dg-require-effective-target int32plus } */\n+\n struct peakbufStruct {\n     unsigned int lnum [5000];\n     int lscan [5000][4000];"}, {"sha": "350b96a61c8605fb19d1c57342760207067822a0", "filename": "gcc/testsuite/gcc.c-torture/compile/990617-1.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1557372804d6b0cbdf1049d8a20c00b54a67d47/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F990617-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1557372804d6b0cbdf1049d8a20c00b54a67d47/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F990617-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F990617-1.c?ref=f1557372804d6b0cbdf1049d8a20c00b54a67d47", "patch": "@@ -1,7 +1,5 @@\n-/* 0x70000000 is too large a constant to become a pointer on\n-   xstormy16. */\n /* { dg-do assemble } */\n-/* { dg-xfail-if \"\" { xstormy16-*-* } { \"*\" } { \"\" } } */\n+/* { dg-require-effective-target ptr32plus } */\n \n int main()\n {"}, {"sha": "1241058a0735bdbcb91d5eea267131c4cc1d8791", "filename": "gcc/testsuite/gcc.c-torture/compile/calls.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1557372804d6b0cbdf1049d8a20c00b54a67d47/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1557372804d6b0cbdf1049d8a20c00b54a67d47/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fcalls.c?ref=f1557372804d6b0cbdf1049d8a20c00b54a67d47", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target ptr32plus } */\n typedef void  *(*T)(void);\n f1 ()\n {"}, {"sha": "17afe73088367f94762e1a824f1c0038da1763a9", "filename": "gcc/testsuite/gcc.c-torture/compile/limits-externdecl.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1557372804d6b0cbdf1049d8a20c00b54a67d47/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Flimits-externdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1557372804d6b0cbdf1049d8a20c00b54a67d47/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Flimits-externdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Flimits-externdecl.c?ref=f1557372804d6b0cbdf1049d8a20c00b54a67d47", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target int32plus } */\n /* Inspired by the test case for PR middle-end/52640.  */\n \n typedef struct\n@@ -52,4 +53,4 @@ LIM5 (X);\n REFERENCE references[] = {\n   LIM5 (X)\n   0\n-}; /* { dg-error \"size of array is too large\" \"\" { target avr-*-* } } */\n+};"}, {"sha": "e1e48063a94f2cbab4d788e8e1dfde0b3064ce38", "filename": "gcc/testsuite/gcc.c-torture/compile/pr41181.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1557372804d6b0cbdf1049d8a20c00b54a67d47/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr41181.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1557372804d6b0cbdf1049d8a20c00b54a67d47/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr41181.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr41181.c?ref=f1557372804d6b0cbdf1049d8a20c00b54a67d47", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target ptr32plus } */\n /* { dg-skip-if \"The array is too big\" { \"avr-*-*\" \"pdp11-*-*\" } { \"*\" } { \"\" } } */ \n char paths[1024];\n static void x264_slicetype_path(char (*best_paths)[250], int n, int length)"}, {"sha": "cd96d56e8bbdf0090e59585cbba20ab2e041c54c", "filename": "gcc/testsuite/gcc.c-torture/compile/pr55955.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1557372804d6b0cbdf1049d8a20c00b54a67d47/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr55955.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1557372804d6b0cbdf1049d8a20c00b54a67d47/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr55955.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr55955.c?ref=f1557372804d6b0cbdf1049d8a20c00b54a67d47", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target int32plus } */\n /* PR tree-optimization/55955 */\n \n int b;"}, {"sha": "7eb4dfeec0e8fbae770e4dc2206108bcbd559a7a", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1557372804d6b0cbdf1049d8a20c00b54a67d47/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1557372804d6b0cbdf1049d8a20c00b54a67d47/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=f1557372804d6b0cbdf1049d8a20c00b54a67d47", "patch": "@@ -1751,6 +1751,13 @@ proc check_effective_target_int32plus { } {\n # options, 0 otherwise.\n \n proc check_effective_target_ptr32plus { } {\n+    # The msp430 has 16-bit or 20-bit pointers.  The 20-bit pointer is stored\n+    # in a 32-bit slot when in memory, so sizeof(void *) returns 4, but it\n+    # cannot really hold a 32-bit address, so we always return false here.\n+    if { [istarget msp430-*-*] } {\n+        return 0\n+    }\n+ \n     return [check_no_compiler_messages ptr32plus object {\n \tint dummy[sizeof (void *) >= 4 ? 1 : -1];\n     }]"}]}