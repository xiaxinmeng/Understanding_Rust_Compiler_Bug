{"sha": "d3e4cd01375171e510f11d31982b6c3d52ed1b2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDNlNGNkMDEzNzUxNzFlNTEwZjExZDMxOTgyYjZjM2Q1MmVkMWIyYw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2005-11-13T07:34:50Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2005-11-13T07:34:50Z"}, "message": "re PR c++/22489 (ICE in dwarf2out_finish with using namespace in a local class and compiler built constructors)\n\n        PR c++/22489\n        * dwarf2out.c (gen_subprogram_die): Force a declaration die for\n        lazily declared methods.\n        (force_decl_die): Stop if forcing out the context already make a\n        DIE for the decl.\n        (force_type_die): Likewise.\n\nFrom-SVN: r106853", "tree": {"sha": "b01d7315da05ef072506a584a05cf979f616f66f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b01d7315da05ef072506a584a05cf979f616f66f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3e4cd01375171e510f11d31982b6c3d52ed1b2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3e4cd01375171e510f11d31982b6c3d52ed1b2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3e4cd01375171e510f11d31982b6c3d52ed1b2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3e4cd01375171e510f11d31982b6c3d52ed1b2c/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "646c38e94ef62cff1e755f6d4fe67e143d7c6739", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/646c38e94ef62cff1e755f6d4fe67e143d7c6739", "html_url": "https://github.com/Rust-GCC/gccrs/commit/646c38e94ef62cff1e755f6d4fe67e143d7c6739"}], "stats": {"total": 57, "additions": 52, "deletions": 5}, "files": [{"sha": "c2932f59fc16b6989111c4d7cfff7e0095626b1f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3e4cd01375171e510f11d31982b6c3d52ed1b2c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3e4cd01375171e510f11d31982b6c3d52ed1b2c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d3e4cd01375171e510f11d31982b6c3d52ed1b2c", "patch": "@@ -1,3 +1,12 @@\n+2005-11-13  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/22489\n+\t* dwarf2out.c (gen_subprogram_die): Force a declaration die for\n+\tlazily declared methods.\n+\t(force_decl_die): Stop if forcing out the context already make a\n+\tDIE for the decl.\n+\t(force_type_die): Likewise.\n+\n 2005-11-13  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR middle-end/24820"}, {"sha": "f7a006e8980d41d6668f3cc3741aaa77bd5dc2e8", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3e4cd01375171e510f11d31982b6c3d52ed1b2c/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3e4cd01375171e510f11d31982b6c3d52ed1b2c/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=d3e4cd01375171e510f11d31982b6c3d52ed1b2c", "patch": "@@ -11478,6 +11478,14 @@ gen_subprogram_die (tree decl, dw_die_ref context_die)\n       gcc_assert (!old_die);\n     }\n \n+  /* Now that the C++ front end lazily declares artificial member fns, we\n+     might need to retrofit the declaration into its class.  */\n+  if (!declaration && !origin && !old_die\n+      && DECL_CONTEXT (decl) && TYPE_P (DECL_CONTEXT (decl))\n+      && !class_or_namespace_scope_p (context_die)\n+      && debug_info_level > DINFO_LEVEL_TERSE)\n+    old_die = force_decl_die (decl);\n+\n   if (origin != NULL)\n     {\n       gcc_assert (!declaration || local_scope_p (context_die));\n@@ -11579,7 +11587,7 @@ gen_subprogram_die (tree decl, dw_die_ref context_die)\n \n \t     Note that force_decl_die() forces function declaration die. It is\n \t     later reused to represent definition.  */\n-\t    equate_decl_number_to_die (decl, subr_die);\n+\t  equate_decl_number_to_die (decl, subr_die);\n \t}\n     }\n   else if (DECL_ABSTRACT (decl))\n@@ -12790,6 +12798,10 @@ force_decl_die (tree decl)\n       else\n \tcontext_die = comp_unit_die;\n \n+      decl_die = lookup_decl_die (decl);\n+      if (decl_die)\n+\treturn decl_die;\n+\n       switch (TREE_CODE (decl))\n \t{\n \tcase FUNCTION_DECL:\n@@ -12840,13 +12852,18 @@ force_type_die (tree type)\n     {\n       dw_die_ref context_die;\n       if (TYPE_CONTEXT (type))\n-\tif (TYPE_P (TYPE_CONTEXT (type)))\n-\t  context_die = force_type_die (TYPE_CONTEXT (type));\n-\telse\n-\t  context_die = force_decl_die (TYPE_CONTEXT (type));\n+\t{\n+\t  if (TYPE_P (TYPE_CONTEXT (type)))\n+\t    context_die = force_type_die (TYPE_CONTEXT (type));\n+\t  else\n+\t    context_die = force_decl_die (TYPE_CONTEXT (type));\n+\t}\n       else\n \tcontext_die = comp_unit_die;\n \n+      type_die = lookup_type_die (type);\n+      if (type_die)\n+\treturn type_die;\n       gen_type_die (type, context_die);\n       type_die = lookup_type_die (type);\n       gcc_assert (type_die);"}, {"sha": "94f0deae78c9b353869b5861d768e5a705888a1d", "filename": "gcc/testsuite/g++.dg/debug/using2.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3e4cd01375171e510f11d31982b6c3d52ed1b2c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fusing2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3e4cd01375171e510f11d31982b6c3d52ed1b2c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fusing2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fusing2.C?ref=d3e4cd01375171e510f11d31982b6c3d52ed1b2c", "patch": "@@ -0,0 +1,21 @@\n+// PR c++/22489\n+\n+namespace N { }\n+\n+struct T\n+{\n+  T () { }\n+};\n+\n+void\n+bar ()\n+{\n+  struct U : public T\n+  {\n+    void baz ()\n+    {\n+      using namespace N;\n+    }\n+  } u;\n+  u.baz();\n+}"}]}