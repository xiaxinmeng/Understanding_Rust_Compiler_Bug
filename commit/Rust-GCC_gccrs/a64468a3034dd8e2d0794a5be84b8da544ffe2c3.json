{"sha": "a64468a3034dd8e2d0794a5be84b8da544ffe2c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTY0NDY4YTMwMzRkZDhlMmQwNzk0YTViZTg0YjhkYTU0NGZmZTJjMw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-04-17T07:19:32Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-04-17T08:38:45Z"}, "message": "fix PVS studio reported bugs\n\n2020-04-17  Richard Biener  <rguenther@suse.de>\n\n\tPR other/94629\n\t* cgraphclones.c (cgraph_node::create_clone): Remove duplicate\n\tinitialization.\n\t* dwarf2out.c (dw_val_equal_p): Fix pasto in\n\tdw_val_class_vms_delta comparison.\n\t* optabs.c (expand_binop_directly): Fix pasto in commutation\n\tcheck.\n\t* tree-ssa-sccvn.c (vn_reference_lookup_pieces): Fix pasto in\n\tinitialization.", "tree": {"sha": "ff3843bd25bd6f1d0aa8dd77132bf5f7bc8ca8e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff3843bd25bd6f1d0aa8dd77132bf5f7bc8ca8e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a64468a3034dd8e2d0794a5be84b8da544ffe2c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a64468a3034dd8e2d0794a5be84b8da544ffe2c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a64468a3034dd8e2d0794a5be84b8da544ffe2c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a64468a3034dd8e2d0794a5be84b8da544ffe2c3/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c41884a09206be0e21cad7eea71b9754daa969d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c41884a09206be0e21cad7eea71b9754daa969d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c41884a09206be0e21cad7eea71b9754daa969d4"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "d2aa482b2e081dc2f3e0eb2f68c6d43eab205068", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a64468a3034dd8e2d0794a5be84b8da544ffe2c3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a64468a3034dd8e2d0794a5be84b8da544ffe2c3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a64468a3034dd8e2d0794a5be84b8da544ffe2c3", "patch": "@@ -1,3 +1,15 @@\n+2020-04-17  Richard Biener  <rguenther@suse.de>\n+\n+\tPR other/94629\n+\t* cgraphclones.c (cgraph_node::create_clone): Remove duplicate\n+\tinitialization.\n+\t* dwarf2out.c (dw_val_equal_p): Fix pasto in\n+\tdw_val_class_vms_delta comparison.\n+\t* optabs.c (expand_binop_directly): Fix pasto in commutation\n+\tcheck.\n+\t* tree-ssa-sccvn.c (vn_reference_lookup_pieces): Fix pasto in\n+\tinitialization.\n+\n 2020-04-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/94618"}, {"sha": "e4f1c1d4b5ebbf8549d52ac19a3d1d9887242070", "filename": "gcc/cgraphclones.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a64468a3034dd8e2d0794a5be84b8da544ffe2c3/gcc%2Fcgraphclones.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a64468a3034dd8e2d0794a5be84b8da544ffe2c3/gcc%2Fcgraphclones.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphclones.c?ref=a64468a3034dd8e2d0794a5be84b8da544ffe2c3", "patch": "@@ -404,7 +404,6 @@ cgraph_node::create_clone (tree new_decl, profile_count prof_count,\n   new_node->tp_first_run = tp_first_run;\n   new_node->tm_clone = tm_clone;\n   new_node->icf_merged = icf_merged;\n-  new_node->merged_comdat = merged_comdat;\n   new_node->thunk = thunk;\n   new_node->unit_id = unit_id;\n   new_node->merged_comdat = merged_comdat;"}, {"sha": "787340e92793a9b70b53b04c900bf4f1f2d29e44", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a64468a3034dd8e2d0794a5be84b8da544ffe2c3/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a64468a3034dd8e2d0794a5be84b8da544ffe2c3/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=a64468a3034dd8e2d0794a5be84b8da544ffe2c3", "patch": "@@ -1479,7 +1479,7 @@ dw_val_equal_p (dw_val_node *a, dw_val_node *b)\n \n     case dw_val_class_vms_delta:\n       return (!strcmp (a->v.val_vms_delta.lbl1, b->v.val_vms_delta.lbl1)\n-              && !strcmp (a->v.val_vms_delta.lbl1, b->v.val_vms_delta.lbl1));\n+\t      && !strcmp (a->v.val_vms_delta.lbl2, b->v.val_vms_delta.lbl2));\n \n     case dw_val_class_discr_value:\n       return (a->v.val_discr_value.pos == b->v.val_discr_value.pos"}, {"sha": "1456e59ffa7eba12d0d2ae10862038cb4ea4b00e", "filename": "gcc/optabs.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a64468a3034dd8e2d0794a5be84b8da544ffe2c3/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a64468a3034dd8e2d0794a5be84b8da544ffe2c3/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=a64468a3034dd8e2d0794a5be84b8da544ffe2c3", "patch": "@@ -1050,7 +1050,7 @@ expand_binop_directly (enum insn_code icode, machine_mode mode, optab binoptab,\n   commutative_p = commutative_optab_p (binoptab);\n   if (commutative_p\n       && GET_MODE (xop0) != xmode0 && GET_MODE (xop1) != xmode1\n-      && GET_MODE (xop0) == xmode1 && GET_MODE (xop1) == xmode1)\n+      && GET_MODE (xop0) == xmode1 && GET_MODE (xop1) == xmode0)\n     std::swap (xop0, xop1);\n \n   /* If we are optimizing, force expensive constants into a register.  */"}, {"sha": "238931d3f3e8c4f860c62f1b10fc4edf3732133f", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a64468a3034dd8e2d0794a5be84b8da544ffe2c3/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a64468a3034dd8e2d0794a5be84b8da544ffe2c3/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=a64468a3034dd8e2d0794a5be84b8da544ffe2c3", "patch": "@@ -3446,7 +3446,7 @@ vn_reference_lookup_pieces (tree vuse, alias_set_type set,\n     = valueize_refs (shared_lookup_references);\n   vr1.type = type;\n   vr1.set = set;\n-  vr1.set = base_set;\n+  vr1.base_set = base_set;\n   vr1.hashcode = vn_reference_compute_hash (&vr1);\n   if ((cst = fully_constant_vn_reference_p (&vr1)))\n     return cst;"}]}