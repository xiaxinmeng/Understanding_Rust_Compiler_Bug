{"sha": "635b0b0cfcbad6c9807d58307d316072f1303011", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM1YjBiMGNmY2JhZDZjOTgwN2Q1ODMwN2QzMTYwNzJmMTMwMzAxMQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2013-01-02T11:43:22Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2013-01-02T11:43:22Z"}, "message": "tree-vrp.c (range_fits_type_p): Require the MSB of the double_int to be clear for sign changes.\n\ngcc/\n\t* tree-vrp.c (range_fits_type_p): Require the MSB of the double_int\n\tto be clear for sign changes.\n\ngcc/testsuite/\n\t* gcc.dg/torture/fp-int-convert-2.c: New test.\n\nFrom-SVN: r194800", "tree": {"sha": "eaf13caf18386a72a6812debdbf74552de5aaa98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eaf13caf18386a72a6812debdbf74552de5aaa98"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/635b0b0cfcbad6c9807d58307d316072f1303011", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/635b0b0cfcbad6c9807d58307d316072f1303011", "html_url": "https://github.com/Rust-GCC/gccrs/commit/635b0b0cfcbad6c9807d58307d316072f1303011", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/635b0b0cfcbad6c9807d58307d316072f1303011/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4ff4293f15f3a442f6552e764d2127640932b253", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ff4293f15f3a442f6552e764d2127640932b253", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ff4293f15f3a442f6552e764d2127640932b253"}], "stats": {"total": 35, "additions": 32, "deletions": 3}, "files": [{"sha": "f686cf6718bb8c56b5914018597f8b93b490b932", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/635b0b0cfcbad6c9807d58307d316072f1303011/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/635b0b0cfcbad6c9807d58307d316072f1303011/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=635b0b0cfcbad6c9807d58307d316072f1303011", "patch": "@@ -1,3 +1,8 @@\n+2013-01-02  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* tree-vrp.c (range_fits_type_p): Require the MSB of the double_int\n+\tto be clear for sign changes.\n+\n 2013-01-01  Jan Hubicka  <jh@suse.cz>\n \n \t* ipa-inline-analysis.c: Fix formatting."}, {"sha": "faa12fd5a49046e9424a965db6987e0fe8503d06", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/635b0b0cfcbad6c9807d58307d316072f1303011/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/635b0b0cfcbad6c9807d58307d316072f1303011/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=635b0b0cfcbad6c9807d58307d316072f1303011", "patch": "@@ -1,3 +1,7 @@\n+2013-01-02  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* gcc.dg/torture/fp-int-convert-2.c: New test.\n+\n 2013-01-01  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \t* gfortran.dg/newunit_3.f90: Add dg-do run."}, {"sha": "4c00e8fa71fbaa3dd83205381a599f6271f8b889", "filename": "gcc/testsuite/gcc.dg/torture/fp-int-convert-2.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/635b0b0cfcbad6c9807d58307d316072f1303011/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ffp-int-convert-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/635b0b0cfcbad6c9807d58307d316072f1303011/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ffp-int-convert-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ffp-int-convert-2.c?ref=635b0b0cfcbad6c9807d58307d316072f1303011", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target int128 } */\n+\n+extern void abort (void);\n+\n+float __attribute__((noinline))\n+f (__uint128_t x)\n+{\n+  return x + 1;\n+}\n+\n+int\n+main (void)\n+{\n+  if (f (0xffffffffu) == 0)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "6b8cbf38d847c46141c5ed591f2bb7472ae906ec", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/635b0b0cfcbad6c9807d58307d316072f1303011/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/635b0b0cfcbad6c9807d58307d316072f1303011/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=635b0b0cfcbad6c9807d58307d316072f1303011", "patch": "@@ -8766,9 +8766,11 @@ range_fits_type_p (value_range_t *vr, unsigned precision, bool unsigned_p)\n       || TREE_CODE (vr->max) != INTEGER_CST)\n     return false;\n \n-  /* For precision-preserving sign-changes the MSB of the double-int\n-     has to be clear.  */\n-  if (src_precision == precision\n+  /* For sign changes, the MSB of the double_int has to be clear.\n+     An unsigned value with its MSB set cannot be represented by\n+     a signed double_int, while a negative value cannot be represented\n+     by an unsigned double_int.  */\n+  if (TYPE_UNSIGNED (src_type) != unsigned_p\n       && (TREE_INT_CST_HIGH (vr->min) | TREE_INT_CST_HIGH (vr->max)) < 0)\n     return false;\n "}]}