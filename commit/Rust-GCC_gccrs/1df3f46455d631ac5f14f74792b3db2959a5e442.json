{"sha": "1df3f46455d631ac5f14f74792b3db2959a5e442", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWRmM2Y0NjQ1NWQ2MzFhYzVmMTRmNzQ3OTJiM2RiMjk1OWE1ZTQ0Mg==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2013-02-28T17:10:53Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2013-02-28T17:10:53Z"}, "message": "[AArch64/AArch64-4.7] Fix warning - aarch64_simd_make_constant has no prototype.\n\ngcc/\n\t* config/aarch64/aarch64.c\n\t(aarch64_simd_make_constant): Make static.\n\nFrom-SVN: r196345", "tree": {"sha": "e207246dc434f2f240981d6c41840fa32c832efb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e207246dc434f2f240981d6c41840fa32c832efb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1df3f46455d631ac5f14f74792b3db2959a5e442", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1df3f46455d631ac5f14f74792b3db2959a5e442", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1df3f46455d631ac5f14f74792b3db2959a5e442", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1df3f46455d631ac5f14f74792b3db2959a5e442/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c966f2deb7d1b4427e8f9c3a94f50e7d98887ac0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c966f2deb7d1b4427e8f9c3a94f50e7d98887ac0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c966f2deb7d1b4427e8f9c3a94f50e7d98887ac0"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "255834b9befdeb0ec007fd19e04eba65b8e096ea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1df3f46455d631ac5f14f74792b3db2959a5e442/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1df3f46455d631ac5f14f74792b3db2959a5e442/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1df3f46455d631ac5f14f74792b3db2959a5e442", "patch": "@@ -1,3 +1,8 @@\n+2013-02-28  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* config/aarch64/aarch64.c\n+\t(aarch64_simd_make_constant): Make static.\n+\n 2013-02-28  Martin Jambor  <mjambor@suse.cz>\n \n \t* tree-sra.c (load_assign_lhs_subreplacements): Do not put replacements"}, {"sha": "f091297114282f5adcf13fd168ad9af6058d4191", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1df3f46455d631ac5f14f74792b3db2959a5e442/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1df3f46455d631ac5f14f74792b3db2959a5e442/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=1df3f46455d631ac5f14f74792b3db2959a5e442", "patch": "@@ -6586,7 +6586,7 @@ aarch64_simd_dup_constant (rtx vals)\n    constants (for vec_init) or CONST_VECTOR, efficiently into a\n    register.  Returns an RTX to copy into the register, or NULL_RTX\n    for a PARALLEL that can not be converted into a CONST_VECTOR.  */\n-rtx\n+static rtx\n aarch64_simd_make_constant (rtx vals)\n {\n   enum machine_mode mode = GET_MODE (vals);"}]}