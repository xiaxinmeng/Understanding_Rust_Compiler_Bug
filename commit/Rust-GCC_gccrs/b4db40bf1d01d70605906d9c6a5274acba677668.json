{"sha": "b4db40bf1d01d70605906d9c6a5274acba677668", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRkYjQwYmYxZDAxZDcwNjA1OTA2ZDljNmE1Mjc0YWNiYTY3NzY2OA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2004-06-29T19:27:07Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2004-06-29T19:27:07Z"}, "message": "re PR target/16195 ([3.4 only] Miscompilation of GCC 3.3.x by 3.4.x)\n\n\tPR target/16195\n\t* config/rs6000/rs6000.c (rs6000_conditional_register_usage): Make\n\tr30 fixed if TARGET_TOC && TARGET_MINIMAL_TOC.\n\t(first_reg_to_save): Pretend call_used_regs[30] is 0 if\n\tTARGET_TOC && TARGET_MINIMAL_TOC.\n\t(rs6000_emit_prologue, rs6000_emit_epilogue): Likewise.\n\n\t* gcc.dg/20040625-1.c: New test.\n\nFrom-SVN: r83872", "tree": {"sha": "e6d98ee2b5e7a183363c1d90876fddc8ca385777", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6d98ee2b5e7a183363c1d90876fddc8ca385777"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4db40bf1d01d70605906d9c6a5274acba677668", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4db40bf1d01d70605906d9c6a5274acba677668", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4db40bf1d01d70605906d9c6a5274acba677668", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4db40bf1d01d70605906d9c6a5274acba677668/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9056bd70254731635be255e7aed12fae1aa3705f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9056bd70254731635be255e7aed12fae1aa3705f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9056bd70254731635be255e7aed12fae1aa3705f"}], "stats": {"total": 67, "additions": 64, "deletions": 3}, "files": [{"sha": "be03295f9c6bda37c9c55dbfc4ddeeff82aed74e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4db40bf1d01d70605906d9c6a5274acba677668/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4db40bf1d01d70605906d9c6a5274acba677668/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b4db40bf1d01d70605906d9c6a5274acba677668", "patch": "@@ -1,3 +1,12 @@\n+2004-06-29  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/16195\n+\t* config/rs6000/rs6000.c (rs6000_conditional_register_usage): Make\n+\tr30 fixed if TARGET_TOC && TARGET_MINIMAL_TOC.\n+\t(first_reg_to_save): Pretend call_used_regs[30] is 0 if\n+\tTARGET_TOC && TARGET_MINIMAL_TOC.\n+\t(rs6000_emit_prologue, rs6000_emit_epilogue): Likewise.\n+\n 2004-06-29  J\"orn Rennecke <joern.rennecke@superh.com>\n \n \tFix gcc.dg/builtin-apply2.c failures:"}, {"sha": "f91e3f67814843a7881fbff88560d41452af0186", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4db40bf1d01d70605906d9c6a5274acba677668/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4db40bf1d01d70605906d9c6a5274acba677668/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=b4db40bf1d01d70605906d9c6a5274acba677668", "patch": "@@ -3480,6 +3480,10 @@ rs6000_conditional_register_usage (void)\n       = call_used_regs[RS6000_PIC_OFFSET_TABLE_REGNUM]\n       = call_really_used_regs[RS6000_PIC_OFFSET_TABLE_REGNUM] = 1;\n \n+  if (TARGET_TOC && TARGET_MINIMAL_TOC)\n+    fixed_regs[RS6000_PIC_OFFSET_TABLE_REGNUM]\n+      = call_used_regs[RS6000_PIC_OFFSET_TABLE_REGNUM] = 1;\n+\n   if (TARGET_ALTIVEC)\n     global_regs[VSCR_REGNO] = 1;\n \n@@ -10834,7 +10838,8 @@ first_reg_to_save (void)\n \t&& (! call_used_regs[first_reg]\n \t    || (first_reg == RS6000_PIC_OFFSET_TABLE_REGNUM\n \t\t&& ((DEFAULT_ABI == ABI_V4 && flag_pic != 0)\n-\t\t    || (DEFAULT_ABI == ABI_DARWIN && flag_pic)))))\n+\t\t    || (DEFAULT_ABI == ABI_DARWIN && flag_pic)\n+\t\t    || (TARGET_TOC && TARGET_MINIMAL_TOC)))))\n       break;\n \n #if TARGET_MACHO\n@@ -12428,7 +12433,10 @@ rs6000_emit_prologue (void)\n       int i;\n       for (i = 0; i < 32 - info->first_gp_reg_save; i++)\n \tif ((regs_ever_live[info->first_gp_reg_save+i] \n-\t     && ! call_used_regs[info->first_gp_reg_save+i])\n+\t     && (! call_used_regs[info->first_gp_reg_save+i]\n+\t\t || (i+info->first_gp_reg_save\n+\t\t     == RS6000_PIC_OFFSET_TABLE_REGNUM\n+\t\t     && TARGET_TOC && TARGET_MINIMAL_TOC)))\n \t    || (i+info->first_gp_reg_save == RS6000_PIC_OFFSET_TABLE_REGNUM\n \t\t&& ((DEFAULT_ABI == ABI_V4 && flag_pic != 0)\n \t\t    || (DEFAULT_ABI == ABI_DARWIN && flag_pic))))\n@@ -12877,7 +12885,9 @@ rs6000_emit_epilogue (int sibcall)\n   else\n     for (i = 0; i < 32 - info->first_gp_reg_save; i++)\n       if ((regs_ever_live[info->first_gp_reg_save+i] \n-\t   && ! call_used_regs[info->first_gp_reg_save+i])\n+\t   && (! call_used_regs[info->first_gp_reg_save+i]\n+\t       || (i+info->first_gp_reg_save == RS6000_PIC_OFFSET_TABLE_REGNUM\n+\t\t   && TARGET_TOC && TARGET_MINIMAL_TOC)))\n \t  || (i+info->first_gp_reg_save == RS6000_PIC_OFFSET_TABLE_REGNUM\n \t      && ((DEFAULT_ABI == ABI_V4 && flag_pic != 0)\n \t\t  || (DEFAULT_ABI == ABI_DARWIN && flag_pic))))"}, {"sha": "1239de739fb80168f8deecf22b6526afaeac051d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4db40bf1d01d70605906d9c6a5274acba677668/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4db40bf1d01d70605906d9c6a5274acba677668/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b4db40bf1d01d70605906d9c6a5274acba677668", "patch": "@@ -1,3 +1,8 @@\n+2004-06-29  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/16195\n+\t* gcc.dg/20040625-1.c: New test.\n+\n 2004-06-29  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \t* gfortran.fortran-torture/execute/parameter_2.f90: New test."}, {"sha": "e05e87c9124556e1bf03f8cae78a1d3bf263f700", "filename": "gcc/testsuite/gcc.dg/20040625-1.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4db40bf1d01d70605906d9c6a5274acba677668/gcc%2Ftestsuite%2Fgcc.dg%2F20040625-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4db40bf1d01d70605906d9c6a5274acba677668/gcc%2Ftestsuite%2Fgcc.dg%2F20040625-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20040625-1.c?ref=b4db40bf1d01d70605906d9c6a5274acba677668", "patch": "@@ -0,0 +1,37 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-options \"-mminimal-toc\" { target powerpc64-*-* powerpc-ibm-aix* } } */\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n+double __attribute__((noinline))\n+foo (void)\n+{\n+  return 16441577472.0;\n+}\n+\n+double __attribute__((noinline))\n+bar (double x)\n+{\n+  return x;\n+}\n+\n+int __attribute__((noinline))\n+test (void)\n+{\n+  double x = foo ();\n+  x = bar (x);\n+  x /= 1024 * 1024 * 1024;\n+  x *= 70;\n+  x = x < 70 ? x : 70;\n+  x += 30;\n+  return x;\n+}\n+\n+int main (void)\n+{\n+  if (test () != 100)\n+    abort ();\n+  exit (0);\n+}"}]}