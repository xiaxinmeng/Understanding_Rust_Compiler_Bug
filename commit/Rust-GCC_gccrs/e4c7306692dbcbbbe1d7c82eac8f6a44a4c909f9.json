{"sha": "e4c7306692dbcbbbe1d7c82eac8f6a44a4c909f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTRjNzMwNjY5MmRiY2JiYmUxZDdjODJlYWM4ZjZhNDRhNGM5MDlmOQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-02-07T10:14:25Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-02-07T10:14:25Z"}, "message": "re PR tree-optimization/84204 ([graphite] ICE in set_codegen_error, at graphite-isl-ast-to-gimple.c:206)\n\n2018-02-07  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/84204\n\t* tree-chrec.c (chrec_fold_plus_1): Remove size limiting in\n\tthis place.\n\n\t* gcc.dg/graphite/pr84204.c: New testcase.\n\n\tPR tree-optimization/84205\n\t* graphite-isl-ast-to-gimple.c (binary_op_to_tree): Also\n\tspecial-case isl_ast_op_zdiv_r.\n\n\t* gcc.dg/graphite/pr84205.c: New testcase.\n\n\tPR tree-optimization/84223\n\t* graphite-scop-detection.c (gather_bbs::before_dom_children):\n\tOnly add conditions from within the region.\n\t(gather_bbs::after_dom_children): Adjust.\n\n\t* gfortran.dg/graphite/pr84223.f90: New testcase.\n\nFrom-SVN: r257441", "tree": {"sha": "cc1ac1fc8d9d20c2c7146aca053323f09070d271", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc1ac1fc8d9d20c2c7146aca053323f09070d271"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4c7306692dbcbbbe1d7c82eac8f6a44a4c909f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4c7306692dbcbbbe1d7c82eac8f6a44a4c909f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4c7306692dbcbbbe1d7c82eac8f6a44a4c909f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4c7306692dbcbbbe1d7c82eac8f6a44a4c909f9/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3924c9be0b45d920c140d56a7850b5a88b3eee5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3924c9be0b45d920c140d56a7850b5a88b3eee5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3924c9be0b45d920c140d56a7850b5a88b3eee5e"}], "stats": {"total": 109, "additions": 90, "deletions": 19}, "files": [{"sha": "7fc5914380650ad66a7537aca9ed60a66400361b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4c7306692dbcbbbe1d7c82eac8f6a44a4c909f9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4c7306692dbcbbbe1d7c82eac8f6a44a4c909f9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e4c7306692dbcbbbe1d7c82eac8f6a44a4c909f9", "patch": "@@ -1,3 +1,18 @@\n+2018-02-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/84204\n+\t* tree-chrec.c (chrec_fold_plus_1): Remove size limiting in\n+\tthis place.\n+\n+\tPR tree-optimization/84205\n+\t* graphite-isl-ast-to-gimple.c (binary_op_to_tree): Also\n+\tspecial-case isl_ast_op_zdiv_r.\n+\n+\tPR tree-optimization/84223\n+\t* graphite-scop-detection.c (gather_bbs::before_dom_children):\n+\tOnly add conditions from within the region.\n+\t(gather_bbs::after_dom_children): Adjust.\n+\n 2018-02-07  Georg-Johann Lay  <avr@gjlay.de>\n \n \tPR target/84209"}, {"sha": "b607b12434d0475c9035257f972023f610803dd5", "filename": "gcc/graphite-isl-ast-to-gimple.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4c7306692dbcbbbe1d7c82eac8f6a44a4c909f9/gcc%2Fgraphite-isl-ast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4c7306692dbcbbbe1d7c82eac8f6a44a4c909f9/gcc%2Fgraphite-isl-ast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-isl-ast-to-gimple.c?ref=e4c7306692dbcbbbe1d7c82eac8f6a44a4c909f9", "patch": "@@ -327,6 +327,7 @@ binary_op_to_tree (tree type, __isl_take isl_ast_expr *expr, ivs_params &ip)\n      we cannot represent explicitely but that are no-ops for TYPE.\n      Elide those.  */\n   if ((expr_type == isl_ast_op_pdiv_r\n+       || expr_type == isl_ast_op_zdiv_r\n        || expr_type == isl_ast_op_add)\n       && isl_ast_expr_get_type (arg_expr) == isl_ast_expr_int\n       && (wi::exact_log2 (widest_int_from_isl_expr_int (arg_expr))"}, {"sha": "43716f184485c5b9e0f855f5e0ed1bb30ebe8e05", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 17, "deletions": 12, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4c7306692dbcbbbe1d7c82eac8f6a44a4c909f9/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4c7306692dbcbbbe1d7c82eac8f6a44a4c909f9/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=e4c7306692dbcbbbe1d7c82eac8f6a44a4c909f9", "patch": "@@ -1453,18 +1453,19 @@ gather_bbs::before_dom_children (basic_block bb)\n \t}\n     }\n \n-  gcond *stmt = single_pred_cond_non_loop_exit (bb);\n-\n-  if (stmt)\n+  if (gcond *stmt = single_pred_cond_non_loop_exit (bb))\n     {\n       edge e = single_pred_edge (bb);\n-\n-      conditions.safe_push (stmt);\n-\n-      if (e->flags & EDGE_TRUE_VALUE)\n-\tcases.safe_push (stmt);\n-      else\n-\tcases.safe_push (NULL);\n+      /* Make sure the condition is in the region and thus was verified\n+         to be handled.  */\n+      if (e != region->region.entry)\n+\t{\n+\t  conditions.safe_push (stmt);\n+\t  if (e->flags & EDGE_TRUE_VALUE)\n+\t    cases.safe_push (stmt);\n+\t  else\n+\t    cases.safe_push (NULL);\n+\t}\n     }\n \n   scop->scop_info->bbs.safe_push (bb);\n@@ -1509,8 +1510,12 @@ gather_bbs::after_dom_children (basic_block bb)\n \n   if (single_pred_cond_non_loop_exit (bb))\n     {\n-      conditions.pop ();\n-      cases.pop ();\n+      edge e = single_pred_edge (bb);\n+      if (e != scop->scop_info->region.entry)\n+\t{\n+\t  conditions.pop ();\n+\t  cases.pop ();\n+\t}\n     }\n }\n "}, {"sha": "8506abea04ca7f0df350d168c9e873d0963dca3c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4c7306692dbcbbbe1d7c82eac8f6a44a4c909f9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4c7306692dbcbbbe1d7c82eac8f6a44a4c909f9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e4c7306692dbcbbbe1d7c82eac8f6a44a4c909f9", "patch": "@@ -1,3 +1,14 @@\n+2018-02-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/84204\n+\t* gcc.dg/graphite/pr84204.c: New testcase.\n+\n+\tPR tree-optimization/84205\n+\t* gcc.dg/graphite/pr84205.c: New testcase.\n+\n+\tPR tree-optimization/84223\n+\t* gfortran.dg/graphite/pr84223.f90: New testcase.\n+\n 2018-02-07  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/71662"}, {"sha": "91401df609df55738acfc2e372fa7a8aff9b0392", "filename": "gcc/testsuite/gcc.dg/graphite/pr84204.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4c7306692dbcbbbe1d7c82eac8f6a44a4c909f9/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr84204.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4c7306692dbcbbbe1d7c82eac8f6a44a4c909f9/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr84204.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr84204.c?ref=e4c7306692dbcbbbe1d7c82eac8f6a44a4c909f9", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -floop-parallelize-all -fno-tree-loop-im --param scev-max-expr-size=3\" } */\n+\n+int oc;\n+\n+void\n+mo (int xd)\n+{\n+  while (xd < 1)\n+    {\n+      for (oc = 0; oc < 2; ++oc)\n+\t{\n+\t}\n+\n+      ++xd;\n+    }\n+}"}, {"sha": "e502eb9e77c162477049d5f9fe69da2bb8742770", "filename": "gcc/testsuite/gcc.dg/graphite/pr84205.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4c7306692dbcbbbe1d7c82eac8f6a44a4c909f9/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr84205.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4c7306692dbcbbbe1d7c82eac8f6a44a4c909f9/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr84205.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr84205.c?ref=e4c7306692dbcbbbe1d7c82eac8f6a44a4c909f9", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -floop-nest-optimize -ftree-pre -fno-tree-loop-im\" } */\n+\n+long long unsigned int od;\n+int zj, fk, ea;\n+\n+void\n+ke (void)\n+{\n+  if (od != 0 && zj != 0)\n+    {\n+      for (fk = 0; fk < 2; ++fk)\n+\t{\n+\t}\n+\n+      if (od == (long long unsigned int) zj)\n+\tzj = 0;\n+\n+      for (ea = 0; ea < 2; ++ea)\n+\t{\n+\t}\n+    }\n+}"}, {"sha": "45b4c1793b1c055e36f51a34ade789e0141c2030", "filename": "gcc/testsuite/gfortran.dg/graphite/pr84223.f90", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4c7306692dbcbbbe1d7c82eac8f6a44a4c909f9/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr84223.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4c7306692dbcbbbe1d7c82eac8f6a44a4c909f9/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr84223.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr84223.f90?ref=e4c7306692dbcbbbe1d7c82eac8f6a44a4c909f9", "patch": "@@ -0,0 +1,3 @@\n+! { dg-do compile }\n+! { dg-options \"-fgraphite-identity -O1 --param sccvn-max-alias-queries-per-access=0\" }\n+   include \"../assumed_rank_bounds_2.f90\""}, {"sha": "04d33ef625f1959fb7e961bf212112ef7c2f76f7", "filename": "gcc/tree-chrec.c", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4c7306692dbcbbbe1d7c82eac8f6a44a4c909f9/gcc%2Ftree-chrec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4c7306692dbcbbbe1d7c82eac8f6a44a4c909f9/gcc%2Ftree-chrec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chrec.c?ref=e4c7306692dbcbbbe1d7c82eac8f6a44a4c909f9", "patch": "@@ -375,12 +375,10 @@ chrec_fold_plus_1 (enum tree_code code, tree type,\n \n \tdefault:\n \t  {\n-\t    int size = 0;\n-\t    if ((tree_contains_chrecs (op0, &size)\n-\t\t || tree_contains_chrecs (op1, &size))\n-\t\t&& size < PARAM_VALUE (PARAM_SCEV_MAX_EXPR_SIZE))\n+\t    if (tree_contains_chrecs (op0, NULL)\n+\t\t|| tree_contains_chrecs (op1, NULL))\n \t      return build2 (code, type, op0, op1);\n-\t    else if (size < PARAM_VALUE (PARAM_SCEV_MAX_EXPR_SIZE))\n+\t    else\n \t      {\n \t\tif (code == POINTER_PLUS_EXPR)\n \t\t  return fold_build_pointer_plus (fold_convert (type, op0),\n@@ -390,8 +388,6 @@ chrec_fold_plus_1 (enum tree_code code, tree type,\n \t\t\t\t      fold_convert (type, op0),\n \t\t\t\t      fold_convert (type, op1));\n \t      }\n-\t    else\n-\t      return chrec_dont_know;\n \t  }\n \t}\n     }"}]}