{"sha": "eb8845bedb5be6c8239555ab4303d518812eef36", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWI4ODQ1YmVkYjViZTZjODIzOTU1NWFiNDMwM2Q1MTg4MTJlZWYzNg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2002-07-08T02:25:19Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2002-07-08T02:25:19Z"}, "message": "Make-lang.in (cp/parse.o): Depend on decl.h.\n\n\t* Make-lang.in (cp/parse.o): Depend on decl.h.\n\t* cp-tree.h (do_decl_instantiation): Change prototype.\n\t* parse.y: Include decl.h.\n\t(parse_decl_instantiation): New function.\n\t(explicit_instantiation): Use it.\n\t* pt.c (do_decl_instantiation): Accept a DECL, not a DECLARATOR\n\tand DECLSPECS.\n\nFrom-SVN: r55309", "tree": {"sha": "2137063a251419203d558c5aca764a7faac6df92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2137063a251419203d558c5aca764a7faac6df92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb8845bedb5be6c8239555ab4303d518812eef36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb8845bedb5be6c8239555ab4303d518812eef36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb8845bedb5be6c8239555ab4303d518812eef36", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb8845bedb5be6c8239555ab4303d518812eef36/comments", "author": null, "committer": null, "parents": [{"sha": "5351f1ca744b9d3e5285ff813839df3e43fe40b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5351f1ca744b9d3e5285ff813839df3e43fe40b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5351f1ca744b9d3e5285ff813839df3e43fe40b4"}], "stats": {"total": 46, "additions": 33, "deletions": 13}, "files": [{"sha": "d54f99db315cdac8ad0c26fbb3fb016cd87015f6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb8845bedb5be6c8239555ab4303d518812eef36/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb8845bedb5be6c8239555ab4303d518812eef36/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=eb8845bedb5be6c8239555ab4303d518812eef36", "patch": "@@ -1,3 +1,13 @@\n+2002-07-07  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* Make-lang.in (cp/parse.o): Depend on decl.h.\n+\t* cp-tree.h (do_decl_instantiation): Change prototype.\n+\t* parse.y: Include decl.h.\n+\t(parse_decl_instantiation): New function.\n+\t(explicit_instantiation): Use it.\n+\t* pt.c (do_decl_instantiation): Accept a DECL, not a DECLARATOR\n+\tand DECLSPECS.\n+\t\n 2002-07-07  Roger Sayle  <roger@eyesopen.com>\n \n \t* error.c (dump_function_name): Use DECL_TEMPLATE_RESULT for"}, {"sha": "40d2388e0d84c7d18fa9d76fde730a65f939f769", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb8845bedb5be6c8239555ab4303d518812eef36/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb8845bedb5be6c8239555ab4303d518812eef36/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=eb8845bedb5be6c8239555ab4303d518812eef36", "patch": "@@ -301,7 +301,7 @@ cp/optimize.o: cp/optimize.c $(CXX_TREE_H) rtl.h integrate.h insn-config.h \\\n cp/mangle.o: cp/mangle.c $(CXX_TREE_H) toplev.h real.h\n \n cp/parse.o: cp/parse.c $(CXX_TREE_H) flags.h cp/lex.h except.h output.h \\\n-\t$(SYSTEM_H) toplev.h $(GGC_H) gt-cp-parse.h\n+\tcp/decl.h $(SYSTEM_H) toplev.h $(GGC_H) gt-cp-parse.h\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(BIG_SWITCHFLAG) \\\n \t\t$(srcdir)/cp/parse.c $(OUTPUT_OPTION)\n #\f"}, {"sha": "810522cc3df1aa450e8e808a0e32b5fab2c6c30e", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb8845bedb5be6c8239555ab4303d518812eef36/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb8845bedb5be6c8239555ab4303d518812eef36/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=eb8845bedb5be6c8239555ab4303d518812eef36", "patch": "@@ -4125,7 +4125,7 @@ extern tree tinst_for_decl\t\t\tPARAMS ((void));\n extern void mark_decl_instantiated\t\tPARAMS ((tree, int));\n extern int more_specialized\t\t\tPARAMS ((tree, tree, int, int));\n extern void mark_class_instantiated\t\tPARAMS ((tree, int));\n-extern void do_decl_instantiation\t\tPARAMS ((tree, tree, tree));\n+extern void do_decl_instantiation\t\t(tree, tree);\n extern void do_type_instantiation\t\tPARAMS ((tree, tree, tsubst_flags_t));\n extern tree instantiate_decl\t\t\tPARAMS ((tree, int));\n extern tree get_bindings\t\t\tPARAMS ((tree, tree, tree));"}, {"sha": "9f37a7e251ea5619b7a2f563e4cfd318ede91247", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb8845bedb5be6c8239555ab4303d518812eef36/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb8845bedb5be6c8239555ab4303d518812eef36/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=eb8845bedb5be6c8239555ab4303d518812eef36", "patch": "@@ -36,6 +36,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"input.h\"\n #include \"flags.h\"\n #include \"cp-tree.h\"\n+#include \"decl.h\"\n #include \"lex.h\"\n #include \"c-pragma.h\"\t\t/* For YYDEBUG definition.  */\n #include \"output.h\"\n@@ -132,6 +133,7 @@ static void check_class_key PARAMS ((tree, tree));\n static tree parse_scoped_id PARAMS ((tree));\n static tree parse_xref_tag (tree, tree, int);\n static tree parse_handle_class_head (tree, tree, tree, int, int *);\n+static void parse_decl_instantiation (tree, tree, tree);\n \n /* Cons up an empty parameter list.  */\n static inline tree\n@@ -1047,13 +1049,13 @@ explicit_instantiation:\n           end_explicit_instantiation\n \t| TEMPLATE begin_explicit_instantiation typed_declspecs declarator\n \t\t{ tree specs = strip_attrs ($3.t);\n-\t\t  do_decl_instantiation (specs, $4, NULL_TREE); }\n+\t\t  parse_decl_instantiation (specs, $4, NULL_TREE); }\n           end_explicit_instantiation\n \t| TEMPLATE begin_explicit_instantiation notype_declarator\n-\t\t{ do_decl_instantiation (NULL_TREE, $3, NULL_TREE); }\n+\t\t{ parse_decl_instantiation (NULL_TREE, $3, NULL_TREE); }\n           end_explicit_instantiation\n \t| TEMPLATE begin_explicit_instantiation constructor_declarator\n-\t\t{ do_decl_instantiation (NULL_TREE, $3, NULL_TREE); }\n+\t\t{ parse_decl_instantiation (NULL_TREE, $3, NULL_TREE); }\n           end_explicit_instantiation\n \t| SCSPEC TEMPLATE begin_explicit_instantiation typespec ';'\n \t\t{ do_type_instantiation ($4.t, $1, 1);\n@@ -1063,15 +1065,15 @@ explicit_instantiation:\n \t| SCSPEC TEMPLATE begin_explicit_instantiation typed_declspecs\n           declarator\n \t\t{ tree specs = strip_attrs ($4.t);\n-\t\t  do_decl_instantiation (specs, $5, $1); }\n+\t\t  parse_decl_instantiation (specs, $5, $1); }\n           end_explicit_instantiation\n \t\t{}\n \t| SCSPEC TEMPLATE begin_explicit_instantiation notype_declarator\n-\t\t{ do_decl_instantiation (NULL_TREE, $4, $1); }\n+\t\t{ parse_decl_instantiation (NULL_TREE, $4, $1); }\n           end_explicit_instantiation\n \t\t{}\n \t| SCSPEC TEMPLATE begin_explicit_instantiation constructor_declarator\n-\t\t{ do_decl_instantiation (NULL_TREE, $4, $1); }\n+\t\t{ parse_decl_instantiation (NULL_TREE, $4, $1); }\n           end_explicit_instantiation\n \t\t{}\n \t;\n@@ -4072,7 +4074,7 @@ parse_xref_tag (tree aggr, tree name, int globalize)\n   return xref_tag (tag_kind, name, attributes, globalize);\n }\n \n-/* Like handle_class_head, but AGGR may be as for parse_xref_tag. */\n+/* Like handle_class_head, but AGGR may be as for parse_xref_tag.  */\n \n static tree\n parse_handle_class_head (tree aggr, tree scope, tree id, \n@@ -4085,4 +4087,14 @@ parse_handle_class_head (tree aggr, tree scope, tree id,\n \t\t\t    defn_p, new_type_p);\n }\n \n+/* Like do_decl_instantiation, but the declarator has not yet been\n+   parsed.  */\n+\n+static void\n+parse_decl_instantiation (tree declspecs, tree declarator, tree storage)\n+{\n+  tree decl = grokdeclarator (declarator, declspecs, NORMAL, 0, NULL);\n+  do_decl_instantiation (decl, storage);\n+}\n+\n #include \"gt-cp-parse.h\""}, {"sha": "92933feb951b5f681a8c2d74aae94fa7c97953f0", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb8845bedb5be6c8239555ab4303d518812eef36/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb8845bedb5be6c8239555ab4303d518812eef36/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=eb8845bedb5be6c8239555ab4303d518812eef36", "patch": "@@ -9503,13 +9503,11 @@ most_specialized_class (tmpl, args)\n   return champ;\n }\n \n-/* called from the parser.  */\n+/* Explicitly instantiate DECL.  */\n \n void\n-do_decl_instantiation (declspecs, declarator, storage)\n-     tree declspecs, declarator, storage;\n+do_decl_instantiation (tree decl, tree storage)\n {\n-  tree decl = grokdeclarator (declarator, declspecs, NORMAL, 0, NULL);\n   tree result = NULL_TREE;\n   int extern_p = 0;\n "}]}