{"sha": "e13a41239fcc18a362856e167b7dcb97ca4ee1c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTEzYTQxMjM5ZmNjMThhMzYyODU2ZTE2N2I3ZGNiOTdjYTRlZTFjMg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-07-19T23:47:18Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-07-19T23:47:18Z"}, "message": "lex.c (do_identifier): Look for class value even if we don't have a global value.\n\n\t* lex.c (do_identifier): Look for class value even if we don't\n\thave a global value.  Do implicit declaration if parsing is 2.\n\t* semantics.c (finish_call_expr): Pass 2 if we're doing Koenig\n\tlookup.\n\nFrom-SVN: r21291", "tree": {"sha": "c4e8aebae28cb3468ed27a7406fc686f55c19dea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4e8aebae28cb3468ed27a7406fc686f55c19dea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e13a41239fcc18a362856e167b7dcb97ca4ee1c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e13a41239fcc18a362856e167b7dcb97ca4ee1c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e13a41239fcc18a362856e167b7dcb97ca4ee1c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e13a41239fcc18a362856e167b7dcb97ca4ee1c2/comments", "author": null, "committer": null, "parents": [{"sha": "077e7015e088e0f0ccbd442af857047c5dc10072", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/077e7015e088e0f0ccbd442af857047c5dc10072", "html_url": "https://github.com/Rust-GCC/gccrs/commit/077e7015e088e0f0ccbd442af857047c5dc10072"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "bd3bd68e8f15ef2b1a53069f558fc2b7ca1a1968", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e13a41239fcc18a362856e167b7dcb97ca4ee1c2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e13a41239fcc18a362856e167b7dcb97ca4ee1c2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e13a41239fcc18a362856e167b7dcb97ca4ee1c2", "patch": "@@ -1,3 +1,10 @@\n+1998-07-19  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* lex.c (do_identifier): Look for class value even if we don't\n+\thave a global value.  Do implicit declaration if parsing is 2.\n+\t* semantics.c (finish_call_expr): Pass 2 if we're doing Koenig\n+\tlookup.\n+\n 1998-07-19  Mark Mitchell  <mark@markmitchell.com>\n \n \t* decl.c (pushtag): Revert previous change."}, {"sha": "57639adfdeb49169ab799f9737db336569faa4b1", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e13a41239fcc18a362856e167b7dcb97ca4ee1c2/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e13a41239fcc18a362856e167b7dcb97ca4ee1c2/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=e13a41239fcc18a362856e167b7dcb97ca4ee1c2", "patch": "@@ -2817,17 +2817,17 @@ do_identifier (token, parsing, args)\n      tree args;\n {\n   register tree id;\n+  int lexing = (parsing == 1);\n+  int in_call = (parsing == 2);\n \n-  if (! parsing || IDENTIFIER_OPNAME_P (token))\n+  if (! lexing || IDENTIFIER_OPNAME_P (token))\n     id = lookup_name (token, 0);\n   else\n     id = lastiddecl;\n \n-  if (parsing && yychar == YYEMPTY)\n-    yychar = yylex ();\n   /* Scope class declarations before global\n      declarations.  */\n-  if (id && is_global (id)\n+  if ((!id || is_global (id))\n       && current_class_type != 0\n       && TYPE_SIZE (current_class_type) == 0)\n     {\n@@ -2894,7 +2894,7 @@ do_identifier (token, parsing, args)\n \t    cp_error (\"`%D' not defined\", token);\n \t  id = error_mark_node;\n \t}\n-      else if (parsing && (yychar == '(' || yychar == LEFT_RIGHT))\n+      else if (in_call)\n \t{\n \t  id = implicitly_declare (token);\n \t}"}, {"sha": "50685129e08fdf4d63e5ea96bde2a368cd7a518e", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e13a41239fcc18a362856e167b7dcb97ca4ee1c2/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e13a41239fcc18a362856e167b7dcb97ca4ee1c2/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=e13a41239fcc18a362856e167b7dcb97ca4ee1c2", "patch": "@@ -848,7 +848,7 @@ finish_call_expr (fn, args, koenig)\n       if (TREE_CODE (fn) == BIT_NOT_EXPR)\n \tfn = build_x_unary_op (BIT_NOT_EXPR, TREE_OPERAND (fn, 0));\n       else if (TREE_CODE (fn) != TEMPLATE_ID_EXPR)\n-\tfn = do_identifier (fn, 0, args);\n+\tfn = do_identifier (fn, 2, args);\n     }\n   result = build_x_function_call (fn, args, current_class_ref);\n "}]}