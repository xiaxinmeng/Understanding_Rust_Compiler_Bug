{"sha": "42d53ef301752ba26a6e2d76929a8085a00c0d18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDJkNTNlZjMwMTc1MmJhMjZhNmUyZDc2OTI5YTgwODVhMDBjMGQxOA==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "coudert@clipper.ens.fr", "date": "2007-03-03T16:37:54Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-03-03T16:37:54Z"}, "message": "re PR libfortran/31001 ([4.1 only] PACK crashes on zero-sized arrays)\n\n        PR libfortran/31001\n\n        * intrinsics/pack_generic.c (pack_internal): Add special checks\n        for zero-sized arrays.\n\n        * gfortran.dg/zero_sized_3.f90: New test.\n\nFrom-SVN: r122507", "tree": {"sha": "9602966aa875abbb82cf2f175ed23ea17e0a1d0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9602966aa875abbb82cf2f175ed23ea17e0a1d0d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42d53ef301752ba26a6e2d76929a8085a00c0d18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42d53ef301752ba26a6e2d76929a8085a00c0d18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42d53ef301752ba26a6e2d76929a8085a00c0d18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42d53ef301752ba26a6e2d76929a8085a00c0d18/comments", "author": null, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e09692de3922d40138146608367dfbd0ac15c97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e09692de3922d40138146608367dfbd0ac15c97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e09692de3922d40138146608367dfbd0ac15c97"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "e3d16ac3194602329ba7afc722eb00de8085d633", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42d53ef301752ba26a6e2d76929a8085a00c0d18/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42d53ef301752ba26a6e2d76929a8085a00c0d18/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=42d53ef301752ba26a6e2d76929a8085a00c0d18", "patch": "@@ -1,3 +1,8 @@\n+2007-03-03  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR libfortran/31001\n+\t* gfortran.dg/zero_sized_3.f90: New test.\n+\n 2007-03-03  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n \n \tPR c++/15787"}, {"sha": "e4e1c06d2c0d39f1c3eec08d0daf77c06d1149b8", "filename": "gcc/testsuite/gfortran.dg/zero_sized_3.f90", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42d53ef301752ba26a6e2d76929a8085a00c0d18/gcc%2Ftestsuite%2Fgfortran.dg%2Fzero_sized_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42d53ef301752ba26a6e2d76929a8085a00c0d18/gcc%2Ftestsuite%2Fgfortran.dg%2Fzero_sized_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fzero_sized_3.f90?ref=42d53ef301752ba26a6e2d76929a8085a00c0d18", "patch": "@@ -0,0 +1,20 @@\n+! { dg-do run }\n+! Testcase for PR libfortran/31001\n+  implicit none\n+\n+  integer :: i, j, k\n+  integer, allocatable :: mm(:)\n+  logical, allocatable :: mask(:)\n+\n+  do i = 2, -2, -1\n+    do k = 0, 1\n+      allocate (mm(i), mask(i))\n+      mm(:) = k\n+      mask(:) = (mm == 0)\n+      j = count (mask)\n+      print *, pack (mm, mask)\n+      if (size (pack (mm, mask)) /= j) call abort\n+      deallocate (mm, mask)\n+    end do\n+  end do\n+end"}, {"sha": "cfa42b23db412b908c183bfa2ca8005906dfbad5", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42d53ef301752ba26a6e2d76929a8085a00c0d18/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42d53ef301752ba26a6e2d76929a8085a00c0d18/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=42d53ef301752ba26a6e2d76929a8085a00c0d18", "patch": "@@ -1,3 +1,9 @@\n+2007-03-03  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR libfortran/31001\n+\t* intrinsics/pack_generic.c (pack_internal): Add special checks\n+\tfor zero-sized arrays.\n+\n 2007-03-01  Brooks Moses  <brooks.moses@codesourcery.com>\n \n \t* Makefile.am: Add dummy install-pdf target."}, {"sha": "06e70844bf010c15ff7beffcb3c09b5cacd06aa1", "filename": "libgfortran/intrinsics/pack_generic.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42d53ef301752ba26a6e2d76929a8085a00c0d18/libgfortran%2Fintrinsics%2Fpack_generic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42d53ef301752ba26a6e2d76929a8085a00c0d18/libgfortran%2Fintrinsics%2Fpack_generic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fpack_generic.c?ref=42d53ef301752ba26a6e2d76929a8085a00c0d18", "patch": "@@ -93,15 +93,19 @@ pack_internal (gfc_array_char *ret, const gfc_array_char *array,\n \n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n+  int zero_sized;\n   index_type n;\n   index_type dim;\n   index_type nelem;\n \n   dim = GFC_DESCRIPTOR_RANK (array);\n+  zero_sized = 0;\n   for (n = 0; n < dim; n++)\n     {\n       count[n] = 0;\n       extent[n] = array->dim[n].ubound + 1 - array->dim[n].lbound;\n+      if (extent[n] <= 0)\n+       zero_sized = 1;\n       sstride[n] = array->dim[n].stride * size;\n       mstride[n] = mask->dim[n].stride;\n     }\n@@ -154,6 +158,8 @@ pack_internal (gfc_array_char *ret, const gfc_array_char *array,\n \t  const GFC_LOGICAL_4 *m = mptr;\n \n \t  total = 0;\n+\t  if (zero_sized)\n+\t    m = NULL;\n \n \t  while (m)\n \t    {"}]}