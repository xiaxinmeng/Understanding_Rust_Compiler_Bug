{"sha": "b150f4f320ed62f4b5d42466948644a8e3ed9d0d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjE1MGY0ZjMyMGVkNjJmNGI1ZDQyNDY2OTQ4NjQ0YThlM2VkOWQwZA==", "commit": {"author": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2004-03-31T04:29:13Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2004-03-31T04:29:13Z"}, "message": "[multiple changes]\n\n2004-03-30  David Edelsohn  <edelsohn@gnu.org>\n\n        * config/rs6000/rs6000.md (tls_gd_32, tls_gd_64,\n        tls_ld_32, tls_ld_64, tls_dtprel_32, tls_dtprel_64,\n        tls_dtprel_ha_32, tls_dtprel_ha_64,\n        tls_dtprel_lo_32, tls_dtprel_lo_64,\n        tls_got_dtprel_64, tls_tprel_32, tls_tprel_64,\n        tls_tprel_ha_32, tls_tprel_ha_64,\n        tls_tprel_lo_32, tls_tprel_lo_64,\n        tls_got_tprel_32, tls_got_tprel_64,\n        tls_tls_32, tls_tls_64): Replace register_operand with\n        gpc_reg_operand.\n\n2004-03-30  Mostafa Hagog  <mustafa@il.ibm.com>\n\n        * config/rs6000/rs6000.md (*ctrsi_internal1, *ctrsi_internal2,\n        *ctrdi_internal1, *ctrdi_internal2, *ctrsi_internal3,\n        *ctrsi_internal4, *ctrdi_internal3, *ctrdi_internal4,\n        *ctrsi_internal5, *ctrsi_internal6, *ctrdi_internal5,\n        *ctrdi_internal6): Replace register_operand with\n        nonimmediate_operand.\n\nFrom-SVN: r80114", "tree": {"sha": "59040d26503c827e575ca2965df5ecb2927adcb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59040d26503c827e575ca2965df5ecb2927adcb9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b150f4f320ed62f4b5d42466948644a8e3ed9d0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b150f4f320ed62f4b5d42466948644a8e3ed9d0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b150f4f320ed62f4b5d42466948644a8e3ed9d0d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b150f4f320ed62f4b5d42466948644a8e3ed9d0d/comments", "author": null, "committer": null, "parents": [{"sha": "8cfa1c3e37979ac77f7b5f9923aebdb476eddba4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cfa1c3e37979ac77f7b5f9923aebdb476eddba4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cfa1c3e37979ac77f7b5f9923aebdb476eddba4"}], "stats": {"total": 134, "additions": 78, "deletions": 56}, "files": [{"sha": "462feb758d1b5b0cf9321f6aa6657542284e6c98", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b150f4f320ed62f4b5d42466948644a8e3ed9d0d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b150f4f320ed62f4b5d42466948644a8e3ed9d0d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b150f4f320ed62f4b5d42466948644a8e3ed9d0d", "patch": "@@ -1,3 +1,25 @@\n+2004-03-30  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/rs6000.md (tls_gd_32, tls_gd_64,\n+\ttls_ld_32, tls_ld_64, tls_dtprel_32, tls_dtprel_64,\n+\ttls_dtprel_ha_32, tls_dtprel_ha_64,\n+\ttls_dtprel_lo_32, tls_dtprel_lo_64,\n+\ttls_got_dtprel_64, tls_tprel_32, tls_tprel_64,\n+\ttls_tprel_ha_32, tls_tprel_ha_64,\n+\ttls_tprel_lo_32, tls_tprel_lo_64,\n+\ttls_got_tprel_32, tls_got_tprel_64,\n+\ttls_tls_32, tls_tls_64): Replace register_operand with\n+\tgpc_reg_operand.\n+\n+2004-03-30  Mostafa Hagog  <mustafa@il.ibm.com>\n+\n+\t* config/rs6000/rs6000.md (*ctrsi_internal1, *ctrsi_internal2,\n+\t*ctrdi_internal1, *ctrdi_internal2, *ctrsi_internal3,\n+\t*ctrsi_internal4, *ctrdi_internal3, *ctrdi_internal4,\n+\t*ctrsi_internal5, *ctrsi_internal6, *ctrdi_internal5,\n+\t*ctrdi_internal6): Replace register_operand with\n+\tnonimmediate_operand.\n+\n 2004-03-29  Fariborz Jahanian <fjahanian@apple.com>\n \n         * fold-const.c (fold): Reassociate multiply expression"}, {"sha": "921ed633eb3ed66876780fc7e566bd6e9367ae6f", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 56, "deletions": 56, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b150f4f320ed62f4b5d42466948644a8e3ed9d0d/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b150f4f320ed62f4b5d42466948644a8e3ed9d0d/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=b150f4f320ed62f4b5d42466948644a8e3ed9d0d", "patch": "@@ -9635,142 +9635,142 @@\n \n ;; \"b\" output constraint here and on tls_ld to support tls linker optimization.\n (define_insn \"tls_gd_32\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=b\")\n-\t(unspec:SI [(match_operand:SI 1 \"register_operand\" \"b\")\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=b\")\n+\t(unspec:SI [(match_operand:SI 1 \"gpc_reg_operand\" \"b\")\n \t\t    (match_operand:SI 2 \"rs6000_tls_symbol_ref\" \"\")]\n \t\t   UNSPEC_TLSGD))]\n   \"HAVE_AS_TLS && !TARGET_64BIT\"\n   \"addi %0,%1,%2@got@tlsgd\")\n \n (define_insn \"tls_gd_64\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=b\")\n-\t(unspec:DI [(match_operand:DI 1 \"register_operand\" \"b\")\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=b\")\n+\t(unspec:DI [(match_operand:DI 1 \"gpc_reg_operand\" \"b\")\n \t\t    (match_operand:DI 2 \"rs6000_tls_symbol_ref\" \"\")]\n \t\t   UNSPEC_TLSGD))]\n   \"HAVE_AS_TLS && TARGET_64BIT\"\n   \"addi %0,%1,%2@got@tlsgd\")\n \n (define_insn \"tls_ld_32\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=b\")\n-\t(unspec:SI [(match_operand:SI 1 \"register_operand\" \"b\")]\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=b\")\n+\t(unspec:SI [(match_operand:SI 1 \"gpc_reg_operand\" \"b\")]\n \t\t   UNSPEC_TLSLD))]\n   \"HAVE_AS_TLS && !TARGET_64BIT\"\n   \"addi %0,%1,%&@got@tlsld\")\n \n (define_insn \"tls_ld_64\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=b\")\n-\t(unspec:DI [(match_operand:DI 1 \"register_operand\" \"b\")]\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=b\")\n+\t(unspec:DI [(match_operand:DI 1 \"gpc_reg_operand\" \"b\")]\n \t\t   UNSPEC_TLSLD))]\n   \"HAVE_AS_TLS && TARGET_64BIT\"\n   \"addi %0,%1,%&@got@tlsld\")\n \n (define_insn \"tls_dtprel_32\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(unspec:SI [(match_operand:SI 1 \"register_operand\" \"b\")\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n+\t(unspec:SI [(match_operand:SI 1 \"gpc_reg_operand\" \"b\")\n \t\t    (match_operand:SI 2 \"rs6000_tls_symbol_ref\" \"\")]\n \t\t   UNSPEC_TLSDTPREL))]\n   \"HAVE_AS_TLS && !TARGET_64BIT\"\n   \"addi %0,%1,%2@dtprel\")\n \n (define_insn \"tls_dtprel_64\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(unspec:DI [(match_operand:DI 1 \"register_operand\" \"b\")\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n+\t(unspec:DI [(match_operand:DI 1 \"gpc_reg_operand\" \"b\")\n \t\t    (match_operand:DI 2 \"rs6000_tls_symbol_ref\" \"\")]\n \t\t   UNSPEC_TLSDTPREL))]\n   \"HAVE_AS_TLS && TARGET_64BIT\"\n   \"addi %0,%1,%2@dtprel\")\n \n (define_insn \"tls_dtprel_ha_32\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(unspec:SI [(match_operand:SI 1 \"register_operand\" \"b\")\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n+\t(unspec:SI [(match_operand:SI 1 \"gpc_reg_operand\" \"b\")\n \t\t    (match_operand:SI 2 \"rs6000_tls_symbol_ref\" \"\")]\n \t\t   UNSPEC_TLSDTPRELHA))]\n   \"HAVE_AS_TLS && !TARGET_64BIT\"\n   \"addis %0,%1,%2@dtprel@ha\")\n \n (define_insn \"tls_dtprel_ha_64\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(unspec:DI [(match_operand:DI 1 \"register_operand\" \"b\")\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n+\t(unspec:DI [(match_operand:DI 1 \"gpc_reg_operand\" \"b\")\n \t\t    (match_operand:DI 2 \"rs6000_tls_symbol_ref\" \"\")]\n \t\t   UNSPEC_TLSDTPRELHA))]\n   \"HAVE_AS_TLS && TARGET_64BIT\"\n   \"addis %0,%1,%2@dtprel@ha\")\n \n (define_insn \"tls_dtprel_lo_32\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(unspec:SI [(match_operand:SI 1 \"register_operand\" \"b\")\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n+\t(unspec:SI [(match_operand:SI 1 \"gpc_reg_operand\" \"b\")\n \t\t    (match_operand:SI 2 \"rs6000_tls_symbol_ref\" \"\")]\n \t\t   UNSPEC_TLSDTPRELLO))]\n   \"HAVE_AS_TLS && !TARGET_64BIT\"\n   \"addi %0,%1,%2@dtprel@l\")\n \n (define_insn \"tls_dtprel_lo_64\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(unspec:DI [(match_operand:DI 1 \"register_operand\" \"b\")\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n+\t(unspec:DI [(match_operand:DI 1 \"gpc_reg_operand\" \"b\")\n \t\t    (match_operand:DI 2 \"rs6000_tls_symbol_ref\" \"\")]\n \t\t   UNSPEC_TLSDTPRELLO))]\n   \"HAVE_AS_TLS && TARGET_64BIT\"\n   \"addi %0,%1,%2@dtprel@l\")\n \n (define_insn \"tls_got_dtprel_32\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(unspec:SI [(match_operand:SI 1 \"register_operand\" \"b\")\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n+\t(unspec:SI [(match_operand:SI 1 \"gpc_reg_operand\" \"b\")\n \t\t    (match_operand:SI 2 \"rs6000_tls_symbol_ref\" \"\")]\n \t\t   UNSPEC_TLSGOTDTPREL))]\n   \"HAVE_AS_TLS && !TARGET_64BIT\"\n   \"lwz %0,%2@got@dtprel(%1)\")\n \n (define_insn \"tls_got_dtprel_64\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(unspec:DI [(match_operand:DI 1 \"register_operand\" \"b\")\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n+\t(unspec:DI [(match_operand:DI 1 \"gpc_reg_operand\" \"b\")\n \t\t    (match_operand:DI 2 \"rs6000_tls_symbol_ref\" \"\")]\n \t\t   UNSPEC_TLSGOTDTPREL))]\n   \"HAVE_AS_TLS && TARGET_64BIT\"\n   \"ld %0,%2@got@dtprel(%1)\")\n \n (define_insn \"tls_tprel_32\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(unspec:SI [(match_operand:SI 1 \"register_operand\" \"b\")\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n+\t(unspec:SI [(match_operand:SI 1 \"gpc_reg_operand\" \"b\")\n \t\t    (match_operand:SI 2 \"rs6000_tls_symbol_ref\" \"\")]\n \t\t   UNSPEC_TLSTPREL))]\n   \"HAVE_AS_TLS && !TARGET_64BIT\"\n   \"addi %0,%1,%2@tprel\")\n \n (define_insn \"tls_tprel_64\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(unspec:DI [(match_operand:DI 1 \"register_operand\" \"b\")\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n+\t(unspec:DI [(match_operand:DI 1 \"gpc_reg_operand\" \"b\")\n \t\t    (match_operand:DI 2 \"rs6000_tls_symbol_ref\" \"\")]\n \t\t   UNSPEC_TLSTPREL))]\n   \"HAVE_AS_TLS && TARGET_64BIT\"\n   \"addi %0,%1,%2@tprel\")\n \n (define_insn \"tls_tprel_ha_32\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(unspec:SI [(match_operand:SI 1 \"register_operand\" \"b\")\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n+\t(unspec:SI [(match_operand:SI 1 \"gpc_reg_operand\" \"b\")\n \t\t    (match_operand:SI 2 \"rs6000_tls_symbol_ref\" \"\")]\n \t\t   UNSPEC_TLSTPRELHA))]\n   \"HAVE_AS_TLS && !TARGET_64BIT\"\n   \"addis %0,%1,%2@tprel@ha\")\n \n (define_insn \"tls_tprel_ha_64\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(unspec:DI [(match_operand:DI 1 \"register_operand\" \"b\")\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n+\t(unspec:DI [(match_operand:DI 1 \"gpc_reg_operand\" \"b\")\n \t\t    (match_operand:DI 2 \"rs6000_tls_symbol_ref\" \"\")]\n \t\t   UNSPEC_TLSTPRELHA))]\n   \"HAVE_AS_TLS && TARGET_64BIT\"\n   \"addis %0,%1,%2@tprel@ha\")\n \n (define_insn \"tls_tprel_lo_32\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(unspec:SI [(match_operand:SI 1 \"register_operand\" \"b\")\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n+\t(unspec:SI [(match_operand:SI 1 \"gpc_reg_operand\" \"b\")\n \t\t    (match_operand:SI 2 \"rs6000_tls_symbol_ref\" \"\")]\n \t\t   UNSPEC_TLSTPRELLO))]\n   \"HAVE_AS_TLS && !TARGET_64BIT\"\n   \"addi %0,%1,%2@tprel@l\")\n \n (define_insn \"tls_tprel_lo_64\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(unspec:DI [(match_operand:DI 1 \"register_operand\" \"b\")\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n+\t(unspec:DI [(match_operand:DI 1 \"gpc_reg_operand\" \"b\")\n \t\t    (match_operand:DI 2 \"rs6000_tls_symbol_ref\" \"\")]\n \t\t   UNSPEC_TLSTPRELLO))]\n   \"HAVE_AS_TLS && TARGET_64BIT\"\n@@ -9780,32 +9780,32 @@\n ;; optimization.  The linker may edit the instructions emitted by a\n ;; tls_got_tprel/tls_tls pair to addis,addi.\n (define_insn \"tls_got_tprel_32\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=b\")\n-\t(unspec:SI [(match_operand:SI 1 \"register_operand\" \"b\")\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=b\")\n+\t(unspec:SI [(match_operand:SI 1 \"gpc_reg_operand\" \"b\")\n \t\t    (match_operand:SI 2 \"rs6000_tls_symbol_ref\" \"\")]\n \t\t   UNSPEC_TLSGOTTPREL))]\n   \"HAVE_AS_TLS && !TARGET_64BIT\"\n   \"lwz %0,%2@got@tprel(%1)\")\n \n (define_insn \"tls_got_tprel_64\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=b\")\n-\t(unspec:DI [(match_operand:DI 1 \"register_operand\" \"b\")\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=b\")\n+\t(unspec:DI [(match_operand:DI 1 \"gpc_reg_operand\" \"b\")\n \t\t    (match_operand:DI 2 \"rs6000_tls_symbol_ref\" \"\")]\n \t\t   UNSPEC_TLSGOTTPREL))]\n   \"HAVE_AS_TLS && TARGET_64BIT\"\n   \"ld %0,%2@got@tprel(%1)\")\n \n (define_insn \"tls_tls_32\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(unspec:SI [(match_operand:SI 1 \"register_operand\" \"b\")\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n+\t(unspec:SI [(match_operand:SI 1 \"gpc_reg_operand\" \"b\")\n \t\t    (match_operand:SI 2 \"rs6000_tls_symbol_ref\" \"\")]\n \t\t   UNSPEC_TLSTLS))]\n   \"HAVE_AS_TLS && !TARGET_64BIT\"\n   \"add %0,%1,%2@tls\")\n \n (define_insn \"tls_tls_64\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(unspec:DI [(match_operand:DI 1 \"register_operand\" \"b\")\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n+\t(unspec:DI [(match_operand:DI 1 \"gpc_reg_operand\" \"b\")\n \t\t    (match_operand:DI 2 \"rs6000_tls_symbol_ref\" \"\")]\n \t\t   UNSPEC_TLSTLS))]\n   \"HAVE_AS_TLS && TARGET_64BIT\"\n@@ -13902,7 +13902,7 @@\n \t\t\t  (const_int 1))\n \t\t      (label_ref (match_operand 0 \"\" \"\"))\n \t\t      (pc)))\n-   (set (match_operand:SI 2 \"register_operand\" \"=1,*r,m,*q*c*l\")\n+   (set (match_operand:SI 2 \"nonimmediate_operand\" \"=1,*r,m,*q*c*l\")\n \t(plus:SI (match_dup 1)\n \t\t (const_int -1)))\n    (clobber (match_scratch:CC 3 \"=X,&x,&x,&x\"))\n@@ -13926,7 +13926,7 @@\n \t\t\t  (const_int 1))\n \t\t      (pc)\n \t\t      (label_ref (match_operand 0 \"\" \"\"))))\n-   (set (match_operand:SI 2 \"register_operand\" \"=1,*r,m,*q*c*l\")\n+   (set (match_operand:SI 2 \"nonimmediate_operand\" \"=1,*r,m,*q*c*l\")\n \t(plus:SI (match_dup 1)\n \t\t (const_int -1)))\n    (clobber (match_scratch:CC 3 \"=X,&x,&x,&x\"))\n@@ -13950,7 +13950,7 @@\n \t\t\t  (const_int 1))\n \t\t      (label_ref (match_operand 0 \"\" \"\"))\n \t\t      (pc)))\n-   (set (match_operand:DI 2 \"register_operand\" \"=1,*r,m,*c*l\")\n+   (set (match_operand:DI 2 \"nonimmediate_operand\" \"=1,*r,m,*c*l\")\n \t(plus:DI (match_dup 1)\n \t\t (const_int -1)))\n    (clobber (match_scratch:CC 3 \"=X,&x,&x,&x\"))\n@@ -13974,7 +13974,7 @@\n \t\t\t  (const_int 1))\n \t\t      (pc)\n \t\t      (label_ref (match_operand 0 \"\" \"\"))))\n-   (set (match_operand:DI 2 \"register_operand\" \"=1,*r,m,*c*l\")\n+   (set (match_operand:DI 2 \"nonimmediate_operand\" \"=1,*r,m,*c*l\")\n \t(plus:DI (match_dup 1)\n \t\t (const_int -1)))\n    (clobber (match_scratch:CC 3 \"=X,&x,&x,&x\"))\n@@ -14000,7 +14000,7 @@\n \t\t\t  (const_int 0))\n \t\t      (label_ref (match_operand 0 \"\" \"\"))\n \t\t      (pc)))\n-   (set (match_operand:SI 2 \"register_operand\" \"=1,*r,m,*q*c*l\")\n+   (set (match_operand:SI 2 \"nonimmediate_operand\" \"=1,*r,m,*q*c*l\")\n \t(plus:SI (match_dup 1)\n \t\t (const_int -1)))\n    (clobber (match_scratch:CC 3 \"=X,&x,&x,&x\"))\n@@ -14024,7 +14024,7 @@\n \t\t\t  (const_int 0))\n \t\t      (pc)\n \t\t      (label_ref (match_operand 0 \"\" \"\"))))\n-   (set (match_operand:SI 2 \"register_operand\" \"=1,*r,m,*q*c*l\")\n+   (set (match_operand:SI 2 \"nonimmediate_operand\" \"=1,*r,m,*q*c*l\")\n \t(plus:SI (match_dup 1)\n \t\t (const_int -1)))\n    (clobber (match_scratch:CC 3 \"=X,&x,&x,&x\"))\n@@ -14048,7 +14048,7 @@\n \t\t\t  (const_int 0))\n \t\t      (label_ref (match_operand 0 \"\" \"\"))\n \t\t      (pc)))\n-   (set (match_operand:DI 2 \"register_operand\" \"=1,*r,m,*c*l\")\n+   (set (match_operand:DI 2 \"nonimmediate_operand\" \"=1,*r,m,*c*l\")\n \t(plus:DI (match_dup 1)\n \t\t (const_int -1)))\n    (clobber (match_scratch:CC 3 \"=X,&x,&x,&x\"))\n@@ -14072,7 +14072,7 @@\n \t\t\t  (const_int 0))\n \t\t      (pc)\n \t\t      (label_ref (match_operand 0 \"\" \"\"))))\n-   (set (match_operand:DI 2 \"register_operand\" \"=1,*r,m,*c*l\")\n+   (set (match_operand:DI 2 \"nonimmediate_operand\" \"=1,*r,m,*c*l\")\n \t(plus:DI (match_dup 1)\n \t\t (const_int -1)))\n    (clobber (match_scratch:CC 3 \"=X,&x,&x,&x\"))\n@@ -14098,7 +14098,7 @@\n \t\t\t  (const_int 1))\n \t\t      (label_ref (match_operand 0 \"\" \"\"))\n \t\t      (pc)))\n-   (set (match_operand:SI 2 \"register_operand\" \"=1,*r,m,*q*c*l\")\n+   (set (match_operand:SI 2 \"nonimmediate_operand\" \"=1,*r,m,*q*c*l\")\n \t(plus:SI (match_dup 1)\n \t\t (const_int -1)))\n    (clobber (match_scratch:CC 3 \"=X,&x,&x,&x\"))\n@@ -14122,7 +14122,7 @@\n \t\t\t  (const_int 1))\n \t\t      (pc)\n \t\t      (label_ref (match_operand 0 \"\" \"\"))))\n-   (set (match_operand:SI 2 \"register_operand\" \"=1,*r,m,*q*c*l\")\n+   (set (match_operand:SI 2 \"nonimmediate_operand\" \"=1,*r,m,*q*c*l\")\n \t(plus:SI (match_dup 1)\n \t\t (const_int -1)))\n    (clobber (match_scratch:CC 3 \"=X,&x,&x,&x\"))\n@@ -14146,7 +14146,7 @@\n \t\t\t  (const_int 1))\n \t\t      (label_ref (match_operand 0 \"\" \"\"))\n \t\t      (pc)))\n-   (set (match_operand:DI 2 \"register_operand\" \"=1,*r,m,*c*l\")\n+   (set (match_operand:DI 2 \"nonimmediate_operand\" \"=1,*r,m,*c*l\")\n \t(plus:DI (match_dup 1)\n \t\t (const_int -1)))\n    (clobber (match_scratch:CC 3 \"=X,&x,&x,&x\"))\n@@ -14170,7 +14170,7 @@\n \t\t\t  (const_int 1))\n \t\t      (pc)\n \t\t      (label_ref (match_operand 0 \"\" \"\"))))\n-   (set (match_operand:DI 2 \"register_operand\" \"=1,*r,m,*c*l\")\n+   (set (match_operand:DI 2 \"nonimmediate_operand\" \"=1,*r,m,*c*l\")\n \t(plus:DI (match_dup 1)\n \t\t (const_int -1)))\n    (clobber (match_scratch:CC 3 \"=X,&x,&x,&x\"))"}]}