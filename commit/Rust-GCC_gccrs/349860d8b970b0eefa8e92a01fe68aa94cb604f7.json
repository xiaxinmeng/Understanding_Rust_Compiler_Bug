{"sha": "349860d8b970b0eefa8e92a01fe68aa94cb604f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQ5ODYwZDhiOTcwYjBlZWZhOGU5MmEwMWZlNjhhYTk0Y2I2MDRmNw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-02-15T05:02:26Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-02-15T05:02:26Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r325", "tree": {"sha": "39bc8bbd9086e798e0f4a184d2f408194b35d505", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39bc8bbd9086e798e0f4a184d2f408194b35d505"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/349860d8b970b0eefa8e92a01fe68aa94cb604f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/349860d8b970b0eefa8e92a01fe68aa94cb604f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/349860d8b970b0eefa8e92a01fe68aa94cb604f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/349860d8b970b0eefa8e92a01fe68aa94cb604f7/comments", "author": null, "committer": null, "parents": [{"sha": "c6a1db6c73b62b058031476c867cd734a815e273", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6a1db6c73b62b058031476c867cd734a815e273", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6a1db6c73b62b058031476c867cd734a815e273"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "a6cb948d4f3b7e46fd1b10898ca469461540436f", "filename": "gcc/config/m68k/mot3300.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/349860d8b970b0eefa8e92a01fe68aa94cb604f7/gcc%2Fconfig%2Fm68k%2Fmot3300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/349860d8b970b0eefa8e92a01fe68aa94cb604f7/gcc%2Fconfig%2Fm68k%2Fmot3300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fmot3300.h?ref=349860d8b970b0eefa8e92a01fe68aa94cb604f7", "patch": "@@ -441,15 +441,15 @@ do { union { float f; long l;} tem;\t\t\t\\\n       union { float f; int i; } u1;\t\t\t\t\t\\\n       u.i[0] = CONST_DOUBLE_LOW (X); u.i[1] = CONST_DOUBLE_HIGH (X);\t\\\n       u1.f = u.d;\t\t\t\t\t\t\t\\\n-      /* Use hex representation even if CODE is f, as needs it.  */\t\\\n+      /* Use hex representation even if CODE is f.  as needs it.  */\t\\\n       if (CODE == 'f')\t\t\t\t\t\t\t\\\n         fprintf (FILE, \"&0x%x\", u1.i);\t\t\t\t\t\\\n       else\t\t\t\t\t\t\t\t\\\n         fprintf (FILE, \"&0x%x\", u1.i); }\t\t\t\t\\\n   else if (GET_CODE (X) == CONST_DOUBLE && GET_MODE (X) == DFmode)\t\\\n     { union { double d; int i[2]; } u;\t\t\t\t\t\\\n-      u.i[0] = CONST_DOUBLE_LOW (X); u.i[1] = CONST_DOUBLE_HIGH (X);\t\\\n-      fprintf (FILE, \"&0x%x%x\", u.i[0], u.i[1]); }\t\t\t\\\n+      PRINT_OPERAND_EXTRACT_FLOAT (X);\t\t\t\t\t\\\n+      fprintf (FILE, \"&0x%08x%08x\", u.i[0], u.i[1]); }\t\t\t\\\n   else { putc ('&', FILE); output_addr_const (FILE, X); }}\n \n #undef PRINT_OPERAND_ADDRESS"}]}