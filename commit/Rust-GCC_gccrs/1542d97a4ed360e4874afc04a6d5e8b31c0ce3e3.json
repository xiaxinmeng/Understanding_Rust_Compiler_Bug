{"sha": "1542d97a4ed360e4874afc04a6d5e8b31c0ce3e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU0MmQ5N2E0ZWQzNjBlNDg3NGFmYzA0YTZkNWU4YjMxYzBjZTNlMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-09-08T05:58:54Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-09-08T05:58:54Z"}, "message": "re PR target/50310 (ICE: in gen_vcondv2div2df, at config/i386/sse.md:1435 with -O -ftree-vectorize and __builtin_isunordered())\n\n\tPR target/50310\n\t* config/i386/i386.c (ix86_prepare_sse_fp_compare_args): Return\n\tcode early if TARGET_AVX.\n\t(ix86_expand_fp_vcond): Handle LTGT and UNEQ.\n\n\t* gcc.c-torture/execute/ieee/pr50310.c: New test.\n\t* gcc.dg/pr50310-2.c: New test.\n\nFrom-SVN: r178673", "tree": {"sha": "a6288c7aa94be26a4a6973af7d6493f63e63d286", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a6288c7aa94be26a4a6973af7d6493f63e63d286"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1542d97a4ed360e4874afc04a6d5e8b31c0ce3e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1542d97a4ed360e4874afc04a6d5e8b31c0ce3e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1542d97a4ed360e4874afc04a6d5e8b31c0ce3e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1542d97a4ed360e4874afc04a6d5e8b31c0ce3e3/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "02dce1e99c7d2c759ef8330c665dfc92504379fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02dce1e99c7d2c759ef8330c665dfc92504379fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02dce1e99c7d2c759ef8330c665dfc92504379fe"}], "stats": {"total": 165, "additions": 164, "deletions": 1}, "files": [{"sha": "6a96c334a2bdcd6bbc92e1b4af180ab0f78f6bc4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1542d97a4ed360e4874afc04a6d5e8b31c0ce3e3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1542d97a4ed360e4874afc04a6d5e8b31c0ce3e3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1542d97a4ed360e4874afc04a6d5e8b31c0ce3e3", "patch": "@@ -1,3 +1,10 @@\n+2011-09-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/50310\n+\t* config/i386/i386.c (ix86_prepare_sse_fp_compare_args): Return\n+\tcode early if TARGET_AVX.\n+\t(ix86_expand_fp_vcond): Handle LTGT and UNEQ.\n+\n 2011-09-07  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/i386/sse.md (sseinsnmode): Remove 32-byte integer vector"}, {"sha": "7bdab73011c52f24deb8f6394614c3e56b148272", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 31, "deletions": 1, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1542d97a4ed360e4874afc04a6d5e8b31c0ce3e3/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1542d97a4ed360e4874afc04a6d5e8b31c0ce3e3/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=1542d97a4ed360e4874afc04a6d5e8b31c0ce3e3", "patch": "@@ -18318,6 +18318,11 @@ ix86_prepare_sse_fp_compare_args (rtx dest, enum rtx_code code,\n {\n   rtx tmp;\n \n+  /* AVX supports all the needed comparisons, no need to swap arguments\n+     nor help reload.  */\n+  if (TARGET_AVX)\n+    return code;\n+\n   switch (code)\n     {\n     case LTGT:\n@@ -18573,7 +18578,32 @@ ix86_expand_fp_vcond (rtx operands[])\n   code = ix86_prepare_sse_fp_compare_args (operands[0], code,\n \t\t\t\t\t   &operands[4], &operands[5]);\n   if (code == UNKNOWN)\n-    return false;\n+    {\n+      rtx temp;\n+      switch (GET_CODE (operands[3]))\n+\t{\n+\tcase LTGT:\n+\t  temp = ix86_expand_sse_cmp (operands[0], ORDERED, operands[4],\n+\t\t\t\t      operands[5], operands[0], operands[0]);\n+\t  cmp = ix86_expand_sse_cmp (operands[0], NE, operands[4],\n+\t\t\t\t     operands[5], operands[1], operands[2]);\n+\t  code = AND;\n+\t  break;\n+\tcase UNEQ:\n+\t  temp = ix86_expand_sse_cmp (operands[0], UNORDERED, operands[4],\n+\t\t\t\t      operands[5], operands[0], operands[0]);\n+\t  cmp = ix86_expand_sse_cmp (operands[0], EQ, operands[4],\n+\t\t\t\t     operands[5], operands[1], operands[2]);\n+\t  code = IOR;\n+\t  break;\n+\tdefault:\n+\t  gcc_unreachable ();\n+\t}\n+      cmp = expand_simple_binop (GET_MODE (cmp), code, temp, cmp, cmp, 1,\n+\t\t\t\t OPTAB_DIRECT);\n+      ix86_expand_sse_movcc (operands[0], cmp, operands[1], operands[2]);\n+      return true;\n+    }\n \n   if (ix86_expand_sse_fp_minmax (operands[0], code, operands[4],\n \t\t\t\t operands[5], operands[1], operands[2]))"}, {"sha": "364d0dcf99664c801283d84608e077bed42fa97d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1542d97a4ed360e4874afc04a6d5e8b31c0ce3e3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1542d97a4ed360e4874afc04a6d5e8b31c0ce3e3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1542d97a4ed360e4874afc04a6d5e8b31c0ce3e3", "patch": "@@ -1,3 +1,9 @@\n+2011-09-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/50310\n+\t* gcc.c-torture/execute/ieee/pr50310.c: New test.\n+\t* gcc.dg/pr50310-2.c: New test.\n+\n 2011-09-07  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/48095"}, {"sha": "8d323ca78f6884612247f8380f65697a184094c3", "filename": "gcc/testsuite/gcc.c-torture/execute/ieee/pr50310.c", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1542d97a4ed360e4874afc04a6d5e8b31c0ce3e3/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Fpr50310.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1542d97a4ed360e4874afc04a6d5e8b31c0ce3e3/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Fpr50310.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Fpr50310.c?ref=1542d97a4ed360e4874afc04a6d5e8b31c0ce3e3", "patch": "@@ -0,0 +1,73 @@\n+/* PR target/50310 */\n+\n+extern void abort (void);\n+double s1[4], s2[4], s3[64];\n+\n+void\n+foo (void)\n+{\n+  int i;\n+  for (i = 0; i < 4; i++)\n+    s3[0 * 4 + i] = __builtin_isgreater (s1[i], s2[i]) ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[1 * 4 + i] = (!__builtin_isgreater (s1[i], s2[i])) ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[2 * 4 + i] = __builtin_isgreaterequal (s1[i], s2[i]) ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[3 * 4 + i] = (!__builtin_isgreaterequal (s1[i], s2[i])) ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[4 * 4 + i] = __builtin_isless (s1[i], s2[i]) ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[5 * 4 + i] = (!__builtin_isless (s1[i], s2[i])) ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[6 * 4 + i] = __builtin_islessequal (s1[i], s2[i]) ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[7 * 4 + i] = (!__builtin_islessequal (s1[i], s2[i])) ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[8 * 4 + i] = __builtin_islessgreater (s1[i], s2[i]) ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[9 * 4 + i] = (!__builtin_islessgreater (s1[i], s2[i])) ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[10 * 4 + i] = __builtin_isunordered (s1[i], s2[i]) ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[11 * 4 + i] = (!__builtin_isunordered (s1[i], s2[i])) ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[12 * 4 + i] = s1[i] > s2[i] ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[13 * 4 + i] = s1[i] <= s2[i] ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[14 * 4 + i] = s1[i] < s2[i] ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[15 * 4 + i] = s1[i] >= s2[i] ? -1.0 : 0.0;\n+}\n+\n+int\n+main ()\n+{\n+  int i;\n+  s1[0] = 5.0;\n+  s1[1] = 6.0;\n+  s1[2] = 5.0;\n+  s1[3] = __builtin_nan (\"\");\n+  s2[0] = 6.0;\n+  s2[1] = 5.0;\n+  s2[2] = 5.0;\n+  s2[3] = 5.0;\n+  asm volatile (\"\" : : : \"memory\");\n+  foo ();\n+  asm volatile (\"\" : : : \"memory\");\n+  for (i = 0; i < 16 * 4; i++)\n+    if (i >= 12 * 4 && (i & 3) == 3)\n+      {\n+\tif (s3[i] != 0.0) abort ();\n+      }\n+    else\n+      {\n+        static int masks[] = { 2, 2|4, 1, 1|4, 1|2, 8, 2, 1 };\n+        if (s3[i]\n+\t    != (((1 << (i & 3)) & ((i & 4) ? ~masks[i / 8] : masks[i / 8]))\n+\t\t? -1.0 : 0.0))\n+\t  abort ();\n+      }\n+  return 0;\n+}"}, {"sha": "29621729e59c112b481f4be4073fddb06aa79e49", "filename": "gcc/testsuite/gcc.dg/pr50310-2.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1542d97a4ed360e4874afc04a6d5e8b31c0ce3e3/gcc%2Ftestsuite%2Fgcc.dg%2Fpr50310-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1542d97a4ed360e4874afc04a6d5e8b31c0ce3e3/gcc%2Ftestsuite%2Fgcc.dg%2Fpr50310-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr50310-2.c?ref=1542d97a4ed360e4874afc04a6d5e8b31c0ce3e3", "patch": "@@ -0,0 +1,47 @@\n+/* PR target/50310 */\n+/* { dg-do run } */\n+/* { dg-options \"-O3\" } */\n+/* { dg-options \"-O3 -mavx\" { target avx_runtime } } */\n+\n+double s1[4], s2[4], s3[64];\n+\n+int\n+main (void)\n+{\n+  int i;\n+  asm volatile (\"\" : : : \"memory\");\n+  for (i = 0; i < 4; i++)\n+    s3[0 * 4 + i] = __builtin_isgreater (s1[i], s2[i]) ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[1 * 4 + i] = (!__builtin_isgreater (s1[i], s2[i])) ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[2 * 4 + i] = __builtin_isgreaterequal (s1[i], s2[i]) ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[3 * 4 + i] = (!__builtin_isgreaterequal (s1[i], s2[i])) ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[4 * 4 + i] = __builtin_isless (s1[i], s2[i]) ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[5 * 4 + i] = (!__builtin_isless (s1[i], s2[i])) ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[6 * 4 + i] = __builtin_islessequal (s1[i], s2[i]) ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[7 * 4 + i] = (!__builtin_islessequal (s1[i], s2[i])) ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[8 * 4 + i] = __builtin_islessgreater (s1[i], s2[i]) ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[9 * 4 + i] = (!__builtin_islessgreater (s1[i], s2[i])) ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[10 * 4 + i] = __builtin_isunordered (s1[i], s2[i]) ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[11 * 4 + i] = (!__builtin_isunordered (s1[i], s2[i])) ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[12 * 4 + i] = s1[i] > s2[i] ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[13 * 4 + i] = s1[i] >= s2[i] ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[14 * 4 + i] = s1[i] < s2[i] ? -1.0 : 0.0;\n+  for (i = 0; i < 4; i++)\n+    s3[15 * 4 + i] = s1[i] <= s2[i] ? -1.0 : 0.0;\n+  asm volatile (\"\" : : : \"memory\");\n+  return 0;\n+}"}]}