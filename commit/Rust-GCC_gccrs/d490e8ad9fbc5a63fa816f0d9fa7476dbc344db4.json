{"sha": "d490e8ad9fbc5a63fa816f0d9fa7476dbc344db4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQ5MGU4YWQ5ZmJjNWE2M2ZhODE2ZjBkOWZhNzQ3NmRiYzM0NGRiNA==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2001-10-31T21:08:00Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2001-10-31T21:08:00Z"}, "message": "mips.h (mips_cache_flush_func): Prototype.\n\n* config/mips/mips.h (mips_cache_flush_func): Prototype.\n(TARGET_OPTIONS): Support -mflush-func= and -mno-flush-func.\n(INITIALIZE_TRAMPOLINE): Use mips_cache_flush_func if nonzero.\n* config/mips/mips.c (mips_cache_flush_func): New.\n* doc/invoke.texi: Document the new options.\n\nFrom-SVN: r46686", "tree": {"sha": "9f02bbe3ccd5582bc08bfcd62dc469f757870b8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f02bbe3ccd5582bc08bfcd62dc469f757870b8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d490e8ad9fbc5a63fa816f0d9fa7476dbc344db4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d490e8ad9fbc5a63fa816f0d9fa7476dbc344db4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d490e8ad9fbc5a63fa816f0d9fa7476dbc344db4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d490e8ad9fbc5a63fa816f0d9fa7476dbc344db4/comments", "author": null, "committer": null, "parents": [{"sha": "c7e2dba59a4b35a09c955a21194a6bcd996990a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7e2dba59a4b35a09c955a21194a6bcd996990a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7e2dba59a4b35a09c955a21194a6bcd996990a5"}], "stats": {"total": 37, "additions": 32, "deletions": 5}, "files": [{"sha": "c62bb1259186138eb100f8a81a59f0f4e9ed4f59", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d490e8ad9fbc5a63fa816f0d9fa7476dbc344db4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d490e8ad9fbc5a63fa816f0d9fa7476dbc344db4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d490e8ad9fbc5a63fa816f0d9fa7476dbc344db4", "patch": "@@ -1,3 +1,11 @@\n+2001-10-31  DJ Delorie  <dj@redhat.com>\n+\n+\t* config/mips/mips.h (mips_cache_flush_func): Prototype.\n+\t(TARGET_OPTIONS): Support -mflush-func= and -mno-flush-func.\n+\t(INITIALIZE_TRAMPOLINE): Use mips_cache_flush_func if nonzero.\n+\t* config/mips/mips.c (mips_cache_flush_func): New.\n+\t* doc/invoke.texi: Document the new options.\n+\n 2001-10-31  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* config.gcc (cris-*-linux*, tm_file): Rearrange order."}, {"sha": "255bd5deaaf5554d51feaa9a6aecb62bf9424b38", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d490e8ad9fbc5a63fa816f0d9fa7476dbc344db4/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d490e8ad9fbc5a63fa816f0d9fa7476dbc344db4/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=d490e8ad9fbc5a63fa816f0d9fa7476dbc344db4", "patch": "@@ -262,6 +262,8 @@ int mips16_hard_float;\n    avoid using up another bit in target_flags.  */\n const char *mips_entry_string;\n \n+const char *mips_cache_flush_func = CACHE_FLUSH_FUNC;\n+\n /* Whether we should entry and exit pseudo-ops in mips16 mode.  */\n int mips_entry;\n "}, {"sha": "4215d7952b362076288b2798a653501865023bab", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d490e8ad9fbc5a63fa816f0d9fa7476dbc344db4/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d490e8ad9fbc5a63fa816f0d9fa7476dbc344db4/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=d490e8ad9fbc5a63fa816f0d9fa7476dbc344db4", "patch": "@@ -163,6 +163,7 @@ extern const char *mips_abi_string;\t/* for -mabi={32,n32,64} */\n extern const char *mips_entry_string;\t/* for -mentry */\n extern const char *mips_no_mips16_string;/* for -mno-mips16 */\n extern const char *mips_explicit_type_size_string;/* for -mexplicit-type-size */\n+extern const char *mips_cache_flush_func;/* for -mflush-func= and -mno-flush-func */\n extern int mips_split_addresses;\t/* perform high/lo_sum support */\n extern int dslots_load_total;\t\t/* total # load related delay slots */\n extern int dslots_load_filled;\t\t/* # filled load delay slots */\n@@ -625,6 +626,10 @@ extern void\t\tsbss_section PARAMS ((void));\n       N_(\"Don't use MIPS16 instructions\")},\t\t\t\t\\\n   { \"explicit-type-size\", &mips_explicit_type_size_string,\t\t\\\n       NULL},\t\t\t\t\t\t\t\t\\\n+  { \"no-flush-func\", &mips_cache_flush_func,\t\t\t\t\\\n+      N_(\"Don't call any cache flush functions\")},\t\t\t\\\n+  { \"flush-func=\", &mips_cache_flush_func,\t\t\t\t\\\n+      N_(\"Specify cache flush function\")},\t\t\t\t\\\n }\n \n /* This is meant to be redefined in the host dependent files.  */\n@@ -2832,10 +2837,11 @@ typedef struct mips_args {\n   /* Flush both caches.  We need to flush the data cache in case\t    \\\n      the system has a write-back cache.  */\t\t\t\t    \\\n   /* ??? Should check the return value for errors.  */\t\t\t    \\\n-  emit_library_call (gen_rtx_SYMBOL_REF (Pmode, CACHE_FLUSH_FUNC),\t    \\\n-\t\t     0, VOIDmode, 3, addr, Pmode,\t\t\t    \\\n-\t\t     GEN_INT (TRAMPOLINE_SIZE), TYPE_MODE (integer_type_node),\\\n-\t\t     GEN_INT (3), TYPE_MODE (integer_type_node));\t    \\\n+  if (mips_cache_flush_func && mips_cache_flush_func[0])\t\t    \\\n+    emit_library_call (gen_rtx_SYMBOL_REF (Pmode, mips_cache_flush_func),   \\\n+\t\t       0, VOIDmode, 3, addr, Pmode,\t\t\t    \\\n+\t\t       GEN_INT (TRAMPOLINE_SIZE), TYPE_MODE (integer_type_node),\\\n+\t\t       GEN_INT (3), TYPE_MODE (integer_type_node));\t    \\\n }\n \f\n /* Addressing modes, and classification of registers for them.  */"}, {"sha": "cfd3d5d1949541c3ff271d5b3dcdc708400c9da9", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d490e8ad9fbc5a63fa816f0d9fa7476dbc344db4/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d490e8ad9fbc5a63fa816f0d9fa7476dbc344db4/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=d490e8ad9fbc5a63fa816f0d9fa7476dbc344db4", "patch": "@@ -462,7 +462,7 @@ in the following sections.\n -m4650  -msingle-float  -mmad @gol\n -mstats  -EL  -EB  -G @var{num}  -nocpp @gol\n -mabi=32  -mabi=n32  -mabi=64  -mabi=eabi @gol\n--mfix7000  -mno-crt0}\n+-mfix7000  -mno-crt0 -mflush-func=@var{func} -mno-flush-func}\n \n @emph{i386 and x86-64 Options}\n @gccoptlist{\n@@ -7431,6 +7431,17 @@ occurs in the following two instructions.\n @item -no-crt0\n @opindex no-crt0\n Do not include the default crt0.\n+\n+@item -mflush-func=@var{func}\n+@itemx -mno-flush-func\n+@opindex mflush-func\n+Specifies the function to call to flush the I and D caches, or to not\n+call any such function.  If called, the function must take the same\n+arguments as the common @code{_flush_func()}, that is, the address of the\n+memory range for which the cache is being flushed, the size of the\n+memory range, and the number 3 (to flush both caches).  The default\n+depends on the target gcc was configured for, but commonly is either\n+@samp{_flush_func} or @samp{__cpu_flush}.\n @end table\n \n @ifset INTERNALS"}]}