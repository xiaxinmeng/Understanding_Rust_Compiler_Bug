{"sha": "73aeb2ff9b05da69dd92ad674608df424252593c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNhZWIyZmY5YjA1ZGE2OWRkOTJhZDY3NDYwOGRmNDI0MjUyNTkzYw==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-10-13T22:59:40Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-10-13T22:59:40Z"}, "message": "getopt.c: Check HAVE_STRINGS_H before including strings.h.\n\n        * getopt.c: Check HAVE_STRINGS_H before including strings.h.\n        * configure.in (AC_CHECK_HEADERS): Check for strings.h too.\n        * config.in, configure: Rebuilt.\n\nFrom-SVN: r23065", "tree": {"sha": "7383fe93eb4c73695e4a18dc994d58d7df6b3456", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7383fe93eb4c73695e4a18dc994d58d7df6b3456"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73aeb2ff9b05da69dd92ad674608df424252593c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73aeb2ff9b05da69dd92ad674608df424252593c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73aeb2ff9b05da69dd92ad674608df424252593c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73aeb2ff9b05da69dd92ad674608df424252593c/comments", "author": null, "committer": null, "parents": [{"sha": "f096ce6675c52621eb6b9a7f802129de3c02f8b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f096ce6675c52621eb6b9a7f802129de3c02f8b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f096ce6675c52621eb6b9a7f802129de3c02f8b2"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "73e0dc8f2811656e0fa682256e886c24e9cc31b8", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aeb2ff9b05da69dd92ad674608df424252593c/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aeb2ff9b05da69dd92ad674608df424252593c/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=73aeb2ff9b05da69dd92ad674608df424252593c", "patch": "@@ -1,3 +1,9 @@\n+Tue Oct 13 23:51:51 1998  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* getopt.c: Check HAVE_STRINGS_H before including strings.h.\n+\t* configure.in (AC_CHECK_HEADERS): Check for strings.h too.\n+\t* config.in, configure: Rebuilt.\n+\n Sun Oct 11 17:36:06 1998  Michael Tiemann  <tiemann@holodeck.cygnus.com>\n \n \t* Makefile.in (cplus-dem.o, obstack.o): Depend upon config.h."}, {"sha": "51da79847498293ca14042ffb0c07a6b24c00cbb", "filename": "libiberty/config.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aeb2ff9b05da69dd92ad674608df424252593c/libiberty%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aeb2ff9b05da69dd92ad674608df424252593c/libiberty%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfig.in?ref=73aeb2ff9b05da69dd92ad674608df424252593c", "patch": "@@ -181,6 +181,9 @@\n /* Define if you have the <string.h> header file.  */\n #undef HAVE_STRING_H\n \n+/* Define if you have the <strings.h> header file.  */\n+#undef HAVE_STRINGS_H\n+\n /* Define if you have the <sys/file.h> header file.  */\n #undef HAVE_SYS_FILE_H\n "}, {"sha": "52de547b8c5c9e97162ef4858fe68c08b26df576", "filename": "libiberty/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aeb2ff9b05da69dd92ad674608df424252593c/libiberty%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aeb2ff9b05da69dd92ad674608df424252593c/libiberty%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure?ref=73aeb2ff9b05da69dd92ad674608df424252593c", "patch": "@@ -1027,7 +1027,7 @@ else\n fi\n echo \"$ac_t\"\"$CPP\" 1>&6\n \n-for ac_hdr in sys/file.h sys/param.h stdlib.h string.h unistd.h\n+for ac_hdr in sys/file.h sys/param.h stdlib.h string.h unistd.h strings.h\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6"}, {"sha": "57b9071f25bb48787e7368080797648e71d7e64b", "filename": "libiberty/configure.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aeb2ff9b05da69dd92ad674608df424252593c/libiberty%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aeb2ff9b05da69dd92ad674608df424252593c/libiberty%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure.in?ref=73aeb2ff9b05da69dd92ad674608df424252593c", "patch": "@@ -106,7 +106,7 @@ AC_SUBST_FILE(host_makefile_frag)\n # It's OK to check for header files.  Although the compiler may not be\n # able to link anything, it had better be able to at least compile\n # something.\n-AC_CHECK_HEADERS(sys/file.h sys/param.h stdlib.h string.h unistd.h)\n+AC_CHECK_HEADERS(sys/file.h sys/param.h stdlib.h string.h unistd.h strings.h)\n \n # This is the list of functions which libiberty will provide if they\n # are not available on the host."}, {"sha": "c41531e667d8abfb07c8336506ed70c17ac6fd84", "filename": "libiberty/getopt.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73aeb2ff9b05da69dd92ad674608df424252593c/libiberty%2Fgetopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73aeb2ff9b05da69dd92ad674608df424252593c/libiberty%2Fgetopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fgetopt.c?ref=73aeb2ff9b05da69dd92ad674608df424252593c", "patch": "@@ -204,7 +204,9 @@ static char *posixly_correct;\n # if HAVE_STRING_H\n #  include <string.h>\n # else\n-#  include <strings.h>\n+#  if HAVE_STRINGS_H\n+#   include <strings.h>\n+#  endif\n # endif\n \n /* Avoid depending on library functions or files"}]}