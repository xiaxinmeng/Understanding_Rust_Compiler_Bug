{"sha": "78250306ccc6a32aa473beab781457e2161db607", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzgyNTAzMDZjY2M2YTMyYWE0NzNiZWFiNzgxNDU3ZTIxNjFkYjYwNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-02-22T21:27:08Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-02-22T21:27:08Z"}, "message": "re PR bootstrap/69885 (ICE in maybe_legitimize_operand, at optabs.c:6903 on m68k-linux-gnu)\n\n\tPR target/69885\n\t* doc/md.texi (ashl@var{m}3): Document that mode of operand 2 must\n\tbe specified.\n\nFrom-SVN: r233613", "tree": {"sha": "336be7f6b64bbd752806c646d2545eeb246d6733", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/336be7f6b64bbd752806c646d2545eeb246d6733"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78250306ccc6a32aa473beab781457e2161db607", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78250306ccc6a32aa473beab781457e2161db607", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78250306ccc6a32aa473beab781457e2161db607", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78250306ccc6a32aa473beab781457e2161db607/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "111f00ed68bd527c16a15758100f314bac9b6aa8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/111f00ed68bd527c16a15758100f314bac9b6aa8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/111f00ed68bd527c16a15758100f314bac9b6aa8"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "fea679871027a3e404e1b9453cade8919bb51f11", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78250306ccc6a32aa473beab781457e2161db607/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78250306ccc6a32aa473beab781457e2161db607/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=78250306ccc6a32aa473beab781457e2161db607", "patch": "@@ -1,5 +1,9 @@\n 2016-02-22  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR target/69885\n+\t* doc/md.texi (ashl@var{m}3): Document that mode of operand 2 must\n+\tbe specified.\n+\n \tPR target/69894\n \tPR target/69895\n \t* config/m68k/t-opts (OPTIONS_H_EXTRA): Add m68k-microarchs.def"}, {"sha": "4c83719588a9ec1895c18bfd93abc861098e81bb", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78250306ccc6a32aa473beab781457e2161db607/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78250306ccc6a32aa473beab781457e2161db607/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=78250306ccc6a32aa473beab781457e2161db607", "patch": "@@ -5283,7 +5283,9 @@ Arithmetic-shift operand 1 left by a number of bits specified by operand\n 2, and store the result in operand 0.  Here @var{m} is the mode of\n operand 0 and operand 1; operand 2's mode is specified by the\n instruction pattern, and the compiler will convert the operand to that\n-mode before generating the instruction.  The meaning of out-of-range shift\n+mode before generating the instruction.  The shift or rotate expander\n+or instruction pattern should explicitly specify the mode of the operand 2,\n+it should never be @code{VOIDmode}.  The meaning of out-of-range shift\n counts can optionally be specified by @code{TARGET_SHIFT_TRUNCATION_MASK}.\n @xref{TARGET_SHIFT_TRUNCATION_MASK}.  Operand 2 is always a scalar type.\n "}]}