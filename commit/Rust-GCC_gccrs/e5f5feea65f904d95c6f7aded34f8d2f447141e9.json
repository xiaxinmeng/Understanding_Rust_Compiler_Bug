{"sha": "e5f5feea65f904d95c6f7aded34f8d2f447141e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTVmNWZlZWE2NWY5MDRkOTVjNmY3YWRlZDM0ZjhkMmY0NDcxNDFlOQ==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2002-05-14T17:12:16Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2002-05-14T17:12:16Z"}, "message": "gcc.c (cpp_options): Must pass -m* and -f* options to the front end even when only preprocessing.\n\n\t* gcc.c (cpp_options): Must pass -m* and -f* options\n\tto the front end even when only preprocessing.\n\t(cc1_options): Remove redundant -lang-c.\n\t* tradcpp.c (main): Ignore -m options.\ncp:\n\t* lang-specs.h: Remove redundant -lang-c++.\nobjc:\n\t* lang-specs.h: Similarly.\n\nFrom-SVN: r53460", "tree": {"sha": "2022704678991b7ecc0f132d9965f45e1fb9c533", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2022704678991b7ecc0f132d9965f45e1fb9c533"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5f5feea65f904d95c6f7aded34f8d2f447141e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5f5feea65f904d95c6f7aded34f8d2f447141e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5f5feea65f904d95c6f7aded34f8d2f447141e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5f5feea65f904d95c6f7aded34f8d2f447141e9/comments", "author": null, "committer": null, "parents": [{"sha": "317638a8098ccaf5e154f2e73c79fd14d30a25b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/317638a8098ccaf5e154f2e73c79fd14d30a25b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/317638a8098ccaf5e154f2e73c79fd14d30a25b5"}], "stats": {"total": 43, "additions": 30, "deletions": 13}, "files": [{"sha": "7aaa4d2d1baefd0e3e581643583971855ee68152", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5f5feea65f904d95c6f7aded34f8d2f447141e9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5f5feea65f904d95c6f7aded34f8d2f447141e9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e5f5feea65f904d95c6f7aded34f8d2f447141e9", "patch": "@@ -1,3 +1,12 @@\n+2002-05-14  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* gcc.c (cpp_options): Must pass -m* and -f* options\n+\tto the front end even when only preprocessing.\n+\t(cc1_options): Remove redundant -lang-c.\n+\t* tradcpp.c (main): Ignore -m options.\n+objc:\n+\t* lang-specs.h: Similarly.\n+\n 2002-05-14  Vladimir Makarov  <vmakarov@redhat.com>\n \n \t* genautomata.c (transform_3): Add code for transformation"}, {"sha": "12e90cf74fc648cc6e13ba1bbb2ae0b406132530", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5f5feea65f904d95c6f7aded34f8d2f447141e9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5f5feea65f904d95c6f7aded34f8d2f447141e9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e5f5feea65f904d95c6f7aded34f8d2f447141e9", "patch": "@@ -1,3 +1,7 @@\n+2002-05-14  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* lang-specs.h: Remove redundant -lang-c++.\n+\n 2002-05-13  Jason Merrill  <jason@redhat.com>\n \n \t* class.c (build_vtbl_ref_1): Use fixed_type_or_null."}, {"sha": "04050063ba27c13b024eb86a189ee7d3b8e31af5", "filename": "gcc/cp/lang-specs.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5f5feea65f904d95c6f7aded34f8d2f447141e9/gcc%2Fcp%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5f5feea65f904d95c6f7aded34f8d2f447141e9/gcc%2Fcp%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flang-specs.h?ref=e5f5feea65f904d95c6f7aded34f8d2f447141e9", "patch": "@@ -35,13 +35,13 @@ Boston, MA 02111-1307, USA.  */\n   {\"@c++\",\n    /* cc1plus has an integrated ISO C preprocessor.  We should invoke\n       the external preprocessor if -save-temps is given.  */\n-    \"%{E|M|MM:cc1plus -E -lang-c++ %{!no-gcc:-D__GNUG__=%v1}\\\n+    \"%{E|M|MM:cc1plus -E %{!no-gcc:-D__GNUG__=%v1}\\\n        %{!Wno-deprecated:-D__DEPRECATED}\\\n        %{!fno-exceptions:-D__EXCEPTIONS}\\\n        -D__GXX_ABI_VERSION=100\\\n        %{ansi:-D__STRICT_ANSI__ -trigraphs -$} %(cpp_options)}\\\n      %{!E:%{!M:%{!MM:\\\n-       %{save-temps:cc1plus -E -lang-c++ \\\n+       %{save-temps:cc1plus -E \\\n \t\t    %{!no-gcc:-D__GNUG__=%v1}\\\n        \t\t    %{!Wno-deprecated:-D__DEPRECATED}\\\n \t\t    %{!fno-exceptions:-D__EXCEPTIONS}\\"}, {"sha": "b9672721efa269b56e46d60f55f805528f451ceb", "filename": "gcc/gcc.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5f5feea65f904d95c6f7aded34f8d2f447141e9/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5f5feea65f904d95c6f7aded34f8d2f447141e9/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=e5f5feea65f904d95c6f7aded34f8d2f447141e9", "patch": "@@ -665,6 +665,9 @@ static const char *link_libgcc_spec = LINK_LIBGCC_SPEC;\n    of the GCC driver can correctly drive older tool chains with the\n    appropriate -B options.  */\n \n+/* When cpplib handles traditional preprocessing, get rid of this, and\n+   call cc1 (or cc1obj in objc/lang-specs.h) from the main specs so\n+   that we default the front end language better.  */\n static const char *trad_capable_cpp =\n \"%{traditional|ftraditional|traditional-cpp:tradcpp0}\\\n  %{!traditional:%{!ftraditional:%{!traditional-cpp:cc1 -E}}}\";\n@@ -690,11 +693,8 @@ static const char *cpp_unique_options =\n /* This contains cpp options which are common with cc1_options and are passed\n    only when preprocessing only to avoid duplication.  */\n static const char *cpp_options =\n-\"%(cpp_unique_options) %{std*} %{d*} %{W*&pedantic*} %{w}\\\n- %{fshow-column} %{fno-show-column}\\\n- %{fsigned-char&funsigned-char}\\\n- %{fleading-underscore} %{fno-leading-underscore}\\\n- %{fno-operator-names} %{ftabstop=*} %{undef}\";\n+\"%(cpp_unique_options) %{std*} %{d*} %{W*&pedantic*} %{w} %{m*} %{f*}\\\n+ %{undef}\";\n \n /* NB: This is shared amongst all front-ends.  */\n static const char *cc1_options =\n@@ -831,23 +831,23 @@ static const struct compiler default_compilers[] =\n   {\"@c\",\n    /* cc1 has an integrated ISO C preprocessor.  We should invoke the\n       external preprocessor if -save-temps is given.  */\n-     \"%{E|M|MM:%(trad_capable_cpp) -lang-c %{ansi:-std=c89} %(cpp_options)}\\\n+     \"%{E|M|MM:%(trad_capable_cpp) %{ansi:-std=c89} %(cpp_options)}\\\n       %{!E:%{!M:%{!MM:\\\n           %{traditional|ftraditional:\\\n %eGNU C no longer supports -traditional without -E}\\\n \t  %{save-temps|traditional-cpp:%(trad_capable_cpp) \\\n-\t\t-lang-c %{ansi:-std=c89} %(cpp_options) %b.i \\n\\\n+\t\t%{ansi:-std=c89} %(cpp_options) %b.i \\n\\\n \t\t    cc1 -fpreprocessed %b.i %(cc1_options)}\\\n \t  %{!save-temps:%{!traditional-cpp:\\\n-\t\tcc1 -lang-c %{ansi:-std=c89} %(cpp_unique_options) %(cc1_options)}}\\\n+\t\tcc1 %{ansi:-std=c89} %(cpp_unique_options) %(cc1_options)}}\\\n         %{!fsyntax-only:%(invoke_as)}}}}\", 0},\n   {\"-\",\n    \"%{!E:%e-E required when input is from standard input}\\\n-    %(trad_capable_cpp) -lang-c %{ansi:-std=c89} %(cpp_options)\", 0},\n+    %(trad_capable_cpp) %{ansi:-std=c89} %(cpp_options)\", 0},\n   {\".h\", \"@c-header\", 0},\n   {\"@c-header\",\n    \"%{!E:%ecompilation of header file requested} \\\n-    %(trad_capable_cpp) -lang-c %{ansi:-std=c89} %(cpp_options)\", 0},\n+    %(trad_capable_cpp) %{ansi:-std=c89} %(cpp_options)\", 0},\n   {\".i\", \"@cpp-output\", 0},\n   {\"@cpp-output\",\n    \"%{!M:%{!MM:%{!E:cc1 -fpreprocessed %i %(cc1_options) %{!fsyntax-only:%(invoke_as)}}}}\", 0},"}, {"sha": "6cc17f79029a5d59de2a55039414b7d55e6e72a4", "filename": "gcc/objc/lang-specs.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5f5feea65f904d95c6f7aded34f8d2f447141e9/gcc%2Fobjc%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5f5feea65f904d95c6f7aded34f8d2f447141e9/gcc%2Fobjc%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Flang-specs.h?ref=e5f5feea65f904d95c6f7aded34f8d2f447141e9", "patch": "@@ -29,7 +29,7 @@ Boston, MA 02111-1307, USA.  */\n       %{!E:%{!M:%{!MM:\\\n \t%{traditional|ftraditional|traditional-cpp:\\\n %eGNU Objective C no longer supports traditional compilation}\\\n-\t%{save-temps:cc1obj -E -lang-objc %{ansi:-std=c89}\\\n+\t%{save-temps:cc1obj -E %{ansi:-std=c89}\\\n \t  %(cpp_options) %b.mi \\n\\\n \t    cc1obj -fpreprocessed %b.mi %(cc1_options) %{gen-decls}}\\\n \t%{!save-temps:\\"}, {"sha": "203b8cc7b3940a3c87e11ec515e8ccfa232ecbbc", "filename": "gcc/tradcpp.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5f5feea65f904d95c6f7aded34f8d2f447141e9/gcc%2Ftradcpp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5f5feea65f904d95c6f7aded34f8d2f447141e9/gcc%2Ftradcpp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftradcpp.c?ref=e5f5feea65f904d95c6f7aded34f8d2f447141e9", "patch": "@@ -641,6 +641,10 @@ main (argc, argv)\n \t  flag_signed_char = 0;\n \tbreak;\n \n+\t/* Ignore target-specific flags.  */\n+      case 'm':\n+\tbreak;\n+\n       case 'M':\n \t{\n \t  char *p = NULL;"}]}