{"sha": "6e52b2297ecce1243c00d76b3f079b71016b8ffa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmU1MmIyMjk3ZWNjZTEyNDNjMDBkNzZiM2YwNzliNzEwMTZiOGZmYQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.ibm.com", "date": "2020-06-09T18:48:24Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@linux.ibm.com", "date": "2020-06-09T18:48:24Z"}, "message": "PowerPC: PowerPC tests: Add prefixed/pcrel tests.\n\ntestsuite/\n2020-06-09  Michael Meissner  <meissner@linux.ibm.com>\n\n\t* lib/target-supports.exp (check_effective_target_powerpc_pcrel):\n\tNew.\n\t(check_effective_target_powerpc_prefixed_addr): New.", "tree": {"sha": "e3e882ae3ad8d6743b4efec0a25947fe12a740cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3e882ae3ad8d6743b4efec0a25947fe12a740cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e52b2297ecce1243c00d76b3f079b71016b8ffa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e52b2297ecce1243c00d76b3f079b71016b8ffa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e52b2297ecce1243c00d76b3f079b71016b8ffa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e52b2297ecce1243c00d76b3f079b71016b8ffa/comments", "author": null, "committer": null, "parents": [{"sha": "ec34277611416aacdfdf3b8469b8e6ed43f623e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec34277611416aacdfdf3b8469b8e6ed43f623e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec34277611416aacdfdf3b8469b8e6ed43f623e6"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "a595042b36e583b39fd0dcfede20a97c93dbcff9", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e52b2297ecce1243c00d76b3f079b71016b8ffa/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e52b2297ecce1243c00d76b3f079b71016b8ffa/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=6e52b2297ecce1243c00d76b3f079b71016b8ffa", "patch": "@@ -2163,6 +2163,25 @@ proc check_p9vector_hw_available { } {\n     }]\n }\n \n+# Return 1 if the PowerPC target generates PC-relative instructions\n+# automatically for targets that support PC-relative instructions.\n+proc check_effective_target_powerpc_pcrel { } {\n+    return [check_no_messages_and_pattern powerpc_pcrel \\\n+\t{\\mpla\\M} assembly {\n+\t    static unsigned short s;\n+\t    unsigned short *p_foo (void) { return &s; }\n+\t} {-O2 -mcpu=future}]\n+}\n+\n+# Return 1 if the PowerPC target generates prefixed instructions automatically\n+# for targets that support prefixed instructions.\n+proc check_effective_target_powerpc_prefixed_addr { } {\n+    return [check_no_messages_and_pattern powerpc_prefixed_addr \\\n+\t{\\mplwz\\M} assembly {\n+\t    unsigned int foo (unsigned int *p) { return p[0x12345]; }\n+\t} {-O2 -mcpu=future}]\n+}\n+\n # Return 1 if the target supports executing power9 modulo instructions, 0\n # otherwise.  Cache the result.\n "}]}