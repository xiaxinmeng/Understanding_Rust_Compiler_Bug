{"sha": "0fa8f2bcd461a30bf9b72c3970faf7be3b84ca28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZhOGYyYmNkNDYxYTMwYmY5YjcyYzM5NzBmYWY3YmUzYjg0Y2EyOA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2008-01-14T19:33:47Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2008-01-14T19:33:47Z"}, "message": "Fix oversight.\n\nFrom-SVN: r131532", "tree": {"sha": "91af338836f7d66a95e0b1352e789260e3c02dcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91af338836f7d66a95e0b1352e789260e3c02dcf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0fa8f2bcd461a30bf9b72c3970faf7be3b84ca28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fa8f2bcd461a30bf9b72c3970faf7be3b84ca28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fa8f2bcd461a30bf9b72c3970faf7be3b84ca28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fa8f2bcd461a30bf9b72c3970faf7be3b84ca28/comments", "author": null, "committer": null, "parents": [{"sha": "052cec9b0e00300eb75e6712cb82ad1e9d4ba3b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/052cec9b0e00300eb75e6712cb82ad1e9d4ba3b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/052cec9b0e00300eb75e6712cb82ad1e9d4ba3b4"}], "stats": {"total": 101, "additions": 0, "deletions": 101}, "files": [{"sha": "5bd69b83f5d2b053870510f237b156fc3451b767", "filename": "gcc/testsuite/gnat.dg/rep_problem2.adb", "status": "removed", "additions": 0, "deletions": 101, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/052cec9b0e00300eb75e6712cb82ad1e9d4ba3b4/gcc%2Ftestsuite%2Fgnat.dg%2Frep_problem2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/052cec9b0e00300eb75e6712cb82ad1e9d4ba3b4/gcc%2Ftestsuite%2Fgnat.dg%2Frep_problem2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Frep_problem2.adb?ref=052cec9b0e00300eb75e6712cb82ad1e9d4ba3b4", "patch": "@@ -1,101 +0,0 @@\n---  { dg-do compile }\n-\n-with Ada.Text_IO; use Ada.Text_IO;\n-\n-procedure Rep_Problem2 is\n-   \n-   type Int_16 is range 0 .. 65535;\n-   for Int_16'Size use 16;\n-   \n-   ----------------------------------------------\n-      \n-   type Rec_A is\n-      record\n-         Int_1 : Int_16;\n-         Int_2 : Int_16;\n-         Int_3 : Int_16;\n-         Int_4 : Int_16;\n-      end record;\n-      \n-      \n-   for Rec_A use record\n-      Int_1 at 0 range  0 .. 15;\n-      Int_2 at 2 range  0 .. 15;\n-      Int_3 at 4 range  0 .. 15;\n-      Int_4 at 6 range  0 .. 15;\n-   end record;\n-   \n-   Rec_A_Size : constant := 4 * 16;\n-   \n-   for Rec_A'Size use Rec_A_Size;\n-   \n-   ----------------------------------------------\n-   \n-   type Rec_B_Version_1 is\n-      record\n-         Rec_1 : Rec_A;\n-         Rec_2 : Rec_A;\n-         Int_1 : Int_16;\n-      end record;\n-  \n-   for Rec_B_Version_1 use record\n-      Rec_1 at  0 range  0 .. 63;\n-      Rec_2 at  8 range  0 .. 63;\n-      Int_1 at 16 range  0 .. 15;\n-   end record;\n-  \n-   Rec_B_Size : constant := 2 * Rec_A_Size + 16;\n-   \n-   for Rec_B_Version_1'Size use Rec_B_Size;\n-   for Rec_B_Version_1'Alignment use 2;\n-\n-   ----------------------------------------------\n-\n-   type Rec_B_Version_2 is\n-      record\n-         Int_1 : Int_16;\n-         Rec_1 : Rec_A;\n-         Rec_2 : Rec_A;\n-      end record;\n-   \n-   for Rec_B_Version_2 use record\n-      Int_1 at  0 range  0 .. 15;\n-      Rec_1 at  2 range  0 .. 63;\n-      Rec_2 at 10 range  0 .. 63;\n-   end record;\n-\n-   for Rec_B_Version_2'Size use Rec_B_Size;\n-   \n-   ----------------------------------------------\n-   \n-   Arr_A_Length : constant := 2;\n-   Arr_A_Size   : constant := Arr_A_Length * Rec_B_Size;\n-   \n-   type Arr_A_Version_1 is array (1 .. Arr_A_Length) of Rec_B_Version_1;\n-   type Arr_A_Version_2 is array (1 .. Arr_A_Length) of Rec_B_Version_2;\n-   \n-   pragma Pack (Arr_A_Version_1);\n-   pragma Pack (Arr_A_Version_2);\n-   \n-   for Arr_A_Version_1'Size use Arr_A_Size;\n-   for Arr_A_Version_2'Size use Arr_A_Size;\n-   \n-   ----------------------------------------------\n-\n-begin\n-   --  Put_Line (\"Arr_A_Size =\" & Arr_A_Size'Img);\n-   \n-   if Arr_A_Version_1'Size /= Arr_A_Size then\n-      Ada.Text_IO.Put_Line\n-        (\"Version 1 Size mismatch! \" &\n-         \"Arr_A_Version_1'Size =\" & Arr_A_Version_1'Size'Img);\n-   end if;\n-   \n-   if Arr_A_Version_2'Size /= Arr_A_Size then\n-      Ada.Text_IO.Put_Line\n-        (\"Version 2 Size mismatch! \" &\n-         \"Arr_A_Version_2'Size =\" & Arr_A_Version_2'Size'Img);\n-   \n-   end if;\n-\n-end Rep_Problem2;"}]}