{"sha": "668ec0830302d6b3a27c4cd2801d275cefbd7f31", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjY4ZWMwODMwMzAyZDZiM2EyN2M0Y2QyODAxZDI3NWNlZmJkN2YzMQ==", "commit": {"author": {"name": "Ranjit Mathew", "email": "rmathew@hotmail.com", "date": "2003-02-11T20:55:26Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2003-02-11T20:55:26Z"}, "message": "2003-02-11  Ranjit Mathew  <rmathew@hotmail.com>\n\n\t* java/io/natFileDescriptorWin32.cc\n\t(java::io::FileDescriptor::read): Return -1 (EOF) if ReadFile( )\n\treturns with Win32 error code ERROR_BROKEN_PIPE.\n\nFrom-SVN: r62722", "tree": {"sha": "196bbfac0647b20519f37aa802fdc04deb3660f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/196bbfac0647b20519f37aa802fdc04deb3660f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/668ec0830302d6b3a27c4cd2801d275cefbd7f31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/668ec0830302d6b3a27c4cd2801d275cefbd7f31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/668ec0830302d6b3a27c4cd2801d275cefbd7f31", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/668ec0830302d6b3a27c4cd2801d275cefbd7f31/comments", "author": null, "committer": null, "parents": [{"sha": "2026dcf90abe91054e63d3556e0f33e098e08324", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2026dcf90abe91054e63d3556e0f33e098e08324", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2026dcf90abe91054e63d3556e0f33e098e08324"}], "stats": {"total": 25, "additions": 22, "deletions": 3}, "files": [{"sha": "46dab6412fa2a26bdb0392d0b7c59179c300e248", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/668ec0830302d6b3a27c4cd2801d275cefbd7f31/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/668ec0830302d6b3a27c4cd2801d275cefbd7f31/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=668ec0830302d6b3a27c4cd2801d275cefbd7f31", "patch": "@@ -1,3 +1,9 @@\n+2003-02-11  Ranjit Mathew  <rmathew@hotmail.com>\n+\n+\t* java/io/natFileDescriptorWin32.cc \n+\t(java::io::FileDescriptor::read): Return -1 (EOF) if ReadFile( )\n+\treturns with Win32 error code ERROR_BROKEN_PIPE.\n+\n 2003-02-11  Michael Koch  <konqueror@gmx.de>\n \n \t* Makefile.in"}, {"sha": "87f94e812223894fadd2c4fa4321051dde997677", "filename": "libjava/java/io/natFileDescriptorWin32.cc", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/668ec0830302d6b3a27c4cd2801d275cefbd7f31/libjava%2Fjava%2Fio%2FnatFileDescriptorWin32.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/668ec0830302d6b3a27c4cd2801d275cefbd7f31/libjava%2Fjava%2Fio%2FnatFileDescriptorWin32.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FnatFileDescriptorWin32.cc?ref=668ec0830302d6b3a27c4cd2801d275cefbd7f31", "patch": "@@ -1,6 +1,7 @@\n // natFileDescriptorWin32.cc - Native part of FileDescriptor class.\n \n-/* Copyright (C) 1998, 1999, 2000, 2001, 2002  Free Software Foundation, Inc.\n+/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003  Free Software \n+   Foundation, Inc.\n \n    This file is part of libgcj.\n \n@@ -288,7 +289,13 @@ java::io::FileDescriptor::read(void)\n   DWORD read;\n \n   if (! ReadFile ((HANDLE)fd, &buf, 1, &read, NULL))\n-    throw new IOException (JvNewStringLatin1 (winerr ()));\n+    {\n+      if (GetLastError () == ERROR_BROKEN_PIPE)\n+        return -1;\n+      else\n+        throw new IOException (JvNewStringLatin1 (winerr ()));\n+    }\n+\n   if (! read)\n     return -1;\n   else\n@@ -313,9 +320,15 @@ java::io::FileDescriptor::read(jbyteArray buffer, jint offset, jint count)\n \n   DWORD read;\n   if (! ReadFile((HANDLE)fd, bytes, count, &read, NULL))\n-    throw new IOException (JvNewStringLatin1 (winerr ()));\n+    {\n+      if (GetLastError () == ERROR_BROKEN_PIPE)\n+        return -1;\n+      else\n+        throw new IOException (JvNewStringLatin1 (winerr ()));\n+    }\n \n   if (read == 0) return -1;\n+\n   return (jint)read;\n }\n "}]}