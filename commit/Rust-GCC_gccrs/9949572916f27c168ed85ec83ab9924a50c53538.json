{"sha": "9949572916f27c168ed85ec83ab9924a50c53538", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTk0OTU3MjkxNmYyN2MxNjhlZDg1ZWM4M2FiOTkyNGE1MGM1MzUzOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2006-06-29T01:12:20Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2006-06-29T01:12:20Z"}, "message": "re PR c++/27768 (wrong-code with vectors)\n\n        PR c++/27768\n        * tree-ssa-alias.c (compute_flow_insensitive_aliasing): Add\n        may_aliases already in the tag's annotations to the bitmap.\n\nFrom-SVN: r115062", "tree": {"sha": "73a9256ae37e1cb8034a062e396fe673286de067", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73a9256ae37e1cb8034a062e396fe673286de067"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9949572916f27c168ed85ec83ab9924a50c53538", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9949572916f27c168ed85ec83ab9924a50c53538", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9949572916f27c168ed85ec83ab9924a50c53538", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9949572916f27c168ed85ec83ab9924a50c53538/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8547c7f8c9a1f6153b3988a5cf4105b3972ef20e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8547c7f8c9a1f6153b3988a5cf4105b3972ef20e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8547c7f8c9a1f6153b3988a5cf4105b3972ef20e"}], "stats": {"total": 69, "additions": 68, "deletions": 1}, "files": [{"sha": "8044ed5e255a15c7e86d1ba2118ee1e576505d23", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9949572916f27c168ed85ec83ab9924a50c53538/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9949572916f27c168ed85ec83ab9924a50c53538/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9949572916f27c168ed85ec83ab9924a50c53538", "patch": "@@ -1,3 +1,9 @@\n+2006-06-28  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/27768\n+\t* tree-ssa-alias.c (compute_flow_insensitive_aliasing): Add\n+\tmay_aliases already in the tag's annotations to the bitmap.\n+\n 2006-06-28  Roger Sayle  <roger@eyesopen.com>\n \n \t* genpreds.c (write_predicate_stmts) <IOR>: Add missing break."}, {"sha": "6965b8c737fbaf4396a716ef960ab2232794bcb2", "filename": "gcc/testsuite/g++.dg/opt/alias4.C", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9949572916f27c168ed85ec83ab9924a50c53538/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Falias4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9949572916f27c168ed85ec83ab9924a50c53538/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Falias4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Falias4.C?ref=9949572916f27c168ed85ec83ab9924a50c53538", "patch": "@@ -0,0 +1,56 @@\n+// PR c++/27768\n+// Alias grouping was losing some may_aliases, causing us to think\n+// the store to w.p was dead.\n+\n+// { dg-do run }\n+// { dg-options \"-O2\" }\n+\n+int N = 1;\n+\n+struct VA\n+{\n+  int *p, *q, *r;\n+\n+  VA() : p(), q() {}\n+  VA(const VA&) : p(), q() {}\n+  ~VA() { if (p) --N; }\n+};\n+\n+inline void foo(VA, VA, VA) {}\n+\n+struct VB\n+{\n+  VA va;\n+\n+  VB() {}\n+\n+  VB(const VB&)\n+  {\n+    va.p = new int(va.q - va.p);\n+    va.r = va.p + (va.q - va.p);\n+    foo(va, va, va);\n+  }\n+};\n+\n+struct VC : VB { char c; };\n+struct V : VC {};\n+\n+struct WA\n+{\n+  struct X {};\n+  X **p, **q, **r;\n+\n+  WA() : p() {}\n+  ~WA() { if (p) --N; }\n+};\n+\n+struct W : WA {};\n+\n+int main()\n+{\n+  {\n+    V v, u(v);\n+    W w;\n+  }\n+  return N;\n+}"}, {"sha": "1607c71257a206e8c9ecc7c5874533a6923c9c6d", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9949572916f27c168ed85ec83ab9924a50c53538/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9949572916f27c168ed85ec83ab9924a50c53538/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=9949572916f27c168ed85ec83ab9924a50c53538", "patch": "@@ -1162,6 +1162,7 @@ compute_flow_insensitive_aliasing (struct alias_info *ai)\n       struct alias_map_d *p_map = ai->pointers[i];\n       tree tag = var_ann (p_map->var)->symbol_mem_tag;\n       var_ann_t tag_ann = var_ann (tag);\n+      tree var;\n \n       /* Call-clobbering information is not finalized yet at this point.  */\n       if (PTR_IS_REF_ALL (p_map->var))\n@@ -1170,11 +1171,15 @@ compute_flow_insensitive_aliasing (struct alias_info *ai)\n       p_map->total_alias_vops = 0;\n       p_map->may_aliases = BITMAP_ALLOC (&alias_obstack);\n \n+      /* Add any pre-existing may_aliases to the bitmap used to represent\n+\t TAG's alias set in case we need to group aliases.  */\n+      for (j = 0; VEC_iterate (tree, tag_ann->may_aliases, j, var); ++j)\n+\tbitmap_set_bit (p_map->may_aliases, DECL_UID (var));\n+\n       for (j = 0; j < ai->num_addressable_vars; j++)\n \t{\n \t  struct alias_map_d *v_map;\n \t  var_ann_t v_ann;\n-\t  tree var;\n \t  bool tag_stored_p, var_stored_p;\n \t  \n \t  v_map = ai->addressable_vars[j];"}]}