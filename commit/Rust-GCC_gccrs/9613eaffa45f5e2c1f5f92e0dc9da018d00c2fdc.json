{"sha": "9613eaffa45f5e2c1f5f92e0dc9da018d00c2fdc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTYxM2VhZmZhNDVmNWUyYzFmNWY5MmUwZGM5ZGEwMThkMDBjMmZkYw==", "commit": {"author": {"name": "Stuart Hastings", "email": "stuart@apple.com", "date": "2006-04-27T18:57:11Z"}, "committer": {"name": "Stuart Hastings", "email": "stuart@gcc.gnu.org", "date": "2006-04-27T18:57:11Z"}, "message": "t-darwin (DARWIN_EXTRA_CRT_BUILD_CFLAGS): New.\n\n\t* config/rs6000/t-darwin (DARWIN_EXTRA_CRT_BUILD_CFLAGS): New.\n\t* config/t-darwin (crt3.o): Use it.\n\t* config/rs6000/rs6000.c (rs6000_initialize_trampoline): Remove\n\t'pmode', use Pmode instead of SImode for SYMBOL_REF.\n\t* config/rs6000/rs6000.md (call_indirect_nonlocal_sysv,\n\tcall_nonlocal_sysv, call_value_indirect_nonlocal_sysv,\n\tcall_value_nonlocal_sysv): Suffix with the \"P\" macro for 32/64\n\tsupport.\n\nFrom-SVN: r113319", "tree": {"sha": "09a1968ff711442fcf819efb9f03409629f0de9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09a1968ff711442fcf819efb9f03409629f0de9d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9613eaffa45f5e2c1f5f92e0dc9da018d00c2fdc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9613eaffa45f5e2c1f5f92e0dc9da018d00c2fdc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9613eaffa45f5e2c1f5f92e0dc9da018d00c2fdc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9613eaffa45f5e2c1f5f92e0dc9da018d00c2fdc/comments", "author": null, "committer": null, "parents": [{"sha": "135c2bd4086d5e4d5a4cc24f9a7dc5ee7184eaa1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/135c2bd4086d5e4d5a4cc24f9a7dc5ee7184eaa1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/135c2bd4086d5e4d5a4cc24f9a7dc5ee7184eaa1"}], "stats": {"total": 58, "additions": 35, "deletions": 23}, "files": [{"sha": "2dfdc9f6a4e0a981161252f86b7ab6d304cc5278", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9613eaffa45f5e2c1f5f92e0dc9da018d00c2fdc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9613eaffa45f5e2c1f5f92e0dc9da018d00c2fdc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9613eaffa45f5e2c1f5f92e0dc9da018d00c2fdc", "patch": "@@ -1,3 +1,14 @@\n+2006-04-27  Stuart Hastings  <stuart@apple.com>\n+\n+\t* config/rs6000/t-darwin (DARWIN_EXTRA_CRT_BUILD_CFLAGS): New.\n+\t* config/t-darwin (crt3.o): Use it.\n+\t* config/rs6000/rs6000.c (rs6000_initialize_trampoline): Remove\n+\t'pmode', use Pmode instead of SImode for SYMBOL_REF.\n+\t* config/rs6000/rs6000.md (call_indirect_nonlocal_sysv,\n+\tcall_nonlocal_sysv, call_value_indirect_nonlocal_sysv,\n+\tcall_value_nonlocal_sysv): Suffix with the \"P\" macro for 32/64\n+\tsupport.\n+\t\n 2006-04-27  Roger Sayle  <roger@eyesopen.com>\n \n \t* expmed.c (store_fixed_bit_field): If we're not optimizing for"}, {"sha": "780a44cfcca13455194948c9b04d0b7868fdc5e4", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9613eaffa45f5e2c1f5f92e0dc9da018d00c2fdc/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9613eaffa45f5e2c1f5f92e0dc9da018d00c2fdc/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=9613eaffa45f5e2c1f5f92e0dc9da018d00c2fdc", "patch": "@@ -17305,25 +17305,24 @@ rs6000_trampoline_size (void)\n void\n rs6000_initialize_trampoline (rtx addr, rtx fnaddr, rtx cxt)\n {\n-  enum machine_mode pmode = Pmode;\n   int regsize = (TARGET_32BIT) ? 4 : 8;\n-  rtx ctx_reg = force_reg (pmode, cxt);\n+  rtx ctx_reg = force_reg (Pmode, cxt);\n \n   switch (DEFAULT_ABI)\n     {\n     default:\n       gcc_unreachable ();\n \n /* Macros to shorten the code expansions below.  */\n-#define MEM_DEREF(addr) gen_rtx_MEM (pmode, memory_address (pmode, addr))\n+#define MEM_DEREF(addr) gen_rtx_MEM (Pmode, memory_address (Pmode, addr))\n #define MEM_PLUS(addr,offset) \\\n-  gen_rtx_MEM (pmode, memory_address (pmode, plus_constant (addr, offset)))\n+  gen_rtx_MEM (Pmode, memory_address (Pmode, plus_constant (addr, offset)))\n \n     /* Under AIX, just build the 3 word function descriptor */\n     case ABI_AIX:\n       {\n-\trtx fn_reg = gen_reg_rtx (pmode);\n-\trtx toc_reg = gen_reg_rtx (pmode);\n+\trtx fn_reg = gen_reg_rtx (Pmode);\n+\trtx toc_reg = gen_reg_rtx (Pmode);\n \temit_move_insn (fn_reg, MEM_DEREF (fnaddr));\n \temit_move_insn (toc_reg, MEM_PLUS (fnaddr, regsize));\n \temit_move_insn (MEM_DEREF (addr), fn_reg);\n@@ -17335,12 +17334,12 @@ rs6000_initialize_trampoline (rtx addr, rtx fnaddr, rtx cxt)\n     /* Under V.4/eabi/darwin, __trampoline_setup does the real work.  */\n     case ABI_DARWIN:\n     case ABI_V4:\n-      emit_library_call (gen_rtx_SYMBOL_REF (SImode, \"__trampoline_setup\"),\n+      emit_library_call (gen_rtx_SYMBOL_REF (Pmode, \"__trampoline_setup\"),\n \t\t\t FALSE, VOIDmode, 4,\n-\t\t\t addr, pmode,\n+\t\t\t addr, Pmode,\n \t\t\t GEN_INT (rs6000_trampoline_size ()), SImode,\n-\t\t\t fnaddr, pmode,\n-\t\t\t ctx_reg, pmode);\n+\t\t\t fnaddr, Pmode,\n+\t\t\t ctx_reg, Pmode);\n       break;\n     }\n "}, {"sha": "befce145cea01198417f1faeff158323eb4e0742", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9613eaffa45f5e2c1f5f92e0dc9da018d00c2fdc/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9613eaffa45f5e2c1f5f92e0dc9da018d00c2fdc/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=9613eaffa45f5e2c1f5f92e0dc9da018d00c2fdc", "patch": "@@ -10690,8 +10690,8 @@\n ;; operands[2] is the value FUNCTION_ARG returns for the VOID argument\n ;; which indicates how to set cr1\n \n-(define_insn \"*call_indirect_nonlocal_sysv\"\n-  [(call (mem:SI (match_operand:SI 0 \"register_operand\" \"c,*l,c,*l\"))\n+(define_insn \"*call_indirect_nonlocal_sysv<mode>\"\n+  [(call (mem:SI (match_operand:P 0 \"register_operand\" \"c,*l,c,*l\"))\n \t (match_operand 1 \"\" \"g,g,g,g\"))\n    (use (match_operand:SI 2 \"immediate_operand\" \"O,O,n,n\"))\n    (clobber (match_scratch:SI 3 \"=l,l,l,l\"))]\n@@ -10709,8 +10709,8 @@\n   [(set_attr \"type\" \"jmpreg,jmpreg,jmpreg,jmpreg\")\n    (set_attr \"length\" \"4,4,8,8\")])\n \n-(define_insn \"*call_nonlocal_sysv\"\n-  [(call (mem:SI (match_operand:SI 0 \"symbol_ref_operand\" \"s,s\"))\n+(define_insn \"*call_nonlocal_sysv<mode>\"\n+  [(call (mem:SI (match_operand:P 0 \"symbol_ref_operand\" \"s,s\"))\n \t (match_operand 1 \"\" \"g,g\"))\n    (use (match_operand:SI 2 \"immediate_operand\" \"O,n\"))\n    (clobber (match_scratch:SI 3 \"=l,l\"))]\n@@ -10744,9 +10744,9 @@\n   [(set_attr \"type\" \"branch,branch\")\n    (set_attr \"length\" \"4,8\")])\n \n-(define_insn \"*call_value_indirect_nonlocal_sysv\"\n+(define_insn \"*call_value_indirect_nonlocal_sysv<mode>\"\n   [(set (match_operand 0 \"\" \"\")\n-\t(call (mem:SI (match_operand:SI 1 \"register_operand\" \"c,*l,c,*l\"))\n+\t(call (mem:SI (match_operand:P 1 \"register_operand\" \"c,*l,c,*l\"))\n \t      (match_operand 2 \"\" \"g,g,g,g\")))\n    (use (match_operand:SI 3 \"immediate_operand\" \"O,O,n,n\"))\n    (clobber (match_scratch:SI 4 \"=l,l,l,l\"))]\n@@ -10764,9 +10764,9 @@\n   [(set_attr \"type\" \"jmpreg,jmpreg,jmpreg,jmpreg\")\n    (set_attr \"length\" \"4,4,8,8\")])\n \n-(define_insn \"*call_value_nonlocal_sysv\"\n+(define_insn \"*call_value_nonlocal_sysv<mode>\"\n   [(set (match_operand 0 \"\" \"\")\n-\t(call (mem:SI (match_operand:SI 1 \"symbol_ref_operand\" \"s,s\"))\n+\t(call (mem:SI (match_operand:P 1 \"symbol_ref_operand\" \"s,s\"))\n \t      (match_operand 2 \"\" \"g,g\")))\n    (use (match_operand:SI 3 \"immediate_operand\" \"O,n\"))\n    (clobber (match_scratch:SI 4 \"=l,l\"))]\n@@ -10989,8 +10989,8 @@\n   [(set_attr \"type\" \"branch\")\n    (set_attr \"length\" \"4\")])\n \n-(define_insn \"*sibcall_nonlocal_sysv\"\n-  [(call (mem:SI (match_operand:SI 0 \"symbol_ref_operand\" \"s,s\"))\n+(define_insn \"*sibcall_nonlocal_sysv<mode>\"\n+  [(call (mem:SI (match_operand:P 0 \"symbol_ref_operand\" \"s,s\"))\n \t (match_operand 1 \"\" \"\"))\n    (use (match_operand 2 \"immediate_operand\" \"O,n\"))\n    (use (match_operand:SI 3 \"register_operand\" \"l,l\"))\n@@ -11042,9 +11042,9 @@\n \n }\")\n \n-(define_insn \"*sibcall_value_nonlocal_sysv\"\n+(define_insn \"*sibcall_value_nonlocal_sysv<mode>\"\n   [(set (match_operand 0 \"\" \"\")\n-\t(call (mem:SI (match_operand:SI 1 \"symbol_ref_operand\" \"s,s\"))\n+\t(call (mem:SI (match_operand:P 1 \"symbol_ref_operand\" \"s,s\"))\n \t      (match_operand 2 \"\" \"\")))\n    (use (match_operand:SI 3 \"immediate_operand\" \"O,n\"))\n    (use (match_operand:SI 4 \"register_operand\" \"l,l\"))"}, {"sha": "3f207754eea88e96155489660c444aac64166822", "filename": "gcc/config/rs6000/t-darwin", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9613eaffa45f5e2c1f5f92e0dc9da018d00c2fdc/gcc%2Fconfig%2Frs6000%2Ft-darwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9613eaffa45f5e2c1f5f92e0dc9da018d00c2fdc/gcc%2Fconfig%2Frs6000%2Ft-darwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-darwin?ref=9613eaffa45f5e2c1f5f92e0dc9da018d00c2fdc", "patch": "@@ -6,6 +6,8 @@ LIB2FUNCS_STATIC_EXTRA = \\\n \t$(srcdir)/config/rs6000/darwin-vecsave.asm  \\\n \t$(srcdir)/config/rs6000/darwin-world.asm\n \n+DARWIN_EXTRA_CRT_BUILD_CFLAGS = -mlongcall\n+\n # The .asm files above are designed to run on all processors,\n # even though they use AltiVec instructions.  -Wa is used because\n # -force_cpusubtype_ALL doesn't work with -dynamiclib."}, {"sha": "8ab072f53ddc48183ea650528fea89908420f817", "filename": "gcc/config/t-darwin", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9613eaffa45f5e2c1f5f92e0dc9da018d00c2fdc/gcc%2Fconfig%2Ft-darwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9613eaffa45f5e2c1f5f92e0dc9da018d00c2fdc/gcc%2Fconfig%2Ft-darwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-darwin?ref=9613eaffa45f5e2c1f5f92e0dc9da018d00c2fdc", "patch": "@@ -18,7 +18,7 @@ EXTRA_MULTILIB_PARTS=crt3.o\n $(T)crt3$(objext): $(srcdir)/config/darwin-crt3.c $(GCC_PASSES) \\\n \t$(TCONFIG_H) stmp-int-hdrs tsystem.h\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) \\\n-\t  -fno-tree-dominator-opts \\\n+\t  -fno-tree-dominator-opts $(DARWIN_EXTRA_CRT_BUILD_CFLAGS) \\\n \t  -c $(srcdir)/config/darwin-crt3.c -o $(T)crt3$(objext)\n \n # Use unwind-dw2-fde-darwin"}]}