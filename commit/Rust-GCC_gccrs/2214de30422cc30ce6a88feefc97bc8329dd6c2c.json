{"sha": "2214de30422cc30ce6a88feefc97bc8329dd6c2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjIxNGRlMzA0MjJjYzMwY2U2YTg4ZmVlZmM5N2JjODMyOWRkNmMyYw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenth@gcc.gnu.org", "date": "2005-06-07T10:10:22Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2005-06-07T10:10:22Z"}, "message": "c-typeck.c (c_finish_if_stmt): Use void_type_node as type for COND_EXPR.\n\n2005-06-07  Richard Guenther  <rguenth@gcc.gnu.org>\n\n\t* c-typeck.c (c_finish_if_stmt): Use void_type_node as type\n\tfor COND_EXPR.\n\t* gimplify.c (gimplify_cond_expr): No need to fix up the\n\ttype of COND_EXPRs.\n\nFrom-SVN: r100705", "tree": {"sha": "6ebbf32b5f064f2beb8dedf553879d6e4cb9f803", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ebbf32b5f064f2beb8dedf553879d6e4cb9f803"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2214de30422cc30ce6a88feefc97bc8329dd6c2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2214de30422cc30ce6a88feefc97bc8329dd6c2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2214de30422cc30ce6a88feefc97bc8329dd6c2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2214de30422cc30ce6a88feefc97bc8329dd6c2c/comments", "author": null, "committer": null, "parents": [{"sha": "e0004427824f78e9ab1ec2a1eb241ff49fb4f8a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0004427824f78e9ab1ec2a1eb241ff49fb4f8a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0004427824f78e9ab1ec2a1eb241ff49fb4f8a1"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "5fc0d27b3e7240d08c4a3cfa2c7365591d4ea890", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2214de30422cc30ce6a88feefc97bc8329dd6c2c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2214de30422cc30ce6a88feefc97bc8329dd6c2c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2214de30422cc30ce6a88feefc97bc8329dd6c2c", "patch": "@@ -1,3 +1,10 @@\n+2005-06-07  Richard Guenther  <rguenth@gcc.gnu.org>\n+\n+\t* c-typeck.c (c_finish_if_stmt): Use void_type_node as type\n+\tfor COND_EXPR.\n+\t* gimplify.c (gimplify_cond_expr): No need to fix up the\n+\ttype of COND_EXPRs.\n+\n 2005-06-07  Richard Guenther  <rguenth@gcc.gnu.org>\n \n \t* tree-ssa.c (tree_ssa_useless_type_conversion_1): Fix"}, {"sha": "a1c7e56f76bb33404ea66c3ceace54bab1f9a668", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2214de30422cc30ce6a88feefc97bc8329dd6c2c/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2214de30422cc30ce6a88feefc97bc8329dd6c2c/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=2214de30422cc30ce6a88feefc97bc8329dd6c2c", "patch": "@@ -6931,7 +6931,7 @@ c_finish_if_stmt (location_t if_locus, tree cond, tree then_block,\n \t}\n     }\n \n-  stmt = build3 (COND_EXPR, NULL_TREE, cond, then_block, else_block);\n+  stmt = build3 (COND_EXPR, void_type_node, cond, then_block, else_block);\n   SET_EXPR_LOCATION (stmt, if_locus);\n   add_stmt (stmt);\n }"}, {"sha": "bcc9ba262f9256cd60b3b3a22fd89a3a41d12d86", "filename": "gcc/gimplify.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2214de30422cc30ce6a88feefc97bc8329dd6c2c/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2214de30422cc30ce6a88feefc97bc8329dd6c2c/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=2214de30422cc30ce6a88feefc97bc8329dd6c2c", "patch": "@@ -2124,12 +2124,10 @@ gimplify_cond_expr (tree *expr_p, tree *pre_p, tree *post_p, tree target,\n   enum gimplify_status ret;\n \n   type = TREE_TYPE (expr);\n-  if (!type)\n-    TREE_TYPE (expr) = void_type_node;\n \n   /* If this COND_EXPR has a value, copy the values into a temporary within\n      the arms.  */\n-  else if (! VOID_TYPE_P (type))\n+  if (! VOID_TYPE_P (type))\n     {\n       tree result;\n "}]}