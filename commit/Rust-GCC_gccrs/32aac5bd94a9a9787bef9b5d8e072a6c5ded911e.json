{"sha": "32aac5bd94a9a9787bef9b5d8e072a6c5ded911e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzJhYWM1YmQ5NGE5YTk3ODdiZWY5YjVkOGUwNzJhNmM1ZGVkOTExZQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2019-06-16T20:22:59Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2019-06-16T20:22:59Z"}, "message": "tree-ssa-alias.c (indirect_ref_may_alias_decl_p, [...]): Revert accidental commits.\n\n\t* tree-ssa-alias.c (indirect_ref_may_alias_decl_p,\n\tindirect_refs_may_alias_p): Revert accidental commits.\n\nFrom-SVN: r272358", "tree": {"sha": "c3db3a07ee80709db734987b5a2450cc43a01912", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3db3a07ee80709db734987b5a2450cc43a01912"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32aac5bd94a9a9787bef9b5d8e072a6c5ded911e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32aac5bd94a9a9787bef9b5d8e072a6c5ded911e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32aac5bd94a9a9787bef9b5d8e072a6c5ded911e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32aac5bd94a9a9787bef9b5d8e072a6c5ded911e/comments", "author": null, "committer": null, "parents": [{"sha": "8e2d0529d515d35f87df3a655db57a249282c1d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e2d0529d515d35f87df3a655db57a249282c1d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e2d0529d515d35f87df3a655db57a249282c1d4"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "f75d8d04d36471df1dfd6c8622f561892d3d7168", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32aac5bd94a9a9787bef9b5d8e072a6c5ded911e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32aac5bd94a9a9787bef9b5d8e072a6c5ded911e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=32aac5bd94a9a9787bef9b5d8e072a6c5ded911e", "patch": "@@ -1,5 +1,8 @@\n 2019-06-16  Jan Hubicka  <hubicka@ucw.cz>\n \n+\t* tree-ssa-alias.c (indirect_ref_may_alias_decl_p,\n+\tindirect_refs_may_alias_p): Revert accidental commits.\n+\n \t* tree-ssa-alias.c (aliasing_component_refs_p): Watch for arrays\n \tat the end of structures.\n "}, {"sha": "b9cdc854249533a1ced9f257f2d22958fb5342ab", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32aac5bd94a9a9787bef9b5d8e072a6c5ded911e/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32aac5bd94a9a9787bef9b5d8e072a6c5ded911e/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=32aac5bd94a9a9787bef9b5d8e072a6c5ded911e", "patch": "@@ -1532,9 +1532,8 @@ indirect_ref_may_alias_decl_p (tree ref1 ATTRIBUTE_UNUSED, tree base1,\n       && same_type_for_tbaa (TREE_TYPE (base1), TREE_TYPE (dbase2)) == 1\n       && (TREE_CODE (TREE_TYPE (base1)) != ARRAY_TYPE\n \t  || (TYPE_SIZE (TREE_TYPE (base1))\n-\t      && TREE_CODE (TYPE_SIZE (TREE_TYPE (base1))) == INTEGER_CST))\n-      && !ranges_maybe_overlap_p (doffset1, max_size1, doffset2, max_size2))\n-    return false;\n+\t      && TREE_CODE (TYPE_SIZE (TREE_TYPE (base1))) == INTEGER_CST)))\n+    return ranges_maybe_overlap_p (doffset1, max_size1, doffset2, max_size2);\n \n   if (ref1 && ref2\n       && nonoverlapping_component_refs_p (ref1, ref2))\n@@ -1614,9 +1613,8 @@ indirect_refs_may_alias_p (tree ref1 ATTRIBUTE_UNUSED, tree base1,\n     {\n       poly_offset_int moff1 = mem_ref_offset (base1) << LOG2_BITS_PER_UNIT;\n       poly_offset_int moff2 = mem_ref_offset (base2) << LOG2_BITS_PER_UNIT;\n-      if (!ranges_maybe_overlap_p (offset1 + moff1, max_size1,\n-\t\t\t\t   offset2 + moff2, max_size2))\n-\treturn false;\n+      return ranges_maybe_overlap_p (offset1 + moff1, max_size1,\n+\t\t\t\t     offset2 + moff2, max_size2);\n     }\n   if (!ptr_derefs_may_alias_p (ptr1, ptr2))\n     return false;\n@@ -1655,9 +1653,8 @@ indirect_refs_may_alias_p (tree ref1 ATTRIBUTE_UNUSED, tree base1,\n       /* But avoid treating arrays as \"objects\", instead assume they\n          can overlap by an exact multiple of their element size.\n          See gcc.dg/torture/alias-2.c.  */\n-      && TREE_CODE (TREE_TYPE (ptrtype1)) != ARRAY_TYPE\n-      && !ranges_maybe_overlap_p (offset1, max_size1, offset2, max_size2))\n-    return false;\n+      && TREE_CODE (TREE_TYPE (ptrtype1)) != ARRAY_TYPE)\n+    return ranges_maybe_overlap_p (offset1, max_size1, offset2, max_size2);\n \n   if (ref1 && ref2\n       && nonoverlapping_component_refs_p (ref1, ref2))"}]}