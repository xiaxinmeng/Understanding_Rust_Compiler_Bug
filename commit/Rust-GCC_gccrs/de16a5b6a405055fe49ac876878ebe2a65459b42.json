{"sha": "de16a5b6a405055fe49ac876878ebe2a65459b42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGUxNmE1YjZhNDA1MDU1ZmU0OWFjODc2ODc4ZWJlMmE2NTQ1OWI0Mg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2005-06-27T08:11:00Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2005-06-27T08:11:00Z"}, "message": "* regrename.c (copy_value): Fix comment.\n\nFrom-SVN: r101351", "tree": {"sha": "82f89cd593836e6dde39d01355a3d09a04bf4b68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82f89cd593836e6dde39d01355a3d09a04bf4b68"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de16a5b6a405055fe49ac876878ebe2a65459b42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de16a5b6a405055fe49ac876878ebe2a65459b42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de16a5b6a405055fe49ac876878ebe2a65459b42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de16a5b6a405055fe49ac876878ebe2a65459b42/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fd5431bc0333a8cbf12e3a567b39a03063300200", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd5431bc0333a8cbf12e3a567b39a03063300200", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd5431bc0333a8cbf12e3a567b39a03063300200"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "092783dfe3aed6bf3255464ba6171092f6e8e48e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de16a5b6a405055fe49ac876878ebe2a65459b42/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de16a5b6a405055fe49ac876878ebe2a65459b42/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=de16a5b6a405055fe49ac876878ebe2a65459b42", "patch": "@@ -1,5 +1,7 @@\n 2005-06-27  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* regrename.c (copy_value): Fix comment.\n+\n \t* toplev.c (process_options): Use if (FRAME_GROWS_DOWNWARD)\n \tinstead of preprocessor conditionals.\n "}, {"sha": "3a596ff35dff746526402b8386fc1fd2bd4e8d9f", "filename": "gcc/regrename.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de16a5b6a405055fe49ac876878ebe2a65459b42/gcc%2Fregrename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de16a5b6a405055fe49ac876878ebe2a65459b42/gcc%2Fregrename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregrename.c?ref=de16a5b6a405055fe49ac876878ebe2a65459b42", "patch": "@@ -1225,7 +1225,9 @@ copy_value (rtx dest, rtx src, struct value_data *vd)\n   if (frame_pointer_needed && dr == HARD_FRAME_POINTER_REGNUM)\n     return;\n \n-  /* Likewise for fixed or global registers.  */\n+  /* Do not propagate copies to fixed or global registers, patterns\n+     can be relying to see particular fixed register or users can\n+     expect the chosen global register in asm.  */\n   if (fixed_regs[dr] || global_regs[dr])\n     return;\n "}]}