{"sha": "92eca6404c697e48a0be9ce9d083ecd4c6732e01", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJlY2E2NDA0YzY5N2U0OGEwYmU5Y2U5ZDA4M2VjZDRjNjczMmUwMQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mmitchell@usa.net", "date": "1997-10-20T18:46:24Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-10-20T18:46:24Z"}, "message": "decl.c (duplicate_decls): Handle template specializations correctly.\n\nMon Oct 20 11:44:20 1997  Mark Mitchell  <mmitchell@usa.net>\n\n\t* decl.c (duplicate_decls): Handle template specializations\n\tcorrectly.\n\t* error.c (dump_function_name): Fix printing of specializations of\n\tmember functions that are not member templates.\n\t* cp-tree.h (processing_specialization): Make global.\n\t* pt.c (processing_specialization): Likewise.\n\t* lex.c (cons_up_default_function): Save and restore\n\tprocessing_specialization to avoid confusion.\n\nFrom-SVN: r16101", "tree": {"sha": "2bd335677e64a3452d29460d3979433fbd3f015d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2bd335677e64a3452d29460d3979433fbd3f015d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92eca6404c697e48a0be9ce9d083ecd4c6732e01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92eca6404c697e48a0be9ce9d083ecd4c6732e01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92eca6404c697e48a0be9ce9d083ecd4c6732e01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92eca6404c697e48a0be9ce9d083ecd4c6732e01/comments", "author": null, "committer": null, "parents": [{"sha": "a6967cc077d1ad550014789582bb489e5aaf25c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6967cc077d1ad550014789582bb489e5aaf25c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6967cc077d1ad550014789582bb489e5aaf25c9"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "56722890d115f37e7720a504265c3477665ae84f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92eca6404c697e48a0be9ce9d083ecd4c6732e01/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92eca6404c697e48a0be9ce9d083ecd4c6732e01/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=92eca6404c697e48a0be9ce9d083ecd4c6732e01", "patch": "@@ -1,3 +1,14 @@\n+Mon Oct 20 11:44:20 1997  Mark Mitchell  <mmitchell@usa.net>\n+\n+\t* decl.c (duplicate_decls): Handle template specializations\n+\tcorrectly. \n+\t* error.c (dump_function_name): Fix printing of specializations of\n+\tmember functions that are not member templates.\n+\t* cp-tree.h (processing_specialization): Make global.\n+\t* pt.c (processing_specialization): Likewise.\n+\t* lex.c (cons_up_default_function): Save and restore\n+\tprocessing_specialization to avoid confusion.\n+\t\n Mon Oct 20 10:52:22 1997  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* decl.c (init_decl_processing): Give null_node unknown* type."}, {"sha": "aac95b815d1aad5e5ecc76d46a39961d4e40cf19", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92eca6404c697e48a0be9ce9d083ecd4c6732e01/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92eca6404c697e48a0be9ce9d083ecd4c6732e01/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=92eca6404c697e48a0be9ce9d083ecd4c6732e01", "patch": "@@ -2093,7 +2093,7 @@ finish_struct_methods (t, fn_fields, nonprivate_method)\n \t    tree f;\n \t    tree spec_args;\n \n-\t    /* If there is a template, and t uses template parms, wer\n+\t    /* If there is a template, and t uses template parms, we\n \t       are dealing with a specialization of a member\n \t       template in a template class, and we must grab the\n \t       template, rather than the function.  */"}, {"sha": "06a8c647103ed92d4fd7850ba352bb26c1ee94af", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92eca6404c697e48a0be9ce9d083ecd4c6732e01/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92eca6404c697e48a0be9ce9d083ecd4c6732e01/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=92eca6404c697e48a0be9ce9d083ecd4c6732e01", "patch": "@@ -2352,6 +2352,7 @@ extern tree most_specialized_class\t\tPROTO((tree, tree));\n extern int more_specialized_class\t\tPROTO((tree, tree));\n extern void do_pushlevel\t\t\tPROTO((void));\n extern int is_member_template                   PROTO((tree));\n+extern int processing_specialization;\n \n /* in repo.c */\n extern void repo_template_used\t\t\tPROTO((tree));"}, {"sha": "ca21b486f8dc876eeb669084ef122eb1ba7afe1b", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92eca6404c697e48a0be9ce9d083ecd4c6732e01/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92eca6404c697e48a0be9ce9d083ecd4c6732e01/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=92eca6404c697e48a0be9ce9d083ecd4c6732e01", "patch": "@@ -2866,6 +2866,9 @@ duplicate_decls (newdecl, olddecl)\n \n   if (TREE_CODE (newdecl) == FUNCTION_DECL)\n     {\n+      if (DECL_TEMPLATE_INSTANTIATION (olddecl) &&\n+\t  !DECL_TEMPLATE_INSTANTIATION (newdecl)) \n+\tDECL_USE_TEMPLATE (olddecl) = DECL_USE_TEMPLATE (newdecl);\n       DECL_THIS_INLINE (newdecl) |= DECL_THIS_INLINE (olddecl);\n \n       /* If either decl says `inline', this fn is inline, unless its"}, {"sha": "5cac56510d6417c4ca595c438fdd9de4e8683a1c", "filename": "gcc/cp/error.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92eca6404c697e48a0be9ce9d083ecd4c6732e01/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92eca6404c697e48a0be9ce9d083ecd4c6732e01/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=92eca6404c697e48a0be9ce9d083ecd4c6732e01", "patch": "@@ -925,7 +925,8 @@ dump_function_name (t)\n   else\n     dump_decl (name, 0);\n \n-  if (DECL_TEMPLATE_SPECIALIZATION (t) || DECL_IMPLICIT_INSTANTIATION (t))\n+  if ((DECL_TEMPLATE_SPECIALIZATION (t) || DECL_IMPLICIT_INSTANTIATION (t))\n+      && (DECL_CLASS_CONTEXT (t) == NULL_TREE || is_member_template (t)))\n     {\n       tree args = DECL_TEMPLATE_INFO (t) \n \t? DECL_TI_ARGS (t) : NULL_TREE; "}, {"sha": "863fe4cbdcddb96b58f40c66b39edbee4d9fbcbf", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92eca6404c697e48a0be9ce9d083ecd4c6732e01/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92eca6404c697e48a0be9ce9d083ecd4c6732e01/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=92eca6404c697e48a0be9ce9d083ecd4c6732e01", "patch": "@@ -1988,10 +1988,16 @@ cons_up_default_function (type, full_name, kind)\n \n   {\n     tree declarator = make_call_declarator (name, args, NULL_TREE, NULL_TREE);\n+    int saved_processing_specialization;\n     if (retref)\n       declarator = build_parse_node (ADDR_EXPR, declarator);\n-    \n+\n+    /* The following is in case we're generating the default\n+       implementation in the midst of handling a specialization. */\n+    saved_processing_specialization = processing_specialization;\n+    processing_specialization = 0;\n     fn = grokfield (declarator, declspecs, NULL_TREE, NULL_TREE, NULL_TREE);\n+    processing_specialization = saved_processing_specialization;\n   }\n   \n   if (fn == void_type_node)"}, {"sha": "304d48942e93e63ee6c38c785c18dcbf680d818e", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92eca6404c697e48a0be9ce9d083ecd4c6732e01/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92eca6404c697e48a0be9ce9d083ecd4c6732e01/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=92eca6404c697e48a0be9ce9d083ecd4c6732e01", "patch": "@@ -60,7 +60,7 @@ static tree *maybe_template_tail = &maybe_templates;\n \n int minimal_parse_mode;\n \n-static int processing_specialization;\n+int processing_specialization;\n static int template_header_count;\n \n #define obstack_chunk_alloc xmalloc"}]}