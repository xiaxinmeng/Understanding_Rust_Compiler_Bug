{"sha": "617709748bf6e8c9590ce8a19a20c57de53a08e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE3NzA5NzQ4YmY2ZThjOTU5MGNlOGExOWEyMGM1N2RlNTNhMDhlMg==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2018-07-31T09:55:16Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-07-31T09:55:16Z"}, "message": "[Ada] Minor reformattings\n\n2018-07-31  Hristian Kirtchev  <kirtchev@adacore.com>\n\ngcc/ada\n\n\t* checks.adb, contracts.adb, exp_aggr.adb, exp_ch5.adb,\n\texp_disp.adb, make.adb, sem_ch4.adb, sem_eval.adb, sem_res.adb,\n\tusage.adb: Minor reformatting.\n\nFrom-SVN: r263089", "tree": {"sha": "c88c359d800e7a2645ebbf4321934aafd1de0fdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c88c359d800e7a2645ebbf4321934aafd1de0fdf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/617709748bf6e8c9590ce8a19a20c57de53a08e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/617709748bf6e8c9590ce8a19a20c57de53a08e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/617709748bf6e8c9590ce8a19a20c57de53a08e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/617709748bf6e8c9590ce8a19a20c57de53a08e2/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e78c79ff53c9370b5438d7f8b9f7096103ee0d44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e78c79ff53c9370b5438d7f8b9f7096103ee0d44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e78c79ff53c9370b5438d7f8b9f7096103ee0d44"}], "stats": {"total": 187, "additions": 99, "deletions": 88}, "files": [{"sha": "00432f6b1104e232bbf673483140cfad2447251c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/617709748bf6e8c9590ce8a19a20c57de53a08e2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/617709748bf6e8c9590ce8a19a20c57de53a08e2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=617709748bf6e8c9590ce8a19a20c57de53a08e2", "patch": "@@ -1,3 +1,9 @@\n+2018-07-31  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* checks.adb, contracts.adb, exp_aggr.adb, exp_ch5.adb,\n+\texp_disp.adb, make.adb, sem_ch4.adb, sem_eval.adb, sem_res.adb,\n+\tusage.adb: Minor reformatting.\n+\n 2018-07-31  Bob Duff  <duff@adacore.com>\n \n \t* sem_res.adb (Resolve_Allocator): Do not complain about the"}, {"sha": "871f1f73bdd87aeabe30cc6490aa484f8d6b0af9", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 22, "deletions": 25, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/617709748bf6e8c9590ce8a19a20c57de53a08e2/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/617709748bf6e8c9590ce8a19a20c57de53a08e2/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=617709748bf6e8c9590ce8a19a20c57de53a08e2", "patch": "@@ -1873,40 +1873,36 @@ package body Checks is\n       pragma Assert (Do_Division_Check (N));\n \n       Loc   : constant Source_Ptr := Sloc (N);\n-      Right : constant Node_Id    := Right_Opnd (N);\n+      Right : constant Node_Id := Right_Opnd (N);\n+      Opnd  : Node_Id;\n \n    begin\n       if Expander_Active\n         and then not Backend_Divide_Checks_On_Target\n         and then Check_Needed (Right, Division_Check)\n-      then\n-         --  See if division by zero possible, and if so generate test. This\n-         --  part of the test is not controlled by the -gnato switch, since\n-         --  it is a Division_Check and not an Overflow_Check.\n \n-         if Do_Division_Check (N) then\n-            Set_Do_Division_Check (N, False);\n+        --  See if division by zero possible, and if so generate test. This\n+        --  part of the test is not controlled by the -gnato switch, since it\n+        --  is a Division_Check and not an Overflow_Check.\n \n-            if (not ROK) or else (Rlo <= 0 and then 0 <= Rhi) then\n-               if Is_Floating_Point_Type (Etype (N)) then\n-                  Insert_Action (N,\n-                    Make_Raise_Constraint_Error (Loc,\n-                      Condition =>\n-                        Make_Op_Eq (Loc,\n-                          Left_Opnd  => Duplicate_Subexpr_Move_Checks (Right),\n-                          Right_Opnd => Make_Real_Literal (Loc, Ureal_0)),\n-                      Reason => CE_Divide_By_Zero));\n+        and then Do_Division_Check (N)\n+      then\n+         Set_Do_Division_Check (N, False);\n \n-               else\n-                  Insert_Action (N,\n-                    Make_Raise_Constraint_Error (Loc,\n-                      Condition =>\n-                        Make_Op_Eq (Loc,\n-                          Left_Opnd  => Duplicate_Subexpr_Move_Checks (Right),\n-                          Right_Opnd => Make_Integer_Literal (Loc, 0)),\n-                      Reason => CE_Divide_By_Zero));\n-               end if;\n+         if (not ROK) or else (Rlo <= 0 and then 0 <= Rhi) then\n+            if Is_Floating_Point_Type (Etype (N)) then\n+               Opnd := Make_Real_Literal (Loc, Ureal_0);\n+            else\n+               Opnd := Make_Integer_Literal (Loc, 0);\n             end if;\n+\n+            Insert_Action (N,\n+              Make_Raise_Constraint_Error (Loc,\n+                Condition =>\n+                  Make_Op_Eq (Loc,\n+                    Left_Opnd  => Duplicate_Subexpr_Move_Checks (Right),\n+                    Right_Opnd => Opnd),\n+                Reason    => CE_Divide_By_Zero));\n          end if;\n       end if;\n    end Apply_Division_Check;\n@@ -3552,6 +3548,7 @@ package body Checks is\n                  and then not GNATprove_Mode\n                then\n                   Apply_Float_Conversion_Check (Expr, Target_Type);\n+\n                else\n                   Apply_Scalar_Range_Check\n                     (Expr, Target_Type, Fixed_Int => Conv_OK);"}, {"sha": "5577604a6bf4cbf87916513a938689bb2e44aaf5", "filename": "gcc/ada/contracts.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/617709748bf6e8c9590ce8a19a20c57de53a08e2/gcc%2Fada%2Fcontracts.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/617709748bf6e8c9590ce8a19a20c57de53a08e2/gcc%2Fada%2Fcontracts.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcontracts.adb?ref=617709748bf6e8c9590ce8a19a20c57de53a08e2", "patch": "@@ -888,8 +888,8 @@ package body Contracts is\n \n                if not Is_Library_Level_Entity (Obj_Id) then\n                   Error_Msg_N\n-                    (\"volatile variable & must be declared at library level\",\n-                     Obj_Id);\n+                    (\"volatile variable & must be declared at library level \"\n+                     & \"(SPARK RM 7.1.3(3))\", Obj_Id);\n \n                --  An object of a discriminated type cannot be effectively\n                --  volatile except for protected objects (SPARK RM 7.1.3(5))."}, {"sha": "65a06de303b5183c10970589bddacc5533589eba", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/617709748bf6e8c9590ce8a19a20c57de53a08e2/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/617709748bf6e8c9590ce8a19a20c57de53a08e2/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=617709748bf6e8c9590ce8a19a20c57de53a08e2", "patch": "@@ -7242,21 +7242,19 @@ package body Exp_Aggr is\n             --  constraint error.\n \n             declare\n-               Comp : Entity_Id;\n+               Comp : constant Entity_Id := First (Choices (C));\n                Indx : Node_Id;\n \n             begin\n-               Comp := First (Choices (C));\n                if Present (Etype (Comp))\n                  and then Is_Array_Type (Etype (Comp))\n                then\n                   Indx := First_Index (Etype (Comp));\n-\n                   while Present (Indx) loop\n-                     if Nkind (Type_Low_Bound (Etype (Indx)))\n-                       = N_Raise_Constraint_Error\n-                     or else Nkind (Type_High_Bound (Etype (Indx)))\n-                       = N_Raise_Constraint_Error\n+                     if Nkind (Type_Low_Bound (Etype (Indx))) =\n+                          N_Raise_Constraint_Error\n+                       or else Nkind (Type_High_Bound (Etype (Indx))) =\n+                                 N_Raise_Constraint_Error\n                      then\n                         return False;\n                      end if;\n@@ -7276,10 +7274,11 @@ package body Exp_Aggr is\n             --  the machine.)\n \n             if Is_Tagged_Type (Etype (Expr_Q))\n-              and then (Nkind (Expr_Q) = N_Type_Conversion\n-                         or else (Is_Entity_Name (Expr_Q)\n-                                    and then\n-                                      Ekind (Entity (Expr_Q)) in Formal_Kind))\n+              and then\n+                (Nkind (Expr_Q) = N_Type_Conversion\n+                  or else\n+                    (Is_Entity_Name (Expr_Q)\n+                      and then Ekind (Entity (Expr_Q)) in Formal_Kind))\n               and then Tagged_Type_Expansion\n             then\n                Static_Components := False;"}, {"sha": "f2a26685dae237e13a1ac1b4bd5aad3b8b6e5fd3", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/617709748bf6e8c9590ce8a19a20c57de53a08e2/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/617709748bf6e8c9590ce8a19a20c57de53a08e2/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=617709748bf6e8c9590ce8a19a20c57de53a08e2", "patch": "@@ -1533,7 +1533,7 @@ package body Exp_Ch5 is\n \n             A :=\n               Make_Assignment_Statement (Loc,\n-                Name =>\n+                Name       =>\n                   Make_Selected_Component (Loc,\n                     Prefix        => Duplicate_Subexpr (Lhs),\n                     Selector_Name =>"}, {"sha": "8270492fd7a8c7671e2b64ea902b93e38b601368", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/617709748bf6e8c9590ce8a19a20c57de53a08e2/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/617709748bf6e8c9590ce8a19a20c57de53a08e2/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=617709748bf6e8c9590ce8a19a20c57de53a08e2", "patch": "@@ -7202,18 +7202,19 @@ package body Exp_Disp is\n                   Make_Subtype_Indication (Loc,\n                     Subtype_Mark =>\n                       New_Occurrence_Of (RTE (RE_Address_Array), Loc),\n-                    Constraint =>\n+                    Constraint   =>\n                       Make_Index_Or_Discriminant_Constraint (Loc, New_List (\n                         Make_Range (Loc,\n                           Low_Bound  => Make_Integer_Literal (Loc, 1),\n-                          High_Bound => Make_Integer_Literal (Loc,\n-                                         DT_Entry_Count\n-                                           (First_Tag_Component (Typ)))))))));\n+                          High_Bound =>\n+                            Make_Integer_Literal (Loc,\n+                              DT_Entry_Count\n+                                (First_Tag_Component (Typ)))))))));\n \n             Append_To (Result,\n               Make_Full_Type_Declaration (Loc,\n                 Defining_Identifier => DT_Prims_Acc,\n-                Type_Definition =>\n+                Type_Definition     =>\n                    Make_Access_To_Object_Definition (Loc,\n                      Subtype_Indication =>\n                        New_Occurrence_Of (DT_Prims, Loc))));"}, {"sha": "50aaf5b48e514eb784d39fd69fd2cceb40d07041", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/617709748bf6e8c9590ce8a19a20c57de53a08e2/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/617709748bf6e8c9590ce8a19a20c57de53a08e2/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=617709748bf6e8c9590ce8a19a20c57de53a08e2", "patch": "@@ -1421,9 +1421,9 @@ package body Make is\n    --------------------------\n \n    procedure Check_Linker_Options\n-     (E_Stamp   : Time_Stamp_Type;\n-      O_File    : out File_Name_Type;\n-      O_Stamp   : out Time_Stamp_Type)\n+     (E_Stamp : Time_Stamp_Type;\n+      O_File  : out File_Name_Type;\n+      O_Stamp : out Time_Stamp_Type)\n    is\n       procedure Check_File (File : File_Name_Type);\n       --  Update O_File and O_Stamp if the given file is younger than E_Stamp\n@@ -1865,9 +1865,9 @@ package body Make is\n \n             if Add_It then\n                if not Queue.Insert\n-                        ((File    => Sfile,\n-                          Unit    => No_Unit_Name,\n-                          Index   => 0))\n+                        ((File  => Sfile,\n+                          Unit  => No_Unit_Name,\n+                          Index => 0))\n                then\n                   if Is_In_Obsoleted (Sfile) then\n                      Executable_Obsolete := True;"}, {"sha": "89af5676348c54b256bee57fec429d3d95765b89", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 38, "deletions": 32, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/617709748bf6e8c9590ce8a19a20c57de53a08e2/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/617709748bf6e8c9590ce8a19a20c57de53a08e2/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=617709748bf6e8c9590ce8a19a20c57de53a08e2", "patch": "@@ -8928,51 +8928,57 @@ package body Sem_Ch4 is\n            (Anc_Type : Entity_Id;\n             Error    : out Boolean)\n          is\n-            Candidate   : Entity_Id;\n-            --  If homonym is a renaming, examine the renamed program\n-\n-            Cls_Type    : Entity_Id;\n-            Hom         : Entity_Id;\n-            Hom_Ref     : Node_Id;\n-            Success     : Boolean;\n-\n             function First_Formal_Match\n-              (Typ : Entity_Id) return Boolean;\n-            --  Predicate to verify that the first formal of a class-wide\n-            --  candidate matches the type of the prefix.\n+              (Subp_Id : Entity_Id;\n+               Typ     : Entity_Id) return Boolean;\n+            --  Predicate to verify that the first foramal of class-wide\n+            --  subprogram Subp_Id matches type Typ of the prefix.\n \n             ------------------------\n             -- First_Formal_Match --\n             ------------------------\n \n             function First_Formal_Match\n-             (Typ : Entity_Id) return Boolean\n+              (Subp_Id : Entity_Id;\n+               Typ     : Entity_Id) return Boolean\n             is\n-               Ctrl : constant Entity_Id := First_Formal (Candidate);\n+               Ctrl : constant Entity_Id := First_Formal (Subp_Id);\n+\n             begin\n-               return Present (Ctrl)\n-                 and then\n-                   (Base_Type (Etype (Ctrl)) = Typ\n-                     or else\n-                       (Ekind (Etype (Ctrl)) = E_Anonymous_Access_Type\n-                         and then\n-                           Base_Type\n-                            (Designated_Type (Etype (Ctrl))) = Typ));\n+               return\n+                 Present (Ctrl)\n+                   and then\n+                     (Base_Type (Etype (Ctrl)) = Typ\n+                       or else\n+                         (Ekind (Etype (Ctrl)) = E_Anonymous_Access_Type\n+                           and then\n+                             Base_Type (Designated_Type (Etype (Ctrl))) =\n+                               Typ));\n             end First_Formal_Match;\n \n-         begin\n-            Error := False;\n+            --  Local variables\n \n-            Cls_Type := Class_Wide_Type (Anc_Type);\n+            CW_Typ : constant Entity_Id := Class_Wide_Type (Anc_Type);\n \n-            Hom := Current_Entity (Subprog);\n+            Candidate : Entity_Id;\n+            --  If homonym is a renaming, examine the renamed program\n+\n+            Hom      : Entity_Id;\n+            Hom_Ref  : Node_Id;\n+            Success  : Boolean;\n+\n+         --  Start of processing for Traverse_Homonyms\n+\n+         begin\n+            Error := False;\n \n             --  Find a non-hidden operation whose first parameter is of the\n             --  class-wide type, a subtype thereof, or an anonymous access\n             --  to same. If in an instance, the operation can be considered\n             --  even if hidden (it may be hidden because the instantiation\n             --  is expanded after the containing package has been analyzed).\n \n+            Hom := Current_Entity (Subprog);\n             while Present (Hom) loop\n                if Ekind_In (Hom, E_Procedure, E_Function)\n                  and then Present (Renamed_Entity (Hom))\n@@ -8983,10 +8989,10 @@ package body Sem_Ch4 is\n                   Candidate := Hom;\n                end if;\n \n-               if Ekind_In (Candidate, E_Procedure, E_Function)\n+               if Ekind_In (Candidate, E_Function, E_Procedure)\n                  and then (not Is_Hidden (Candidate) or else In_Instance)\n                  and then Scope (Candidate) = Scope (Base_Type (Anc_Type))\n-                 and then First_Formal_Match (Cls_Type)\n+                 and then First_Formal_Match (Candidate, CW_Typ)\n                then\n                   --  If the context is a procedure call, ignore functions\n                   --  in the name of the call.\n@@ -9006,16 +9012,16 @@ package body Sem_Ch4 is\n                      goto Next_Hom;\n                   end if;\n \n-                  Set_Etype (Call_Node, Any_Type);\n+                  Set_Etype         (Call_Node, Any_Type);\n                   Set_Is_Overloaded (Call_Node, False);\n                   Success := False;\n \n                   if No (Matching_Op) then\n                      Hom_Ref := New_Occurrence_Of (Candidate, Sloc (Subprog));\n-                     Set_Etype (Call_Node, Any_Type);\n-                     Set_Parent (Call_Node, Parent (Node_To_Replace));\n \n-                     Set_Name (Call_Node, Hom_Ref);\n+                     Set_Etype  (Call_Node, Any_Type);\n+                     Set_Name   (Call_Node, Hom_Ref);\n+                     Set_Parent (Call_Node, Parent (Node_To_Replace));\n \n                      Analyze_One_Call\n                        (N          => Call_Node,\n@@ -9040,7 +9046,7 @@ package body Sem_Ch4 is\n                      --  Check for this case before reporting a real ambiguity.\n \n                      if Present\n-                        (Valid_Candidate (Success, Call_Node, Candidate))\n+                          (Valid_Candidate (Success, Call_Node, Candidate))\n                        and then Nkind (Call_Node) /= N_Function_Call\n                        and then Candidate /= Matching_Op\n                      then"}, {"sha": "c14347b0e7d3e919c9c92c9d3a7c5036976565a3", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/617709748bf6e8c9590ce8a19a20c57de53a08e2/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/617709748bf6e8c9590ce8a19a20c57de53a08e2/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=617709748bf6e8c9590ce8a19a20c57de53a08e2", "patch": "@@ -5688,8 +5688,8 @@ package body Sem_Eval is\n    -------------------------\n \n    procedure Rewrite_In_Raise_CE (N : Node_Id; Exp : Node_Id) is\n-      Typ  : constant Entity_Id := Etype (N);\n       Stat : constant Boolean   := Is_Static_Expression (N);\n+      Typ  : constant Entity_Id := Etype (N);\n \n    begin\n       --  If we want to raise CE in the condition of a N_Raise_CE node, we"}, {"sha": "674aec4fc6b80bb873fad98943908fb689882d72", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/617709748bf6e8c9590ce8a19a20c57de53a08e2/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/617709748bf6e8c9590ce8a19a20c57de53a08e2/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=617709748bf6e8c9590ce8a19a20c57de53a08e2", "patch": "@@ -5015,9 +5015,10 @@ package body Sem_Res is\n                if In_Instance_Body then\n                   Error_Msg_Warn := SPARK_Mode /= On;\n                   Error_Msg_N\n-                    (\"type in allocator has deeper level than \"\n-                     & \"designated class-wide type<<\", E);\n+                    (\"type in allocator has deeper level than designated \"\n+                     & \"class-wide type<<\", E);\n                   Error_Msg_N (\"\\Program_Error [<<\", E);\n+\n                   Rewrite (N,\n                     Make_Raise_Program_Error (Sloc (N),\n                       Reason => PE_Accessibility_Check_Failed));\n@@ -5028,8 +5029,9 @@ package body Sem_Res is\n                --  type. A run-time check will be performed in the instance.\n \n                elsif not Is_Generic_Type (Exp_Typ) then\n-                  Error_Msg_N (\"type in allocator has deeper level than \"\n-                               & \"designated class-wide type\", E);\n+                  Error_Msg_N\n+                    (\"type in allocator has deeper level than designated \"\n+                     & \"class-wide type\", E);\n                end if;\n             end if;\n          end;"}, {"sha": "754e8d89f8b9f5b31b56ed36aa3d1e1d99f79332", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/617709748bf6e8c9590ce8a19a20c57de53a08e2/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/617709748bf6e8c9590ce8a19a20c57de53a08e2/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=617709748bf6e8c9590ce8a19a20c57de53a08e2", "patch": "@@ -461,6 +461,7 @@ begin\n    Write_Line (\"        I    turn off checking for in params\");\n    Write_Line (\"        m    turn on checking for in out params\");\n    Write_Line (\"        M    turn off checking for in out params\");\n+   Write_Line (\"        n    turn off all validity checks (including RM)\");\n    Write_Line (\"        o    turn on checking for operators/attributes\");\n    Write_Line (\"        O    turn off checking for operators/attributes\");\n    Write_Line (\"        p    turn on checking for parameters\");\n@@ -471,7 +472,6 @@ begin\n    Write_Line (\"        S    turn off checking for subscripts\");\n    Write_Line (\"        t    turn on checking for tests\");\n    Write_Line (\"        T    turn off checking for tests\");\n-   Write_Line (\"        n    turn off all validity checks (including RM)\");\n \n    --  Lines for -gnatw switch\n "}]}