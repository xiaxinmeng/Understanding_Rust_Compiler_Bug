{"sha": "4e626909c7d92d3a6964180f9232b59aaf85b426", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGU2MjY5MDljN2Q5MmQzYTY5NjQxODBmOTIzMmI1OWFhZjg1YjQyNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-04-07T17:57:26Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-04-07T17:57:26Z"}, "message": "re PR debug/48343 (ICE compiling i586 linux-2.6.38/drivers/staging/wlan-ng/p80211wep.c: in form_sum, at reload.c:5338)\n\n\tPR debug/48343\n\t* combine.c (combine_instructions): Add last_combined_insn,\n\tupdate it if insn is after it, pass it to all try_combine\n\tcalls.\n\t(try_combine): Add last_combined_insn parameter, pass it instead of\n\ti3 to propagate_for_debug.\n\n\t* gcc.dg/torture/pr48343.c: New test.\n\nFrom-SVN: r172108", "tree": {"sha": "c12169e0cadfbd415412892bc0dfc3f566d17d3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c12169e0cadfbd415412892bc0dfc3f566d17d3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e626909c7d92d3a6964180f9232b59aaf85b426", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e626909c7d92d3a6964180f9232b59aaf85b426", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e626909c7d92d3a6964180f9232b59aaf85b426", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e626909c7d92d3a6964180f9232b59aaf85b426/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2e3597fef801d55ee7cf160ced26b7418240c17d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e3597fef801d55ee7cf160ced26b7418240c17d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e3597fef801d55ee7cf160ced26b7418240c17d"}], "stats": {"total": 88, "additions": 62, "deletions": 26}, "files": [{"sha": "2565ff60e1a320a3f46be933840a7a340660e19e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e626909c7d92d3a6964180f9232b59aaf85b426/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e626909c7d92d3a6964180f9232b59aaf85b426/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e626909c7d92d3a6964180f9232b59aaf85b426", "patch": "@@ -1,3 +1,12 @@\n+2011-04-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/48343\n+\t* combine.c (combine_instructions): Add last_combined_insn,\n+\tupdate it if insn is after it, pass it to all try_combine\n+\tcalls.\n+\t(try_combine): Add last_combined_insn parameter, pass it instead of\n+\ti3 to propagate_for_debug.\n+\n 2011-04-05  Nick Clifton  <nickc@redhat.com>\n \n \t* config/mn10300/mn10300.md (movqi_internal): Add alternatives"}, {"sha": "8771acf7e9b216204d25ec57681ffc83cfa70b99", "filename": "gcc/combine.c", "status": "modified", "additions": 48, "deletions": 26, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e626909c7d92d3a6964180f9232b59aaf85b426/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e626909c7d92d3a6964180f9232b59aaf85b426/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=4e626909c7d92d3a6964180f9232b59aaf85b426", "patch": "@@ -413,7 +413,7 @@ static int cant_combine_insn_p (rtx);\n static int can_combine_p (rtx, rtx, rtx, rtx, rtx, rtx, rtx *, rtx *);\n static int combinable_i3pat (rtx, rtx *, rtx, rtx, rtx, int, int, rtx *);\n static int contains_muldiv (rtx);\n-static rtx try_combine (rtx, rtx, rtx, rtx, int *);\n+static rtx try_combine (rtx, rtx, rtx, rtx, int *, rtx);\n static void undo_all (void);\n static void undo_commit (void);\n static rtx *find_split_point (rtx *, rtx, bool);\n@@ -1177,6 +1177,7 @@ combine_instructions (rtx f, unsigned int nregs)\n \n   FOR_EACH_BB (this_basic_block)\n     {\n+      rtx last_combined_insn = NULL_RTX;\n       optimize_this_for_speed_p = optimize_bb_for_speed_p (this_basic_block);\n       last_call_luid = 0;\n       mem_last_set = -1;\n@@ -1195,6 +1196,10 @@ combine_instructions (rtx f, unsigned int nregs)\n \t  next = 0;\n \t  if (NONDEBUG_INSN_P (insn))\n \t    {\n+\t      if (last_combined_insn == NULL_RTX\n+\t\t  || DF_INSN_LUID (last_combined_insn) < DF_INSN_LUID (insn))\n+\t\tlast_combined_insn = insn;\n+\n \t      /* See if we know about function return values before this\n \t\t insn based upon SUBREG flags.  */\n \t      check_promoted_subreg (insn, PATTERN (insn));\n@@ -1208,7 +1213,8 @@ combine_instructions (rtx f, unsigned int nregs)\n \n \t      FOR_EACH_LOG_LINK (links, insn)\n \t\tif ((next = try_combine (insn, links->insn, NULL_RTX,\n-\t\t\t\t\t NULL_RTX, &new_direct_jump_p)) != 0)\n+\t\t\t\t\t NULL_RTX, &new_direct_jump_p,\n+\t\t\t\t\t last_combined_insn)) != 0)\n \t\t  goto retry;\n \n \t      /* Try each sequence of three linked insns ending with this one.  */\n@@ -1224,8 +1230,8 @@ combine_instructions (rtx f, unsigned int nregs)\n \n \t\t  FOR_EACH_LOG_LINK (nextlinks, link)\n \t\t    if ((next = try_combine (insn, link, nextlinks->insn,\n-\t\t\t\t\t     NULL_RTX,\n-\t\t\t\t\t     &new_direct_jump_p)) != 0)\n+\t\t\t\t\t     NULL_RTX, &new_direct_jump_p,\n+\t\t\t\t\t     last_combined_insn)) != 0)\n \t\t      goto retry;\n \t\t}\n \n@@ -1243,13 +1249,14 @@ combine_instructions (rtx f, unsigned int nregs)\n \t\t  && sets_cc0_p (PATTERN (prev)))\n \t\t{\n \t\t  if ((next = try_combine (insn, prev, NULL_RTX, NULL_RTX,\n-\t\t\t\t\t   &new_direct_jump_p)) != 0)\n+\t\t\t\t\t   &new_direct_jump_p,\n+\t\t\t\t\t   last_combined_insn)) != 0)\n \t\t    goto retry;\n \n \t\t  FOR_EACH_LOG_LINK (nextlinks, prev)\n \t\t    if ((next = try_combine (insn, prev, nextlinks->insn,\n-\t\t\t\t\t     NULL_RTX,\n-\t\t\t\t\t     &new_direct_jump_p)) != 0)\n+\t\t\t\t\t     NULL_RTX, &new_direct_jump_p,\n+\t\t\t\t\t     last_combined_insn)) != 0)\n \t\t      goto retry;\n \t\t}\n \n@@ -1262,13 +1269,14 @@ combine_instructions (rtx f, unsigned int nregs)\n \t\t  && reg_mentioned_p (cc0_rtx, SET_SRC (PATTERN (insn))))\n \t\t{\n \t\t  if ((next = try_combine (insn, prev, NULL_RTX, NULL_RTX,\n-\t\t\t\t\t   &new_direct_jump_p)) != 0)\n+\t\t\t\t\t   &new_direct_jump_p,\n+\t\t\t\t\t   last_combined_insn)) != 0)\n \t\t    goto retry;\n \n \t\t  FOR_EACH_LOG_LINK (nextlinks, prev)\n \t\t    if ((next = try_combine (insn, prev, nextlinks->insn,\n-\t\t\t\t\t     NULL_RTX,\n-\t\t\t\t\t     &new_direct_jump_p)) != 0)\n+\t\t\t\t\t     NULL_RTX, &new_direct_jump_p,\n+\t\t\t\t\t     last_combined_insn)) != 0)\n \t\t      goto retry;\n \t\t}\n \n@@ -1283,8 +1291,8 @@ combine_instructions (rtx f, unsigned int nregs)\n \t\t    && NONJUMP_INSN_P (prev)\n \t\t    && sets_cc0_p (PATTERN (prev))\n \t\t    && (next = try_combine (insn, links->insn,\n-\t\t\t\t\t    prev, NULL_RTX,\n-\t\t\t\t\t    &new_direct_jump_p)) != 0)\n+\t\t\t\t\t    prev, NULL_RTX, &new_direct_jump_p,\n+\t\t\t\t\t    last_combined_insn)) != 0)\n \t\t  goto retry;\n #endif\n \n@@ -1295,7 +1303,8 @@ combine_instructions (rtx f, unsigned int nregs)\n \t\t     nextlinks = nextlinks->next)\n \t\t  if ((next = try_combine (insn, links->insn,\n \t\t\t\t\t   nextlinks->insn, NULL_RTX,\n-\t\t\t\t\t   &new_direct_jump_p)) != 0)\n+\t\t\t\t\t   &new_direct_jump_p,\n+\t\t\t\t\t   last_combined_insn)) != 0)\n \t\t    goto retry;\n \n \t      /* Try four-instruction combinations.  */\n@@ -1318,14 +1327,16 @@ combine_instructions (rtx f, unsigned int nregs)\n \t\t      FOR_EACH_LOG_LINK (nextlinks, link1)\n \t\t\tif ((next = try_combine (insn, link, link1,\n \t\t\t\t\t\t nextlinks->insn,\n-\t\t\t\t\t\t &new_direct_jump_p)) != 0)\n+\t\t\t\t\t\t &new_direct_jump_p,\n+\t\t\t\t\t\t last_combined_insn)) != 0)\n \t\t\t  goto retry;\n \t\t      /* I0, I1 -> I2, I2 -> I3.  */\n \t\t      for (nextlinks = next1->next; nextlinks;\n \t\t\t   nextlinks = nextlinks->next)\n \t\t\tif ((next = try_combine (insn, link, link1,\n \t\t\t\t\t\t nextlinks->insn,\n-\t\t\t\t\t\t &new_direct_jump_p)) != 0)\n+\t\t\t\t\t\t &new_direct_jump_p,\n+\t\t\t\t\t\t last_combined_insn)) != 0)\n \t\t\t  goto retry;\n \t\t    }\n \n@@ -1338,13 +1349,15 @@ combine_instructions (rtx f, unsigned int nregs)\n \t\t      FOR_EACH_LOG_LINK (nextlinks, link)\n \t\t\tif ((next = try_combine (insn, link, link1,\n \t\t\t\t\t\t nextlinks->insn,\n-\t\t\t\t\t\t &new_direct_jump_p)) != 0)\n+\t\t\t\t\t\t &new_direct_jump_p,\n+\t\t\t\t\t\t last_combined_insn)) != 0)\n \t\t\t  goto retry;\n \t\t      /* I0 -> I1; I1, I2 -> I3.  */\n \t\t      FOR_EACH_LOG_LINK (nextlinks, link1)\n \t\t\tif ((next = try_combine (insn, link, link1,\n \t\t\t\t\t\t nextlinks->insn,\n-\t\t\t\t\t\t &new_direct_jump_p)) != 0)\n+\t\t\t\t\t\t &new_direct_jump_p,\n+\t\t\t\t\t\t last_combined_insn)) != 0)\n \t\t\t  goto retry;\n \t\t    }\n \t\t}\n@@ -1373,7 +1386,8 @@ combine_instructions (rtx f, unsigned int nregs)\n \t\t      i2mod_old_rhs = copy_rtx (orig);\n \t\t      i2mod_new_rhs = copy_rtx (note);\n \t\t      next = try_combine (insn, i2mod, NULL_RTX, NULL_RTX,\n-\t\t\t\t\t  &new_direct_jump_p);\n+\t\t\t\t\t  &new_direct_jump_p,\n+\t\t\t\t\t  last_combined_insn);\n \t\t      i2mod = NULL_RTX;\n \t\t      if (next)\n \t\t\tgoto retry;\n@@ -2510,10 +2524,15 @@ update_cfg_for_uncondjump (rtx insn)\n    resume scanning.\n \n    Set NEW_DIRECT_JUMP_P to a nonzero value if try_combine creates a\n-   new direct jump instruction.  */\n+   new direct jump instruction.\n+\n+   LAST_COMBINED_INSN is either I3, or some insn after I3 that has\n+   been I3 passed to an earlier try_combine within the same basic\n+   block.  */\n \n static rtx\n-try_combine (rtx i3, rtx i2, rtx i1, rtx i0, int *new_direct_jump_p)\n+try_combine (rtx i3, rtx i2, rtx i1, rtx i0, int *new_direct_jump_p,\n+\t     rtx last_combined_insn)\n {\n   /* New patterns for I3 and I2, respectively.  */\n   rtx newpat, newi2pat = 0;\n@@ -3863,7 +3882,7 @@ try_combine (rtx i3, rtx i2, rtx i1, rtx i0, int *new_direct_jump_p)\n \t\t   i2src while its original mode is temporarily\n \t\t   restored, and then clear i2scratch so that we don't\n \t\t   do it again later.  */\n-\t\tpropagate_for_debug (i2, i3, reg, i2src);\n+\t\tpropagate_for_debug (i2, last_combined_insn, reg, i2src);\n \t\ti2scratch = false;\n \t\t/* Put back the new mode.  */\n \t\tadjust_reg_mode (reg, new_mode);\n@@ -3876,13 +3895,16 @@ try_combine (rtx i3, rtx i2, rtx i1, rtx i0, int *new_direct_jump_p)\n \t\tif (reg == i2dest)\n \t\t  {\n \t\t    first = i2;\n-\t\t    last = i3;\n+\t\t    last = last_combined_insn;\n \t\t  }\n \t\telse\n \t\t  {\n \t\t    first = i3;\n \t\t    last = undobuf.other_insn;\n \t\t    gcc_assert (last);\n+\t\t    if (DF_INSN_LUID (last)\n+\t\t\t< DF_INSN_LUID (last_combined_insn))\n+\t\t      last = last_combined_insn;\n \t\t  }\n \n \t\t/* We're dealing with a reg that changed mode but not\n@@ -4109,14 +4131,14 @@ try_combine (rtx i3, rtx i2, rtx i1, rtx i0, int *new_direct_jump_p)\n     if (newi2pat)\n       {\n \tif (MAY_HAVE_DEBUG_INSNS && i2scratch)\n-\t  propagate_for_debug (i2, i3, i2dest, i2src);\n+\t  propagate_for_debug (i2, last_combined_insn, i2dest, i2src);\n \tINSN_CODE (i2) = i2_code_number;\n \tPATTERN (i2) = newi2pat;\n       }\n     else\n       {\n \tif (MAY_HAVE_DEBUG_INSNS && i2src)\n-\t  propagate_for_debug (i2, i3, i2dest, i2src);\n+\t  propagate_for_debug (i2, last_combined_insn, i2dest, i2src);\n \tSET_INSN_DELETED (i2);\n       }\n \n@@ -4125,7 +4147,7 @@ try_combine (rtx i3, rtx i2, rtx i1, rtx i0, int *new_direct_jump_p)\n \tLOG_LINKS (i1) = NULL;\n \tREG_NOTES (i1) = 0;\n \tif (MAY_HAVE_DEBUG_INSNS)\n-\t  propagate_for_debug (i1, i3, i1dest, i1src);\n+\t  propagate_for_debug (i1, last_combined_insn, i1dest, i1src);\n \tSET_INSN_DELETED (i1);\n       }\n \n@@ -4134,7 +4156,7 @@ try_combine (rtx i3, rtx i2, rtx i1, rtx i0, int *new_direct_jump_p)\n \tLOG_LINKS (i0) = NULL;\n \tREG_NOTES (i0) = 0;\n \tif (MAY_HAVE_DEBUG_INSNS)\n-\t  propagate_for_debug (i0, i3, i0dest, i0src);\n+\t  propagate_for_debug (i0, last_combined_insn, i0dest, i0src);\n \tSET_INSN_DELETED (i0);\n       }\n "}, {"sha": "f17362e5468d08d9daa7c08b8baccd977104e1b9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e626909c7d92d3a6964180f9232b59aaf85b426/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e626909c7d92d3a6964180f9232b59aaf85b426/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4e626909c7d92d3a6964180f9232b59aaf85b426", "patch": "@@ -1,3 +1,8 @@\n+2011-04-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/48343\n+\t* gcc.dg/torture/pr48343.c: New test.\n+\n 2011-04-07  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* gcc.target/i386/asm-6.c: Remove dg-xfail-if."}]}