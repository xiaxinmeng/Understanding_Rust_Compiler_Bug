{"sha": "79667f82adf76d79baf6acfa20df02cf7f14d5fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzk2NjdmODJhZGY3NmQ3OWJhZjZhY2ZhMjBkZjAyY2Y3ZjE0ZDVmYw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2010-01-08T13:01:24Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-01-08T13:01:24Z"}, "message": "re PR libstdc++/42573 ([C++0x] shrink_to_fit() missing)\n\n2010-01-08  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/42573\n\t* include/bits/allocator.h (struct __shrink_to_fit): Add.\n\t* include/bits/stl_deque.h (deque<>::shrink_to_fit): Add.\n\t* include/bits/stl_vector.h (vector<>::shrink_to_fit): Likewise.\n\t* include/bits/stl_bvector.h (vector<bool>::shrink_to_fit): Likewise.\n\t* include/bits/basic_string.h (basic_string<>::shrink_to_fit):\n\tLikewise.\n\t* include/ext/vstring.h (__versa_string<>::shrink_to_fit): Likewise.\n\t* include/debug/deque: Add corresponding using declaration.\n\t* include/debug/vector: Likewise.\n\t* include/debug/string: Likewise.\n\t* include/profile/deque: Likewise.\n\t* include/profile/vector: Likewise.\n\t* config/abi/pre/gnu.ver: Export new symbols.\n\t* testsuite/23_containers/deque/capacity/shrink_to_fit.cc: New.\n\t* testsuite/23_containers/vector/capacity/shrink_to_fit.cc: Likewise.\n\t* testsuite/21_strings/basic_string/capacity/char/shrink_to_fit.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/capacity/wchar_t/shrink_to_fit.cc:\n\tLikewise.\n\t* testsuite/ext/vstring/capacity/shrink_to_fit.cc: Likewise.\n\t* testsuite/23_containers/deque/requirements/dr438/assign_neg.cc:\n\tAdjust dg-error line number.\n\t* testsuite/23_containers/deque/requirements/dr438/insert_neg.cc:\n\tLikewise.\n\t* testsuite/23_containers/deque/requirements/dr438/\n\tconstructor_1_neg.cc: Likewise.\n\t* testsuite/23_containers/deque/requirements/dr438/\n\tconstructor_2_neg.cc: Likewise.\n\t* testsuite/23_containers/vector/requirements/dr438/assign_neg.cc:\n\tAdjust dg-error line number.\n\t* testsuite/23_containers/vector/requirements/dr438/insert_neg.cc:\n\tLikewise.\n\t* testsuite/23_containers/vector/requirements/dr438/\n\tconstructor_1_neg.cc: Likewise.\n\t* testsuite/23_containers/vector/requirements/dr438/\n\tconstructor_2_neg.cc: Likewise.\n\nFrom-SVN: r155733", "tree": {"sha": "778689ad488b56c1f90d26cb0406c50fc38ecdcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/778689ad488b56c1f90d26cb0406c50fc38ecdcd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79667f82adf76d79baf6acfa20df02cf7f14d5fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79667f82adf76d79baf6acfa20df02cf7f14d5fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79667f82adf76d79baf6acfa20df02cf7f14d5fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79667f82adf76d79baf6acfa20df02cf7f14d5fc/comments", "author": null, "committer": null, "parents": [{"sha": "1eee5628bd63cd0d6d58700f06f431570db29de0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1eee5628bd63cd0d6d58700f06f431570db29de0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1eee5628bd63cd0d6d58700f06f431570db29de0"}], "stats": {"total": 400, "additions": 372, "deletions": 28}, "files": [{"sha": "11e38434525d2c4a1bbd536c9a2945d9206cb3af", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=79667f82adf76d79baf6acfa20df02cf7f14d5fc", "patch": "@@ -1,3 +1,43 @@\n+2010-01-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/42573\n+\t* include/bits/allocator.h (struct __shrink_to_fit): Add.\n+\t* include/bits/stl_deque.h (deque<>::shrink_to_fit): Add.\n+\t* include/bits/stl_vector.h (vector<>::shrink_to_fit): Likewise.\n+\t* include/bits/stl_bvector.h (vector<bool>::shrink_to_fit): Likewise.\n+\t* include/bits/basic_string.h (basic_string<>::shrink_to_fit):\n+\tLikewise.\n+\t* include/ext/vstring.h (__versa_string<>::shrink_to_fit): Likewise.\n+\t* include/debug/deque: Add corresponding using declaration.\n+\t* include/debug/vector: Likewise.\n+\t* include/debug/string: Likewise.\n+\t* include/profile/deque: Likewise.\n+\t* include/profile/vector: Likewise.\n+\t* config/abi/pre/gnu.ver: Export new symbols.\n+\t* testsuite/23_containers/deque/capacity/shrink_to_fit.cc: New.\n+\t* testsuite/23_containers/vector/capacity/shrink_to_fit.cc: Likewise.\n+\t* testsuite/21_strings/basic_string/capacity/char/shrink_to_fit.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/capacity/wchar_t/shrink_to_fit.cc:\n+\tLikewise.\n+\t* testsuite/ext/vstring/capacity/shrink_to_fit.cc: Likewise.\n+\t* testsuite/23_containers/deque/requirements/dr438/assign_neg.cc:\n+\tAdjust dg-error line number.\n+\t* testsuite/23_containers/deque/requirements/dr438/insert_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/deque/requirements/dr438/\n+\tconstructor_1_neg.cc: Likewise.\n+\t* testsuite/23_containers/deque/requirements/dr438/\n+\tconstructor_2_neg.cc: Likewise.\n+\t* testsuite/23_containers/vector/requirements/dr438/assign_neg.cc:\n+\tAdjust dg-error line number.\n+\t* testsuite/23_containers/vector/requirements/dr438/insert_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/vector/requirements/dr438/\n+\tconstructor_1_neg.cc: Likewise.\n+\t* testsuite/23_containers/vector/requirements/dr438/\n+\tconstructor_2_neg.cc: Likewise.\n+\n 2010-01-07  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* doc/xml/manual/evolution.xml: Fix typos, update."}, {"sha": "142aa089827913451eb6f41f7e32c74b9a27f7d6", "filename": "libstdc++-v3/config/abi/pre/gnu.ver", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver?ref=79667f82adf76d79baf6acfa20df02cf7f14d5fc", "patch": "@@ -1094,6 +1094,10 @@ GLIBCXX_3.4.14 {\n     _ZNSs18_S_construct_aux_2*;\n     _ZNSbIwSt11char_traitsIwESaIwEE18_S_construct_aux_2*;\n \n+    # string|wstring shrink_to_fit member function\n+    _ZNSs13shrink_to_fitEv;\n+    _ZNSbIwSt11char_traitsIwESaIwEE13shrink_to_fitEv;\n+\n     _ZSt25__throw_bad_function_callv;\n \n     # std::time_get::_M_extract_wday_or_month"}, {"sha": "283224d66750bc77333957626844eecd6dcb17d0", "filename": "libstdc++-v3/include/bits/allocator.h", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fallocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fallocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fallocator.h?ref=79667f82adf76d79baf6acfa20df02cf7f14d5fc", "patch": "@@ -1,6 +1,6 @@\n // Allocators -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -176,6 +176,31 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       { return __one != __two; }\n     };\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+   // A very basic implementation for now.  In general we have to wait for\n+   // the availability of the infrastructure described in N2983:  we should\n+   // try when either T has a move constructor which cannot throw or T is\n+   // CopyContructible.\n+   // NB: This code doesn't properly belong here, we should find a more\n+   // suited place common to std::vector and std::deque.\n+   template<typename _Tp,\n+\t    bool = __has_trivial_copy(typename _Tp::value_type)>\n+     struct __shrink_to_fit\n+     { static void _S_do_it(_Tp&) { } };\n+\n+   template<typename _Tp>\n+     struct __shrink_to_fit<_Tp, true>\n+     {\n+       static void\n+       _S_do_it(_Tp& __v)\n+       {\n+\t try\n+\t   { _Tp(__v).swap(__v); }\n+\t catch(...) { }\n+       }\n+     };\n+#endif\n+\n _GLIBCXX_END_NAMESPACE\n \n #endif"}, {"sha": "e82b8900111a1ff16d439aa4e6f1592ebfe254e7", "filename": "libstdc++-v3/include/bits/basic_string.h", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h?ref=79667f82adf76d79baf6acfa20df02cf7f14d5fc", "patch": "@@ -670,7 +670,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       length() const\n       { return _M_rep()->_M_length; }\n \n-      /// Returns the size() of the largest possible %string.\n+      ///  Returns the size() of the largest possible %string.\n       size_type\n       max_size() const\n       { return _Rep::_S_max_size; }\n@@ -702,6 +702,18 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       resize(size_type __n)\n       { this->resize(__n, _CharT()); }\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+      ///  A non-binding request to reduce capacity() to size().\n+      void\n+      shrink_to_fit()\n+      {\n+\ttry\n+\t  { reserve(0); }\n+\tcatch(...)\n+\t  { }\n+      }\n+#endif\n+\n       /**\n        *  Returns the total number of characters that the %string can hold\n        *  before needing to allocate more memory."}, {"sha": "6227a1fe951df54e116c25357e1d326c744b2db9", "filename": "libstdc++-v3/include/bits/stl_bvector.h", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_bvector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_bvector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_bvector.h?ref=79667f82adf76d79baf6acfa20df02cf7f14d5fc", "patch": "@@ -1,6 +1,6 @@\n // vector<bool> specialization -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -600,7 +600,7 @@ template<typename _Alloc>\n     assign(initializer_list<bool> __l)\n     { this->assign(__l.begin(), __l.end()); }\n #endif\n-    \n+\n     iterator\n     begin()\n     { return this->_M_impl._M_start; }\n@@ -824,6 +824,12 @@ template<typename _Alloc>\n         insert(end(), __new_size - size(), __x);\n     }\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+    void\n+    shrink_to_fit()\n+    { std::__shrink_to_fit<vector>::_S_do_it(*this); }\n+#endif\n+\n     void\n     flip()\n     {"}, {"sha": "d327fc2f20272d2530144fc3275363f66ff23ab0", "filename": "libstdc++-v3/include/bits/stl_deque.h", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h?ref=79667f82adf76d79baf6acfa20df02cf7f14d5fc", "patch": "@@ -1,6 +1,6 @@\n // Deque implementation -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -1105,6 +1105,13 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n \t  insert(this->_M_impl._M_finish, __new_size - __len, __x);\n       }\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+      /**  A non-binding request to reduce memory use.  */\n+      void\n+      shrink_to_fit()\n+      { std::__shrink_to_fit<deque>::_S_do_it(*this); }\n+#endif\n+\n       /**\n        *  Returns true if the %deque is empty.  (Thus begin() would\n        *  equal end().)"}, {"sha": "ab21a94e530bfe4ff2ca77f8c05c189975695375", "filename": "libstdc++-v3/include/bits/stl_vector.h", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h?ref=79667f82adf76d79baf6acfa20df02cf7f14d5fc", "patch": "@@ -1,6 +1,6 @@\n // Vector implementation -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -557,6 +557,13 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n \t  insert(end(), __new_size - size(), __x);\n       }\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+      /**  A non-binding request to reduce capacity() to size().  */\n+      void\n+      shrink_to_fit()\n+      { std::__shrink_to_fit<vector>::_S_do_it(*this); }\n+#endif\n+\n       /**\n        *  Returns the total number of elements that the %vector can\n        *  hold before needing to allocate more memory."}, {"sha": "bb9aef9302d64ae15de18e15c6fb56b48b04a40a", "filename": "libstdc++-v3/include/debug/deque", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fdeque", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fdeque", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fdeque?ref=79667f82adf76d79baf6acfa20df02cf7f14d5fc", "patch": "@@ -1,6 +1,6 @@\n // Debugging deque implementation -*- C++ -*-\n \n-// Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+// Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -223,6 +223,10 @@ namespace __debug\n \t  this->_M_invalidate_all();\n       }\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+      using _Base::shrink_to_fit;\n+#endif\n+\n       using _Base::empty;\n \n       // element access:"}, {"sha": "607d961171e01e6c6528bcf4255b1c7297246bac", "filename": "libstdc++-v3/include/debug/string", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fstring", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fstring", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fstring?ref=79667f82adf76d79baf6acfa20df02cf7f14d5fc", "patch": "@@ -1,6 +1,6 @@\n // Debugging string implementation -*- C++ -*-\n \n-// Copyright (C) 2003, 2005, 2006, 2009\n+// Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -203,6 +203,10 @@ namespace __gnu_debug\n     resize(size_type __n)\n     { this->resize(__n, _CharT()); }\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+    using _Base::shrink_to_fit;\n+#endif\n+\n     using _Base::capacity;\n     using _Base::reserve;\n "}, {"sha": "67733bca9f9e489c5aab9f5601793051f3b9a0e9", "filename": "libstdc++-v3/include/debug/vector", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector?ref=79667f82adf76d79baf6acfa20df02cf7f14d5fc", "patch": "@@ -1,6 +1,6 @@\n // Debugging vector implementation -*- C++ -*-\n \n-// Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+// Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -236,6 +236,10 @@ namespace __debug\n \t  this->_M_invalidate_all();\n       }\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+      using _Base::shrink_to_fit;\n+#endif\n+\n       size_type\n       capacity() const\n       {"}, {"sha": "d1a4afba139928d973089cf0a9cc123fd3d1f705", "filename": "libstdc++-v3/include/ext/vstring.h", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring.h?ref=79667f82adf76d79baf6acfa20df02cf7f14d5fc", "patch": "@@ -1,6 +1,7 @@\n // Versatile string -*- C++ -*-\n \n-// Copyright (C) 2005, 2006, 2007, 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -49,7 +50,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n     class __versa_string\n     : private _Base<_CharT, _Traits, _Alloc>\n     {\n-      typedef _Base<_CharT, _Traits, _Alloc>                __vstring_base;      \n+      typedef _Base<_CharT, _Traits, _Alloc>                __vstring_base;    \n       typedef typename __vstring_base::_CharT_alloc_type    _CharT_alloc_type;\n \n       // Types:\n@@ -455,6 +456,18 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n       resize(size_type __n)\n       { this->resize(__n, _CharT()); }\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+      /// A non-binding request to reduce capacity() to size().\n+      void\n+      shrink_to_fit()\n+      {\n+\ttry\n+\t  { this->reserve(0); }\n+\tcatch(...)\n+\t  { }\n+      }\n+#endif\n+\n       /**\n        *  Returns the total number of characters that the %string can\n        *  hold before needing to allocate more memory."}, {"sha": "d0859a4aa968fca3a0c62b04f7dbdca1d23b690a", "filename": "libstdc++-v3/include/profile/deque", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fdeque", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fdeque", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fdeque?ref=79667f82adf76d79baf6acfa20df02cf7f14d5fc", "patch": "@@ -1,6 +1,6 @@\n // Profiling deque implementation -*- C++ -*-\n \n-// Copyright (C) 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -200,6 +200,10 @@ namespace __profile\n \t_Base::resize(__sz, __c);\n       }\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+      using _Base::shrink_to_fit;\n+#endif\n+\n       using _Base::empty;\n \n       // element access:"}, {"sha": "0b1d752693531d2f29bdb5933daf23b628937eca", "filename": "libstdc++-v3/include/profile/vector", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fvector", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fvector", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fvector?ref=79667f82adf76d79baf6acfa20df02cf7f14d5fc", "patch": "@@ -1,6 +1,6 @@\n // Profiling vector implementation -*- C++ -*-\n \n-// Copyright (C) 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -169,6 +169,10 @@ namespace __profile\n         _Base::resize(__sz, __c);\n       }\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+      using _Base::shrink_to_fit;\n+#endif\n+\n       using _Base::empty;\n \n       // element access:"}, {"sha": "666445a152d74c42def4f099deec9dc3f2588ad4", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/capacity/char/shrink_to_fit.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fchar%2Fshrink_to_fit.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fchar%2Fshrink_to_fit.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fchar%2Fshrink_to_fit.cc?ref=79667f82adf76d79baf6acfa20df02cf7f14d5fc", "patch": "@@ -0,0 +1,42 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2010-01-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <string>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/42573\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  std::string s(100, 'a');\n+  s.push_back('b');\n+  s.push_back('b');\n+  VERIFY( s.size() < s.capacity() );\n+  s.shrink_to_fit();\n+  VERIFY( s.size() == s.capacity() );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "9fce4403ddfa77791c9ec6ec8bb72adb7207bd97", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/capacity/wchar_t/shrink_to_fit.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fwchar_t%2Fshrink_to_fit.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fwchar_t%2Fshrink_to_fit.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fwchar_t%2Fshrink_to_fit.cc?ref=79667f82adf76d79baf6acfa20df02cf7f14d5fc", "patch": "@@ -0,0 +1,42 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2010-01-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <string>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/42573\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  std::wstring s(100, L'a');\n+  s.push_back(L'b');\n+  s.push_back(L'b');\n+  VERIFY( s.size() < s.capacity() );\n+  s.shrink_to_fit();\n+  VERIFY( s.size() == s.capacity() );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "5f7fac6df4ad01d2ad4d3a73e9dfdc837fd146d0", "filename": "libstdc++-v3/testsuite/23_containers/deque/capacity/shrink_to_fit.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcapacity%2Fshrink_to_fit.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcapacity%2Fshrink_to_fit.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcapacity%2Fshrink_to_fit.cc?ref=79667f82adf76d79baf6acfa20df02cf7f14d5fc", "patch": "@@ -0,0 +1,42 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2010-01-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <vector>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/42573\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  std::vector<int> d(100);\n+  d.push_back(1);\n+  d.push_back(1);\n+  // VERIFY( d.size() < d.capacity() );\n+  d.shrink_to_fit();\n+  // VERIFY( d.size() == d.capacity() );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "0ab463da8216e02639cb6a8983847cf0e58beb56", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/dr438/assign_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fassign_neg.cc?ref=79667f82adf76d79baf6acfa20df02cf7f14d5fc", "patch": "@@ -1,6 +1,6 @@\n // 2007-04-27  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2007, 2008, 2009 Free Software Foundation\n+// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1568 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1575 }\n // { dg-excess-errors \"\" }\n \n #include <deque>"}, {"sha": "f5265634130e2ed6d5bcde96cd0ee08bfa6148e2", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/dr438/constructor_1_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc?ref=79667f82adf76d79baf6acfa20df02cf7f14d5fc", "patch": "@@ -1,6 +1,6 @@\n // 2007-04-27  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2007, 2008, 2009 Free Software Foundation\n+// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1507 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1514 }\n // { dg-excess-errors \"\" }\n \n #include <deque>"}, {"sha": "4ef1fc1b92d8e05d4f49d6b9c13a771ab2468d03", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/dr438/constructor_2_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc?ref=79667f82adf76d79baf6acfa20df02cf7f14d5fc", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1507 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1514 }\n // { dg-excess-errors \"\" }\n \n #include <deque>"}, {"sha": "df837568c6880375c2b2ab3fcbb5bbdfbd04f81d", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/dr438/insert_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Finsert_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Finsert_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Finsert_neg.cc?ref=79667f82adf76d79baf6acfa20df02cf7f14d5fc", "patch": "@@ -1,6 +1,6 @@\n // 2007-04-27  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2007, 2008, 2009 Free Software Foundation\n+// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1652 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1659 }\n // { dg-excess-errors \"\" }\n \n #include <deque>"}, {"sha": "2a737891b0aac2d88a2758b6fc99eafbab3f97b5", "filename": "libstdc++-v3/testsuite/23_containers/vector/capacity/shrink_to_fit.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcapacity%2Fshrink_to_fit.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcapacity%2Fshrink_to_fit.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcapacity%2Fshrink_to_fit.cc?ref=79667f82adf76d79baf6acfa20df02cf7f14d5fc", "patch": "@@ -0,0 +1,42 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2010-01-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <vector>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/42573\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  std::vector<int> v(100);\n+  v.push_back(1);\n+  v.push_back(1);\n+  VERIFY( v.size() < v.capacity() );\n+  v.shrink_to_fit();\n+  VERIFY( v.size() == v.capacity() );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "8bab7374da96705cdfbf754cbec466fce827ada2", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/dr438/assign_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fassign_neg.cc?ref=79667f82adf76d79baf6acfa20df02cf7f14d5fc", "patch": "@@ -1,6 +1,6 @@\n // 2007-04-27  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2007, 2008, 2009 Free Software Foundation\n+// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1047 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1054 }\n // { dg-excess-errors \"\" }\n \n #include <vector>"}, {"sha": "0ff3d3b5dbc876a7b47f978583faac9739161553", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/dr438/constructor_1_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc?ref=79667f82adf76d79baf6acfa20df02cf7f14d5fc", "patch": "@@ -1,6 +1,6 @@\n // 2007-04-27  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2007, 2008, 2009 Free Software Foundation\n+// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 987 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 994 }\n // { dg-excess-errors \"\" }\n \n #include <vector>"}, {"sha": "3f51e0db49a4400b00d75d9d43b6ece0c9ee2244", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/dr438/constructor_2_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc?ref=79667f82adf76d79baf6acfa20df02cf7f14d5fc", "patch": "@@ -1,6 +1,6 @@\n // 2007-04-27  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2007, 2008, 2009 Free Software Foundation\n+// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 987 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 994 }\n // { dg-excess-errors \"\" }\n \n #include <vector>"}, {"sha": "f710a584a6c747e8bbe9ab895a75d87052505076", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/dr438/insert_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Finsert_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Finsert_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Finsert_neg.cc?ref=79667f82adf76d79baf6acfa20df02cf7f14d5fc", "patch": "@@ -1,6 +1,6 @@\n // 2007-04-27  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2007, 2008, 2009 Free Software Foundation\n+// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1088 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1095 }\n // { dg-excess-errors \"\" }\n \n #include <vector>"}, {"sha": "e6737de0e311c3b6cd825e42983212d0494ac64e", "filename": "libstdc++-v3/testsuite/ext/vstring/capacity/shrink_to_fit.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Fcapacity%2Fshrink_to_fit.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79667f82adf76d79baf6acfa20df02cf7f14d5fc/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Fcapacity%2Fshrink_to_fit.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Fcapacity%2Fshrink_to_fit.cc?ref=79667f82adf76d79baf6acfa20df02cf7f14d5fc", "patch": "@@ -0,0 +1,42 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2010-01-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <ext/vstring.h>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/42573\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  __gnu_cxx::__vstring vs(100, 'a');\n+  vs.push_back('b');\n+  vs.push_back('b');\n+  VERIFY( vs.size() < vs.capacity() );\n+  vs.shrink_to_fit();\n+  VERIFY( vs.size() == vs.capacity() );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}