{"sha": "c540077a3bf60013333a175674558f6eefa08180", "node_id": "C_kwDOANBUbNoAKGM1NDAwNzdhM2JmNjAwMTMzMzNhMTc1Njc0NTU4ZjZlZWZhMDgxODA", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-06-15T21:40:33Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-06-15T21:40:33Z"}, "message": "analyzer: show saved diagnostics as nodes in .eg.dot dumps\n\nI've been using this tweak to the output of\n-fdump-analyzer-exploded-graph in my working copies for a while;\nthe extra red nodes make it *much* easier to find the places where\ndiagnostics are being emitted (or rejected by the diagnostic_manager).\n\ngcc/analyzer/ChangeLog:\n\t* diagnostic-manager.cc (saved_diagnostic::dump_dot_id): New.\n\t(saved_diagnostic::dump_as_dot_node): New.\n\t* diagnostic-manager.h (saved_diagnostic::dump_dot_id): New decl.\n\t(saved_diagnostic::dump_as_dot_node): New decl.\n\t* engine.cc (exploded_node::dump_dot): Add nodes for saved\n\tdiagnostics.\n\nSigned-off-by: David Malcolm <dmalcolm@redhat.com>", "tree": {"sha": "a6ed20b21fe13132900311ff3da30b3bca8a3469", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a6ed20b21fe13132900311ff3da30b3bca8a3469"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c540077a3bf60013333a175674558f6eefa08180", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c540077a3bf60013333a175674558f6eefa08180", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c540077a3bf60013333a175674558f6eefa08180", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c540077a3bf60013333a175674558f6eefa08180/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44681d454738837ec04752f2d1189a9a47ddf22d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44681d454738837ec04752f2d1189a9a47ddf22d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44681d454738837ec04752f2d1189a9a47ddf22d"}], "stats": {"total": 86, "additions": 86, "deletions": 0}, "files": [{"sha": "4e96a3667e319ad96aef34a99b13864242d5f86c", "filename": "gcc/analyzer/diagnostic-manager.cc", "status": "modified", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c540077a3bf60013333a175674558f6eefa08180/gcc%2Fanalyzer%2Fdiagnostic-manager.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c540077a3bf60013333a175674558f6eefa08180/gcc%2Fanalyzer%2Fdiagnostic-manager.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fdiagnostic-manager.cc?ref=c540077a3bf60013333a175674558f6eefa08180", "patch": "@@ -742,6 +742,68 @@ saved_diagnostic::to_json () const\n   return sd_obj;\n }\n \n+/* Dump this to PP in a form suitable for use as an id in .dot output.  */\n+\n+void\n+saved_diagnostic::dump_dot_id (pretty_printer *pp) const\n+{\n+  pp_printf (pp, \"sd_%i\", m_idx);\n+}\n+\n+/* Dump this to PP in a form suitable for use as a node in .dot output.  */\n+\n+void\n+saved_diagnostic::dump_as_dot_node (pretty_printer *pp) const\n+{\n+  dump_dot_id (pp);\n+  pp_printf (pp,\n+\t     \" [shape=none,margin=0,style=filled,fillcolor=\\\"red\\\",label=\\\"\");\n+  pp_write_text_to_stream (pp);\n+\n+  /* Node label.  */\n+  pp_printf (pp, \"DIAGNOSTIC: %s (sd: %i)\\n\",\n+\t     m_d->get_kind (), m_idx);\n+  if (m_sm)\n+    {\n+      pp_printf (pp, \"sm: %s\", m_sm->get_name ());\n+      if (m_state)\n+\t{\n+\t  pp_printf (pp, \"; state: \");\n+\t  m_state->dump_to_pp (pp);\n+\t}\n+      pp_newline (pp);\n+    }\n+  if (m_stmt)\n+    {\n+      pp_string (pp, \"stmt: \");\n+      pp_gimple_stmt_1 (pp, m_stmt, 0, (dump_flags_t)0);\n+      pp_newline (pp);\n+    }\n+  if (m_var)\n+    pp_printf (pp, \"var: %qE\\n\", m_var);\n+  if (m_sval)\n+    {\n+      pp_string (pp, \"sval: \");\n+      m_sval->dump_to_pp (pp, true);\n+      pp_newline (pp);\n+    }\n+  if (m_best_epath)\n+    pp_printf (pp, \"path length: %i\\n\", get_epath_length ());\n+\n+  pp_write_text_as_dot_label_to_stream (pp, /*for_record=*/true);\n+  pp_string (pp, \"\\\"];\\n\\n\");\n+\n+  /* Show links to duplicates.  */\n+  for (auto iter : m_duplicates)\n+    {\n+      dump_dot_id (pp);\n+      pp_string (pp, \" -> \");\n+      iter->dump_dot_id (pp);\n+      pp_string (pp, \" [style=\\\"dotted\\\" arrowhead=\\\"none\\\"];\");\n+      pp_newline (pp);\n+    }\n+}\n+\n /* Use PF to find the best exploded_path for this saved_diagnostic,\n    and store it in m_best_epath.\n    If m_stmt is still NULL, use m_stmt_finder on the epath to populate"}, {"sha": "b9bb7c8c254640d8beeff88e5a05912ca5ac449d", "filename": "gcc/analyzer/diagnostic-manager.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c540077a3bf60013333a175674558f6eefa08180/gcc%2Fanalyzer%2Fdiagnostic-manager.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c540077a3bf60013333a175674558f6eefa08180/gcc%2Fanalyzer%2Fdiagnostic-manager.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fdiagnostic-manager.h?ref=c540077a3bf60013333a175674558f6eefa08180", "patch": "@@ -46,6 +46,9 @@ class saved_diagnostic\n \n   json::object *to_json () const;\n \n+  void dump_dot_id (pretty_printer *pp) const;\n+  void dump_as_dot_node (pretty_printer *pp) const;\n+\n   const feasibility_problem *get_feasibility_problem () const\n   {\n     return m_problem;"}, {"sha": "ca86166173c3cc77dd16308188e06efa5eee461e", "filename": "gcc/analyzer/engine.cc", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c540077a3bf60013333a175674558f6eefa08180/gcc%2Fanalyzer%2Fengine.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c540077a3bf60013333a175674558f6eefa08180/gcc%2Fanalyzer%2Fengine.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fengine.cc?ref=c540077a3bf60013333a175674558f6eefa08180", "patch": "@@ -1209,6 +1209,27 @@ exploded_node::dump_dot (graphviz_out *gv, const dump_args_t &args) const\n   pp_write_text_as_dot_label_to_stream (pp, /*for_record=*/true);\n \n   pp_string (pp, \"\\\"];\\n\\n\");\n+\n+  /* It can be hard to locate the saved diagnostics as text within the\n+     enode nodes, so add extra nodes to the graph for each saved_diagnostic,\n+     highlighted in red.\n+     Compare with dump_saved_diagnostics.  */\n+  {\n+    unsigned i;\n+    const saved_diagnostic *sd;\n+    FOR_EACH_VEC_ELT (m_saved_diagnostics, i, sd)\n+      {\n+\tsd->dump_as_dot_node (pp);\n+\n+\t/* Add edge connecting this enode to the saved_diagnostic.  */\n+\tdump_dot_id (pp);\n+\tpp_string (pp, \" -> \");\n+\tsd->dump_dot_id (pp);\n+\tpp_string (pp, \" [style=\\\"dotted\\\" arrowhead=\\\"none\\\"];\");\n+\tpp_newline (pp);\n+      }\n+  }\n+\n   pp_flush (pp);\n }\n "}]}