{"sha": "132f1c27770fa6dafdf14591878d301aedd5ae16", "node_id": "C_kwDOANBUbNoAKDEzMmYxYzI3NzcwZmE2ZGFmZGYxNDU5MTg3OGQzMDFhZWRkNWFlMTY", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-10-29T20:39:01Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-11-16T15:20:30Z"}, "message": "c++: improve print_node of PTRMEM_CST\n\nIt's been inconvenient that pretty-printing of PTRMEM_CST didn't display\nwhat member the constant refers to.\n\nAdding that is complicated by the absence of a langhook for CONSTANT_CLASS_P\nnodes; the simplest fix for that is to use the tcc_exceptional hook for\ntcc_constant as well.\n\ngcc/cp/ChangeLog:\n\n\t* ptree.c (cxx_print_xnode): Handle PTRMEM_CST.\n\ngcc/ChangeLog:\n\n\t* langhooks.h (struct lang_hooks): Adjust comment.\n\t* print-tree.c (print_node): Also call print_xnode hook for\n\ttcc_constant class.", "tree": {"sha": "2ce7efc1e98e0a34e73c685f731ac26d68b71656", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ce7efc1e98e0a34e73c685f731ac26d68b71656"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/132f1c27770fa6dafdf14591878d301aedd5ae16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/132f1c27770fa6dafdf14591878d301aedd5ae16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/132f1c27770fa6dafdf14591878d301aedd5ae16", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/132f1c27770fa6dafdf14591878d301aedd5ae16/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11c4a06a6c1a9db0bfdb3ee8509392dd7163709c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11c4a06a6c1a9db0bfdb3ee8509392dd7163709c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11c4a06a6c1a9db0bfdb3ee8509392dd7163709c"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "d514aa2cad2765d9eb7762a494cb2ac2490ea45e", "filename": "gcc/cp/ptree.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/132f1c27770fa6dafdf14591878d301aedd5ae16/gcc%2Fcp%2Fptree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/132f1c27770fa6dafdf14591878d301aedd5ae16/gcc%2Fcp%2Fptree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fptree.c?ref=132f1c27770fa6dafdf14591878d301aedd5ae16", "patch": "@@ -379,6 +379,9 @@ cxx_print_xnode (FILE *file, tree node, int indent)\n       if (tree message = STATIC_ASSERT_MESSAGE (node))\n \tprint_node (file, \"message\", message, indent+4);\n       break;\n+    case PTRMEM_CST:\n+      print_node (file, \"member\", PTRMEM_CST_MEMBER (node), indent+4);\n+      break;\n     default:\n       break;\n     }"}, {"sha": "3db8f2a550d9fe82d1d46c023b3e9e7d846046c4", "filename": "gcc/langhooks.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/132f1c27770fa6dafdf14591878d301aedd5ae16/gcc%2Flanghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/132f1c27770fa6dafdf14591878d301aedd5ae16/gcc%2Flanghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.h?ref=132f1c27770fa6dafdf14591878d301aedd5ae16", "patch": "@@ -477,7 +477,7 @@ struct lang_hooks\n   void (*print_statistics) (void);\n \n   /* Called by print_tree when there is a tree of class tcc_exceptional\n-     that it doesn't know how to display.  */\n+     or tcc_constant that it doesn't know how to display.  */\n   lang_print_tree_hook print_xnode;\n \n   /* Called to print language-dependent parts of tcc_decl, tcc_type,"}, {"sha": "b5dc523fcb1e92372045d24a0b0a8e3617bb1760", "filename": "gcc/print-tree.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/132f1c27770fa6dafdf14591878d301aedd5ae16/gcc%2Fprint-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/132f1c27770fa6dafdf14591878d301aedd5ae16/gcc%2Fprint-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-tree.c?ref=132f1c27770fa6dafdf14591878d301aedd5ae16", "patch": "@@ -1004,8 +1004,7 @@ print_node (FILE *file, const char *prefix, tree node, int indent,\n \t  break;\n \n \tdefault:\n-\t  if (EXCEPTIONAL_CLASS_P (node))\n-\t    lang_hooks.print_xnode (file, node, indent);\n+\t  lang_hooks.print_xnode (file, node, indent);\n \t  break;\n \t}\n "}]}