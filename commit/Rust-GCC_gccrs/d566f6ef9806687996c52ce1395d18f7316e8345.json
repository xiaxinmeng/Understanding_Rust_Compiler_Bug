{"sha": "d566f6ef9806687996c52ce1395d18f7316e8345", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU2NmY2ZWY5ODA2Njg3OTk2YzUyY2UxMzk1ZDE4ZjczMTZlODM0NQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-04-29T15:34:45Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-04-29T15:34:45Z"}, "message": "* tree-flow-inline.h, tree-ssa-operands.c: Fix comment typos.\n\nFrom-SVN: r98994", "tree": {"sha": "3b78c2674c93e2275d0d3bf41205b0be32dd8d9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b78c2674c93e2275d0d3bf41205b0be32dd8d9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d566f6ef9806687996c52ce1395d18f7316e8345", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d566f6ef9806687996c52ce1395d18f7316e8345", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d566f6ef9806687996c52ce1395d18f7316e8345", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d566f6ef9806687996c52ce1395d18f7316e8345/comments", "author": null, "committer": null, "parents": [{"sha": "d198b59ab12557edbafc2bba595f855caccfc6ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d198b59ab12557edbafc2bba595f855caccfc6ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d198b59ab12557edbafc2bba595f855caccfc6ec"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "f52143430efff8599704ce533d54f169df165f3c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d566f6ef9806687996c52ce1395d18f7316e8345/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d566f6ef9806687996c52ce1395d18f7316e8345/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d566f6ef9806687996c52ce1395d18f7316e8345", "patch": "@@ -3,6 +3,8 @@\n \t* tree-flow-inline.h: Fix a comment typo.\n \t* doc/tree-ssa.texi: Fix a typo.\n \n+\t* tree-flow-inline.h, tree-ssa-operands.c: Fix comment typos.\n+\n 2005-04-29  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* config/fr30/fr30.c (fr30_expand_prologue): Use gcc_assert and"}, {"sha": "5da85e049e17b0aa4e1f3c901672b2c619b58f92", "filename": "gcc/tree-flow-inline.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d566f6ef9806687996c52ce1395d18f7316e8345/gcc%2Ftree-flow-inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d566f6ef9806687996c52ce1395d18f7316e8345/gcc%2Ftree-flow-inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow-inline.h?ref=d566f6ef9806687996c52ce1395d18f7316e8345", "patch": "@@ -314,7 +314,7 @@ first_safe_imm_use (imm_use_iterator *imm, tree var)\n   return imm->imm_use;\n }\n \n-/* Bump IMM to then next use in the list.  */\n+/* Bump IMM to the next use in the list.  */\n static inline use_operand_p\n next_safe_imm_use (imm_use_iterator *imm)\n {\n@@ -332,7 +332,7 @@ next_safe_imm_use (imm_use_iterator *imm)\n       imm->imm_use = imm->imm_use->next;\n       if (! end_safe_imm_use_p (imm))\n \t{\n-\t  /* This isnt the end, link iternode before the next use.  */\n+\t  /* This isn't the end, link iternode before the next use.  */\n \t  ptr->prev = imm->imm_use->prev;\n \t  ptr->next = imm->imm_use;\n \t  imm->imm_use->prev->next = ptr;\n@@ -380,7 +380,7 @@ first_readonly_imm_use (imm_use_iterator *imm, tree var)\n   return imm->imm_use;\n }\n \n-/* Bump IMM to then next use in the list.  */\n+/* Bump IMM to the next use in the list.  */\n static inline use_operand_p\n next_readonly_imm_use (imm_use_iterator *imm)\n {"}, {"sha": "7364052e10fb5b75d4a945fb81c8a96a0d982e92", "filename": "gcc/tree-ssa-operands.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d566f6ef9806687996c52ce1395d18f7316e8345/gcc%2Ftree-ssa-operands.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d566f6ef9806687996c52ce1395d18f7316e8345/gcc%2Ftree-ssa-operands.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.c?ref=d566f6ef9806687996c52ce1395d18f7316e8345", "patch": "@@ -1198,8 +1198,8 @@ swap_tree_operands (tree *exp0, tree *exp1)\n \t    use1 = x;\n \t    break;\n \t  }\n-      /* If both uses don't have operand entries, there isnt much we can do\n-         at this point. Presumably we dont need to worry about it.  */\n+      /* If both uses don't have operand entries, there isn't much we can do\n+         at this point.  Presumably we dont need to worry about it.  */\n       if (use0 != NUM_USES (uses) && use1 != NUM_USES (uses))\n         {\n \t  tree *tmp = USE_OP_PTR (uses, use1)->use;"}]}