{"sha": "fbf1cec7a4f6457161c1bfb3ba982e3f8190888e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmJmMWNlYzdhNGY2NDU3MTYxYzFiZmIzYmE5ODJlM2Y4MTkwODg4ZQ==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2019-03-16T11:50:03Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2019-03-16T11:50:03Z"}, "message": "re PR fortran/84394 (compiler error when using modules with derived types in block data subprograms)\n\n2019-03-16  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/84394\n\t* symbol.c (gfc_add_subroutine): If we are encountering a\n\tsubrtoutine within a BLOCK DATA and the name starts with an\n\tunderscore, do not check.\n\n2019-03-16  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/84394\n\t* gfortran.dg/blockdata_11.f90: New test.\n\nFrom-SVN: r269721", "tree": {"sha": "16851a192bf714fbd289e34b793d69d5efb8ef05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16851a192bf714fbd289e34b793d69d5efb8ef05"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fbf1cec7a4f6457161c1bfb3ba982e3f8190888e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbf1cec7a4f6457161c1bfb3ba982e3f8190888e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbf1cec7a4f6457161c1bfb3ba982e3f8190888e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbf1cec7a4f6457161c1bfb3ba982e3f8190888e/comments", "author": null, "committer": null, "parents": [{"sha": "0759ca4a92e9e269c8001fb8023f0539a1b315fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0759ca4a92e9e269c8001fb8023f0539a1b315fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0759ca4a92e9e269c8001fb8023f0539a1b315fa"}], "stats": {"total": 57, "additions": 55, "deletions": 2}, "files": [{"sha": "614694a241f21be80e2c4cb405072716c44722d4", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf1cec7a4f6457161c1bfb3ba982e3f8190888e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf1cec7a4f6457161c1bfb3ba982e3f8190888e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=fbf1cec7a4f6457161c1bfb3ba982e3f8190888e", "patch": "@@ -1,3 +1,10 @@\n+2019-03-16  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/84394\n+\t* symbol.c (gfc_add_subroutine): If we are encountering a\n+\tsubrtoutine within a BLOCK DATA and the name starts with an\n+\tunderscore, do not check.\n+\n 2019-03-15  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/60091\n@@ -7,7 +14,7 @@\n 2019-03-14  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \t* gfortran.texi: Document Q edit descriptor under\n-\t\" Extensions not implemented in GNU Fortran\".\n+\t\"Extensions not implemented in GNU Fortran\".\n \n 2019-03-13  Harald Anlauf  <anlauf@gmx.de>\n "}, {"sha": "c342d62ead1b0ef59762c1b8cf8d1f51867078f1", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf1cec7a4f6457161c1bfb3ba982e3f8190888e/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf1cec7a4f6457161c1bfb3ba982e3f8190888e/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=fbf1cec7a4f6457161c1bfb3ba982e3f8190888e", "patch": "@@ -1689,7 +1689,15 @@ gfc_add_subroutine (symbol_attribute *attr, const char *name, locus *where)\n     return false;\n \n   attr->subroutine = 1;\n-  return check_conflict (attr, name, where);\n+\n+  /* If we are looking at a BLOCK DATA statement and we encounter a\n+     name with a leading underscore (which must be\n+     compiler-generated), do not check. See PR 84394.  */\n+\n+  if (name && *name != '_' && gfc_current_state () != COMP_BLOCK_DATA)\n+    return check_conflict (attr, name, where);\n+  else\n+    return true;\n }\n \n "}, {"sha": "2d391aab5e6c93a98346db189786edeb5fbf8d15", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf1cec7a4f6457161c1bfb3ba982e3f8190888e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf1cec7a4f6457161c1bfb3ba982e3f8190888e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fbf1cec7a4f6457161c1bfb3ba982e3f8190888e", "patch": "@@ -1,3 +1,8 @@\n+2019-03-16  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/84394\n+\t* gfortran.dg/blockdata_11.f90: New test.\n+\n 2019-03-15  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/60091"}, {"sha": "4aee18b7c7a69f854b32cae3c4fe06af0052f158", "filename": "gcc/testsuite/gfortran.dg/blockdata_11.f90", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf1cec7a4f6457161c1bfb3ba982e3f8190888e/gcc%2Ftestsuite%2Fgfortran.dg%2Fblockdata_11.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf1cec7a4f6457161c1bfb3ba982e3f8190888e/gcc%2Ftestsuite%2Fgfortran.dg%2Fblockdata_11.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fblockdata_11.f90?ref=fbf1cec7a4f6457161c1bfb3ba982e3f8190888e", "patch": "@@ -0,0 +1,33 @@\n+! { dg-do run }\n+! PR 84394 - this used to complain about private procedures in\n+! BLOCK data.\n+module mod1\n+   implicit none\n+   type :: type1\n+      integer :: i1\n+   end type type1\n+end module\n+\n+module mod2\n+   implicit none\n+   contains\n+      subroutine sub1\n+         integer vals\n+         common /block1/ vals(5)\n+         if (any(vals /= [1, 2, 3, 4, 5])) stop 1\n+      end subroutine\n+end module\n+\n+block data blkdat\n+  use mod1\n+  integer vals\n+  common /block1/ vals(5)\n+  data vals/1, 2, 3, 4, 5/\n+end block data blkdat\n+\n+program main\n+  use mod2, only: sub1\n+  implicit none\n+  call sub1\n+end program\n+"}]}