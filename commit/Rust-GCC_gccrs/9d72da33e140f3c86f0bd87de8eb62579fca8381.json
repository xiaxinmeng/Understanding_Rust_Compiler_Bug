{"sha": "9d72da33e140f3c86f0bd87de8eb62579fca8381", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQ3MmRhMzNlMTQwZjNjODZmMGJkODdkZThlYjYyNTc5ZmNhODM4MQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-22T18:50:18Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-22T18:50:18Z"}, "message": "(target_isnan): Use GET_REAL macro to get argument.\n\nFrom-SVN: r4536", "tree": {"sha": "244aee5877e8a16ab2fa0793e15e61d39a5f554c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/244aee5877e8a16ab2fa0793e15e61d39a5f554c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d72da33e140f3c86f0bd87de8eb62579fca8381", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d72da33e140f3c86f0bd87de8eb62579fca8381", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d72da33e140f3c86f0bd87de8eb62579fca8381", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d72da33e140f3c86f0bd87de8eb62579fca8381/comments", "author": null, "committer": null, "parents": [{"sha": "5a3af366a2ee9a1be9796e1b9fe4e52081793d03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a3af366a2ee9a1be9796e1b9fe4e52081793d03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a3af366a2ee9a1be9796e1b9fe4e52081793d03"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "faa18261e906ba58bdd848910094755c73c5ca04", "filename": "gcc/real.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d72da33e140f3c86f0bd87de8eb62579fca8381/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d72da33e140f3c86f0bd87de8eb62579fca8381/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=9d72da33e140f3c86f0bd87de8eb62579fca8381", "patch": "@@ -768,8 +768,11 @@ int\n target_isnan (x)\n      REAL_VALUE_TYPE x;\n {\n+  unsigned EMUSHORT e[NE];\n+\n #ifdef NANS\n-  return (eisnan (&x));\n+  GET_REAL (&x, e);\n+  return (eisnan (e));\n #else\n   return (0);\n #endif"}]}