{"sha": "d1867128b29a772691b9d5909558cf8f478cb531", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDE4NjcxMjhiMjlhNzcyNjkxYjlkNTkwOTU1OGNmOGY0NzhjYjUzMQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-03-06T22:55:42Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-03-06T22:55:42Z"}, "message": "Fix typo in previous patch\n\nFrom-SVN: r63912", "tree": {"sha": "fdba94e635a19f20c8fc6869079b857b7cec70af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fdba94e635a19f20c8fc6869079b857b7cec70af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1867128b29a772691b9d5909558cf8f478cb531", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1867128b29a772691b9d5909558cf8f478cb531", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1867128b29a772691b9d5909558cf8f478cb531", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1867128b29a772691b9d5909558cf8f478cb531/comments", "author": null, "committer": null, "parents": [{"sha": "5e2569964b62e695056d601d225589ba01348ff8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e2569964b62e695056d601d225589ba01348ff8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e2569964b62e695056d601d225589ba01348ff8"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "c5fd77b0acf0b57f4b1d00be6a35c4d3dc009a92", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1867128b29a772691b9d5909558cf8f478cb531/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1867128b29a772691b9d5909558cf8f478cb531/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=d1867128b29a772691b9d5909558cf8f478cb531", "patch": "@@ -5848,7 +5848,6 @@ tree\n initialize_reference (tree type, tree expr, tree decl)\n {\n   tree conv;\n-  bool ref_bound_directly_to_rvalue_p = false;\n \n   if (type == error_mark_node || error_operand_p (expr))\n     return error_mark_node;\n@@ -5877,7 +5876,7 @@ initialize_reference (tree type, tree expr, tree decl)\n      In that case, we store the converted expression into a new\n      VAR_DECL in a new scope.  */\n   my_friendly_assert (TREE_CODE (conv) == REF_BIND, 20030302);\n-  if (decl && (NEED_TEMPORARY_P (conv) || ref_bound_directly_to_rvalue_p))\n+  if (decl && NEED_TEMPORARY_P (conv))\n     {\n       tree var;\n       "}]}