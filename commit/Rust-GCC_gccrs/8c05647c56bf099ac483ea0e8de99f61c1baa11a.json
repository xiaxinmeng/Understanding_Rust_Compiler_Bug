{"sha": "8c05647c56bf099ac483ea0e8de99f61c1baa11a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGMwNTY0N2M1NmJmMDk5YWM0ODNlYTBlOGRlOTlmNjFjMWJhYTExYQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2017-01-19T16:40:46Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-01-19T16:40:46Z"}, "message": "PR78905 define _GLIBCXX_RELEASE macro\n\n\tPR libstdc++/78905\n\t* doc/xml/manual/abi.xml (abi.versioning.history): Add markup to\n\tmacro names, filenames, and literal values. Document _GLIBCXX_RELEASE.\n\tDocument that the deprecated _GLIBCXX_VERSION macro was removed for\n\tthe 4.0.0 release.\n\t* doc/html/*: Regenerate.\n\t* include/Makefile.am (_GLIBCXX_RELEASE): Set value.\n\t* include/Makefile.in: Regenerate.\n\t* include/bits/c++config (_GLIBCXX_RELEASE): Add #define.\n\t* testsuite/ext/profile/mutex_extensions_neg.cc: Use lineno of 0 in\n\tdg-error.\n\nFrom-SVN: r244642", "tree": {"sha": "f7f09271c69680bfcf4f704790a05474be80891b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f7f09271c69680bfcf4f704790a05474be80891b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c05647c56bf099ac483ea0e8de99f61c1baa11a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c05647c56bf099ac483ea0e8de99f61c1baa11a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c05647c56bf099ac483ea0e8de99f61c1baa11a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c05647c56bf099ac483ea0e8de99f61c1baa11a/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cedb7e2c853eafc4860ae6a8832c048c4affd883", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cedb7e2c853eafc4860ae6a8832c048c4affd883", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cedb7e2c853eafc4860ae6a8832c048c4affd883"}], "stats": {"total": 270, "additions": 171, "deletions": 99}, "files": [{"sha": "c6fb5adec1d4853f18edc220bf151e015e35622d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c05647c56bf099ac483ea0e8de99f61c1baa11a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c05647c56bf099ac483ea0e8de99f61c1baa11a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8c05647c56bf099ac483ea0e8de99f61c1baa11a", "patch": "@@ -1,3 +1,17 @@\n+2017-01-19  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/78905\n+\t* doc/xml/manual/abi.xml (abi.versioning.history): Add markup to\n+\tmacro names, filenames, and literal values. Document _GLIBCXX_RELEASE.\n+\tDocument that the deprecated _GLIBCXX_VERSION macro was removed for\n+\tthe 4.0.0 release.\n+\t* doc/html/*: Regenerate.\n+\t* include/Makefile.am (_GLIBCXX_RELEASE): Set value.\n+\t* include/Makefile.in: Regenerate.\n+\t* include/bits/c++config (_GLIBCXX_RELEASE): Add #define.\n+\t* testsuite/ext/profile/mutex_extensions_neg.cc: Use lineno of 0 in\n+\tdg-error.\n+\n 2017-01-18  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/69301\n@@ -22,7 +36,7 @@\n \n \tPR libstdc++/69699\n \t* doc/xml/manual/abi.xml (abi.versioning.history): Explain why the\n-\t_GLIBCXX__ macro is not useful. Remove redundant date information\n+\t__GLIBCXX__ macro is not useful. Remove redundant date information\n \tand link to the GCC release timeline.\n \t(abi.versioning.active): Move partial sentence into the previous\n \tparagraph."}, {"sha": "775d09e3c1826ff31c149f2aae724640f2386d33", "filename": "libstdc++-v3/doc/html/manual/abi.html", "status": "modified", "additions": 50, "deletions": 28, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c05647c56bf099ac483ea0e8de99f61c1baa11a/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fabi.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c05647c56bf099ac483ea0e8de99f61c1baa11a/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fabi.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fabi.html?ref=8c05647c56bf099ac483ea0e8de99f61c1baa11a", "patch": "@@ -145,60 +145,82 @@\n     <code class=\"code\">-fabi-version</code>.\n     </p><p>\n     It is versioned as follows:\n-    </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>GCC 3.0: (Error, not versioned) </p></li><li class=\"listitem\"><p>GCC 3.1: (Error, not versioned) </p></li><li class=\"listitem\"><p>GCC 3.2: <code class=\"code\">-fabi-version=1</code></p></li><li class=\"listitem\"><p>GCC 3.3: <code class=\"code\">-fabi-version=1</code></p></li><li class=\"listitem\"><p>GCC 3.4, GCC 4.x: <code class=\"code\">-fabi-version=2</code> <span class=\"emphasis\"><em>(Incompatible with previous)</em></span></p></li></ul></div><p></p></li><li class=\"listitem\"><p>Incremental bumping of a library pre-defined macro. For releases\n-    before 3.4.0, the macro is __GLIBCPP__. For later releases, it's\n-    __GLIBCXX__. (The libstdc++ project generously changed from CPP to\n-    CXX throughout its source to allow the \"C\" pre-processor the CPP\n-    macro namespace.) These macros are defined as the date the library\n-    was released, in compressed ISO date format, as an unsigned long.\n+    </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>GCC 3.0: (Error, not versioned) </p></li><li class=\"listitem\"><p>GCC 3.1: (Error, not versioned) </p></li><li class=\"listitem\"><p>GCC 3.2: <code class=\"code\">-fabi-version=1</code></p></li><li class=\"listitem\"><p>GCC 3.3: <code class=\"code\">-fabi-version=1</code></p></li><li class=\"listitem\"><p>GCC 3.4, GCC 4.x: <code class=\"code\">-fabi-version=2</code> <span class=\"emphasis\"><em>(Incompatible with previous)</em></span></p></li><li class=\"listitem\"><p>GCC 5 and higher: <code class=\"code\">-fabi-version=0</code> <span class=\"emphasis\"><em>(See GCC manual for meaning)</em></span></p></li></ul></div><p></p></li><li class=\"listitem\"><p>Incremental bumping of a library pre-defined macro. For releases\n+    before 3.4.0, the macro is <span class=\"symbol\">__GLIBCPP__</span>. For later\n+    releases, it's <span class=\"symbol\">__GLIBCXX__</span>. (The libstdc++ project\n+    generously changed from CPP to CXX throughout its source to allow the\n+    \"C\" pre-processor the CPP macro namespace.) These macros are defined\n+    as the date the library was released, in compressed ISO date format,\n+    as an integer constant.\n     </p><p>\n-    This macro is defined in the file \"c++config\" in the\n-    \"libstdc++-v3/include/bits\" directory. Up to GCC 4.1.0, it was\n+    This macro is defined in the file\n+    <code class=\"filename\">c++config</code> in the\n+    <code class=\"filename\">libstdc++-v3/include/bits</code>\n+    directory.  Up to GCC 4.1.0, it was\n     changed every night by an automated script. Since GCC 4.1.0 it is set\n     during configuration to the same value as\n     <code class=\"filename\">gcc/DATESTAMP</code>, so for an official release its value\n     is the same as the date of the release, which is given in the <a class=\"link\" href=\"https://gcc.gnu.org/develop.html#timeline\" target=\"_top\">GCC Release\n     Timeline</a>.\n     </p><p>\n-    This macro is not useful for determining whether a particular feature is\n-    supported by the version of libstdc++ you are using. The date of a release\n-    might be after a feature was added to the development trunk, but the\n-    release could be from an older branch. For example, in the 5.4.0 release\n-    the macro has the value 20160603 which is greater than the 20160427 value\n-    of the macro in the 6.1.0 release, but there are features supported in the\n-    6.1.0 release that are not supported in 5.4.0 release.\n+    This macro can be used in code to detect whether the C++ Standard Library\n+    implementation in use is libstdc++, but is not useful for detecting the\n+    libstdc++ version, nor whether particular features are supported.\n+    The macro value might be a date after a feature was added to the\n+    development trunk, but the release could be from an older branch without\n+    the feature. For example, in the 5.4.0 release the macro has the value\n+    <code class=\"literal\">20160603</code> which is greater than the\n+    <code class=\"literal\">20160427</code> value of the macro in the 6.1.0 release,\n+    but there are features supported in the 6.1.0 release that are not\n+    supported in 5.4.0 release.\n     You also can't test for the the exact values listed below to try and\n     identify a release, because a snapshot taken from the gcc-5-branch on\n     2016-04-27 would have the same value for the macro as the 6.1.0 release\n     despite being a different version.\n     Many GNU/Linux distributions build their GCC packages from snapshots, so\n-    the macro can have dates that doesn't correspond to official releases.\n+    the macro can have dates that don't correspond to official releases.\n     </p><p>\n     It is versioned as follows:\n-    </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>GCC 3.0.0: 20010615</p></li><li class=\"listitem\"><p>GCC 3.0.1: 20010819</p></li><li class=\"listitem\"><p>GCC 3.0.2: 20011023</p></li><li class=\"listitem\"><p>GCC 3.0.3: 20011220</p></li><li class=\"listitem\"><p>GCC 3.0.4: 20020220</p></li><li class=\"listitem\"><p>GCC 3.1.0: 20020514</p></li><li class=\"listitem\"><p>GCC 3.1.1: 20020725</p></li><li class=\"listitem\"><p>GCC 3.2.0: 20020814</p></li><li class=\"listitem\"><p>GCC 3.2.1: 20021119</p></li><li class=\"listitem\"><p>GCC 3.2.2: 20030205</p></li><li class=\"listitem\"><p>GCC 3.2.3: 20030422</p></li><li class=\"listitem\"><p>GCC 3.3.0: 20030513</p></li><li class=\"listitem\"><p>GCC 3.3.1: 20030804</p></li><li class=\"listitem\"><p>GCC 3.3.2: 20031016</p></li><li class=\"listitem\"><p>GCC 3.3.3: 20040214</p></li><li class=\"listitem\"><p>GCC 3.4.0: 20040419</p></li><li class=\"listitem\"><p>GCC 3.4.1: 20040701</p></li><li class=\"listitem\"><p>GCC 3.4.2: 20040906</p></li><li class=\"listitem\"><p>GCC 3.4.3: 20041105</p></li><li class=\"listitem\"><p>GCC 3.4.4: 20050519</p></li><li class=\"listitem\"><p>GCC 3.4.5: 20051201</p></li><li class=\"listitem\"><p>GCC 3.4.6: 20060306</p></li><li class=\"listitem\"><p>GCC 4.0.0: 20050421</p></li><li class=\"listitem\"><p>GCC 4.0.1: 20050707</p></li><li class=\"listitem\"><p>GCC 4.0.2: 20050921</p></li><li class=\"listitem\"><p>GCC 4.0.3: 20060309</p></li><li class=\"listitem\"><p>\n+    </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>GCC 3.0.0: <code class=\"literal\">20010615</code></p></li><li class=\"listitem\"><p>GCC 3.0.1: <code class=\"literal\">20010819</code></p></li><li class=\"listitem\"><p>GCC 3.0.2: <code class=\"literal\">20011023</code></p></li><li class=\"listitem\"><p>GCC 3.0.3: <code class=\"literal\">20011220</code></p></li><li class=\"listitem\"><p>GCC 3.0.4: <code class=\"literal\">20020220</code></p></li><li class=\"listitem\"><p>GCC 3.1.0: <code class=\"literal\">20020514</code></p></li><li class=\"listitem\"><p>GCC 3.1.1: <code class=\"literal\">20020725</code></p></li><li class=\"listitem\"><p>GCC 3.2.0: <code class=\"literal\">20020814</code></p></li><li class=\"listitem\"><p>GCC 3.2.1: <code class=\"literal\">20021119</code></p></li><li class=\"listitem\"><p>GCC 3.2.2: <code class=\"literal\">20030205</code></p></li><li class=\"listitem\"><p>GCC 3.2.3: <code class=\"literal\">20030422</code></p></li><li class=\"listitem\"><p>GCC 3.3.0: <code class=\"literal\">20030513</code></p></li><li class=\"listitem\"><p>GCC 3.3.1: <code class=\"literal\">20030804</code></p></li><li class=\"listitem\"><p>GCC 3.3.2: <code class=\"literal\">20031016</code></p></li><li class=\"listitem\"><p>GCC 3.3.3: <code class=\"literal\">20040214</code></p></li><li class=\"listitem\"><p>GCC 3.4.0: <code class=\"literal\">20040419</code></p></li><li class=\"listitem\"><p>GCC 3.4.1: <code class=\"literal\">20040701</code></p></li><li class=\"listitem\"><p>GCC 3.4.2: <code class=\"literal\">20040906</code></p></li><li class=\"listitem\"><p>GCC 3.4.3: <code class=\"literal\">20041105</code></p></li><li class=\"listitem\"><p>GCC 3.4.4: <code class=\"literal\">20050519</code></p></li><li class=\"listitem\"><p>GCC 3.4.5: <code class=\"literal\">20051201</code></p></li><li class=\"listitem\"><p>GCC 3.4.6: <code class=\"literal\">20060306</code></p></li><li class=\"listitem\"><p>GCC 4.0.0: <code class=\"literal\">20050421</code></p></li><li class=\"listitem\"><p>GCC 4.0.1: <code class=\"literal\">20050707</code></p></li><li class=\"listitem\"><p>GCC 4.0.2: <code class=\"literal\">20050921</code></p></li><li class=\"listitem\"><p>GCC 4.0.3: <code class=\"literal\">20060309</code></p></li><li class=\"listitem\"><p>\n       GCC 4.1.0 and later: the GCC release date, as shown in the\n       <a class=\"link\" href=\"https://gcc.gnu.org/develop.html#timeline\" target=\"_top\">GCC\n       Release Timeline</a>\n     </p></li></ul></div><p></p></li><li class=\"listitem\"><p>\n-    Incremental bumping of a library pre-defined macro,\n-    _GLIBCPP_VERSION. This macro is defined as the released version of\n-    the library, as a string literal. This is only implemented in\n-    GCC 3.1.0 releases and higher, and is deprecated in 3.4 (where it\n-    is called _GLIBCXX_VERSION).\n+    Since GCC 7, incremental bumping of a library pre-defined macro,\n+    <span class=\"symbol\">_GLIBCXX_RELEASE</span>. This macro is defined to the GCC\n+    major version that the libstdc++ headers belong to, as an integer constant.\n+    When compiling with GCC it has the same value as GCC's pre-defined\n+    macro <span class=\"symbol\">__GNUC__</span>.\n+    This macro can be used when libstdc++ is used with a non-GNU\n+    compiler where <span class=\"symbol\">__GNUC__</span> is not defined, or has a\n+    different value that doesn't correspond to the libstdc++ version.\n     </p><p>\n-    This macro is defined in the file \"c++config\" in the\n-    \"libstdc++-v3/include/bits\" directory and is generated\n-    automatically by autoconf as part of the configure-time generation\n-    of config.h.\n+    This macro is defined in the file\n+    <code class=\"filename\">c++config</code> in the\n+    <code class=\"filename\">libstdc++-v3/include/bits</code>\n+    directory and is generated automatically by autoconf as part of the\n+    configure-time generation of\n+    <code class=\"filename\">config.h</code> and subsequently\n+    <code class=\"filename\">&lt;bits/c++config.h&gt;</code>.\n+    </p></li><li class=\"listitem\"><p>\n+    Historically, incremental bumping of a library pre-defined macro,\n+    <span class=\"symbol\">_GLIBCPP_VERSION</span>. This macro was defined as the\n+    released version of the library, as a string literal. This was only\n+    implemented in GCC 3.1.0 releases and higher, and was deprecated in\n+    3.4.x (where it was called <span class=\"symbol\">_GLIBCXX_VERSION</span>),\n+    and is not defined in 4.0.0 and higher.\n+    </p><p>\n+    This macro is defined in the same file as\n+    <span class=\"symbol\">_GLIBCXX_RELEASE</span>, described above.\n     </p><p>\n     It is versioned as follows:\n-    </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>GCC 3.0.0: \"3.0.0\"</p></li><li class=\"listitem\"><p>GCC 3.0.1: \"3.0.0\" (Error, should be \"3.0.1\")</p></li><li class=\"listitem\"><p>GCC 3.0.2: \"3.0.0\" (Error, should be \"3.0.2\")</p></li><li class=\"listitem\"><p>GCC 3.0.3: \"3.0.0\" (Error, should be \"3.0.3\")</p></li><li class=\"listitem\"><p>GCC 3.0.4: \"3.0.0\" (Error, should be \"3.0.4\")</p></li><li class=\"listitem\"><p>GCC 3.1.0: \"3.1.0\"</p></li><li class=\"listitem\"><p>GCC 3.1.1: \"3.1.1\"</p></li><li class=\"listitem\"><p>GCC 3.2.0: \"3.2\"</p></li><li class=\"listitem\"><p>GCC 3.2.1: \"3.2.1\"</p></li><li class=\"listitem\"><p>GCC 3.2.2: \"3.2.2\"</p></li><li class=\"listitem\"><p>GCC 3.2.3: \"3.2.3\"</p></li><li class=\"listitem\"><p>GCC 3.3.0: \"3.3\"</p></li><li class=\"listitem\"><p>GCC 3.3.1: \"3.3.1\"</p></li><li class=\"listitem\"><p>GCC 3.3.2: \"3.3.2\"</p></li><li class=\"listitem\"><p>GCC 3.3.3: \"3.3.3\"</p></li><li class=\"listitem\"><p>GCC 3.4: \"version-unused\"</p></li><li class=\"listitem\"><p>GCC 4.x: \"version-unused\"</p></li></ul></div><p></p></li><li class=\"listitem\"><p>\n+    </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>GCC 3.0.0: <code class=\"literal\">\"3.0.0\"</code></p></li><li class=\"listitem\"><p>GCC 3.0.1: <code class=\"literal\">\"3.0.0\"</code> (Error, should be <code class=\"literal\">\"3.0.1\"</code>)</p></li><li class=\"listitem\"><p>GCC 3.0.2: <code class=\"literal\">\"3.0.0\"</code> (Error, should be <code class=\"literal\">\"3.0.2\"</code>)</p></li><li class=\"listitem\"><p>GCC 3.0.3: <code class=\"literal\">\"3.0.0\"</code> (Error, should be <code class=\"literal\">\"3.0.3\"</code>)</p></li><li class=\"listitem\"><p>GCC 3.0.4: <code class=\"literal\">\"3.0.0\"</code> (Error, should be <code class=\"literal\">\"3.0.4\"</code>)</p></li><li class=\"listitem\"><p>GCC 3.1.0: <code class=\"literal\">\"3.1.0\"</code></p></li><li class=\"listitem\"><p>GCC 3.1.1: <code class=\"literal\">\"3.1.1\"</code></p></li><li class=\"listitem\"><p>GCC 3.2.0: <code class=\"literal\">\"3.2\"</code></p></li><li class=\"listitem\"><p>GCC 3.2.1: <code class=\"literal\">\"3.2.1\"</code></p></li><li class=\"listitem\"><p>GCC 3.2.2: <code class=\"literal\">\"3.2.2\"</code></p></li><li class=\"listitem\"><p>GCC 3.2.3: <code class=\"literal\">\"3.2.3\"</code></p></li><li class=\"listitem\"><p>GCC 3.3.0: <code class=\"literal\">\"3.3\"</code></p></li><li class=\"listitem\"><p>GCC 3.3.1: <code class=\"literal\">\"3.3.1\"</code></p></li><li class=\"listitem\"><p>GCC 3.3.2: <code class=\"literal\">\"3.3.2\"</code></p></li><li class=\"listitem\"><p>GCC 3.3.3: <code class=\"literal\">\"3.3.3\"</code></p></li><li class=\"listitem\"><p>GCC 3.4: <code class=\"literal\">\"version-unused\"</code></p></li><li class=\"listitem\"><p>GCC 4 and later: not defined</p></li></ul></div><p></p></li><li class=\"listitem\"><p>\n     Matching each specific C++ compiler release to a specific set of\n     C++ include files. This is only implemented in GCC 3.1.1 releases\n     and higher.\n     </p><p>\n     All C++ includes are installed in\n-    <code class=\"filename\">include/c++</code>, then nest in a\n+    <code class=\"filename\">include/c++</code>, then nested in a\n     directory hierarchy corresponding to the C++ compiler's released\n     version. This version corresponds to the variable \"gcc_version\" in\n     \"libstdc++-v3/acinclude.m4,\" and more details can be found in that"}, {"sha": "f2b2ec3796225bc1ce4441caed9ff9561b378fb3", "filename": "libstdc++-v3/doc/xml/manual/abi.xml", "status": "modified", "additions": 97, "deletions": 68, "changes": 165, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c05647c56bf099ac483ea0e8de99f61c1baa11a/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fabi.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c05647c56bf099ac483ea0e8de99f61c1baa11a/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fabi.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fabi.xml?ref=8c05647c56bf099ac483ea0e8de99f61c1baa11a", "patch": "@@ -378,22 +378,26 @@ compatible.\n     <listitem><para>GCC 3.2: <code>-fabi-version=1</code></para></listitem>\n     <listitem><para>GCC 3.3: <code>-fabi-version=1</code></para></listitem>\n     <listitem><para>GCC 3.4, GCC 4.x: <code>-fabi-version=2</code> <emphasis>(Incompatible with previous)</emphasis></para></listitem>\n+    <listitem><para>GCC 5 and higher: <code>-fabi-version=0</code> <emphasis>(See GCC manual for meaning)</emphasis></para></listitem>\n     </itemizedlist>\n     <para/>\n     </listitem>\n \n    <listitem>\n     <para>Incremental bumping of a library pre-defined macro. For releases\n-    before 3.4.0, the macro is __GLIBCPP__. For later releases, it's\n-    __GLIBCXX__. (The libstdc++ project generously changed from CPP to\n-    CXX throughout its source to allow the \"C\" pre-processor the CPP\n-    macro namespace.) These macros are defined as the date the library\n-    was released, in compressed ISO date format, as an unsigned long.\n+    before 3.4.0, the macro is <symbol>__GLIBCPP__</symbol>. For later\n+    releases, it's <symbol>__GLIBCXX__</symbol>. (The libstdc++ project\n+    generously changed from CPP to CXX throughout its source to allow the\n+    \"C\" pre-processor the CPP macro namespace.) These macros are defined\n+    as the date the library was released, in compressed ISO date format,\n+    as an integer constant.\n     </para>\n \n     <para>\n-    This macro is defined in the file \"c++config\" in the\n-    \"libstdc++-v3/include/bits\" directory. Up to GCC 4.1.0, it was\n+    This macro is defined in the file\n+    <filename class=\"headerfile\">c++config</filename> in the\n+    <filename class=\"directory\">libstdc++-v3/include/bits</filename>\n+    directory.  Up to GCC 4.1.0, it was\n     changed every night by an automated script. Since GCC 4.1.0 it is set\n     during configuration to the same value as\n     <filename>gcc/DATESTAMP</filename>, so for an official release its value\n@@ -404,51 +408,54 @@ compatible.\n     </para>\n \n     <para>\n-    This macro is not useful for determining whether a particular feature is\n-    supported by the version of libstdc++ you are using. The date of a release\n-    might be after a feature was added to the development trunk, but the\n-    release could be from an older branch. For example, in the 5.4.0 release\n-    the macro has the value 20160603 which is greater than the 20160427 value\n-    of the macro in the 6.1.0 release, but there are features supported in the\n-    6.1.0 release that are not supported in 5.4.0 release.\n+    This macro can be used in code to detect whether the C++ Standard Library\n+    implementation in use is libstdc++, but is not useful for detecting the\n+    libstdc++ version, nor whether particular features are supported.\n+    The macro value might be a date after a feature was added to the\n+    development trunk, but the release could be from an older branch without\n+    the feature. For example, in the 5.4.0 release the macro has the value\n+    <literal>20160603</literal> which is greater than the\n+    <literal>20160427</literal> value of the macro in the 6.1.0 release,\n+    but there are features supported in the 6.1.0 release that are not\n+    supported in 5.4.0 release.\n     You also can't test for the the exact values listed below to try and\n     identify a release, because a snapshot taken from the gcc-5-branch on\n     2016-04-27 would have the same value for the macro as the 6.1.0 release\n     despite being a different version.\n     Many GNU/Linux distributions build their GCC packages from snapshots, so\n-    the macro can have dates that doesn't correspond to official releases.\n+    the macro can have dates that don't correspond to official releases.\n     </para>\n \n     <para>\n     It is versioned as follows:\n     </para>\n     <itemizedlist>\n-    <listitem><para>GCC 3.0.0: 20010615</para></listitem>\n-    <listitem><para>GCC 3.0.1: 20010819</para></listitem>\n-    <listitem><para>GCC 3.0.2: 20011023</para></listitem>\n-    <listitem><para>GCC 3.0.3: 20011220</para></listitem>\n-    <listitem><para>GCC 3.0.4: 20020220</para></listitem>\n-    <listitem><para>GCC 3.1.0: 20020514</para></listitem>\n-    <listitem><para>GCC 3.1.1: 20020725</para></listitem>\n-    <listitem><para>GCC 3.2.0: 20020814</para></listitem>\n-    <listitem><para>GCC 3.2.1: 20021119</para></listitem>\n-    <listitem><para>GCC 3.2.2: 20030205</para></listitem>\n-    <listitem><para>GCC 3.2.3: 20030422</para></listitem>\n-    <listitem><para>GCC 3.3.0: 20030513</para></listitem>\n-    <listitem><para>GCC 3.3.1: 20030804</para></listitem>\n-    <listitem><para>GCC 3.3.2: 20031016</para></listitem>\n-    <listitem><para>GCC 3.3.3: 20040214</para></listitem>\n-    <listitem><para>GCC 3.4.0: 20040419</para></listitem>\n-    <listitem><para>GCC 3.4.1: 20040701</para></listitem>\n-    <listitem><para>GCC 3.4.2: 20040906</para></listitem>\n-    <listitem><para>GCC 3.4.3: 20041105</para></listitem>\n-    <listitem><para>GCC 3.4.4: 20050519</para></listitem>\n-    <listitem><para>GCC 3.4.5: 20051201</para></listitem>\n-    <listitem><para>GCC 3.4.6: 20060306</para></listitem>\n-    <listitem><para>GCC 4.0.0: 20050421</para></listitem>\n-    <listitem><para>GCC 4.0.1: 20050707</para></listitem>\n-    <listitem><para>GCC 4.0.2: 20050921</para></listitem>\n-    <listitem><para>GCC 4.0.3: 20060309</para></listitem>\n+    <listitem><para>GCC 3.0.0: <literal>20010615</literal></para></listitem>\n+    <listitem><para>GCC 3.0.1: <literal>20010819</literal></para></listitem>\n+    <listitem><para>GCC 3.0.2: <literal>20011023</literal></para></listitem>\n+    <listitem><para>GCC 3.0.3: <literal>20011220</literal></para></listitem>\n+    <listitem><para>GCC 3.0.4: <literal>20020220</literal></para></listitem>\n+    <listitem><para>GCC 3.1.0: <literal>20020514</literal></para></listitem>\n+    <listitem><para>GCC 3.1.1: <literal>20020725</literal></para></listitem>\n+    <listitem><para>GCC 3.2.0: <literal>20020814</literal></para></listitem>\n+    <listitem><para>GCC 3.2.1: <literal>20021119</literal></para></listitem>\n+    <listitem><para>GCC 3.2.2: <literal>20030205</literal></para></listitem>\n+    <listitem><para>GCC 3.2.3: <literal>20030422</literal></para></listitem>\n+    <listitem><para>GCC 3.3.0: <literal>20030513</literal></para></listitem>\n+    <listitem><para>GCC 3.3.1: <literal>20030804</literal></para></listitem>\n+    <listitem><para>GCC 3.3.2: <literal>20031016</literal></para></listitem>\n+    <listitem><para>GCC 3.3.3: <literal>20040214</literal></para></listitem>\n+    <listitem><para>GCC 3.4.0: <literal>20040419</literal></para></listitem>\n+    <listitem><para>GCC 3.4.1: <literal>20040701</literal></para></listitem>\n+    <listitem><para>GCC 3.4.2: <literal>20040906</literal></para></listitem>\n+    <listitem><para>GCC 3.4.3: <literal>20041105</literal></para></listitem>\n+    <listitem><para>GCC 3.4.4: <literal>20050519</literal></para></listitem>\n+    <listitem><para>GCC 3.4.5: <literal>20051201</literal></para></listitem>\n+    <listitem><para>GCC 3.4.6: <literal>20060306</literal></para></listitem>\n+    <listitem><para>GCC 4.0.0: <literal>20050421</literal></para></listitem>\n+    <listitem><para>GCC 4.0.1: <literal>20050707</literal></para></listitem>\n+    <listitem><para>GCC 4.0.2: <literal>20050921</literal></para></listitem>\n+    <listitem><para>GCC 4.0.3: <literal>20060309</literal></para></listitem>\n     <listitem><para>\n       GCC 4.1.0 and later: the GCC release date, as shown in the\n       <link xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n@@ -461,41 +468,63 @@ compatible.\n \n     <listitem>\n     <para>\n-    Incremental bumping of a library pre-defined macro,\n-    _GLIBCPP_VERSION. This macro is defined as the released version of\n-    the library, as a string literal. This is only implemented in\n-    GCC 3.1.0 releases and higher, and is deprecated in 3.4 (where it\n-    is called _GLIBCXX_VERSION).\n+    Since GCC 7, incremental bumping of a library pre-defined macro,\n+    <symbol>_GLIBCXX_RELEASE</symbol>. This macro is defined to the GCC\n+    major version that the libstdc++ headers belong to, as an integer constant.\n+    When compiling with GCC it has the same value as GCC's pre-defined\n+    macro <symbol>__GNUC__</symbol>.\n+    This macro can be used when libstdc++ is used with a non-GNU\n+    compiler where <symbol>__GNUC__</symbol> is not defined, or has a\n+    different value that doesn't correspond to the libstdc++ version.\n     </para>\n \n     <para>\n-    This macro is defined in the file \"c++config\" in the\n-    \"libstdc++-v3/include/bits\" directory and is generated\n-    automatically by autoconf as part of the configure-time generation\n-    of config.h.\n+    This macro is defined in the file\n+    <filename class=\"headerfile\">c++config</filename> in the\n+    <filename class=\"directory\">libstdc++-v3/include/bits</filename>\n+    directory and is generated automatically by autoconf as part of the\n+    configure-time generation of\n+    <filename class=\"headerfile\">config.h</filename> and subsequently\n+    <filename class=\"headerfile\">&lt;bits/c++config.h&gt;</filename>.\n+    </para>\n+    </listitem>\n+\n+    <listitem>\n+    <para>\n+    Historically, incremental bumping of a library pre-defined macro,\n+    <symbol>_GLIBCPP_VERSION</symbol>. This macro was defined as the\n+    released version of the library, as a string literal. This was only\n+    implemented in GCC 3.1.0 releases and higher, and was deprecated in\n+    3.4.x (where it was called <symbol>_GLIBCXX_VERSION</symbol>),\n+    and is not defined in 4.0.0 and higher.\n+    </para>\n+\n+    <para>\n+    This macro is defined in the same file as\n+    <symbol>_GLIBCXX_RELEASE</symbol>, described above.\n     </para>\n \n     <para>\n     It is versioned as follows:\n     </para>\n     <itemizedlist>\n-    <listitem><para>GCC 3.0.0: \"3.0.0\"</para></listitem>\n-    <listitem><para>GCC 3.0.1: \"3.0.0\" (Error, should be \"3.0.1\")</para></listitem>\n-    <listitem><para>GCC 3.0.2: \"3.0.0\" (Error, should be \"3.0.2\")</para></listitem>\n-    <listitem><para>GCC 3.0.3: \"3.0.0\" (Error, should be \"3.0.3\")</para></listitem>\n-    <listitem><para>GCC 3.0.4: \"3.0.0\" (Error, should be \"3.0.4\")</para></listitem>\n-    <listitem><para>GCC 3.1.0: \"3.1.0\"</para></listitem>\n-    <listitem><para>GCC 3.1.1: \"3.1.1\"</para></listitem>\n-    <listitem><para>GCC 3.2.0: \"3.2\"</para></listitem>\n-    <listitem><para>GCC 3.2.1: \"3.2.1\"</para></listitem>\n-    <listitem><para>GCC 3.2.2: \"3.2.2\"</para></listitem>\n-    <listitem><para>GCC 3.2.3: \"3.2.3\"</para></listitem>\n-    <listitem><para>GCC 3.3.0: \"3.3\"</para></listitem>\n-    <listitem><para>GCC 3.3.1: \"3.3.1\"</para></listitem>\n-    <listitem><para>GCC 3.3.2: \"3.3.2\"</para></listitem>\n-    <listitem><para>GCC 3.3.3: \"3.3.3\"</para></listitem>\n-    <listitem><para>GCC 3.4: \"version-unused\"</para></listitem>\n-    <listitem><para>GCC 4.x: \"version-unused\"</para></listitem>\n+    <listitem><para>GCC 3.0.0: <literal>\"3.0.0\"</literal></para></listitem>\n+    <listitem><para>GCC 3.0.1: <literal>\"3.0.0\"</literal> (Error, should be <literal>\"3.0.1\"</literal>)</para></listitem>\n+    <listitem><para>GCC 3.0.2: <literal>\"3.0.0\"</literal> (Error, should be <literal>\"3.0.2\"</literal>)</para></listitem>\n+    <listitem><para>GCC 3.0.3: <literal>\"3.0.0\"</literal> (Error, should be <literal>\"3.0.3\"</literal>)</para></listitem>\n+    <listitem><para>GCC 3.0.4: <literal>\"3.0.0\"</literal> (Error, should be <literal>\"3.0.4\"</literal>)</para></listitem>\n+    <listitem><para>GCC 3.1.0: <literal>\"3.1.0\"</literal></para></listitem>\n+    <listitem><para>GCC 3.1.1: <literal>\"3.1.1\"</literal></para></listitem>\n+    <listitem><para>GCC 3.2.0: <literal>\"3.2\"</literal></para></listitem>\n+    <listitem><para>GCC 3.2.1: <literal>\"3.2.1\"</literal></para></listitem>\n+    <listitem><para>GCC 3.2.2: <literal>\"3.2.2\"</literal></para></listitem>\n+    <listitem><para>GCC 3.2.3: <literal>\"3.2.3\"</literal></para></listitem>\n+    <listitem><para>GCC 3.3.0: <literal>\"3.3\"</literal></para></listitem>\n+    <listitem><para>GCC 3.3.1: <literal>\"3.3.1\"</literal></para></listitem>\n+    <listitem><para>GCC 3.3.2: <literal>\"3.3.2\"</literal></para></listitem>\n+    <listitem><para>GCC 3.3.3: <literal>\"3.3.3\"</literal></para></listitem>\n+    <listitem><para>GCC 3.4: <literal>\"version-unused\"</literal></para></listitem>\n+    <listitem><para>GCC 4 and later: not defined</para></listitem>\n     </itemizedlist>\n     <para/>\n     </listitem>\n@@ -508,7 +537,7 @@ compatible.\n     </para>\n     <para>\n     All C++ includes are installed in\n-    <filename class=\"directory\">include/c++</filename>, then nest in a\n+    <filename class=\"directory\">include/c++</filename>, then nested in a\n     directory hierarchy corresponding to the C++ compiler's released\n     version. This version corresponds to the variable \"gcc_version\" in\n     \"libstdc++-v3/acinclude.m4,\" and more details can be found in that"}, {"sha": "3703bd1d3d9b68dcfc76b16c9700400d3bc851d8", "filename": "libstdc++-v3/include/Makefile.am", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c05647c56bf099ac483ea0e8de99f61c1baa11a/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c05647c56bf099ac483ea0e8de99f61c1baa11a/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.am?ref=8c05647c56bf099ac483ea0e8de99f61c1baa11a", "patch": "@@ -1238,6 +1238,7 @@ ${host_builddir}/c++config.h: ${CONFIG_HEADER} \\\n \t\t\t      stamp-cxx11-abi \\\n \t\t\t      stamp-allocator-new\n \t@date=`cat ${toplevel_srcdir}/gcc/DATESTAMP` ;\\\n+\trelease=`sed 's/^\\([0-9]*\\).*$$/\\1/' ${toplevel_srcdir}/gcc/BASE-VER` ;\\\n \tns_version=`cat stamp-namespace-version` ;\\\n \tvisibility=`cat stamp-visibility` ;\\\n \texterntemplate=`cat stamp-extern-template` ;\\\n@@ -1249,6 +1250,7 @@ ${host_builddir}/c++config.h: ${CONFIG_HEADER} \\\n \t${CONFIG_HEADER} > /dev/null 2>&1 \\\n \t&& ldbl_compat='s,^#undef _GLIBCXX_LONG_DOUBLE_COMPAT$$,#define _GLIBCXX_LONG_DOUBLE_COMPAT 1,' ;\\\n \tsed -e \"s,define __GLIBCXX__,define __GLIBCXX__ $$date,\" \\\n+\t-e \"s,define _GLIBCXX_RELEASE,define _GLIBCXX_RELEASE $$release,\" \\\n \t-e \"s,define _GLIBCXX_INLINE_VERSION, define _GLIBCXX_INLINE_VERSION $$ns_version,\" \\\n \t-e \"s,define _GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY, define _GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY $$visibility,\" \\\n \t-e \"s,define _GLIBCXX_EXTERN_TEMPLATE$$, define _GLIBCXX_EXTERN_TEMPLATE $$externtemplate,\" \\"}, {"sha": "ae1481f05534130a9b31dbfacd6a50c61a8d9844", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c05647c56bf099ac483ea0e8de99f61c1baa11a/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c05647c56bf099ac483ea0e8de99f61c1baa11a/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=8c05647c56bf099ac483ea0e8de99f61c1baa11a", "patch": "@@ -1669,6 +1669,7 @@ ${host_builddir}/c++config.h: ${CONFIG_HEADER} \\\n \t\t\t      stamp-cxx11-abi \\\n \t\t\t      stamp-allocator-new\n \t@date=`cat ${toplevel_srcdir}/gcc/DATESTAMP` ;\\\n+\trelease=`sed 's/^\\([0-9]*\\).*$$/\\1/' ${toplevel_srcdir}/gcc/BASE-VER` ;\\\n \tns_version=`cat stamp-namespace-version` ;\\\n \tvisibility=`cat stamp-visibility` ;\\\n \texterntemplate=`cat stamp-extern-template` ;\\\n@@ -1680,6 +1681,7 @@ ${host_builddir}/c++config.h: ${CONFIG_HEADER} \\\n \t${CONFIG_HEADER} > /dev/null 2>&1 \\\n \t&& ldbl_compat='s,^#undef _GLIBCXX_LONG_DOUBLE_COMPAT$$,#define _GLIBCXX_LONG_DOUBLE_COMPAT 1,' ;\\\n \tsed -e \"s,define __GLIBCXX__,define __GLIBCXX__ $$date,\" \\\n+\t-e \"s,define _GLIBCXX_RELEASE,define _GLIBCXX_RELEASE $$release,\" \\\n \t-e \"s,define _GLIBCXX_INLINE_VERSION, define _GLIBCXX_INLINE_VERSION $$ns_version,\" \\\n \t-e \"s,define _GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY, define _GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY $$visibility,\" \\\n \t-e \"s,define _GLIBCXX_EXTERN_TEMPLATE$$, define _GLIBCXX_EXTERN_TEMPLATE $$externtemplate,\" \\"}, {"sha": "bc1ab5fc17e1e7eb17a4771c6c68eabdaebec1f4", "filename": "libstdc++-v3/include/bits/c++config", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c05647c56bf099ac483ea0e8de99f61c1baa11a/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c05647c56bf099ac483ea0e8de99f61c1baa11a/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig?ref=8c05647c56bf099ac483ea0e8de99f61c1baa11a", "patch": "@@ -30,7 +30,10 @@\n #ifndef _GLIBCXX_CXX_CONFIG_H\n #define _GLIBCXX_CXX_CONFIG_H 1\n \n-// The current version of the C++ library in compressed ISO date format.\n+// The major release number for the GCC release the C++ library belongs to.\n+#define _GLIBCXX_RELEASE\n+\n+// The datestamp of the C++ library in compressed ISO date format.\n #define __GLIBCXX__\n \n // Macros for various attributes."}, {"sha": "645aa24f0358b3acad2680897747cd619f49f300", "filename": "libstdc++-v3/testsuite/ext/profile/mutex_extensions_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c05647c56bf099ac483ea0e8de99f61c1baa11a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fprofile%2Fmutex_extensions_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c05647c56bf099ac483ea0e8de99f61c1baa11a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fprofile%2Fmutex_extensions_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fprofile%2Fmutex_extensions_neg.cc?ref=8c05647c56bf099ac483ea0e8de99f61c1baa11a", "patch": "@@ -25,7 +25,7 @@\n \n #include <vector>\n \n-// { dg-error \"multiple inlined namespaces\" \"\" { target *-*-* } 350 }\n+// { dg-error \"multiple inlined namespaces\" \"\" { target *-*-* } 0 }\n \n // \"template argument 1 is invalid\"\n // { dg-prune-output \"tuple:993\" }"}]}