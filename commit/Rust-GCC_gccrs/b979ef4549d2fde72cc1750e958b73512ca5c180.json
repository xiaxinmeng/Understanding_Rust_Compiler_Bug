{"sha": "b979ef4549d2fde72cc1750e958b73512ca5c180", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjk3OWVmNDU0OWQyZmRlNzJjYzE3NTBlOTU4YjczNTEyY2E1YzE4MA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-09-08T06:31:47Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-09-08T06:31:47Z"}, "message": "dsp16xxx.c: Include ggc.h\n\n\t* dsp16xxx.c: Include ggc.h\n\t(override_options): Mark GC roots.\n\t* mn10200.c: Include ggc.h.\n\t(asm_file_start): Mark GC roots.\n\t* tahoe.c: Include ggc.h.\n\t(extensible_operand): Mark GC roots.\n\nFrom-SVN: r29187", "tree": {"sha": "5477ab981b2b136d3f8b2322ee1f0a5362f894fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5477ab981b2b136d3f8b2322ee1f0a5362f894fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b979ef4549d2fde72cc1750e958b73512ca5c180", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b979ef4549d2fde72cc1750e958b73512ca5c180", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b979ef4549d2fde72cc1750e958b73512ca5c180", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b979ef4549d2fde72cc1750e958b73512ca5c180/comments", "author": null, "committer": null, "parents": [{"sha": "f0866ec2bbf260ec00c2dd73f3370fade558b126", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0866ec2bbf260ec00c2dd73f3370fade558b126", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0866ec2bbf260ec00c2dd73f3370fade558b126"}], "stats": {"total": 46, "additions": 44, "deletions": 2}, "files": [{"sha": "4f2adb4bcb5066d45db5c70f33fc50e98ee850a1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b979ef4549d2fde72cc1750e958b73512ca5c180/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b979ef4549d2fde72cc1750e958b73512ca5c180/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b979ef4549d2fde72cc1750e958b73512ca5c180", "patch": "@@ -1,3 +1,12 @@\n+Tue Sep  7 23:31:53 1999  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* dsp16xxx.c: Include ggc.h\n+\t(override_options): Mark GC roots.\n+\t* mn10200.c: Include ggc.h.\n+\t(asm_file_start): Mark GC roots.\n+\t* tahoe.c: Include ggc.h.\n+\t(extensible_operand): Mark GC roots.\n+\n Tue Sep  7 23:23:15 1999  Linas Vepstas  <linas@linas.org>\n \n \t* README: Add section discussing status of ELF ABI."}, {"sha": "b249c071fd15ca272642ee0468573d2836de65be", "filename": "gcc/config/dsp16xx/dsp16xx.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b979ef4549d2fde72cc1750e958b73512ca5c180/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b979ef4549d2fde72cc1750e958b73512ca5c180/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.c?ref=b979ef4549d2fde72cc1750e958b73512ca5c180", "patch": "@@ -35,6 +35,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"expr.h\"\n #include \"function.h\"\n #include \"flags.h\"\n+#include \"ggc.h\"\n \n char *text_seg_name;\n char *rsect_text;\n@@ -1529,8 +1530,33 @@ override_options ()\n \t  flag_inline_functions = 1;\n \t}\n     }\n+\n+  /* Mark our global variables for GC.  */\n+  ggc_add_rtx (&dsp16xx_addhf3_libcall, 1);\n+  ggc_add_rtx (dsp16xx_addhf3_libcall, 1);\n+  ggc_add_rtx (dsp16xx_subhf3_libcall, 1);\n+  ggc_add_rtx (dsp16xx_mulhf3_libcall, 1);\n+  ggc_add_rtx (dsp16xx_divhf3_libcall, 1);\n+  ggc_add_rtx (dsp16xx_cmphf3_libcall, 1);\n+  ggc_add_rtx (dsp16xx_fixhfhi2_libcall, 1);\n+  ggc_add_rtx (dsp16xx_floathihf2_libcall, 1);\n+  ggc_add_rtx (dsp16xx_neghf2_libcall, 1);\n+  ggc_add_rtx (dsp16xx_mulhi3_libcall, 1);\n+  ggc_add_rtx (dsp16xx_udivqi3_libcall, 1);\n+  ggc_add_rtx (dsp16xx_udivhi3_libcall, 1);\n+  ggc_add_rtx (dsp16xx_divqi3_libcall, 1);\n+  ggc_add_rtx (dsp16xx_divhi3_libcall, 1);\n+  ggc_add_rtx (dsp16xx_modqi3_libcall, 1);\n+  ggc_add_rtx (dsp16xx_modhi3_libcall, 1);\n+  ggc_add_rtx (dsp16xx_umodqi3_libcall, 1);\n+  ggc_add_rtx (dsp16xx_umodhi3_libcall, 1);\n+  ggc_add_rtx (dsp16xx_ashrhi3_libcall, 1);\n+  ggc_add_rtx (dsp16xx_ashlhi3_libcall, 1);\n+  ggc_add_rtx (dsp16xx_ucmphi2_libcall, 1);\n+  ggc_add_rtx (dsp16xx_lshrhi3_libcall, 1);\n }\n \n+\n enum rtx_code\n next_cc_user_code (insn)\n rtx insn;"}, {"sha": "a74e6b65643cabb9689e43a35dc3bd5df20c9fb7", "filename": "gcc/config/mn10200/mn10200.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b979ef4549d2fde72cc1750e958b73512ca5c180/gcc%2Fconfig%2Fmn10200%2Fmn10200.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b979ef4549d2fde72cc1750e958b73512ca5c180/gcc%2Fconfig%2Fmn10200%2Fmn10200.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10200%2Fmn10200.c?ref=b979ef4549d2fde72cc1750e958b73512ca5c180", "patch": "@@ -36,6 +36,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"expr.h\"\n #include \"function.h\"\n #include \"obstack.h\"\n+#include \"ggc.h\"\n \n /* Global registers known to hold the value zero.\n \n@@ -72,6 +73,8 @@ asm_file_start (file)\n   else\n     fprintf (file, \"\\n\\n\");\n   output_file_directive (file, main_input_filename);\n+  ggc_add_rtx (&zero_dreg, 1);\n+  ggc_add_rtx (&zero_areg, 1);\n }\n \n /* Print operand X using operand code CODE to assembly language output file"}, {"sha": "8ad8bef2adac00088c8509fd7f6786f54360fe9b", "filename": "gcc/config/tahoe/tahoe.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b979ef4549d2fde72cc1750e958b73512ca5c180/gcc%2Fconfig%2Ftahoe%2Ftahoe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b979ef4549d2fde72cc1750e958b73512ca5c180/gcc%2Fconfig%2Ftahoe%2Ftahoe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ftahoe%2Ftahoe.c?ref=b979ef4549d2fde72cc1750e958b73512ca5c180", "patch": "@@ -35,6 +35,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"function.h\"\n #include \"output.h\"\n #include \"insn-attr.h\"\n+#include \"ggc.h\"\n \n /* On tahoe, you have to go to memory to convert a register\n    from sub-word to word.  */\n@@ -50,8 +51,11 @@ extensible_operand (op, mode)\n        || (GET_CODE (op) == SUBREG\n \t   && GET_CODE (SUBREG_REG (op)) == REG))\n       && tahoe_reg_conversion_loc == 0)\n-    tahoe_reg_conversion_loc\n-      = assign_stack_local (SImode, GET_MODE_SIZE (SImode));\n+    {\n+      tahoe_reg_conversion_loc\n+\t= assign_stack_local (SImode, GET_MODE_SIZE (SImode));\n+      ggc_add_rtx_root (&tahoe_reg_conversion_loc, 1);\n+    }\n \n   return general_operand (op, mode);\n }"}]}