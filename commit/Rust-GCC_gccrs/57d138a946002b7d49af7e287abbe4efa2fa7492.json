{"sha": "57d138a946002b7d49af7e287abbe4efa2fa7492", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTdkMTM4YTk0NjAwMmI3ZDQ5YWY3ZTI4N2FiYmU0ZWZhMmZhNzQ5Mg==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2011-12-23T01:53:13Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2011-12-23T01:53:13Z"}, "message": "re PR middle-end/51252 (FAIL: c-c++-common/tm/freq.c (internal compiler error))\n\n\tPR middle-end/51252\n\t* config/pa/pa.c (pa_som_tm_clone_table_section): New function.\n\t(som_tm_clone_table_section): Declare.\n\t(pa_file_start_space): Create $TM_CLONE_TABLE$ subspace.\n\t(pa_som_asm_init_sections): Init som_tm_clone_table_section.\n\t* config/pa/som.h (TARGET_ASM_TM_CLONE_TABLE_SECTION): Define.\n\nFrom-SVN: r182646", "tree": {"sha": "685e9057867b62ad618b3c95d29a4908bd17da09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/685e9057867b62ad618b3c95d29a4908bd17da09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57d138a946002b7d49af7e287abbe4efa2fa7492", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57d138a946002b7d49af7e287abbe4efa2fa7492", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57d138a946002b7d49af7e287abbe4efa2fa7492", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57d138a946002b7d49af7e287abbe4efa2fa7492/comments", "author": null, "committer": null, "parents": [{"sha": "2ae90de6655ff7fa87a4ac94e155e3bfd83fe78c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ae90de6655ff7fa87a4ac94e155e3bfd83fe78c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ae90de6655ff7fa87a4ac94e155e3bfd83fe78c"}], "stats": {"total": 36, "additions": 32, "deletions": 4}, "files": [{"sha": "ae8cad322400f781378ff9908b0fe664c7791991", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57d138a946002b7d49af7e287abbe4efa2fa7492/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57d138a946002b7d49af7e287abbe4efa2fa7492/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=57d138a946002b7d49af7e287abbe4efa2fa7492", "patch": "@@ -1,3 +1,12 @@\n+2011-12-22  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\tPR middle-end/51252\n+\t* config/pa/pa.c (pa_som_tm_clone_table_section): New function.\n+\t(som_tm_clone_table_section): Declare.\n+\t(pa_file_start_space): Create $TM_CLONE_TABLE$ subspace.\n+\t(pa_som_asm_init_sections): Init som_tm_clone_table_section.\n+\t* config/pa/som.h (TARGET_ASM_TM_CLONE_TABLE_SECTION): Define.\n+\n 2011-12-22  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* doc/tm.texi.in (TARGET_PREPARE_PCH_SAVE): New hook."}, {"sha": "9b1a6578201504216f1c2fc4eb9479585d2d335a", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57d138a946002b7d49af7e287abbe4efa2fa7492/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57d138a946002b7d49af7e287abbe4efa2fa7492/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=57d138a946002b7d49af7e287abbe4efa2fa7492", "patch": "@@ -118,6 +118,7 @@ static int pa_adjust_cost (rtx, rtx, rtx, int);\n static int pa_adjust_priority (rtx, int);\n static int pa_issue_rate (void);\n static void pa_som_asm_init_sections (void) ATTRIBUTE_UNUSED;\n+static section *pa_som_tm_clone_table_section (void) ATTRIBUTE_UNUSED;\n static section *pa_select_section (tree, int, unsigned HOST_WIDE_INT)\n      ATTRIBUTE_UNUSED;\n static void pa_encode_section_info (tree, rtx, int);\n@@ -192,6 +193,7 @@ static bool pa_legitimate_constant_p (enum machine_mode, rtx);\n static GTY(()) section *som_readonly_data_section;\n static GTY(()) section *som_one_only_readonly_data_section;\n static GTY(()) section *som_one_only_data_section;\n+static GTY(()) section *som_tm_clone_table_section;\n \n /* Counts for the number of callee-saved general and floating point\n    registers which were saved by the current function's prologue.  */\n@@ -5396,13 +5398,15 @@ pa_file_start_space (int sortspace)\n   aputs (\"\\t.SPACE $PRIVATE$\");\n   if (sortspace)\n     aputs (\",SORT=16\");\n-  aputs (\"\\n\\t.SUBSPA $DATA$,QUAD=1,ALIGN=8,ACCESS=31\"\n-         \"\\n\\t.SUBSPA $BSS$,QUAD=1,ALIGN=8,ACCESS=31,ZERO,SORT=82\"\n-         \"\\n\\t.SPACE $TEXT$\");\n+  aputs (\"\\n\\t.SUBSPA $DATA$,QUAD=1,ALIGN=8,ACCESS=31\");\n+  if (flag_tm)\n+    aputs (\"\\n\\t.SUBSPA $TM_CLONE_TABLE$,QUAD=1,ALIGN=8,ACCESS=31\");\n+  aputs (\"\\n\\t.SUBSPA $BSS$,QUAD=1,ALIGN=8,ACCESS=31,ZERO,SORT=82\"\n+\t \"\\n\\t.SPACE $TEXT$\");\n   if (sortspace)\n     aputs (\",SORT=8\");\n   aputs (\"\\n\\t.SUBSPA $LIT$,QUAD=0,ALIGN=8,ACCESS=44\"\n-         \"\\n\\t.SUBSPA $CODE$,QUAD=0,ALIGN=8,ACCESS=44,CODE_ONLY\\n\");\n+\t \"\\n\\t.SUBSPA $CODE$,QUAD=0,ALIGN=8,ACCESS=44,CODE_ONLY\\n\");\n }\n \n static inline void\n@@ -9755,6 +9759,11 @@ pa_som_asm_init_sections (void)\n \t\t\t   \"\\t.NSUBSPA $DATA$,QUAD=1,ALIGN=8,\"\n \t\t\t   \"ACCESS=31,SORT=24,COMDAT\");\n \n+  if (flag_tm)\n+    som_tm_clone_table_section\n+      = get_unnamed_section (0, output_section_asm_op,\n+\t\t\t     \"\\t.SPACE $PRIVATE$\\n\\t.SUBSPA $TM_CLONE_TABLE$\");\n+\n   /* FIXME: HPUX ld generates incorrect GOT entries for \"T\" fixups\n      which reference data within the $TEXT$ space (for example constant\n      strings in the $LIT$ subspace).\n@@ -9777,6 +9786,14 @@ pa_som_asm_init_sections (void)\n   exception_section = data_section;\n }\n \n+/* Implement TARGET_ASM_TM_CLONE_TABLE_SECTION.  */\n+\n+static section *\n+pa_som_tm_clone_table_section (void)\n+{\n+  return som_tm_clone_table_section;\n+}\n+\n /* On hpux10, the linker will give an error if we have a reference\n    in the read-only data section to a symbol defined in a shared\n    library.  Therefore, expressions that might require a reloc can"}, {"sha": "78ee28af630586706ee0fa04665ebe949c58014c", "filename": "gcc/config/pa/som.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57d138a946002b7d49af7e287abbe4efa2fa7492/gcc%2Fconfig%2Fpa%2Fsom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57d138a946002b7d49af7e287abbe4efa2fa7492/gcc%2Fconfig%2Fpa%2Fsom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fsom.h?ref=57d138a946002b7d49af7e287abbe4efa2fa7492", "patch": "@@ -342,3 +342,5 @@ do {\t\t\t\t\t\t\\\n #define SHLIB_SUFFIX \".sl\"\n \n #define TARGET_HAVE_NAMED_SECTIONS false\n+\n+#define TARGET_ASM_TM_CLONE_TABLE_SECTION pa_som_tm_clone_table_section"}]}