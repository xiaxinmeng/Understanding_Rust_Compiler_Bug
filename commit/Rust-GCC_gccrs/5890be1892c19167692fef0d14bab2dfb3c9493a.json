{"sha": "5890be1892c19167692fef0d14bab2dfb3c9493a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTg5MGJlMTg5MmMxOTE2NzY5MmZlZjBkMTRiYWIyZGZiM2M5NDkzYQ==", "commit": {"author": {"name": "Brendan Kehoe", "email": "brendan@zen.org", "date": "2001-06-04T17:34:36Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-06-04T17:34:36Z"}, "message": "re PR libstdc++/3016 (stl_queue.h bugs wrt compliance)\n\n2001-06-04  Brendan Kehoe  <brendan@zen.org>\n\n\tPR libstdc++/3016\n\t* include/bits/stl_queue.h (classes queue, priority_queue):  Fix\n\tctors to match the standard.\n\nFrom-SVN: r42857", "tree": {"sha": "1f8dd89568bc92fcdc5aad0ac109fc590c42ffd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f8dd89568bc92fcdc5aad0ac109fc590c42ffd3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5890be1892c19167692fef0d14bab2dfb3c9493a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5890be1892c19167692fef0d14bab2dfb3c9493a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5890be1892c19167692fef0d14bab2dfb3c9493a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5890be1892c19167692fef0d14bab2dfb3c9493a/comments", "author": null, "committer": null, "parents": [{"sha": "c0e17dafb20439163ac878a14cf41ec9b4fec08e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0e17dafb20439163ac878a14cf41ec9b4fec08e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0e17dafb20439163ac878a14cf41ec9b4fec08e"}], "stats": {"total": 27, "additions": 11, "deletions": 16}, "files": [{"sha": "14ec36e481b296736aa2a729aa3ef5e5a0d0a920", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5890be1892c19167692fef0d14bab2dfb3c9493a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5890be1892c19167692fef0d14bab2dfb3c9493a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5890be1892c19167692fef0d14bab2dfb3c9493a", "patch": "@@ -1,3 +1,9 @@\n+2001-06-04  Brendan Kehoe  <brendan@zen.org>\n+\n+\tPR libstdc++/3016\n+\t* include/bits/stl_queue.h (classes queue, priority_queue):  Fix\n+\tctors to match the standard.\n+\n 2001-06-04  Jeffrey Oldham  <oldham@codesourcery.com>\n \n \t* include/bits/char_traits.h (move): Reverse qualification of"}, {"sha": "c1fe023e4db86f9167cc278988800a7cfb768f00", "filename": "libstdc++-v3/include/bits/stl_queue.h", "status": "modified", "additions": 5, "deletions": 16, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5890be1892c19167692fef0d14bab2dfb3c9493a/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_queue.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5890be1892c19167692fef0d14bab2dfb3c9493a/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_queue.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_queue.h?ref=5890be1892c19167692fef0d14bab2dfb3c9493a", "patch": "@@ -75,8 +75,7 @@ class queue\n protected:\n   _Sequence c;\n public:\n-  queue() : c() {}\n-  explicit queue(const _Sequence& __c) : c(__c) {}\n+  explicit queue(const _Sequence& __c = _Sequence()) : c(__c) {}\n \n   bool empty() const { return c.empty(); }\n   size_type size() const { return c.size(); }\n@@ -154,25 +153,15 @@ class priority_queue\n   _Sequence c;\n   _Compare comp;\n public:\n-  priority_queue() : c() {}\n-  explicit priority_queue(const _Compare& __x) :  c(), comp(__x) {}\n-  priority_queue(const _Compare& __x, const _Sequence& __s) \n+  explicit priority_queue(const _Compare& __x = _Compare(),\n+\t\t\t  const _Sequence& __s = _Sequence()) \n     : c(__s), comp(__x) \n     { make_heap(c.begin(), c.end(), comp); }\n \n-  template <class _InputIterator>\n-  priority_queue(_InputIterator __first, _InputIterator __last) \n-    : c(__first, __last) { make_heap(c.begin(), c.end(), comp); }\n-\n-  template <class _InputIterator>\n-  priority_queue(_InputIterator __first, \n-                 _InputIterator __last, const _Compare& __x)\n-    : c(__first, __last), comp(__x) \n-    { make_heap(c.begin(), c.end(), comp); }\n-\n   template <class _InputIterator>\n   priority_queue(_InputIterator __first, _InputIterator __last,\n-                 const _Compare& __x, const _Sequence& __s)\n+                 const _Compare& __x = _Compare(),\n+\t\t const _Sequence& __s = _Sequence())\n   : c(__s), comp(__x)\n   { \n     c.insert(c.end(), __first, __last);"}]}