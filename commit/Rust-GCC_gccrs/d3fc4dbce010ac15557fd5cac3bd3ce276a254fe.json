{"sha": "d3fc4dbce010ac15557fd5cac3bd3ce276a254fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDNmYzRkYmNlMDEwYWMxNTU1N2ZkNWNhYzNiZDNjZTI3NmEyNTRmZQ==", "commit": {"author": {"name": "Matt Kraai", "email": "kraai@alumni.cmu.edu", "date": "2002-07-01T20:09:52Z"}, "committer": {"name": "Matt Kraai", "email": "kraai@gcc.gnu.org", "date": "2002-07-01T20:09:52Z"}, "message": "README.Portability (Function prototypes): Document new variable-argument function macros.\n\n\t* README.Portability (Function prototypes): Document new\n\tvariable-argument function macros.\n\nFrom-SVN: r55150", "tree": {"sha": "9dbc1177afd3d82aca4bc64f78e1d007f9c7eac4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9dbc1177afd3d82aca4bc64f78e1d007f9c7eac4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3fc4dbce010ac15557fd5cac3bd3ce276a254fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3fc4dbce010ac15557fd5cac3bd3ce276a254fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3fc4dbce010ac15557fd5cac3bd3ce276a254fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3fc4dbce010ac15557fd5cac3bd3ce276a254fe/comments", "author": null, "committer": null, "parents": [{"sha": "5fd3853ac32388598cae208de4c3147af4119404", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fd3853ac32388598cae208de4c3147af4119404", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fd3853ac32388598cae208de4c3147af4119404"}], "stats": {"total": 33, "additions": 11, "deletions": 22}, "files": [{"sha": "85775c9d8eb88fafbbd7354f3399cfd07e933085", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3fc4dbce010ac15557fd5cac3bd3ce276a254fe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3fc4dbce010ac15557fd5cac3bd3ce276a254fe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d3fc4dbce010ac15557fd5cac3bd3ce276a254fe", "patch": "@@ -1,3 +1,8 @@\n+2002-07-01  Matt Kraai  <kraai@alumni.cmu.edu>\n+\n+\t* README.Portability (Function prototypes): Document new\n+\tvariable-argument function macros.\n+\n Mon Jul  1 19:55:17 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \n \t* sh.c (langhooks.h): Include."}, {"sha": "ccd05e7521d5c1da148ef7bf18e10a6b7d4fb1ad", "filename": "gcc/README.Portability", "status": "modified", "additions": 6, "deletions": 22, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3fc4dbce010ac15557fd5cac3bd3ce276a254fe/gcc%2FREADME.Portability", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3fc4dbce010ac15557fd5cac3bd3ce276a254fe/gcc%2FREADME.Portability", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FREADME.Portability?ref=d3fc4dbce010ac15557fd5cac3bd3ce276a254fe", "patch": "@@ -139,32 +139,16 @@ void cpp_ice PARAMS ((cpp_reader *, const char *msgid, ...));\n \n void\n cpp_ice VPARAMS ((cpp_reader *pfile, const char *msgid, ...))\n-{  \n-#ifndef ANSI_PROTOTYPES\n-  cpp_reader *pfile;\n-  const char *msgid;\n-#endif\n-  va_list ap;\n-  \n-  VA_START (ap, msgid);\n-  \n-#ifndef ANSI_PROTOTYPES\n-  pfile = va_arg (ap, cpp_reader *);\n-  msgid = va_arg (ap, const char *);\n-#endif\n+{\n+  VA_OPEN (ap, msgid);\n+  VA_FIXEDARG (ap, cpp_reader *, pfile);\n+  VA_FIXEDARG (ap, const char *, msgid);\n \n   ...\n-  va_end (ap);\n+  VA_CLOSE (ap);\n }\n \n-For the curious, here are the definitions of the above macros.  See\n-ansidecl.h for the definitions of the above macros and more.\n-\n-#define PARAMS(paramlist)  paramlist  /* ISO C.  */\n-#define VPARAMS(args)   args\n-\n-#define PARAMS(paramlist)  ()         /* K+R C.  */\n-#define VPARAMS(args)   (va_alist) va_dcl\n+See ansidecl.h for the definitions of the above macros and more.\n \n One aspect of using K+R style function declarations, is you cannot\n have arguments whose types are char, short, or float, since without"}]}