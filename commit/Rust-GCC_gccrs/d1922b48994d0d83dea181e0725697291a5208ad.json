{"sha": "d1922b48994d0d83dea181e0725697291a5208ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDE5MjJiNDg5OTRkMGQ4M2RlYTE4MWUwNzI1Njk3MjkxYTUyMDhhZA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@lsd.ic.unicamp.br", "date": "2000-02-10T16:29:21Z"}, "committer": {"name": "Alexandre Oliva", "email": "oliva@gcc.gnu.org", "date": "2000-02-10T16:29:21Z"}, "message": "server.c (load_data): Return NULL if the marker line is not found.\n\n* fixinc/server.c (load_data): Return NULL if the marker line is\nnot found.\n(run_shell): If load_data returns NULL, retry the command once, in\na new shell.\n\nFrom-SVN: r31894", "tree": {"sha": "bc1dde13ee1df734ce16aa8b53f4540962833ea9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc1dde13ee1df734ce16aa8b53f4540962833ea9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1922b48994d0d83dea181e0725697291a5208ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1922b48994d0d83dea181e0725697291a5208ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1922b48994d0d83dea181e0725697291a5208ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1922b48994d0d83dea181e0725697291a5208ad/comments", "author": null, "committer": null, "parents": [{"sha": "139cfaa75e1817260807b471259c4b7776c727d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/139cfaa75e1817260807b471259c4b7776c727d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/139cfaa75e1817260807b471259c4b7776c727d7"}], "stats": {"total": 25, "additions": 22, "deletions": 3}, "files": [{"sha": "977e894e344d9a4e5ed44e79e893dc61832fd488", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1922b48994d0d83dea181e0725697291a5208ad/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1922b48994d0d83dea181e0725697291a5208ad/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d1922b48994d0d83dea181e0725697291a5208ad", "patch": "@@ -1,5 +1,10 @@\n 2000-02-10  Alexandre Oliva  <oliva@lsd.ic.unicamp.br>\n \n+\t* fixinc/server.c (load_data): Return NULL if the marker line is\n+\tnot found.\n+\t(run_shell): If load_data returns NULL, retry the command once, in\n+\ta new shell.\n+\n \t* configure: Rebuilt.\n \n 2000-02-09  Bruce Korb  <bkorb@gnu.org>"}, {"sha": "676df8cd0f693e9b77ae545c664907c591f78616", "filename": "gcc/fixinc/server.c", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1922b48994d0d83dea181e0725697291a5208ad/gcc%2Ffixinc%2Fserver.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1922b48994d0d83dea181e0725697291a5208ad/gcc%2Ffixinc%2Fserver.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Fserver.c?ref=d1922b48994d0d83dea181e0725697291a5208ad", "patch": "@@ -114,6 +114,7 @@ load_data (fp)\n   size_t text_size;\n   char *pz_scan;\n   char z_line[1024];\n+  t_bool got_done = BOOL_FALSE;\n \n   text_size = sizeof (z_line) * 2;\n   pz_scan = pz_text = malloc (text_size);\n@@ -131,7 +132,10 @@ load_data (fp)\n         break;\n \n       if (strncmp (z_line, z_done, sizeof (z_done) - 1) == 0)\n-        break;\n+\t{\n+\t  got_done = BOOL_TRUE;\n+\t  break;\n+\t}\n \n       strcpy (pz_scan, z_line);\n       pz_scan += strlen (z_line);\n@@ -157,7 +161,7 @@ load_data (fp)\n     }\n \n   alarm (0);\n-  if (read_pipe_timeout)\n+  if (read_pipe_timeout || ! got_done)\n     {\n       free ((void *) pz_text);\n       return (char *) NULL;\n@@ -255,6 +259,9 @@ char *\n run_shell (pz_cmd)\n      const char *pz_cmd;\n {\n+  t_bool retry = BOOL_TRUE;\n+\n+ do_retry:\n   /*  IF the shell server process is not running yet,\n       THEN try to start it.  */\n   if (server_id == NULLPROCESS)\n@@ -299,9 +306,16 @@ run_shell (pz_cmd)\n     \n     if (pz == (char *) NULL)\n       {\n+\tclose_server ();\n+\n+\tif (retry)\n+\t  {\n+\t    retry = BOOL_FALSE;\n+\t    goto do_retry;\n+\t  }\n+\n         fprintf (stderr, \"CLOSING SHELL SERVER - command failure:\\n\\t%s\\n\",\n                  pz_cmd);\n-        close_server ();\n         pz = (char *) malloc (1);\n         if (pz != (char *) NULL)\n           *pz = '\\0';"}]}