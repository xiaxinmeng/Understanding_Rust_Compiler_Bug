{"sha": "929b7fc3c0afc5d5154ce9e40371a42a0610fd7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI5YjdmYzNjMGFmYzVkNTE1NGNlOWU0MDM3MWE0MmEwNjEwZmQ3Zg==", "commit": {"author": {"name": "Andreas Krebbel", "email": "Andreas.Krebbel@de.ibm.com", "date": "2009-03-09T13:30:19Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2009-03-09T13:30:19Z"}, "message": "recog.c (verfiy_changes): Disallow renaming of hard regs in inline asms for register asm (\"\") declarations.\n\n2009-03-09  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n\n\t* recog.c (verfiy_changes): Disallow renaming of hard regs in\n\tinline asms for register asm (\"\") declarations.\n\n2009-03-09  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n\n\t* gcc.target/s390/20090223-1.c: New testcase.\n\nFrom-SVN: r144726", "tree": {"sha": "031dd1ced917e31481cde7178045772632594fd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/031dd1ced917e31481cde7178045772632594fd5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/929b7fc3c0afc5d5154ce9e40371a42a0610fd7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/929b7fc3c0afc5d5154ce9e40371a42a0610fd7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/929b7fc3c0afc5d5154ce9e40371a42a0610fd7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/929b7fc3c0afc5d5154ce9e40371a42a0610fd7f/comments", "author": null, "committer": null, "parents": [{"sha": "1803581d7698029091783f8c9ac6220aa52ccec5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1803581d7698029091783f8c9ac6220aa52ccec5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1803581d7698029091783f8c9ac6220aa52ccec5"}], "stats": {"total": 79, "additions": 79, "deletions": 0}, "files": [{"sha": "300507d9c05f7b1d1242b403a56bab9cd895b361", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/929b7fc3c0afc5d5154ce9e40371a42a0610fd7f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/929b7fc3c0afc5d5154ce9e40371a42a0610fd7f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=929b7fc3c0afc5d5154ce9e40371a42a0610fd7f", "patch": "@@ -1,3 +1,8 @@\n+2009-03-09  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n+\n+\t* recog.c (verfiy_changes): Disallow renaming of hard regs in\n+\tinline asms for register asm (\"\") declarations.\n+\n 2009-03-09  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* fold-const.c (fold_unary): Fix comment."}, {"sha": "70370e3ad81619d4cc67c64fc4e1f70f5d80aff3", "filename": "gcc/recog.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/929b7fc3c0afc5d5154ce9e40371a42a0610fd7f/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/929b7fc3c0afc5d5154ce9e40371a42a0610fd7f/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=929b7fc3c0afc5d5154ce9e40371a42a0610fd7f", "patch": "@@ -379,6 +379,16 @@ verify_changes (int num)\n \t  if (! memory_address_p (GET_MODE (object), XEXP (object, 0)))\n \t    break;\n \t}\n+      else if (REG_P (changes[i].old)\n+\t       && asm_noperands (PATTERN (object)) > 0\n+\t       && REG_EXPR (changes[i].old) != NULL_TREE\n+\t       && DECL_ASSEMBLER_NAME_SET_P (REG_EXPR (changes[i].old))\n+\t       && DECL_REGISTER (REG_EXPR (changes[i].old)))\n+\t{\n+\t  /* Don't allow changes of hard register operands to inline\n+\t     assemblies if they have been defined as register asm (\"x\").  */\n+\t  break;\n+\t}\n       else if (insn_invalid_p (object))\n \t{\n \t  rtx pat = PATTERN (object);"}, {"sha": "0651163fb8cf51a6db4c79d64d8b7a5a494112a9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/929b7fc3c0afc5d5154ce9e40371a42a0610fd7f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/929b7fc3c0afc5d5154ce9e40371a42a0610fd7f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=929b7fc3c0afc5d5154ce9e40371a42a0610fd7f", "patch": "@@ -1,3 +1,7 @@\n+2009-03-09  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n+\n+\t* gcc.target/s390/20090223-1.c: New testcase.\n+\n 2009-03-08  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libfortran/39402"}, {"sha": "443ccb9aa69fef803639d8fdca717231ccba2cec", "filename": "gcc/testsuite/gcc.target/s390/20090223-1.c", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/929b7fc3c0afc5d5154ce9e40371a42a0610fd7f/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2F20090223-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/929b7fc3c0afc5d5154ce9e40371a42a0610fd7f/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2F20090223-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2F20090223-1.c?ref=929b7fc3c0afc5d5154ce9e40371a42a0610fd7f", "patch": "@@ -0,0 +1,60 @@\n+/* The RTL loop optimizer used to replace the output register of the\n+   inline assembly with a pseudo although the variable is declared as\n+   register asm (\"0\").  */\n+\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+extern void abort (void);\n+\n+static unsigned char __attribute__ ((always_inline))\n+mytoupper (unsigned char c)\n+{\n+  if (c >= 'a' && c <= 'z')\n+    c -= 'a' - 'A';\n+  return c;\n+}\n+\n+static unsigned long __attribute__ ((always_inline))\n+strlen (const char *s)\n+{\n+  register unsigned long r0 asm (\"0\");\n+  const char *tmp = s;\n+\n+  asm (\n+#ifdef __s390x__\n+       \"  lghi  %0, 0\\n\"\n+#else\n+       \"  lhi   %0, 0\\n\"\n+#endif\n+       \"0:srst  %0,%1\\n\"\n+       \"  jo    0b\"\n+       : \"=d\" (r0), \"+a\" (tmp)\n+       :\n+       :\"cc\");\n+  return r0 - (unsigned long) s;\n+}\n+\n+char boot_command_line[] = \"this is a test\";\n+\n+void __attribute__ ((noinline))\n+foo (char *str)\n+{\n+  if (strcmp (str, \"THIS IS A TEST\") != 0)\n+    abort ();\n+}\n+\n+int\n+main ()\n+{\n+  char upper_command_line[1024];\n+  int i;\n+\n+  for (i = 0; i < strlen (boot_command_line); i++)\n+    upper_command_line[i] = mytoupper (boot_command_line[i]);\n+\n+  upper_command_line[strlen (boot_command_line)] = 0;\n+  foo (upper_command_line);\n+\n+  return 0;\n+}"}]}