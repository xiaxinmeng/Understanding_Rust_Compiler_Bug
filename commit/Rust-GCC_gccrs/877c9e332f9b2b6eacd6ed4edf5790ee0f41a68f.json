{"sha": "877c9e332f9b2b6eacd6ed4edf5790ee0f41a68f", "node_id": "C_kwDOANBUbNoAKDg3N2M5ZTMzMmY5YjJiNmVhY2Q2ZWQ0ZWRmNTc5MGVlMGY0MWE2OGY", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2022-01-05T19:06:03Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2022-01-05T19:07:22Z"}, "message": "i386: Fix expand_vec_perm_pshufb for narrow modes [PR103905]\n\n2022-01-05  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n\ngcc/ChangeLog:\n\n\tPR target/103905\n\t* config/i386/i386-expand.c (expand_vec_perm_pshufb): Fix number of\n\tnarrow mode remapped elements for !one_operand_p case.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/103905\n\t* gcc.target/i386/pr103905.c: New test.", "tree": {"sha": "d7726b9369ae020e8c36961056586715aaab7e8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7726b9369ae020e8c36961056586715aaab7e8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/877c9e332f9b2b6eacd6ed4edf5790ee0f41a68f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/877c9e332f9b2b6eacd6ed4edf5790ee0f41a68f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/877c9e332f9b2b6eacd6ed4edf5790ee0f41a68f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/877c9e332f9b2b6eacd6ed4edf5790ee0f41a68f/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85a3442c85aedb00c59e986f16cccbb8ec60d777", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85a3442c85aedb00c59e986f16cccbb8ec60d777", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85a3442c85aedb00c59e986f16cccbb8ec60d777"}], "stats": {"total": 48, "additions": 37, "deletions": 11}, "files": [{"sha": "9bd8e539d0876cb6c6f9e3b1ff8bd019f439f6e1", "filename": "gcc/config/i386/i386-expand.c", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/877c9e332f9b2b6eacd6ed4edf5790ee0f41a68f/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/877c9e332f9b2b6eacd6ed4edf5790ee0f41a68f/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-expand.c?ref=877c9e332f9b2b6eacd6ed4edf5790ee0f41a68f", "patch": "@@ -18730,7 +18730,7 @@ expand_vec_perm_pshufb (struct expand_vec_perm_d *d)\n {\n   unsigned i, nelt, eltsz, mask;\n   unsigned char perm[64];\n-  machine_mode vmode = V16QImode;\n+  machine_mode vmode;\n   struct expand_vec_perm_d nd;\n   rtx rperm[64], vperm, target, op0, op1;\n \n@@ -18754,6 +18754,7 @@ expand_vec_perm_pshufb (struct expand_vec_perm_d *d)\n       case 16:\n \tif (!TARGET_XOP)\n \t  return false;\n+\tvmode = V16QImode;\n \tbreak;\n \n       case 32:\n@@ -18803,6 +18804,7 @@ expand_vec_perm_pshufb (struct expand_vec_perm_d *d)\n       case 16:\n \tif (!TARGET_SSSE3)\n \t  return false;\n+\tvmode = V16QImode;\n \tbreak;\n \n       case 32:\n@@ -18894,6 +18896,7 @@ expand_vec_perm_pshufb (struct expand_vec_perm_d *d)\n \t/* Or if vpermps can be used.  */\n \telse if (d->vmode == V16SFmode)\n \t  vmode = V16SImode;\n+\n \tif (vmode == V64QImode)\n \t  {\n \t    /* vpshufb only works intra lanes, it is not\n@@ -18946,28 +18949,26 @@ expand_vec_perm_pshufb (struct expand_vec_perm_d *d)\n \n   machine_mode vpmode = vmode;\n \n-  if (vmode == V4QImode\n-      || vmode == V8QImode)\n+  nelt = GET_MODE_SIZE (vmode);\n+\n+  /* Emulate narrow modes with V16QI instructions.  */\n+  if (nelt < 16)\n     {\n       rtx m128 = GEN_INT (-128);\n \n       /* Remap elements from the second operand, as we have to\n \t account for inactive top elements from the first operand.  */\n       if (!d->one_operand_p)\n \t{\n-\t  int sz = GET_MODE_SIZE (vmode);\n-\n \t  for (i = 0; i < nelt; ++i)\n \t    {\n-\t      int ival = INTVAL (rperm[i]);\n-\t      if (ival >= sz)\n-\t\tival += 16-sz;\n-\t      rperm[i] = GEN_INT (ival);\n+\t      unsigned ival = UINTVAL (rperm[i]);\n+\t      if (ival >= nelt)\n+\t\trperm[i] = GEN_INT (ival + 16 - nelt);\n \t    }\n \t}\n \n-      /* V4QI/V8QI is emulated with V16QI instruction, fill inactive\n-\t elements in the top positions with zeros.  */\n+      /* Fill inactive elements in the top positions with zeros.  */\n       for (i = nelt; i < 16; ++i)\n \trperm[i] = m128;\n "}, {"sha": "aef9c4d3a0a705037899cfd96828166541165202", "filename": "gcc/testsuite/gcc.target/i386/pr103905.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/877c9e332f9b2b6eacd6ed4edf5790ee0f41a68f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr103905.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/877c9e332f9b2b6eacd6ed4edf5790ee0f41a68f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr103905.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr103905.c?ref=877c9e332f9b2b6eacd6ed4edf5790ee0f41a68f", "patch": "@@ -0,0 +1,25 @@\n+/* PR target/103905 */\n+/* { dg-do run } */\n+/* { dg-require-effective-target xop } */\n+/* { dg-options \"-O3 -mxop\" } */\n+\n+#include \"xop-check.h\"\n+\n+char perm[64];\n+\n+void\n+__attribute__((noipa))\n+foo (int n)\n+{\n+  for (int i = 0; i < n; ++i)\n+    perm[i] = i;\n+}\n+\n+static void\n+xop_test (void)\n+{\n+  foo (8);\n+\n+  if (perm[7] != 7)\n+    __builtin_abort ();\n+}"}]}