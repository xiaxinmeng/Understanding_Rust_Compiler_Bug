{"sha": "ddc54eaa30e8e670df26185114dec8fb68717834", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRjNTRlYWEzMGU4ZTY3MGRmMjYxODUxMTRkZWM4ZmI2ODcxNzgzNA==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@cygnus.com", "date": "1998-12-15T11:56:36Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "1998-12-15T11:56:36Z"}, "message": "Cope with inlining functions which return a multiword CONCAT value\n\nFrom-SVN: r24328", "tree": {"sha": "e5115b8edfd5f3bc935fac8ba9531d98218d2f38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5115b8edfd5f3bc935fac8ba9531d98218d2f38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddc54eaa30e8e670df26185114dec8fb68717834", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddc54eaa30e8e670df26185114dec8fb68717834", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddc54eaa30e8e670df26185114dec8fb68717834", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddc54eaa30e8e670df26185114dec8fb68717834/comments", "author": null, "committer": null, "parents": [{"sha": "c49445e0012a736c72876d6ebb28a3ee554c1e67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c49445e0012a736c72876d6ebb28a3ee554c1e67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c49445e0012a736c72876d6ebb28a3ee554c1e67"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "beb0b8125f08fc0f76c848191c79f6e2f3aa1eb4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc54eaa30e8e670df26185114dec8fb68717834/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc54eaa30e8e670df26185114dec8fb68717834/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ddc54eaa30e8e670df26185114dec8fb68717834", "patch": "@@ -1,3 +1,13 @@\n+Tue Dec 15 11:55:30 1998  Nick Clifton  <nickc@cygnus.com>\n+\n+\t* integrate.c (copy_rtx_and_substitute): If a SUBREG is\n+\treplaced by a CONCAT whoes components do not have the same\n+\tmode as the original SUBREG, use a new SUBREG to restore the\n+\tmode. \n+\n+\t* emit-rtl.c (subreg_realpart_p): Cope with subregs containing\n+\tmultiword complex values.\n+\n 1998-12-15  Zack Weinberg  <zack@rabi.phys.columbia.edu>\n \n \t* cppalloc.c: Add xstrdup here."}, {"sha": "701415f2c0f0b968a834781aaf46e7824e623ecb", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc54eaa30e8e670df26185114dec8fb68717834/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc54eaa30e8e670df26185114dec8fb68717834/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=ddc54eaa30e8e670df26185114dec8fb68717834", "patch": "@@ -942,7 +942,7 @@ subreg_realpart_p (x)\n   if (GET_CODE (x) != SUBREG)\n     abort ();\n \n-  return SUBREG_WORD (x) == 0;\n+  return SUBREG_WORD (x) * UNITS_PER_WORD < GET_MODE_UNIT_SIZE (GET_MODE (SUBREG_REG (x)));\n }\n \f\n /* Assuming that X is an rtx (e.g., MEM, REG or SUBREG) for a value,"}, {"sha": "943eeaff0d93af62c4f863816e33b9ece45df603", "filename": "gcc/integrate.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc54eaa30e8e670df26185114dec8fb68717834/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc54eaa30e8e670df26185114dec8fb68717834/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=ddc54eaa30e8e670df26185114dec8fb68717834", "patch": "@@ -2451,7 +2451,17 @@ copy_rtx_and_substitute (orig, map)\n \treturn gen_rtx_SUBREG (GET_MODE (orig), SUBREG_REG (copy),\n \t\t\t       SUBREG_WORD (orig) + SUBREG_WORD (copy));\n       else if (GET_CODE (copy) == CONCAT)\n-\treturn (subreg_realpart_p (orig) ? XEXP (copy, 0) : XEXP (copy, 1));\n+\t{\n+\t  rtx retval = subreg_realpart_p (orig) ? XEXP (copy, 0) : XEXP (copy, 1);\n+\n+\t  if (GET_MODE (retval) == GET_MODE (orig))\n+\t    return retval;\n+\t  else\n+\t    return gen_rtx_SUBREG (GET_MODE (orig), retval,\n+\t\t\t\t   (SUBREG_WORD (orig) %\n+\t\t\t\t    (GET_MODE_UNIT_SIZE (GET_MODE (SUBREG_REG (orig)))\n+\t\t\t\t     / (unsigned) UNITS_PER_WORD)));\n+\t}\n       else\n \treturn gen_rtx_SUBREG (GET_MODE (orig), copy,\n \t\t\t       SUBREG_WORD (orig));"}]}