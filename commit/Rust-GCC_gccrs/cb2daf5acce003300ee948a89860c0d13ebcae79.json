{"sha": "cb2daf5acce003300ee948a89860c0d13ebcae79", "node_id": "C_kwDOANBUbNoAKGNiMmRhZjVhY2NlMDAzMzAwZWU5NDhhODk4NjBjMGQxM2ViY2FlNzk", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2022-08-19T17:01:02Z"}, "committer": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2022-08-24T18:30:30Z"}, "message": "Fix PR 106600: __builtin_bswap32 is not hooked up for ZBB for 32bit\n\nThe problem here is the bswap<mode>2 pattern had a check for TARGET_64BIT\nbut then used the X iterator. Since the X iterator is either SI or DI depending\non the setting TARGET_64BIT, there is no reason for the TARGET_64BIT.\n\nOK? Built and tested on both riscv32-linux-gnu and riscv64-linux-gnu.\n\nThanks,\nAndrew Pinski\n\ngcc/ChangeLog:\n\n\tPR target/106600\n\t* config/riscv/bitmanip.md (bswap<mode>2): Remove\n\tcondition on TARGET_64BIT as X is already conditional there.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/106600\n\t* gcc.target/riscv/zbb_32_bswap-1.c: New test.\n\t* gcc.target/riscv/zbb_bswap-1.c: New test.", "tree": {"sha": "9fdda731ff892230b69b1e09b1f20590f7af6546", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9fdda731ff892230b69b1e09b1f20590f7af6546"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb2daf5acce003300ee948a89860c0d13ebcae79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb2daf5acce003300ee948a89860c0d13ebcae79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb2daf5acce003300ee948a89860c0d13ebcae79", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb2daf5acce003300ee948a89860c0d13ebcae79/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55d8c5409325001c89c35c3d04d425dec9127146", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55d8c5409325001c89c35c3d04d425dec9127146", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55d8c5409325001c89c35c3d04d425dec9127146"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "c7ba667f87a5f934f7d0fd2ef5fe415dc6a785ce", "filename": "gcc/config/riscv/bitmanip.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb2daf5acce003300ee948a89860c0d13ebcae79/gcc%2Fconfig%2Friscv%2Fbitmanip.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb2daf5acce003300ee948a89860c0d13ebcae79/gcc%2Fconfig%2Friscv%2Fbitmanip.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Fbitmanip.md?ref=cb2daf5acce003300ee948a89860c0d13ebcae79", "patch": "@@ -272,7 +272,7 @@\n (define_insn \"bswap<mode>2\"\n   [(set (match_operand:X 0 \"register_operand\" \"=r\")\n         (bswap:X (match_operand:X 1 \"register_operand\" \"r\")))]\n-  \"TARGET_64BIT && TARGET_ZBB\"\n+  \"TARGET_ZBB\"\n   \"rev8\\t%0,%1\"\n   [(set_attr \"type\" \"bitmanip\")])\n "}, {"sha": "3ff7d9de40951f690b743e508d2dbd4a58b47048", "filename": "gcc/testsuite/gcc.target/riscv/zbb_32_bswap-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb2daf5acce003300ee948a89860c0d13ebcae79/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fzbb_32_bswap-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb2daf5acce003300ee948a89860c0d13ebcae79/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fzbb_32_bswap-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fzbb_32_bswap-1.c?ref=cb2daf5acce003300ee948a89860c0d13ebcae79", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gc_zbb -mabi=ilp32\" } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-O0\" } } */\n+\n+int foo(int n)\n+{\n+  return __builtin_bswap32(n);\n+}\n+\n+/* { dg-final { scan-assembler \"rev8\" } } */\n+"}, {"sha": "20feded0df2ef55ed5fb3eef7825c35fe30694a9", "filename": "gcc/testsuite/gcc.target/riscv/zbb_bswap-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb2daf5acce003300ee948a89860c0d13ebcae79/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fzbb_bswap-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb2daf5acce003300ee948a89860c0d13ebcae79/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fzbb_bswap-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fzbb_bswap-1.c?ref=cb2daf5acce003300ee948a89860c0d13ebcae79", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gc_zbb -mabi=lp64\" } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-O0\" } } */\n+\n+int foo(int n)\n+{\n+  return __builtin_bswap32(n);\n+}\n+\n+/* { dg-final { scan-assembler \"rev8\" } } */\n+"}]}