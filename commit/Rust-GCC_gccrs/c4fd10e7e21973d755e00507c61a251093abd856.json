{"sha": "c4fd10e7e21973d755e00507c61a251093abd856", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzRmZDEwZTdlMjE5NzNkNzU1ZTAwNTA3YzYxYTI1MTA5M2FiZDg1Ng==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-08-03T01:38:38Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-08-03T01:38:38Z"}, "message": "(canon_hash): Use HOST_WIDE_INT instead of int when casting pointers\nto integers.\n\nFrom-SVN: r1750", "tree": {"sha": "64e62c0f887a3ec00b30a6191ae4e8420600b44a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64e62c0f887a3ec00b30a6191ae4e8420600b44a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4fd10e7e21973d755e00507c61a251093abd856", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4fd10e7e21973d755e00507c61a251093abd856", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4fd10e7e21973d755e00507c61a251093abd856", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4fd10e7e21973d755e00507c61a251093abd856/comments", "author": null, "committer": null, "parents": [{"sha": "ab17642530304608b3f0be7a0aa912efcf983ef1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab17642530304608b3f0be7a0aa912efcf983ef1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab17642530304608b3f0be7a0aa912efcf983ef1"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "bcff89abdcf8463ae24415f5355f29d60f324a73", "filename": "gcc/cse.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4fd10e7e21973d755e00507c61a251093abd856/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4fd10e7e21973d755e00507c61a251093abd856/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=c4fd10e7e21973d755e00507c61a251093abd856", "patch": "@@ -1817,12 +1817,12 @@ canon_hash (x, mode)\n       /* Assume there is only one rtx object for any given label.  */\n     case LABEL_REF:\n       /* Use `and' to ensure a positive number.  */\n-      return (hash + ((int) LABEL_REF << 7)\n-\t      + ((int) XEXP (x, 0) & ((1 << HASHBITS) - 1)));\n+      return (hash + ((HOST_WIDE_INT) LABEL_REF << 7)\n+\t      + ((HOST_WIDE_INT) XEXP (x, 0) & ((1 << HASHBITS) - 1)));\n \n     case SYMBOL_REF:\n-      return (hash + ((int) SYMBOL_REF << 7)\n-\t      + ((int) XEXP (x, 0) & ((1 << HASHBITS) - 1)));\n+      return (hash + ((HOST_WIDE_INT) SYMBOL_REF << 7)\n+\t      + ((HOST_WIDE_INT) XEXP (x, 0) & ((1 << HASHBITS) - 1)));\n \n     case MEM:\n       if (MEM_VOLATILE_P (x))"}]}