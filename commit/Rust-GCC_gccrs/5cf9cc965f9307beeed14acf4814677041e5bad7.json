{"sha": "5cf9cc965f9307beeed14acf4814677041e5bad7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWNmOWNjOTY1ZjkzMDdiZWVlZDE0YWNmNDgxNDY3NzA0MWU1YmFkNw==", "commit": {"author": {"name": "Jie Zhang", "email": "jie.zhang@analog.com", "date": "2009-01-23T04:58:03Z"}, "committer": {"name": "Jie Zhang", "email": "jiez@gcc.gnu.org", "date": "2009-01-23T04:58:03Z"}, "message": "mf-impl.h (__mf_get_state, [...]): Don't use __thread when TLS support is emulated.\n\n\tlibmudflap/\n\t* mf-impl.h (__mf_get_state, __mf_set_state): Don't use\n\t__thread when TLS support is emulated.\n\t* mf-hooks3.c (__mf_get_state, __mf_set_state): Likewise.\n\t* mf-runtime.c (__mf_state_1): Likewise.\n\t* configure.ac: Use GCC_CHECK_EMUTLS.\n\t* configure: Regenerate.\n\t* config.h.in: Regenerate.\n\n\tconfig/\n\t* tls.m4 (GCC_CHECK_EMUTLS): Define.\n\nFrom-SVN: r143583", "tree": {"sha": "6ddfe08d3b1988039a3b83beaf42660efeaa2cc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ddfe08d3b1988039a3b83beaf42660efeaa2cc4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5cf9cc965f9307beeed14acf4814677041e5bad7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cf9cc965f9307beeed14acf4814677041e5bad7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cf9cc965f9307beeed14acf4814677041e5bad7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cf9cc965f9307beeed14acf4814677041e5bad7/comments", "author": {"login": "jiez-adi", "id": 103514486, "node_id": "U_kgDOBiuBdg", "avatar_url": "https://avatars.githubusercontent.com/u/103514486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiez-adi", "html_url": "https://github.com/jiez-adi", "followers_url": "https://api.github.com/users/jiez-adi/followers", "following_url": "https://api.github.com/users/jiez-adi/following{/other_user}", "gists_url": "https://api.github.com/users/jiez-adi/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiez-adi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiez-adi/subscriptions", "organizations_url": "https://api.github.com/users/jiez-adi/orgs", "repos_url": "https://api.github.com/users/jiez-adi/repos", "events_url": "https://api.github.com/users/jiez-adi/events{/privacy}", "received_events_url": "https://api.github.com/users/jiez-adi/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "27a3239ec7c821bec0e3eafa544d46dcfc7a26bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27a3239ec7c821bec0e3eafa544d46dcfc7a26bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27a3239ec7c821bec0e3eafa544d46dcfc7a26bf"}], "stats": {"total": 75, "additions": 71, "deletions": 4}, "files": [{"sha": "feb73b94a0f3dd5a69fe312f836f1d185afa7451", "filename": "config/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cf9cc965f9307beeed14acf4814677041e5bad7/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cf9cc965f9307beeed14acf4814677041e5bad7/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=5cf9cc965f9307beeed14acf4814677041e5bad7", "patch": "@@ -1,3 +1,7 @@\n+2009-01-23  Jie Zhang  <jie.zhang@analog.com>\n+\n+\t* tls.m4 (GCC_CHECK_EMUTLS): Define.\n+\n 2008-12-21  Andrew Pinski  <pinskia@gmail.com>\n \n \tPR target/38300"}, {"sha": "e77742c76034a9b1cc39ee4144b574c5bc8190bb", "filename": "config/tls.m4", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cf9cc965f9307beeed14acf4814677041e5bad7/config%2Ftls.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cf9cc965f9307beeed14acf4814677041e5bad7/config%2Ftls.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Ftls.m4?ref=5cf9cc965f9307beeed14acf4814677041e5bad7", "patch": "@@ -86,3 +86,21 @@ AC_DEFUN([GCC_CHECK_CC_TLS], [\n     AC_DEFINE(HAVE_CC_TLS, 1,\n \t      [Define to 1 if the target assembler supports thread-local storage.])\n   fi])\n+\n+dnl Check whether TLS is emulated.\n+AC_DEFUN([GCC_CHECK_EMUTLS], [\n+  AC_CACHE_CHECK([whether the thread-local storage support is from emutls],\n+  \t\t gcc_cv_use_emutls, [\n+    gcc_cv_use_emutls=no\n+    echo '__thread int a; int b; int main() { return a = b; }' > conftest.c\n+    if AC_TRY_COMMAND(${CC-cc} -Werror -S -o conftest.s conftest.c 1>&AS_MESSAGE_LOG_FD); then\n+      if grep __emutls_get_address conftest.s > /dev/null; then\n+\tgcc_cv_use_emutls=yes\n+      fi\n+    fi\n+    rm -f conftest.*\n+    ])\n+  if test \"$gcc_cv_use_emutls\" = \"yes\" ; then\n+    AC_DEFINE(USE_EMUTLS, 1,\n+      \t      [Define to 1 if the target use emutls for thread-local storage.])\n+  fi])"}, {"sha": "e42a15b5605f6dd9dfcbf16b1634e8a7e7ec5920", "filename": "libmudflap/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cf9cc965f9307beeed14acf4814677041e5bad7/libmudflap%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cf9cc965f9307beeed14acf4814677041e5bad7/libmudflap%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2FChangeLog?ref=5cf9cc965f9307beeed14acf4814677041e5bad7", "patch": "@@ -1,3 +1,13 @@\n+2009-01-23  Jie Zhang  <jie.zhang@analog.com>\n+\n+\t* mf-impl.h (__mf_get_state, __mf_set_state): Don't use\n+\t__thread when TLS support is emulated.\n+\t* mf-hooks3.c (__mf_get_state, __mf_set_state): Likewise.\n+\t* mf-runtime.c (__mf_state_1): Likewise.\n+\t* configure.ac: Use GCC_CHECK_EMUTLS.\n+\t* configure: Regenerate.\n+\t* config.h.in: Regenerate.\n+\n 2008-12-18  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* configure: Regenerate."}, {"sha": "0c88f61553fa37cb412e6be9e220fa77063cf965", "filename": "libmudflap/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cf9cc965f9307beeed14acf4814677041e5bad7/libmudflap%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cf9cc965f9307beeed14acf4814677041e5bad7/libmudflap%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fconfig.h.in?ref=5cf9cc965f9307beeed14acf4814677041e5bad7", "patch": "@@ -277,5 +277,8 @@\n /* Define to 1 if you have the ANSI C header files. */\n #undef STDC_HEADERS\n \n+/* Define to 1 if the target use emutls for thread-local storage. */\n+#undef USE_EMUTLS\n+\n /* Version number of package */\n #undef VERSION"}, {"sha": "758ac8f0a3029ecba057d6b0064c0701c6c6de28", "filename": "libmudflap/configure", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cf9cc965f9307beeed14acf4814677041e5bad7/libmudflap%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cf9cc965f9307beeed14acf4814677041e5bad7/libmudflap%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fconfigure?ref=5cf9cc965f9307beeed14acf4814677041e5bad7", "patch": "@@ -13024,6 +13024,37 @@ echo \"${ECHO_T}$gcc_cv_have_tls\" >&6\n \n cat >>confdefs.h <<\\_ACEOF\n #define HAVE_TLS 1\n+_ACEOF\n+\n+  fi\n+\n+  echo \"$as_me:$LINENO: checking whether the thread-local storage support is from emutls\" >&5\n+echo $ECHO_N \"checking whether the thread-local storage support is from emutls... $ECHO_C\" >&6\n+if test \"${gcc_cv_use_emutls+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+\n+    gcc_cv_use_emutls=no\n+    echo '__thread int a; int b; int main() { return a = b; }' > conftest.c\n+    if { ac_try='${CC-cc} -Werror -S -o conftest.s conftest.c 1>&5'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+      if grep __emutls_get_address conftest.s > /dev/null; then\n+\tgcc_cv_use_emutls=yes\n+      fi\n+    fi\n+    rm -f conftest.*\n+\n+fi\n+echo \"$as_me:$LINENO: result: $gcc_cv_use_emutls\" >&5\n+echo \"${ECHO_T}$gcc_cv_use_emutls\" >&6\n+  if test \"$gcc_cv_use_emutls\" = \"yes\" ; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define USE_EMUTLS 1\n _ACEOF\n \n   fi"}, {"sha": "8ce99a10270df1c01871ab941b5d04c0d74c8b1d", "filename": "libmudflap/configure.ac", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cf9cc965f9307beeed14acf4814677041e5bad7/libmudflap%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cf9cc965f9307beeed14acf4814677041e5bad7/libmudflap%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fconfigure.ac?ref=5cf9cc965f9307beeed14acf4814677041e5bad7", "patch": "@@ -265,6 +265,7 @@ fi\n \n # See if we support thread-local storage.\n GCC_CHECK_TLS\n+GCC_CHECK_EMUTLS\n \n AC_CONFIG_FILES([Makefile testsuite/Makefile testsuite/mfconfig.exp])\n AC_OUTPUT"}, {"sha": "5792a14f5dbe02b835594f2f9850f632e63b47d5", "filename": "libmudflap/mf-hooks3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cf9cc965f9307beeed14acf4814677041e5bad7/libmudflap%2Fmf-hooks3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cf9cc965f9307beeed14acf4814677041e5bad7/libmudflap%2Fmf-hooks3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fmf-hooks3.c?ref=5cf9cc965f9307beeed14acf4814677041e5bad7", "patch": "@@ -78,7 +78,7 @@ DECLARE(int, pthread_create, pthread_t *thr, const pthread_attr_t *attr,\n /* Multithreading support hooks.  */\n \n \n-#ifndef HAVE_TLS\n+#if !defined(HAVE_TLS) || defined(USE_EMUTLS)\n /* We don't have TLS.  Ordinarily we could use pthread keys, but since we're\n    commandeering malloc/free that presents a few problems.  The first is that\n    we'll recurse from __mf_get_state to pthread_setspecific to malloc back to\n@@ -217,7 +217,7 @@ __mf_pthread_cleanup (void *arg)\n   if (__mf_opts.heur_std_data)\n     __mf_unregister (&errno, sizeof (errno), __MF_TYPE_GUESS);\n \n-#ifndef HAVE_TLS\n+#if !defined(HAVE_TLS) || defined(USE_EMUTLS)\n   struct mf_thread_data *data = __mf_find_threadinfo (0);\n   if (data)\n     data->used_p = 0;"}, {"sha": "15d0b9ae53ac5e3cc50d8f58623d8938745ac887", "filename": "libmudflap/mf-impl.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cf9cc965f9307beeed14acf4814677041e5bad7/libmudflap%2Fmf-impl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cf9cc965f9307beeed14acf4814677041e5bad7/libmudflap%2Fmf-impl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fmf-impl.h?ref=5cf9cc965f9307beeed14acf4814677041e5bad7", "patch": "@@ -244,7 +244,7 @@ extern pthread_mutex_t __mf_biglock;\n #define UNLOCKTH() do {} while (0)\n #endif\n \n-#if defined(LIBMUDFLAPTH) && !defined(HAVE_TLS)\n+#if defined(LIBMUDFLAPTH) && (!defined(HAVE_TLS) || defined(USE_EMUTLS))\n extern enum __mf_state_enum __mf_get_state (void);\n extern void __mf_set_state (enum __mf_state_enum);\n #else"}, {"sha": "93b895a15734a43c7cdbe0013c00a37d4cea579a", "filename": "libmudflap/mf-runtime.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cf9cc965f9307beeed14acf4814677041e5bad7/libmudflap%2Fmf-runtime.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cf9cc965f9307beeed14acf4814677041e5bad7/libmudflap%2Fmf-runtime.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fmf-runtime.c?ref=5cf9cc965f9307beeed14acf4814677041e5bad7", "patch": "@@ -178,7 +178,7 @@ struct __mf_options __mf_opts;\n int __mf_starting_p = 1;\n \n #ifdef LIBMUDFLAPTH\n-#ifdef HAVE_TLS\n+#if defined(HAVE_TLS) && !defined(USE_EMUTLS)\n __thread enum __mf_state_enum __mf_state_1 = reentrant;\n #endif\n #else"}]}