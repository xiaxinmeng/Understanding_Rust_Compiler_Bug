{"sha": "9bdb04a2f5df0bafb2ab16be673febd789c3a487", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWJkYjA0YTJmNWRmMGJhZmIyYWIxNmJlNjczZmViZDc4OWMzYTQ4Nw==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2006-09-15T04:50:04Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2006-09-15T04:50:04Z"}, "message": "re PR c++/29002 (ICE on array of ptr-to-member or struct containing ptr-to-member of unknown size)\n\n\n2006-09-14  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR C++/29002\n        * init.c (build_zero_init): If we have an error mark node for\n        the array size, return.\n\n2006-09-14  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR C++/29002\n        * g++.dg/init/array22.C: New test.\n        * g++.dg/init/array23.C: New test.\n\nFrom-SVN: r116962", "tree": {"sha": "0eff9007b485d53340be9861f85a919fdf2b9e9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0eff9007b485d53340be9861f85a919fdf2b9e9d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9bdb04a2f5df0bafb2ab16be673febd789c3a487", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bdb04a2f5df0bafb2ab16be673febd789c3a487", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9bdb04a2f5df0bafb2ab16be673febd789c3a487", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bdb04a2f5df0bafb2ab16be673febd789c3a487/comments", "author": null, "committer": null, "parents": [{"sha": "0b35aac25db5278bb91f6d975e1e56084749a85d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b35aac25db5278bb91f6d975e1e56084749a85d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b35aac25db5278bb91f6d975e1e56084749a85d"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "1123643c8939a006e608bf6ee27511c543bcec58", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bdb04a2f5df0bafb2ab16be673febd789c3a487/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bdb04a2f5df0bafb2ab16be673febd789c3a487/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9bdb04a2f5df0bafb2ab16be673febd789c3a487", "patch": "@@ -1,3 +1,9 @@\n+2006-09-14  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR C++/29002\n+\t* init.c (build_zero_init): If we have an error mark node for\n+\tthe array size, return.\n+\n 2006-09-10  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/28991"}, {"sha": "8faa03d393ec9ab7e9f9845c16c7e92e23eabb1d", "filename": "gcc/cp/init.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bdb04a2f5df0bafb2ab16be673febd789c3a487/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bdb04a2f5df0bafb2ab16be673febd789c3a487/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=9bdb04a2f5df0bafb2ab16be673febd789c3a487", "patch": "@@ -223,6 +223,11 @@ build_zero_init (tree type, tree nelts, bool static_storage_p)\n \t\t\t\t nelts, integer_one_node);\n       else\n \tmax_index = array_type_nelts (type);\n+\n+      /* If we have an error_mark here, we should just return error mark\n+\t as we don't know the size of the array yet.  */\n+      if (max_index == error_mark_node)\n+\treturn error_mark_node;\n       gcc_assert (TREE_CODE (max_index) == INTEGER_CST);\n \n       /* A zero-sized array, which is accepted as an extension, will"}, {"sha": "fd06af6d7589756b8bd0b641ac9991083bc374b0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bdb04a2f5df0bafb2ab16be673febd789c3a487/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bdb04a2f5df0bafb2ab16be673febd789c3a487/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9bdb04a2f5df0bafb2ab16be673febd789c3a487", "patch": "@@ -1,3 +1,9 @@\n+2006-09-14  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR C++/29002\n+\t* g++.dg/init/array22.C: New test.\n+\t* g++.dg/init/array23.C: New test.\n+\n 2006-09-14  Arnaud Charlet  <charlet@adacore.com>\n \n \t* stackcheck.lst: Update list of tests requiring stack checking."}, {"sha": "0c5bb33da989225a4c10d116e82ace3a6d7fefb2", "filename": "gcc/testsuite/g++.dg/init/array22.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bdb04a2f5df0bafb2ab16be673febd789c3a487/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Farray22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bdb04a2f5df0bafb2ab16be673febd789c3a487/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Farray22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Farray22.C?ref=9bdb04a2f5df0bafb2ab16be673febd789c3a487", "patch": "@@ -0,0 +1,6 @@\n+// PR C++/29002\n+// We ICE trying to set the \"zero\" initializer on the incomplete\n+//  array\n+\n+struct A {};\n+int A::* x[]; // { dg-error \"size\" }"}, {"sha": "80ffb0a98cc2dfe07c677c58e37e5b4a99a89411", "filename": "gcc/testsuite/g++.dg/init/array23.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bdb04a2f5df0bafb2ab16be673febd789c3a487/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Farray23.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bdb04a2f5df0bafb2ab16be673febd789c3a487/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Farray23.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Farray23.C?ref=9bdb04a2f5df0bafb2ab16be673febd789c3a487", "patch": "@@ -0,0 +1,6 @@\n+// PR C++/29002\n+// We ICE trying to set the \"zero\" initializer on the incomplete\n+//  array\n+\n+struct A {A();int A::* t;};\n+A x[]; // { dg-error \"size\" }"}]}