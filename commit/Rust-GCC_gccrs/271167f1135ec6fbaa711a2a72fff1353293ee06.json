{"sha": "271167f1135ec6fbaa711a2a72fff1353293ee06", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjcxMTY3ZjExMzVlYzZmYmFhNzExYTJhNzJmZmYxMzUzMjkzZWUwNg==", "commit": {"author": {"name": "Phil Muldoon", "email": "pmuldoon@redhat.com", "date": "2009-07-16T16:33:31Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2009-07-16T16:33:31Z"}, "message": "printers.py (StdStringPrinter.to_string): Fetch std::string to the given length.\n\n2009-07-16  Phil Muldoon <pmuldoon@redhat.com>\n\t    Tom Tromey <tromey@redhat.com>\n\n\t* python/libstdcxx/v6/printers.py (StdStringPrinter.to_string):\n\tFetch std::string to the given length.\n\nCo-Authored-By: Tom Tromey <tromey@redhat.com>\n\nFrom-SVN: r149714", "tree": {"sha": "72268f1502fd51b58f10640a7f7ced55d42f28b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72268f1502fd51b58f10640a7f7ced55d42f28b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/271167f1135ec6fbaa711a2a72fff1353293ee06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/271167f1135ec6fbaa711a2a72fff1353293ee06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/271167f1135ec6fbaa711a2a72fff1353293ee06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/271167f1135ec6fbaa711a2a72fff1353293ee06/comments", "author": null, "committer": null, "parents": [{"sha": "db87b56d201119dba435f0ad631561ece1bd8fdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db87b56d201119dba435f0ad631561ece1bd8fdc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db87b56d201119dba435f0ad631561ece1bd8fdc"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "39b9749553ecc82c91d4b440f8a25c710a63180f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/271167f1135ec6fbaa711a2a72fff1353293ee06/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/271167f1135ec6fbaa711a2a72fff1353293ee06/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=271167f1135ec6fbaa711a2a72fff1353293ee06", "patch": "@@ -1,3 +1,9 @@\n+2009-07-16  Phil Muldoon <pmuldoon@redhat.com>\n+\t    Tom Tromey <tromey@redhat.com>\n+\n+\t* python/libstdcxx/v6/printers.py (StdStringPrinter.to_string):\n+\tFetch std::string to the given length.\n+\n 2009-07-16  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/bits/istream.tcc (basic_istream<>::operator>>(short&),"}, {"sha": "a3d2ef139917619ce10049ba04bb80dff547464e", "filename": "libstdc++-v3/python/libstdcxx/v6/printers.py", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/271167f1135ec6fbaa711a2a72fff1353293ee06/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/271167f1135ec6fbaa711a2a72fff1353293ee06/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py?ref=271167f1135ec6fbaa711a2a72fff1353293ee06", "patch": "@@ -452,7 +452,21 @@ def to_string(self):\n             encoding = gdb.parameter('target-charset')\n         elif encoding == 1:\n             encoding = gdb.parameter('target-wide-charset')\n-        return self.val['_M_dataplus']['_M_p'].string(encoding)\n+\n+        # Make sure &string works, too.\n+        type = self.val.type\n+        if type.code == gdb.TYPE_CODE_REF:\n+            type = type.target ()\n+\n+        # Calculate the length of the string so that to_string returns\n+        # the string according to length, not according to first null\n+        # encountered.\n+        ptr = self.val ['_M_dataplus']['_M_p']\n+        realtype = type.unqualified ().strip_typedefs ()\n+        reptype = gdb.lookup_type (str (realtype) + '::_Rep').pointer ()\n+        header = ptr.cast(reptype) - 1\n+        len = header.dereference ()['_M_length']\n+        return self.val['_M_dataplus']['_M_p'].string (encoding, length = len)\n \n     def display_hint (self):\n         return 'string'"}]}