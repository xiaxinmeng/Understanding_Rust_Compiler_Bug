{"sha": "1b62186ca2f6dfffe5b563bdef8d8fc2aff952cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI2MjE4NmNhMmY2ZGZmZmU1YjU2M2JkZWY4ZDhmYzJhZmY5NTJjYw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2018-11-06T15:41:32Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2018-11-06T15:41:32Z"}, "message": "tree.c (fld_simplified_type_name): Break out form ...\n\n\n\t* tree.c (fld_simplified_type_name): Break out form ...\n\t(free_lang_data_in_type): ... here.\n\t(fld_type_variant_equal_p): Use it.\n\nFrom-SVN: r265847", "tree": {"sha": "2c580fa31c9b234a042b2b4a199929d0ceb366b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c580fa31c9b234a042b2b4a199929d0ceb366b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b62186ca2f6dfffe5b563bdef8d8fc2aff952cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b62186ca2f6dfffe5b563bdef8d8fc2aff952cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b62186ca2f6dfffe5b563bdef8d8fc2aff952cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b62186ca2f6dfffe5b563bdef8d8fc2aff952cc/comments", "author": null, "committer": null, "parents": [{"sha": "cdb3f2f4314f5cd72927eb7f620e1df14e1da574", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdb3f2f4314f5cd72927eb7f620e1df14e1da574", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdb3f2f4314f5cd72927eb7f620e1df14e1da574"}], "stats": {"total": 32, "additions": 26, "deletions": 6}, "files": [{"sha": "56809ca2629db755cfb08c56da19c954593fc2c2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b62186ca2f6dfffe5b563bdef8d8fc2aff952cc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b62186ca2f6dfffe5b563bdef8d8fc2aff952cc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1b62186ca2f6dfffe5b563bdef8d8fc2aff952cc", "patch": "@@ -1,3 +1,9 @@\n+2018-11-06  Jan Hubicka  <jh@suse.cz>\n+\n+\t* tree.c (fld_simplified_type_name): Break out form ...\n+\t(free_lang_data_in_type): ... here.\n+\t(fld_type_variant_equal_p): Use it.\n+\n 2018-11-06  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* config/default-d.c: Include memmodel.h."}, {"sha": "fcd001f0a24a68b18cf0d39ad95930f3d4822e1a", "filename": "gcc/tree.c", "status": "modified", "additions": 20, "deletions": 6, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b62186ca2f6dfffe5b563bdef8d8fc2aff952cc/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b62186ca2f6dfffe5b563bdef8d8fc2aff952cc/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=1b62186ca2f6dfffe5b563bdef8d8fc2aff952cc", "patch": "@@ -5083,6 +5083,21 @@ fld_worklist_push (tree t, struct free_lang_data_d *fld)\n \n \n \f\n+/* Return simplified TYPE_NAME of TYPE.  */\n+\n+static tree\n+fld_simplified_type_name (tree type)\n+{\n+  if (!TYPE_NAME (type) || TREE_CODE (TYPE_NAME (type)) != TYPE_DECL)\n+    return TYPE_NAME (type);\n+  /* Drop TYPE_DECLs in TYPE_NAME in favor of the identifier in the\n+     TYPE_DECL if the type doesn't have linkage.\n+     this must match fld_  */\n+  if (type != TYPE_MAIN_VARIANT (type) || ! type_with_linkage_p (type))\n+    return DECL_NAME (TYPE_NAME (type));\n+  return TYPE_NAME (type);\n+}\n+\n /* Do same comparsion as check_qualified_type skipping lang part of type\n    and be more permissive about type names: we only care that names are\n    same (for diagnostics) and that ODR names are the same.  */\n@@ -5091,8 +5106,8 @@ static bool\n fld_type_variant_equal_p (tree t, tree v)\n {\n   if (TYPE_QUALS (t) != TYPE_QUALS (v)\n-      || TYPE_NAME (t) != TYPE_NAME (v)\n       || TYPE_ALIGN (t) != TYPE_ALIGN (v)\n+      || fld_simplified_type_name (t) != fld_simplified_type_name (v)\n       || !attribute_list_equal (TYPE_ATTRIBUTES (t),\n \t\t\t        TYPE_ATTRIBUTES (v)))\n     return false;\n@@ -5338,12 +5353,11 @@ free_lang_data_in_type (tree type)\n     }\n \n   /* Drop TYPE_DECLs in TYPE_NAME in favor of the identifier in the\n-     TYPE_DECL if the type doesn't have linkage.  */\n+     TYPE_DECL if the type doesn't have linkage.\n+     this must match fld_  */\n   if (type != TYPE_MAIN_VARIANT (type) || ! type_with_linkage_p (type))\n-    {\n-      TYPE_NAME (type) = TYPE_IDENTIFIER (type);\n-      TYPE_STUB_DECL (type) = NULL;\n-    }\n+    TYPE_STUB_DECL (type) = NULL;\n+  TYPE_NAME (type) = fld_simplified_type_name (type);\n }\n \n "}]}