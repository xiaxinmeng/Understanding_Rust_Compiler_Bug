{"sha": "e63f158158a16d77dd34492534e13c1a5ca27943", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTYzZjE1ODE1OGExNmQ3N2RkMzQ0OTI1MzRlMTNjMWE1Y2EyNzk0Mw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-01-28T14:28:16Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-01-28T14:28:16Z"}, "message": "re PR testsuite/56053 (FAIL: c-c++-common/asan/(global|stack)-overflow-1.c)\n\n\tPR testsuite/56053\n\t* c-c++-common/asan/heap-overflow-1.c: Don't include stdlib.h and\n\tstring.h.  Provide memset, malloc and free prototypes, adjust line\n\tnumbers in dg-output.\n\t* c-c++-common/asan/stack-overflow-1.c: Don't include string.h.\n\tProvide memset prototype and adjust line numbers in dg-output.\n\t* c-c++-common/asan/global-overflow-1.c: Likewise.\n\nFrom-SVN: r195505", "tree": {"sha": "c660b79e14ed44cde2fb526db9c98b7851ccd431", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c660b79e14ed44cde2fb526db9c98b7851ccd431"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e63f158158a16d77dd34492534e13c1a5ca27943", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e63f158158a16d77dd34492534e13c1a5ca27943", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e63f158158a16d77dd34492534e13c1a5ca27943", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e63f158158a16d77dd34492534e13c1a5ca27943/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aa710d25957e36a089a03929d6f82fa88371e32d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa710d25957e36a089a03929d6f82fa88371e32d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa710d25957e36a089a03929d6f82fa88371e32d"}], "stats": {"total": 45, "additions": 36, "deletions": 9}, "files": [{"sha": "b9d16f23afd2495c346154ba98e39c2e8b0ff83f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e63f158158a16d77dd34492534e13c1a5ca27943/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e63f158158a16d77dd34492534e13c1a5ca27943/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e63f158158a16d77dd34492534e13c1a5ca27943", "patch": "@@ -1,5 +1,13 @@\n 2013-01-28  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR testsuite/56053\n+\t* c-c++-common/asan/heap-overflow-1.c: Don't include stdlib.h and\n+\tstring.h.  Provide memset, malloc and free prototypes, adjust line\n+\tnumbers in dg-output.\n+\t* c-c++-common/asan/stack-overflow-1.c: Don't include string.h.\n+\tProvide memset prototype and adjust line numbers in dg-output.\n+\t* c-c++-common/asan/global-overflow-1.c: Likewise.\n+\n \tPR tree-optimization/56094\n \t* gcc.dg/pr56094.c: New test.\n "}, {"sha": "66e91479cf0592f5d9f4bc848a2d040d7bbd5859", "filename": "gcc/testsuite/c-c++-common/asan/global-overflow-1.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e63f158158a16d77dd34492534e13c1a5ca27943/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fglobal-overflow-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e63f158158a16d77dd34492534e13c1a5ca27943/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fglobal-overflow-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fglobal-overflow-1.c?ref=e63f158158a16d77dd34492534e13c1a5ca27943", "patch": "@@ -2,7 +2,12 @@\n /* { dg-options \"-fno-builtin-memset\" } */\n /* { dg-shouldfail \"asan\" } */\n \n-#include <string.h>\n+extern\n+#ifdef __cplusplus\n+\"C\"\n+#endif\n+void *memset (void *, int, __SIZE_TYPE__);\n+\n volatile int ten = 10;\n \n int main() {\n@@ -18,6 +23,6 @@ int main() {\n }\n \n /* { dg-output \"READ of size 1 at 0x\\[0-9a-f\\]+ thread T0.*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #0 0x\\[0-9a-f\\]+ (in _*main (\\[^\\n\\r]*global-overflow-1.c:15|\\[^\\n\\r]*:0)|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r).*\" } */\n+/* { dg-output \"    #0 0x\\[0-9a-f\\]+ (in _*main (\\[^\\n\\r]*global-overflow-1.c:20|\\[^\\n\\r]*:0)|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r).*\" } */\n /* { dg-output \"0x\\[0-9a-f\\]+ is located 0 bytes to the right of global variable\" } */\n /* { dg-output \".*YYY\\[^\\n\\r]* of size 10\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */"}, {"sha": "43d47a3b2514cb288ddfc06fbbff310102f3a313", "filename": "gcc/testsuite/c-c++-common/asan/heap-overflow-1.c", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e63f158158a16d77dd34492534e13c1a5ca27943/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fheap-overflow-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e63f158158a16d77dd34492534e13c1a5ca27943/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fheap-overflow-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fheap-overflow-1.c?ref=e63f158158a16d77dd34492534e13c1a5ca27943", "patch": "@@ -2,8 +2,18 @@\n /* { dg-options \"-fno-builtin-malloc -fno-builtin-free -fno-builtin-memset\" } */\n /* { dg-shouldfail \"asan\" } */\n \n-#include <stdlib.h>\n-#include <string.h>\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+void *memset (void *, int, __SIZE_TYPE__);\n+void *malloc (__SIZE_TYPE__);\n+void free (void *);\n+\n+#ifdef __cplusplus\n+}\n+#endif\n+\n volatile int ten = 10;\n int main(int argc, char **argv) {\n   char *x = (char*)malloc(10);\n@@ -14,8 +24,8 @@ int main(int argc, char **argv) {\n }\n \n /* { dg-output \"READ of size 1 at 0x\\[0-9a-f\\]+ thread T0.*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #0 0x\\[0-9a-f\\]+ (in _*main (\\[^\\n\\r]*heap-overflow-1.c:11|\\[^\\n\\r]*:0)|\\[(\\]).*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"    #0 0x\\[0-9a-f\\]+ (in _*main (\\[^\\n\\r]*heap-overflow-1.c:21|\\[^\\n\\r]*:0)|\\[(\\]).*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"0x\\[0-9a-f\\]+ is located 0 bytes to the right of 10-byte region\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"allocated by thread T0 here:\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"    #0 0x\\[0-9a-f\\]+ (in _*(interceptor_|)malloc|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #1 0x\\[0-9a-f\\]+ (in _*main (\\[^\\n\\r]*heap-overflow-1.c:9|\\[^\\n\\r]*:0)|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"    #1 0x\\[0-9a-f\\]+ (in _*main (\\[^\\n\\r]*heap-overflow-1.c:19|\\[^\\n\\r]*:0)|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */"}, {"sha": "790aa5eb366d2103156c5a39ed72acb7494158c1", "filename": "gcc/testsuite/c-c++-common/asan/stack-overflow-1.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e63f158158a16d77dd34492534e13c1a5ca27943/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fstack-overflow-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e63f158158a16d77dd34492534e13c1a5ca27943/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fstack-overflow-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fstack-overflow-1.c?ref=e63f158158a16d77dd34492534e13c1a5ca27943", "patch": "@@ -2,9 +2,13 @@\n /* { dg-options \"-fno-builtin-memset\" } */\n /* { dg-shouldfail \"asan\" } */\n \n-volatile int ten = 10;\n+extern\n+#ifdef __cplusplus\n+\"C\"\n+#endif\n+void *memset (void *, int, __SIZE_TYPE__);\n \n-#include <string.h>\n+volatile int ten = 10;\n \n int main() {\n   char x[10];\n@@ -14,5 +18,5 @@ int main() {\n }\n \n /* { dg-output \"READ of size 1 at 0x\\[0-9a-f\\]+ thread T0\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #0 0x\\[0-9a-f\\]+ (in _*main (\\[^\\n\\r]*stack-overflow-1.c:12|\\[^\\n\\r]*:0)|\\[(\\]).*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"    #0 0x\\[0-9a-f\\]+ (in _*main (\\[^\\n\\r]*stack-overflow-1.c:16|\\[^\\n\\r]*:0)|\\[(\\]).*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"Address 0x\\[0-9a-f\\]+ is\\[^\\n\\r]*frame <main>\" } */"}]}