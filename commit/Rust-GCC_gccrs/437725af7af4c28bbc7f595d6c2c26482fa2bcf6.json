{"sha": "437725af7af4c28bbc7f595d6c2c26482fa2bcf6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDM3NzI1YWY3YWY0YzI4YmJjN2Y1OTVkNmMyYzI2NDgyZmEyYmNmNg==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2018-11-01T19:50:14Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2018-11-01T19:50:14Z"}, "message": "re PR fortran/87782 (runtime error: load of value 1818451807, which is not a valid value for type 'expr_t')\n\n2018-11-01  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/87782\n\t* frontend-passes.c (constant_string_length): If there is a\n\tsubstring with a length which cannot be reduced to a constant,\n\treturn NULL.\n\nFrom-SVN: r265730", "tree": {"sha": "7aa8da9b8efb695d9e0678ee4fdab8325769c634", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7aa8da9b8efb695d9e0678ee4fdab8325769c634"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/437725af7af4c28bbc7f595d6c2c26482fa2bcf6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/437725af7af4c28bbc7f595d6c2c26482fa2bcf6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/437725af7af4c28bbc7f595d6c2c26482fa2bcf6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/437725af7af4c28bbc7f595d6c2c26482fa2bcf6/comments", "author": null, "committer": null, "parents": [{"sha": "a5fbc2f36a291cbe80c4393950d6db9b56a34b05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5fbc2f36a291cbe80c4393950d6db9b56a34b05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5fbc2f36a291cbe80c4393950d6db9b56a34b05"}], "stats": {"total": 29, "additions": 20, "deletions": 9}, "files": [{"sha": "134c43db644a2566b91dcb5357ecd3f33f75fc4f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437725af7af4c28bbc7f595d6c2c26482fa2bcf6/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437725af7af4c28bbc7f595d6c2c26482fa2bcf6/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=437725af7af4c28bbc7f595d6c2c26482fa2bcf6", "patch": "@@ -1,3 +1,10 @@\n+2018-11-01  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/87782\n+\t* frontend-passes.c (constant_string_length): If there is a\n+\tsubstring with a length which cannot be reduced to a constant,\n+\treturn NULL.\n+\n 2018-11-01  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/40196"}, {"sha": "19930305bd16590091c4a90779b301264f56704b", "filename": "gcc/fortran/frontend-passes.c", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437725af7af4c28bbc7f595d6c2c26482fa2bcf6/gcc%2Ffortran%2Ffrontend-passes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437725af7af4c28bbc7f595d6c2c26482fa2bcf6/gcc%2Ffortran%2Ffrontend-passes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ffrontend-passes.c?ref=437725af7af4c28bbc7f595d6c2c26482fa2bcf6", "patch": "@@ -638,23 +638,27 @@ constant_string_length (gfc_expr *e)\n \treturn gfc_copy_expr(length);\n     }\n \n-  /* Return length of substring, if constant. */\n+  /* See if there is a substring. If it has a constant length, return\n+     that and NULL otherwise.  */\n   for (ref = e->ref; ref; ref = ref->next)\n     {\n-      if (ref->type == REF_SUBSTRING\n-\t  && gfc_dep_difference (ref->u.ss.end, ref->u.ss.start, &value))\n+      if (ref->type == REF_SUBSTRING)\n \t{\n-\t  res = gfc_get_constant_expr (BT_INTEGER, gfc_charlen_int_kind,\n-\t\t\t\t       &e->where);\n+\t  if (gfc_dep_difference (ref->u.ss.end, ref->u.ss.start, &value))\n+\t    {\n+\t      res = gfc_get_constant_expr (BT_INTEGER, gfc_charlen_int_kind,\n+\t\t\t\t\t   &e->where);\n \n-\t  mpz_add_ui (res->value.integer, value, 1);\n-\t  mpz_clear (value);\n-\t  return res;\n+\t      mpz_add_ui (res->value.integer, value, 1);\n+\t      mpz_clear (value);\n+\t      return res;\n+\t    }\n+\t  else\n+\t    return NULL;\n \t}\n     }\n \n   /* Return length of char symbol, if constant.  */\n-\n   if (e->symtree && e->symtree->n.sym->ts.u.cl\n       && e->symtree->n.sym->ts.u.cl->length\n       && e->symtree->n.sym->ts.u.cl->length->expr_type == EXPR_CONSTANT)"}]}