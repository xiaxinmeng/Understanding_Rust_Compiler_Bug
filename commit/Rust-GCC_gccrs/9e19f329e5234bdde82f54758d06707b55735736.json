{"sha": "9e19f329e5234bdde82f54758d06707b55735736", "node_id": "C_kwDOANBUbNoAKDllMTlmMzI5ZTUyMzRiZGRlODJmNTQ3NThkMDY3MDdiNTU3MzU3MzY", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-10-17T16:27:01Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2023-02-21T11:36:38Z"}, "message": "gccrs: Formatting cleanup in HIR lowering pattern\n\ngcc/rust/ChangeLog:\n\n\t* hir/rust-ast-lower-pattern.cc (ASTLoweringPattern::ASTLoweringPattern):\n\tImprove formatting.\n\t(ASTLoweringPattern::translate): Likewise.\n\t* hir/rust-ast-lower-pattern.h: Likewise.\n\t* resolve/rust-ast-resolve-expr.h: Likewise.", "tree": {"sha": "4669ab18cf4f331700e83d664e8c394897ba72c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4669ab18cf4f331700e83d664e8c394897ba72c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e19f329e5234bdde82f54758d06707b55735736", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e19f329e5234bdde82f54758d06707b55735736", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e19f329e5234bdde82f54758d06707b55735736", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e19f329e5234bdde82f54758d06707b55735736/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "870dd9d5d3c5180efb147f93ed6ae454605c9037", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/870dd9d5d3c5180efb147f93ed6ae454605c9037", "html_url": "https://github.com/Rust-GCC/gccrs/commit/870dd9d5d3c5180efb147f93ed6ae454605c9037"}], "stats": {"total": 85, "additions": 20, "deletions": 65}, "files": [{"sha": "30a188286c8a846e2edd22a26375acdb5d14bff1", "filename": "gcc/rust/hir/rust-ast-lower-pattern.cc", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e19f329e5234bdde82f54758d06707b55735736/gcc%2Frust%2Fhir%2Frust-ast-lower-pattern.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e19f329e5234bdde82f54758d06707b55735736/gcc%2Frust%2Fhir%2Frust-ast-lower-pattern.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-ast-lower-pattern.cc?ref=9e19f329e5234bdde82f54758d06707b55735736", "patch": "@@ -22,6 +22,24 @@\n namespace Rust {\n namespace HIR {\n \n+ASTLoweringPattern::ASTLoweringPattern () : translated (nullptr) {}\n+\n+HIR::Pattern *\n+ASTLoweringPattern::translate (AST::Pattern *pattern)\n+{\n+  ASTLoweringPattern resolver;\n+  pattern->accept_vis (resolver);\n+\n+  rust_assert (resolver.translated != nullptr);\n+\n+  resolver.mappings->insert_hir_pattern (resolver.translated);\n+  resolver.mappings->insert_location (\n+    resolver.translated->get_pattern_mappings ().get_hirid (),\n+    pattern->get_locus ());\n+\n+  return resolver.translated;\n+}\n+\n void\n ASTLoweringPattern::visit (AST::IdentifierPattern &pattern)\n {"}, {"sha": "8b191d56868b3dff277ac4347095d689ff6ee248", "filename": "gcc/rust/hir/rust-ast-lower-pattern.h", "status": "modified", "additions": 2, "deletions": 22, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e19f329e5234bdde82f54758d06707b55735736/gcc%2Frust%2Fhir%2Frust-ast-lower-pattern.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e19f329e5234bdde82f54758d06707b55735736/gcc%2Frust%2Fhir%2Frust-ast-lower-pattern.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-ast-lower-pattern.h?ref=9e19f329e5234bdde82f54758d06707b55735736", "patch": "@@ -29,39 +29,19 @@ class ASTLoweringPattern : public ASTLoweringBase\n   using Rust::HIR::ASTLoweringBase::visit;\n \n public:\n-  static HIR::Pattern *translate (AST::Pattern *pattern)\n-  {\n-    ASTLoweringPattern resolver;\n-    pattern->accept_vis (resolver);\n-\n-    rust_assert (resolver.translated != nullptr);\n-\n-    resolver.mappings->insert_hir_pattern (resolver.translated);\n-    resolver.mappings->insert_location (\n-      resolver.translated->get_pattern_mappings ().get_hirid (),\n-      pattern->get_locus ());\n-\n-    return resolver.translated;\n-  }\n+  static HIR::Pattern *translate (AST::Pattern *pattern);\n \n   void visit (AST::IdentifierPattern &pattern) override;\n-\n   void visit (AST::PathInExpression &pattern) override;\n-\n   void visit (AST::StructPattern &pattern) override;\n-\n   void visit (AST::TupleStructPattern &pattern) override;\n-\n   void visit (AST::WildcardPattern &pattern) override;\n-\n   void visit (AST::TuplePattern &pattern) override;\n-\n   void visit (AST::LiteralPattern &pattern) override;\n-\n   void visit (AST::RangePattern &pattern) override;\n \n private:\n-  ASTLoweringPattern () : translated (nullptr) {}\n+  ASTLoweringPattern ();\n \n   HIR::Pattern *translated;\n };"}, {"sha": "60ae172081163816cd6a853deb25cd16253b5bdd", "filename": "gcc/rust/resolve/rust-ast-resolve-expr.h", "status": "modified", "additions": 0, "deletions": 43, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e19f329e5234bdde82f54758d06707b55735736/gcc%2Frust%2Fresolve%2Frust-ast-resolve-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e19f329e5234bdde82f54758d06707b55735736/gcc%2Frust%2Fresolve%2Frust-ast-resolve-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-expr.h?ref=9e19f329e5234bdde82f54758d06707b55735736", "patch": "@@ -34,89 +34,46 @@ class ResolveExpr : public ResolverBase\n \t\t  const CanonicalPath &canonical_prefix);\n \n   void visit (AST::TupleIndexExpr &expr) override;\n-\n   void visit (AST::TupleExpr &expr) override;\n-\n   void visit (AST::PathInExpression &expr) override;\n-\n   void visit (AST::QualifiedPathInExpression &expr) override;\n-\n   void visit (AST::ReturnExpr &expr) override;\n-\n   void visit (AST::CallExpr &expr) override;\n-\n   void visit (AST::MethodCallExpr &expr) override;\n-\n   void visit (AST::AssignmentExpr &expr) override;\n-\n   void visit (AST::IdentifierExpr &expr) override;\n-\n   void visit (AST::ArithmeticOrLogicalExpr &expr) override;\n-\n   void visit (AST::CompoundAssignmentExpr &expr) override;\n-\n   void visit (AST::ComparisonExpr &expr) override;\n-\n   void visit (AST::LazyBooleanExpr &expr) override;\n-\n   void visit (AST::NegationExpr &expr) override;\n-\n   void visit (AST::TypeCastExpr &expr) override;\n-\n   void visit (AST::IfExpr &expr) override;\n-\n   void visit (AST::IfExprConseqElse &expr) override;\n-\n   void visit (AST::IfExprConseqIf &expr) override;\n-\n   void visit (AST::IfLetExpr &expr) override;\n-\n   void visit (AST::BlockExpr &expr) override;\n-\n   void visit (AST::UnsafeBlockExpr &expr) override;\n-\n   void visit (AST::ArrayElemsValues &elems) override;\n-\n   void visit (AST::ArrayExpr &expr) override;\n-\n   void visit (AST::ArrayIndexExpr &expr) override;\n-\n   void visit (AST::ArrayElemsCopied &elems) override;\n-\n-  // this this an empty struct constructor like 'S {}'\n   void visit (AST::StructExprStruct &struct_expr) override;\n-\n-  // this this a struct constructor with fields\n   void visit (AST::StructExprStructFields &struct_expr) override;\n-\n   void visit (AST::GroupedExpr &expr) override;\n-\n   void visit (AST::FieldAccessExpr &expr) override;\n-\n   void visit (AST::LoopExpr &expr) override;\n-\n   void visit (AST::BreakExpr &expr) override;\n-\n   void visit (AST::WhileLoopExpr &expr) override;\n-\n   void visit (AST::ForLoopExpr &expr) override;\n-\n   void visit (AST::ContinueExpr &expr) override;\n-\n   void visit (AST::BorrowExpr &expr) override;\n-\n   void visit (AST::DereferenceExpr &expr) override;\n-\n   void visit (AST::MatchExpr &expr) override;\n-\n   void visit (AST::RangeFromToExpr &expr) override;\n-\n   void visit (AST::RangeFromExpr &expr) override;\n-\n   void visit (AST::RangeToExpr &expr) override;\n-\n   void visit (AST::RangeFullExpr &expr) override;\n-\n   void visit (AST::RangeFromToInclExpr &expr) override;\n \n private:"}]}