{"sha": "db67dfdad2007a7d9b2900001bc9278a9bfba81f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGI2N2RmZGFkMjAwN2E3ZDliMjkwMDAwMWJjOTI3OGE5YmZiYTgxZg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2014-12-27T12:49:54Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-12-27T12:49:54Z"}, "message": "mmx.md (*vec_extractv2sf_1): Do not emit unpckhps.\n\n\t* config/i386/mmx.md (*vec_extractv2sf_1): Do not emit unpckhps.\n\tEmit movshdup for SSE3 and shufps otherwise.\n\t(*vec_extractv2si_1): Do not emit punpckhdq and unpckhps.\n\tEmit pshufd for SSE2 and shufps otherwise.\n\nFrom-SVN: r219074", "tree": {"sha": "3a512d4cebc8457c2eac89f4aabb514f94a7e588", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a512d4cebc8457c2eac89f4aabb514f94a7e588"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db67dfdad2007a7d9b2900001bc9278a9bfba81f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db67dfdad2007a7d9b2900001bc9278a9bfba81f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db67dfdad2007a7d9b2900001bc9278a9bfba81f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db67dfdad2007a7d9b2900001bc9278a9bfba81f/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7b8e6885c6743ecba249bcad9c5c24455e2dd11f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b8e6885c6743ecba249bcad9c5c24455e2dd11f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b8e6885c6743ecba249bcad9c5c24455e2dd11f"}], "stats": {"total": 43, "additions": 26, "deletions": 17}, "files": [{"sha": "8aab41455c254b437dcb13aa7c9d867e8ab056a4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db67dfdad2007a7d9b2900001bc9278a9bfba81f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db67dfdad2007a7d9b2900001bc9278a9bfba81f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=db67dfdad2007a7d9b2900001bc9278a9bfba81f", "patch": "@@ -1,3 +1,10 @@\n+2014-12-27  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/mmx.md (*vec_extractv2sf_1): Do not emit unpckhps.\n+\tEmit movshdup for SSE3 and shufps otherwise.\n+\t(*vec_extractv2si_1): Do not emit punpckhdq and unpckhps.\n+\tEmit pshufd for SSE2 and shufps otherwise.\n+\n 2014-12-24  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/51244"}, {"sha": "a7d2a7eec12d56bd8822f812b6ad292ef03250e5", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 19, "deletions": 17, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db67dfdad2007a7d9b2900001bc9278a9bfba81f/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db67dfdad2007a7d9b2900001bc9278a9bfba81f/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=db67dfdad2007a7d9b2900001bc9278a9bfba81f", "patch": "@@ -600,20 +600,25 @@\n ;; Avoid combining registers from different units in a single alternative,\n ;; see comment above inline_secondary_memory_needed function in i386.c\n (define_insn \"*vec_extractv2sf_1\"\n-  [(set (match_operand:SF 0 \"nonimmediate_operand\"     \"=y,x,y,x,f,r\")\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\"     \"=y,x,x,y,x,f,r\")\n \t(vec_select:SF\n-\t  (match_operand:V2SF 1 \"nonimmediate_operand\" \" 0,0,o,o,o,o\")\n+\t  (match_operand:V2SF 1 \"nonimmediate_operand\" \" 0,x,x,o,o,o,o\")\n \t  (parallel [(const_int 1)])))]\n   \"TARGET_MMX && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n   \"@\n    punpckhdq\\t%0, %0\n-   unpckhps\\t%0, %0\n+   %vmovshdup\\t{%1, %0|%0, %1}\n+   shufps\\t{$0xe5, %1, %0|%0, %1, 0xe5}\n    #\n    #\n    #\n    #\"\n-  [(set_attr \"type\" \"mmxcvt,sselog1,mmxmov,ssemov,fmov,imov\")\n-   (set_attr \"mode\" \"DI,V4SF,SF,SF,SF,SF\")])\n+  [(set_attr \"isa\" \"*,sse3,noavx,*,*,*,*\")\n+   (set_attr \"type\" \"mmxcvt,sse,sseshuf1,mmxmov,ssemov,fmov,imov\")\n+   (set_attr \"length_immediate\" \"*,*,1,*,*,*,*\")\n+   (set_attr \"prefix_rep\" \"*,1,*,*,*,*,*\")\n+   (set_attr \"prefix\" \"orig,maybe_vex,orig,orig,orig,orig,orig\")\n+   (set_attr \"mode\" \"DI,V4SF,V4SF,SF,SF,SF,SF\")])\n \n (define_split\n   [(set (match_operand:SF 0 \"register_operand\")\n@@ -1288,26 +1293,23 @@\n ;; Avoid combining registers from different units in a single alternative,\n ;; see comment above inline_secondary_memory_needed function in i386.c\n (define_insn \"*vec_extractv2si_1\"\n-  [(set (match_operand:SI 0 \"nonimmediate_operand\"     \"=y,x,x,x,y,x,r\")\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\"     \"=y,x,x,y,x,r\")\n \t(vec_select:SI\n-\t  (match_operand:V2SI 1 \"nonimmediate_operand\" \" 0,0,x,0,o,o,o\")\n+\t  (match_operand:V2SI 1 \"nonimmediate_operand\" \" 0,x,x,o,o,o\")\n \t  (parallel [(const_int 1)])))]\n   \"TARGET_MMX && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n   \"@\n    punpckhdq\\t%0, %0\n-   punpckhdq\\t%0, %0\n-   pshufd\\t{$85, %1, %0|%0, %1, 85}\n-   unpckhps\\t%0, %0\n+   %vpshufd\\t{$0xe5, %1, %0|%0, %1, 0xe5}\n+   shufps\\t{$0xe5, %1, %0|%0, %1, 0xe5}\n    #\n    #\n    #\"\n-  [(set (attr \"isa\")\n-     (if_then_else (eq_attr \"alternative\" \"1,2\")\n-       (const_string \"sse2\")\n-       (const_string \"*\")))\n-   (set_attr \"type\" \"mmxcvt,sselog1,sselog1,sselog1,mmxmov,ssemov,imov\")\n-   (set_attr \"length_immediate\" \"*,*,1,*,*,*,*\")\n-   (set_attr \"mode\" \"DI,TI,TI,V4SF,SI,SI,SI\")])\n+  [(set_attr \"isa\" \"*,sse2,noavx,*,*,*\")\n+   (set_attr \"type\" \"mmxcvt,sseshuf1,sseshuf1,mmxmov,ssemov,imov\")\n+   (set_attr \"length_immediate\" \"*,1,1,*,*,*\")\n+   (set_attr \"prefix\" \"orig,maybe_vex,orig,orig,orig,orig\")\n+   (set_attr \"mode\" \"DI,TI,V4SF,SI,SI,SI\")])\n \n (define_split\n   [(set (match_operand:SI 0 \"register_operand\")"}]}