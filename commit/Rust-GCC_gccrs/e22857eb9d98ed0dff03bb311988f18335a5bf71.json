{"sha": "e22857eb9d98ed0dff03bb311988f18335a5bf71", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTIyODU3ZWI5ZDk4ZWQwZGZmMDNiYjMxMTk4OGYxODMzNWE1YmY3MQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-02-15T07:19:51Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-02-15T07:19:51Z"}, "message": "flow.c (recompute_reg_usage): Remove all arguments.\n\n\t* flow.c (recompute_reg_usage): Remove all arguments.\n\t* passes.c (rest_of_compilation): Adjust the call to\n\trecompute_reg_usage.\n\t* rtl.h: Adjust the prototype for recompute_reg_usage.\n\nFrom-SVN: r95058", "tree": {"sha": "4a7a7da77a61ecb4253c8b4d31cb38e3be470551", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a7a7da77a61ecb4253c8b4d31cb38e3be470551"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e22857eb9d98ed0dff03bb311988f18335a5bf71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e22857eb9d98ed0dff03bb311988f18335a5bf71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e22857eb9d98ed0dff03bb311988f18335a5bf71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e22857eb9d98ed0dff03bb311988f18335a5bf71/comments", "author": null, "committer": null, "parents": [{"sha": "2e09ee33f0420c4e4f063c8dff27afa017c0b687", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e09ee33f0420c4e4f063c8dff27afa017c0b687", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e09ee33f0420c4e4f063c8dff27afa017c0b687"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "dfc44b867150e0fa686c65dab3e30297ec66e2a9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e22857eb9d98ed0dff03bb311988f18335a5bf71/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e22857eb9d98ed0dff03bb311988f18335a5bf71/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e22857eb9d98ed0dff03bb311988f18335a5bf71", "patch": "@@ -5,6 +5,11 @@\n \t* passes.c (rest_of_handle_loop_optimize): Adjust the call to\n \tfind_basic_blocks.\n \n+\t* flow.c (recompute_reg_usage): Remove all arguments.\n+\t* passes.c (rest_of_compilation): Adjust the call to\n+\trecompute_reg_usage.\n+\t* rtl.h: Adjust the prototype for recompute_reg_usage.\n+\n 2005-02-14  Daniel Berlin  <dberlin@dberlin.org>\n \t\n \t* tree-dump.c (dump_files): Update to reflect new member"}, {"sha": "f356a6ee396ba713f28d4e51e3369d958713d02d", "filename": "gcc/flow.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e22857eb9d98ed0dff03bb311988f18335a5bf71/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e22857eb9d98ed0dff03bb311988f18335a5bf71/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=e22857eb9d98ed0dff03bb311988f18335a5bf71", "patch": "@@ -4205,17 +4205,11 @@ debug_regset (regset r)\n    register allocators to prioritize pseudos for allocation to hard regs.\n    More accurate reference counts generally lead to better register allocation.\n \n-   F is the first insn to be scanned.\n-\n-   LOOP_STEP denotes how much loop_depth should be incremented per\n-   loop nesting level in order to increase the ref count more for\n-   references in a loop.\n-\n    It might be worthwhile to update REG_LIVE_LENGTH, REG_BASIC_BLOCK and\n    possibly other information which is used by the register allocators.  */\n \n void\n-recompute_reg_usage (rtx f ATTRIBUTE_UNUSED, int loop_step ATTRIBUTE_UNUSED)\n+recompute_reg_usage (void)\n {\n   allocate_reg_life_data ();\n   /* distribute_notes in combiner fails to convert some of the REG_UNUSED notes"}, {"sha": "ccf804ccd2d2f0d4947ad388baf86b39fd3f5e22", "filename": "gcc/passes.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e22857eb9d98ed0dff03bb311988f18335a5bf71/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e22857eb9d98ed0dff03bb311988f18335a5bf71/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=e22857eb9d98ed0dff03bb311988f18335a5bf71", "patch": "@@ -1639,7 +1639,7 @@ rest_of_compilation (void)\n   /* Any of the several passes since flow1 will have munged register\n      lifetime data a bit.  We need it to be up to date for scheduling\n      (see handling of reg_known_equiv in init_alias_analysis).  */\n-  recompute_reg_usage (get_insns (), !optimize_size);\n+  recompute_reg_usage ();\n \n #ifdef INSN_SCHEDULING\n   if (optimize > 0 && flag_modulo_sched)"}, {"sha": "b0d839a533711e6429a483eb02e845598d99acdb", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e22857eb9d98ed0dff03bb311988f18335a5bf71/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e22857eb9d98ed0dff03bb311988f18335a5bf71/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=e22857eb9d98ed0dff03bb311988f18335a5bf71", "patch": "@@ -2019,7 +2019,7 @@ extern rtx move_by_pieces (rtx, rtx, unsigned HOST_WIDE_INT,\n \t\t\t   unsigned int, int);\n \n /* In flow.c */\n-extern void recompute_reg_usage (rtx, int);\n+extern void recompute_reg_usage (void);\n extern int initialize_uninitialized_subregs (void);\n extern void delete_dead_jumptables (void);\n extern void print_rtl_with_bb (FILE *, rtx);"}]}