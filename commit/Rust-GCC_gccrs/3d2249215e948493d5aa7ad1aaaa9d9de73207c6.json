{"sha": "3d2249215e948493d5aa7ad1aaaa9d9de73207c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2QyMjQ5MjE1ZTk0ODQ5M2Q1YWE3YWQxYWFhYTlkOWRlNzMyMDdjNg==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2018-02-08T13:06:26Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2018-02-08T13:06:26Z"}, "message": "[hsa] Fix PR82416 testcase\n\n2018-02-08  Martin Jambor  <mjambor@suse.cz>\n\n\t* testsuite/libgomp.hsa.c/pr82416.c: Make the function with target\n\tclonable.\n\nFrom-SVN: r257485", "tree": {"sha": "ecd116bc594612a4a21dd578e4763f89eb07afc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ecd116bc594612a4a21dd578e4763f89eb07afc1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d2249215e948493d5aa7ad1aaaa9d9de73207c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d2249215e948493d5aa7ad1aaaa9d9de73207c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d2249215e948493d5aa7ad1aaaa9d9de73207c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d2249215e948493d5aa7ad1aaaa9d9de73207c6/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c7c30edd4a6049a0debe0ed17ffdb9c196d4c677", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7c30edd4a6049a0debe0ed17ffdb9c196d4c677", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7c30edd4a6049a0debe0ed17ffdb9c196d4c677"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "a620923729bcfe992152f625f64682415bf36741", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d2249215e948493d5aa7ad1aaaa9d9de73207c6/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d2249215e948493d5aa7ad1aaaa9d9de73207c6/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=3d2249215e948493d5aa7ad1aaaa9d9de73207c6", "patch": "@@ -1,3 +1,8 @@\n+2018-02-08  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* testsuite/libgomp.hsa.c/pr82416.c: Make the function with target\n+\tclonable.\n+\n 2018-02-08  Martin Jambor  <mjambor@suse.cz>\n \n \t* testsuite/libgomp.hsa.c/staticvar.c: New test."}, {"sha": "40378ab12a5d762d4c022328b1461dafa2fd75a3", "filename": "libgomp/testsuite/libgomp.hsa.c/pr82416.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d2249215e948493d5aa7ad1aaaa9d9de73207c6/libgomp%2Ftestsuite%2Flibgomp.hsa.c%2Fpr82416.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d2249215e948493d5aa7ad1aaaa9d9de73207c6/libgomp%2Ftestsuite%2Flibgomp.hsa.c%2Fpr82416.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.hsa.c%2Fpr82416.c?ref=3d2249215e948493d5aa7ad1aaaa9d9de73207c6", "patch": "@@ -7,8 +7,8 @@ toup (char X)\n     return X;\n }\n \n-char __attribute__ ((noipa))\n-target_toup (char X)\n+char\n+target_toup_1 (char X)\n {\n   char r;\n #pragma omp target map(to:X) map(from:r)\n@@ -21,6 +21,12 @@ target_toup (char X)\n   return r;\n }\n \n+char __attribute__ ((noipa))\n+target_toup (char X)\n+{\n+  return target_toup_1 (X);\n+}\n+\n int main (int argc, char **argv)\n {\n   char a = 'a';"}]}