{"sha": "5640374631e9e9ee315e98aeb20b18818285e8ec", "node_id": "C_kwDOANBUbNoAKDU2NDAzNzQ2MzFlOWU5ZWUzMTVlOThhZWIyMGIxODgxODI4NWU4ZWM", "commit": {"author": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-02-13T11:45:44Z"}, "committer": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-03-30T11:52:29Z"}, "message": "libproc_macro: Add TokenStream type interface\n\nAdd the TokenStream rust type interface to libproc_macro. Note that the\ntoken_stream module containing the iterator operations implemented on\nthe TokenStream type is missing.\n\nChangeLog:\n\n\t* librust/proc_macro/rust/lib.rs: Add TokenStream type.\n\nSigned-off-by: Pierre-Emmanuel Patry <pierre-emmanuel.patry@embecosm.com>", "tree": {"sha": "ea8ae6941f11689b473e79c937a1ec628062cfdb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea8ae6941f11689b473e79c937a1ec628062cfdb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5640374631e9e9ee315e98aeb20b18818285e8ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5640374631e9e9ee315e98aeb20b18818285e8ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5640374631e9e9ee315e98aeb20b18818285e8ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5640374631e9e9ee315e98aeb20b18818285e8ec/comments", "author": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "committer": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4b7fca1ec1d2a1b9f416cbefc7a2dcd6f3935f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4b7fca1ec1d2a1b9f416cbefc7a2dcd6f3935f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4b7fca1ec1d2a1b9f416cbefc7a2dcd6f3935f3"}], "stats": {"total": 46, "additions": 45, "deletions": 1}, "files": [{"sha": "f270b79c9dc4cf797ad2e088044a58baf0255c0f", "filename": "librust/proc_macro/rust/lib.rs", "status": "modified", "additions": 45, "deletions": 1, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5640374631e9e9ee315e98aeb20b18818285e8ec/librust%2Fproc_macro%2Frust%2Flib.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5640374631e9e9ee315e98aeb20b18818285e8ec/librust%2Fproc_macro%2Frust%2Flib.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/librust%2Fproc_macro%2Frust%2Flib.rs?ref=5640374631e9e9ee315e98aeb20b18818285e8ec", "patch": "@@ -3,7 +3,7 @@ pub use literal::Literal;\n pub use punct::{Punct, Spacing};\n pub use span::Span;\n use std::error;\n-use std::fmt;\n+use std::{fmt, str::FromStr};\n \n mod ident;\n mod literal;\n@@ -34,3 +34,47 @@ impl fmt::Display for LexError {\n }\n \n impl error::Error for LexError {}\n+\n+/// An abstract sequence of token trees.\n+///\n+/// This type provides interfaces for iterating over those token trees. This\n+/// is both the input and the output of `#[proc_macro]`,\n+/// `#[proc_macro_attribute]` and `#[proc_macro_derive]` definitions.\n+#[derive(Clone)]\n+pub struct TokenStream {\n+    // Internal implementation details\n+}\n+\n+impl TokenStream {\n+    // TODO: Add experimental API functions for this type\n+\n+    /// Creates an empty `TokenStream` containing no token trees.\n+    pub fn new() -> Self {\n+        todo!(\"Implement this function\")\n+    }\n+\n+    /// Checks if this `TokenStream` is empty.\n+    pub fn is_empty(&self) -> bool {\n+        todo!(\"Implement this function\")\n+    }\n+}\n+\n+impl fmt::Display for TokenStream {\n+    fn fmt(&self, _f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        todo!(\"Implement this function\")\n+    }\n+}\n+\n+impl fmt::Debug for TokenStream {\n+    fn fmt(&self, _f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        todo!(\"Implement this function\")\n+    }\n+}\n+\n+impl FromStr for TokenStream {\n+    type Err = LexError;\n+\n+    fn from_str(_src: &str) -> Result<Self, LexError> {\n+        todo!(\"Implement this function\")\n+    }\n+}"}]}