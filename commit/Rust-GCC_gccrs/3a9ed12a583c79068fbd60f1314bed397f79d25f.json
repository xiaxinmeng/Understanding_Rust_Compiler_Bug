{"sha": "3a9ed12a583c79068fbd60f1314bed397f79d25f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E5ZWQxMmE1ODNjNzkwNjhmYmQ2MGYxMzE0YmVkMzk3Zjc5ZDI1Zg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-12-14T01:26:47Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-12-14T01:26:47Z"}, "message": "This time really commit PR middle-end/45388\n\nThis time really commit\n\tPR middle-end/45388\n\t* decl2.c (start_objects): Do not generate collect2 recognicable name\n\tfor static ctor.\n\t* ipa.c (cgraph_build_static_cdtor_1): Break out from ... ; add FINAL parameter.\n\t(cgraph_build_static_cdtor): ... here.\n\t(build_cdtor): Use cgraph_build_static_cdtor_1.\n\nFrom-SVN: r167781", "tree": {"sha": "e215be0c22fe0dc069251dbbbf8813c08b9d5588", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e215be0c22fe0dc069251dbbbf8813c08b9d5588"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a9ed12a583c79068fbd60f1314bed397f79d25f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a9ed12a583c79068fbd60f1314bed397f79d25f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a9ed12a583c79068fbd60f1314bed397f79d25f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a9ed12a583c79068fbd60f1314bed397f79d25f/comments", "author": null, "committer": null, "parents": [{"sha": "24b005606a8febb541750b14176cf891c793c6e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24b005606a8febb541750b14176cf891c793c6e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24b005606a8febb541750b14176cf891c793c6e6"}], "stats": {"total": 50, "additions": 34, "deletions": 16}, "files": [{"sha": "9b20492ffa3e2be6673d22bbb2282f064cbd54bb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9ed12a583c79068fbd60f1314bed397f79d25f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9ed12a583c79068fbd60f1314bed397f79d25f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3a9ed12a583c79068fbd60f1314bed397f79d25f", "patch": "@@ -1,3 +1,10 @@\n+2010-12-13  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR middle-end/45388\n+\t* ipa.c (cgraph_build_static_cdtor_1): Break out from ... ; add FINAL parameter.\n+\t(cgraph_build_static_cdtor): ... here.\n+\t(build_cdtor): Use cgraph_build_static_cdtor_1.\n+\n 2010-12-13  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config/m32c/m32c.h (ENDFILE_SPEC, LINK_SPEC, SIZE_TYPE,\n@@ -52,13 +59,6 @@\n \t(emit_note_insn_var_location): Remove ENABLE_RTL_CHECKING verification.\n \t(vt_emit_notes): Don't initialize and destroy emitted_notes.\n \n-2010-12-13  Jan Hubicka  <jh@suse.cz>\n-\n-\tPR middle-end/45388\n-\t* ipa.c (cgraph_build_static_cdtor_1): Break out from ... ; add FINAL parameter.\n-\t(cgraph_build_static_cdtor): ... here.\n-\t(build_cdtor): Use cgraph_build_static_cdtor_1.\n-\n 2010-12-13  Nathan Froyd  <froydnj@codesourcery.com>\n \n \tPR target/46040"}, {"sha": "0c64a5d4f0c2eb59005532c166cacf5ab04c24c4", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9ed12a583c79068fbd60f1314bed397f79d25f/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9ed12a583c79068fbd60f1314bed397f79d25f/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=3a9ed12a583c79068fbd60f1314bed397f79d25f", "patch": "@@ -2691,7 +2691,7 @@ start_objects (int method_type, int initp)\n {\n   tree body;\n   tree fndecl;\n-  char type[10];\n+  char type[14];\n \n   /* Make ctor or dtor function.  METHOD_TYPE may be 'I' or 'D'.  */\n \n@@ -2705,10 +2705,10 @@ start_objects (int method_type, int initp)\n       joiner = '_';\n #endif\n \n-      sprintf (type, \"%c%c%.5u\", method_type, joiner, initp);\n+      sprintf (type, \"sub_%c%c%.5u\", method_type, joiner, initp);\n     }\n   else\n-    sprintf (type, \"%c\", method_type);\n+    sprintf (type, \"sub_%c\", method_type);\n \n   fndecl = build_lang_decl (FUNCTION_DECL,\n \t\t\t    get_file_function_name (type),"}, {"sha": "bc73afa6cd459bffb178c018f91c08860aff720c", "filename": "gcc/ipa.c", "status": "modified", "additions": 24, "deletions": 6, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9ed12a583c79068fbd60f1314bed397f79d25f/gcc%2Fipa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9ed12a583c79068fbd60f1314bed397f79d25f/gcc%2Fipa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa.c?ref=3a9ed12a583c79068fbd60f1314bed397f79d25f", "patch": "@@ -1496,10 +1496,13 @@ struct ipa_opt_pass_d pass_ipa_profile =\n /* Generate and emit a static constructor or destructor.  WHICH must\n    be one of 'I' (for a constructor) or 'D' (for a destructor).  BODY\n    is a STATEMENT_LIST containing GENERIC statements.  PRIORITY is the\n-   initialization priority for this constructor or destructor.  */\n+   initialization priority for this constructor or destructor. \n \n-void\n-cgraph_build_static_cdtor (char which, tree body, int priority)\n+   FINAL specify whether the externally visible name for collect2 should\n+   be produced. */\n+\n+static void\n+cgraph_build_static_cdtor_1 (char which, tree body, int priority, bool final)\n {\n   static int counter = 0;\n   char which_buf[16];\n@@ -1508,7 +1511,12 @@ cgraph_build_static_cdtor (char which, tree body, int priority)\n   /* The priority is encoded in the constructor or destructor name.\n      collect2 will sort the names and arrange that they are called at\n      program startup.  */\n-  sprintf (which_buf, \"%c_%.5d_%d\", which, priority, counter++);\n+  if (final)\n+    sprintf (which_buf, \"%c_%.5d_%d\", which, priority, counter++);\n+  else\n+  /* Proudce sane name but one not recognizable by collect2, just for the\n+     case we fail to inline the function.  */\n+    sprintf (which_buf, \"sub_%c_%.5d_%d\", which, priority, counter++);\n   name = get_file_function_name (which_buf);\n \n   decl = build_decl (input_location, FUNCTION_DECL, name,\n@@ -1528,7 +1536,7 @@ cgraph_build_static_cdtor (char which, tree body, int priority)\n   DECL_ARTIFICIAL (decl) = 1;\n   DECL_NO_INSTRUMENT_FUNCTION_ENTRY_EXIT (decl) = 1;\n   DECL_SAVED_TREE (decl) = body;\n-  if (!targetm.have_ctors_dtors)\n+  if (!targetm.have_ctors_dtors && final)\n     {\n       TREE_PUBLIC (decl) = 1;\n       DECL_PRESERVE_P (decl) = 1;\n@@ -1563,6 +1571,16 @@ cgraph_build_static_cdtor (char which, tree body, int priority)\n   current_function_decl = NULL;\n }\n \n+/* Generate and emit a static constructor or destructor.  WHICH must\n+   be one of 'I' (for a constructor) or 'D' (for a destructor).  BODY\n+   is a STATEMENT_LIST containing GENERIC statements.  PRIORITY is the\n+   initialization priority for this constructor or destructor.  */\n+\n+void\n+cgraph_build_static_cdtor (char which, tree body, int priority)\n+{\n+  cgraph_build_static_cdtor_1 (which, body, priority, false);\n+}\n \n /* A vector of FUNCTION_DECLs declared as static constructors.  */\n static VEC(tree, heap) *static_ctors;\n@@ -1648,7 +1666,7 @@ build_cdtor (bool ctor_p, VEC (tree, heap) *cdtors)\n       gcc_assert (body != NULL_TREE);\n       /* Generate a function to call all the function of like\n \t priority.  */\n-      cgraph_build_static_cdtor (ctor_p ? 'I' : 'D', body, priority);\n+      cgraph_build_static_cdtor_1 (ctor_p ? 'I' : 'D', body, priority, true);\n     }\n }\n "}]}