{"sha": "51f53e010519ccfd1c857f37c52d34cc6e31a3d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTFmNTNlMDEwNTE5Y2NmZDFjODU3ZjM3YzUyZDM0Y2M2ZTMxYTNkMA==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-09-14T07:18:02Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-09-14T07:18:02Z"}, "message": "Fix typo in comment.\n\nFrom-SVN: r29392", "tree": {"sha": "6c4262119de73bfb809ba3bc1580b6a7e4008913", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c4262119de73bfb809ba3bc1580b6a7e4008913"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51f53e010519ccfd1c857f37c52d34cc6e31a3d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51f53e010519ccfd1c857f37c52d34cc6e31a3d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51f53e010519ccfd1c857f37c52d34cc6e31a3d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51f53e010519ccfd1c857f37c52d34cc6e31a3d0/comments", "author": null, "committer": null, "parents": [{"sha": "66519c706ba1219b082e946f47e8059631ae77c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66519c706ba1219b082e946f47e8059631ae77c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66519c706ba1219b082e946f47e8059631ae77c6"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "b25734ddaee1851ea8fd9ce2475fdb5218dced9c", "filename": "gcc/loop.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51f53e010519ccfd1c857f37c52d34cc6e31a3d0/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51f53e010519ccfd1c857f37c52d34cc6e31a3d0/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=51f53e010519ccfd1c857f37c52d34cc6e31a3d0", "patch": "@@ -4053,7 +4053,7 @@ strength_reduce (scan_start, end, loop_top, insn_count,\n \t      /* The register from BL2 must be set before the register from\n \t\t BL is set, or we must be able to move the latter set after\n \t\t the former set.  Currently there can't be any labels\n-\t         in-between when biv_toal_increment returns nonzero both times\n+\t         in-between when biv_total_increment returns nonzero both times\n \t\t but we test it here in case some day some real cfg analysis\n \t\t gets used to set always_computable.  */\n \t      && ((loop_insn_first_p (bl2->biv->insn, bl->biv->insn)"}]}