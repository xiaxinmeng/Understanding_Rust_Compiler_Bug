{"sha": "c65ecebc826db604a52f546fe956da2926ee3486", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzY1ZWNlYmM4MjZkYjYwNGE1MmY1NDZmZTk1NmRhMjkyNmVlMzQ4Ng==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2004-01-12T09:44:16Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2004-01-12T09:44:16Z"}, "message": "Partial fox for PR opt/10776 II\n\n\tPartial fox for PR opt/10776 II\n\t* cselib.c: Include params.h\n\t(cselib_invalidate_mem):  Limit amount of nonconflicting memory\n\tlocations.\n\t* params.def (PARAM_MAX_CSELIB_MEMORY_LOCATIONS): New.\n\t* Makefile.in (cselib.o): Depend on params.h\n\nFrom-SVN: r75710", "tree": {"sha": "d1744bed287bf158f3ba33cbaf31e8ac5720aefb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1744bed287bf158f3ba33cbaf31e8ac5720aefb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c65ecebc826db604a52f546fe956da2926ee3486", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c65ecebc826db604a52f546fe956da2926ee3486", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c65ecebc826db604a52f546fe956da2926ee3486", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c65ecebc826db604a52f546fe956da2926ee3486/comments", "author": null, "committer": null, "parents": [{"sha": "c0657872082996e355a09edb07d17ec000dfaac4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0657872082996e355a09edb07d17ec000dfaac4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0657872082996e355a09edb07d17ec000dfaac4"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "d7a797173d261a3a2cf9b125191414bc87bcb2d5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c65ecebc826db604a52f546fe956da2926ee3486/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c65ecebc826db604a52f546fe956da2926ee3486/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c65ecebc826db604a52f546fe956da2926ee3486", "patch": "@@ -1,3 +1,12 @@\n+2004-01-12  Jan Hubicka  <jh@suse.cz>\n+\n+\tPartial fox for PR opt/10776 II\n+\t* cselib.c: Include params.h\n+\t(cselib_invalidate_mem):  Limit amount of nonconflicting memory\n+\tlocations.\n+\t* params.def (PARAM_MAX_CSELIB_MEMORY_LOCATIONS): New.\n+\t* Makefile.in (cselib.o): Depend on params.h\n+\n 2004-01-12  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* combine.c (combine_simplify_rtx): Don't pass VOIDmode to"}, {"sha": "0a5c3c8227a5eb3625262bc7c2e1e5dd0ae84dc9", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c65ecebc826db604a52f546fe956da2926ee3486/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c65ecebc826db604a52f546fe956da2926ee3486/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=c65ecebc826db604a52f546fe956da2926ee3486", "patch": "@@ -1643,7 +1643,7 @@ coverage.o : coverage.c gcov-io.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    gt-coverage.h $(HASHTAB_H)\n cselib.o : cselib.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(REGS_H) \\\n    hard-reg-set.h flags.h real.h insn-config.h $(RECOG_H) $(EXPR_H) toplev.h \\\n-   output.h function.h cselib.h $(GGC_H) $(TM_P_H) gt-cselib.h\n+   output.h function.h cselib.h $(GGC_H) $(TM_P_H) gt-cselib.h $(PARAMS_H)\n cse.o : cse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(REGS_H) \\\n    hard-reg-set.h flags.h real.h insn-config.h $(RECOG_H) $(EXPR_H) toplev.h \\\n    output.h function.h $(BASIC_BLOCK_H) $(GGC_H) $(TM_P_H) $(TIMEVAR_H) \\"}, {"sha": "99c4bec1c412e3022f57339cdad04f9a17661efa", "filename": "gcc/cselib.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c65ecebc826db604a52f546fe956da2926ee3486/gcc%2Fcselib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c65ecebc826db604a52f546fe956da2926ee3486/gcc%2Fcselib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcselib.c?ref=c65ecebc826db604a52f546fe956da2926ee3486", "patch": "@@ -39,6 +39,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"ggc.h\"\n #include \"hashtab.h\"\n #include \"cselib.h\"\n+#include \"params.h\"\n \n static int entry_and_rtx_equal_p (const void *, const void *);\n static hashval_t get_value_hash (const void *);\n@@ -1114,6 +1115,7 @@ static void\n cselib_invalidate_mem (rtx mem_rtx)\n {\n   cselib_val **vp, *v, *next;\n+  int num_mems = 0;\n \n   vp = &first_containing_mem;\n   for (v = *vp; v != &dummy_val; v = next)\n@@ -1135,9 +1137,11 @@ cselib_invalidate_mem (rtx mem_rtx)\n \t      p = &(*p)->next;\n \t      continue;\n \t    }\n-\t  if (! cselib_mem_conflict_p (mem_rtx, x))\n+\t  if (num_mems < PARAM_VALUE (PARAM_MAX_CSELIB_MEMORY_LOCATIONS)\n+\t      && ! cselib_mem_conflict_p (mem_rtx, x))\n \t    {\n \t      has_mem = true;\n+\t      num_mems++;\n \t      p = &(*p)->next;\n \t      continue;\n \t    }"}, {"sha": "0b2b3664dd045d5e963713b7997c919dedafabe5", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c65ecebc826db604a52f546fe956da2926ee3486/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c65ecebc826db604a52f546fe956da2926ee3486/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=c65ecebc826db604a52f546fe956da2926ee3486", "patch": "@@ -4859,6 +4859,11 @@ register.  Increasing values mean more aggressive optimization, making the\n compile time increase with probably slightly better performance.  The default\n value is 100.\n \n+@item max-cselib-memory-location\n+The maximum number of memory locations cselib should take into acount.\n+Increasing values mean more aggressive optimization, making the compile time\n+increase with probably slightly better performance.  The default value is 500.\n+\n @item reorder-blocks-duplicate\n @itemx reorder-blocks-duplicate-feedback\n "}, {"sha": "3f0d15b185408ce9e26435f50307006ee97c1081", "filename": "gcc/params.def", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c65ecebc826db604a52f546fe956da2926ee3486/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c65ecebc826db604a52f546fe956da2926ee3486/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=c65ecebc826db604a52f546fe956da2926ee3486", "patch": "@@ -238,6 +238,11 @@ DEFPARAM(PARAM_MAX_CSE_PATH_LENGTH,\n \t \"The maximum length of path considered in cse\",\n \t 10)\n \n+DEFPARAM(PARAM_MAX_CSELIB_MEMORY_LOCATIONS,\n+\t \"max-cselib-memory-locations\",\n+\t \"The maximum memory locations recorded by cselib\",\n+\t 500)\n+\n #ifdef ENABLE_GC_ALWAYS_COLLECT\n # define GGC_MIN_EXPAND_DEFAULT 0\n # define GGC_MIN_HEAPSIZE_DEFAULT 0"}]}