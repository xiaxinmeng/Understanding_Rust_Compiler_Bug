{"sha": "0cc575e4d8b68b743e07da02a74733f9b5cb585a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGNjNTc1ZTRkOGI2OGI3NDNlMDdkYTAyYTc0NzMzZjliNWNiNTg1YQ==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2020-02-10T17:27:00Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2020-02-10T17:27:00Z"}, "message": "PR c/93640 - The write_only and read_write attributes can be mistyped due to invalid strncmp size argument\n\ngcc/c-family/ChangeLog:\n\n\tPR c/93640\n\t* c-attribs.c (handle_access_attribute): Correct off-by-one mistakes.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c/93640\n\t* gcc.dg/attr-access.c: New test.", "tree": {"sha": "6e8707e3f9ef12fea691aaa40b99896e59d43180", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e8707e3f9ef12fea691aaa40b99896e59d43180"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0cc575e4d8b68b743e07da02a74733f9b5cb585a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cc575e4d8b68b743e07da02a74733f9b5cb585a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cc575e4d8b68b743e07da02a74733f9b5cb585a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cc575e4d8b68b743e07da02a74733f9b5cb585a/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d50ecb8388162b8485619c4817f3f24fc0da3357", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d50ecb8388162b8485619c4817f3f24fc0da3357", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d50ecb8388162b8485619c4817f3f24fc0da3357"}], "stats": {"total": 35, "additions": 33, "deletions": 2}, "files": [{"sha": "cabf850a9213d9288ee468dcf517c799fcd254b9", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cc575e4d8b68b743e07da02a74733f9b5cb585a/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cc575e4d8b68b743e07da02a74733f9b5cb585a/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=0cc575e4d8b68b743e07da02a74733f9b5cb585a", "patch": "@@ -1,3 +1,8 @@\n+2020-02-10  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c/93640\n+\t* c-attribs.c (handle_access_attribute): Correct off-by-one mistakes.\n+\n 2020-02-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR other/93641"}, {"sha": "2ea5fd5ff46802c4cb3de9faf926575ab62bd233", "filename": "gcc/c-family/c-attribs.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cc575e4d8b68b743e07da02a74733f9b5cb585a/gcc%2Fc-family%2Fc-attribs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cc575e4d8b68b743e07da02a74733f9b5cb585a/gcc%2Fc-family%2Fc-attribs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-attribs.c?ref=0cc575e4d8b68b743e07da02a74733f9b5cb585a", "patch": "@@ -3999,8 +3999,8 @@ handle_access_attribute (tree *node, tree name, tree args,\n     }\n \n   const bool read_only = strncmp (ps, \"read_only\", 9) == 0;\n-  const bool write_only = strncmp (ps, \"write_only\", 9) == 0;\n-  if (!read_only && !write_only && strncmp (ps, \"read_write\", 9))\n+  const bool write_only = strncmp (ps, \"write_only\", 10) == 0;\n+  if (!read_only && !write_only && strncmp (ps, \"read_write\", 10))\n     {\n       error (\"attribute %qE invalid mode %qs; expected one of \"\n \t     \"%qs, %qs, or %qs\", name, access_str,"}, {"sha": "c6b1c72575f40be94bc69e1f6e8cc2a78dc5632d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cc575e4d8b68b743e07da02a74733f9b5cb585a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cc575e4d8b68b743e07da02a74733f9b5cb585a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0cc575e4d8b68b743e07da02a74733f9b5cb585a", "patch": "@@ -1,3 +1,8 @@\n+2020-02-10  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c/93640\n+\t* gcc.dg/attr-access.c: New test.\n+\n 2020-02-10  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* gcc.target/cris/cris.exp (check_effective_target_cc0): New."}, {"sha": "f859c461b966cd3b4b85471bcf76ec9651cb7241", "filename": "gcc/testsuite/gcc.dg/attr-access.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cc575e4d8b68b743e07da02a74733f9b5cb585a/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-access.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cc575e4d8b68b743e07da02a74733f9b5cb585a/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-access.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-access.c?ref=0cc575e4d8b68b743e07da02a74733f9b5cb585a", "patch": "@@ -0,0 +1,21 @@\n+/* PR c/93640 - The write_only and read_write attributes can be mistyped\n+   due to invalid strncmp size argument\n+   { dg-do compile }\n+   { dg-options \"-Wall\" } */\n+\n+__attribute__ ((access (read_onl))) int f0 (char*);         // { dg-error \"attribute 'access' invalid mode 'read_onl'\" }\n+__attribute__ ((access (write_onl))) int f1 (char*);        // { dg-error \"attribute 'access' invalid mode 'write_onl'\" }\n+__attribute__ ((access (read_writ))) int f2 (char*);        // { dg-error \"attribute 'access' invalid mode 'read_writ'\" }\n+\n+__attribute__ ((access (read_onlX))) int f3 (char*);        // { dg-error \"attribute 'access' invalid mode 'read_onlX'\" }\n+__attribute__ ((access (write_onlX))) int f4 (char*);       // { dg-error \"attribute 'access' invalid mode 'write_onlX'\" }\n+__attribute__ ((access (read_writX))) int f5 (char*);       // { dg-error \"attribute 'access' invalid mode 'read_writX'\" }\n+\n+\n+__attribute__ ((access (read_onl, 1))) int f7 (char*);      // { dg-error \"attribute 'access' invalid mode 'read_onl'\" }\n+__attribute__ ((access (write_onl, 1))) int f8 (char*);     // { dg-error \"attribute 'access' invalid mode 'write_onl'\" }\n+__attribute__ ((access (read_writ, 1))) int f9 (char*);     // { dg-error \"attribute 'access' invalid mode 'read_writ'\" }\n+\n+__attribute__ ((access (read_onlX, 1))) int f10 (char*);    // { dg-error \"attribute 'access' invalid mode 'read_onlX'\" }\n+__attribute__ ((access (write_onlX, 1))) int f11 (char*);   // { dg-error \"attribute 'access' invalid mode 'write_onlX'\" }\n+__attribute__ ((access (read_writX, 1))) int f12 (char*);   // { dg-error \"attribute 'access' invalid mode 'read_writX'\" }"}]}