{"sha": "eaf9f3b2e936e437092978ee61606cb53f87e5bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFmOWYzYjJlOTM2ZTQzNzA5Mjk3OGVlNjE2MDZjYjUzZjg3ZTViYw==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2003-06-17T21:53:49Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2003-06-17T21:53:49Z"}, "message": "Makefile.tpl: Remove BUILD_CC stuff.\n\n(toplev)\n\t* Makefile.tpl: Remove BUILD_CC stuff.\n\t* Makefile.in: Regenerate.\n(gcc)\n\t* configure.in: Replace BUILD_CC references with CC_FOR_BUILD.\n\t* configure: Regenerate.\n\t* Makefile.in: Replace BUILD_CC references with CC_FOR_BUILD.\n(gcc/f)\n\t* Make-lang.in: Replace BUILD_CC references with CC_FOR_BUILD.\n\nFrom-SVN: r68115", "tree": {"sha": "a7e315525ca92c166f545cf160a819a77d31ecdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7e315525ca92c166f545cf160a819a77d31ecdd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eaf9f3b2e936e437092978ee61606cb53f87e5bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaf9f3b2e936e437092978ee61606cb53f87e5bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eaf9f3b2e936e437092978ee61606cb53f87e5bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaf9f3b2e936e437092978ee61606cb53f87e5bc/comments", "author": null, "committer": null, "parents": [{"sha": "688d8b84d3724f8e7f75d125bc94dba5004b68d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/688d8b84d3724f8e7f75d125bc94dba5004b68d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/688d8b84d3724f8e7f75d125bc94dba5004b68d2"}], "stats": {"total": 223, "additions": 116, "deletions": 107}, "files": [{"sha": "98fa6434c35376e2a6380f905f9f4313c76f4605", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaf9f3b2e936e437092978ee61606cb53f87e5bc/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaf9f3b2e936e437092978ee61606cb53f87e5bc/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=eaf9f3b2e936e437092978ee61606cb53f87e5bc", "patch": "@@ -1,3 +1,8 @@\n+2003-06-18  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* Makefile.tpl: Remove BUILD_CC stuff.\n+\t* Makefile.in: Regenerate.\n+\n 2003-06-17  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* MAINTAINERS (Write After Approval): Remove Andrew Haley."}, {"sha": "00858635a03d3d72ba9d23e8ef7604e83da84e60", "filename": "Makefile.in", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaf9f3b2e936e437092978ee61606cb53f87e5bc/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaf9f3b2e936e437092978ee61606cb53f87e5bc/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=eaf9f3b2e936e437092978ee61606cb53f87e5bc", "patch": "@@ -150,7 +150,6 @@ CXX_FOR_BUILD = $(CXX)\n \n # Special variables passed down in EXTRA_GCC_FLAGS.  They are defined\n # here so that they can be overridden by Makefile fragments.\n-BUILD_CC = $(CC_FOR_BUILD)\n BUILD_PREFIX = @BUILD_PREFIX@\n BUILD_PREFIX_1 = @BUILD_PREFIX_1@\n \n@@ -520,7 +519,6 @@ EXTRA_GCC_FLAGS = \\\n \t'CC=$(CC)' \\\n \t'CXX=$(CXX)' \\\n \t'DLLTOOL=$$(DLLTOOL_FOR_TARGET)' \\\n-\t'BUILD_CC=$(CC_FOR_BUILD)' \\\n \t'BUILD_PREFIX=$(BUILD_PREFIX)' \\\n \t'BUILD_PREFIX_1=$(BUILD_PREFIX_1)' \\\n \t'NM=$(NM)' \\"}, {"sha": "f3a875ba659db72ff23d6315c460991747a457a1", "filename": "Makefile.tpl", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaf9f3b2e936e437092978ee61606cb53f87e5bc/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaf9f3b2e936e437092978ee61606cb53f87e5bc/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=eaf9f3b2e936e437092978ee61606cb53f87e5bc", "patch": "@@ -153,7 +153,6 @@ CXX_FOR_BUILD = $(CXX)\n \n # Special variables passed down in EXTRA_GCC_FLAGS.  They are defined\n # here so that they can be overridden by Makefile fragments.\n-BUILD_CC = $(CC_FOR_BUILD)\n BUILD_PREFIX = @BUILD_PREFIX@\n BUILD_PREFIX_1 = @BUILD_PREFIX_1@\n \n@@ -523,7 +522,6 @@ EXTRA_GCC_FLAGS = \\\n \t'CC=$(CC)' \\\n \t'CXX=$(CXX)' \\\n \t'DLLTOOL=$$(DLLTOOL_FOR_TARGET)' \\\n-\t'BUILD_CC=$(CC_FOR_BUILD)' \\\n \t'BUILD_PREFIX=$(BUILD_PREFIX)' \\\n \t'BUILD_PREFIX_1=$(BUILD_PREFIX_1)' \\\n \t'NM=$(NM)' \\"}, {"sha": "ad5e7bcf9de522511cae20079c1dedf2a1e9cb9c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaf9f3b2e936e437092978ee61606cb53f87e5bc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaf9f3b2e936e437092978ee61606cb53f87e5bc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eaf9f3b2e936e437092978ee61606cb53f87e5bc", "patch": "@@ -1,3 +1,9 @@\n+2003-06-16  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* configure.in: Replace BUILD_CC references with CC_FOR_BUILD.\n+\t* configure: Regenerate.\n+\t* Makefile.in: Replace BUILD_CC references with CC_FOR_BUILD.\n+\n 2003-06-17  Ranjit Mathew  <rmathew@hotmail.com>\n \n \t* install.texi (Testing): Add information on how to run Java"}, {"sha": "688ad3166927c73f64977f6baca3f5fb1c688fb9", "filename": "gcc/Makefile.in", "status": "modified", "additions": 64, "deletions": 64, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaf9f3b2e936e437092978ee61606cb53f87e5bc/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaf9f3b2e936e437092978ee61606cb53f87e5bc/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=eaf9f3b2e936e437092978ee61606cb53f87e5bc", "patch": "@@ -557,7 +557,7 @@ BUILD_PREFIX = @BUILD_PREFIX@\n # out of the way of the other rules for compiling the same source files.\n BUILD_PREFIX_1 = @BUILD_PREFIX_1@\n # Native compiler for the build machine and its switches.\n-BUILD_CC = @BUILD_CC@\n+CC_FOR_BUILD = @CC_FOR_BUILD@\n BUILD_CFLAGS= @BUILD_CFLAGS@ -DGENERATOR_FILE\n \n # Native linker and preprocessor flags.  For x-fragment overrides.\n@@ -1384,12 +1384,12 @@ s-check : gencheck$(build_exeext) $(srcdir)/move-if-change\n \t$(STAMP) s-check\n \n gencheck$(build_exeext) : gencheck.o $(BUILD_LIBDEPS)\n-\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n \t gencheck.o $(BUILD_LIBS)\n \n gencheck.o : gencheck.c gencheck.h tree.def $(BCONFIG_H) $(SYSTEM_H) \\\n \tcoretypes.h $(GTM_H) $(lang_tree_files)\n-\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) \\\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) \\\n \t  $(srcdir)/gencheck.c $(OUTPUT_OPTION)\n \n gencheck.h : s-gencheck ; @true\n@@ -1850,11 +1850,11 @@ insn-conditions.o : insn-conditions.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n   $(GTM_H) $(RTL_H) $(TM_P_H) $(REGS_H) function.h $(RECOG_H) real.h output.h \\\n   flags.h hard-reg-set.h resource.h toplev.h reload.h gensupport.h \\\n   insn-constants.h\n-\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) insn-conditions.c\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) insn-conditions.c\n \n dummy-conditions.o : dummy-conditions.c $(BCONFIG_H) $(SYSTEM_H) \\\n   coretypes.h $(GTM_H) gensupport.h\n-\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) \\\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) \\\n \t    $(srcdir)/dummy-conditions.c $(OUTPUT_OPTION)\n \n insn-flags.h: s-flags ; @true\n@@ -2050,7 +2050,7 @@ s-gtype: gengtype$(build_exeext) $(GTFILES)\n \n #\f\n # Compile the programs that generate insn-* from the machine description.\n-# They are compiled with $(BUILD_CC), and associated libraries,\n+# They are compiled with $(CC_FOR_BUILD), and associated libraries,\n # since they need to run on this machine\n # even if GCC is being compiled to run on some other machine.\n \n@@ -2061,171 +2061,171 @@ s-gtype: gengtype$(build_exeext) $(GTFILES)\n \n read-rtl.o: read-rtl.c $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) $(RTL_H) \\\n   $(OBSTACK_H) $(HASHTAB_H)\n-\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/read-rtl.c $(OUTPUT_OPTION)\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/read-rtl.c $(OUTPUT_OPTION)\n \n gensupport.o: gensupport.c $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) $(RTL_H) \\\n   $(OBSTACK_H) errors.h $(HASHTAB_H) gensupport.h\n-\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/gensupport.c $(OUTPUT_OPTION)\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/gensupport.c $(OUTPUT_OPTION)\n \n genconfig$(build_exeext) : genconfig.o $(BUILD_RTL) $(BUILD_SUPPORT) \\\n   $(BUILD_PRINT) $(BUILD_ERRORS) $(BUILD_LIBDEPS)\n-\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n \t  genconfig.o $(BUILD_RTL) $(BUILD_SUPPORT) $(BUILD_PRINT) \\\n \t    $(BUILD_ERRORS) $(BUILD_LIBS)\n \n genconfig.o : genconfig.c $(RTL_H) $(BCONFIG_H) \\\n   $(SYSTEM_H) coretypes.h $(GTM_H) errors.h gensupport.h\n-\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genconfig.c $(OUTPUT_OPTION)\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genconfig.c $(OUTPUT_OPTION)\n \n genflags$(build_exeext) : genflags.o $(BUILD_RTL) $(BUILD_SUPPORT) \\\n   $(BUILD_PRINT) $(BUILD_ERRORS) $(BUILD_LIBDEPS)\n-\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n \t genflags.o $(BUILD_RTL) $(BUILD_SUPPORT) $(BUILD_PRINT) \\\n \t    $(BUILD_ERRORS) $(BUILD_LIBS)\n \n genflags.o : genflags.c $(RTL_H) $(OBSTACK_H) $(BCONFIG_H) \\\n   $(SYSTEM_H) coretypes.h $(GTM_H) errors.h gensupport.h\n-\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genflags.c $(OUTPUT_OPTION)\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genflags.c $(OUTPUT_OPTION)\n \n gencodes$(build_exeext) : gencodes.o $(BUILD_RTL) $(BUILD_SUPPORT) \\\n   $(BUILD_PRINT) $(BUILD_ERRORS) $(BUILD_LIBDEPS)\n-\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n \t gencodes.o $(BUILD_RTL) $(BUILD_SUPPORT) $(BUILD_PRINT) \\\n \t    $(BUILD_ERRORS) $(BUILD_LIBS)\n \n gencodes.o : gencodes.c $(RTL_H) $(BCONFIG_H) \\\n   $(SYSTEM_H) coretypes.h $(GTM_H) errors.h gensupport.h\n-\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/gencodes.c $(OUTPUT_OPTION)\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/gencodes.c $(OUTPUT_OPTION)\n \n genconstants$(build_exeext) : genconstants.o $(BUILD_RTL) $(BUILD_EARLY_SUPPORT) \\\n   $(BUILD_ERRORS) $(BUILD_LIBDEPS)\n-\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n \t genconstants.o $(BUILD_EARLY_SUPPORT) $(BUILD_RTL) \\\n \t    $(BUILD_ERRORS) $(BUILD_LIBS)\n \n genconstants.o : genconstants.c $(RTL_H) $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) \\\n   errors.h\n-\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genconstants.c $(OUTPUT_OPTION)\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genconstants.c $(OUTPUT_OPTION)\n \n genemit$(build_exeext) : genemit.o $(BUILD_RTL) $(BUILD_SUPPORT) \\\n   $(BUILD_PRINT) $(BUILD_ERRORS) $(BUILD_LIBDEPS)\n-\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n \t genemit.o $(BUILD_RTL) $(BUILD_SUPPORT) $(BUILD_PRINT) \\\n \t    $(BUILD_ERRORS) $(BUILD_LIBS)\n \n genemit.o : genemit.c $(RTL_H) $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) \\\n   errors.h gensupport.h\n-\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genemit.c $(OUTPUT_OPTION)\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genemit.c $(OUTPUT_OPTION)\n \n genopinit$(build_exeext) : genopinit.o $(BUILD_RTL) $(BUILD_SUPPORT) \\\n   $(BUILD_PRINT) $(BUILD_ERRORS) $(BUILD_LIBDEPS)\n-\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n \t genopinit.o $(BUILD_RTL) $(BUILD_SUPPORT) $(BUILD_PRINT) \\\n \t    $(BUILD_ERRORS) $(BUILD_LIBS)\n \n genopinit.o : genopinit.c $(RTL_H) $(BCONFIG_H) \\\n   $(SYSTEM_H) coretypes.h $(GTM_H) errors.h gensupport.h\n-\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genopinit.c $(OUTPUT_OPTION)\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genopinit.c $(OUTPUT_OPTION)\n \n genrecog$(build_exeext) : genrecog.o $(BUILD_RTL) $(BUILD_SUPPORT) \\\n     $(BUILD_PRINT) $(BUILD_ERRORS) $(BUILD_LIBDEPS)\n-\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n \t genrecog.o $(BUILD_RTL) $(BUILD_SUPPORT) $(BUILD_PRINT) \\\n \t    $(BUILD_ERRORS) $(BUILD_LIBS)\n \n genrecog.o : genrecog.c $(RTL_H) $(BCONFIG_H) \\\n   $(SYSTEM_H) coretypes.h $(GTM_H) errors.h gensupport.h\n-\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genrecog.c $(OUTPUT_OPTION)\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genrecog.c $(OUTPUT_OPTION)\n \n genextract$(build_exeext) : genextract.o $(BUILD_RTL) $(BUILD_SUPPORT) \\\n   $(BUILD_PRINT) $(BUILD_ERRORS) $(BUILD_LIBDEPS)\n-\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n \t genextract.o $(BUILD_RTL) $(BUILD_SUPPORT) $(BUILD_PRINT) \\\n \t    $(BUILD_ERRORS) $(BUILD_LIBS)\n \n genextract.o : genextract.c $(RTL_H) $(BCONFIG_H) \\\n   $(SYSTEM_H) coretypes.h $(GTM_H) insn-config.h errors.h gensupport.h\n-\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genextract.c $(OUTPUT_OPTION)\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genextract.c $(OUTPUT_OPTION)\n \n genpeep$(build_exeext) : genpeep.o $(BUILD_RTL) $(BUILD_SUPPORT) \\\n   $(BUILD_PRINT) $(BUILD_ERRORS) $(BUILD_LIBDEPS)\n-\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n \t genpeep.o $(BUILD_RTL) $(BUILD_SUPPORT) $(BUILD_PRINT) \\\n \t    $(BUILD_ERRORS) $(BUILD_LIBS)\n \n genpeep.o : genpeep.c $(RTL_H) $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) \\\n   errors.h gensupport.h\n-\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genpeep.c $(OUTPUT_OPTION)\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genpeep.c $(OUTPUT_OPTION)\n \n genattr$(build_exeext) : genattr.o $(BUILD_RTL) $(BUILD_SUPPORT) \\\n   $(BUILD_PRINT) $(BUILD_ERRORS) $(BUILD_LIBDEPS)\n-\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n \t genattr.o $(BUILD_RTL) $(BUILD_SUPPORT) $(BUILD_PRINT) \\\n \t    $(BUILD_ERRORS) $(BUILD_LIBS)\n \n genattr.o : genattr.c $(RTL_H) $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) errors.h \\\n   gensupport.h\n-\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genattr.c $(OUTPUT_OPTION)\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genattr.c $(OUTPUT_OPTION)\n \n genattrtab$(build_exeext) : genattrtab.o genautomata.o \\\n   $(BUILD_RTL) $(BUILD_SUPPORT) $(BUILD_PRINT) $(BUILD_ERRORS) $(BUILD_VARRAY) \\\n   $(BUILD_LIBDEPS)\n-\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n \t genattrtab.o genautomata.o \\\n \t $(BUILD_RTL) $(BUILD_SUPPORT) $(BUILD_PRINT) $(BUILD_ERRORS) \\\n \t $(BUILD_VARRAY) $(BUILD_LIBS) -lm\n \n genattrtab.o : genattrtab.c $(RTL_H) $(OBSTACK_H) $(BCONFIG_H) \\\n   $(SYSTEM_H) coretypes.h $(GTM_H) errors.h $(GGC_H) gensupport.h genattrtab.h\n-\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genattrtab.c $(OUTPUT_OPTION)\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genattrtab.c $(OUTPUT_OPTION)\n \n genautomata.o : genautomata.c $(RTL_H) $(OBSTACK_H) $(BCONFIG_H) \\\n   $(SYSTEM_H) coretypes.h $(GTM_H) errors.h varray.h genattrtab.h $(HASHTAB_H)\n-\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genautomata.c $(OUTPUT_OPTION)\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genautomata.c $(OUTPUT_OPTION)\n \n genoutput$(build_exeext) : genoutput.o $(BUILD_RTL) $(BUILD_SUPPORT) \\\n   $(BUILD_PRINT) $(BUILD_ERRORS) $(BUILD_LIBDEPS)\n-\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n \t genoutput.o $(BUILD_RTL) $(BUILD_SUPPORT) $(BUILD_PRINT) \\\n \t    $(BUILD_ERRORS) $(BUILD_LIBS)\n \n genoutput.o : genoutput.c $(RTL_H) $(BCONFIG_H) \\\n   $(SYSTEM_H) coretypes.h $(GTM_H) errors.h gensupport.h\n-\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genoutput.c $(OUTPUT_OPTION)\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genoutput.c $(OUTPUT_OPTION)\n \n gengenrtl$(build_exeext) : gengenrtl.o $(BUILD_LIBDEPS)\n-\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n \t gengenrtl.o $(BUILD_LIBS)\n \n gengenrtl.o : gengenrtl.c $(RTL_BASE_H) $(BCONFIG_H) $(SYSTEM_H) coretypes.h \\\n   $(GTM_H) real.h\n-\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/gengenrtl.c $(OUTPUT_OPTION)\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/gengenrtl.c $(OUTPUT_OPTION)\n \n genpreds$(build_exeext) : genpreds.o $(BUILD_LIBDEPS)\n-\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n \t genpreds.o $(BUILD_LIBS)\n \n genpreds.o : genpreds.c $(RTL_BASE_H) $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H)\n-\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genpreds.c $(OUTPUT_OPTION)\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/genpreds.c $(OUTPUT_OPTION)\n \n gengtype$(build_exeext) : gengtype.o gengtype-lex.o gengtype-yacc.o \\\n   $(BUILD_LIBDEPS)\n-\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n \t gengtype.o gengtype-lex.o gengtype-yacc.o $(BUILD_LIBS)\n \n gengtype.o : gengtype.c gengtype.h $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) \\\n   real.h $(RTL_BASE_H) gtyp-gen.h\n-\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) \\\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) \\\n \t  $(srcdir)/gengtype.c $(OUTPUT_OPTION)\n \n gengtype-lex.o : $(parsedir)/gengtype-lex.c gengtype.h $(parsedir)/gengtype-yacc.c \\\n   $(BCONFIG_H) coretypes.h $(GTM_H) $(SYSTEM_H)\n-\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) \\\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) \\\n \t  $(parsedir)/gengtype-lex.c $(OUTPUT_OPTION)\n \n gengtype-yacc.o : $(parsedir)/gengtype-yacc.c gengtype.h $(BCONFIG_H) $(SYSTEM_H) \\\n   coretypes.h $(GTM_H)\n-\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) \\\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) \\\n \t  $(parsedir)/gengtype-yacc.c $(OUTPUT_OPTION)\n \n # The sed command works around a bug in flex-2.5.4.\n@@ -2250,13 +2250,13 @@ $(parsedir)/gengtype-yacc.c: $(srcdir)/gengtype-yacc.y\n \n genconditions$(build_exeext) : genconditions.o $(BUILD_EARLY_SUPPORT) \\\n   $(BUILD_RTL) $(BUILD_ERRORS) $(BUILD_LIBDEPS)\n-\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n \t genconditions.o $(BUILD_EARLY_SUPPORT) $(BUILD_RTL) \\\n \t    $(BUILD_ERRORS) $(BUILD_LIBS)\n \n genconditions.o : genconditions.c $(RTL_H) $(BCONFIG_H) $(SYSTEM_H) coretypes.h \\\n   $(GTM_H) errors.h\n-\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) \\\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/genconditions.c $(OUTPUT_OPTION)\n \n #\f\n@@ -2268,37 +2268,37 @@ $(BUILD_PREFIX_1)rtl.o: $(srcdir)/rtl.c $(BCONFIG_H) coretypes.h $(GTM_H) $(SYST\n   real.h $(GGC_H) errors.h\n \trm -f $(BUILD_PREFIX)rtl.c\n \tsed -e 's/config[.]h/bconfig.h/' $(srcdir)/rtl.c > $(BUILD_PREFIX)rtl.c\n-\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(BUILD_PREFIX)rtl.c $(OUTPUT_OPTION)\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(BUILD_PREFIX)rtl.c $(OUTPUT_OPTION)\n \n print-rtl1.o: $(srcdir)/print-rtl.c $(BCONFIG_H) coretypes.h $(GTM_H) \\\n   $(RTL_H) $(TREE_H) hard-reg-set.h $(BASIC_BLOCK_H)\n \trm -f print-rtl1.c\n \tsed -e 's/config[.]h/bconfig.h/' $(srcdir)/print-rtl.c > print-rtl1.c\n-\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) print-rtl1.c $(OUTPUT_OPTION)\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) print-rtl1.c $(OUTPUT_OPTION)\n \n $(BUILD_PREFIX_1)bitmap.o: $(srcdir)/bitmap.c $(BCONFIG_H) coretypes.h $(GTM_H) $(SYSTEM_H) \\\n   $(RTL_H) flags.h $(BASIC_BLOCK_H) $(REGS_H) $(GGC_H)\n \trm -f $(BUILD_PREFIX)bitmap.c\n \tsed -e 's/config[.]h/bconfig.h/' $(srcdir)/bitmap.c > $(BUILD_PREFIX)bitmap.c\n-\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(BUILD_PREFIX)bitmap.c $(OUTPUT_OPTION)\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(BUILD_PREFIX)bitmap.c $(OUTPUT_OPTION)\n \n $(BUILD_PREFIX_1)errors.o: errors.c $(BCONFIG_H) coretypes.h $(GTM_H) $(SYSTEM_H) errors.h\n \trm -f $(BUILD_PREFIX)errors.c\n \tsed -e 's/config[.]h/bconfig.h/' $(srcdir)/errors.c > $(BUILD_PREFIX)errors.c\n-\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(BUILD_PREFIX)errors.c $(OUTPUT_OPTION)\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(BUILD_PREFIX)errors.c $(OUTPUT_OPTION)\n \n $(BUILD_PREFIX_1)varray.o: varray.c $(BCONFIG_H) coretypes.h $(GTM_H) $(SYSTEM_H) varray.h \\\n   $(RTL_H) $(GGC_H) $(TREE_H) bitmap.h errors.h\n \trm -f $(BUILD_PREFIX)varray.c\n \tsed -e 's/config[.]h/bconfig.h/' $(srcdir)/varray.c > \\\n \t\t$(BUILD_PREFIX)varray.c\n-\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) \\\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) \\\n \t\t$(BUILD_PREFIX)varray.c $(OUTPUT_OPTION)\n \n $(BUILD_PREFIX_1)ggc-none.o: ggc-none.c $(BCONFIG_H) coretypes.h $(GTM_H) $(SYSTEM_H) $(GGC_H)\n \trm -f $(BUILD_PREFIX)ggc-none.c\n \tsed -e 's/config[.]h/bconfig.h/' $(srcdir)/ggc-none.c > $(BUILD_PREFIX)ggc-none.c\n-\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(BUILD_PREFIX)ggc-none.c $(OUTPUT_OPTION)\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(BUILD_PREFIX)ggc-none.c $(OUTPUT_OPTION)\n \n #\f\n # Remake internationalization support.\n@@ -2444,9 +2444,9 @@ test-protoize-simple: ./protoize ./unprotoize $(GCC_PASSES)\n \n # gcov-iov.c is run on the build machine to generate gcov-iov.h from version.c\n gcov-iov.o: gcov-iov.c version.c $(BCONFIG_H) coretypes.h $(GTM_H) $(SYSTEM_H) coretypes.h $(TM_H)\n-\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/gcov-iov.c $(OUTPUT_OPTION)\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/gcov-iov.c $(OUTPUT_OPTION)\n gcov-iov$(build_exeext): gcov-iov.o\n-\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) gcov-iov.o -o $@\n+\t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) gcov-iov.o -o $@\n gcov-iov.h: s-iov\n s-iov: gcov-iov$(build_exeext) $(srcdir)/move-if-change\n \t./gcov-iov$(build_exeext) > tmp-gcov-iov.h\n@@ -2516,7 +2516,7 @@ fixinc.sh: $(FIXINCSRCDIR)/mkfixinc.sh $(FIXINCSRCDIR)/fixincl.c \\\n \t$(FIXINCSRCDIR)/server.c $(FIXINCSRCDIR)/gnu-regex.h \\\n \t$(FIXINCSRCDIR)/server.h $(FIXINCSRCDIR)/inclhack.def specs.ready\n \t(MAKE=\"$(MAKE)\"; srcdir=`cd $(srcdir)/fixinc && ${PWD}` ; \\\n-\tCC=\"$(BUILD_CC)\"; CFLAGS=\"$(BUILD_CFLAGS)\"; LDFLAGS=\"$(BUILD_LDFLAGS)\"; \\\n+\tCC=\"$(CC_FOR_BUILD)\"; CFLAGS=\"$(BUILD_CFLAGS)\"; LDFLAGS=\"$(BUILD_LDFLAGS)\"; \\\n \tWARN_CFLAGS=\"$(WARN_CFLAGS)\"; LIBERTY=`pwd`/\"$(BUILD_LIBIBERTY)\"; \\\n \texport MAKE srcdir CC CFLAGS LDFLAGS WARN_CFLAGS LIBERTY; \\\n \tcd ./fixinc && \\\n@@ -2550,7 +2550,7 @@ stmp-fixinc: fixinc.sh gsyslimits.h\n \t$(STAMP) stmp-fixinc\n \n # Files related to the fixproto script.\n-# gen-protos and fix-header are compiled with BUILD_CC, but they are only\n+# gen-protos and fix-header are compiled with CC_FOR_BUILD, but they are only\n # used in native and host-x-target builds, so it's safe to link them with\n # libiberty.a.\n \n@@ -2567,14 +2567,14 @@ deduced.h: $(GCC_PASSES) $(srcdir)/scan-types.sh stmp-int-hdrs\n \n GEN_PROTOS_OBJS = gen-protos.o scan.o\n gen-protos$(build_exeext): $(GEN_PROTOS_OBJS)\n-\t${BUILD_CC} $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t${CC_FOR_BUILD} $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n \t  $(GEN_PROTOS_OBJS) $(BUILD_LIBS)\n \n gen-protos.o: gen-protos.c scan.h $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H)\n-\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/gen-protos.c $(OUTPUT_OPTION)\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/gen-protos.c $(OUTPUT_OPTION)\n \n scan.o: scan.c scan.h $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H)\n-\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/scan.c $(OUTPUT_OPTION)\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/scan.c $(OUTPUT_OPTION)\n \n xsys-protos.h: $(GCC_PASSES) $(srcdir)/sys-protos.h deduced.h gen-protos$(build_exeext) Makefile\n \tsed -e s/TARGET_GETGROUPS_T/$(TARGET_GETGROUPS_T)/ \\\n@@ -2590,15 +2590,15 @@ xsys-protos.h: $(GCC_PASSES) $(srcdir)/sys-protos.h deduced.h gen-protos$(build_\n # so we can (indeed, must) use $(LIBDEPS) and $(LIBS).\n fix-header$(build_exeext): fix-header.o scan-decls.o scan.o xsys-protos.h \\\n            c-incpath.o cppdefault.o prefix.o $(LIBDEPS) libcpp.a\n-\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ fix-header.o \\\n+\t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ fix-header.o \\\n \tc-incpath.o cppdefault.o scan-decls.o prefix.o scan.o libcpp.a $(LIBS)\n \n fix-header.o: fix-header.c $(OBSTACK_H) scan.h \\\n \txsys-protos.h $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) $(CPPLIB_H)\n-\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/fix-header.c $(OUTPUT_OPTION)\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/fix-header.c $(OUTPUT_OPTION)\n \n scan-decls.o: scan-decls.c scan.h $(CPPLIB_H) $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H)\n-\t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/scan-decls.c $(OUTPUT_OPTION)\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) $(srcdir)/scan-decls.c $(OUTPUT_OPTION)\n \n # stmp-fixproto depends on this, not on fix-header directly.\n # The idea is to make sure fix-header gets built,\n@@ -3504,7 +3504,7 @@ stage1_copy: stage1_build\n \techo stage2_build > stage_last\n \n stage2_build: stage1_copy\n-\t$(MAKE) CC=\"$(STAGE_CC_WRAPPER) stage1/xgcc$(exeext) -Bstage1/ -B$(build_tooldir)/bin/\" BUILD_CC=\"$(STAGE_CC_WRAPPER) stage1/xgcc$(exeext) -Bstage1/ -B$(build_tooldir)/bin/\" \\\n+\t$(MAKE) CC=\"$(STAGE_CC_WRAPPER) stage1/xgcc$(exeext) -Bstage1/ -B$(build_tooldir)/bin/\" CC_FOR_BUILD=\"$(STAGE_CC_WRAPPER) stage1/xgcc$(exeext) -Bstage1/ -B$(build_tooldir)/bin/\" \\\n \t\t STAGE_PREFIX=stage1/ \\\n \t\t $(POSTSTAGE1_FLAGS_TO_PASS) \\\n \t\t $(STAGE2_FLAGS_TO_PASS)\n@@ -3517,7 +3517,7 @@ stage2_copy: stage2_build\n \techo stage3_build > stage_last\n \n stageprofile_build: stage1_copy\n-\t$(MAKE) CC=\"$(STAGE_CC_WRAPPER) stage1/xgcc$(exeext) -Bstage1/ -B$(build_tooldir)/bin/\" BUILD_CC=\"$(STAGE_CC_WRAPPER) stage1/xgcc$(exeext) -Bstage1/ -B$(build_tooldir)/bin/\" \\\n+\t$(MAKE) CC=\"$(STAGE_CC_WRAPPER) stage1/xgcc$(exeext) -Bstage1/ -B$(build_tooldir)/bin/\" CC_FOR_BUILD=\"$(STAGE_CC_WRAPPER) stage1/xgcc$(exeext) -Bstage1/ -B$(build_tooldir)/bin/\" \\\n \t\t STAGE_PREFIX=stage1/ \\\n \t\t $(POSTSTAGE1_FLAGS_TO_PASS) \\\n \t\t $(STAGEPROFILE_FLAGS_TO_PASS)\n@@ -3530,15 +3530,15 @@ stageprofile_copy: stageprofile_build\n \techo stagefeedback_build > stage_last\n \n stage3_build: stage2_copy\n-\t$(MAKE) CC=\"$(STAGE_CC_WRAPPER) stage2/xgcc$(exeext) -Bstage2/ -B$(build_tooldir)/bin/\" BUILD_CC=\"$(STAGE_CC_WRAPPER) stage2/xgcc$(exeext) -Bstage2/ -B$(build_tooldir)/bin/\" \\\n+\t$(MAKE) CC=\"$(STAGE_CC_WRAPPER) stage2/xgcc$(exeext) -Bstage2/ -B$(build_tooldir)/bin/\" CC_FOR_BUILD=\"$(STAGE_CC_WRAPPER) stage2/xgcc$(exeext) -Bstage2/ -B$(build_tooldir)/bin/\" \\\n \t\t STAGE_PREFIX=stage2/ \\\n \t\t $(POSTSTAGE1_FLAGS_TO_PASS) \\\n \t\t $(STAGE2_FLAGS_TO_PASS)\n \t$(STAMP) stage3_build\n \techo stage3_build > stage_last\n \n stagefeedback_build: stageprofile_copy stage1_copy\n-\t$(MAKE) CC=\"$(STAGE_CC_WRAPPER) stage1/xgcc$(exeext) -Bstage1/ -B$(build_tooldir)/bin/\" BUILD_CC=\"$(STAGE_CC_WRAPPER) stage1/xgcc$(exeext) -Bstage1/ -B$(build_tooldir)/bin/\" \\\n+\t$(MAKE) CC=\"$(STAGE_CC_WRAPPER) stage1/xgcc$(exeext) -Bstage1/ -B$(build_tooldir)/bin/\" CC_FOR_BUILD=\"$(STAGE_CC_WRAPPER) stage1/xgcc$(exeext) -Bstage1/ -B$(build_tooldir)/bin/\" \\\n \t\t STAGE_PREFIX=stage1/ \\\n \t\t $(POSTSTAGE1_FLAGS_TO_PASS) \\\n \t\t $(STAGEFEEDBACK_FLAGS_TO_PASS)\n@@ -3557,7 +3557,7 @@ stage3_copy: stage3_build\n \techo stage4_build > stage_last\n \n stage4_build: stage3_copy\n-\t$(MAKE) CC=\"$(STAGE_CC_WRAPPER) stage3/xgcc$(exeext) -Bstage3/ -B$(build_tooldir)/bin/\" BUILD_CC=\"$(STAGE_CC_WRAPPER) stage3/xgcc$(exeext) -Bstage3/ -B$(build_tooldir)/bin/\" \\\n+\t$(MAKE) CC=\"$(STAGE_CC_WRAPPER) stage3/xgcc$(exeext) -Bstage3/ -B$(build_tooldir)/bin/\" CC_FOR_BUILD=\"$(STAGE_CC_WRAPPER) stage3/xgcc$(exeext) -Bstage3/ -B$(build_tooldir)/bin/\" \\\n \t\t STAGE_PREFIX=stage3/ \\\n \t\t $(POSTSTAGE1_FLAGS_TO_PASS) \\\n \t\t $(STAGE2_FLAGS_TO_PASS)"}, {"sha": "929509dd98ed01dddd83afec8b09e120e83c317a", "filename": "gcc/configure", "status": "modified", "additions": 32, "deletions": 33, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaf9f3b2e936e437092978ee61606cb53f87e5bc/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaf9f3b2e936e437092978ee61606cb53f87e5bc/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=eaf9f3b2e936e437092978ee61606cb53f87e5bc", "patch": "@@ -6967,7 +6967,7 @@ fi\n # These are the normal (build=host) settings:\n BUILD_PREFIX=\t\t\t\n BUILD_PREFIX_1=ignore-\t\t\n-BUILD_CC='$(CC)'\t\t\n+CC_FOR_BUILD='$(CC)'\t\t\n BUILD_CFLAGS='$(ALL_CFLAGS)'\t\n \n STMP_FIXINC=stmp-fixinc\t\t\n@@ -6978,7 +6978,6 @@ if test x$build != x$host\n then\n     BUILD_PREFIX=build-\n     BUILD_PREFIX_1=build-\n-    BUILD_CC='$(CC_FOR_BUILD)'\n     BUILD_CFLAGS='$(INTERNAL_CFLAGS) $(T_CFLAGS) $(CFLAGS_FOR_BUILD) $(XCFLAGS)'\n \n     if test \"x$TARGET_SYSTEM_ROOT\" = x; then\n@@ -7018,7 +7017,7 @@ esac\n # build->target assembler and hope that it will have the same features\n # as the host->target assembler we'll be using.\n echo $ac_n \"checking what assembler to use\"\"... $ac_c\" 1>&6\n-echo \"configure:7022: checking what assembler to use\" >&5\n+echo \"configure:7021: checking what assembler to use\" >&5\n in_tree_gas=no\n gcc_cv_as=\n gcc_cv_gas_major_version=\n@@ -7129,7 +7128,7 @@ esac\n # build->target linker and hope that it will have the same features\n # as the host->target linker we'll be using.\n echo $ac_n \"checking what linker to use\"\"... $ac_c\" 1>&6\n-echo \"configure:7133: checking what linker to use\" >&5\n+echo \"configure:7132: checking what linker to use\" >&5\n in_tree_ld=no\n gcc_cv_ld=\n gcc_cv_gld_major_version=\n@@ -7232,7 +7231,7 @@ esac\n # Figure out what nm we will be using.\n gcc_cv_binutils_srcdir=`echo $srcdir | sed -e 's,/gcc$,,'`/binutils\n echo $ac_n \"checking what nm to use\"\"... $ac_c\" 1>&6\n-echo \"configure:7236: checking what nm to use\" >&5\n+echo \"configure:7235: checking what nm to use\" >&5\n in_tree_nm=no\n if test -x nm$host_exeext; then\n \tgcc_cv_nm=./nm$host_exeext\n@@ -7255,7 +7254,7 @@ esac\n \n # Figure out what objdump we will be using.\n echo $ac_n \"checking what objdump to use\"\"... $ac_c\" 1>&6\n-echo \"configure:7259: checking what objdump to use\" >&5\n+echo \"configure:7258: checking what objdump to use\" >&5\n in_tree_objdump=no\n if test -x objdump$host_exeext; then\n \tgcc_cv_objdump=./objdump$host_exeext\n@@ -7280,7 +7279,7 @@ esac\n \n # Figure out what assembler alignment features are present.\n echo $ac_n \"checking assembler alignment features\"\"... $ac_c\" 1>&6\n-echo \"configure:7284: checking assembler alignment features\" >&5\n+echo \"configure:7283: checking assembler alignment features\" >&5\n gcc_cv_as_alignment_features=none\n if test $in_tree_gas = yes; then\n   # Gas version 2.6 and later support for .balign and .p2align.\n@@ -7341,7 +7340,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_alignment_features\" 1>&6\n \n echo $ac_n \"checking assembler subsection support\"\"... $ac_c\" 1>&6\n-echo \"configure:7345: checking assembler subsection support\" >&5\n+echo \"configure:7344: checking assembler subsection support\" >&5\n gcc_cv_as_subsections=no\n if test $in_tree_gas = yes ; then\n    if test $gcc_cv_gas_major_version -eq 2 \\\n@@ -7390,7 +7389,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_subsections\" 1>&6\n \n echo $ac_n \"checking assembler weak support\"\"... $ac_c\" 1>&6\n-echo \"configure:7394: checking assembler weak support\" >&5\n+echo \"configure:7393: checking assembler weak support\" >&5\n gcc_cv_as_weak=no\n if test $in_tree_gas = yes ; then\n    if test $gcc_cv_gas_major_version -eq 2 \\\n@@ -7420,7 +7419,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_weak\" 1>&6\n \n echo $ac_n \"checking assembler hidden support\"\"... $ac_c\" 1>&6\n-echo \"configure:7424: checking assembler hidden support\" >&5\n+echo \"configure:7423: checking assembler hidden support\" >&5\n gcc_cv_as_hidden=no\n if test $in_tree_gas = yes ; then\n    if test $gcc_cv_gas_major_version -eq 2 \\\n@@ -7501,7 +7500,7 @@ libgcc_visibility=$gcc_cv_as_hidden\n \n \n echo $ac_n \"checking assembler leb128 support\"\"... $ac_c\" 1>&6\n-echo \"configure:7505: checking assembler leb128 support\" >&5\n+echo \"configure:7504: checking assembler leb128 support\" >&5\n gcc_cv_as_leb128=no\n if test $in_tree_gas = yes ; then\n    if test $gcc_cv_gas_major_version -eq 2 \\\n@@ -7555,7 +7554,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_leb128\" 1>&6\n \n echo $ac_n \"checking assembler eh_frame optimization\"\"... $ac_c\" 1>&6\n-echo \"configure:7559: checking assembler eh_frame optimization\" >&5\n+echo \"configure:7558: checking assembler eh_frame optimization\" >&5\n gcc_cv_as_eh_frame=no\n if test $in_tree_gas = yes ; then\n    if test $gcc_cv_gas_major_version -eq 2 \\\n@@ -7645,7 +7644,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_eh_frame\" 1>&6\n \n echo $ac_n \"checking assembler section merging support\"\"... $ac_c\" 1>&6\n-echo \"configure:7649: checking assembler section merging support\" >&5\n+echo \"configure:7648: checking assembler section merging support\" >&5\n gcc_cv_as_shf_merge=no\n if test $in_tree_gas = yes ; then\n    if test $gcc_cv_gas_major_version -eq 2 \\\n@@ -7677,7 +7676,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_shf_merge\" 1>&6\n \n echo $ac_n \"checking assembler thread-local storage support\"\"... $ac_c\" 1>&6\n-echo \"configure:7681: checking assembler thread-local storage support\" >&5\n+echo \"configure:7680: checking assembler thread-local storage support\" >&5\n gcc_cv_as_tls=no\n conftest_s=\n tls_first_major=\n@@ -7887,7 +7886,7 @@ case \"$target\" in\n   # All TARGET_ABI_OSF targets.\n   alpha*-*-osf* | alpha*-*-linux* | alpha*-*-*bsd*)\n     echo $ac_n \"checking assembler supports explicit relocations\"\"... $ac_c\" 1>&6\n-echo \"configure:7891: checking assembler supports explicit relocations\" >&5\n+echo \"configure:7890: checking assembler supports explicit relocations\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_explicit_relocs'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -7940,7 +7939,7 @@ EOF\n     ;;\n   sparc*-*-*)\n     echo $ac_n \"checking assembler .register pseudo-op support\"\"... $ac_c\" 1>&6\n-echo \"configure:7944: checking assembler .register pseudo-op support\" >&5\n+echo \"configure:7943: checking assembler .register pseudo-op support\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_register_pseudo_op'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -7968,7 +7967,7 @@ EOF\n     fi\n \n     echo $ac_n \"checking assembler supports -relax\"\"... $ac_c\" 1>&6\n-echo \"configure:7972: checking assembler supports -relax\" >&5\n+echo \"configure:7971: checking assembler supports -relax\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_relax_opt'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -7996,7 +7995,7 @@ EOF\n     fi\n \n     echo $ac_n \"checking assembler and linker support unaligned pc related relocs\"\"... $ac_c\" 1>&6\n-echo \"configure:8000: checking assembler and linker support unaligned pc related relocs\" >&5\n+echo \"configure:7999: checking assembler and linker support unaligned pc related relocs\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_sparc_ua_pcrel'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -8023,7 +8022,7 @@ EOF\n     fi\n \n     echo $ac_n \"checking assembler and linker support unaligned pc related relocs against hidden symbols\"\"... $ac_c\" 1>&6\n-echo \"configure:8027: checking assembler and linker support unaligned pc related relocs against hidden symbols\" >&5\n+echo \"configure:8026: checking assembler and linker support unaligned pc related relocs against hidden symbols\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_sparc_ua_pcrel_hidden'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -8063,7 +8062,7 @@ EOF\n     fi\n \n     echo $ac_n \"checking for assembler offsetable %lo() support\"\"... $ac_c\" 1>&6\n-echo \"configure:8067: checking for assembler offsetable %lo() support\" >&5\n+echo \"configure:8066: checking for assembler offsetable %lo() support\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_offsetable_lo10'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -8102,7 +8101,7 @@ EOF\n \n   i[34567]86-*-* | x86_64-*-*)\n     echo $ac_n \"checking assembler instructions\"\"... $ac_c\" 1>&6\n-echo \"configure:8106: checking assembler instructions\" >&5\n+echo \"configure:8105: checking assembler instructions\" >&5\n     gcc_cv_as_instructions=\n     if test $in_tree_gas = yes ; then \n        if test $gcc_cv_gas_major_version -eq 2 \\\n@@ -8136,7 +8135,7 @@ EOF\n     echo \"$ac_t\"\"$gcc_cv_as_instructions\" 1>&6\n \n     echo $ac_n \"checking assembler GOTOFF in data directives\"\"... $ac_c\" 1>&6\n-echo \"configure:8140: checking assembler GOTOFF in data directives\" >&5\n+echo \"configure:8139: checking assembler GOTOFF in data directives\" >&5\n     gcc_cv_as_gotoff_in_data=no\n     if test $in_tree_gas = yes ; then\n        if test $gcc_cv_gas_major_version -eq 2 \\\n@@ -8170,7 +8169,7 @@ EOF\n \n   ia64*-*-*)\n     echo $ac_n \"checking assembler supports ltoffx and ldxmov\"\"... $ac_c\" 1>&6\n-echo \"configure:8174: checking assembler supports ltoffx and ldxmov\" >&5\n+echo \"configure:8173: checking assembler supports ltoffx and ldxmov\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_ltoffx_ldxmov_relocs'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -8215,7 +8214,7 @@ EOF\n esac\n \n echo $ac_n \"checking assembler dwarf2 debug_line support\"\"... $ac_c\" 1>&6\n-echo \"configure:8219: checking assembler dwarf2 debug_line support\" >&5\n+echo \"configure:8218: checking assembler dwarf2 debug_line support\" >&5\n gcc_cv_as_dwarf2_debug_line=no\n # ??? Not all targets support dwarf2 debug_line, even within a version\n # of gas.  Moreover, we need to emit a valid instruction to trigger any\n@@ -8281,7 +8280,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_dwarf2_debug_line\" 1>&6\n \n echo $ac_n \"checking assembler --gdwarf2 support\"\"... $ac_c\" 1>&6\n-echo \"configure:8285: checking assembler --gdwarf2 support\" >&5\n+echo \"configure:8284: checking assembler --gdwarf2 support\" >&5\n gcc_cv_as_gdwarf2_flag=no\n if test $in_tree_gas = yes ; then\n    if test $gcc_cv_gas_major_version -eq 2 \\\n@@ -8315,7 +8314,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_gdwarf2_flag\" 1>&6\n \n echo $ac_n \"checking assembler --gstabs support\"\"... $ac_c\" 1>&6\n-echo \"configure:8319: checking assembler --gstabs support\" >&5\n+echo \"configure:8318: checking assembler --gstabs support\" >&5\n gcc_cv_as_gstabs_flag=no\n if test $in_tree_gas = yes ; then\n    if test $gcc_cv_gas_major_version -eq 2 \\\n@@ -8348,7 +8347,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_gstabs_flag\" 1>&6\n \n echo $ac_n \"checking linker read-only and read-write section mixing\"\"... $ac_c\" 1>&6\n-echo \"configure:8352: checking linker read-only and read-write section mixing\" >&5\n+echo \"configure:8351: checking linker read-only and read-write section mixing\" >&5\n gcc_cv_ld_ro_rw_mix=unknown\n if test $in_tree_ld = yes ; then\n   if test \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -ge 10 -o \"$gcc_cv_gld_major_version\" -gt 2 && grep 'EMUL = elf' ../ld/Makefile > /dev/null; then\n@@ -8386,7 +8385,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_ld_ro_rw_mix\" 1>&6\n \n echo $ac_n \"checking linker PT_GNU_EH_FRAME support\"\"... $ac_c\" 1>&6\n-echo \"configure:8390: checking linker PT_GNU_EH_FRAME support\" >&5\n+echo \"configure:8389: checking linker PT_GNU_EH_FRAME support\" >&5\n gcc_cv_ld_eh_frame_hdr=no\n if test $in_tree_ld = yes ; then\n   if test \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -ge 12 -o \"$gcc_cv_gld_major_version\" -gt 2 && grep 'EMUL = elf' ../ld/Makefile > /dev/null; then\n@@ -8407,7 +8406,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_ld_eh_frame_hdr\" 1>&6\n \n echo $ac_n \"checking linker position independent executable support\"\"... $ac_c\" 1>&6\n-echo \"configure:8411: checking linker position independent executable support\" >&5\n+echo \"configure:8410: checking linker position independent executable support\" >&5\n gcc_cv_ld_pie=no\n if test $in_tree_ld = yes ; then\n   if test \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -ge 15 -o \"$gcc_cv_gld_major_version\" -gt 2 && grep 'EMUL = elf' ../ld/Makefile > /dev/null; then\n@@ -8431,7 +8430,7 @@ echo \"$ac_t\"\"$gcc_cv_ld_pie\" 1>&6\n case \"$target\" in\n   mips*-*-*)\n     echo $ac_n \"checking whether libgloss uses STARTUP directives consistently\"\"... $ac_c\" 1>&6\n-echo \"configure:8435: checking whether libgloss uses STARTUP directives consistently\" >&5\n+echo \"configure:8434: checking whether libgloss uses STARTUP directives consistently\" >&5\n     gcc_cv_mips_libgloss_startup=no\n     gcc_cv_libgloss_srcdir=`echo $srcdir | sed -e 's,/gcc$,,'`/libgloss\n     if test \"x$exec_prefix\" = xNONE; then\n@@ -8459,7 +8458,7 @@ EOF\n     echo \"$ac_t\"\"$gcc_cv_mips_libgloss_startup\" 1>&6\n \n     echo $ac_n \"checking whether the assembler has explicit relocation support\"\"... $ac_c\" 1>&6\n-echo \"configure:8463: checking whether the assembler has explicit relocation support\" >&5\n+echo \"configure:8462: checking whether the assembler has explicit relocation support\" >&5\n     if test x$gcc_cv_mips_explicit_relocs = x; then\n       gcc_cv_mips_explicit_relocs=no\n       if test $in_tree_gas = yes; then\n@@ -8665,7 +8664,7 @@ fi\n \n \n echo $ac_n \"checking whether to enable maintainer-specific portions of Makefiles\"\"... $ac_c\" 1>&6\n-echo \"configure:8669: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n+echo \"configure:8668: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n     # Check whether --enable-maintainer-mode or --disable-maintainer-mode was given.\n if test \"${enable_maintainer_mode+set}\" = set; then\n   enableval=\"$enable_maintainer_mode\"\n@@ -9225,7 +9224,7 @@ s%@SYSTEM_HEADER_DIR@%$SYSTEM_HEADER_DIR%g\n s%@inhibit_libc@%$inhibit_libc%g\n s%@BUILD_PREFIX@%$BUILD_PREFIX%g\n s%@BUILD_PREFIX_1@%$BUILD_PREFIX_1%g\n-s%@BUILD_CC@%$BUILD_CC%g\n+s%@CC_FOR_BUILD@%$CC_FOR_BUILD%g\n s%@BUILD_CFLAGS@%$BUILD_CFLAGS%g\n s%@STMP_FIXINC@%$STMP_FIXINC%g\n s%@STMP_FIXPROTO@%$STMP_FIXPROTO%g"}, {"sha": "4a4e04d83e290f100180468006464eede918ebc1", "filename": "gcc/configure.in", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaf9f3b2e936e437092978ee61606cb53f87e5bc/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaf9f3b2e936e437092978ee61606cb53f87e5bc/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=eaf9f3b2e936e437092978ee61606cb53f87e5bc", "patch": "@@ -1418,7 +1418,7 @@ AC_SUBST(inhibit_libc)\n # These are the normal (build=host) settings:\n BUILD_PREFIX=\t\t\tAC_SUBST(BUILD_PREFIX)\n BUILD_PREFIX_1=ignore-\t\tAC_SUBST(BUILD_PREFIX_1)\n-BUILD_CC='$(CC)'\t\tAC_SUBST(BUILD_CC)\n+CC_FOR_BUILD='$(CC)'\t\tAC_SUBST(CC_FOR_BUILD)\n BUILD_CFLAGS='$(ALL_CFLAGS)'\tAC_SUBST(BUILD_CFLAGS)\n \n STMP_FIXINC=stmp-fixinc\t\tAC_SUBST(STMP_FIXINC)\n@@ -1429,7 +1429,6 @@ if test x$build != x$host\n then\n     BUILD_PREFIX=build-\n     BUILD_PREFIX_1=build-\n-    BUILD_CC='$(CC_FOR_BUILD)'\n     BUILD_CFLAGS='$(INTERNAL_CFLAGS) $(T_CFLAGS) $(CFLAGS_FOR_BUILD) $(XCFLAGS)'\n \n     if test \"x$TARGET_SYSTEM_ROOT\" = x; then"}, {"sha": "629dc651b6cd38d7deda646e472c8a7c10b5de7c", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaf9f3b2e936e437092978ee61606cb53f87e5bc/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaf9f3b2e936e437092978ee61606cb53f87e5bc/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=eaf9f3b2e936e437092978ee61606cb53f87e5bc", "patch": "@@ -1,3 +1,7 @@\n+2003-06-17  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* Make-lang.in: Replace BUILD_CC references with CC_FOR_BUILD.\n+\n Sun Jun 15 15:56:51 2003  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* lang.opt: Declare F77."}, {"sha": "5e11dc3de6b9b5de9185b0acd54aef2bc93a34eb", "filename": "gcc/f/Make-lang.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaf9f3b2e936e437092978ee61606cb53f87e5bc/gcc%2Ff%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaf9f3b2e936e437092978ee61606cb53f87e5bc/gcc%2Ff%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FMake-lang.in?ref=eaf9f3b2e936e437092978ee61606cb53f87e5bc", "patch": "@@ -129,11 +129,11 @@ f/str-ot.h f/str-ot.j: f/fini$(build_exeext) f/str-ot.fin\n \t./f/fini$(build_exeext) $(srcdir)/f/str-ot.fin f/str-ot.j f/str-ot.h\n \n f/fini$(build_exeext): f/fini.o $(BUILD_LIBDEPS)\n-\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o f/fini$(build_exeext) \\\n+\t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o f/fini$(build_exeext) \\\n \t\tf/fini.o $(BUILD_LIBS)\n \n f/fini.o:\n-\t$(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) \\\n+\t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) \\\n \t      -c $(srcdir)/f/fini.c $(OUTPUT_OPTION)\n \n gt-f-lex.h gt-f-where.h gt-f-com.h gt-f-ste.h gtype-f.h : s-gtype; @true\n@@ -219,15 +219,15 @@ $(srcdir)/f/intdoc.texi: $(INTDOC_DEPS) $(srcdir)/f/intdoc.in\n \n f/intdoc$(build_exeext): $(INTDOC_DEPS) f/intdoc.h0 bconfig.h \\\n   $(SYSTEM_H) coretypes.h $(TM_H) $(BUILD_LIBDEPS)\n-\t  $(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) $(INCLUDES) \\\n+\t  $(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) $(INCLUDES) \\\n \t\t  $(srcdir)/f/intdoc.c $(BUILD_LIBS) -o f/intdoc$(build_exeext)\n \n f/intdoc.h0: f/intdoc.in f/ansify$(build_exeext)\n \tf/ansify$(build_exeext) $(srcdir)/f/intdoc.in \\\n \t\t< $(srcdir)/f/intdoc.in > f/intdoc.h0\n \n f/ansify$(build_exeext): f/ansify.c bconfig.h $(SYSTEM_H) coretypes.h $(TM_H)\n-\t  $(BUILD_CC) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) $(INCLUDES) \\\n+\t  $(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) $(INCLUDES) \\\n \t  \t$(srcdir)/f/ansify.c -o f/ansify$(build_exeext)\n \n $(srcdir)/f/BUGS: f/bugs0.texi f/bugs.texi f/root.texi"}]}