{"sha": "c9ef0409cd8f40ebca439ed446142fe3a2e727d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzllZjA0MDljZDhmNDBlYmNhNDM5ZWQ0NDYxNDJmZTNhMmU3MjdkMw==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2019-11-03T12:48:43Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2019-11-03T12:48:43Z"}, "message": "config.in: Regenerate.\n\n \t* config.in: Regenerate.\n\t* configure: Regenerate.\n\t* configure.ac: Check for mallinfo.\n\t* ggc-common.c: Include malloc.h if available;\n\tinclude options.h\n\t(report_heap_memory_use): New functoin.\n\t* ggc-page.c (ggc_grow): Do not print \"start\".\n\t* ggc.h (report_heap_memory_use): Declare.\n\t* pases.c (execute_one_pass): Report memory after IPA passes.\n\t(ipa_read_summaries_1): Likewise.\n\t(ipa_read_optimization_summaries_1): Likewise.\n\n\t* lto/lto-common.c (read_cgraph_and_symbols): Improve -Q reporting.\n\t* lto.c (lto_wpa_write_files): Likewise.\n\nFrom-SVN: r277753", "tree": {"sha": "02b234403a8ac14394b85f5c47afa2fc22b9dc17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02b234403a8ac14394b85f5c47afa2fc22b9dc17"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9ef0409cd8f40ebca439ed446142fe3a2e727d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9ef0409cd8f40ebca439ed446142fe3a2e727d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9ef0409cd8f40ebca439ed446142fe3a2e727d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9ef0409cd8f40ebca439ed446142fe3a2e727d3/comments", "author": null, "committer": null, "parents": [{"sha": "da5c1bbe973db144cc1d297ad49b519a870ab0ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da5c1bbe973db144cc1d297ad49b519a870ab0ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da5c1bbe973db144cc1d297ad49b519a870ab0ba"}], "stats": {"total": 157, "additions": 143, "deletions": 14}, "files": [{"sha": "c0baa761fcd2966fe394ef47033d6bacab4d2670", "filename": "gcc/config.in", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9ef0409cd8f40ebca439ed446142fe3a2e727d3/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9ef0409cd8f40ebca439ed446142fe3a2e727d3/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=c9ef0409cd8f40ebca439ed446142fe3a2e727d3", "patch": "@@ -958,6 +958,13 @@\n #endif\n \n \n+/* Define to 1 if we found a declaration for 'mallinfo', otherwise define to\n+   0. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_DECL_MALLINFO\n+#endif\n+\n+\n /* Define to 1 if we found a declaration for 'malloc', otherwise define to 0.\n    */\n #ifndef USED_FOR_TARGET\n@@ -1627,6 +1634,12 @@\n #endif\n \n \n+/* Define to 1 if you have the `mallinfo' function. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_MALLINFO\n+#endif\n+\n+\n /* Define to 1 if you have the <malloc.h> header file. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_MALLOC_H"}, {"sha": "023d51d78fe9e94b735eae6d08235a05dea3c934", "filename": "gcc/configure", "status": "modified", "additions": 76, "deletions": 9, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9ef0409cd8f40ebca439ed446142fe3a2e727d3/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9ef0409cd8f40ebca439ed446142fe3a2e727d3/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=c9ef0409cd8f40ebca439ed446142fe3a2e727d3", "patch": "@@ -903,6 +903,7 @@ infodir\n docdir\n oldincludedir\n includedir\n+runstatedir\n localstatedir\n sharedstatedir\n sysconfdir\n@@ -1067,6 +1068,7 @@ datadir='${datarootdir}'\n sysconfdir='${prefix}/etc'\n sharedstatedir='${prefix}/com'\n localstatedir='${prefix}/var'\n+runstatedir='${localstatedir}/run'\n includedir='${prefix}/include'\n oldincludedir='/usr/include'\n docdir='${datarootdir}/doc/${PACKAGE}'\n@@ -1319,6 +1321,15 @@ do\n   | -silent | --silent | --silen | --sile | --sil)\n     silent=yes ;;\n \n+  -runstatedir | --runstatedir | --runstatedi | --runstated \\\n+  | --runstate | --runstat | --runsta | --runst | --runs \\\n+  | --run | --ru | --r)\n+    ac_prev=runstatedir ;;\n+  -runstatedir=* | --runstatedir=* | --runstatedi=* | --runstated=* \\\n+  | --runstate=* | --runstat=* | --runsta=* | --runst=* | --runs=* \\\n+  | --run=* | --ru=* | --r=*)\n+    runstatedir=$ac_optarg ;;\n+\n   -sbindir | --sbindir | --sbindi | --sbind | --sbin | --sbi | --sb)\n     ac_prev=sbindir ;;\n   -sbindir=* | --sbindir=* | --sbindi=* | --sbind=* | --sbin=* \\\n@@ -1456,7 +1467,7 @@ fi\n for ac_var in\texec_prefix prefix bindir sbindir libexecdir datarootdir \\\n \t\tdatadir sysconfdir sharedstatedir localstatedir includedir \\\n \t\toldincludedir docdir infodir htmldir dvidir pdfdir psdir \\\n-\t\tlibdir localedir mandir\n+\t\tlibdir localedir mandir runstatedir\n do\n   eval ac_val=\\$$ac_var\n   # Remove trailing slashes.\n@@ -1609,6 +1620,7 @@ Fine tuning of the installation directories:\n   --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]\n   --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]\n   --localstatedir=DIR     modifiable single-machine data [PREFIX/var]\n+  --runstatedir=DIR       modifiable per-process data [LOCALSTATEDIR/run]\n   --libdir=DIR            object code libraries [EPREFIX/lib]\n   --includedir=DIR        C header files [PREFIX/include]\n   --oldincludedir=DIR     C header files for non-gcc [/usr/include]\n@@ -5893,7 +5905,7 @@ else\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -5939,7 +5951,7 @@ else\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -5963,7 +5975,7 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -6008,7 +6020,7 @@ else\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -6032,7 +6044,7 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -10051,7 +10063,7 @@ LIBS=\"$save_LIBS\"\n for ac_func in times clock kill getrlimit setrlimit atoq \\\n \tpopen sysconf strsignal getrusage nl_langinfo \\\n \tgettimeofday mbstowcs wcswidth mmap setlocale \\\n-\tclearerr_unlocked feof_unlocked   ferror_unlocked fflush_unlocked fgetc_unlocked fgets_unlocked   fileno_unlocked fprintf_unlocked fputc_unlocked fputs_unlocked   fread_unlocked fwrite_unlocked getchar_unlocked getc_unlocked   putchar_unlocked putc_unlocked madvise\n+\tclearerr_unlocked feof_unlocked   ferror_unlocked fflush_unlocked fgetc_unlocked fgets_unlocked   fileno_unlocked fprintf_unlocked fputc_unlocked fputs_unlocked   fread_unlocked fwrite_unlocked getchar_unlocked getc_unlocked   putchar_unlocked putc_unlocked madvise mallinfo\n do :\n   as_ac_var=`$as_echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n ac_fn_cxx_check_func \"$LINENO\" \"$ac_func\" \"$as_ac_var\"\n@@ -11465,6 +11477,61 @@ fi\n done\n \n \n+for ac_func in mallinfo\n+do\n+  ac_tr_decl=`$as_echo \"HAVE_DECL_$ac_func\" | $as_tr_cpp`\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $ac_func is declared\" >&5\n+$as_echo_n \"checking whether $ac_func is declared... \" >&6; }\n+if eval \\${gcc_cv_have_decl_$ac_func+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#undef $ac_tr_decl\n+#define $ac_tr_decl 1\n+\n+#include \"ansidecl.h\"\n+#include \"system.h\"\n+#ifdef HAVE_MALLOC_H\n+#include <malloc.h>\n+#endif\n+\n+\n+int\n+main ()\n+{\n+#ifndef $ac_func\n+char *(*pfn) = (char *(*)) $ac_func ;\n+#endif\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_cxx_try_compile \"$LINENO\"; then :\n+  eval \"gcc_cv_have_decl_$ac_func=yes\"\n+else\n+  eval \"gcc_cv_have_decl_$ac_func=no\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+\n+if eval \"test \\\"`echo '$gcc_cv_have_decl_'$ac_func`\\\" = yes\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; } ; cat >>confdefs.h <<_ACEOF\n+#define $ac_tr_decl 1\n+_ACEOF\n+\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; } ; cat >>confdefs.h <<_ACEOF\n+#define $ac_tr_decl 0\n+_ACEOF\n+\n+fi\n+\n+done\n+\n+\n cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n@@ -18868,7 +18935,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18871 \"configure\"\n+#line 18938 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -18974,7 +19041,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18977 \"configure\"\n+#line 19044 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "bc15683fd02bed41eabc0e8fd80be5c603d7b9fc", "filename": "gcc/configure.ac", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9ef0409cd8f40ebca439ed446142fe3a2e727d3/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9ef0409cd8f40ebca439ed446142fe3a2e727d3/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=c9ef0409cd8f40ebca439ed446142fe3a2e727d3", "patch": "@@ -1374,7 +1374,7 @@ define(gcc_UNLOCKED_FUNCS, clearerr_unlocked feof_unlocked dnl\n AC_CHECK_FUNCS(times clock kill getrlimit setrlimit atoq \\\n \tpopen sysconf strsignal getrusage nl_langinfo \\\n \tgettimeofday mbstowcs wcswidth mmap setlocale \\\n-\tgcc_UNLOCKED_FUNCS madvise)\n+\tgcc_UNLOCKED_FUNCS madvise mallinfo)\n \n if test x$ac_cv_func_mbstowcs = xyes; then\n   AC_CACHE_CHECK(whether mbstowcs works, gcc_cv_func_mbstowcs_works,\n@@ -1454,6 +1454,14 @@ gcc_AC_CHECK_DECLS(getrlimit setrlimit getrusage, , ,[\n #endif\n ])\n \n+gcc_AC_CHECK_DECLS(mallinfo, , ,[\n+#include \"ansidecl.h\"\n+#include \"system.h\"\n+#ifdef HAVE_MALLOC_H\n+#include <malloc.h>\n+#endif\n+])\n+\n AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n #include \"ansidecl.h\"\n #include \"system.h\""}, {"sha": "b0a01c7aa20d6405d71ba00f000608b6ce83a0ac", "filename": "gcc/ggc-common.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9ef0409cd8f40ebca439ed446142fe3a2e727d3/gcc%2Fggc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9ef0409cd8f40ebca439ed446142fe3a2e727d3/gcc%2Fggc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-common.c?ref=c9ef0409cd8f40ebca439ed446142fe3a2e727d3", "patch": "@@ -21,6 +21,9 @@ along with GCC; see the file COPYING3.  If not see\n    any particular GC implementation.  */\n \n #include \"config.h\"\n+#ifdef HAVE_MALLINFO\n+#include <malloc.h>\n+#endif\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"timevar.h\"\n@@ -29,6 +32,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"params.h\"\n #include \"hosthooks.h\"\n #include \"plugin.h\"\n+#include \"options.h\"\n \n /* When set, ggc_collect will do collection.  */\n bool ggc_force_collect;\n@@ -1006,3 +1010,14 @@ ggc_prune_overhead_list (void)\n   delete ggc_mem_desc.m_reverse_object_map;\n   ggc_mem_desc.m_reverse_object_map = new map_t (13, false, false, false);\n }\n+\n+/* Return memory used by heap in kb, 0 if this info is not available.  */\n+\n+void\n+report_heap_memory_use ()\n+{\n+#ifdef HAVE_MALLINFO\n+  if (!quiet_flag)\n+    fprintf (stderr,\" {heap %luk}\", (unsigned long)(mallinfo().arena / 1024));\n+#endif\n+}"}, {"sha": "b443d87ea57bf1b35fc11c7b296d1975ef993b96", "filename": "gcc/ggc-page.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9ef0409cd8f40ebca439ed446142fe3a2e727d3/gcc%2Fggc-page.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9ef0409cd8f40ebca439ed446142fe3a2e727d3/gcc%2Fggc-page.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-page.c?ref=c9ef0409cd8f40ebca439ed446142fe3a2e727d3", "patch": "@@ -2267,7 +2267,7 @@ ggc_grow (void)\n   else\n     ggc_collect ();\n   if (!quiet_flag)\n-    fprintf (stderr, \" {GC start %luk} \", (unsigned long) G.allocated / 1024);\n+    fprintf (stderr, \" {GC %luk} \", (unsigned long) G.allocated / 1024);\n }\n \n void"}, {"sha": "c22fc37371132953a5c4d6f3995ac78d68e0d0d2", "filename": "gcc/ggc.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9ef0409cd8f40ebca439ed446142fe3a2e727d3/gcc%2Fggc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9ef0409cd8f40ebca439ed446142fe3a2e727d3/gcc%2Fggc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc.h?ref=c9ef0409cd8f40ebca439ed446142fe3a2e727d3", "patch": "@@ -278,6 +278,9 @@ extern void stringpool_statistics (void);\n /* Heuristics.  */\n extern void init_ggc_heuristics (void);\n \n+/* Report current heap memory use to stderr.  */\n+extern void report_heap_memory_use (void);\n+\n #define ggc_alloc_rtvec_sized(NELT)\t\t\t\t\\\n   (rtvec_def *) ggc_internal_alloc (sizeof (struct rtvec_def)\t\t\\\n \t\t       + ((NELT) - 1) * sizeof (rtx))\t\t\\"}, {"sha": "98554b888749fd572571deef2b824a62036618fd", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9ef0409cd8f40ebca439ed446142fe3a2e727d3/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9ef0409cd8f40ebca439ed446142fe3a2e727d3/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=c9ef0409cd8f40ebca439ed446142fe3a2e727d3", "patch": "@@ -1,3 +1,8 @@\n+2019-11-02  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* lto-common.c (read_cgraph_and_symbols): Improve -Q reporting.\n+\t* lto.c (lto_wpa_write_files): Likewise.\n+\n 2019-10-31  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/92231"}, {"sha": "eb4ceeacf3e811f1fc4817ab19f0822871b9e800", "filename": "gcc/lto/lto-common.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9ef0409cd8f40ebca439ed446142fe3a2e727d3/gcc%2Flto%2Flto-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9ef0409cd8f40ebca439ed446142fe3a2e727d3/gcc%2Flto%2Flto-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-common.c?ref=c9ef0409cd8f40ebca439ed446142fe3a2e727d3", "patch": "@@ -2784,14 +2784,15 @@ read_cgraph_and_symbols (unsigned nfiles, const char **fnames)\n   /* At this stage we know that majority of GGC memory is reachable.\n      Growing the limits prevents unnecesary invocation of GGC.  */\n   ggc_grow ();\n+  report_heap_memory_use ();\n \n   /* Set the hooks so that all of the ipa passes can read in their data.  */\n   lto_set_in_hooks (all_file_decl_data, get_section_data, free_section_data);\n \n   timevar_pop (TV_IPA_LTO_DECL_IN);\n \n   if (!quiet_flag)\n-    fprintf (stderr, \"\\nReading the callgraph\\n\");\n+    fprintf (stderr, \"\\nReading the symbol table:\");\n \n   timevar_push (TV_IPA_LTO_CGRAPH_IO);\n   /* Read the symtab.  */\n@@ -2831,7 +2832,7 @@ read_cgraph_and_symbols (unsigned nfiles, const char **fnames)\n   timevar_pop (TV_IPA_LTO_CGRAPH_IO);\n \n   if (!quiet_flag)\n-    fprintf (stderr, \"Merging declarations\\n\");\n+    fprintf (stderr, \"\\nMerging declarations:\");\n \n   timevar_push (TV_IPA_LTO_DECL_MERGE);\n   /* Merge global decls.  In ltrans mode we read merged cgraph, we do not\n@@ -2859,12 +2860,13 @@ read_cgraph_and_symbols (unsigned nfiles, const char **fnames)\n      is explcitly managed by ggc_free and ggc collect is not useful.\n      Exception are the merged declarations.  */\n   ggc_grow ();\n+  report_heap_memory_use ();\n \n   timevar_pop (TV_IPA_LTO_DECL_MERGE);\n   /* Each pass will set the appropriate timer.  */\n \n   if (!quiet_flag)\n-    fprintf (stderr, \"Reading summaries\\n\");\n+    fprintf (stderr, \"\\nReading summaries:\");\n \n   /* Read the IPA summary data.  */\n   if (flag_ltrans)\n@@ -2891,6 +2893,9 @@ read_cgraph_and_symbols (unsigned nfiles, const char **fnames)\n       /* Finally merge the cgraph according to the decl merging decisions.  */\n       timevar_push (TV_IPA_LTO_CGRAPH_MERGE);\n \n+      if (!quiet_flag)\n+\tfprintf (stderr, \"\\nMerging symbols:\");\n+\n       gcc_assert (!dump_file);\n       dump_file = dump_begin (lto_link_dump_id, NULL);\n \n@@ -2905,6 +2910,7 @@ read_cgraph_and_symbols (unsigned nfiles, const char **fnames)\n \t We could also just remove them while merging.  */\n       symtab->remove_unreachable_nodes (dump_file);\n       ggc_collect ();\n+      report_heap_memory_use ();\n \n       if (dump_file)\n \tdump_end (lto_link_dump_id, dump_file);"}, {"sha": "86d58010e0e2c606c6954d6ef8d6b53e4095df39", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9ef0409cd8f40ebca439ed446142fe3a2e727d3/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9ef0409cd8f40ebca439ed446142fe3a2e727d3/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=c9ef0409cd8f40ebca439ed446142fe3a2e727d3", "patch": "@@ -312,6 +312,8 @@ lto_wpa_write_files (void)\n       lto_prepare_function_for_streaming (node);\n \n   ggc_trim ();\n+  report_heap_memory_use ();\n+\n   /* Generate a prefix for the LTRANS unit files.  */\n   blen = strlen (ltrans_output_list);\n   temp_filename = (char *) xmalloc (blen + sizeof (\"2147483648.o\"));"}, {"sha": "cfc0fef372da7a8a4a1c4dda32ab64d2b4e65de8", "filename": "gcc/passes.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9ef0409cd8f40ebca439ed446142fe3a2e727d3/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9ef0409cd8f40ebca439ed446142fe3a2e727d3/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=c9ef0409cd8f40ebca439ed446142fe3a2e727d3", "patch": "@@ -2564,6 +2564,8 @@ execute_one_pass (opt_pass *pass)\n   if (!((todo_after | pass->todo_flags_finish) & TODO_do_not_ggc_collect))\n     ggc_collect ();\n \n+  if (pass->type == SIMPLE_IPA_PASS || pass->type == IPA_PASS)\n+    report_heap_memory_use ();\n   return true;\n }\n \n@@ -2818,6 +2820,8 @@ ipa_read_summaries_1 (opt_pass *pass)\n \t      /* If a timevar is present, start it.  */\n \t      if (pass->tv_id)\n \t\ttimevar_push (pass->tv_id);\n+\t      if (!quiet_flag)\n+\t\tfprintf (stderr, \" <%s>\", pass->name ? pass->name : \"\");\n \n \t      pass_init_dump_file (pass);\n \n@@ -2829,6 +2833,8 @@ ipa_read_summaries_1 (opt_pass *pass)\n \t      /* Stop timevar.  */\n \t      if (pass->tv_id)\n \t\ttimevar_pop (pass->tv_id);\n+\t      ggc_grow ();\n+\t      report_heap_memory_use ();\n \t    }\n \n \t  if (pass->sub && pass->sub->type != GIMPLE_PASS)\n@@ -2869,6 +2875,8 @@ ipa_read_optimization_summaries_1 (opt_pass *pass)\n \t      /* If a timevar is present, start it.  */\n \t      if (pass->tv_id)\n \t\ttimevar_push (pass->tv_id);\n+\t      if (!quiet_flag)\n+\t\tfprintf (stderr, \" <%s>\", pass->name ? pass->name : \"\");\n \n \t      pass_init_dump_file (pass);\n \n@@ -2884,6 +2892,8 @@ ipa_read_optimization_summaries_1 (opt_pass *pass)\n \n \t  if (pass->sub && pass->sub->type != GIMPLE_PASS)\n \t    ipa_read_optimization_summaries_1 (pass->sub);\n+\t  ggc_grow ();\n+\t  report_heap_memory_use ();\n \t}\n       pass = pass->next;\n     }"}]}