{"sha": "896fc322095445704ce26291914335cf44902de1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk2ZmMzMjIwOTU0NDU3MDRjZTI2MjkxOTE0MzM1Y2Y0NDkwMmRlMQ==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1995-04-30T21:43:12Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1995-04-30T21:43:12Z"}, "message": "Improve cleaning up.  See hangeLog.\n\nFrom-SVN: r9554", "tree": {"sha": "a14115de949ababb20115ebc174147e4f6a55b91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a14115de949ababb20115ebc174147e4f6a55b91"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/896fc322095445704ce26291914335cf44902de1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/896fc322095445704ce26291914335cf44902de1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/896fc322095445704ce26291914335cf44902de1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/896fc322095445704ce26291914335cf44902de1/comments", "author": null, "committer": null, "parents": [{"sha": "75410dc3a6f8e7d05d0417777378c284c5406db7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75410dc3a6f8e7d05d0417777378c284c5406db7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75410dc3a6f8e7d05d0417777378c284c5406db7"}], "stats": {"total": 37, "additions": 26, "deletions": 11}, "files": [{"sha": "cb435b4bd43c50155fee8fe3126b86996b0711e4", "filename": "gcc/cpphash.c", "status": "modified", "additions": 26, "deletions": 11, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/896fc322095445704ce26291914335cf44902de1/gcc%2Fcpphash.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/896fc322095445704ce26291914335cf44902de1/gcc%2Fcpphash.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpphash.c?ref=896fc322095445704ce26291914335cf44902de1", "patch": "@@ -123,18 +123,21 @@ delete_macro (hp)\n   if (hp == *hp->bucket_hdr)\n     *hp->bucket_hdr = hp->next;\n \n-#if 0\n-  if (hp->type == T_MACRO) {\n-    DEFINITION *d = hp->value.defn;\n-    struct reflist *ap, *nextap;\n-\n-    for (ap = d->pattern; ap != NULL; ap = nextap) {\n-      nextap = ap->next;\n-      free (ap);\n+  if (hp->type == T_MACRO)\n+    {\n+      DEFINITION *d = hp->value.defn;\n+      struct reflist *ap, *nextap;\n+\n+      for (ap = d->pattern; ap != NULL; ap = nextap)\n+\t{\n+\t  nextap = ap->next;\n+\t  free (ap);\n+\t}\n+      if (d->nargs >= 0)\n+\tfree (d->args.argnames);\n+      free (d);\n     }\n-    free (d);\n-  }\n-#endif\n+\n   free (hp);\n }\n /*\n@@ -197,3 +200,15 @@ install (name, len, type, ivalue, value, hash)\n   hp->name[len] = 0;\n   return hp;\n }\n+\n+void\n+cpp_hash_cleanup (pfile)\n+     cpp_reader *pfile;\n+{\n+  register int i;\n+  for (i = HASHSIZE; --i >= 0; )\n+    {\n+      while (hashtab[i])\n+\tdelete_macro (hashtab[i]);\n+    }\n+}"}]}