{"sha": "a122d1f1d3907a98c078369042864d04634974d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTEyMmQxZjFkMzkwN2E5OGMwNzgzNjkwNDI4NjRkMDQ2MzQ5NzRkMg==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@redhat.com", "date": "2004-12-07T22:17:21Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2004-12-07T22:17:21Z"}, "message": "re PR target/18442 (Rejects attribute((mode(SI))) when using -mint64)\n\n2004-12-07  Eric Christopher  <echristo@redhat.com>\n\n\tPR target/18442\n\t* config/mips/mips.c (mips_vector_mode_supported_p): New function.\n\t(TARGET_SCALAR_MODE_SUPPORTED_P): Define to above.\n\nFrom-SVN: r91820", "tree": {"sha": "858f294d4eea90b4a99e88bd9861922b65d53e0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/858f294d4eea90b4a99e88bd9861922b65d53e0b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a122d1f1d3907a98c078369042864d04634974d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a122d1f1d3907a98c078369042864d04634974d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a122d1f1d3907a98c078369042864d04634974d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a122d1f1d3907a98c078369042864d04634974d2/comments", "author": {"login": "echristo", "id": 327308, "node_id": "MDQ6VXNlcjMyNzMwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/327308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/echristo", "html_url": "https://github.com/echristo", "followers_url": "https://api.github.com/users/echristo/followers", "following_url": "https://api.github.com/users/echristo/following{/other_user}", "gists_url": "https://api.github.com/users/echristo/gists{/gist_id}", "starred_url": "https://api.github.com/users/echristo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/echristo/subscriptions", "organizations_url": "https://api.github.com/users/echristo/orgs", "repos_url": "https://api.github.com/users/echristo/repos", "events_url": "https://api.github.com/users/echristo/events{/privacy}", "received_events_url": "https://api.github.com/users/echristo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "54e4aedb7edbbb9daac9a5e3ece26183393550e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54e4aedb7edbbb9daac9a5e3ece26183393550e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54e4aedb7edbbb9daac9a5e3ece26183393550e2"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "05d97362aa206b896de171efc0b714e8e90b7bbc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a122d1f1d3907a98c078369042864d04634974d2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a122d1f1d3907a98c078369042864d04634974d2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a122d1f1d3907a98c078369042864d04634974d2", "patch": "@@ -1,3 +1,9 @@\n+2004-12-07  Eric Christopher  <echristo@redhat.com>\n+\n+\tPR target/18442\n+\t* config/mips/mips.c (mips_vector_mode_supported_p): New function.\n+\t(TARGET_SCALAR_MODE_SUPPORTED_P): Define to above.\n+\n 2004-12-07  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* c-common.c, expr.c, fold-const.c, print-tree.c,"}, {"sha": "990671ca260dac928ddd0bc773e94681fc3e3a6a", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a122d1f1d3907a98c078369042864d04634974d2/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a122d1f1d3907a98c078369042864d04634974d2/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=a122d1f1d3907a98c078369042864d04634974d2", "patch": "@@ -352,6 +352,7 @@ static bool mips_pass_by_reference (CUMULATIVE_ARGS *, enum machine_mode mode,\n \t\t\t\t    tree, bool);\n static bool mips_callee_copies (CUMULATIVE_ARGS *, enum machine_mode mode,\n \t\t\t\ttree, bool);\n+static bool mips_scalar_mode_supported_p (enum machine_mode);\n static bool mips_vector_mode_supported_p (enum machine_mode);\n static rtx mips_prepare_builtin_arg (enum insn_code, unsigned int, tree *);\n static rtx mips_prepare_builtin_target (enum insn_code, unsigned int, rtx);\n@@ -800,6 +801,9 @@ const struct mips_cpu_info mips_cpu_info_table[] = {\n #undef TARGET_VECTOR_MODE_SUPPORTED_P\n #define TARGET_VECTOR_MODE_SUPPORTED_P mips_vector_mode_supported_p\n \n+#undef TARGET_SCALAR_MODE_SUPPORTED_P\n+#define TARGET_SCALAR_MODE_SUPPORTED_P mips_scalar_mode_supported_p\n+\n #undef TARGET_INIT_BUILTINS\n #define TARGET_INIT_BUILTINS mips_init_builtins\n #undef TARGET_EXPAND_BUILTIN\n@@ -7076,6 +7080,28 @@ mips_valid_pointer_mode (enum machine_mode mode)\n   return (mode == SImode || (TARGET_64BIT && mode == DImode));\n }\n \n+/* Define this so that we can deal with a testcase like:\n+\n+   char foo __attribute__ ((mode (SI)));\n+\n+   then compiled with -mabi=64 and -mint64. We have no\n+   32-bit type at that point and so the default case\n+   always fails.  Instead of special casing everything\n+   it's easier to accept SImode in this function and\n+   then punt to the default which will work for all\n+   of the cases where we deal with TARGET_64BIT, etc.  */\n+static bool\n+mips_scalar_mode_supported_p (enum machine_mode mode)\n+{\n+  /* We can always handle SImode.  */\n+  if (mode == SImode)\n+    return true;\n+  else\n+    return default_scalar_mode_supported_p (mode);\n+\n+}\n+\n+\n /* Target hook for vector_mode_supported_p.  */\n static bool\n mips_vector_mode_supported_p (enum machine_mode mode)"}]}