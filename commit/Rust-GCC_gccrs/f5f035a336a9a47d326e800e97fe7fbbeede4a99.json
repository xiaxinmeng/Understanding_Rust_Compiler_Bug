{"sha": "f5f035a336a9a47d326e800e97fe7fbbeede4a99", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjVmMDM1YTMzNmE5YTQ3ZDMyNmU4MDBlOTdmZTdmYmJlZWRlNGE5OQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-03-20T18:05:59Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-03-20T18:05:59Z"}, "message": "PR c++/84978, ICE with NRVO.\n\n\t* cvt.c (cp_get_fndecl_from_callee): Add fold parameter.\n\t(cp_get_callee_fndecl_nofold): New.\n\t* cp-gimplify.c (cp_genericize_r): Use it instead.\n\t* call.c (check_self_delegation): Likewise.\n\nFrom-SVN: r258689", "tree": {"sha": "57dc575ed6e98070735858f9393dc04e43a788b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57dc575ed6e98070735858f9393dc04e43a788b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5f035a336a9a47d326e800e97fe7fbbeede4a99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5f035a336a9a47d326e800e97fe7fbbeede4a99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5f035a336a9a47d326e800e97fe7fbbeede4a99", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5f035a336a9a47d326e800e97fe7fbbeede4a99/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "91d014fffae1fcf1eb750d40e622e5b80cd1a4ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91d014fffae1fcf1eb750d40e622e5b80cd1a4ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91d014fffae1fcf1eb750d40e622e5b80cd1a4ec"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "894a33e52359c7ca2194abeb634abcbc587f5fdd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5f035a336a9a47d326e800e97fe7fbbeede4a99/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5f035a336a9a47d326e800e97fe7fbbeede4a99/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f5f035a336a9a47d326e800e97fe7fbbeede4a99", "patch": "@@ -1,3 +1,11 @@\n+2018-03-20  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/84978, ICE with NRVO.\n+\t* cvt.c (cp_get_fndecl_from_callee): Add fold parameter.\n+\t(cp_get_callee_fndecl_nofold): New.\n+\t* cp-gimplify.c (cp_genericize_r): Use it instead.\n+\t* call.c (check_self_delegation): Likewise.\n+\n 2018-03-20  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/84962"}, {"sha": "dbdb8d5812daa32ff52c6a55f92adb8c9c72d09e", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5f035a336a9a47d326e800e97fe7fbbeede4a99/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5f035a336a9a47d326e800e97fe7fbbeede4a99/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=f5f035a336a9a47d326e800e97fe7fbbeede4a99", "patch": "@@ -8739,7 +8739,7 @@ check_self_delegation (tree ret)\n {\n   if (TREE_CODE (ret) == TARGET_EXPR)\n     ret = TARGET_EXPR_INITIAL (ret);\n-  tree fn = cp_get_callee_fndecl (ret);\n+  tree fn = cp_get_callee_fndecl_nofold (ret);\n   if (fn && DECL_ABSTRACT_ORIGIN (fn) == current_function_decl)\n     error (\"constructor delegates to itself\");\n }"}, {"sha": "3edecf24c92758dcba97375a7c31bd3ce28d72f0", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5f035a336a9a47d326e800e97fe7fbbeede4a99/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5f035a336a9a47d326e800e97fe7fbbeede4a99/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=f5f035a336a9a47d326e800e97fe7fbbeede4a99", "patch": "@@ -1521,7 +1521,7 @@ cp_genericize_r (tree *stmt_p, int *walk_subtrees, void *data)\n \t version is inlinable, a direct call to this version can be made\n \t otherwise the call should go through the dispatcher.  */\n       {\n-\ttree fn = cp_get_callee_fndecl (stmt);\n+\ttree fn = cp_get_callee_fndecl_nofold (stmt);\n \tif (fn && DECL_FUNCTION_VERSIONED (fn)\n \t    && (current_function_decl == NULL\n \t\t|| !targetm.target_option.can_inline_p (current_function_decl,"}, {"sha": "4df16e2e1caf7b5e3e58ed4b7a960618f9056aac", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5f035a336a9a47d326e800e97fe7fbbeede4a99/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5f035a336a9a47d326e800e97fe7fbbeede4a99/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=f5f035a336a9a47d326e800e97fe7fbbeede4a99", "patch": "@@ -6110,7 +6110,8 @@ extern tree cp_convert_and_check                (tree, tree, tsubst_flags_t);\n extern tree cp_fold_convert\t\t\t(tree, tree);\n extern tree cp_get_callee\t\t\t(tree);\n extern tree cp_get_callee_fndecl\t\t(tree);\n-extern tree cp_get_fndecl_from_callee\t\t(tree);\n+extern tree cp_get_callee_fndecl_nofold\t\t(tree);\n+extern tree cp_get_fndecl_from_callee\t\t(tree, bool fold = true);\n extern tree convert_to_void\t\t\t(tree, impl_conv_void,\n                                  \t\t tsubst_flags_t);\n extern tree convert_force\t\t\t(tree, tree, int,"}, {"sha": "9b53fa3067d9dafe7063dc79db1e2a7f022a0ebe", "filename": "gcc/cp/cvt.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5f035a336a9a47d326e800e97fe7fbbeede4a99/gcc%2Fcp%2Fcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5f035a336a9a47d326e800e97fe7fbbeede4a99/gcc%2Fcp%2Fcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcvt.c?ref=f5f035a336a9a47d326e800e97fe7fbbeede4a99", "patch": "@@ -941,7 +941,7 @@ cp_get_callee (tree call)\n    if we can.  */\n \n tree\n-cp_get_fndecl_from_callee (tree fn)\n+cp_get_fndecl_from_callee (tree fn, bool fold /* = true */)\n {\n   if (fn == NULL_TREE)\n     return fn;\n@@ -951,7 +951,8 @@ cp_get_fndecl_from_callee (tree fn)\n   if (type == unknown_type_node)\n     return NULL_TREE;\n   gcc_assert (POINTER_TYPE_P (type));\n-  fn = maybe_constant_init (fn);\n+  if (fold)\n+    fn = maybe_constant_init (fn);\n   STRIP_NOPS (fn);\n   if (TREE_CODE (fn) == ADDR_EXPR)\n     {\n@@ -971,6 +972,14 @@ cp_get_callee_fndecl (tree call)\n   return cp_get_fndecl_from_callee (cp_get_callee (call));\n }\n \n+/* As above, but not using the constexpr machinery.  */\n+\n+tree\n+cp_get_callee_fndecl_nofold (tree call)\n+{\n+  return cp_get_fndecl_from_callee (cp_get_callee (call), false);\n+}\n+\n /* Subroutine of convert_to_void.  Warn if we're discarding something with\n    attribute [[nodiscard]].  */\n "}]}