{"sha": "801790b37ca817089ecbae214340162e6d94ea6a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODAxNzkwYjM3Y2E4MTcwODllY2JhZTIxNDM0MDE2MmU2ZDk0ZWE2YQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-08-07T19:08:55Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-08-07T19:08:55Z"}, "message": "[AArch64] Prefer FPRs over GPRs for CLASTB\n\nThis patch makes the SVE CLASTB GPR alternative more expensive than the\nFPR alternative in order to avoid unnecessary cross-file moves.  It also\nfixes the prefix used to print the FPR; <vw> only handles 32-bit and\n64-bit elements.\n\n2019-08-07  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* config/aarch64/aarch64-sve.md (fold_extract_last_<mode>):\n\tDisparage the GPR alternative relative to the FPR one.\n\tFix handling of 8-bit and 16-bit FPR values.\n\ngcc/testsuite/\n\t* gcc.target/aarch64/sve/clastb_8.c: New test.\n\nFrom-SVN: r274191", "tree": {"sha": "35bd16b516b6402219f067fbb2d825df2c4a1859", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35bd16b516b6402219f067fbb2d825df2c4a1859"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/801790b37ca817089ecbae214340162e6d94ea6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/801790b37ca817089ecbae214340162e6d94ea6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/801790b37ca817089ecbae214340162e6d94ea6a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/801790b37ca817089ecbae214340162e6d94ea6a/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b0760a40bef3ca690691bf5d214da95b5dc25266", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0760a40bef3ca690691bf5d214da95b5dc25266", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0760a40bef3ca690691bf5d214da95b5dc25266"}], "stats": {"total": 39, "additions": 37, "deletions": 2}, "files": [{"sha": "31cbd59c4b67bf03f9079f1f738bacc5b69b71d4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/801790b37ca817089ecbae214340162e6d94ea6a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/801790b37ca817089ecbae214340162e6d94ea6a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=801790b37ca817089ecbae214340162e6d94ea6a", "patch": "@@ -1,3 +1,9 @@\n+2019-08-07  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/aarch64/aarch64-sve.md (fold_extract_last_<mode>):\n+\tDisparage the GPR alternative relative to the FPR one.\n+\tFix handling of 8-bit and 16-bit FPR values.\n+\n 2019-08-07  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* config/aarch64/iterators.md (BITWISEV): Delete."}, {"sha": "41c92a01babcd1dc5b0decb6e132d329b78710d3", "filename": "gcc/config/aarch64/aarch64-sve.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/801790b37ca817089ecbae214340162e6d94ea6a/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/801790b37ca817089ecbae214340162e6d94ea6a/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md?ref=801790b37ca817089ecbae214340162e6d94ea6a", "patch": "@@ -3104,7 +3104,7 @@\n ;; Set operand 0 to the last active element in operand 3, or to tied\n ;; operand 1 if no elements are active.\n (define_insn \"fold_extract_last_<mode>\"\n-  [(set (match_operand:<VEL> 0 \"register_operand\" \"=r, w\")\n+  [(set (match_operand:<VEL> 0 \"register_operand\" \"=?r, w\")\n \t(unspec:<VEL>\n \t  [(match_operand:<VEL> 1 \"register_operand\" \"0, 0\")\n \t   (match_operand:<VPRED> 2 \"register_operand\" \"Upl, Upl\")\n@@ -3113,7 +3113,7 @@\n   \"TARGET_SVE\"\n   \"@\n    clastb\\t%<vwcore>0, %2, %<vwcore>0, %3.<Vetype>\n-   clastb\\t%<vw>0, %2, %<vw>0, %3.<Vetype>\"\n+   clastb\\t%<Vetype>0, %2, %<Vetype>0, %3.<Vetype>\"\n )\n \n ;; -------------------------------------------------------------------------"}, {"sha": "dd37b72aedae5de731e3e8ff4bcb342d87a41b98", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/801790b37ca817089ecbae214340162e6d94ea6a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/801790b37ca817089ecbae214340162e6d94ea6a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=801790b37ca817089ecbae214340162e6d94ea6a", "patch": "@@ -1,3 +1,7 @@\n+2019-08-07  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gcc.target/aarch64/sve/clastb_8.c: New test.\n+\n 2019-08-07  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n \n \tPR target/91385"}, {"sha": "d86a428a7fa2575f080a6ea7232a55098738eb66", "filename": "gcc/testsuite/gcc.target/aarch64/sve/clastb_8.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/801790b37ca817089ecbae214340162e6d94ea6a/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fclastb_8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/801790b37ca817089ecbae214340162e6d94ea6a/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fclastb_8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fclastb_8.c?ref=801790b37ca817089ecbae214340162e6d94ea6a", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do assemble { target aarch64_asm_sve_ok } } */\n+/* { dg-options \"-O2 -ftree-vectorize -msve-vector-bits=256 --save-temps\" } */\n+\n+#include <stdint.h>\n+\n+#define TEST_TYPE(TYPE) \\\n+  void \\\n+  test_##TYPE (TYPE *ptr, TYPE *a, TYPE *b, TYPE min_v) \\\n+  { \\\n+    TYPE last = *ptr; \\\n+    for (int i = 0; i < 1024; i++) \\\n+      if (a[i] < min_v) \\\n+\tlast = b[i]; \\\n+    *ptr = last; \\\n+  }\n+\n+TEST_TYPE (uint8_t);\n+TEST_TYPE (uint16_t);\n+TEST_TYPE (uint32_t);\n+TEST_TYPE (uint64_t);\n+\n+/* { dg-final { scan-assembler {\\tclastb\\t(b[0-9]+), p[0-7], \\1, z[0-9]+\\.b\\n} } } */\n+/* { dg-final { scan-assembler {\\tclastb\\t(h[0-9]+), p[0-7], \\1, z[0-9]+\\.h\\n} } } */\n+/* { dg-final { scan-assembler {\\tclastb\\t(s[0-9]+), p[0-7], \\1, z[0-9]+\\.s\\n} } } */\n+/* { dg-final { scan-assembler {\\tclastb\\t(d[0-9]+), p[0-7], \\1, z[0-9]+\\.d\\n} } } */"}]}