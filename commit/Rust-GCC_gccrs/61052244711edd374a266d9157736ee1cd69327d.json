{"sha": "61052244711edd374a266d9157736ee1cd69327d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjEwNTIyNDQ3MTFlZGQzNzRhMjY2ZDkxNTc3MzZlZTFjZDY5MzI3ZA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2011-01-31T00:44:10Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2011-01-31T00:44:10Z"}, "message": "rs6000.c (print_operand): Rearrange addends in toc relative expressions as we do in print_operand_address.\n\n\t* config/rs6000/rs6000.c (print_operand): Rearrange addends in\n\ttoc relative expressions as we do in print_operand_address.\n\nFrom-SVN: r169427", "tree": {"sha": "727cd2e27b25f2c094ff66d942df22297f9173f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/727cd2e27b25f2c094ff66d942df22297f9173f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61052244711edd374a266d9157736ee1cd69327d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61052244711edd374a266d9157736ee1cd69327d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61052244711edd374a266d9157736ee1cd69327d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61052244711edd374a266d9157736ee1cd69327d/comments", "author": null, "committer": null, "parents": [{"sha": "9594f433f6f730385ad6904a61e2cf14da797641", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9594f433f6f730385ad6904a61e2cf14da797641", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9594f433f6f730385ad6904a61e2cf14da797641"}], "stats": {"total": 48, "additions": 32, "deletions": 16}, "files": [{"sha": "cc5d34bbe10ccfe67a13dfc96a89c56228bc0c1a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 14, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61052244711edd374a266d9157736ee1cd69327d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61052244711edd374a266d9157736ee1cd69327d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=61052244711edd374a266d9157736ee1cd69327d", "patch": "@@ -1,3 +1,8 @@\n+2011-01-31  Alan Modra  <amodra@gmail.com>\n+\n+\t* config/rs6000/rs6000.c (print_operand): Rearrange addends in\n+\ttoc relative expressions as we do in print_operand_address.\n+\n 2011-01-30  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* doc/extend.texi: Follow spelling conventions.\n@@ -9,7 +14,7 @@\n \t* config.gcc (hppa*64*-*-hpux11*, hppa[12]*-*-hpux11*,\n \tia64*-*-hpux*): Use hpux11.opt.\n \n-2011-01-30  Jonathan Yong <jon_y@users.sourceforge.net> \n+2011-01-30  Jonathan Yong <jon_y@users.sourceforge.net>\n \n \t* config.gcc (i[34567]86-*-pe | i[34567]86-*-cygwin*): Add t-dfprules\n \tto tmake_file.\n@@ -25,7 +30,7 @@\n \tMotorola 68HC11/68HC12 downloads.\n \n 2011-01-30  Gerald Pfeifer  <gerald@pfeifer.com>\n-\t\n+\n \t* doc/extend.texi (Thread-Local): Adjust reference to Ulrich\n \tDrepper's paper.\n \n@@ -218,8 +223,8 @@\n 2011-01-26  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/47190\n-\t * cgraphunit.c (process_common_attributes): New function.\n-        (process_function_and_variable_attributes): Use it.\n+\t* cgraphunit.c (process_common_attributes): New function.\n+\t(process_function_and_variable_attributes): Use it.\n \n 2011-01-26  Richard Guenther  <rguenther@suse.de>\n \n@@ -917,10 +922,10 @@\n \n \tPR c++/47291\n \t* dwarf2out.c (generic_type_p, schedule_generic_params_dies_gen)\n-    \t(gen_scheduled_generic_parms_dies): New functions.\n-    \t(gen_struct_or_union_type_die): Schedule template parameters DIEs\n-    \tgeneration for the end of CU compilation.\n-    \t(dwarf2out_finish): Generate template parameters DIEs here.\n+\t(gen_scheduled_generic_parms_dies): New functions.\n+\t(gen_struct_or_union_type_die): Schedule template parameters DIEs\n+\tgeneration for the end of CU compilation.\n+\t(dwarf2out_finish): Generate template parameters DIEs here.\n \n 2011-01-19  Alexandre Oliva  <aoliva@redhat.com>\n \n@@ -1253,9 +1258,9 @@\n \n 2011-01-18  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n-        * config/arm/cortex-a9.md (cortex-a9-neon.md): Actually\n-        include.\n-        (cortex_a9_dp): Handle neon types correctly.\n+\t* config/arm/cortex-a9.md (cortex-a9-neon.md): Actually\n+\tinclude.\n+\t(cortex_a9_dp): Handle neon types correctly.\n \n 2011-01-18  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -1429,8 +1434,8 @@\n \t(avx_maskstore<ssemodesuffix><avxmodesuffix>): Likewise.\n \n 2011-01-17  Olivier Hainque  <hainque@adacore.com>\n-            Michael Haubenwallner  <michael.haubenwallner@salomon.at>\n-            Eric Botcazou  <ebotcazou@adacore.com>\n+\t    Michael Haubenwallner  <michael.haubenwallner@salomon.at>\n+\t    Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR target/46655\n \t* xcoffout.c (ASM_OUTPUT_LINE): Output line only if positive, and only\n@@ -1706,7 +1711,7 @@\n \tPR debug/PR46973\n \t* dwarf2out.c (prune_unused_types_mark_generic_parms_dies): New\n \tstatic function.\n-    \t(prune_unused_types_mark): Use it.\n+\t(prune_unused_types_mark): Use it.\n \n 2011-01-13  Andrey Belevantsev  <abel@ispras.ru>\n "}, {"sha": "c5e45fb70be55aa536e8c893387edf420ffa40ee", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61052244711edd374a266d9157736ee1cd69327d/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61052244711edd374a266d9157736ee1cd69327d/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=61052244711edd374a266d9157736ee1cd69327d", "patch": "@@ -1,6 +1,6 @@\n /* Subroutines used for code generation on IBM RS/6000.\n    Copyright (C) 1991, 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n-   2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n+   2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n    Free Software Foundation, Inc.\n    Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n \n@@ -16182,7 +16182,18 @@ print_operand (FILE *file, rtx x, int code)\n \t    output_address (XEXP (x, 0));\n \t}\n       else\n-\toutput_addr_const (file, x);\n+\t{\n+\t  if (toc_relative_expr_p (x))\n+\t    /* This hack along with a corresponding hack in\n+\t       rs6000_output_addr_const_extra arranges to output addends\n+\t       where the assembler expects to find them.  eg.\n+\t       (const (plus (unspec [symbol_ref (\"x\") tocrel]) 4))\n+\t       without this hack would be output as \"x@toc+4\".  We\n+\t       want \"x+4@toc\".  */\n+\t    output_addr_const (file, tocrel_base);\n+\t  else\n+\t    output_addr_const (file, x);\n+\t}\n       return;\n \n     case '&':"}]}