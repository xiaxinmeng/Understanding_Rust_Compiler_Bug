{"sha": "f5d4b3fbf62a4c49d5951fc7848127af32876b78", "node_id": "C_kwDOANBUbNoAKGY1ZDRiM2ZiZjYyYTRjNDlkNTk1MWZjNzg0ODEyN2FmMzI4NzZiNzg", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2021-08-13T16:32:53Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-10-01T06:13:39Z"}, "message": "[Ada] Document rounding mode assumed for dynamic floating-point computations\n\ngcc/ada/\n\n\t* doc/gnat_rm/implementation_defined_characteristics.rst: Document\n\tthe rounding mode assumed for dynamic computations as per 3.5.7(16).\n\t* gnat_rm.texi: Regenerate.", "tree": {"sha": "8f8e48ad0c6fc50d8fe5655a15cd9c5702b7f156", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f8e48ad0c6fc50d8fe5655a15cd9c5702b7f156"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5d4b3fbf62a4c49d5951fc7848127af32876b78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5d4b3fbf62a4c49d5951fc7848127af32876b78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5d4b3fbf62a4c49d5951fc7848127af32876b78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5d4b3fbf62a4c49d5951fc7848127af32876b78/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f561db7ca1fba70a90c3ff9f7682b7841585258", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f561db7ca1fba70a90c3ff9f7682b7841585258", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f561db7ca1fba70a90c3ff9f7682b7841585258"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "c5c7dfb9fbc4307460c5ab6f4510b97c07ad1607", "filename": "gcc/ada/doc/gnat_rm/implementation_defined_characteristics.rst", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5d4b3fbf62a4c49d5951fc7848127af32876b78/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_characteristics.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5d4b3fbf62a4c49d5951fc7848127af32876b78/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_characteristics.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_characteristics.rst?ref=f5d4b3fbf62a4c49d5951fc7848127af32876b78", "patch": "@@ -147,12 +147,12 @@ Type                   Representation\n                        IEEE 80-bit Extended on x86 architecture\n ====================== ===============================================\n \n-The default rounding mode specified by the IEEE 754 Standard is assumed for\n-static computations, i.e. round to nearest, ties to even. The input routines\n-yield correctly rounded values for Short_Float, Float and Long_Float at least.\n-The output routines can compute up to twice as many exact digits as the value\n-of ``T'Digits`` for any type, for example 30 digits for Long_Float; if more\n-digits are requested, zeros are printed.\n+The default rounding mode specified by the IEEE 754 Standard is assumed both\n+for static and dynamic computations (that is, round to nearest, ties to even).\n+The input routines yield correctly rounded values for Short_Float, Float, and\n+Long_Float at least. The output routines can compute up to twice as many exact\n+digits as the value of ``T'Digits`` for any type, for example 30 digits for\n+Long_Float; if more digits are requested, zeros are printed.\n \n *\n   \"The small of an ordinary fixed point type.  See 3.5.9(8).\""}, {"sha": "55783786749037b68db7689c25f76330d82ed00e", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5d4b3fbf62a4c49d5951fc7848127af32876b78/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5d4b3fbf62a4c49d5951fc7848127af32876b78/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=f5d4b3fbf62a4c49d5951fc7848127af32876b78", "patch": "@@ -21,7 +21,7 @@\n \n @copying\n @quotation\n-GNAT Reference Manual , Aug 03, 2021\n+GNAT Reference Manual , Sep 28, 2021\n \n AdaCore\n \n@@ -15939,12 +15939,12 @@ IEEE 80-bit Extended on x86 architecture\n @end multitable\n \n \n-The default rounding mode specified by the IEEE 754 Standard is assumed for\n-static computations, i.e. round to nearest, ties to even. The input routines\n-yield correctly rounded values for Short_Float, Float and Long_Float at least.\n-The output routines can compute up to twice as many exact digits as the value\n-of @code{T'Digits} for any type, for example 30 digits for Long_Float; if more\n-digits are requested, zeros are printed.\n+The default rounding mode specified by the IEEE 754 Standard is assumed both\n+for static and dynamic computations (that is, round to nearest, ties to even).\n+The input routines yield correctly rounded values for Short_Float, Float, and\n+Long_Float at least. The output routines can compute up to twice as many exact\n+digits as the value of @code{T'Digits} for any type, for example 30 digits for\n+Long_Float; if more digits are requested, zeros are printed.\n \n \n @itemize *"}]}