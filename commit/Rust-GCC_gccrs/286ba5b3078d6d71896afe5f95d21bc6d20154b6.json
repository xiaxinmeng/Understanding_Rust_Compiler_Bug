{"sha": "286ba5b3078d6d71896afe5f95d21bc6d20154b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjg2YmE1YjMwNzhkNmQ3MTg5NmFmZTVmOTVkMjFiYzZkMjAxNTRiNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-11-17T20:58:52Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-11-17T20:58:52Z"}, "message": "re PR middle-end/38140 (ice for C code with -O2)\n\n\tPR middle-end/38140\n\t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): If\n\tpropagating x = &a into *x = b, add a cast if not useless\n\ttype conversion or don't optimize if another stmt would be\n\tneeded.\n\n\t* gcc.dg/pr38140.c: New test.\n\nFrom-SVN: r141949", "tree": {"sha": "2fda85eef94cf204f819a91ac43fc189c8adafb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2fda85eef94cf204f819a91ac43fc189c8adafb3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/286ba5b3078d6d71896afe5f95d21bc6d20154b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/286ba5b3078d6d71896afe5f95d21bc6d20154b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/286ba5b3078d6d71896afe5f95d21bc6d20154b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/286ba5b3078d6d71896afe5f95d21bc6d20154b6/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5ef87778f1d3f5b25a82fd313911c4a376974c07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ef87778f1d3f5b25a82fd313911c4a376974c07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ef87778f1d3f5b25a82fd313911c4a376974c07"}], "stats": {"total": 50, "additions": 44, "deletions": 6}, "files": [{"sha": "ff382751044eb88cb75d9fb3bb3d72f9280e8fac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/286ba5b3078d6d71896afe5f95d21bc6d20154b6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/286ba5b3078d6d71896afe5f95d21bc6d20154b6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=286ba5b3078d6d71896afe5f95d21bc6d20154b6", "patch": "@@ -1,3 +1,11 @@\n+2008-11-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/38140\n+\t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): If\n+\tpropagating x = &a into *x = b, add a cast if not useless\n+\ttype conversion or don't optimize if another stmt would be\n+\tneeded.\n+\n 2008-11-17  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR middle-end/37908"}, {"sha": "00b7cef14427ab630fe9b767a8271dd4a8ab8db3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/286ba5b3078d6d71896afe5f95d21bc6d20154b6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/286ba5b3078d6d71896afe5f95d21bc6d20154b6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=286ba5b3078d6d71896afe5f95d21bc6d20154b6", "patch": "@@ -1,3 +1,8 @@\n+2008-11-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/38140\n+\t* gcc.dg/pr38140.c: New test.\n+\n 2008-11-17  Jack Howarth  <howarth@bromo.med.uc.edu>\n         \n         PR testsuite/38099"}, {"sha": "35f6010089ef020aac0f3f5676ea8a506b8eac80", "filename": "gcc/testsuite/gcc.dg/pr38140.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/286ba5b3078d6d71896afe5f95d21bc6d20154b6/gcc%2Ftestsuite%2Fgcc.dg%2Fpr38140.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/286ba5b3078d6d71896afe5f95d21bc6d20154b6/gcc%2Ftestsuite%2Fgcc.dg%2Fpr38140.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr38140.c?ref=286ba5b3078d6d71896afe5f95d21bc6d20154b6", "patch": "@@ -0,0 +1,10 @@\n+/* PR middle-end/38140 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fno-strict-aliasing\" } */\n+\n+int foo (void *x)\n+{\n+  int (*fn) (int);\n+  *(void **)&fn = x;\n+  return fn (6);\n+}"}, {"sha": "333ef8284737fb2106928321ec22eadcd26fc9b7", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 21, "deletions": 6, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/286ba5b3078d6d71896afe5f95d21bc6d20154b6/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/286ba5b3078d6d71896afe5f95d21bc6d20154b6/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=286ba5b3078d6d71896afe5f95d21bc6d20154b6", "patch": "@@ -721,13 +721,28 @@ forward_propagate_addr_expr_1 (tree name, tree def_rhs,\n       && TREE_OPERAND (lhs, 0) == name\n       && may_propagate_address_into_dereference (def_rhs, lhs))\n     {\n-      *lhsp = unshare_expr (TREE_OPERAND (def_rhs, 0));\n-      fold_stmt_inplace (use_stmt);\n-      tidy_after_forward_propagate_addr (use_stmt);\n+      bool valid = true;\n+      if (lhsp == gimple_assign_lhs_ptr (use_stmt)\n+\t  && !useless_type_conversion_p (TREE_TYPE (TREE_OPERAND (def_rhs, 0)),\n+\t\t\t\t\t TREE_TYPE (rhs))\n+\t  && !CONVERT_EXPR_CODE_P (rhs_code))\n+\t{\n+\t  if (rhs_code == SSA_NAME)\n+\t    gimple_assign_set_rhs_code (use_stmt, NOP_EXPR);\n+\t  else\n+\t    valid = false;\n+\t}\n+      if (valid)\n+\t{\n+\t  *lhsp = unshare_expr (TREE_OPERAND (def_rhs, 0));\n+\t  fold_stmt_inplace (use_stmt);\n+\t  tidy_after_forward_propagate_addr (use_stmt);\n \n-      /* Continue propagating into the RHS if this was not the only use.  */\n-      if (single_use_p)\n-\treturn true;\n+\t  /* Continue propagating into the RHS if this was not the only\n+\t     use.  */\n+\t  if (single_use_p)\n+\t    return true;\n+\t}\n     }\n \n   /* Strip away any outer COMPONENT_REF, ARRAY_REF or ADDR_EXPR"}]}