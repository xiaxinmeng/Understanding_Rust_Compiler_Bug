{"sha": "43f4447e6cff88a79d3e0f7a05f01fbbc4d03cda", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNmNDQ0N2U2Y2ZmODhhNzlkM2UwZjdhMDVmMDFmYmJjNGQwM2NkYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2012-10-01T23:57:05Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2012-10-01T23:57:05Z"}, "message": "cp-tree.h (TYPE_FUNCTION_OR_TEMPLATE_DECL_CHECK): New.\n\n\t* cp-tree.h (TYPE_FUNCTION_OR_TEMPLATE_DECL_CHECK): New.\n\t(DECL_FRIEND_P, DECL_ANTICIPATED): Use it.\n\t(TYPE_FUNCTION_OR_TEMPLATE_DECL_P): New.\n\t* name-lookup.c (hidden_name_p): Use it.\n\nFrom-SVN: r191946", "tree": {"sha": "c71ae01e382b42cb1e6d1a75fc7824f4947a2c2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c71ae01e382b42cb1e6d1a75fc7824f4947a2c2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43f4447e6cff88a79d3e0f7a05f01fbbc4d03cda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43f4447e6cff88a79d3e0f7a05f01fbbc4d03cda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43f4447e6cff88a79d3e0f7a05f01fbbc4d03cda", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43f4447e6cff88a79d3e0f7a05f01fbbc4d03cda/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fe230d3c7d6c49eb06b3a8b5fb90d3d3ef7ad18c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe230d3c7d6c49eb06b3a8b5fb90d3d3ef7ad18c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe230d3c7d6c49eb06b3a8b5fb90d3d3ef7ad18c"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "487841a365ea83b095886fb96c0bd3dc76639726", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43f4447e6cff88a79d3e0f7a05f01fbbc4d03cda/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43f4447e6cff88a79d3e0f7a05f01fbbc4d03cda/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=43f4447e6cff88a79d3e0f7a05f01fbbc4d03cda", "patch": "@@ -1,5 +1,10 @@\n 2012-10-01  Jason Merrill  <jason@redhat.com>\n \n+\t* cp-tree.h (TYPE_FUNCTION_OR_TEMPLATE_DECL_CHECK): New.\n+\t(DECL_FRIEND_P, DECL_ANTICIPATED): Use it.\n+\t(TYPE_FUNCTION_OR_TEMPLATE_DECL_P): New.\n+\t* name-lookup.c (hidden_name_p): Use it.\n+\n \t* cp-tree.h (DECL_PRETTY_FUNCTION_P): Just look at the name.\n \t* decl.c (cp_make_fname_decl): Adjust.\n "}, {"sha": "e4f3761802e0baac464263554730ede75b615fcc", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43f4447e6cff88a79d3e0f7a05f01fbbc4d03cda/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43f4447e6cff88a79d3e0f7a05f01fbbc4d03cda/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=43f4447e6cff88a79d3e0f7a05f01fbbc4d03cda", "patch": "@@ -202,6 +202,13 @@ c-common.h, not after.\n #define VAR_OR_FUNCTION_DECL_CHECK(NODE) \\\n   TREE_CHECK2(NODE,VAR_DECL,FUNCTION_DECL)\n \n+#define TYPE_FUNCTION_OR_TEMPLATE_DECL_CHECK(NODE) \\\n+  TREE_CHECK3(NODE,TYPE_DECL,TEMPLATE_DECL,FUNCTION_DECL)\n+\n+#define TYPE_FUNCTION_OR_TEMPLATE_DECL_P(NODE) \\\n+  (TREE_CODE (NODE) == TYPE_DECL || TREE_CODE (NODE) == TEMPLATE_DECL \\\n+   || TREE_CODE (NODE) == FUNCTION_DECL)\n+\n #define VAR_FUNCTION_OR_PARM_DECL_CHECK(NODE) \\\n   TREE_CHECK3(NODE,VAR_DECL,FUNCTION_DECL,PARM_DECL)\n \n@@ -1875,8 +1882,8 @@ struct GTY(()) lang_decl_base {\n   unsigned initialized_in_class : 1;\t   /* var or fn */\n   unsigned repo_available_p : 1;\t   /* var or fn */\n   unsigned threadprivate_or_deleted_p : 1; /* var or fn */\n-  unsigned anticipated_p : 1;\t\t   /* fn or type */\n-  unsigned friend_attr : 1;\t\t   /* fn or type */\n+  unsigned anticipated_p : 1;\t\t   /* fn, type or template */\n+  unsigned friend_attr : 1;\t\t   /* fn, type or template */\n   unsigned template_conv_p : 1;\t\t   /* var or template */\n   unsigned odr_used : 1;\t\t   /* var or fn */\n   unsigned u2sel : 1;\n@@ -2293,7 +2300,9 @@ struct GTY((variable_size)) lang_decl {\n \n /* Nonzero for DECL means that this decl is just a friend declaration,\n    and should not be added to the list of members for this class.  */\n-#define DECL_FRIEND_P(NODE) (DECL_LANG_SPECIFIC (NODE)->u.base.friend_attr)\n+#define DECL_FRIEND_P(NODE) \\\n+  (DECL_LANG_SPECIFIC (TYPE_FUNCTION_OR_TEMPLATE_DECL_CHECK (NODE)) \\\n+   ->u.base.friend_attr)\n \n /* A TREE_LIST of the types which have befriended this FUNCTION_DECL.  */\n #define DECL_BEFRIENDING_CLASSES(NODE) \\\n@@ -3101,7 +3110,8 @@ more_aggr_init_expr_args_p (const aggr_init_expr_arg_iterator *iter)\n    declared inside a class.  In the latter case DECL_HIDDEN_FRIEND_P\n    will be set.  */\n #define DECL_ANTICIPATED(NODE) \\\n-  (DECL_LANG_SPECIFIC (DECL_COMMON_CHECK (NODE))->u.base.anticipated_p)\n+  (DECL_LANG_SPECIFIC (TYPE_FUNCTION_OR_TEMPLATE_DECL_CHECK (NODE)) \\\n+   ->u.base.anticipated_p)\n \n /* Nonzero if NODE is a FUNCTION_DECL which was declared as a friend\n    within a class but has not been declared in the surrounding scope."}, {"sha": "cd328b31c721b3948d4e25f62fb0a206ff161e41", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43f4447e6cff88a79d3e0f7a05f01fbbc4d03cda/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43f4447e6cff88a79d3e0f7a05f01fbbc4d03cda/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=43f4447e6cff88a79d3e0f7a05f01fbbc4d03cda", "patch": "@@ -4174,6 +4174,7 @@ hidden_name_p (tree val)\n {\n   if (DECL_P (val)\n       && DECL_LANG_SPECIFIC (val)\n+      && TYPE_FUNCTION_OR_TEMPLATE_DECL_P (val)\n       && DECL_ANTICIPATED (val))\n     return true;\n   return false;"}]}