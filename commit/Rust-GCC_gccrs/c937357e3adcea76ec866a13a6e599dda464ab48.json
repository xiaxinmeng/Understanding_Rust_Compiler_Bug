{"sha": "c937357e3adcea76ec866a13a6e599dda464ab48", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzkzNzM1N2UzYWRjZWE3NmVjODY2YTEzYTZlNTk5ZGRhNDY0YWI0OA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-07-24T22:20:55Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-07-24T22:20:55Z"}, "message": "(emit_move_insn_1): For complex stack push, don't use change_address.\n\nFrom-SVN: r4983", "tree": {"sha": "704b1fdacb764ba695b83413ae9f09b6763645d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/704b1fdacb764ba695b83413ae9f09b6763645d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c937357e3adcea76ec866a13a6e599dda464ab48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c937357e3adcea76ec866a13a6e599dda464ab48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c937357e3adcea76ec866a13a6e599dda464ab48", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c937357e3adcea76ec866a13a6e599dda464ab48/comments", "author": null, "committer": null, "parents": [{"sha": "255fccf375d17bd035295dff96cf29116a4b2b79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/255fccf375d17bd035295dff96cf29116a4b2b79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/255fccf375d17bd035295dff96cf29116a4b2b79"}], "stats": {"total": 33, "additions": 25, "deletions": 8}, "files": [{"sha": "b3addecc7892e261cc9b44fbc37780ccebbf4478", "filename": "gcc/expr.c", "status": "modified", "additions": 25, "deletions": 8, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c937357e3adcea76ec866a13a6e599dda464ab48/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c937357e3adcea76ec866a13a6e599dda464ab48/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=c937357e3adcea76ec866a13a6e599dda464ab48", "patch": "@@ -1648,14 +1648,31 @@ emit_move_insn_1 (x, y)\n \n \t In that case, change_address is used only to convert\n \t the mode, not to change the address.  */\n-      emit_insn (GEN_FCN (mov_optab->handlers[(int) submode].insn_code)\n-\t\t ((stack ? change_address (x, submode, (rtx) 0)\n-\t\t   : gen_highpart (submode, x)),\n-\t\t  gen_highpart (submode, y)));\n-      emit_insn (GEN_FCN (mov_optab->handlers[(int) submode].insn_code)\n-\t\t ((stack ? change_address (x, submode, (rtx) 0)\n-\t\t   : gen_lowpart (submode, x)),\n-\t\t  gen_lowpart (submode, y)));\n+      if (stack)\n+\t{\n+#ifdef STACK_GROWS_DOWNWARD\n+\t  emit_insn (GEN_FCN (mov_optab->handlers[(int) submode].insn_code)\n+\t\t     (gen_rtx (MEM, submode, (XEXP (x, 0))),\n+\t\t      gen_highpart (submode, y)));\n+\t  emit_insn (GEN_FCN (mov_optab->handlers[(int) submode].insn_code)\n+\t\t     (gen_rtx (MEM, submode, (XEXP (x, 0))),\n+\t\t      gen_lowpart (submode, y)));\n+#else\n+\t  emit_insn (GEN_FCN (mov_optab->handlers[(int) submode].insn_code)\n+\t\t     (gen_rtx (MEM, submode, (XEXP (x, 0))),\n+\t\t      gen_lowpart (submode, y)));\n+\t  emit_insn (GEN_FCN (mov_optab->handlers[(int) submode].insn_code)\n+\t\t     (gen_rtx (MEM, submode, (XEXP (x, 0))),\n+\t\t      gen_highpart (submode, y)));\n+#endif\n+\t}\n+      else\n+\t{\n+\t  emit_insn (GEN_FCN (mov_optab->handlers[(int) submode].insn_code)\n+\t\t     (gen_highpart (submode, x), gen_highpart (submode, y)));\n+\t  emit_insn (GEN_FCN (mov_optab->handlers[(int) submode].insn_code)\n+\t\t     (gen_lowpart (submode, x), gen_lowpart (submode, y)));\n+\t}\n \n       group_insns (prev);\n "}]}