{"sha": "3e8b04461f0106f74256a92df8aae1fd88e086c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2U4YjA0NDYxZjAxMDZmNzQyNTZhOTJkZjhhYWUxZmQ4OGUwODZjNg==", "commit": {"author": {"name": "Zdenek Dvorak", "email": "dvorakz@suse.cz", "date": "2006-02-13T11:21:23Z"}, "committer": {"name": "Zdenek Dvorak", "email": "rakdver@gcc.gnu.org", "date": "2006-02-13T11:21:23Z"}, "message": "re PR rtl-optimization/26222 (build failuring in libjava)\n\n\tPR rtl-optimization/26222\n\t* function.c (assign_stack_temp_for_type): Do not reuse stack slots\n\tafter tree->rtl expansion.\n\t* loop-invariant.c (move_invariant_reg): Use force_operand on rhs\n\tbefore passing it to emit_move_insn.\n\nFrom-SVN: r110912", "tree": {"sha": "934621970c423e615e444a8421dba6db457cfcfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/934621970c423e615e444a8421dba6db457cfcfb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e8b04461f0106f74256a92df8aae1fd88e086c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e8b04461f0106f74256a92df8aae1fd88e086c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e8b04461f0106f74256a92df8aae1fd88e086c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e8b04461f0106f74256a92df8aae1fd88e086c6/comments", "author": null, "committer": null, "parents": [{"sha": "28c84d634e56c98a867970eb62ce1224556ba7e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28c84d634e56c98a867970eb62ce1224556ba7e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28c84d634e56c98a867970eb62ce1224556ba7e1"}], "stats": {"total": 51, "additions": 37, "deletions": 14}, "files": [{"sha": "c8144ace31490d876bf86e704404782ab6721314", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e8b04461f0106f74256a92df8aae1fd88e086c6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e8b04461f0106f74256a92df8aae1fd88e086c6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3e8b04461f0106f74256a92df8aae1fd88e086c6", "patch": "@@ -1,3 +1,11 @@\n+2006-02-12  Zdenek Dvorak <dvorakz@suse.cz>\n+\n+\tPR rtl-optimization/26222\n+\t* function.c (assign_stack_temp_for_type): Do not reuse stack slots\n+\tafter tree->rtl expansion.\n+\t* loop-invariant.c (move_invariant_reg): Use force_operand on rhs\n+\tbefore passing it to emit_move_insn.\n+\n 2006-02-12  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* doc/invoke.texi (-Write-strings): Document that it is enabled by"}, {"sha": "00a673ac4bd801264f171e3bbedad74b7641fbef", "filename": "gcc/function.c", "status": "modified", "additions": 20, "deletions": 12, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e8b04461f0106f74256a92df8aae1fd88e086c6/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e8b04461f0106f74256a92df8aae1fd88e086c6/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=3e8b04461f0106f74256a92df8aae1fd88e086c6", "patch": "@@ -625,22 +625,30 @@ assign_stack_temp_for_type (enum machine_mode mode, HOST_WIDE_INT size,\n \n   /* Try to find an available, already-allocated temporary of the proper\n      mode which meets the size and alignment requirements.  Choose the\n-     smallest one with the closest alignment.  */\n-  for (p = avail_temp_slots; p; p = p->next)\n+     smallest one with the closest alignment.\n+   \n+     If assign_stack_temp is called outside of the tree->rtl expansion,\n+     we cannot reuse the stack slots (that may still refer to\n+     VIRTUAL_STACK_VARS_REGNUM).  */\n+  if (!virtuals_instantiated)\n     {\n-      if (p->align >= align && p->size >= size && GET_MODE (p->slot) == mode\n-\t  && objects_must_conflict_p (p->type, type)\n-\t  && (best_p == 0 || best_p->size > p->size\n-\t      || (best_p->size == p->size && best_p->align > p->align)))\n+      for (p = avail_temp_slots; p; p = p->next)\n \t{\n-\t  if (p->align == align && p->size == size)\n+\t  if (p->align >= align && p->size >= size\n+\t      && GET_MODE (p->slot) == mode\n+\t      && objects_must_conflict_p (p->type, type)\n+\t      && (best_p == 0 || best_p->size > p->size\n+\t\t  || (best_p->size == p->size && best_p->align > p->align)))\n \t    {\n-\t      selected = p;\n-\t      cut_slot_from_list (selected, &avail_temp_slots);\n-\t      best_p = 0;\n-\t      break;\n+\t      if (p->align == align && p->size == size)\n+\t\t{\n+\t\t  selected = p;\n+\t\t  cut_slot_from_list (selected, &avail_temp_slots);\n+\t\t  best_p = 0;\n+\t\t  break;\n+\t\t}\n+\t      best_p = p;\n \t    }\n-\t  best_p = p;\n \t}\n     }\n "}, {"sha": "eb6719e7f9bec0c108a09427b7cf3a893c45c920", "filename": "gcc/loop-invariant.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e8b04461f0106f74256a92df8aae1fd88e086c6/gcc%2Floop-invariant.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e8b04461f0106f74256a92df8aae1fd88e086c6/gcc%2Floop-invariant.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-invariant.c?ref=3e8b04461f0106f74256a92df8aae1fd88e086c6", "patch": "@@ -1075,7 +1075,7 @@ move_invariant_reg (struct loop *loop, unsigned invno)\n   struct invariant *repr = VEC_index (invariant_p, invariants, inv->eqto);\n   unsigned i;\n   basic_block preheader = loop_preheader_edge (loop)->src;\n-  rtx reg, set;\n+  rtx reg, set, seq, op;\n   struct use *use;\n   bitmap_iterator bi;\n \n@@ -1115,7 +1115,14 @@ move_invariant_reg (struct loop *loop, unsigned invno)\n \t}\n       else\n \t{\n-\t  emit_insn_after (gen_move_insn (reg, SET_SRC (set)), BB_END (preheader));\n+\t  start_sequence ();\n+\t  op = force_operand (SET_SRC (set), reg);\n+\t  if (op != reg)\n+\t    emit_move_insn (reg, op);\n+\t  seq = get_insns ();\n+\t  end_sequence ();\n+\n+\t  emit_insn_after (seq, BB_END (preheader));\n \t  delete_insn (inv->insn);\n \t}\n     }"}]}