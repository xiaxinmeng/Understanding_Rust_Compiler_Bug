{"sha": "37645e2cd752e2dddcf52d70dc20eadda3e44171", "node_id": "C_kwDOANBUbNoAKDM3NjQ1ZTJjZDc1MmUyZGRkY2Y1MmQ3MGRjMjBlYWRkYTNlNDQxNzE", "commit": {"author": {"name": "Steve Baird", "email": "baird@adacore.com", "date": "2022-09-12T22:31:19Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-09-26T09:02:30Z"}, "message": "ada: Improve CUDA host-side and device-side binder support\n\nBinder-generated code is not allowed to use Ada2012 syntax. In order to\nspecify an aspect, a pragma must be used.\n\ngcc/ada/\n\n\t* bindgen.adb: When the binder is invoked for the device, specify\n\tthe CUDA_Global aspect for the adainit and adafinal procedures via\n\ta pragma instead of via an aspect_specification.", "tree": {"sha": "9a230bb9fd2405a1dbf5bb037e6667f3dc73acd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a230bb9fd2405a1dbf5bb037e6667f3dc73acd2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37645e2cd752e2dddcf52d70dc20eadda3e44171", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37645e2cd752e2dddcf52d70dc20eadda3e44171", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37645e2cd752e2dddcf52d70dc20eadda3e44171", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37645e2cd752e2dddcf52d70dc20eadda3e44171/comments", "author": {"login": "swbaird", "id": 50751052, "node_id": "MDQ6VXNlcjUwNzUxMDUy", "avatar_url": "https://avatars.githubusercontent.com/u/50751052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swbaird", "html_url": "https://github.com/swbaird", "followers_url": "https://api.github.com/users/swbaird/followers", "following_url": "https://api.github.com/users/swbaird/following{/other_user}", "gists_url": "https://api.github.com/users/swbaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/swbaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swbaird/subscriptions", "organizations_url": "https://api.github.com/users/swbaird/orgs", "repos_url": "https://api.github.com/users/swbaird/repos", "events_url": "https://api.github.com/users/swbaird/events{/privacy}", "received_events_url": "https://api.github.com/users/swbaird/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b8e3ee10fb7c15a79ebb8739a1fca3b2a62c706", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b8e3ee10fb7c15a79ebb8739a1fca3b2a62c706", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b8e3ee10fb7c15a79ebb8739a1fca3b2a62c706"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "f2aaa2dea92005170cab5dfadbefc83915f03ed6", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37645e2cd752e2dddcf52d70dc20eadda3e44171/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37645e2cd752e2dddcf52d70dc20eadda3e44171/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=37645e2cd752e2dddcf52d70dc20eadda3e44171", "patch": "@@ -134,9 +134,6 @@ package body Bindgen is\n    --  Text for aspect specifications (if any) given as part of the\n    --  Adainit and Adafinal spec declarations.\n \n-   function Aspect_Text return String is\n-     (if Enable_CUDA_Device_Expansion then \" with CUDA_Global\" else \"\");\n-\n    ----------------------------------\n    -- Interface_State Pragma Table --\n    ----------------------------------\n@@ -2644,10 +2641,11 @@ package body Bindgen is\n       end if;\n \n       WBI (\"\");\n-      WBI (\"   procedure \" & Ada_Init_Name.all & Aspect_Text & \";\");\n+      WBI (\"   procedure \" & Ada_Init_Name.all & \";\");\n       if Enable_CUDA_Device_Expansion then\n          WBI (\"   pragma Export (C, \" & Ada_Init_Name.all &\n                 \", Link_Name => \"\"\" & Device_Ada_Init_Link_Name & \"\"\");\");\n+         WBI (\"   pragma CUDA_Global (\" & Ada_Init_Name.all & \");\");\n       else\n          WBI (\"   pragma Export (C, \" & Ada_Init_Name.all & \", \"\"\" &\n               Ada_Init_Name.all & \"\"\");\");\n@@ -2662,11 +2660,12 @@ package body Bindgen is\n \n       if not Cumulative_Restrictions.Set (No_Finalization) then\n          WBI (\"\");\n-         WBI (\"   procedure \" & Ada_Final_Name.all & Aspect_Text & \";\");\n+         WBI (\"   procedure \" & Ada_Final_Name.all & \";\");\n \n          if Enable_CUDA_Device_Expansion then\n             WBI (\"   pragma Export (C, \" & Ada_Final_Name.all &\n                    \", Link_Name => \"\"\" & Device_Ada_Final_Link_Name & \"\"\");\");\n+            WBI (\"   pragma CUDA_Global (\" & Ada_Final_Name.all & \");\");\n          else\n             WBI (\"   pragma Export (C, \" & Ada_Final_Name.all & \", \"\"\" &\n                  Ada_Final_Name.all & \"\"\");\");"}]}