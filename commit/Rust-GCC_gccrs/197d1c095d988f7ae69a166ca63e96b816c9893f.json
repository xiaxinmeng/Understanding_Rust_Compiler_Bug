{"sha": "197d1c095d988f7ae69a166ca63e96b816c9893f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk3ZDFjMDk1ZDk4OGY3YWU2OWExNjZjYTYzZTk2YjgxNmM5ODkzZg==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2017-01-19T16:59:43Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2017-01-19T16:59:43Z"}, "message": "[AArch64] Purge leftover occurrences of aarch64_nopcrelative_literal_loads\n\n\t* config/aarch64/aarch64-protos.h (aarch64_nopcrelative_literal_loads):\n\tDelete.\n\t* config/aarch64/aarch64.md\n\t(aarch64_reload_movcp<GPF_TF:mode><P:mode>): Delete reference to\n\taarch64_nopcrelative_literal_loads.\n\t(aarch64_reload_movcp<VALL:mode><P:mode>): Likewise.\n\nFrom-SVN: r244643", "tree": {"sha": "2526dc72a75dd356fe5d9452a2dbb557bb03785a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2526dc72a75dd356fe5d9452a2dbb557bb03785a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/197d1c095d988f7ae69a166ca63e96b816c9893f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/197d1c095d988f7ae69a166ca63e96b816c9893f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/197d1c095d988f7ae69a166ca63e96b816c9893f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/197d1c095d988f7ae69a166ca63e96b816c9893f/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8c05647c56bf099ac483ea0e8de99f61c1baa11a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c05647c56bf099ac483ea0e8de99f61c1baa11a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c05647c56bf099ac483ea0e8de99f61c1baa11a"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "7438335c82c46b8def9e1f302887c4ddb5456dbe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/197d1c095d988f7ae69a166ca63e96b816c9893f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/197d1c095d988f7ae69a166ca63e96b816c9893f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=197d1c095d988f7ae69a166ca63e96b816c9893f", "patch": "@@ -1,3 +1,12 @@\n+2016-01-19  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/aarch64-protos.h (aarch64_nopcrelative_literal_loads):\n+\tDelete.\n+\t* config/aarch64/aarch64.md\n+\t(aarch64_reload_movcp<GPF_TF:mode><P:mode>): Delete reference to\n+\taarch64_nopcrelative_literal_loads.\n+\t(aarch64_reload_movcp<VALL:mode><P:mode>): Likewise.\n+\n 2017-01-19  Chenghua Xu  <paul.hua.gm@gmail.com>\n \n \t* config/mips/mips.h (ISA_HAS_FUSED_MADD4): Enable for"}, {"sha": "8c4380b5953f3ec10b0fdbe654cbb69ecb044679", "filename": "gcc/config/aarch64/aarch64-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/197d1c095d988f7ae69a166ca63e96b816c9893f/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/197d1c095d988f7ae69a166ca63e96b816c9893f/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h?ref=197d1c095d988f7ae69a166ca63e96b816c9893f", "patch": "@@ -453,7 +453,6 @@ int aarch64_ccmp_mode_to_code (enum machine_mode mode);\n bool extract_base_offset_in_addr (rtx mem, rtx *base, rtx *offset);\n bool aarch64_operands_ok_for_ldpstp (rtx *, bool, enum machine_mode);\n bool aarch64_operands_adjust_ok_for_ldpstp (rtx *, bool, enum machine_mode);\n-extern bool aarch64_nopcrelative_literal_loads;\n \n extern void aarch64_asm_output_pool_epilogue (FILE *, const char *,\n \t\t\t\t\t      tree, HOST_WIDE_INT);"}, {"sha": "a3be2b999c86177b47c628cc8b472eea672773f2", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/197d1c095d988f7ae69a166ca63e96b816c9893f/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/197d1c095d988f7ae69a166ca63e96b816c9893f/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=197d1c095d988f7ae69a166ca63e96b816c9893f", "patch": "@@ -5006,7 +5006,7 @@\n  [(set (match_operand:GPF_TF 0 \"register_operand\" \"=w\")\n        (mem:GPF_TF (match_operand 1 \"aarch64_constant_pool_symref\" \"S\")))\n   (clobber (match_operand:P 2 \"register_operand\" \"=&r\"))]\n- \"TARGET_FLOAT && aarch64_nopcrelative_literal_loads\"\n+ \"TARGET_FLOAT\"\n  {\n    aarch64_expand_mov_immediate (operands[2], XEXP (operands[1], 0));\n    emit_move_insn (operands[0], gen_rtx_MEM (<GPF_TF:MODE>mode, operands[2]));\n@@ -5019,7 +5019,7 @@\n  [(set (match_operand:VALL 0 \"register_operand\" \"=w\")\n        (mem:VALL (match_operand 1 \"aarch64_constant_pool_symref\" \"S\")))\n   (clobber (match_operand:P 2 \"register_operand\" \"=&r\"))]\n- \"TARGET_FLOAT && aarch64_nopcrelative_literal_loads\"\n+ \"TARGET_FLOAT\"\n  {\n    aarch64_expand_mov_immediate (operands[2], XEXP (operands[1], 0));\n    emit_move_insn (operands[0], gen_rtx_MEM (<VALL:MODE>mode, operands[2]));"}]}