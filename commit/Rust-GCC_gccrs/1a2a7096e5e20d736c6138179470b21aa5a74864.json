{"sha": "1a2a7096e5e20d736c6138179470b21aa5a74864", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWEyYTcwOTZlNWUyMGQ3MzZjNjEzODE3OTQ3MGIyMWFhNWE3NDg2NA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-02-19T08:38:52Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-02-19T13:20:24Z"}, "message": "middle-end/99122 - more VLA inlining fixes\n\nThis avoids declaring a function with VLA arguments or return values\nas inlineable.  IPA CP still ICEs, so the testcase has that disabled.\n\n2021-02-19  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/99122\n\t* tree-inline.c (inline_forbidden_p): Do not inline functions\n\twith VLA arguments or return value.\n\n\t* gcc.dg/pr99122-3.c: New testcase.", "tree": {"sha": "f7d3cbfeef170dce8f20c78ac5b770671ebf5545", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f7d3cbfeef170dce8f20c78ac5b770671ebf5545"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a2a7096e5e20d736c6138179470b21aa5a74864", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a2a7096e5e20d736c6138179470b21aa5a74864", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a2a7096e5e20d736c6138179470b21aa5a74864", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a2a7096e5e20d736c6138179470b21aa5a74864/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a132c4d7cdb22cbab85b8596418daa2c3157812", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a132c4d7cdb22cbab85b8596418daa2c3157812", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a132c4d7cdb22cbab85b8596418daa2c3157812"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "6aa5b2912ca685956ff8e4df3186212d94cd5478", "filename": "gcc/testsuite/gcc.dg/pr99122-3.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a2a7096e5e20d736c6138179470b21aa5a74864/gcc%2Ftestsuite%2Fgcc.dg%2Fpr99122-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a2a7096e5e20d736c6138179470b21aa5a74864/gcc%2Ftestsuite%2Fgcc.dg%2Fpr99122-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr99122-3.c?ref=1a2a7096e5e20d736c6138179470b21aa5a74864", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -g -fno-ipa-cp -w\" } */\n+\n+static int foo ();\n+\n+int\n+bar (int n)\n+{\n+  return foo (n, 2.0);\n+}\n+\n+static inline int\n+foo (int n, struct T { char a[n]; } b)\n+{\n+  int r = 0, i;\n+  for (i = 0; i < n; i++)\n+    r += b.a[i];\n+  return r;\n+}"}, {"sha": "c993b1fee8abe45a9e8004815adef0d61259cb97", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a2a7096e5e20d736c6138179470b21aa5a74864/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a2a7096e5e20d736c6138179470b21aa5a74864/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=1a2a7096e5e20d736c6138179470b21aa5a74864", "patch": "@@ -4022,6 +4022,16 @@ inline_forbidden_p (tree fndecl)\n   wi.info = (void *) fndecl;\n   wi.pset = &visited_nodes;\n \n+  /* We cannot inline a function with a VLA typed argument or result since\n+     we have no implementation materializing a variable of such type in\n+     the caller.  */\n+  if (COMPLETE_TYPE_P (TREE_TYPE (TREE_TYPE (fndecl)))\n+      && !poly_int_tree_p (TYPE_SIZE (TREE_TYPE (TREE_TYPE (fndecl)))))\n+    return true;\n+  for (tree parm = DECL_ARGUMENTS (fndecl); parm; parm = DECL_CHAIN (parm))\n+    if (!poly_int_tree_p (DECL_SIZE (parm)))\n+      return true;\n+\n   FOR_EACH_BB_FN (bb, fun)\n     {\n       gimple *ret;"}]}