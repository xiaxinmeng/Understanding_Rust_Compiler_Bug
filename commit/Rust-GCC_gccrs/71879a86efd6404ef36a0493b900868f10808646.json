{"sha": "71879a86efd6404ef36a0493b900868f10808646", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzE4NzlhODZlZmQ2NDA0ZWYzNmEwNDkzYjkwMDg2OGYxMDgwODY0Ng==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2013-04-04T11:24:15Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-04-04T11:24:15Z"}, "message": "re PR libfortran/56810 (record-repeat fails kind check on complex read)\n\n2013-04-04  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/56810\n        * io/list_read.c (check_type): Fix kind checking for COMPLEX.\n\n2013-04-04  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/56810\n        * gfortran.dg/read_repeat_2.f90: New.\n\nFrom-SVN: r197479", "tree": {"sha": "df5329c928c8cf6fa8d1e32ec60361ab9daeeac9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df5329c928c8cf6fa8d1e32ec60361ab9daeeac9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71879a86efd6404ef36a0493b900868f10808646", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71879a86efd6404ef36a0493b900868f10808646", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71879a86efd6404ef36a0493b900868f10808646", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71879a86efd6404ef36a0493b900868f10808646/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f1bf4f3afb21fdb807c050693ac9da523e64f2a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1bf4f3afb21fdb807c050693ac9da523e64f2a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1bf4f3afb21fdb807c050693ac9da523e64f2a4"}], "stats": {"total": 38, "additions": 35, "deletions": 3}, "files": [{"sha": "0c63f99b5275f156436e20eb746e25afe47171b0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71879a86efd6404ef36a0493b900868f10808646/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71879a86efd6404ef36a0493b900868f10808646/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=71879a86efd6404ef36a0493b900868f10808646", "patch": "@@ -1,3 +1,8 @@\n+2013-04-04  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/56810\n+\t* gfortran.dg/read_repeat_2.f90: New.\n+\n 2013-04-04  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/56837"}, {"sha": "4b8659e5f344736556a25b449c8e6596c412f10c", "filename": "gcc/testsuite/gfortran.dg/read_repeat_2.f90", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71879a86efd6404ef36a0493b900868f10808646/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_repeat_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71879a86efd6404ef36a0493b900868f10808646/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_repeat_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_repeat_2.f90?ref=71879a86efd6404ef36a0493b900868f10808646", "patch": "@@ -0,0 +1,19 @@\n+! { dg-do run }\n+!\n+! PR fortran/56810\n+!\n+! Contributed by Jonathan Hogg\n+!\n+program test\n+   implicit none\n+\n+   integer :: i\n+   complex :: a(4)\n+\n+   open (99, status='scratch')\n+   write (99, *) '4*(1.0,2.0)'\n+   rewind (99)\n+   read (99,*) a(:)\n+   close (99)\n+   if (any (a /= cmplx (1.0,2.0))) call abort()\n+end program test"}, {"sha": "a963d45d2f1db960c0d6f6b799e7f217cfb48437", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71879a86efd6404ef36a0493b900868f10808646/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71879a86efd6404ef36a0493b900868f10808646/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=71879a86efd6404ef36a0493b900868f10808646", "patch": "@@ -1,3 +1,8 @@\n+2013-04-04  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/56810\n+\t* io/list_read.c (check_type): Fix kind checking for COMPLEX.\n+\n 2013-04-01  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libfortran/56660"}, {"sha": "b29fdcd23067806822513a218ed6237f22adc9d1", "filename": "libgfortran/io/list_read.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71879a86efd6404ef36a0493b900868f10808646/libgfortran%2Fio%2Flist_read.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71879a86efd6404ef36a0493b900868f10808646/libgfortran%2Fio%2Flist_read.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Flist_read.c?ref=71879a86efd6404ef36a0493b900868f10808646", "patch": "@@ -1784,7 +1784,7 @@ read_real (st_parameter_dt *dtp, void * dest, int length)\n    compatible.  Returns nonzero if incompatible.  */\n \n static int\n-check_type (st_parameter_dt *dtp, bt type, int len)\n+check_type (st_parameter_dt *dtp, bt type, int kind)\n {\n   char message[MSGLEN];\n \n@@ -1801,11 +1801,14 @@ check_type (st_parameter_dt *dtp, bt type, int len)\n   if (dtp->u.p.saved_type == BT_UNKNOWN || dtp->u.p.saved_type == BT_CHARACTER)\n     return 0;\n \n-  if (dtp->u.p.saved_length != len)\n+  if ((type != BT_COMPLEX && dtp->u.p.saved_length != kind)\n+      || (type == BT_COMPLEX && dtp->u.p.saved_length != kind*2))\n     {\n       snprintf (message, MSGLEN,\n \t\t  \"Read kind %d %s where kind %d is required for item %d\",\n-\t\t  dtp->u.p.saved_length, type_name (dtp->u.p.saved_type), len,\n+\t\t  type == BT_COMPLEX ? dtp->u.p.saved_length / 2\n+\t\t\t\t     : dtp->u.p.saved_length,\n+\t\t  type_name (dtp->u.p.saved_type), kind,\n \t\t  dtp->u.p.item_count);\n       generate_error (&dtp->common, LIBERROR_READ_VALUE, message);\n       return 1;"}]}