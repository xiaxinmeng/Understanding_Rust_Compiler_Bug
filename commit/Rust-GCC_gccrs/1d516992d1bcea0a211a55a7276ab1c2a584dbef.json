{"sha": "1d516992d1bcea0a211a55a7276ab1c2a584dbef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQ1MTY5OTJkMWJjZWEwYTIxMWE1NWE3Mjc2YWIxYzJhNTg0ZGJlZg==", "commit": {"author": {"name": "Julia Koval", "email": "julia.koval@intel.com", "date": "2017-02-17T18:11:28Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-02-17T18:11:28Z"}, "message": "i386-common.c (OPTION_MASK_ISA_RDPID_SET): New.\n\n\t* common/config/i386/i386-common.c (OPTION_MASK_ISA_RDPID_SET): New.\n\t(OPTION_MASK_ISA_PKU_UNSET): New.\n\t(ix86_handle_option): Handle -mrdpid.\n\t* config/i386/cpuid.h (bit_RDPID): New.\n\t* config/i386/driver-i386.c (host_detect_local_cpu):\n\tDetect RDPID feature.\n\t* config/i386/i386-builtin.def (__builtin_ia32_rdpid): New.\n\t* config/i386/i386-c.c (ix86_target_macros_internal):\n\tHandle RDPID flag.\n\t* config/i386/i386.c (ix86_target_string): Add -mrdpid to isa2_opts.\n\t(ix86_valid_target_attribute_inner_p): Add \"rdpid\".\n\t(ix86_expand_builtin): Handle IX86_BUILTIN_RDPID.\n\t* config/i386/i386.h (TARGET_RDPID, TARGET_RDPID_P): New.\n\t* config/i386/i386.md (define_insn \"rdpid\"): New.\n\t* config/i386/i386.opt Add -mrdpid.\n\t* config/i386/immintrin.h (_rdpid_u32): New.\n\ntestsuite/ChangeLog:\n\n\t* gcc.target/i386/rdpid.c New test.\n\t* gcc.target/i386/sse-12.c: Add -mrdpid.\n\t* gcc.target/i386/sse-13.c: Ditto.\n\t* gcc.target/i386/sse-14.c: Ditto.\n\t* gcc.target/i386/sse-22.c: Ditto.\n\t* gcc.target/i386/sse-23.c: Ditto.\n\t* g++.dg/other/i386-2.C: Ditto.\n\t* g++.dg/other/i386-3.C: Ditto.\n\nFrom-SVN: r245540", "tree": {"sha": "7fdcb34f7e0655cbe85cba0d75d7c6365419d1e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7fdcb34f7e0655cbe85cba0d75d7c6365419d1e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d516992d1bcea0a211a55a7276ab1c2a584dbef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d516992d1bcea0a211a55a7276ab1c2a584dbef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d516992d1bcea0a211a55a7276ab1c2a584dbef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d516992d1bcea0a211a55a7276ab1c2a584dbef/comments", "author": {"login": "vaalfreja", "id": 5216345, "node_id": "MDQ6VXNlcjUyMTYzNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5216345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vaalfreja", "html_url": "https://github.com/vaalfreja", "followers_url": "https://api.github.com/users/vaalfreja/followers", "following_url": "https://api.github.com/users/vaalfreja/following{/other_user}", "gists_url": "https://api.github.com/users/vaalfreja/gists{/gist_id}", "starred_url": "https://api.github.com/users/vaalfreja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vaalfreja/subscriptions", "organizations_url": "https://api.github.com/users/vaalfreja/orgs", "repos_url": "https://api.github.com/users/vaalfreja/repos", "events_url": "https://api.github.com/users/vaalfreja/events{/privacy}", "received_events_url": "https://api.github.com/users/vaalfreja/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1ee2604721c1e6b926d6c28aa4b4d42c6e85332f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ee2604721c1e6b926d6c28aa4b4d42c6e85332f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ee2604721c1e6b926d6c28aa4b4d42c6e85332f"}], "stats": {"total": 123, "additions": 113, "deletions": 10}, "files": [{"sha": "10eda1e4cff44a8d602f1aff08f541cc070566a7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1d516992d1bcea0a211a55a7276ab1c2a584dbef", "patch": "@@ -1,3 +1,22 @@\n+2017-02-17  Julia Koval  <julia.koval@intel.com>\n+\n+\t* common/config/i386/i386-common.c (OPTION_MASK_ISA_RDPID_SET): New.\n+\t(OPTION_MASK_ISA_PKU_UNSET): New.\n+\t(ix86_handle_option): Handle -mrdpid.\n+\t* config/i386/cpuid.h (bit_RDPID): New.\n+\t* config/i386/driver-i386.c (host_detect_local_cpu):\n+\tDetect RDPID feature.\n+\t* config/i386/i386-builtin.def (__builtin_ia32_rdpid): New.\n+\t* config/i386/i386-c.c (ix86_target_macros_internal):\n+\tHandle RDPID flag.\n+\t* config/i386/i386.c (ix86_target_string): Add -mrdpid to isa2_opts.\n+\t(ix86_valid_target_attribute_inner_p): Add \"rdpid\".\n+\t(ix86_expand_builtin): Handle IX86_BUILTIN_RDPID.\n+\t* config/i386/i386.h (TARGET_RDPID, TARGET_RDPID_P): New.\n+\t* config/i386/i386.md (define_insn \"rdpid\"): New.\n+\t* config/i386/i386.opt Add -mrdpid.\n+\t* config/i386/immintrin.h (_rdpid_u32): New.\n+\n 2017-02-17  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-optimization/79541"}, {"sha": "8284a311d25376caf0cba817a79e1afcb939ca62", "filename": "gcc/common/config/i386/i386-common.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c?ref=1d516992d1bcea0a211a55a7276ab1c2a584dbef", "patch": "@@ -134,6 +134,7 @@ along with GCC; see the file COPYING3.  If not see\n #define OPTION_MASK_ISA_MWAITX_SET OPTION_MASK_ISA_MWAITX\n #define OPTION_MASK_ISA_CLZERO_SET OPTION_MASK_ISA_CLZERO\n #define OPTION_MASK_ISA_PKU_SET OPTION_MASK_ISA_PKU\n+#define OPTION_MASK_ISA_RDPID_SET OPTION_MASK_ISA_RDPID\n \n /* Define a set of ISAs which aren't available when a given ISA is\n    disabled.  MMX and SSE ISAs are handled separately.  */\n@@ -198,6 +199,7 @@ along with GCC; see the file COPYING3.  If not see\n #define OPTION_MASK_ISA_MWAITX_UNSET OPTION_MASK_ISA_MWAITX\n #define OPTION_MASK_ISA_CLZERO_UNSET OPTION_MASK_ISA_CLZERO\n #define OPTION_MASK_ISA_PKU_UNSET OPTION_MASK_ISA_PKU\n+#define OPTION_MASK_ISA_RDPID_UNSET OPTION_MASK_ISA_RDPID\n \n /* SSE4 includes both SSE4.1 and SSE4.2.  -mno-sse4 should the same\n    as -mno-sse4.1. */\n@@ -457,6 +459,19 @@ ix86_handle_option (struct gcc_options *opts,\n \t}\n       return true;\n \n+    case OPT_mrdpid:\n+      if (value)\n+\t{\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_RDPID_SET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_RDPID_SET;\n+\t}\n+      else\n+\t{\n+\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA_RDPID_UNSET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_RDPID_UNSET;\n+\t}\n+      return true;\n+\n     case OPT_mavx5124fmaps:\n       if (value)\n \t{"}, {"sha": "41901c0f3a8042ab2471058bc2a1a667a93a792b", "filename": "gcc/config/i386/cpuid.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Fconfig%2Fi386%2Fcpuid.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Fconfig%2Fi386%2Fcpuid.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcpuid.h?ref=1d516992d1bcea0a211a55a7276ab1c2a584dbef", "patch": "@@ -98,6 +98,7 @@\n #define bit_PKU\t(1 << 3)\n #define bit_OSPKE\t(1 << 4)\n #define bit_AVX512VPOPCNTDQ\t(1 << 14)\n+#define bit_RDPID\t(1 << 22)\n \n /* %edx */\n #define bit_AVX5124VNNIW (1 << 2)"}, {"sha": "6c81251423950efbae7e7486a39438f8aa8e0a59", "filename": "gcc/config/i386/driver-i386.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdriver-i386.c?ref=1d516992d1bcea0a211a55a7276ab1c2a584dbef", "patch": "@@ -413,7 +413,7 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n   unsigned int has_clflushopt = 0, has_xsavec = 0, has_xsaves = 0;\n   unsigned int has_avx512dq = 0, has_avx512bw = 0, has_avx512vl = 0;\n   unsigned int has_avx512vbmi = 0, has_avx512ifma = 0, has_clwb = 0;\n-  unsigned int has_mwaitx = 0, has_clzero = 0, has_pku = 0;\n+  unsigned int has_mwaitx = 0, has_clzero = 0, has_pku = 0, has_rdpid = 0;\n   unsigned int has_avx5124fmaps = 0, has_avx5124vnniw = 0;\n \n   bool arch;\n@@ -503,6 +503,8 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n       has_prefetchwt1 = ecx & bit_PREFETCHWT1;\n       has_avx512vbmi = ecx & bit_AVX512VBMI;\n       has_pku = ecx & bit_OSPKE;\n+      has_rdpid = ecx & bit_RDPID;\n+\n       has_avx5124vnniw = edx & bit_AVX5124VNNIW;\n       has_avx5124fmaps = edx & bit_AVX5124FMAPS;\n     }\n@@ -1032,6 +1034,7 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n       const char *mwaitx  = has_mwaitx  ? \" -mmwaitx\"  : \" -mno-mwaitx\"; \n       const char *clzero  = has_clzero  ? \" -mclzero\"  : \" -mno-clzero\";\n       const char *pku = has_pku ? \" -mpku\" : \" -mno-pku\";\n+      const char *rdpid = has_rdpid ? \" -mrdpid\" : \" -mno-rdpid\";\n       options = concat (options, mmx, mmx3dnow, sse, sse2, sse3, ssse3,\n \t\t\tsse4a, cx16, sahf, movbe, aes, sha, pclmul,\n \t\t\tpopcnt, abm, lwp, fma, fma4, xop, bmi, sgx, bmi2,\n@@ -1041,7 +1044,7 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n \t\t\tavx512cd, avx512pf, prefetchwt1, clflushopt,\n \t\t\txsavec, xsaves, avx512dq, avx512bw, avx512vl,\n \t\t\tavx512ifma, avx512vbmi, avx5124fmaps, avx5124vnniw,\n-\t\t\tclwb, mwaitx, clzero, pku, NULL);\n+\t\t\tclwb, mwaitx, clzero, pku, rdpid, NULL);\n     }\n \n done:"}, {"sha": "4b9442decd1c40ad4430b21527896166770569dc", "filename": "gcc/config/i386/i386-builtin.def", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtin.def?ref=1d516992d1bcea0a211a55a7276ab1c2a584dbef", "patch": "@@ -2555,6 +2555,9 @@ BDESC (OPTION_MASK_ISA_AVX512VPOPCNTDQ, CODE_FOR_vpopcountv16si_mask, \"__builtin\n BDESC (OPTION_MASK_ISA_AVX512VPOPCNTDQ, CODE_FOR_vpopcountv8di, \"__builtin_ia32_vpopcountq_v8di\", IX86_BUILTIN_VPOPCOUNTQV8DI, UNKNOWN, (int) V8DI_FTYPE_V8DI)\n BDESC (OPTION_MASK_ISA_AVX512VPOPCNTDQ, CODE_FOR_vpopcountv8di_mask, \"__builtin_ia32_vpopcountq_v8di_mask\", IX86_BUILTIN_VPOPCOUNTQV8DI_MASK, UNKNOWN, (int) V8DI_FTYPE_V8DI_V8DI_UQI)\n \n+/* RDPID */\n+BDESC (OPTION_MASK_ISA_RDPID, CODE_FOR_rdpid, \"__builtin_ia32_rdpid\", IX86_BUILTIN_RDPID, UNKNOWN, (int) UNSIGNED_FTYPE_VOID)\n+\n BDESC_END (ARGS2, MPX)\n \n /* Builtins for MPX.  */"}, {"sha": "9a79a215bec1cef06b61b73a659781e925a8d308", "filename": "gcc/config/i386/i386-c.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Fconfig%2Fi386%2Fi386-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Fconfig%2Fi386%2Fi386-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-c.c?ref=1d516992d1bcea0a211a55a7276ab1c2a584dbef", "patch": "@@ -448,6 +448,8 @@ ix86_target_macros_internal (HOST_WIDE_INT isa_flag,\n     def_or_undef (parse_in, \"__MWAITX__\");\n   if (isa_flag & OPTION_MASK_ISA_PKU)\n     def_or_undef (parse_in, \"__PKU__\");\n+  if (isa_flag2 & OPTION_MASK_ISA_RDPID)\n+    def_or_undef (parse_in, \"__RDPID__\");\n   if (TARGET_IAMCU)\n     {\n       def_or_undef (parse_in, \"__iamcu\");"}, {"sha": "a1c084f1b8f74a76e53adbcb478d85f31490461c", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=1d516992d1bcea0a211a55a7276ab1c2a584dbef", "patch": "@@ -4281,6 +4281,7 @@ ix86_target_string (HOST_WIDE_INT isa, HOST_WIDE_INT isa2,\n      ISAs come first.  Target string will be displayed in the same order.  */\n   static struct ix86_target_opts isa2_opts[] =\n   {\n+    { \"-mrdpid\",\tOPTION_MASK_ISA_RDPID },\n     { \"-msgx\",\t\tOPTION_MASK_ISA_SGX },\n     { \"-mavx5124vnniw\", OPTION_MASK_ISA_AVX5124VNNIW },\n     { \"-mavx5124fmaps\", OPTION_MASK_ISA_AVX5124FMAPS },\n@@ -4348,6 +4349,7 @@ ix86_target_string (HOST_WIDE_INT isa, HOST_WIDE_INT isa2,\n     { \"-mmpx\",\t\tOPTION_MASK_ISA_MPX },\n     { \"-mclwb\",\t\tOPTION_MASK_ISA_CLWB }\n   };\n+\n   /* Flag options.  */\n   static struct ix86_target_opts flag_opts[] =\n   {\n@@ -6711,6 +6713,7 @@ ix86_valid_target_attribute_inner_p (tree args, char *p_strings[],\n     IX86_ATTR_ISA (\"fxsr\",\tOPT_mfxsr),\n     IX86_ATTR_ISA (\"mpx\",\tOPT_mmpx),\n     IX86_ATTR_ISA (\"clwb\",\tOPT_mclwb),\n+    IX86_ATTR_ISA (\"rdpid\",\tOPT_mrdpid),\n \n     /* enum options */\n     IX86_ATTR_ENUM (\"fpmath=\",\tOPT_mfpmath_),\n@@ -38689,6 +38692,9 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget,\n \t\t}\n \t      return target;\n \t    }\n+\t    case IX86_BUILTIN_RDPID:\n+\t      return ix86_expand_special_args_builtin (bdesc_args2 + i, exp,\n+\t\t\t\t\t\t     target);\n \t  default:\n \t    return ix86_expand_args_builtin (bdesc_args2 + i, exp, target);\n \t  }"}, {"sha": "9e5f4d857d9c027e5da74deee4f7d285f0ae6d10", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=1d516992d1bcea0a211a55a7276ab1c2a584dbef", "patch": "@@ -102,6 +102,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define TARGET_ABM_P(x)\tTARGET_ISA_ABM_P(x)\n #define TARGET_SGX\tTARGET_ISA_SGX\n #define TARGET_SGX_P(x)\tTARGET_ISA_SGX_P(x)\n+#define TARGET_RDPID\tTARGET_ISA_RDPID\n+#define TARGET_RDPID_P(x)\tTARGET_ISA_RDPID_P(x)\n #define TARGET_BMI\tTARGET_ISA_BMI\n #define TARGET_BMI_P(x)\tTARGET_ISA_BMI_P(x)\n #define TARGET_BMI2\tTARGET_ISA_BMI2\n@@ -167,7 +169,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define TARGET_PKU\tTARGET_ISA_PKU\n #define TARGET_PKU_P(x)\tTARGET_ISA_PKU_P(x)\n \n-\n #define TARGET_LP64\tTARGET_ABI_64\n #define TARGET_LP64_P(x)\tTARGET_ABI_64_P(x)\n #define TARGET_X32\tTARGET_ABI_X32"}, {"sha": "cfbe0b050b578937c17655405cca58b0317a877d", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=1d516992d1bcea0a211a55a7276ab1c2a584dbef", "patch": "@@ -273,6 +273,9 @@\n \n   ;; For RDPKRU and WRPKRU support\n   UNSPECV_PKU\n+\n+  ;; For RDPID support\n+  UNSPECV_RDPID\n ])\n \n ;; Constants to represent rounding modes in the ROUND instruction\n@@ -19535,6 +19538,13 @@\n   \"wrpkru\"\n   [(set_attr \"type\" \"other\")])\n \n+(define_insn \"rdpid\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(unspec_volatile:SI [(const_int 0)] UNSPECV_RDPID))]\n+  \"TARGET_RDPID\"\n+  \"rdpid\\t%0\"\n+  [(set_attr \"type\" \"other\")])\n+\n (include \"mmx.md\")\n (include \"sse.md\")\n (include \"sync.md\")"}, {"sha": "b3b961cc3ca3cdd250d73adf68757a59691db0cd", "filename": "gcc/config/i386/i386.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Fconfig%2Fi386%2Fi386.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Fconfig%2Fi386%2Fi386.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.opt?ref=1d516992d1bcea0a211a55a7276ab1c2a584dbef", "patch": "@@ -741,6 +741,10 @@ msgx\n Target Report Mask(ISA_SGX) Var(ix86_isa_flags2) Save\n Support SGX built-in functions and code generation.\n \n+mrdpid\n+Target Report Mask(ISA_RDPID) Var(ix86_isa_flags2) Save\n+Support RDPID built-in functions and code generation.\n+\n mbmi\n Target Report Mask(ISA_BMI) Var(ix86_isa_flags) Save\n Support BMI built-in functions and code generation."}, {"sha": "b52f58efa405d9e6ab407e350bbfc7a602583b77", "filename": "gcc/config/i386/immintrin.h", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Fconfig%2Fi386%2Fimmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Fconfig%2Fi386%2Fimmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fimmintrin.h?ref=1d516992d1bcea0a211a55a7276ab1c2a584dbef", "patch": "@@ -113,6 +113,22 @@ _rdrand32_step (unsigned int *__P)\n #pragma GCC pop_options\n #endif /* __DISABLE_RDRND__ */\n \n+#ifndef __RDPID__\n+#pragma GCC push_options\n+#pragma GCC target(\"rdpid\")\n+#define __DISABLE_RDPID__\n+#endif /* __RDPID__ */\n+extern __inline unsigned int\n+__attribute__((__gnu_inline__, __always_inline__, __artificial__))\n+_rdpid_u32 (void)\n+{\n+  return __builtin_ia32_rdpid ();\n+}\n+#ifdef __DISABLE_RDPID__\n+#undef __DISABLE_RDPID__\n+#pragma GCC pop_options\n+#endif /* __DISABLE_RDPID__ */\n+\n #ifdef  __x86_64__\n \n #ifndef __FSGSBASE__"}, {"sha": "159f84fda7f17c78d4a722c2383392595037ccb4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1d516992d1bcea0a211a55a7276ab1c2a584dbef", "patch": "@@ -1,3 +1,14 @@\n+2017-02-17  Julia Koval  <julia.koval@intel.com>\n+\n+\t* gcc.target/i386/rdpid.c New test.\n+\t* gcc.target/i386/sse-12.c: Add -mrdpid.\n+\t* gcc.target/i386/sse-13.c: Ditto.\n+\t* gcc.target/i386/sse-14.c: Ditto.\n+\t* gcc.target/i386/sse-22.c: Ditto.\n+\t* gcc.target/i386/sse-23.c: Ditto.\n+\t* g++.dg/other/i386-2.C: Ditto.\n+\t* g++.dg/other/i386-3.C: Ditto.\n+\n 2017-02-17  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* gcc.dg/pr59833.c: Add -fsignaling-nans to options."}, {"sha": "63c5f738baace3fe22c085226aac15611d7291d0", "filename": "gcc/testsuite/g++.dg/other/i386-2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-2.C?ref=1d516992d1bcea0a211a55a7276ab1c2a584dbef", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O -pedantic-errors -march=k8 -msse4a -m3dnow -mavx -mavx2 -mfma4 -mxop -maes -mpclmul -mpopcnt -mabm -mlzcnt -mbmi -mbmi2 -mtbm -mlwp -mfsgsbase -mrdrnd -mf16c -mfma -mrtm -mrdseed -mprfchw -madx -mfxsr -mxsaveopt -mavx512f -mavx512er -mavx512cd -mavx512pf -msha -mprefetchwt1 -mxsavec -mxsaves -mclflushopt  -mavx512dq -mavx512bw -mavx512vl -mavx512ifma -mavx512vbmi -mavx5124fmaps -mavx5124vnniw -mavx512vpopcntdq -mclwb -mmwaitx -mclzero -mpku -msgx\" } */\n+/* { dg-options \"-O -pedantic-errors -march=k8 -msse4a -m3dnow -mavx -mavx2 -mfma4 -mxop -maes -mpclmul -mpopcnt -mabm -mlzcnt -mbmi -mbmi2 -mtbm -mlwp -mfsgsbase -mrdrnd -mf16c -mfma -mrtm -mrdseed -mprfchw -madx -mfxsr -mxsaveopt -mavx512f -mavx512er -mavx512cd -mavx512pf -msha -mprefetchwt1 -mxsavec -mxsaves -mclflushopt  -mavx512dq -mavx512bw -mavx512vl -mavx512ifma -mavx512vbmi -mavx5124fmaps -mavx5124vnniw -mavx512vpopcntdq -mclwb -mmwaitx -mclzero -mpku -msgx -mrdpid\" } */\n+\n \n /* Test that {,x,e,p,t,s,w,a,b,i}mmintrin.h, mm3dnow.h, fma4intrin.h,\n    xopintrin.h, abmintrin.h, bmiintrin.h, tbmintrin.h, lwpintrin.h,"}, {"sha": "16a96efe2a5bb4e4ad174a33f266be6f0d646cec", "filename": "gcc/testsuite/g++.dg/other/i386-3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-3.C?ref=1d516992d1bcea0a211a55a7276ab1c2a584dbef", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O -fkeep-inline-functions -march=k8 -msse4a -m3dnow -mavx -mavx2 -mfma4 -mxop -maes -mpclmul -mpopcnt -mabm -mlzcnt -mbmi -mbmi2 -mtbm -mlwp -mfsgsbase -mrdrnd -mf16c -mfma -mrtm -mrdseed -mprfchw -madx -mfxsr -mxsaveopt -mavx512f -mavx512er -mavx512cd -mavx512pf -msha -mprefetchwt1 -mxsavec -mxsaves -mclflushopt -mavx512dq -mavx512bw -mavx512vl -mavx512ifma -mavx512vbmi -mavx5124fmaps -mavx5124vnniw -mavx512vpopcntdq -mclwb -mmwaitx -mclzero -mpku -msgx\" } */\n+/* { dg-options \"-O -fkeep-inline-functions -march=k8 -msse4a -m3dnow -mavx -mavx2 -mfma4 -mxop -maes -mpclmul -mpopcnt -mabm -mlzcnt -mbmi -mbmi2 -mtbm -mlwp -mfsgsbase -mrdrnd -mf16c -mfma -mrtm -mrdseed -mprfchw -madx -mfxsr -mxsaveopt -mavx512f -mavx512er -mavx512cd -mavx512pf -msha -mprefetchwt1 -mxsavec -mxsaves -mclflushopt -mavx512dq -mavx512bw -mavx512vl -mavx512ifma -mavx512vbmi -mavx5124fmaps -mavx5124vnniw -mavx512vpopcntdq -mclwb -mmwaitx -mclzero -mpku -msgx -mrdpid\" } */\n \n /* Test that {,x,e,p,t,s,w,a,b,i}mmintrin.h, mm3dnow.h, fma4intrin.h,\n    xopintrin.h, abmintrin.h, bmiintrin.h, tbmintrin.h, lwpintrin.h,"}, {"sha": "33a8084c6d47d2d394bc6b6afc53583c17a3e3d4", "filename": "gcc/testsuite/gcc.target/i386/rdpid.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Frdpid.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Frdpid.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Frdpid.c?ref=1d516992d1bcea0a211a55a7276ab1c2a584dbef", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mrdpid \" } */\n+/* { dg-final { scan-assembler \"rdpid\\[ \\t]+(%|)eax\" } } */\n+\n+#include <x86intrin.h>\n+\n+unsigned int\n+read_rdpid32 (void)\n+{\n+  return _rdpid_u32 ();\n+}"}, {"sha": "b98b8b60aa7ce9504cd864acc69459092ece2bb2", "filename": "gcc/testsuite/gcc.target/i386/sse-12.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-12.c?ref=1d516992d1bcea0a211a55a7276ab1c2a584dbef", "patch": "@@ -3,7 +3,7 @@\n    popcntintrin.h and mm_malloc.h are usable\n    with -O -std=c89 -pedantic-errors.  */\n /* { dg-do compile } */\n-/* { dg-options \"-O -std=c89 -pedantic-errors -march=k8 -msse4a -m3dnow -mavx -mavx2 -mfma4 -mxop -maes -mpclmul -mpopcnt -mabm -mlzcnt -mbmi -mbmi2 -mtbm -mlwp -mfsgsbase -mrdrnd -mf16c -mfma -mrtm -mrdseed -mprfchw -madx -mfxsr -mxsaveopt -mavx512f -mavx512er -mavx512cd -mavx512pf -msha -mprefetchwt1 -mxsavec -mxsaves -mclflushopt -mavx512bw -mavx512dq -mavx512vl -mavx512vbmi -mavx512ifma -mavx5124fmaps -mavx5124vnniw -mavx512vpopcntdq -mclwb -mmwaitx -mclzero -mpku -msgx\" } */\n+/* { dg-options \"-O -std=c89 -pedantic-errors -march=k8 -msse4a -m3dnow -mavx -mavx2 -mfma4 -mxop -maes -mpclmul -mpopcnt -mabm -mlzcnt -mbmi -mbmi2 -mtbm -mlwp -mfsgsbase -mrdrnd -mf16c -mfma -mrtm -mrdseed -mprfchw -madx -mfxsr -mxsaveopt -mavx512f -mavx512er -mavx512cd -mavx512pf -msha -mprefetchwt1 -mxsavec -mxsaves -mclflushopt -mavx512bw -mavx512dq -mavx512vl -mavx512vbmi -mavx512ifma -mavx5124fmaps -mavx5124vnniw -mavx512vpopcntdq -mclwb -mmwaitx -mclzero -mpku -msgx -mrdpid\" } */\n \n #include <x86intrin.h>\n "}, {"sha": "ef207e8dcf15dbedc8582aced12668dbc4b67b2f", "filename": "gcc/testsuite/gcc.target/i386/sse-13.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-13.c?ref=1d516992d1bcea0a211a55a7276ab1c2a584dbef", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -Werror-implicit-function-declaration -march=k8 -msse4a -m3dnow -mavx -mavx2 -mfma4 -mxop -maes -mpclmul -mpopcnt -mabm -mlzcnt -mbmi -mbmi2 -mtbm -mlwp -mfsgsbase -mrdrnd -mf16c -mfma -mrtm -mrdseed -mprfchw -madx -mfxsr -mxsaveopt -mavx512f -mavx512er -mavx512cd -mavx512pf -msha -mprefetchwt1 -mxsavec -mxsaves -mclflushopt -mavx512vl -mavx512dq -mavx512bw -mavx512vbmi -mavx512ifma -mavx5124fmaps -mavx5124vnniw -mavx512vpopcntdq -mclwb -mmwaitx -mclzero -mpku -msgx\" } */\n+/* { dg-options \"-O2 -Werror-implicit-function-declaration -march=k8 -msse4a -m3dnow -mavx -mavx2 -mfma4 -mxop -maes -mpclmul -mpopcnt -mabm -mlzcnt -mbmi -mbmi2 -mtbm -mlwp -mfsgsbase -mrdrnd -mf16c -mfma -mrtm -mrdseed -mprfchw -madx -mfxsr -mxsaveopt -mavx512f -mavx512er -mavx512cd -mavx512pf -msha -mprefetchwt1 -mxsavec -mxsaves -mclflushopt -mavx512vl -mavx512dq -mavx512bw -mavx512vbmi -mavx512ifma -mavx5124fmaps -mavx5124vnniw -mavx512vpopcntdq -mclwb -mmwaitx -mclzero -mpku -msgx -mrdpid\" } */\n /* { dg-add-options bind_pic_locally } */\n \n #include <mm_malloc.h>"}, {"sha": "fe628e57179d4e3d0776e58965c47234b10729ff", "filename": "gcc/testsuite/gcc.target/i386/sse-14.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-14.c?ref=1d516992d1bcea0a211a55a7276ab1c2a584dbef", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O0 -Werror-implicit-function-declaration -march=k8 -msse4a -m3dnow -mavx -mavx2 -mfma4 -mxop -maes -mpclmul -mpopcnt -mabm -mlzcnt -mbmi -mbmi2 -mtbm -mlwp -mfsgsbase -mrdrnd -mf16c -mfma -mrtm -mrdseed -mprfchw -madx -mfxsr -mxsaveopt -mavx512f -mavx512er -mavx512cd -mavx512pf -msha -mprefetchwt1 -mxsavec -mxsaves -mclflushopt -mavx512dq -mavx512bw -mavx512vl -mavx512ifma -mavx512vbmi -mavx5124fmaps -mavx5124vnniw -mavx512vpopcntdq -mclwb -mmwaitx -mclzero -mpku -msgx\" } */\n+/* { dg-options \"-O0 -Werror-implicit-function-declaration -march=k8 -msse4a -m3dnow -mavx -mavx2 -mfma4 -mxop -maes -mpclmul -mpopcnt -mabm -mlzcnt -mbmi -mbmi2 -mtbm -mlwp -mfsgsbase -mrdrnd -mf16c -mfma -mrtm -mrdseed -mprfchw -madx -mfxsr -mxsaveopt -mavx512f -mavx512er -mavx512cd -mavx512pf -msha -mprefetchwt1 -mxsavec -mxsaves -mclflushopt -mavx512dq -mavx512bw -mavx512vl -mavx512ifma -mavx512vbmi -mavx5124fmaps -mavx5124vnniw -mavx512vpopcntdq -mclwb -mmwaitx -mclzero -mpku -msgx -mrdpid\" } */\n /* { dg-add-options bind_pic_locally } */\n \n #include <mm_malloc.h>"}, {"sha": "b8a35d11c45017aab21ba567444d9b8692b6533c", "filename": "gcc/testsuite/gcc.target/i386/sse-22.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-22.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-22.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-22.c?ref=1d516992d1bcea0a211a55a7276ab1c2a584dbef", "patch": "@@ -707,7 +707,7 @@ test_2 (_mm_clmulepi64_si128, __m128i, __m128i, __m128i, 1)\n \n /* x86intrin.h (FMA4/XOP/LWP/BMI/BMI2/TBM/LZCNT/FMA). */\n #ifdef DIFFERENT_PRAGMAS\n-#pragma GCC target (\"fma4,xop,lwp,bmi,bmi2,tbm,lzcnt,fma,rdseed,prfchw,adx,fxsr,xsaveopt,xsavec,xsaves,clflushopt,clwb,pku,sgx\")\n+#pragma GCC target (\"fma4,xop,lwp,bmi,bmi2,tbm,lzcnt,fma,rdseed,prfchw,adx,fxsr,xsaveopt,xsavec,xsaves,clflushopt,clwb,pku,sgx,rdpid\")\n #endif\n #include <x86intrin.h>\n /* xopintrin.h */"}, {"sha": "45c31250e96188045db3c866d23841150fb5c586", "filename": "gcc/testsuite/gcc.target/i386/sse-23.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-23.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d516992d1bcea0a211a55a7276ab1c2a584dbef/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-23.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-23.c?ref=1d516992d1bcea0a211a55a7276ab1c2a584dbef", "patch": "@@ -603,6 +603,6 @@\n #define __builtin_ia32_extracti64x2_256_mask(A, E, C, D) __builtin_ia32_extracti64x2_256_mask(A, 1, C, D)\n #define __builtin_ia32_extractf64x2_256_mask(A, E, C, D) __builtin_ia32_extractf64x2_256_mask(A, 1, C, D)\n \n-#pragma GCC target (\"sse4a,3dnow,avx,avx2,fma4,xop,aes,pclmul,popcnt,abm,lzcnt,bmi,bmi2,tbm,lwp,fsgsbase,rdrnd,f16c,fma,rtm,rdseed,prfchw,adx,fxsr,xsaveopt,avx512f,avx512er,avx512cd,avx512pf,sha,prefetchwt1,xsavec,xsaves,clflushopt,avx512bw,avx512dq,avx512vl,avx512vbmi,avx512ifma,avx5124fmaps,avx5124vnniw,avx512vpopcntdq,clwb,mwaitx,clzero,pku,sgx\")\n+#pragma GCC target (\"sse4a,3dnow,avx,avx2,fma4,xop,aes,pclmul,popcnt,abm,lzcnt,bmi,bmi2,tbm,lwp,fsgsbase,rdrnd,f16c,fma,rtm,rdseed,prfchw,adx,fxsr,xsaveopt,avx512f,avx512er,avx512cd,avx512pf,sha,prefetchwt1,xsavec,xsaves,clflushopt,avx512bw,avx512dq,avx512vl,avx512vbmi,avx512ifma,avx5124fmaps,avx5124vnniw,avx512vpopcntdq,clwb,mwaitx,clzero,pku,sgx,rdpid\")\n \n #include <x86intrin.h>"}]}