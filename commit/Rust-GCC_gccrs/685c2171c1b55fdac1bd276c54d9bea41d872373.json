{"sha": "685c2171c1b55fdac1bd276c54d9bea41d872373", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg1YzIxNzFjMWI1NWZkYWMxYmQyNzZjNTRkOWJlYTQxZDg3MjM3Mw==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2004-12-28T06:34:55Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2004-12-28T06:34:55Z"}, "message": "tree-ssa-dom.c (thread_across_edge): Remove broken code to avoid threading into a loop.\n\n        * tree-ssa-dom.c (thread_across_edge): Remove broken code to\n        avoid threading into a loop.\n\nFrom-SVN: r92666", "tree": {"sha": "89813ab795808911800079fa9ce04037cfed2baa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89813ab795808911800079fa9ce04037cfed2baa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/685c2171c1b55fdac1bd276c54d9bea41d872373", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/685c2171c1b55fdac1bd276c54d9bea41d872373", "html_url": "https://github.com/Rust-GCC/gccrs/commit/685c2171c1b55fdac1bd276c54d9bea41d872373", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/685c2171c1b55fdac1bd276c54d9bea41d872373/comments", "author": null, "committer": null, "parents": [{"sha": "5fc94ac4ba15c3ff5d66b71ae5204fd22cbefd38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fc94ac4ba15c3ff5d66b71ae5204fd22cbefd38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fc94ac4ba15c3ff5d66b71ae5204fd22cbefd38"}], "stats": {"total": 21, "additions": 5, "deletions": 16}, "files": [{"sha": "5526fcb685e1e08bc65bea0b87585fb658462843", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685c2171c1b55fdac1bd276c54d9bea41d872373/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685c2171c1b55fdac1bd276c54d9bea41d872373/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=685c2171c1b55fdac1bd276c54d9bea41d872373", "patch": "@@ -1,3 +1,8 @@\n+2004-12-27  Jeff Law  <law@redhat.com>\n+\n+\t* tree-ssa-dom.c (thread_across_edge): Remove broken code to\n+\tavoid threading into a loop.\n+\n 2004-12-27  Richard Henderson  <rth@redhat.com>\n \n \tPR target/17406"}, {"sha": "67446b1432f39e20da57cfee9b21412108f5951a", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685c2171c1b55fdac1bd276c54d9bea41d872373/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685c2171c1b55fdac1bd276c54d9bea41d872373/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=685c2171c1b55fdac1bd276c54d9bea41d872373", "patch": "@@ -686,22 +686,6 @@ thread_across_edge (struct dom_walk_data *walk_data, edge e)\n \t  || TREE_CODE (stmt) == SWITCH_EXPR))\n     {\n       tree cond, cached_lhs;\n-      edge e1;\n-      edge_iterator ei;\n-\n-      /* Do not forward entry edges into the loop.  In the case loop\n-\t has multiple entry edges we may end up in constructing irreducible\n-\t region.  \n-\t ??? We may consider forwarding the edges in the case all incoming\n-\t edges forward to the same destination block.  */\n-      if (!e->flags & EDGE_DFS_BACK)\n-\t{\n-\t  FOR_EACH_EDGE (e1, ei, e->dest->preds)\n-\t    if (e1->flags & EDGE_DFS_BACK)\n-\t      break;\n-\t  if (e1)\n-\t    return;\n-\t}\n \n       /* Now temporarily cprop the operands and try to find the resulting\n \t expression in the hash tables.  */"}]}