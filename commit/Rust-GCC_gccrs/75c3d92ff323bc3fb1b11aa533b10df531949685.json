{"sha": "75c3d92ff323bc3fb1b11aa533b10df531949685", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzVjM2Q5MmZmMzIzYmMzZmIxYjExYWE1MzNiMTBkZjUzMTk0OTY4NQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2012-10-30T21:35:35Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2012-10-30T21:35:35Z"}, "message": "Add another testcase for PR middle-end/55116\n\n\t* gcc.target/i386/pr55116-2.c: New file.\n\nFrom-SVN: r192996", "tree": {"sha": "0bffc3859940e65b03d8f7b3f20c5de8779072f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0bffc3859940e65b03d8f7b3f20c5de8779072f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75c3d92ff323bc3fb1b11aa533b10df531949685", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75c3d92ff323bc3fb1b11aa533b10df531949685", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75c3d92ff323bc3fb1b11aa533b10df531949685", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75c3d92ff323bc3fb1b11aa533b10df531949685/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e64d0f556d4d52682d242af0efab9a587013baec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e64d0f556d4d52682d242af0efab9a587013baec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e64d0f556d4d52682d242af0efab9a587013baec"}], "stats": {"total": 90, "additions": 90, "deletions": 0}, "files": [{"sha": "06f95f5160a947201d199c534c36b7eaf2f48642", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75c3d92ff323bc3fb1b11aa533b10df531949685/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75c3d92ff323bc3fb1b11aa533b10df531949685/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=75c3d92ff323bc3fb1b11aa533b10df531949685", "patch": "@@ -1,3 +1,7 @@\n+2012-10-30  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* gcc.target/i386/pr55116-2.c: New file.\n+\n 2012-10-30  Richard Biener  <rguenther@suse.de>\n \n \t* gcc.dg/vect/slp-perm-2.c: Adjust."}, {"sha": "7ef8eade06b66d4edf42a3a160b8d6ed8748debd", "filename": "gcc/testsuite/gcc.target/i386/pr55116-2.c", "status": "added", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75c3d92ff323bc3fb1b11aa533b10df531949685/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr55116-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75c3d92ff323bc3fb1b11aa533b10df531949685/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr55116-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr55116-2.c?ref=75c3d92ff323bc3fb1b11aa533b10df531949685", "patch": "@@ -0,0 +1,86 @@\n+/* { dg-do compile { target { ! { ia32 } } } } */\n+/* { dg-options \"-O2 -mx32 -maddress-mode=long\" } */\n+\n+typedef struct rtx_def *rtx;\n+enum rtx_code { MINUS };\n+union rtunion_def {\n+  rtx rt_rtx;\n+};\n+typedef union rtunion_def rtunion;\n+struct rtx_def {\n+  enum rtx_code code: 16;\n+  union u {\n+    rtunion fld[1];\n+  }\n+  u;\n+};\n+rtx simplify_binary_operation (enum rtx_code code, int mode,\n+\t\t\t       rtx op0, rtx op1);\n+struct simplify_plus_minus_op_data {\n+  rtx op;\n+  short neg;\n+};\n+void simplify_plus_minus (enum rtx_code code, int mode, rtx op0, rtx op1)\n+{\n+  struct simplify_plus_minus_op_data ops[8];\n+  rtx tem = (rtx) 0;\n+  int n_ops = 2, input_ops = 2;\n+  int changed, canonicalized = 0;\n+  int i, j;\n+  __builtin_memset (ops, 0, sizeof (ops));\n+  do\n+    {\n+      changed = 0;\n+      for (i = 0; i < n_ops; i++)\n+\t{\n+\t  rtx this_op = ops[i].op;\n+\t  int this_neg = ops[i].neg;\n+\t  enum rtx_code this_code = ((enum rtx_code) (this_op)->code);\n+\t  switch (this_code)\n+\t    {\n+\t    case MINUS:\n+\t      if (n_ops == 7)\n+\t\treturn;\n+\t      n_ops++;\n+\t      input_ops++;\n+\t      changed = 1;\n+\t      canonicalized |= this_neg; \n+\t      break;\n+\t    }\n+\t}\n+    }\n+  while (changed);\n+  do \n+    {\n+      j =  n_ops - 1;\n+      for (i = n_ops - 1; j >= 0; j--)\n+\t{\n+\t  rtx lhs = ops[j].op, rhs = ops[i].op;\n+\t  int lneg = ops[j].neg, rneg = ops[i].neg;\n+\t  if (lhs != 0 && rhs != 0)\n+\t    {\n+\t      enum rtx_code ncode = MINUS;\n+\t      if (((enum rtx_code) (lhs)->code) == MINUS)\n+\t\ttem = simplify_binary_operation (ncode, mode, lhs, rhs);\n+\t      if (tem && ! (((enum rtx_code) (tem)->code) == MINUS \n+\t\t\t    && ((((((tem)->u.fld[0]).rt_rtx))->u.fld[0]).rt_rtx) == lhs\n+\t\t\t    && ((((((tem)->u.fld[0]).rt_rtx))->u.fld[1]).rt_rtx) == rhs))\n+\t\t{\n+\t\t  lneg &= rneg;\n+\t\t  ops[i].op = tem;\n+\t\t  ops[i].neg = lneg;\n+\t\t  ops[j].op = (rtx) 0;\n+\t\t  changed = 1;\n+\t\t  canonicalized = 1;\n+\t\t}\n+\t    }\n+\t}\n+      for (i = 0, j = 0; j < n_ops; j++)\n+\tif (ops[j].op)\n+\t  {\n+\t    ops[i] = ops[j];\n+\t    i++;\n+\t  }\n+    }\n+  while (changed);\n+}"}]}