{"sha": "8ad1c2df7449624fa5f7d6b9186099d2dfc1b6ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFkMWMyZGY3NDQ5NjI0ZmE1ZjdkNmI5MTg2MDk5ZDJkZmMxYjZhYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-11-07T13:51:20Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-11-07T13:51:20Z"}, "message": "[multiple changes]\n\n2014-11-07  Robert Dewar  <dewar@adacore.com>\n\n\t* freeze.adb: Code clean up.\n\n2014-11-07  Yannick Moy  <moy@adacore.com>\n\n\t* a-cfdlli.ads, a-cfhama.ads, a-cfhase.ads, a-cfinve.ads,\n\t* a-cforma.ads, a-cforse.ads, a-cofove.ads: Mark First_To_Previous,\n\tCurrent_To_Last and Strict_Equal as Ghost.\n\n2014-11-07  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch3.adb: Code clean up.\n\nFrom-SVN: r217225", "tree": {"sha": "4550df1ec611f0fa0456eb8345bb6d218bdebd7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4550df1ec611f0fa0456eb8345bb6d218bdebd7f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ad1c2df7449624fa5f7d6b9186099d2dfc1b6ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ad1c2df7449624fa5f7d6b9186099d2dfc1b6ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ad1c2df7449624fa5f7d6b9186099d2dfc1b6ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ad1c2df7449624fa5f7d6b9186099d2dfc1b6ab/comments", "author": null, "committer": null, "parents": [{"sha": "a98480ddbbe03479ae6606ed674de2999e24c022", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a98480ddbbe03479ae6606ed674de2999e24c022", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a98480ddbbe03479ae6606ed674de2999e24c022"}], "stats": {"total": 106, "additions": 81, "deletions": 25}, "files": [{"sha": "ed697016833c3002aa3aa4b2897f8e66aed312a8", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ad1c2df7449624fa5f7d6b9186099d2dfc1b6ab/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ad1c2df7449624fa5f7d6b9186099d2dfc1b6ab/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8ad1c2df7449624fa5f7d6b9186099d2dfc1b6ab", "patch": "@@ -1,3 +1,17 @@\n+2014-11-07  Robert Dewar  <dewar@adacore.com>\n+\n+\t* freeze.adb: Code clean up.\n+\n+2014-11-07  Yannick Moy  <moy@adacore.com>\n+\n+\t* a-cfdlli.ads, a-cfhama.ads, a-cfhase.ads, a-cfinve.ads,\n+\t* a-cforma.ads, a-cforse.ads, a-cofove.ads: Mark First_To_Previous,\n+\tCurrent_To_Last and Strict_Equal as Ghost.\n+\n+2014-11-07  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb: Code clean up.\n+\n 2014-11-07  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* freeze.adb (Freeze_Entity): Issue an error regardless of the"}, {"sha": "0c028ef844bbcde54cb33a314820e31b4f65acf2", "filename": "gcc/ada/a-cfdlli.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ad1c2df7449624fa5f7d6b9186099d2dfc1b6ab/gcc%2Fada%2Fa-cfdlli.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ad1c2df7449624fa5f7d6b9186099d2dfc1b6ab/gcc%2Fada%2Fa-cfdlli.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfdlli.ads?ref=8ad1c2df7449624fa5f7d6b9186099d2dfc1b6ab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -311,17 +311,21 @@ package Ada.Containers.Formal_Doubly_Linked_Lists is\n    end Generic_Sorting;\n \n    function Strict_Equal (Left, Right : List) return Boolean with\n+     Ghost,\n      Global => null;\n    --  Strict_Equal returns True if the containers are physically equal, i.e.\n    --  they are structurally equal (function \"=\" returns True) and that they\n    --  have the same set of cursors.\n \n    function First_To_Previous (Container : List; Current : Cursor) return List\n    with\n+     Ghost,\n      Global => null,\n      Pre    => Has_Element (Container, Current) or else Current = No_Element;\n+\n    function Current_To_Last (Container : List; Current : Cursor) return List\n    with\n+     Ghost,\n      Global => null,\n      Pre    => Has_Element (Container, Current) or else Current = No_Element;\n    --  First_To_Previous returns a container containing all elements preceding"}, {"sha": "03a79d8060a9f4121524dc2a094e9ea3b2ce3f36", "filename": "gcc/ada/a-cfhama.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ad1c2df7449624fa5f7d6b9186099d2dfc1b6ab/gcc%2Fada%2Fa-cfhama.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ad1c2df7449624fa5f7d6b9186099d2dfc1b6ab/gcc%2Fada%2Fa-cfhama.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfhama.ads?ref=8ad1c2df7449624fa5f7d6b9186099d2dfc1b6ab", "patch": "@@ -242,17 +242,21 @@ package Ada.Containers.Formal_Hashed_Maps is\n      Global => null;\n \n    function Strict_Equal (Left, Right : Map) return Boolean with\n+     Ghost,\n      Global => null;\n    --  Strict_Equal returns True if the containers are physically equal, i.e.\n    --  they are structurally equal (function \"=\" returns True) and that they\n    --  have the same set of cursors.\n \n    function First_To_Previous (Container : Map; Current : Cursor) return Map\n    with\n+     Ghost,\n      Global => null,\n      Pre    => Has_Element (Container, Current) or else Current = No_Element;\n+\n    function Current_To_Last (Container : Map; Current : Cursor) return Map\n    with\n+     Ghost,\n      Global => null,\n      Pre    => Has_Element (Container, Current) or else Current = No_Element;\n    --  First_To_Previous returns a container containing all elements preceding"}, {"sha": "11018fb57fa1d863fbc2305d766ef892ef72e188", "filename": "gcc/ada/a-cfhase.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ad1c2df7449624fa5f7d6b9186099d2dfc1b6ab/gcc%2Fada%2Fa-cfhase.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ad1c2df7449624fa5f7d6b9186099d2dfc1b6ab/gcc%2Fada%2Fa-cfhase.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfhase.ads?ref=8ad1c2df7449624fa5f7d6b9186099d2dfc1b6ab", "patch": "@@ -309,17 +309,21 @@ package Ada.Containers.Formal_Hashed_Sets is\n    end Generic_Keys;\n \n    function Strict_Equal (Left, Right : Set) return Boolean with\n+     Ghost,\n      Global => null;\n    --  Strict_Equal returns True if the containers are physically equal, i.e.\n    --  they are structurally equal (function \"=\" returns True) and that they\n    --  have the same set of cursors.\n \n    function First_To_Previous  (Container : Set; Current : Cursor) return Set\n    with\n+     Ghost,\n      Global => null,\n      Pre    => Has_Element (Container, Current) or else Current = No_Element;\n+\n    function Current_To_Last (Container : Set; Current : Cursor) return Set\n    with\n+     Ghost,\n      Global => null,\n      Pre    => Has_Element (Container, Current) or else Current = No_Element;\n    --  First_To_Previous returns a container containing all elements preceding"}, {"sha": "d7600335c5ff0394500608e6a45607ec22127190", "filename": "gcc/ada/a-cfinve.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ad1c2df7449624fa5f7d6b9186099d2dfc1b6ab/gcc%2Fada%2Fa-cfinve.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ad1c2df7449624fa5f7d6b9186099d2dfc1b6ab/gcc%2Fada%2Fa-cfinve.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfinve.ads?ref=8ad1c2df7449624fa5f7d6b9186099d2dfc1b6ab", "patch": "@@ -209,11 +209,14 @@ package Ada.Containers.Formal_Indefinite_Vectors is\n      (Container : Vector;\n       Current : Index_Type) return Vector\n    with\n+     Ghost,\n      Global => null;\n+\n    function Current_To_Last\n      (Container : Vector;\n       Current : Index_Type) return Vector\n    with\n+     Ghost,\n      Global => null;\n \n private"}, {"sha": "5d7827d7e4bc74273bdc7d84760d460d0b216b7c", "filename": "gcc/ada/a-cforma.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ad1c2df7449624fa5f7d6b9186099d2dfc1b6ab/gcc%2Fada%2Fa-cforma.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ad1c2df7449624fa5f7d6b9186099d2dfc1b6ab/gcc%2Fada%2Fa-cforma.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cforma.ads?ref=8ad1c2df7449624fa5f7d6b9186099d2dfc1b6ab", "patch": "@@ -243,17 +243,21 @@ package Ada.Containers.Formal_Ordered_Maps is\n      Global => null;\n \n    function Strict_Equal (Left, Right : Map) return Boolean with\n+     Ghost,\n      Global => null;\n    --  Strict_Equal returns True if the containers are physically equal, i.e.\n    --  they are structurally equal (function \"=\" returns True) and that they\n    --  have the same set of cursors.\n \n    function First_To_Previous (Container : Map; Current : Cursor) return Map\n    with\n+     Ghost,\n      Global => null,\n      Pre    => Has_Element (Container, Current) or else Current = No_Element;\n+\n    function Current_To_Last (Container : Map; Current : Cursor) return Map\n    with\n+     Ghost,\n      Global => null,\n      Pre    => Has_Element (Container, Current) or else Current = No_Element;\n    --  First_To_Previous returns a container containing all elements preceding"}, {"sha": "081c2b889d06edb39560ddf2bdf154ae5b724ce2", "filename": "gcc/ada/a-cforse.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ad1c2df7449624fa5f7d6b9186099d2dfc1b6ab/gcc%2Fada%2Fa-cforse.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ad1c2df7449624fa5f7d6b9186099d2dfc1b6ab/gcc%2Fada%2Fa-cforse.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cforse.ads?ref=8ad1c2df7449624fa5f7d6b9186099d2dfc1b6ab", "patch": "@@ -327,17 +327,21 @@ package Ada.Containers.Formal_Ordered_Sets is\n    end Generic_Keys;\n \n    function Strict_Equal (Left, Right : Set) return Boolean with\n-        Global => null;\n+     Ghost,\n+     Global => null;\n    --  Strict_Equal returns True if the containers are physically equal, i.e.\n    --  they are structurally equal (function \"=\" returns True) and that they\n    --  have the same set of cursors.\n \n    function First_To_Previous (Container : Set; Current : Cursor) return Set\n    with\n+     Ghost,\n      Global => null,\n      Pre    => Has_Element (Container, Current) or else Current = No_Element;\n+\n    function Current_To_Last (Container : Set; Current : Cursor) return Set\n    with\n+     Ghost,\n      Global => null,\n      Pre    => Has_Element (Container, Current) or else Current = No_Element;\n    --  First_To_Previous returns a container containing all elements preceding"}, {"sha": "6ac791812b360a0fa9677aa8ac44f594fd91c5f2", "filename": "gcc/ada/a-cofove.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ad1c2df7449624fa5f7d6b9186099d2dfc1b6ab/gcc%2Fada%2Fa-cofove.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ad1c2df7449624fa5f7d6b9186099d2dfc1b6ab/gcc%2Fada%2Fa-cofove.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cofove.ads?ref=8ad1c2df7449624fa5f7d6b9186099d2dfc1b6ab", "patch": "@@ -212,11 +212,14 @@ package Ada.Containers.Formal_Vectors is\n      (Container : Vector;\n       Current : Index_Type) return Vector\n    with\n+     Ghost,\n      Global => null;\n+\n    function Current_To_Last\n      (Container : Vector;\n       Current : Index_Type) return Vector\n    with\n+     Ghost,\n      Global => null;\n    --  First_To_Previous returns a container containing all elements preceding\n    --  Current (excluded) in Container. Current_To_Last returns a container"}, {"sha": "85a9cbc57434affd127af607ded38804d4420563", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 33, "deletions": 18, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ad1c2df7449624fa5f7d6b9186099d2dfc1b6ab/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ad1c2df7449624fa5f7d6b9186099d2dfc1b6ab/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=8ad1c2df7449624fa5f7d6b9186099d2dfc1b6ab", "patch": "@@ -2398,24 +2398,6 @@ package body Freeze is\n                         Set_Has_Non_Standard_Rep (Base_Type (Arr), True);\n                         Set_Is_Bit_Packed_Array  (Base_Type (Arr), True);\n                         Set_Is_Packed            (Base_Type (Arr), True);\n-\n-                        --  Make sure that we have the necessary routines to\n-                        --  implement the packing, and complain now if not.\n-\n-                        declare\n-                           CS : constant Int   := UI_To_Int (Csiz);\n-                           RE : constant RE_Id := Get_Id (CS);\n-\n-                        begin\n-                           if RE /= RE_Null\n-                             and then not RTE_Available (RE)\n-                           then\n-                              Error_Msg_CRT\n-                                (\"packing of \" & UI_Image (Csiz)\n-                                 & \"-bit components\",\n-                                 First_Subtype (Etype (Arr)));\n-                           end if;\n-                        end;\n                      end if;\n                   end;\n                end if;\n@@ -2668,6 +2650,37 @@ package body Freeze is\n             Create_Packed_Array_Impl_Type (Arr);\n             Freeze_And_Append (Packed_Array_Impl_Type (Arr), N, Result);\n \n+            --  Make sure that we have the necessary routines to implement the\n+            --  packing, and complain now if not. Note that we only test this\n+            --  for constrained array types.\n+\n+            if Is_Constrained (Arr)\n+              and then Is_Bit_Packed_Array (Arr)\n+              and then Present (Packed_Array_Impl_Type (Arr))\n+              and then Is_Array_Type (Packed_Array_Impl_Type (Arr))\n+            then\n+               declare\n+                  CS : constant Uint  := Component_Size (Arr);\n+                  RE : constant RE_Id := Get_Id (UI_To_Int (CS));\n+\n+               begin\n+                  if RE /= RE_Null\n+                    and then not RTE_Available (RE)\n+                  then\n+                     Error_Msg_CRT\n+                       (\"packing of \" & UI_Image (CS) & \"-bit components\",\n+                        First_Subtype (Etype (Arr)));\n+\n+                     --  Cancel the packing\n+\n+                     Set_Is_Packed (Base_Type (Arr), False);\n+                     Set_Is_Bit_Packed_Array (Base_Type (Arr), False);\n+                     Set_Packed_Array_Impl_Type (Arr, Empty);\n+                     goto Skip_Packed;\n+                  end if;\n+               end;\n+            end if;\n+\n             --  Size information of packed array type is copied to the array\n             --  type, since this is really the representation. But do not\n             --  override explicit existing size values. If the ancestor subtype\n@@ -2689,6 +2702,8 @@ package body Freeze is\n             end if;\n          end if;\n \n+         <<Skip_Packed>>\n+\n          --  For non-packed arrays set the alignment of the array to the\n          --  alignment of the component type if it is unknown. Skip this\n          --  in atomic case (atomic arrays may need larger alignments)."}, {"sha": "ed9b7b35bfa99cf70e1f39cf59bf0907c1ab9ce1", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ad1c2df7449624fa5f7d6b9186099d2dfc1b6ab/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ad1c2df7449624fa5f7d6b9186099d2dfc1b6ab/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=8ad1c2df7449624fa5f7d6b9186099d2dfc1b6ab", "patch": "@@ -11697,12 +11697,13 @@ package body Sem_Ch3 is\n          Item := First_Rep_Item (Full);\n \n          --  If no existing rep items on full type, we can just link directly\n-         --  to the list of items on the private type. Same if the rep items\n-         --  are only those inherited from the base\n+         --  to the list of items on the private type, if any exist.. Same if\n+         --  the rep items are only those inherited from the base\n \n-         if No (Item)\n-           or else Nkind (Item) /= N_Aspect_Specification\n-           or else Entity (Item) = Full_Base\n+         if (No (Item)\n+              or else Nkind (Item) /= N_Aspect_Specification\n+              or else Entity (Item) = Full_Base)\n+             and then Present (First_Rep_Item (Priv))\n          then\n             Set_First_Rep_Item (Full, First_Rep_Item (Priv));\n "}]}