{"sha": "24746a428d28ff8398075c9be46cef326db45740", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ3NDZhNDI4ZDI4ZmY4Mzk4MDc1YzliZTQ2Y2VmMzI2ZGI0NTc0MA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-01-06T04:21:52Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-01-06T04:21:52Z"}, "message": "linux.h: Fix comment formatting.\n\n\t* config/sh/linux.h: Fix comment formatting.\n\t* config/sh/netbsd-elf.h: Likewise.\n\t* config/sh/sh.c: Likewise.\n\t* config/sh/sh.h: Likewise.\n\t* config/sh/vxworks.h: Likewise.\n\nFrom-SVN: r75462", "tree": {"sha": "4f174cc6decb3342a1a4c09416e579e644a0e251", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f174cc6decb3342a1a4c09416e579e644a0e251"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24746a428d28ff8398075c9be46cef326db45740", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24746a428d28ff8398075c9be46cef326db45740", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24746a428d28ff8398075c9be46cef326db45740", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24746a428d28ff8398075c9be46cef326db45740/comments", "author": null, "committer": null, "parents": [{"sha": "dedebde10aa1b9c1958aa8ea8ca087206f44f30b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dedebde10aa1b9c1958aa8ea8ca087206f44f30b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dedebde10aa1b9c1958aa8ea8ca087206f44f30b"}], "stats": {"total": 30, "additions": 19, "deletions": 11}, "files": [{"sha": "d2733425427049fa6b11b30275eb9e3f5e900d46", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24746a428d28ff8398075c9be46cef326db45740/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24746a428d28ff8398075c9be46cef326db45740/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=24746a428d28ff8398075c9be46cef326db45740", "patch": "@@ -1,3 +1,11 @@\n+2004-01-05  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/sh/linux.h: Fix comment formatting.\n+\t* config/sh/netbsd-elf.h: Likewise.\n+\t* config/sh/sh.c: Likewise.\n+\t* config/sh/sh.h: Likewise.\n+\t* config/sh/vxworks.h: Likewise.\n+\n 2004-01-05  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* system.h (ASM_OUTPUT_MAIN_SOURCE_FILENAME): Poison."}, {"sha": "eafdd9a4af11b660d0b789614481d7071945ef5e", "filename": "gcc/config/sh/linux.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24746a428d28ff8398075c9be46cef326db45740/gcc%2Fconfig%2Fsh%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24746a428d28ff8398075c9be46cef326db45740/gcc%2Fconfig%2Fsh%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Flinux.h?ref=24746a428d28ff8398075c9be46cef326db45740", "patch": "@@ -27,7 +27,7 @@ Boston, MA 02111-1307, USA.  */\n #undef MD_EXEC_PREFIX\n #undef MD_STARTFILE_PREFIX\n \n-/* This was defined in linux.h.  Define it here also. */\n+/* This was defined in linux.h.  Define it here also.  */\n #define HANDLE_PRAGMA_PACK_PUSH_POP\n \n /* Don't assume anything about the header files.  */"}, {"sha": "7c52aa67ac3e6ed72fabb0534bd5483f0dd91e8c", "filename": "gcc/config/sh/netbsd-elf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24746a428d28ff8398075c9be46cef326db45740/gcc%2Fconfig%2Fsh%2Fnetbsd-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24746a428d28ff8398075c9be46cef326db45740/gcc%2Fconfig%2Fsh%2Fnetbsd-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fnetbsd-elf.h?ref=24746a428d28ff8398075c9be46cef326db45740", "patch": "@@ -93,7 +93,7 @@ Boston, MA 02111-1307, USA.  */\n #define TARGET_DEFAULT \\\n   (TARGET_CPU_DEFAULT | USERMODE_BIT | TARGET_ENDIAN_DEFAULT)\n \n-/* Define because we use the label and we do not need them. */\n+/* Define because we use the label and we do not need them.  */\n #define NO_PROFILE_COUNTERS\n  \n #undef FUNCTION_PROFILER"}, {"sha": "1c58712a00c2f44fc260ee798addc54d44c377e4", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24746a428d28ff8398075c9be46cef326db45740/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24746a428d28ff8398075c9be46cef326db45740/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=24746a428d28ff8398075c9be46cef326db45740", "patch": "@@ -2999,7 +2999,7 @@ find_barrier (int num_mova, rtx mova, rtx from)\n \t\t the limit is the same, but the alignment requirements\n \t\t are higher.  We may waste up to 4 additional bytes\n \t\t for alignment, and the DF/DI constant may have\n-\t\t another SF/SI constant placed before it. */\n+\t\t another SF/SI constant placed before it.  */\n \t      if (TARGET_SHCOMPACT\n \t\t  && ! found_di\n \t\t  && (mode == DFmode || mode == DImode))\n@@ -4731,7 +4731,7 @@ shmedia_target_regs_stack_space (HARD_REG_SET *live_regs_mask)\n     if ((! call_used_regs[reg] || interrupt_handler)\n         && ! TEST_HARD_REG_BIT (*live_regs_mask, reg))\n       /* Leave space to save this target register on the stack,\n-\t in case target register allocation wants to use it. */\n+\t in case target register allocation wants to use it.  */\n       stack_space += GET_MODE_SIZE (REGISTER_NATURAL_MODE (reg));\n   return stack_space;\n }\n@@ -6390,7 +6390,7 @@ sh_function_arg_advance (CUMULATIVE_ARGS *ca, enum machine_mode mode,\n \t     ca->call_cookie\n \t       |= CALL_COOKIE_INT_REG (ca->arg_count[(int) SH_ARG_INT]\n \t\t\t\t       - numregs, 1);\n-\t     /* N.B. We want this also for outgoing.   */\n+\t     /* N.B. We want this also for outgoing.  */\n \t     ca->stack_regs += numregs;\n \t   }\n \t else if (ca->byref)\n@@ -8100,7 +8100,7 @@ sh_adjust_cost (rtx insn, rtx link ATTRIBUTE_UNUSED, rtx dep_insn, int cost)\n   if (TARGET_SHMEDIA)\n     {\n       /* On SHmedia, if the dependence is an anti-dependence or\n-         output-dependence, there is no cost. */              \n+         output-dependence, there is no cost.  */\n       if (REG_NOTE_KIND (link) != 0)\n         cost = 0;\n \n@@ -8519,10 +8519,10 @@ static const char signature_args[][4] =\n #define SH_BLTIN_PV 20\n   { 0, 8 },\n };\n-/* mcmv: operands considered unsigned. */\n+/* mcmv: operands considered unsigned.  */\n /* mmulsum_wq, msad_ubq: result considered unsigned long long.  */\n-/* mperm: control value considered unsigned int. */\n-/* mshalds, mshard, mshards, mshlld, mshlrd: shift count is unsigned int. */\n+/* mperm: control value considered unsigned int.  */\n+/* mshalds, mshard, mshards, mshlld, mshlrd: shift count is unsigned int.  */\n /* mshards_q: returns signed short.  */\n /* nsb: takes long long arg, returns unsigned char.  */\n static const struct builtin_description bdesc[] ="}, {"sha": "d035f67f36a6105a36906a526889051bd1affaa2", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24746a428d28ff8398075c9be46cef326db45740/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24746a428d28ff8398075c9be46cef326db45740/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=24746a428d28ff8398075c9be46cef326db45740", "patch": "@@ -576,7 +576,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define MAX_LONG_TYPE_SIZE MAX_BITS_PER_WORD\n \n /* Width in bits of an `int'.  We want just 32-bits, even if words are\n-   longer. */\n+   longer.  */\n #define INT_TYPE_SIZE 32\n \n /* Width in bits of a `long'.  */"}, {"sha": "4201028bb0df65bc3c591181ae6a8f5db3bb4024", "filename": "gcc/config/sh/vxworks.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24746a428d28ff8398075c9be46cef326db45740/gcc%2Fconfig%2Fsh%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24746a428d28ff8398075c9be46cef326db45740/gcc%2Fconfig%2Fsh%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fvxworks.h?ref=24746a428d28ff8398075c9be46cef326db45740", "patch": "@@ -32,7 +32,7 @@ Boston, MA 02111-1307, USA.  */\n #define LIB_SPEC \t\"\"\n \n /* VxWorks uses object files, not loadable images.  Make the linker just\n-   combine objects. */\n+   combine objects.  */\n #undef  LINK_SPEC\n #define LINK_SPEC \t\"-r\"\n "}]}