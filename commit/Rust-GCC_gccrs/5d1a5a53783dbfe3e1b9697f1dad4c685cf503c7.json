{"sha": "5d1a5a53783dbfe3e1b9697f1dad4c685cf503c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQxYTVhNTM3ODNkYmZlM2UxYjk2OTdmMWRhZDRjNjg1Y2Y1MDNjNw==", "commit": {"author": {"name": "Cong Hou", "email": "congh@google.com", "date": "2014-04-09T11:37:14Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-04-09T11:37:14Z"}, "message": "re PR testsuite/60773 (FAIL: gcc.dg/vect/pr60656.c -flto -ffat-lto-objects  scan-tree-dump-times vect \"vectorized 1 loops\" 1)\n\n2014-04-09  Cong Hou  <congh@google.com>\n\n\tPR testsuite/60773\n\t* doc/sourcebuild.texi (vect_widen_mult_si_to_di_pattern): Add\n\tdocumentation.\n\n\t* lib/target-supports.exp:\n\t(check_effective_target_vect_widen_si_to_di_pattern): New.\n\t* gcc.dg/vect/pr60656.c: Require vect_long effective target.\n\tUse scan-tree-dump-times for vect_widen_mult_si_to_di_pattern\n\ttargets only.\n\t(foo): Fix up formatting.\n\t(main): Call check_vect.\n\nFrom-SVN: r209241", "tree": {"sha": "3a32d2ff2094b457ed9895ed0b2854e1cc9223f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a32d2ff2094b457ed9895ed0b2854e1cc9223f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d1a5a53783dbfe3e1b9697f1dad4c685cf503c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d1a5a53783dbfe3e1b9697f1dad4c685cf503c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d1a5a53783dbfe3e1b9697f1dad4c685cf503c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d1a5a53783dbfe3e1b9697f1dad4c685cf503c7/comments", "author": null, "committer": null, "parents": [{"sha": "7dfaf6c385ec7c43365490071a2800dc0a6917a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dfaf6c385ec7c43365490071a2800dc0a6917a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dfaf6c385ec7c43365490071a2800dc0a6917a9"}], "stats": {"total": 52, "additions": 48, "deletions": 4}, "files": [{"sha": "5803746de11f92db9bf61c718dc42df89963f5ac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1a5a53783dbfe3e1b9697f1dad4c685cf503c7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1a5a53783dbfe3e1b9697f1dad4c685cf503c7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5d1a5a53783dbfe3e1b9697f1dad4c685cf503c7", "patch": "@@ -1,3 +1,9 @@\n+2014-04-09  Cong Hou  <congh@google.com>\n+\n+\tPR testsuite/60773\n+\t* doc/sourcebuild.texi (vect_widen_mult_si_to_di_pattern): Add\n+\tdocumentation.\n+\n 2014-04-08  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* config/rs6000/rs6000.c (rs6000_expand_vector_set): Use vnand"}, {"sha": "914860813ca09710e93794a1c8b14ba5eaa877ff", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1a5a53783dbfe3e1b9697f1dad4c685cf503c7/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1a5a53783dbfe3e1b9697f1dad4c685cf503c7/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=5d1a5a53783dbfe3e1b9697f1dad4c685cf503c7", "patch": "@@ -1428,6 +1428,10 @@ Target supports a vector widening multiplication of @code{short} operands\n into @code{int} results, or can promote (unpack) from @code{short} to\n @code{int} and perform non-widening multiplication of @code{int}.\n \n+@item vect_widen_mult_si_to_di_pattern\n+Target supports a vector widening multiplication of @code{int} operands\n+into @code{long} results.\n+\n @item vect_sdot_qi\n Target supports a vector dot-product of @code{signed char}.\n "}, {"sha": "4255e5175a6e186439aaa5d8567f498df3dcdbbf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1a5a53783dbfe3e1b9697f1dad4c685cf503c7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1a5a53783dbfe3e1b9697f1dad4c685cf503c7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5d1a5a53783dbfe3e1b9697f1dad4c685cf503c7", "patch": "@@ -1,3 +1,14 @@\n+2014-04-09  Cong Hou  <congh@google.com>\n+\n+\tPR testsuite/60773\n+\t* lib/target-supports.exp:\n+\t(check_effective_target_vect_widen_si_to_di_pattern): New.\n+\t* gcc.dg/vect/pr60656.c: Require vect_long effective target.\n+\tUse scan-tree-dump-times for vect_widen_mult_si_to_di_pattern\n+\ttargets only.\n+\t(foo): Fix up formatting.\n+\t(main): Call check_vect.\n+\n 2014-04-08  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/59115"}, {"sha": "4950275fb8710319971c4b555e8e8b1bfa370dae", "filename": "gcc/testsuite/gcc.dg/vect/pr60656.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1a5a53783dbfe3e1b9697f1dad4c685cf503c7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr60656.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1a5a53783dbfe3e1b9697f1dad4c685cf503c7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr60656.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr60656.c?ref=5d1a5a53783dbfe3e1b9697f1dad4c685cf503c7", "patch": "@@ -1,4 +1,5 @@\n /* { dg-require-effective-target vect_int } */\n+/* { dg-require-effective-target vect_long } */\n \n #include \"tree-vect.h\"\n \n@@ -12,7 +13,7 @@ foo ()\n   for(i = 0; i < 4; ++i)\n     {\n       long P = v[i];\n-      s += P*P*P;\n+      s += P * P * P;\n     }\n   return s;\n }\n@@ -27,19 +28,20 @@ bar ()\n   for(i = 0; i < 4; ++i)\n     {\n       long P = v[i];\n-      s += P*P*P;\n+      s += P * P * P;\n       __asm__ volatile (\"\");\n     }\n   return s;\n }\n \n int main()\n {\n+  check_vect ();\n+\n   if (foo () != bar ())\n     abort ();\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target vect_widen_mult_si_to_di_pattern } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */\n-"}, {"sha": "f81663a8e619d47d51403cda1c738c304edba8e3", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1a5a53783dbfe3e1b9697f1dad4c685cf503c7/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1a5a53783dbfe3e1b9697f1dad4c685cf503c7/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=5d1a5a53783dbfe3e1b9697f1dad4c685cf503c7", "patch": "@@ -3738,6 +3738,27 @@ proc check_effective_target_vect_widen_mult_hi_to_si_pattern { } {\n     return $et_vect_widen_mult_hi_to_si_pattern_saved\n }\n \n+# Return 1 if the target plus current options supports a vector\n+# widening multiplication of *int* args into *long* result, 0 otherwise.\n+#\n+# This won't change for different subtargets so cache the result.\n+\n+proc check_effective_target_vect_widen_mult_si_to_di_pattern { } {\n+    global et_vect_widen_mult_si_to_di_pattern\n+\n+    if [info exists et_vect_widen_mult_si_to_di_pattern_saved] {\n+        verbose \"check_effective_target_vect_widen_mult_si_to_di_pattern: using cached result\" 2\n+    } else {\n+        if {[istarget ia64-*-*]\n+              || [istarget i?86-*-*]\n+\t      || [istarget x86_64-*-*] } {\n+            set et_vect_widen_mult_si_to_di_pattern_saved 1\n+        }\n+    }\n+    verbose \"check_effective_target_vect_widen_mult_si_to_di_pattern: returning $et_vect_widen_mult_si_to_di_pattern_saved\" 2\n+    return $et_vect_widen_mult_si_to_di_pattern_saved\n+}\n+\n # Return 1 if the target plus current options supports a vector\n # widening shift, 0 otherwise.\n #"}]}