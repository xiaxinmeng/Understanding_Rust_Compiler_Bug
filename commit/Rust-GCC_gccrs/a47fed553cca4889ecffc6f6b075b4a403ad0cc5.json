{"sha": "a47fed553cca4889ecffc6f6b075b4a403ad0cc5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQ3ZmVkNTUzY2NhNDg4OWVjZmZjNmY2YjA3NWI0YTQwM2FkMGNjNQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2000-05-06T11:30:43Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2000-05-06T11:30:43Z"}, "message": "Fix error in previous change\n\nFrom-SVN: r33725", "tree": {"sha": "5008440e59928d15ee8146bcc7f6687d4673558f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5008440e59928d15ee8146bcc7f6687d4673558f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a47fed553cca4889ecffc6f6b075b4a403ad0cc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a47fed553cca4889ecffc6f6b075b4a403ad0cc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a47fed553cca4889ecffc6f6b075b4a403ad0cc5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a47fed553cca4889ecffc6f6b075b4a403ad0cc5/comments", "author": null, "committer": null, "parents": [{"sha": "ad027eaed90ec8180e2322c8a5753b51c98bf5cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad027eaed90ec8180e2322c8a5753b51c98bf5cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad027eaed90ec8180e2322c8a5753b51c98bf5cc"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "287cd28d03cac752b20ead3f02e54c6b7de9a702", "filename": "gcc/expr.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a47fed553cca4889ecffc6f6b075b4a403ad0cc5/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a47fed553cca4889ecffc6f6b075b4a403ad0cc5/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=a47fed553cca4889ecffc6f6b075b4a403ad0cc5", "patch": "@@ -10257,6 +10257,7 @@ do_store_flag (exp, target, mode, only_cheap)\n \t\t       );\n \n       if (! get_subtarget (subtarget)\n+\t  || GET_MODE (subtarget) != operand_mode\n \t  || ! safe_from_p (subtarget, inner, 1))\n \tsubtarget = 0;\n \n@@ -10307,6 +10308,7 @@ do_store_flag (exp, target, mode, only_cheap)\n       \n   preexpand_calls (exp);\n   if (! get_subtarget (target)\n+      || GET_MODE (subtarget) != operand_mode\n       || ! safe_from_p (subtarget, arg1, 1))\n     subtarget = 0;\n "}]}