{"sha": "842e098c5ff56730b4d84d5560eb4053a12ebd61", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQyZTA5OGM1ZmY1NjczMGI0ZDg0ZDU1NjBlYjQwNTNhMTJlYmQ2MQ==", "commit": {"author": {"name": "Adam Nemet", "email": "anemet@caviumnetworks.com", "date": "2009-08-11T17:31:09Z"}, "committer": {"name": "Adam Nemet", "email": "nemet@gcc.gnu.org", "date": "2009-08-11T17:31:09Z"}, "message": "combine.c (try_widen_shift_mode): Factor out code to check if an integer constant is a low-order bitmask from here ...\n\n\t* combine.c (try_widen_shift_mode): Factor out code to check if an\n        integer constant is a low-order bitmask from here ...\n\t* rtlanal.c (low_bitmask_len): ... to here.\n\t* rtl.h (low_bitmask_len): Declare.\n\nFrom-SVN: r150656", "tree": {"sha": "3685d54374ef0fee2a34f53968de7c8ccad1f008", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3685d54374ef0fee2a34f53968de7c8ccad1f008"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/842e098c5ff56730b4d84d5560eb4053a12ebd61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/842e098c5ff56730b4d84d5560eb4053a12ebd61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/842e098c5ff56730b4d84d5560eb4053a12ebd61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/842e098c5ff56730b4d84d5560eb4053a12ebd61/comments", "author": null, "committer": null, "parents": [{"sha": "c53c2591f607409e311a2b319d95d17ea336a836", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c53c2591f607409e311a2b319d95d17ea336a836", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c53c2591f607409e311a2b319d95d17ea336a836"}], "stats": {"total": 33, "additions": 27, "deletions": 6}, "files": [{"sha": "2691d51d26d2ee56b2586200b02d31fcc33c6331", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/842e098c5ff56730b4d84d5560eb4053a12ebd61/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/842e098c5ff56730b4d84d5560eb4053a12ebd61/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=842e098c5ff56730b4d84d5560eb4053a12ebd61", "patch": "@@ -1,3 +1,10 @@\n+2009-08-11  Adam Nemet  <anemet@caviumnetworks.com>\n+\n+\t* combine.c (try_widen_shift_mode): Factor out code to check if an\n+        integer constant is a low-order bitmask from here ...\n+\t* rtlanal.c (low_bitmask_len): ... to here.\n+\t* rtl.h (low_bitmask_len): Declare.\n+\n 2009-08-11  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/8603"}, {"sha": "faa7e0dc03889632f2fb2096f9a7be545a735ec7", "filename": "gcc/combine.c", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/842e098c5ff56730b4d84d5560eb4053a12ebd61/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/842e098c5ff56730b4d84d5560eb4053a12ebd61/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=842e098c5ff56730b4d84d5560eb4053a12ebd61", "patch": "@@ -9027,13 +9027,9 @@ try_widen_shift_mode (enum rtx_code code, rtx op, int count,\n \n       /* We can also widen if the bits brought in will be masked off.  This\n \t operation is performed in ORIG_MODE.  */\n-      if (outer_code == AND\n-\t  && GET_MODE_BITSIZE (orig_mode) <= HOST_BITS_PER_WIDE_INT)\n+      if (outer_code == AND)\n \t{\n-\t  int care_bits;\n-\n-\t  outer_const &= GET_MODE_MASK (orig_mode);\n-\t  care_bits = exact_log2 (outer_const + 1);\n+\t  int care_bits = low_bitmask_len (orig_mode, outer_const);\n \n \t  if (care_bits >= 0\n \t      && GET_MODE_BITSIZE (orig_mode) - care_bits >= count)"}, {"sha": "cf07348a3cb9abdb0f6f0e4172ebd629de5e4071", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/842e098c5ff56730b4d84d5560eb4053a12ebd61/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/842e098c5ff56730b4d84d5560eb4053a12ebd61/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=842e098c5ff56730b4d84d5560eb4053a12ebd61", "patch": "@@ -1095,6 +1095,7 @@ extern unsigned HOST_WIDE_INT nonzero_bits (const_rtx, enum machine_mode);\n extern unsigned int num_sign_bit_copies (const_rtx, enum machine_mode);\n extern bool constant_pool_constant_p (rtx);\n extern bool truncated_to_mode (enum machine_mode, const_rtx);\n+extern int low_bitmask_len (enum machine_mode, unsigned HOST_WIDE_INT);\n \n \n /* 1 if RTX is a subreg containing a reg that is already known to be"}, {"sha": "aebcfa66904266e9ebab7f2ed882ca1cbd38bd98", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/842e098c5ff56730b4d84d5560eb4053a12ebd61/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/842e098c5ff56730b4d84d5560eb4053a12ebd61/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=842e098c5ff56730b4d84d5560eb4053a12ebd61", "patch": "@@ -5032,3 +5032,20 @@ constant_pool_constant_p (rtx x)\n   x = avoid_constant_pool_reference (x);\n   return GET_CODE (x) == CONST_DOUBLE;\n }\n+\f\n+/* If M is a bitmask that selects a field of low-order bits within an item but\n+   not the entire word, return the length of the field.  Return -1 otherwise.\n+   M is used in machine mode MODE.  */\n+\n+int\n+low_bitmask_len (enum machine_mode mode, unsigned HOST_WIDE_INT m)\n+{\n+  if (mode != VOIDmode)\n+    {\n+      if (GET_MODE_BITSIZE (mode) > HOST_BITS_PER_WIDE_INT)\n+\treturn -1;\n+      m &= GET_MODE_MASK (mode);\n+    }\n+\n+  return exact_log2 (m + 1);\n+}"}]}