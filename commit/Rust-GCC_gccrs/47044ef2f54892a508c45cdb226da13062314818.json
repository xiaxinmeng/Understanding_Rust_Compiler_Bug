{"sha": "47044ef2f54892a508c45cdb226da13062314818", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDcwNDRlZjJmNTQ4OTJhNTA4YzQ1Y2RiMjI2ZGExMzA2MjMxNDgxOA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-11-24T09:42:18Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-11-24T09:42:18Z"}, "message": "Fix print_node for CONSTRUCTORs\n\n\t* print-tree.c (struct bucket): Remove.\n\t(print_node): Add new argument which drives whether a tree node\n\tis printed briefly or not.\n\t(debug_tree): Replace a custom hash table with hash_set<T>.\n\t* print-tree.h (print_node): Add the argument.\n\nFrom-SVN: r242820", "tree": {"sha": "6a5424eaba95faccded12402bfb30eb22ae695ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a5424eaba95faccded12402bfb30eb22ae695ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47044ef2f54892a508c45cdb226da13062314818", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47044ef2f54892a508c45cdb226da13062314818", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47044ef2f54892a508c45cdb226da13062314818", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47044ef2f54892a508c45cdb226da13062314818/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "665ad37b6ab1863ac1a4febbdb9aeb7a6d1b8168", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/665ad37b6ab1863ac1a4febbdb9aeb7a6d1b8168", "html_url": "https://github.com/Rust-GCC/gccrs/commit/665ad37b6ab1863ac1a4febbdb9aeb7a6d1b8168"}], "stats": {"total": 54, "additions": 25, "deletions": 29}, "files": [{"sha": "b1503626b47c05807263eb01298dc26f1532ba8c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47044ef2f54892a508c45cdb226da13062314818/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47044ef2f54892a508c45cdb226da13062314818/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=47044ef2f54892a508c45cdb226da13062314818", "patch": "@@ -1,3 +1,11 @@\n+2016-11-24  Martin Liska  <mliska@suse.cz>\n+\n+\t* print-tree.c (struct bucket): Remove.\n+\t(print_node): Add new argument which drives whether a tree node\n+\tis printed briefly or not.\n+\t(debug_tree): Replace a custom hash table with hash_set<T>.\n+\t* print-tree.h (print_node): Add the argument.\n+\n 2016-11-24  Chung-Lin Tang  <cltang@codesourcery.com>\n \n \t* config/nios2/nios2.c (nios2_init_libfuncs): Add ATTRIBUTE_UNUSED."}, {"sha": "f3ee04cbbb27a58be690c2bcea0ebe8f4a5f3834", "filename": "gcc/print-tree.c", "status": "modified", "additions": 15, "deletions": 28, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47044ef2f54892a508c45cdb226da13062314818/gcc%2Fprint-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47044ef2f54892a508c45cdb226da13062314818/gcc%2Fprint-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-tree.c?ref=47044ef2f54892a508c45cdb226da13062314818", "patch": "@@ -33,19 +33,14 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple-pretty-print.h\" /* FIXME */\n #include \"tree-cfg.h\"\n #include \"tree-dump.h\"\n+#include \"print-tree.h\"\n \n /* Define the hash table of nodes already seen.\n    Such nodes are not repeated; brief cross-references are used.  */\n \n #define HASH_SIZE 37\n \n-struct bucket\n-{\n-  tree node;\n-  struct bucket *next;\n-};\n-\n-static struct bucket **table;\n+static hash_set<tree> *table = NULL;\n \n /* Print PREFIX and ADDR to FILE.  */\n void\n@@ -176,10 +171,9 @@ indent_to (FILE *file, int column)\n    starting in column INDENT.  */\n \n void\n-print_node (FILE *file, const char *prefix, tree node, int indent)\n+print_node (FILE *file, const char *prefix, tree node, int indent,\n+\t    bool brief_for_visited)\n {\n-  int hash;\n-  struct bucket *b;\n   machine_mode mode;\n   enum tree_code_class tclass;\n   int len;\n@@ -219,21 +213,14 @@ print_node (FILE *file, const char *prefix, tree node, int indent)\n   /* Allow this function to be called if the table is not there.  */\n   if (table)\n     {\n-      hash = ((uintptr_t) node) % HASH_SIZE;\n-\n       /* If node is in the table, just mention its address.  */\n-      for (b = table[hash]; b; b = b->next)\n-\tif (b->node == node)\n-\t  {\n-\t    print_node_brief (file, prefix, node, indent);\n-\t    return;\n-\t  }\n+      if (table->contains (node) && brief_for_visited)\n+\t{\n+\t  print_node_brief (file, prefix, node, indent);\n+\t  return;\n+\t}\n \n-      /* Add this node to the table.  */\n-      b = XNEW (struct bucket);\n-      b->node = node;\n-      b->next = table[hash];\n-      table[hash] = b;\n+      table->add (node);\n     }\n \n   /* Indent to the specified column, since this is the long form.  */\n@@ -846,8 +833,8 @@ print_node (FILE *file, const char *prefix, tree node, int indent)\n \t    FOR_EACH_CONSTRUCTOR_ELT (CONSTRUCTOR_ELTS (node),\n \t\t\t\t      cnt, index, value)\n \t      {\n-\t\tprint_node (file, \"idx\", index, indent + 4);\n-\t\tprint_node (file, \"val\", value, indent + 4);\n+\t\tprint_node (file, \"idx\", index, indent + 4, false);\n+\t\tprint_node (file, \"val\", value, indent + 4, false);\n \t      }\n \t  }\n \t  break;\n@@ -997,10 +984,10 @@ print_node (FILE *file, const char *prefix, tree node, int indent)\n DEBUG_FUNCTION void\n debug_tree (tree node)\n {\n-  table = XCNEWVEC (struct bucket *, HASH_SIZE);\n+  table = new hash_set<tree> (HASH_SIZE);\n   print_node (stderr, \"\", node, 0);\n-  free (table);\n-  table = 0;\n+  delete table;\n+  table = NULL;\n   putc ('\\n', stderr);\n }\n "}, {"sha": "fd610f912ede1df0cf109fc8b2434fe4e7b70f4b", "filename": "gcc/print-tree.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47044ef2f54892a508c45cdb226da13062314818/gcc%2Fprint-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47044ef2f54892a508c45cdb226da13062314818/gcc%2Fprint-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-tree.h?ref=47044ef2f54892a508c45cdb226da13062314818", "patch": "@@ -38,7 +38,8 @@ extern void debug_raw (vec<tree, va_gc> &ref);\n extern void debug_raw (vec<tree, va_gc> *ptr);\n #ifdef BUFSIZ\n extern void dump_addr (FILE*, const char *, const void *);\n-extern void print_node (FILE *, const char *, tree, int);\n+extern void print_node (FILE *, const char *, tree, int,\n+\t\t\tbool brief_for_visited = true);\n extern void print_node_brief (FILE *, const char *, const_tree, int);\n extern void indent_to (FILE *, int);\n #endif"}]}