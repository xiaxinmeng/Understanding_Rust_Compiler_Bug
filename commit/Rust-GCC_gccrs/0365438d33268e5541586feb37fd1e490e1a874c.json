{"sha": "0365438d33268e5541586feb37fd1e490e1a874c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM2NTQzOGQzMzI2OGU1NTQxNTg2ZmViMzdmZDFlNDkwZTFhODc0Yw==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-06-10T01:14:54Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-06-10T01:14:54Z"}, "message": "reload.c (find_reloads_toplev): Use gen_lowpart common to convert between constant representations when...\n\n        * reload.c (find_reloads_toplev): Use gen_lowpart common to convert\n        between constant representations when we have (SUBREG (REG)) with\n        REG equivalent to a constant.\n\nFrom-SVN: r20398", "tree": {"sha": "431bc695301bcebe9110846311e9adda1846f827", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/431bc695301bcebe9110846311e9adda1846f827"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0365438d33268e5541586feb37fd1e490e1a874c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0365438d33268e5541586feb37fd1e490e1a874c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0365438d33268e5541586feb37fd1e490e1a874c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0365438d33268e5541586feb37fd1e490e1a874c/comments", "author": null, "committer": null, "parents": [{"sha": "93ec7bc577c7da136780a6a7e2196c7b6e1b9cc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93ec7bc577c7da136780a6a7e2196c7b6e1b9cc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93ec7bc577c7da136780a6a7e2196c7b6e1b9cc4"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "8f0f748b185870be5ef0bf03409f7da592166872", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0365438d33268e5541586feb37fd1e490e1a874c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0365438d33268e5541586feb37fd1e490e1a874c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0365438d33268e5541586feb37fd1e490e1a874c", "patch": "@@ -1,3 +1,9 @@\n+Wed Jun 10 02:11:55 1998  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* reload.c (find_reloads_toplev): Use gen_lowpart common to convert\n+\tbetween constant representations when we have (SUBREG (REG)) with\n+\tREG equivalent to a constant.\n+\n Wed Jun 10 01:39:00 1998  Juha Sarlin <juha@c3l.tyreso.se> \n \n \t* h8300.c (get_shift_alg): Add special cases for shifts of 8 and 24."}, {"sha": "172fa67340eb5111d08d954edebce1762e5eb19c", "filename": "gcc/reload.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0365438d33268e5541586feb37fd1e490e1a874c/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0365438d33268e5541586feb37fd1e490e1a874c/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=0365438d33268e5541586feb37fd1e490e1a874c", "patch": "@@ -4289,7 +4289,18 @@ find_reloads_toplev (x, opnum, type, ind_levels, is_set_dest)\n \t  && (tem = operand_subword (reg_equiv_constant[regno],\n \t\t\t\t     SUBREG_WORD (x), 0,\n \t\t\t\t     GET_MODE (SUBREG_REG (x)))) != 0)\n-\treturn tem;\n+\t{\n+\t  /* TEM is now a word sized constant for the bits from X that\n+\t     we wanted.  However, TEM may be the wrong representation.\n+\n+\t     Use gen_lowpart_common to convert a CONST_INT into a\n+\t     CONST_DOUBLE and vice versa as needed according to by the mode\n+\t     of the SUBREG.  */\n+\t  tem = gen_lowpart_common (GET_MODE (x), tem);\n+\t  if (!tem)\n+\t    abort ();\n+\t  return tem;\n+\t}\n \n       /* If the SUBREG is wider than a word, the above test will fail.\n \t For example, we might have a SImode SUBREG of a DImode SUBREG_REG"}]}