{"sha": "7f811f38cec5a8c81b6acc44776860c7f0bf9ab1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Y4MTFmMzhjZWM1YThjODFiNmFjYzQ0Nzc2ODYwYzdmMGJmOWFiMQ==", "commit": {"author": {"name": "Matthew Fortune", "email": "matthew.fortune@imgtec.com", "date": "2017-02-24T22:35:59Z"}, "committer": {"name": "Matthew Fortune", "email": "mpf@gcc.gnu.org", "date": "2017-02-24T22:35:59Z"}, "message": "Add documentation for -mload-store-pairs\n\ngcc/\n\tPR target/79473\n\t* doc/invoke.texi: Document -mload-store-pairs.\n\nFrom-SVN: r245725", "tree": {"sha": "5f7660bae7b17fb7ea2f3343c36b3f903d1c5214", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f7660bae7b17fb7ea2f3343c36b3f903d1c5214"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f811f38cec5a8c81b6acc44776860c7f0bf9ab1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f811f38cec5a8c81b6acc44776860c7f0bf9ab1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f811f38cec5a8c81b6acc44776860c7f0bf9ab1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f811f38cec5a8c81b6acc44776860c7f0bf9ab1/comments", "author": {"login": "mfortune", "id": 10220247, "node_id": "MDQ6VXNlcjEwMjIwMjQ3", "avatar_url": "https://avatars.githubusercontent.com/u/10220247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mfortune", "html_url": "https://github.com/mfortune", "followers_url": "https://api.github.com/users/mfortune/followers", "following_url": "https://api.github.com/users/mfortune/following{/other_user}", "gists_url": "https://api.github.com/users/mfortune/gists{/gist_id}", "starred_url": "https://api.github.com/users/mfortune/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mfortune/subscriptions", "organizations_url": "https://api.github.com/users/mfortune/orgs", "repos_url": "https://api.github.com/users/mfortune/repos", "events_url": "https://api.github.com/users/mfortune/events{/privacy}", "received_events_url": "https://api.github.com/users/mfortune/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "039f4db92051767d931d131a5ec2c7633061a2ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/039f4db92051767d931d131a5ec2c7633061a2ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/039f4db92051767d931d131a5ec2c7633061a2ed"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "a48aebafd8dd272c8d02003eb6fd6ac346ee5628", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f811f38cec5a8c81b6acc44776860c7f0bf9ab1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f811f38cec5a8c81b6acc44776860c7f0bf9ab1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7f811f38cec5a8c81b6acc44776860c7f0bf9ab1", "patch": "@@ -1,3 +1,8 @@\n+2017-02-24  Matthew Fortune  <matthew.fortune@imgtec.com>\n+\n+\tPR target/79473\n+\t* doc/invoke.texi: Document -mload-store-pairs.\n+\n 2017-02-24  Segher Boessenkool  <segher@kernel.crashing.org>\n \t    Sandra Loosemore  <sandra@codesourcery.com>\n "}, {"sha": "5285f04ec6f8ad85b547b23b69306e1746d79d1c", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f811f38cec5a8c81b6acc44776860c7f0bf9ab1/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f811f38cec5a8c81b6acc44776860c7f0bf9ab1/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=7f811f38cec5a8c81b6acc44776860c7f0bf9ab1", "patch": "@@ -879,6 +879,7 @@ Objective-C and Objective-C++ Dialects}.\n -mexplicit-relocs  -mno-explicit-relocs @gol\n -mcheck-zero-division  -mno-check-zero-division @gol\n -mdivide-traps  -mdivide-breaks @gol\n+-mload-store-pairs  -mno-load-store-pairs @gol\n -mmemcpy  -mno-memcpy  -mlong-calls  -mno-long-calls @gol\n -mmad  -mno-mad  -mimadd  -mno-imadd  -mfused-madd  -mno-fused-madd  -nocpp @gol\n -mfix-24k  -mno-fix-24k @gol\n@@ -19495,6 +19496,15 @@ overridden at configure time using @option{--with-divide=breaks}.\n Divide-by-zero checks can be completely disabled using\n @option{-mno-check-zero-division}.\n \n+@item -mload-store-pairs\n+@itemx -mno-load-store-pairs\n+@opindex mload-store-pairs\n+@opindex mno-load-store-pairs\n+Enable (disable) an optimization that pairs consecutive load or store\n+instructions to enable load/store bonding.  This option is enabled by\n+default but only takes effect when the selected architecture is known\n+to support bonding.\n+\n @item -mmemcpy\n @itemx -mno-memcpy\n @opindex mmemcpy"}]}