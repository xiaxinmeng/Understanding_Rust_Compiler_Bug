{"sha": "e5b962d0ccb213b6ad1f2ba4d6a0b84c9e94b046", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTViOTYyZDBjY2IyMTNiNmFkMWYyYmE0ZDZhMGI4NGM5ZTk0YjA0Ng==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2013-06-13T10:00:04Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2013-06-13T10:00:04Z"}, "message": "ipa.c (cgraph_externally_visible_p, [...]): Local comdats are not externally visible.\n\n\n\t* ipa.c (cgraph_externally_visible_p, varpool_externally_visible_p):\n\tLocal comdats are not externally visible.\n\t* symtab.c (dump_symtab_base): Dump externally visible.\n\t(verify_symtab_base): Verify back links in the symtab hash.\n\nFrom-SVN: r200064", "tree": {"sha": "56d91bbff9c3f0ae370755a4ad8ff8b876842047", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56d91bbff9c3f0ae370755a4ad8ff8b876842047"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5b962d0ccb213b6ad1f2ba4d6a0b84c9e94b046", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5b962d0ccb213b6ad1f2ba4d6a0b84c9e94b046", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5b962d0ccb213b6ad1f2ba4d6a0b84c9e94b046", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5b962d0ccb213b6ad1f2ba4d6a0b84c9e94b046/comments", "author": null, "committer": null, "parents": [{"sha": "a8355e51785ca09eadc0e56afd0778c4ce076e2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8355e51785ca09eadc0e56afd0778c4ce076e2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8355e51785ca09eadc0e56afd0778c4ce076e2f"}], "stats": {"total": 25, "additions": 21, "deletions": 4}, "files": [{"sha": "c37468695f51ca1d5883313217f4a53b7e6a595a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5b962d0ccb213b6ad1f2ba4d6a0b84c9e94b046/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5b962d0ccb213b6ad1f2ba4d6a0b84c9e94b046/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e5b962d0ccb213b6ad1f2ba4d6a0b84c9e94b046", "patch": "@@ -1,3 +1,10 @@\n+2013-06-13  Jan Hubicka  <jh@suse.cz>\n+\n+\t* ipa.c (cgraph_externally_visible_p, varpool_externally_visible_p):\n+\tLocal comdats are not externally visible.\n+\t* symtab.c (dump_symtab_base): Dump externally visible.\n+\t(verify_symtab_base): Verify back links in the symtab hash.\n+\n 2013-06-13  Bin Cheng  <bin.cheng@arm.com>\n \n \t* fold-const.c (operand_equal_p): Consider NOP_EXPR and"}, {"sha": "0f2a5c8b424d0f9594d8b520c33b5b25c6b347de", "filename": "gcc/ipa.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5b962d0ccb213b6ad1f2ba4d6a0b84c9e94b046/gcc%2Fipa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5b962d0ccb213b6ad1f2ba4d6a0b84c9e94b046/gcc%2Fipa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa.c?ref=e5b962d0ccb213b6ad1f2ba4d6a0b84c9e94b046", "patch": "@@ -606,9 +606,8 @@ cgraph_externally_visible_p (struct cgraph_node *node,\n {\n   if (!node->symbol.definition)\n     return false;\n-  if (!DECL_COMDAT (node->symbol.decl)\n-      && (!TREE_PUBLIC (node->symbol.decl)\n-\t  || DECL_EXTERNAL (node->symbol.decl)))\n+  if (!TREE_PUBLIC (node->symbol.decl)\n+      || DECL_EXTERNAL (node->symbol.decl))\n     return false;\n \n   /* Do not try to localize built-in functions yet.  One of problems is that we\n@@ -667,7 +666,7 @@ varpool_externally_visible_p (struct varpool_node *vnode)\n   if (DECL_EXTERNAL (vnode->symbol.decl))\n     return true;\n \n-  if (!DECL_COMDAT (vnode->symbol.decl) && !TREE_PUBLIC (vnode->symbol.decl))\n+  if (!TREE_PUBLIC (vnode->symbol.decl))\n     return false;\n \n   /* If linker counts on us, we must preserve the function.  */"}, {"sha": "85d47a81a1fa5c2ebedcb062d53c3eab11eda548", "filename": "gcc/symtab.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5b962d0ccb213b6ad1f2ba4d6a0b84c9e94b046/gcc%2Fsymtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5b962d0ccb213b6ad1f2ba4d6a0b84c9e94b046/gcc%2Fsymtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsymtab.c?ref=e5b962d0ccb213b6ad1f2ba4d6a0b84c9e94b046", "patch": "@@ -508,6 +508,8 @@ dump_symtab_base (FILE *f, symtab_node node)\n     fprintf (f, \" force_output\");\n   if (node->symbol.forced_by_abi)\n     fprintf (f, \" forced_by_abi\");\n+  if (node->symbol.externally_visible)\n+    fprintf (f, \" externally_visible\");\n   if (node->symbol.resolution != LDPR_UNKNOWN)\n     fprintf (f, \" %s\",\n  \t     ld_plugin_symbol_resolution_names[(int)node->symbol.resolution]);\n@@ -655,6 +657,15 @@ verify_symtab_base (symtab_node node)\n \t  error (\"node not found in symtab decl hashtable\");\n \t  error_found = true;\n \t}\n+      if (hashed_node != node\n+\t  && (!is_a <cgraph_node> (node)\n+\t      || !dyn_cast <cgraph_node> (node)->clone_of\n+\t      || dyn_cast <cgraph_node> (node)->clone_of->symbol.decl\n+\t\t != node->symbol.decl))\n+\t{\n+\t  error (\"node differs from symtab decl hashtable\");\n+\t  error_found = true;\n+\t}\n     }\n   if (assembler_name_hash)\n     {"}]}