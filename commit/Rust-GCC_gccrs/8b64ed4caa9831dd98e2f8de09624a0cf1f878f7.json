{"sha": "8b64ed4caa9831dd98e2f8de09624a0cf1f878f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGI2NGVkNGNhYTk4MzFkZDk4ZTJmOGRlMDk2MjRhMGNmMWY4NzhmNw==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2014-11-20T11:39:44Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-11-20T11:39:44Z"}, "message": "sem_ch13.adb: Complete previous change.\n\n2014-11-20  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_ch13.adb: Complete previous change.\n\t* exp_dist.adb, exp_dist.ads: Rework PolyORB/DSA arguments processing\n\tcircuitry to correctly handle the case of non-private limited\n\tunconstrained formals.\n\nFrom-SVN: r217845", "tree": {"sha": "58c824c437db1da9dbc8aa5ceaf3bc153879f364", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58c824c437db1da9dbc8aa5ceaf3bc153879f364"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b64ed4caa9831dd98e2f8de09624a0cf1f878f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b64ed4caa9831dd98e2f8de09624a0cf1f878f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b64ed4caa9831dd98e2f8de09624a0cf1f878f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b64ed4caa9831dd98e2f8de09624a0cf1f878f7/comments", "author": null, "committer": null, "parents": [{"sha": "5e9d6f05dd961d83f8318e2c9001ccde2a18c219", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e9d6f05dd961d83f8318e2c9001ccde2a18c219", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e9d6f05dd961d83f8318e2c9001ccde2a18c219"}], "stats": {"total": 237, "additions": 157, "deletions": 80}, "files": [{"sha": "8d4690099445d93a88060ab2e0e2d2b259226ef2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b64ed4caa9831dd98e2f8de09624a0cf1f878f7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b64ed4caa9831dd98e2f8de09624a0cf1f878f7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8b64ed4caa9831dd98e2f8de09624a0cf1f878f7", "patch": "@@ -1,3 +1,10 @@\n+2014-11-20  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_ch13.adb: Complete previous change.\n+\t* exp_dist.adb, exp_dist.ads: Rework PolyORB/DSA arguments processing\n+\tcircuitry to correctly handle the case of non-private limited\n+\tunconstrained formals.\n+\n 2014-11-20  Robert Dewar  <dewar@adacore.com>\n \n \t* freeze.adb, exp_dbug.adb, sem_ch13.adb: Minor reformatting."}, {"sha": "0972e83f81e8b4acb7378b5d8c9777276a700db1", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 135, "deletions": 72, "changes": 207, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b64ed4caa9831dd98e2f8de09624a0cf1f878f7/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b64ed4caa9831dd98e2f8de09624a0cf1f878f7/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=8b64ed4caa9831dd98e2f8de09624a0cf1f878f7", "patch": "@@ -802,15 +802,18 @@ package body Exp_Dist is\n          --  the declaration and entity for the newly-created function.\n \n          function Build_To_Any_Call\n-           (Loc   : Source_Ptr;\n-            N     : Node_Id;\n-            Decls : List_Id) return Node_Id;\n+           (Loc         : Source_Ptr;\n+            N           : Node_Id;\n+            Decls       : List_Id;\n+            Constrained : Boolean := False) return Node_Id;\n          --  Build call to To_Any attribute function with expression as actual\n-         --  parameter. Loc is the reference location ofr generated nodes,\n+         --  parameter. Loc is the reference location of generated nodes,\n          --  Decls is the declarations list for an appropriate enclosing scope\n          --  of the point where the call will be inserted; if the To_Any\n          --  attribute for the type of N needs to be generated at this point,\n-         --  its declaration is appended to Decls.\n+         --  its declaration is appended to Decls. For the case of a limited\n+         --  type, there is an additional parameter Constrained indicating\n+         --  whether 'Write (when True) or 'Output (when False) is used.\n \n          procedure Build_To_Any_Function\n            (Loc  : Source_Ptr;\n@@ -853,11 +856,12 @@ package body Exp_Dist is\n          --  containing the name of E, the second containing its repository id.\n \n          procedure Assign_Opaque_From_Any\n-           (Loc    : Source_Ptr;\n-            Stms   : List_Id;\n-            Typ    : Entity_Id;\n-            N      : Node_Id;\n-            Target : Entity_Id);\n+           (Loc         : Source_Ptr;\n+            Stms        : List_Id;\n+            Typ         : Entity_Id;\n+            N           : Node_Id;\n+            Target      : Entity_Id;\n+            Constrained : Boolean := False);\n          --  For a Target object of type Typ, which has opaque representation\n          --  as a sequence of octets determined by stream attributes (which\n          --  includes all limited types), append code to Stmts performing the\n@@ -866,6 +870,9 @@ package body Exp_Dist is\n          --\n          --  or, if Target is Empty:\n          --    return Typ'From_Any (N)\n+         --\n+         --  Constrained determines whether 'Input (when False) or 'Read\n+         --  (when True) is used.\n \n       end Helpers;\n \n@@ -880,9 +887,10 @@ package body Exp_Dist is\n      renames PolyORB_Support.Helpers.Build_From_Any_Call;\n \n    function Build_To_Any_Call\n-     (Loc   : Source_Ptr;\n-      N     : Node_Id;\n-      Decls : List_Id) return Node_Id\n+     (Loc         : Source_Ptr;\n+      N           : Node_Id;\n+      Decls       : List_Id;\n+      Constrained : Boolean := False) return Node_Id\n      renames PolyORB_Support.Helpers.Build_To_Any_Call;\n \n    function Build_TypeCode_Call\n@@ -7395,11 +7403,13 @@ package body Exp_Dist is\n                   then\n                      if Is_Limited_Type (Etyp) then\n                         Helpers.Assign_Opaque_From_Any (Loc,\n-                           Stms   => After_Statements,\n-                           Typ    => Etyp,\n-                           N      => New_Occurrence_Of (Any, Loc),\n-                           Target =>\n-                             Defining_Identifier (Current_Parameter));\n+                           Stms        => After_Statements,\n+                           Typ         => Etyp,\n+                           N           => New_Occurrence_Of (Any, Loc),\n+                           Target      =>\n+                             Defining_Identifier (Current_Parameter),\n+                           Constrained => True);\n+\n                      else\n                         Append_To (After_Statements,\n                           Make_Assignment_Statement (Loc,\n@@ -7925,7 +7935,7 @@ package body Exp_Dist is\n                --  An out parameter may be written back using a 'Write\n                --  attribute instead of a 'Output because it has been\n                --  constrained by the parameter given to the caller. Note that\n-               --  out controlling arguments in the case of a RACW are not put\n+               --  OUT controlling arguments in the case of a RACW are not put\n                --  back in the stream because the pointer on them has not\n                --  changed.\n \n@@ -7938,7 +7948,10 @@ package body Exp_Dist is\n                       Parameter_Associations => New_List (\n                         New_Occurrence_Of (Any, Loc),\n                         PolyORB_Support.Helpers.Build_To_Any_Call\n-                          (Loc, New_Occurrence_Of (Object, Loc), Decls))));\n+                          (Loc,\n+                           New_Occurrence_Of (Object, Loc),\n+                           Decls,\n+                           Constrained => True))));\n                end if;\n \n                --  For RACW controlling formals, the Etyp of Object is always\n@@ -8314,11 +8327,12 @@ package body Exp_Dist is\n          -----------------------------\n \n          procedure Assign_Opaque_From_Any\n-           (Loc    : Source_Ptr;\n-            Stms   : List_Id;\n-            Typ    : Entity_Id;\n-            N      : Node_Id;\n-            Target : Entity_Id)\n+           (Loc         : Source_Ptr;\n+            Stms        : List_Id;\n+            Typ         : Entity_Id;\n+            N           : Node_Id;\n+            Target      : Entity_Id;\n+            Constrained : Boolean := False)\n          is\n             Strm : constant Entity_Id := Make_Temporary (Loc, 'S');\n             Expr : Node_Id;\n@@ -8345,7 +8359,7 @@ package body Exp_Dist is\n                   N,\n                   New_Occurrence_Of (Strm, Loc))));\n \n-            if Transmit_As_Unconstrained (Typ) then\n+            if Transmit_As_Unconstrained (Typ) and then not Constrained then\n                Expr :=\n                  Make_Attribute_Reference (Loc,\n                    Prefix         => New_Occurrence_Of (Typ, Loc),\n@@ -9223,9 +9237,10 @@ package body Exp_Dist is\n          -----------------------\n \n          function Build_To_Any_Call\n-           (Loc   : Source_Ptr;\n-            N     : Node_Id;\n-            Decls : List_Id) return Node_Id\n+           (Loc         : Source_Ptr;\n+            N           : Node_Id;\n+            Decls       : List_Id;\n+            Constrained : Boolean := False) return Node_Id\n          is\n             Typ    : Entity_Id := Etype (N);\n             U_Type : Entity_Id;\n@@ -9382,11 +9397,20 @@ package body Exp_Dist is\n                C_Type := U_Type;\n             end if;\n \n-            return\n-                Make_Function_Call (Loc,\n-                  Name                   => New_Occurrence_Of (Fnam, Loc),\n-                  Parameter_Associations =>\n-                    New_List (OK_Convert_To (C_Type, N)));\n+            declare\n+               Params : constant List_Id :=\n+                 New_List (OK_Convert_To (C_Type, N));\n+            begin\n+               if Is_Limited_Type (C_Type) then\n+                  Append_To (Params,\n+                    New_Occurrence_Of (Boolean_Literals (Constrained), Loc));\n+               end if;\n+\n+               return\n+                   Make_Function_Call (Loc,\n+                     Name                   => New_Occurrence_Of (Fnam, Loc),\n+                     Parameter_Associations => Params);\n+            end;\n          end Build_To_Any_Call;\n \n          ---------------------------\n@@ -9399,13 +9423,15 @@ package body Exp_Dist is\n             Decl : out Node_Id;\n             Fnam : out Entity_Id)\n          is\n-            Spec  : Node_Id;\n-            Decls : constant List_Id := New_List;\n-            Stms  : constant List_Id := New_List;\n+            Spec   : Node_Id;\n+            Params : List_Id;\n+            Decls  : List_Id;\n+            Stms   : List_Id;\n \n-            Expr_Parameter : Entity_Id;\n-            Any            : Entity_Id;\n-            Result_TC      : Node_Id;\n+            Expr_Formal : Entity_Id;\n+            Cstr_Formal : Entity_Id;\n+            Any         : Entity_Id;\n+            Result_TC   : Node_Id;\n \n             Any_Decl  : Node_Id;\n \n@@ -9428,21 +9454,36 @@ package body Exp_Dist is\n                return;\n             end if;\n \n-            Expr_Parameter := Make_Defining_Identifier (Loc, Name_E);\n-            Any            := Make_Defining_Identifier (Loc, Name_A);\n-            Result_TC      := Build_TypeCode_Call (Loc, Typ, Decls);\n+            Decls := New_List;\n+            Stms  := New_List;\n+\n+            Any         := Make_Defining_Identifier (Loc, Name_A);\n+            Result_TC   := Build_TypeCode_Call (Loc, Typ, Decls);\n \n             Fnam := Make_Helper_Function_Name (Loc, Typ, Name_To_Any);\n \n+            Expr_Formal := Make_Defining_Identifier (Loc, Name_E);\n+            Params := New_List (\n+              Make_Parameter_Specification (Loc,\n+                Defining_Identifier => Expr_Formal,\n+                Parameter_Type      => New_Occurrence_Of (Typ, Loc)));\n+            Set_Etype (Expr_Formal, Typ);\n+\n+            if Is_Limited_Type (Typ) then\n+               Cstr_Formal := Make_Defining_Identifier (Loc, Name_C);\n+               Append_To (Params,\n+                 Make_Parameter_Specification (Loc,\n+                   Defining_Identifier => Cstr_Formal,\n+                   Parameter_Type      =>\n+                     New_Occurrence_Of (Standard_Boolean, Loc)));\n+            end if;\n+\n             Spec :=\n               Make_Function_Specification (Loc,\n-                Defining_Unit_Name => Fnam,\n-                Parameter_Specifications => New_List (\n-                  Make_Parameter_Specification (Loc,\n-                    Defining_Identifier => Expr_Parameter,\n-                    Parameter_Type => New_Occurrence_Of (Typ, Loc))),\n-                Result_Definition  => New_Occurrence_Of (RTE (RE_Any), Loc));\n-            Set_Etype (Expr_Parameter, Typ);\n+                Defining_Unit_Name       => Fnam,\n+                Parameter_Specifications => Params,\n+                Result_Definition        =>\n+                  New_Occurrence_Of (RTE (RE_Any), Loc));\n \n             Any_Decl :=\n               Make_Object_Declaration (Loc,\n@@ -9472,7 +9513,7 @@ package body Exp_Dist is\n                   Expr    : constant Node_Id :=\n                               OK_Convert_To\n                                 (Rt_Type,\n-                                 New_Occurrence_Of (Expr_Parameter, Loc));\n+                                 New_Occurrence_Of (Expr_Formal, Loc));\n                begin\n                   Set_Expression (Any_Decl,\n                     Build_To_Any_Call (Loc, Expr, Decls));\n@@ -9487,7 +9528,7 @@ package body Exp_Dist is\n                      Rt_Type : constant Entity_Id := Etype (Typ);\n                      Expr    : constant Node_Id :=\n                                  OK_Convert_To (Rt_Type,\n-                                   New_Occurrence_Of (Expr_Parameter, Loc));\n+                                   New_Occurrence_Of (Expr_Formal, Loc));\n \n                   begin\n                      Set_Expression\n@@ -9514,7 +9555,7 @@ package body Exp_Dist is\n \n                      procedure TA_Append_Record_Traversal is\n                         new Append_Record_Traversal\n-                          (Rec                 => Expr_Parameter,\n+                          (Rec                 => Expr_Formal,\n                            Add_Process_Element => TA_Rec_Add_Process_Element);\n \n                      --------------------------------\n@@ -9762,7 +9803,7 @@ package body Exp_Dist is\n                               Discriminant : constant Entity_Id :=\n                                                Make_Selected_Component (Loc,\n                                                  Prefix        =>\n-                                                   Expr_Parameter,\n+                                                   Expr_Formal,\n                                                  Selector_Name =>\n                                                    Chars (Disc));\n \n@@ -9880,7 +9921,7 @@ package body Exp_Dist is\n                   procedure Append_To_Any_Array_Iterator is\n                     new Append_Array_Traversal (\n                       Subprogram => Fnam,\n-                      Arry       => Expr_Parameter,\n+                      Arry       => Expr_Formal,\n                       Indexes    => New_List,\n                       Add_Process_Element => TA_Ary_Add_Process_Element);\n \n@@ -9908,7 +9949,7 @@ package body Exp_Dist is\n                                 OK_Convert_To (Etype (Index),\n                                   Make_Attribute_Reference (Loc,\n                                     Prefix         =>\n-                                      New_Occurrence_Of (Expr_Parameter, Loc),\n+                                      New_Occurrence_Of (Expr_Formal, Loc),\n                                     Attribute_Name => Name_First,\n                                     Expressions    => New_List (\n                                       Make_Integer_Literal (Loc, J)))),\n@@ -9928,7 +9969,7 @@ package body Exp_Dist is\n                  Build_To_Any_Call (Loc,\n                    OK_Convert_To (\n                      Find_Numeric_Representation (Typ),\n-                     New_Occurrence_Of (Expr_Parameter, Loc)),\n+                     New_Occurrence_Of (Expr_Formal, Loc)),\n                    Decls));\n \n             else\n@@ -9958,27 +9999,49 @@ package body Exp_Dist is\n                   --    T'Output (Strm'Access, E);\n                   --  or\n                   --    T'Write (Strm'Access, E);\n-                  --  depending on whether to transmit as unconstrained\n+                  --  depending on whether to transmit as unconstrained.\n+\n+                  --  For limited types, select at run time depending on\n+                  --  Constrained parameter.\n \n                   declare\n-                     Attr_Name : Name_Id;\n+                     function Stream_Call (Attr : Name_Id) return Node_Id;\n+                     --  Return a call to the named attribute\n+\n+                     -----------------\n+                     -- Stream_Call --\n+                     -----------------\n+\n+                     function Stream_Call (Attr : Name_Id) return Node_Id is\n+                     begin\n+                        return Make_Attribute_Reference (Loc,\n+                                 Prefix         =>\n+                                   New_Occurrence_Of (Typ, Loc),\n+                                 Attribute_Name => Attr,\n+                                 Expressions    => New_List (\n+                                   Make_Attribute_Reference (Loc,\n+                                     Prefix         =>\n+                                       New_Occurrence_Of (Strm, Loc),\n+                                     Attribute_Name => Name_Access),\n+                                   New_Occurrence_Of (Expr_Formal, Loc)));\n+\n+                     end Stream_Call;\n \n                   begin\n-                     if Transmit_As_Unconstrained (Typ) then\n-                        Attr_Name := Name_Output;\n+                     if Is_Limited_Type (Typ) then\n+                        Append_To (Stms,\n+                          Make_Implicit_If_Statement (Typ,\n+                            Condition => New_Occurrence_Of (Cstr_Formal, Loc),\n+                            Then_Statements => New_List (\n+                              Stream_Call (Name_Write)),\n+                            Else_Statements => New_List (\n+                              Stream_Call (Name_Output))));\n+\n+                     elsif Transmit_As_Unconstrained (Typ) then\n+                        Append_To (Stms, Stream_Call (Name_Output));\n                      else\n-                        Attr_Name := Name_Write;\n+                        Append_To (Stms, Stream_Call (Name_Write));\n                      end if;\n-\n-                     Append_To (Stms,\n-                         Make_Attribute_Reference (Loc,\n-                           Prefix         => New_Occurrence_Of (Typ, Loc),\n-                           Attribute_Name => Attr_Name,\n-                           Expressions    => New_List (\n-                             Make_Attribute_Reference (Loc,\n-                               Prefix         => New_Occurrence_Of (Strm, Loc),\n-                               Attribute_Name => Name_Access),\n-                             New_Occurrence_Of (Expr_Parameter, Loc))));\n                   end;\n \n                   --  Generate:"}, {"sha": "a60d012fc3882fd7ec38c32ca0abc37804f925e7", "filename": "gcc/ada/exp_dist.ads", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b64ed4caa9831dd98e2f8de09624a0cf1f878f7/gcc%2Fada%2Fexp_dist.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b64ed4caa9831dd98e2f8de09624a0cf1f878f7/gcc%2Fada%2Fexp_dist.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.ads?ref=8b64ed4caa9831dd98e2f8de09624a0cf1f878f7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -146,14 +146,17 @@ package Exp_Dist is\n    --  declaration is appended to Decls.\n \n    function Build_To_Any_Call\n-     (Loc   : Source_Ptr;\n-      N     : Node_Id;\n-      Decls : List_Id) return Node_Id;\n+     (Loc         : Source_Ptr;\n+      N           : Node_Id;\n+      Decls       : List_Id;\n+      Constrained : Boolean := False) return Node_Id;\n    --  Build call to To_Any attribute function with expression as actual\n    --  parameter. Loc is the reference location for generated nodes, Decls is\n    --  the declarations list for an appropriate enclosing scope of the point\n    --  where the call will be inserted; if the To_Any attribute for Typ needs\n    --  to be generated at this point, its declaration is appended to Decls.\n+   --  For limited types, if Constrained is True then use 'Write else use\n+   --  'Output.\n \n    function Build_TypeCode_Call\n      (Loc   : Source_Ptr;"}, {"sha": "2f22e0a4b8033fdb85149803308121820724f841", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b64ed4caa9831dd98e2f8de09624a0cf1f878f7/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b64ed4caa9831dd98e2f8de09624a0cf1f878f7/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=8b64ed4caa9831dd98e2f8de09624a0cf1f878f7", "patch": "@@ -10912,27 +10912,31 @@ package body Sem_Ch13 is\n                end if;\n             end if;\n \n-            --  Scalar_Storage_Order (first subtypes only)\n+            --  Scalar_Storage_Order\n+\n+            --  Note: the aspect is specified on a first subtype, but recorded\n+            --  in a flag of the base type!\n \n             if (Is_Record_Type (Typ) or else Is_Array_Type (Typ))\n                  and then\n-               Is_First_Subtype (Typ)\n+               Typ = Bas_Typ\n             then\n \n                --  For a type extension, always inherit from parent; otherwise\n                --  inherit if no default applies. Note: we do not check for\n                --  an explicit rep item on the parent type when inheriting,\n                --  because the parent SSO may itself have been set by default.\n \n-               if not Has_Rep_Item (Typ, Name_Scalar_Storage_Order, False)\n+               if not Has_Rep_Item (First_Subtype (Typ),\n+                                    Name_Scalar_Storage_Order, False)\n                  and then (Is_Tagged_Type (Bas_Typ)\n                              or else\n                            not (SSO_Set_Low_By_Default  (Bas_Typ)\n                                   or else\n                                 SSO_Set_High_By_Default (Bas_Typ)))\n                then\n                   Set_Reverse_Storage_Order (Bas_Typ,\n-                    Reverse_Storage_Order (First_Subtype (Etype (Bas_Typ))));\n+                    Reverse_Storage_Order (Base_Type (Etype (Bas_Typ))));\n \n                   --  Clear default SSO indications, since the inherited aspect\n                   --  which was set explicitly overrides the default."}]}