{"sha": "4b8140a62f0e2560f55cca0866b5b16edb6e5b98", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGI4MTQwYTYyZjBlMjU2MGY1NWNjYTA4NjZiNWIxNmVkYjZlNWI5OA==", "commit": {"author": {"name": "John Carr", "email": "jfc@mit.edu", "date": "1998-01-13T09:06:31Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1998-01-13T09:06:31Z"}, "message": "gengenrtl.c (gencode): Emit new function obstack_alloc_rtx to allocate rtx.\n\n* gengenrtl.c (gencode): Emit new function obstack_alloc_rtx\nto allocate rtx.\n(gendef): Call obstack_alloc_rtx.\n\nFrom-SVN: r17327", "tree": {"sha": "bd55dcbcc5d1c4c2283b7758d4c0d2c4bde53f67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd55dcbcc5d1c4c2283b7758d4c0d2c4bde53f67"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b8140a62f0e2560f55cca0866b5b16edb6e5b98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b8140a62f0e2560f55cca0866b5b16edb6e5b98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b8140a62f0e2560f55cca0866b5b16edb6e5b98", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b8140a62f0e2560f55cca0866b5b16edb6e5b98/comments", "author": {"login": "VoxSciurorum", "id": 60116679, "node_id": "MDQ6VXNlcjYwMTE2Njc5", "avatar_url": "https://avatars.githubusercontent.com/u/60116679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VoxSciurorum", "html_url": "https://github.com/VoxSciurorum", "followers_url": "https://api.github.com/users/VoxSciurorum/followers", "following_url": "https://api.github.com/users/VoxSciurorum/following{/other_user}", "gists_url": "https://api.github.com/users/VoxSciurorum/gists{/gist_id}", "starred_url": "https://api.github.com/users/VoxSciurorum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VoxSciurorum/subscriptions", "organizations_url": "https://api.github.com/users/VoxSciurorum/orgs", "repos_url": "https://api.github.com/users/VoxSciurorum/repos", "events_url": "https://api.github.com/users/VoxSciurorum/events{/privacy}", "received_events_url": "https://api.github.com/users/VoxSciurorum/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "82de9b284f6d50ce36ad0839e2cb98b2ccbdb61c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82de9b284f6d50ce36ad0839e2cb98b2ccbdb61c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82de9b284f6d50ce36ad0839e2cb98b2ccbdb61c"}], "stats": {"total": 37, "additions": 23, "deletions": 14}, "files": [{"sha": "eac46089b9c629b82985d52db4f3a69263c501c7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b8140a62f0e2560f55cca0866b5b16edb6e5b98/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b8140a62f0e2560f55cca0866b5b16edb6e5b98/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4b8140a62f0e2560f55cca0866b5b16edb6e5b98", "patch": "@@ -1,3 +1,9 @@\n+Tue Jan 13 09:07:44 1998  John Carr  <jfc@mit.edu>\n+\n+\t* gengenrtl.c (gencode): Emit new function obstack_alloc_rtx\n+\tto allocate rtx.\n+\t(gendef): Call obstack_alloc_rtx.\n+\n Tue Jan 13 01:16:36 1998   Robert Lipe (robertl@dgii.com)\n \n \t* configure.in: (i[3456]86-UnixWare7-sysv5): Treat much like SVR4"}, {"sha": "b929f67e3075c39642ea33514178849fe4c8417f", "filename": "gcc/gengenrtl.c", "status": "modified", "additions": 17, "deletions": 14, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b8140a62f0e2560f55cca0866b5b16edb6e5b98/gcc%2Fgengenrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b8140a62f0e2560f55cca0866b5b16edb6e5b98/gcc%2Fgengenrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengenrtl.c?ref=4b8140a62f0e2560f55cca0866b5b16edb6e5b98", "patch": "@@ -184,16 +184,8 @@ gendef (f, format)\n \n   /* See rtx_alloc in rtl.c for comments.  */\n   fprintf (f, \"{\\n\");\n-  fprintf (f, \"  register int length = sizeof (struct rtx_def)\");\n-  fprintf (f, \" + %d * sizeof (rtunion);\\n\", strlen (format) - 1);\n-  fprintf (f, \"  rtx rt = (rtx)obstack_alloc (rtl_obstack, length);\\n\");\n-\n-  fprintf (f, \"  if (sizeof(struct rtx_def) - sizeof(rtunion) == sizeof(int))\\n\");\n-  fprintf (f, \"    *(int *)rt = 0;\\n\");\n-  fprintf (f, \"  else if (sizeof(struct rtx_def) - sizeof(rtunion) == sizeof(HOST_WIDE_INT))\\n\");\n-  fprintf (f, \"    *(HOST_WIDE_INT *)rt = 0;\\n\");\n-  fprintf (f, \"  else\\n\");\n-  fprintf (f, \"    bzero(rt, sizeof(struct rtx_def) - sizeof(rtunion));\\n\\n\");\n+  fprintf (f, \"  rtx rt = obstack_alloc_rtx (sizeof (struct rtx_def) + %d * sizeof (rtunion));\\n\",\n+\t   (int) strlen (format) - 1);\n \n   fprintf (f, \"  PUT_CODE (rt, code);\\n\");\n   fprintf (f, \"  PUT_MODE (rt, mode);\\n\");\n@@ -242,10 +234,21 @@ gencode (f)\n {\n   const char **fmt;\n \n-  fprintf(f, \"#include \\\"config.h\\\"\\n\");\n-  fprintf(f, \"#include \\\"obstack.h\\\"\\n\");\n-  fprintf(f, \"#include \\\"rtl.h\\\"\\n\\n\");\n-  fprintf(f, \"extern struct obstack *rtl_obstack;\\n\\n\");\n+  fputs (\"#include \\\"config.h\\\"\\n\", f);\n+  fputs (\"#include \\\"obstack.h\\\"\\n\", f);\n+  fputs (\"#include \\\"rtl.h\\\"\\n\\n\", f);\n+  fputs (\"extern struct obstack *rtl_obstack;\\n\\n\", f);\n+  fputs (\"static rtx obstack_alloc_rtx PROTO((int length));\\n\", f);\n+  fputs (\"static rtx obstack_alloc_rtx (length)\\n\", f);\n+  fputs (\"     register int length;\\n{\\n\", f);\n+  fputs (\"  rtx rt = (rtx) obstack_alloc (rtl_obstack, length);\\n\\n\", f);\n+  fputs (\"  if (sizeof(struct rtx_def) - sizeof(rtunion) == sizeof(int))\\n\", f);\n+  fputs (\"    *(int *)rt = 0;\\n\", f);\n+  fputs (\"  else if (sizeof(struct rtx_def) - sizeof(rtunion) == sizeof(HOST_WIDE_INT))\\n\", f);\n+  fputs (\"    *(HOST_WIDE_INT *)rt = 0;\\n\", f);\n+  fputs (\"  else\\n\", f);\n+  fputs (\"    bzero(rt, sizeof(struct rtx_def) - sizeof(rtunion));\\n\\n\", f);\n+  fputs (\"  return rt;\\n}\\n\\n\", f);\n \n   for (fmt = formats; *fmt; ++fmt)\n     gendef (f, *fmt);"}]}