{"sha": "c9ab1458499b9a3e3fcb398cf29e3349e775ee9b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzlhYjE0NTg0OTliOWEzZTNmY2IzOThjZjI5ZTMzNDllNzc1ZWU5Yg==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-10-14T10:35:26Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-10-14T10:35:26Z"}, "message": "Forgot to commit.\n\nFrom-SVN: r23083", "tree": {"sha": "23f08c3f628a0ac096d8ed4c0fcd297c5de47f4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23f08c3f628a0ac096d8ed4c0fcd297c5de47f4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9ab1458499b9a3e3fcb398cf29e3349e775ee9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9ab1458499b9a3e3fcb398cf29e3349e775ee9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9ab1458499b9a3e3fcb398cf29e3349e775ee9b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9ab1458499b9a3e3fcb398cf29e3349e775ee9b/comments", "author": null, "committer": null, "parents": [{"sha": "b621b712e5b65238b6ebc6af562445ec0cee4aea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b621b712e5b65238b6ebc6af562445ec0cee4aea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b621b712e5b65238b6ebc6af562445ec0cee4aea"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "2a14670ae0a34f0aba1cdd90ab98439e41bbefb4", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9ab1458499b9a3e3fcb398cf29e3349e775ee9b/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9ab1458499b9a3e3fcb398cf29e3349e775ee9b/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=c9ab1458499b9a3e3fcb398cf29e3349e775ee9b", "patch": "@@ -663,7 +663,7 @@ expand_builtin_dwarf_reg_size (reg_tree, target)\n \t  t = fold (build (COND_EXPR, integer_type_node, t2,\n \t\t\t   build_int_2 (ranges[n_ranges].size, 0), t));\n \t}\n-      while (--n_ranges > 0);\n+      while (--n_ranges >= 0);\n     }\n   return expand_expr (t, target, Pmode, 0);\n }"}]}