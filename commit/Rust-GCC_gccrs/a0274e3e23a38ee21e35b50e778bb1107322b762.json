{"sha": "a0274e3e23a38ee21e35b50e778bb1107322b762", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTAyNzRlM2UyM2EzOGVlMjFlMzViNTBlNzc4YmIxMTA3MzIyYjc2Mg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2005-12-23T00:43:34Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-12-23T00:43:34Z"}, "message": "backport: builtins.def: Move all DEF_SYNC_BUILTIN to ...\n\n        Merge from gomp-branch.\n        * builtins.def: Move all DEF_SYNC_BUILTIN to ...\n        * sync-builtins.def: ... new file.\n        (BUILT_IN_FETCH_AND_ADD_16,\n        BUILT_IN_FETCH_AND_SUB_16, BUILT_IN_FETCH_AND_OR_16,\n        BUILT_IN_FETCH_AND_AND_16, BUILT_IN_FETCH_AND_XOR_16,\n        BUILT_IN_FETCH_AND_NAND_16, BUILT_IN_ADD_AND_FETCH_16,\n        BUILT_IN_SUB_AND_FETCH_16, BUILT_IN_OR_AND_FETCH_16,\n        BUILT_IN_AND_AND_FETCH_16, BUILT_IN_XOR_AND_FETCH_16,\n        BUILT_IN_NAND_AND_FETCH_16, BUILT_IN_BOOL_COMPARE_AND_SWAP_16,\n        BUILT_IN_VAL_COMPARE_AND_SWAP_16, BUILT_IN_LOCK_TEST_AND_SET_16,\n        BUILT_IN_LOCK_RELEASE_16): New builtins.\n        * builtin-types.def (BT_I16, BT_FN_I16_VPTR_I16,\n        BT_FN_BOOL_VPTR_I16_I16, BT_FN_I16_VPTR_I16_I16): Add.\n        * builtins.c (expand_builtin): Handle sync BUILT_IN_*_16 builtins.\n        * c-common.c (enum c_builtin_type): Move to top-level from\n        c_common_nodes_and_builtins enum builtin_type.\n        (builtin_types): Move from c_common_nodes_and_builtins.\n        (def_fn_type): New.\n        (c_common_nodes_and_builtins): Use it.\n        (def_builtin_1): Check for error_mark_node.\n        (sync_resolve_size): Handle also 128 bit sync builtins.\n        * Makefile.in (BUILTINS_DEF): New.  Use it instead of builtins.def.\n\n        * config/i386/i386.h (x86_cmpxchg8b, x86_cmpxchg16b): New decls.\n        (TARGET_CMPXCHG8B, TARGET_CMPXCHG16B): Define.\n        * config/i386/i386.c (x86_cmpxchg8b, x86_cmpxchg16b): New variables.\n        * config/i386/sync.md (CASMODE, DCASMODE): New mode macros.\n        (doublemodesuffix, DCASHMODE): New mode attrs.\n        (sync_compare_and_swap<mode>): Change into expand, use CASMODE\n        instead of IMODE, if mode is wider than a word, expand into\n        sync_double_compare_and_swap*.\n        (*sync_compare_and_swap<mode>): New insn.\n        (sync_double_compare_and_swap<mode>): Likewise.\n        (*sync_double_compare_and_swapdi_pic): Likewise.\n        (sync_compare_and_swap_cc<mode>): Use CASMODE instead of IMODE, if\n        mode is wider than a word, expand into\n        sync_double_compare_and_swap_cc*.\n        (sync_double_compare_and_swap_cc<mode>): New insn.\n        (*sync_double_compare_and_swap_ccdi_pic): Likewise.\n\nFrom-SVN: r108997", "tree": {"sha": "225e7d74032f42f96e15423bfcbf7cdf88e6d1e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/225e7d74032f42f96e15423bfcbf7cdf88e6d1e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0274e3e23a38ee21e35b50e778bb1107322b762", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0274e3e23a38ee21e35b50e778bb1107322b762", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0274e3e23a38ee21e35b50e778bb1107322b762", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0274e3e23a38ee21e35b50e778bb1107322b762/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c52243fe1103584323ced1e66d601233c23a4b75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c52243fe1103584323ced1e66d601233c23a4b75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c52243fe1103584323ced1e66d601233c23a4b75"}], "stats": {"total": 958, "additions": 578, "deletions": 380}, "files": [{"sha": "9fb2051a084da296670844cf6fb629b685cbc306", "filename": "gcc/ChangeLog", "status": "modified", "additions": 62, "deletions": 18, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0274e3e23a38ee21e35b50e778bb1107322b762/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0274e3e23a38ee21e35b50e778bb1107322b762/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a0274e3e23a38ee21e35b50e778bb1107322b762", "patch": "@@ -1,3 +1,47 @@\n+2005-12-22  Jakub Jelinek  <jakub@redhat.com>\n+\t    Richard Henderson  <rth@redhat.com>\n+\n+\tMerge from gomp-branch.\n+\t* builtins.def: Move all DEF_SYNC_BUILTIN to ...\n+\t* sync-builtins.def: ... new file.\n+\t(BUILT_IN_FETCH_AND_ADD_16,\n+\tBUILT_IN_FETCH_AND_SUB_16, BUILT_IN_FETCH_AND_OR_16,\n+\tBUILT_IN_FETCH_AND_AND_16, BUILT_IN_FETCH_AND_XOR_16,\n+\tBUILT_IN_FETCH_AND_NAND_16, BUILT_IN_ADD_AND_FETCH_16,\n+\tBUILT_IN_SUB_AND_FETCH_16, BUILT_IN_OR_AND_FETCH_16,\n+\tBUILT_IN_AND_AND_FETCH_16, BUILT_IN_XOR_AND_FETCH_16,\n+\tBUILT_IN_NAND_AND_FETCH_16, BUILT_IN_BOOL_COMPARE_AND_SWAP_16,\n+\tBUILT_IN_VAL_COMPARE_AND_SWAP_16, BUILT_IN_LOCK_TEST_AND_SET_16,\n+\tBUILT_IN_LOCK_RELEASE_16): New builtins.\n+\t* builtin-types.def (BT_I16, BT_FN_I16_VPTR_I16,\n+\tBT_FN_BOOL_VPTR_I16_I16, BT_FN_I16_VPTR_I16_I16): Add.\n+\t* builtins.c (expand_builtin): Handle sync BUILT_IN_*_16 builtins.\n+\t* c-common.c (enum c_builtin_type): Move to top-level from\n+\tc_common_nodes_and_builtins enum builtin_type.\n+\t(builtin_types): Move from c_common_nodes_and_builtins.\n+\t(def_fn_type): New.\n+\t(c_common_nodes_and_builtins): Use it.\n+\t(def_builtin_1): Check for error_mark_node.\n+\t(sync_resolve_size): Handle also 128 bit sync builtins.\n+\t* Makefile.in (BUILTINS_DEF): New.  Use it instead of builtins.def.\n+\n+\t* config/i386/i386.h (x86_cmpxchg8b, x86_cmpxchg16b): New decls.\n+\t(TARGET_CMPXCHG8B, TARGET_CMPXCHG16B): Define.\n+\t* config/i386/i386.c (x86_cmpxchg8b, x86_cmpxchg16b): New variables.\n+\t* config/i386/sync.md (CASMODE, DCASMODE): New mode macros.\n+\t(doublemodesuffix, DCASHMODE): New mode attrs.\n+\t(sync_compare_and_swap<mode>): Change into expand, use CASMODE\n+\tinstead of IMODE, if mode is wider than a word, expand into\n+\tsync_double_compare_and_swap*.\n+\t(*sync_compare_and_swap<mode>): New insn.\n+\t(sync_double_compare_and_swap<mode>): Likewise.\n+\t(*sync_double_compare_and_swapdi_pic): Likewise.\n+\t(sync_compare_and_swap_cc<mode>): Use CASMODE instead of IMODE, if\n+\tmode is wider than a word, expand into\n+\tsync_double_compare_and_swap_cc*.\n+\t(sync_double_compare_and_swap_cc<mode>): New insn.\n+\t(*sync_double_compare_and_swap_ccdi_pic): Likewise.\n+\n 2005-12-22  Richard Henderson  <rth@redhat.com>\n \n \t* config/i386/mmintrin.h (_mm_add_si64): Only define for SSE2.\n@@ -186,8 +230,8 @@\n \tStrip away all type conversions after simplifying the\n \tcondition.\n \n-        * tree-cfgcleanup.c (merge_phi_nodes): Allow merging in some\n-        cases the forwarder block dominates the destination.\n+\t* tree-cfgcleanup.c (merge_phi_nodes): Allow merging in some\n+\tcases the forwarder block dominates the destination.\n \n 2005-12-19  DJ Delorie  <dj@redhat.com>\n \n@@ -257,7 +301,7 @@\n \n 2005-12-17  Kenneth Zadeck <zadeck@naturalbridge.com>\n \n-        * flow.c (update_life_info, count_or_remove_death_notes): Fixed\n+\t* flow.c (update_life_info, count_or_remove_death_notes): Fixed\n \tlatent bug that could happen if update_life_info was called with a\n \tblocks parameter and the call to cleanup_cfg actually deleted one\n \tof those blocks. \n@@ -1027,10 +1071,10 @@\n \n 2005-12-15  Paolo Bonzini  <bonzini@gnu.org>\n \n-        * combine.c: Remove force_to_mode's fourth parameter.\n-        (force_to_mode): Do not handle REG.\n-        (canon_reg_for_combine): New.\n-        (make_field_assignment): Use it where the removed argument was non-NULL.\n+\t* combine.c: Remove force_to_mode's fourth parameter.\n+\t(force_to_mode): Do not handle REG.\n+\t(canon_reg_for_combine): New.\n+\t(make_field_assignment): Use it where the removed argument was non-NULL.\n \n 2005-12-15  Alan Modra  <amodra@bigpond.net.au>\n \n@@ -1206,8 +1250,8 @@\n \n \tBack out this change:\n \t2005-03-07  Kazu Hirata  <kazu@cs.umass.edu>\n-          * recog.c (verify_changes): Make it static.\n-          * recog.h: Remove the corresponding prototype.\n+\t  * recog.c (verify_changes): Make it static.\n+\t  * recog.h: Remove the corresponding prototype.\n \n 2005-12-13  J\"orn Rennecke <joern.rennecke@st.com>\n \n@@ -1504,7 +1548,7 @@\n \tcall_used_regs can't be used to save reg in another reg.\n \n 2005-12-08  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n-            Christophe Jaillet  <christophe.jaillet@wanadoo.fr>\n+\t    Christophe Jaillet  <christophe.jaillet@wanadoo.fr>\n \n \t* ipa-type-escape.c (analyze_variable): Use gcc_assert instead of\n \tabort.\n@@ -1544,7 +1588,7 @@\n \t* tree.h (DECL_EXTERNAL): Clarify documentation.\n \n 2005-12-08  Andreas Krebbel  <krebbel1@de.ibm.com>\n-            Jakub Jelinek  <jakub@redhat.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/25268\n \t* config/s390/s390.c (s390_decompose_shift_count): Remove BITS\n@@ -2340,11 +2384,11 @@\n \n 2005-12-05  Paolo Bonzini  <bonzini@gnu.org>\n \n-        * config/rs6000/predicates.md (logical_const_operand): Split\n-        out of logical_operand.\n-        (logical_operand): Use it.\n-        * config/rs6000/rs6000.md (cmp -> xor peephole2): Use\n-        logical_const_operand.\n+\t* config/rs6000/predicates.md (logical_const_operand): Split\n+\tout of logical_operand.\n+\t(logical_operand): Use it.\n+\t* config/rs6000/rs6000.md (cmp -> xor peephole2): Use\n+\tlogical_const_operand.\n \n 2005-12-05  Jan Beulich  <jbeulich@novell.com>\n \n@@ -2715,7 +2759,7 @@\n \n 2005-12-01  Ben Elliston  <bje@au.ibm.com>\n \n-        * mklibgcc.in: Parameterise the script to build soft float\n+\t* mklibgcc.in: Parameterise the script to build soft float\n \tfunctions by iterating over each type, rather than cloning the\n \tcode for each type.\n \n@@ -2756,7 +2800,7 @@\n \t(tree_expr_nonnegative_p): Likewise.\n \n 2005-11-30  Dale Johannesen  <dalej@apple.com>\n-            Andrew Pinski  <pinskia@physics.uc.edu>\n+\t    Andrew Pinski  <pinskia@physics.uc.edu>\n \n \t* combine.c (find_split_point):  Sign extend bitmask\n \twhen changing bitfield assignment to IOR of AND."}, {"sha": "7261a1e2b5f765b4ed5965befa1f4b7dfb8a824d", "filename": "gcc/Makefile.in", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0274e3e23a38ee21e35b50e778bb1107322b762/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0274e3e23a38ee21e35b50e778bb1107322b762/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=a0274e3e23a38ee21e35b50e778bb1107322b762", "patch": "@@ -736,7 +736,8 @@ RTL_BASE_H = rtl.h rtl.def $(MACHMODE_H) reg-notes.def insn-notes.def \\\n   input.h real.h statistics.h\n RTL_H = $(RTL_BASE_H) genrtl.h\n PARAMS_H = params.h params.def\n-TREE_H = tree.h tree.def $(MACHMODE_H) tree-check.h builtins.def \\\n+BUILTINS_DEF = builtins.def sync-builtins.def\n+TREE_H = tree.h tree.def $(MACHMODE_H) tree-check.h $(BUILTINS_DEF) \\\n           input.h statistics.h vec.h treestruct.def\n BASIC_BLOCK_H = basic-block.h bitmap.h sbitmap.h varray.h $(PARTITION_H) \\\n           hard-reg-set.h cfghooks.h $(OBSTACK_H)\n@@ -1592,7 +1593,7 @@ c-common.o : c-common.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n \t$(DIAGNOSTIC_H) gt-c-common.h langhooks.h $(VARRAY_H) $(RTL_H) \\\n \t$(TARGET_H) $(C_TREE_H) tree-iterator.h langhooks.h tree-mudflap.h \\\n \tintl.h opts.h real.h $(CPPLIB_H) tree-inline.h $(HASHTAB_H) \\\n-\tbuiltins.def\n+\t$(BUILTINS_DEF)\n \n c-pretty-print.o : c-pretty-print.c $(C_PRETTY_PRINT_H) \\\n \t$(C_TREE_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) real.h \\\n@@ -2147,7 +2148,7 @@ builtins.o : builtins.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(EXPR_H) $(OPTABS_H) insn-config.h $(RECOG_H) output.h typeclass.h \\\n    hard-reg-set.h toplev.h hard-reg-set.h except.h $(TM_P_H) $(PREDICT_H) \\\n    libfuncs.h real.h langhooks.h $(BASIC_BLOCK_H) tree-mudflap.h \\\n-   builtins.def $(MACHMODE_H)\n+   $(BUILTINS_DEF) $(MACHMODE_H)\n calls.o : calls.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(FLAGS_H) $(EXPR_H) $(OPTABS_H) langhooks.h $(TARGET_H) \\\n    libfuncs.h $(REGS_H) toplev.h output.h function.h $(TIMEVAR_H) $(TM_P_H) \\"}, {"sha": "9540f3a719f2db0c092a66aeb4390e2306f6be76", "filename": "gcc/builtin-types.def", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0274e3e23a38ee21e35b50e778bb1107322b762/gcc%2Fbuiltin-types.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0274e3e23a38ee21e35b50e778bb1107322b762/gcc%2Fbuiltin-types.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltin-types.def?ref=a0274e3e23a38ee21e35b50e778bb1107322b762", "patch": "@@ -112,6 +112,7 @@ DEF_PRIMITIVE_TYPE (BT_I1, builtin_type_for_size (BITS_PER_UNIT*1, 1))\n DEF_PRIMITIVE_TYPE (BT_I2, builtin_type_for_size (BITS_PER_UNIT*2, 1))\n DEF_PRIMITIVE_TYPE (BT_I4, builtin_type_for_size (BITS_PER_UNIT*4, 1))\n DEF_PRIMITIVE_TYPE (BT_I8, builtin_type_for_size (BITS_PER_UNIT*8, 1))\n+DEF_PRIMITIVE_TYPE (BT_I16, builtin_type_for_size (BITS_PER_UNIT*16, 1))\n \n DEF_POINTER_TYPE (BT_PTR_CONST_STRING, BT_CONST_STRING)\n \n@@ -279,6 +280,7 @@ DEF_FUNCTION_TYPE_2 (BT_FN_I1_VPTR_I1, BT_I1, BT_VOLATILE_PTR, BT_I1)\n DEF_FUNCTION_TYPE_2 (BT_FN_I2_VPTR_I2, BT_I2, BT_VOLATILE_PTR, BT_I2)\n DEF_FUNCTION_TYPE_2 (BT_FN_I4_VPTR_I4, BT_I4, BT_VOLATILE_PTR, BT_I4)\n DEF_FUNCTION_TYPE_2 (BT_FN_I8_VPTR_I8, BT_I8, BT_VOLATILE_PTR, BT_I8)\n+DEF_FUNCTION_TYPE_2 (BT_FN_I16_VPTR_I16, BT_I16, BT_VOLATILE_PTR, BT_I16)\n \n DEF_FUNCTION_TYPE_3 (BT_FN_STRING_STRING_CONST_STRING_SIZE,\n \t\t     BT_STRING, BT_STRING, BT_CONST_STRING, BT_SIZE)\n@@ -333,10 +335,14 @@ DEF_FUNCTION_TYPE_3 (BT_FN_BOOL_VPTR_I4_I4, BT_BOOL, BT_VOLATILE_PTR,\n \t\t     BT_I4, BT_I4)\n DEF_FUNCTION_TYPE_3 (BT_FN_BOOL_VPTR_I8_I8, BT_BOOL, BT_VOLATILE_PTR,\n \t\t     BT_I8, BT_I8)\n+DEF_FUNCTION_TYPE_3 (BT_FN_BOOL_VPTR_I16_I16, BT_BOOL, BT_VOLATILE_PTR,\n+\t\t     BT_I16, BT_I16)\n DEF_FUNCTION_TYPE_3 (BT_FN_I1_VPTR_I1_I1, BT_I1, BT_VOLATILE_PTR, BT_I1, BT_I1)\n DEF_FUNCTION_TYPE_3 (BT_FN_I2_VPTR_I2_I2, BT_I2, BT_VOLATILE_PTR, BT_I2, BT_I2)\n DEF_FUNCTION_TYPE_3 (BT_FN_I4_VPTR_I4_I4, BT_I4, BT_VOLATILE_PTR, BT_I4, BT_I4)\n DEF_FUNCTION_TYPE_3 (BT_FN_I8_VPTR_I8_I8, BT_I8, BT_VOLATILE_PTR, BT_I8, BT_I8)\n+DEF_FUNCTION_TYPE_3 (BT_FN_I16_VPTR_I16_I16, BT_I16, BT_VOLATILE_PTR,\n+\t\t     BT_I16, BT_I16)\n \n DEF_FUNCTION_TYPE_4 (BT_FN_SIZE_CONST_PTR_SIZE_SIZE_FILEPTR,\n \t\t     BT_SIZE, BT_CONST_PTR, BT_SIZE, BT_SIZE, BT_FILEPTR)"}, {"sha": "90cb02178d7de78bd4e38af5579d0377f287ddb5", "filename": "gcc/builtins.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0274e3e23a38ee21e35b50e778bb1107322b762/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0274e3e23a38ee21e35b50e778bb1107322b762/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=a0274e3e23a38ee21e35b50e778bb1107322b762", "patch": "@@ -6073,6 +6073,7 @@ expand_builtin (tree exp, rtx target, rtx subtarget, enum machine_mode mode,\n     case BUILT_IN_FETCH_AND_ADD_2:\n     case BUILT_IN_FETCH_AND_ADD_4:\n     case BUILT_IN_FETCH_AND_ADD_8:\n+    case BUILT_IN_FETCH_AND_ADD_16:\n       mode = get_builtin_sync_mode (fcode - BUILT_IN_FETCH_AND_ADD_1);\n       target = expand_builtin_sync_operation (mode, arglist, PLUS,\n \t\t\t\t\t      false, target, ignore);\n@@ -6084,6 +6085,7 @@ expand_builtin (tree exp, rtx target, rtx subtarget, enum machine_mode mode,\n     case BUILT_IN_FETCH_AND_SUB_2:\n     case BUILT_IN_FETCH_AND_SUB_4:\n     case BUILT_IN_FETCH_AND_SUB_8:\n+    case BUILT_IN_FETCH_AND_SUB_16:\n       mode = get_builtin_sync_mode (fcode - BUILT_IN_FETCH_AND_SUB_1);\n       target = expand_builtin_sync_operation (mode, arglist, MINUS,\n \t\t\t\t\t      false, target, ignore);\n@@ -6095,6 +6097,7 @@ expand_builtin (tree exp, rtx target, rtx subtarget, enum machine_mode mode,\n     case BUILT_IN_FETCH_AND_OR_2:\n     case BUILT_IN_FETCH_AND_OR_4:\n     case BUILT_IN_FETCH_AND_OR_8:\n+    case BUILT_IN_FETCH_AND_OR_16:\n       mode = get_builtin_sync_mode (fcode - BUILT_IN_FETCH_AND_OR_1);\n       target = expand_builtin_sync_operation (mode, arglist, IOR,\n \t\t\t\t\t      false, target, ignore);\n@@ -6106,6 +6109,7 @@ expand_builtin (tree exp, rtx target, rtx subtarget, enum machine_mode mode,\n     case BUILT_IN_FETCH_AND_AND_2:\n     case BUILT_IN_FETCH_AND_AND_4:\n     case BUILT_IN_FETCH_AND_AND_8:\n+    case BUILT_IN_FETCH_AND_AND_16:\n       mode = get_builtin_sync_mode (fcode - BUILT_IN_FETCH_AND_AND_1);\n       target = expand_builtin_sync_operation (mode, arglist, AND,\n \t\t\t\t\t      false, target, ignore);\n@@ -6117,6 +6121,7 @@ expand_builtin (tree exp, rtx target, rtx subtarget, enum machine_mode mode,\n     case BUILT_IN_FETCH_AND_XOR_2:\n     case BUILT_IN_FETCH_AND_XOR_4:\n     case BUILT_IN_FETCH_AND_XOR_8:\n+    case BUILT_IN_FETCH_AND_XOR_16:\n       mode = get_builtin_sync_mode (fcode - BUILT_IN_FETCH_AND_XOR_1);\n       target = expand_builtin_sync_operation (mode, arglist, XOR,\n \t\t\t\t\t      false, target, ignore);\n@@ -6128,6 +6133,7 @@ expand_builtin (tree exp, rtx target, rtx subtarget, enum machine_mode mode,\n     case BUILT_IN_FETCH_AND_NAND_2:\n     case BUILT_IN_FETCH_AND_NAND_4:\n     case BUILT_IN_FETCH_AND_NAND_8:\n+    case BUILT_IN_FETCH_AND_NAND_16:\n       mode = get_builtin_sync_mode (fcode - BUILT_IN_FETCH_AND_NAND_1);\n       target = expand_builtin_sync_operation (mode, arglist, NOT,\n \t\t\t\t\t      false, target, ignore);\n@@ -6139,6 +6145,7 @@ expand_builtin (tree exp, rtx target, rtx subtarget, enum machine_mode mode,\n     case BUILT_IN_ADD_AND_FETCH_2:\n     case BUILT_IN_ADD_AND_FETCH_4:\n     case BUILT_IN_ADD_AND_FETCH_8:\n+    case BUILT_IN_ADD_AND_FETCH_16:\n       mode = get_builtin_sync_mode (fcode - BUILT_IN_ADD_AND_FETCH_1);\n       target = expand_builtin_sync_operation (mode, arglist, PLUS,\n \t\t\t\t\t      true, target, ignore);\n@@ -6150,6 +6157,7 @@ expand_builtin (tree exp, rtx target, rtx subtarget, enum machine_mode mode,\n     case BUILT_IN_SUB_AND_FETCH_2:\n     case BUILT_IN_SUB_AND_FETCH_4:\n     case BUILT_IN_SUB_AND_FETCH_8:\n+    case BUILT_IN_SUB_AND_FETCH_16:\n       mode = get_builtin_sync_mode (fcode - BUILT_IN_SUB_AND_FETCH_1);\n       target = expand_builtin_sync_operation (mode, arglist, MINUS,\n \t\t\t\t\t      true, target, ignore);\n@@ -6161,6 +6169,7 @@ expand_builtin (tree exp, rtx target, rtx subtarget, enum machine_mode mode,\n     case BUILT_IN_OR_AND_FETCH_2:\n     case BUILT_IN_OR_AND_FETCH_4:\n     case BUILT_IN_OR_AND_FETCH_8:\n+    case BUILT_IN_OR_AND_FETCH_16:\n       mode = get_builtin_sync_mode (fcode - BUILT_IN_OR_AND_FETCH_1);\n       target = expand_builtin_sync_operation (mode, arglist, IOR,\n \t\t\t\t\t      true, target, ignore);\n@@ -6172,6 +6181,7 @@ expand_builtin (tree exp, rtx target, rtx subtarget, enum machine_mode mode,\n     case BUILT_IN_AND_AND_FETCH_2:\n     case BUILT_IN_AND_AND_FETCH_4:\n     case BUILT_IN_AND_AND_FETCH_8:\n+    case BUILT_IN_AND_AND_FETCH_16:\n       mode = get_builtin_sync_mode (fcode - BUILT_IN_AND_AND_FETCH_1);\n       target = expand_builtin_sync_operation (mode, arglist, AND,\n \t\t\t\t\t      true, target, ignore);\n@@ -6183,6 +6193,7 @@ expand_builtin (tree exp, rtx target, rtx subtarget, enum machine_mode mode,\n     case BUILT_IN_XOR_AND_FETCH_2:\n     case BUILT_IN_XOR_AND_FETCH_4:\n     case BUILT_IN_XOR_AND_FETCH_8:\n+    case BUILT_IN_XOR_AND_FETCH_16:\n       mode = get_builtin_sync_mode (fcode - BUILT_IN_XOR_AND_FETCH_1);\n       target = expand_builtin_sync_operation (mode, arglist, XOR,\n \t\t\t\t\t      true, target, ignore);\n@@ -6194,6 +6205,7 @@ expand_builtin (tree exp, rtx target, rtx subtarget, enum machine_mode mode,\n     case BUILT_IN_NAND_AND_FETCH_2:\n     case BUILT_IN_NAND_AND_FETCH_4:\n     case BUILT_IN_NAND_AND_FETCH_8:\n+    case BUILT_IN_NAND_AND_FETCH_16:\n       mode = get_builtin_sync_mode (fcode - BUILT_IN_NAND_AND_FETCH_1);\n       target = expand_builtin_sync_operation (mode, arglist, NOT,\n \t\t\t\t\t      true, target, ignore);\n@@ -6205,6 +6217,7 @@ expand_builtin (tree exp, rtx target, rtx subtarget, enum machine_mode mode,\n     case BUILT_IN_BOOL_COMPARE_AND_SWAP_2:\n     case BUILT_IN_BOOL_COMPARE_AND_SWAP_4:\n     case BUILT_IN_BOOL_COMPARE_AND_SWAP_8:\n+    case BUILT_IN_BOOL_COMPARE_AND_SWAP_16:\n       if (mode == VOIDmode)\n \tmode = TYPE_MODE (boolean_type_node);\n       if (!target || !register_operand (target, mode))\n@@ -6220,6 +6233,7 @@ expand_builtin (tree exp, rtx target, rtx subtarget, enum machine_mode mode,\n     case BUILT_IN_VAL_COMPARE_AND_SWAP_2:\n     case BUILT_IN_VAL_COMPARE_AND_SWAP_4:\n     case BUILT_IN_VAL_COMPARE_AND_SWAP_8:\n+    case BUILT_IN_VAL_COMPARE_AND_SWAP_16:\n       mode = get_builtin_sync_mode (fcode - BUILT_IN_VAL_COMPARE_AND_SWAP_1);\n       target = expand_builtin_compare_and_swap (mode, arglist, false, target);\n       if (target)\n@@ -6230,6 +6244,7 @@ expand_builtin (tree exp, rtx target, rtx subtarget, enum machine_mode mode,\n     case BUILT_IN_LOCK_TEST_AND_SET_2:\n     case BUILT_IN_LOCK_TEST_AND_SET_4:\n     case BUILT_IN_LOCK_TEST_AND_SET_8:\n+    case BUILT_IN_LOCK_TEST_AND_SET_16:\n       mode = get_builtin_sync_mode (fcode - BUILT_IN_LOCK_TEST_AND_SET_1);\n       target = expand_builtin_lock_test_and_set (mode, arglist, target);\n       if (target)\n@@ -6240,6 +6255,7 @@ expand_builtin (tree exp, rtx target, rtx subtarget, enum machine_mode mode,\n     case BUILT_IN_LOCK_RELEASE_2:\n     case BUILT_IN_LOCK_RELEASE_4:\n     case BUILT_IN_LOCK_RELEASE_8:\n+    case BUILT_IN_LOCK_RELEASE_16:\n       mode = get_builtin_sync_mode (fcode - BUILT_IN_LOCK_RELEASE_1);\n       expand_builtin_lock_release (mode, arglist);\n       return const0_rtx;"}, {"sha": "d356361223762f81cb1b6adebc49ce853159591e", "filename": "gcc/builtins.def", "status": "modified", "additions": 2, "deletions": 192, "changes": 194, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0274e3e23a38ee21e35b50e778bb1107322b762/gcc%2Fbuiltins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0274e3e23a38ee21e35b50e778bb1107322b762/gcc%2Fbuiltins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.def?ref=a0274e3e23a38ee21e35b50e778bb1107322b762", "patch": "@@ -709,195 +709,5 @@ DEF_EXT_LIB_BUILTIN    (BUILT_IN_VPRINTF_CHK, \"__vprintf_chk\", BT_FN_INT_INT_CON\n DEF_BUILTIN_STUB (BUILT_IN_PROFILE_FUNC_ENTER, \"profile_func_enter\")\n DEF_BUILTIN_STUB (BUILT_IN_PROFILE_FUNC_EXIT, \"profile_func_exit\")\n \n-/* Synchronization Primitives.  The \"_N\" version is the one that the user\n-   is supposed to be using.  It's overloaded, and is resolved to one of the\n-   \"_1\" through \"_8\" versions, plus some extra casts.  */\n-\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_ADD_N, \"__sync_fetch_and_add\",\n-\t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_ADD_1, \"__sync_fetch_and_add_1\",\n-\t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_ADD_2, \"__sync_fetch_and_add_2\",\n-\t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_ADD_4, \"__sync_fetch_and_add_4\",\n-\t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_ADD_8, \"__sync_fetch_and_add_8\",\n-\t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LIST)\n-\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_SUB_N, \"__sync_fetch_and_sub\",\n-\t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_SUB_1, \"__sync_fetch_and_sub_1\",\n-\t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_SUB_2, \"__sync_fetch_and_sub_2\",\n-\t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_SUB_4, \"__sync_fetch_and_sub_4\",\n-\t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_SUB_8, \"__sync_fetch_and_sub_8\",\n-\t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LIST)\n-\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_OR_N, \"__sync_fetch_and_or\",\n-\t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_OR_1, \"__sync_fetch_and_or_1\",\n-\t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_OR_2, \"__sync_fetch_and_or_2\",\n-\t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_OR_4, \"__sync_fetch_and_or_4\",\n-\t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_OR_8, \"__sync_fetch_and_or_8\",\n-\t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LIST)\n-\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_AND_N, \"__sync_fetch_and_and\",\n-\t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_AND_1, \"__sync_fetch_and_and_1\",\n-\t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_AND_2, \"__sync_fetch_and_and_2\",\n-\t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_AND_4, \"__sync_fetch_and_and_4\",\n-\t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_AND_8, \"__sync_fetch_and_and_8\",\n-\t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LIST)\n-\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_XOR_N, \"__sync_fetch_and_xor\",\n-\t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_XOR_1, \"__sync_fetch_and_xor_1\",\n-\t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_XOR_2, \"__sync_fetch_and_xor_2\",\n-\t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_XOR_4, \"__sync_fetch_and_xor_4\",\n-\t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_XOR_8, \"__sync_fetch_and_xor_8\",\n-\t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LIST)\n-\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_NAND_N, \"__sync_fetch_and_nand\",\n-\t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_NAND_1, \"__sync_fetch_and_nand_1\",\n-\t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_NAND_2, \"__sync_fetch_and_nand_2\",\n-\t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_NAND_4, \"__sync_fetch_and_nand_4\",\n-\t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_NAND_8, \"__sync_fetch_and_nand_8\",\n-\t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LIST)\n-\n-DEF_SYNC_BUILTIN (BUILT_IN_ADD_AND_FETCH_N, \"__sync_add_and_fetch\",\n-\t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_ADD_AND_FETCH_1, \"__sync_add_and_fetch_1\",\n-\t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_ADD_AND_FETCH_2, \"__sync_add_and_fetch_2\",\n-\t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_ADD_AND_FETCH_4, \"__sync_add_and_fetch_4\",\n-\t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_ADD_AND_FETCH_8, \"__sync_add_and_fetch_8\",\n-\t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LIST)\n-\n-DEF_SYNC_BUILTIN (BUILT_IN_SUB_AND_FETCH_N, \"__sync_sub_and_fetch\",\n-\t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_SUB_AND_FETCH_1, \"__sync_sub_and_fetch_1\",\n-\t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_SUB_AND_FETCH_2, \"__sync_sub_and_fetch_2\",\n-\t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_SUB_AND_FETCH_4, \"__sync_sub_and_fetch_4\",\n-\t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_SUB_AND_FETCH_8, \"__sync_sub_and_fetch_8\",\n-\t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LIST)\n-\n-DEF_SYNC_BUILTIN (BUILT_IN_OR_AND_FETCH_N, \"__sync_or_and_fetch\",\n-\t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_OR_AND_FETCH_1, \"__sync_or_and_fetch_1\",\n-\t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_OR_AND_FETCH_2, \"__sync_or_and_fetch_2\",\n-\t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_OR_AND_FETCH_4, \"__sync_or_and_fetch_4\",\n-\t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_OR_AND_FETCH_8, \"__sync_or_and_fetch_8\",\n-\t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LIST)\n-\n-DEF_SYNC_BUILTIN (BUILT_IN_AND_AND_FETCH_N, \"__sync_and_and_fetch\",\n-\t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_AND_AND_FETCH_1, \"__sync_and_and_fetch_1\",\n-\t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_AND_AND_FETCH_2, \"__sync_and_and_fetch_2\",\n-\t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_AND_AND_FETCH_4, \"__sync_and_and_fetch_4\",\n-\t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_AND_AND_FETCH_8, \"__sync_and_and_fetch_8\",\n-\t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LIST)\n-\n-DEF_SYNC_BUILTIN (BUILT_IN_XOR_AND_FETCH_N, \"__sync_xor_and_fetch\",\n-\t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_XOR_AND_FETCH_1, \"__sync_xor_and_fetch_1\",\n-\t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_XOR_AND_FETCH_2, \"__sync_xor_and_fetch_2\",\n-\t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_XOR_AND_FETCH_4, \"__sync_xor_and_fetch_4\",\n-\t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_XOR_AND_FETCH_8, \"__sync_xor_and_fetch_8\",\n-\t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LIST)\n-\n-DEF_SYNC_BUILTIN (BUILT_IN_NAND_AND_FETCH_N, \"__sync_nand_and_fetch\",\n-\t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_NAND_AND_FETCH_1, \"__sync_nand_and_fetch_1\",\n-\t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_NAND_AND_FETCH_2, \"__sync_nand_and_fetch_2\",\n-\t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_NAND_AND_FETCH_4, \"__sync_nand_and_fetch_4\",\n-\t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_NAND_AND_FETCH_8, \"__sync_nand_and_fetch_8\",\n-\t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LIST)\n-\n-DEF_SYNC_BUILTIN (BUILT_IN_BOOL_COMPARE_AND_SWAP_N,\n-\t\t  \"__sync_bool_compare_and_swap\",\n-\t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_BOOL_COMPARE_AND_SWAP_1,\n-\t\t  \"__sync_bool_compare_and_swap_1\",\n-\t\t  BT_FN_BOOL_VPTR_I1_I1, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_BOOL_COMPARE_AND_SWAP_2,\n-\t\t  \"__sync_bool_compare_and_swap_2\",\n-\t\t  BT_FN_BOOL_VPTR_I2_I2, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_BOOL_COMPARE_AND_SWAP_4,\n-\t\t  \"__sync_bool_compare_and_swap_4\",\n-\t\t  BT_FN_BOOL_VPTR_I4_I4, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_BOOL_COMPARE_AND_SWAP_8,\n-\t\t  \"__sync_bool_compare_and_swap_8\",\n-\t\t  BT_FN_BOOL_VPTR_I8_I8, ATTR_NOTHROW_LIST)\n-\n-DEF_SYNC_BUILTIN (BUILT_IN_VAL_COMPARE_AND_SWAP_N,\n-\t\t  \"__sync_val_compare_and_swap\",\n-\t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_VAL_COMPARE_AND_SWAP_1,\n-\t\t  \"__sync_val_compare_and_swap_1\",\n-\t\t  BT_FN_I1_VPTR_I1_I1, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_VAL_COMPARE_AND_SWAP_2,\n-\t\t  \"__sync_val_compare_and_swap_2\",\n-\t\t  BT_FN_I2_VPTR_I2_I2, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_VAL_COMPARE_AND_SWAP_4,\n-\t\t  \"__sync_val_compare_and_swap_4\",\n-\t\t  BT_FN_I4_VPTR_I4_I4, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_VAL_COMPARE_AND_SWAP_8,\n-\t\t  \"__sync_val_compare_and_swap_8\",\n-\t\t  BT_FN_I8_VPTR_I8_I8, ATTR_NOTHROW_LIST)\n-\n-DEF_SYNC_BUILTIN (BUILT_IN_LOCK_TEST_AND_SET_N, \"__sync_lock_test_and_set\",\n-\t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_LOCK_TEST_AND_SET_1, \"__sync_lock_test_and_set_1\",\n-\t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_LOCK_TEST_AND_SET_2, \"__sync_lock_test_and_set_2\",\n-\t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_LOCK_TEST_AND_SET_4, \"__sync_lock_test_and_set_4\",\n-\t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_LOCK_TEST_AND_SET_8, \"__sync_lock_test_and_set_8\",\n-\t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LIST)\n-\n-DEF_SYNC_BUILTIN (BUILT_IN_LOCK_RELEASE_N, \"__sync_lock_release\",\n-\t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_LOCK_RELEASE_1, \"__sync_lock_release_1\",\n-\t\t  BT_FN_VOID_VPTR, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_LOCK_RELEASE_2, \"__sync_lock_release_2\",\n-\t\t  BT_FN_VOID_VPTR, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_LOCK_RELEASE_4, \"__sync_lock_release_4\",\n-\t\t  BT_FN_VOID_VPTR, ATTR_NOTHROW_LIST)\n-DEF_SYNC_BUILTIN (BUILT_IN_LOCK_RELEASE_8, \"__sync_lock_release_8\",\n-\t\t  BT_FN_VOID_VPTR, ATTR_NOTHROW_LIST)\n-\n-DEF_SYNC_BUILTIN (BUILT_IN_SYNCHRONIZE, \"__sync_synchronize\",\n-\t\t  BT_FN_VOID, ATTR_NOTHROW_LIST)\n+/* Synchronization Primitives.  */\n+#include \"sync-builtins.def\""}, {"sha": "e50b7fef697ec7ceb9200ff5fef3a1dacb7e1d10", "filename": "gcc/c-common.c", "status": "modified", "additions": 96, "deletions": 159, "changes": 255, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0274e3e23a38ee21e35b50e778bb1107322b762/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0274e3e23a38ee21e35b50e778bb1107322b762/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=a0274e3e23a38ee21e35b50e778bb1107322b762", "patch": "@@ -2959,23 +2959,17 @@ static GTY(()) tree built_in_attributes[(int) ATTR_LAST];\n \n static void c_init_attributes (void);\n \n-/* Build tree nodes and builtin functions common to both C and C++ language\n-   frontends.  */\n-\n-void\n-c_common_nodes_and_builtins (void)\n+enum c_builtin_type\n {\n-  enum builtin_type\n-  {\n #define DEF_PRIMITIVE_TYPE(NAME, VALUE) NAME,\n #define DEF_FUNCTION_TYPE_0(NAME, RETURN) NAME,\n #define DEF_FUNCTION_TYPE_1(NAME, RETURN, ARG1) NAME,\n #define DEF_FUNCTION_TYPE_2(NAME, RETURN, ARG1, ARG2) NAME,\n #define DEF_FUNCTION_TYPE_3(NAME, RETURN, ARG1, ARG2, ARG3) NAME,\n #define DEF_FUNCTION_TYPE_4(NAME, RETURN, ARG1, ARG2, ARG3, ARG4) NAME,\n #define DEF_FUNCTION_TYPE_5(NAME, RETURN, ARG1, ARG2, ARG3, ARG4, ARG5) NAME,\n-#define DEF_FUNCTION_TYPE_6(NAME, RETURN, ARG1, ARG2, ARG3, ARG4, ARG5, ARG6) \\\n-  NAME,\n+#define DEF_FUNCTION_TYPE_6(NAME, RETURN, ARG1, ARG2, ARG3, ARG4, ARG5, ARG6) NAME,\n+#define DEF_FUNCTION_TYPE_7(NAME, RETURN, ARG1, ARG2, ARG3, ARG4, ARG5, ARG6, ARG7) NAME,\n #define DEF_FUNCTION_TYPE_VAR_0(NAME, RETURN) NAME,\n #define DEF_FUNCTION_TYPE_VAR_1(NAME, RETURN, ARG1) NAME,\n #define DEF_FUNCTION_TYPE_VAR_2(NAME, RETURN, ARG1, ARG2) NAME,\n@@ -2993,19 +2987,69 @@ c_common_nodes_and_builtins (void)\n #undef DEF_FUNCTION_TYPE_4\n #undef DEF_FUNCTION_TYPE_5\n #undef DEF_FUNCTION_TYPE_6\n+#undef DEF_FUNCTION_TYPE_7\n #undef DEF_FUNCTION_TYPE_VAR_0\n #undef DEF_FUNCTION_TYPE_VAR_1\n #undef DEF_FUNCTION_TYPE_VAR_2\n #undef DEF_FUNCTION_TYPE_VAR_3\n #undef DEF_FUNCTION_TYPE_VAR_4\n #undef DEF_FUNCTION_TYPE_VAR_5\n #undef DEF_POINTER_TYPE\n-    BT_LAST\n-  };\n+  BT_LAST\n+};\n+\n+typedef enum c_builtin_type builtin_type;\n \n-  typedef enum builtin_type builtin_type;\n+/* A temporary array for c_common_nodes_and_builtins.  Used in\n+   communication with def_fn_type.  */\n+static tree builtin_types[(int) BT_LAST + 1];\n \n-  tree builtin_types[(int) BT_LAST + 1];\n+/* A helper function for c_common_nodes_and_builtins.  Build function type\n+   for DEF with return type RET and N arguments.  If VAR is true, then the\n+   function should be variadic after those N arguments.\n+\n+   Takes special care not to ICE if any of the types involved are\n+   error_mark_node, which indicates that said type is not in fact available\n+   (see builtin_type_for_size).  In which case the function type as a whole\n+   should be error_mark_node.  */\n+\n+static void\n+def_fn_type (builtin_type def, builtin_type ret, bool var, int n, ...)\n+{\n+  tree args = NULL, t;\n+  va_list list;\n+  int i;\n+\n+  va_start (list, n);\n+  for (i = 0; i < n; ++i)\n+    {\n+      builtin_type a = va_arg (list, builtin_type);\n+      t = builtin_types[a];\n+      if (t == error_mark_node)\n+\tgoto egress;\n+      args = tree_cons (NULL_TREE, t, args);\n+    }\n+  va_end (list);\n+\n+  args = nreverse (args);\n+  if (!var)\n+    args = chainon (args, void_list_node);\n+\n+  t = builtin_types[ret];\n+  if (t == error_mark_node)\n+    goto egress;\n+  t = build_function_type (t, args);\n+\n+ egress:\n+  builtin_types[def] = t;\n+}\n+\n+/* Build tree nodes and builtin functions common to both C and C++ language\n+   frontends.  */\n+\n+void\n+c_common_nodes_and_builtins (void)\n+{\n   int wchar_type_size;\n   tree array_domain_type;\n   tree va_list_ref_type_node;\n@@ -3213,155 +3257,42 @@ c_common_nodes_and_builtins (void)\n     }\n \n #define DEF_PRIMITIVE_TYPE(ENUM, VALUE) \\\n-  builtin_types[(int) ENUM] = VALUE;\n-#define DEF_FUNCTION_TYPE_0(ENUM, RETURN)\t\t\\\n-  builtin_types[(int) ENUM]\t\t\t\t\\\n-    = build_function_type (builtin_types[(int) RETURN],\t\\\n-\t\t\t   void_list_node);\n-#define DEF_FUNCTION_TYPE_1(ENUM, RETURN, ARG1)\t\t\t\t\\\n-  builtin_types[(int) ENUM]\t\t\t\t\t\t\\\n-    = build_function_type (builtin_types[(int) RETURN],\t\t\t\\\n-\t\t\t   tree_cons (NULL_TREE,\t\t\t\\\n-\t\t\t\t      builtin_types[(int) ARG1],\t\\\n-\t\t\t\t      void_list_node));\n-#define DEF_FUNCTION_TYPE_2(ENUM, RETURN, ARG1, ARG2)\t\\\n-  builtin_types[(int) ENUM]\t\t\t\t\\\n-    = build_function_type\t\t\t\t\\\n-      (builtin_types[(int) RETURN],\t\t\t\\\n-       tree_cons (NULL_TREE,\t\t\t\t\\\n-\t\t  builtin_types[(int) ARG1],\t\t\\\n-\t\t  tree_cons (NULL_TREE,\t\t\t\\\n-\t\t\t     builtin_types[(int) ARG2],\t\\\n-\t\t\t     void_list_node)));\n-#define DEF_FUNCTION_TYPE_3(ENUM, RETURN, ARG1, ARG2, ARG3)\t\t \\\n-  builtin_types[(int) ENUM]\t\t\t\t\t\t \\\n-    = build_function_type\t\t\t\t\t\t \\\n-      (builtin_types[(int) RETURN],\t\t\t\t\t \\\n-       tree_cons (NULL_TREE,\t\t\t\t\t\t \\\n-\t\t  builtin_types[(int) ARG1],\t\t\t\t \\\n-\t\t  tree_cons (NULL_TREE,\t\t\t\t\t \\\n-\t\t\t     builtin_types[(int) ARG2],\t\t\t \\\n-\t\t\t     tree_cons (NULL_TREE,\t\t\t \\\n-\t\t\t\t\tbuiltin_types[(int) ARG3],\t \\\n-\t\t\t\t\tvoid_list_node))));\n-#define DEF_FUNCTION_TYPE_4(ENUM, RETURN, ARG1, ARG2, ARG3, ARG4)\t\\\n-  builtin_types[(int) ENUM]\t\t\t\t\t\t\\\n-    = build_function_type\t\t\t\t\t\t\\\n-      (builtin_types[(int) RETURN],\t\t\t\t\t\\\n-       tree_cons (NULL_TREE,\t\t\t\t\t\t\\\n-\t\t  builtin_types[(int) ARG1],\t\t\t\t\\\n-\t\t  tree_cons (NULL_TREE,\t\t\t\t\t\\\n-\t\t\t     builtin_types[(int) ARG2],\t\t\t\\\n-\t\t\t     tree_cons\t\t\t\t\t\\\n-\t\t\t     (NULL_TREE,\t\t\t\t\\\n-\t\t\t      builtin_types[(int) ARG3],\t\t\\\n-\t\t\t      tree_cons (NULL_TREE,\t\t\t\\\n-\t\t\t\t\t builtin_types[(int) ARG4],\t\\\n-\t\t\t\t\t void_list_node)))));\n+  builtin_types[ENUM] = VALUE;\n+#define DEF_FUNCTION_TYPE_0(ENUM, RETURN) \\\n+  def_fn_type (ENUM, RETURN, 0, 0);\n+#define DEF_FUNCTION_TYPE_1(ENUM, RETURN, ARG1) \\\n+  def_fn_type (ENUM, RETURN, 0, 1, ARG1);\n+#define DEF_FUNCTION_TYPE_2(ENUM, RETURN, ARG1, ARG2) \\\n+  def_fn_type (ENUM, RETURN, 0, 2, ARG1, ARG2);\n+#define DEF_FUNCTION_TYPE_3(ENUM, RETURN, ARG1, ARG2, ARG3) \\\n+  def_fn_type (ENUM, RETURN, 0, 3, ARG1, ARG2, ARG3);\n+#define DEF_FUNCTION_TYPE_4(ENUM, RETURN, ARG1, ARG2, ARG3, ARG4) \\\n+  def_fn_type (ENUM, RETURN, 0, 4, ARG1, ARG2, ARG3, ARG4);\n #define DEF_FUNCTION_TYPE_5(ENUM, RETURN, ARG1, ARG2, ARG3, ARG4, ARG5)\t\\\n-  builtin_types[(int) ENUM]\t\t\t\t\t\t\\\n-    = build_function_type\t\t\t\t\t\t\\\n-      (builtin_types[(int) RETURN],\t\t\t\t\t\\\n-       tree_cons (NULL_TREE,\t\t\t\t\t\t\\\n-\t\t  builtin_types[(int) ARG1],\t\t\t\t\\\n-\t\t  tree_cons (NULL_TREE,\t\t\t\t\t\\\n-\t\t\t     builtin_types[(int) ARG2],\t\t\t\\\n-\t\t\t     tree_cons\t\t\t\t\t\\\n-\t\t\t     (NULL_TREE,\t\t\t\t\\\n-\t\t\t      builtin_types[(int) ARG3],\t\t\\\n-\t\t\t      tree_cons (NULL_TREE,\t\t\t\\\n-\t\t\t\t\t builtin_types[(int) ARG4],\t\\\n-\t\t\t\t\t tree_cons (NULL_TREE,\t\t\\\n-\t\t\t\t\t      builtin_types[(int) ARG5],\\\n-\t\t\t\t\t      void_list_node))))));\n+  def_fn_type (ENUM, RETURN, 0, 5, ARG1, ARG2, ARG3, ARG4, ARG5);\n #define DEF_FUNCTION_TYPE_6(ENUM, RETURN, ARG1, ARG2, ARG3, ARG4, ARG5, \\\n \t\t\t    ARG6)\t\t\t\t\t\\\n-  builtin_types[(int) ENUM]\t\t\t\t\t\t\\\n-    = build_function_type\t\t\t\t\t\t\\\n-      (builtin_types[(int) RETURN],\t\t\t\t\t\\\n-       tree_cons (NULL_TREE,\t\t\t\t\t\t\\\n-\t\t  builtin_types[(int) ARG1],\t\t\t\t\\\n-\t\t  tree_cons (NULL_TREE,\t\t\t\t\t\\\n-\t\t\t     builtin_types[(int) ARG2],\t\t\t\\\n-\t\t\t     tree_cons\t\t\t\t\t\\\n-\t\t\t     (NULL_TREE,\t\t\t\t\\\n-\t\t\t      builtin_types[(int) ARG3],\t\t\\\n-\t\t\t      tree_cons\t\t\t\t\t\\\n-\t\t\t      (NULL_TREE,\t\t\t\t\\\n-\t\t\t       builtin_types[(int) ARG4],\t\t\\\n-\t\t\t       tree_cons (NULL_TREE,\t\t\t\\\n-\t\t\t\t\t builtin_types[(int) ARG5],\t\\\n-\t\t\t\t\t tree_cons (NULL_TREE,\t\t\\\n-\t\t\t\t\t      builtin_types[(int) ARG6],\\\n-\t\t\t\t\t      void_list_node)))))));\n-#define DEF_FUNCTION_TYPE_VAR_0(ENUM, RETURN)\t\t\t\t\\\n-  builtin_types[(int) ENUM]\t\t\t\t\t\t\\\n-    = build_function_type (builtin_types[(int) RETURN], NULL_TREE);\n-#define DEF_FUNCTION_TYPE_VAR_1(ENUM, RETURN, ARG1)\t\t\t \\\n-   builtin_types[(int) ENUM]\t\t\t\t\t\t \\\n-    = build_function_type (builtin_types[(int) RETURN],\t\t \\\n-\t\t\t   tree_cons (NULL_TREE,\t\t\t \\\n-\t\t\t\t      builtin_types[(int) ARG1],\t \\\n-\t\t\t\t      NULL_TREE));\n-\n-#define DEF_FUNCTION_TYPE_VAR_2(ENUM, RETURN, ARG1, ARG2)\t\\\n-   builtin_types[(int) ENUM]\t\t\t\t\t\\\n-    = build_function_type\t\t\t\t\t\\\n-      (builtin_types[(int) RETURN],\t\t\t\t\\\n-       tree_cons (NULL_TREE,\t\t\t\t\t\\\n-\t\t  builtin_types[(int) ARG1],\t\t\t\\\n-\t\t  tree_cons (NULL_TREE,\t\t\t\t\\\n-\t\t\t     builtin_types[(int) ARG2],\t\t\\\n-\t\t\t     NULL_TREE)));\n-\n-#define DEF_FUNCTION_TYPE_VAR_3(ENUM, RETURN, ARG1, ARG2, ARG3)\t\t\\\n-   builtin_types[(int) ENUM]\t\t\t\t\t\t\\\n-    = build_function_type\t\t\t\t\t\t\\\n-      (builtin_types[(int) RETURN],\t\t\t\t\t\\\n-       tree_cons (NULL_TREE,\t\t\t\t\t\t\\\n-\t\t  builtin_types[(int) ARG1],\t\t\t\t\\\n-\t\t  tree_cons (NULL_TREE,\t\t\t\t\t\\\n-\t\t\t     builtin_types[(int) ARG2],\t\t\t\\\n-\t\t\t     tree_cons (NULL_TREE,\t\t\t\\\n-\t\t\t\t\tbuiltin_types[(int) ARG3],\t\\\n-\t\t\t\t\tNULL_TREE))));\n-\n-#define DEF_FUNCTION_TYPE_VAR_4(ENUM, RETURN, ARG1, ARG2, ARG3, ARG4)\t\\\n-   builtin_types[(int) ENUM]\t\t\t\t\t\t\\\n-    = build_function_type\t\t\t\t\t\t\\\n-      (builtin_types[(int) RETURN],\t\t\t\t\t\\\n-       tree_cons (NULL_TREE,\t\t\t\t\t\t\\\n-\t\t  builtin_types[(int) ARG1],\t\t\t\t\\\n-\t\t  tree_cons (NULL_TREE,\t\t\t\t\t\\\n-\t\t\t     builtin_types[(int) ARG2],\t\t\t\\\n-\t\t\t     tree_cons (NULL_TREE,\t\t\t\\\n-\t\t\t\t\tbuiltin_types[(int) ARG3],\t\\\n-\t\t\t\t\ttree_cons (NULL_TREE,\t\t\\\n-\t\t\t\t\t      builtin_types[(int) ARG4],\\\n-\t\t\t\t\t      NULL_TREE)))));\n-\n-#define DEF_FUNCTION_TYPE_VAR_5(ENUM, RETURN, ARG1, ARG2, ARG3, ARG4,\t\\\n-\t\t\t\tARG5)\t\t\t\t\t\\\n-   builtin_types[(int) ENUM]\t\t\t\t\t\t\\\n-    = build_function_type\t\t\t\t\t\t\\\n-      (builtin_types[(int) RETURN],\t\t\t\t\t\\\n-       tree_cons (NULL_TREE,\t\t\t\t\t\t\\\n-\t\t  builtin_types[(int) ARG1],\t\t\t\t\\\n-\t\t  tree_cons (NULL_TREE,\t\t\t\t\t\\\n-\t\t\t     builtin_types[(int) ARG2],\t\t\t\\\n-\t\t\t     tree_cons\t\t\t\t\t\\\n-\t\t\t     (NULL_TREE,\t\t\t\t\\\n-\t\t\t      builtin_types[(int) ARG3],\t\t\\\n-\t\t\t      tree_cons (NULL_TREE,\t\t\t\\\n-\t\t\t\t\tbuiltin_types[(int) ARG4],\t\\\n-\t\t\t\t\ttree_cons (NULL_TREE,\t\t\\\n-\t\t\t\t\t      builtin_types[(int) ARG5],\\\n-\t\t\t\t\t      NULL_TREE))))));\n-\n-#define DEF_POINTER_TYPE(ENUM, TYPE)\t\t\t\\\n-  builtin_types[(int) ENUM]\t\t\t\t\\\n-    = build_pointer_type (builtin_types[(int) TYPE]);\n+  def_fn_type (ENUM, RETURN, 0, 6, ARG1, ARG2, ARG3, ARG4, ARG5, ARG6);\n+#define DEF_FUNCTION_TYPE_7(ENUM, RETURN, ARG1, ARG2, ARG3, ARG4, ARG5, \\\n+\t\t\t    ARG6, ARG7)\t\t\t\t\t\\\n+  def_fn_type (ENUM, RETURN, 0, 7, ARG1, ARG2, ARG3, ARG4, ARG5, ARG6, ARG7);\n+#define DEF_FUNCTION_TYPE_VAR_0(ENUM, RETURN) \\\n+  def_fn_type (ENUM, RETURN, 1, 0);\n+#define DEF_FUNCTION_TYPE_VAR_1(ENUM, RETURN, ARG1) \\\n+  def_fn_type (ENUM, RETURN, 1, 1, ARG1);\n+#define DEF_FUNCTION_TYPE_VAR_2(ENUM, RETURN, ARG1, ARG2) \\\n+  def_fn_type (ENUM, RETURN, 1, 2, ARG1, ARG2);\n+#define DEF_FUNCTION_TYPE_VAR_3(ENUM, RETURN, ARG1, ARG2, ARG3) \\\n+  def_fn_type (ENUM, RETURN, 1, 3, ARG1, ARG2, ARG3);\n+#define DEF_FUNCTION_TYPE_VAR_4(ENUM, RETURN, ARG1, ARG2, ARG3, ARG4) \\\n+  def_fn_type (ENUM, RETURN, 1, 4, ARG1, ARG2, ARG3, ARG4);\n+#define DEF_FUNCTION_TYPE_VAR_5(ENUM, RETURN, ARG1, ARG2, ARG3, ARG4, ARG5) \\\n+  def_fn_type (ENUM, RETURN, 1, 5, ARG1, ARG2, ARG3, ARG4, ARG5);\n+#define DEF_POINTER_TYPE(ENUM, TYPE) \\\n+  builtin_types[(int) ENUM] = build_pointer_type (builtin_types[(int) TYPE]);\n+\n #include \"builtin-types.def\"\n+\n #undef DEF_PRIMITIVE_TYPE\n #undef DEF_FUNCTION_TYPE_1\n #undef DEF_FUNCTION_TYPE_2\n@@ -3403,6 +3334,9 @@ c_common_nodes_and_builtins (void)\n      not shared.  */\n   null_node = make_node (INTEGER_CST);\n   TREE_TYPE (null_node) = c_common_type_for_size (POINTER_SIZE, 0);\n+\n+  /* Since builtin_types isn't gc'ed, don't export these nodes.  */\n+  memset (builtin_types, 0, sizeof (builtin_types));\n }\n \n /* Look up the function in built_in_decls that corresponds to DECL\n@@ -3493,6 +3427,9 @@ def_builtin_1 (enum built_in_function fncode,\n   tree decl;\n   const char *libname;\n \n+  if (fntype == error_mark_node)\n+    return;\n+\n   gcc_assert ((!both_p && !fallback_p)\n \t      || !strncmp (name, \"__builtin_\",\n \t\t\t   strlen (\"__builtin_\")));\n@@ -6178,7 +6115,7 @@ sync_resolve_size (tree function, tree params)\n     goto incompatible;\n \n   size = tree_low_cst (TYPE_SIZE_UNIT (type), 1);\n-  if (size == 1 || size == 2 || size == 4 || size == 8)\n+  if (size == 1 || size == 2 || size == 4 || size == 8 || size == 16)\n     return size;\n \n  incompatible:"}, {"sha": "cc609df3f8ca446e8edc7ad085401f20c05c4269", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0274e3e23a38ee21e35b50e778bb1107322b762/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0274e3e23a38ee21e35b50e778bb1107322b762/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=a0274e3e23a38ee21e35b50e778bb1107322b762", "patch": "@@ -586,6 +586,10 @@ const int x86_schedule = m_PPRO | m_ATHLON_K8 | m_K6 | m_PENT;\n const int x86_use_bt = m_ATHLON_K8;\n /* Compare and exchange was added for 80486.  */\n const int x86_cmpxchg = ~m_386;\n+/* Compare and exchange 8 bytes was added for pentium.  */\n+const int x86_cmpxchg8b = ~(m_386 | m_486);\n+/* Compare and exchange 16 bytes was added for nocona.  */\n+const int x86_cmpxchg16b = m_NOCONA;\n /* Exchange and add was added for 80486.  */\n const int x86_xadd = ~m_386;\n "}, {"sha": "2d81f0e045ca762e21f0b11f328a81e31162d99f", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0274e3e23a38ee21e35b50e778bb1107322b762/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0274e3e23a38ee21e35b50e778bb1107322b762/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=a0274e3e23a38ee21e35b50e778bb1107322b762", "patch": "@@ -162,7 +162,7 @@ extern const int x86_sse_typeless_stores, x86_sse_load0_by_pxor;\n extern const int x86_use_ffreep;\n extern const int x86_inter_unit_moves, x86_schedule;\n extern const int x86_use_bt;\n-extern const int x86_cmpxchg, x86_xadd;\n+extern const int x86_cmpxchg, x86_cmpxchg8b, x86_cmpxchg16b, x86_xadd;\n extern int x86_prefetch_sse;\n \n #define TARGET_USE_LEAVE (x86_use_leave & TUNEMASK)\n@@ -229,6 +229,8 @@ extern int x86_prefetch_sse;\n #define TARGET_SUN_TLS (ix86_tls_dialect == TLS_DIALECT_SUN)\n \n #define TARGET_CMPXCHG (x86_cmpxchg & (1 << ix86_arch))\n+#define TARGET_CMPXCHG8B (x86_cmpxchg8b & (1 << ix86_arch))\n+#define TARGET_CMPXCHG16B (x86_cmpxchg16b & (1 << ix86_arch))\n #define TARGET_XADD (x86_xadd & (1 << ix86_arch))\n \n #ifndef TARGET_64BIT_DEFAULT"}, {"sha": "fb3976cc6bc461420263d12b09b92f174ed26691", "filename": "gcc/config/i386/sync.md", "status": "modified", "additions": 132, "deletions": 7, "changes": 139, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0274e3e23a38ee21e35b50e778bb1107322b762/gcc%2Fconfig%2Fi386%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0274e3e23a38ee21e35b50e778bb1107322b762/gcc%2Fconfig%2Fi386%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsync.md?ref=a0274e3e23a38ee21e35b50e778bb1107322b762", "patch": "@@ -24,13 +24,54 @@\n (define_mode_attr modeconstraint [(QI \"q\") (HI \"r\") (SI \"r\") (DI \"r\")])\n (define_mode_attr immconstraint [(QI \"i\") (HI \"i\") (SI \"i\") (DI \"e\")])\n \n+(define_mode_macro CASMODE [QI HI SI (DI \"TARGET_64BIT || TARGET_CMPXCHG8B\")\n+\t\t\t   (TI \"TARGET_64BIT && TARGET_CMPXCHG16B\")])\n+(define_mode_macro DCASMODE\n+  [(DI \"!TARGET_64BIT && TARGET_CMPXCHG8B && !flag_pic\")\n+   (TI \"TARGET_64BIT && TARGET_CMPXCHG16B\")])\n+(define_mode_attr doublemodesuffix [(DI \"8\") (TI \"16\")])\n+(define_mode_attr DCASHMODE [(DI \"SI\") (TI \"DI\")])\n+\n ;; ??? It would be possible to use cmpxchg8b on pentium for DImode\n ;; changes.  It's complicated because the insn uses ecx:ebx as the\n ;; new value; note that the registers are reversed from the order\n ;; that they'd be in with (reg:DI 2 ecx).  Similarly for TImode \n ;; data in 64-bit mode.\n \n-(define_insn \"sync_compare_and_swap<mode>\"\n+(define_expand \"sync_compare_and_swap<mode>\"\n+  [(parallel\n+    [(set (match_operand:CASMODE 0 \"register_operand\" \"\")\n+\t  (match_operand:CASMODE 1 \"memory_operand\" \"\"))\n+     (set (match_dup 1)\n+\t  (unspec_volatile:CASMODE\n+\t    [(match_dup 1)\n+\t     (match_operand:CASMODE 2 \"register_operand\" \"\")\n+\t     (match_operand:CASMODE 3 \"register_operand\" \"\")]\n+\t    UNSPECV_CMPXCHG_1))\n+     (clobber (reg:CC FLAGS_REG))])]\n+  \"TARGET_CMPXCHG\"\n+{\n+  if ((<MODE>mode == DImode && !TARGET_64BIT) || <MODE>mode == TImode)\n+    {\n+      enum machine_mode hmode = <MODE>mode == DImode ? SImode : DImode;\n+      rtx low = simplify_gen_subreg (hmode, operands[3], <MODE>mode, 0);\n+      rtx high = simplify_gen_subreg (hmode, operands[3], <MODE>mode,\n+\t\t\t\t      GET_MODE_SIZE (hmode));\n+      low = force_reg (hmode, low);\n+      high = force_reg (hmode, high);\n+      if (<MODE>mode == DImode)\n+\temit_insn (gen_sync_double_compare_and_swapdi\n+\t\t   (operands[0], operands[1], operands[2], low, high));\n+      else if (<MODE>mode == TImode)\n+\temit_insn (gen_sync_double_compare_and_swapti\n+\t\t   (operands[0], operands[1], operands[2], low, high));\n+      else\n+\tgcc_unreachable ();\n+      DONE;\n+    }\n+})\n+\n+(define_insn \"*sync_compare_and_swap<mode>\"\n   [(set (match_operand:IMODE 0 \"register_operand\" \"=a\")\n \t(match_operand:IMODE 1 \"memory_operand\" \"+m\"))\n    (set (match_dup 1)\n@@ -43,19 +84,47 @@\n   \"TARGET_CMPXCHG\"\n   \"lock\\;cmpxchg{<modesuffix>}\\t{%3, %1|%1, %3}\")\n \n+(define_insn \"sync_double_compare_and_swap<mode>\"\n+  [(set (match_operand:DCASMODE 0 \"register_operand\" \"=A\")\n+\t(match_operand:DCASMODE 1 \"memory_operand\" \"+m\"))\n+   (set (match_dup 1)\n+\t(unspec_volatile:DCASMODE\n+\t  [(match_dup 1)\n+\t   (match_operand:DCASMODE 2 \"register_operand\" \"A\")\n+\t   (match_operand:<DCASHMODE> 3 \"register_operand\" \"b\")\n+\t   (match_operand:<DCASHMODE> 4 \"register_operand\" \"c\")]\n+\t  UNSPECV_CMPXCHG_1))\n+   (clobber (reg:CC FLAGS_REG))]\n+  \"\"\n+  \"lock\\;cmpxchg<doublemodesuffix>b\\t%1\")\n+\n+(define_insn \"*sync_double_compare_and_swapdi_pic\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=A\")\n+\t(match_operand:DI 1 \"memory_operand\" \"+m\"))\n+   (set (match_dup 1)\n+\t(unspec_volatile:DI\n+\t  [(match_dup 1)\n+\t   (match_operand:DI 2 \"register_operand\" \"A\")\n+\t   (match_operand:SI 3 \"register_operand\" \"r\")\n+\t   (match_operand:SI 4 \"register_operand\" \"c\")]\n+\t  UNSPECV_CMPXCHG_1))\n+   (clobber (reg:CC FLAGS_REG))]\n+  \"!TARGET_64BIT && TARGET_CMPXCHG8B && flag_pic\"\n+  \"xchg{l}\\t%%ebx, %3\\;lock\\;cmpxchg8b\\t%1\\;xchg{l}\\t%%ebx, %3\")\n+\n (define_expand \"sync_compare_and_swap_cc<mode>\"\n   [(parallel\n-    [(set (match_operand:IMODE 0 \"register_operand\" \"\")\n-\t  (match_operand:IMODE 1 \"memory_operand\" \"\"))\n+    [(set (match_operand:CASMODE 0 \"register_operand\" \"\")\n+\t  (match_operand:CASMODE 1 \"memory_operand\" \"\"))\n      (set (match_dup 1)\n-\t  (unspec_volatile:IMODE\n+\t  (unspec_volatile:CASMODE\n \t    [(match_dup 1)\n-\t     (match_operand:IMODE 2 \"register_operand\" \"\")\n-\t     (match_operand:IMODE 3 \"register_operand\" \"\")]\n+\t     (match_operand:CASMODE 2 \"register_operand\" \"\")\n+\t     (match_operand:CASMODE 3 \"register_operand\" \"\")]\n \t    UNSPECV_CMPXCHG_1))\n      (set (match_dup 4)\n \t  (compare:CCZ\n-\t    (unspec_volatile:IMODE\n+\t    (unspec_volatile:CASMODE\n \t      [(match_dup 1) (match_dup 2) (match_dup 3)] UNSPECV_CMPXCHG_2)\n \t    (match_dup 2)))])]\n   \"TARGET_CMPXCHG\"\n@@ -64,6 +133,24 @@\n   ix86_compare_op0 = operands[3];\n   ix86_compare_op1 = NULL;\n   ix86_compare_emitted = operands[4];\n+  if ((<MODE>mode == DImode && !TARGET_64BIT) || <MODE>mode == TImode)\n+    {\n+      enum machine_mode hmode = <MODE>mode == DImode ? SImode : DImode;\n+      rtx low = simplify_gen_subreg (hmode, operands[3], <MODE>mode, 0);\n+      rtx high = simplify_gen_subreg (hmode, operands[3], <MODE>mode,\n+\t\t\t\t      GET_MODE_SIZE (hmode));\n+      low = force_reg (hmode, low);\n+      high = force_reg (hmode, high);\n+      if (<MODE>mode == DImode)\n+\temit_insn (gen_sync_double_compare_and_swap_ccdi\n+\t\t   (operands[0], operands[1], operands[2], low, high));\n+      else if (<MODE>mode == TImode)\n+\temit_insn (gen_sync_double_compare_and_swap_ccti\n+\t\t   (operands[0], operands[1], operands[2], low, high));\n+      else\n+\tgcc_unreachable ();\n+      DONE;\n+    }\n })\n \n (define_insn \"*sync_compare_and_swap_cc<mode>\"\n@@ -83,6 +170,44 @@\n   \"TARGET_CMPXCHG\"\n   \"lock\\;cmpxchg{<modesuffix>}\\t{%3, %1|%1, %3}\")\n \n+(define_insn \"sync_double_compare_and_swap_cc<mode>\"\n+  [(set (match_operand:DCASMODE 0 \"register_operand\" \"=A\")\n+\t(match_operand:DCASMODE 1 \"memory_operand\" \"+m\"))\n+   (set (match_dup 1)\n+\t(unspec_volatile:DCASMODE\n+\t  [(match_dup 1)\n+\t   (match_operand:DCASMODE 2 \"register_operand\" \"A\")\n+\t   (match_operand:<DCASHMODE> 3 \"register_operand\" \"b\")\n+\t   (match_operand:<DCASHMODE> 4 \"register_operand\" \"c\")]\n+\t  UNSPECV_CMPXCHG_1))\n+   (set (reg:CCZ FLAGS_REG)\n+\t(compare:CCZ\n+\t  (unspec_volatile:DCASMODE\n+\t    [(match_dup 1) (match_dup 2) (match_dup 3) (match_dup 4)]\n+\t    UNSPECV_CMPXCHG_2)\n+\t  (match_dup 2)))]\n+  \"\"\n+  \"lock\\;cmpxchg<doublemodesuffix>b\\t%1\")\n+\n+(define_insn \"*sync_double_compare_and_swap_ccdi_pic\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=A\")\n+\t(match_operand:DI 1 \"memory_operand\" \"+m\"))\n+   (set (match_dup 1)\n+\t(unspec_volatile:DI\n+\t  [(match_dup 1)\n+\t   (match_operand:DI 2 \"register_operand\" \"A\")\n+\t   (match_operand:SI 3 \"register_operand\" \"r\")\n+\t   (match_operand:SI 4 \"register_operand\" \"c\")]\n+\t  UNSPECV_CMPXCHG_1))\n+   (set (reg:CCZ FLAGS_REG)\n+\t(compare:CCZ\n+\t  (unspec_volatile:DI\n+\t    [(match_dup 1) (match_dup 2) (match_dup 3) (match_dup 4)]\n+\t    UNSPECV_CMPXCHG_2)\n+\t  (match_dup 2)))]\n+  \"!TARGET_64BIT && TARGET_CMPXCHG8B && flag_pic\"\n+  \"xchg{l}\\t%%ebx, %3\\;lock\\;cmpxchg8b\\t%1\\;xchg{l}\\t%%ebx, %3\")\n+\n (define_insn \"sync_old_add<mode>\"\n   [(set (match_operand:IMODE 0 \"register_operand\" \"=<modeconstraint>\")\n \t(unspec_volatile:IMODE"}, {"sha": "a619ecce073ea531f43a932b447c1b3688535554", "filename": "gcc/sync-builtins.def", "status": "added", "additions": 253, "deletions": 0, "changes": 253, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0274e3e23a38ee21e35b50e778bb1107322b762/gcc%2Fsync-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0274e3e23a38ee21e35b50e778bb1107322b762/gcc%2Fsync-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsync-builtins.def?ref=a0274e3e23a38ee21e35b50e778bb1107322b762", "patch": "@@ -0,0 +1,253 @@\n+/* This file contains the definitions and documentation for the\n+   synchronization builtins used in the GNU compiler.\n+   Copyright (C) 2005 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 2, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING.  If not, write to the Free\n+Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301, USA.  */\n+\n+/* Before including this file, you should define a macro:\n+\n+     DEF_SYNC_BUILTIN (ENUM, NAME, TYPE, ATTRS)\n+\n+   See builtins.def for details.  */\n+   \n+/* Synchronization Primitives.  The \"_N\" version is the one that the user\n+   is supposed to be using.  It's overloaded, and is resolved to one of the\n+   \"_1\" through \"_16\" versions, plus some extra casts.  */\n+\n+DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_ADD_N, \"__sync_fetch_and_add\",\n+\t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_ADD_1, \"__sync_fetch_and_add_1\",\n+\t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_ADD_2, \"__sync_fetch_and_add_2\",\n+\t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_ADD_4, \"__sync_fetch_and_add_4\",\n+\t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_ADD_8, \"__sync_fetch_and_add_8\",\n+\t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_ADD_16, \"__sync_fetch_and_add_16\",\n+\t\t  BT_FN_I16_VPTR_I16, ATTR_NOTHROW_LIST)\n+\n+DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_SUB_N, \"__sync_fetch_and_sub\",\n+\t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_SUB_1, \"__sync_fetch_and_sub_1\",\n+\t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_SUB_2, \"__sync_fetch_and_sub_2\",\n+\t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_SUB_4, \"__sync_fetch_and_sub_4\",\n+\t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_SUB_8, \"__sync_fetch_and_sub_8\",\n+\t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_SUB_16, \"__sync_fetch_and_sub_16\",\n+\t\t  BT_FN_I16_VPTR_I16, ATTR_NOTHROW_LIST)\n+\n+DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_OR_N, \"__sync_fetch_and_or\",\n+\t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_OR_1, \"__sync_fetch_and_or_1\",\n+\t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_OR_2, \"__sync_fetch_and_or_2\",\n+\t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_OR_4, \"__sync_fetch_and_or_4\",\n+\t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_OR_8, \"__sync_fetch_and_or_8\",\n+\t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_OR_16, \"__sync_fetch_and_or_16\",\n+\t\t  BT_FN_I16_VPTR_I16, ATTR_NOTHROW_LIST)\n+\n+DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_AND_N, \"__sync_fetch_and_and\",\n+\t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_AND_1, \"__sync_fetch_and_and_1\",\n+\t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_AND_2, \"__sync_fetch_and_and_2\",\n+\t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_AND_4, \"__sync_fetch_and_and_4\",\n+\t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_AND_8, \"__sync_fetch_and_and_8\",\n+\t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_AND_16, \"__sync_fetch_and_and_16\",\n+\t\t  BT_FN_I16_VPTR_I16, ATTR_NOTHROW_LIST)\n+\n+DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_XOR_N, \"__sync_fetch_and_xor\",\n+\t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_XOR_1, \"__sync_fetch_and_xor_1\",\n+\t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_XOR_2, \"__sync_fetch_and_xor_2\",\n+\t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_XOR_4, \"__sync_fetch_and_xor_4\",\n+\t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_XOR_8, \"__sync_fetch_and_xor_8\",\n+\t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_XOR_16, \"__sync_fetch_and_xor_16\",\n+\t\t  BT_FN_I16_VPTR_I16, ATTR_NOTHROW_LIST)\n+\n+DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_NAND_N, \"__sync_fetch_and_nand\",\n+\t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_NAND_1, \"__sync_fetch_and_nand_1\",\n+\t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_NAND_2, \"__sync_fetch_and_nand_2\",\n+\t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_NAND_4, \"__sync_fetch_and_nand_4\",\n+\t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_NAND_8, \"__sync_fetch_and_nand_8\",\n+\t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_FETCH_AND_NAND_16, \"__sync_fetch_and_nand_16\",\n+\t\t  BT_FN_I16_VPTR_I16, ATTR_NOTHROW_LIST)\n+\n+DEF_SYNC_BUILTIN (BUILT_IN_ADD_AND_FETCH_N, \"__sync_add_and_fetch\",\n+\t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_ADD_AND_FETCH_1, \"__sync_add_and_fetch_1\",\n+\t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_ADD_AND_FETCH_2, \"__sync_add_and_fetch_2\",\n+\t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_ADD_AND_FETCH_4, \"__sync_add_and_fetch_4\",\n+\t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_ADD_AND_FETCH_8, \"__sync_add_and_fetch_8\",\n+\t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_ADD_AND_FETCH_16, \"__sync_add_and_fetch_16\",\n+\t\t  BT_FN_I16_VPTR_I16, ATTR_NOTHROW_LIST)\n+\n+DEF_SYNC_BUILTIN (BUILT_IN_SUB_AND_FETCH_N, \"__sync_sub_and_fetch\",\n+\t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_SUB_AND_FETCH_1, \"__sync_sub_and_fetch_1\",\n+\t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_SUB_AND_FETCH_2, \"__sync_sub_and_fetch_2\",\n+\t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_SUB_AND_FETCH_4, \"__sync_sub_and_fetch_4\",\n+\t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_SUB_AND_FETCH_8, \"__sync_sub_and_fetch_8\",\n+\t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_SUB_AND_FETCH_16, \"__sync_sub_and_fetch_16\",\n+\t\t  BT_FN_I16_VPTR_I16, ATTR_NOTHROW_LIST)\n+\n+DEF_SYNC_BUILTIN (BUILT_IN_OR_AND_FETCH_N, \"__sync_or_and_fetch\",\n+\t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_OR_AND_FETCH_1, \"__sync_or_and_fetch_1\",\n+\t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_OR_AND_FETCH_2, \"__sync_or_and_fetch_2\",\n+\t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_OR_AND_FETCH_4, \"__sync_or_and_fetch_4\",\n+\t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_OR_AND_FETCH_8, \"__sync_or_and_fetch_8\",\n+\t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_OR_AND_FETCH_16, \"__sync_or_and_fetch_16\",\n+\t\t  BT_FN_I16_VPTR_I16, ATTR_NOTHROW_LIST)\n+\n+DEF_SYNC_BUILTIN (BUILT_IN_AND_AND_FETCH_N, \"__sync_and_and_fetch\",\n+\t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_AND_AND_FETCH_1, \"__sync_and_and_fetch_1\",\n+\t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_AND_AND_FETCH_2, \"__sync_and_and_fetch_2\",\n+\t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_AND_AND_FETCH_4, \"__sync_and_and_fetch_4\",\n+\t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_AND_AND_FETCH_8, \"__sync_and_and_fetch_8\",\n+\t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_AND_AND_FETCH_16, \"__sync_and_and_fetch_16\",\n+\t\t  BT_FN_I16_VPTR_I16, ATTR_NOTHROW_LIST)\n+\n+DEF_SYNC_BUILTIN (BUILT_IN_XOR_AND_FETCH_N, \"__sync_xor_and_fetch\",\n+\t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_XOR_AND_FETCH_1, \"__sync_xor_and_fetch_1\",\n+\t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_XOR_AND_FETCH_2, \"__sync_xor_and_fetch_2\",\n+\t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_XOR_AND_FETCH_4, \"__sync_xor_and_fetch_4\",\n+\t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_XOR_AND_FETCH_8, \"__sync_xor_and_fetch_8\",\n+\t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_XOR_AND_FETCH_16, \"__sync_xor_and_fetch_16\",\n+\t\t  BT_FN_I16_VPTR_I16, ATTR_NOTHROW_LIST)\n+\n+DEF_SYNC_BUILTIN (BUILT_IN_NAND_AND_FETCH_N, \"__sync_nand_and_fetch\",\n+\t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_NAND_AND_FETCH_1, \"__sync_nand_and_fetch_1\",\n+\t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_NAND_AND_FETCH_2, \"__sync_nand_and_fetch_2\",\n+\t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_NAND_AND_FETCH_4, \"__sync_nand_and_fetch_4\",\n+\t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_NAND_AND_FETCH_8, \"__sync_nand_and_fetch_8\",\n+\t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_NAND_AND_FETCH_16, \"__sync_nand_and_fetch_16\",\n+\t\t  BT_FN_I16_VPTR_I16, ATTR_NOTHROW_LIST)\n+\n+DEF_SYNC_BUILTIN (BUILT_IN_BOOL_COMPARE_AND_SWAP_N,\n+\t\t  \"__sync_bool_compare_and_swap\",\n+\t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_BOOL_COMPARE_AND_SWAP_1,\n+\t\t  \"__sync_bool_compare_and_swap_1\",\n+\t\t  BT_FN_BOOL_VPTR_I1_I1, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_BOOL_COMPARE_AND_SWAP_2,\n+\t\t  \"__sync_bool_compare_and_swap_2\",\n+\t\t  BT_FN_BOOL_VPTR_I2_I2, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_BOOL_COMPARE_AND_SWAP_4,\n+\t\t  \"__sync_bool_compare_and_swap_4\",\n+\t\t  BT_FN_BOOL_VPTR_I4_I4, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_BOOL_COMPARE_AND_SWAP_8,\n+\t\t  \"__sync_bool_compare_and_swap_8\",\n+\t\t  BT_FN_BOOL_VPTR_I8_I8, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_BOOL_COMPARE_AND_SWAP_16,\n+\t\t  \"__sync_bool_compare_and_swap_16\",\n+\t\t  BT_FN_BOOL_VPTR_I16_I16, ATTR_NOTHROW_LIST)\n+\n+DEF_SYNC_BUILTIN (BUILT_IN_VAL_COMPARE_AND_SWAP_N,\n+\t\t  \"__sync_val_compare_and_swap\",\n+\t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_VAL_COMPARE_AND_SWAP_1,\n+\t\t  \"__sync_val_compare_and_swap_1\",\n+\t\t  BT_FN_I1_VPTR_I1_I1, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_VAL_COMPARE_AND_SWAP_2,\n+\t\t  \"__sync_val_compare_and_swap_2\",\n+\t\t  BT_FN_I2_VPTR_I2_I2, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_VAL_COMPARE_AND_SWAP_4,\n+\t\t  \"__sync_val_compare_and_swap_4\",\n+\t\t  BT_FN_I4_VPTR_I4_I4, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_VAL_COMPARE_AND_SWAP_8,\n+\t\t  \"__sync_val_compare_and_swap_8\",\n+\t\t  BT_FN_I8_VPTR_I8_I8, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_VAL_COMPARE_AND_SWAP_16,\n+\t\t  \"__sync_val_compare_and_swap_16\",\n+\t\t  BT_FN_I16_VPTR_I16_I16, ATTR_NOTHROW_LIST)\n+\n+DEF_SYNC_BUILTIN (BUILT_IN_LOCK_TEST_AND_SET_N, \"__sync_lock_test_and_set\",\n+\t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_LOCK_TEST_AND_SET_1, \"__sync_lock_test_and_set_1\",\n+\t\t  BT_FN_I1_VPTR_I1, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_LOCK_TEST_AND_SET_2, \"__sync_lock_test_and_set_2\",\n+\t\t  BT_FN_I2_VPTR_I2, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_LOCK_TEST_AND_SET_4, \"__sync_lock_test_and_set_4\",\n+\t\t  BT_FN_I4_VPTR_I4, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_LOCK_TEST_AND_SET_8, \"__sync_lock_test_and_set_8\",\n+\t\t  BT_FN_I8_VPTR_I8, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_LOCK_TEST_AND_SET_16, \"__sync_lock_test_and_set_16\",\n+\t\t  BT_FN_I16_VPTR_I16, ATTR_NOTHROW_LIST)\n+\n+DEF_SYNC_BUILTIN (BUILT_IN_LOCK_RELEASE_N, \"__sync_lock_release\",\n+\t\t  BT_FN_VOID_VAR, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_LOCK_RELEASE_1, \"__sync_lock_release_1\",\n+\t\t  BT_FN_VOID_VPTR, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_LOCK_RELEASE_2, \"__sync_lock_release_2\",\n+\t\t  BT_FN_VOID_VPTR, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_LOCK_RELEASE_4, \"__sync_lock_release_4\",\n+\t\t  BT_FN_VOID_VPTR, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_LOCK_RELEASE_8, \"__sync_lock_release_8\",\n+\t\t  BT_FN_VOID_VPTR, ATTR_NOTHROW_LIST)\n+DEF_SYNC_BUILTIN (BUILT_IN_LOCK_RELEASE_16, \"__sync_lock_release_16\",\n+\t\t  BT_FN_VOID_VPTR, ATTR_NOTHROW_LIST)\n+\n+DEF_SYNC_BUILTIN (BUILT_IN_SYNCHRONIZE, \"__sync_synchronize\",\n+\t\t  BT_FN_VOID, ATTR_NOTHROW_LIST)"}]}