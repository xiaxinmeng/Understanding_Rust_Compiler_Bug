{"sha": "6f609029c7078fbd29e2f842074e2b99ea099096", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmY2MDkwMjljNzA3OGZiZDI5ZTJmODQyMDc0ZTJiOTllYTA5OTA5Ng==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2020-06-23T19:59:47Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2020-06-23T19:59:47Z"}, "message": "Make forall statement in testsuite conforming.\n\nThe recent patch for dependency checking introduced one failing test\ncase for pointer assignments in a forall statement.  This test case\nwas invalid because of an interdependency in a forall statement.\nThis patch fixes that by removing that dependency.\n\ngcc/testsuite/ChangeLog:\n\n\t* gfortran.fortran-torture/execute/forall_5.f90: Make forall\n\tstatement conforming.", "tree": {"sha": "75bacbf008f170ce33976af3f9600a3ff13d9422", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75bacbf008f170ce33976af3f9600a3ff13d9422"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f609029c7078fbd29e2f842074e2b99ea099096", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f609029c7078fbd29e2f842074e2b99ea099096", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f609029c7078fbd29e2f842074e2b99ea099096", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f609029c7078fbd29e2f842074e2b99ea099096/comments", "author": null, "committer": null, "parents": [{"sha": "788b962aa00959e861b45767c5c88ec41ca30c21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/788b962aa00959e861b45767c5c88ec41ca30c21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/788b962aa00959e861b45767c5c88ec41ca30c21"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "c162d44348be49ad3658a608fb56f146a534fa83", "filename": "gcc/testsuite/gfortran.fortran-torture/execute/forall_5.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f609029c7078fbd29e2f842074e2b99ea099096/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fforall_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f609029c7078fbd29e2f842074e2b99ea099096/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fforall_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fforall_5.f90?ref=6f609029c7078fbd29e2f842074e2b99ea099096", "patch": "@@ -4,23 +4,23 @@ program forall_5\n       integer, pointer, dimension(:)::p\n    end type\n \n-   type (element) q(5)\n+   type (element) :: q(5), r(5)\n    integer, target, dimension(25)::t\n \n    n = 5\n    do i = 1,5\n-      q(i)%p => t((i-1)*n + 1:i*n)\n+      r(i)%p => t((i-1)*n + 1:i*n)\n    enddo \n \n    forall (i = 2:5)\n-      q(i)%p => q(i-1)%p\n+      q(i)%p => r(i-1)%p\n    end forall\n \n    do i = 1, 25\n       t(i) = i\n    enddo\n \n-   if (any(q(1)%p .ne. (/1,2,3,4,5/))) STOP 1\n+   if (any(r(1)%p .ne. (/1,2,3,4,5/))) STOP 1\n    if (any(q(2)%p .ne. (/1,2,3,4,5/))) STOP 2\n    if (any(q(3)%p .ne. (/6,7,8,9,10/))) STOP 3\n    if (any(q(4)%p .ne. (/11,12,13,14,15/))) STOP 4"}]}