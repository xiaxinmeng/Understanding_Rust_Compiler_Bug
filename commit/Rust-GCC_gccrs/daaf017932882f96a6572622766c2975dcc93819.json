{"sha": "daaf017932882f96a6572622766c2975dcc93819", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGFhZjAxNzkzMjg4MmY5NmE2NTcyNjIyNzY2YzI5NzVkY2M5MzgxOQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2020-08-23T19:01:15Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-22T12:11:25Z"}, "message": "[Ada] Ada_2020 AI12-0250: Iterator filters in Iterated_Element_Assocations\n\ngcc/ada/\n\n\t* par-ch4.adb (P_Iterated_Component_Association): If the\n\tconstruct includes an iterator filter it corresponds to an\n\tIterated_Element_Association, so build the proper node for it.\n\t* exp_aggr.adb (Expand_Container_Aggregate, Aggregate_Size): If\n\tthe component is an Iterated_Element_Association, treat it as\n\thaving a non-static size.", "tree": {"sha": "57616da8e46a9402ad851ad6338df7410fd115a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57616da8e46a9402ad851ad6338df7410fd115a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/daaf017932882f96a6572622766c2975dcc93819", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daaf017932882f96a6572622766c2975dcc93819", "html_url": "https://github.com/Rust-GCC/gccrs/commit/daaf017932882f96a6572622766c2975dcc93819", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daaf017932882f96a6572622766c2975dcc93819/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e354dca60268ea14f3b20fb865b23e27af751022", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e354dca60268ea14f3b20fb865b23e27af751022", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e354dca60268ea14f3b20fb865b23e27af751022"}], "stats": {"total": 73, "additions": 58, "deletions": 15}, "files": [{"sha": "a3b03c38e4f69a7ee6f5ded762e4e27f25efe2dc", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daaf017932882f96a6572622766c2975dcc93819/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daaf017932882f96a6572622766c2975dcc93819/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=daaf017932882f96a6572622766c2975dcc93819", "patch": "@@ -6954,6 +6954,16 @@ package body Exp_Aggr is\n \n          if Present (Component_Associations (N)) then\n             Comp := First (Component_Associations (N));\n+\n+            --  If the component is an Iterated_Element_Association\n+            --  it includes an iterator or a loop parameter, possibly\n+            --  with a filter, so we do not attempt to compute its\n+            --  size. Room for future optimization ???\n+\n+            if Nkind (Comp) = N_Iterated_Element_Association then\n+               return -1;\n+            end if;\n+\n             while Present (Comp) loop\n                Choice := First (Choice_List (Comp));\n "}, {"sha": "925da7677937b1423bd0920fad1d4b83a783cecd", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 48, "deletions": 15, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daaf017932882f96a6572622766c2975dcc93819/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daaf017932882f96a6572622766c2975dcc93819/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=daaf017932882f96a6572622766c2975dcc93819", "patch": "@@ -3421,11 +3421,37 @@ package body Ch4 is\n    function P_Iterated_Component_Association return Node_Id is\n       Assoc_Node : Node_Id;\n       Choice     : Node_Id;\n+      Filter     : Node_Id := Empty;\n       Id         : Node_Id;\n       Iter_Spec  : Node_Id;\n       Loop_Spec  : Node_Id;\n       State      : Saved_Scan_State;\n \n+      procedure Build_Iterated_Element_Association;\n+      --  If the iterator includes a key expression or a filter, it is\n+      --  an Ada_2020 Iterator_Element_Association within a container\n+      --  aggregate.\n+\n+      ----------------------------------------\n+      -- Build_Iterated_Element_Association --\n+      ----------------------------------------\n+\n+      procedure Build_Iterated_Element_Association is\n+      begin\n+         Choice :=  First (Discrete_Choices (Assoc_Node));\n+         Assoc_Node :=\n+           New_Node (N_Iterated_Element_Association, Prev_Token_Ptr);\n+         Set_Loop_Parameter_Specification (Assoc_Node, Loop_Spec);\n+\n+         if Present (Next (Choice)) then\n+            Error_Msg_N (\"expect loop parameter specification\", Choice);\n+         end if;\n+\n+         Remove (Choice);\n+         Set_Discrete_Subtype_Definition (Loop_Spec, Choice);\n+         Set_Iterator_Filter (Loop_Spec, Filter);\n+      end Build_Iterated_Element_Association;\n+\n    --  Start of processing for P_Iterated_Component_Association\n \n    begin\n@@ -3443,6 +3469,8 @@ package body Ch4 is\n       --  In addition, if \"use\" is present after the specification,\n       --  this is an Iterated_Element_Association that carries a\n       --  key_expression, and we generate the appropriate node.\n+      --  Finally, the Iterated_Element form is reserved for contwiner\n+      --  aggregates, and is illegal in array aggregates.\n \n       Id := P_Defining_Identifier;\n       Assoc_Node :=\n@@ -3453,29 +3481,34 @@ package body Ch4 is\n          T_In;\n          Set_Discrete_Choices (Assoc_Node, P_Discrete_Choice_List);\n \n+         --  The iterator may include a filter.\n+\n+         if Token = Tok_When then\n+            Scan;    -- past WHEN\n+            Filter := P_Condition;\n+         end if;\n+\n+         --  Build loop_parameter specification.\n+\n+         Loop_Spec :=\n+           New_Node (N_Loop_Parameter_Specification, Prev_Token_Ptr);\n+         Set_Defining_Identifier (Loop_Spec, Id);\n+\n          if Token = Tok_Use then\n \n             --  Ada_2020 Key-expression is present, rewrite node as an\n             --  iterated_Element_Awwoiation.\n \n             Scan;  --  past USE\n-            Loop_Spec :=\n-              New_Node (N_Loop_Parameter_Specification, Prev_Token_Ptr);\n-            Set_Defining_Identifier (Loop_Spec, Id);\n-\n-            Choice :=  First (Discrete_Choices (Assoc_Node));\n-\n-            if Present (Next (Choice)) then\n-               Error_Msg_N (\"expect loop parameter specification\", Choice);\n-            end if;\n+            Build_Iterated_Element_Association;\n+            Set_Key_Expression (Assoc_Node, P_Expression);\n \n-            Remove (Choice);\n-            Set_Discrete_Subtype_Definition (Loop_Spec, Choice);\n+         elsif Present (Filter) then\n+            --  A loop_Parameter_Specification also indicates an Ada_2020\n+            --  conwtruct, in contrast with a subtype indication used in\n+            --  array aggregates.\n \n-            Assoc_Node :=\n-              New_Node (N_Iterated_Element_Association, Prev_Token_Ptr);\n-            Set_Loop_Parameter_Specification (Assoc_Node, Loop_Spec);\n-            Set_Key_Expression (Assoc_Node, P_Expression);\n+            Build_Iterated_Element_Association;\n          end if;\n \n          TF_Arrow;"}]}