{"sha": "3c26b7598c6d800dcc037a66f2dacf80728fb480", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MyNmI3NTk4YzZkODAwZGNjMDM3YTY2ZjJkYWNmODA3MjhmYjQ4MA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-02-23T21:19:00Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-02-23T21:19:00Z"}, "message": "P0340R2 Making std::underlying_type SFINAE-friendly\n\n\t* include/std/type_traits (__underlying_type_impl): New helper to\n\tmake underlying_type SFINAE-friendly.\n\t(underlying_type): Derive from __underlying_type_impl.\n\t* testsuite/20_util/underlying_type/requirements/typedefs-3.cc: New\n\ttest.\n\nFrom-SVN: r269168", "tree": {"sha": "9465862e1aa509de999cfe72cfbc0d183f666ab3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9465862e1aa509de999cfe72cfbc0d183f666ab3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c26b7598c6d800dcc037a66f2dacf80728fb480", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c26b7598c6d800dcc037a66f2dacf80728fb480", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c26b7598c6d800dcc037a66f2dacf80728fb480", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c26b7598c6d800dcc037a66f2dacf80728fb480/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46d496b9d93f7a647c9f5d58fed94f9e7fa299ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46d496b9d93f7a647c9f5d58fed94f9e7fa299ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46d496b9d93f7a647c9f5d58fed94f9e7fa299ab"}], "stats": {"total": 73, "additions": 70, "deletions": 3}, "files": [{"sha": "0b6b05063d767fc90a993523d45b753e5e2535c3", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c26b7598c6d800dcc037a66f2dacf80728fb480/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c26b7598c6d800dcc037a66f2dacf80728fb480/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3c26b7598c6d800dcc037a66f2dacf80728fb480", "patch": "@@ -1,5 +1,11 @@\n 2019-02-23  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/std/type_traits (__underlying_type_impl): New helper to\n+\tmake underlying_type SFINAE-friendly.\n+\t(underlying_type): Derive from __underlying_type_impl.\n+\t* testsuite/20_util/underlying_type/requirements/typedefs-3.cc: New\n+\ttest.\n+\n \tPR libstdc++/89446\n \t* include/bits/char_traits.h (__constant_char_array): Check index is\n \tin range before dereferencing."}, {"sha": "977ca0e1350c64f6d966f3e7d61c6a900dda5ece", "filename": "libstdc++-v3/include/std/type_traits", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c26b7598c6d800dcc037a66f2dacf80728fb480/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c26b7598c6d800dcc037a66f2dacf80728fb480/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits?ref=3c26b7598c6d800dcc037a66f2dacf80728fb480", "patch": "@@ -2176,12 +2176,21 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n                common_type<_Tp, _Up>>::type, _Vp...>::type\n     { };\n \n+  template<typename _Tp, bool = is_enum<_Tp>::value>\n+    struct __underlying_type_impl\n+    {\n+      using type = __underlying_type(_Tp);\n+    };\n+\n+  template<typename _Tp>\n+    struct __underlying_type_impl<_Tp, false>\n+    { };\n+\n   /// The underlying type of an enum.\n   template<typename _Tp>\n     struct underlying_type\n-    {\n-      typedef __underlying_type(_Tp) type;\n-    };\n+    : public __underlying_type_impl<_Tp>\n+    { };\n \n   template<typename _Tp>\n     struct __declval_protector"}, {"sha": "5b9a4afb0936107d06b5a1641fdd250254cbf65b", "filename": "libstdc++-v3/testsuite/20_util/underlying_type/requirements/typedefs-3.cc", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c26b7598c6d800dcc037a66f2dacf80728fb480/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funderlying_type%2Frequirements%2Ftypedefs-3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c26b7598c6d800dcc037a66f2dacf80728fb480/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funderlying_type%2Frequirements%2Ftypedefs-3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funderlying_type%2Frequirements%2Ftypedefs-3.cc?ref=3c26b7598c6d800dcc037a66f2dacf80728fb480", "patch": "@@ -0,0 +1,52 @@\n+// Copyright (C) 2019 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do compile { target c++11 } }\n+\n+#include <type_traits>\n+\n+// Test for SFINAE-friendly underlying_type\n+\n+template<typename T, typename = typename std::underlying_type<T>::type>\n+  constexpr bool is_enum(int) { return true; }\n+\n+template<typename T>\n+  constexpr bool is_enum(...) { return false; }\n+\n+void\n+test01()\n+{\n+  enum E { };\n+  static_assert( is_enum<E>(0), \"\");\n+\n+  static_assert( !is_enum<void>(0), \"\");\n+  static_assert( !is_enum<int>(0), \"\");\n+  static_assert( !is_enum<long>(0), \"\");\n+  static_assert( !is_enum<int*>(0), \"\");\n+  static_assert( !is_enum<int[]>(0), \"\");\n+  static_assert( !is_enum<const int*>(0), \"\");\n+  static_assert( !is_enum<const int&>(0), \"\");\n+  static_assert( !is_enum<int()>(0), \"\");\n+  static_assert( !is_enum<int(&)()>(0), \"\");\n+  static_assert( !is_enum<int(*)()>(0), \"\");\n+  struct S { };\n+  static_assert( !is_enum<S>(0), \"\");\n+  static_assert( !is_enum<S&>(0), \"\");\n+  static_assert( !is_enum<S*>(0), \"\");\n+  static_assert( !is_enum<int S::*>(0), \"\");\n+  static_assert( !is_enum<int (S::*)()>(0), \"\");\n+}"}]}