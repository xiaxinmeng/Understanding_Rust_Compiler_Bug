{"sha": "f305679f4e9bc6f1fcf3b97dfaaf82de51be152c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjMwNTY3OWY0ZTliYzZmMWZjZjNiOTdkZmFhZjgyZGU1MWJlMTUyYw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2002-07-18T07:40:16Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2002-07-18T07:40:16Z"}, "message": "gcse.c (hoist_expr_reaches_here_p): Stop once expr_bb is reached.\n\n\n\t* gcse.c (hoist_expr_reaches_here_p):  Stop once expr_bb is reached.\n\n\t* gcse.c (try_replace_reg): Do not return false positives.\n\nFrom-SVN: r55553", "tree": {"sha": "74081aa4c85f7fcf193584fd986eba23692d1327", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74081aa4c85f7fcf193584fd986eba23692d1327"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f305679f4e9bc6f1fcf3b97dfaaf82de51be152c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f305679f4e9bc6f1fcf3b97dfaaf82de51be152c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f305679f4e9bc6f1fcf3b97dfaaf82de51be152c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f305679f4e9bc6f1fcf3b97dfaaf82de51be152c/comments", "author": null, "committer": null, "parents": [{"sha": "cd095b7d1fa01a4ea08194149a128807fc46e0cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd095b7d1fa01a4ea08194149a128807fc46e0cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd095b7d1fa01a4ea08194149a128807fc46e0cb"}], "stats": {"total": 31, "additions": 21, "deletions": 10}, "files": [{"sha": "48a3607c20bc6a1fc3332ed3ab904e898b8db023", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f305679f4e9bc6f1fcf3b97dfaaf82de51be152c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f305679f4e9bc6f1fcf3b97dfaaf82de51be152c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f305679f4e9bc6f1fcf3b97dfaaf82de51be152c", "patch": "@@ -1,3 +1,9 @@\n+Thu Jul 18 09:38:59 CEST 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* gcse.c (hoist_expr_reaches_here_p):  Stop once expr_bb is reached.\n+\n+\t* gcse.c (try_replace_reg): Do not return false positives.\n+\n 2002-07-18  Alan Modra  <amodra@bigpond.net.au>\n \n \t* prefix.c: (update_path): Strip \"..\" components when prior dir"}, {"sha": "bb362118b2137b30a3be8e62b07437fc853f87f8", "filename": "gcc/gcse.c", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f305679f4e9bc6f1fcf3b97dfaaf82de51be152c/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f305679f4e9bc6f1fcf3b97dfaaf82de51be152c/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=f305679f4e9bc6f1fcf3b97dfaaf82de51be152c", "patch": "@@ -3971,24 +3971,27 @@ try_replace_reg (from, to, insn)\n   int success = 0;\n   rtx set = single_set (insn);\n \n-  success = validate_replace_src (from, to, insn);\n+  if (reg_mentioned_p (from, PATTERN (insn)))\n+    {\n+      success = validate_replace_src (from, to, insn);\n+    }\n \n-  /* If above failed and this is a single set, try to simplify the source of\n-     the set given our substitution.  We could perhaps try this for multiple\n-     SETs, but it probably won't buy us anything.  */\n-  if (!success && set != 0)\n+  if (!success && set && reg_mentioned_p (from, SET_SRC (set)))\n     {\n+      /* If above failed and this is a single set, try to simplify the source of\n+\t the set given our substitution.  We could perhaps try this for multiple\n+\t SETs, but it probably won't buy us anything.  */\n       src = simplify_replace_rtx (SET_SRC (set), from, to);\n \n       if (!rtx_equal_p (src, SET_SRC (set))\n \t  && validate_change (insn, &SET_SRC (set), src, 0))\n \tsuccess = 1;\n-    }\n \n-  /* If we've failed to do replacement, have a single SET, and don't already\n-     have a note, add a REG_EQUAL note to not lose information.  */\n-  if (!success && note == 0 && set != 0)\n-    note = set_unique_reg_note (insn, REG_EQUAL, copy_rtx (src));\n+      /* If we've failed to do replacement, have a single SET, and don't already\n+\t have a note, add a REG_EQUAL note to not lose information.  */\n+      if (!success && note == 0 && set != 0)\n+\tnote = set_unique_reg_note (insn, REG_EQUAL, copy_rtx (src));\n+    }\n \n   /* If there is already a NOTE, update the expression in it with our\n      replacement.  */\n@@ -5879,6 +5882,8 @@ hoist_expr_reaches_here_p (expr_bb, expr_index, bb, visited)\n \n       if (pred->src == ENTRY_BLOCK_PTR)\n \tbreak;\n+      else if (pred_bb == expr_bb)\n+\tcontinue;\n       else if (visited[pred_bb->index])\n \tcontinue;\n "}]}