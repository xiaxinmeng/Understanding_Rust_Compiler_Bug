{"sha": "c64ef5cd92c2e340caabc95f4a28c9a125e8b5b8", "node_id": "C_kwDOANBUbNoAKGM2NGVmNWNkOTJjMmUzNDBjYWFiYzk1ZjRhMjhjOWExMjVlOGI1Yjg", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-08-08T12:04:43Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-08-09T08:14:30Z"}, "message": "Remove --param max-fsm-thread-length\n\nThis removes max-fsm-thread-length which is obsoleted by\nmax-jump-thread-paths.\n\n\t* doc/invoke.texi (max-fsm-thread-length): Remove.\n\t* params.opt (max-fsm-thread-length): Likewise.\n\t* tree-ssa-threadbackward.cc\n\t(back_threader_profitability::profitable_path_p): Do not\n\tcheck max-fsm-thread-length.", "tree": {"sha": "33705b941bf0ea1353788a0687f02c3d98b8d7cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33705b941bf0ea1353788a0687f02c3d98b8d7cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c64ef5cd92c2e340caabc95f4a28c9a125e8b5b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c64ef5cd92c2e340caabc95f4a28c9a125e8b5b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c64ef5cd92c2e340caabc95f4a28c9a125e8b5b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c64ef5cd92c2e340caabc95f4a28c9a125e8b5b8/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "409978d58dafa689c5b3f85013e2786526160f2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/409978d58dafa689c5b3f85013e2786526160f2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/409978d58dafa689c5b3f85013e2786526160f2c"}], "stats": {"total": 16, "additions": 0, "deletions": 16}, "files": [{"sha": "58e422041e4bb8de5afaec104932a1a9f100c645", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c64ef5cd92c2e340caabc95f4a28c9a125e8b5b8/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c64ef5cd92c2e340caabc95f4a28c9a125e8b5b8/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=c64ef5cd92c2e340caabc95f4a28c9a125e8b5b8", "patch": "@@ -15262,9 +15262,6 @@ Emit instrumentation calls to __tsan_func_entry() and __tsan_func_exit().\n Maximum number of instructions to copy when duplicating blocks on a\n finite state automaton jump thread path.\n \n-@item max-fsm-thread-length\n-Maximum number of basic blocks on a jump thread path.\n-\n @item threader-debug\n threader-debug=[none|all] Enables verbose dumping of the threader solver.\n "}, {"sha": "201b5c9f56f5cc7a13cac35366f424c88cf08b9e", "filename": "gcc/params.opt", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c64ef5cd92c2e340caabc95f4a28c9a125e8b5b8/gcc%2Fparams.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c64ef5cd92c2e340caabc95f4a28c9a125e8b5b8/gcc%2Fparams.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.opt?ref=c64ef5cd92c2e340caabc95f4a28c9a125e8b5b8", "patch": "@@ -498,10 +498,6 @@ The maximum number of nested indirect inlining performed by early inliner.\n Common Joined UInteger Var(param_max_fields_for_field_sensitive) Param\n Maximum number of fields in a structure before pointer analysis treats the structure as a single variable.\n \n--param=max-fsm-thread-length=\n-Common Joined UInteger Var(param_max_fsm_thread_length) Init(10) IntegerRange(1, 999999) Param Optimization\n-Maximum number of basic blocks on a jump thread path.\n-\n -param=max-fsm-thread-path-insns=\n Common Joined UInteger Var(param_max_fsm_thread_path_insns) Init(100) IntegerRange(1, 999999) Param Optimization\n Maximum number of instructions to copy when duplicating blocks on a finite state automaton jump thread path."}, {"sha": "30047c654fb41d1b2fbec559c77832829aa2f9b3", "filename": "gcc/tree-ssa-threadbackward.cc", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c64ef5cd92c2e340caabc95f4a28c9a125e8b5b8/gcc%2Ftree-ssa-threadbackward.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c64ef5cd92c2e340caabc95f4a28c9a125e8b5b8/gcc%2Ftree-ssa-threadbackward.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadbackward.cc?ref=c64ef5cd92c2e340caabc95f4a28c9a125e8b5b8", "patch": "@@ -569,15 +569,6 @@ back_threader_profitability::profitable_path_p (const vec<basic_block> &m_path,\n   if (m_path.length () <= 1)\n       return false;\n \n-  if (m_path.length () > (unsigned) param_max_fsm_thread_length)\n-    {\n-      if (dump_file && (dump_flags & TDF_DETAILS))\n-\tfprintf (dump_file, \"  FAIL: Jump-thread path not considered: \"\n-\t\t \"the number of basic blocks on the path \"\n-\t\t \"exceeds PARAM_MAX_FSM_THREAD_LENGTH.\\n\");\n-      return false;\n-    }\n-\n   int n_insns = 0;\n   gimple_stmt_iterator gsi;\n   loop_p loop = m_path[0]->loop_father;"}]}