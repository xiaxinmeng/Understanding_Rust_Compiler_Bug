{"sha": "f4de8ba686f8a4c7cc2d7ff9fa53315e826560c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRkZThiYTY4NmY4YTRjN2NjMmQ3ZmY5ZmE1MzMxNWU4MjY1NjBjNA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2007-04-12T12:47:05Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-04-12T12:47:05Z"}, "message": "config.gcc (*-*-vxworks*): Don't add to tm_files in this stanza.\n\ngcc/\n\t* config.gcc (*-*-vxworks*): Don't add to tm_files in this stanza.\n\t(arm-wrs-vxworks, mips-wrs-vxworks, powerpc-wrs-vxworks)\n\t(powerpc-wrs-vxworksae): Use ${tm_file}.\n\t(i[4567]86-wrs-vxworks, i[4567]86-wrs-vxworksae): Add svr4.h\n\tafter elfos.h.  Remove i386/sysv4.h and add i386/vx-common.h.\n\t* config/i386/vx-common.h: New file.\n\nFrom-SVN: r123744", "tree": {"sha": "6a21239d8069829e6a2886f10c25bfbdbe473955", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a21239d8069829e6a2886f10c25bfbdbe473955"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4de8ba686f8a4c7cc2d7ff9fa53315e826560c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4de8ba686f8a4c7cc2d7ff9fa53315e826560c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4de8ba686f8a4c7cc2d7ff9fa53315e826560c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4de8ba686f8a4c7cc2d7ff9fa53315e826560c4/comments", "author": null, "committer": null, "parents": [{"sha": "b83b15dae3196e4c7aff549b27b8de2362d0e7c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b83b15dae3196e4c7aff549b27b8de2362d0e7c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b83b15dae3196e4c7aff549b27b8de2362d0e7c8"}], "stats": {"total": 56, "additions": 45, "deletions": 11}, "files": [{"sha": "1a72898b90d145630e5ec53db149067e53e2f0b2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4de8ba686f8a4c7cc2d7ff9fa53315e826560c4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4de8ba686f8a4c7cc2d7ff9fa53315e826560c4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f4de8ba686f8a4c7cc2d7ff9fa53315e826560c4", "patch": "@@ -1,3 +1,12 @@\n+2007-04-12  Richard Sandiford  <richard@codesourcery.com>\n+\n+\t* config.gcc (*-*-vxworks*): Don't add to tm_files in this stanza.\n+\t(arm-wrs-vxworks, mips-wrs-vxworks, powerpc-wrs-vxworks)\n+\t(powerpc-wrs-vxworksae): Use ${tm_file}.\n+\t(i[4567]86-wrs-vxworks, i[4567]86-wrs-vxworksae): Add svr4.h\n+\tafter elfos.h.  Remove i386/sysv4.h and add i386/vx-common.h.\n+\t* config/i386/vx-common.h: New file.\n+\n 2007-04-12  Richard Sandiford  <richard@codesourcery.com>\n \n \t* config/vxworks.h (VXWORKS_STARTFILE_SPEC): Use -l:crt0.o instead"}, {"sha": "36e369fd51dfc87eb11fc52c12f1de8389cdfd15", "filename": "gcc/config.gcc", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4de8ba686f8a4c7cc2d7ff9fa53315e826560c4/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4de8ba686f8a4c7cc2d7ff9fa53315e826560c4/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=f4de8ba686f8a4c7cc2d7ff9fa53315e826560c4", "patch": "@@ -569,7 +569,6 @@ case ${target} in\n   ;;\n *-*-vxworks*)\n   tmake_file=t-vxworks\n-  tm_file=\"${tm_file} elfos.h svr4.h\"\n   xm_defines=POSIX\n   extra_options=\"${extra_options} vxworks.opt\"\n   extra_objs=vxworks.o\n@@ -694,7 +693,7 @@ arm-semi-aof | armel-semi-aof)\n \ttmake_file=\"arm/t-arm arm/t-semi\"\n \t;;\n arm-wrs-vxworks)\n-\ttm_file=\"dbxelf.h elfos.h svr4.h vxworks.h arm/elf.h arm/aout.h arm/arm.h arm/vxworks.h\"\n+\ttm_file=\"dbxelf.h elfos.h svr4.h vxworks.h arm/elf.h arm/aout.h ${tm_file} arm/vxworks.h\"\n \ttmake_file=\"${tmake_file} arm/t-arm arm/t-vxworks\"\n \t;;\n arm*-*-freebsd*|strongarm*-*-freebsd*)\n@@ -1317,14 +1316,14 @@ i[34567]86-*-sysv4*)\t\t# Intel 80386's running system V.4\n \tuse_fixproto=yes\n \t;;\n i[4567]86-wrs-vxworks|i[4567]86-wrs-vxworksae)\n-\ttm_file=\"${tm_file} i386/sysv4.h i386/unix.h i386/att.h elfos.h vx-common.h\"\n+\ttm_file=\"${tm_file} i386/unix.h i386/att.h elfos.h svr4.h vx-common.h\"\n \tcase ${target} in\n \t  *-vxworksae*)\n-\t    tm_file=\"${tm_file} vxworksae.h i386/vxworksae.h\"\n+\t    tm_file=\"${tm_file} vxworksae.h i386/vx-common.h i386/vxworksae.h\"\n \t    tmake_file=\"${tmake_file} i386/t-vxworks i386/t-vxworksae\"\n \t    ;;\n \t  *)\n-\t    tm_file=\"${tm_file} vxworks.h i386/vxworks.h\"\n+\t    tm_file=\"${tm_file} vxworks.h i386/vx-common.h i386/vxworks.h\"\n \t    tmake_file=\"${tmake_file} i386/t-vxworks\"\n \t    ;;\n \tesac\n@@ -1706,9 +1705,7 @@ mips*-*-rtems*)\n \ttmake_file=\"mips/t-elf t-rtems mips/t-rtems\"\n \t;;\n mips-wrs-vxworks)\n-\t# We want vxworks.h after mips/elf.h, which unfortunately means we\n-\t# have to redo the tm_file list from scratch.\n-\ttm_file=\"elfos.h mips/mips.h svr4.h mips/elf.h vx-common.h vxworks.h mips/vxworks.h\"\n+\ttm_file=\"elfos.h ${tm_file} svr4.h mips/elf.h vx-common.h vxworks.h mips/vxworks.h\"\n \ttmake_file=\"${tmake_file} mips/t-vxworks\"\n \t;;\n mips-wrs-windiss)\t# Instruction-level simulator for VxWorks.\n@@ -1909,9 +1906,7 @@ powerpc-*-gnu*)\n \tfi\n \t;;\n powerpc-wrs-vxworks|powerpc-wrs-vxworksae)\n-\t# We want vxworks.h after rs6000/sysv4.h, which unfortunately\n-\t# means we have to redo the tm_file list from scratch.\n-\ttm_file=\"rs6000/rs6000.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h\"\n+\ttm_file=\"${tm_file} elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h\"\n \ttmake_file=\"${tmake_file} rs6000/t-fprules rs6000/t-fprules-fpbit rs6000/t-ppccomm rs6000/t-vxworks\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \textra_headers=ppc-asm.h"}, {"sha": "7c94c7daadfe2b075f7f70182bae01fcd7c8d589", "filename": "gcc/config/i386/vx-common.h", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4de8ba686f8a4c7cc2d7ff9fa53315e826560c4/gcc%2Fconfig%2Fi386%2Fvx-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4de8ba686f8a4c7cc2d7ff9fa53315e826560c4/gcc%2Fconfig%2Fi386%2Fvx-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fvx-common.h?ref=f4de8ba686f8a4c7cc2d7ff9fa53315e826560c4", "patch": "@@ -0,0 +1,30 @@\n+/* IA32 VxWorks and VxWorks AE target definitions.\n+   Copyright (C) 2007 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n+Boston, MA 02110-1301, USA.  */\n+\n+#define ASM_OUTPUT_ALIGNED_BSS(FILE, DECL, NAME, SIZE, ALIGN) \\\n+  asm_output_aligned_bss (FILE, DECL, NAME, SIZE, ALIGN)\n+\n+/* The svr4 ABI for the i386 says that records and unions are returned\n+   in memory.  */\n+\n+#undef RETURN_IN_MEMORY\n+#define RETURN_IN_MEMORY(TYPE) \\\n+  (TYPE_MODE (TYPE) == BLKmode \\\n+   || (VECTOR_MODE_P (TYPE_MODE (TYPE)) && int_size_in_bytes (TYPE) == 8))"}]}