{"sha": "1e66ce7766e82a2c3d2488cc8a4a6d134b3966eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU2NmNlNzc2NmU4MmEyYzNkMjQ4OGNjOGE0YTZkMTM0YjM5NjZlYg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-11-15T19:15:05Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-11-15T19:15:05Z"}, "message": "(print_node{,_brief}, case INTEGER_CST): Use HOST_WIDE_INT_PRINT_*.\n\nFrom-SVN: r13176", "tree": {"sha": "f465d0709dea6fb68527a7cf407dc01cc577ef05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f465d0709dea6fb68527a7cf407dc01cc577ef05"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e66ce7766e82a2c3d2488cc8a4a6d134b3966eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e66ce7766e82a2c3d2488cc8a4a6d134b3966eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e66ce7766e82a2c3d2488cc8a4a6d134b3966eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e66ce7766e82a2c3d2488cc8a4a6d134b3966eb/comments", "author": null, "committer": null, "parents": [{"sha": "734de8c84ef61af6906de18550ba126fa078a977", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/734de8c84ef61af6906de18550ba126fa078a977", "html_url": "https://github.com/Rust-GCC/gccrs/commit/734de8c84ef61af6906de18550ba126fa078a977"}], "stats": {"total": 71, "additions": 16, "deletions": 55}, "files": [{"sha": "d7b9fddc3656021f41732ed4283a0cd11ef3a7d7", "filename": "gcc/print-tree.c", "status": "modified", "additions": 16, "deletions": 55, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e66ce7766e82a2c3d2488cc8a4a6d134b3966eb/gcc%2Fprint-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e66ce7766e82a2c3d2488cc8a4a6d134b3966eb/gcc%2Fprint-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-tree.c?ref=1e66ce7766e82a2c3d2488cc8a4a6d134b3966eb", "patch": "@@ -1,5 +1,5 @@\n /* Prints out tree in human readable form - GNU C-compiler\n-   Copyright (C) 1990, 1991, 1993, 1994, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1990, 91, 93, 94, 95, 1996 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -109,38 +109,18 @@ print_node_brief (file, prefix, node, indent)\n       if (TREE_CONSTANT_OVERFLOW (node))\n \tfprintf (file, \" overflow\");\n \n+      fprintf (file, \" \");\n       if (TREE_INT_CST_HIGH (node) == 0)\n-\tfprintf (file,\n-#if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_INT\n-\t\t \" %1u\",\n-#else\n-\t\t \" %1lu\",\n-#endif\n-\t\t TREE_INT_CST_LOW (node));\n+\tfprintf (file, HOST_WIDE_INT_PRINT_UNSIGNED, TREE_INT_CST_LOW (node));\n       else if (TREE_INT_CST_HIGH (node) == -1\n \t       && TREE_INT_CST_LOW (node) != 0)\n-\tfprintf (file,\n-#if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_INT\n-\t\t \" -%1u\",\n-#else\n-\t\t \" -%1lu\",\n-#endif\n+\t{\n+\t  fprintf (file, \"-\");\n+\t  fprintf (file, HOST_WIDE_INT_PRINT_UNSIGNED,\n \t\t -TREE_INT_CST_LOW (node));\n+\t}\n       else\n-\tfprintf (file,\n-#if HOST_BITS_PER_WIDE_INT == 64\n-#if HOST_BITS_PER_WIDE_INT != HOST_BITS_PER_INT\n-\t\t \" 0x%lx%016lx\",\n-#else\n-\t\t \" 0x%x%016x\",\n-#endif\n-#else\n-#if HOST_BITS_PER_WIDE_INT != HOST_BITS_PER_INT\n-\t\t \" 0x%lx%08lx\",\n-#else\n-\t\t \" 0x%x%08x\",\n-#endif\n-#endif\n+\tfprintf (file, HOST_WIDE_INT_PRINT_DOUBLE_HEX,\n \t\t TREE_INT_CST_HIGH (node), TREE_INT_CST_LOW (node));\n     }\n   if (TREE_CODE (node) == REAL_CST)\n@@ -622,38 +602,19 @@ print_node (file, prefix, node, indent)\n \t  if (TREE_CONSTANT_OVERFLOW (node))\n \t    fprintf (file, \" overflow\");\n \n+\t  fprintf (file, \" \");\n \t  if (TREE_INT_CST_HIGH (node) == 0)\n-\t    fprintf (file,\n-#if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_INT\n-\t\t     \" %1u\",\n-#else\n-\t\t     \" %1lu\",\n-#endif\n+\t    fprintf (file, HOST_WIDE_INT_PRINT_UNSIGNED,\n \t\t     TREE_INT_CST_LOW (node));\n \t  else if (TREE_INT_CST_HIGH (node) == -1\n \t\t   && TREE_INT_CST_LOW (node) != 0)\n-\t    fprintf (file,\n-#if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_INT\n-\t\t     \" -%1u\",\n-#else\n-\t\t     \" -%1lu\",\n-#endif\n-\t\t     -TREE_INT_CST_LOW (node));\n+\t    {\n+\t      fprintf (file, \"-\");\n+\t      fprintf (file, HOST_WIDE_INT_PRINT_UNSIGNED,\n+\t\t       -TREE_INT_CST_LOW (node));\n+\t    }\n \t  else\n-\t    fprintf (file,\n-#if HOST_BITS_PER_WIDE_INT == 64\n-#if HOST_BITS_PER_WIDE_INT != HOST_BITS_PER_INT\n-\t\t     \" 0x%lx%016lx\",\n-#else\n-\t\t     \" 0x%x%016x\",\n-#endif\n-#else\n-#if HOST_BITS_PER_WIDE_INT != HOST_BITS_PER_INT\n-\t\t     \" 0x%lx%08lx\",\n-#else\n-\t\t     \" 0x%x%08x\",\n-#endif\n-#endif\n+\t    fprintf (file, HOST_WIDE_INT_PRINT_DOUBLE_HEX,\n \t\t     TREE_INT_CST_HIGH (node), TREE_INT_CST_LOW (node));\n \t  break;\n "}]}