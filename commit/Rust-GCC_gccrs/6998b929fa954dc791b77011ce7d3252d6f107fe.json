{"sha": "6998b929fa954dc791b77011ce7d3252d6f107fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njk5OGI5MjlmYTk1NGRjNzkxYjc3MDExY2U3ZDMyNTJkNmYxMDdmZQ==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2015-07-21T19:54:23Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2015-07-21T19:54:23Z"}, "message": "re PR ipa/66424 (wrong code at -O2 and -O3 on x86_64-linux-gnu in 32-bit mode)\n\n2015-07-21  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR ipa/66424.\n\t* lra-remat.c (operand_to_remat): Prevent using insns with input\n\tsubregs processed separately by IRA.\n\n2015-07-21  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR ipa/66424.\n\t* gcc.target/i386/pr66424.c: New.\n\nFrom-SVN: r226053", "tree": {"sha": "1ce16f28ab5396c2dcefab8ca2acdf55f9f9146b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ce16f28ab5396c2dcefab8ca2acdf55f9f9146b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6998b929fa954dc791b77011ce7d3252d6f107fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6998b929fa954dc791b77011ce7d3252d6f107fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6998b929fa954dc791b77011ce7d3252d6f107fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6998b929fa954dc791b77011ce7d3252d6f107fe/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f9ffade09c3cc13eb1a199a24517b9b1909c6e80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9ffade09c3cc13eb1a199a24517b9b1909c6e80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9ffade09c3cc13eb1a199a24517b9b1909c6e80"}], "stats": {"total": 72, "additions": 72, "deletions": 0}, "files": [{"sha": "63726155ccb5ec8936477b21ab440502fb877a44", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6998b929fa954dc791b77011ce7d3252d6f107fe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6998b929fa954dc791b77011ce7d3252d6f107fe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6998b929fa954dc791b77011ce7d3252d6f107fe", "patch": "@@ -1,3 +1,9 @@\n+2015-07-21  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR ipa/66424.\n+\t* lra-remat.c (operand_to_remat): Prevent using insns with input\n+\tsubregs processed separately by IRA.\n+\n 2015-07-21  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* ssa-iterators.h (has_zero_uses, has_single_use): Implement as"}, {"sha": "66532b8f464f033a8911ffc949b1200c98f5fe2a", "filename": "gcc/lra-remat.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6998b929fa954dc791b77011ce7d3252d6f107fe/gcc%2Flra-remat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6998b929fa954dc791b77011ce7d3252d6f107fe/gcc%2Flra-remat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-remat.c?ref=6998b929fa954dc791b77011ce7d3252d6f107fe", "patch": "@@ -417,6 +417,16 @@ operand_to_remat (rtx_insn *insn)\n \t  return -1;\n \tfound_reg = reg;\n       }\n+    /* IRA calculates conflicts separately for subregs of two words\n+       pseudo.  Even if the pseudo lives, e.g. one its subreg can be\n+       used lately, another subreg hard register can be already used\n+       for something else.  In such case, it is not safe to\n+       rematerialize the insn.  */\n+    else if (reg->type == OP_IN && reg->subreg_p\n+\t     && reg->regno >= FIRST_PSEUDO_REGISTER\n+\t     && (GET_MODE_SIZE (PSEUDO_REGNO_MODE (reg->regno))\n+\t\t == 2 * UNITS_PER_WORD))\n+      return -1;\n   if (found_reg == NULL)\n     return -1;\n   if (found_reg->regno < FIRST_PSEUDO_REGISTER)"}, {"sha": "16d1caf0638469a879172097ed9ad0a1381f6d75", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6998b929fa954dc791b77011ce7d3252d6f107fe/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6998b929fa954dc791b77011ce7d3252d6f107fe/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6998b929fa954dc791b77011ce7d3252d6f107fe", "patch": "@@ -1,3 +1,8 @@\n+2015-07-21  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR ipa/66424.\n+\t* gcc.target/i386/pr66424.c: New.\n+\n 2015-07-21  Alex Velenko  <Alex.Velenko@arm.com>\n \n \t* gcc.target/arm/thumb-bitfld1.c (foo): Add explicit return type."}, {"sha": "f5f5e1e8b5c82e02b837335a121b92c3b63bf443", "filename": "gcc/testsuite/gcc.target/i386/pr66424.c", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6998b929fa954dc791b77011ce7d3252d6f107fe/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr66424.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6998b929fa954dc791b77011ce7d3252d6f107fe/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr66424.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr66424.c?ref=6998b929fa954dc791b77011ce7d3252d6f107fe", "patch": "@@ -0,0 +1,51 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-require-effective-target ia32 } */\n+int a, b, c, d, e[2], f, l, m, n, o;\n+long long g = 1, j;\n+static unsigned int h;\n+static int i, k;\n+\n+void\n+fn1 (long long p)\n+{\n+  int q = p;\n+  f = 1 ^ e[f ^ (q & 1)];\n+}\n+\n+static void\n+fn2 (long long p)\n+{\n+  f = 1 ^ e[(f ^ 1) & 1];\n+  fn1 (p >> 1 & 1);\n+  fn1 (p >> 32 & 1);\n+}\n+\n+void\n+fn3 (int p)\n+{\n+  g |= j = p;\n+}\n+\n+int\n+main ()\n+{\n+  e[0] = 1;\n+  char p = l;\n+  h = --g;\n+  i = o = c;\n+  m = d ? 1 / d : 0;\n+  fn3 (l || 0);\n+  b = a;\n+  n = j++;\n+  k--;\n+  fn2 (g);\n+  fn2 (h);\n+  fn2 (i);\n+\n+  if (k + f)\n+    __builtin_abort ();\n+\n+  return 0;\n+}\n+"}]}