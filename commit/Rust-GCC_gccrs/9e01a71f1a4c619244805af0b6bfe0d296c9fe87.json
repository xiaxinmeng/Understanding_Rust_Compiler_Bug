{"sha": "9e01a71f1a4c619244805af0b6bfe0d296c9fe87", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWUwMWE3MWYxYTRjNjE5MjQ0ODA1YWYwYjZiZmUwZDI5NmM5ZmU4Nw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-02-21T14:01:29Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-02-21T14:01:29Z"}, "message": "re PR c++/60250 ([c++1y] ICE using lambda for array size)\n\n\tPR c++/60250\n\t* parser.c (cp_parser_direct_declarator): Don't wrap a\n\ttype-dependent expression in a NOP_EXPR.\n\nFrom-SVN: r207996", "tree": {"sha": "435bf39138b711084e8bdef5403629ac546201e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/435bf39138b711084e8bdef5403629ac546201e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e01a71f1a4c619244805af0b6bfe0d296c9fe87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e01a71f1a4c619244805af0b6bfe0d296c9fe87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e01a71f1a4c619244805af0b6bfe0d296c9fe87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e01a71f1a4c619244805af0b6bfe0d296c9fe87/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e429bc3555e7c3cbbc3b03ee0dbf78b3b9a4c198", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e429bc3555e7c3cbbc3b03ee0dbf78b3b9a4c198", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e429bc3555e7c3cbbc3b03ee0dbf78b3b9a4c198"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "9f041441aa3b543c96589d9889b145e8c47ca3d6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e01a71f1a4c619244805af0b6bfe0d296c9fe87/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e01a71f1a4c619244805af0b6bfe0d296c9fe87/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9e01a71f1a4c619244805af0b6bfe0d296c9fe87", "patch": "@@ -1,5 +1,9 @@\n 2014-02-21  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/60250\n+\t* parser.c (cp_parser_direct_declarator): Don't wrap a\n+\ttype-dependent expression in a NOP_EXPR.\n+\n \tPR c++/60251\n \t* lambda.c (is_normal_capture_proxy): Handle VLA capture.\n "}, {"sha": "6f19ae29f7ee4cd3bde599c4f41727837f1c9c63", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e01a71f1a4c619244805af0b6bfe0d296c9fe87/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e01a71f1a4c619244805af0b6bfe0d296c9fe87/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=9e01a71f1a4c619244805af0b6bfe0d296c9fe87", "patch": "@@ -17233,7 +17233,8 @@ cp_parser_direct_declarator (cp_parser* parser,\n \t\t\t\t   \"array bound is not an integer constant\");\n \t\t  bounds = error_mark_node;\n \t\t}\n-\t      else if (processing_template_decl)\n+\t      else if (processing_template_decl\n+\t\t       && !type_dependent_expression_p (bounds))\n \t\t{\n \t\t  /* Remember this wasn't a constant-expression.  */\n \t\t  bounds = build_nop (TREE_TYPE (bounds), bounds);"}, {"sha": "df47f26b048bdd5da8f5ff44af6d641154854714", "filename": "gcc/testsuite/g++.dg/cpp1y/vla12.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e01a71f1a4c619244805af0b6bfe0d296c9fe87/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvla12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e01a71f1a4c619244805af0b6bfe0d296c9fe87/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvla12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvla12.C?ref=9e01a71f1a4c619244805af0b6bfe0d296c9fe87", "patch": "@@ -0,0 +1,7 @@\n+// PR c++/60250\n+// { dg-options \"-std=c++1y -pedantic-errors\" }\n+\n+template<typename> void foo()\n+{\n+  typedef int T[ ([](){ return 1; }()) ]; // { dg-error \"runtime bound\" }\n+}"}]}