{"sha": "576d0b547dce3fbe4072cc41101b11faa7f47176", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc2ZDBiNTQ3ZGNlM2ZiZTQwNzJjYzQxMTAxYjExZmFhN2Y0NzE3Ng==", "commit": {"author": {"name": "Michael Hayes", "email": "mhayes@redhat.com", "date": "2001-01-05T02:51:18Z"}, "committer": {"name": "Michael Hayes", "email": "m.hayes@gcc.gnu.org", "date": "2001-01-05T02:51:18Z"}, "message": "loop.c (prescan_loop): Set loop_info->has_nonconst_call.\n\n\t* loop.c (prescan_loop): Set loop_info->has_nonconst_call.\n\tUse it instead of loop_info->has_call for scanning loop mems.\n\t(check_dbra_loop): Replace loop_info->has_call test with\n\tloop_info->has_nonconst_call.\n\nFrom-SVN: r38699", "tree": {"sha": "0571be8f19ff77b52169867d25d4e02bd819ddf5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0571be8f19ff77b52169867d25d4e02bd819ddf5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/576d0b547dce3fbe4072cc41101b11faa7f47176", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/576d0b547dce3fbe4072cc41101b11faa7f47176", "html_url": "https://github.com/Rust-GCC/gccrs/commit/576d0b547dce3fbe4072cc41101b11faa7f47176", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/576d0b547dce3fbe4072cc41101b11faa7f47176/comments", "author": null, "committer": null, "parents": [{"sha": "616af7ee28259c26e26846775899f38d0ae79fdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/616af7ee28259c26e26846775899f38d0ae79fdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/616af7ee28259c26e26846775899f38d0ae79fdf"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "ebb569bcf9c0813cc659dd2e3e2cb3ac1a7f00af", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/576d0b547dce3fbe4072cc41101b11faa7f47176/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/576d0b547dce3fbe4072cc41101b11faa7f47176/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=576d0b547dce3fbe4072cc41101b11faa7f47176", "patch": "@@ -1,3 +1,10 @@\n+2001-01-05  Michael Hayes  <mhayes@redhat.com>\n+\n+\t* loop.c (prescan_loop): Set loop_info->has_nonconst_call.\n+\tUse it instead of loop_info->has_call for scanning loop mems.\n+\t(check_dbra_loop): Replace loop_info->has_call test with\n+\tloop_info->has_nonconst_call.\n+\n 2000-01-04  Matthew Hiller  <hiller@redhat.com>\n \n \t* config/sh/sh.h (EPILOGUE_USES): Recognize fpscr as epilogue-used"}, {"sha": "39e8920dc11020df49e18ab02555d763dc5bd9c4", "filename": "gcc/loop.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/576d0b547dce3fbe4072cc41101b11faa7f47176/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/576d0b547dce3fbe4072cc41101b11faa7f47176/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=576d0b547dce3fbe4072cc41101b11faa7f47176", "patch": "@@ -2292,7 +2292,7 @@ count_nonfixed_reads (loop, x)\n }\n \f\n /* Scan a loop setting the elements `cont', `vtop', `loops_enclosed',\n-   `has_call', `has_volatile', `has_tablejump',\n+   `has_call', `has_nonconst_call', `has_volatile', `has_tablejump',\n    `unknown_address_altered', `unknown_constant_address_altered', and\n    `num_mem_sets' in LOOP.  Also, fill in the array `mems' and the\n    list `store_mems' in LOOP.  */\n@@ -2315,6 +2315,7 @@ prescan_loop (loop)\n   loop_info->has_indirect_jump = indirect_jump_in_function;\n   loop_info->pre_header_has_call = 0;\n   loop_info->has_call = 0;\n+  loop_info->has_nonconst_call = 0;\n   loop_info->has_volatile = 0;\n   loop_info->has_tablejump = 0;\n   loop_info->has_multiple_exit_targets = 0;\n@@ -2357,7 +2358,10 @@ prescan_loop (loop)\n       else if (GET_CODE (insn) == CALL_INSN)\n \t{\n \t  if (! CONST_CALL_P (insn))\n-\t    loop_info->unknown_address_altered = 1;\n+\t    {\n+\t      loop_info->unknown_address_altered = 1;\n+\t      loop_info->has_nonconst_call = 1;\n+\t    }\n \t  loop_info->has_call = 1;\n \t}\n       else if (GET_CODE (insn) == INSN || GET_CODE (insn) == JUMP_INSN)\n@@ -2424,7 +2428,7 @@ prescan_loop (loop)\n   /* Now, rescan the loop, setting up the LOOP_MEMS array.  */\n   if (/* An exception thrown by a called function might land us\n \t anywhere.  */\n-      ! loop_info->has_call\n+      ! loop_info->has_nonconst_call\n       /* We don't want loads for MEMs moved to a location before the\n \t one at which their stack memory becomes allocated.  (Note\n \t that this is not a problem for malloc, etc., since those\n@@ -7462,7 +7466,7 @@ check_dbra_loop (loop, insn_count)\n \t about all these things.  */\n \n       if ((num_nonfixed_reads <= 1\n-\t   && ! loop_info->has_call\n+\t   && ! loop_info->has_nonconst_call\n \t   && ! loop_info->has_volatile\n \t   && reversible_mem_store\n \t   && (bl->giv_count + bl->biv_count + loop_info->num_mem_sets"}]}