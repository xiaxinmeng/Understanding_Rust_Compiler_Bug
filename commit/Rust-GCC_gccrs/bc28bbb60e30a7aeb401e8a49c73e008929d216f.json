{"sha": "bc28bbb60e30a7aeb401e8a49c73e008929d216f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmMyOGJiYjYwZTMwYTdhZWI0MDFlOGE0OWM3M2UwMDg5MjlkMjE2Zg==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.vnet.ibm.com", "date": "2016-11-30T18:43:17Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2016-11-30T18:43:17Z"}, "message": "re PR target/78602 (PowerPC vec-extract-v2df.c can fail if -mcpu=power9 -O0)\n\n2016-11-30  Michael Meissner  <meissner@linux.vnet.ibm.com>\n\n\tPR target/78602\n\t* config/rs6000/rs6000.c (rs6000_expand_vector_extract): If the\n\telement is not a constant or in a register, force it to a\n\tregister.\n\n\tPR target/78560\n\t* config/rs6000/rs6000.c (rs6000_expand_vector_set): Force value\n\tthat will be set to a vector element to be in a register.\n\t* config/rs6000/vsx.md (vsx_set_<mode>_p9): Fix thinko that used\n\tthe wrong multiplier to convert the element number to a byte\n\toffset.\n\nFrom-SVN: r243044", "tree": {"sha": "570b8b2ab39d45e2089525d8d8300395cdae6b10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/570b8b2ab39d45e2089525d8d8300395cdae6b10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc28bbb60e30a7aeb401e8a49c73e008929d216f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc28bbb60e30a7aeb401e8a49c73e008929d216f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc28bbb60e30a7aeb401e8a49c73e008929d216f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc28bbb60e30a7aeb401e8a49c73e008929d216f/comments", "author": null, "committer": null, "parents": [{"sha": "630e3c3ad65617d880a5da072c0ef9a6b02a1f7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/630e3c3ad65617d880a5da072c0ef9a6b02a1f7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/630e3c3ad65617d880a5da072c0ef9a6b02a1f7a"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "7a46cd22253b36cc54bef90fa85f7b1bcba450b1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc28bbb60e30a7aeb401e8a49c73e008929d216f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc28bbb60e30a7aeb401e8a49c73e008929d216f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bc28bbb60e30a7aeb401e8a49c73e008929d216f", "patch": "@@ -1,3 +1,17 @@\n+2016-11-30  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\tPR target/78602\n+\t* config/rs6000/rs6000.c (rs6000_expand_vector_extract): If the\n+\telement is not a constant or in a register, force it to a\n+\tregister.\n+\n+\tPR target/78560\n+\t* config/rs6000/rs6000.c (rs6000_expand_vector_set): Force value\n+\tthat will be set to a vector element to be in a register.\n+\t* config/rs6000/vsx.md (vsx_set_<mode>_p9): Fix thinko that used\n+\tthe wrong multiplier to convert the element number to a byte\n+\toffset.\n+\n 2016-11-30  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR tree-optimization/77856"}, {"sha": "9fe98b7dd6ab2ec93ae488ec95c97d0d7a8bcd5a", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc28bbb60e30a7aeb401e8a49c73e008929d216f/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc28bbb60e30a7aeb401e8a49c73e008929d216f/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=bc28bbb60e30a7aeb401e8a49c73e008929d216f", "patch": "@@ -7105,6 +7105,8 @@ rs6000_expand_vector_set (rtx target, rtx val, int elt)\n   int width = GET_MODE_SIZE (inner_mode);\n   int i;\n \n+  val = force_reg (GET_MODE (val), val);\n+\n   if (VECTOR_MEM_VSX_P (mode))\n     {\n       rtx insn = NULL_RTX;\n@@ -7257,6 +7259,8 @@ rs6000_expand_vector_extract (rtx target, rtx vec, rtx elt)\n \t  convert_move (tmp, elt, 0);\n \t  elt = tmp;\n \t}\n+      else if (!REG_P (elt))\n+\telt = force_reg (DImode, elt);\n \n       switch (mode)\n \t{"}, {"sha": "01d275d168e5a37e7438a9730260125b67ccaeda", "filename": "gcc/config/rs6000/vsx.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc28bbb60e30a7aeb401e8a49c73e008929d216f/gcc%2Fconfig%2Frs6000%2Fvsx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc28bbb60e30a7aeb401e8a49c73e008929d216f/gcc%2Fconfig%2Frs6000%2Fvsx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvsx.md?ref=bc28bbb60e30a7aeb401e8a49c73e008929d216f", "patch": "@@ -2856,7 +2856,7 @@\n   if (!VECTOR_ELT_ORDER_BIG)\n     ele = nunits - 1 - ele;\n \n-  operands[3] = GEN_INT (nunits * ele);\n+  operands[3] = GEN_INT (GET_MODE_SIZE (<VS_scalar>mode) * ele);\n   if (<MODE>mode == V4SImode)\n     return \"xxinsertw %x0,%x2,%3\";\n   else"}]}