{"sha": "f18d1d16c3e110cc5cc13a704d5b028520c755fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjE4ZDFkMTZjM2UxMTBjYzVjYzEzYTcwNGQ1YjAyODUyMGM3NTVmZQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2011-09-27T23:04:14Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2011-09-27T23:04:14Z"}, "message": "m32r.md: Use match_test rather than eq/ne symbol_ref throughout file.\n\ngcc/\n\t* config/m32r/m32r.md: Use match_test rather than eq/ne symbol_ref\n\tthroughout file.\n\nFrom-SVN: r179297", "tree": {"sha": "fb3589baf799ba19d119869d165753306a87293f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb3589baf799ba19d119869d165753306a87293f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f18d1d16c3e110cc5cc13a704d5b028520c755fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f18d1d16c3e110cc5cc13a704d5b028520c755fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f18d1d16c3e110cc5cc13a704d5b028520c755fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f18d1d16c3e110cc5cc13a704d5b028520c755fe/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b4d58803b1b3b6f4c5ac7babda10bce147182896", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4d58803b1b3b6f4c5ac7babda10bce147182896", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4d58803b1b3b6f4c5ac7babda10bce147182896"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "25f5ca823edc13e71096490b3c24b5ce35a06014", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f18d1d16c3e110cc5cc13a704d5b028520c755fe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f18d1d16c3e110cc5cc13a704d5b028520c755fe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f18d1d16c3e110cc5cc13a704d5b028520c755fe", "patch": "@@ -1,3 +1,8 @@\n+2011-09-28  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* config/m32r/m32r.md: Use match_test rather than eq/ne symbol_ref\n+\tthroughout file.\n+\n 2011-09-28  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* config/iq2000/iq2000.md: Use match_test rather than eq/ne symbol_ref"}, {"sha": "cce8f1ccb747306091fb401a3962070502455bbd", "filename": "gcc/config/m32r/m32r.md", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f18d1d16c3e110cc5cc13a704d5b028520c755fe/gcc%2Fconfig%2Fm32r%2Fm32r.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f18d1d16c3e110cc5cc13a704d5b028520c755fe/gcc%2Fconfig%2Fm32r%2Fm32r.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.md?ref=f18d1d16c3e110cc5cc13a704d5b028520c755fe", "patch": "@@ -69,9 +69,9 @@\n \n ;; The target CPU we're compiling for.\n (define_attr \"cpu\" \"m32r,m32r2,m32rx\"\n-  (cond [(ne (symbol_ref \"TARGET_M32RX\") (const_int 0))\n+  (cond [(match_test \"TARGET_M32RX\")\n \t     (const_string \"m32rx\")\n-\t (ne (symbol_ref \"TARGET_M32R2\") (const_int 0))\n+\t (match_test \"TARGET_M32R2\")\n \t     (const_string \"m32r2\")]\n     (const_string \"m32r\")))\n \n@@ -2012,8 +2012,7 @@\n }\"\n   [(set_attr \"type\" \"call\")\n    (set (attr \"length\")\n-\t(if_then_else (eq (symbol_ref \"call26_operand (operands[0], FUNCTION_MODE)\")\n-\t\t\t  (const_int 0))\n+\t(if_then_else (not (match_test \"call26_operand (operands[0], FUNCTION_MODE)\"))\n \t\t      (const_int 12) ; 10 + 2 for nop filler\n \t\t      ; The return address must be on a 4 byte boundary so\n \t\t      ; there's no point in using a value of 2 here.  A 2 byte\n@@ -2072,8 +2071,7 @@\n }\"\n   [(set_attr \"type\" \"call\")\n    (set (attr \"length\")\n-\t(if_then_else (eq (symbol_ref \"call26_operand (operands[1], FUNCTION_MODE)\")\n-\t\t\t  (const_int 0))\n+\t(if_then_else (not (match_test \"call26_operand (operands[1], FUNCTION_MODE)\"))\n \t\t      (const_int 12) ; 10 + 2 for nop filler\n \t\t      ; The return address must be on a 4 byte boundary so\n \t\t      ; there's no point in using a value of 2 here.  A 2 byte"}]}