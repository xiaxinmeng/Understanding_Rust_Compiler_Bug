{"sha": "4c173b500b65e7db5317ed9e23a0551cba6b7aa2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGMxNzNiNTAwYjY1ZTdkYjUzMTdlZDllMjNhMDU1MWNiYTZiN2FhMg==", "commit": {"author": {"name": "Pascal Obry", "email": "obry@adacore.com", "date": "2011-09-27T09:26:11Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-27T09:26:11Z"}, "message": "exp_ch9.adb, [...]: Minor reformatting.\n\n2011-09-27  Pascal Obry  <obry@adacore.com>\n\n\t* exp_ch9.adb, s-taspri-posix.ads: Minor reformatting.\n\n2011-09-27  Pascal Obry  <obry@adacore.com>\n\n\t* s-osinte-aix.ads, s-osinte-darwin.ads, s-osinte-freebsd.ads,\n\ts-osinte-hpux.ads, s-osinte-irix.ads,\n\ts-osinte-solaris-posix.ads (pthread_rwlock_t): New definition alias of\n\tpthread_mutex_t.\n\t(pthread_rwlockattr_t): New definition alias of pthread_mutexattr_t.\n\t* s-osinte-linux.ads (pthread_rwlock_t, pthread_rwlockattr_t,\n\tpthread_rwlockattr_init, pthread_rwlockattr_destroy,\n\tpthread_rwlockattr_setkind_np, pthread_rwlock_init,\n\tpthread_rwlock_destroy, pthread_rwlock_rdlock,\n\tpthread_rwlock_wrlock, pthread_rwlock_unlock): New.\n\nFrom-SVN: r179250", "tree": {"sha": "4774808744dba9de61e6e64c4a285b75b36bd6cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4774808744dba9de61e6e64c4a285b75b36bd6cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c173b500b65e7db5317ed9e23a0551cba6b7aa2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c173b500b65e7db5317ed9e23a0551cba6b7aa2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c173b500b65e7db5317ed9e23a0551cba6b7aa2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c173b500b65e7db5317ed9e23a0551cba6b7aa2/comments", "author": {"login": "TurboGit", "id": 467069, "node_id": "MDQ6VXNlcjQ2NzA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/467069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TurboGit", "html_url": "https://github.com/TurboGit", "followers_url": "https://api.github.com/users/TurboGit/followers", "following_url": "https://api.github.com/users/TurboGit/following{/other_user}", "gists_url": "https://api.github.com/users/TurboGit/gists{/gist_id}", "starred_url": "https://api.github.com/users/TurboGit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TurboGit/subscriptions", "organizations_url": "https://api.github.com/users/TurboGit/orgs", "repos_url": "https://api.github.com/users/TurboGit/repos", "events_url": "https://api.github.com/users/TurboGit/events{/privacy}", "received_events_url": "https://api.github.com/users/TurboGit/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "343250a6d51af7dcd96f1d3a253c9971a5db6bc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/343250a6d51af7dcd96f1d3a253c9971a5db6bc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/343250a6d51af7dcd96f1d3a253c9971a5db6bc5"}], "stats": {"total": 155, "additions": 136, "deletions": 19}, "files": [{"sha": "d200d17662c4a49c2e8b96dc772277336ef572da", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c173b500b65e7db5317ed9e23a0551cba6b7aa2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c173b500b65e7db5317ed9e23a0551cba6b7aa2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4c173b500b65e7db5317ed9e23a0551cba6b7aa2", "patch": "@@ -1,3 +1,20 @@\n+2011-09-27  Pascal Obry  <obry@adacore.com>\n+\n+\t* exp_ch9.adb, s-taspri-posix.ads: Minor reformatting.\n+\n+2011-09-27  Pascal Obry  <obry@adacore.com>\n+\n+\t* s-osinte-aix.ads, s-osinte-darwin.ads, s-osinte-freebsd.ads,\n+\ts-osinte-hpux.ads, s-osinte-irix.ads,\n+\ts-osinte-solaris-posix.ads (pthread_rwlock_t): New definition alias of\n+\tpthread_mutex_t.\n+\t(pthread_rwlockattr_t): New definition alias of pthread_mutexattr_t.\n+\t* s-osinte-linux.ads (pthread_rwlock_t, pthread_rwlockattr_t,\n+\tpthread_rwlockattr_init, pthread_rwlockattr_destroy,\n+\tpthread_rwlockattr_setkind_np, pthread_rwlock_init,\n+\tpthread_rwlock_destroy, pthread_rwlock_rdlock,\n+\tpthread_rwlock_wrlock, pthread_rwlock_unlock): New.\n+\n 2011-09-27  Pascal Obry  <obry@adacore.com>\n \n \t* rtsfind.ads: Add RE_Lock_Read_Only into rtsfind circuitry."}, {"sha": "b8bcfaedc316cfbdf9c8481433dd3aa48d186522", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c173b500b65e7db5317ed9e23a0551cba6b7aa2/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c173b500b65e7db5317ed9e23a0551cba6b7aa2/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=4c173b500b65e7db5317ed9e23a0551cba6b7aa2", "patch": "@@ -1690,7 +1690,7 @@ package body Exp_Ch9 is\n       --  The parameter that designates the synchronized object in the call\n \n       Actuals : constant List_Id := New_List;\n-      --  the actuals in the entry call.\n+      --  the actuals in the entry call\n \n       Decls : constant List_Id := New_List;\n \n@@ -3008,7 +3008,7 @@ package body Exp_Ch9 is\n                raise Program_Error;\n          end case;\n \n-         --  Establish link between subprogram body entity and source entry.\n+         --  Establish link between subprogram body entity and source entry\n \n          Set_Corresponding_Protected_Entry (Edef, Ent);\n \n@@ -8337,7 +8337,7 @@ package body Exp_Ch9 is\n             Insert_After (Current_Node, Sub);\n             Analyze (Sub);\n \n-            --  build wrapper procedure for pre/postconditions.\n+            --  build wrapper procedure for pre/postconditions\n \n             Build_PPC_Wrapper (Comp_Id, N);\n \n@@ -10615,10 +10615,12 @@ package body Exp_Ch9 is\n         Make_Defining_Identifier (Sloc (Tasktyp),\n           Chars => New_External_Name (Tasknm, 'Z')));\n \n-      if Present (Taskdef) and then Has_Storage_Size_Pragma (Taskdef) and then\n-        Is_Static_Expression (Expression (First (\n-          Pragma_Argument_Associations (Find_Task_Or_Protected_Pragma (\n-            Taskdef, Name_Storage_Size)))))\n+      if Present (Taskdef)\n+        and then Has_Storage_Size_Pragma (Taskdef)\n+        and then\n+          Is_Static_Expression (Expression (First (\n+            Pragma_Argument_Associations (Find_Task_Or_Protected_Pragma (\n+              Taskdef, Name_Storage_Size)))))\n       then\n          Size_Decl :=\n            Make_Object_Declaration (Loc,"}, {"sha": "c8e660826042b503f4e0eaa241a74f22d48d7072", "filename": "gcc/ada/s-osinte-aix.ads", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c173b500b65e7db5317ed9e23a0551cba6b7aa2/gcc%2Fada%2Fs-osinte-aix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c173b500b65e7db5317ed9e23a0551cba6b7aa2/gcc%2Fada%2Fs-osinte-aix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-aix.ads?ref=4c173b500b65e7db5317ed9e23a0551cba6b7aa2", "patch": "@@ -276,6 +276,14 @@ package System.OS_Interface is\n    PTHREAD_SCOPE_PROCESS : constant := 1;\n    PTHREAD_SCOPE_SYSTEM  : constant := 0;\n \n+   --  Read/Write lock not supported on AIX. To add support both types\n+   --  pthread_rwlock_t and pthread_rwlockattr_t must properly be defined\n+   --  with the associated routines pthread_rwlock_[init/destroy] and\n+   --  pthread_rwlock_[rdlock/wrlock/unlock].\n+\n+   subtype pthread_rwlock_t     is pthread_mutex_t;\n+   subtype pthread_rwlockattr_t is pthread_mutexattr_t;\n+\n    -----------\n    -- Stack --\n    -----------"}, {"sha": "fe2a10a33152b872ba602bb3efaec3cc9b871232", "filename": "gcc/ada/s-osinte-darwin.ads", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c173b500b65e7db5317ed9e23a0551cba6b7aa2/gcc%2Fada%2Fs-osinte-darwin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c173b500b65e7db5317ed9e23a0551cba6b7aa2/gcc%2Fada%2Fs-osinte-darwin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-darwin.ads?ref=4c173b500b65e7db5317ed9e23a0551cba6b7aa2", "patch": "@@ -256,6 +256,14 @@ package System.OS_Interface is\n    PTHREAD_SCOPE_PROCESS : constant := 2;\n    PTHREAD_SCOPE_SYSTEM  : constant := 1;\n \n+   --  Read/Write lock not supported on Darwin. To add support both types\n+   --  pthread_rwlock_t and pthread_rwlockattr_t must properly be defined\n+   --  with the associated routines pthread_rwlock_[init/destroy] and\n+   --  pthread_rwlock_[rdlock/wrlock/unlock].\n+\n+   subtype pthread_rwlock_t     is pthread_mutex_t;\n+   subtype pthread_rwlockattr_t is pthread_mutexattr_t;\n+\n    -----------\n    -- Stack --\n    -----------"}, {"sha": "d3d5c8763e410bfd814a404759a5d42f98732d5e", "filename": "gcc/ada/s-osinte-freebsd.ads", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c173b500b65e7db5317ed9e23a0551cba6b7aa2/gcc%2Fada%2Fs-osinte-freebsd.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c173b500b65e7db5317ed9e23a0551cba6b7aa2/gcc%2Fada%2Fs-osinte-freebsd.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-freebsd.ads?ref=4c173b500b65e7db5317ed9e23a0551cba6b7aa2", "patch": "@@ -289,6 +289,14 @@ package System.OS_Interface is\n    PTHREAD_SCOPE_PROCESS : constant := 0;\n    PTHREAD_SCOPE_SYSTEM  : constant := 2;\n \n+   --  Read/Write lock not supported on freebsd. To add support both types\n+   --  pthread_rwlock_t and pthread_rwlockattr_t must properly be defined\n+   --  with the associated routines pthread_rwlock_[init/destroy] and\n+   --  pthread_rwlock_[rdlock/wrlock/unlock].\n+\n+   subtype pthread_rwlock_t     is pthread_mutex_t;\n+   subtype pthread_rwlockattr_t is pthread_mutexattr_t;\n+\n    -----------\n    -- Stack --\n    -----------"}, {"sha": "bc9a7091d6fba4279ad7164d68d3d1a485bb385a", "filename": "gcc/ada/s-osinte-hpux.ads", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c173b500b65e7db5317ed9e23a0551cba6b7aa2/gcc%2Fada%2Fs-osinte-hpux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c173b500b65e7db5317ed9e23a0551cba6b7aa2/gcc%2Fada%2Fs-osinte-hpux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-hpux.ads?ref=4c173b500b65e7db5317ed9e23a0551cba6b7aa2", "patch": "@@ -265,6 +265,14 @@ package System.OS_Interface is\n    PTHREAD_SCOPE_PROCESS : constant := 2;\n    PTHREAD_SCOPE_SYSTEM  : constant := 1;\n \n+   --  Read/Write lock not supported on HPUX. To add support both types\n+   --  pthread_rwlock_t and pthread_rwlockattr_t must properly be defined\n+   --  with the associated routines pthread_rwlock_[init/destroy] and\n+   --  pthread_rwlock_[rdlock/wrlock/unlock].\n+\n+   subtype pthread_rwlock_t     is pthread_mutex_t;\n+   subtype pthread_rwlockattr_t is pthread_mutexattr_t;\n+\n    -----------\n    -- Stack --\n    -----------"}, {"sha": "ddeadcb61476d28242076f2e05b432bee60a6e46", "filename": "gcc/ada/s-osinte-irix.ads", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c173b500b65e7db5317ed9e23a0551cba6b7aa2/gcc%2Fada%2Fs-osinte-irix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c173b500b65e7db5317ed9e23a0551cba6b7aa2/gcc%2Fada%2Fs-osinte-irix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-irix.ads?ref=4c173b500b65e7db5317ed9e23a0551cba6b7aa2", "patch": "@@ -7,7 +7,7 @@\n --                                  S p e c                                 --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---          Copyright (C) 1995-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1995-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -250,6 +250,14 @@ package System.OS_Interface is\n \n    PTHREAD_CREATE_DETACHED : constant := 1;\n \n+   --  Read/Write lock not supported on SGI. To add support both types\n+   --  pthread_rwlock_t and pthread_rwlockattr_t must properly be defined\n+   --  with the associated routines pthread_rwlock_[init/destroy] and\n+   --  pthread_rwlock_[rdlock/wrlock/unlock].\n+\n+   subtype pthread_rwlock_t     is pthread_mutex_t;\n+   subtype pthread_rwlockattr_t is pthread_mutexattr_t;\n+\n    -----------\n    -- Stack --\n    -----------"}, {"sha": "387486637972bc8f52aaae3ffa130be0a360fd64", "filename": "gcc/ada/s-osinte-linux.ads", "status": "modified", "additions": 56, "deletions": 6, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c173b500b65e7db5317ed9e23a0551cba6b7aa2/gcc%2Fada%2Fs-osinte-linux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c173b500b65e7db5317ed9e23a0551cba6b7aa2/gcc%2Fada%2Fs-osinte-linux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-linux.ads?ref=4c173b500b65e7db5317ed9e23a0551cba6b7aa2", "patch": "@@ -272,12 +272,14 @@ package System.OS_Interface is\n    function To_pthread_t is\n      new Ada.Unchecked_Conversion (unsigned_long, pthread_t);\n \n-   type pthread_mutex_t     is limited private;\n-   type pthread_cond_t      is limited private;\n-   type pthread_attr_t      is limited private;\n-   type pthread_mutexattr_t is limited private;\n-   type pthread_condattr_t  is limited private;\n-   type pthread_key_t       is private;\n+   type pthread_mutex_t      is limited private;\n+   type pthread_rwlock_t     is limited private;\n+   type pthread_cond_t       is limited private;\n+   type pthread_attr_t       is limited private;\n+   type pthread_mutexattr_t  is limited private;\n+   type pthread_rwlockattr_t is limited private;\n+   type pthread_condattr_t   is limited private;\n+   type pthread_key_t        is private;\n \n    PTHREAD_CREATE_DETACHED : constant := 1;\n \n@@ -358,6 +360,42 @@ package System.OS_Interface is\n    function pthread_mutex_unlock (mutex : access pthread_mutex_t) return int;\n    pragma Import (C, pthread_mutex_unlock, \"pthread_mutex_unlock\");\n \n+   function pthread_rwlockattr_init\n+     (attr : access pthread_rwlockattr_t) return int;\n+   pragma Import (C, pthread_rwlockattr_init, \"pthread_rwlockattr_init\");\n+\n+   function pthread_rwlockattr_destroy\n+     (attr : access pthread_rwlockattr_t) return int;\n+   pragma Import (C, pthread_rwlockattr_destroy, \"pthread_rwlockattr_destroy\");\n+\n+   PTHREAD_RWLOCK_PREFER_READER_NP              : constant := 0;\n+   PTHREAD_RWLOCK_PREFER_WRITER_NP              : constant := 1;\n+   PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP : constant := 2;\n+\n+   function pthread_rwlockattr_setkind_np\n+     (attr : access pthread_rwlockattr_t;\n+      pref : int) return int;\n+   pragma Import\n+     (C, pthread_rwlockattr_setkind_np, \"pthread_rwlockattr_setkind_np\");\n+\n+   function pthread_rwlock_init\n+     (mutex : access pthread_rwlock_t;\n+      attr  : access pthread_rwlockattr_t) return int;\n+   pragma Import (C, pthread_rwlock_init, \"pthread_rwlock_init\");\n+\n+   function pthread_rwlock_destroy\n+     (mutex : access pthread_rwlock_t) return int;\n+   pragma Import (C, pthread_rwlock_destroy, \"pthread_rwlock_destroy\");\n+\n+   function pthread_rwlock_rdlock (mutex : access pthread_rwlock_t) return int;\n+   pragma Import (C, pthread_rwlock_rdlock, \"pthread_rwlock_rdlock\");\n+\n+   function pthread_rwlock_wrlock (mutex : access pthread_rwlock_t) return int;\n+   pragma Import (C, pthread_rwlock_wrlock, \"pthread_rwlock_wrlock\");\n+\n+   function pthread_rwlock_unlock (mutex : access pthread_rwlock_t) return int;\n+   pragma Import (C, pthread_rwlock_unlock, \"pthread_rwlock_unlock\");\n+\n    function pthread_condattr_init\n      (attr : access pthread_condattr_t) return int;\n    pragma Import (C, pthread_condattr_init, \"pthread_condattr_init\");\n@@ -588,6 +626,18 @@ private\n    pragma Convention (C, pthread_mutex_t);\n    for pthread_mutex_t'Alignment use Interfaces.C.unsigned_long'Alignment;\n \n+   type pthread_rwlockattr_t is record\n+      Data : char_array (1 .. OS_Constants.PTHREAD_RWLOCKATTR_SIZE);\n+   end record;\n+   pragma Convention (C, pthread_rwlockattr_t);\n+   for pthread_rwlockattr_t'Alignment use Interfaces.C.unsigned_long'Alignment;\n+\n+   type pthread_rwlock_t is record\n+      Data : char_array (1 .. OS_Constants.PTHREAD_RWLOCK_SIZE);\n+   end record;\n+   pragma Convention (C, pthread_rwlock_t);\n+   for pthread_rwlock_t'Alignment use Interfaces.C.unsigned_long'Alignment;\n+\n    type pthread_cond_t is record\n       Data : char_array (1 .. OS_Constants.PTHREAD_COND_SIZE);\n    end record;"}, {"sha": "8781a12dd6782f54b64743c8449729856079960a", "filename": "gcc/ada/s-osinte-solaris-posix.ads", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c173b500b65e7db5317ed9e23a0551cba6b7aa2/gcc%2Fada%2Fs-osinte-solaris-posix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c173b500b65e7db5317ed9e23a0551cba6b7aa2/gcc%2Fada%2Fs-osinte-solaris-posix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-solaris-posix.ads?ref=4c173b500b65e7db5317ed9e23a0551cba6b7aa2", "patch": "@@ -255,6 +255,14 @@ package System.OS_Interface is\n    type pthread_condattr_t  is limited private;\n    type pthread_key_t       is private;\n \n+   --  Read/Write lock not supported on Solaris. To add support both types\n+   --  pthread_rwlock_t and pthread_rwlockattr_t must properly be defined\n+   --  with the associated routines pthread_rwlock_[init/destroy] and\n+   --  pthread_rwlock_[rdlock/wrlock/unlock].\n+\n+   subtype pthread_rwlock_t     is pthread_mutex_t;\n+   subtype pthread_rwlockattr_t is pthread_mutexattr_t;\n+\n    PTHREAD_CREATE_DETACHED : constant := 16#40#;\n \n    PTHREAD_SCOPE_PROCESS : constant := 0;"}, {"sha": "77f6321359b8ba44515f8c57ed28a7accc1b3fd5", "filename": "gcc/ada/s-taspri-posix.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c173b500b65e7db5317ed9e23a0551cba6b7aa2/gcc%2Fada%2Fs-taspri-posix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c173b500b65e7db5317ed9e23a0551cba6b7aa2/gcc%2Fada%2Fs-taspri-posix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taspri-posix.ads?ref=4c173b500b65e7db5317ed9e23a0551cba6b7aa2", "patch": "@@ -1,13 +1,13 @@\n ------------------------------------------------------------------------------\n --                                                                          --\n---                  GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                --\n+--                 GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                 --\n --                                                                          --\n---                 S Y S T E M . T A S K _ P R I M I T I V E S              --\n+--               S Y S T E M . T A S K _ P R I M I T I V E S                --\n --                                                                          --\n---                                  S p e c                                 --\n+--                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 1991-1994, Florida State University            --\n---                     Copyright (C) 1995-2010, AdaCore                     --\n+--            Copyright (C) 1991-1994, Florida State University             --\n+--                     Copyright (C) 1995-2011, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}]}