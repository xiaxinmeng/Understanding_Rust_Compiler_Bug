{"sha": "63d9caf9040df6bc190328353499b1f8e36c8201", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjNkOWNhZjkwNDBkZjZiYzE5MDMyODM1MzQ5OWIxZjhlMzZjODIwMQ==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2017-05-31T04:16:45Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2017-05-31T04:16:45Z"}, "message": "configure.ac (strnlen): Add to AC_CHECK_DECLS.\n\n* configure.ac (strnlen): Add to AC_CHECK_DECLS.\n* configure: Likewise.\n* config.in: Add HACE_DECL_STRNLEN.\n\nFrom-SVN: r248721", "tree": {"sha": "a3a52be0efad917bc28e65dcdf10f52c9da7bb49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3a52be0efad917bc28e65dcdf10f52c9da7bb49"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63d9caf9040df6bc190328353499b1f8e36c8201", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63d9caf9040df6bc190328353499b1f8e36c8201", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63d9caf9040df6bc190328353499b1f8e36c8201", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63d9caf9040df6bc190328353499b1f8e36c8201/comments", "author": null, "committer": null, "parents": [{"sha": "96cbc38bfe970f81805af56dbc8127e5598c1ce8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96cbc38bfe970f81805af56dbc8127e5598c1ce8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96cbc38bfe970f81805af56dbc8127e5598c1ce8"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "0bc64a5d1de51c400e6349b2a4561580f3e0ec0b", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63d9caf9040df6bc190328353499b1f8e36c8201/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63d9caf9040df6bc190328353499b1f8e36c8201/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=63d9caf9040df6bc190328353499b1f8e36c8201", "patch": "@@ -1,3 +1,9 @@\n+2017-05-31  DJ Delorie  <dj@redhat.com>\n+\n+\t* configure.ac (strnlen): Add to AC_CHECK_DECLS.\n+\t* configure: Likewise.\n+\t* config.in: Add HACE_DECL_STRNLEN.\n+\n 2017-05-27  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* d-demangle.c (dlang_identifier): Prefix mangled init symbols"}, {"sha": "66c78e816840eb2aced089dc7f913b8b09de101f", "filename": "libiberty/config.in", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63d9caf9040df6bc190328353499b1f8e36c8201/libiberty%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63d9caf9040df6bc190328353499b1f8e36c8201/libiberty%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfig.in?ref=63d9caf9040df6bc190328353499b1f8e36c8201", "patch": "@@ -79,6 +79,10 @@\n    don't. */\n #undef HAVE_DECL_SNPRINTF\n \n+/* Define to 1 if you have the declaration of `strnlen', and to 0 if you\n+   don't. */\n+#undef HAVE_DECL_STRNLEN\n+\n /* Define to 1 if you have the declaration of `strtol', and to 0 if you don't.\n    */\n #undef HAVE_DECL_STRTOL"}, {"sha": "ccadfaa822404efc833b15c9b7abd5443d5a97ba", "filename": "libiberty/configure", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63d9caf9040df6bc190328353499b1f8e36c8201/libiberty%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63d9caf9040df6bc190328353499b1f8e36c8201/libiberty%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure?ref=63d9caf9040df6bc190328353499b1f8e36c8201", "patch": "@@ -5864,6 +5864,16 @@ fi\n cat >>confdefs.h <<_ACEOF\n #define HAVE_DECL_STRTOULL $ac_have_decl\n _ACEOF\n+ac_fn_c_check_decl \"$LINENO\" \"strnlen\" \"ac_cv_have_decl_strnlen\" \"$ac_includes_default\"\n+if test \"x$ac_cv_have_decl_strnlen\" = x\"\"yes; then :\n+  ac_have_decl=1\n+else\n+  ac_have_decl=0\n+fi\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DECL_STRNLEN $ac_have_decl\n+_ACEOF\n \n \n $as_echo \"#define HAVE_SYS_ERRLIST 1\" >>confdefs.h\n@@ -7003,6 +7013,17 @@ fi\n \n cat >>confdefs.h <<_ACEOF\n #define HAVE_DECL_STRVERSCMP $ac_have_decl\n+_ACEOF\n+\n+  ac_fn_c_check_decl \"$LINENO\" \"strnlen\" \"ac_cv_have_decl_strnlen\" \"$ac_includes_default\"\n+if test \"x$ac_cv_have_decl_strnlen\" = x\"\"yes; then :\n+  ac_have_decl=1\n+else\n+  ac_have_decl=0\n+fi\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DECL_STRNLEN $ac_have_decl\n _ACEOF\n \n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether canonicalize_file_name must be declared\" >&5"}, {"sha": "6917cfaf4fbdf2954b269515e510639ce6081c01", "filename": "libiberty/configure.ac", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63d9caf9040df6bc190328353499b1f8e36c8201/libiberty%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63d9caf9040df6bc190328353499b1f8e36c8201/libiberty%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure.ac?ref=63d9caf9040df6bc190328353499b1f8e36c8201", "patch": "@@ -416,7 +416,7 @@ if test \"x\" = \"y\"; then\n     table times tmpnam \\\n     vasprintf vfprintf vprintf vsprintf \\\n     wait3 wait4 waitpid)\n-  AC_CHECK_DECLS([basename(char *), ffs, asprintf, vasprintf, snprintf, vsnprintf, strtol, strtoul, strtoll, strtoull])\n+  AC_CHECK_DECLS([basename(char *), ffs, asprintf, vasprintf, snprintf, vsnprintf, strtol, strtoul, strtoll, strtoull, strnlen])\n   AC_DEFINE(HAVE_SYS_ERRLIST, 1, [Define if you have the sys_errlist variable.])\n   AC_DEFINE(HAVE_SYS_NERR,    1, [Define if you have the sys_nerr variable.])\n   AC_DEFINE(HAVE_SYS_SIGLIST, 1, [Define if you have the sys_siglist variable.])\n@@ -689,6 +689,7 @@ if test -z \"${setobjs}\"; then\n   AC_CHECK_DECLS([calloc, getenv, getopt, malloc, realloc, sbrk])\n   AC_CHECK_DECLS([strtol, strtoul, strtoll, strtoull])\n   AC_CHECK_DECLS([strverscmp])\n+  AC_CHECK_DECLS([strnlen])\n   libiberty_NEED_DECLARATION(canonicalize_file_name)\n fi\n "}]}