{"sha": "550671691ee841093b72631af3b4bcf7dbad68d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTUwNjcxNjkxZWU4NDEwOTNiNzI2MzFhZjNiNGJjZjdkYmFkNjhkNg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2015-03-04T10:20:23Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2015-03-04T10:20:23Z"}, "message": "re PR c++/64227 (Forwarding an argument of a function template to a generic lambda causes a compiler crash)\n\n2015-03-04  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/64227\n\t* g++.dg/cpp1y/lambda-generic-ice1.C: New.\n\nFrom-SVN: r221181", "tree": {"sha": "ba48dd2011f7bd1c7eccbd41b8b2c27813e039c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba48dd2011f7bd1c7eccbd41b8b2c27813e039c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/550671691ee841093b72631af3b4bcf7dbad68d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/550671691ee841093b72631af3b4bcf7dbad68d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/550671691ee841093b72631af3b4bcf7dbad68d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/550671691ee841093b72631af3b4bcf7dbad68d6/comments", "author": null, "committer": null, "parents": [{"sha": "203876fcae96c1b556fbe86a70975597a547beaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/203876fcae96c1b556fbe86a70975597a547beaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/203876fcae96c1b556fbe86a70975597a547beaf"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "f3e7f882b90592e59d11db96e2138a3f03c7de7a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/550671691ee841093b72631af3b4bcf7dbad68d6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/550671691ee841093b72631af3b4bcf7dbad68d6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=550671691ee841093b72631af3b4bcf7dbad68d6", "patch": "@@ -1,3 +1,8 @@\n+2015-03-04  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/64227\n+\t* g++.dg/cpp1y/lambda-generic-ice1.C: New.\n+\n 2015-03-04  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* gcc.target/aarch64/atomic-comp-swap-release-acquire.c: Add"}, {"sha": "0e40e62b322dd034e7090d006b496d6b3c20adcb", "filename": "gcc/testsuite/g++.dg/cpp1y/lambda-generic-ice1.C", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/550671691ee841093b72631af3b4bcf7dbad68d6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-ice1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/550671691ee841093b72631af3b4bcf7dbad68d6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-ice1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-ice1.C?ref=550671691ee841093b72631af3b4bcf7dbad68d6", "patch": "@@ -0,0 +1,42 @@\n+// PR c++/64227\n+// { dg-do compile { target c++14 } }\n+\n+template<typename T>\n+struct remove_reference\n+{ typedef T   type; };\n+\n+template<typename T>\n+struct remove_reference<T&>\n+{ typedef T   type; };\n+\n+template<typename T>\n+struct remove_reference<T&&>\n+{ typedef T   type; };\n+\n+template<typename T>\n+constexpr T&&\n+forward(typename remove_reference<T>::type& t) noexcept\n+{ return static_cast<T&&>(t); }\n+\n+template<typename T>\n+constexpr T&&\n+forward(typename remove_reference<T>::type&& t) noexcept\n+{ return static_cast<T&&>(t); }\n+\n+template<typename T>\n+auto greater_than(T&& t)\n+{\n+  return [val = forward<T&&>(t)] (const auto& arg) { return arg > val; };\n+}\n+\n+template<typename Functor>\n+void g(Functor f)\n+{\n+  for (int i = 0; i < 100000; i++)\n+    f(i);\n+}\n+\n+int main()\n+{\n+  g(greater_than(10));\n+}"}]}