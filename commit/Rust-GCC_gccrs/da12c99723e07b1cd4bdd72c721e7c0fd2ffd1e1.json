{"sha": "da12c99723e07b1cd4bdd72c721e7c0fd2ffd1e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGExMmM5OTcyM2UwN2IxY2Q0YmRkNzJjNzIxZTdjMGZkMmZmZDFlMQ==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2010-06-10T19:14:12Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2010-06-10T19:14:12Z"}, "message": "re PR fortran/43032 (FLUSH: Document that it does not call fsync() but fflush())\n\n\tPR fortran/43032\n\t* intrinsic.texi (FLUSH): Note the difference between FLUSH and\n\tPOSIX's fsync(), and how to call the latter from Fortran code.\n\nFrom-SVN: r160568", "tree": {"sha": "0a1e16a67d7bec53679bc6cb4e472574fc95eef7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a1e16a67d7bec53679bc6cb4e472574fc95eef7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da12c99723e07b1cd4bdd72c721e7c0fd2ffd1e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da12c99723e07b1cd4bdd72c721e7c0fd2ffd1e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da12c99723e07b1cd4bdd72c721e7c0fd2ffd1e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da12c99723e07b1cd4bdd72c721e7c0fd2ffd1e1/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84efddb2006d83cfe7d250ac4556442b98ba4bf5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84efddb2006d83cfe7d250ac4556442b98ba4bf5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84efddb2006d83cfe7d250ac4556442b98ba4bf5"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "87e4c3cbc2527c42243fced80a6e05740fca2215", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da12c99723e07b1cd4bdd72c721e7c0fd2ffd1e1/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da12c99723e07b1cd4bdd72c721e7c0fd2ffd1e1/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=da12c99723e07b1cd4bdd72c721e7c0fd2ffd1e1", "patch": "@@ -1,3 +1,9 @@\n+2010-06-10  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/43032\n+\t* intrinsic.texi (FLUSH): Note the difference between FLUSH and\n+\tPOSIX's fsync(), and how to call the latter from Fortran code.\n+\n 2010-06-10  Daniel Franke  <franke.daniel@gmail.com>\n \n \tPR fortran/44457"}, {"sha": "a24ad91cc2dbe1e9d43840e3df2cae538304f07a", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da12c99723e07b1cd4bdd72c721e7c0fd2ffd1e1/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da12c99723e07b1cd4bdd72c721e7c0fd2ffd1e1/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=da12c99723e07b1cd4bdd72c721e7c0fd2ffd1e1", "patch": "@@ -4185,6 +4185,44 @@ Subroutine\n Beginning with the Fortran 2003 standard, there is a @code{FLUSH}\n statement that should be preferred over the @code{FLUSH} intrinsic.\n \n+The @code{FLUSH} intrinsic and the Fortran 2003 @code{FLUSH} statement\n+have identical effect: they flush the runtime library's I/O buffer so\n+that the data becomes visible to other processes. This does not guarantee\n+that the data is committed to disk.\n+\n+On POSIX systems, you can request that all data is transferred  to  the\n+storage device by calling the @code{fsync} function, with the POSIX file\n+descriptor of the I/O unit as argument (retrieved with GNU intrinsic\n+@code{FNUM}). The following example shows how:\n+\n+@smallexample\n+  ! Declare the interface for POSIX fsync function\n+  interface\n+    function fsync (fd) bind(c,name=\"fsync\")\n+    use iso_c_binding, only: c_int\n+      integer(c_int), value :: fd\n+      integer(c_int) :: fsync\n+    end function fsync\n+  end interface\n+\n+  ! Variable declaration\n+  integer :: ret\n+\n+  ! Opening unit 10\n+  open (10,file=\"foo\")\n+\n+  ! ...\n+  ! Perform I/O on unit 10\n+  ! ...\n+\n+  ! Flush and sync\n+  flush(10)\n+  ret = fsync(fnum(10))\n+\n+  ! Handle possible error\n+  if (ret /= 0) stop \"Error calling FSYNC\"\n+@end smallexample\n+\n @end table\n \n "}]}