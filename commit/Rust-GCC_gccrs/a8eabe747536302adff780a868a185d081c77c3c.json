{"sha": "a8eabe747536302adff780a868a185d081c77c3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YThlYWJlNzQ3NTM2MzAyYWRmZjc4MGE4NjhhMTg1ZDA4MWM3N2MzYw==", "commit": {"author": {"name": "Daniel Franke", "email": "franke.daniel@gmail.com", "date": "2007-12-26T06:36:46Z"}, "committer": {"name": "Daniel Franke", "email": "dfranke@gcc.gnu.org", "date": "2007-12-26T06:36:46Z"}, "message": "re PR fortran/34532 (Doc error or rej.valid vendor extension: Integer as logical in IF expressions)\n\n2007-12-25  Daniel Franke  <franke.daniel@gmail.com>\n\n\tPR fortran/34532\n\t* gfortran.texi: Fixed section about implicit conversion of logical \n\tand integer variables.\n\nFrom-SVN: r131180", "tree": {"sha": "e95ce8598e8cb9268b65c51a1d64d11bcbead7cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e95ce8598e8cb9268b65c51a1d64d11bcbead7cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8eabe747536302adff780a868a185d081c77c3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8eabe747536302adff780a868a185d081c77c3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8eabe747536302adff780a868a185d081c77c3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8eabe747536302adff780a868a185d081c77c3c/comments", "author": {"login": "dfranke76", "id": 15729164, "node_id": "MDQ6VXNlcjE1NzI5MTY0", "avatar_url": "https://avatars.githubusercontent.com/u/15729164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dfranke76", "html_url": "https://github.com/dfranke76", "followers_url": "https://api.github.com/users/dfranke76/followers", "following_url": "https://api.github.com/users/dfranke76/following{/other_user}", "gists_url": "https://api.github.com/users/dfranke76/gists{/gist_id}", "starred_url": "https://api.github.com/users/dfranke76/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dfranke76/subscriptions", "organizations_url": "https://api.github.com/users/dfranke76/orgs", "repos_url": "https://api.github.com/users/dfranke76/repos", "events_url": "https://api.github.com/users/dfranke76/events{/privacy}", "received_events_url": "https://api.github.com/users/dfranke76/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0283e1ed80d26b26634debde163d6c37db262414", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0283e1ed80d26b26634debde163d6c37db262414", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0283e1ed80d26b26634debde163d6c37db262414"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "57574cee239b05bff2d6101fdb0bb827e8ac5712", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8eabe747536302adff780a868a185d081c77c3c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8eabe747536302adff780a868a185d081c77c3c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=a8eabe747536302adff780a868a185d081c77c3c", "patch": "@@ -1,3 +1,9 @@\n+2007-12-26  Daniel Franke  <franke.daniel@gmail.com>\n+\n+\tPR fortran/34532\n+\t* gfortran.texi: Fixed section about implicit conversion of\n+\tlogical and integer variables.\n+\n 2007-12-25  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/34514"}, {"sha": "6e9cb62b3d17e1471e6ec515467c8073d01d09fe", "filename": "gcc/fortran/gfortran.texi", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8eabe747536302adff780a868a185d081c77c3c/gcc%2Ffortran%2Fgfortran.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8eabe747536302adff780a868a185d081c77c3c/gcc%2Ffortran%2Fgfortran.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.texi?ref=a8eabe747536302adff780a868a185d081c77c3c", "patch": "@@ -1165,12 +1165,17 @@ zero, and @code{.TRUE.} is interpreted as one.  When converting from\n @code{.FALSE.} and any nonzero value is interpreted as @code{.TRUE.}.\n \n @smallexample\n-       INTEGER :: i = 1\n-       IF (i) PRINT *, 'True'\n+        LOGICAL :: l\n+        l = 1\n+@end smallexample\n+@smallexample\n+        INTEGER :: i\n+        i = .TRUE.\n @end smallexample\n \n-However, there is no implicit conversion of @code{LOGICAL} and\n-@code{INTEGER} values performed during I/O operations.\n+However, there is no implicit conversion of @code{INTEGER} values in\n+@code{if}-statements, nor of @code{LOGICAL} or @code{INTEGER} values\n+in I/O operations.\n \n @node Hollerith constants support\n @section Hollerith constants support"}]}