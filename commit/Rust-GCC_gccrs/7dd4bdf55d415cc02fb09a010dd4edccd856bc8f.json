{"sha": "7dd4bdf55d415cc02fb09a010dd4edccd856bc8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2RkNGJkZjU1ZDQxNWNjMDJmYjA5YTAxMGRkNGVkY2NkODU2YmM4Zg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@markmitchell.com", "date": "1998-05-24T23:57:48Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1998-05-24T23:57:48Z"}, "message": "tree.c (cp_tree_equal): Handle pointers to member functions.\n\n1998-05-24  Mark Mitchell  <mark@markmitchell.com>\n\t* tree.c (cp_tree_equal): Handle pointers to member functions.\n\nFrom-SVN: r20038", "tree": {"sha": "99f352ca3c94a2b511b24abfdd07eee8d04b9176", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/99f352ca3c94a2b511b24abfdd07eee8d04b9176"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7dd4bdf55d415cc02fb09a010dd4edccd856bc8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dd4bdf55d415cc02fb09a010dd4edccd856bc8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dd4bdf55d415cc02fb09a010dd4edccd856bc8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dd4bdf55d415cc02fb09a010dd4edccd856bc8f/comments", "author": null, "committer": null, "parents": [{"sha": "00c15f8deb694cc46e54dd5bf4fd6a4d60d22a83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00c15f8deb694cc46e54dd5bf4fd6a4d60d22a83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00c15f8deb694cc46e54dd5bf4fd6a4d60d22a83"}], "stats": {"total": 51, "additions": 50, "deletions": 1}, "files": [{"sha": "b54b78fadd5f8de61d8e812bdaa02a3f253d4583", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dd4bdf55d415cc02fb09a010dd4edccd856bc8f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dd4bdf55d415cc02fb09a010dd4edccd856bc8f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7dd4bdf55d415cc02fb09a010dd4edccd856bc8f", "patch": "@@ -1,5 +1,7 @@\n 1998-05-24  Mark Mitchell  <mark@markmitchell.com>\n \n+\t* tree.c (cp_tree_equal): Handle pointers to member functions.\n+\n \t* call.c (maybe_handle_implicit_object): Handle QUAL_CONVs.  Make\n \tsure the type of the REF_BIND is a reference type.\n \t(maybe_handle_ref_bind, compare_ics): Rename reference_type to"}, {"sha": "a5f30eaa8515d6deb765199b074e8e4fb0c6fb85", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dd4bdf55d415cc02fb09a010dd4edccd856bc8f/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dd4bdf55d415cc02fb09a010dd4edccd856bc8f/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=7dd4bdf55d415cc02fb09a010dd4edccd856bc8f", "patch": "@@ -2134,7 +2134,23 @@ cp_tree_equal (t1, t2)\n \t\t  TREE_STRING_LENGTH (t1));\n \n     case CONSTRUCTOR:\n-      abort ();\n+      /* We need to do this when determining whether or not two\n+\t non-type pointer to member function template arguments\n+\t are the same.  */\n+      if (!(comptypes (TREE_TYPE (t1), TREE_TYPE (t2), 1)\n+\t    /* The first operand is RTL.  */\n+\t    && TREE_OPERAND (t1, 0) == TREE_OPERAND (t2, 0)))\n+\treturn 0;\n+      return cp_tree_equal (TREE_OPERAND (t1, 1), TREE_OPERAND (t2, 1));\n+\n+    case TREE_LIST:\n+      cmp = cp_tree_equal (TREE_PURPOSE (t1), TREE_PURPOSE (t2));\n+      if (cmp <= 0)\n+\treturn cmp;\n+      cmp = cp_tree_equal (TREE_VALUE (t1), TREE_VALUE (t2));\n+      if (cmp <= 0)\n+\treturn cmp;\n+      return cp_tree_equal (TREE_CHAIN (t1), TREE_CHAIN (t2));\n \n     case SAVE_EXPR:\n       return cp_tree_equal (TREE_OPERAND (t1, 0), TREE_OPERAND (t2, 0));"}, {"sha": "2aa38b1cd679b29394b91f957434008d36f8e9cc", "filename": "gcc/testsuite/g++.old-deja/g++.pt/nontype4.C", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dd4bdf55d415cc02fb09a010dd4edccd856bc8f/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fnontype4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dd4bdf55d415cc02fb09a010dd4edccd856bc8f/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fnontype4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fnontype4.C?ref=7dd4bdf55d415cc02fb09a010dd4edccd856bc8f", "patch": "@@ -0,0 +1,31 @@\n+// Build don't link:\n+\n+template <class R, void (R::* A) (void)>\n+class s\n+{\n+public:\n+  s (R &r) : _r (r) {}\n+\n+  void e (void) { (_r.*A) (); }\n+\n+private:\n+  R &_r;\n+};\n+\n+class x\n+{\n+public:\n+  void test1 (void) { int j = 0; }\n+  void test2 (void) { int j = 1; }\n+};\n+\n+int\n+main (void)\n+{\n+  x r;\n+\n+  s<x, &x::test1> c4 (r);\n+  s<x, &x::test2> c5 (r);\n+\n+  return 0;\n+}"}]}