{"sha": "7b119cc6341670ce24c840dab6c552e2596abd77", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2IxMTljYzYzNDE2NzBjZTI0Yzg0MGRhYjZjNTUyZTI1OTZhYmQ3Nw==", "commit": {"author": {"name": "Toon Moene", "email": "toon@moene.indiv.nluug.nl", "date": "2002-03-23T20:00:10Z"}, "committer": {"name": "Toon Moene", "email": "toon@gcc.gnu.org", "date": "2002-03-23T20:00:10Z"}, "message": "com.c (ffecom_check_size_overflow_): Add a test so that arrays too large for 32-bit byte-offset addressing get caught.\n\n2002-03-23  Toon Moene  <toon@moene.indiv.nluug.nl>\n\n\t* com.c (ffecom_check_size_overflow_): Add a test\n\tso that arrays too large for 32-bit byte-offset\n\taddressing get caught.\n\t* news.texi: Document the fixing of this problem.\n\nFrom-SVN: r51243", "tree": {"sha": "972ea783deb451c270a98219c6342cd5dd0e3be3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/972ea783deb451c270a98219c6342cd5dd0e3be3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b119cc6341670ce24c840dab6c552e2596abd77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b119cc6341670ce24c840dab6c552e2596abd77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b119cc6341670ce24c840dab6c552e2596abd77", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b119cc6341670ce24c840dab6c552e2596abd77/comments", "author": null, "committer": null, "parents": [{"sha": "64e92a2664338473268928c206f62ba397379601", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64e92a2664338473268928c206f62ba397379601", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64e92a2664338473268928c206f62ba397379601"}], "stats": {"total": 60, "additions": 38, "deletions": 22}, "files": [{"sha": "2f0f678389d51f1297d7310b54dadf1c50eb8fb3", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b119cc6341670ce24c840dab6c552e2596abd77/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b119cc6341670ce24c840dab6c552e2596abd77/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=7b119cc6341670ce24c840dab6c552e2596abd77", "patch": "@@ -1,3 +1,10 @@\n+2002-03-23  Toon Moene  <toon@moene.indiv.nluug.nl>\n+\n+\t* com.c (ffecom_check_size_overflow_): Add a test\n+\tso that arrays too large for 32-bit byte-offset\n+\taddressing get caught.\n+\t* news.texi: Document the fixing of this problem.\n+\n Sat Mar 23 11:18:17 2002  Andrew Cagney  <ac131313@redhat.com>\n \n \t* invoke.texi (Warning Options): Mention -Wswitch-default."}, {"sha": "f698ae9e3cfe9e4ff82f047e325e5d7d1f7cfcba", "filename": "gcc/f/com.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b119cc6341670ce24c840dab6c552e2596abd77/gcc%2Ff%2Fcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b119cc6341670ce24c840dab6c552e2596abd77/gcc%2Ff%2Fcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.c?ref=7b119cc6341670ce24c840dab6c552e2596abd77", "patch": "@@ -2262,8 +2262,13 @@ ffecom_check_size_overflow_ (ffesymbol s, tree type, bool dummy)\n   if (TREE_CODE (TYPE_SIZE (type)) != INTEGER_CST)\n     return type;\n \n+  /* An array is too large if size is negative or the type_size overflows\n+     or its \"upper half\" is larger than 3 (which would make the signed\n+     byte size and offset computations overflow).  */\n+\n   if ((tree_int_cst_sgn (TYPE_SIZE (type)) < 0)\n-      || (!dummy && TREE_OVERFLOW (TYPE_SIZE (type))))\n+      || (!dummy && (TREE_INT_CST_HIGH (TYPE_SIZE (type)) > 3\n+\t             || TREE_OVERFLOW (TYPE_SIZE (type)))))\n     {\n       ffebad_start (FFEBAD_ARRAY_LARGE);\n       ffebad_string (ffesymbol_text (s));"}, {"sha": "a00efe33afcb2a87bf936c84fd56415d1bb44dbb", "filename": "gcc/f/news.texi", "status": "modified", "additions": 25, "deletions": 21, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b119cc6341670ce24c840dab6c552e2596abd77/gcc%2Ff%2Fnews.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b119cc6341670ce24c840dab6c552e2596abd77/gcc%2Ff%2Fnews.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fnews.texi?ref=7b119cc6341670ce24c840dab6c552e2596abd77", "patch": "@@ -10,7 +10,7 @@\n @c in the standalone derivations of this file (e.g. NEWS).\n @set copyrights-news 1995,1996,1997,1998,1999,2000,2001,2002\n \n-@set last-update-news 2002-02-13\n+@set last-update-news 2002-03-23\n \n @include root.texi\n \n@@ -157,26 +157,30 @@ The following information was last updated on @value{last-update-news}:\n @itemize @bullet\n @item\n Problem Reports fixed (in chronological order of submission):\n-@enumerate\n-@item\n- 947 Data statement initialization with subscript of kind INTEGER*2\n-@item\n-3743 Reference to intrinsic `ISHFT' invalid\n-@item\n-3807 Function BESJN(integer,double) problems\n-@item\n-3957 g77 -pipe -xf77-cpp-input sends output to stdout\n-@item\n-4279 g77 -h\" gives bogus output\n-@item\n-4752 g77 -v -c -xf77-version /dev/null -xnone causes ice\n-@item\n-4885 BACKSPACE example that doesn't work as of gcc/g77-3.0.x\n-@item\n-5122 g77 rejects accepted use of INTEGER*2 as type of DATA statement loop index\n-@item\n-5473 ICE on BESJN(integer*8,real)\n-@end enumerate\n+@table @code\n+@item 947\n+Data statement initialization with subscript of kind INTEGER*2\n+@item 3743\n+Reference to intrinsic `ISHFT' invalid\n+@item 3807\n+Function BESJN(integer,double) problems\n+@item 3957\n+g77 -pipe -xf77-cpp-input sends output to stdout\n+@item 4279\n+g77 -h\" gives bogus output\n+@item 4730\n+ICE on valid input using CALL EXIT(%VAL(...))\n+@item 4752\n+g77 -v -c -xf77-version /dev/null -xnone causes ice\n+@item 4885\n+BACKSPACE example that doesn't work as of gcc/g77-3.0.x\n+@item 5122\n+g77 rejects accepted use of INTEGER*2 as type of DATA statement loop index\n+@item 5397\n+ICE on compiling source with 540 000 000 REAL array\n+@item 5473\n+ICE on BESJN(integer*8,real)\n+@end table\n \n @item\n @command{g77} now has its man page generated from the texinfo documentation,"}]}