{"sha": "b134cab0cfb4283b3b5581d81ae777d684af82a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjEzNGNhYjBjZmI0MjgzYjNiNTU4MWQ4MWFlNzc3ZDY4NGFmODJhOQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-09-25T13:53:04Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-09-25T13:53:04Z"}, "message": "PR c++/91877 - ICE with converting member of packed struct.\n\n\t* call.c (convert_like_real): Use similar_type_p in an assert.\n\n\t* g++.dg/conversion/packed1.C: New test.\n\nFrom-SVN: r276127", "tree": {"sha": "9950f741bf6cd510226d0aac3214475bfaf14a29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9950f741bf6cd510226d0aac3214475bfaf14a29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b134cab0cfb4283b3b5581d81ae777d684af82a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b134cab0cfb4283b3b5581d81ae777d684af82a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b134cab0cfb4283b3b5581d81ae777d684af82a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b134cab0cfb4283b3b5581d81ae777d684af82a9/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9a3afc3564b36fb34826899a345a9c35b1c53e39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a3afc3564b36fb34826899a345a9c35b1c53e39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a3afc3564b36fb34826899a345a9c35b1c53e39"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "1d30cef717e2b7170c2f89bd54546a198e663a38", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b134cab0cfb4283b3b5581d81ae777d684af82a9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b134cab0cfb4283b3b5581d81ae777d684af82a9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b134cab0cfb4283b3b5581d81ae777d684af82a9", "patch": "@@ -1,3 +1,8 @@\n+2019-09-25  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/91877 - ICE with converting member of packed struct.\n+\t* call.c (convert_like_real): Use similar_type_p in an assert.\n+\n 2019-09-25  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* name-lookup.c (check_extern_c_conflict): Use DECL_SOURCE_LOCATION."}, {"sha": "45b984ecb1185497361d5a4e424ab0fc7b4f8230", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b134cab0cfb4283b3b5581d81ae777d684af82a9/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b134cab0cfb4283b3b5581d81ae777d684af82a9/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=b134cab0cfb4283b3b5581d81ae777d684af82a9", "patch": "@@ -7382,8 +7382,7 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n \t    tree type = TREE_TYPE (ref_type);\n \t    cp_lvalue_kind lvalue = lvalue_kind (expr);\n \n-\t    gcc_assert (same_type_ignoring_top_level_qualifiers_p\n-\t\t\t(type, next_conversion (convs)->type));\n+\t    gcc_assert (similar_type_p (type, next_conversion (convs)->type));\n \t    if (!CP_TYPE_CONST_NON_VOLATILE_P (type)\n \t\t&& !TYPE_REF_IS_RVALUE (ref_type))\n \t      {"}, {"sha": "8830baa3abaef06b8318eb67fd7c64d155600fd3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b134cab0cfb4283b3b5581d81ae777d684af82a9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b134cab0cfb4283b3b5581d81ae777d684af82a9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b134cab0cfb4283b3b5581d81ae777d684af82a9", "patch": "@@ -1,3 +1,8 @@\n+2019-09-25  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/91877 - ICE with converting member of packed struct.\n+\t* g++.dg/conversion/packed1.C: New test.\n+\n 2019-09-25  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/91896"}, {"sha": "c4be930bc19e27852fef5de9f3cee16f039e27eb", "filename": "gcc/testsuite/g++.dg/conversion/packed1.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b134cab0cfb4283b3b5581d81ae777d684af82a9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fpacked1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b134cab0cfb4283b3b5581d81ae777d684af82a9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fpacked1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fpacked1.C?ref=b134cab0cfb4283b3b5581d81ae777d684af82a9", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/91877 - ICE with converting member of packed struct.\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-fpack-struct\" }\n+\n+template <typename a> class b {\n+public:\n+  b(const a &);\n+};\n+struct {\n+  int *c;\n+} d;\n+void e() { b<const int *>(d.c); }"}]}