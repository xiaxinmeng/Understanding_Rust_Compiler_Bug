{"sha": "7ed571892e5a8d10c14a674e38b980f60115ceb6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2VkNTcxODkyZTVhOGQxMGMxNGE2NzRlMzhiOTgwZjYwMTE1Y2ViNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-04T09:55:01Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-04T09:55:01Z"}, "message": "[multiple changes]\n\n2014-08-04  Robert Dewar  <dewar@adacore.com>\n\n\t* prj-proc.adb, prj-part.adb, prj-strt.adb, prj.adb, prj.ads,\n\tprj-attr.adb, prj-attr.ads: Minor reformatting.\n\n2014-08-04  Yannick Moy  <moy@adacore.com>\n\n\t* expander.adb (Expand): Always perform special\n\texpansion in GNATprove mode, even when doing pre-analysis.\n\n2014-08-04  Thomas Quinot  <quinot@adacore.com>\n\n\t* repinfo.adb (List_Scalar_Storage_Order): List bit order if\n\tnot default. Also list bit order if SSO is specified. Do not\n\tassume that bit order is always equal to scalar storage order.\n\n2014-08-04  Thomas Quinot  <quinot@adacore.com>\n\n\t* freeze.adb (Set_SSO_From_Default): Do not set scalar storage\n\torder to reverse SSO for a type that has an explicit native\n\tBit_Order.\n\n2014-08-04  Doug Rupp  <rupp@adacore.com>\n\n\t* cal.c: Macro check for VxWorks7.\n\t* init.c (getpid): Likewise.\n\t* mkdir.c (__gnat_mkdir): Likewise.\n\t* sysdep.c (__gnat_is_file_not_found_error): Likewise.\n\n2014-08-04  Gary Dismukes  <dismukes@adacore.com>\n\n\t* exp_ch3.adb (Expand_N_Object_Declaration): Inhibit generation\n\tof an invariant check in the case where No_Initialization is set,\n\tsince the object is uninitialized.\n\n2014-08-04  Thomas Quinot  <quinot@adacore.com>\n\n\t* snames.ads-tmpl (Default_Scalar_Storage_Order): Now an attribute\n\tname, in addition to a pragma name.\n\t* snames.adb-tmpl (Get_Pragma_Id, Is_Configuration_Pragma_Name,\n\tIs_Pragma_Name): Adjust accordingly.\n\t* sem_attr.ads, sem_attr.adb, exp_attr.adb\n\t(Attribute_Default_Scalar_Storage_Order): Add handling of new\n\tattribute.\n\t* gnat_rm.texi: Document the above.\n\nFrom-SVN: r213549", "tree": {"sha": "552c948ac38795576c199f3d5e08b5c2057d4adb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/552c948ac38795576c199f3d5e08b5c2057d4adb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ed571892e5a8d10c14a674e38b980f60115ceb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ed571892e5a8d10c14a674e38b980f60115ceb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ed571892e5a8d10c14a674e38b980f60115ceb6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ed571892e5a8d10c14a674e38b980f60115ceb6/comments", "author": null, "committer": null, "parents": [{"sha": "af6478c843c106281461ed5fd93377e61716181d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af6478c843c106281461ed5fd93377e61716181d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af6478c843c106281461ed5fd93377e61716181d"}], "stats": {"total": 1038, "additions": 579, "deletions": 459}, "files": [{"sha": "61ccf821d37f94cb76a591aef7f35f570d4bf52e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7ed571892e5a8d10c14a674e38b980f60115ceb6", "patch": "@@ -1,3 +1,49 @@\n+2014-08-04  Robert Dewar  <dewar@adacore.com>\n+\n+\t* prj-proc.adb, prj-part.adb, prj-strt.adb, prj.adb, prj.ads,\n+\tprj-attr.adb, prj-attr.ads: Minor reformatting.\n+\n+2014-08-04  Yannick Moy  <moy@adacore.com>\n+\n+\t* expander.adb (Expand): Always perform special\n+\texpansion in GNATprove mode, even when doing pre-analysis.\n+\n+2014-08-04  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* repinfo.adb (List_Scalar_Storage_Order): List bit order if\n+\tnot default. Also list bit order if SSO is specified. Do not\n+\tassume that bit order is always equal to scalar storage order.\n+\n+2014-08-04  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* freeze.adb (Set_SSO_From_Default): Do not set scalar storage\n+\torder to reverse SSO for a type that has an explicit native\n+\tBit_Order.\n+\n+2014-08-04  Doug Rupp  <rupp@adacore.com>\n+\n+\t* cal.c: Macro check for VxWorks7.\n+\t* init.c (getpid): Likewise.\n+\t* mkdir.c (__gnat_mkdir): Likewise.\n+\t* sysdep.c (__gnat_is_file_not_found_error): Likewise.\n+\n+2014-08-04  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* exp_ch3.adb (Expand_N_Object_Declaration): Inhibit generation\n+\tof an invariant check in the case where No_Initialization is set,\n+\tsince the object is uninitialized.\n+\n+2014-08-04  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* snames.ads-tmpl (Default_Scalar_Storage_Order): Now an attribute\n+\tname, in addition to a pragma name.\n+\t* snames.adb-tmpl (Get_Pragma_Id, Is_Configuration_Pragma_Name,\n+\tIs_Pragma_Name): Adjust accordingly.\n+\t* sem_attr.ads, sem_attr.adb, exp_attr.adb\n+\t(Attribute_Default_Scalar_Storage_Order): Add handling of new\n+\tattribute.\n+\t* gnat_rm.texi: Document the above.\n+\n 2014-08-04  Arnaud Charlet  <charlet@adacore.com>\n \n \t* exp_util.adb (Check_Float_Op_Overflow): No-op in codepeer"}, {"sha": "a657286d53ed9b81c42edcc94cef9416057f5eb7", "filename": "gcc/ada/cal.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Fcal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Fcal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcal.c?ref=7ed571892e5a8d10c14a674e38b980f60115ceb6", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *          Copyright (C) 1992-2009, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2014, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -55,7 +55,7 @@ __gnat_duration_to_timeval (long sec, long usec, void *t)\n #ifdef __RTP__\n #include <time.h>\n #include <version.h>\n-#if (_WRS_VXWORKS_MINOR != 0)\n+#if (_WRS_VXWORKS_MAJOR == 7) || (_WRS_VXWORKS_MINOR != 0)\n #include <sys/time.h>\n #endif\n #else"}, {"sha": "f9c1745c99b052afffe32478632a330f59165a36", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=7ed571892e5a8d10c14a674e38b980f60115ceb6", "patch": "@@ -7080,6 +7080,7 @@ package body Exp_Attr is\n            Attribute_Class                        |\n            Attribute_Compiler_Version             |\n            Attribute_Default_Bit_Order            |\n+           Attribute_Default_Scalar_Storage_Order |\n            Attribute_Delta                        |\n            Attribute_Denorm                       |\n            Attribute_Digits                       |"}, {"sha": "e87a8404f8d6cf9a7c8324c705daba65dddbfd0b", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=7ed571892e5a8d10c14a674e38b980f60115ceb6", "patch": "@@ -5412,11 +5412,14 @@ package body Exp_Ch3 is\n          --  is raised, then the object will go out of scope. In the case where\n          --  an array object is initialized with an aggregate, the expression\n          --  is removed. Check flag Has_Init_Expression to avoid generating a\n-         --  junk invariant check.\n+         --  junk invariant check and flag No_Initialization to avoid checking\n+         --  an uninitialized object such as a compiler temporary used for an\n+         --  aggregate.\n \n          if Has_Invariants (Base_Typ)\n            and then Present (Invariant_Procedure (Base_Typ))\n            and then not Has_Init_Expression (N)\n+           and then not No_Initialization (N)\n          then\n             Insert_After (N,\n               Make_Invariant_Call (New_Occurrence_Of (Def_Id, Loc)));"}, {"sha": "ff1975955dc72dacd0657bcc5b8ab0c75fb8733f", "filename": "gcc/ada/expander.adb", "status": "modified", "additions": 236, "deletions": 243, "changes": 479, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Fexpander.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Fexpander.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexpander.adb?ref=7ed571892e5a8d10c14a674e38b980f60115ceb6", "patch": "@@ -83,6 +83,25 @@ package body Expander is\n           and then (Full_Analysis or else not Expander_Active)\n           and then not (Inside_A_Generic and then Expander_Active));\n \n+      --  The GNATprove_Mode flag indicates that a light expansion for formal\n+      --  verification should be used. This expansion is never done inside\n+      --  generics, because otherwise, this breaks the name resolution\n+      --  mechanism for generic instances.\n+\n+      if GNATprove_Mode then\n+         if not Inside_A_Generic then\n+            Expand_SPARK (N);\n+         end if;\n+\n+         Set_Analyzed (N, Full_Analysis);\n+\n+         --  Regular expansion is normally followed by special handling for\n+         --  transient scopes for unconstrained results, etc. but this is not\n+         --  needed, and in general cannot be done correctly, in this mode, so\n+         --  we are all done.\n+\n+         return;\n+\n       --  There are three reasons for the Expander_Active flag to be false\n \n       --  The first is when are not generating code. In this mode the\n@@ -91,11 +110,6 @@ package body Expander is\n       --  which case Full_Analysis = False. See the spec of Sem for more info\n       --  on this.\n \n-      --  Additionally, the GNATprove_Mode flag indicates that a light\n-      --  expansion for formal verification should be used. This expansion is\n-      --  never done inside generics, because otherwise, this breaks the name\n-      --  resolution mechanism for generic instances\n-\n       --  The second reason for the Expander_Active flag to be False is that\n       --  we are performing a pre-analysis. During pre-analysis all expansion\n       --  activity is turned off to make sure nodes are semantically decorated\n@@ -112,9 +126,7 @@ package body Expander is\n       --  given that the expansion actions that would normally process it will\n       --  not take place. This prevents cascaded errors due to stack mismatch.\n \n-      if not Expander_Active\n-        and (Inside_A_Generic or not Full_Analysis or not GNATprove_Mode)\n-      then\n+      elsif not Expander_Active then\n          Set_Analyzed (N, Full_Analysis);\n \n          if Serious_Errors_Detected > 0 and then Scope_Is_Transient then\n@@ -126,352 +138,333 @@ package body Expander is\n          return;\n \n       else\n-         Debug_A_Entry (\"expanding  \", N);\n-\n          begin\n-            --  In GNATprove mode we only need a very limited subset of\n-            --  the usual expansions. This limited subset is implemented\n-            --  in Expand_SPARK.\n-\n-            if GNATprove_Mode then\n-               Expand_SPARK (N);\n-               Set_Analyzed (N);\n-\n-               --  Regular expansion is normally followed by special handling\n-               --  for transient scopes for unconstrained results, etc. but\n-               --  this is not needed, and in general cannot be done correctly,\n-               --  in this mode, so we are all done.\n-\n-               return;\n-\n-            --  Here for normal non-SPARK mode\n+            Debug_A_Entry (\"expanding  \", N);\n \n-            else\n-               --  Processing depends on node kind. For full details on the\n-               --  expansion activity required in each case, see bodies of\n-               --  corresponding expand routines.\n+            --  Processing depends on node kind. For full details on the\n+            --  expansion activity required in each case, see bodies of\n+            --  corresponding expand routines.\n \n-               case Nkind (N) is\n+            case Nkind (N) is\n \n-                  when N_Abort_Statement =>\n-                     Expand_N_Abort_Statement (N);\n+               when N_Abort_Statement =>\n+                  Expand_N_Abort_Statement (N);\n \n-                  when N_Accept_Statement =>\n-                     Expand_N_Accept_Statement (N);\n+               when N_Accept_Statement =>\n+                  Expand_N_Accept_Statement (N);\n \n-                  when N_Aggregate =>\n-                     Expand_N_Aggregate (N);\n+               when N_Aggregate =>\n+                  Expand_N_Aggregate (N);\n \n-                  when N_Allocator =>\n-                     Expand_N_Allocator (N);\n+               when N_Allocator =>\n+                  Expand_N_Allocator (N);\n \n-                  when N_And_Then =>\n-                     Expand_N_And_Then (N);\n+               when N_And_Then =>\n+                  Expand_N_And_Then (N);\n \n-                  when N_Assignment_Statement =>\n-                     Expand_N_Assignment_Statement (N);\n+               when N_Assignment_Statement =>\n+                  Expand_N_Assignment_Statement (N);\n \n-                  when N_Asynchronous_Select =>\n-                     Expand_N_Asynchronous_Select (N);\n+               when N_Asynchronous_Select =>\n+                  Expand_N_Asynchronous_Select (N);\n \n-                  when N_Attribute_Definition_Clause =>\n-                     Expand_N_Attribute_Definition_Clause (N);\n+               when N_Attribute_Definition_Clause =>\n+                  Expand_N_Attribute_Definition_Clause (N);\n \n-                  when N_Attribute_Reference =>\n-                     Expand_N_Attribute_Reference (N);\n+               when N_Attribute_Reference =>\n+                  Expand_N_Attribute_Reference (N);\n \n-                  when N_Block_Statement =>\n-                     Expand_N_Block_Statement (N);\n+               when N_Block_Statement =>\n+                  Expand_N_Block_Statement (N);\n \n-                  when N_Case_Expression =>\n-                     Expand_N_Case_Expression (N);\n+               when N_Case_Expression =>\n+                  Expand_N_Case_Expression (N);\n \n-                  when N_Case_Statement =>\n-                     Expand_N_Case_Statement (N);\n+               when N_Case_Statement =>\n+                  Expand_N_Case_Statement (N);\n \n-                  when N_Conditional_Entry_Call =>\n-                     Expand_N_Conditional_Entry_Call (N);\n+               when N_Conditional_Entry_Call =>\n+                  Expand_N_Conditional_Entry_Call (N);\n \n-                  when N_Delay_Relative_Statement =>\n-                     Expand_N_Delay_Relative_Statement (N);\n+               when N_Delay_Relative_Statement =>\n+                  Expand_N_Delay_Relative_Statement (N);\n \n-                  when N_Delay_Until_Statement =>\n-                     Expand_N_Delay_Until_Statement (N);\n+               when N_Delay_Until_Statement =>\n+                  Expand_N_Delay_Until_Statement (N);\n \n-                  when N_Entry_Body =>\n-                     Expand_N_Entry_Body (N);\n+               when N_Entry_Body =>\n+                  Expand_N_Entry_Body (N);\n \n-                  when N_Entry_Call_Statement =>\n-                     Expand_N_Entry_Call_Statement (N);\n+               when N_Entry_Call_Statement =>\n+                  Expand_N_Entry_Call_Statement (N);\n \n-                  when N_Entry_Declaration =>\n-                     Expand_N_Entry_Declaration (N);\n+               when N_Entry_Declaration =>\n+                  Expand_N_Entry_Declaration (N);\n \n-                  when N_Exception_Declaration =>\n-                     Expand_N_Exception_Declaration (N);\n+               when N_Exception_Declaration =>\n+                  Expand_N_Exception_Declaration (N);\n \n-                  when N_Exception_Renaming_Declaration =>\n-                     Expand_N_Exception_Renaming_Declaration (N);\n+               when N_Exception_Renaming_Declaration =>\n+                  Expand_N_Exception_Renaming_Declaration (N);\n \n-                  when N_Exit_Statement =>\n-                     Expand_N_Exit_Statement (N);\n+               when N_Exit_Statement =>\n+                  Expand_N_Exit_Statement (N);\n \n-                  when N_Expanded_Name =>\n-                     Expand_N_Expanded_Name (N);\n+               when N_Expanded_Name =>\n+                  Expand_N_Expanded_Name (N);\n \n-                  when N_Explicit_Dereference =>\n-                     Expand_N_Explicit_Dereference (N);\n+               when N_Explicit_Dereference =>\n+                  Expand_N_Explicit_Dereference (N);\n \n-                  when N_Expression_With_Actions =>\n-                     Expand_N_Expression_With_Actions (N);\n+               when N_Expression_With_Actions =>\n+                  Expand_N_Expression_With_Actions (N);\n \n-                  when N_Extended_Return_Statement =>\n-                     Expand_N_Extended_Return_Statement (N);\n+               when N_Extended_Return_Statement =>\n+                  Expand_N_Extended_Return_Statement (N);\n \n-                  when N_Extension_Aggregate =>\n-                     Expand_N_Extension_Aggregate (N);\n+               when N_Extension_Aggregate =>\n+                  Expand_N_Extension_Aggregate (N);\n \n-                  when N_Free_Statement =>\n-                     Expand_N_Free_Statement (N);\n+               when N_Free_Statement =>\n+                  Expand_N_Free_Statement (N);\n \n-                  when N_Freeze_Entity =>\n-                     Expand_N_Freeze_Entity (N);\n+               when N_Freeze_Entity =>\n+                  Expand_N_Freeze_Entity (N);\n \n-                  when N_Full_Type_Declaration =>\n-                     Expand_N_Full_Type_Declaration (N);\n+               when N_Full_Type_Declaration =>\n+                  Expand_N_Full_Type_Declaration (N);\n \n-                  when N_Function_Call =>\n-                     Expand_N_Function_Call (N);\n+               when N_Function_Call =>\n+                  Expand_N_Function_Call (N);\n \n-                  when N_Generic_Instantiation =>\n-                     Expand_N_Generic_Instantiation (N);\n+               when N_Generic_Instantiation =>\n+                  Expand_N_Generic_Instantiation (N);\n \n-                  when N_Goto_Statement =>\n-                     Expand_N_Goto_Statement (N);\n+               when N_Goto_Statement =>\n+                  Expand_N_Goto_Statement (N);\n \n-                  when N_Handled_Sequence_Of_Statements =>\n-                     Expand_N_Handled_Sequence_Of_Statements (N);\n+               when N_Handled_Sequence_Of_Statements =>\n+                  Expand_N_Handled_Sequence_Of_Statements (N);\n \n-                  when N_Identifier =>\n-                     Expand_N_Identifier (N);\n+               when N_Identifier =>\n+                  Expand_N_Identifier (N);\n \n-                  when N_If_Expression =>\n-                     Expand_N_If_Expression (N);\n+               when N_If_Expression =>\n+                  Expand_N_If_Expression (N);\n \n-                  when N_Indexed_Component =>\n-                     Expand_N_Indexed_Component (N);\n+               when N_Indexed_Component =>\n+                  Expand_N_Indexed_Component (N);\n \n-                  when N_If_Statement =>\n-                     Expand_N_If_Statement (N);\n+               when N_If_Statement =>\n+                  Expand_N_If_Statement (N);\n \n-                  when N_In =>\n-                     Expand_N_In (N);\n+               when N_In =>\n+                  Expand_N_In (N);\n \n-                  when N_Loop_Statement =>\n-                     Expand_N_Loop_Statement (N);\n+               when N_Loop_Statement =>\n+                  Expand_N_Loop_Statement (N);\n \n-                  when N_Not_In =>\n-                     Expand_N_Not_In (N);\n+               when N_Not_In =>\n+                  Expand_N_Not_In (N);\n \n-                  when N_Null =>\n-                     Expand_N_Null (N);\n+               when N_Null =>\n+                  Expand_N_Null (N);\n \n-                  when N_Object_Declaration =>\n-                     Expand_N_Object_Declaration (N);\n+               when N_Object_Declaration =>\n+                  Expand_N_Object_Declaration (N);\n \n-                  when N_Object_Renaming_Declaration =>\n-                     Expand_N_Object_Renaming_Declaration (N);\n+               when N_Object_Renaming_Declaration =>\n+                  Expand_N_Object_Renaming_Declaration (N);\n \n-                  when N_Op_Add =>\n-                     Expand_N_Op_Add (N);\n+               when N_Op_Add =>\n+                  Expand_N_Op_Add (N);\n \n-                  when N_Op_Abs =>\n-                     Expand_N_Op_Abs (N);\n+               when N_Op_Abs =>\n+                  Expand_N_Op_Abs (N);\n \n-                  when N_Op_And =>\n-                     Expand_N_Op_And (N);\n+               when N_Op_And =>\n+                  Expand_N_Op_And (N);\n \n-                  when N_Op_Concat =>\n-                     Expand_N_Op_Concat (N);\n+               when N_Op_Concat =>\n+                  Expand_N_Op_Concat (N);\n \n-                  when N_Op_Divide =>\n-                     Expand_N_Op_Divide (N);\n+               when N_Op_Divide =>\n+                  Expand_N_Op_Divide (N);\n \n-                  when N_Op_Eq =>\n-                     Expand_N_Op_Eq (N);\n+               when N_Op_Eq =>\n+                  Expand_N_Op_Eq (N);\n \n-                  when N_Op_Expon =>\n-                     Expand_N_Op_Expon (N);\n+               when N_Op_Expon =>\n+                  Expand_N_Op_Expon (N);\n \n-                  when N_Op_Ge =>\n-                     Expand_N_Op_Ge (N);\n+               when N_Op_Ge =>\n+                  Expand_N_Op_Ge (N);\n \n-                  when N_Op_Gt =>\n-                     Expand_N_Op_Gt (N);\n+               when N_Op_Gt =>\n+                  Expand_N_Op_Gt (N);\n \n-                  when N_Op_Le =>\n-                     Expand_N_Op_Le (N);\n+               when N_Op_Le =>\n+                  Expand_N_Op_Le (N);\n \n-                  when N_Op_Lt =>\n-                     Expand_N_Op_Lt (N);\n+               when N_Op_Lt =>\n+                  Expand_N_Op_Lt (N);\n \n-                  when N_Op_Minus =>\n-                     Expand_N_Op_Minus (N);\n+               when N_Op_Minus =>\n+                  Expand_N_Op_Minus (N);\n \n-                  when N_Op_Mod =>\n-                     Expand_N_Op_Mod (N);\n+               when N_Op_Mod =>\n+                  Expand_N_Op_Mod (N);\n \n-                  when N_Op_Multiply =>\n-                     Expand_N_Op_Multiply (N);\n+               when N_Op_Multiply =>\n+                  Expand_N_Op_Multiply (N);\n \n-                  when N_Op_Ne =>\n-                     Expand_N_Op_Ne (N);\n+               when N_Op_Ne =>\n+                  Expand_N_Op_Ne (N);\n \n-                  when N_Op_Not =>\n-                     Expand_N_Op_Not (N);\n+               when N_Op_Not =>\n+                  Expand_N_Op_Not (N);\n \n-                  when N_Op_Or =>\n-                     Expand_N_Op_Or (N);\n+               when N_Op_Or =>\n+                  Expand_N_Op_Or (N);\n \n-                  when N_Op_Plus =>\n-                     Expand_N_Op_Plus (N);\n+               when N_Op_Plus =>\n+                  Expand_N_Op_Plus (N);\n \n-                  when N_Op_Rem =>\n-                     Expand_N_Op_Rem (N);\n+               when N_Op_Rem =>\n+                  Expand_N_Op_Rem (N);\n \n-                  when N_Op_Rotate_Left =>\n-                     Expand_N_Op_Rotate_Left (N);\n+               when N_Op_Rotate_Left =>\n+                  Expand_N_Op_Rotate_Left (N);\n \n-                  when N_Op_Rotate_Right =>\n-                     Expand_N_Op_Rotate_Right (N);\n+               when N_Op_Rotate_Right =>\n+                  Expand_N_Op_Rotate_Right (N);\n \n-                  when N_Op_Shift_Left =>\n-                     Expand_N_Op_Shift_Left (N);\n+               when N_Op_Shift_Left =>\n+                  Expand_N_Op_Shift_Left (N);\n \n-                  when N_Op_Shift_Right =>\n-                     Expand_N_Op_Shift_Right (N);\n+               when N_Op_Shift_Right =>\n+                  Expand_N_Op_Shift_Right (N);\n \n-                  when N_Op_Shift_Right_Arithmetic =>\n-                     Expand_N_Op_Shift_Right_Arithmetic (N);\n+               when N_Op_Shift_Right_Arithmetic =>\n+                  Expand_N_Op_Shift_Right_Arithmetic (N);\n \n-                  when N_Op_Subtract =>\n-                     Expand_N_Op_Subtract (N);\n+               when N_Op_Subtract =>\n+                  Expand_N_Op_Subtract (N);\n \n-                  when N_Op_Xor =>\n-                     Expand_N_Op_Xor (N);\n+               when N_Op_Xor =>\n+                  Expand_N_Op_Xor (N);\n \n-                  when N_Or_Else =>\n-                     Expand_N_Or_Else (N);\n+               when N_Or_Else =>\n+                  Expand_N_Or_Else (N);\n \n-                  when N_Package_Body =>\n-                     Expand_N_Package_Body (N);\n+               when N_Package_Body =>\n+                  Expand_N_Package_Body (N);\n \n-                  when N_Package_Declaration =>\n-                     Expand_N_Package_Declaration (N);\n+               when N_Package_Declaration =>\n+                  Expand_N_Package_Declaration (N);\n \n-                  when N_Package_Renaming_Declaration =>\n-                     Expand_N_Package_Renaming_Declaration (N);\n+               when N_Package_Renaming_Declaration =>\n+                  Expand_N_Package_Renaming_Declaration (N);\n \n-                  when N_Subprogram_Renaming_Declaration =>\n-                     Expand_N_Subprogram_Renaming_Declaration (N);\n+               when N_Subprogram_Renaming_Declaration =>\n+                  Expand_N_Subprogram_Renaming_Declaration (N);\n \n-                  when N_Pragma =>\n-                     Expand_N_Pragma (N);\n+               when N_Pragma =>\n+                  Expand_N_Pragma (N);\n \n-                  when N_Procedure_Call_Statement =>\n-                     Expand_N_Procedure_Call_Statement (N);\n+               when N_Procedure_Call_Statement =>\n+                  Expand_N_Procedure_Call_Statement (N);\n \n-                  when N_Protected_Type_Declaration =>\n-                     Expand_N_Protected_Type_Declaration (N);\n+               when N_Protected_Type_Declaration =>\n+                  Expand_N_Protected_Type_Declaration (N);\n \n-                  when N_Protected_Body =>\n-                     Expand_N_Protected_Body (N);\n+               when N_Protected_Body =>\n+                  Expand_N_Protected_Body (N);\n \n-                  when N_Qualified_Expression =>\n-                     Expand_N_Qualified_Expression (N);\n+               when N_Qualified_Expression =>\n+                  Expand_N_Qualified_Expression (N);\n \n-                  when N_Quantified_Expression  =>\n-                     Expand_N_Quantified_Expression (N);\n+               when N_Quantified_Expression  =>\n+                  Expand_N_Quantified_Expression (N);\n \n-                  when N_Raise_Statement =>\n-                     Expand_N_Raise_Statement (N);\n+               when N_Raise_Statement =>\n+                  Expand_N_Raise_Statement (N);\n \n-                  when N_Raise_Constraint_Error =>\n-                     Expand_N_Raise_Constraint_Error (N);\n+               when N_Raise_Constraint_Error =>\n+                  Expand_N_Raise_Constraint_Error (N);\n \n-                  when N_Raise_Expression =>\n-                     Expand_N_Raise_Expression (N);\n+               when N_Raise_Expression =>\n+                  Expand_N_Raise_Expression (N);\n \n-                  when N_Raise_Program_Error =>\n-                     Expand_N_Raise_Program_Error (N);\n+               when N_Raise_Program_Error =>\n+                  Expand_N_Raise_Program_Error (N);\n \n-                  when N_Raise_Storage_Error =>\n-                     Expand_N_Raise_Storage_Error (N);\n+               when N_Raise_Storage_Error =>\n+                  Expand_N_Raise_Storage_Error (N);\n \n-                  when N_Real_Literal =>\n-                     Expand_N_Real_Literal (N);\n+               when N_Real_Literal =>\n+                  Expand_N_Real_Literal (N);\n \n-                  when N_Record_Representation_Clause =>\n-                     Expand_N_Record_Representation_Clause (N);\n+               when N_Record_Representation_Clause =>\n+                  Expand_N_Record_Representation_Clause (N);\n \n-                  when N_Requeue_Statement =>\n-                     Expand_N_Requeue_Statement (N);\n+               when N_Requeue_Statement =>\n+                  Expand_N_Requeue_Statement (N);\n \n-                  when N_Simple_Return_Statement =>\n-                     Expand_N_Simple_Return_Statement (N);\n+               when N_Simple_Return_Statement =>\n+                  Expand_N_Simple_Return_Statement (N);\n \n-                  when N_Selected_Component =>\n-                     Expand_N_Selected_Component (N);\n+               when N_Selected_Component =>\n+                  Expand_N_Selected_Component (N);\n \n-                  when N_Selective_Accept =>\n-                     Expand_N_Selective_Accept (N);\n+               when N_Selective_Accept =>\n+                  Expand_N_Selective_Accept (N);\n \n-                  when N_Single_Task_Declaration =>\n-                     Expand_N_Single_Task_Declaration (N);\n+               when N_Single_Task_Declaration =>\n+                  Expand_N_Single_Task_Declaration (N);\n \n-                  when N_Slice =>\n-                     Expand_N_Slice (N);\n+               when N_Slice =>\n+                  Expand_N_Slice (N);\n \n-                  when N_Subtype_Indication =>\n-                     Expand_N_Subtype_Indication (N);\n+               when N_Subtype_Indication =>\n+                  Expand_N_Subtype_Indication (N);\n \n-                  when N_Subprogram_Body =>\n-                     Expand_N_Subprogram_Body (N);\n+               when N_Subprogram_Body =>\n+                  Expand_N_Subprogram_Body (N);\n \n-                  when N_Subprogram_Body_Stub =>\n-                     Expand_N_Subprogram_Body_Stub (N);\n+               when N_Subprogram_Body_Stub =>\n+                  Expand_N_Subprogram_Body_Stub (N);\n \n-                  when N_Subprogram_Declaration =>\n-                     Expand_N_Subprogram_Declaration (N);\n+               when N_Subprogram_Declaration =>\n+                  Expand_N_Subprogram_Declaration (N);\n \n-                  when N_Task_Body =>\n-                     Expand_N_Task_Body (N);\n+               when N_Task_Body =>\n+                  Expand_N_Task_Body (N);\n \n-                  when N_Task_Type_Declaration =>\n-                     Expand_N_Task_Type_Declaration (N);\n+               when N_Task_Type_Declaration =>\n+                  Expand_N_Task_Type_Declaration (N);\n \n-                  when N_Timed_Entry_Call =>\n-                     Expand_N_Timed_Entry_Call (N);\n+               when N_Timed_Entry_Call =>\n+                  Expand_N_Timed_Entry_Call (N);\n \n-                  when N_Type_Conversion =>\n-                     Expand_N_Type_Conversion (N);\n+               when N_Type_Conversion =>\n+                  Expand_N_Type_Conversion (N);\n \n-                  when N_Unchecked_Expression =>\n-                     Expand_N_Unchecked_Expression (N);\n+               when N_Unchecked_Expression =>\n+                  Expand_N_Unchecked_Expression (N);\n \n-                  when N_Unchecked_Type_Conversion =>\n-                     Expand_N_Unchecked_Type_Conversion (N);\n+               when N_Unchecked_Type_Conversion =>\n+                  Expand_N_Unchecked_Type_Conversion (N);\n \n-                  when N_Variant_Part =>\n-                     Expand_N_Variant_Part (N);\n+               when N_Variant_Part =>\n+                  Expand_N_Variant_Part (N);\n \n                   --  For all other node kinds, no expansion activity required\n \n-                  when others =>\n-                     null;\n+               when others =>\n+                  null;\n \n-               end case;\n-            end if;\n+            end case;\n \n          exception\n             when RE_Not_Available =>"}, {"sha": "68300e1a4b97c5b5cb9a4a157d3c394364b88676", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=7ed571892e5a8d10c14a674e38b980f60115ceb6", "patch": "@@ -3263,7 +3263,7 @@ package body Freeze is\n                  (\"\\??since no component clauses were specified\", ADC);\n \n             --  Here is where we do the processing to adjust component clauses\n-            --  for reversed bit order.\n+            --  for reversed bit order, when not using reverse SSO.\n \n             elsif Reverse_Bit_Order (Rec)\n               and then not Reverse_Storage_Order (Rec)\n@@ -7454,16 +7454,32 @@ package body Freeze is\n       if (Is_Record_Type (T) or else Is_Array_Type (T))\n         and then Is_Base_Type (T)\n       then\n-         if (Bytes_Big_Endian and then SSO_Set_Low_By_Default (T))\n-              or else\n-            ((not Bytes_Big_Endian) and then SSO_Set_High_By_Default (T))\n+         if ((Bytes_Big_Endian and then SSO_Set_Low_By_Default (T))\n+               or else\n+             ((not Bytes_Big_Endian) and then SSO_Set_High_By_Default (T)))\n+\n+           --  For a record type, if native bit order is specified explicitly,\n+           --  then never set reverse SSO from default.\n+\n+           and then not\n+             (Is_Record_Type (T)\n+               and then Has_Rep_Item (T, Name_Bit_Order)\n+               and then not Reverse_Bit_Order (T))\n          then\n             --  If flags cause reverse storage order, then set the result. Note\n             --  that we would have ignored the pragma setting the non default\n             --  storage order in any case, hence the assertion at this point.\n \n             pragma Assert (Support_Nondefault_SSO_On_Target);\n             Set_Reverse_Storage_Order (T);\n+\n+            --  For a record type, also set reversed bit order. Note that if\n+            --  a bit order has been specified explicitly, then this is a\n+            --  no-op, as per the guard above.\n+\n+            if Is_Record_Type (T) then\n+               Set_Reverse_Bit_Order (T);\n+            end if;\n          end if;\n       end if;\n    end Set_SSO_From_Default;"}, {"sha": "cf44edb6c02e07b9fa1f0f8b45a53120f4938db9", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=7ed571892e5a8d10c14a674e38b980f60115ceb6", "patch": "@@ -351,6 +351,7 @@ Implementation Defined Attributes\n * Attribute Compiler_Version::\n * Attribute Constrained::\n * Attribute Default_Bit_Order::\n+* Attribute Default_Scalar_Storage_Order::\n * Attribute Descriptor_Size::\n * Attribute Elaborated::\n * Attribute Elab_Body::\n@@ -8531,6 +8532,7 @@ consideration, you should minimize the use of these attributes.\n * Attribute Compiler_Version::\n * Attribute Constrained::\n * Attribute Default_Bit_Order::\n+* Attribute Default_Scalar_Storage_Order::\n * Attribute Descriptor_Size::\n * Attribute Elaborated::\n * Attribute Elab_Body::\n@@ -8781,6 +8783,18 @@ as a @code{Pos} value (0 for @code{High_Order_First}, 1 for\n @code{Low_Order_First}).  This is used to construct the definition of\n @code{Default_Bit_Order} in package @code{System}.\n \n+@node Attribute Default_Scalar_Storage_Order\n+@unnumberedsec Attribute Default_Scalar_Storage_Order\n+@cindex Big endian\n+@cindex Little endian\n+@findex Default_Scalar_Storage_Order\n+@noindent\n+@code{Standard'Default_Scalar_Storage_Order} (@code{Standard} is the only\n+permissible prefix), provides the current value of the default scalar storage\n+order (as specified using pragma @code{Default_Scalar_Storage_Order}, or\n+equal to @code{Default_Bit_Order} if unspecified) as a\n+@code{System.Bit_Order} value. This is a static attribute.\n+\n @node Attribute Descriptor_Size\n @unnumberedsec Attribute Descriptor_Size\n @cindex Descriptor"}, {"sha": "ad8023594efe5117023997a974d5226099e20f7a", "filename": "gcc/ada/init.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=7ed571892e5a8d10c14a674e38b980f60115ceb6", "patch": "@@ -1730,7 +1730,7 @@ __gnat_inum_to_ivec (int num)\n }\n #endif\n \n-#if !defined(__alpha_vxworks) && (_WRS_VXWORKS_MAJOR != 6) && !defined(__RTP__)\n+#if !defined(__alpha_vxworks) && ((_WRS_VXWORKS_MAJOR != 6) && (_WRS_VXWORKS_MAJOR != 7)) && !defined(__RTP__)\n \n /* getpid is used by s-parint.adb, but is not defined by VxWorks, except\n    on Alpha VxWorks and VxWorks 6.x (including RTPs).  */"}, {"sha": "bdb0fa8f7b91f80eb0cddae93f2663c2f8e9d25f", "filename": "gcc/ada/mkdir.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Fmkdir.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Fmkdir.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmkdir.c?ref=7ed571892e5a8d10c14a674e38b980f60115ceb6", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *             Copyright (C) 2002-2012, Free Software Foundation, Inc.      *\n+ *             Copyright (C) 2002-2014, Free Software Foundation, Inc.      *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -60,7 +60,7 @@\n int\n __gnat_mkdir (char *dir_name, int encoding ATTRIBUTE_UNUSED)\n {\n-#if defined (__vxworks) && !(defined (__RTP__) && (_WRS_VXWORKS_MINOR != 0))\n+#if defined (__vxworks) && !(defined (__RTP__) && ((_WRS_VXWORKS_MAJOR == 7) || (_WRS_VXWORKS_MINOR != 0)))\n   return mkdir (dir_name);\n #elif defined (__MINGW32__)\n   TCHAR wname [GNAT_MAX_PATH_LEN + 2];"}, {"sha": "d515c01a1b202f9e462e7c45391c28b03b50fdd9", "filename": "gcc/ada/prj-attr.adb", "status": "modified", "additions": 14, "deletions": 15, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Fprj-attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Fprj-attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-attr.adb?ref=7ed571892e5a8d10c14a674e38b980f60115ceb6", "patch": "@@ -34,7 +34,7 @@ package body Prj.Attr is\n \n    --  Data for predefined attributes and packages\n \n-   --  Names are in lower case and end with '#' or 'D'.\n+   --  Names are in lower case and end with '#' or 'D'\n \n    --  Package names are preceded by 'P'\n \n@@ -55,16 +55,17 @@ package body Prj.Attr is\n    --    'c' same as 'b', with optional index\n \n    --  The third optional letter is\n-   --     'R' to indicate that the attribute is read-only\n-   --     'O' to indicate that others is allowed as an index for an associative\n-   --     array\n+   --     'R' the attribute is read-only\n+   --     'O' others is allowed as an index for an associative array\n \n-   --  If the character after the name in lower case letter is a 'D'\n-   --  (for default), then 'D' must be followed by an enumeration value of type\n+   --  If the character after the name in lower case letter is a 'D' (for\n+   --  default), then 'D' must be followed by an enumeration value of type\n    --  Attribute_Default_Value, followed by a '#'.\n+\n    --  Example:\n    --    \"SVobject_dirDdot_value#\"\n-   --  End is indicated by two consecutive '#'\n+\n+   --  End is indicated by two consecutive '#'.\n \n    Initialization_Data : constant String :=\n \n@@ -647,8 +648,8 @@ package body Prj.Attr is\n             Finish := Start;\n \n             while Initialization_Data (Finish) /= '#'\n-              and then\n-                Initialization_Data (Finish) /= 'D'\n+                    and then\n+                  Initialization_Data (Finish) /= 'D'\n             loop\n                Finish := Finish + 1;\n             end loop;\n@@ -658,20 +659,18 @@ package body Prj.Attr is\n \n             if Initialization_Data (Finish) = 'D' then\n                Start := Finish + 1;\n-               Finish := Start;\n \n+               Finish := Start;\n                while Initialization_Data (Finish) /= '#' loop\n                   Finish := Finish + 1;\n                end loop;\n \n                declare\n                   Default_Name : constant String :=\n-                    Initialization_Data (Start .. Finish - 1);\n+                                   Initialization_Data (Start .. Finish - 1);\n                   pragma Unsuppress (All_Checks);\n-\n                begin\n                   Default := Attribute_Default_Value'Value (Default_Name);\n-\n                exception\n                   when Constraint_Error =>\n                      Osint.Fail\n@@ -823,8 +822,8 @@ package body Prj.Attr is\n       In_Package         : Package_Node_Id;\n       Attr_Kind          : Defined_Attribute_Kind;\n       Var_Kind           : Defined_Variable_Kind;\n-      Index_Is_File_Name : Boolean := False;\n-      Opt_Index          : Boolean := False;\n+      Index_Is_File_Name : Boolean                 := False;\n+      Opt_Index          : Boolean                 := False;\n       Default            : Attribute_Default_Value := Empty_Value)\n    is\n       Attr_Name       : Name_Id;"}, {"sha": "e821a8249dc4d4fc7799a36b8290933001371772", "filename": "gcc/ada/prj-attr.ads", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Fprj-attr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Fprj-attr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-attr.ads?ref=7ed571892e5a8d10c14a674e38b980f60115ceb6", "patch": "@@ -109,7 +109,7 @@ package Prj.Attr is\n \n       Default : Attribute_Default_Value := Empty_Value;\n       --  The value of the attribute when referenced if the attribute has not\n-      --  been (yet) declared.\n+      --  yet been declared.\n \n    end record;\n    --  Name and characteristics of an attribute in a package registered\n@@ -197,8 +197,7 @@ package Prj.Attr is\n    function Attribute_Default_Of\n      (Attribute : Attribute_Node_Id) return Attribute_Default_Value;\n    --  Returns the default of the attribute, Read_Only_Value for read only\n-   --  attributes, Empty_Value when ndefault not specified or specified\n-   --  value.\n+   --  attributes, Empty_Value when default not specified, or specified value.\n \n    function Optional_Index_Of (Attribute : Attribute_Node_Id) return Boolean;\n    --  Returns True if Attribute is a known attribute and may have an\n@@ -241,14 +240,14 @@ package Prj.Attr is\n       In_Package         : Package_Node_Id;\n       Attr_Kind          : Defined_Attribute_Kind;\n       Var_Kind           : Defined_Variable_Kind;\n-      Index_Is_File_Name : Boolean := False;\n-      Opt_Index          : Boolean := False;\n+      Index_Is_File_Name : Boolean                 := False;\n+      Opt_Index          : Boolean                 := False;\n       Default            : Attribute_Default_Value := Empty_Value);\n    --  Add a new attribute to registered package In_Package. Fails if Name\n    --  (the attribute name) is empty, if In_Package is Empty_Package or if\n    --  the attribute name has a duplicate name. See definition of type\n    --  Attribute_Data above for the meaning of parameters Attr_Kind, Var_Kind,\n-   --  Index_Is_File_Name, Opt_Index and Default.\n+   --  Index_Is_File_Name, Opt_Index, and Default.\n \n    function Package_Node_Id_Of (Name : Name_Id) return Package_Node_Id;\n    --  Returns the package node id of the package with name Name. Returns"}, {"sha": "bc6a566e2ca293975cf4a5315df311721ed6607a", "filename": "gcc/ada/prj-part.adb", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Fprj-part.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Fprj-part.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.adb?ref=7ed571892e5a8d10c14a674e38b980f60115ceb6", "patch": "@@ -1813,11 +1813,11 @@ package body Prj.Part is\n                      --  with sources if it inherits sources from the project\n                      --  it extends.\n \n-                     if Project_Qualifier_Of\n-                         (Project, In_Tree) = Abstract_Project\n-                        and then\n-                         Project_Qualifier_Of\n-                           (Extended_Project, In_Tree) /= Abstract_Project\n+                     if Project_Qualifier_Of (Project, In_Tree) =\n+                                                           Abstract_Project\n+                       and then\n+                         Project_Qualifier_Of (Extended_Project, In_Tree) /=\n+                                                           Abstract_Project\n                      then\n                         Error_Msg\n                           (Env.Flags, \"an abstract project can only extend \" &\n@@ -1930,9 +1930,8 @@ package body Prj.Part is\n          Set_Project_Declaration_Of (Project, In_Tree, Project_Declaration);\n \n          if Present (Extended_Project)\n-           and then\n-             Project_Qualifier_Of\n-               (Extended_Project, In_Tree) /= Abstract_Project\n+           and then Project_Qualifier_Of (Extended_Project, In_Tree) /=\n+                                                        Abstract_Project\n          then\n             Set_Extending_Project_Of\n               (Project_Declaration_Of (Extended_Project, In_Tree), In_Tree,"}, {"sha": "1fd71fc5dfdd90b35edf479d047e2dd7b8c9f39b", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 43, "deletions": 44, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=7ed571892e5a8d10c14a674e38b980f60115ceb6", "patch": "@@ -896,56 +896,56 @@ package body Prj.Proc is\n                         The_Default : constant Attribute_Default_Value :=\n                           Default_Of\n                             (The_Current_Term, From_Project_Node_Tree);\n+\n                      begin\n                         case The_Variable.Kind is\n-                        when Undefined =>\n-                           null;\n-\n-                        when Single =>\n-                           case The_Default is\n-                              when Read_Only_Value =>\n-                                 null;\n-\n-                              when Empty_Value =>\n-                                 The_Variable.Value := Empty_String;\n-\n-                              when Dot_Value =>\n-                                 The_Variable.Value := Dot_String;\n-\n-                              when Object_Dir_Value =>\n-                                 From_Project_Node_Tree.Project_Nodes.Table\n-                                   (The_Current_Term).Name :=\n-                                   Snames.Name_Object_Dir;\n-                                 From_Project_Node_Tree.Project_Nodes.Table\n-                                   (The_Current_Term).Default :=\n-                                   Dot_Value;\n-                                 goto Object_Dir_Restart;\n-\n-                              when Target_Value =>\n-                                 null;\n-                           end case;\n-\n-                        when List =>\n-                           case The_Default is\n-                              when Read_Only_Value =>\n-                                 null;\n-\n-                              when Empty_Value =>\n-                                 The_Variable.Values := Nil_String;\n-\n-                              when Dot_Value =>\n-                                 The_Variable.Values :=\n-                                   Shared.Dot_String_List;\n-\n-                              when Object_Dir_Value | Target_Value =>\n-                                 null;\n-                           end case;\n+                           when Undefined =>\n+                              null;\n+\n+                           when Single =>\n+                              case The_Default is\n+                                 when Read_Only_Value =>\n+                                    null;\n+\n+                                 when Empty_Value =>\n+                                    The_Variable.Value := Empty_String;\n+\n+                                 when Dot_Value =>\n+                                    The_Variable.Value := Dot_String;\n+\n+                                 when Object_Dir_Value =>\n+                                    From_Project_Node_Tree.Project_Nodes.Table\n+                                      (The_Current_Term).Name :=\n+                                      Snames.Name_Object_Dir;\n+                                    From_Project_Node_Tree.Project_Nodes.Table\n+                                      (The_Current_Term).Default :=\n+                                      Dot_Value;\n+                                    goto Object_Dir_Restart;\n+\n+                                 when Target_Value =>\n+                                    null;\n+                              end case;\n+\n+                           when List =>\n+                              case The_Default is\n+                                 when Read_Only_Value =>\n+                                    null;\n+\n+                                 when Empty_Value =>\n+                                    The_Variable.Values := Nil_String;\n+\n+                                 when Dot_Value =>\n+                                    The_Variable.Values :=\n+                                      Shared.Dot_String_List;\n+\n+                                 when Object_Dir_Value | Target_Value =>\n+                                    null;\n+                              end case;\n                         end case;\n                      end;\n                   end if;\n \n                   case Kind is\n-\n                      when Undefined =>\n \n                         --  Should never happen\n@@ -954,7 +954,6 @@ package body Prj.Proc is\n                         null;\n \n                      when Single =>\n-\n                         case The_Variable.Kind is\n \n                            when Undefined =>"}, {"sha": "c79c199cedbbdd323112a6b5e2fde757781d0fbc", "filename": "gcc/ada/prj-strt.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Fprj-strt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Fprj-strt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-strt.adb?ref=7ed571892e5a8d10c14a674e38b980f60115ceb6", "patch": "@@ -217,7 +217,7 @@ package body Prj.Strt is\n             Set_Case_Insensitive\n               (Reference, In_Tree,\n                To => Attribute_Kind_Of (Current_Attribute) in\n-                      All_Case_Insensitive_Associative_Array);\n+                       All_Case_Insensitive_Associative_Array);\n             Set_Default_Of\n               (Reference, In_Tree,\n                To => Attribute_Default_Of (Current_Attribute));"}, {"sha": "88196e10f419ad5a30aba5191bbb21d191dffc8b", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=7ed571892e5a8d10c14a674e38b980f60115ceb6", "patch": "@@ -60,7 +60,6 @@ package body Prj is\n    --  Initial size for extensible buffer used in Add_To_Buffer\n \n    The_Empty_String : Name_Id := No_Name;\n-\n    The_Dot_String   : Name_Id := No_Name;\n \n    Debug_Level : Integer := 0;"}, {"sha": "1beff66a9da962d69087c0253dfcc0bf1d8f7d15", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 5, "deletions": 15, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=7ed571892e5a8d10c14a674e38b980f60115ceb6", "patch": "@@ -73,21 +73,11 @@ package Prj is\n    --  Tri-state to decide if -lgnarl is needed when linking\n \n    type Attribute_Default_Value is\n-     (Read_Only_Value,\n-      --  for read only attributes (Name, Project_Dir)\n-\n-      Empty_Value,\n-      --  empty string or empty string list\n-\n-      Dot_Value,\n-      --  \".\" or (\".\")\n-\n-      Object_Dir_Value,\n-      --  'Object_Dir\n-\n-      Target_Value\n-      --  'Target (special rules)\n-     );\n+     (Read_Only_Value,     --  For read only attributes (Name, Project_Dir)\n+      Empty_Value,         --  Empty string or empty string list\n+      Dot_Value,           --  \".\" or (\".\")\n+      Object_Dir_Value,    --  'Object_Dir\n+      Target_Value);       --  'Target (special rules)\n    --  Describe the default values of attributes that are referenced but not\n    --  declared.\n "}, {"sha": "cd76da56959d28327ed6cf0063d79b81c0794d74", "filename": "gcc/ada/repinfo.adb", "status": "modified", "additions": 27, "deletions": 15, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Frepinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Frepinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo.adb?ref=7ed571892e5a8d10c14a674e38b980f60115ceb6", "patch": "@@ -166,7 +166,8 @@ package body Repinfo is\n    procedure List_Scalar_Storage_Order\n      (Ent              : Entity_Id;\n       Bytes_Big_Endian : Boolean);\n-   --  List scalar storage order information for record or array type Ent\n+   --  List scalar storage order information for record or array type Ent.\n+   --  Also includes bit order information for record types, if necessary.\n \n    procedure List_Type_Info (Ent : Entity_Id);\n    --  List type info for type Ent\n@@ -1067,20 +1068,22 @@ package body Repinfo is\n      (Ent              : Entity_Id;\n       Bytes_Big_Endian : Boolean)\n    is\n-      procedure List_Attr (Attr_Name : String);\n-      --  Show attribute definition clause for Attr_Name\n+      procedure List_Attr (Attr_Name : String; Is_Reversed : Boolean);\n+      --  Show attribute definition clause for Attr_Name (an endianness\n+      --  attribute), depending on whether or not the endianness is reversed\n+      --  compared to native endianness.\n \n       ---------------\n       -- List_Attr --\n       ---------------\n \n-      procedure List_Attr (Attr_Name : String) is\n+      procedure List_Attr (Attr_Name : String; Is_Reversed : Boolean) is\n       begin\n          Write_Str (\"for \");\n          List_Name (Ent);\n          Write_Str (\"'\" & Attr_Name & \" use System.\");\n \n-         if Bytes_Big_Endian xor Reverse_Storage_Order (Ent) then\n+         if Bytes_Big_Endian xor Is_Reversed then\n             Write_Str (\"High\");\n          else\n             Write_Str (\"Low\");\n@@ -1089,23 +1092,32 @@ package body Repinfo is\n          Write_Line (\"_Order_First;\");\n       end List_Attr;\n \n+      List_SSO : constant Boolean :=\n+                   Has_Rep_Item (Ent, Name_Scalar_Storage_Order)\n+                     or else SSO_Set_Low_By_Default  (Ent)\n+                     or else SSO_Set_High_By_Default (Ent);\n+      --  Scalar_Storage_Order is displayed if specified explicitly\n+      --  or set by Default_Scalar_Storage_Order.\n+\n    --  Start of processing for List_Scalar_Storage_Order\n \n    begin\n-      --  List info if set explicitly or by use of Default_Scalar_Storage_Order\n+      --  For record types, list Bit_Order if not default, or if SSO is shown\n \n-      if Has_Rep_Item (Ent, Name_Scalar_Storage_Order)\n-        or else SSO_Set_Low_By_Default (Ent)\n-        or else SSO_Set_High_By_Default (Ent)\n+      if Is_Record_Type (Ent)\n+        and then (List_SSO or else Reverse_Bit_Order (Ent))\n       then\n-         --  For a record type with specified scalar storage order, also\n-         --  display explicit Bit_Order.\n+         List_Attr (\"Bit_Order\", Reverse_Bit_Order (Ent));\n+      end if;\n \n-         if Is_Record_Type (Ent) then\n-            List_Attr (\"Bit_Order\");\n-         end if;\n+      --  List SSO if required. If not, then storage is supposed to be in\n+      --  native order.\n \n-         List_Attr (\"Scalar_Storage_Order\");\n+      if List_SSO then\n+         List_Attr (\"Scalar_Storage_Order\", Reverse_Storage_Order (Ent));\n+      else\n+         pragma Assert (not Reverse_Storage_Order (Ent));\n+         null;\n       end if;\n    end List_Scalar_Storage_Order;\n "}, {"sha": "d11b34e3f190346b2efcc644d32eb360918ec25e", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 97, "deletions": 64, "changes": 161, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=7ed571892e5a8d10c14a674e38b980f60115ceb6", "patch": "@@ -65,6 +65,7 @@ with Sem_Util; use Sem_Util;\n with Stand;    use Stand;\n with Sinfo;    use Sinfo;\n with Sinput;   use Sinput;\n+with System;\n with Stringt;  use Stringt;\n with Style;\n with Stylesw;  use Stylesw;\n@@ -3191,21 +3192,52 @@ package body Sem_Attr is\n       -----------------------\n \n       when Attribute_Default_Bit_Order => Default_Bit_Order :\n+      declare\n+         Target_Default_Bit_Order : System.Bit_Order;\n       begin\n          Check_Standard_Prefix;\n \n          if Bytes_Big_Endian then\n-            Rewrite (N,\n-              Make_Integer_Literal (Loc, False_Value));\n+            Target_Default_Bit_Order := System.High_Order_First;\n          else\n-            Rewrite (N,\n-              Make_Integer_Literal (Loc, True_Value));\n+            Target_Default_Bit_Order := System.Low_Order_First;\n          end if;\n \n+         Rewrite (N,\n+           Make_Integer_Literal (Loc,\n+             UI_From_Int (System.Bit_Order'Pos (Target_Default_Bit_Order))));\n+\n          Set_Etype (N, Universal_Integer);\n          Set_Is_Static_Expression (N);\n       end Default_Bit_Order;\n \n+      ----------------------------------\n+      -- Default_Scalar_Storage_Order --\n+      ----------------------------------\n+\n+      when Attribute_Default_Scalar_Storage_Order => Default_SSO : declare\n+         RE_Default_SSO : RE_Id;\n+      begin\n+         Check_Standard_Prefix;\n+\n+         case Opt.Default_SSO is\n+            when ' ' =>\n+               if Bytes_Big_Endian then\n+                  RE_Default_SSO := RE_High_Order_First;\n+               else\n+                  RE_Default_SSO := RE_Low_Order_First;\n+               end if;\n+            when 'H' =>\n+               RE_Default_SSO := RE_High_Order_First;\n+            when 'L' =>\n+               RE_Default_SSO := RE_Low_Order_First;\n+            when others =>\n+               raise Program_Error;\n+         end case;\n+\n+         Rewrite (N, New_Occurrence_Of (RTE (RE_Default_SSO), Loc));\n+      end Default_SSO;\n+\n       --------------\n       -- Definite --\n       --------------\n@@ -9534,66 +9566,67 @@ package body Sem_Attr is\n       --  Note that in some cases, the values have already been folded as\n       --  a result of the processing in Analyze_Attribute.\n \n-      when Attribute_Abort_Signal               |\n-           Attribute_Access                     |\n-           Attribute_Address                    |\n-           Attribute_Address_Size               |\n-           Attribute_Asm_Input                  |\n-           Attribute_Asm_Output                 |\n-           Attribute_Base                       |\n-           Attribute_Bit_Order                  |\n-           Attribute_Bit_Position               |\n-           Attribute_Callable                   |\n-           Attribute_Caller                     |\n-           Attribute_Class                      |\n-           Attribute_Code_Address               |\n-           Attribute_Compiler_Version           |\n-           Attribute_Count                      |\n-           Attribute_Default_Bit_Order          |\n-           Attribute_Elaborated                 |\n-           Attribute_Elab_Body                  |\n-           Attribute_Elab_Spec                  |\n-           Attribute_Elab_Subp_Body             |\n-           Attribute_Enabled                    |\n-           Attribute_External_Tag               |\n-           Attribute_Fast_Math                  |\n-           Attribute_First_Bit                  |\n-           Attribute_Input                      |\n-           Attribute_Last_Bit                   |\n-           Attribute_Library_Level              |\n-           Attribute_Maximum_Alignment          |\n-           Attribute_Old                        |\n-           Attribute_Output                     |\n-           Attribute_Partition_ID               |\n-           Attribute_Pool_Address               |\n-           Attribute_Position                   |\n-           Attribute_Priority                   |\n-           Attribute_Read                       |\n-           Attribute_Result                     |\n-           Attribute_Scalar_Storage_Order       |\n-           Attribute_Simple_Storage_Pool        |\n-           Attribute_Storage_Pool               |\n-           Attribute_Storage_Size               |\n-           Attribute_Storage_Unit               |\n-           Attribute_Stub_Type                  |\n-           Attribute_System_Allocator_Alignment |\n-           Attribute_Tag                        |\n-           Attribute_Target_Name                |\n-           Attribute_Terminated                 |\n-           Attribute_To_Address                 |\n-           Attribute_Type_Key                   |\n-           Attribute_UET_Address                |\n-           Attribute_Unchecked_Access           |\n-           Attribute_Universal_Literal_String   |\n-           Attribute_Unrestricted_Access        |\n-           Attribute_Valid                      |\n-           Attribute_Valid_Scalars              |\n-           Attribute_Value                      |\n-           Attribute_Wchar_T_Size               |\n-           Attribute_Wide_Value                 |\n-           Attribute_Wide_Wide_Value            |\n-           Attribute_Word_Size                  |\n-           Attribute_Write                      =>\n+      when Attribute_Abort_Signal                 |\n+           Attribute_Access                       |\n+           Attribute_Address                      |\n+           Attribute_Address_Size                 |\n+           Attribute_Asm_Input                    |\n+           Attribute_Asm_Output                   |\n+           Attribute_Base                         |\n+           Attribute_Bit_Order                    |\n+           Attribute_Bit_Position                 |\n+           Attribute_Callable                     |\n+           Attribute_Caller                       |\n+           Attribute_Class                        |\n+           Attribute_Code_Address                 |\n+           Attribute_Compiler_Version             |\n+           Attribute_Count                        |\n+           Attribute_Default_Bit_Order            |\n+           Attribute_Default_Scalar_Storage_Order |\n+           Attribute_Elaborated                   |\n+           Attribute_Elab_Body                    |\n+           Attribute_Elab_Spec                    |\n+           Attribute_Elab_Subp_Body               |\n+           Attribute_Enabled                      |\n+           Attribute_External_Tag                 |\n+           Attribute_Fast_Math                    |\n+           Attribute_First_Bit                    |\n+           Attribute_Input                        |\n+           Attribute_Last_Bit                     |\n+           Attribute_Library_Level                |\n+           Attribute_Maximum_Alignment            |\n+           Attribute_Old                          |\n+           Attribute_Output                       |\n+           Attribute_Partition_ID                 |\n+           Attribute_Pool_Address                 |\n+           Attribute_Position                     |\n+           Attribute_Priority                     |\n+           Attribute_Read                         |\n+           Attribute_Result                       |\n+           Attribute_Scalar_Storage_Order         |\n+           Attribute_Simple_Storage_Pool          |\n+           Attribute_Storage_Pool                 |\n+           Attribute_Storage_Size                 |\n+           Attribute_Storage_Unit                 |\n+           Attribute_Stub_Type                    |\n+           Attribute_System_Allocator_Alignment   |\n+           Attribute_Tag                          |\n+           Attribute_Target_Name                  |\n+           Attribute_Terminated                   |\n+           Attribute_To_Address                   |\n+           Attribute_Type_Key                     |\n+           Attribute_UET_Address                  |\n+           Attribute_Unchecked_Access             |\n+           Attribute_Universal_Literal_String     |\n+           Attribute_Unrestricted_Access          |\n+           Attribute_Valid                        |\n+           Attribute_Valid_Scalars                |\n+           Attribute_Value                        |\n+           Attribute_Wchar_T_Size                 |\n+           Attribute_Wide_Value                   |\n+           Attribute_Wide_Wide_Value              |\n+           Attribute_Word_Size                    |\n+           Attribute_Write                        =>\n \n          raise Program_Error;\n       end case;"}, {"sha": "c2652211b21ef43f1450d18867972d6b6f85f0ad", "filename": "gcc/ada/sem_attr.ads", "status": "modified", "additions": 44, "deletions": 33, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Fsem_attr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Fsem_attr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.ads?ref=7ed571892e5a8d10c14a674e38b980f60115ceb6", "patch": "@@ -135,20 +135,31 @@ package Sem_Attr is\n       -----------------------\n \n       Attribute_Default_Bit_Order => True,\n-      --  Standard'Default_Bit_Order (Standard is the only permissible prefix),\n+      --  Standard'Default_Bit_Order (Standard is the only permissible prefix)\n       --  provides the value System.Default_Bit_Order as a Pos value (0 for\n       --  High_Order_First, 1 for Low_Order_First). This is used to construct\n       --  the definition of Default_Bit_Order in package System. This is a\n       --  static attribute.\n \n+      ----------------------------------\n+      -- Default_Scalar_Storage_Order --\n+      ----------------------------------\n+\n+      Attribute_Default_Scalar_Storage_Order => True,\n+      --  Standard'Default_Scalar_Storage_Order (Standard is the\n+      --  only permissible prefix) provides the current value of the\n+      --  default scalar storage order (as specified using pragma\n+      --  Default_Scalar_Storage_Order, or equal to Default_Bit_Order if\n+      --  unspecified) as a System.Bit_Order value. This is a static attribute.\n+\n       ---------------\n       -- Elab_Body --\n       ---------------\n \n       Attribute_Elab_Body => True,\n-      --  This attribute can only be applied to a program unit name. It returns\n-      --  the entity for the corresponding elaboration procedure for elabor-\n-      --  ating the body of the referenced unit. This is used in the main\n+      --  This attribute can only be applied to a program unit name. It\n+      --  returns the entity for the corresponding elaboration procedure for\n+      --  elaborating the body of the referenced unit. This is used in the main\n       --  generated elaboration procedure by the binder, and is not normally\n       --  used in any other context, but there may be specialized situations in\n       --  which it is useful to be able to call this elaboration procedure from\n@@ -172,13 +183,13 @@ package Sem_Attr is\n \n       Attribute_Elab_Spec => True,\n       --  This attribute can only be applied to a program unit name. It\n-      --  returns the entity for the corresponding elaboration procedure\n-      --  for elaborating the spec of the referenced unit. This is used\n-      --  in the main generated elaboration procedure by the binder, and\n-      --  is not normally used in any other context, but there may be\n-      --  specialized situations in which it is useful to be able to\n-      --  call this elaboration procedure from Ada code, e.g. if it\n-      --  is necessary to do selective reelaboration to fix some error.\n+      --  returns the entity for the corresponding elaboration procedure for\n+      --  elaborating the spec of the referenced unit. This is used in the main\n+      --  generated elaboration procedure by the binder, and is not normally\n+      --  used in any other context, but there may be specialized situations in\n+      --  which it is useful to be able to call this elaboration procedure from\n+      --  Ada code, e.g. if it is necessary to do selective reelaboration to\n+      --  fix some error.\n \n       ----------------\n       -- Elaborated --\n@@ -209,8 +220,8 @@ package Sem_Attr is\n       --------------\n \n       Attribute_Enum_Val => True,\n-      --  For every enumeration subtype S, S'Enum_Val denotes a function\n-      --  with the following specification:\n+      --  For every enumeration subtype S, S'Enum_Val denotes a function with\n+      --  the following specification:\n       --\n       --    function S'Enum_Val (Arg : universal_integer) return S'Base;\n       --\n@@ -236,8 +247,8 @@ package Sem_Attr is\n       --  The effect is thus equivalent to first converting the argument to\n       --  the integer type used to represent S, and then doing an unchecked\n       --  conversion to the fixed-point type. This attribute is primarily\n-      --  intended for use in implementation of the input-output functions for\n-      --  fixed-point values.\n+      --  intended for use in implementation of the input-output functions\n+      --  for fixed-point values.\n \n       -----------------------\n       -- Has_Discriminants --\n@@ -290,10 +301,10 @@ package Sem_Attr is\n       --  of the type. If possible this value is an invalid value, and in fact\n       --  is identical to the value that would be set if Initialize_Scalars\n       --  mode were in effect (including the behavior of its value on\n-      --  environment variables or binder switches). The intended use is\n-      --  to set a value where initialization is required (e.g. as a result of\n-      --  the coding standards in use), but logically no initialization is\n-      --  needed, and the value should never be accessed.\n+      --  environment variables or binder switches). The intended use is to\n+      --  set a value where initialization is required (e.g. as a result of the\n+      --  coding standards in use), but logically no initialization is needed,\n+      --  and the value should never be accessed.\n \n       Attribute_Loop_Entry => True,\n       --  For every object of a non-limited type, S'Loop_Entry [(Loop_Name)]\n@@ -314,11 +325,11 @@ package Sem_Attr is\n \n       Attribute_Maximum_Alignment => True,\n       --  Standard'Maximum_Alignment (Standard is the only permissible prefix)\n-      --  provides the maximum useful alignment value for the target. This\n-      --  is a static value that can be used to specify the alignment for an\n-      --  object, guaranteeing that it is properly aligned in all cases. The\n-      --  time this is useful is when an external object is imported and its\n-      --  alignment requirements are unknown. This is a static attribute.\n+      --  provides the maximum useful alignment value for the target. This is a\n+      --  static value that can be used to specify the alignment for an object,\n+      --  guaranteeing that it is properly aligned in all cases. The time this\n+      --  is useful is when an external object is imported and its alignment\n+      --  requirements are unknown. This is a static attribute.\n \n       --------------------\n       -- Mechanism_Code --\n@@ -346,19 +357,19 @@ package Sem_Attr is\n       --------------------\n \n       Attribute_Null_Parameter => True,\n-      --  A reference T'Null_Parameter denotes an (imaginary) object of type or\n-      --  subtype T allocated at (machine) address zero. The attribute is\n-      --  allowed only as the default expression of a formal parameter, or as\n-      --  an actual expression of a subprogram call. In either case, the\n+      --  A reference T'Null_Parameter denotes an (imaginary) object of type\n+      --  or subtype T allocated at (machine) address zero. The attribute is\n+      --  allowed only as the default expression of a formal parameter, or\n+      --  as an actual expression of a subprogram call. In either case, the\n       --  subprogram must be imported.\n       --\n-      --  The identity of the object is represented by the address zero in the\n-      --  argument list, independent of the passing mechanism (explicit or\n-      --  default).\n+      --  The identity of the object is represented by the address zero in\n+      --  the argument list, independent of the passing mechanism (explicit\n+      --  or default).\n       --\n       --  The reason that this capability is needed is that for a record or\n-      --  other composite object passed by reference, there is no other way of\n-      --  specifying that a zero address should be passed.\n+      --  other composite object passed by reference, there is no other way\n+      --  of specifying that a zero address should be passed.\n \n       -----------------\n       -- Object_Size --"}, {"sha": "b0b5249851a5707b29db611441d8eb0ecc46f1c8", "filename": "gcc/ada/snames.adb-tmpl", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Fsnames.adb-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Fsnames.adb-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.adb-tmpl?ref=7ed571892e5a8d10c14a674e38b980f60115ceb6", "patch": "@@ -220,6 +220,8 @@ package body Snames is\n       case N is\n          when Name_CPU                              =>\n             return Pragma_CPU;\n+         when Name_Default_Scalar_Storage_Order     =>\n+            return Pragma_Default_Scalar_Storage_Order;\n          when Name_Dispatching_Domain               =>\n             return Pragma_Dispatching_Domain;\n          when Name_Fast_Math                        =>\n@@ -335,6 +337,7 @@ package body Snames is\n    function Is_Configuration_Pragma_Name (N : Name_Id) return Boolean is\n    begin\n       return N in First_Pragma_Name .. Last_Configuration_Pragma_Name\n+        or else N = Name_Default_Scalar_Storage_Order\n         or else N = Name_Fast_Math;\n    end Is_Configuration_Pragma_Name;\n \n@@ -447,6 +450,7 @@ package body Snames is\n    begin\n       return N in First_Pragma_Name .. Last_Pragma_Name\n         or else N = Name_CPU\n+        or else N = Name_Default_Scalar_Storage_Order\n         or else N = Name_Dispatching_Domain\n         or else N = Name_Fast_Math\n         or else N = Name_Interface"}, {"sha": "584e58c51c0ea1f9f9166cabec71fb5f9155a61e", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=7ed571892e5a8d10c14a674e38b980f60115ceb6", "patch": "@@ -329,7 +329,7 @@ package Snames is\n    --  to be implementation dependent pragmas.\n \n    --  The entries marked GNAT are pragmas that are defined by GNAT and that\n-   --  are implemented in all modes (Ada 83, Ada 95, and Ada 2005) Complete\n+   --  are implemented in all modes (Ada 83, Ada 95, and Ada 2005). Complete\n    --  descriptions of the syntax of these implementation dependent pragmas may\n    --  be found in the appropriate section in unit Sem_Prag in file\n    --  sem-prag.adb, and they are documented in the GNAT reference manual.\n@@ -376,7 +376,6 @@ package Snames is\n    Name_Convention_Identifier          : constant Name_Id := N + $; -- GNAT\n    Name_Debug_Policy                   : constant Name_Id := N + $; -- GNAT\n    Name_Detect_Blocking                : constant Name_Id := N + $; -- Ada 05\n-   Name_Default_Scalar_Storage_Order   : constant Name_Id := N + $; -- GNAT\n    Name_Default_Storage_Pool           : constant Name_Id := N + $; -- Ada 12\n    Name_Disable_Atomic_Synchronization : constant Name_Id := N + $; -- GNAT\n    Name_Discard_Names                  : constant Name_Id := N + $;\n@@ -833,6 +832,7 @@ package Snames is\n    Name_Constrained                    : constant Name_Id := N + $;\n    Name_Count                          : constant Name_Id := N + $;\n    Name_Default_Bit_Order              : constant Name_Id := N + $; -- GNAT\n+   Name_Default_Scalar_Storage_Order   : constant Name_Id := N + $; -- GNAT\n    Name_Default_Iterator               : constant Name_Id := N + $; -- GNAT\n    Name_Definite                       : constant Name_Id := N + $;\n    Name_Delta                          : constant Name_Id := N + $;\n@@ -1462,6 +1462,7 @@ package Snames is\n       Attribute_Constrained,\n       Attribute_Count,\n       Attribute_Default_Bit_Order,\n+      Attribute_Default_Scalar_Storage_Order,\n       Attribute_Default_Iterator,\n       Attribute_Definite,\n       Attribute_Delta,\n@@ -1728,7 +1729,6 @@ package Snames is\n       Pragma_Convention_Identifier,\n       Pragma_Debug_Policy,\n       Pragma_Detect_Blocking,\n-      Pragma_Default_Scalar_Storage_Order,\n       Pragma_Default_Storage_Pool,\n       Pragma_Disable_Atomic_Synchronization,\n       Pragma_Discard_Names,\n@@ -1929,6 +1929,7 @@ package Snames is\n       --  match existing attribute names.\n \n       Pragma_CPU,\n+      Pragma_Default_Scalar_Storage_Order,\n       Pragma_Dispatching_Domain,\n       Pragma_Fast_Math,\n       Pragma_Interface,"}, {"sha": "3008c7874307ed025a932bdaf0d0aeedf25fd5a7", "filename": "gcc/ada/sysdep.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Fsysdep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed571892e5a8d10c14a674e38b980f60115ceb6/gcc%2Fada%2Fsysdep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsysdep.c?ref=7ed571892e5a8d10c14a674e38b980f60115ceb6", "patch": "@@ -42,6 +42,7 @@\n #endif\n #include \"selectLib.h\"\n #include \"vxWorks.h\"\n+#include \"version.h\"\n #if defined (__RTP__)\n #  include \"vwModNum.h\"\n #endif /* __RTP__ */\n@@ -949,7 +950,7 @@ __gnat_is_file_not_found_error (int errno_val) {\n       /* In the case of VxWorks, we also have to take into account various\n        * filesystem-specific variants of this error.\n        */\n-#if ! defined (VTHREADS)\n+#if ! defined (VTHREADS) && (_WRS_VXWORKS_MAJOR < 7)\n       case S_dosFsLib_FILE_NOT_FOUND:\n #endif\n #if ! defined (__RTP__) && (! defined (VTHREADS) || defined (__VXWORKSMILS__))"}]}