{"sha": "703e95cf1554ad654c4dda356b666bd13048a0d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzAzZTk1Y2YxNTU0YWQ2NTRjNGRkYTM1NmI2NjZiZDEzMDQ4YTBkNg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-06-03T10:00:03Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-06-03T10:00:03Z"}, "message": "lto-cgraph.c (lto_varpool_encoder_size): Remove.\n\n\t* lto-cgraph.c (lto_varpool_encoder_size): Remove.\n\t* lto-streamer.h (lto_varpool_encoder_size): New inline function.\n\nFrom-SVN: r160215", "tree": {"sha": "b5754d2b97c2dee9e6c0717a678b8ad2484a3b4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5754d2b97c2dee9e6c0717a678b8ad2484a3b4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/703e95cf1554ad654c4dda356b666bd13048a0d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/703e95cf1554ad654c4dda356b666bd13048a0d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/703e95cf1554ad654c4dda356b666bd13048a0d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/703e95cf1554ad654c4dda356b666bd13048a0d6/comments", "author": null, "committer": null, "parents": [{"sha": "1267bc69eb2af3ec45e886f6538b594992ff6d36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1267bc69eb2af3ec45e886f6538b594992ff6d36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1267bc69eb2af3ec45e886f6538b594992ff6d36"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "c397c2562d6c614104ad1289758b14e87daa9ed2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/703e95cf1554ad654c4dda356b666bd13048a0d6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/703e95cf1554ad654c4dda356b666bd13048a0d6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=703e95cf1554ad654c4dda356b666bd13048a0d6", "patch": "@@ -1,3 +1,8 @@\n+2010-06-03  Jan Hubicka  <jh@suse.cz>\n+\n+\t* lto-cgraph.c (lto_varpool_encoder_size): Remove.\n+\t* lto-streamer.h (lto_varpool_encoder_size): New inline function.\n+\n 2010-06-03  Paul Brook  <paul@codesourcery.com>\n \n \t* config/arm/arm.c (FL_TUNE): Define."}, {"sha": "bb912cebaea7b10b0cb0a836b9f2c08bf8c0cd08", "filename": "gcc/lto-cgraph.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/703e95cf1554ad654c4dda356b666bd13048a0d6/gcc%2Flto-cgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/703e95cf1554ad654c4dda356b666bd13048a0d6/gcc%2Flto-cgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-cgraph.c?ref=703e95cf1554ad654c4dda356b666bd13048a0d6", "patch": "@@ -234,14 +234,6 @@ lto_varpool_encoder_deref (lto_varpool_encoder_t encoder, int ref)\n }\n \n \n-/* Return number of encoded nodes in ENCODER.  */\n-\n-static int\n-lto_varpool_encoder_size (lto_varpool_encoder_t encoder)\n-{\n-  return VEC_length (varpool_node_ptr, encoder->nodes);\n-}\n-\n /* Return TRUE if we should encode initializer of NODE (if any).  */\n \n bool"}, {"sha": "d8978c9ec59e7c94f871355a3c34e8d4d9c0b75c", "filename": "gcc/lto-streamer.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/703e95cf1554ad654c4dda356b666bd13048a0d6/gcc%2Flto-streamer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/703e95cf1554ad654c4dda356b666bd13048a0d6/gcc%2Flto-streamer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer.h?ref=703e95cf1554ad654c4dda356b666bd13048a0d6", "patch": "@@ -498,6 +498,14 @@ struct lto_varpool_encoder_d\n };\n typedef struct lto_varpool_encoder_d *lto_varpool_encoder_t;\n \n+/* Return number of encoded nodes in ENCODER.  */\n+\n+static inline int\n+lto_varpool_encoder_size (lto_varpool_encoder_t encoder)\n+{\n+  return VEC_length (varpool_node_ptr, encoder->nodes);\n+}\n+\n /* Mapping from indices to trees.  */\n struct GTY(()) lto_tree_ref_table\n {"}]}