{"sha": "8e09cb8b390102c09039c3c31ab1c0df4114e3da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGUwOWNiOGIzOTAxMDJjMDkwMzljM2MzMWFiMWMwZGY0MTE0ZTNkYQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2017-06-29T22:32:33Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2017-06-29T22:32:33Z"}, "message": "class.c (add_method): Change pair of errors to error + inform.\n\n/cp\n2017-06-29  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* class.c (add_method): Change pair of errors to error + inform.\n\t(handle_using_decl): Likewise.\n\n/testsuite\n2017-06-29  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* g++.dg/cpp0x/inh-ctor3.C: Adjust for dg-message vs dg-error.\n\t* g++.dg/diagnostic/variadic1.C: Likewise.\n\t* g++.dg/gomp/udr-3.C: Likewise.\n\t* g++.dg/overload/error1.C: Likewise.\n\t* g++.dg/overload/error2.C: Likewise.\n\t* g++.dg/template/duplicate1.C: Likewise.\n\t* g++.old-deja/g++.benjamin/warn02.C: Likewise.\n\t* g++.old-deja/g++.brendan/arm2.C: Likewise.\n\t* g++.old-deja/g++.other/redecl2.C: Likewise.\n\t* g++.old-deja/g++.other/redecl4.C: Likewise.\n\t* g++.old-deja/g++.pt/memtemp78.C: Likewise.\n\nFrom-SVN: r249820", "tree": {"sha": "65e1720c376a17939646b687eadfb6b24e5b61e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65e1720c376a17939646b687eadfb6b24e5b61e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e09cb8b390102c09039c3c31ab1c0df4114e3da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e09cb8b390102c09039c3c31ab1c0df4114e3da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e09cb8b390102c09039c3c31ab1c0df4114e3da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e09cb8b390102c09039c3c31ab1c0df4114e3da/comments", "author": null, "committer": null, "parents": [{"sha": "0395a464ed59ff246b97bad727bc0d81bbb5d017", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0395a464ed59ff246b97bad727bc0d81bbb5d017", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0395a464ed59ff246b97bad727bc0d81bbb5d017"}], "stats": {"total": 91, "additions": 59, "deletions": 32}, "files": [{"sha": "40153aafea0997cedb542009b7b6dd3cd554ae23", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e09cb8b390102c09039c3c31ab1c0df4114e3da/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e09cb8b390102c09039c3c31ab1c0df4114e3da/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8e09cb8b390102c09039c3c31ab1c0df4114e3da", "patch": "@@ -1,3 +1,8 @@\n+2017-06-29  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* class.c (add_method): Change pair of errors to error + inform.\n+\t(handle_using_decl): Likewise.\n+\n 2017-06-29  Jason Merrill  <jason@redhat.com>\n \n \t* constexpr.c, error.c, tree.c: Remove WITH_CLEANUP_EXPR handling."}, {"sha": "09633b8dd9f333ff40ccca3a0c3550393717ea3c", "filename": "gcc/cp/class.c", "status": "modified", "additions": 19, "deletions": 11, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e09cb8b390102c09039c3c31ab1c0df4114e3da/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e09cb8b390102c09039c3c31ab1c0df4114e3da/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=8e09cb8b390102c09039c3c31ab1c0df4114e3da", "patch": "@@ -1217,10 +1217,11 @@ add_method (tree type, tree method, bool via_using)\n \t\t\tcontinue;\n \t\t    }\n \t\t  error_at (DECL_SOURCE_LOCATION (method),\n-\t\t\t    \"%q#D\", method);\n-\t\t  error_at (DECL_SOURCE_LOCATION (fn),\n-\t\t\t    \"conflicts with version inherited from %qT\",\n-\t\t\t    basef);\n+\t\t\t    \"%q#D conflicts with version inherited from %qT\",\n+\t\t\t    method, basef);\n+\t\t  inform (DECL_SOURCE_LOCATION (fn),\n+\t\t\t  \"version inherited from %qT declared here\",\n+\t\t\t  basef);\n \t\t}\n \t      /* Otherwise defer to the other function.  */\n \t      return false;\n@@ -1238,8 +1239,10 @@ add_method (tree type, tree method, bool via_using)\n \t    }\n \t  else\n \t    {\n-\t      error (\"%q+#D cannot be overloaded\", method);\n-\t      error (\"with %q+#D\", fn);\n+\t      error_at (DECL_SOURCE_LOCATION (method),\n+\t\t\t\"%q#D cannot be overloaded with %q#D\", method, fn);\n+\t      inform (DECL_SOURCE_LOCATION (fn),\n+\t\t      \"previous declaration %q#D\", fn);\n \t      return false;\n \t    }\n \t}\n@@ -1371,16 +1374,21 @@ handle_using_decl (tree using_decl, tree t)\n \t   the same name already present in the current class.  */;\n       else\n \t{\n-\t  error (\"%q+D invalid in %q#T\", using_decl, t);\n-\t  error (\"  because of local method %q+#D with same name\",\n-\t\t old_value);\n+\t  error_at (DECL_SOURCE_LOCATION (using_decl), \"%qD invalid in %q#T \"\n+\t\t    \"because of local method %q#D with same name\",\n+\t\t    using_decl, t, old_value);\n+\t  inform (DECL_SOURCE_LOCATION (old_value),\n+\t\t  \"local method %q#D declared here\", old_value);\n \t  return;\n \t}\n     }\n   else if (!DECL_ARTIFICIAL (old_value))\n     {\n-      error (\"%q+D invalid in %q#T\", using_decl, t);\n-      error (\"  because of local member %q+#D with same name\", old_value);\n+      error_at (DECL_SOURCE_LOCATION (using_decl), \"%qD invalid in %q#T \"\n+\t\t\"because of local member %q#D with same name\",\n+\t\tusing_decl, t, old_value);\n+      inform (DECL_SOURCE_LOCATION (old_value),\n+\t      \"local member %q#D declared here\", old_value);\n       return;\n     }\n "}, {"sha": "f3dad9ec6f6787cb3c29991efc4351d8bca00d4c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e09cb8b390102c09039c3c31ab1c0df4114e3da/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e09cb8b390102c09039c3c31ab1c0df4114e3da/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8e09cb8b390102c09039c3c31ab1c0df4114e3da", "patch": "@@ -1,3 +1,17 @@\n+2017-06-29  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* g++.dg/cpp0x/inh-ctor3.C: Adjust for dg-message vs dg-error.\n+\t* g++.dg/diagnostic/variadic1.C: Likewise.\n+\t* g++.dg/gomp/udr-3.C: Likewise.\n+\t* g++.dg/overload/error1.C: Likewise.\n+\t* g++.dg/overload/error2.C: Likewise.\n+\t* g++.dg/template/duplicate1.C: Likewise.\n+\t* g++.old-deja/g++.benjamin/warn02.C: Likewise.\n+\t* g++.old-deja/g++.brendan/arm2.C: Likewise.\n+\t* g++.old-deja/g++.other/redecl2.C: Likewise.\n+\t* g++.old-deja/g++.other/redecl4.C: Likewise.\n+\t* g++.old-deja/g++.pt/memtemp78.C: Likewise.\n+\n 2017-06-29  Cesar Philippidis  <cesar@codesourcery.com>\n \n \tPR fortran/77765"}, {"sha": "c5a00750236d1078c7eca21ab77255aa2e07c7c8", "filename": "gcc/testsuite/g++.dg/cpp0x/inh-ctor3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e09cb8b390102c09039c3c31ab1c0df4114e3da/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finh-ctor3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e09cb8b390102c09039c3c31ab1c0df4114e3da/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finh-ctor3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finh-ctor3.C?ref=8e09cb8b390102c09039c3c31ab1c0df4114e3da", "patch": "@@ -8,7 +8,7 @@ struct B2 {\n   B2(int);\n };\n struct D1 : B1, B2 {\n-  using B1::B1;\t\t\t// { dg-error \"inherited\" }\n+  using B1::B1;\t\t\t// { dg-message \"declared\" }\n   using B2::B2;\t\t\t// { dg-error \"inherited\" }\n };\t\t\t   // ill-formed: attempts to declare D1(int) twice\n struct D2 : B1, B2 {"}, {"sha": "7e3db3143284df2b7da4253f2c88dd5701f18099", "filename": "gcc/testsuite/g++.dg/diagnostic/variadic1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e09cb8b390102c09039c3c31ab1c0df4114e3da/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fvariadic1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e09cb8b390102c09039c3c31ab1c0df4114e3da/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fvariadic1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fvariadic1.C?ref=8e09cb8b390102c09039c3c31ab1c0df4114e3da", "patch": "@@ -4,6 +4,6 @@\n template<int N> struct B { };\n template<typename... T> struct A\n {\n-  B<sizeof...(T)> f();\t\t// { dg-error \"sizeof\\\\.\\\\.\\\\.\" }\n+  B<sizeof...(T)> f();\t\t// { dg-message \"sizeof\\\\.\\\\.\\\\.\" }\n   B<42> f();\t\t\t// { dg-error \"cannot be overloaded\" }\n };"}, {"sha": "57531f2042b57291ec1a3abf73a9b6ef1b587f95", "filename": "gcc/testsuite/g++.dg/gomp/udr-3.C", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e09cb8b390102c09039c3c31ab1c0df4114e3da/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fudr-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e09cb8b390102c09039c3c31ab1c0df4114e3da/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fudr-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fudr-3.C?ref=8e09cb8b390102c09039c3c31ab1c0df4114e3da", "patch": "@@ -77,7 +77,7 @@ namespace N2\n {\n   struct U\n   {\n-    #pragma omp declare reduction (bar: S: omp_out.s *= omp_in.s)\t// { dg-error \"with\" }\n+    #pragma omp declare reduction (bar: S: omp_out.s *= omp_in.s)\t// { dg-message \"previous\" }\n     #pragma omp declare reduction (bar: S: omp_out.s += omp_in.s)\t// { dg-error \"cannot be overloaded\" }\n   };\n }\n@@ -109,9 +109,9 @@ namespace N4\n   struct U\n   {\n     #pragma omp declare reduction (bar: T: omp_out.t += omp_in.t)\n-    #pragma omp declare reduction (bar: S: omp_out.s *= omp_in.s)\t// { dg-error \"with\" }\n+    #pragma omp declare reduction (bar: S: omp_out.s *= omp_in.s)\t// { dg-message \"previous\" }\n     #pragma omp declare reduction (bar: S: omp_out.s += omp_in.s)\t// { dg-error \"cannot be overloaded\" }\n-    #pragma omp declare reduction (bar: long: omp_out += omp_in)\t// { dg-error \"with\" }\n+    #pragma omp declare reduction (bar: long: omp_out += omp_in)\t// { dg-message \"previous\" }\n     #pragma omp declare reduction (bar: long int: omp_out += omp_in)\t// { dg-error \"cannot be overloaded\" }\n     #pragma omp declare reduction (bar: short unsigned: omp_out += omp_in)\n     #pragma omp declare reduction (bar: short int: omp_out += omp_in)\n@@ -132,7 +132,7 @@ namespace N5\n   template <typename T>\n   struct U\n   {\n-    #pragma omp declare reduction (bar: T: omp_out.s *= omp_in.s)\t// { dg-error \"with\" }\n+    #pragma omp declare reduction (bar: T: omp_out.s *= omp_in.s)\t// { dg-message \"previous\" }\n     #pragma omp declare reduction (bar: T: omp_out.s += omp_in.s)\t// { dg-error \"cannot be overloaded\" }\n   };\n   U<S> u;\n@@ -159,9 +159,9 @@ namespace N6\n   {\n     typedef V V2;\n     #pragma omp declare reduction (bar: T: omp_out.t += omp_in.t)\n-    #pragma omp declare reduction (bar: V: omp_out.s *= omp_in.s)\t// { dg-error \"with\" }\n+    #pragma omp declare reduction (bar: V: omp_out.s *= omp_in.s)\t// { dg-message \"previous\" }\n     #pragma omp declare reduction (bar: V2: omp_out.s += omp_in.s)\t// { dg-error \"cannot be overloaded\" }\n-    #pragma omp declare reduction (bar: long: omp_out += omp_in)\t// { dg-error \"with\" }\n+    #pragma omp declare reduction (bar: long: omp_out += omp_in)\t// { dg-message \"previous\" }\n     #pragma omp declare reduction (bar: long int: omp_out += omp_in)\t// { dg-error \"cannot be overloaded\" }\n     #pragma omp declare reduction (bar: short unsigned: omp_out += omp_in)\n     #pragma omp declare reduction (bar: short int: omp_out += omp_in)"}, {"sha": "a4fd4854eb20ffb16ac2035e3a45e72a5a59d777", "filename": "gcc/testsuite/g++.dg/overload/error1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e09cb8b390102c09039c3c31ab1c0df4114e3da/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Ferror1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e09cb8b390102c09039c3c31ab1c0df4114e3da/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Ferror1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Ferror1.C?ref=8e09cb8b390102c09039c3c31ab1c0df4114e3da", "patch": "@@ -2,6 +2,6 @@\n \n struct S\n {\n-  void f () {} // { dg-error \"with\" }\n+  void f () {} // { dg-message \"previous\" }\n   int f () { return 0; } // { dg-error \"overloaded\" }\n };"}, {"sha": "23a2ea18d3aa1a229331669ac5eff7e4e1eb6e74", "filename": "gcc/testsuite/g++.dg/overload/error2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e09cb8b390102c09039c3c31ab1c0df4114e3da/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Ferror2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e09cb8b390102c09039c3c31ab1c0df4114e3da/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Ferror2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Ferror2.C?ref=8e09cb8b390102c09039c3c31ab1c0df4114e3da", "patch": "@@ -6,6 +6,6 @@\n \n struct A\n {\n-  void foo();  // { dg-error \"with\" }\n+  void foo();  // { dg-message \"previous\" }\n   virtual void foo();  // { dg-error \"cannot be overloaded\" }\n };"}, {"sha": "39185b350e70ddaf6591b34860d5190349b317ae", "filename": "gcc/testsuite/g++.dg/template/duplicate1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e09cb8b390102c09039c3c31ab1c0df4114e3da/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fduplicate1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e09cb8b390102c09039c3c31ab1c0df4114e3da/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fduplicate1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fduplicate1.C?ref=8e09cb8b390102c09039c3c31ab1c0df4114e3da", "patch": "@@ -2,6 +2,6 @@\n \n template<int> struct A\n {\n-  ~A() {}\t// { dg-error \"with\" }\n+  ~A() {}\t// { dg-message \"previous\" }\n   ~A() {}\t// { dg-error \"cannot be overloaded\" }\n };"}, {"sha": "b3b1387462d31a612885f85afd38a78779f8eebf", "filename": "gcc/testsuite/g++.old-deja/g++.benjamin/warn02.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e09cb8b390102c09039c3c31ab1c0df4114e3da/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Fwarn02.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e09cb8b390102c09039c3c31ab1c0df4114e3da/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Fwarn02.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Fwarn02.C?ref=8e09cb8b390102c09039c3c31ab1c0df4114e3da", "patch": "@@ -31,15 +31,15 @@ class C\n class D\n {\n public:\n-  int foo2() {return b;}  // { dg-error \"with\" } \n+  int foo2() {return b;}  // { dg-message \"previous\" } \n   int foo2() {return b;}  // { dg-error \"overloaded\" } \n   int b;\n };\n \n class E\n {\n public:\n-  int foo2(); // { dg-error \"with\" } \n+  int foo2(); // { dg-message \"previous\" } \n   int foo2(); // { dg-error \"overloaded\" } \n   int b;\n };"}, {"sha": "23d6ae69f792a9d05bdb0d19af041cd97d14a182", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/arm2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e09cb8b390102c09039c3c31ab1c0df4114e3da/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Farm2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e09cb8b390102c09039c3c31ab1c0df4114e3da/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Farm2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Farm2.C?ref=8e09cb8b390102c09039c3c31ab1c0df4114e3da", "patch": "@@ -8,12 +8,12 @@\n \n class X {\n public:\n-  int foo();            // { dg-error \"with\" }\n+  int foo();            // { dg-message \"previous\" }\n   static int foo();\t// error: redeclaration// { dg-error \"overloaded\" } .*\n };\n \n class Y {\n public:\n-   static int foo();    // { dg-error \"with\" }\n+   static int foo();    // { dg-message \"previous\" }\n   int foo();\t\t// error: redeclaration// { dg-error \"overloaded\" } .*\n };"}, {"sha": "2da0b4f9978eff1e9a92e55ad05fb365a0fd67d5", "filename": "gcc/testsuite/g++.old-deja/g++.other/redecl2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e09cb8b390102c09039c3c31ab1c0df4114e3da/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fredecl2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e09cb8b390102c09039c3c31ab1c0df4114e3da/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fredecl2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fredecl2.C?ref=8e09cb8b390102c09039c3c31ab1c0df4114e3da", "patch": "@@ -1,9 +1,9 @@\n // { dg-do assemble  }\n \n struct S {\n-  S(int); // { dg-error \"with\" }\n+  S(int); // { dg-message \"previous\" }\n   S(int); // { dg-error \"overloaded\" } already declared\n \n-  ~S();// { dg-error \"with\" }\n+  ~S();// { dg-message \"previous\" }\n   ~S(); // { dg-error \"overloaded\" } already declared\n };"}, {"sha": "c2303575dfc6f26bee876799d1d518e0d6776c30", "filename": "gcc/testsuite/g++.old-deja/g++.other/redecl4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e09cb8b390102c09039c3c31ab1c0df4114e3da/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fredecl4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e09cb8b390102c09039c3c31ab1c0df4114e3da/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fredecl4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fredecl4.C?ref=8e09cb8b390102c09039c3c31ab1c0df4114e3da", "patch": "@@ -1,7 +1,7 @@\n // { dg-do assemble  }\n int main() {\n   struct A {\n-    void f();\t\t\t// { dg-error \"with\" } already declared\n+    void f();\t\t\t// { dg-message \"previous\" } already declared\n     void f();\t\t\t// { dg-error \"overloaded\" } already declared\n   };\n }"}, {"sha": "a8ba371af7a87ffcd11ba099d02e69fccf0ed327", "filename": "gcc/testsuite/g++.old-deja/g++.pt/memtemp78.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e09cb8b390102c09039c3c31ab1c0df4114e3da/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp78.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e09cb8b390102c09039c3c31ab1c0df4114e3da/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp78.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp78.C?ref=8e09cb8b390102c09039c3c31ab1c0df4114e3da", "patch": "@@ -23,7 +23,7 @@ template struct B<int>;\n struct C \n {\n   template <class U>\n-  void f() {}  // { dg-error \"with\" } redeclaration\n+  void f() {}  // { dg-message \"previous\" } redeclaration\n \n   template <class U>\n   void f() {}  // { dg-error \"overloaded\" } redeclaration\n@@ -42,15 +42,15 @@ template struct D<int, double>;\n template <class T, class U>\n struct D2\n {\n-  void f(T); // { dg-error \"with\" } redeclaration \n+  void f(T); // { dg-message \"previous\" } redeclaration \n   void f(U); // { dg-error \"overloaded\" } redeclaration \n };\n \n template struct D2<int, int>; \n \n struct E\n {\n-  void f();  // { dg-error \"with\" } redeclaration\n+  void f();  // { dg-message \"previous\" } redeclaration\n   void f(); // { dg-error \"overloaded\" } redeclaration\n };\n "}]}