{"sha": "777a4e9acc49f2d98ab6e16de9a1b89f4f3bbd0a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzc3YTRlOWFjYzQ5ZjJkOThhYjZlMTZkZTlhMWI4OWY0ZjNiYmQwYQ==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2011-07-21T18:07:39Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2011-07-21T18:07:39Z"}, "message": "re PR tree-optimization/49749 (Reassociation rank algorithm does not include all non-NULL operands)\n\n2011-07-21  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\tPR tree-optimization/49749\n\t* tree-ssa-reassoc.c (get_rank): Fix operand scan conditions and\n\tremove no-longer-used maxrank variable.\n\nFrom-SVN: r176581", "tree": {"sha": "8cc158808753e750c27deadc59431f29be7db986", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8cc158808753e750c27deadc59431f29be7db986"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/777a4e9acc49f2d98ab6e16de9a1b89f4f3bbd0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/777a4e9acc49f2d98ab6e16de9a1b89f4f3bbd0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/777a4e9acc49f2d98ab6e16de9a1b89f4f3bbd0a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/777a4e9acc49f2d98ab6e16de9a1b89f4f3bbd0a/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d4add9520645abcfa2e1aabb71dfd1f8669f70ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4add9520645abcfa2e1aabb71dfd1f8669f70ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4add9520645abcfa2e1aabb71dfd1f8669f70ad"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "023f4787586ce00193ca3345ce546c778a40299d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/777a4e9acc49f2d98ab6e16de9a1b89f4f3bbd0a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/777a4e9acc49f2d98ab6e16de9a1b89f4f3bbd0a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=777a4e9acc49f2d98ab6e16de9a1b89f4f3bbd0a", "patch": "@@ -1,3 +1,9 @@\n+2011-07-21  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\tPR tree-optimization/49749\n+\t* tree-ssa-reassoc.c (get_rank): Fix operand scan conditions and\n+\tremove no-longer-used maxrank variable.\n+\t\n 2011-07-21  Georg-Johann Lay  <avr@gjlay.de>\n \t\n \t* config/avr/avr.c (final_prescan_insn): Fix printing of rtx_costs."}, {"sha": "86d26fbcd0f638b9bec77e138afd5fc582ea83a1", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/777a4e9acc49f2d98ab6e16de9a1b89f4f3bbd0a/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/777a4e9acc49f2d98ab6e16de9a1b89f4f3bbd0a/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=777a4e9acc49f2d98ab6e16de9a1b89f4f3bbd0a", "patch": "@@ -235,7 +235,7 @@ get_rank (tree e)\n   if (TREE_CODE (e) == SSA_NAME)\n     {\n       gimple stmt;\n-      long rank, maxrank;\n+      long rank;\n       int i, n;\n \n       if (TREE_CODE (SSA_NAME_VAR (e)) == PARM_DECL\n@@ -258,7 +258,6 @@ get_rank (tree e)\n       /* Otherwise, find the maximum rank for the operands, or the bb\n \t rank, whichever is less.   */\n       rank = 0;\n-      maxrank = bb_rank[gimple_bb(stmt)->index];\n       if (gimple_assign_single_p (stmt))\n \t{\n \t  tree rhs = gimple_assign_rhs1 (stmt);\n@@ -267,15 +266,15 @@ get_rank (tree e)\n \t    rank = MAX (rank, get_rank (rhs));\n \t  else\n \t    {\n-\t      for (i = 0;\n-\t\t   i < n && TREE_OPERAND (rhs, i) && rank != maxrank; i++)\n-\t\trank = MAX(rank, get_rank (TREE_OPERAND (rhs, i)));\n+\t      for (i = 0; i < n; i++)\n+\t\tif (TREE_OPERAND (rhs, i))\n+\t\t  rank = MAX(rank, get_rank (TREE_OPERAND (rhs, i)));\n \t    }\n \t}\n       else\n \t{\n \t  n = gimple_num_ops (stmt);\n-\t  for (i = 1; i < n && rank != maxrank; i++)\n+\t  for (i = 1; i < n; i++)\n \t    {\n \t      gcc_assert (gimple_op (stmt, i));\n \t      rank = MAX(rank, get_rank (gimple_op (stmt, i)));"}]}