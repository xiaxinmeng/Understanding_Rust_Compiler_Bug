{"sha": "d5648e1233d6edd46046ef626a73b8a1d598c4ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU2NDhlMTIzM2Q2ZWRkNDYwNDZlZjYyNmE3M2I4YTFkNTk4YzRhYw==", "commit": {"author": {"name": "Danny Smith", "email": "dannysmith@users.sourceforge.net", "date": "2003-07-16T01:04:10Z"}, "committer": {"name": "Danny Smith", "email": "dannysmith@gcc.gnu.org", "date": "2003-07-16T01:04:10Z"}, "message": "winnt.c (associated_type): Artificial methods are not affected by the import/export status of their class...\n\n\t* config/i386/winnt.c (associated_type): Artificial methods are not\n\taffected by the import/export status of their class unless they are\n\tCOMDAT.\n\t(i386_pe_dllimport_p): Do not mark artificial methods as dllimport.\n\n\t* config/i386/winnt.c: Fix GCC copyright comment.\n\nFrom-SVN: r69431", "tree": {"sha": "7adccc27757222f23f3724f7c04eeff7c304e41c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7adccc27757222f23f3724f7c04eeff7c304e41c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5648e1233d6edd46046ef626a73b8a1d598c4ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5648e1233d6edd46046ef626a73b8a1d598c4ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5648e1233d6edd46046ef626a73b8a1d598c4ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5648e1233d6edd46046ef626a73b8a1d598c4ac/comments", "author": null, "committer": null, "parents": [{"sha": "e27668301c851b3e945f092bcd7c31a9da2cf3ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e27668301c851b3e945f092bcd7c31a9da2cf3ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e27668301c851b3e945f092bcd7c31a9da2cf3ff"}], "stats": {"total": 30, "additions": 21, "deletions": 9}, "files": [{"sha": "c8b853fc83c4f00c5f11dab43e112ccef46bfb24", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5648e1233d6edd46046ef626a73b8a1d598c4ac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5648e1233d6edd46046ef626a73b8a1d598c4ac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d5648e1233d6edd46046ef626a73b8a1d598c4ac", "patch": "@@ -1,3 +1,12 @@\n+2003-07-16  Danny Smith  <dannysmith@users.sourceforge.net>\n+\n+\t* config/i386/winnt.c (associated_type): Artificial methods are not\n+\taffected by the import/export status of their class unless they are\n+\tCOMDAT.\n+\t(i386_pe_dllimport_p): Do not mark artificial methods as dllimport.\n+\n+\t* config/i386/winnt.c: Fix GCC copyright comment.\n+\n 2003-07-16  Gabriel Dos Reis  <gcc@integrable-solutions.net>\n \n \tPR c++/11531"}, {"sha": "a2219bd61269271153decf8c5a327d675cde3965", "filename": "gcc/config/i386/winnt.c", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5648e1233d6edd46046ef626a73b8a1d598c4ac/gcc%2Fconfig%2Fi386%2Fwinnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5648e1233d6edd46046ef626a73b8a1d598c4ac/gcc%2Fconfig%2Fi386%2Fwinnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwinnt.c?ref=d5648e1233d6edd46046ef626a73b8a1d598c4ac", "patch": "@@ -16,10 +16,9 @@ FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n for more details.\n \n You should have received a copy of the GNU General Public License\n-\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n+along with GCC; see the file COPYING.  If not, write to the Free\n+Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n+02111-1307, USA.  */\n \n #include \"config.h\"\n #include \"system.h\"\n@@ -174,9 +173,11 @@ associated_type (decl)\n      to the containing class.  So we look at the 'this' arg.  */\n   if (TREE_CODE (TREE_TYPE (decl)) == METHOD_TYPE)\n     {\n-      /* Artificial methods are not affected by the import/export status of\n-\t their class unless they are virtual.  */\n-      if (! DECL_ARTIFICIAL (decl) || DECL_VINDEX (decl))\n+      /* Artificial methods are not affected by the import/export status\n+\t of their class unless they are COMDAT.  Implicit copy ctor's and\n+\t dtor's are not affected by class status but virtual and\n+\t non-virtual thunks are.  */\n+      if (!DECL_ARTIFICIAL (decl) || DECL_COMDAT (decl))\n \tt = TREE_TYPE (TREE_VALUE (TYPE_ARG_TYPES (TREE_TYPE (decl))));\n     }\n   else if (DECL_CONTEXT (decl)\n@@ -279,9 +280,11 @@ i386_pe_dllimport_p (decl)\n \n       /* Since we can't treat a pointer to a dllimport'd symbol as a\n \t constant address, we turn off the attribute on C++ virtual\n-\t methods to allow creation of vtables using thunks.  */\n+\t methods to allow creation of vtables using thunks.  Don't mark\n+\t artificial methods either (in associated_type, only COMDAT\n+\t artificial method get import status from class context).  */\n       else if (TREE_CODE (TREE_TYPE (decl)) == METHOD_TYPE\n-\t       && (DECL_VIRTUAL_P (decl)))\n+\t       && (DECL_VIRTUAL_P (decl) || DECL_ARTIFICIAL (decl)))\n \treturn 0;\n \n       return 1;"}]}