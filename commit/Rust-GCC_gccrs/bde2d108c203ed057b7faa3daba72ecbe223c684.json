{"sha": "bde2d108c203ed057b7faa3daba72ecbe223c684", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmRlMmQxMDhjMjAzZWQwNTdiN2ZhYTNkYWJhNzJlY2JlMjIzYzY4NA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-10-26T20:18:26Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-10-26T20:18:26Z"}, "message": "re PR debug/41828 (DW_AT_name should not be present for anonymous aggregates)\n\n\tPR debug/41828\n\t* cp-lang.c (cxx_dwarf_name): Return NULL instead of\n\t<anonymous ...> for anonymous aggregate names.\n\n\t* dwarf2out.c (add_pubname, add_pubtype, generic_parameter_die,\n\tadd_name_and_src_coords_attributes, gen_namespace_die,\n\tdwarf2out_set_name): Handle dwarf2_name returning NULL.\n\n\t* g++.dg/debug/dwarf2/anonname1.C: New test.\n\nFrom-SVN: r153568", "tree": {"sha": "d897a3792fd374638d8f857ebbc1edebe9ae2500", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d897a3792fd374638d8f857ebbc1edebe9ae2500"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bde2d108c203ed057b7faa3daba72ecbe223c684", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bde2d108c203ed057b7faa3daba72ecbe223c684", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bde2d108c203ed057b7faa3daba72ecbe223c684", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bde2d108c203ed057b7faa3daba72ecbe223c684/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "20f2653ef0f7f2d33ec3e5ce389ab72d4216ec2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20f2653ef0f7f2d33ec3e5ce389ab72d4216ec2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20f2653ef0f7f2d33ec3e5ce389ab72d4216ec2a"}], "stats": {"total": 73, "additions": 66, "deletions": 7}, "files": [{"sha": "5cb7752ea58bba60609ea08f6137dee15ec51c69", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bde2d108c203ed057b7faa3daba72ecbe223c684/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bde2d108c203ed057b7faa3daba72ecbe223c684/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bde2d108c203ed057b7faa3daba72ecbe223c684", "patch": "@@ -1,3 +1,10 @@\n+2009-10-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/41828\n+\t* dwarf2out.c (add_pubname, add_pubtype, generic_parameter_die,\n+\tadd_name_and_src_coords_attributes, gen_namespace_die,\n+\tdwarf2out_set_name): Handle dwarf2_name returning NULL.\n+\n 2009-10-26  Nick Clifton  <nickc@redhat.com>\n \n \t* config.gcc: Add support for RX target."}, {"sha": "e72295878786fd9b0d42bf446ece33a20c6edf31", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bde2d108c203ed057b7faa3daba72ecbe223c684/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bde2d108c203ed057b7faa3daba72ecbe223c684/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=bde2d108c203ed057b7faa3daba72ecbe223c684", "patch": "@@ -1,3 +1,9 @@\n+2009-10-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/41828\n+\t* cp-lang.c (cxx_dwarf_name): Return NULL instead of\n+\t<anonymous ...> for anonymous aggregate names.\n+\n 2009-10-26  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/38796, Core issue 906"}, {"sha": "8aa01e24d396bc60cc02d698539010d403b2e452", "filename": "gcc/cp/cp-lang.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bde2d108c203ed057b7faa3daba72ecbe223c684/gcc%2Fcp%2Fcp-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bde2d108c203ed057b7faa3daba72ecbe223c684/gcc%2Fcp%2Fcp-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-lang.c?ref=bde2d108c203ed057b7faa3daba72ecbe223c684", "patch": "@@ -137,6 +137,9 @@ cxx_dwarf_name (tree t, int verbosity)\n {\n   gcc_assert (DECL_P (t));\n \n+  if (DECL_NAME (t)\n+      && (ANON_AGGRNAME_P (DECL_NAME (t)) || LAMBDANAME_P (DECL_NAME (t))))\n+    return NULL;\n   if (verbosity >= 2)\n     return decl_as_string (t,\n \t\t\t   TFF_DECL_SPECIFIERS | TFF_UNQUALIFIED_NAME"}, {"sha": "cdf19311b386a7be2a4a19c5ca16b8f5808fbe52", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 27, "deletions": 7, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bde2d108c203ed057b7faa3daba72ecbe223c684/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bde2d108c203ed057b7faa3daba72ecbe223c684/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=bde2d108c203ed057b7faa3daba72ecbe223c684", "patch": "@@ -10781,7 +10781,11 @@ static void\n add_pubname (tree decl, dw_die_ref die)\n {\n   if (TREE_PUBLIC (decl))\n-    add_pubname_string (dwarf2_name (decl, 1), die);\n+    {\n+      const char *name = dwarf2_name (decl, 1);\n+      if (name)\n+\tadd_pubname_string (name, die);\n+    }\n }\n \n /* Add a new entry to .debug_pubtypes if appropriate.  */\n@@ -10811,7 +10815,11 @@ add_pubtype (tree decl, dw_die_ref die)\n \t    }\n \t}\n       else\n-\te.name = xstrdup (dwarf2_name (decl, 1));\n+\t{\n+\t  e.name = dwarf2_name (decl, 1);\n+\t  if (e.name)\n+\t    e.name = xstrdup (e.name);\n+\t}\n \n       /* If we don't have a name for the type, there's no point in adding\n \t it to the table.  */\n@@ -12359,7 +12367,8 @@ generic_parameter_die (tree parm, tree arg,\n \t  /* The DW_AT_GNU_template_name attribute of the DIE must be set\n \t     to the name of the argument.  */\n \t  name = dwarf2_name (TYPE_P (arg) ? TYPE_NAME (arg) : arg, 1);\n-\t  add_AT_string (tmpl_die, DW_AT_GNU_template_name, name);\n+\t  if (name)\n+\t    add_AT_string (tmpl_die, DW_AT_GNU_template_name, name);\n \t}\n \n       if (TREE_CODE (parm) == PARM_DECL)\n@@ -16464,7 +16473,9 @@ add_name_and_src_coords_attributes (dw_die_ref die, tree decl)\n   decl_name = DECL_NAME (decl);\n   if (decl_name != NULL && IDENTIFIER_POINTER (decl_name) != NULL)\n     {\n-      add_name_attribute (die, dwarf2_name (decl, 0));\n+      const char *name = dwarf2_name (decl, 0);\n+      if (name)\n+\tadd_name_attribute (die, name);\n       if (! DECL_ARTIFICIAL (decl))\n \tadd_src_coords_attributes (die, decl);\n \n@@ -19222,7 +19233,11 @@ gen_namespace_die (tree decl, dw_die_ref context_die)\n \t\t\t       context_die, decl);\n       /* For Fortran modules defined in different CU don't add src coords.  */\n       if (namespace_die->die_tag == DW_TAG_module && DECL_EXTERNAL (decl))\n-\tadd_name_attribute (namespace_die, dwarf2_name (decl, 0));\n+\t{\n+\t  const char *name = dwarf2_name (decl, 0);\n+\t  if (name)\n+\t    add_name_attribute (namespace_die, name);\n+\t}\n       else\n \tadd_name_and_src_coords_attributes (namespace_die, decl);\n       if (DECL_EXTERNAL (decl))\n@@ -19910,23 +19925,28 @@ dwarf2out_set_name (tree decl, tree name)\n {\n   dw_die_ref die;\n   dw_attr_ref attr;\n+  const char *dname;\n \n   die = TYPE_SYMTAB_DIE (decl);\n   if (!die)\n     return;\n \n+  dname = dwarf2_name (name, 0);\n+  if (!dname)\n+    return;\n+\n   attr = get_AT (die, DW_AT_name);\n   if (attr)\n     {\n       struct indirect_string_node *node;\n \n-      node = find_AT_string (dwarf2_name (name, 0));\n+      node = find_AT_string (dname);\n       /* replace the string.  */\n       attr->dw_attr_val.v.val_str = node;\n     }\n \n   else\n-    add_name_attribute (die, dwarf2_name (name, 0));\n+    add_name_attribute (die, dname);\n }\n \n /* Called by the final INSN scan whenever we see a direct function call."}, {"sha": "314d953752a11354de5c97e826b8157986306b52", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bde2d108c203ed057b7faa3daba72ecbe223c684/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bde2d108c203ed057b7faa3daba72ecbe223c684/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bde2d108c203ed057b7faa3daba72ecbe223c684", "patch": "@@ -1,3 +1,8 @@\n+2009-10-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/41828\n+\t* g++.dg/debug/dwarf2/anonname1.C: New test.\n+\n 2009-10-26  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/38796"}, {"sha": "dcd2d8d566024b9a3fa1ceadd71a2779c6326fc8", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/anonname1.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bde2d108c203ed057b7faa3daba72ecbe223c684/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fanonname1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bde2d108c203ed057b7faa3daba72ecbe223c684/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fanonname1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fanonname1.C?ref=bde2d108c203ed057b7faa3daba72ecbe223c684", "patch": "@@ -0,0 +1,18 @@\n+// PR debug/41828\n+// { dg-do compile }\n+// { dg-options \"-gdwarf-2 -dA\" }\n+// { dg-final { scan-assembler-not \"<anonymous\" } }\n+// { dg-final { scan-assembler-not \"\\._\\[0-9\\]\" } }\n+// { dg-final { scan-assembler-not \"\\$_\\[0-9\\]\" } }\n+// { dg-final { scan-assembler-not \"__anon_\" } }\n+\n+struct\n+{\n+  union\n+  {\n+    struct\n+    {\n+      enum { a, b, c } x;\n+    } s;\n+  };\n+} x;"}]}