{"sha": "e64ff1039c30a38b6e88e0399f64b7a8fc359e46", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTY0ZmYxMDM5YzMwYTM4YjZlODhlMDM5OWY2NGI3YThmYzM1OWU0Ng==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-21T03:08:45Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-21T03:08:45Z"}, "message": "(subst): Set and compare extend_op with 0, not NULL.\n\nFrom-SVN: r2196", "tree": {"sha": "dc92f2c2a7fba2c9d769ac260fec3fb4be01d5bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc92f2c2a7fba2c9d769ac260fec3fb4be01d5bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e64ff1039c30a38b6e88e0399f64b7a8fc359e46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e64ff1039c30a38b6e88e0399f64b7a8fc359e46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e64ff1039c30a38b6e88e0399f64b7a8fc359e46", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e64ff1039c30a38b6e88e0399f64b7a8fc359e46/comments", "author": null, "committer": null, "parents": [{"sha": "8fed83ffd0265350d6b08f84b2dab39a9e19616f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fed83ffd0265350d6b08f84b2dab39a9e19616f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fed83ffd0265350d6b08f84b2dab39a9e19616f"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "bc1cc9b949cc06d9a0fa2a1eeece4164ab707edf", "filename": "gcc/combine.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e64ff1039c30a38b6e88e0399f64b7a8fc359e46/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e64ff1039c30a38b6e88e0399f64b7a8fc359e46/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=e64ff1039c30a38b6e88e0399f64b7a8fc359e46", "patch": "@@ -3561,7 +3561,7 @@ subst (x, from, to, in_dest, unique_copy)\n \t\t     ? const1_rtx : constm1_rtx);\n \t  rtx c = 0;\n \t  enum machine_mode m = mode;\n-\t  enum rtx_code op, extend_op = NULL;\n+\t  enum rtx_code op, extend_op = 0;\n \n \t  if ((GET_CODE (nz) == PLUS || GET_CODE (nz) == MINUS\n \t       || GET_CODE (nz) == IOR || GET_CODE (nz) == XOR\n@@ -3621,7 +3621,7 @@ subst (x, from, to, in_dest, unique_copy)\n \n \t      temp = gen_binary (op, m, gen_lowpart_for_combine (m, z), temp);\n \n-\t      if (extend_op != NULL)\n+\t      if (extend_op != 0)\n \t\ttemp = gen_unary (extend_op, mode, temp);\n \n \t      return temp;"}]}