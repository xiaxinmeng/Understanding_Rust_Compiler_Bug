{"sha": "0ca22d027eccb55215bb553b66fb10637344e2e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGNhMjJkMDI3ZWNjYjU1MjE1YmI1NTNiNjZmYjEwNjM3MzQ0ZTJlNg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-05-07T15:14:51Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-05-07T17:41:33Z"}, "message": "c++: Implement P1957R2, T* to bool should be considered narrowing.\n\nThis was approved in the Prague 2020 WG21 meeting so let's adjust the\ncomment.  Since it's supposed to be a DR I think we should no longer\nlimit it to C++20.\n\n\tP1957R2\n\t* typeck2.c (check_narrowing): Consider T* to bool narrowing\n\tin C++11 and up.\n\n\t* g++.dg/cpp0x/initlist92.C: Don't expect an error in C++20 only.", "tree": {"sha": "acb943efac6d5545437e32535fd309de96a75fb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/acb943efac6d5545437e32535fd309de96a75fb8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ca22d027eccb55215bb553b66fb10637344e2e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ca22d027eccb55215bb553b66fb10637344e2e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ca22d027eccb55215bb553b66fb10637344e2e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ca22d027eccb55215bb553b66fb10637344e2e6/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9250b3cb91b667cd67943e0fac94bf39ac089a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9250b3cb91b667cd67943e0fac94bf39ac089a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9250b3cb91b667cd67943e0fac94bf39ac089a8"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "312f1ab08242084df29d079381cb25eb5307c89c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ca22d027eccb55215bb553b66fb10637344e2e6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ca22d027eccb55215bb553b66fb10637344e2e6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0ca22d027eccb55215bb553b66fb10637344e2e6", "patch": "@@ -1,3 +1,9 @@\n+2020-05-07  Marek Polacek  <polacek@redhat.com>\n+\n+\t  P1957R2\n+\t  * typeck2.c (check_narrowing): Consider T* to bool narrowing\n+\t  in C++11 and up.\n+\n 2020-05-07  Marek Polacek  <polacek@redhat.com>\n \n \t* decl.c (grok_op_properties): Fix spelling of non-static."}, {"sha": "acf4414980c226f700e6fbbfd6a9093bf3077912", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ca22d027eccb55215bb553b66fb10637344e2e6/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ca22d027eccb55215bb553b66fb10637344e2e6/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=0ca22d027eccb55215bb553b66fb10637344e2e6", "patch": "@@ -1040,9 +1040,10 @@ check_narrowing (tree type, tree init, tsubst_flags_t complain,\n     }\n   else if (TREE_CODE (type) == BOOLEAN_TYPE\n \t   && (TYPE_PTR_P (ftype) || TYPE_PTRMEM_P (ftype)))\n-    /* This hasn't actually made it into C++20 yet, but let's add it now to get\n-       an idea of the impact.  */\n-    ok = (cxx_dialect < cxx2a);\n+    /* C++20 P1957R2: converting from a pointer type or a pointer-to-member\n+       type to bool should be considered narrowing.  This is a DR so is not\n+       limited to C++20 only.  */\n+    ok = false;\n \n   bool almost_ok = ok;\n   if (!ok && !CONSTANT_CLASS_P (init) && (complain & tf_warning_or_error))"}, {"sha": "d14d53434d7f9bec2938ffa0c501ac097f5ba873", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ca22d027eccb55215bb553b66fb10637344e2e6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ca22d027eccb55215bb553b66fb10637344e2e6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0ca22d027eccb55215bb553b66fb10637344e2e6", "patch": "@@ -1,3 +1,8 @@\n+2020-05-07  Marek Polacek  <polacek@redhat.com>\n+\n+\tP1957R2\n+\t* g++.dg/cpp0x/initlist92.C: Don't expect an error in C++20 only.\n+\n 2020-05-07  Manfred Schwarb <manfred99@gmx.ch>\n \n \t* gcc.dg/20050121-1.c: Fix broken dg directives."}, {"sha": "213b192d44111addc3fb4d3862b824b01c9f9a53", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist92.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ca22d027eccb55215bb553b66fb10637344e2e6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist92.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ca22d027eccb55215bb553b66fb10637344e2e6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist92.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist92.C?ref=0ca22d027eccb55215bb553b66fb10637344e2e6", "patch": "@@ -23,7 +23,7 @@ bool Test4(std::initializer_list<std::string>);\n \n int main () \n {\n-  ( Test1({\"false\"}) );\t// { dg-error \"narrowing\" \"\" { target c++2a } }\n+  ( Test1({\"false\"}) );\t// { dg-error \"narrowing\" }\n   ( Test2({123}) );\n   ( Test3({456}) );\n   ( Test4({\"false\"}) );"}]}