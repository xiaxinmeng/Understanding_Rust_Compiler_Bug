{"sha": "4fde88e5dd152fe866a97b12e0f8229970d15cb3", "node_id": "C_kwDOANBUbNoAKDRmZGU4OGU1ZGQxNTJmZTg2NmE5N2IxMmUwZjgyMjk5NzBkMTVjYjM", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-01-07T15:21:03Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-01-10T12:18:13Z"}, "message": "libstdc++: Add -nostdinc++ for c++17 sources [PR100017]\n\nWhen building a build!=host compiler, the just-built gcc can't be used\nto build the target libstdc++ (because it is built for the host triplet,\nnot the build triplet). The top-level configure.ac sets up the build\nflags for libstdc++ (and other \"raw_cxx\" libs) like this:\n\nGCC_TARGET_TOOL(c++ for libstdc++, RAW_CXX_FOR_TARGET, CXX,\n\t\t[gcc/xgcc -shared-libgcc -B$$r/$(HOST_SUBDIR)/gcc -nostdinc++ -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src/.libs -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/libsupc++/.libs],\n\t\tc++)\n\nThe -nostdinc++ flag is only used for the IN-TREE-TOOL, i.e. when using\nthe just-built gcc/xgcc compiler. This means that the cross-compiler\nused to build libstdc++ will add its own libstdc++ headers to the\ninclude path. That results in the #include <cfenv> in\nsrc/c++17/floating_to_chars.cc and src/c++17/floating_from_chars.cc\ndoing #include_next <fenv.h> and finding the libstdc++ fenv.h wrapper\nfrom the host compiler. Because that has the same include guard as the\n<fenv.h> in the libstdc++ we're trying to build, we never reach the\nunderlying <fenv.h> from libc. That results in several errors of the\nform:\n\nerror: 'fenv_t' has not been declared in '::'\n\nThe most correct fix would be to add -nostdinc++ to the\nRAW_CXX_FOR_TARGET variable in configure.ac, or the\nRAW_CXX_TARGET_EXPORTS variable in Makefile.tpl.\n\nAnother solution would be to make the libstdc++ <fenv.h> wrapper use\n_GLIBCXX_INCLUDE_NEXT_C_HEADERS like our <stdlib.h> and other C header\nwrappers.\n\nFor now though, the simplest and safest solution is to just add\n-nostdinc++ to the CXXFLAGS used for src/c++17/*.cc, which is what this\ndoes.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/100017\n\t* src/c++17/Makefile.am (AM_CXXFLAGS): Add -nostdinc++.\n\t* src/c++17/Makefile.in: Regenerate.", "tree": {"sha": "069cb59f466e17d00877960b05ab68ac6c7ef19b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/069cb59f466e17d00877960b05ab68ac6c7ef19b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4fde88e5dd152fe866a97b12e0f8229970d15cb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fde88e5dd152fe866a97b12e0f8229970d15cb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fde88e5dd152fe866a97b12e0f8229970d15cb3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fde88e5dd152fe866a97b12e0f8229970d15cb3/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8234b0dcb2484f836d0fb8f12aa6b04f5e66db6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8234b0dcb2484f836d0fb8f12aa6b04f5e66db6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8234b0dcb2484f836d0fb8f12aa6b04f5e66db6f"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "3d53f652fac9bc653419e785b8efc81971b6d6d2", "filename": "libstdc++-v3/src/c++17/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fde88e5dd152fe866a97b12e0f8229970d15cb3/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fde88e5dd152fe866a97b12e0f8229970d15cb3/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2FMakefile.am?ref=4fde88e5dd152fe866a97b12e0f8229970d15cb3", "patch": "@@ -79,7 +79,7 @@ endif\n # OPTIMIZE_CXXFLAGS on the compile line so that -O2 can be overridden\n # as the occasion calls for it.\n AM_CXXFLAGS = \\\n-\t-std=gnu++17 \\\n+\t-std=gnu++17 -nostdinc++ \\\n \t$(glibcxx_lt_pic_flag) $(glibcxx_compiler_shared_flag) \\\n \t$(XTEMPLATE_FLAGS) $(VTV_CXXFLAGS) \\\n \t$(WARN_CXXFLAGS) $(OPTIMIZE_CXXFLAGS) $(CONFIG_CXXFLAGS) \\"}, {"sha": "8c02be6514f8244651a9dac35e5a69e858f4862c", "filename": "libstdc++-v3/src/c++17/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fde88e5dd152fe866a97b12e0f8229970d15cb3/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fde88e5dd152fe866a97b12e0f8229970d15cb3/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2FMakefile.in?ref=4fde88e5dd152fe866a97b12e0f8229970d15cb3", "patch": "@@ -455,7 +455,7 @@ libc__17convenience_la_SOURCES = $(sources)  $(inst_sources)\n # OPTIMIZE_CXXFLAGS on the compile line so that -O2 can be overridden\n # as the occasion calls for it.\n AM_CXXFLAGS = \\\n-\t-std=gnu++17 \\\n+\t-std=gnu++17 -nostdinc++ \\\n \t$(glibcxx_lt_pic_flag) $(glibcxx_compiler_shared_flag) \\\n \t$(XTEMPLATE_FLAGS) $(VTV_CXXFLAGS) \\\n \t$(WARN_CXXFLAGS) $(OPTIMIZE_CXXFLAGS) $(CONFIG_CXXFLAGS) \\"}]}