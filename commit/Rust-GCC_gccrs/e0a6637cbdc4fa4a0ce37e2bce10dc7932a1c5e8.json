{"sha": "e0a6637cbdc4fa4a0ce37e2bce10dc7932a1c5e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTBhNjYzN2NiZGM0ZmE0YTBjZTM3ZTJiY2UxMGRjNzkzMmExYzVlOA==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2012-09-11T12:28:02Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2012-09-11T12:28:02Z"}, "message": "re PR middle-end/54149 (write introduction incorrect wrt the C11 memory model)\n\n        PR middle-end/54149\n        * tree-ssa-loop-im.c (execute_sm_if_changed_flag_set): Only set\n        flag for writes.\n\nFrom-SVN: r191179", "tree": {"sha": "9a984f9cfbe64c383745eb6303eccc37a45492a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a984f9cfbe64c383745eb6303eccc37a45492a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0a6637cbdc4fa4a0ce37e2bce10dc7932a1c5e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0a6637cbdc4fa4a0ce37e2bce10dc7932a1c5e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0a6637cbdc4fa4a0ce37e2bce10dc7932a1c5e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0a6637cbdc4fa4a0ce37e2bce10dc7932a1c5e8/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ccdbfe9398e4c225706599e6b291f4cf0e616df8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccdbfe9398e4c225706599e6b291f4cf0e616df8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccdbfe9398e4c225706599e6b291f4cf0e616df8"}], "stats": {"total": 71, "additions": 68, "deletions": 3}, "files": [{"sha": "b1ac091e2bc6311a02e1a67a9c9f05cc1368b566", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a6637cbdc4fa4a0ce37e2bce10dc7932a1c5e8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a6637cbdc4fa4a0ce37e2bce10dc7932a1c5e8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e0a6637cbdc4fa4a0ce37e2bce10dc7932a1c5e8", "patch": "@@ -1,3 +1,9 @@\n+2012-09-11  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR middle-end/54149\n+\t* tree-ssa-loop-im.c (execute_sm_if_changed_flag_set): Only set\n+\tflag for writes.\n+\n 2012-09-11  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \tPR tree-optimization/55492"}, {"sha": "59f81b756be5c2c7ff21854c805af1a66e504ba3", "filename": "gcc/testsuite/gcc.dg/simulate-thread/speculative-store-4.c", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a6637cbdc4fa4a0ce37e2bce10dc7932a1c5e8/gcc%2Ftestsuite%2Fgcc.dg%2Fsimulate-thread%2Fspeculative-store-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a6637cbdc4fa4a0ce37e2bce10dc7932a1c5e8/gcc%2Ftestsuite%2Fgcc.dg%2Fsimulate-thread%2Fspeculative-store-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsimulate-thread%2Fspeculative-store-4.c?ref=e0a6637cbdc4fa4a0ce37e2bce10dc7932a1c5e8", "patch": "@@ -0,0 +1,54 @@\n+/* { dg-do link } */\n+/* { dg-options \"--param allow-store-data-races=0\" } */\n+/* { dg-final { simulate-thread } } */\n+\n+#include <stdio.h>\n+#include <stdlib.h>\n+\n+#include \"simulate-thread.h\"\n+\n+/* PR 54139 */\n+/* Test that speculative stores do not happen for --param\n+   allow-store-data-races=0.  */\n+\n+int g_13=1, insns=1;\n+\n+__attribute__((noinline))\n+void simulate_thread_main()\n+{\n+  int l_245;\n+\n+  /* Since g_13 is unilaterally set positive above, there should be\n+     no store to g_13 below.  */\n+  for (l_245 = 0; l_245 <= 1; l_245 += 1)\n+    for (; g_13 <= 0; g_13 = 1)\n+      ;\n+}\n+\n+int main()\n+{\n+  simulate_thread_main ();\n+  simulate_thread_done ();\n+  return 0;\n+}\n+\n+void simulate_thread_other_threads ()\n+{\n+  ++g_13;\n+  ++insns;\n+}\n+\n+int simulate_thread_step_verify ()\n+{\n+  return 0;\n+}\n+\n+int simulate_thread_final_verify ()\n+{\n+  if (g_13 != insns)\n+    {\n+      printf(\"FAIL: g_13 was incorrectly cached\\n\");\n+      return 1;\n+    }\n+  return 0;\n+}"}, {"sha": "67cab3a31ae7f8f0d415543133c0a2a0b61b41a8", "filename": "gcc/tree-ssa-loop-im.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a6637cbdc4fa4a0ce37e2bce10dc7932a1c5e8/gcc%2Ftree-ssa-loop-im.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a6637cbdc4fa4a0ce37e2bce10dc7932a1c5e8/gcc%2Ftree-ssa-loop-im.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-im.c?ref=e0a6637cbdc4fa4a0ce37e2bce10dc7932a1c5e8", "patch": "@@ -2113,9 +2113,14 @@ execute_sm_if_changed_flag_set (struct loop *loop, mem_ref_p ref)\n       gimple_stmt_iterator gsi;\n       gimple stmt;\n \n-      gsi = gsi_for_stmt (loc->stmt);\n-      stmt = gimple_build_assign (flag, boolean_true_node);\n-      gsi_insert_after (&gsi, stmt, GSI_CONTINUE_LINKING);\n+      /* Only set the flag for writes.  */\n+      if (is_gimple_assign (loc->stmt)\n+\t  && gimple_assign_lhs_ptr (loc->stmt) == loc->ref)\n+\t{\n+\t  gsi = gsi_for_stmt (loc->stmt);\n+\t  stmt = gimple_build_assign (flag, boolean_true_node);\n+\t  gsi_insert_after (&gsi, stmt, GSI_CONTINUE_LINKING);\n+\t}\n     }\n   VEC_free (mem_ref_loc_p, heap, locs);\n   return flag;"}]}