{"sha": "47bedfb079ef53e4d072174d704f99dc96e6404d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDdiZWRmYjA3OWVmNTNlNGQwNzIxNzRkNzA0Zjk5ZGM5NmU2NDA0ZA==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2004-08-12T18:50:38Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-08-12T18:50:38Z"}, "message": "cxxabi_tweaks.h: Define __cxa_vec_ctor_return and _GLIBCXX_CXA_VEC_CTOR_RETURN.\n\n\t* config/cpu/arm/cxxabi_tweaks.h: Define __cxa_vec_ctor_return and\n\t_GLIBCXX_CXA_VEC_CTOR_RETURN.\n\t* config/cpu/generic/cxxabi_tweaks.h: Ditto.\n\t* libsupc++/cxxabi.h (__cxa_vec_ctor, __cxa_vec_cctor): Use\n\t__cxa_vec_ctor_return.\n\t* libsupc++/vec.cc (__cxa_vec_ctor, __cxa_vec_cctor): Ditto.\n\tUse _GLIBCXX_CXA_VEC_CTOR_RETURN.\n\n\t* g++.dg/abi/arm_cxa_vec_1.C: New test.\n\nFrom-SVN: r85891", "tree": {"sha": "9d9768cdf5728e85f1fc24224880745b23da275d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d9768cdf5728e85f1fc24224880745b23da275d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47bedfb079ef53e4d072174d704f99dc96e6404d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47bedfb079ef53e4d072174d704f99dc96e6404d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47bedfb079ef53e4d072174d704f99dc96e6404d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47bedfb079ef53e4d072174d704f99dc96e6404d/comments", "author": null, "committer": null, "parents": [{"sha": "4951f98d315e04235f40ff6e7d81e063ed92cb3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4951f98d315e04235f40ff6e7d81e063ed92cb3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4951f98d315e04235f40ff6e7d81e063ed92cb3b"}], "stats": {"total": 74, "additions": 68, "deletions": 6}, "files": [{"sha": "9256ed9fd45e30d829bace30447d6351f7730d62", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47bedfb079ef53e4d072174d704f99dc96e6404d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47bedfb079ef53e4d072174d704f99dc96e6404d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=47bedfb079ef53e4d072174d704f99dc96e6404d", "patch": "@@ -1,3 +1,7 @@\n+2004-08-12  Paul Brook  <paul@codesourcery.com>\n+\n+\t* g++.dg/abi/arm_cxa_vec_1.C: New test.\n+\n 2004-08-12  Janis Johnson  <janis187@us.ibm.com>\n \n \t* g++.dg/ext/altivec-2.C: Check for hardware support before"}, {"sha": "da66a73fa92999284f4f21cf3d62895382da1230", "filename": "gcc/testsuite/g++.dg/abi/arm_cxa_vec1.C", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47bedfb079ef53e4d072174d704f99dc96e6404d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Farm_cxa_vec1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47bedfb079ef53e4d072174d704f99dc96e6404d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Farm_cxa_vec1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Farm_cxa_vec1.C?ref=47bedfb079ef53e4d072174d704f99dc96e6404d", "patch": "@@ -0,0 +1,32 @@\n+// Check that __cxa_vec_[c]ctor returns a pointer to the array\n+// { dg-do run { target arm*-*-* xscale*-*-* } }\n+\n+#include <cxxabi.h>\n+\n+#ifdef ___ARM_EABI__\n+static void cctor (void * a, void * b)\n+{\n+  *(char *) a = *(char *) b\n+}\n+\n+int main()\n+{\n+  char data;\n+  char data2;\n+  char *p;\n+\n+  p = __cxa_vec_ctor (&data, 1, 1, NULL, NULL);\n+  if (p != &data)\n+    return 1;\n+  p = __cxa_vec_cctor (&data2, &data, 1, 1, cctor, NULL);\n+  if (p != &data2)\n+    return 1;\n+\n+  return 0;\n+}\n+#else\n+int main()\n+{\n+  return 0;\n+}\n+#endif"}, {"sha": "a4474c9dcad362c6154418466701c2dc621c42de", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47bedfb079ef53e4d072174d704f99dc96e6404d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47bedfb079ef53e4d072174d704f99dc96e6404d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=47bedfb079ef53e4d072174d704f99dc96e6404d", "patch": "@@ -1,3 +1,13 @@\n+2004-08-12  Paul Brook  <paul@codesourcery.com>\n+\n+\t* config/cpu/arm/cxxabi_tweaks.h: Define __cxa_vec_ctor_return and\n+\t_GLIBCXX_CXA_VEC_CTOR_RETURN.\n+\t* config/cpu/generic/cxxabi_tweaks.h: Ditto.\n+\t* libsupc++/cxxabi.h (__cxa_vec_ctor, __cxa_vec_cctor): Use\n+\t__cxa_vec_ctor_return.\n+\t* libsupc++/vec.cc (__cxa_vec_ctor, __cxa_vec_cctor): Ditto.\n+\tUse _GLIBCXX_CXA_VEC_CTOR_RETURN.\n+\n 2004-08-12  Kelley Cook  <kcook@gcc.gnu.org>\n \n \t* Makefile.in, aclocal.m4, configure, include/Makefile.in,"}, {"sha": "95fe12c9d8ff4782e5de9f8b9fca3b53d3afc8b2", "filename": "libstdc++-v3/config/cpu/arm/cxxabi_tweaks.h", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47bedfb079ef53e4d072174d704f99dc96e6404d/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Farm%2Fcxxabi_tweaks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47bedfb079ef53e4d072174d704f99dc96e6404d/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Farm%2Fcxxabi_tweaks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Farm%2Fcxxabi_tweaks.h?ref=47bedfb079ef53e4d072174d704f99dc96e6404d", "patch": "@@ -45,12 +45,22 @@ namespace __cxxabiv1\n   // We also want the element size in array cookies.\n #define _GLIBCXX_ELTSIZE_IN_COOKIE 1\n   \n-#else\n+  // __cxa_vec_ctor should return a pointer to the array.\n+  typedef void * __cxa_vec_ctor_return_type;\n+#define _GLIBCXX_CXA_VEC_CTOR_RETURN(x) return x\n+\n+#else // __ARM_EABI__\n+\n   // The generic ABI uses the first byte of a 64-bit guard variable.\n #define _GLIBCXX_GUARD_ACQUIRE(x) (!*(char *) (x))\n #define _GLIBCXX_GUARD_RELEASE(x) *(char *) (x) = 1\n   __extension__ typedef int __guard __attribute__((mode (__DI__)));\n-#endif\n+\n+  // __cxa_vec_ctor has void return type.\n+  typedef void __cxa_vec_ctor_return_type;\n+#define _GLIBCXX_CXA_VEC_CTOR_RETURN(x) return\n+\n+#endif //!__ARM_EABI__\n \n #ifdef __cplusplus\n } // namespace __cxxabiv1"}, {"sha": "48a0dec568bb18424c0f4c8a9472ed253e2ee2ad", "filename": "libstdc++-v3/config/cpu/generic/cxxabi_tweaks.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47bedfb079ef53e4d072174d704f99dc96e6404d/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fgeneric%2Fcxxabi_tweaks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47bedfb079ef53e4d072174d704f99dc96e6404d/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fgeneric%2Fcxxabi_tweaks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fgeneric%2Fcxxabi_tweaks.h?ref=47bedfb079ef53e4d072174d704f99dc96e6404d", "patch": "@@ -40,6 +40,10 @@ namespace __cxxabiv1\n #define _GLIBCXX_GUARD_RELEASE(x) *(char *) (x) = 1\n   __extension__ typedef int __guard __attribute__((mode (__DI__)));\n \n+  // __cxa_vec_ctor has void return type.\n+  typedef void __cxa_vec_ctor_return_type;\n+#define _GLIBCXX_CXA_VEC_CTOR_RETURN(x) return\n+\n #ifdef __cplusplus\n } // namespace __cxxabiv1\n #endif"}, {"sha": "dfed54e69ee7b69b7b2331cb792abe09b9d62ff9", "filename": "libstdc++-v3/libsupc++/cxxabi.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47bedfb079ef53e4d072174d704f99dc96e6404d/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcxxabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47bedfb079ef53e4d072174d704f99dc96e6404d/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcxxabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcxxabi.h?ref=47bedfb079ef53e4d072174d704f99dc96e6404d", "patch": "@@ -73,12 +73,12 @@ namespace __cxxabiv1\n \t\t void (*__dealloc) (void*, size_t));\n \n   // Construct array.\n-  void \n+  __cxa_vec_ctor_return_type\n   __cxa_vec_ctor(void* __array_address, size_t __element_count,\n \t\t size_t __element_size, void (*__constructor) (void*),\n \t\t void (*__destructor) (void*));\n \n-  void \n+  __cxa_vec_ctor_return_type\n   __cxa_vec_cctor(void* dest_array, void* src_array, size_t element_count, \n \t\t  size_t element_size, void (*constructor) (void*, void*), \n \t\t  void (*destructor) (void*));"}, {"sha": "2708c19aca9a0532017c13f751d72089ca1b49db", "filename": "libstdc++-v3/libsupc++/vec.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47bedfb079ef53e4d072174d704f99dc96e6404d/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fvec.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47bedfb079ef53e4d072174d704f99dc96e6404d/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fvec.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fvec.cc?ref=47bedfb079ef53e4d072174d704f99dc96e6404d", "patch": "@@ -155,7 +155,7 @@ namespace __cxxabiv1\n   }\n   \n   // Construct array.\n-  extern \"C\" void\n+  extern \"C\" __cxa_vec_ctor_return_type\n   __cxa_vec_ctor(void *array_address,\n \t\t std::size_t element_count,\n \t\t std::size_t element_size,\n@@ -179,10 +179,11 @@ namespace __cxxabiv1\n \t}\n \t__throw_exception_again;\n       }\n+    _GLIBCXX_CXA_VEC_CTOR_RETURN (array_address);\n   }\n   \n   // Construct an array by copying.\n-  extern \"C\" void\n+  extern \"C\" __cxa_vec_ctor_return_type\n   __cxa_vec_cctor(void *dest_array,\n \t\t  void *src_array,\n \t\t  std::size_t element_count,\n@@ -209,6 +210,7 @@ namespace __cxxabiv1\n \t}\n \t__throw_exception_again;\n       }\n+    _GLIBCXX_CXA_VEC_CTOR_RETURN (dest_array);\n   }\n   \n   // Destruct array."}]}