{"sha": "90a7a1b5b2c551158ccddbaad17d8b8021faa409", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBhN2ExYjViMmM1NTExNThjY2RkYmFhZDE3ZDhiODAyMWZhYTQwOQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-10-22T13:33:17Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-10-22T13:33:17Z"}, "message": "re PR tree-optimization/19049 (not vectorizing a fortran loop)\n\n2015-10-22  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/19049\n\tPR tree-optimization/65962\n\t* tree-vect-data-refs.c (vect_analyze_group_access_1): Fall back\n\tto strided accesses if single-element interleaving doesn't work.\n\n\t* gcc.dg/vect/vect-strided-store-pr65962.c: New testcase.\n\t* gcc.dg/vect/vect-63.c: Adjust.\n\t* gcc.dg/vect/vect-70.c: Likewise.\n\t* gcc.dg/vect/vect-strided-u8-i2-gap.c: Likewise.\n\t* gcc.dg/vect/vect-strided-a-u8-i2-gap.c: Likewise.\n\t* gfortran.dg/vect/pr19049.f90: Likewise.\n\t* gfortran.dg/vect/vect-8.f90: Likewise.\n\nFrom-SVN: r229172", "tree": {"sha": "9497622ff89651a2f4410c37930e350445df53bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9497622ff89651a2f4410c37930e350445df53bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90a7a1b5b2c551158ccddbaad17d8b8021faa409", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90a7a1b5b2c551158ccddbaad17d8b8021faa409", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90a7a1b5b2c551158ccddbaad17d8b8021faa409", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90a7a1b5b2c551158ccddbaad17d8b8021faa409/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a51ca2f4959300090a44a57010d4866e04b1b1e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a51ca2f4959300090a44a57010d4866e04b1b1e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a51ca2f4959300090a44a57010d4866e04b1b1e5"}], "stats": {"total": 47, "additions": 32, "deletions": 15}, "files": [{"sha": "1e06d1a46aed48309a02fed2c7e488fd06402666", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90a7a1b5b2c551158ccddbaad17d8b8021faa409/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90a7a1b5b2c551158ccddbaad17d8b8021faa409/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=90a7a1b5b2c551158ccddbaad17d8b8021faa409", "patch": "@@ -1,3 +1,10 @@\n+2015-10-22  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/19049\n+\tPR tree-optimization/65962\n+\t* tree-vect-data-refs.c (vect_analyze_group_access_1): Fall back\n+\tto strided accesses if single-element interleaving doesn't work.\n+\n 2015-10-22  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/68046"}, {"sha": "39260d6611c33f616105ed2c6362c3ce389b42e4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90a7a1b5b2c551158ccddbaad17d8b8021faa409/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90a7a1b5b2c551158ccddbaad17d8b8021faa409/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=90a7a1b5b2c551158ccddbaad17d8b8021faa409", "patch": "@@ -1,3 +1,15 @@\n+2015-10-22  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/19049\n+\tPR tree-optimization/65962\n+\t* gcc.dg/vect/vect-strided-store-pr65962.c: New testcase.\n+\t* gcc.dg/vect/vect-63.c: Adjust.\n+\t* gcc.dg/vect/vect-70.c: Likewise.\n+\t* gcc.dg/vect/vect-strided-u8-i2-gap.c: Likewise.\n+\t* gcc.dg/vect/vect-strided-a-u8-i2-gap.c: Likewise.\n+\t* gfortran.dg/vect/pr19049.f90: Likewise.\n+\t* gfortran.dg/vect/vect-8.f90: Likewise.\n+\n 2015-10-22  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/68046"}, {"sha": "8d002a5e3c349bd4cbf9e37e8194e9a7450d0bde", "filename": "gcc/testsuite/gcc.dg/vect/vect-63.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90a7a1b5b2c551158ccddbaad17d8b8021faa409/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-63.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90a7a1b5b2c551158ccddbaad17d8b8021faa409/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-63.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-63.c?ref=90a7a1b5b2c551158ccddbaad17d8b8021faa409", "patch": "@@ -13,7 +13,7 @@ int main1 ()\n   int ia[N*2][4][N];\n \n   /* Multidimensional array. Aligned. \n-     The first dimension depends on j: not vectorizable. */\n+     The first dimension depends on j: use strided stores. */\n   for (i = 0; i < N; i++)\n     {\n       for (j = 0; j < N; j++)\n@@ -42,4 +42,4 @@ int main (void)\n   return main1 ();\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */"}, {"sha": "0ec06a273df76f7d69c36e5b1511c630a9e85839", "filename": "gcc/testsuite/gcc.dg/vect/vect-70.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90a7a1b5b2c551158ccddbaad17d8b8021faa409/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-70.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90a7a1b5b2c551158ccddbaad17d8b8021faa409/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-70.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-70.c?ref=90a7a1b5b2c551158ccddbaad17d8b8021faa409", "patch": "@@ -37,7 +37,7 @@ int main1 ()\n           abort ();\n     }\n   \n-  /* not consecutive */\n+  /* not consecutive, will use strided stores */\n   for (i = 0; i < N; i++)\n     for (j = 3; j < N-3; j++)\n       { \n@@ -62,7 +62,7 @@ int main (void)\n   return main1 ();\n }\n           \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" {target { vector_alignment_reachable} } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning\" 1 \"vect\" {target {{! vector_alignment_reachable} && {! vect_hw_misalign} } } } } */"}, {"sha": "52fdcf6ee7d1e9b1e4d8981ea12e72896482e4ca", "filename": "gcc/testsuite/gcc.dg/vect/vect-strided-a-u8-i2-gap.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90a7a1b5b2c551158ccddbaad17d8b8021faa409/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-strided-a-u8-i2-gap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90a7a1b5b2c551158ccddbaad17d8b8021faa409/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-strided-a-u8-i2-gap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-strided-a-u8-i2-gap.c?ref=90a7a1b5b2c551158ccddbaad17d8b8021faa409", "patch": "@@ -44,7 +44,7 @@ main1 ()\n     }\n \n   ptr = arr;\n-  /* Not vectorizable: gap in store.  */ \n+  /* gap in store, use strided stores  */ \n   for (i = 0; i < N; i++)\n     {\n       res[i].a = ptr->b;\n@@ -71,5 +71,5 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  { target vect_strided2 } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\"  { target vect_strided2 } } } */\n   "}, {"sha": "8c541fe44a429e4beb533f06543bb332e297b812", "filename": "gcc/testsuite/gcc.dg/vect/vect-strided-u8-i2-gap.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90a7a1b5b2c551158ccddbaad17d8b8021faa409/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-strided-u8-i2-gap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90a7a1b5b2c551158ccddbaad17d8b8021faa409/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-strided-u8-i2-gap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-strided-u8-i2-gap.c?ref=90a7a1b5b2c551158ccddbaad17d8b8021faa409", "patch": "@@ -35,7 +35,7 @@ main1 (s *arr)\n     }\n \n   ptr = arr;\n-  /* Not vectorizable: gap in store.  */ \n+  /* gap in store, use strided stores.  */ \n   for (i = 0; i < N; i++)\n     {\n       res[i].a = ptr->b;\n@@ -73,5 +73,5 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  { target vect_strided2 } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\"  { target vect_strided2 } } } */\n   "}, {"sha": "5e4a8da36b07202c8fce7e8caf056158cd2a5177", "filename": "gcc/testsuite/gfortran.dg/vect/pr19049.f90", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90a7a1b5b2c551158ccddbaad17d8b8021faa409/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fpr19049.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90a7a1b5b2c551158ccddbaad17d8b8021faa409/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fpr19049.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fpr19049.f90?ref=90a7a1b5b2c551158ccddbaad17d8b8021faa409", "patch": "@@ -18,7 +18,4 @@ subroutine s111 (ntimes,ld,n,ctime,dtime,a,b,c,d,e,aa,bb,cc)\n       return\n       end\n \n-! { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 0 \"vect\" } }\n-! { dg-final { scan-tree-dump-times \"complicated access pattern\" 1 \"vect\" { xfail vect_multiple_sizes } } }\n-! { dg-final { scan-tree-dump-times \"complicated access pattern\" 2 \"vect\" { target vect_multiple_sizes } } }\n-\n+! { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } }"}, {"sha": "1b85a6152a40bec5399971ea65dff85fc604230a", "filename": "gcc/testsuite/gfortran.dg/vect/vect-8.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90a7a1b5b2c551158ccddbaad17d8b8021faa409/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect-8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90a7a1b5b2c551158ccddbaad17d8b8021faa409/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect-8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect-8.f90?ref=90a7a1b5b2c551158ccddbaad17d8b8021faa409", "patch": "@@ -703,4 +703,4 @@ SUBROUTINE kernel(tk)\n RETURN\n END SUBROUTINE kernel\n \n-! { dg-final { scan-tree-dump-times \"vectorized 19 loops\" 1 \"vect\" } }\n+! { dg-final { scan-tree-dump-times \"vectorized 20 loops\" 1 \"vect\" } }"}, {"sha": "b3ca9d6e1b86ebe34987991330989034493771d2", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90a7a1b5b2c551158ccddbaad17d8b8021faa409/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90a7a1b5b2c551158ccddbaad17d8b8021faa409/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=90a7a1b5b2c551158ccddbaad17d8b8021faa409", "patch": "@@ -2114,7 +2114,6 @@ vect_analyze_group_access_1 (struct data_reference *dr)\n  \t  dump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,\n \t                   \"not consecutive access \");\n \t  dump_gimple_stmt (MSG_MISSED_OPTIMIZATION, TDF_SLIM, stmt, 0);\n-\t  dump_printf (MSG_MISSED_OPTIMIZATION, \"\\n\");\n         }\n \n       if (bb_vinfo)\n@@ -2124,7 +2123,9 @@ vect_analyze_group_access_1 (struct data_reference *dr)\n           return true;\n         }\n \n-      return false;\n+      dump_printf_loc (MSG_NOTE, vect_location, \"using strided accesses\\n\");\n+      STMT_VINFO_STRIDED_P (stmt_info) = true;\n+      return true;\n     }\n \n   if (GROUP_FIRST_ELEMENT (vinfo_for_stmt (stmt)) == stmt)"}]}