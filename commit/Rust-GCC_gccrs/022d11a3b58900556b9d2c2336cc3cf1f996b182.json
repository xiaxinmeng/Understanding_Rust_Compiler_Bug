{"sha": "022d11a3b58900556b9d2c2336cc3cf1f996b182", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDIyZDExYTNiNTg5MDA1NTZiOWQyYzIzMzZjYzNjZjFmOTk2YjE4Mg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-12-19T13:24:04Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-12-19T13:24:04Z"}, "message": "Revert accidental commit\n\nFrom-SVN: r279570", "tree": {"sha": "1ef1cdb99ab2aedfbfc12c8c9dde9848124c7249", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ef1cdb99ab2aedfbfc12c8c9dde9848124c7249"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/022d11a3b58900556b9d2c2336cc3cf1f996b182", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/022d11a3b58900556b9d2c2336cc3cf1f996b182", "html_url": "https://github.com/Rust-GCC/gccrs/commit/022d11a3b58900556b9d2c2336cc3cf1f996b182", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/022d11a3b58900556b9d2c2336cc3cf1f996b182/comments", "author": null, "committer": null, "parents": [{"sha": "ed0eca5e631a1652c42a7f91b6c557aea887e1ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed0eca5e631a1652c42a7f91b6c557aea887e1ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed0eca5e631a1652c42a7f91b6c557aea887e1ce"}], "stats": {"total": 10, "additions": 0, "deletions": 10}, "files": [{"sha": "19e1b881e2d15c4190d74f99b070e86a9793c0d0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/022d11a3b58900556b9d2c2336cc3cf1f996b182/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/022d11a3b58900556b9d2c2336cc3cf1f996b182/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=022d11a3b58900556b9d2c2336cc3cf1f996b182", "patch": "@@ -1,8 +1,3 @@\n-2019-12-19  Richard Sandiford  <richard.sandiford@arm.com>\n-\n-\t* mangle.c (write_CV_qualifiers_for_type): Don't mangle attributes\n-\tthat contain a space.\n-\n 2019-12-18  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/91165 follow-on tweak"}, {"sha": "88c5fa2c622e419b91fe086b88215fed171840e1", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/022d11a3b58900556b9d2c2336cc3cf1f996b182/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/022d11a3b58900556b9d2c2336cc3cf1f996b182/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=022d11a3b58900556b9d2c2336cc3cf1f996b182", "patch": "@@ -2377,11 +2377,6 @@ write_CV_qualifiers_for_type (const tree type)\n \t  tree name = get_attribute_name (a);\n \t  const attribute_spec *as = lookup_attribute_spec (name);\n \t  if (as && as->affects_type_identity\n-\t      /* Skip internal-only attributes, which are distinguished from\n-\t\t others by having a space.  At present, all internal-only\n-\t\t attributes that affect type identity are target-specific\n-\t\t and are handled by targetm.mangle_type instead.  */\n-\t      && !strchr (IDENTIFIER_POINTER (name), ' ')\n \t      && !is_attribute_p (\"transaction_safe\", name)\n \t      && !is_attribute_p (\"abi_tag\", name))\n \t    vec.safe_push (a);"}]}