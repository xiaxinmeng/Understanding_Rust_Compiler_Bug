{"sha": "cf08c344561e2c24e326cb13dd2d55237b307e22", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2YwOGMzNDQ1NjFlMmMyNGUzMjZjYjEzZGQyZDU1MjM3YjMwN2UyMg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2015-11-21T13:57:09Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2015-11-21T13:57:09Z"}, "message": "nvptx.c (write_function_decl_and_comment): Print leading blank line.\n\n\t* config/nvptx/nvptx.c (write_function_decl_and_comment): Print\n\tleading blank line.\n\t(write_func_decl_from_insn): Likewise.\n\t(init_output_initializer, nvptx_assemble_undefined_decl): Likewise.\n\t(nvptx_file_end): Likewise.\n\t(nvptx_function_end): Undent output.\n\t(nvptx_expand_call): Fix formatting.\n\t(nvptx_output_call_insn): Indent output.\n\t* config/nvptx/nvptx.h (ASM_OUTPUT_ALIGNED_DECL_COMMON,\n\tASM__OUTPUT_ALIGNED_DECL_LOCAL): Print leading blank line.\n\nFrom-SVN: r230705", "tree": {"sha": "e06a729c0c9597e89544feefc1ff545ef909ab98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e06a729c0c9597e89544feefc1ff545ef909ab98"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf08c344561e2c24e326cb13dd2d55237b307e22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf08c344561e2c24e326cb13dd2d55237b307e22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf08c344561e2c24e326cb13dd2d55237b307e22", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf08c344561e2c24e326cb13dd2d55237b307e22/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d6fe6b8ad6a8b019d0b28b128e3299d79d1a52bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6fe6b8ad6a8b019d0b28b128e3299d79d1a52bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6fe6b8ad6a8b019d0b28b128e3299d79d1a52bf"}], "stats": {"total": 36, "additions": 25, "deletions": 11}, "files": [{"sha": "8e41f5b5c53b2ecb4d39f500d40c76b307cfb5ba", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf08c344561e2c24e326cb13dd2d55237b307e22/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf08c344561e2c24e326cb13dd2d55237b307e22/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cf08c344561e2c24e326cb13dd2d55237b307e22", "patch": "@@ -1,3 +1,16 @@\n+2015-11-21  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* config/nvptx/nvptx.c (write_function_decl_and_comment): Print\n+\tleading blank line.\n+\t(write_func_decl_from_insn): Likewise.\n+\t(init_output_initializer, nvptx_assemble_undefined_decl): Likewise.\n+\t(nvptx_file_end): Likewise.\n+\t(nvptx_function_end): Undent output.\n+\t(nvptx_expand_call): Fix formatting.\n+\t(nvptx_output_call_insn): Indent output.\n+\t* config/nvptx/nvptx.h (ASM_OUTPUT_ALIGNED_DECL_COMMON,\n+\tASM__OUTPUT_ALIGNED_DECL_LOCAL): Print leading blank line.\n+\n 2015-11-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/66432"}, {"sha": "fb6091d727b651accf9d958d625e94ea6e8df41e", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf08c344561e2c24e326cb13dd2d55237b307e22/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf08c344561e2c24e326cb13dd2d55237b307e22/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=cf08c344561e2c24e326cb13dd2d55237b307e22", "patch": "@@ -515,7 +515,7 @@ walk_args_for_param (FILE *file, tree argtypes, tree args, bool write_copy,\n static void\n write_function_decl_and_comment (std::stringstream &s, const char *name, const_tree decl)\n {\n-  s << \"// BEGIN\";\n+  s << \"\\n// BEGIN\";\n   if (TREE_PUBLIC (decl))\n     s << \" GLOBAL\";\n   s << \" FUNCTION DECL: \";\n@@ -765,7 +765,7 @@ write_func_decl_from_insn (std::stringstream &s, rtx result, rtx pat,\n     {\n       name = XSTR (callee, 0);\n       name = nvptx_name_replacement (name);\n-      s << \"// BEGIN GLOBAL FUNCTION DECL: \" << name << \"\\n\";\n+      s << \"\\n// BEGIN GLOBAL FUNCTION DECL: \" << name << \"\\n\";\n     }\n   s << (callprototype ? \"\\t.callprototype\\t\" : \"\\t.extern .func \");\n \n@@ -820,7 +820,7 @@ write_func_decl_from_insn (std::stringstream &s, rtx result, rtx pat,\n void\n nvptx_function_end (FILE *file)\n {\n-  fprintf (file, \"\\t}\\n\");\n+  fprintf (file, \"}\\n\");\n }\n \f\n /* Decide whether we can make a sibling call to a function.  For ptx, we\n@@ -965,7 +965,7 @@ nvptx_expand_call (rtx retval, rtx address)\n     }\n \n   if (varargs)\n-      XVECEXP (pat, 0, vec_pos++) = gen_rtx_USE (VOIDmode, varargs);\n+    XVECEXP (pat, 0, vec_pos++) = gen_rtx_USE (VOIDmode, varargs);\n \n   gcc_assert (vec_pos = XVECLEN (pat, 0));\n \n@@ -1726,7 +1726,7 @@ static void\n init_output_initializer (FILE *file, const char *name, const_tree type,\n \t\t\t bool is_public)\n {\n-  fprintf (file, \"// BEGIN%s VAR DEF: \", is_public ? \" GLOBAL\" : \"\");\n+  fprintf (file, \"\\n// BEGIN%s VAR DEF: \", is_public ? \" GLOBAL\" : \"\");\n   assemble_name_raw (file, name);\n   fputc ('\\n', file);\n \n@@ -1809,7 +1809,8 @@ nvptx_assemble_undefined_decl (FILE *file, const char *name, const_tree decl)\n   if (TREE_CODE (decl) != VAR_DECL)\n     return;\n   const char *section = nvptx_section_for_decl (decl);\n-  fprintf (file, \"// BEGIN%s VAR DECL: \", TREE_PUBLIC (decl) ? \" GLOBAL\" : \"\");\n+  fprintf (file, \"\\n// BEGIN%s VAR DECL: \",\n+\t   TREE_PUBLIC (decl) ? \" GLOBAL\" : \"\");\n   assemble_name_raw (file, name);\n   fputs (\"\\n\", file);\n   HOST_WIDE_INT size = int_size_in_bytes (TREE_TYPE (decl));\n@@ -1934,7 +1935,7 @@ nvptx_output_call_insn (rtx_insn *insn, rtx result, rtx callee)\n     }\n   fprintf (asm_out_file, \";\\n\");\n   if (result != NULL_RTX)\n-    return \"ld.param%t0\\t%0, [%%retval_in];\\n\\t}\";\n+    return \"\\tld.param%t0\\t%0, [%%retval_in];\\n\\t}\";\n \n   return \"}\";\n }\n@@ -3979,7 +3980,7 @@ nvptx_file_end (void)\n       worker_bcast_size = (worker_bcast_size + worker_bcast_align - 1)\n \t& ~(worker_bcast_align - 1);\n       \n-      fprintf (asm_out_file, \"// BEGIN VAR DEF: %s\\n\", worker_bcast_name);\n+      fprintf (asm_out_file, \"\\n// BEGIN VAR DEF: %s\\n\", worker_bcast_name);\n       fprintf (asm_out_file, \".shared .align %d .u8 %s[%d];\\n\",\n \t       worker_bcast_align,\n \t       worker_bcast_name, worker_bcast_size);\n@@ -3992,7 +3993,7 @@ nvptx_file_end (void)\n       worker_red_size = ((worker_red_size + worker_red_align - 1)\n \t\t\t & ~(worker_red_align - 1));\n       \n-      fprintf (asm_out_file, \"// BEGIN VAR DEF: %s\\n\", worker_red_name);\n+      fprintf (asm_out_file, \"\\n// BEGIN VAR DEF: %s\\n\", worker_red_name);\n       fprintf (asm_out_file, \".shared .align %d .u8 %s[%d];\\n\",\n \t       worker_red_align,\n \t       worker_red_name, worker_red_size);"}, {"sha": "1789203297c121415b0a43bf31df81f883a8d99c", "filename": "gcc/config/nvptx/nvptx.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf08c344561e2c24e326cb13dd2d55237b307e22/gcc%2Fconfig%2Fnvptx%2Fnvptx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf08c344561e2c24e326cb13dd2d55237b307e22/gcc%2Fconfig%2Fnvptx%2Fnvptx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.h?ref=cf08c344561e2c24e326cb13dd2d55237b307e22", "patch": "@@ -304,7 +304,7 @@ struct GTY(()) machine_function\n #define ASM_OUTPUT_ALIGNED_DECL_COMMON(FILE, DECL, NAME, SIZE, ALIGN)\t\\\n   do\t\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n-      fprintf (FILE, \"// BEGIN%s VAR DEF: \",\t\t\t\t\\\n+      fprintf (FILE, \"\\n// BEGIN%s VAR DEF: \",\t\t\t\t\\\n \t       TREE_PUBLIC (DECL) ? \" GLOBAL\" : \"\");\t\t\t\\\n       assemble_name_raw (FILE, NAME);\t\t\t\t\t\\\n       fputc ('\\n', FILE);\t\t\t\t\t\t\\\n@@ -322,7 +322,7 @@ struct GTY(()) machine_function\n #define ASM_OUTPUT_ALIGNED_DECL_LOCAL(FILE, DECL, NAME, SIZE, ALIGN)\t\\\n   do\t\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n-      fprintf (FILE, \"// BEGIN VAR DEF: \");\t\t\t\t\\\n+      fprintf (FILE, \"\\n// BEGIN VAR DEF: \");\t\t\t\t\\\n       assemble_name_raw (FILE, NAME);\t\t\t\t\t\\\n       fputc ('\\n', FILE);\t\t\t\t\t\t\\\n       const char *sec = nvptx_section_for_decl (DECL);\t\t\t\\"}]}