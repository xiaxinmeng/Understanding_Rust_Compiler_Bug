{"sha": "fd5cabb2d7b8eed87dd4e00a8341b769674046ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQ1Y2FiYjJkN2I4ZWVkODdkZDRlMDBhODM0MWI3Njk2NzQwNDZlZg==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2015-07-06T16:33:38Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2015-07-06T16:33:38Z"}, "message": "io.c (check_char_variable): New function.\n\n2015-07-06  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\t* io.c (check_char_variable): New function.\n\t(match_open_element, match_close_element, match_file_element,\n\tmatch_dt_element, match_inquire_element, match_wait_element): Use it.\n\n\n2015-07-06  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\t* gfortran.dg/iomsg_2.f90: New test.\n\nFrom-SVN: r225462", "tree": {"sha": "4e2e930901874fcddc143fcd5c5f5d848034696e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e2e930901874fcddc143fcd5c5f5d848034696e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd5cabb2d7b8eed87dd4e00a8341b769674046ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd5cabb2d7b8eed87dd4e00a8341b769674046ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd5cabb2d7b8eed87dd4e00a8341b769674046ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd5cabb2d7b8eed87dd4e00a8341b769674046ef/comments", "author": null, "committer": null, "parents": [{"sha": "9c769a65e92b891c96d6f9088b55a450164964c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c769a65e92b891c96d6f9088b55a450164964c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c769a65e92b891c96d6f9088b55a450164964c3"}], "stats": {"total": 95, "additions": 88, "deletions": 7}, "files": [{"sha": "a3a37db8e202501ba41e6d1a9cbefcabaed1ae0d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd5cabb2d7b8eed87dd4e00a8341b769674046ef/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd5cabb2d7b8eed87dd4e00a8341b769674046ef/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=fd5cabb2d7b8eed87dd4e00a8341b769674046ef", "patch": "@@ -1,3 +1,9 @@\n+2015-07-06  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\t* io.c (check_char_variable): New function.\n+\t(match_open_element, match_close_element, match_file_element,\n+\tmatch_dt_element, match_inquire_element, match_wait_element): Use it.\n+\n 2015-07-06  Andre Vehreschild  <vehre@gmx.de>\n \n \tPR fortran/58586"}, {"sha": "e8395b5480d53ba04888252e7d08e1c7f19f2522", "filename": "gcc/fortran/io.c", "status": "modified", "additions": 34, "deletions": 7, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd5cabb2d7b8eed87dd4e00a8341b769674046ef/gcc%2Ffortran%2Fio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd5cabb2d7b8eed87dd4e00a8341b769674046ef/gcc%2Ffortran%2Fio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fio.c?ref=fd5cabb2d7b8eed87dd4e00a8341b769674046ef", "patch": "@@ -1181,7 +1181,7 @@ check_format_string (gfc_expr *e, bool is_input)\n }\n \n \n-/************ Fortran 95 I/O statement matchers *************/\n+/************ Fortran I/O statement matchers *************/\n \n /* Match a FORMAT statement.  This amounts to actually parsing the\n    format descriptors in order to correctly locate the end of the\n@@ -1242,6 +1242,21 @@ gfc_match_format (void)\n }\n \n \n+/* Check for a CHARACTER variable.  The check for scalar is done in\n+   resolve_tag.  */\n+\n+static bool\n+check_char_variable (gfc_expr *e)\n+{\n+  if (e->expr_type != EXPR_VARIABLE || e->ts.type != BT_CHARACTER)\n+    {\n+      gfc_error(\"IOMSG must be a scalar-default-char-variable at %L\", &e->where);\n+      return false;\n+    }\n+  return true;\n+}\n+\n+\n static bool\n is_char_type (const char *name, gfc_expr *e)\n {\n@@ -1570,7 +1585,9 @@ match_open_element (gfc_open *open)\n   m = match_etag (&tag_unit, &open->unit);\n   if (m != MATCH_NO)\n     return m;\n-  m = match_out_tag (&tag_iomsg, &open->iomsg);\n+  m = match_etag (&tag_iomsg, &open->iomsg);\n+  if (m == MATCH_YES && !check_char_variable (open->iomsg))\n+    return MATCH_ERROR;\n   if (m != MATCH_NO)\n     return m;\n   m = match_out_tag (&tag_iostat, &open->iostat);\n@@ -2234,7 +2251,9 @@ match_close_element (gfc_close *close)\n   m = match_etag (&tag_status, &close->status);\n   if (m != MATCH_NO)\n     return m;\n-  m = match_out_tag (&tag_iomsg, &close->iomsg);\n+  m = match_etag (&tag_iomsg, &close->iomsg);\n+  if (m == MATCH_YES && !check_char_variable (close->iomsg))\n+    return MATCH_ERROR;\n   if (m != MATCH_NO)\n     return m;\n   m = match_out_tag (&tag_iostat, &close->iostat);\n@@ -2395,7 +2414,9 @@ match_file_element (gfc_filepos *fp)\n   m = match_etag (&tag_unit, &fp->unit);\n   if (m != MATCH_NO)\n     return m;\n-  m = match_out_tag (&tag_iomsg, &fp->iomsg);\n+  m = match_etag (&tag_iomsg, &fp->iomsg);\n+  if (m == MATCH_YES && !check_char_variable (fp->iomsg))\n+    return MATCH_ERROR;\n   if (m != MATCH_NO)\n     return m;\n   m = match_out_tag (&tag_iostat, &fp->iostat);\n@@ -2760,7 +2781,9 @@ match_dt_element (io_kind k, gfc_dt *dt)\n   m = match_etag (&tag_spos, &dt->pos);\n   if (m != MATCH_NO)\n     return m;\n-  m = match_out_tag (&tag_iomsg, &dt->iomsg);\n+  m = match_etag (&tag_iomsg, &dt->iomsg);\n+  if (m == MATCH_YES && !check_char_variable (dt->iomsg))\n+    return MATCH_ERROR;\n   if (m != MATCH_NO)\n     return m;\n \n@@ -3939,7 +3962,9 @@ match_inquire_element (gfc_inquire *inquire)\n   m = match_etag (&tag_unit, &inquire->unit);\n   RETM m = match_etag (&tag_file, &inquire->file);\n   RETM m = match_ltag (&tag_err, &inquire->err);\n-  RETM m = match_out_tag (&tag_iomsg, &inquire->iomsg);\n+  RETM m = match_etag (&tag_iomsg, &inquire->iomsg);\n+  if (m == MATCH_YES && !check_char_variable (inquire->iomsg))\n+    return MATCH_ERROR;\n   RETM m = match_out_tag (&tag_iostat, &inquire->iostat);\n   RETM m = match_vtag (&tag_exist, &inquire->exist);\n   RETM m = match_vtag (&tag_opened, &inquire->opened);\n@@ -4222,7 +4247,9 @@ match_wait_element (gfc_wait *wait)\n   RETM m = match_ltag (&tag_err, &wait->err);\n   RETM m = match_ltag (&tag_end, &wait->eor);\n   RETM m = match_ltag (&tag_eor, &wait->end);\n-  RETM m = match_out_tag (&tag_iomsg, &wait->iomsg);\n+  RETM m = match_etag (&tag_iomsg, &wait->iomsg);\n+  if (m == MATCH_YES && !check_char_variable (wait->iomsg))\n+    return MATCH_ERROR;\n   RETM m = match_out_tag (&tag_iostat, &wait->iostat);\n   RETM m = match_etag (&tag_id, &wait->id);\n   RETM return MATCH_NO;"}, {"sha": "1d26b14cf852a2f8b42c8d16b7692b6f42c02e59", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd5cabb2d7b8eed87dd4e00a8341b769674046ef/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd5cabb2d7b8eed87dd4e00a8341b769674046ef/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fd5cabb2d7b8eed87dd4e00a8341b769674046ef", "patch": "@@ -1,3 +1,7 @@\n+2015-07-06  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\t* gfortran.dg/iomsg_2.f90: New test.\n+\n 2015-07-06  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/66772"}, {"sha": "29500ed01aea474e62a200435cbcb6f003117f03", "filename": "gcc/testsuite/gfortran.dg/iomsg_2.f90", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd5cabb2d7b8eed87dd4e00a8341b769674046ef/gcc%2Ftestsuite%2Fgfortran.dg%2Fiomsg_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd5cabb2d7b8eed87dd4e00a8341b769674046ef/gcc%2Ftestsuite%2Fgfortran.dg%2Fiomsg_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fiomsg_2.f90?ref=fd5cabb2d7b8eed87dd4e00a8341b769674046ef", "patch": "@@ -0,0 +1,44 @@\n+! { dg-do compile }\n+subroutine foo1\n+   implicit none\n+   integer i\n+   open(1, iomsg=666)      ! { dg-error \"IOMSG must be\" }\n+   open(1, iomsg='sgk')    ! { dg-error \"IOMSG must be\" }\n+   open(1, iomsg=i)        ! { dg-error \"IOMSG must be\" }\n+   close(1, iomsg=666)     ! { dg-error \"IOMSG must be\" }\n+   close(1, iomsg='sgk')   ! { dg-error \"IOMSG must be\" }\n+   close(1, iomsg=i)       ! { dg-error \"IOMSG must be\" }\n+end subroutine foo1\n+\n+subroutine foo\n+   implicit none\n+   integer i\n+   real :: x = 1\n+   write(1, *, iomsg='sgk') x   ! { dg-error \"IOMSG must be\" }\n+   write(1, *, iomsg=i)     x   ! { dg-error \"IOMSG must be\" }\n+   read(1,  *, iomsg='sgk') x   ! { dg-error \"IOMSG must be\" }\n+   read(1,  *, iomsg=i)     x   ! { dg-error \"IOMSG must be\" }\n+   flush(1,    iomsg='sgk')     ! { dg-error \"IOMSG must be\" }\n+   flush(1,    iomsg=i)         ! { dg-error \"IOMSG must be\" }\n+   rewind(1,   iomsg='sgk')     ! { dg-error \"IOMSG must be\" }\n+   rewind(1,   iomsg=i)         ! { dg-error \"IOMSG must be\" }\n+   backspace(1,iomsg='sgk')     ! { dg-error \"IOMSG must be\" }\n+   backspace(1,iomsg=i)         ! { dg-error \"IOMSG must be\" }\n+   wait(1,     iomsg='sgk')     ! { dg-error \"IOMSG must be\" }\n+   wait(1,     iomsg=i)         ! { dg-error \"IOMSG must be\" }\n+end subroutine foo\n+\n+subroutine bar\n+   implicit none\n+   integer i\n+   real :: x = 1\n+   character(len=20) s(2)\n+   open(1, iomsg=s)         ! { dg-error \"must be scalar\" }\n+   close(1, iomsg=s)        ! { dg-error \"must be scalar\" }\n+   write(1, *, iomsg=s) x   ! { dg-error \"must be scalar\" }\n+   read(1,  *, iomsg=s) x   ! { dg-error \"must be scalar\" }\n+   flush(1,    iomsg=s)     ! { dg-error \"must be scalar\" }\n+   rewind(1,   iomsg=s)     ! { dg-error \"must be scalar\" }\n+   backspace(1,iomsg=s)     ! { dg-error \"must be scalar\" }\n+   wait(1,     iomsg=s)     ! { dg-error \"must be scalar\" }\n+end subroutine bar"}]}