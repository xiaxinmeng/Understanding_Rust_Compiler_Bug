{"sha": "a6fe9ed43e2cb62e8616dbb825172b9e9db7ed98", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZmZTllZDQzZTJjYjYyZTg2MTZkYmI4MjUxNzJiOWU5ZGI3ZWQ5OA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2009-03-04T01:57:29Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2009-03-04T01:57:29Z"}, "message": "emit-rtl.c (adjust_address_1): Reduce offset to a signed value that fits within Pmode.\n\n\t* emit-rtl.c (adjust_address_1): Reduce offset to a signed value\n\tthat fits within Pmode.\n\ntestsuite:\n\t* gcc.c-torture/compile/20090303-1.c,\n\tgcc.c-torture/compile/20090303-2.c: New tests.\n\nFrom-SVN: r144595", "tree": {"sha": "09145ea9afe18888cc75a7347dcca1bd063003f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09145ea9afe18888cc75a7347dcca1bd063003f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6fe9ed43e2cb62e8616dbb825172b9e9db7ed98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6fe9ed43e2cb62e8616dbb825172b9e9db7ed98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6fe9ed43e2cb62e8616dbb825172b9e9db7ed98", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6fe9ed43e2cb62e8616dbb825172b9e9db7ed98/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd7d0a4f8f91b346bb409b70a53351517668952f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd7d0a4f8f91b346bb409b70a53351517668952f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd7d0a4f8f91b346bb409b70a53351517668952f"}], "stats": {"total": 61, "additions": 61, "deletions": 0}, "files": [{"sha": "661f0d7e7dae09638137a206587c0f4ee5da36ef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6fe9ed43e2cb62e8616dbb825172b9e9db7ed98/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6fe9ed43e2cb62e8616dbb825172b9e9db7ed98/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a6fe9ed43e2cb62e8616dbb825172b9e9db7ed98", "patch": "@@ -1,3 +1,8 @@\n+2009-03-03  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* emit-rtl.c (adjust_address_1): Reduce offset to a signed value\n+\tthat fits within Pmode.\n+\n 2009-03-03  Steve Ellcey  <sje@cup.hp.com>\n \n \tPR middle-end/10109"}, {"sha": "ca033824c0d0de806519620a691d6016d9e12bbc", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6fe9ed43e2cb62e8616dbb825172b9e9db7ed98/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6fe9ed43e2cb62e8616dbb825172b9e9db7ed98/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=a6fe9ed43e2cb62e8616dbb825172b9e9db7ed98", "patch": "@@ -2008,6 +2008,7 @@ adjust_address_1 (rtx memref, enum machine_mode mode, HOST_WIDE_INT offset,\n   rtx memoffset = MEM_OFFSET (memref);\n   rtx size = 0;\n   unsigned int memalign = MEM_ALIGN (memref);\n+  int pbits;\n \n   /* If there are no changes, just return the original memory reference.  */\n   if (mode == GET_MODE (memref) && !offset\n@@ -2019,6 +2020,16 @@ adjust_address_1 (rtx memref, enum machine_mode mode, HOST_WIDE_INT offset,\n      (plus (plus reg reg) const_int) -- so do this always.  */\n   addr = copy_rtx (addr);\n \n+  /* Convert a possibly large offset to a signed value within the\n+     range of the target address space.  */\n+  pbits = GET_MODE_BITSIZE (Pmode);\n+  if (HOST_BITS_PER_WIDE_INT > pbits)\n+    {\n+      int shift = HOST_BITS_PER_WIDE_INT - pbits;\n+      offset = (((HOST_WIDE_INT) ((unsigned HOST_WIDE_INT) offset << shift))\n+\t\t>> shift);\n+    }\n+\n   if (adjust)\n     {\n       /* If MEMREF is a LO_SUM and the offset is within the alignment of the"}, {"sha": "2851a70a3387dc46a687f5088e1e79f671c7b594", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6fe9ed43e2cb62e8616dbb825172b9e9db7ed98/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6fe9ed43e2cb62e8616dbb825172b9e9db7ed98/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a6fe9ed43e2cb62e8616dbb825172b9e9db7ed98", "patch": "@@ -1,3 +1,8 @@\n+2009-03-03  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.c-torture/compile/20090303-1.c,\n+\tgcc.c-torture/compile/20090303-2.c: New tests.\n+\n 2009-03-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/39354"}, {"sha": "18a3d91fd1c5ede98fd25e9ccf10c655b2034f56", "filename": "gcc/testsuite/gcc.c-torture/compile/20090303-1.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6fe9ed43e2cb62e8616dbb825172b9e9db7ed98/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20090303-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6fe9ed43e2cb62e8616dbb825172b9e9db7ed98/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20090303-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20090303-1.c?ref=a6fe9ed43e2cb62e8616dbb825172b9e9db7ed98", "patch": "@@ -0,0 +1,20 @@\n+/* The array offset became 0x1ffffffffffffffe via a conversion from\n+   signed to unsigned HOST_WIDE_INT, causing an ICE compiling for\n+   Thumb.  */\n+\n+int r (unsigned short *);\n+void s (unsigned short *, unsigned short *);\n+\n+int\n+f (int x)\n+{\n+  unsigned short a[1], c[1];\n+\n+  if (r (a))\n+    return x;\n+\n+  if (c[-1])\n+    s (a, c);\n+\n+  return 0;\n+}"}, {"sha": "69cee36e0b97c12e0a176391ba208f68d7cc80f4", "filename": "gcc/testsuite/gcc.c-torture/compile/20090303-2.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6fe9ed43e2cb62e8616dbb825172b9e9db7ed98/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20090303-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6fe9ed43e2cb62e8616dbb825172b9e9db7ed98/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20090303-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20090303-2.c?ref=a6fe9ed43e2cb62e8616dbb825172b9e9db7ed98", "patch": "@@ -0,0 +1,20 @@\n+/* The array offset became 0x1ffffffffffffffe via a conversion from\n+   signed to unsigned HOST_WIDE_INT, causing an ICE compiling for\n+   Thumb.  */\n+\n+int r (unsigned short *);\n+void s (unsigned short *, unsigned short *);\n+\n+int\n+f (int x)\n+{\n+  unsigned short a[1], c[1];\n+\n+  if (r (a))\n+    return x;\n+\n+  if (c[0x7fffffff])\n+    s (a, c);\n+\n+  return 0;\n+}"}]}