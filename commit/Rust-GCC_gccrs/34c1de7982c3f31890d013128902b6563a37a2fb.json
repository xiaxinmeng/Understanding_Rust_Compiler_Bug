{"sha": "34c1de7982c3f31890d013128902b6563a37a2fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzRjMWRlNzk4MmMzZjMxODkwZDAxMzEyODkwMmI2NTYzYTM3YTJmYg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-02-01T14:36:00Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-02-01T14:36:00Z"}, "message": "re PR tree-optimization/47555 (Huge memory usage when optimizing)\n\n2011-02-01  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/47555\n\tRevert\n\t2010-07-15  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* params.def (PARAM_SCEV_MAX_EXPR_SIZE): Bump the value to 100.\n\n\t* gcc.dg/pr47555.c: New testcase.\n\nFrom-SVN: r169478", "tree": {"sha": "7ef85fd21f126a84b542c478214f84d009d326ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ef85fd21f126a84b542c478214f84d009d326ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34c1de7982c3f31890d013128902b6563a37a2fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34c1de7982c3f31890d013128902b6563a37a2fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34c1de7982c3f31890d013128902b6563a37a2fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34c1de7982c3f31890d013128902b6563a37a2fb/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dd2804d247035f398e3f1e61c394fb7d54f37698", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd2804d247035f398e3f1e61c394fb7d54f37698", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd2804d247035f398e3f1e61c394fb7d54f37698"}], "stats": {"total": 51, "additions": 50, "deletions": 1}, "files": [{"sha": "8f43325b6e70d54a5b25ad73cc2652fdb0ebe701", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34c1de7982c3f31890d013128902b6563a37a2fb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34c1de7982c3f31890d013128902b6563a37a2fb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=34c1de7982c3f31890d013128902b6563a37a2fb", "patch": "@@ -1,3 +1,11 @@\n+2011-02-01  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/47555\n+\tRevert\n+\t2010-07-15  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* params.def (PARAM_SCEV_MAX_EXPR_SIZE): Bump the value to 100.\n+\n 2011-02-01  Sebastien Bourdeauducq  <sebastien@milkymist.org>\n \n \tPR gcc/46692"}, {"sha": "3138bc22cd72a51038d81dc735fdb1baf902e2eb", "filename": "gcc/params.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34c1de7982c3f31890d013128902b6563a37a2fb/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34c1de7982c3f31890d013128902b6563a37a2fb/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=34c1de7982c3f31890d013128902b6563a37a2fb", "patch": "@@ -481,7 +481,7 @@ DEFPARAM(PARAM_IV_ALWAYS_PRUNE_CAND_SET_BOUND,\n DEFPARAM(PARAM_SCEV_MAX_EXPR_SIZE,\n  \t \"scev-max-expr-size\",\n \t \"Bound on size of expressions used in the scalar evolutions analyzer\",\n-\t 100, 0, 0)\n+\t 20, 0, 0)\n \n DEFPARAM(PARAM_OMEGA_MAX_VARS,\n  \t \"omega-max-vars\","}, {"sha": "d047f874911388fb24a204f309d656f844519e98", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34c1de7982c3f31890d013128902b6563a37a2fb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34c1de7982c3f31890d013128902b6563a37a2fb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=34c1de7982c3f31890d013128902b6563a37a2fb", "patch": "@@ -1,3 +1,8 @@\n+2011-02-01  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/47555\n+\t* gcc.dg/pr47555.c: New testcase.\n+\n 2011-02-01  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/47541"}, {"sha": "d65265274f953e9c02529a40be6cf83080b5633d", "filename": "gcc/testsuite/gcc.dg/pr47555.c", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34c1de7982c3f31890d013128902b6563a37a2fb/gcc%2Ftestsuite%2Fgcc.dg%2Fpr47555.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34c1de7982c3f31890d013128902b6563a37a2fb/gcc%2Ftestsuite%2Fgcc.dg%2Fpr47555.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr47555.c?ref=34c1de7982c3f31890d013128902b6563a37a2fb", "patch": "@@ -0,0 +1,36 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+#define FILL_BACK *ptrRGB++=0; *ptrRGB++=0; *ptrRGB++=0;\n+\n+  \n+void uncompact(unsigned char* ptrRGB, const unsigned int* ptrSrc, const unsigned char* ptrRGBcompact, int line, int nbPixLeft)\n+{\n+\n+#define BIT_2_RGB32                                                     \\\n+  if ((v & 0x00000001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } \\\n+  else{ FILL_BACK }                                                     \\\n+  v >>= 1;\n+#define BIT_2_RGB16                                                     \\\n+  if ((v16 & 0x0001)){ nbPixLeft--; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; *ptrRGB++ = *ptrRGBcompact++; } \\\n+  else{ FILL_BACK }                                                     \\\n+  v16 >>= 1;\t\t\t\t\n+\n+  int x;\n+  unsigned int v, *ptrSrc32bits=(unsigned int*)ptrSrc;\n+  unsigned short v16,*ptrSrc16bits;\n+\n+  for(x=0; x<line; x++) {\n+    v = *ptrSrc32bits++;\n+    BIT_2_RGB32 BIT_2_RGB32 BIT_2_RGB32 BIT_2_RGB32 BIT_2_RGB32 BIT_2_RGB32 BIT_2_RGB32 BIT_2_RGB32\n+    BIT_2_RGB32 BIT_2_RGB32 BIT_2_RGB32 BIT_2_RGB32 BIT_2_RGB32 BIT_2_RGB32 BIT_2_RGB32 BIT_2_RGB32\n+    BIT_2_RGB32 BIT_2_RGB32 BIT_2_RGB32 BIT_2_RGB32 BIT_2_RGB32 BIT_2_RGB32 BIT_2_RGB32 BIT_2_RGB32\n+    BIT_2_RGB32 BIT_2_RGB32 BIT_2_RGB32 BIT_2_RGB32 BIT_2_RGB32 BIT_2_RGB32 BIT_2_RGB32 BIT_2_RGB32\n+  }\n+\n+  ptrSrc16bits=(unsigned short *)ptrSrc32bits;\n+  v16 = *ptrSrc16bits++;\n+  BIT_2_RGB16\tBIT_2_RGB16\tBIT_2_RGB16\tBIT_2_RGB16\tBIT_2_RGB16\tBIT_2_RGB16\t\n+  BIT_2_RGB16\tBIT_2_RGB16\tBIT_2_RGB16\tBIT_2_RGB16\tBIT_2_RGB16\tBIT_2_RGB16      \n+ \n+}"}]}