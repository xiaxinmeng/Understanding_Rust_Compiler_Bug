{"sha": "e152035846e82b5c247d0e40b19e46688a82efb3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTE1MjAzNTg0NmU4MmI1YzI0N2QwZTQwYjE5ZTQ2Njg4YTgyZWZiMw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-09-21T21:07:24Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-09-21T21:07:24Z"}, "message": "compiler: Better error message if method requires pointer receiver.\n\nFrom-SVN: r191619", "tree": {"sha": "f6df636a7ee31905949a14f3c9a3571907d060fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6df636a7ee31905949a14f3c9a3571907d060fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e152035846e82b5c247d0e40b19e46688a82efb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e152035846e82b5c247d0e40b19e46688a82efb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e152035846e82b5c247d0e40b19e46688a82efb3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e152035846e82b5c247d0e40b19e46688a82efb3/comments", "author": null, "committer": null, "parents": [{"sha": "74adb444f9795fe759ccc36294de9f1c0d6b3e9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74adb444f9795fe759ccc36294de9f1c0d6b3e9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74adb444f9795fe759ccc36294de9f1c0d6b3e9e"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "16ff7505876513b542d5ff22229608ff9110bd1d", "filename": "gcc/go/gofrontend/types.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e152035846e82b5c247d0e40b19e46688a82efb3/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e152035846e82b5c247d0e40b19e46688a82efb3/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.cc?ref=e152035846e82b5c247d0e40b19e46688a82efb3", "patch": "@@ -6845,7 +6845,8 @@ Interface_type::implements_interface(const Type* t, std::string* reason) const\n \t      std::string n = Gogo::message_name(p->name());\n \t      size_t len = 100 + n.length();\n \t      char* buf = new char[len];\n-\t      snprintf(buf, len, _(\"method %s%s%s requires a pointer\"),\n+\t      snprintf(buf, len,\n+\t\t       _(\"method %s%s%s requires a pointer receiver\"),\n \t\t       open_quote, n.c_str(), close_quote);\n \t      reason->assign(buf);\n \t      delete[] buf;\n@@ -9034,7 +9035,7 @@ Type::bind_field_or_method(Gogo* gogo, const Type* type, Expression* expr,\n \t\t Gogo::message_name(name).c_str(), ambig1.c_str(),\n \t\t ambig2.c_str());\n       else if (found_pointer_method)\n-\terror_at(location, \"method requires a pointer\");\n+\terror_at(location, \"method requires a pointer receiver\");\n       else if (nt == NULL && st == NULL && it == NULL)\n \terror_at(location,\n \t\t (\"reference to field %qs in object which \""}]}