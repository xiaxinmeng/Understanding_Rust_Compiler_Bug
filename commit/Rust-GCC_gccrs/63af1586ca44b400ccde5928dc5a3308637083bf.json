{"sha": "63af1586ca44b400ccde5928dc5a3308637083bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjNhZjE1ODZjYTQ0YjQwMGNjZGU1OTI4ZGM1YTMzMDg2MzcwODNiZg==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2017-02-19T19:59:20Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2017-02-19T19:59:20Z"}, "message": "re PR fortran/79447 ([F08] gfortran rejects valid & accepts invalid internal subprogram in a submodule)\n\n2017-02-19  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/79447\n\t* decl.c (gfc_set_constant_character_len): Whitespace.\n\t(gfc_match_end): Catch case where a procedure is contained in\n\ta module procedure and ensure that 'end procedure' is the\n\tcorrect termination.\n\n2017-02-19  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/79447\n\t* gfortran.dg/submodule_24.f08 : New test.\n\nFrom-SVN: r245582", "tree": {"sha": "ddab479b52277ed3394bab1e6107ae8bcd9b4104", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ddab479b52277ed3394bab1e6107ae8bcd9b4104"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63af1586ca44b400ccde5928dc5a3308637083bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63af1586ca44b400ccde5928dc5a3308637083bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63af1586ca44b400ccde5928dc5a3308637083bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63af1586ca44b400ccde5928dc5a3308637083bf/comments", "author": null, "committer": null, "parents": [{"sha": "4ca4d1e95e39d256095f8274d8dd0d04aed603da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ca4d1e95e39d256095f8274d8dd0d04aed603da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ca4d1e95e39d256095f8274d8dd0d04aed603da"}], "stats": {"total": 50, "additions": 44, "deletions": 6}, "files": [{"sha": "fb7123472d7a8fb18f272a47b06470ade88719d7", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63af1586ca44b400ccde5928dc5a3308637083bf/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63af1586ca44b400ccde5928dc5a3308637083bf/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=63af1586ca44b400ccde5928dc5a3308637083bf", "patch": "@@ -1,4 +1,12 @@\n-017-02-19  Paul Thomas  <pault@gcc.gnu.org>\n+2017-02-19  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/79447\n+\t* decl.c (gfc_set_constant_character_len): Whitespace.\n+\t(gfc_match_end): Catch case where a procedure is contained in\n+\ta module procedure and ensure that 'end procedure' is the\n+\tcorrect termination.\n+\n+2017-02-19  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/79402\n \t* resolve.c (fixup_unique_dummy): New function."}, {"sha": "d3e7e84236e8452ec12860ef857ed4453dd25dc2", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63af1586ca44b400ccde5928dc5a3308637083bf/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63af1586ca44b400ccde5928dc5a3308637083bf/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=63af1586ca44b400ccde5928dc5a3308637083bf", "patch": "@@ -1499,7 +1499,7 @@ gfc_set_constant_character_len (int len, gfc_expr *expr, int check_len)\n \n   if (expr->ts.type != BT_CHARACTER)\n     return;\n- \n+\n   if (expr->expr_type != EXPR_CONSTANT)\n     {\n       gfc_error_now (\"CHARACTER length must be a constant at %L\", &expr->where);\n@@ -6756,7 +6756,7 @@ gfc_match_end (gfc_statement *st)\n   match m;\n   gfc_namespace *parent_ns, *ns, *prev_ns;\n   gfc_namespace **nsp;\n-  bool abreviated_modproc_decl;\n+  bool abreviated_modproc_decl = false;\n   bool got_matching_end = false;\n \n   old_loc = gfc_current_locus;\n@@ -6780,15 +6780,17 @@ gfc_match_end (gfc_statement *st)\n       state = gfc_state_stack->previous->state;\n       block_name = gfc_state_stack->previous->sym == NULL\n \t\t ? NULL : gfc_state_stack->previous->sym->name;\n+      abreviated_modproc_decl = gfc_state_stack->previous->sym\n+\t\t&& gfc_state_stack->previous->sym->abr_modproc_decl;\n       break;\n \n     default:\n       break;\n     }\n \n-  abreviated_modproc_decl\n-\t= gfc_current_block ()\n-\t  && gfc_current_block ()->abr_modproc_decl;\n+  if (!abreviated_modproc_decl)\n+    abreviated_modproc_decl = gfc_current_block ()\n+\t\t\t      && gfc_current_block ()->abr_modproc_decl;\n \n   switch (state)\n     {"}, {"sha": "1f6f9671022560828aa65d871d59eb61a24c3fb1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63af1586ca44b400ccde5928dc5a3308637083bf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63af1586ca44b400ccde5928dc5a3308637083bf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=63af1586ca44b400ccde5928dc5a3308637083bf", "patch": "@@ -1,3 +1,8 @@\n+2017-02-19  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/79447\n+\t* gfortran.dg/submodule_24.f08 : New test.\n+\n 2017-02-19  Andre Vehreschild  <vehre@gcc.gnu.org>\n \n \tPR fortran/79229"}, {"sha": "88b40fd58d512504c29592d02bbc4539300adf4f", "filename": "gcc/testsuite/gfortran.dg/submodule_24.f08", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63af1586ca44b400ccde5928dc5a3308637083bf/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_24.f08", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63af1586ca44b400ccde5928dc5a3308637083bf/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_24.f08", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_24.f08?ref=63af1586ca44b400ccde5928dc5a3308637083bf", "patch": "@@ -0,0 +1,23 @@\n+! { dg-do compile }\n+! Test the fix for PR79447, in which the END PROCEDURE statement\n+! for MODULE PROCEDURE foo was not accepted.\n+!\n+! Contributed by Damian Rouson  <damian@sourceryinstitute.org>\n+!\n+module foo_interface\n+  implicit none\n+  interface\n+    module subroutine foo()\n+    end subroutine\n+  end interface\n+end module foo_interface\n+\n+submodule(foo_interface) foo_implementation\n+contains\n+    module procedure foo\n+    contains\n+      module subroutine bar()\n+      end subroutine\n+    end procedure\n+   !end subroutine ! gfortran accepted this invalid workaround\n+end submodule"}]}