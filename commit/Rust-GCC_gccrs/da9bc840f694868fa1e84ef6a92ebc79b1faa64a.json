{"sha": "da9bc840f694868fa1e84ef6a92ebc79b1faa64a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGE5YmM4NDBmNjk0ODY4ZmExZTg0ZWY2YTkyZWJjNzliMWZhYTY0YQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-09-15T23:55:49Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-09-15T23:55:49Z"}, "message": "semantics.c (finish_id_expression): Diagnose use of function parms in evaluated context outside function body.\n\n\t* semantics.c (finish_id_expression): Diagnose use of function\n\tparms in evaluated context outside function body.\n\nFrom-SVN: r164322", "tree": {"sha": "a15bb5fd5e4c1115cb39973c87db55fe2e713b48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a15bb5fd5e4c1115cb39973c87db55fe2e713b48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da9bc840f694868fa1e84ef6a92ebc79b1faa64a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da9bc840f694868fa1e84ef6a92ebc79b1faa64a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da9bc840f694868fa1e84ef6a92ebc79b1faa64a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da9bc840f694868fa1e84ef6a92ebc79b1faa64a/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "441b624e3d4b2be01deaf8156bd5ea2b39849259", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/441b624e3d4b2be01deaf8156bd5ea2b39849259", "html_url": "https://github.com/Rust-GCC/gccrs/commit/441b624e3d4b2be01deaf8156bd5ea2b39849259"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "c412f0c9ece6c98298636ae8d54bc4de330a08bf", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da9bc840f694868fa1e84ef6a92ebc79b1faa64a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da9bc840f694868fa1e84ef6a92ebc79b1faa64a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=da9bc840f694868fa1e84ef6a92ebc79b1faa64a", "patch": "@@ -1,5 +1,8 @@\n 2010-09-15  Jason Merrill  <jason@redhat.com>\n \n+\t* semantics.c (finish_id_expression): Diagnose use of function\n+\tparms in evaluated context outside function body.\n+\n \t* decl2.c (grokbitfield): Diagnose non-integral width.\n \n \t* call.c (convert_like_real): Use the underlying type of the"}, {"sha": "b73dffb0560e04b198bd20ebbca3b19668a5daf0", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da9bc840f694868fa1e84ef6a92ebc79b1faa64a/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da9bc840f694868fa1e84ef6a92ebc79b1faa64a/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=da9bc840f694868fa1e84ef6a92ebc79b1faa64a", "patch": "@@ -2864,6 +2864,16 @@ finish_id_expression (tree id_expression,\n \t      return error_mark_node;\n \t    }\n \t}\n+\n+      /* Also disallow uses of function parameters outside the function\n+\t body, except inside an unevaluated context (i.e. decltype).  */\n+      if (TREE_CODE (decl) == PARM_DECL\n+\t  && DECL_CONTEXT (decl) == NULL_TREE\n+\t  && !cp_unevaluated_operand)\n+\t{\n+\t  error (\"use of parameter %qD outside function body\", decl);\n+\t  return error_mark_node;\n+\t}\n     }\n \n   /* If we didn't find anything, or what we found was a type,"}, {"sha": "e41832bda1dc51857e80c536551043afc45da76e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da9bc840f694868fa1e84ef6a92ebc79b1faa64a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da9bc840f694868fa1e84ef6a92ebc79b1faa64a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=da9bc840f694868fa1e84ef6a92ebc79b1faa64a", "patch": "@@ -1,5 +1,7 @@\n 2010-09-15  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/parse/parameter-declaration-2.C: New.\n+\n \t* g++.dg/cpp0x/scoped_enum2.C: New.\n \n 2010-09-15  Eric Botcazou  <ebotcazou@adacore.com>"}, {"sha": "7a9a24fb75212f4032bcb8558eedfacea006c951", "filename": "gcc/testsuite/g++.dg/parse/parameter-declaration-2.C", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da9bc840f694868fa1e84ef6a92ebc79b1faa64a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparameter-declaration-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da9bc840f694868fa1e84ef6a92ebc79b1faa64a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparameter-declaration-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparameter-declaration-2.C?ref=da9bc840f694868fa1e84ef6a92ebc79b1faa64a", "patch": "@@ -0,0 +1 @@\n+void f (int i, int p[i]); // { dg-error \"use of parameter .i. outside function body\" }"}]}