{"sha": "6b2117468998909065f7075541593af7ee9d8268", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmIyMTE3NDY4OTk4OTA5MDY1ZjcwNzU1NDE1OTNhZjdlZTlkODI2OA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2005-02-23T18:57:43Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2005-02-23T18:57:43Z"}, "message": "decl.c (grokvardecl): Don't exempt anonymous types from having linkage for variables that have...\n\ngcc/cp/ChangeLog:\n* decl.c (grokvardecl): Don't exempt anonymous types from having\nlinkage for variables that have linkage other than \"C\".\ngcc/testsuite/ChangeLog:\n* g++.dg/lookup/anon2.C: Don't let access checks make it look like\nthe test passes.\n* g++.dg/other/anon3.C: Accept a warning.\n\nFrom-SVN: r95462", "tree": {"sha": "5bb57455330367506d430b09ceab241ae587b4ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5bb57455330367506d430b09ceab241ae587b4ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b2117468998909065f7075541593af7ee9d8268", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b2117468998909065f7075541593af7ee9d8268", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b2117468998909065f7075541593af7ee9d8268", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b2117468998909065f7075541593af7ee9d8268/comments", "author": null, "committer": null, "parents": [{"sha": "61961eff56844e37bf13a73b489292902a13ffdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61961eff56844e37bf13a73b489292902a13ffdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61961eff56844e37bf13a73b489292902a13ffdd"}], "stats": {"total": 46, "additions": 26, "deletions": 20}, "files": [{"sha": "c8b31120e3c298ce28e05da515959b9708b0dcc2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b2117468998909065f7075541593af7ee9d8268/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b2117468998909065f7075541593af7ee9d8268/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6b2117468998909065f7075541593af7ee9d8268", "patch": "@@ -1,3 +1,8 @@\n+2005-02-23  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* decl.c (grokvardecl): Don't exempt anonymous types from having\n+\tlinkage for variables that have linkage other than \"C\".\n+\n 2005-02-23  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* cp-objcp-common.h, error.c: Update copyright."}, {"sha": "bf0fb20061c79a1cee34c1fd1dc0dcef7bd29815", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 9, "deletions": 17, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b2117468998909065f7075541593af7ee9d8268/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b2117468998909065f7075541593af7ee9d8268/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=6b2117468998909065f7075541593af7ee9d8268", "patch": "@@ -5924,38 +5924,30 @@ grokvardecl (tree type,\n \t declare an entity with linkage.\n \n \t Only check this for public decls for now.  */\n-      tree t1 = TREE_TYPE (decl);\n-      tree t = no_linkage_check (t1, /*relaxed_p=*/false);\n+      tree t = no_linkage_check (TREE_TYPE (decl), /*relaxed_p=*/false);\n       if (t)\n \t{\n \t  if (TYPE_ANONYMOUS_P (t))\n \t    {\n \t      if (DECL_EXTERN_C_P (decl))\n \t\t/* Allow this; it's pretty common in C.  */\n \t\t  ;\n-\t      else if (same_type_ignoring_top_level_qualifiers_p(t1, t))\n-\t        /* This is something like \"enum { a = 3 } x;\", which is\n-\t\t   well formed.  The enum doesn't have \"a name with no\n-\t\t   linkage\", because it has no name.  See closed CWG issue\n-\t\t   132.\n-\n-\t\t   Note that while this construct is well formed in C++03\n-\t\t   it is likely to become ill formed in C++0x.  See open\n-\t\t   CWG issue 389 and related issues.  */\n-\t\t;\n \t      else\n \t\t{\n-\t\t  /* It's a typedef referring to an anonymous type.  */\n-\t\t  pedwarn (\"non-local variable %q#D uses anonymous type\",\n+\t\t  /* DRs 132, 319 and 389 seem to indicate types with\n+\t\t     no linkage can only be used to declare extern \"C\"\n+\t\t     entities.  Since it's not always an error in the\n+\t\t     ISO C++ 90 Standard, we only issue a warning.  */\n+\t\t  warning (\"non-local variable %q#D uses anonymous type\",\n \t\t\t   decl);\n \t\t  if (DECL_ORIGINAL_TYPE (TYPE_NAME (t)))\n-\t\t    cp_pedwarn_at (\"%q#D does not refer to the unqualified \"\n-                                   \"type, so it is not used for linkage\",\n+\t\t    cp_warning_at (\"%q#D does not refer to the unqualified \"\n+\t\t\t\t   \"type, so it is not used for linkage\",\n \t\t\t\t   TYPE_NAME (t));\n \t\t}\n \t    }\n \t  else\n-\t    pedwarn (\"non-local variable %q#D uses local type %qT\", decl, t);\n+\t    warning (\"non-local variable %q#D uses local type %qT\", decl, t);\n \t}\n     }\n "}, {"sha": "408b0c2dae8b546cfa81570b2f973644fb4395ab", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b2117468998909065f7075541593af7ee9d8268/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b2117468998909065f7075541593af7ee9d8268/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6b2117468998909065f7075541593af7ee9d8268", "patch": "@@ -1,3 +1,9 @@\n+2005-02-23  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* g++.dg/lookup/anon2.C: Don't let access checks make it look like\n+\tthe test passes.\n+\t* g++.dg/other/anon3.C: Accept a warning.\n+\n 2005-02-23  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* gcc.dg/pr20017.c: Fix a comment typo."}, {"sha": "d556ba0034a18eda18bfc7459ac0bfcda8c164ff", "filename": "gcc/testsuite/g++.dg/lookup/anon2.C", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b2117468998909065f7075541593af7ee9d8268/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fanon2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b2117468998909065f7075541593af7ee9d8268/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fanon2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fanon2.C?ref=6b2117468998909065f7075541593af7ee9d8268", "patch": "@@ -1,6 +1,9 @@\n // { dg-do compile }\n // { dg-options \"\" }\n \n-class { int i; } a; // { dg-error \"private|anonymous type\" }\n-void foo() { a.i; } // { dg-error \"context\" }\n+// Make sure we issue a diagnostic if a type with no linkage is used\n+// to declare a a variable that has linkage.\n \n+struct { int i; } a; // { dg-warning \"anonymous type\" }\n+\n+void foo() { a.i; }"}, {"sha": "87116eb8901f7443909e9df37b133085905fbc9c", "filename": "gcc/testsuite/g++.dg/other/anon3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b2117468998909065f7075541593af7ee9d8268/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fanon3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b2117468998909065f7075541593af7ee9d8268/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fanon3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fanon3.C?ref=6b2117468998909065f7075541593af7ee9d8268", "patch": "@@ -4,4 +4,4 @@\n \n // { dg-do compile }\n \n-enum { a = 3 } x;\n+enum { a = 3 } x; // { dg-warning \"anonymous type\" }"}]}