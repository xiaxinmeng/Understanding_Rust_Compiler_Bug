{"sha": "328eae1cb4cca4903f4b6de3bf56c4e59fdbdeae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzI4ZWFlMWNiNGNjYTQ5MDNmNGI2ZGUzYmY1NmM0ZTU5ZmRiZGVhZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-08-29T16:42:57Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-08-29T16:42:57Z"}, "message": "PR c++/77379 - ABI tag on thunk\n\n\t* mangle.c (maybe_check_abi_tags): Add version parm, handle thunks.\n\t(mangle_thunk): Add thunk parameter.\n\t* method.c (finish_thunk): Pass it.\n\t* cp-tree.h: Declare it.\n\nFrom-SVN: r239830", "tree": {"sha": "e67a3eb92b6792058da7ad6900b7d81789342064", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e67a3eb92b6792058da7ad6900b7d81789342064"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/328eae1cb4cca4903f4b6de3bf56c4e59fdbdeae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/328eae1cb4cca4903f4b6de3bf56c4e59fdbdeae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/328eae1cb4cca4903f4b6de3bf56c4e59fdbdeae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/328eae1cb4cca4903f4b6de3bf56c4e59fdbdeae/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "34cedad50c75e63d0898db1f117ec236bd4e3891", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34cedad50c75e63d0898db1f117ec236bd4e3891", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34cedad50c75e63d0898db1f117ec236bd4e3891"}], "stats": {"total": 100, "additions": 93, "deletions": 7}, "files": [{"sha": "55651bc83b0319a8d9467dd0f52862864b3776e7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/328eae1cb4cca4903f4b6de3bf56c4e59fdbdeae/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/328eae1cb4cca4903f4b6de3bf56c4e59fdbdeae/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=328eae1cb4cca4903f4b6de3bf56c4e59fdbdeae", "patch": "@@ -1,3 +1,11 @@\n+2016-08-29  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/77379\n+\t* mangle.c (maybe_check_abi_tags): Add version parm, handle thunks.\n+\t(mangle_thunk): Add thunk parameter.\n+\t* method.c (finish_thunk): Pass it.\n+\t* cp-tree.h: Declare it.\n+\n 2016-08-15  Jason Merrill  <jason@redhat.com>\n \n \tAvoid calling a trivial default constructor."}, {"sha": "5bcb98b97561b4607defa3b4863a9d36c6a7d476", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/328eae1cb4cca4903f4b6de3bf56c4e59fdbdeae/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/328eae1cb4cca4903f4b6de3bf56c4e59fdbdeae/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=328eae1cb4cca4903f4b6de3bf56c4e59fdbdeae", "patch": "@@ -6802,7 +6802,7 @@ extern tree mangle_typeinfo_string_for_type\t(tree);\n extern tree mangle_vtbl_for_type\t\t(tree);\n extern tree mangle_vtt_for_type\t\t\t(tree);\n extern tree mangle_ctor_vtbl_for_type\t\t(tree, tree);\n-extern tree mangle_thunk\t\t\t(tree, int, tree, tree);\n+extern tree mangle_thunk\t\t\t(tree, int, tree, tree, tree);\n extern tree mangle_conv_op_name_for_type\t(tree);\n extern tree mangle_guard_variable\t\t(tree);\n extern tree mangle_tls_init_fn\t\t\t(tree);"}, {"sha": "d34743c9c68c9d970a023f0c51417049d3d7f538", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/328eae1cb4cca4903f4b6de3bf56c4e59fdbdeae/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/328eae1cb4cca4903f4b6de3bf56c4e59fdbdeae/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=328eae1cb4cca4903f4b6de3bf56c4e59fdbdeae", "patch": "@@ -231,7 +231,7 @@ static void write_local_name (tree, const tree, const tree);\n static void dump_substitution_candidates (void);\n static tree mangle_decl_string (const tree);\n static int local_class_index (tree);\n-static void maybe_check_abi_tags (tree, tree = NULL_TREE);\n+static void maybe_check_abi_tags (tree, tree = NULL_TREE, int = 10);\n static bool equal_abi_tags (tree, tree);\n \n /* Control functions.  */\n@@ -4024,10 +4024,13 @@ mangle_call_offset (const tree fixed_offset, const tree virtual_offset)\n \n tree\n mangle_thunk (tree fn_decl, const int this_adjusting, tree fixed_offset,\n-\t      tree virtual_offset)\n+\t      tree virtual_offset, tree thunk)\n {\n   tree result;\n \n+  if (abi_version_at_least (11))\n+    maybe_check_abi_tags (fn_decl, thunk, 11);\n+\n   start_mangling (fn_decl);\n \n   write_string (\"_Z\");\n@@ -4142,7 +4145,7 @@ mangle_conv_op_name_for_type (const tree type)\n    guard variable for T.  */\n \n static void\n-maybe_check_abi_tags (tree t, tree for_decl)\n+maybe_check_abi_tags (tree t, tree for_decl, int ver)\n {\n   if (DECL_ASSEMBLER_NAME_SET_P (t))\n     return;\n@@ -4153,9 +4156,14 @@ maybe_check_abi_tags (tree t, tree for_decl)\n \n   tree newtags = get_abi_tags (t);\n   if (newtags && newtags != oldtags\n-      && abi_version_crosses (10))\n+      && abi_version_crosses (ver))\n     {\n-      if (for_decl)\n+      if (for_decl && DECL_THUNK_P (for_decl))\n+\twarning_at (DECL_SOURCE_LOCATION (t), OPT_Wabi,\n+\t\t    \"the mangled name of a thunk for %qD changes between \"\n+\t\t    \"-fabi-version=%d and -fabi-version=%d\",\n+\t\t    t, flag_abi_version, warn_abi_version);\n+      else if (for_decl)\n \twarning_at (DECL_SOURCE_LOCATION (for_decl), OPT_Wabi,\n \t\t    \"the mangled name of %qD changes between \"\n \t\t    \"-fabi-version=%d and -fabi-version=%d\","}, {"sha": "957ea391383c50e4ea680a4ef204debb89b664b5", "filename": "gcc/cp/method.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/328eae1cb4cca4903f4b6de3bf56c4e59fdbdeae/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/328eae1cb4cca4903f4b6de3bf56c4e59fdbdeae/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=328eae1cb4cca4903f4b6de3bf56c4e59fdbdeae", "patch": "@@ -169,7 +169,7 @@ finish_thunk (tree thunk)\n     virtual_offset = BINFO_VPTR_FIELD (virtual_offset);\n   function = THUNK_TARGET (thunk);\n   name = mangle_thunk (function, DECL_THIS_THUNK_P (thunk),\n-\t\t       fixed_offset, virtual_offset);\n+\t\t       fixed_offset, virtual_offset, thunk);\n \n   /* We can end up with declarations of (logically) different\n      covariant thunks, that do identical adjustments.  The two thunks"}, {"sha": "5e310a4a42a739df490053975e4b40aa5363246f", "filename": "gcc/testsuite/g++.dg/abi/abi-tag23.C", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/328eae1cb4cca4903f4b6de3bf56c4e59fdbdeae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fabi-tag23.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/328eae1cb4cca4903f4b6de3bf56c4e59fdbdeae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fabi-tag23.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fabi-tag23.C?ref=328eae1cb4cca4903f4b6de3bf56c4e59fdbdeae", "patch": "@@ -0,0 +1,35 @@\n+// PR c++/77379\n+// { dg-options \"-fabi-version=0 -Wabi=10\" }\n+\n+struct __attribute ((abi_tag (\"bar\"))) string { };\n+\n+struct Mother\n+{\n+  virtual ~Mother() {};\n+  int bar;\n+};\n+\n+struct Father\n+{\n+  virtual string get_foo()  = 0;\n+};\n+\n+class Derived:\n+  public Mother,\n+  public Father\n+{\n+public:\n+  string get_foo();\t\t// { dg-warning \"mangled name\" }\n+};\n+\n+struct Final:\n+    public Derived\n+{\n+};\n+\n+int main()\n+{\n+  Final().get_foo();\n+}\n+\n+// { dg-final { scan-assembler \"_ZThn16_N7Derived7get_fooB3barEv\" } }"}, {"sha": "72aa037f0b80445a46bcb1c858a4a2f2bad0c44f", "filename": "gcc/testsuite/g++.dg/abi/abi-tag23a.C", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/328eae1cb4cca4903f4b6de3bf56c4e59fdbdeae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fabi-tag23a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/328eae1cb4cca4903f4b6de3bf56c4e59fdbdeae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fabi-tag23a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fabi-tag23a.C?ref=328eae1cb4cca4903f4b6de3bf56c4e59fdbdeae", "patch": "@@ -0,0 +1,35 @@\n+// PR c++/77379\n+// { dg-options -fabi-version=10 }\n+\n+struct __attribute ((abi_tag (\"bar\"))) string { };\n+\n+struct Mother\n+{\n+  virtual ~Mother() {};\n+  int bar;\n+};\n+\n+struct Father\n+{\n+  virtual string get_foo()  = 0;\n+};\n+\n+class Derived:\n+  public Mother,\n+  public Father\n+{\n+public:\n+  string get_foo();\n+};\n+\n+struct Final:\n+    public Derived\n+{\n+};\n+\n+int main()\n+{\n+  Final().get_foo();\n+}\n+\n+// { dg-final { scan-assembler \"_ZThn16_N7Derived7get_fooEv\" } }"}]}