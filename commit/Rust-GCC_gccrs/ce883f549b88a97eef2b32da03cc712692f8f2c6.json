{"sha": "ce883f549b88a97eef2b32da03cc712692f8f2c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U4ODNmNTQ5Yjg4YTk3ZWVmMmIzMmRhMDNjYzcxMjY5MmY4ZjJjNg==", "commit": {"author": {"name": "Ben Elliston", "email": "bje@au.ibm.com", "date": "2009-05-19T13:24:30Z"}, "committer": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2009-05-19T13:24:30Z"}, "message": "unwind-dw2-fde.c (fde_unencoded_compare): Replace type punning assignments with memcpy calls.\n\n\t* unwind-dw2-fde.c (fde_unencoded_compare): Replace type punning\n\tassignments with memcpy calls.\n\t(add_fdes): Likewise.\n\t(binary_search_unencoded_fdes): Likewise.\n\t(linear_search_fdes): Eliminate type puns.\n\nFrom-SVN: r147705", "tree": {"sha": "06979689177456962b1acb14a9b126a630187866", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/06979689177456962b1acb14a9b126a630187866"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce883f549b88a97eef2b32da03cc712692f8f2c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce883f549b88a97eef2b32da03cc712692f8f2c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce883f549b88a97eef2b32da03cc712692f8f2c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce883f549b88a97eef2b32da03cc712692f8f2c6/comments", "author": null, "committer": null, "parents": [{"sha": "377f099ab80623a6d0dacfd4447d45042c385b98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/377f099ab80623a6d0dacfd4447d45042c385b98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/377f099ab80623a6d0dacfd4447d45042c385b98"}], "stats": {"total": 28, "additions": 21, "deletions": 7}, "files": [{"sha": "07d2c8e9d9f8f1a8d4a6695116d56dac95ce3de7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce883f549b88a97eef2b32da03cc712692f8f2c6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce883f549b88a97eef2b32da03cc712692f8f2c6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ce883f549b88a97eef2b32da03cc712692f8f2c6", "patch": "@@ -1,3 +1,11 @@\n+2009-05-19  Ben Elliston  <bje@au.ibm.com>\n+\n+\t* unwind-dw2-fde.c (fde_unencoded_compare): Replace type punning\n+\tassignments with memcpy calls.\n+\t(add_fdes): Likewise.\n+\t(binary_search_unencoded_fdes): Likewise.\n+\t(linear_search_fdes): Eliminate type puns.\n+\t\n 2009-05-19  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Do"}, {"sha": "4aa9d82af8d5fd4330206441908631e8703847cc", "filename": "gcc/unwind-dw2-fde.c", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce883f549b88a97eef2b32da03cc712692f8f2c6/gcc%2Funwind-dw2-fde.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce883f549b88a97eef2b32da03cc712692f8f2c6/gcc%2Funwind-dw2-fde.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funwind-dw2-fde.c?ref=ce883f549b88a97eef2b32da03cc712692f8f2c6", "patch": "@@ -318,8 +318,9 @@ static int\n fde_unencoded_compare (struct object *ob __attribute__((unused)),\n \t\t       const fde *x, const fde *y)\n {\n-  const _Unwind_Ptr x_ptr = *(const _Unwind_Ptr *) x->pc_begin;\n-  const _Unwind_Ptr y_ptr = *(const _Unwind_Ptr *) y->pc_begin;\n+  _Unwind_Ptr x_ptr, y_ptr;\n+  memcpy (&x_ptr, x->pc_begin, sizeof (_Unwind_Ptr));\n+  memcpy (&y_ptr, y->pc_begin, sizeof (_Unwind_Ptr));\n \n   if (x_ptr > y_ptr)\n     return 1;\n@@ -674,7 +675,9 @@ add_fdes (struct object *ob, struct fde_accumulator *accu, const fde *this_fde)\n \n       if (encoding == DW_EH_PE_absptr)\n \t{\n-\t  if (*(const _Unwind_Ptr *) this_fde->pc_begin == 0)\n+\t  _Unwind_Ptr ptr;\n+\t  memcpy (&ptr, this_fde->pc_begin, sizeof (_Unwind_Ptr));\n+\t  if (ptr == 0)\n \t    continue;\n \t}\n       else\n@@ -792,8 +795,9 @@ linear_search_fdes (struct object *ob, const fde *this_fde, void *pc)\n \n       if (encoding == DW_EH_PE_absptr)\n \t{\n-\t  pc_begin = ((const _Unwind_Ptr *) this_fde->pc_begin)[0];\n-\t  pc_range = ((const _Unwind_Ptr *) this_fde->pc_begin)[1];\n+\t  const _Unwind_Ptr *pc_array = (const _Unwind_Ptr *) this_fde->pc_begin;\n+\t  pc_begin = pc_array[0];\n+\t  pc_range = pc_array[1];\n \t  if (pc_begin == 0)\n \t    continue;\n \t}\n@@ -840,8 +844,10 @@ binary_search_unencoded_fdes (struct object *ob, void *pc)\n     {\n       size_t i = (lo + hi) / 2;\n       const fde *const f = vec->array[i];\n-      const void *pc_begin = ((const void *const*) f->pc_begin)[0];\n-      const uaddr pc_range = ((const uaddr *) f->pc_begin)[1];\n+      void *pc_begin;\n+      uaddr pc_range;\n+      memcpy (&pc_begin, (const void * const *) f->pc_begin, sizeof (void *));\n+      memcpy (&pc_range, (const uaddr *) f->pc_begin + 1, sizeof (uaddr));\n \n       if (pc < pc_begin)\n \thi = i;"}]}