{"sha": "24fb1d9c5855900b5229d8db445eba515c8375e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjRmYjFkOWM1ODU1OTAwYjUyMjlkOGRiNDQ1ZWJhNTE1YzgzNzVlMw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-10-28T18:45:27Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-10-28T22:02:05Z"}, "message": "c++: Improve the MVP -Wparentheses diagnostic.\n\nI noticed that declarator->parenthesized is, for this warning, only set\nto the opening paren.  But we can easily make it a range and generate\na nicer diagnostic.  Moreover, we can then offer a fix-it hint.\n\nTL;DR: This patch changes\n\nmvp3.C:8:7: warning: unnecessary parentheses in declaration of \u2018i\u2019 [-Wparentheses]\n    8 |   int (i);\n      |       ^\n\nto\n\nmvp3.C:8:7: warning: unnecessary parentheses in declaration of \u2018i\u2019 [-Wparentheses]\n    8 |   int (i);\n      |       ^~~\nmvp3.C:8:7: note: remove parentheses\n    8 |   int (i);\n      |       ^~~\n      |       - -\n\nTested by using -fdiagnostics-generate-patch and verifying that the\ngenerated patch DTRT.\n\ngcc/cp/ChangeLog:\n\n\t* decl.c (grokdeclarator): Offer a fix-it hint for the \"unnecessary\n\tparentheses in declaration\" warning.\n\t* parser.c (cp_parser_direct_declarator): When setting\n\tdeclarator->parenthesized, use a location range.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/warn/mvp3.C: New test.", "tree": {"sha": "d588d145655703722010e4cffffe040a0c0762bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d588d145655703722010e4cffffe040a0c0762bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24fb1d9c5855900b5229d8db445eba515c8375e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24fb1d9c5855900b5229d8db445eba515c8375e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24fb1d9c5855900b5229d8db445eba515c8375e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24fb1d9c5855900b5229d8db445eba515c8375e3/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "455ade18462e5076065b1970e21c622239797392", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/455ade18462e5076065b1970e21c622239797392", "html_url": "https://github.com/Rust-GCC/gccrs/commit/455ade18462e5076065b1970e21c622239797392"}], "stats": {"total": 47, "additions": 44, "deletions": 3}, "files": [{"sha": "ee3c353935d006248a0f9fb99b2a37fa947defe6", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24fb1d9c5855900b5229d8db445eba515c8375e3/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24fb1d9c5855900b5229d8db445eba515c8375e3/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=24fb1d9c5855900b5229d8db445eba515c8375e3", "patch": "@@ -12037,8 +12037,17 @@ grokdeclarator (const cp_declarator *declarator,\n \t       && inner_declarator->u.id.qualifying_scope\n \t       && (MAYBE_CLASS_TYPE_P (type)\n \t\t   || TREE_CODE (type) == ENUMERAL_TYPE)))\n-\twarning_at (declarator->parenthesized, OPT_Wparentheses,\n-\t\t    \"unnecessary parentheses in declaration of %qs\", name);\n+\t{\n+\t  if (warning_at (declarator->parenthesized, OPT_Wparentheses,\n+\t\t\t  \"unnecessary parentheses in declaration of %qs\",\n+\t\t\t  name))\n+\t    {\n+\t      gcc_rich_location iloc (declarator->parenthesized);\n+\t      iloc.add_fixit_remove (get_start (declarator->parenthesized));\n+\t      iloc.add_fixit_remove (get_finish (declarator->parenthesized));\n+\t      inform (&iloc, \"remove parentheses\");\n+\t    }\n+\t}\n       if (declarator->kind == cdk_id || declarator->kind == cdk_decomp)\n \tbreak;\n "}, {"sha": "d65b408a6f5bbc28b527fb3d254b185185e79064", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24fb1d9c5855900b5229d8db445eba515c8375e3/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24fb1d9c5855900b5229d8db445eba515c8375e3/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=24fb1d9c5855900b5229d8db445eba515c8375e3", "patch": "@@ -21866,7 +21866,9 @@ cp_parser_direct_declarator (cp_parser* parser,\n \t    open_paren = NULL;\n \t}\n       if (open_paren)\n-\tdeclarator->parenthesized = open_paren->location;\n+\tdeclarator->parenthesized = make_location (open_paren->location,\n+\t\t\t\t\t\t   open_paren->location,\n+\t\t\t\t\t\t   close_paren->location);\n     }\n \n   /* If we entered a scope, we must exit it now.  */"}, {"sha": "4d371c5b093e11c357a74662a88654d8afd4a42d", "filename": "gcc/testsuite/g++.dg/warn/mvp3.C", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24fb1d9c5855900b5229d8db445eba515c8375e3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fmvp3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24fb1d9c5855900b5229d8db445eba515c8375e3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fmvp3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fmvp3.C?ref=24fb1d9c5855900b5229d8db445eba515c8375e3", "patch": "@@ -0,0 +1,30 @@\n+// { dg-do compile }\n+// { dg-options \"-Wparentheses -fdiagnostics-show-caret\" }\n+// Test fix-it hints for the MVP warning.\n+\n+void\n+g ()\n+{\n+  int (i); // { dg-warning \"7:unnecessary parentheses\" }\n+/* { dg-begin-multiline-output \"\" }\n+   int (i);\n+       ^~~\n+   { dg-end-multiline-output \"\" } */\n+// { dg-message \"7:remove parentheses\" \"\" { target *-*-* } 8 }\n+/* { dg-begin-multiline-output \"\" }\n+   int (i);\n+       ^~~\n+       - -\n+   { dg-end-multiline-output \"\" } */\n+  int (fn(void)); // { dg-warning \"7:unnecessary parentheses\" }\n+/* { dg-begin-multiline-output \"\" }\n+   int (fn(void));\n+       ^~~~~~~~~~\n+   { dg-end-multiline-output \"\" } */\n+// { dg-message \"7:remove parentheses\" \"\" { target *-*-* } 19 }\n+/* { dg-begin-multiline-output \"\" }\n+   int (fn(void));\n+       ^~~~~~~~~~\n+       -        -\n+   { dg-end-multiline-output \"\" } */\n+}"}]}