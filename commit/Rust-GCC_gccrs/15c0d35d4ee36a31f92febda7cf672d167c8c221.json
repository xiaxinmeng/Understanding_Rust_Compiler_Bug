{"sha": "15c0d35d4ee36a31f92febda7cf672d167c8c221", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTVjMGQzNWQ0ZWUzNmEzMWY5MmZlYmRhN2NmNjcyZDE2N2M4YzIyMQ==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2001-07-06T19:17:50Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2001-07-06T19:17:50Z"}, "message": "gcc.texi (Makefile): Rename to be a more general purpose chapter about various build hints and history.\n\n* doc/gcc.texi (Makefile): Rename to be a more general purpose\nchapter about various build hints and history.  Add section\ntalking about the various types of native and cross builds.\n\nFrom-SVN: r43819", "tree": {"sha": "3085943bb75ec3bda8f9e494533f3f8c85341e93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3085943bb75ec3bda8f9e494533f3f8c85341e93"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15c0d35d4ee36a31f92febda7cf672d167c8c221", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15c0d35d4ee36a31f92febda7cf672d167c8c221", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15c0d35d4ee36a31f92febda7cf672d167c8c221", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15c0d35d4ee36a31f92febda7cf672d167c8c221/comments", "author": null, "committer": null, "parents": [{"sha": "00478a05f6446fad78c803fbe66bede4ddb0f222", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00478a05f6446fad78c803fbe66bede4ddb0f222", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00478a05f6446fad78c803fbe66bede4ddb0f222"}], "stats": {"total": 74, "additions": 72, "deletions": 2}, "files": [{"sha": "6e8f2b45a69566431c756ae1dc4c1256d00c0407", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15c0d35d4ee36a31f92febda7cf672d167c8c221/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15c0d35d4ee36a31f92febda7cf672d167c8c221/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=15c0d35d4ee36a31f92febda7cf672d167c8c221", "patch": "@@ -1,3 +1,9 @@\n+2001-07-06  DJ Delorie  <dj@redhat.com>\n+\n+\t* doc/gcc.texi (Makefile): Rename to be a more general purpose\n+\tchapter about various build hints and history.  Add section\n+\ttalking about the various types of native and cross builds.\n+\n 2001-07-06  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* Makefile.in (final.o): Depend on target.h."}, {"sha": "7e0cd1a155dea049647e1b4f3a9877cfa6b06f96", "filename": "gcc/doc/gcc.texi", "status": "modified", "additions": 66, "deletions": 2, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15c0d35d4ee36a31f92febda7cf672d167c8c221/gcc%2Fdoc%2Fgcc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15c0d35d4ee36a31f92febda7cf672d167c8c221/gcc%2Fdoc%2Fgcc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgcc.texi?ref=15c0d35d4ee36a31f92febda7cf672d167c8c221", "patch": "@@ -263,7 +263,7 @@ bugs.  It corresponds to GCC version 3.1.\n * Service::         How to find suppliers of support for GCC.\n * Contributing::    How to contribute to testing and developing GCC.\n * VMS::             Using GCC on VMS.\n-* Makefile::        List of Makefile targets.\n+* Makefile::        Additional Makefile and configure information.\n @end ifset\n @ifset INTERNALS\n * Portability::     Goals of GCC's portability features.\n@@ -2862,7 +2862,9 @@ These macro definitions can be placed in a header file to minimize the\n number of changes to your source code.\n \n @node Makefile\n-@chapter Makefile Targets\n+@chapter Additional Makefile and configure information.\n+\n+@section Makefile Targets\n @cindex makefile targets\n @cindex targets, makefile\n \n@@ -2960,6 +2962,68 @@ regardless of how it itself was compiled.\n \n @end table\n \n+@section Configure Terms and History\n+@cindex configure terms\n+@cindex canadian\n+\n+This section is not instructions for building GCC.  If you are trying to\n+do a build, you should first read @uref{http://gcc.gnu.org/install/} or\n+whatever installation instructions came with your source package.\n+\n+The configure and build process has a long and colorful history, and can\n+be confusing to anyone who doesn't know why things are the way they are.\n+While there are other documents which describe the configuration process\n+in detail, here are a few things that everyone working on GCC should\n+know.\n+\n+There are three system names that the build knows about: the machine you\n+are building on (@dfn{build}), the machine that you are building for\n+(@dfn{host}), and the machine that GCC will produce code for\n+(@dfn{target}).  When you configure GCC, you specify these with\n+@option{--build=}, @option{--host=}, and @option{--target=}.\n+\n+Specifying the host without specifying the build should be avoided, as\n+@command{configure} may (and once did) assume that the host you specify\n+is also the build, which may not be true.\n+\n+If build, host, and target are all the same, this is called a\n+@dfn{native}.  If build and host are the same but target is different,\n+this is called a @dfn{cross}.  If build, host, and target are all\n+different this is called a @dfn{canadian} (for obscure reasons dealing\n+with Canada's political party and the background of the person working\n+on the build at that time).  If host and target are the same, but build\n+is different, you are using a cross-compiler to build a native for a\n+different system.  Some people call this a @dfn{host-x-host},\n+@dfn{crossed native}, or @dfn{cross-built native}.  If build and target\n+are the same, but host is different, you are using a cross compiler to\n+build a cross compiler that produces code for the machine you're\n+building on.  This is rare, so there is no common say of describing it\n+(although I propose calling it a @dfn{crossback}).\n+\n+If build and host are the same, the GCC you are building will also be\n+used to build the target libraries (like @code{libstdc++}).  If build and host\n+are different, you must have already build and installed a cross\n+compiler that will be used to build the target libraries (if you\n+configured with @option{--target=foo-bar}, this compiler will be called\n+@command{foo-bar-gcc}).\n+\n+In the case of target libraries, the machine you're building for is the\n+machine you specified with @option{--target}.  So, build is the machine\n+you're building on (no change there), host is the machine you're\n+building for (the target libraries are built for the target, so host is\n+the target you specified), and target doesn't apply (because you're not\n+building a compiler, you're building libraries).  The configure/make\n+process will adjust these variables as needed.  It also sets\n+@code{$with_cross_host} to the original @option{--host} value in case you\n+need it.\n+\n+Libiberty, for example, is built twice.  The first time, host comes from\n+@option{--host} and the second time host comes from @option{--target}.\n+Historically, libiberty has not been built for the build machine,\n+though, which causes some interesting issues with programs used to\n+generate sources for the build.  Fixing this, so that libiberty is built\n+three times, has long been on the to-do list.\n+\n @end ifset\n \n @ifset INTERNALS"}]}