{"sha": "b1177d691d174e4af10475798f9d12c6c93d003a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjExNzdkNjkxZDE3NGU0YWYxMDQ3NTc5OGY5ZDEyYzZjOTNkMDAzYQ==", "commit": {"author": {"name": "Kelley Cook", "email": "kcook@gcc.gnu.org", "date": "2003-10-17T12:28:33Z"}, "committer": {"name": "R. Kelley Cook", "email": "kcook@gcc.gnu.org", "date": "2003-10-17T12:28:33Z"}, "message": "i386.c (ix86_expand_prologue): Use gen_allocate_stack_worker.\n\n\t* config/i386/i386.c (ix86_expand_prologue):  Use\n\tgen_allocate_stack_worker.\n\nFrom-SVN: r72601", "tree": {"sha": "5c1bf13de679d9ccf46d901892ca73ffdc4f9234", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c1bf13de679d9ccf46d901892ca73ffdc4f9234"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1177d691d174e4af10475798f9d12c6c93d003a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1177d691d174e4af10475798f9d12c6c93d003a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1177d691d174e4af10475798f9d12c6c93d003a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1177d691d174e4af10475798f9d12c6c93d003a/comments", "author": null, "committer": null, "parents": [{"sha": "3c7404d343647db31c167395607e9b5f34093fbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c7404d343647db31c167395607e9b5f34093fbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c7404d343647db31c167395607e9b5f34093fbc"}], "stats": {"total": 29, "additions": 13, "deletions": 16}, "files": [{"sha": "b82a371ef2dd4e66bd32e46a1dfbae9ac68ea527", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1177d691d174e4af10475798f9d12c6c93d003a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1177d691d174e4af10475798f9d12c6c93d003a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b1177d691d174e4af10475798f9d12c6c93d003a", "patch": "@@ -1,3 +1,8 @@\n+2003-10-17  Kelley Cook  <kcook@gcc.gnu.org>\n+\n+\t* config/i386/i386.c (ix86_expand_prologue):  Use\n+\tgen_allocate_stack_worker.\n+\n 2003-10-17  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \n \t* config.gcc (mips-sgi-irix6*o32): Only enable use_collect2"}, {"sha": "580c393c5c4a5388716faa3723338b4c23d44823", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 8, "deletions": 16, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1177d691d174e4af10475798f9d12c6c93d003a/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1177d691d174e4af10475798f9d12c6c93d003a/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=b1177d691d174e4af10475798f9d12c6c93d003a", "patch": "@@ -5073,27 +5073,19 @@ ix86_expand_prologue (void)\n     }\n   else\n     {\n-      /* ??? Is this only valid for Win32?  */\n+      /* Only valid for Win32 */\n \n-      rtx arg0, sym;\n+      const rtx eax = gen_rtx_REG (SImode, 0);\n+      rtx rtx_allocate = GEN_INT(allocate);\n \n       if (TARGET_64BIT)\n-\tabort ();\n-\n-      arg0 = gen_rtx_REG (SImode, 0);\n-      emit_move_insn (arg0, GEN_INT (allocate));\n-\n-      sym = gen_rtx_MEM (FUNCTION_MODE,\n-\t\t\t gen_rtx_SYMBOL_REF (Pmode, \"_alloca\"));\n-      insn = emit_call_insn (gen_call (sym, const0_rtx, constm1_rtx));\n+        abort ();\n \n-      CALL_INSN_FUNCTION_USAGE (insn)\n-\t= gen_rtx_EXPR_LIST (VOIDmode, gen_rtx_USE (VOIDmode, arg0),\n-\t\t\t     CALL_INSN_FUNCTION_USAGE (insn));\n+      insn = emit_move_insn (eax, rtx_allocate);\n+      RTX_FRAME_RELATED_P (insn) = 1;\n \n-      /* Don't allow scheduling pass to move insns across __alloca\n-         call.  */\n-      emit_insn (gen_blockage (const0_rtx));\n+      insn = emit_insn (gen_allocate_stack_worker (eax));\n+      RTX_FRAME_RELATED_P (insn) = 1;\n     }\n   if (frame.save_regs_using_mov && !TARGET_RED_ZONE)\n     {"}]}