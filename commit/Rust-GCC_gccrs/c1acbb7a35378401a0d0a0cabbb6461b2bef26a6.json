{"sha": "c1acbb7a35378401a0d0a0cabbb6461b2bef26a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFhY2JiN2EzNTM3ODQwMWEwZDBhMGNhYmJiNjQ2MWIyYmVmMjZhNg==", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@klomp.org", "date": "2002-05-12T01:11:18Z"}, "committer": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2002-05-12T01:11:18Z"}, "message": "SentenceBreakIterator.java (next): Skip all java white space characters.\n\n\t* gnu/java/text/SentenceBreakIterator.java (next): Skip all java white\n\tspace characters.\n\t(previous_internal): Likewise.\n\nFrom-SVN: r53389", "tree": {"sha": "02353c789c10e6d3c8af358153bfa2e723e91b6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02353c789c10e6d3c8af358153bfa2e723e91b6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1acbb7a35378401a0d0a0cabbb6461b2bef26a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1acbb7a35378401a0d0a0cabbb6461b2bef26a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1acbb7a35378401a0d0a0cabbb6461b2bef26a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1acbb7a35378401a0d0a0cabbb6461b2bef26a6/comments", "author": null, "committer": null, "parents": [{"sha": "1f121cdbdd63444dc2e1fe8fd1000877fb60da14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f121cdbdd63444dc2e1fe8fd1000877fb60da14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f121cdbdd63444dc2e1fe8fd1000877fb60da14"}], "stats": {"total": 39, "additions": 20, "deletions": 19}, "files": [{"sha": "688debb9c8b12c2f03e8b8aa7900c671ad84e1bf", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1acbb7a35378401a0d0a0cabbb6461b2bef26a6/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1acbb7a35378401a0d0a0cabbb6461b2bef26a6/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=c1acbb7a35378401a0d0a0cabbb6461b2bef26a6", "patch": "@@ -1,3 +1,9 @@\n+2002-05-11  Mark Wielaard  <mark@klomp.org>\n+\n+\t* gnu/java/text/SentenceBreakIterator.java (next): Skip all java white\n+\tspace characters.\n+\t(previous_internal): Likewise.\n+\n 2002-05-09  Tom Tromey  <tromey@redhat.com>\n \n \t* jni.cc (_Jv_JNIFunctions): Fixed typo."}, {"sha": "62b99f0fbf8bd5f95e21912ba1c5c656a7d428e9", "filename": "libjava/gnu/java/text/SentenceBreakIterator.java", "status": "modified", "additions": 14, "deletions": 19, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1acbb7a35378401a0d0a0cabbb6461b2bef26a6/libjava%2Fgnu%2Fjava%2Ftext%2FSentenceBreakIterator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1acbb7a35378401a0d0a0cabbb6461b2bef26a6/libjava%2Fgnu%2Fjava%2Ftext%2FSentenceBreakIterator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Ftext%2FSentenceBreakIterator.java?ref=c1acbb7a35378401a0d0a0cabbb6461b2bef26a6", "patch": "@@ -1,5 +1,5 @@\n /* SentenceBreakIterator.java - Default sentence BreakIterator.\n-   Copyright (C) 1999, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2001, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -91,13 +91,8 @@ public int next ()\n \t    while (n != CharacterIterator.DONE\n \t\t   && Character.getType(n) == Character.END_PUNCTUATION)\n \t      n = iter.next();\n-\t    // Skip spaces.\n-\t    while (n != CharacterIterator.DONE\n-\t\t   && Character.getType(n) == Character.SPACE_SEPARATOR)\n-\t      n = iter.next();\n-\t    // Skip optional paragraph separator.\n-\t    if (n != CharacterIterator.DONE\n-\t\t&& Character.getType(n) == Character.PARAGRAPH_SEPARATOR)\n+\t    // Skip (java) space, line and paragraph separators.\n+\t    while (n != CharacterIterator.DONE && Character.isWhitespace(n))\n \t      n = iter.next();\n \n \t    // There's always a break somewhere after `!' or `?'.\n@@ -111,11 +106,11 @@ public int next ()\n \t    while (n != CharacterIterator.DONE\n \t\t   && Character.getType(n) == Character.END_PUNCTUATION)\n \t      n = iter.next();\n-\t    // Skip spaces.  We keep count because we need at least\n-\t    // one for this period to represent a terminator.\n+\t    // Skip (java) space, line and paragraph separators.\n+\t    // We keep count because we need at least one for this period to\n+\t    // represent a terminator.\n \t    int spcount = 0;\n-\t    while (n != CharacterIterator.DONE\n-\t\t   && Character.getType(n) == Character.SPACE_SEPARATOR)\n+\t    while (n != CharacterIterator.DONE && Character.isWhitespace(n))\n \t      {\n \t\tn = iter.next();\n \t\t++spcount;\n@@ -162,7 +157,7 @@ private final int previous_internal ()\n \n \tif (! Character.isLowerCase(c)\n \t    && (nt == Character.START_PUNCTUATION\n-\t\t|| nt == Character.SPACE_SEPARATOR))\n+\t\t|| Character.isWhitespace(n)))\n \t  {\n \t    int save = iter.getIndex();\n \t    int save_nt = nt;\n@@ -173,12 +168,12 @@ private final int previous_internal ()\n \t      n = iter.previous();\n \t    if (n == CharacterIterator.DONE)\n \t      break;\n-\t    if (Character.getType(n) == Character.SPACE_SEPARATOR)\n+\t    if (Character.isWhitespace(n))\n \t      {\n-\t\t// Must have at least once space after the `.'.\n+\t\t// Must have at least one (java) space after the `.'.\n \t\tint save2 = iter.getIndex();\n \t\twhile (n != CharacterIterator.DONE\n-\t\t       && Character.getType(n) == Character.SPACE_SEPARATOR)\n+\t\t       && Character.isWhitespace(n))\n \t\t  n = iter.previous();\n \t\t// Skip close punctuation.\n \t\twhile (n != CharacterIterator.DONE\n@@ -203,13 +198,13 @@ private final int previous_internal ()\n \t    period = iter.getIndex();\n \t    break;\n \t  }\n-\telse if (nt == Character.SPACE_SEPARATOR\n+\telse if (Character.isWhitespace(n)\n \t\t || nt == Character.END_PUNCTUATION)\n \t  {\n \t    int save = iter.getIndex();\n-\t    // Skip spaces.\n+\t    // Skip (java) space, line and paragraph separators.\n \t    while (n != CharacterIterator.DONE\n-\t\t   && Character.getType(n) == Character.SPACE_SEPARATOR)\n+\t\t   && Character.isWhitespace(n))\n \t      n = iter.previous();\n \t    // Skip close punctuation.\n \t    while (n != CharacterIterator.DONE"}]}