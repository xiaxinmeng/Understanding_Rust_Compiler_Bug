{"sha": "e1c9f239f3b3a5cea97c38f8b46a0a308bc4e9dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTFjOWYyMzlmM2IzYTVjZWE5N2MzOGY4YjQ2YTBhMzA4YmM0ZTlkYw==", "commit": {"author": {"name": "Emmanuel Briot", "email": "briot@adacore.com", "date": "2009-04-24T14:53:19Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-24T14:53:19Z"}, "message": "2009-04-24  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj-proc.adb, prj.adb, prj.ads, prj-nmsc.adb, prj-nmsc.ads\n\t(Alternate_Languages): now implemented as a malloc-ed list rather\n\tthan through a table.\n\nFrom-SVN: r146731", "tree": {"sha": "51295c110a66bbe2d751dfbac62686e409a8cca5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51295c110a66bbe2d751dfbac62686e409a8cca5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1c9f239f3b3a5cea97c38f8b46a0a308bc4e9dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1c9f239f3b3a5cea97c38f8b46a0a308bc4e9dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1c9f239f3b3a5cea97c38f8b46a0a308bc4e9dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1c9f239f3b3a5cea97c38f8b46a0a308bc4e9dc/comments", "author": {"login": "briot", "id": 42402, "node_id": "MDQ6VXNlcjQyNDAy", "avatar_url": "https://avatars.githubusercontent.com/u/42402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/briot", "html_url": "https://github.com/briot", "followers_url": "https://api.github.com/users/briot/followers", "following_url": "https://api.github.com/users/briot/following{/other_user}", "gists_url": "https://api.github.com/users/briot/gists{/gist_id}", "starred_url": "https://api.github.com/users/briot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/briot/subscriptions", "organizations_url": "https://api.github.com/users/briot/orgs", "repos_url": "https://api.github.com/users/briot/repos", "events_url": "https://api.github.com/users/briot/events{/privacy}", "received_events_url": "https://api.github.com/users/briot/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f22e891a06ab7e90af43f0c792f05b2ce5a07b82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f22e891a06ab7e90af43f0c792f05b2ce5a07b82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f22e891a06ab7e90af43f0c792f05b2ce5a07b82"}], "stats": {"total": 232, "additions": 139, "deletions": 93}, "files": [{"sha": "028da0f7333c375f7bf8313e509c091cc570ceab", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1c9f239f3b3a5cea97c38f8b46a0a308bc4e9dc/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1c9f239f3b3a5cea97c38f8b46a0a308bc4e9dc/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e1c9f239f3b3a5cea97c38f8b46a0a308bc4e9dc", "patch": "@@ -1,3 +1,9 @@\n+2009-04-24  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj-proc.adb, prj.adb, prj.ads, prj-nmsc.adb, prj-nmsc.ads\n+\t(Alternate_Languages): now implemented as a malloc-ed list rather\n+\tthan through a table.\n+\n 2009-04-24  Thomas Quinot  <quinot@adacore.com>\n \n \t* sem_res.adb (Static_Concatenation): Simplify predicate to make it"}, {"sha": "56e9a0cdb47ae251d2ca7d0834d9180760292cd2", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 60, "deletions": 47, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1c9f239f3b3a5cea97c38f8b46a0a308bc4e9dc/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1c9f239f3b3a5cea97c38f8b46a0a308bc4e9dc/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=e1c9f239f3b3a5cea97c38f8b46a0a308bc4e9dc", "patch": "@@ -237,7 +237,7 @@ package body Prj.Nmsc is\n       Lang_Kind           : Language_Kind;\n       Naming_Exception    : Boolean := False;\n       Path                : Path_Information := No_Path_Information;\n-      Alternate_Languages : Alternate_Language_Id := No_Alternate_Language;\n+      Alternate_Languages : Language_List := null;\n       Other_Part          : Source_Id := No_Source;\n       Unit                : Name_Id   := No_Name;\n       Index               : Int       := 0;\n@@ -356,7 +356,8 @@ package body Prj.Nmsc is\n    procedure Find_Ada_Sources\n      (Project               : Project_Id;\n       In_Tree               : Project_Tree_Ref;\n-      Explicit_Sources_Only : Boolean);\n+      Explicit_Sources_Only : Boolean;\n+      Proc_Data             : in out Processing_Data);\n    --  Find all Ada sources by traversing all source directories.\n    --  If Explicit_Sources_Only is True, then the sources found must belong to\n    --  the list of sources specified explicitly in the project file.\n@@ -417,7 +418,7 @@ package body Prj.Nmsc is\n      (In_Tree               : Project_Tree_Ref;\n       Data                  : in out Project_Data;\n       File_Name             : File_Name_Type;\n-      Alternate_Languages   : out Alternate_Language_Id;\n+      Alternate_Languages   : out Language_List;\n       Language              : out Language_Ptr;\n       Language_Name         : out Name_Id;\n       Display_Language_Name : out Name_Id;\n@@ -463,9 +464,10 @@ package body Prj.Nmsc is\n    --  Source_Names.\n \n    procedure Find_Sources\n-     (Project     : Project_Id;\n-      In_Tree     : Project_Tree_Ref;\n-      Data        : in out Project_Data);\n+     (Project   : Project_Id;\n+      In_Tree   : Project_Tree_Ref;\n+      Data      : in out Project_Data;\n+      Proc_Data : in out Processing_Data);\n    --  Process the Source_Files and Source_List_File attributes, and store\n    --  the list of source files into the Source_Names htable.\n    --  When these attributes are not defined, find all files matching the\n@@ -529,7 +531,8 @@ package body Prj.Nmsc is\n    procedure Look_For_Sources\n      (Project     : Project_Id;\n       In_Tree     : Project_Tree_Ref;\n-      Data        : in out Project_Data);\n+      Data        : in out Project_Data;\n+      Proc_Data   : in out Processing_Data);\n    --  Find all the sources of project Project in project tree In_Tree and\n    --  update its Data accordingly. This assumes that Data.First_Source has\n    --  been initialized with the list of excluded sources and special naming\n@@ -553,7 +556,7 @@ package body Prj.Nmsc is\n       Path_Name       : Path_Name_Type;\n       Project         : Project_Id;\n       In_Tree         : Project_Tree_Ref;\n-      Units           : in out Files_Htable.Instance;\n+      Proc_Data       : in out Processing_Data;\n       Ada_Language    : Language_Ptr;\n       Location        : Source_Ptr;\n       Source_Recorded : in out Boolean);\n@@ -675,7 +678,7 @@ package body Prj.Nmsc is\n       Lang_Kind           : Language_Kind;\n       Naming_Exception    : Boolean := False;\n       Path                : Path_Information := No_Path_Information;\n-      Alternate_Languages : Alternate_Language_Id := No_Alternate_Language;\n+      Alternate_Languages : Language_List := null;\n       Other_Part          : Source_Id := No_Source;\n       Unit                : Name_Id   := No_Name;\n       Index               : Int       := 0;\n@@ -800,7 +803,8 @@ package body Prj.Nmsc is\n       In_Tree         : Project_Tree_Ref;\n       Report_Error    : Put_Line_Access;\n       When_No_Sources : Error_Warning;\n-      Current_Dir     : String)\n+      Current_Dir     : String;\n+      Proc_Data       : in out Processing_Data)\n    is\n       Data      : Project_Data renames In_Tree.Projects.Table (Project);\n       Extending : Boolean := False;\n@@ -859,7 +863,7 @@ package body Prj.Nmsc is\n       --  Find the sources\n \n       if Data.Source_Dirs /= Nil_String then\n-         Look_For_Sources (Project, In_Tree, Data);\n+         Look_For_Sources (Project, In_Tree, Data, Proc_Data);\n \n          if Get_Mode = Ada_Only then\n \n@@ -882,8 +886,7 @@ package body Prj.Nmsc is\n             declare\n                Language      : Language_Ptr;\n                Source        : Source_Id;\n-               Alt_Lang      : Alternate_Language_Id;\n-               Alt_Lang_Data : Alternate_Language_Data;\n+               Alt_Lang      : Language_List;\n                Continuation  : Boolean := False;\n                Iter          : Source_Iterator;\n \n@@ -905,13 +908,10 @@ package body Prj.Nmsc is\n \n                         Alt_Lang := Source.Alternate_Languages;\n \n-                        Alternate_Loop :\n-                        while Alt_Lang /= No_Alternate_Language loop\n-                           Alt_Lang_Data := In_Tree.Alt_Langs.Table (Alt_Lang);\n-                           exit Source_Loop\n-                           when Alt_Lang_Data.Language = Language;\n-                           Alt_Lang := Alt_Lang_Data.Next;\n-                        end loop Alternate_Loop;\n+                        while Alt_Lang /= null loop\n+                           exit Source_Loop when Alt_Lang.Language = Language;\n+                           Alt_Lang := Alt_Lang.Next;\n+                        end loop;\n \n                         Next (Iter);\n                      end loop Source_Loop;\n@@ -6876,9 +6876,10 @@ package body Prj.Nmsc is\n    ------------------\n \n    procedure Find_Sources\n-     (Project : Project_Id;\n-      In_Tree : Project_Tree_Ref;\n-      Data    : in out Project_Data)\n+     (Project   : Project_Id;\n+      In_Tree   : Project_Tree_Ref;\n+      Data      : in out Project_Data;\n+      Proc_Data : in out Processing_Data)\n    is\n       Sources          : constant Variable_Value :=\n                            Util.Value_Of\n@@ -7036,7 +7037,8 @@ package body Prj.Nmsc is\n \n       if Get_Mode = Ada_Only then\n          Find_Ada_Sources\n-           (Project, In_Tree, Explicit_Sources_Only => Has_Explicit_Sources);\n+           (Project, In_Tree, Explicit_Sources_Only => Has_Explicit_Sources,\n+            Proc_Data => Proc_Data);\n \n       else\n          Search_Directories\n@@ -7096,14 +7098,14 @@ package body Prj.Nmsc is\n                   if First_Error then\n                      Error_Msg\n                        (Project, In_Tree,\n-                        \"source file { cannot be found\",\n+                        \"source file { not found\",\n                         NL.Location);\n                      First_Error := False;\n \n                   else\n                      Error_Msg\n                        (Project, In_Tree,\n-                        \"\\source file { cannot be found\",\n+                        \"\\source file { not found\",\n                         NL.Location);\n                   end if;\n                end if;\n@@ -7125,14 +7127,33 @@ package body Prj.Nmsc is\n       end if;\n    end Find_Sources;\n \n+   ----------------\n+   -- Initialize --\n+   ----------------\n+\n+   procedure Initialize (Proc_Data : in out Processing_Data) is\n+   begin\n+      Files_Htable.Reset (Proc_Data.Units);\n+   end Initialize;\n+\n+   ----------\n+   -- Free --\n+   ----------\n+\n+   procedure Free (Proc_Data : in out Processing_Data) is\n+   begin\n+      Files_Htable.Reset (Proc_Data.Units);\n+   end Free;\n+\n    ----------------------\n    -- Find_Ada_Sources --\n    ----------------------\n \n    procedure Find_Ada_Sources\n      (Project               : Project_Id;\n       In_Tree               : Project_Tree_Ref;\n-      Explicit_Sources_Only : Boolean)\n+      Explicit_Sources_Only : Boolean;\n+      Proc_Data             : in out Processing_Data)\n    is\n       Data : Project_Data renames In_Tree.Projects.Table (Project);\n       Source_Dir     : String_List_Id;\n@@ -7141,11 +7162,8 @@ package body Prj.Nmsc is\n       Dir_Has_Source : Boolean := False;\n       NL             : Name_Location;\n       Ada_Language   : Language_Ptr;\n-      Units          : Files_Htable.Instance;\n \n    begin\n-      Files_Htable.Reset (Units);\n-\n       if Current_Verbosity = High then\n          Write_Line (\"Looking for Ada sources:\");\n       end if;\n@@ -7249,7 +7267,7 @@ package body Prj.Nmsc is\n                         Path_Name       => Path_Name,\n                         Project         => Project,\n                         In_Tree         => In_Tree,\n-                        Units           => Units,\n+                        Proc_Data       => Proc_Data,\n                         Ada_Language    => Ada_Language,\n                         Location        => Location,\n                         Source_Recorded => Dir_Has_Source);\n@@ -7275,8 +7293,6 @@ package body Prj.Nmsc is\n       if Current_Verbosity = High then\n          Write_Line (\"End looking for sources\");\n       end if;\n-\n-      Files_Htable.Reset (Units);\n    end Find_Ada_Sources;\n \n    -------------------------------\n@@ -7287,7 +7303,7 @@ package body Prj.Nmsc is\n      (In_Tree               : Project_Tree_Ref;\n       Data                  : in out Project_Data;\n       File_Name             : File_Name_Type;\n-      Alternate_Languages   : out Alternate_Language_Id;\n+      Alternate_Languages   : out Language_List;\n       Language              : out Language_Ptr;\n       Language_Name         : out Name_Id;\n       Display_Language_Name : out Name_Id;\n@@ -7340,13 +7356,9 @@ package body Prj.Nmsc is\n             end if;\n \n             if Header_File then\n-               Alternate_Language_Table.Increment_Last (In_Tree.Alt_Langs);\n-               In_Tree.Alt_Langs.Table\n-                 (Alternate_Language_Table.Last (In_Tree.Alt_Langs)) :=\n+               Alternate_Languages := new Language_List_Element'\n                  (Language => Language,\n                   Next     => Alternate_Languages);\n-               Alternate_Languages :=\n-                 Alternate_Language_Table.Last (In_Tree.Alt_Langs);\n \n             else\n                Header_File := True;\n@@ -7361,7 +7373,7 @@ package body Prj.Nmsc is\n \n    begin\n       Language              := No_Language_Index;\n-      Alternate_Languages   := No_Alternate_Language;\n+      Alternate_Languages   := null;\n       Display_Language_Name := No_Name;\n       Unit                  := No_Name;\n       Lang_Kind             := File_Based;\n@@ -7440,7 +7452,7 @@ package body Prj.Nmsc is\n \n       Name_Loc              : Name_Location := Source_Names.Get (File_Name);\n       Check_Name            : Boolean := False;\n-      Alternate_Languages   : Alternate_Language_Id := No_Alternate_Language;\n+      Alternate_Languages   : Language_List;\n       Language              : Language_Ptr;\n       Source                : Source_Id;\n       Other_Part            : Source_Id;\n@@ -7856,7 +7868,8 @@ package body Prj.Nmsc is\n    procedure Look_For_Sources\n      (Project     : Project_Id;\n       In_Tree     : Project_Tree_Ref;\n-      Data        : in out Project_Data)\n+      Data        : in out Project_Data;\n+      Proc_Data   : in out Processing_Data)\n    is\n       Iter : Source_Iterator;\n \n@@ -8094,7 +8107,7 @@ package body Prj.Nmsc is\n             Load_Naming_Exceptions (Project, In_Tree);\n          end if;\n \n-         Find_Sources (Project, In_Tree, Data);\n+         Find_Sources (Project, In_Tree, Data, Proc_Data);\n          Mark_Excluded_Sources;\n \n          if Get_Mode = Multi_Language then\n@@ -8184,7 +8197,7 @@ package body Prj.Nmsc is\n       Path_Name       : Path_Name_Type;\n       Project         : Project_Id;\n       In_Tree         : Project_Tree_Ref;\n-      Units           : in out Files_Htable.Instance;\n+      Proc_Data       : in out Processing_Data;\n       Ada_Language    : Language_Ptr;\n       Location        : Source_Ptr;\n       Source_Recorded : in out Boolean)\n@@ -8253,7 +8266,7 @@ package body Prj.Nmsc is\n \n                --  Record the file name in the hash table Files_Htable\n \n-               Files_Htable.Set (Units, Canonical_File, Project);\n+               Files_Htable.Set (Proc_Data.Units, Canonical_File, Project);\n \n                UData.File_Names (Unit_Kind) :=\n                  (Name         => Canonical_File,\n@@ -8313,7 +8326,7 @@ package body Prj.Nmsc is\n             --  another project. If it is, report error but note we do that\n             --  only for the first unit in the source file.\n \n-            Unit_Prj := Files_Htable.Get (Units, Canonical_File);\n+            Unit_Prj := Files_Htable.Get (Proc_Data.Units, Canonical_File);\n \n             if not File_Recorded\n               and then Unit_Prj /= No_Project\n@@ -8330,7 +8343,7 @@ package body Prj.Nmsc is\n                The_Unit := Unit_Table.Last (In_Tree.Units);\n                Units_Htable.Set (In_Tree.Units_HT, Unit_Name, The_Unit);\n \n-               Files_Htable.Set (Units, Canonical_File, Project);\n+               Files_Htable.Set (Proc_Data.Units, Canonical_File, Project);\n \n                UData.Name := Unit_Name;\n                UData.File_Names (Unit_Kind) :="}, {"sha": "88b88702aaeafe397e44abc2ca9c2317bd8c8f95", "filename": "gcc/ada/prj-nmsc.ads", "status": "modified", "additions": 35, "deletions": 19, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1c9f239f3b3a5cea97c38f8b46a0a308bc4e9dc/gcc%2Fada%2Fprj-nmsc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1c9f239f3b3a5cea97c38f8b46a0a308bc4e9dc/gcc%2Fada%2Fprj-nmsc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.ads?ref=e1c9f239f3b3a5cea97c38f8b46a0a308bc4e9dc", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2000-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -23,39 +23,55 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  Check the Naming Scheme of a project file, find the source files\n+--  Perform various checks on a project and find all its source files\n \n private package Prj.Nmsc is\n \n-   --  It would be nicer to have a higher level statement of what these\n-   --  procedures do (related to their names), rather than just an English\n-   --  language summary of the implementation ???\n+   type Processing_Data is private;\n+   --  Temporary data which is needed while parsing a project. It does not need\n+   --  to be kept in memory once a project has been fully loaded, but is\n+   --  necessary while performing consistency checks (duplicate sources,...)\n+   --  This data must be initialized before processing any project, and the\n+   --  same data is used for processing all projects in the tree.\n+\n+   procedure Initialize (Proc_Data : in out Processing_Data);\n+   --  Initialize Proc_Data\n+\n+   procedure Free (Proc_Data : in out Processing_Data);\n+   --  Free the memory occupied by Proc_Data\n \n    procedure Check\n      (Project         : Project_Id;\n       In_Tree         : Project_Tree_Ref;\n       Report_Error    : Put_Line_Access;\n       When_No_Sources : Error_Warning;\n-      Current_Dir     : String);\n-   --  Check the object directory and the source directories\n-   --\n-   --  Check the library attributes, including the library directory if any\n-   --\n-   --  Get the set of specification and implementation suffixes, if any\n-   --\n-   --  Check the naming scheme for Ada\n-   --\n-   --  Find the Ada source files if any\n-   --\n-   --  Check the naming scheme for the supported languages (c, c++, ...) other\n-   --  than Ada. Find the source files if any.\n+      Current_Dir     : String;\n+      Proc_Data       : in out Processing_Data);\n+   --  Perform consistency and semantic checks on a project, starting from the\n+   --  project tree parsed from the .gpr file. This procedure interprets the\n+   --  various case statements in the project based on the current environment\n+   --  variables (the \"scenario\").\n+   --  After checking the validity of the naming scheme, it searches for all\n+   --  the source files of the project.\n+   --  The result of this procedure is a filled data structure for Project_Id\n+   --  which contains all the information about the project. This information\n+   --  is only valid while the scenario variables are preserved.\n+   --  If the current mode is Ada_Only, this procedure will only search Ada\n+   --  sources; but in multi_language mode it will look for sources for all the\n+   --  supported languages.\n    --\n    --  If Report_Error is null , use the standard error reporting mechanism\n    --  (Errout). Otherwise, report errors using Report_Error.\n    --\n-   --  Current_Dir is for optimization purposes only, avoiding system calls.\n+   --  Current_Dir is for optimization purposes only, avoiding system calls to\n+   --  query it.\n    --\n    --  When_No_Sources indicates what should be done when no sources of a\n    --  language are found in a project where this language is declared.\n \n+private\n+   type Processing_Data is record\n+      Units : Files_Htable.Instance;\n+      --  Mapping from file base name to the project containing the file\n+   end record;\n end Prj.Nmsc;"}, {"sha": "7cbcf02ab97e394743b902840b34885abd5bd0eb", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1c9f239f3b3a5cea97c38f8b46a0a308bc4e9dc/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1c9f239f3b3a5cea97c38f8b46a0a308bc4e9dc/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=e1c9f239f3b3a5cea97c38f8b46a0a308bc4e9dc", "patch": "@@ -145,13 +145,14 @@ package body Prj.Proc is\n       In_Tree         : Project_Tree_Ref;\n       Current_Dir     : String_Access;\n       When_No_Sources : Error_Warning;\n+      Proc_Data       : Processing_Data;\n    end record;\n    --  Data passed to Recursive_Check\n    --  Current_Dir is for optimization purposes, avoiding extra system calls.\n \n    procedure Recursive_Check\n-     (Project         : Project_Id;\n-      Data            : in out Recursive_Check_Data);\n+     (Project   : Project_Id;\n+      Data      : in out Recursive_Check_Data);\n    --  Check_Naming_Scheme for the project\n \n    ---------\n@@ -282,10 +283,14 @@ package body Prj.Proc is\n       procedure Check_All_Projects is new\n         For_Every_Project_Imported (Recursive_Check_Data, Recursive_Check);\n \n-      Data : Recursive_Check_Data :=\n-        (In_Tree, Dir'Unchecked_Access, When_No_Sources);\n+      Data : Recursive_Check_Data;\n \n    begin\n+      Data.In_Tree         := In_Tree;\n+      Data.Current_Dir     := Dir'Unchecked_Access;\n+      Data.When_No_Sources := When_No_Sources;\n+      Initialize (Data.Proc_Data);\n+\n       Check_All_Projects (Project, In_Tree, Data, Imported_First => True);\n \n       --  Set the Other_Part field for the units\n@@ -322,6 +327,8 @@ package body Prj.Proc is\n             Next (Iter);\n          end loop;\n       end;\n+\n+      Free (Data.Proc_Data);\n    end Check;\n \n    -------------------------------\n@@ -2462,8 +2469,8 @@ package body Prj.Proc is\n    ---------------------\n \n    procedure Recursive_Check\n-     (Project         : Project_Id;\n-      Data            : in out Recursive_Check_Data)\n+     (Project   : Project_Id;\n+      Data      : in out Recursive_Check_Data)\n    is\n    begin\n       if Verbose_Mode then\n@@ -2475,7 +2482,7 @@ package body Prj.Proc is\n \n       Prj.Nmsc.Check\n         (Project, Data.In_Tree, Error_Report, Data.When_No_Sources,\n-         Data.Current_Dir.all);\n+         Data.Current_Dir.all, Data.Proc_Data);\n    end Recursive_Check;\n \n    -----------------------"}, {"sha": "403e2c23ad7793d462bc1ae04361fb38c97bc818", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1c9f239f3b3a5cea97c38f8b46a0a308bc4e9dc/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1c9f239f3b3a5cea97c38f8b46a0a308bc4e9dc/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=e1c9f239f3b3a5cea97c38f8b46a0a308bc4e9dc", "patch": "@@ -149,6 +149,7 @@ package body Prj is\n    procedure Free_List (Languages : in out Language_Ptr);\n    procedure Free_List (Source : in out Source_Id);\n    procedure Free_List (List : in out Project_List);\n+   procedure Free_List (Languages : in out Language_List);\n    --  Free memory allocated for the list of languages or sources\n \n    procedure Language_Changed (Iter : in out Source_Iterator);\n@@ -841,13 +842,30 @@ package body Prj is\n    -- Free_List --\n    ---------------\n \n+   procedure Free_List (Languages : in out Language_List) is\n+      procedure Unchecked_Free is new Ada.Unchecked_Deallocation\n+        (Language_List_Element, Language_List);\n+      Tmp : Language_List;\n+   begin\n+      while Languages /= null loop\n+         Tmp := Languages.Next;\n+         Unchecked_Free (Languages);\n+         Languages := Tmp;\n+      end loop;\n+   end Free_List;\n+\n+   ---------------\n+   -- Free_List --\n+   ---------------\n+\n    procedure Free_List (Source : in out Source_Id) is\n       procedure Unchecked_Free is new Ada.Unchecked_Deallocation\n         (Source_Data, Source_Id);\n       Tmp : Source_Id;\n    begin\n       while Source /= No_Source loop\n          Tmp := Source.Next_In_Lang;\n+         Free_List (Source.Alternate_Languages);\n          Unchecked_Free (Source);\n          Source := Tmp;\n       end loop;\n@@ -902,7 +920,6 @@ package body Prj is\n          Array_Element_Table.Free (Tree.Array_Elements);\n          Array_Table.Free (Tree.Arrays);\n          Package_Table.Free (Tree.Packages);\n-         Alternate_Language_Table.Free (Tree.Alt_Langs);\n          Unit_Table.Free (Tree.Units);\n          Units_Htable.Reset (Tree.Units_HT);\n          Source_Paths_Htable.Reset (Tree.Source_Paths_HT);\n@@ -944,7 +961,6 @@ package body Prj is\n       Array_Element_Table.Init      (Tree.Array_Elements);\n       Array_Table.Init              (Tree.Arrays);\n       Package_Table.Init            (Tree.Packages);\n-      Alternate_Language_Table.Init (Tree.Alt_Langs);\n       Unit_Table.Init               (Tree.Units);\n       Units_Htable.Reset            (Tree.Units_HT);\n       Source_Paths_Htable.Reset     (Tree.Source_Paths_HT);"}, {"sha": "b4d61720f884e05f1a4caaf548861d1e3dd5e54a", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 6, "deletions": 18, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1c9f239f3b3a5cea97c38f8b46a0a308bc4e9dc/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1c9f239f3b3a5cea97c38f8b46a0a308bc4e9dc/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=e1c9f239f3b3a5cea97c38f8b46a0a308bc4e9dc", "patch": "@@ -604,24 +604,13 @@ package Prj is\n                          Mapping_Files => Mapping_Files_Htable.Nil,\n                          Next          => No_Language_Index);\n \n-   type Alternate_Language_Id is new Nat;\n-\n-   No_Alternate_Language : constant Alternate_Language_Id := 0;\n-\n-   type Alternate_Language_Data is record\n+   type Language_List_Element;\n+   type Language_List is access Language_List_Element;\n+   type Language_List_Element is record\n       Language : Language_Ptr := No_Language_Index;\n-      Next     : Alternate_Language_Id := No_Alternate_Language;\n+      Next     : Language_List;\n    end record;\n \n-   package Alternate_Language_Table is new GNAT.Dynamic_Tables\n-     (Table_Component_Type => Alternate_Language_Data,\n-      Table_Index_Type     => Alternate_Language_Id,\n-      Table_Low_Bound      => 1,\n-      Table_Initial        => 10,\n-      Table_Increment      => 100);\n-   --  The table for storing the alternate languages of a header file that\n-   --  is used for several languages.\n-\n    type Source_Kind is (Spec, Impl, Sep);\n \n    type Source_Data is record\n@@ -645,7 +634,7 @@ package Prj is\n       Declared_In_Interfaces : Boolean            := False;\n       --  True when source is declared in attribute Interfaces\n \n-      Alternate_Languages : Alternate_Language_Id := No_Alternate_Language;\n+      Alternate_Languages : Language_List;\n       --  List of languages a header file may also be, in addition of language\n       --  Language_Name.\n \n@@ -746,7 +735,7 @@ package Prj is\n                        Compiled               => True,\n                        In_Interfaces          => True,\n                        Declared_In_Interfaces => False,\n-                       Alternate_Languages    => No_Alternate_Language,\n+                       Alternate_Languages    => null,\n                        Kind                   => Spec,\n                        Dependency             => None,\n                        Other_Part             => No_Source,\n@@ -1439,7 +1428,6 @@ package Prj is\n          Arrays            : Array_Table.Instance;\n          Packages          : Package_Table.Instance;\n          Projects          : Project_Table.Instance;\n-         Alt_Langs         : Alternate_Language_Table.Instance;\n          Units             : Unit_Table.Instance;\n          Units_HT          : Units_Htable.Instance;\n          Source_Paths_HT   : Source_Paths_Htable.Instance;"}]}