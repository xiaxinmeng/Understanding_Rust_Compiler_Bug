{"sha": "7a9a00be049860530e590125f1a8b0f999a40fa4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2E5YTAwYmUwNDk4NjA1MzBlNTkwMTI1ZjFhOGIwZjk5OWE0MGZhNA==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1994-09-29T23:43:02Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1994-09-29T23:43:02Z"}, "message": "stmt.c (expand_return): We have to be careful of cleanups that can be generated when...\n\n        * stmt.c (expand_return): We have to be careful of cleanups that can\n        be generated when expanding the return value, as they might otherwise\n        wipe out the return value.\n\nFrom-SVN: r8167", "tree": {"sha": "dc208b0a6c0e8361ba575ef255f4788a22253c62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc208b0a6c0e8361ba575ef255f4788a22253c62"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a9a00be049860530e590125f1a8b0f999a40fa4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a9a00be049860530e590125f1a8b0f999a40fa4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a9a00be049860530e590125f1a8b0f999a40fa4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a9a00be049860530e590125f1a8b0f999a40fa4/comments", "author": null, "committer": null, "parents": [{"sha": "0f05a13c10cfeae603043c9fadcb3a8a169d112a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f05a13c10cfeae603043c9fadcb3a8a169d112a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f05a13c10cfeae603043c9fadcb3a8a169d112a"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "c845d30373794b0ed2a4851d1a6492397b2a8158", "filename": "gcc/stmt.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a9a00be049860530e590125f1a8b0f999a40fa4/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a9a00be049860530e590125f1a8b0f999a40fa4/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=7a9a00be049860530e590125f1a8b0f999a40fa4", "patch": "@@ -2513,7 +2513,15 @@ expand_return (retval)\n     }\n \n   /* Are any cleanups needed?  E.g. C++ destructors to be run?  */\n+  /* This is not sufficient.  We also need to watch for cleanups of the\n+     expression we are about to expand.  Unfortunately, we cannot know\n+     if it has cleanups until we expand it, and we want to change how we\n+     expand it depending upon if we need cleanups.  We can't win.  */\n+#if 0\n   cleanups = any_pending_cleanups (1);\n+#else\n+  cleanups = 1;\n+#endif\n \n   if (TREE_CODE (retval) == RESULT_DECL)\n     retval_rhs = retval;"}]}