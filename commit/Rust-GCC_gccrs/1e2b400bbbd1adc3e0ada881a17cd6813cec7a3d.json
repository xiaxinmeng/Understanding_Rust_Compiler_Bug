{"sha": "1e2b400bbbd1adc3e0ada881a17cd6813cec7a3d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWUyYjQwMGJiYmQxYWRjM2UwYWRhODgxYTE3Y2Q2ODEzY2VjN2EzZA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-12-11T00:15:53Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-12-11T00:15:53Z"}, "message": "compiler: generate type descriptor for pointer to alias defined in another package\n    \n    When a type descriptor is needed (for e.g. interface conversion),\n    if the type is a pointer to a named type defined in another\n    package, we don't generate the definition of the type descriptor\n    because it is generated in the package where the type is defined.\n    However, if the named type is an alias to an unnamed type, its\n    descriptor is not generated in the other package, and we need to\n    generate it.\n    \n    Reviewed-on: https://go-review.googlesource.com/c/gofrontend/+/210787\n\nFrom-SVN: r279207", "tree": {"sha": "0f21ae89b5d4f227428b38a9c13bd40cb5b934ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f21ae89b5d4f227428b38a9c13bd40cb5b934ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e2b400bbbd1adc3e0ada881a17cd6813cec7a3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e2b400bbbd1adc3e0ada881a17cd6813cec7a3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e2b400bbbd1adc3e0ada881a17cd6813cec7a3d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e2b400bbbd1adc3e0ada881a17cd6813cec7a3d/comments", "author": null, "committer": null, "parents": [{"sha": "cff87282f4f50c2fd471a2fe0df49312716a8caf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cff87282f4f50c2fd471a2fe0df49312716a8caf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cff87282f4f50c2fd471a2fe0df49312716a8caf"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "b2933737c2ee854ec61ba9434a42ef68bcc216ff", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e2b400bbbd1adc3e0ada881a17cd6813cec7a3d/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e2b400bbbd1adc3e0ada881a17cd6813cec7a3d/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=1e2b400bbbd1adc3e0ada881a17cd6813cec7a3d", "patch": "@@ -1,4 +1,4 @@\n-6f2bf15e15bf7516c393966577d72b79cba7f980\n+85641a0f26061f7c98db42a2adb3250c07ce504e\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "7afdba7b3f9114953b677c85328fc1b25acf3991", "filename": "gcc/go/gofrontend/types.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e2b400bbbd1adc3e0ada881a17cd6813cec7a3d/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e2b400bbbd1adc3e0ada881a17cd6813cec7a3d/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.cc?ref=1e2b400bbbd1adc3e0ada881a17cd6813cec7a3d", "patch": "@@ -1453,13 +1453,13 @@ Type::type_descriptor_defined_elsewhere(Named_type* nt,\n   else\n     {\n       if (this->points_to() != NULL\n-\t  && this->points_to()->named_type() != NULL\n-\t  && this->points_to()->named_type()->named_object()->package() != NULL)\n+\t  && this->points_to()->unalias()->named_type() != NULL\n+\t  && this->points_to()->unalias()->named_type()->named_object()->package() != NULL)\n \t{\n \t  // This is an unnamed pointer to a named type defined in a\n \t  // different package.  The descriptor should be defined in\n \t  // that package.\n-\t  *package = this->points_to()->named_type()->named_object()->package();\n+\t  *package = this->points_to()->unalias()->named_type()->named_object()->package();\n \t  return true;\n \t}\n     }"}]}