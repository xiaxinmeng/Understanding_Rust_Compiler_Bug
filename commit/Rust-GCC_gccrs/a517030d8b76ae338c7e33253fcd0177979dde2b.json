{"sha": "a517030d8b76ae338c7e33253fcd0177979dde2b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTUxNzAzMGQ4Yjc2YWUzMzhjN2UzMzI1M2ZjZDAxNzc5NzlkZGUyYg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2019-07-22T13:57:22Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-22T13:57:22Z"}, "message": "[Ada] Type inconsistency in floating_point type declarations\n\nThis patch fixes an inconsistency in the typing of the bounds of a\nfloting point type declaration, when some bound is given by a dtatic\nconstant of an explicit type, instead of a real literal, Previous to\nthis patch the bound of the type retained the given type, leading to\nspurious errors in Codepeer.\n\n2019-07-22  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch3.adb (Convert_Bound): Subsidiary of\n\tFloating_Point_Type_Declaration, to handle properly range\n\tspecifications with bounds that may include static constants of\n\ta given type rather than real literals.\n\nFrom-SVN: r273680", "tree": {"sha": "a92e4621fe3c684b7e5fc3f9b175a6625cd5d651", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a92e4621fe3c684b7e5fc3f9b175a6625cd5d651"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a517030d8b76ae338c7e33253fcd0177979dde2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a517030d8b76ae338c7e33253fcd0177979dde2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a517030d8b76ae338c7e33253fcd0177979dde2b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a517030d8b76ae338c7e33253fcd0177979dde2b/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2c26d262eb40998040308a57d420849fd764ef53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c26d262eb40998040308a57d420849fd764ef53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c26d262eb40998040308a57d420849fd764ef53"}], "stats": {"total": 55, "additions": 36, "deletions": 19}, "files": [{"sha": "2d0beb3841a64c5fcd91526ae3f374df719f57bb", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a517030d8b76ae338c7e33253fcd0177979dde2b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a517030d8b76ae338c7e33253fcd0177979dde2b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a517030d8b76ae338c7e33253fcd0177979dde2b", "patch": "@@ -1,3 +1,10 @@\n+2019-07-22  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Convert_Bound): Subsidiary of\n+\tFloating_Point_Type_Declaration, to handle properly range\n+\tspecifications with bounds that may include static constants of\n+\ta given type rather than real literals.\n+\n 2019-07-22  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* sem_aggr.adb (Rewrite_Bound): Be prepared for discriminals"}, {"sha": "5bee503e885ba103cf8462a01959a7f126536875", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 29, "deletions": 19, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a517030d8b76ae338c7e33253fcd0177979dde2b/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a517030d8b76ae338c7e33253fcd0177979dde2b/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=a517030d8b76ae338c7e33253fcd0177979dde2b", "patch": "@@ -17827,12 +17827,16 @@ package body Sem_Ch3 is\n       Digs_Val      : Uint;\n       Base_Typ      : Entity_Id;\n       Implicit_Base : Entity_Id;\n-      Bound         : Node_Id;\n \n       function Can_Derive_From (E : Entity_Id) return Boolean;\n       --  Find if given digits value, and possibly a specified range, allows\n       --  derivation from specified type\n \n+      procedure Convert_Bound (B : Node_Id);\n+      --  If specified, the bounds must be static but may be of different\n+      --  types. They must be converted into machine numbers of the base type,\n+      --  in accordance with RM 4.9(38).\n+\n       function Find_Base_Type return Entity_Id;\n       --  Find a predefined base type that Def can derive from, or generate\n       --  an error and substitute Long_Long_Float if none exists.\n@@ -17870,6 +17874,28 @@ package body Sem_Ch3 is\n          return True;\n       end Can_Derive_From;\n \n+      -------------------\n+      -- Convert_Bound --\n+      --------------------\n+\n+      procedure Convert_Bound (B : Node_Id) is\n+      begin\n+         --  If the bound is not a literal it can only be static if it is\n+         --  a static constant, possibly of a specified type.\n+\n+         if Is_Entity_Name (B)\n+           and then Ekind (Entity (B)) = E_Constant\n+         then\n+            Rewrite (B, Constant_Value (Entity (B)));\n+         end if;\n+\n+         if Nkind (B) = N_Real_Literal then\n+            Set_Realval (B, Machine (Base_Typ, Realval (B), Round, B));\n+            Set_Is_Machine_Number (B);\n+            Set_Etype (B, Base_Typ);\n+         end if;\n+      end Convert_Bound;\n+\n       --------------------\n       -- Find_Base_Type --\n       --------------------\n@@ -17967,24 +17993,8 @@ package body Sem_Ch3 is\n          Set_Scalar_Range (T, Real_Range_Specification (Def));\n          Set_Is_Constrained (T);\n \n-         --  The bounds of this range must be converted to machine numbers\n-         --  in accordance with RM 4.9(38).\n-\n-         Bound := Type_Low_Bound (T);\n-\n-         if Nkind (Bound) = N_Real_Literal then\n-            Set_Realval\n-              (Bound, Machine (Base_Typ, Realval (Bound), Round, Bound));\n-            Set_Is_Machine_Number (Bound);\n-         end if;\n-\n-         Bound := Type_High_Bound (T);\n-\n-         if Nkind (Bound) = N_Real_Literal then\n-            Set_Realval\n-              (Bound, Machine (Base_Typ, Realval (Bound), Round, Bound));\n-            Set_Is_Machine_Number (Bound);\n-         end if;\n+         Convert_Bound (Type_Low_Bound (T));\n+         Convert_Bound (Type_High_Bound (T));\n \n       else\n          Set_Scalar_Range (T, Scalar_Range (Base_Typ));"}]}