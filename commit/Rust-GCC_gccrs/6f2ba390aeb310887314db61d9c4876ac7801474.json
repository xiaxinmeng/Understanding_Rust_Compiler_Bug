{"sha": "6f2ba390aeb310887314db61d9c4876ac7801474", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmYyYmEzOTBhZWIzMTA4ODczMTRkYjYxZDljNDg3NmFjNzgwMTQ3NA==", "commit": {"author": {"name": "Maxim Kuvyrkov", "email": "mkuvyrkov@ispras.ru", "date": "2006-06-13T08:50:53Z"}, "committer": {"name": "Maxim Kuvyrkov", "email": "mkuvyrkov@gcc.gnu.org", "date": "2006-06-13T08:50:53Z"}, "message": "re PR target/27863 (ICE in check_cfg, at haifa-sched.c:4615)\n\n2006-06-13  Maxim Kuvyrkov  <mkuvyrkov@ispras.ru>\n\n\t* haifa-sched.c (unlink_other_notes, unlink_line_notes): Fix the patch\n\tfor PR target/27863.\n\n2006-06-13  Maxim Kuvyrkov  <mkuvyrkov@ispras.ru>\n\n\t* gcc.c-torture/compile/20060609-1.c: New test.\n\t\n\tPR target/27863\n\t* gcc.c-torture/compile/pr27863.c: New test.\n\nFrom-SVN: r114604", "tree": {"sha": "43ad4575682a725e8cae5a064cbc6a8e36e443af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43ad4575682a725e8cae5a064cbc6a8e36e443af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f2ba390aeb310887314db61d9c4876ac7801474", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f2ba390aeb310887314db61d9c4876ac7801474", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f2ba390aeb310887314db61d9c4876ac7801474", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f2ba390aeb310887314db61d9c4876ac7801474/comments", "author": null, "committer": null, "parents": [{"sha": "c68ecf64bf184898617266177b5462f67219cdbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c68ecf64bf184898617266177b5462f67219cdbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c68ecf64bf184898617266177b5462f67219cdbf"}], "stats": {"total": 79, "additions": 66, "deletions": 13}, "files": [{"sha": "c5f37aa2356353cadd43d583b0e0516aa1202816", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f2ba390aeb310887314db61d9c4876ac7801474/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f2ba390aeb310887314db61d9c4876ac7801474/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6f2ba390aeb310887314db61d9c4876ac7801474", "patch": "@@ -1,3 +1,8 @@\n+2006-06-13  Maxim Kuvyrkov  <mkuvyrkov@ispras.ru>\n+\n+\t* haifa-sched.c (unlink_other_notes, unlink_line_notes): Fix the patch\n+\tfor PR target/27863.\n+\n 2006-06-13  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/27536"}, {"sha": "70c13b1133af6b26a226737cdf7b5dea73aabd0c", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 19, "deletions": 13, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f2ba390aeb310887314db61d9c4876ac7801474/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f2ba390aeb310887314db61d9c4876ac7801474/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=6f2ba390aeb310887314db61d9c4876ac7801474", "patch": "@@ -1251,13 +1251,16 @@ unlink_other_notes (rtx insn, rtx tail)\n       if (next)\n \tPREV_INSN (next) = prev;\n \n-      /* Basic block can begin with either LABEL or\n-         NOTE_INSN_BASIC_BLOCK.  */\n-      gcc_assert (BB_HEAD (bb) != insn);\n+      if (bb)\n+        {\n+          /* Basic block can begin with either LABEL or\n+             NOTE_INSN_BASIC_BLOCK.  */\n+          gcc_assert (BB_HEAD (bb) != insn);\n \n-      /* Check if we are removing last insn in the BB.  */\n-      if (BB_END (bb) == insn)\n-        BB_END (bb) = prev;\n+          /* Check if we are removing last insn in the BB.  */\n+          if (BB_END (bb) == insn)\n+            BB_END (bb) = prev;\n+        }\n \n       /* See sched_analyze to see how these are handled.  */\n       if (NOTE_LINE_NUMBER (insn) != NOTE_INSN_EH_REGION_BEG\n@@ -1283,7 +1286,7 @@ unlink_line_notes (rtx insn, rtx tail)\n {\n   rtx prev = PREV_INSN (insn);\n \n-  while (insn != tail && NOTE_P (insn))\n+  while (insn != tail && NOTE_NOT_BB_P (insn))\n     {\n       rtx next = NEXT_INSN (insn);\n \n@@ -1297,13 +1300,16 @@ unlink_line_notes (rtx insn, rtx tail)\n \t  if (next)\n \t    PREV_INSN (next) = prev;\n \n-          /* Basic block can begin with either LABEL or\n-             NOTE_INSN_BASIC_BLOCK.  */\n-          gcc_assert (BB_HEAD (bb) != insn);\n+          if (bb)\n+            {\n+              /* Basic block can begin with either LABEL or\n+                 NOTE_INSN_BASIC_BLOCK.  */\n+              gcc_assert (BB_HEAD (bb) != insn);\n \n-          /* Check if we are removing last insn in the BB.  */\n-          if (BB_END (bb) == insn)\n-            BB_END (bb) = prev;\n+              /* Check if we are removing last insn in the BB.  */\n+              if (BB_END (bb) == insn)\n+                BB_END (bb) = prev;\n+            }\n \n \t  /* Record line-number notes so they can be reused.  */\n \t  LINE_NOTE (insn) = insn;"}, {"sha": "04c639aea2a333164648b98e8b086ff8f4c6f609", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f2ba390aeb310887314db61d9c4876ac7801474/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f2ba390aeb310887314db61d9c4876ac7801474/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6f2ba390aeb310887314db61d9c4876ac7801474", "patch": "@@ -1,3 +1,10 @@\n+2006-06-13  Maxim Kuvyrkov  <mkuvyrkov@ispras.ru>\n+\n+\t* gcc.c-torture/compile/20060609-1.c: New test.\n+\t\n+\tPR target/27863\n+\t* gcc.c-torture/compile/pr27863.c: New test.\n+\n 2006-06-13  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/27830"}, {"sha": "a8152c8a5706d294d792e02e4770055fd5e733b1", "filename": "gcc/testsuite/gcc.c-torture/compile/20060609-1.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f2ba390aeb310887314db61d9c4876ac7801474/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20060609-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f2ba390aeb310887314db61d9c4876ac7801474/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20060609-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20060609-1.c?ref=6f2ba390aeb310887314db61d9c4876ac7801474", "patch": "@@ -0,0 +1,7 @@\n+/* This test used to ICE on IA64.  */\n+int __strspn_c2 (__const char *__s, int __accept1, int __accept2)\n+{\n+  register long unsigned int __result = 0;\n+  while (__s[__result] == __accept1 || __s[__result] == __accept2)\n+  return __result;\n+}"}, {"sha": "86abc06860d2bc566937fae2ca18b5503bdf1ab2", "filename": "gcc/testsuite/gcc.c-torture/compile/pr27863.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f2ba390aeb310887314db61d9c4876ac7801474/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr27863.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f2ba390aeb310887314db61d9c4876ac7801474/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr27863.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr27863.c?ref=6f2ba390aeb310887314db61d9c4876ac7801474", "patch": "@@ -0,0 +1,28 @@\n+/* This test used to ICE on IA64.  */\n+long stack[100];\n+int main(int argc,char**argv,char **envp)\n+{\n+  long *esp=stack;\n+  static void* jarray[]={ &&KeyCtrlKV };\n+ *++esp=(long)&&_loc0;\n+ goto SetTermStruc;\n+ _loc0:;\n+ *++esp=(long)&&_loc1;\n+ _loc1:;\n+*++esp=(long)&&_loc35;\n+ _loc35:;\n+goto *(*esp--);\n+*++esp=(long)&&_loc36;\n+ _loc36:;\n+*++esp=(long)&&_loc37;\n+ _loc37:;\n+KeyCtrlKV:\n+*++esp=(long)&&_loc66;\n+_loc66:;\n+*++esp=(long)&&_loc106;\n+ _loc106:;\n+*++esp=(long)&&_loc119;\n+ _loc119:;\n+SetTermStruc:\n+ goto *(*esp--);\n+}"}]}