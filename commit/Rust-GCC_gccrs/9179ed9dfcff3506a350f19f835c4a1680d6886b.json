{"sha": "9179ed9dfcff3506a350f19f835c4a1680d6886b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE3OWVkOWRmY2ZmMzUwNmEzNTBmMTlmODM1YzRhMTY4MGQ2ODg2Yg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-05-03T08:37:18Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-05-03T08:37:18Z"}, "message": "re PR middle-end/53144 (PPRE infinite loop)\n\n2012-05-03  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/53144\n\t* tree-ssa-sccvn.c (vn_reference_lookup_or_insert_constant_for_pieces):\n\tRename to ...\n\t(vn_reference_lookup_or_insert_for_pieces): ... this.  Properly deal\n\twith SSA name values.\n\t(vn_reference_lookup_3): Adjust callers.\n\n\t* gcc.dg/torture/pr53144.c: New testcase.\n\nFrom-SVN: r187078", "tree": {"sha": "9d7afca6248cc5f2f0dd21ae9d21d770f795dce4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d7afca6248cc5f2f0dd21ae9d21d770f795dce4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9179ed9dfcff3506a350f19f835c4a1680d6886b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9179ed9dfcff3506a350f19f835c4a1680d6886b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9179ed9dfcff3506a350f19f835c4a1680d6886b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9179ed9dfcff3506a350f19f835c4a1680d6886b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d130f146484b854b059a2ec226dee531069a001d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d130f146484b854b059a2ec226dee531069a001d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d130f146484b854b059a2ec226dee531069a001d"}], "stats": {"total": 65, "additions": 52, "deletions": 13}, "files": [{"sha": "142cf36300121954c011a164e705bdb678a1e826", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9179ed9dfcff3506a350f19f835c4a1680d6886b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9179ed9dfcff3506a350f19f835c4a1680d6886b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9179ed9dfcff3506a350f19f835c4a1680d6886b", "patch": "@@ -1,3 +1,12 @@\n+2012-05-03  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/53144\n+\t* tree-ssa-sccvn.c (vn_reference_lookup_or_insert_constant_for_pieces):\n+\tRename to ...\n+\t(vn_reference_lookup_or_insert_for_pieces): ... this.  Properly deal\n+\twith SSA name values.\n+\t(vn_reference_lookup_3): Adjust callers.\n+\n 2012-05-03  Ganesh Gopalasubramanian  <Ganesh.Gopalasubramanian@amd.com>\n \n \t* config/i386/driver-i386.c (host_detect_local_cpu): Reset"}, {"sha": "b3063cc3cb4c99c7825073f6e9b5f434d06ce9eb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9179ed9dfcff3506a350f19f835c4a1680d6886b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9179ed9dfcff3506a350f19f835c4a1680d6886b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9179ed9dfcff3506a350f19f835c4a1680d6886b", "patch": "@@ -1,3 +1,8 @@\n+2012-05-03  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/53144\n+\t* gcc.dg/torture/pr53144.c: New testcase.\n+\n 2012-05-03  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/52864"}, {"sha": "ad94812ad7cedcc774d952238fa3ea9fd3567524", "filename": "gcc/testsuite/gcc.dg/torture/pr53144.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9179ed9dfcff3506a350f19f835c4a1680d6886b/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr53144.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9179ed9dfcff3506a350f19f835c4a1680d6886b/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr53144.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr53144.c?ref=9179ed9dfcff3506a350f19f835c4a1680d6886b", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+\n+typedef unsigned char __attribute__((vector_size(4))) uvec;\n+\n+int main (int argc, char *argv[]) {\n+    int i;\n+    int x = 0;\n+    uvec uc0 = (uvec) {argc, 1,  2,  10};\n+    unsigned char uc1[4] = {0, 3, 2, 200};\n+    signed char ucg[4] = {1, 0, 0, 0 };\n+    signed char ucl[4] = {0, 1, 0, 1 };\n+\n+#define uc0_ ((unsigned char *)&uc0)\n+\n+    for (i = 0; i < 4; i ++) {\n+\tx |= ucg[i] != (uc0_[i] > uc1[i]);\n+\tx |= ucl[i] != (uc0_[i] < uc1[i]);\n+    }\n+    return x;\n+}\n+"}, {"sha": "ad9460b9411ae9f304e9cf070e7c341ded0ec11d", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 17, "deletions": 13, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9179ed9dfcff3506a350f19f835c4a1680d6886b/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9179ed9dfcff3506a350f19f835c4a1680d6886b/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=9179ed9dfcff3506a350f19f835c4a1680d6886b", "patch": "@@ -1348,29 +1348,33 @@ vn_reference_lookup_2 (ao_ref *op ATTRIBUTE_UNUSED, tree vuse, void *vr_)\n \n /* Lookup an existing or insert a new vn_reference entry into the\n    value table for the VUSE, SET, TYPE, OPERANDS reference which\n-   has the constant value CST.  */\n+   has the value VALUE which is either a constant or an SSA name.  */\n \n static vn_reference_t\n-vn_reference_lookup_or_insert_constant_for_pieces (tree vuse,\n-\t\t\t\t\t\t   alias_set_type set,\n-\t\t\t\t\t\t   tree type,\n-\t\t\t\t\t\t   VEC (vn_reference_op_s,\n-\t\t\t\t\t\t\theap) *operands,\n-\t\t\t\t\t\t   tree cst)\n+vn_reference_lookup_or_insert_for_pieces (tree vuse,\n+\t\t\t\t\t  alias_set_type set,\n+\t\t\t\t\t  tree type,\n+\t\t\t\t\t  VEC (vn_reference_op_s,\n+\t\t\t\t\t       heap) *operands,\n+\t\t\t\t\t  tree value)\n {\n   struct vn_reference_s vr1;\n   vn_reference_t result;\n+  unsigned value_id;\n   vr1.vuse = vuse;\n   vr1.operands = operands;\n   vr1.type = type;\n   vr1.set = set;\n   vr1.hashcode = vn_reference_compute_hash (&vr1);\n   if (vn_reference_lookup_1 (&vr1, &result))\n     return result;\n+  if (TREE_CODE (value) == SSA_NAME)\n+    value_id = VN_INFO (value)->value_id;\n+  else\n+    value_id = get_or_alloc_constant_value_id (value);\n   return vn_reference_insert_pieces (vuse, set, type,\n \t\t\t\t     VEC_copy (vn_reference_op_s, heap,\n-\t\t\t\t\t       operands), cst,\n-\t\t\t\t     get_or_alloc_constant_value_id (cst));\n+\t\t\t\t\t       operands), value, value_id);\n }\n \n /* Callback for walk_non_aliased_vuses.  Tries to perform a lookup\n@@ -1452,7 +1456,7 @@ vn_reference_lookup_3 (ao_ref *ref, tree vuse, void *vr_)\n \t  && offset2 + size2 >= offset + maxsize)\n \t{\n \t  tree val = build_zero_cst (vr->type);\n-\t  return vn_reference_lookup_or_insert_constant_for_pieces\n+\t  return vn_reference_lookup_or_insert_for_pieces\n \t           (vuse, vr->set, vr->type, vr->operands, val);\n \t}\n     }\n@@ -1473,7 +1477,7 @@ vn_reference_lookup_3 (ao_ref *ref, tree vuse, void *vr_)\n \t  && offset2 + size2 >= offset + maxsize)\n \t{\n \t  tree val = build_zero_cst (vr->type);\n-\t  return vn_reference_lookup_or_insert_constant_for_pieces\n+\t  return vn_reference_lookup_or_insert_for_pieces\n \t           (vuse, vr->set, vr->type, vr->operands, val);\n \t}\n     }\n@@ -1514,7 +1518,7 @@ vn_reference_lookup_3 (ao_ref *ref, tree vuse, void *vr_)\n \t\t\t\t\t\t   / BITS_PER_UNIT),\n \t\t\t\t\t\tref->size / BITS_PER_UNIT);\n \t      if (val)\n-\t\treturn vn_reference_lookup_or_insert_constant_for_pieces\n+\t\treturn vn_reference_lookup_or_insert_for_pieces\n \t\t         (vuse, vr->set, vr->type, vr->operands, val);\n \t    }\n \t}\n@@ -1568,7 +1572,7 @@ vn_reference_lookup_3 (ao_ref *ref, tree vuse, void *vr_)\n \t\t    }\n \t\t}\n \t      if (val)\n-\t\treturn vn_reference_lookup_or_insert_constant_for_pieces\n+\t\treturn vn_reference_lookup_or_insert_for_pieces\n \t\t         (vuse, vr->set, vr->type, vr->operands, val);\n \t    }\n \t}"}]}