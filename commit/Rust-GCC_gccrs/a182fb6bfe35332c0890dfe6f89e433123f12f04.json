{"sha": "a182fb6bfe35332c0890dfe6f89e433123f12f04", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE4MmZiNmJmZTM1MzMyYzA4OTBkZmU2Zjg5ZTQzMzEyM2YxMmYwNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-07-10T07:39:54Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-07-10T07:39:54Z"}, "message": "re PR rtl-optimization/36419 (Wrong unwind info with -Os -fasynchronous-unwind-tables)\n\n\tPR rtl-optimization/36419\n\t* combine-stack-adj.c (adjust_frame_related_expr): New function.\n\t(combine_stack_adjustments_for_block): Call it if needed.  Delete\n\tcorrect insn.\n\t* dwarf2out.c (dwarf2out_frame_debug_expr): Adjust\n\tDW_CFA_GNU_args_size if CSA pass merged some adjustments into\n\tprologue sp adjustment.\n\n\t* g++.dg/eh/async-unwind1.C: New test.\n\nFrom-SVN: r137689", "tree": {"sha": "d543916a368659cba776054160616092ec3f7128", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d543916a368659cba776054160616092ec3f7128"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a182fb6bfe35332c0890dfe6f89e433123f12f04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a182fb6bfe35332c0890dfe6f89e433123f12f04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a182fb6bfe35332c0890dfe6f89e433123f12f04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a182fb6bfe35332c0890dfe6f89e433123f12f04/comments", "author": null, "committer": null, "parents": [{"sha": "b1caaefc1cde4049a13aa413cdae0be107551c31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1caaefc1cde4049a13aa413cdae0be107551c31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1caaefc1cde4049a13aa413cdae0be107551c31"}], "stats": {"total": 189, "additions": 182, "deletions": 7}, "files": [{"sha": "c5b36ecbf6ccbda58026b3e79ada1f984eab9c5c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a182fb6bfe35332c0890dfe6f89e433123f12f04/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a182fb6bfe35332c0890dfe6f89e433123f12f04/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a182fb6bfe35332c0890dfe6f89e433123f12f04", "patch": "@@ -1,12 +1,20 @@\n+2008-07-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/36419\n+\t* combine-stack-adj.c (adjust_frame_related_expr): New function.\n+\t(combine_stack_adjustments_for_block): Call it if needed.  Delete\n+\tcorrect insn.\n+\t* dwarf2out.c (dwarf2out_frame_debug_expr): Adjust\n+\tDW_CFA_GNU_args_size if CSA pass merged some adjustments into\n+\tprologue sp adjustment.\n+\n 2008-07-10  Peter Maydell  <pmaydell@chiark.greenend.org.uk>\n \n \tPR other/28322\n-\t* opts.c (print_ignored_options): report postponed diagnostics for\n+\t* opts.c (print_ignored_options): Report postponed diagnostics for\n \tunknown -Wno-* options as warnings, not errors.\n-\t(postpone_unknown_option_error): renamed to\n-\tpostpone_unknown_option_warning.\n-\t* gcc.dg/pr28322-2.c: check that emitted diagnostic for -Wno-foobar\n-\tis a warning and not an error.\n+\t(postpone_unknown_option_error): Renamed to...\n+\t(postpone_unknown_option_warning): ... this.\n \n 2008-07-09  Doug Kwan  <dougkwan@google.com>\n "}, {"sha": "afcb35b33ea5a5dbc1a45202ef4999ec0a3f2d1c", "filename": "gcc/combine-stack-adj.c", "status": "modified", "additions": 71, "deletions": 2, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a182fb6bfe35332c0890dfe6f89e433123f12f04/gcc%2Fcombine-stack-adj.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a182fb6bfe35332c0890dfe6f89e433123f12f04/gcc%2Fcombine-stack-adj.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine-stack-adj.c?ref=a182fb6bfe35332c0890dfe6f89e433123f12f04", "patch": "@@ -1,6 +1,6 @@\n /* Combine stack adjustments.\n    Copyright (C) 1987, 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997,\n-   1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007 \n+   1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -272,6 +272,72 @@ record_stack_memrefs (rtx *xp, void *data)\n   return 0;\n }\n \n+/* Adjust or create REG_FRAME_RELATED_EXPR note when merging a stack\n+   adjustment into a frame related insn.  */\n+\n+static void\n+adjust_frame_related_expr (rtx last_sp_set, rtx insn,\n+\t\t\t   HOST_WIDE_INT this_adjust)\n+{\n+  rtx note = find_reg_note (last_sp_set, REG_FRAME_RELATED_EXPR, NULL_RTX);\n+  rtx new_expr = NULL_RTX;\n+\n+  if (note == NULL_RTX && RTX_FRAME_RELATED_P (insn))\n+    return;\n+\n+  if (note\n+      && GET_CODE (XEXP (note, 0)) == SEQUENCE\n+      && XVECLEN (XEXP (note, 0), 0) >= 2)\n+    {\n+      rtx expr = XEXP (note, 0);\n+      rtx last = XVECEXP (expr, 0, XVECLEN (expr, 0) - 1);\n+      int i;\n+\n+      if (GET_CODE (last) == SET\n+\t  && RTX_FRAME_RELATED_P (last) == RTX_FRAME_RELATED_P (insn)\n+\t  && SET_DEST (last) == stack_pointer_rtx\n+\t  && GET_CODE (SET_SRC (last)) == PLUS\n+\t  && XEXP (SET_SRC (last), 0) == stack_pointer_rtx\n+\t  && GET_CODE (XEXP (SET_SRC (last), 1)) == CONST_INT)\n+\t{\n+\t  XEXP (SET_SRC (last), 1)\n+\t    = GEN_INT (INTVAL (XEXP (SET_SRC (last), 1)) + this_adjust);\n+\t  return;\n+\t}\n+\n+      new_expr = gen_rtx_SEQUENCE (VOIDmode,\n+\t\t\t\t   rtvec_alloc (XVECLEN (expr, 0) + 1));\n+      for (i = 0; i < XVECLEN (expr, 0); i++)\n+\tXVECEXP (new_expr, 0, i) = XVECEXP (expr, 0, i);\n+    }\n+  else\n+    {\n+      new_expr = gen_rtx_SEQUENCE (VOIDmode, rtvec_alloc (2));\n+      if (note)\n+\tXVECEXP (new_expr, 0, 0) = XEXP (note, 0);\n+      else\n+\t{\n+\t  rtx expr = copy_rtx (single_set_for_csa (last_sp_set));\n+\n+\t  XEXP (SET_SRC (expr), 1)\n+\t    = GEN_INT (INTVAL (XEXP (SET_SRC (expr), 1)) - this_adjust);\n+\t  RTX_FRAME_RELATED_P (expr) = 1;\n+\t  XVECEXP (new_expr, 0, 0) = expr;\n+\t}\n+    }\n+\n+  XVECEXP (new_expr, 0, XVECLEN (new_expr, 0) - 1)\n+    = copy_rtx (single_set_for_csa (insn));\n+  RTX_FRAME_RELATED_P (XVECEXP (new_expr, 0, XVECLEN (new_expr, 0) - 1))\n+    = RTX_FRAME_RELATED_P (insn);\n+  if (note)\n+    XEXP (note, 0) = new_expr;\n+  else\n+    REG_NOTES (last_sp_set)\n+      = gen_rtx_EXPR_LIST (REG_FRAME_RELATED_EXPR, new_expr,\n+\t\t\t   REG_NOTES (last_sp_set));\n+}\n+\n /* Subroutine of combine_stack_adjustments, called for each basic block.  */\n \n static void\n@@ -343,6 +409,9 @@ combine_stack_adjustments_for_block (basic_block bb)\n \t\t\t\t\t\t  last_sp_adjust + this_adjust,\n \t\t\t\t\t\t  this_adjust))\n \t\t    {\n+\t\t      if (RTX_FRAME_RELATED_P (last_sp_set))\n+\t\t\tadjust_frame_related_expr (last_sp_set, insn,\n+\t\t\t\t\t\t   this_adjust);\n \t\t      /* It worked!  */\n \t\t      delete_insn (insn);\n \t\t      last_sp_adjust += this_adjust;\n@@ -373,7 +442,7 @@ combine_stack_adjustments_for_block (basic_block bb)\n \t\t deallocation+allocation conspired to cancel, we can\n \t\t delete the old deallocation insn.  */\n \t      if (last_sp_set && last_sp_adjust == 0)\n-\t\tdelete_insn (insn);\n+\t\tdelete_insn (last_sp_set);\n \t      free_csa_memlist (memlist);\n \t      memlist = NULL;\n \t      last_sp_set = insn;"}, {"sha": "46ab10481d54950f9699ce54f6e885c991619359", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a182fb6bfe35332c0890dfe6f89e433123f12f04/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a182fb6bfe35332c0890dfe6f89e433123f12f04/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=a182fb6bfe35332c0890dfe6f89e433123f12f04", "patch": "@@ -1579,6 +1579,32 @@ dwarf2out_frame_debug_expr (rtx expr, const char *label)\n \t      && (!MEM_P (SET_DEST (elem)) || GET_CODE (expr) == SEQUENCE)\n \t      && (RTX_FRAME_RELATED_P (elem) || par_index == 0))\n \t    dwarf2out_frame_debug_expr (elem, label);\n+\t  else if (GET_CODE (elem) == SET\n+\t\t   && par_index != 0\n+\t\t   && !RTX_FRAME_RELATED_P (elem))\n+\t    {\n+\t      /* Stack adjustment combining might combine some post-prologue\n+\t\t stack adjustment into a prologue stack adjustment.  */\n+\t      HOST_WIDE_INT offset = stack_adjust_offset (elem);\n+\n+\t      if (offset != 0)\n+\t\t{\n+\t\t  if (cfa.reg == STACK_POINTER_REGNUM)\n+\t\t    cfa.offset += offset;\n+\n+#ifndef STACK_GROWS_DOWNWARD\n+\t\t  offset = -offset;\n+#endif\n+\n+\t\t  args_size += offset;\n+\t\t  if (args_size < 0)\n+\t\t    args_size = 0;\n+\n+\t\t  def_cfa_1 (label, &cfa);\n+\t\t  if (flag_asynchronous_unwind_tables)\n+\t\t    dwarf2out_args_size (label, args_size);\n+\t\t}\n+\t    }\n \t}\n       return;\n     }"}, {"sha": "3c15329230727fe2b5345657632d0331576aecf6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a182fb6bfe35332c0890dfe6f89e433123f12f04/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a182fb6bfe35332c0890dfe6f89e433123f12f04/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a182fb6bfe35332c0890dfe6f89e433123f12f04", "patch": "@@ -1,3 +1,14 @@\n+2008-07-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/36419\n+\t* g++.dg/eh/async-unwind1.C: New test.\n+\n+2008-07-10  Peter Maydell  <pmaydell@chiark.greenend.org.uk>\n+\n+\tPR other/28322\n+\t* gcc.dg/pr28322-2.c: Check that emitted diagnostic for -Wno-foobar\n+\tis a warning and not an error.\n+\n 2008-07-09  Ian Lance Taylor  <iant@google.com>\n \n \t* gcc.dg/no-asm-1.c: New test."}, {"sha": "69b2c345e751bbefb603220ae6c88bd453f9cc45", "filename": "gcc/testsuite/g++.dg/eh/async-unwind1.C", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a182fb6bfe35332c0890dfe6f89e433123f12f04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fasync-unwind1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a182fb6bfe35332c0890dfe6f89e433123f12f04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fasync-unwind1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fasync-unwind1.C?ref=a182fb6bfe35332c0890dfe6f89e433123f12f04", "patch": "@@ -0,0 +1,61 @@\n+// PR rtl-optimization/36419\n+// { dg-do run { target { { i?86-*-* x86_64-*-* } && ilp32 } } }\n+// { dg-options \"-Os -fasynchronous-unwind-tables -mpreferred-stack-boundary=4\" }\n+\n+extern \"C\" void abort ();\n+\n+int v = -1;\n+unsigned int n;\n+\n+__attribute__((noinline, used))\n+void foo (int a, int)\n+{\n+  if (v < 0)\n+    v = ((unsigned long) &a) & 15;\n+  else if ((((unsigned long) &a) & 15) != v)\n+    abort ();\n+  if (n++ == 0)\n+    throw 1;\n+}\n+\n+__attribute__((noinline, used))\n+void baz (int a, int, int, int, int, int, int)\n+{\n+  if (v < 0)\n+    v = ((unsigned long) &a) & 15;\n+  else if ((((unsigned long) &a) & 15) != v)\n+    abort ();\n+  if (n++ == 0)\n+    throw 1;\n+}\n+\n+struct A { A () { }; ~A (); char c[24]; };\n+\n+__attribute__((noinline))\n+A::~A ()\n+{\n+  asm volatile (\"\" : : : \"memory\");\n+}\n+\n+__attribute__((noinline))\n+void bar ()\n+{\n+  A a;\n+  try\n+    {\n+      foo (1, 2);\n+      baz (3, 4, 5, 6, 7, 8, 9);\n+    }\n+  catch (...)\n+    {\n+    }\n+  foo (1, 2);\n+  baz (3, 4, 5, 6, 7, 8, 9);\n+}\n+\n+int\n+main ()\n+{\n+  bar ();\n+  return 0;\n+}"}]}