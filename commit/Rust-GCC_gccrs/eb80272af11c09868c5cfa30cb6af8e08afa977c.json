{"sha": "eb80272af11c09868c5cfa30cb6af8e08afa977c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWI4MDI3MmFmMTFjMDk4NjhjNWNmYTMwY2I2YWY4ZTA4YWZhOTc3Yw==", "commit": {"author": {"name": "Samuel Tardieu", "email": "sam@rfc1149.net", "date": "2007-10-26T07:08:05Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-10-26T07:08:05Z"}, "message": "ipa-pure-const.c (check_decl): Return immediately when pure_const_state has been set to IPA_NEITHER.\n\n        * ipa-pure-const.c (check_decl): Return immediately when\n        pure_const_state has been set to IPA_NEITHER.\n\nFrom-SVN: r129644", "tree": {"sha": "1f1998b89b39b08905a1aa1d8835d27810441036", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f1998b89b39b08905a1aa1d8835d27810441036"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb80272af11c09868c5cfa30cb6af8e08afa977c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb80272af11c09868c5cfa30cb6af8e08afa977c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb80272af11c09868c5cfa30cb6af8e08afa977c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb80272af11c09868c5cfa30cb6af8e08afa977c/comments", "author": {"login": "samueltardieu", "id": 44656, "node_id": "MDQ6VXNlcjQ0NjU2", "avatar_url": "https://avatars.githubusercontent.com/u/44656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samueltardieu", "html_url": "https://github.com/samueltardieu", "followers_url": "https://api.github.com/users/samueltardieu/followers", "following_url": "https://api.github.com/users/samueltardieu/following{/other_user}", "gists_url": "https://api.github.com/users/samueltardieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/samueltardieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samueltardieu/subscriptions", "organizations_url": "https://api.github.com/users/samueltardieu/orgs", "repos_url": "https://api.github.com/users/samueltardieu/repos", "events_url": "https://api.github.com/users/samueltardieu/events{/privacy}", "received_events_url": "https://api.github.com/users/samueltardieu/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "70c0cfc9e5597eabc45d62f139d2d9a9bfd156e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70c0cfc9e5597eabc45d62f139d2d9a9bfd156e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70c0cfc9e5597eabc45d62f139d2d9a9bfd156e4"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "56059d3ac51c2560a2f57ad10cbadd3411e4a4c7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb80272af11c09868c5cfa30cb6af8e08afa977c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb80272af11c09868c5cfa30cb6af8e08afa977c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eb80272af11c09868c5cfa30cb6af8e08afa977c", "patch": "@@ -1,3 +1,8 @@\n+2007-10-26  Samuel Tardieu  <sam@rfc1149.net>\n+\n+\t* ipa-pure-const.c (check_decl): Return immediately when\n+\tpure_const_state has been set to IPA_NEITHER.\n+\n 2007-10-25  Ira Rosen  <irar@il.ibm.com>\n \n \tPR tree-optimization/33833\n@@ -21,9 +26,9 @@\n 2007-10-25  Ira Rosen  <irar@il.ibm.com>\n \n \tPR tree-optimization/33866\n-\t* tree-vect-transform.c (vectorizable_store): Check operands of all the\n-\tstmts in the group of strided accesses. Get def stmt type for each store\n-\tin the group and pass it to vect_get_vec_def_for_stmt_copy ().\n+\t* tree-vect-transform.c (vectorizable_store): Check operands of all\n+\tthe stmts in the group of strided accesses. Get def stmt type for each\n+\tstore in the group and pass it to vect_get_vec_def_for_stmt_copy ().\n \n 2007-10-25  Uros Bizjak  <ubizjak@gmail.com>\n \n@@ -93,8 +98,8 @@\n 2007-10-24  Michael Matz  <matz@suse.de>\n \n \tPR debug/33868\n-\t* var-tracking.c (variable_union): Don't break after one loop iteration\n-\tbut only when a difference is found.\n+\t* var-tracking.c (variable_union): Don't break after one loop\n+\titeration but only when a difference is found.\n \t(dump_variable): Also print DECL_UID.\n \n 2007-10-24  Olga Golovanevsky  <olga@il.ibm.com>\n@@ -1618,7 +1623,8 @@\n \t* ra-conflict.c: Include \"sparseset.h\".\n \t(conflicts): Change to HOST_WIDEST_FAST_INT.\n \t(allocnos_live): Redefine variable as a sparseset.\n-\t(SET_ALLOCNO_LIVE, CLEAR_ALLOCNO_LIVE, GET_ALLOCNO_LIVE): Delete macros.\n+\t(SET_ALLOCNO_LIVE, CLEAR_ALLOCNO_LIVE, GET_ALLOCNO_LIVE):\n+\tDelete macros.\n \t(allocno_row_words): Removed global variable.\n \t(partial_bitnum, max_bitnum, adjacency_pool, adjacency): New variables.\n \t(CONFLICT_BITNUM, CONFLICT_BITNUM_FAST): New defines.\n@@ -1651,7 +1657,8 @@\n \tUse the FOR_EACH_CONFLICT macro.\n \t* ra.h: Comments updated.\n \t(conflicts): Update prototype to HOST_WIDEST_FAST_INT.\n-\t(partial_bitnum, max_bitnum, adjacency, adjacency_pool): Add prototypes.\n+\t(partial_bitnum, max_bitnum, adjacency, adjacency_pool):\n+\tAdd prototypes.\n \t(ADJACENCY_VEC_LENGTH, FOR_EACH_CONFLICT): New defines.\n \t(adjacency_list_d, adjacency_iterator_d): New types.\n \t(add_neighbor, adjacency_iter_init, adjacency_iter_done,\n@@ -2294,8 +2301,8 @@\n 2007-09-25  Bernd Schmidt  <bernd.schmidt@analog.com>\n \n \t* config/bfin/bfin.c (expand_prologue_reg_save,\n-\texpand_epilogue_reg_restore): Code to save and restore I/M/B/L regs and\n-\tASTAT moved here...\n+\texpand_epilogue_reg_restore): Code to save and restore I/M/B/L regs\n+\tand ASTAT moved here...\n \t(expand_interrupt_handler_prologue, expand_interrupt_handler_epilogue):\n \t... from here.  New argument ALL; callers changed.\n \t(n_regs_saved_by_prologue): Count ASTAT for plain saveall functions."}, {"sha": "d3b880adc83f85561170977c051f14b02b47596f", "filename": "gcc/ipa-pure-const.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb80272af11c09868c5cfa30cb6af8e08afa977c/gcc%2Fipa-pure-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb80272af11c09868c5cfa30cb6af8e08afa977c/gcc%2Fipa-pure-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-pure-const.c?ref=eb80272af11c09868c5cfa30cb6af8e08afa977c", "patch": "@@ -114,7 +114,10 @@ check_decl (funct_state local,\n      are CHECKING_WRITE, this cannot be a pure or constant\n      function.  */\n   if (checking_write) \n-    local->pure_const_state = IPA_NEITHER;\n+    {\n+      local->pure_const_state = IPA_NEITHER;\n+      return;\n+    }\n \n   if (DECL_EXTERNAL (t) || TREE_PUBLIC (t))\n     {"}]}