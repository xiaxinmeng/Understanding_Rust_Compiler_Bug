{"sha": "5854b0d02003df0d7efe67def8bd8ca7abbfabf6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTg1NGIwZDAyMDAzZGYwZDdlZmU2N2RlZjhiZDhjYTdhYmJmYWJmNg==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "1996-02-19T22:26:19Z"}, "committer": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "1996-02-19T22:26:19Z"}, "message": "add AIX assembler doubleword integer syntax\n\nFrom-SVN: r11308", "tree": {"sha": "0a1ac10bd241e37fa62c4159bf6081f47731f010", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a1ac10bd241e37fa62c4159bf6081f47731f010"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5854b0d02003df0d7efe67def8bd8ca7abbfabf6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5854b0d02003df0d7efe67def8bd8ca7abbfabf6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5854b0d02003df0d7efe67def8bd8ca7abbfabf6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5854b0d02003df0d7efe67def8bd8ca7abbfabf6/comments", "author": null, "committer": null, "parents": [{"sha": "33fd3209ed31c480691ba75d4ab82e6c2a7f140e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33fd3209ed31c480691ba75d4ab82e6c2a7f140e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33fd3209ed31c480691ba75d4ab82e6c2a7f140e"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "d4a3cbc3854c552da1825857cc4ca90a4aaa12fa", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5854b0d02003df0d7efe67def8bd8ca7abbfabf6/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5854b0d02003df0d7efe67def8bd8ca7abbfabf6/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=5854b0d02003df0d7efe67def8bd8ca7abbfabf6", "patch": "@@ -2285,7 +2285,7 @@ toc_section ()\t\t\t\t\t\t\\\n   fputs (\"[DS]\\n\", FILE);\t\t\t\t\t\\\n   RS6000_OUTPUT_BASENAME (FILE, NAME);\t\t\t\t\\\n   fputs (\":\\n\", FILE);\t\t\t\t\t\t\\\n-  fputs (\"\\t.long .\", FILE);\t\t\t\t\t\\\n+  fputs ((TARGET_32BIT) ? \"\\t.long .\" : \"\\t.llong .\", FILE);\t\\\n   RS6000_OUTPUT_BASENAME (FILE, NAME);\t\t\t\t\\\n   fputs (\", TOC[tc0], 0\\n\", FILE);\t\t\t\t\\\n   fputs (\".csect .text[PR]\\n.\", FILE);\t\t\t\t\\\n@@ -2593,6 +2593,23 @@ toc_section ()\t\t\t\t\t\t\\\n \n /* This is how to output an assembler line defining an `int' constant.  */\n \n+#define ASM_OUTPUT_DOUBLE_INT(FILE,VALUE)\t\t\t\t\\\n+do {\t\t\t\t\t\t\t\t\t\\\n+  if (TARGET_32BIT)\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      assemble_integer (operand_subword ((VALUE), 0, 0, DImode),\t\\\n+                        UNITS_PER_WORD, 1);\t\t\t\t\\\n+      assemble_integer (operand_subword ((VALUE), 1, 0, DImode),\t\\\n+                        UNITS_PER_WORD, 1);\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  else\t\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      fputs (\"\\t.llong \", FILE);\t\t\t\t\t\\\n+      output_addr_const (FILE, (VALUE));\t\t\t\t\\\n+      putc ('\\n', FILE);\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+} while (0)\n+\n #define ASM_OUTPUT_INT(FILE,VALUE)  \\\n ( fputs (\"\\t.long \", FILE),\t\t\t\\\n   output_addr_const (FILE, (VALUE)),\t\t\\\n@@ -2647,7 +2664,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n #define ASM_OUTPUT_ADDR_VEC_ELT(FILE, VALUE)\t\t\\\n   do { char buf[100];\t\t\t\t\t\\\n-       fputs (\"\\t.long \", FILE);\t\t\t\\\n+       fputs ((TARGET_32BIT) ? \"\\t.long \" : \"\\t.llong \", FILE);\t\\\n        ASM_GENERATE_INTERNAL_LABEL (buf, \"L\", VALUE);\t\\\n        assemble_name (FILE, buf);\t\t\t\\\n        putc ('\\n', FILE);\t\t\t\t\\\n@@ -2657,7 +2674,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n #define ASM_OUTPUT_ADDR_DIFF_ELT(FILE, VALUE, REL)\t\\\n   do { char buf[100];\t\t\t\t\t\\\n-       fputs (\"\\t.long \", FILE);\t\t\t\\\n+       fputs ((TARGET_32BIT) ? \"\\t.long \" : \"\\t.llong \", FILE);\t\\\n        ASM_GENERATE_INTERNAL_LABEL (buf, \"L\", VALUE);\t\\\n        assemble_name (FILE, buf);\t\t\t\\\n        putc ('-', FILE);\t\t\t\t\\"}]}