{"sha": "3340164d5db7a65cd98138f1eead1f2d66dd221c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM0MDE2NGQ1ZGI3YTY1Y2Q5ODEzOGYxZWVhZDFmMmQ2NmRkMjIxYw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-01-07T10:32:30Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-01-07T10:32:30Z"}, "message": "Replace outdated references to x86_64-unknown-linux-gnu in docs\n\n\t* doc/install.texi: Replace references to x86_64-unknown-linux-gnu\n\twith x86_64-pc-linux-gnu.\n\nFrom-SVN: r267643", "tree": {"sha": "604a3008db311ea066d09d464b0d9b6f7fbb24c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/604a3008db311ea066d09d464b0d9b6f7fbb24c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3340164d5db7a65cd98138f1eead1f2d66dd221c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3340164d5db7a65cd98138f1eead1f2d66dd221c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3340164d5db7a65cd98138f1eead1f2d66dd221c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3340164d5db7a65cd98138f1eead1f2d66dd221c/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e723923df52bdde7c3aebd6bccaae3c7bff19ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e723923df52bdde7c3aebd6bccaae3c7bff19ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e723923df52bdde7c3aebd6bccaae3c7bff19ee"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "08ba142fae0b7a36a4e5f0e142977bb37216af37", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3340164d5db7a65cd98138f1eead1f2d66dd221c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3340164d5db7a65cd98138f1eead1f2d66dd221c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3340164d5db7a65cd98138f1eead1f2d66dd221c", "patch": "@@ -1,3 +1,8 @@\n+2019-01-07  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/install.texi: Replace references to x86_64-unknown-linux-gnu\n+\twith x86_64-pc-linux-gnu.\n+\n 2019-01-07  Tom de Vries  <tdevries@suse.de>\n \n \tPR target/85486"}, {"sha": "dd01e4caeb17224c8db60657fa6c281b28a0c086", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3340164d5db7a65cd98138f1eead1f2d66dd221c/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3340164d5db7a65cd98138f1eead1f2d66dd221c/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=3340164d5db7a65cd98138f1eead1f2d66dd221c", "patch": "@@ -261,10 +261,10 @@ In order to build GCC, the C standard library and headers must be present\n for all target variants for which target libraries will be built (and not\n only the variant of the host C++ compiler).\n \n-This affects the popular @samp{x86_64-unknown-linux-gnu} platform (among\n+This affects the popular @samp{x86_64-pc-linux-gnu} platform (among\n other multilib targets), for which 64-bit (@samp{x86_64}) and 32-bit\n (@samp{i386}) libc headers are usually packaged separately. If you do a\n-build of a native compiler on @samp{x86_64-unknown-linux-gnu}, make sure you\n+build of a native compiler on @samp{x86_64-pc-linux-gnu}, make sure you\n either have the 32-bit libc developer package properly installed (the exact\n name of the package depends on your distro) or you must build GCC as a\n 64-bit only compiler by configuring with the option\n@@ -2070,14 +2070,14 @@ host system architecture.  For the case that the linker has a\n different (but run-time compatible) architecture, these flags can be\n specified to build plugins that are compatible to the linker.  For\n example, if you are building GCC for a 64-bit x86_64\n-(@samp{x86_64-unknown-linux-gnu}) host system, but have a 32-bit x86\n+(@samp{x86_64-pc-linux-gnu}) host system, but have a 32-bit x86\n GNU/Linux (@samp{i686-pc-linux-gnu}) linker executable (which is\n executable on the former system), you can configure GCC as follows for\n getting compatible linker plugins:\n \n @smallexample\n % @var{srcdir}/configure \\\n-    --host=x86_64-unknown-linux-gnu \\\n+    --host=x86_64-pc-linux-gnu \\\n     --enable-linker-plugin-configure-flags=--host=i686-pc-linux-gnu \\\n     --enable-linker-plugin-flags='CC=gcc\\ -m32\\ -Wl,-rpath,[...]/i686-pc-linux-gnu/lib'\n @end smallexample"}]}