{"sha": "2792d578a616450757c53031a5faeb3c662e4d2b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjc5MmQ1NzhhNjE2NDUwNzU3YzUzMDMxYTVmYWViM2M2NjJlNGQyYg==", "commit": {"author": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2003-02-19T15:54:30Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2003-02-19T15:54:30Z"}, "message": "[multiple changes]\n\n2003-02-19  David Edelsohn  <edelsohn@gnu.org>\n\n        * config/rs6000/rs6000.c (rs6000_override_options): Initialize\n        align_jumps_max_skip and align_loops_max_skip.\n\n2003-02-19  Thierry Moreau  <thierry.moreau@connotech.com>\n\n        * config/rs6000/rs6000.c (rs6000_encode_section_info): Do not\n        test size if named section.\n\nFrom-SVN: r63116", "tree": {"sha": "f4ba754000847107c0e943a12b4caffe5fa3b066", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4ba754000847107c0e943a12b4caffe5fa3b066"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2792d578a616450757c53031a5faeb3c662e4d2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2792d578a616450757c53031a5faeb3c662e4d2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2792d578a616450757c53031a5faeb3c662e4d2b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2792d578a616450757c53031a5faeb3c662e4d2b/comments", "author": null, "committer": null, "parents": [{"sha": "4ea0d487c2bfc50e85f60bc9d74f6f0eb7e84016", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ea0d487c2bfc50e85f60bc9d74f6f0eb7e84016", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ea0d487c2bfc50e85f60bc9d74f6f0eb7e84016"}], "stats": {"total": 42, "additions": 28, "deletions": 14}, "files": [{"sha": "23a97ea136f8e16b3259dfc7dd39e718d3fc0abe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2792d578a616450757c53031a5faeb3c662e4d2b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2792d578a616450757c53031a5faeb3c662e4d2b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2792d578a616450757c53031a5faeb3c662e4d2b", "patch": "@@ -1,3 +1,13 @@\n+2003-02-19  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/rs6000.c (rs6000_override_options): Initialize\n+\talign_jumps_max_skip and align_loops_max_skip.\n+\n+2003-02-19  Thierry Moreau  <thierry.moreau@connotech.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_encode_section_info): Do not\n+\ttest size if named section.\n+\n 2003-02-19  Daniel Jacobowitz  <drow@mvista.com>\n \n \t* expr.c (expand_expr): Use gen_int_mode for the argument"}, {"sha": "500af598e99b9dd4b1363d81298b86a4cf1f9d17", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2792d578a616450757c53031a5faeb3c662e4d2b/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2792d578a616450757c53031a5faeb3c662e4d2b/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=2792d578a616450757c53031a5faeb3c662e4d2b", "patch": "@@ -753,6 +753,10 @@ rs6000_override_options (default_cpu)\n       targetm.asm_out.unaligned_op.di = NULL;\n     }\n \n+  /* Set maximum branch target alignment at two instructions, eight bytes.  */\n+  align_jumps_max_skip = 8;\n+  align_loops_max_skip = 8;\n+\n   /* Arrange to save and restore machine status around nested functions.  */\n   init_machine_status = rs6000_init_machine_status;\n }\n@@ -12670,20 +12674,20 @@ rs6000_elf_encode_section_info (decl, first)\n \t    abort ();\n \t}\n \n-      if ((size > 0 && size <= g_switch_value)\n-\t  || (name\n-\t      && ((len == sizeof (\".sdata\") - 1\n-\t\t   && strcmp (name, \".sdata\") == 0)\n-\t\t  || (len == sizeof (\".sdata2\") - 1\n-\t\t      && strcmp (name, \".sdata2\") == 0)\n-\t\t  || (len == sizeof (\".sbss\") - 1\n-\t\t      && strcmp (name, \".sbss\") == 0)\n-\t\t  || (len == sizeof (\".sbss2\") - 1\n-\t\t      && strcmp (name, \".sbss2\") == 0)\n-\t\t  || (len == sizeof (\".PPC.EMB.sdata0\") - 1\n-\t\t      && strcmp (name, \".PPC.EMB.sdata0\") == 0)\n-\t\t  || (len == sizeof (\".PPC.EMB.sbss0\") - 1\n-\t\t      && strcmp (name, \".PPC.EMB.sbss0\") == 0))))\n+      if (name\n+\t  ? ((len == sizeof (\".sdata\") - 1\n+\t      && strcmp (name, \".sdata\") == 0)\n+\t     || (len == sizeof (\".sdata2\") - 1\n+\t\t && strcmp (name, \".sdata2\") == 0)\n+\t     || (len == sizeof (\".sbss\") - 1\n+\t\t && strcmp (name, \".sbss\") == 0)\n+\t     || (len == sizeof (\".sbss2\") - 1\n+\t\t && strcmp (name, \".sbss2\") == 0)\n+\t     || (len == sizeof (\".PPC.EMB.sdata0\") - 1\n+\t\t && strcmp (name, \".PPC.EMB.sdata0\") == 0)\n+\t     || (len == sizeof (\".PPC.EMB.sbss0\") - 1\n+\t\t && strcmp (name, \".PPC.EMB.sbss0\") == 0))\n+\t  : (size > 0 && size <= g_switch_value))\n \t{\n \t  size_t len = strlen (XSTR (sym_ref, 0));\n \t  char *str = alloca (len + 2);"}]}