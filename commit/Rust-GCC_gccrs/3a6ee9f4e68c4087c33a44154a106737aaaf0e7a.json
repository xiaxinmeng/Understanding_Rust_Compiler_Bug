{"sha": "3a6ee9f4e68c4087c33a44154a106737aaaf0e7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E2ZWU5ZjRlNjhjNDA4N2MzM2E0NDE1NGExMDY3MzdhYWFmMGU3YQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@redhat.com", "date": "2001-03-16T18:10:12Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2001-03-16T18:10:12Z"}, "message": "Fix some MIPS warnings\n\nFrom-SVN: r40556", "tree": {"sha": "be1eded41aa510568ca7f7db2f5d930897abce3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be1eded41aa510568ca7f7db2f5d930897abce3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a6ee9f4e68c4087c33a44154a106737aaaf0e7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a6ee9f4e68c4087c33a44154a106737aaaf0e7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a6ee9f4e68c4087c33a44154a106737aaaf0e7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a6ee9f4e68c4087c33a44154a106737aaaf0e7a/comments", "author": null, "committer": null, "parents": [{"sha": "fa9f36a17be531a83a102a9562613c698566ce05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa9f36a17be531a83a102a9562613c698566ce05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa9f36a17be531a83a102a9562613c698566ce05"}], "stats": {"total": 71, "additions": 52, "deletions": 19}, "files": [{"sha": "72ee6289dfcfde533f4be5bb1d0229c7e8dc08f1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a6ee9f4e68c4087c33a44154a106737aaaf0e7a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a6ee9f4e68c4087c33a44154a106737aaaf0e7a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3a6ee9f4e68c4087c33a44154a106737aaaf0e7a", "patch": "@@ -1,3 +1,26 @@\n+2001-03-16  Michael Meissner  <meissner@redhat.com>\n+\n+\t* mips.h (BITMASK_HIGH): Replacement for 0x80000000 that avoids\n+\twarnings.\n+\t(BITMASK_UPPER16): Replacement for 0xffff0000 that avoids\n+\twarnings.\n+\t(BITMASK_LOWER16): Replacement for 0x0000ffff.\n+\n+\t* mips.c (save_restore_insns): Use BITMASK_UPPER16/BITMASK_LOWER16\n+\tinstead of 0xffff0000/0x0000ffff to avoid warnings about constants\n+\tbeing unsigned in ISO C and signed in traditional.\n+\t(expand_prologue): Ditto.\n+\t(RA_MASK): Use BITMASK_HIGH to avoid warnings.\n+\n+\t* mips.md (divmodsi4,divmodsi4): Use BITMASK_HIGH to avoid\n+\twarnings.\n+\t(divsi3,divdi3): Ditto.\n+\t(modsi3,moddi3): Ditto.\n+\t(fix_truncdfsi2,fix_truncdfdi2): Ditto.\n+\t(fix_truncsfsi2,fix_truncsfdi2): Ditto.\n+\t(movsi split): Use BITMASK_UPPER16/BITMASK_LOWER16 to avoid\n+\twarnings.\n+\n Fri Mar 16 14:47:57 CET 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* i386.c (ix86_expand_fp_movcc): Do not attempt to construct"}, {"sha": "23a05bc6281241e4b5d5fb2f2d16098dd00d70c8", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a6ee9f4e68c4087c33a44154a106737aaaf0e7a/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a6ee9f4e68c4087c33a44154a106737aaaf0e7a/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=3a6ee9f4e68c4087c33a44154a106737aaaf0e7a", "patch": "@@ -6452,12 +6452,13 @@ save_restore_insns (store_p, large_reg, large_offset, file)\n \t\t  && GET_MODE (base_reg_rtx) == SImode)\n \t\t{\n \t\t  insn = emit_move_insn (base_reg_rtx,\n-\t\t\t\t\t GEN_INT (gp_offset & 0xffff0000));\n+\t\t\t\t\t GEN_INT (gp_offset & BITMASK_UPPER16));\n \t\t  if (store_p)\n \t\t    RTX_FRAME_RELATED_P (insn) = 1;\n \t\t  insn\n \t\t    = emit_insn (gen_iorsi3 (base_reg_rtx, base_reg_rtx,\n-\t\t\t\t\t     GEN_INT (gp_offset & 0x0000ffff)));\n+\t\t\t\t\t     GEN_INT (gp_offset\n+\t\t\t\t\t\t      & BITMASK_LOWER16)));\n \t\t  if (store_p)\n \t\t    RTX_FRAME_RELATED_P (insn) = 1;\n \t\t}\n@@ -6671,11 +6672,12 @@ save_restore_insns (store_p, large_reg, large_offset, file)\n \t\t  && GET_MODE (base_reg_rtx) == SImode)\n \t\t{\n \t\t  insn = emit_move_insn (base_reg_rtx,\n-\t\t\t\t\t GEN_INT (fp_offset & 0xffff0000));\n+\t\t\t\t\t GEN_INT (fp_offset & BITMASK_UPPER16));\n \t\t  if (store_p)\n \t\t    RTX_FRAME_RELATED_P (insn) = 1;\n \t\t  insn = emit_insn (gen_iorsi3 (base_reg_rtx, base_reg_rtx,\n-\t\t\t\t\t\tGEN_INT (fp_offset & 0x0000ffff)));\n+\t\t\t\t\t\tGEN_INT (fp_offset\n+\t\t\t\t\t\t\t & BITMASK_LOWER16)));\n \t\t  if (store_p)\n \t\t    RTX_FRAME_RELATED_P (insn) = 1;\n \t\t}\n@@ -7223,10 +7225,11 @@ mips_expand_prologue ()\n \t\t  && GET_MODE (tmp_rtx) == SImode)\n \t\t{\n \t\t  insn = emit_move_insn (tmp_rtx,\n-\t\t\t\t\t GEN_INT (tsize & 0xffff0000));\n+\t\t\t\t\t GEN_INT (tsize & BITMASK_UPPER16));\n \t\t  RTX_FRAME_RELATED_P (insn) = 1;\n \t\t  insn = emit_insn (gen_iorsi3 (tmp_rtx, tmp_rtx,\n-\t\t\t\t\t\tGEN_INT (tsize & 0x0000ffff)));\n+\t\t\t\t\t\tGEN_INT (tsize\n+\t\t\t\t\t\t\t & BITMASK_LOWER16)));\n \t\t  RTX_FRAME_RELATED_P (insn) = 1;\n \t\t}\n \t      else\n@@ -7342,7 +7345,7 @@ mips_expand_prologue ()\n /* Do any necessary cleanup after a function to restore stack, frame,\n    and regs. */\n \n-#define RA_MASK 0x80000000L\t/* 1 << 31 */\n+#define RA_MASK BITMASK_HIGH\t/* 1 << 31 */\n #define PIC_OFFSET_TABLE_MASK (1 << (PIC_OFFSET_TABLE_REGNUM - GP_REG_FIRST))\n \n void"}, {"sha": "cdd0009c05431bd199b7cded808be0f6ba72d5f2", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a6ee9f4e68c4087c33a44154a106737aaaf0e7a/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a6ee9f4e68c4087c33a44154a106737aaaf0e7a/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=3a6ee9f4e68c4087c33a44154a106737aaaf0e7a", "patch": "@@ -179,6 +179,13 @@ extern void\t\tsbss_section PARAMS ((void));\n #define HALF_PIC_FINISH(STREAM)\n #endif\n \n+/* Macros to silence warnings about numbers being signed in traditional\n+   C and unsigned in ISO C when compiled on 32-bit hosts.  */\n+\n+#define BITMASK_HIGH\t(((unsigned long)1) << 31)\t/* 0x80000000 */\n+#define BITMASK_UPPER16\t((unsigned long)0xffff << 16)\t/* 0xffff0000 */\n+#define BITMASK_LOWER16\t((unsigned long)0xffff)\t\t/* 0x0000ffff */\n+\n \f\n /* Run-time compilation parameters selecting different hardware subsets.  */\n "}, {"sha": "ceb4f6a2b11a708ee21de5c2a74e923b7cc132f1", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a6ee9f4e68c4087c33a44154a106737aaaf0e7a/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a6ee9f4e68c4087c33a44154a106737aaaf0e7a/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=3a6ee9f4e68c4087c33a44154a106737aaaf0e7a", "patch": "@@ -2277,7 +2277,7 @@\n \t\t\t       copy_to_mode_reg (SImode, GEN_INT (-1)),\n \t\t\t       GEN_INT (0x6)));\n       emit_insn (gen_div_trap (operands[2],\n-\t\t\t       copy_to_mode_reg (SImode, GEN_INT (0x80000000)),\n+\t\t\t       copy_to_mode_reg (SImode, GEN_INT (BITMASK_HIGH)),\n \t\t\t       GEN_INT (0x6)));\n     }\n   \n@@ -2324,7 +2324,7 @@\n \t\t\t       copy_to_mode_reg (DImode, GEN_INT (-1)),\n \t\t\t       GEN_INT (0x6)));\n       emit_insn (gen_div_trap (operands[2],\n-\t\t\t       copy_to_mode_reg (DImode, GEN_INT (0x80000000)),\n+\t\t\t       copy_to_mode_reg (DImode, GEN_INT (BITMASK_HIGH)),\n \t\t\t       GEN_INT (0x6)));\n     }\n   \n@@ -2535,7 +2535,7 @@\n \t\t\t       copy_to_mode_reg (SImode, GEN_INT (-1)),\n \t\t\t       GEN_INT (0x6)));\n       emit_insn (gen_div_trap (operands[2],\n-\t\t\t       copy_to_mode_reg (SImode, GEN_INT (0x80000000)),\n+\t\t\t       copy_to_mode_reg (SImode, GEN_INT (BITMASK_HIGH)),\n \t\t\t       GEN_INT (0x6)));\n     }\n   \n@@ -2575,7 +2575,7 @@\n \t\t\t       copy_to_mode_reg (DImode, GEN_INT (-1)),\n \t\t\t       GEN_INT (0x6)));\n       emit_insn (gen_div_trap (operands[2],\n-\t\t\t       copy_to_mode_reg (DImode, GEN_INT (0x80000000)),\n+\t\t\t       copy_to_mode_reg (DImode, GEN_INT (BITMASK_HIGH)),\n \t\t\t       GEN_INT (0x6)));\n     }\n   \n@@ -2615,7 +2615,7 @@\n \t\t\t       copy_to_mode_reg (SImode, GEN_INT (-1)),\n \t\t\t       GEN_INT (0x6)));\n       emit_insn (gen_div_trap (operands[2],\n-\t\t\t       copy_to_mode_reg (SImode, GEN_INT (0x80000000)),\n+\t\t\t       copy_to_mode_reg (SImode, GEN_INT (BITMASK_HIGH)),\n \t\t\t       GEN_INT (0x6)));\n     }\n   \n@@ -2655,7 +2655,7 @@\n \t\t\t       copy_to_mode_reg (DImode, GEN_INT (-1)),\n \t\t\t       GEN_INT (0x6)));\n       emit_insn (gen_div_trap (operands[2],\n-\t\t\t       copy_to_mode_reg (DImode, GEN_INT (0x80000000)),\n+\t\t\t       copy_to_mode_reg (DImode, GEN_INT (BITMASK_HIGH)),\n \t\t\t       GEN_INT (0x6)));\n     }\n   \n@@ -4319,7 +4319,7 @@ move\\\\t%0,%z4\\\\n\\\\\n \n       emit_label (label1);\n       emit_move_insn (reg2, gen_rtx_MINUS (DFmode, operands[1], reg1));\n-      emit_move_insn (reg3, GEN_INT (0x80000000));\n+      emit_move_insn (reg3, GEN_INT (BITMASK_HIGH));\n \n       emit_insn (gen_fix_truncdfsi2 (operands[0], reg2));\n       emit_insn (gen_iorsi3 (operands[0], operands[0], reg3));\n@@ -4362,7 +4362,7 @@ move\\\\t%0,%z4\\\\n\\\\\n \n       emit_label (label1);\n       emit_move_insn (reg2, gen_rtx_MINUS (DFmode, operands[1], reg1));\n-      emit_move_insn (reg3, GEN_INT (0x80000000));\n+      emit_move_insn (reg3, GEN_INT (BITMASK_HIGH));\n       emit_insn (gen_ashldi3 (reg3, reg3, GEN_INT (32)));\n \n       emit_insn (gen_fix_truncdfdi2 (operands[0], reg2));\n@@ -4406,7 +4406,7 @@ move\\\\t%0,%z4\\\\n\\\\\n \n       emit_label (label1);\n       emit_move_insn (reg2, gen_rtx_MINUS (SFmode, operands[1], reg1));\n-      emit_move_insn (reg3, GEN_INT (0x80000000));\n+      emit_move_insn (reg3, GEN_INT (BITMASK_HIGH));\n \n       emit_insn (gen_fix_truncsfsi2 (operands[0], reg2));\n       emit_insn (gen_iorsi3 (operands[0], operands[0], reg3));\n@@ -4449,7 +4449,7 @@ move\\\\t%0,%z4\\\\n\\\\\n \n       emit_label (label1);\n       emit_move_insn (reg2, gen_rtx_MINUS (SFmode, operands[1], reg1));\n-      emit_move_insn (reg3, GEN_INT (0x80000000));\n+      emit_move_insn (reg3, GEN_INT (BITMASK_HIGH));\n       emit_insn (gen_ashldi3 (reg3, reg3, GEN_INT (32)));\n \n       emit_insn (gen_fix_truncsfdi2 (operands[0], reg2));\n@@ -5179,8 +5179,8 @@ move\\\\t%0,%z4\\\\n\\\\\n \t\t(match_dup 3)))]\n   \"\n {\n-  operands[2] = GEN_INT (INTVAL (operands[1]) & 0xffff0000);\n-  operands[3] = GEN_INT (INTVAL (operands[1]) & 0x0000ffff);\n+  operands[2] = GEN_INT (INTVAL (operands[1]) & BITMASK_UPPER16);\n+  operands[3] = GEN_INT (INTVAL (operands[1]) & BITMASK_LOWER16);\n }\")\n \n ;; Unlike most other insns, the move insns can't be split with"}]}