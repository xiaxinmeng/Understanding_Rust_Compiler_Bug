{"sha": "29c246a7a7c5a90aa45a58924ddd1d6f67d1ba18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjljMjQ2YTdhN2M1YTkwYWE0NWE1ODkyNGRkZDFkNmY2N2QxYmExOA==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@bitrange.com", "date": "2004-04-26T03:17:08Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2004-04-26T03:17:08Z"}, "message": "re PR bootstrap/15141 (MMIX breakage in except.c:connect_post_landing_pads:handle insns after actual call insn)\n\n\tPR bootstrap/15141\n\t* except.c (connect_post_landing_pads): Delete insns after the\n\tbarrier when generating a unwind_resume_libfunc call.\n\nFrom-SVN: r81176", "tree": {"sha": "8bc5356f2c2d2b984c01002376d3a13a311e1bfd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8bc5356f2c2d2b984c01002376d3a13a311e1bfd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29c246a7a7c5a90aa45a58924ddd1d6f67d1ba18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29c246a7a7c5a90aa45a58924ddd1d6f67d1ba18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29c246a7a7c5a90aa45a58924ddd1d6f67d1ba18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29c246a7a7c5a90aa45a58924ddd1d6f67d1ba18/comments", "author": null, "committer": null, "parents": [{"sha": "a978e17e311e6045af4a0541d734950afb67bbbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a978e17e311e6045af4a0541d734950afb67bbbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a978e17e311e6045af4a0541d734950afb67bbbb"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "f9f097fe242800b1e261a6bef49a953d0d79f387", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29c246a7a7c5a90aa45a58924ddd1d6f67d1ba18/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29c246a7a7c5a90aa45a58924ddd1d6f67d1ba18/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=29c246a7a7c5a90aa45a58924ddd1d6f67d1ba18", "patch": "@@ -1,3 +1,9 @@\n+2004-04-26  Hans-Peter Nilsson  <hp@bitrange.com>\n+\n+\tPR bootstrap/15141\n+\t* except.c (connect_post_landing_pads): Delete insns after the\n+\tbarrier when generating a unwind_resume_libfunc call.\n+\n 2004-04-25  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \tPR/c++ 15119"}, {"sha": "d7daec3e6025ea68f99832432da62766dfff3a3f", "filename": "gcc/except.c", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29c246a7a7c5a90aa45a58924ddd1d6f67d1ba18/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29c246a7a7c5a90aa45a58924ddd1d6f67d1ba18/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=29c246a7a7c5a90aa45a58924ddd1d6f67d1ba18", "patch": "@@ -1830,8 +1830,21 @@ connect_post_landing_pads (void)\n \t  e->count = src->count;\n \t}\n       else\n-\temit_library_call (unwind_resume_libfunc, LCT_THROW,\n-\t\t\t   VOIDmode, 1, cfun->eh->exc_ptr, ptr_mode);\n+\t{\n+\t  emit_library_call (unwind_resume_libfunc, LCT_THROW,\n+\t\t\t     VOIDmode, 1, cfun->eh->exc_ptr, ptr_mode);\n+\n+\t  /* What we just emitted was a throwing libcall, so it got a\n+\t     barrier automatically added after it.  If the last insn in\n+\t     the libcall sequence isn't the barrier, it's because the\n+\t     target emits multiple insns for a call, and there are insns\n+\t     after the actual call insn (which are redundant and would be\n+\t     optimized away).  The barrier is inserted exactly after the\n+\t     call insn, so let's go get that and delete the insns after\n+\t     it, because below we need the barrier to be the last insn in\n+\t     the sequence.  */\n+\t  delete_insns_since (NEXT_INSN (last_call_insn ()));\n+\t}\n \n       seq = get_insns ();\n       end_sequence ();"}]}