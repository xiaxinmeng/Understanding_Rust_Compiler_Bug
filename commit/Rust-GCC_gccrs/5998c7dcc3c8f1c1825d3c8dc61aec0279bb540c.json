{"sha": "5998c7dcc3c8f1c1825d3c8dc61aec0279bb540c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTk5OGM3ZGNjM2M4ZjFjMTgyNWQzYzhkYzYxYWVjMDI3OWJiNTQwYw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-07-15T02:16:57Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-07-15T02:16:57Z"}, "message": "(expand_decl): Make a CONCAT, for decls of complex type.\n\nFrom-SVN: r4922", "tree": {"sha": "aa7cb2bd7a4b24cbb58d0940306004c13a049a5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa7cb2bd7a4b24cbb58d0940306004c13a049a5f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5998c7dcc3c8f1c1825d3c8dc61aec0279bb540c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5998c7dcc3c8f1c1825d3c8dc61aec0279bb540c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5998c7dcc3c8f1c1825d3c8dc61aec0279bb540c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5998c7dcc3c8f1c1825d3c8dc61aec0279bb540c/comments", "author": null, "committer": null, "parents": [{"sha": "477008025c8ae99fdaa6acd66e57b5a0616b3347", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/477008025c8ae99fdaa6acd66e57b5a0616b3347", "html_url": "https://github.com/Rust-GCC/gccrs/commit/477008025c8ae99fdaa6acd66e57b5a0616b3347"}], "stats": {"total": 25, "additions": 21, "deletions": 4}, "files": [{"sha": "b61e822fa36a374d1c991313fe8e9082a4110ed7", "filename": "gcc/stmt.c", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5998c7dcc3c8f1c1825d3c8dc61aec0279bb540c/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5998c7dcc3c8f1c1825d3c8dc61aec0279bb540c/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=5998c7dcc3c8f1c1825d3c8dc61aec0279bb540c", "patch": "@@ -2893,10 +2893,27 @@ expand_decl (decl)\n \t  PROMOTE_MODE (reg_mode, unsignedp, type);\n \t}\n \n-      DECL_RTL (decl) = gen_reg_rtx (reg_mode);\n-      if (TREE_CODE (type) == POINTER_TYPE)\n-\tmark_reg_pointer (DECL_RTL (decl));\n-      REG_USERVAR_P (DECL_RTL (decl)) = 1;\n+      if (TREE_CODE (type) == COMPLEX_TYPE)\n+\t{\n+\t  rtx realpart, imagpart;\n+\t  enum machine_mode partmode = TYPE_MODE (TREE_TYPE (type));\n+\n+\t  /* For a complex type variable, make a CONCAT of two pseudos\n+\t     so that the real and imaginary parts\n+\t     can be allocated separately.  */\n+\t  realpart = gen_reg_rtx (partmode);\n+\t  REG_USERVAR_P (realpart) = 1;\n+\t  imagpart = gen_reg_rtx (partmode);\n+\t  REG_USERVAR_P (imagpart) = 1;\n+\t  DECL_RTL (decl) = gen_rtx (CONCAT, reg_mode, realpart, imagpart);\n+\t}\n+      else\n+\t{\n+\t  DECL_RTL (decl) = gen_reg_rtx (reg_mode);\n+\t  if (TREE_CODE (type) == POINTER_TYPE)\n+\t    mark_reg_pointer (DECL_RTL (decl));\n+\t  REG_USERVAR_P (DECL_RTL (decl)) = 1;\n+\t}\n     }\n   else if (TREE_CODE (DECL_SIZE (decl)) == INTEGER_CST)\n     {"}]}