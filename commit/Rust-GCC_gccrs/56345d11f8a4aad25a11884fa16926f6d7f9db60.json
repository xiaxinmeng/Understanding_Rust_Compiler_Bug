{"sha": "56345d11f8a4aad25a11884fa16926f6d7f9db60", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTYzNDVkMTFmOGE0YWFkMjVhMTE4ODRmYTE2OTI2ZjZkN2Y5ZGI2MA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2010-08-04T06:49:08Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-08-04T06:49:08Z"}, "message": "decl.c: Do not undefine IN_GCC_FRONTEND and do not include expr.h.\n\n\t* gcc-interface/decl.c: Do not undefine IN_GCC_FRONTEND and do not\n\tinclude expr.h.\n\t(gnat_to_gnu_entity) <object>: Force address of -1 at the tree level\n\tfor the debug-only entity.\n\t* gcc-interface/Make-lang.in (ada/decl.o): Adjust dependencies.\n\nFrom-SVN: r162854", "tree": {"sha": "e59946fde6ba05da0685408aea327ccd16110b78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e59946fde6ba05da0685408aea327ccd16110b78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56345d11f8a4aad25a11884fa16926f6d7f9db60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56345d11f8a4aad25a11884fa16926f6d7f9db60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56345d11f8a4aad25a11884fa16926f6d7f9db60", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56345d11f8a4aad25a11884fa16926f6d7f9db60/comments", "author": null, "committer": null, "parents": [{"sha": "59c724ac203d3be71612dbe499d124ebce721f23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59c724ac203d3be71612dbe499d124ebce721f23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59c724ac203d3be71612dbe499d124ebce721f23"}], "stats": {"total": 33, "additions": 18, "deletions": 15}, "files": [{"sha": "7e7dd1e6a25564813b41dba1041073b53b68f061", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56345d11f8a4aad25a11884fa16926f6d7f9db60/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56345d11f8a4aad25a11884fa16926f6d7f9db60/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=56345d11f8a4aad25a11884fa16926f6d7f9db60", "patch": "@@ -1,3 +1,11 @@\n+2010-08-04  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c: Do not undefine IN_GCC_FRONTEND and do not\n+\tinclude expr.h.\n+\t(gnat_to_gnu_entity) <object>: Force address of -1 at the tree level\n+\tfor the debug-only entity.\n+\t* gcc-interface/Make-lang.in (ada/decl.o): Adjust dependencies.\n+\n 2010-08-03  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc-interface/lang-specs.h: Don't pass -a options."}, {"sha": "a8ce09fc51c8c8f0e9bdde21bd79fb80a3bfb48b", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56345d11f8a4aad25a11884fa16926f6d7f9db60/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56345d11f8a4aad25a11884fa16926f6d7f9db60/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=56345d11f8a4aad25a11884fa16926f6d7f9db60", "patch": "@@ -1235,8 +1235,8 @@ ada/cuintp.o : ada/gcc-interface/cuintp.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) -I.. $(ALL_CPPFLAGS) $< -o $@\n \n ada/decl.o : ada/gcc-interface/decl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(TREE_H) $(FLAGS_H) toplev.h $(TARGET_H) $(EXPR_H) \\\n-   $(TREE_INLINE_H) ada/gcc-interface/ada.h ada/types.h ada/atree.h \\\n+   $(TM_H) $(TREE_H) $(FLAGS_H) toplev.h $(TARGET_H) $(TREE_INLINE_H) \\\n+   ada/gcc-interface/ada.h ada/types.h ada/atree.h \\\n    ada/elists.h ada/namet.h ada/nlists.h ada/repinfo.h ada/snames.h \\\n    ada/stringt.h ada/uintp.h ada/fe.h ada/sinfo.h ada/einfo.h $(ADA_TREE_H) \\\n    ada/gcc-interface/gigi.h gt-ada-decl.h"}, {"sha": "13a31536e575b3ecaa375e53b7b3c1f3cb5efef7", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56345d11f8a4aad25a11884fa16926f6d7f9db60/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56345d11f8a4aad25a11884fa16926f6d7f9db60/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=56345d11f8a4aad25a11884fa16926f6d7f9db60", "patch": "@@ -23,10 +23,6 @@\n  *                                                                          *\n  ****************************************************************************/\n \n-/* FIXME: Still need to include rtl.h here (via expr.h) because this file\n-   actually generates RTL (search for gen_rtx_* in gnat_to_gnu_entity).  */\n-#undef IN_GCC_FRONTEND\n-\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n@@ -36,7 +32,6 @@\n #include \"toplev.h\"\n #include \"ggc.h\"\n #include \"target.h\"\n-#include \"expr.h\"\n #include \"tree-inline.h\"\n \n #include \"ada.h\"\n@@ -600,18 +595,18 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t    && DECL_NAME (TYPE_NAME (gnu_type)) == exception_data_name_id)\n \t  gnu_type = except_type_node;\n \n-\t/* For a debug renaming declaration, build a pure debug entity.  */\n+\t/* For a debug renaming declaration, build a debug-only entity.  */\n \tif (Present (Debug_Renaming_Link (gnat_entity)))\n \t  {\n-\t    rtx addr;\n+\t    /* Force a non-null value to make sure the symbol is retained.  */\n+\t    tree value = build1 (INDIRECT_REF, gnu_type,\n+\t\t\t\t build1 (NOP_EXPR,\n+\t\t\t\t\t build_pointer_type (gnu_type),\n+\t\t\t\t\t integer_minus_one_node));\n \t    gnu_decl = build_decl (input_location,\n \t\t\t\t   VAR_DECL, gnu_entity_name, gnu_type);\n-\t    /* The (MEM (CONST (0))) pattern is prescribed by STABS.  */\n-\t    if (global_bindings_p ())\n-\t      addr = gen_rtx_CONST (VOIDmode, const0_rtx);\n-\t    else\n-\t      addr = stack_pointer_rtx;\n-\t    SET_DECL_RTL (gnu_decl, gen_rtx_MEM (Pmode, addr));\n+\t    SET_DECL_VALUE_EXPR (gnu_decl, value);\n+\t    DECL_HAS_VALUE_EXPR_P (gnu_decl) = 1;\n \t    gnat_pushdecl (gnu_decl, gnat_entity);\n \t    break;\n \t  }"}]}