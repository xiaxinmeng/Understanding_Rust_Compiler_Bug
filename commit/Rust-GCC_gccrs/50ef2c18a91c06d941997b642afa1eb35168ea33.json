{"sha": "50ef2c18a91c06d941997b642afa1eb35168ea33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTBlZjJjMThhOTFjMDZkOTQxOTk3YjY0MmFmYTFlYjM1MTY4ZWEzMw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2007-01-11T03:24:33Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2007-01-11T03:24:33Z"}, "message": "re PR c++/28999 (ICE on invalid use of typename)\n\n\tPR c++/28999\n\t* decl.c (make_typename_type): If the qualified name is not a\n\ttype, issue an error.\n\t* parser.c (cp_parser_elaborated_type_specifier): Fix comment\n\tformatting.\n\nFrom-SVN: r120663", "tree": {"sha": "fe8b2af8964b498a3cfd237e8fc13295dd11510a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe8b2af8964b498a3cfd237e8fc13295dd11510a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50ef2c18a91c06d941997b642afa1eb35168ea33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50ef2c18a91c06d941997b642afa1eb35168ea33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50ef2c18a91c06d941997b642afa1eb35168ea33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50ef2c18a91c06d941997b642afa1eb35168ea33/comments", "author": null, "committer": null, "parents": [{"sha": "ca15e36529c220d2293207797c6e20e5e88beb14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca15e36529c220d2293207797c6e20e5e88beb14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca15e36529c220d2293207797c6e20e5e88beb14"}], "stats": {"total": 35, "additions": 33, "deletions": 2}, "files": [{"sha": "74af04ca5c5828dab5147cf9800d7f50ad29ed9d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50ef2c18a91c06d941997b642afa1eb35168ea33/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50ef2c18a91c06d941997b642afa1eb35168ea33/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=50ef2c18a91c06d941997b642afa1eb35168ea33", "patch": "@@ -1,3 +1,11 @@\n+2007-01-10  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/28999\n+\t* decl.c (make_typename_type): If the qualified name is not a\n+\ttype, issue an error.\n+\t* parser.c (cp_parser_elaborated_type_specifier): Fix comment\n+\tformatting.\n+\n 2007-01-08  Geoffrey Keating  <geoffk@apple.com>\n \n \t* rtti.c: Include target.h."}, {"sha": "a100c9dc9ce3a6eb12fbe4e739ea744a46c67490", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50ef2c18a91c06d941997b642afa1eb35168ea33/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50ef2c18a91c06d941997b642afa1eb35168ea33/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=50ef2c18a91c06d941997b642afa1eb35168ea33", "patch": "@@ -2820,6 +2820,11 @@ make_typename_type (tree context, tree name, enum tag_types tag_type,\n       name = TREE_OPERAND (name, 0);\n       if (TREE_CODE (name) == TEMPLATE_DECL)\n \tname = TREE_OPERAND (fullname, 0) = DECL_NAME (name);\n+      else if (TREE_CODE (name) == OVERLOAD)\n+\t{\n+\t  error (\"%qD is not a type\", name);\n+\t  return error_mark_node;\n+\t}\n     }\n   if (TREE_CODE (name) == TEMPLATE_DECL)\n     {"}, {"sha": "8183913f47c3ff86b17058ccd526ac44a432c7f1", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50ef2c18a91c06d941997b642afa1eb35168ea33/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50ef2c18a91c06d941997b642afa1eb35168ea33/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=50ef2c18a91c06d941997b642afa1eb35168ea33", "patch": "@@ -6093,6 +6093,7 @@ cp_parser_constant_expression (cp_parser* parser,\n   parser->integral_constant_expression_p = true;\n   parser->allow_non_integral_constant_expression_p = allow_non_constant_p;\n   parser->non_integral_constant_expression_p = false;\n+  integral_constant_expr_p = true;\n   /* Although the grammar says \"conditional-expression\", we parse an\n      \"assignment-expression\", which also permits \"throw-expression\"\n      and the use of assignment operators.  In the case that\n@@ -6104,6 +6105,7 @@ cp_parser_constant_expression (cp_parser* parser,\n      constant.  */\n   expression = cp_parser_assignment_expression (parser, /*cast_p=*/false);\n   /* Restore the old settings.  */\n+  integral_constant_expr_p = false;\n   parser->integral_constant_expression_p\n     = saved_integral_constant_expression_p;\n   parser->allow_non_integral_constant_expression_p\n@@ -10311,8 +10313,8 @@ cp_parser_elaborated_type_specifier (cp_parser* parser,\n \t\t\t\t\t /*check_dependency_p=*/true,\n \t\t\t\t\t /*type_p=*/true,\n \t\t\t\t\t is_declaration);\n-  /* For everything but enumeration types, consider a template-id.  */\n-  /* For an enumeration type, consider only a plain identifier.  */\n+  /* For everything but enumeration types, consider a template-id.\n+     For an enumeration type, consider only a plain identifier.  */\n   if (tag_type != enum_type)\n     {\n       bool template_p = false;"}, {"sha": "9f52d1015e216273f5b5ca3c0ca33f21288a7960", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50ef2c18a91c06d941997b642afa1eb35168ea33/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50ef2c18a91c06d941997b642afa1eb35168ea33/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=50ef2c18a91c06d941997b642afa1eb35168ea33", "patch": "@@ -1,3 +1,8 @@\n+2007-01-10  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/28999\n+\t* g++.dg/template/typename11.C: New test.\n+\n 2007-01-10  Robert Kennedy <jimbob@google.com>\n \n \t* gcc.dg/fold-compare-2.c: New test case for fold_comparison."}, {"sha": "fb776105f436977add362f6ea0fa782bae5eb7fa", "filename": "gcc/testsuite/g++.dg/template/typename11.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50ef2c18a91c06d941997b642afa1eb35168ea33/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftypename11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50ef2c18a91c06d941997b642afa1eb35168ea33/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftypename11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftypename11.C?ref=50ef2c18a91c06d941997b642afa1eb35168ea33", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/28999\n+\n+namespace N\n+{\n+  template<int> void foo();\n+}\n+\n+template<int> struct A\n+{\n+  friend void typename N::foo<0>(); // { dg-error \"type|expected\" }\n+};"}]}