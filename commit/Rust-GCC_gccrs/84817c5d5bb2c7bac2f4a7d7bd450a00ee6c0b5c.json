{"sha": "84817c5d5bb2c7bac2f4a7d7bd450a00ee6c0b5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ4MTdjNWQ1YmIyYzdiYWMyZjRhN2Q3YmQ0NTBhMDBlZTZjMGI1Yw==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2002-10-24T20:19:10Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2002-10-24T20:19:10Z"}, "message": "s390.md (movdi, [...]): Add peepholes2 to pull operands out of the literal pool where possible.\n\n\t* config/s390/s390.md (movdi, movsi, movhi, movqi): Add peepholes2\n\tto pull operands out of the literal pool where possible.\n\nFrom-SVN: r58504", "tree": {"sha": "120bb2a682f82cbea83e4be554608580cdb5eb8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/120bb2a682f82cbea83e4be554608580cdb5eb8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84817c5d5bb2c7bac2f4a7d7bd450a00ee6c0b5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84817c5d5bb2c7bac2f4a7d7bd450a00ee6c0b5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84817c5d5bb2c7bac2f4a7d7bd450a00ee6c0b5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84817c5d5bb2c7bac2f4a7d7bd450a00ee6c0b5c/comments", "author": null, "committer": null, "parents": [{"sha": "d074905352cfd576f42fbc184d3474a2df80354d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d074905352cfd576f42fbc184d3474a2df80354d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d074905352cfd576f42fbc184d3474a2df80354d"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "6eccff2e7c70aba174afe55c16e7eaadefd5f1a2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84817c5d5bb2c7bac2f4a7d7bd450a00ee6c0b5c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84817c5d5bb2c7bac2f4a7d7bd450a00ee6c0b5c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=84817c5d5bb2c7bac2f4a7d7bd450a00ee6c0b5c", "patch": "@@ -1,3 +1,8 @@\n+2002-10-24  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* config/s390/s390.md (movdi, movsi, movhi, movqi): Add peepholes2\n+\tto pull operands out of the literal pool where possible.\n+\n 2002-10-24  Denis Chertykov  <denisc@overta.ru>\n \n \t* config/avr/avr.c (init_cumulative_args): Test fntype for zero."}, {"sha": "a14555d0bf06c0c67cb7a9e312fa1da9d1510aae", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84817c5d5bb2c7bac2f4a7d7bd450a00ee6c0b5c/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84817c5d5bb2c7bac2f4a7d7bd450a00ee6c0b5c/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=84817c5d5bb2c7bac2f4a7d7bd450a00ee6c0b5c", "patch": "@@ -992,6 +992,18 @@\n   operands[1] = replace_equiv_address (operands[1], addr);\n }\")\n \n+(define_peephole2\n+  [(set (match_operand:DI 0 \"register_operand\" \"\")\n+        (mem:DI (match_operand 1 \"address_operand\" \"\")))]\n+  \"TARGET_64BIT\n+   && !FP_REG_P (operands[0])\n+   && GET_CODE (operands[1]) == SYMBOL_REF\n+   && CONSTANT_POOL_ADDRESS_P (operands[1])\n+   && get_pool_mode (operands[1]) == DImode\n+   && legitimate_reload_constant_p (get_pool_constant (operands[1]))\"\n+  [(set (match_dup 0) (match_dup 2))]\n+  \"operands[2] = get_pool_constant (operands[1]);\")\n+\n ;\n ; movsi instruction pattern(s).\n ;\n@@ -1074,6 +1086,16 @@\n   [(set_attr \"op_type\" \"RR,RX,RX,RR,RX,RX,SS\")\n    (set_attr \"atype\"   \"reg,mem,mem,reg,mem,mem,mem\")])\n \n+(define_peephole2\n+  [(set (match_operand:SI 0 \"register_operand\" \"\")\n+        (mem:SI (match_operand 1 \"address_operand\" \"\")))]\n+  \"!FP_REG_P (operands[0])\n+   && GET_CODE (operands[1]) == SYMBOL_REF\n+   && CONSTANT_POOL_ADDRESS_P (operands[1])\n+   && get_pool_mode (operands[1]) == SImode\n+   && legitimate_reload_constant_p (get_pool_constant (operands[1]))\"\n+  [(set (match_dup 0) (match_dup 2))]\n+  \"operands[2] = get_pool_constant (operands[1]);\")\n \n ;\n ; movhi instruction pattern(s).\n@@ -1092,6 +1114,15 @@\n   [(set_attr \"op_type\" \"RR,RI,RX,RX,SS\")\n    (set_attr \"atype\"   \"reg,reg,mem,mem,mem\")])\n \n+(define_peephole2\n+  [(set (match_operand:HI 0 \"register_operand\" \"\")\n+        (mem:HI (match_operand 1 \"address_operand\" \"\")))]\n+  \"GET_CODE (operands[1]) == SYMBOL_REF\n+   && CONSTANT_POOL_ADDRESS_P (operands[1])\n+   && get_pool_mode (operands[1]) == HImode\n+   && GET_CODE (get_pool_constant (operands[1])) == CONST_INT\"\n+  [(set (match_dup 0) (match_dup 2))]\n+  \"operands[2] = get_pool_constant (operands[1]);\")\n \n ;\n ; movqi instruction pattern(s).\n@@ -1126,6 +1157,15 @@\n   [(set_attr \"op_type\" \"RR,RI,RX,RX,SI,SS\")\n    (set_attr \"atype\"   \"reg,reg,mem,mem,mem,mem\")])\n \n+(define_peephole2\n+  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"\")\n+        (mem:QI (match_operand 1 \"address_operand\" \"\")))]\n+  \"GET_CODE (operands[1]) == SYMBOL_REF\n+   && CONSTANT_POOL_ADDRESS_P (operands[1])\n+   && get_pool_mode (operands[1]) == QImode\n+   && GET_CODE (get_pool_constant (operands[1])) == CONST_INT\"\n+  [(set (match_dup 0) (match_dup 2))]\n+  \"operands[2] = get_pool_constant (operands[1]);\")\n \n ;\n ; movstrictqi instruction pattern(s)."}]}