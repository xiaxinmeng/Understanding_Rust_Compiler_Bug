{"sha": "71ade764add5ced9179fa9f7af69448185fddc9c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzFhZGU3NjRhZGQ1Y2VkOTE3OWZhOWY3YWY2OTQ0ODE4NWZkZGM5Yw==", "commit": {"author": {"name": "Ville Voutilainen", "email": "ville.voutilainen@gmail.com", "date": "2016-09-26T20:51:42Z"}, "committer": {"name": "Ville Voutilainen", "email": "ville@gcc.gnu.org", "date": "2016-09-26T20:51:42Z"}, "message": "re PR libstdc++/77727 (Unwrapping std::optional constructor is not working for non-transferable object)\n\n    PR libstdc++/77727\n    * include/std/optional (optional(const optional<_Up>&)):\n    Default-initialize the base and use emplace.\n    (optional(optional<_Up>&&)): Likewise.\n    * testsuite/20_util/optional/cons/77727.cc: New.\n\nFrom-SVN: r240511", "tree": {"sha": "6fdb0f9f94a4bea3194bd0516e3d7861952699f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6fdb0f9f94a4bea3194bd0516e3d7861952699f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71ade764add5ced9179fa9f7af69448185fddc9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71ade764add5ced9179fa9f7af69448185fddc9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71ade764add5ced9179fa9f7af69448185fddc9c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71ade764add5ced9179fa9f7af69448185fddc9c/comments", "author": {"login": "villevoutilainen", "id": 963599, "node_id": "MDQ6VXNlcjk2MzU5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/963599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villevoutilainen", "html_url": "https://github.com/villevoutilainen", "followers_url": "https://api.github.com/users/villevoutilainen/followers", "following_url": "https://api.github.com/users/villevoutilainen/following{/other_user}", "gists_url": "https://api.github.com/users/villevoutilainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/villevoutilainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villevoutilainen/subscriptions", "organizations_url": "https://api.github.com/users/villevoutilainen/orgs", "repos_url": "https://api.github.com/users/villevoutilainen/repos", "events_url": "https://api.github.com/users/villevoutilainen/events{/privacy}", "received_events_url": "https://api.github.com/users/villevoutilainen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "villevoutilainen", "id": 963599, "node_id": "MDQ6VXNlcjk2MzU5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/963599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villevoutilainen", "html_url": "https://github.com/villevoutilainen", "followers_url": "https://api.github.com/users/villevoutilainen/followers", "following_url": "https://api.github.com/users/villevoutilainen/following{/other_user}", "gists_url": "https://api.github.com/users/villevoutilainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/villevoutilainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villevoutilainen/subscriptions", "organizations_url": "https://api.github.com/users/villevoutilainen/orgs", "repos_url": "https://api.github.com/users/villevoutilainen/repos", "events_url": "https://api.github.com/users/villevoutilainen/events{/privacy}", "received_events_url": "https://api.github.com/users/villevoutilainen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2fe9e0a693192aa5a131bc8704dc11353f613de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2fe9e0a693192aa5a131bc8704dc11353f613de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2fe9e0a693192aa5a131bc8704dc11353f613de"}], "stats": {"total": 79, "additions": 75, "deletions": 4}, "files": [{"sha": "63d83530607c89adc7f820d57dddd44e02cb5c3c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71ade764add5ced9179fa9f7af69448185fddc9c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71ade764add5ced9179fa9f7af69448185fddc9c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=71ade764add5ced9179fa9f7af69448185fddc9c", "patch": "@@ -1,3 +1,11 @@\n+2016-09-26  Ville Voutilainen  <ville.voutilainen@gmail.com>\n+\n+\tPR libstdc++/77727\n+\t* include/std/optional (optional(const optional<_Up>&)):\n+\tDefault-initialize the base and use emplace.\n+\t(optional(optional<_Up>&&)): Likewise.\n+\t* testsuite/20_util/optional/cons/77727.cc: New.\n+\n 2016-09-26  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n \t* include/debug/safe_base.h"}, {"sha": "b14faf1ca3146835dbfd8624ce4215547ae370ae", "filename": "libstdc++-v3/include/std/optional", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71ade764add5ced9179fa9f7af69448185fddc9c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Foptional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71ade764add5ced9179fa9f7af69448185fddc9c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Foptional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Foptional?ref=71ade764add5ced9179fa9f7af69448185fddc9c", "patch": "@@ -502,7 +502,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t\t    __not_<__converts_from_optional<_Tp, _Up>>\n \t\t\t    >::value, bool> = true>\n       constexpr optional(const optional<_Up>& __t)\n-        : _Base(__t ? _Base(std::in_place, *__t) : _Base()) { }\n+      {\n+\tif (__t)\n+\t  emplace(*__t);\n+      }\n \n       template <typename _Up,\n                  enable_if_t<__and_<\n@@ -512,7 +515,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t\t       __not_<__converts_from_optional<_Tp, _Up>>\n \t\t\t       >::value, bool> = false>\n       explicit constexpr optional(const optional<_Up>& __t)\n-        : _Base(__t ? _Base(std::in_place, *__t) : _Base()) { }\n+      {\n+\tif (__t)\n+\t  emplace(*__t);\n+      }\n \n       template <typename _Up,\n                 enable_if_t<__and_<\n@@ -522,7 +528,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t\t      __not_<__converts_from_optional<_Tp, _Up>>\n \t\t\t      >::value, bool> = true>\n       constexpr optional(optional<_Up>&& __t)\n-        : _Base(__t ? _Base(std::in_place, std::move(*__t)) : _Base()) { }\n+      {\n+\tif (__t)\n+\t  emplace(std::move(*__t));\n+      }\n \n       template <typename _Up,\n                 enable_if_t<__and_<\n@@ -532,7 +541,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t\t    __not_<__converts_from_optional<_Tp, _Up>>\n \t\t\t    >::value, bool> = false>\n       explicit constexpr optional(optional<_Up>&& __t)\n-        : _Base(__t ? _Base(std::in_place, std::move(*__t)) : _Base()) { }\n+      {\n+\tif (__t)\n+\t  emplace(std::move(*__t));\n+      }\n \n       template<typename... _Args>\n       explicit constexpr optional(in_place_t, _Args&&... __args)"}, {"sha": "7a3b101beca9caf38d19bd6ca321f646faaac9af", "filename": "libstdc++-v3/testsuite/20_util/optional/cons/77727.cc", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71ade764add5ced9179fa9f7af69448185fddc9c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Foptional%2Fcons%2F77727.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71ade764add5ced9179fa9f7af69448185fddc9c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Foptional%2Fcons%2F77727.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Foptional%2Fcons%2F77727.cc?ref=71ade764add5ced9179fa9f7af69448185fddc9c", "patch": "@@ -0,0 +1,51 @@\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do run }\n+\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a moved_to of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <optional>\n+#include <testsuite_hooks.h>\n+\n+\n+struct NonTransferable\n+{\n+  int x;\n+  NonTransferable(int x) : x(x) {}\n+  NonTransferable(NonTransferable&&) = delete;\n+  NonTransferable& operator=(NonTransferable&&) = delete;\n+  operator int() {return x;}\n+};\n+\n+int main()\n+{\n+  std::optional<int> oi;\n+  std::optional<NonTransferable> ot(std::move(oi));\n+  VERIFY(!ot);\n+\n+  std::optional<int> oi2;\n+  std::optional<NonTransferable> ot2(oi2);\n+  VERIFY(!ot);\n+\n+  std::optional<int> oi3{42};\n+  std::optional<NonTransferable> ot3(std::move(oi3));\n+  VERIFY(ot3 && *ot3 == 42);\n+\n+  std::optional<int> oi4{666};\n+  std::optional<NonTransferable> ot4(oi4);\n+  VERIFY(ot4 && *ot4 == 666);\n+}"}]}