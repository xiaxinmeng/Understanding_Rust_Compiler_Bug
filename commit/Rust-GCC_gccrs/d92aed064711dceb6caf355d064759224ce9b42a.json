{"sha": "d92aed064711dceb6caf355d064759224ce9b42a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDkyYWVkMDY0NzExZGNlYjZjYWYzNTVkMDY0NzU5MjI0Y2U5YjQyYQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2011-09-28T15:00:10Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2011-09-28T15:00:10Z"}, "message": "neon.md (neon_move_lo_quad_<mode>): Delete.\n\ngcc/\n\t* config/arm/neon.md (neon_move_lo_quad_<mode>): Delete.\n\t(neon_move_hi_quad_<mode>): Likewise.\n\t(move_hi_quad_<mode>, move_lo_quad_<mode>): Use subreg moves.\n\nFrom-SVN: r179316", "tree": {"sha": "34a5de335986c583663858a18d6751ce9b02842a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34a5de335986c583663858a18d6751ce9b02842a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d92aed064711dceb6caf355d064759224ce9b42a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d92aed064711dceb6caf355d064759224ce9b42a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d92aed064711dceb6caf355d064759224ce9b42a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d92aed064711dceb6caf355d064759224ce9b42a/comments", "author": null, "committer": null, "parents": [{"sha": "783465f8e32d04d92b802bb902f9e65cabeddaa6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/783465f8e32d04d92b802bb902f9e65cabeddaa6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/783465f8e32d04d92b802bb902f9e65cabeddaa6"}], "stats": {"total": 77, "additions": 12, "deletions": 65}, "files": [{"sha": "98d926a89ccac061dcfb7363e70bf72da274e836", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d92aed064711dceb6caf355d064759224ce9b42a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d92aed064711dceb6caf355d064759224ce9b42a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d92aed064711dceb6caf355d064759224ce9b42a", "patch": "@@ -1,3 +1,9 @@\n+2011-09-28  Richard Sandiford  <richard.sandiford@linaro.org>\n+\n+\t* config/arm/neon.md (neon_move_lo_quad_<mode>): Delete.\n+\t(neon_move_hi_quad_<mode>): Likewise.\n+\t(move_hi_quad_<mode>, move_lo_quad_<mode>): Use subreg moves.\n+\n 2011-09-28  Nick Clifton  <nickc@redhat.com>\n \n \t* config/rx/predicates.md (rx_minmax_operand): New predicate."}, {"sha": "ea09da246ff6c00ed3790fb7917883986d46a08e", "filename": "gcc/config/arm/neon.md", "status": "modified", "additions": 6, "deletions": 65, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d92aed064711dceb6caf355d064759224ce9b42a/gcc%2Fconfig%2Farm%2Fneon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d92aed064711dceb6caf355d064759224ce9b42a/gcc%2Fconfig%2Farm%2Fneon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fneon.md?ref=d92aed064711dceb6caf355d064759224ce9b42a", "patch": "@@ -1251,66 +1251,14 @@\n                     (const_string \"neon_int_1\") (const_string \"neon_int_5\")))]\n )\n \n-; FIXME: We wouldn't need the following insns if we could write subregs of\n-; vector registers. Make an attempt at removing unnecessary moves, though\n-; we're really at the mercy of the register allocator.\n-\n-(define_insn \"neon_move_lo_quad_<mode>\"\n-  [(set (match_operand:ANY128 0 \"s_register_operand\" \"+w\")\n-        (vec_concat:ANY128\n-          (match_operand:<V_HALF> 1 \"s_register_operand\" \"w\")\n-          (vec_select:<V_HALF> \n-\t\t(match_dup 0)\n-\t        (match_operand:ANY128 2 \"vect_par_constant_high\" \"\"))))]\n-  \"TARGET_NEON\"\n-{\n-  int dest = REGNO (operands[0]);\n-  int src = REGNO (operands[1]);\n-\n-  if (dest != src)\n-    return \"vmov\\t%e0, %P1\";\n-  else\n-    return \"\";\n-}\n-  [(set_attr \"neon_type\" \"neon_bp_simple\")]\n-)\n-\n-(define_insn \"neon_move_hi_quad_<mode>\"\n-  [(set (match_operand:ANY128 0 \"s_register_operand\" \"+w\")\n-        (vec_concat:ANY128\n-          (vec_select:<V_HALF>\n-\t\t(match_dup 0)\n-\t        (match_operand:ANY128 2 \"vect_par_constant_low\" \"\"))\n-          (match_operand:<V_HALF> 1 \"s_register_operand\" \"w\")))]\n-\t   \n-  \"TARGET_NEON\"\n-{\n-  int dest = REGNO (operands[0]);\n-  int src = REGNO (operands[1]);\n-\n-  if (dest != src)\n-    return \"vmov\\t%f0, %P1\";\n-  else\n-    return \"\";\n-}\n-  [(set_attr \"neon_type\" \"neon_bp_simple\")]\n-)\n-\n (define_expand \"move_hi_quad_<mode>\"\n  [(match_operand:ANY128 0 \"s_register_operand\" \"\")\n   (match_operand:<V_HALF> 1 \"s_register_operand\" \"\")]\n  \"TARGET_NEON\"\n {\n-  rtvec v = rtvec_alloc (<V_mode_nunits>/2);\n-  rtx t1;\n-  int i;\n-\n-  for (i=0; i < (<V_mode_nunits>/2); i++)\n-     RTVEC_ELT (v, i) = GEN_INT (i);\n-\n-  t1 = gen_rtx_PARALLEL (<MODE>mode, v);\n-  emit_insn (gen_neon_move_hi_quad_<mode> (operands[0], operands[1], t1));\n-\n+  emit_move_insn (simplify_gen_subreg (<V_HALF>mode, operands[0], <MODE>mode,\n+\t\t\t\t       GET_MODE_SIZE (<V_HALF>mode)),\n+\t\t  operands[1]);\n   DONE;\n })\n \n@@ -1319,16 +1267,9 @@\n   (match_operand:<V_HALF> 1 \"s_register_operand\" \"\")]\n  \"TARGET_NEON\"\n {\n-  rtvec v = rtvec_alloc (<V_mode_nunits>/2);\n-  rtx t1;\n-  int i;\n-\n-  for (i=0; i < (<V_mode_nunits>/2); i++)\n-     RTVEC_ELT (v, i) = GEN_INT ((<V_mode_nunits>/2) + i);\n-\n-  t1 = gen_rtx_PARALLEL (<MODE>mode, v);\n-  emit_insn (gen_neon_move_lo_quad_<mode> (operands[0], operands[1], t1));\n-\n+  emit_move_insn (simplify_gen_subreg (<V_HALF>mode, operands[0],\n+\t\t\t\t       <MODE>mode, 0),\n+\t\t  operands[1]);\n   DONE;\n })\n "}]}