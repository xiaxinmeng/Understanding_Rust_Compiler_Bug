{"sha": "4f21aedbf4c7661626f49e7ca74ecc2a80892262", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGYyMWFlZGJmNGM3NjYxNjI2ZjQ5ZTdjYTc0ZWNjMmE4MDg5MjI2Mg==", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@klomp.org", "date": "2000-11-17T21:42:28Z"}, "committer": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2000-11-17T21:42:28Z"}, "message": "* java/util/zip/*.java: Javadoc and copyright updates.\n\nFrom-SVN: r37526", "tree": {"sha": "b533432fc49fcee89b14b2d5328eddb19a23d95a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b533432fc49fcee89b14b2d5328eddb19a23d95a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f21aedbf4c7661626f49e7ca74ecc2a80892262", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f21aedbf4c7661626f49e7ca74ecc2a80892262", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f21aedbf4c7661626f49e7ca74ecc2a80892262", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f21aedbf4c7661626f49e7ca74ecc2a80892262/comments", "author": null, "committer": null, "parents": [{"sha": "4cdfd292e374089da707399dd3a06ae18f19a094", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cdfd292e374089da707399dd3a06ae18f19a094", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cdfd292e374089da707399dd3a06ae18f19a094"}], "stats": {"total": 865, "additions": 670, "deletions": 195}, "files": [{"sha": "2b604bd7963d13c66ab8ff094969f68375bac0bb", "filename": "libjava/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=4f21aedbf4c7661626f49e7ca74ecc2a80892262", "patch": "@@ -1,3 +1,7 @@\n+2000-11-17  Mark Wielaard  <mark@klomp.org>\n+\n+\t* java/util/zip/*.java: Javadoc updates.\n+\n 2000-11-17  Tom Tromey  <tromey@cygnus.com>\n \n \t* java/text/CollationKey.java: Implement Comparable."}, {"sha": "989a2049283db0ab337bdf833cefe1b160db1e89", "filename": "libjava/java/util/zip/Adler32.java", "status": "modified", "additions": 65, "deletions": 39, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2Fjava%2Futil%2Fzip%2FAdler32.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2Fjava%2Futil%2Fzip%2FAdler32.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fzip%2FAdler32.java?ref=4f21aedbf4c7661626f49e7ca74ecc2a80892262", "patch": "@@ -1,50 +1,99 @@\n-/* Copyright (C) 1999  Free Software Foundation\n-\n-   This file is part of libgcj.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+/* Adler.java - Computes Adler32 data checksum of a data stream\n+   Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+ \n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.util.zip;\n \n-/**\n- * @author Per Bothner\n- * @date April 6, 1999.\n- */\n-\n /*\n  * Written using on-line Java Platform 1.2 API Specification, as well\n  * as \"The Java Class Libraries\", 2nd edition (Addison-Wesley, 1998).\n  * The actual Adler32 algorithm is taken from RFC 1950.\n  * Status:  Believed complete and correct.\n  */\n \n+/**\n+ * Computes Adler32 data checksum of a data stream.\n+ * The actual Adler32 algorithm is described in RFC 1950\n+ * (ZLIB Compressed Data Format Specification version 3.3).\n+ * Can be used to get the CRC32 over a stream if used with checked input/output\n+ * streams.\n+ *\n+ * @see InflaterInputStream\n+ * @see InflaterOutputStream\n+ *\n+ * @author Per Bothner\n+ * @date April 6, 1999.\n+ */\n public class Adler32 implements Checksum\n {\n-  private static int BASE = 65521; /* largest prime smaller than 65536 */\n \n+  /** largest prime smaller than 65536 */\n+  private static int BASE = 65521;\n+ \n   private int s1;\n   private int s2;\n \n+  /**\n+   * Creates an Adler32 data checksum.\n+   */\n   public Adler32 ()\n   {\n     reset();\n   }\n \n+  /**\n+   * Resets the Adler32 data checksum as if no update was ever called.\n+   */\n   public void reset () { s1 = 1;  s2 = 0; }\n \n+  /**\n+   * Adds one byte to the data checksum.\n+   *\n+   * @param bval the data value to add. The high byte of the int is ignored.\n+   */\n   public void update (int bval)\n   {\n     s1 = (s1 + (bval & 0xFF)) % BASE;\n     s2 = (s1 + s2) % BASE;\n   }\n \n+  /**\n+   * Adds the complete byte array to the data checksum.\n+   */\n   public void update (byte[] buffer)\n   {\n     update(buffer, 0, buffer.length);\n   }\n \n+  /**\n+   * Adds the byte array to the data checksum.\n+   *\n+   * @param buf the buffer which contains the data\n+   * @param off the offset in the buffer where the data starts\n+   * @param len the length of the data\n+   */\n   public void update (byte[] buf, int off, int len)\n   {\n     int s1 = this.s1;\n@@ -68,34 +117,11 @@ public void update (byte[] buf, int off, int len)\n     this.s2 = s2;\n   }\n \n+  /**\n+   * Returns the Adler32 data checksum computed so far.\n+   */\n   public long getValue()\n   {\n     return ((long) s2 << 16) + s1;\n   }\n }\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-"}, {"sha": "c6d9ed4ede2819deeb7c434529fd5e35506a0303", "filename": "libjava/java/util/zip/CRC32.java", "status": "modified", "additions": 57, "deletions": 12, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2Fjava%2Futil%2Fzip%2FCRC32.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2Fjava%2Futil%2Fzip%2FCRC32.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fzip%2FCRC32.java?ref=4f21aedbf4c7661626f49e7ca74ecc2a80892262", "patch": "@@ -1,17 +1,30 @@\n-/* Copyright (C) 1999  Free Software Foundation\n+/* CRC32.java - Computes CRC32 data checksum of a data stream\n+   Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n \n-   This file is part of libgcj.\n+This file is part of GNU Classpath.\n \n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+ \n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n \n-package java.util.zip;\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n \n-/**\n- * @author Per Bothner\n- * @date April 1, 1999.\n- */\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n+\n+package java.util.zip;\n \n /*\n  * Written using on-line Java Platform 1.2 API Specification, as well\n@@ -20,14 +33,29 @@\n  * Status:  Believed complete and correct.\n  */\n \n+/**\n+ * Computes CRC32 data checksum of a data stream.\n+ * The actual CRC32 algorithm is described in RFC 1952\n+ * (GZIP file format specification version 4.3).\n+ * Can be used to get the CRC32 over a stream if used with checked input/output\n+ * streams.\n+ *\n+ * @see InflaterInputStream\n+ * @see InflaterOutputStream\n+ *\n+ * @author Per Bothner\n+ * @date April 1, 1999.\n+ */\n public class CRC32 implements Checksum\n {\n+  /** The crc data checksum so far. */\n   private int crc = 0;\n \n+  /** The fast CRC table. Computed once when the CRC32 class is loaded. */\n   private static int[] crc_table = make_crc_table();\n \n-  /* Make the table for a fast CRC. */\n-  static int[] make_crc_table ()\n+  /** Make the table for a fast CRC. */\n+  private static int[] make_crc_table ()\n   {\n     int[] crc_table = new int[256];\n     for (int n = 0; n < 256; n++)\n@@ -45,11 +73,17 @@ static int[] make_crc_table ()\n     return crc_table;\n   }\n \n+  /**\n+   * Returns the CRC32 data checksum computed so far.\n+   */\n   public long getValue ()\n   {\n     return (long) crc & 0xffffffffL;\n   }\n \n+  /**\n+   * Resets the CRC32 data checksum as if no update was ever called.\n+   */\n   public void reset () { crc = 0; }\n \n   public void update (int bval)\n@@ -59,12 +93,23 @@ public void update (int bval)\n     crc = ~c;\n   }\n \n+  /**\n+   * Adds the byte array to the data checksum.\n+   *\n+   * @param buf the buffer which contains the data\n+   * @param off the offset in the buffer where the data starts\n+   * @param len the length of the data\n+   */\n   public void update (byte[] buf, int off, int len)\n   {\n     int c = ~crc;\n     while (--len >= 0)\n       c = crc_table[(c ^ buf[off++]) & 0xff] ^ (c >>> 8);\n     crc = ~c;\n   }\n+\n+  /**\n+   * Adds the complete byte array to the data checksum.\n+   */\n   public void update (byte[] buf) { update(buf, 0, buf.length); }\n }"}, {"sha": "80a7bb660d000f42933c2919ab3975dc917f96bb", "filename": "libjava/java/util/zip/CheckedInputStream.java", "status": "modified", "additions": 57, "deletions": 15, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2Fjava%2Futil%2Fzip%2FCheckedInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2Fjava%2Futil%2Fzip%2FCheckedInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fzip%2FCheckedInputStream.java?ref=4f21aedbf4c7661626f49e7ca74ecc2a80892262", "patch": "@@ -1,42 +1,74 @@\n-// CheckedInputStream.java - Compute checksum of data being read.\n-\n-/* Copyright (C) 1999  Free Software Foundation\n-\n-   This file is part of libgcj.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+/* CheckedInputStream.java - Compute checksum of data being read\n+   Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+ \n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.util.zip;\n \n import java.io.FilterInputStream;\n import java.io.InputStream;\n import java.io.IOException;\n \n-/**\n- * @author Tom Tromey\n- * @date May 17, 1999\n- */\n-\n /* Written using on-line Java Platform 1.2 API Specification\n  * and JCL book.\n  * Believed complete and correct.\n  */\n \n+/**\n+ * InputStream that computes a checksum of the data being read using a\n+ * supplied Checksum object.\n+ *\n+ * @see Checksum\n+ *\n+ * @author Tom Tromey\n+ * @date May 17, 1999\n+ */\n public class CheckedInputStream extends FilterInputStream\n {\n+  /**\n+   * Creates a new CheckInputStream on top of the supplied OutputStream\n+   * using the supplied Checksum.\n+   */\n   public CheckedInputStream (InputStream in, Checksum sum)\n   {\n     super (in);\n     this.sum = sum;\n   }\n \n+  /**\n+   * Returns the Checksum object used. To get the data checksum computed so\n+   * far call <code>getChecksum.getValue()</code>.\n+   */\n   public Checksum getChecksum ()\n   {\n     return sum;\n   }\n \n+  /**\n+   * Reads one byte, updates the checksum and returns the read byte\n+   * (or -1 when the end of file was reached).\n+   */\n   public int read () throws IOException\n   {\n     int x = in.read();\n@@ -45,6 +77,11 @@ public int read () throws IOException\n     return x;\n   }\n \n+  /**\n+   * Reads at most len bytes in the supplied buffer and updates the checksum\n+   * with it. Returns the number of bytes actually read or -1 when the end\n+   * of file was reached.\n+   */\n   public int read (byte[] buf, int off, int len) throws IOException\n   {\n     int r = in.read(buf, off, len);\n@@ -53,6 +90,11 @@ public int read (byte[] buf, int off, int len) throws IOException\n     return r;\n   }\n \n+  /**\n+   * Skips n bytes by reading them in a temporary buffer and updating the\n+   * the checksum with that buffer. Returns the actual number of bytes skiped\n+   * which can be less then requested when the end of file is reached.\n+   */\n   public long skip (long n) throws IOException\n   {\n     if (n == 0)\n@@ -76,6 +118,6 @@ public long skip (long n) throws IOException\n     return s;\n   }\n \n-  // The checksum object.\n+  /** The checksum object. */\n   private Checksum sum;\n }"}, {"sha": "276f498096293cb2aaf86e416c649c0dbd031dd7", "filename": "libjava/java/util/zip/CheckedOutputStream.java", "status": "modified", "additions": 46, "deletions": 12, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2Fjava%2Futil%2Fzip%2FCheckedOutputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2Fjava%2Futil%2Fzip%2FCheckedOutputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fzip%2FCheckedOutputStream.java?ref=4f21aedbf4c7661626f49e7ca74ecc2a80892262", "patch": "@@ -1,54 +1,88 @@\n-// CheckedOutputStream.java - Compute checksum of data being written.\n+/* CheckedOutputStream.java - Compute checksum of data being written.\n+   Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n \n-/* Copyright (C) 1999  Free Software Foundation\n+This file is part of GNU Classpath.\n \n-   This file is part of libgcj.\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+ \n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n \n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.util.zip;\n \n import java.io.FilterOutputStream;\n import java.io.OutputStream;\n import java.io.IOException;\n \n-/**\n- * @author Tom Tromey\n- * @date May 17, 1999\n- */\n-\n /* Written using on-line Java Platform 1.2 API Specification\n  * and JCL book.\n  * Believed complete and correct.\n  */\n \n+/**\n+ * OutputStream that computes a checksum of data being written using a\n+ * supplied Checksum object.\n+ *\n+ * @see Checksum\n+ *\n+ * @author Tom Tromey\n+ * @date May 17, 1999\n+ */\n public class CheckedOutputStream extends FilterOutputStream\n {\n+  /**\n+   * Creates a new CheckInputStream on top of the supplied OutputStream\n+   * using the supplied Checksum.\n+   */\n   public CheckedOutputStream (OutputStream out, Checksum cksum)\n   {\n     super (out);\n     this.sum = cksum;\n   }\n \n+  /**\n+   * Returns the Checksum object used. To get the data checksum computed so\n+   * far call <code>getChecksum.getValue()</code>.\n+   */\n   public Checksum getChecksum ()\n   {\n     return sum;\n   }\n \n+  /**\n+   * Writes one byte to the OutputStream and updates the Checksum.\n+   */\n   public void write (int bval) throws IOException\n   {\n     out.write(bval);\n     sum.update(bval);\n   }\n \n+  /**\n+   * Writes the byte array to the OutputStream and updates the Checksum.\n+   */\n   public void write (byte[] buf, int off, int len) throws IOException\n   {\n     out.write(buf, off, len);\n     sum.update(buf, off, len);\n   }\n \n-  // The checksum object.\n+  /** The checksum object. */\n   private Checksum sum;\n }"}, {"sha": "f9f214e4f2a6a786127ed687301eaad5949db9f6", "filename": "libjava/java/util/zip/Checksum.java", "status": "modified", "additions": 54, "deletions": 10, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2Fjava%2Futil%2Fzip%2FChecksum.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2Fjava%2Futil%2Fzip%2FChecksum.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fzip%2FChecksum.java?ref=4f21aedbf4c7661626f49e7ca74ecc2a80892262", "patch": "@@ -1,31 +1,75 @@\n-/* Copyright (C) 1999  Free Software Foundation\n+/* Checksum.java - Interface to compute a data checksum\n+   Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n \n-   This file is part of libgcj.\n+This file is part of GNU Classpath.\n \n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+ \n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n \n-package java.util.zip;\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n \n-/**\n- * @author Per Bothner\n- * @date January 9, 1999.\n- */\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n+\n+package java.util.zip;\n \n /*\n  * Written using on-line Java Platform 1.2 API Specification, as well\n  * as \"The Java Class Libraries\", 2nd edition (Addison-Wesley, 1998).\n  * Status:  Believed complete and correct.\n  */\n \n+/**\n+ * Interface to compute a data checksum used by checked input/output streams.\n+ * A data checksum can be updated by one byte or with a byte array. After each\n+ * update the value of the current checksum can be returned by calling\n+ * <code>getValue</code>. The complete checksum object can also be reset\n+ * so it can be used again with new data.\n+ *\n+ * @see CheckedInputStream\n+ * @see CheckedOutputStream\n+ *\n+ * @author Per Bothner\n+ * @date January 9, 1999.\n+ */\n public interface Checksum\n {\n+  /**\n+   * Returns the data checksum computed so far.\n+   */\n   public long getValue ();\n \n+  /**\n+   * Resets the data checksum as if no update was ever called.\n+   */\n   public void reset ();\n \n+  /**\n+   * Adds one byte to the data checksum.\n+   *\n+   * @param bval the data value to add. The high byte of the int is ignored.\n+   */\n   public void update (int bval);\n \n+  /**\n+   * Adds the byte array to the data checksum.\n+   *\n+   * @param buf the buffer which contains the data\n+   * @param off the offset in the buffer where the data starts\n+   * @param len the length of the data\n+   */\n   public void update (byte[] buf, int off, int len);\n }"}, {"sha": "eae4a2a89ed63f03d8949110010deae900fba593", "filename": "libjava/java/util/zip/DataFormatException.java", "status": "modified", "additions": 28, "deletions": 9, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2Fjava%2Futil%2Fzip%2FDataFormatException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2Fjava%2Futil%2Fzip%2FDataFormatException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fzip%2FDataFormatException.java?ref=4f21aedbf4c7661626f49e7ca74ecc2a80892262", "patch": "@@ -1,12 +1,28 @@\n-// DataFormatException.java\n-\n-/* Copyright (C) 1999  Free Software Foundation\n-\n-   This file is part of libjava.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n-details.  */\n+/* DataformatException.java - Exception thrown when compressed data is corrupt\n+   Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+ \n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.util.zip;\n \n@@ -19,6 +35,9 @@\n  * Believed complete and correct.\n  */\n \n+/**\n+ * Exception thrown when compressed data is corrupt.\n+ */\n public class DataFormatException extends Exception\n {\n   public DataFormatException ()"}, {"sha": "63208324a200f7fb694e156bb23e75be62829a77", "filename": "libjava/java/util/zip/Deflater.java", "status": "modified", "additions": 25, "deletions": 9, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2Fjava%2Futil%2Fzip%2FDeflater.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2Fjava%2Futil%2Fzip%2FDeflater.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fzip%2FDeflater.java?ref=4f21aedbf4c7661626f49e7ca74ecc2a80892262", "patch": "@@ -1,12 +1,28 @@\n-// Deflater.java - Compress a data stream.\n-\n-/* Copyright (C) 1999  Free Software Foundation\n-\n-   This file is part of libgcj.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+/* Deflater.java - Compress a data stream\n+   Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+ \n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.util.zip;\n "}, {"sha": "d4218fa5cc5d068381238d644ade6e5d64069dfc", "filename": "libjava/java/util/zip/DeflaterOutputStream.java", "status": "modified", "additions": 25, "deletions": 9, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2Fjava%2Futil%2Fzip%2FDeflaterOutputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2Fjava%2Futil%2Fzip%2FDeflaterOutputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fzip%2FDeflaterOutputStream.java?ref=4f21aedbf4c7661626f49e7ca74ecc2a80892262", "patch": "@@ -1,12 +1,28 @@\n-// DeflaterOutputStream.java - Output filter for compressing.\n-\n-/* Copyright (C) 1999  Free Software Foundation\n-\n-   This file is part of libgcj.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+/* DeflaterOutputStream.java - Output filter for compressing.\n+   Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+ \n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.util.zip;\n "}, {"sha": "4279e90c5b1996342eea7423f09b14a1efdb4fd2", "filename": "libjava/java/util/zip/GZIPInputStream.java", "status": "modified", "additions": 25, "deletions": 9, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2Fjava%2Futil%2Fzip%2FGZIPInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2Fjava%2Futil%2Fzip%2FGZIPInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fzip%2FGZIPInputStream.java?ref=4f21aedbf4c7661626f49e7ca74ecc2a80892262", "patch": "@@ -1,12 +1,28 @@\n-// GZIPInputStream.java - Input tiler for reading gzip file.\n-\n-/* Copyright (C) 1999  Free Software Foundation\n-\n-   This file is part of libgcj.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+/* GZIPInputStream.java - Input filter for reading gzip file\n+   Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+ \n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.util.zip;\n "}, {"sha": "cf62fb7c6bf4135e51b2e36dcc1684129e8e59a8", "filename": "libjava/java/util/zip/GZIPOutputStream.java", "status": "modified", "additions": 25, "deletions": 9, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2Fjava%2Futil%2Fzip%2FGZIPOutputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2Fjava%2Futil%2Fzip%2FGZIPOutputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fzip%2FGZIPOutputStream.java?ref=4f21aedbf4c7661626f49e7ca74ecc2a80892262", "patch": "@@ -1,12 +1,28 @@\n-// GZIPOutputStream.java - Create a file in gzip format.\n-\n-/* Copyright (C) 1999  Free Software Foundation\n-\n-   This file is part of libgcj.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+/* GZIPOutputStream.java - Create a file in gzip format\n+   Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+ \n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.util.zip;\n "}, {"sha": "eb3512ae58346e9e82b4bd05645a2d2ce87e9107", "filename": "libjava/java/util/zip/Inflater.java", "status": "modified", "additions": 25, "deletions": 9, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2Fjava%2Futil%2Fzip%2FInflater.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2Fjava%2Futil%2Fzip%2FInflater.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fzip%2FInflater.java?ref=4f21aedbf4c7661626f49e7ca74ecc2a80892262", "patch": "@@ -1,12 +1,28 @@\n-// Inflater.java - Decompress a data stream.\n-\n-/* Copyright (C) 1999  Free Software Foundation\n-\n-   This file is part of libgcj.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+/* Inflater.java - Decompress a data stream\n+   Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+ \n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.util.zip;\n "}, {"sha": "005c82179d1d2baf164e2306fc21b2e5f625b789", "filename": "libjava/java/util/zip/InflaterInputStream.java", "status": "modified", "additions": 25, "deletions": 9, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2Fjava%2Futil%2Fzip%2FInflaterInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2Fjava%2Futil%2Fzip%2FInflaterInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fzip%2FInflaterInputStream.java?ref=4f21aedbf4c7661626f49e7ca74ecc2a80892262", "patch": "@@ -1,12 +1,28 @@\n-// InflaterInputStream.java - Input stream filter for decompressing.\n-\n-/* Copyright (C) 1999, 2000  Free Software Foundation\n-\n-   This file is part of libgcj.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+/* InflaterInputStream.java - Input stream filter for decompressing\n+   Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+ \n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.util.zip;\n "}, {"sha": "1313d48aa695dd25da51433c41eea28f23954f37", "filename": "libjava/java/util/zip/ZipConstants.java", "status": "modified", "additions": 31, "deletions": 5, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2Fjava%2Futil%2Fzip%2FZipConstants.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2Fjava%2Futil%2Fzip%2FZipConstants.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fzip%2FZipConstants.java?ref=4f21aedbf4c7661626f49e7ca74ecc2a80892262", "patch": "@@ -1,13 +1,39 @@\n-/* Copyright (C) 1999  Free Software Foundation\n+/* ZipConstants.java - Some constants used in the zip package\n+   Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n \n-   This file is part of libgcj.\n+This file is part of GNU Classpath.\n \n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+ \n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.util.zip;\n \n+/**\n+ * Some constants used in the zip package.\n+ * <p>\n+ * Since this package local interface is completely undocumented no effort\n+ * is made to make it compatible with other implementations.\n+ * If someone is really interested you can probably come up with the right\n+ * constants and documentation by studying the Info-ZIP zipfile.c constants.\n+ */\n interface ZipConstants\n {\n   // Size in bytes of local file header, including signature."}, {"sha": "c3a8023c55bd6de630dd4ebb9f4deee9369a5259", "filename": "libjava/java/util/zip/ZipEntry.java", "status": "modified", "additions": 58, "deletions": 10, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2Fjava%2Futil%2Fzip%2FZipEntry.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2Fjava%2Futil%2Fzip%2FZipEntry.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fzip%2FZipEntry.java?ref=4f21aedbf4c7661626f49e7ca74ecc2a80892262", "patch": "@@ -1,10 +1,28 @@\n-/* Copyright (C) 1999, 2000  Free Software Foundation\n-\n-   This file is part of libgcj.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+/* ZipEntry.java - Represents entries in a zip file archive\n+   Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+ \n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.util.zip;\n \n@@ -19,6 +37,12 @@\n  * Status:  Believed complete and correct.\n  */\n \n+/**\n+ * Represents entries in a zip file archive.\n+ * An Entry cn be created by giving a name or by giving an already existing\n+ * ZipEntries whose values should be copied. The name normally represents a\n+ * file path name or directory name.\n+ */\n public class ZipEntry implements ZipConstants, Cloneable\n {\n   // These values were determined using a simple test program.\n@@ -44,6 +68,16 @@ public ZipEntry (String name)\n     this.name = name;\n   }\n \n+  /**\n+   * Creates a new ZipEntry using the fields of a given ZipEntry.\n+   * The comment, compressedSize, crc, extra, method, name, size, time and\n+   * relativeOffset fields are copied from the given entry.\n+   * Note that the contents of the extra byte array field is not cloned,\n+   * only the reference is copied.\n+   * The clone() method does clone the contents of the extra byte array if\n+   * needed.\n+   * @since 1.2\n+   */\n   public ZipEntry (ZipEntry ent)\n   {\n     comment = ent.comment;\n@@ -56,7 +90,13 @@ public ZipEntry (ZipEntry ent)\n     time = ent.time;\n     relativeOffset = ent.relativeOffset;\n   }\n-  \n+ \n+  /**\n+   * Creates a clone of this ZipEntry. Calls <code>new ZipEntry (this)</code>\n+   * and creates a clone of the contents of the extra byte array field.\n+   *\n+   * @since 1.2\n+   */\n   public Object clone ()\n   {\n     // JCL defines this as being the same as the copy constructor above,\n@@ -99,7 +139,12 @@ public void setComment (String comment)\n       throw new IllegalArgumentException ();\n     this.comment = comment;\n   }\n-  \n+ \n+  /**\n+   * Sets the compressedSize of this ZipEntry.\n+   * The new size must be between 0 and 0xffffffffL.\n+   * @since 1.2\n+   */\n   public void setCompressedSize (long compressedSize)\n   {\n     if (compressedSize < 0 || compressedSize > 0xffffffffL)\n@@ -172,6 +217,9 @@ static long timeFromDOS (int date, int time)\n   }\n \n   public String toString () { return name; }\n-  \n+ \n+  /**\n+   * Returns the hashcode of the name of this ZipEntry.\n+   */\n   public int hashCode () { return name.hashCode (); }\n }"}, {"sha": "b9b63c7b1942088c6ec78f045291f5d981846c46", "filename": "libjava/java/util/zip/ZipException.java", "status": "modified", "additions": 25, "deletions": 9, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2Fjava%2Futil%2Fzip%2FZipException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2Fjava%2Futil%2Fzip%2FZipException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fzip%2FZipException.java?ref=4f21aedbf4c7661626f49e7ca74ecc2a80892262", "patch": "@@ -1,12 +1,28 @@\n-// ZipException.java\n-\n-/* Copyright (C) 1998, 1999  Free Software Foundation\n-\n-   This file is part of libjava.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n-details.  */\n+/* ZipException.java - Exception representing a zip related error\n+   Copyright (C) 1998, 1999, 2000 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+ \n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.util.zip;\n "}, {"sha": "d0dbb9276dc440d1b3612a86441d50e40a25f53e", "filename": "libjava/java/util/zip/ZipFile.java", "status": "modified", "additions": 29, "deletions": 6, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2Fjava%2Futil%2Fzip%2FZipFile.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2Fjava%2Futil%2Fzip%2FZipFile.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fzip%2FZipFile.java?ref=4f21aedbf4c7661626f49e7ca74ecc2a80892262", "patch": "@@ -1,14 +1,31 @@\n-// ZipFile.java - Read contents of a ZIP file.\n+/* ZipFile.java - Read contents of a ZIP file\n+   Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n \n-/* Copyright (C) 1999, 2000  Free Software Foundation\n+This file is part of GNU Classpath.\n \n-   This file is part of libgcj.\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+ \n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n \n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.util.zip;\n+\n import java.io.*;\n \n /* Written using on-line Java Platform 1.2 API Specification\n@@ -166,6 +183,12 @@ public String getName ()\n     return name;\n   }\n \n+  /**\n+   * Returns the number of entries in this ZipFile.\n+   * @exception IllegalStateException if the ZipFile has been closed.\n+   *\n+   * @since 1.2\n+   */\n   public int size ()\n   {\n     if (entries == null)"}, {"sha": "1836859f0527b1be37a477fc0499a79d5ac27d97", "filename": "libjava/java/util/zip/ZipInputStream.java", "status": "modified", "additions": 40, "deletions": 7, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2Fjava%2Futil%2Fzip%2FZipInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2Fjava%2Futil%2Fzip%2FZipInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fzip%2FZipInputStream.java?ref=4f21aedbf4c7661626f49e7ca74ecc2a80892262", "patch": "@@ -1,10 +1,28 @@\n-/* Copyright (C) 1999, 2000  Free Software Foundation\n+/* ZipInputStream.java - Input filter for reading zip file\n+   Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n \n-   This file is part of libgcj.\n+This file is part of GNU Classpath.\n \n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+ \n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.util.zip;\n import java.io.*;\n@@ -20,8 +38,6 @@\n  * Status:  Quite incomplete, but can read uncompressed .zip archives.\n  */\n \n-// JDK1.2 has \"protected ZipEntry createZipEntry(String)\" but is very\n-// vague about what the method does.  FIXME.\n // We do not calculate the CRC and compare it with the specified value;\n // we probably should.  FIXME.\n    \n@@ -127,6 +143,13 @@ protected void fill () throws IOException\n       }\n   }\n \n+  /**\n+   * Creates a new ZipEntry with the given name.\n+   * Used by ZipInputStream when normally <code>new ZipEntry (name)</code>\n+   * would be called. This gives subclasses such as JarInputStream a change\n+   * to override this method and add aditional information to the ZipEntry\n+   * (subclass).\n+   */\n   protected ZipEntry createZipEntry (String name)\n   {\n     return new ZipEntry (name);\n@@ -168,6 +191,11 @@ public long skip (long n)  throws IOException\n     return count;\n   }\n \n+  /**\n+   * Returns 0 if the ZipInputStream is closed and 1 otherwise.\n+   *\n+   * @since 1.2\n+   */\n   public int available()\n   {\n     return closed ? 0 : 1;\n@@ -232,6 +260,11 @@ public void closeEntry ()  throws IOException\n       }\n   }\n \n+  /**\n+   * Closes this InflaterInputStream.\n+   *\n+   * @since 1.2\n+   */\n   public void close ()  throws IOException\n   {\n     current = null;"}, {"sha": "a0a8ed744bb9fb5611f7c099bf98d3c4cb005b48", "filename": "libjava/java/util/zip/ZipOutputStream.java", "status": "modified", "additions": 26, "deletions": 7, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2Fjava%2Futil%2Fzip%2FZipOutputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f21aedbf4c7661626f49e7ca74ecc2a80892262/libjava%2Fjava%2Futil%2Fzip%2FZipOutputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fzip%2FZipOutputStream.java?ref=4f21aedbf4c7661626f49e7ca74ecc2a80892262", "patch": "@@ -1,12 +1,31 @@\n-/* Copyright (C) 1999, 2000  Free Software Foundation\n-\n-   This file is part of libgcj.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+/* ZipOutputStream.java - Create a file in zip format\n+   Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+ \n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.util.zip;\n+\n import java.io.*;\n \n /* Written using on-line Java Platform 1.2 API Specification"}]}