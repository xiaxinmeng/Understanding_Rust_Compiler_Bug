{"sha": "7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2U5YjgyMTk2NmU5ZmRkOGE4OGE2YzA2YWUzYWFmYTg3YTA3MWNjZA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2014-10-03T10:41:29Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2014-10-03T10:41:29Z"}, "message": "pr24626-2.c: Add function declarations.\n\n\t* gcc.dg/torture/pr24626-2.c: Add function declarations.  Fix\n\tdefaulting to int.\n\t* gcc.dg/torture/pr28814.c: Likewise.\n\t* gcc.dg/torture/pr57036-1.c: Likewise.\n\t* gcc.dg/torture/inline-1.c: Add function declarations.\n\t* gcc.dg/torture/pr24626-1.c: Likewise.\n\t* gcc.dg/torture/pr24626-3.c: Likewise.\n\t* gcc.dg/torture/pr25947-1.c: Likewise.\n\t* gcc.dg/torture/pr27409.c: Likewise.\n\t* gcc.dg/torture/pr38948.c: Likewise.\n\t* gcc.dg/torture/pr44807.c: Likewise.\n\t* gcc.dg/torture/pr49603.c: Likewise.\n\t* gcc.dg/torture/pr45865.c: Likewise.\n\t* gcc.dg/torture/pr51071-2.c: Likewise.\n\t* gcc.dg/torture/pr51801.c: Likewise.\n\t* gcc.dg/torture/pr52720.c: Likewise.\n\t* gcc.dg/torture/pr55124.c: Likewise.\n\t* gcc.dg/torture/pr55238.c: Likewise.\n\t* gcc.dg/torture/pr55687.c: Likewise.\n\t* gcc.dg/torture/pr55888.c: Likewise.\n\t* gcc.dg/torture/pr57036-2.c: Likewise.\n\t* gcc.dg/torture/pr57147-3.c: Likewise.\n\t* gcc.dg/torture/pr57584.c: Likewise.\n\t* gcc.dg/torture/pr59993.c: Likewise.\n\t* gcc.dg/torture/pr58079.c: Likewise.\n\t* gcc.dg/torture/va-arg-25.c: Likewise.\n\t* gcc.dg/torture/vector-2.c: Likewise.\n\t* gcc.dg/torture/stackalign/nested-3.c: Likewise.\n\t* gcc.dg/torture/pr31254.c: Fix defaulting to int.\n\t* gcc.dg/torture/pr43781.c: Likewise.\n\t* gcc.dg/torture/pr52912.c: Likewise.\n\t* gcc.dg/torture/pr59139.c: Likewise.\n\t* gcc.dg/torture/pr55890-1.c: Likewise.\n\t* gcc.dg/torture/pr55890-2.c: Likewise.\n\t* gcc.dg/torture/pr59164.c: Likewise.\n\t* gcc.dg/torture/pr57393-2.c: Likewise.\n\t* gcc.dg/torture/stackalign/comp-goto-1.c: Likewise.\n\t* gcc.dg/torture/stackalign/non-local-goto-4.c: Likewise.\n\t* gcc.dg/torture/stackalign/non-local-goto-5.c: Likewise.\n\t* lib/target-supports.exp (check_effective_target_trapping): Likewise.\n\t* gcc.dg/torture/pr35227.c: Use -std=gnu89.  Fix defaulting to int.\n\t* gcc.dg/torture/stackalign/builtin-apply-4.c: Use -fgnu89-inline.\n\nFrom-SVN: r215844", "tree": {"sha": "f4538d0229a29d4063f0c571c77388dc28d9c695", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4538d0229a29d4063f0c571c77388dc28d9c695"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bcfee578708645649a35bddad5ea48579275f6b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcfee578708645649a35bddad5ea48579275f6b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcfee578708645649a35bddad5ea48579275f6b5"}], "stats": {"total": 122, "additions": 109, "deletions": 13}, "files": [{"sha": "f78fb8c60cca6882ec803f25a262cfc950cbad2e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -1,3 +1,48 @@\n+2014-10-03  Marek Polacek  <polacek@redhat.com>\n+\n+\t* gcc.dg/torture/pr24626-2.c: Add function declarations.  Fix\n+\tdefaulting to int.\n+\t* gcc.dg/torture/pr28814.c: Likewise.\n+\t* gcc.dg/torture/pr57036-1.c: Likewise.\n+\t* gcc.dg/torture/inline-1.c: Add function declarations.\n+\t* gcc.dg/torture/pr24626-1.c: Likewise.\n+\t* gcc.dg/torture/pr24626-3.c: Likewise.\n+\t* gcc.dg/torture/pr25947-1.c: Likewise.\n+\t* gcc.dg/torture/pr27409.c: Likewise.\n+\t* gcc.dg/torture/pr38948.c: Likewise.\n+\t* gcc.dg/torture/pr44807.c: Likewise.\n+\t* gcc.dg/torture/pr49603.c: Likewise.\n+\t* gcc.dg/torture/pr45865.c: Likewise.\n+\t* gcc.dg/torture/pr51071-2.c: Likewise.\n+\t* gcc.dg/torture/pr51801.c: Likewise.\n+\t* gcc.dg/torture/pr52720.c: Likewise.\n+\t* gcc.dg/torture/pr55124.c: Likewise.\n+\t* gcc.dg/torture/pr55238.c: Likewise.\n+\t* gcc.dg/torture/pr55687.c: Likewise.\n+\t* gcc.dg/torture/pr55888.c: Likewise.\n+\t* gcc.dg/torture/pr57036-2.c: Likewise.\n+\t* gcc.dg/torture/pr57147-3.c: Likewise.\n+\t* gcc.dg/torture/pr57584.c: Likewise.\n+\t* gcc.dg/torture/pr59993.c: Likewise.\n+\t* gcc.dg/torture/pr58079.c: Likewise.\n+\t* gcc.dg/torture/va-arg-25.c: Likewise.\n+\t* gcc.dg/torture/vector-2.c: Likewise.\n+\t* gcc.dg/torture/stackalign/nested-3.c: Likewise.\n+\t* gcc.dg/torture/pr31254.c: Fix defaulting to int.\n+\t* gcc.dg/torture/pr43781.c: Likewise.\n+\t* gcc.dg/torture/pr52912.c: Likewise.\n+\t* gcc.dg/torture/pr59139.c: Likewise.\n+\t* gcc.dg/torture/pr55890-1.c: Likewise.\n+\t* gcc.dg/torture/pr55890-2.c: Likewise.\n+\t* gcc.dg/torture/pr59164.c: Likewise.\n+\t* gcc.dg/torture/pr57393-2.c: Likewise.\n+\t* gcc.dg/torture/stackalign/comp-goto-1.c: Likewise.\n+\t* gcc.dg/torture/stackalign/non-local-goto-4.c: Likewise.\n+\t* gcc.dg/torture/stackalign/non-local-goto-5.c: Likewise.\n+\t* lib/target-supports.exp (check_effective_target_trapping): Likewise.\n+\t* gcc.dg/torture/pr35227.c: Use -std=gnu89.  Fix defaulting to int.\n+\t* gcc.dg/torture/stackalign/builtin-apply-4.c: Use -fgnu89-inline.\n+\n 2014-10-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR libgomp/61200"}, {"sha": "30bf91ece885c61943f31fd81f8e05b3244872e6", "filename": "gcc/testsuite/gcc.dg/torture/inline-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finline-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finline-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Finline-1.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -4,6 +4,7 @@\n    and the eh info. */\n /* PR tree-opt/30385 */\n \n+int f (void);\n static inline void g(int t)\n {\n  int a;"}, {"sha": "eb04795cfefe24ef65e464881308917466d00bb4", "filename": "gcc/testsuite/gcc.dg/torture/pr24626-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr24626-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr24626-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr24626-1.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -2,6 +2,8 @@\n \n typedef long\n (*bla)(int *node);\n+void T(int *);\n+long F3(void *);\n \n static long F2(void *tree, long blk, bla after_node_func)\n {"}, {"sha": "541c8c5aca4750d764b9a946c6919d7f9fc7c6c1", "filename": "gcc/testsuite/gcc.dg/torture/pr24626-2.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr24626-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr24626-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr24626-2.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -22,7 +22,12 @@ typedef enum { MU_REMOVE, MU_RENAME, MU_OPEN } mu_action;\n typedef struct __dbpginfo {\n     u_int8_t type;\n } PAGE;\n+int __db_cursor ();\n+int __memp_fget ();\n+int __db_free ();\n+int __db_c_close ();\n int __db_master_update(mdbp, sdbp, txn, subdb, type, action, newname, flags)\n+  int txn, subdb, type, action, newname, flags;\n   DB *mdbp, *sdbp;\n {\n     DB_ENV *dbenv;"}, {"sha": "41decabfacfae7c5713a725d633548055da50133", "filename": "gcc/testsuite/gcc.dg/torture/pr24626-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr24626-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr24626-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr24626-3.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n \n long fff(int*);\n+void T(int*);\n \n long F2(int *node)\n {"}, {"sha": "89d1ed07609d68a51ffc520b615c1d45ec109477", "filename": "gcc/testsuite/gcc.dg/torture/pr25947-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr25947-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr25947-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr25947-1.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -6,6 +6,7 @@ extern char *rl_line_buffer;\n extern int rl_point;\n extern int rl_end;\n static const char *vi_motion = \" hl^$0ftFT;,%wbeWBE|\";\n+void rl_vi_end_word (int, int);\n void\n rl_vi_complete (int ignore, int key)\n {"}, {"sha": "4bfae43be3774edb43127e3e28d52d29054912cc", "filename": "gcc/testsuite/gcc.dg/torture/pr27409.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr27409.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr27409.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr27409.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -10,6 +10,7 @@ struct {\n         int g;\n } my_struct;\n \n+void foo (thang_t *);\n void function(int blaz)\n {\n   thang_t *fp = &my_struct.f;"}, {"sha": "cf641ca90582edae519c5e4c662cd18be85eefc5", "filename": "gcc/testsuite/gcc.dg/torture/pr28814.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr28814.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr28814.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr28814.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -7,6 +7,8 @@ struct w49\n   }\n   value;\n };\n+void backtrace (const char *, int, int);\n+void\n f9887 (struct w49 a23040)\n {\n   unsigned long r9887;"}, {"sha": "ef2ee21ad6735c00b067d973970d5d77ae5d8849", "filename": "gcc/testsuite/gcc.dg/torture/pr31254.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr31254.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr31254.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr31254.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -19,6 +19,7 @@ static inline\n {\n   return &vnode->vfs_inode;\n };\n+void\n afs_inode_map_status (struct afs_vnode *vnode)\n {\n   struct inode *inode = AFS_VNODE_TO_I (vnode);"}, {"sha": "37c2d107292ce2452ad3eb4d2d58d5c6126f13f9", "filename": "gcc/testsuite/gcc.dg/torture/pr35227.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr35227.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr35227.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr35227.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -1,5 +1,7 @@\n /* { dg-do compile } */\n+/* { dg-options \"-std=gnu89\" } */\n \n+int\n mandel(double _Complex C)\n {\n   int py;"}, {"sha": "90906eebf22e3de724e301ac41557f26f8d2afe6", "filename": "gcc/testsuite/gcc.dg/torture/pr38948.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr38948.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr38948.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr38948.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -24,6 +24,7 @@ typedef struct gs_matrix_fixed_s\n   int x;\n }\n gs_matrix_fixed;\n+int gx_path_add_curve_notes ();\n static int\n append_simple (const byte * glyph, const gs_matrix_fixed * pmat, void * ppath)\n {\n@@ -78,6 +79,7 @@ append_simple (const byte * glyph, const gs_matrix_fixed * pmat, void * ppath)\n       }\n   }\n }\n+void gs_matrix_multiply (gs_matrix *, const gs_matrix *, gs_matrix *);\n int\n append_outline (uint glyph_index, const gs_matrix_fixed *pmat, void *ppath)\n {"}, {"sha": "e4ef33865083197274cd0ffab203cf12237f02a5", "filename": "gcc/testsuite/gcc.dg/torture/pr43781.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr43781.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr43781.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr43781.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -25,7 +25,7 @@ struct S2 g_320[2] = {\n };\n \n void\n-int32func (uint64p_34)\n+int32func (int uint64p_34)\n {\n   for (g_22.f3 = 0; g_22.f3 <= 0; g_22.f3)\n     {"}, {"sha": "918333e2563127db4040a1c9e2212f8ec1b558f1", "filename": "gcc/testsuite/gcc.dg/torture/pr44807.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr44807.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr44807.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr44807.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -1,5 +1,8 @@\n /* { dg-do compile } */\n \n+int sigemptyset (int *);\n+int sigaddset(int, int);\n+int sigprocmask ();\n struct jobstats\n {\n   int j_jobslots;"}, {"sha": "9974896f60ccf1f151bcee6ff25a30ab64837b67", "filename": "gcc/testsuite/gcc.dg/torture/pr45865.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr45865.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr45865.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr45865.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -25,6 +25,7 @@ struct rtx_def {\n   unsigned int mode : 8;\n };\n extern enum rtx_code reverse_condition (enum rtx_code);\n+extern enum rtx_code reverse_condition_maybe_unordered (enum rtx_code);\n enum rtx_code\n reversed_comparison_code_parts (enum rtx_code code, rtx insn, rtx arg0,\n \t\t\t\trtx arg1)"}, {"sha": "9bde9891a4c34fd8527357afd8e4af41b41a7aac", "filename": "gcc/testsuite/gcc.dg/torture/pr49603.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr49603.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr49603.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr49603.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -6,6 +6,7 @@ struct gl_visual {\n struct gl_context {\n     struct gl_visual *Visual;\n };\n+void foo (char *);\n void quickdraw_rgb( struct gl_context * ctx,\n \t\t    int width, int height)\n {"}, {"sha": "ccf3d815872c9bbeeaa901bba7c33076cc659c0e", "filename": "gcc/testsuite/gcc.dg/torture/pr51071-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr51071-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr51071-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr51071-2.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -7,6 +7,7 @@ extern struct module __this_module;\n static inline void\n trace_module_get  (struct module *mod, uintptr_t ip) { }\n struct module;\n+int module_is_live (struct module *);\n static inline __attribute__((no_instrument_function))\n int try_module_get(struct module *module)\n {\n@@ -29,6 +30,7 @@ struct net_device;\n struct net_device_ops {\n     int (*ndo_open)(struct net_device *dev);\n };\n+int hdlc_open (struct net_device *);\n int t3e3_open(struct net_device *dev)\n {\n   int ret = hdlc_open(dev);"}, {"sha": "d5617d530294c8417e29285704008156cd83ea61", "filename": "gcc/testsuite/gcc.dg/torture/pr51801.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr51801.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr51801.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr51801.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -4,6 +4,8 @@ typedef struct { char Vshow; } TScreen;\n typedef struct _Misc { char Tshow; } Misc;\n typedef struct _XtermWidgetRec { TScreen screen; Misc misc; } XtermWidgetRec, *XtermWidget;\n extern XtermWidget term;\n+void Bell (XtermWidget, int, int);\n+void set_tek_visibility (int);\n \n void\n handle_tekshow (void *gw, int allowswitch)"}, {"sha": "ac0bfb643b26fbcf9790cfbacad060054cf6706a", "filename": "gcc/testsuite/gcc.dg/torture/pr52720.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr52720.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr52720.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr52720.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -5,6 +5,7 @@ struct alu_bank_swizzle {\n     int hw_gpr[3][4];\n     int hw_cfile_addr[4];\n };\n+void check_vector (struct alu_bank_swizzle *);\n static void init_bank_swizzle(struct alu_bank_swizzle *bs)\n {\n   int i, cycle, component;"}, {"sha": "1aa38c3ad6fe7e1113780dc2f0ab8b84779cbda1", "filename": "gcc/testsuite/gcc.dg/torture/pr52912.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr52912.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr52912.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr52912.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -2,7 +2,7 @@\n \n int a, b, c;\n static int\n-fn1 (p1)\n+fn1 (int p1)\n {\n lbl_549:\n       if (p1)"}, {"sha": "7ab172438a141539604e1b5c13ec68e1c6689a1d", "filename": "gcc/testsuite/gcc.dg/torture/pr55124.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr55124.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr55124.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr55124.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -2,6 +2,7 @@\n \n int a, b;\n long c;\n+void foo(int);\n \n void f2(void)\n {"}, {"sha": "489d03ea58760dc134f6a86187d4d7ec9dc76042", "filename": "gcc/testsuite/gcc.dg/torture/pr55238.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr55238.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr55238.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr55238.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -12,6 +12,8 @@ typedef struct\n gz_state;\n \n void gz_error (gz_state *state, int err, char *msg);\n+void foo (char *);\n+void bar (char *, char *);\n \n static void\n gz_reset (gz_state *state)"}, {"sha": "502ddd4ed2e8ef204d684a2513e4ee2fe0800d46", "filename": "gcc/testsuite/gcc.dg/torture/pr55687.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr55687.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr55687.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr55687.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -5,6 +5,7 @@ typedef short gshort;\n typedef struct _GString GString;\n \n extern char *fgets(char *, int, FILE *);\n+extern void g_string_append_c_inline (GString *, char);\n \n void verbose_text_loop (void *data)\n {"}, {"sha": "e7f4260d069adb10516134a990301a7eb8e6f7f9", "filename": "gcc/testsuite/gcc.dg/torture/pr55888.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr55888.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr55888.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr55888.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -55,6 +55,8 @@ typedef enum\n     PROTOBUF_C_WIRE_TYPE_END_GROUP, PROTOBUF_C_WIRE_TYPE_32BIT\n }\n ProtobufCWireType;\n+size_t tag_pack (uint32_t, uint8_t *);\n+size_t prefixed_message_pack (ProtobufCMessage *, uint8_t *);\n static inline size_t\n uint32_pack (uint32_t value, uint8_t * out)\n {"}, {"sha": "1113ab535f50d5777ea0ad539cab49d80e4c4016", "filename": "gcc/testsuite/gcc.dg/torture/pr55890-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr55890-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr55890-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr55890-1.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -3,4 +3,4 @@\n extern void *memmove(void *, void *, __SIZE_TYPE__);\n typedef int (*_TEST_fun_) ();\n static _TEST_fun_ i = (_TEST_fun_) memmove;\n-main() { i(); }\n+int main() { i(); }"}, {"sha": "1cf71d7529c299f048d38b8c9cab95c2be307ef0", "filename": "gcc/testsuite/gcc.dg/torture/pr55890-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr55890-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr55890-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr55890-2.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -1,4 +1,4 @@\n /* { dg-do compile } */\r\n \r\n extern void *memcpy();\r\n-main() { memcpy(); }\r\n+int main() { memcpy(); }\r"}, {"sha": "ac6bc6b9df29d0785bbf75a4c5c9aa0100c576b9", "filename": "gcc/testsuite/gcc.dg/torture/pr57036-1.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr57036-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr57036-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr57036-1.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -1,7 +1,10 @@\n /* { dg-do compile } */\n \n extern void g (void);\n+int _setjmp();\n+int read_buf_open (void);\n extern __inline __attribute__ ((__always_inline__,__leaf__))\n+void\n f ()\n {\n   g ();"}, {"sha": "ceb47876d19903d717942847fb0325fd6044e7d7", "filename": "gcc/testsuite/gcc.dg/torture/pr57036-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr57036-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr57036-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr57036-2.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n \n int j_;\n+void g (void);\n int jpgDecode_convert (unsigned i)\n {\n   __label__ label;"}, {"sha": "7a5926a16304e6387ac58c4991c178d7bc8e818e", "filename": "gcc/testsuite/gcc.dg/torture/pr57147-3.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr57147-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr57147-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr57147-3.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -5,6 +5,8 @@ struct __jmp_buf_tag   {\n };\n typedef struct __jmp_buf_tag sigjmp_buf[1];\n sigjmp_buf GC_jmp_buf;\n+int __sigsetjmp (sigjmp_buf, int);\n+void GC_set_and_save_fault_handler (void (*)(int));\n void GC_fault_handler(int sig)\n {\n }"}, {"sha": "a56313c1d6ba76a42411f3a8bb0978a9a0458a9a", "filename": "gcc/testsuite/gcc.dg/torture/pr57393-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr57393-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr57393-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr57393-2.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -3,6 +3,7 @@\n \n char a;\n \n+void\n foo (int **p)\n {\n   int b;"}, {"sha": "b527b047ab6a2e1f0d43a0bb2c5bb51ca1716e0d", "filename": "gcc/testsuite/gcc.dg/torture/pr57584.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr57584.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr57584.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr57584.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -32,6 +32,8 @@ struct scm_vm {\n };\n static SCM vm_regular_engine (SCM vm, SCM program, SCM *argv, int nargs) {\n }\n+void vm_dispatch_hook ();\n+int _setjmp ();\n static SCM vm_debug_engine (SCM vm, SCM program, SCM *argv, int nargs) {\n     register scm_t_uint8 *ip ;\n     register SCM *sp ;"}, {"sha": "10defa56881c7a5e151d62e4f25ecb29600c58f0", "filename": "gcc/testsuite/gcc.dg/torture/pr58079.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr58079.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr58079.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr58079.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -43,6 +43,7 @@ struct dvb_demux {\n  struct list_head feed_list;\n };\n \n+int dvb_dmx_swfilter_section_packet (struct dvb_demux_feed *, const u8 *);\n \n static\n inline"}, {"sha": "5b059566f88e5f01cbce0d0a9141677f0c9f8f91", "filename": "gcc/testsuite/gcc.dg/torture/pr59139.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr59139.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr59139.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr59139.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n \n int a, b, c, d, e;\n-int fn1(p1, p2) { return p2 == 0 ? p1 : 1 % p2; }\n+int fn1(int p1, int p2) { return p2 == 0 ? p1 : 1 % p2; }\n \n void fn2()\n {"}, {"sha": "345a96add68c6323c2976c28a9d5879295bea9d7", "filename": "gcc/testsuite/gcc.dg/torture/pr59164.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr59164.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr59164.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr59164.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -4,7 +4,7 @@ int a, d, e;\n long b[10];\n int c[10][8];\n \n-int fn1(p1)\n+int fn1(int p1)\n { \n   return 1 >> p1; \n }"}, {"sha": "833d923a302af21634d003673d804cea0b7b1fec", "filename": "gcc/testsuite/gcc.dg/torture/pr59993.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr59993.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr59993.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr59993.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -4,6 +4,8 @@\n \n extern int optind;\n jmp_buf jump_buf;\n+void foo (jmp_buf, int);\n+void bar (char *);\n int\n main (int argc, char **argv)\n {"}, {"sha": "d958293b34f4971c9e4e6efe203f9e15f0000670", "filename": "gcc/testsuite/gcc.dg/torture/stackalign/builtin-apply-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fbuiltin-apply-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fbuiltin-apply-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fbuiltin-apply-4.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -1,5 +1,6 @@\n /* PR tree-optimization/20076 */\n /* { dg-do run } */\n+/* { dg-options \"-fgnu89-inline\" } */\n \n extern void abort (void);\n "}, {"sha": "cf163722de8900e16a2665fb5f2fbfbab64328c3", "filename": "gcc/testsuite/gcc.dg/torture/stackalign/comp-goto-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fcomp-goto-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fcomp-goto-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fcomp-goto-1.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -11,10 +11,10 @@ extern void exit (int);\n \n #if ! defined (NO_LABEL_VALUES) && !defined (NO_TRAMPOLINES)\n int\n-x(a)\n+x(int a)\n {\n   __label__ xlab;\n-  void y(a)\n+  void y(int a)\n     {\n       void *x = &&llab;\n       if (a==-1)"}, {"sha": "917bdc37acb609bd9e82c7c1849c6f674f7fb3e0", "filename": "gcc/testsuite/gcc.dg/torture/stackalign/nested-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fnested-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fnested-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fnested-3.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -8,6 +8,7 @@\n #endif\n \n typedef int aligned __attribute__((aligned(ALIGNMENT)));\n+extern int strncmp (const char *, const char *, size_t);\n \n int global;\n "}, {"sha": "d9bc6dec6f43a6cd152ed218571fef09443452d3", "filename": "gcc/testsuite/gcc.dg/torture/stackalign/non-local-goto-4.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fnon-local-goto-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fnon-local-goto-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fnon-local-goto-4.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -11,11 +11,10 @@ extern void exit (int);\n \n #if ! defined (NO_LABEL_VALUES) && !defined (NO_TRAMPOLINES)\n int\n-\n-x(a)\n+x(int a)\n {\n   __label__ xlab;\n-  void y(a)\n+  void y(int a)\n     {\n       if (a==0)\n \tgoto xlab;"}, {"sha": "0fee82960de93d7aaa6c7743c84728452cec2b92", "filename": "gcc/testsuite/gcc.dg/torture/stackalign/non-local-goto-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fnon-local-goto-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fnon-local-goto-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fnon-local-goto-5.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -3,7 +3,7 @@\n extern void exit (int);\n #if !defined (NO_LABEL_VALUES) && !defined (NO_TRAMPOLINES)\n extern void abort (void);\n-int s(i){if(i>0){__label__ l1;int f(int i){if(i==2)goto l1;return 0;}return f(i);l1:;}return 1;}\n+int s(int i){if(i>0){__label__ l1;int f(int i){if(i==2)goto l1;return 0;}return f(i);l1:;}return 1;}\n int x(){return s(0)==1&&s(1)==0&&s(2)==1;}\n int main(){if(x()!=1)abort();exit(0);}\n #else"}, {"sha": "0fff6239be6c5b5888749ec420f662a450c27443", "filename": "gcc/testsuite/gcc.dg/torture/va-arg-25.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fva-arg-25.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fva-arg-25.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fva-arg-25.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -15,6 +15,8 @@\n const vector unsigned int v1 = {10,11,12,13};\n const vector unsigned int v2 = {20,21,22,23};\n \n+extern int memcmp (const void *, const void *, size_t);\n+\n void foo(int a, ...)\n {\n   va_list args;"}, {"sha": "b004d005775425742ea81bd32a718b53a8521c5b", "filename": "gcc/testsuite/gcc.dg/torture/vector-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fvector-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fvector-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fvector-2.c?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -8,6 +8,8 @@\n \n #define vector __attribute__((vector_size(16) ))\n \n+extern int memcmp (const void *, const void *, __SIZE_TYPE__);\n+\n vector int f0(vector int t, int a)\n {\n  ((int*)&t)[0] = a;"}, {"sha": "77e45cb583104f3e4fa9f58eb058687d9673ba70", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=7e9b821966e9fdd8a88a6c06ae3aafa87a071ccd", "patch": "@@ -702,7 +702,7 @@ proc check_effective_target_scheduling {} {\n \n proc check_effective_target_trapping {} {\n     return [check_no_compiler_messages trapping object {\n-        add (int a, int b) { return a + b; }\n+        int add (int a, int b) { return a + b; }\n     } \"-ftrapv\"]\n }\n "}]}