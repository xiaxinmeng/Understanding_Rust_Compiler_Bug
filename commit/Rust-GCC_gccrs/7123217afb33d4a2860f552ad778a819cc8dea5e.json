{"sha": "7123217afb33d4a2860f552ad778a819cc8dea5e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzEyMzIxN2FmYjMzZDRhMjg2MGY1NTJhZDc3OGE4MTljYzhkZWE1ZQ==", "commit": {"author": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2020-07-21T07:25:20Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2020-08-13T03:19:02Z"}, "message": "Merge two define_insn: <avx512>_blendm<mode>, <avx512>_load<mode>_mask.\n\nThose two define_insns have same pattern, and <avx512>_load<mode>_mask\nwould always be matched since it show up earlier in the md file, and\nit may lose some opportunity in pass_reload since\n<avx512>_load<mode>_mask only have constraint \"0C\" for operand2, and\n\"v\" constraint in <avx512>_vblendm<mode> would never be matched.\n\n2020-07-21  Hongtao Liu  <hongtao.liu@intel.com>\n\ngcc/\n\tPR target/96246\n\t* config/i386/sse.md (<avx512>_load<mode>_mask,\n\t<avx512>_load<mode>_mask): Extend to generate blendm\n\tinstructions.\n\t(<avx512>_blendm<mode>, <avx512>_blendm<mode>): Change\n\tdefine_insn to define_expand.\n\ngcc/testsuite/\n\t* gcc.target/i386/avx512bw-pr96246-1.c: New test.\n\t* gcc.target/i386/avx512bw-pr96246-2.c: New test.\n\t* gcc.target/i386/avx512vl-pr96246-1.c: New test.\n\t* gcc.target/i386/avx512vl-pr96246-2.c: New test.\n\t* gcc.target/i386/avx512bw-vmovdqu16-1.c: Adjust test.\n\t* gcc.target/i386/avx512bw-vmovdqu8-1.c: Ditto.\n\t* gcc.target/i386/avx512f-vmovapd-1.c: Ditto.\n\t* gcc.target/i386/avx512f-vmovaps-1.c: Ditto.\n\t* gcc.target/i386/avx512f-vmovdqa32-1.c: Ditto.\n\t* gcc.target/i386/avx512f-vmovdqa64-1.c: Ditto.\n\t* gcc.target/i386/avx512vl-pr92686-movcc-1.c: Ditto.\n\t* gcc.target/i386/avx512vl-pr96246-1.c: Ditto.\n\t* gcc.target/i386/avx512vl-pr96246-2.c: Ditto.\n\t* gcc.target/i386/avx512vl-vmovapd-1.c: Ditto.\n\t* gcc.target/i386/avx512vl-vmovaps-1.c: Ditto.\n\t* gcc.target/i386/avx512vl-vmovdqa32-1.c: Ditto.\n\t* gcc.target/i386/avx512vl-vmovdqa64-1.c: Ditto.", "tree": {"sha": "6bfc49c58b42910b2c4f08f9b10d068923abc878", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6bfc49c58b42910b2c4f08f9b10d068923abc878"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7123217afb33d4a2860f552ad778a819cc8dea5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7123217afb33d4a2860f552ad778a819cc8dea5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7123217afb33d4a2860f552ad778a819cc8dea5e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7123217afb33d4a2860f552ad778a819cc8dea5e/comments", "author": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5db1fa9bc69dd58ce2f93dd707d05efcfe89ffa8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5db1fa9bc69dd58ce2f93dd707d05efcfe89ffa8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5db1fa9bc69dd58ce2f93dd707d05efcfe89ffa8"}], "stats": {"total": 242, "additions": 201, "deletions": 41}, "files": [{"sha": "41c6dbfa668e696f882874bda389f422bf45cf5c", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 15, "deletions": 19, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7123217afb33d4a2860f552ad778a819cc8dea5e/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7123217afb33d4a2860f552ad778a819cc8dea5e/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=7123217afb33d4a2860f552ad778a819cc8dea5e", "patch": "@@ -1055,11 +1055,15 @@\n (define_insn \"<avx512>_load<mode>_mask\"\n   [(set (match_operand:V48_AVX512VL 0 \"register_operand\" \"=v,v\")\n \t(vec_merge:V48_AVX512VL\n-\t  (match_operand:V48_AVX512VL 1 \"nonimmediate_operand\" \"v,m\")\n-\t  (match_operand:V48_AVX512VL 2 \"nonimm_or_0_operand\" \"0C,0C\")\n+\t  (match_operand:V48_AVX512VL 1 \"nonimmediate_operand\" \"vm,vm\")\n+\t  (match_operand:V48_AVX512VL 2 \"nonimm_or_0_operand\" \"0C,v\")\n \t  (match_operand:<avx512fmaskmode> 3 \"register_operand\" \"Yk,Yk\")))]\n   \"TARGET_AVX512F\"\n {\n+  if (REG_P (operands[2])\n+     && REGNO (operands[2]) != REGNO (operands[0]))\n+    return \"v<sseintprefix>blendm<ssemodesuffix>\\t{%1, %2, %0%{%3%}|%0%{%3%}, %2, %1}\";\n+\n   if (FLOAT_MODE_P (GET_MODE_INNER (<MODE>mode)))\n     {\n       if (misaligned_operand (operands[1], <MODE>mode))\n@@ -1077,20 +1081,20 @@\n }\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix\" \"evex\")\n-   (set_attr \"memory\" \"none,load\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n (define_insn \"<avx512>_load<mode>_mask\"\n   [(set (match_operand:VI12_AVX512VL 0 \"register_operand\" \"=v,v\")\n \t(vec_merge:VI12_AVX512VL\n-\t  (match_operand:VI12_AVX512VL 1 \"nonimmediate_operand\" \"v,m\")\n-\t  (match_operand:VI12_AVX512VL 2 \"nonimm_or_0_operand\" \"0C,0C\")\n+\t  (match_operand:VI12_AVX512VL 1 \"nonimmediate_operand\" \"vm,vm\")\n+\t  (match_operand:VI12_AVX512VL 2 \"nonimm_or_0_operand\" \"0C,v\")\n \t  (match_operand:<avx512fmaskmode> 3 \"register_operand\" \"Yk,Yk\")))]\n   \"TARGET_AVX512BW\"\n-  \"vmovdqu<ssescalarsize>\\t{%1, %0%{%3%}%N2|%0%{%3%}%N2, %1}\"\n+  \"@\n+    vmovdqu<ssescalarsize>\\t{%1, %0%{%3%}%N2|%0%{%3%}%N2, %1}\n+    vpblendm<ssemodesuffix>\\t{%1, %2, %0%{%3%}|%0%{%3%}, %2, %1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix\" \"evex\")\n-   (set_attr \"memory\" \"none,load\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n (define_insn \"avx512f_mov<ssescalarmodelower>_mask\"\n@@ -1154,29 +1158,21 @@\n    (set_attr \"memory\" \"store\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"<avx512>_blendm<mode>\"\n+(define_expand \"<avx512>_blendm<mode>\"\n   [(set (match_operand:V48_AVX512VL 0 \"register_operand\" \"=v\")\n \t(vec_merge:V48_AVX512VL\n \t  (match_operand:V48_AVX512VL 2 \"nonimmediate_operand\" \"vm\")\n \t  (match_operand:V48_AVX512VL 1 \"register_operand\" \"v\")\n \t  (match_operand:<avx512fmaskmode> 3 \"register_operand\" \"Yk\")))]\n-  \"TARGET_AVX512F\"\n-  \"v<sseintprefix>blendm<ssemodesuffix>\\t{%2, %1, %0%{%3%}|%0%{%3%}, %1, %2}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"prefix\" \"evex\")\n-   (set_attr \"mode\" \"<sseinsnmode>\")])\n+  \"TARGET_AVX512F\")\n \n-(define_insn \"<avx512>_blendm<mode>\"\n+(define_expand \"<avx512>_blendm<mode>\"\n   [(set (match_operand:VI12_AVX512VL 0 \"register_operand\" \"=v\")\n \t(vec_merge:VI12_AVX512VL\n \t  (match_operand:VI12_AVX512VL 2 \"nonimmediate_operand\" \"vm\")\n \t  (match_operand:VI12_AVX512VL 1 \"register_operand\" \"v\")\n \t  (match_operand:<avx512fmaskmode> 3 \"register_operand\" \"Yk\")))]\n-  \"TARGET_AVX512BW\"\n-  \"vpblendm<ssemodesuffix>\\t{%2, %1, %0%{%3%}|%0%{%3%}, %1, %2}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"prefix\" \"evex\")\n-   (set_attr \"mode\" \"<sseinsnmode>\")])\n+  \"TARGET_AVX512BW\")\n \n (define_insn \"<avx512>_store<mode>_mask\"\n   [(set (match_operand:V48_AVX512VL 0 \"memory_operand\" \"=m\")"}, {"sha": "2bfcc840a91c2dcc0cc56766862d4b3748a6e472", "filename": "gcc/testsuite/gcc.target/i386/avx512bw-pr96246-1.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7123217afb33d4a2860f552ad778a819cc8dea5e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-pr96246-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7123217afb33d4a2860f552ad778a819cc8dea5e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-pr96246-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-pr96246-1.c?ref=7123217afb33d4a2860f552ad778a819cc8dea5e", "patch": "@@ -0,0 +1,30 @@\n+/* PR target/96246 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ftree-vectorize -mavx512bw\" } */\n+/* { dg-final { scan-assembler-times \"vpblendm\\[bwdq\\]\\[\\t ]\" 4 } } */\n+/* { dg-final { scan-assembler-times \"vblendmp\\[sd\\]\\[\\t ]\" 2 } } */\n+\n+typedef char v64qi __attribute__((vector_size (64)));\n+typedef short v32hi __attribute__((vector_size (64)));\n+typedef int v16si __attribute__((vector_size (64)));\n+typedef long long v8di __attribute__((vector_size (64)));\n+typedef float v16sf __attribute__((vector_size (64)));\n+typedef double v8df __attribute__((vector_size (64)));\n+\n+#define COMPILE_TEST(vtype, num)\t\t\t\\\n+  vtype\t\t\t\t\t\t\t\\\n+  __attribute__ ((noipa))\t\t\t\t\\\n+  foo_##vtype (vtype a, vtype b, vtype c, vtype d)\t\\\n+  {\t\t\t\t\t\t\t\\\n+    vtype e;\t\t\t\t\t\t\\\n+    for (int i = 0; i != num; i++)\t\t\t\\\n+      e[i] = a[i] > b[i] ? c[i] : d[i];\t\t\t\\\n+    return e;\t\t\t\t\t\t\\\n+  }\n+\n+COMPILE_TEST (v64qi, 64);\n+COMPILE_TEST (v32hi, 32);\n+COMPILE_TEST (v16si, 16);\n+COMPILE_TEST (v8di, 8);\n+COMPILE_TEST (v16sf, 16);\n+COMPILE_TEST (v8df, 8);"}, {"sha": "422fcfe4ea865b91cf0399babc9d9209ca1c95f7", "filename": "gcc/testsuite/gcc.target/i386/avx512bw-pr96246-2.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7123217afb33d4a2860f552ad778a819cc8dea5e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-pr96246-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7123217afb33d4a2860f552ad778a819cc8dea5e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-pr96246-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-pr96246-2.c?ref=7123217afb33d4a2860f552ad778a819cc8dea5e", "patch": "@@ -0,0 +1,47 @@\n+/* PR target/96246 */\n+/* { dg-do run } */\n+/* { dg-require-effective-target avx512bw } */\n+/* { dg-options \"-Ofast -mavx512bw\" } */\n+\n+#ifndef CHECK\n+#define CHECK \"avx512f-helper.h\"\n+#endif\n+\n+#include CHECK\n+\n+#ifndef TEST\n+#define TEST avx512bw_test\n+#endif\n+\n+#include \"avx512bw-pr96246-1.c\"\n+\n+#define RUNTIME_TEST(vtype, num)\t\t\t\\\n+  do\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+      vtype a, b, c, d;\t\t\t\t\t\\\n+      vtype res;\t\t\t\t\t\\\n+      for (int i = 0; i != num; i++)\t\t\t\\\n+\t{\t\t\t\t\t\t\\\n+\t  a[i] = i * 2;\t\t\t\t\t\\\n+\t  b[i] = i * i - 5;\t\t\t\t\\\n+\t  c[i] = 1;\t\t\t\t\t\\\n+\t  d[i] = 0;\t\t\t\t\t\\\n+\t}\t\t\t\t\t\t\\\n+      res = foo_##vtype (a, b, c, d);\t\t\t\\\n+      for (int i = 0; i != num; i++)\t\t\t\\\n+\tif (res [i] != (a[i] > b[i] ? c[i] : d[i]))\t\\\n+\t  __builtin_abort ();\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\\\n+  while (0)\n+\n+static void\n+__attribute__ ((optimize (0)))\n+TEST (void)\n+{\n+  RUNTIME_TEST (v64qi, 64);\n+  RUNTIME_TEST (v32hi, 32);\n+  RUNTIME_TEST (v16si, 16);\n+  RUNTIME_TEST (v8di, 8);\n+  RUNTIME_TEST (v16sf, 16);\n+  RUNTIME_TEST (v8df, 8);\n+}"}, {"sha": "a0d0e36389bbdeb7d879f5554f25ab5ac05f1c15", "filename": "gcc/testsuite/gcc.target/i386/avx512bw-vmovdqu16-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7123217afb33d4a2860f552ad778a819cc8dea5e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-vmovdqu16-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7123217afb33d4a2860f552ad778a819cc8dea5e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-vmovdqu16-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-vmovdqu16-1.c?ref=7123217afb33d4a2860f552ad778a819cc8dea5e", "patch": "@@ -1,8 +1,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx512bw -mavx512vl -O2\" } */\n-/* { dg-final { scan-assembler-times \"vmovdqu16\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%zmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vmovdqu16\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n\\]*%ymm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vmovdqu16\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vmovdqu16|vpblendmw)\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%zmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vmovdqu16|vpblendmw)\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n\\]*%ymm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vmovdqu16|vpblendmw)\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmovdqu16\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%zmm\\[0-9\\]+\\{%k\\[1-7\\]\\}\\{z\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmovdqu16\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n\\]*%ymm\\[0-9\\]+\\{%k\\[1-7\\]\\}\\{z\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmovdqu16\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\{%k\\[1-7\\]\\}\\{z\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */"}, {"sha": "6d24e79bf66638407ac3f7fa554162153ef83b92", "filename": "gcc/testsuite/gcc.target/i386/avx512bw-vmovdqu8-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7123217afb33d4a2860f552ad778a819cc8dea5e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-vmovdqu8-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7123217afb33d4a2860f552ad778a819cc8dea5e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-vmovdqu8-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-vmovdqu8-1.c?ref=7123217afb33d4a2860f552ad778a819cc8dea5e", "patch": "@@ -1,8 +1,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx512bw -mavx512vl -O2\" } */\n-/* { dg-final { scan-assembler-times \"vmovdqu8\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%zmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vmovdqu8\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n\\]*%ymm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vmovdqu8\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vmovdqu8|vpblendmb)\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%zmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vmovdqu8|vpblendmb)\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n\\]*%ymm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vmovdqu8|vpblendmb)\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmovdqu8\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%zmm\\[0-9\\]+\\{%k\\[1-7\\]\\}\\{z\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmovdqu8\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n\\]*%ymm\\[0-9\\]+\\{%k\\[1-7\\]\\}\\{z\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmovdqu8\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\{%k\\[1-7\\]\\}\\{z\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */"}, {"sha": "7fc84b16e2b50fe49705315b9cb0f77b60ac1959", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vmovapd-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7123217afb33d4a2860f552ad778a819cc8dea5e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovapd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7123217afb33d4a2860f552ad778a819cc8dea5e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovapd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovapd-1.c?ref=7123217afb33d4a2860f552ad778a819cc8dea5e", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx512f -O2\" } */\n-/* { dg-final { scan-assembler-times \"vmovapd\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%zmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vmovapd|vblendmpd)\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%zmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmovapd\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%zmm\\[0-9\\]+\\{%k\\[1-7\\]\\}\\{z\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmovapd\\[ \\\\t\\]+\\[^\\{\\n\\]*\\\\)\\[^\\n\\]*%zmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmovapd\\[ \\\\t\\]+\\[^\\{\\n\\]*\\\\)\\[^\\n\\]*%zmm\\[0-9\\]+\\{%k\\[1-7\\]\\}\\{z\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */"}, {"sha": "c2e2655fda6e96aefce1031fe59dba9bb7c23cec", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vmovaps-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7123217afb33d4a2860f552ad778a819cc8dea5e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovaps-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7123217afb33d4a2860f552ad778a819cc8dea5e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovaps-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovaps-1.c?ref=7123217afb33d4a2860f552ad778a819cc8dea5e", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx512f -O2\" } */\n-/* { dg-final { scan-assembler-times \"vmovaps\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%zmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vmovaps|vblendmps)\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%zmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmovaps\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%zmm\\[0-9\\]+\\{%k\\[1-7\\]\\}\\{z\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmovaps\\[ \\\\t\\]+\\[^\\{\\n\\]*\\\\)\\[^\\n\\]*%zmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmovaps\\[ \\\\t\\]+\\[^\\{\\n\\]*\\\\)\\[^\\n\\]*%zmm\\[0-9\\]+\\{%k\\[1-7\\]\\}\\{z\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */"}, {"sha": "8fb816c13176f73640667af9cfa7fa4a97fd52d7", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vmovdqa32-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7123217afb33d4a2860f552ad778a819cc8dea5e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovdqa32-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7123217afb33d4a2860f552ad778a819cc8dea5e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovdqa32-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovdqa32-1.c?ref=7123217afb33d4a2860f552ad778a819cc8dea5e", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx512f -O2\" } */\n-/* { dg-final { scan-assembler-times \"vmovdqa32\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%zmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vmovdqa32|vpblendmd)\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%zmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmovdqa32\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%zmm\\[0-9\\]+\\{%k\\[1-7\\]\\}\\{z\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmovdqa32\\[ \\\\t\\]+\\[^\\{\\n\\]*\\\\)\\[^\\n\\]*%zmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmovdqa32\\[ \\\\t\\]+\\[^\\{\\n\\]*\\\\)\\[^\\n\\]*%zmm\\[0-9\\]+\\{%k\\[1-7\\]\\}\\{z\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */"}, {"sha": "4352b12b6e7f4c7e3496b0de9f5cd2e8ae1f1bd6", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vmovdqa64-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7123217afb33d4a2860f552ad778a819cc8dea5e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovdqa64-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7123217afb33d4a2860f552ad778a819cc8dea5e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovdqa64-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vmovdqa64-1.c?ref=7123217afb33d4a2860f552ad778a819cc8dea5e", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx512f -O2\" } */\n-/* { dg-final { scan-assembler-times \"vmovdqa64\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%zmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vmovdqa64|vpblendmq)\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%zmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmovdqa64\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*%zmm\\[0-9\\]+\\{%k\\[1-7\\]\\}\\{z\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmovdqa64\\[ \\\\t\\]+\\[^\\{\\n\\]*\\\\)\\[^\\n\\]*%zmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmovdqa64\\[ \\\\t\\]+\\[^\\{\\n\\]*\\\\)\\[^\\n\\]*%zmm\\[0-9\\]+\\{%k\\[1-7\\]\\}\\{z\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */"}, {"sha": "8d0b2e94001869fa921330f6e2742db7917d70b6", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-pr92686-movcc-1.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7123217afb33d4a2860f552ad778a819cc8dea5e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr92686-movcc-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7123217afb33d4a2860f552ad778a819cc8dea5e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr92686-movcc-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr92686-movcc-1.c?ref=7123217afb33d4a2860f552ad778a819cc8dea5e", "patch": "@@ -3,10 +3,10 @@\n /* { dg-options \"-Ofast -mavx512bw -mavx512vl -mno-xop -mprefer-vector-width=256\" } */\n /* { dg-final { scan-assembler-times \"vpcmp\\[bwdq\\]\\[\\t ]\" 8 } } */\n /* { dg-final { scan-assembler-times \"vpcmpu\\[bwdq\\]\\[\\t ]\" 8 } } */\n-/* { dg-final { scan-assembler-times \"vmovdq\\[au\\]8\\[^\\{\\n\\]*%ymm0+\\[^\\n\\]*\\{%k\\[1-7\\]\\}\" 4 } } */\n-/* { dg-final { scan-assembler-times \"vmovdq\\[au\\]16\\[^\\{\\n\\]*%ymm0+\\[^\\n\\]*\\{%k\\[1-7\\]\\}\" 4 } } */\n-/* { dg-final { scan-assembler-times \"vmovdq\\[au\\]32\\[^\\{\\n\\]*%ymm0+\\[^\\n\\]*\\{%k\\[1-7\\]\\}\" 4 } } */\n-/* { dg-final { scan-assembler-times \"vmovdq\\[au\\]64\\[^\\{\\n\\]*%ymm0+\\[^\\n\\]*\\{%k\\[1-7\\]\\}\" 4 } } */\n+/* { dg-final { scan-assembler-times \"(?:vmovdq\\[au\\]8|vpblendmb)\\[^\\{\\n\\]*%ymm0+\\[^\\n\\]*\\{%k\\[1-7\\]\\}\" 4 } } */\n+/* { dg-final { scan-assembler-times \"(?:vmovdq\\[au\\]16|vpblendmw)\\[^\\{\\n\\]*%ymm0+\\[^\\n\\]*\\{%k\\[1-7\\]\\}\" 4 } } */\n+/* { dg-final { scan-assembler-times \"(?:vmovdq\\[au\\]32|vpblendmd)\\[^\\{\\n\\]*%ymm0+\\[^\\n\\]*\\{%k\\[1-7\\]\\}\" 4 } } */\n+/* { dg-final { scan-assembler-times \"(?:vmovdq\\[au\\]64|vpblendmq)\\[^\\{\\n\\]*%ymm0+\\[^\\n\\]*\\{%k\\[1-7\\]\\}\" 4 } } */\n \n __attribute__((noipa)) void\n f1 (char *__restrict dst, char *__restrict src1, char *__restrict src2)"}, {"sha": "95357d6fc840943b3297d5e737ee67f2be25fbf1", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-pr96246-1.c", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7123217afb33d4a2860f552ad778a819cc8dea5e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr96246-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7123217afb33d4a2860f552ad778a819cc8dea5e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr96246-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr96246-1.c?ref=7123217afb33d4a2860f552ad778a819cc8dea5e", "patch": "@@ -0,0 +1,36 @@\n+/* PR target/96246 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ftree-vectorize -mavx512bw -mavx512vl\" } */\n+/* { dg-final { scan-assembler-times \"vpblendm\\[bwdq\\]\\[\\t ]\" 6 } } */\n+/* { dg-final { scan-assembler-times \"vblendmp\\[sd\\]\\[\\t ]\" 3 } } */\n+\n+typedef char v16qi __attribute__ ((vector_size (16)));\n+typedef char v32qi __attribute__ ((vector_size (32)));\n+typedef char v16hi __attribute__ ((vector_size (32)));\n+typedef int v4si __attribute__((vector_size (16)));\n+typedef int v8si __attribute__((vector_size (32)));\n+typedef long long v4di __attribute__((vector_size (32)));\n+typedef float v4sf __attribute__((vector_size (16)));\n+typedef float v8sf __attribute__((vector_size (32)));\n+typedef double v4df __attribute__((vector_size (32)));\n+\n+#define COMPILE_TEST(vtype, num)\t\t\t\\\n+  vtype\t\t\t\t\t\t\t\\\n+  __attribute__ ((noipa))\t\t\t\t\\\n+  foo_##vtype (vtype a, vtype b, vtype c, vtype d)\t\\\n+  {\t\t\t\t\t\t\t\\\n+    vtype e;\t\t\t\t\t\t\\\n+    for (int i = 0; i != num; i++)\t\t\t\\\n+      e[i] = a[i] > b[i] ? c[i] : d[i];\t\t\t\\\n+    return e;\t\t\t\t\t\t\\\n+  }\n+\n+COMPILE_TEST (v16qi, 16);\n+COMPILE_TEST (v32qi, 32);\n+COMPILE_TEST (v16hi, 16);\n+COMPILE_TEST (v4si, 4);\n+COMPILE_TEST (v8si, 8);\n+COMPILE_TEST (v4sf, 4);\n+COMPILE_TEST (v8sf, 8);\n+COMPILE_TEST (v4di, 4);\n+COMPILE_TEST (v4df, 4);"}, {"sha": "d219f7c15adef15bc6c571d760b3fd85901ea1ad", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-pr96246-2.c", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7123217afb33d4a2860f552ad778a819cc8dea5e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr96246-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7123217afb33d4a2860f552ad778a819cc8dea5e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr96246-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr96246-2.c?ref=7123217afb33d4a2860f552ad778a819cc8dea5e", "patch": "@@ -0,0 +1,51 @@\n+/* PR target/96246 */\n+/* { dg-do run } */\n+/* { dg-require-effective-target avx512bw } */\n+/* { dg-require-effective-target avx512vl } */\n+/* { dg-options \"-Ofast -mavx512bw -mavx512vl\" } */\n+\n+#ifndef CHECK\n+#define CHECK \"avx512f-helper.h\"\n+#endif\n+\n+#include CHECK\n+\n+#ifndef TEST\n+#define TEST avx512bw_test\n+#endif\n+\n+#include \"avx512vl-pr96246-1.c\"\n+\n+#define RUNTIME_TEST(vtype, num)\t\t\t\\\n+  do\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+      vtype a, b, c, d;\t\t\t\t\t\\\n+      vtype res;\t\t\t\t\t\\\n+      for (int i = 0; i != num; i++)\t\t\t\\\n+\t{\t\t\t\t\t\t\\\n+\t  a[i] = i * 2;\t\t\t\t\t\\\n+\t  b[i] = i * i - 5;\t\t\t\t\\\n+\t  c[i] = 1;\t\t\t\t\t\\\n+\t  d[i] = 0;\t\t\t\t\t\\\n+\t}\t\t\t\t\t\t\\\n+      res = foo_##vtype (a, b, c, d);\t\t\t\\\n+      for (int i = 0; i != num; i++)\t\t\t\\\n+\tif (res [i] != (a[i] > b[i] ? c[i] : d[i]))\t\\\n+\t  __builtin_abort ();\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\\\n+  while (0)\n+\n+static void\n+__attribute__ ((optimize (0)))\n+TEST (void)\n+{\n+  RUNTIME_TEST (v16qi, 16);\n+  RUNTIME_TEST (v32qi, 32);\n+  RUNTIME_TEST (v16hi, 16);\n+  RUNTIME_TEST (v4si, 4);\n+  RUNTIME_TEST (v8si, 8);\n+  RUNTIME_TEST (v4sf, 4);\n+  RUNTIME_TEST (v8sf, 8);\n+  RUNTIME_TEST (v4di, 4);\n+  RUNTIME_TEST (v4df, 4);\n+}"}, {"sha": "fd59660f93227f0ba5e8fee000b240aab112f2e0", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-vmovapd-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7123217afb33d4a2860f552ad778a819cc8dea5e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vmovapd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7123217afb33d4a2860f552ad778a819cc8dea5e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vmovapd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vmovapd-1.c?ref=7123217afb33d4a2860f552ad778a819cc8dea5e", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx512vl -O2\" } */\n-/* { dg-final { scan-assembler-times \"vmovapd\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n\\]*%ymm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vmovapd\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vmovapd|vblendmpd)\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n\\]*%ymm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vmovapd|vblendmpd)\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmovapd\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n\\]*%ymm\\[0-9\\]+\\{%k\\[1-7\\]\\}\\{z\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmovapd\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\{%k\\[1-7\\]\\}\\{z\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmovapd\\[ \\\\t\\]+\\[^\\{\\n\\]*\\\\)\\[^\\n\\]*%ymm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */"}, {"sha": "455b1a9dc37efa7b04bf6860f10f5186165c4a88", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-vmovaps-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7123217afb33d4a2860f552ad778a819cc8dea5e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vmovaps-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7123217afb33d4a2860f552ad778a819cc8dea5e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vmovaps-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vmovaps-1.c?ref=7123217afb33d4a2860f552ad778a819cc8dea5e", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx512vl -O2\" } */\n-/* { dg-final { scan-assembler-times \"vmovaps\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n\\]*%ymm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vmovaps\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vmovaps|vblendmps)\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n\\]*%ymm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vmovaps|vblendmps)\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmovaps\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n\\]*%ymm\\[0-9\\]+\\{%k\\[1-7\\]\\}\\{z\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmovaps\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\{%k\\[1-7\\]\\}\\{z\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmovaps\\[ \\\\t\\]+\\[^\\{\\n\\]*\\\\)\\[^\\n\\]*%ymm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */"}, {"sha": "217afbc6904b61ad908baec649ac620ba395fde0", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-vmovdqa32-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7123217afb33d4a2860f552ad778a819cc8dea5e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vmovdqa32-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7123217afb33d4a2860f552ad778a819cc8dea5e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vmovdqa32-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vmovdqa32-1.c?ref=7123217afb33d4a2860f552ad778a819cc8dea5e", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx512vl -O2\" } */\n-/* { dg-final { scan-assembler-times \"vmovdqa32\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n\\]*%ymm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vmovdqa32\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vmovdqa32|vpblendmd)\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n\\]*%ymm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vmovdqa32|vpblendmd)\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmovdqa32\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n\\]*%ymm\\[0-9\\]+\\{%k\\[1-7\\]\\}\\{z\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmovdqa32\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\{%k\\[1-7\\]\\}\\{z\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmovdqa32\\[ \\\\t\\]+\\[^\\{\\n\\]*\\\\)\\[^\\n\\]*%ymm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */"}, {"sha": "9dc794d6a80fdf27ee393f4b132fdd88a457f9b1", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-vmovdqa64-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7123217afb33d4a2860f552ad778a819cc8dea5e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vmovdqa64-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7123217afb33d4a2860f552ad778a819cc8dea5e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vmovdqa64-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vmovdqa64-1.c?ref=7123217afb33d4a2860f552ad778a819cc8dea5e", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx512vl -O2\" } */\n-/* { dg-final { scan-assembler-times \"vmovdqa64\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n\\]*%ymm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vmovdqa64\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vmovdqa64|vpblendmq)\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n\\]*%ymm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"(?:vmovdqa64|vpblendmq)\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmovdqa64\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n\\]*%ymm\\[0-9\\]+\\{%k\\[1-7\\]\\}\\{z\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmovdqa64\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\{%k\\[1-7\\]\\}\\{z\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmovdqa\\[ \\\\t\\]+\\\\(\\[^\\n\\]*%ymm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\" 1 { target nonpic } } } */"}]}