{"sha": "7471a1f03c040550e7295c80df4deac080d49ffa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ3MWExZjAzYzA0MDU1MGU3Mjk1YzgwZGY0ZGVhYzA4MGQ0OWZmYQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2001-04-20T09:36:34Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2001-04-20T09:36:34Z"}, "message": "i386.c (ix86_expand_int_movcc, [...]): Sign-extend CONST_INTs.\n\n* config/i386/i386.c (ix86_expand_int_movcc,\nix86_expand_strlensi_unroll_1): Sign-extend CONST_INTs.\n\nFrom-SVN: r41454", "tree": {"sha": "0856314f6255a283348590436e4d4d414a5450da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0856314f6255a283348590436e4d4d414a5450da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7471a1f03c040550e7295c80df4deac080d49ffa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7471a1f03c040550e7295c80df4deac080d49ffa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7471a1f03c040550e7295c80df4deac080d49ffa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7471a1f03c040550e7295c80df4deac080d49ffa/comments", "author": null, "committer": null, "parents": [{"sha": "99ffe40fe73240b249996d42ab0a2ba31e154e2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99ffe40fe73240b249996d42ab0a2ba31e154e2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99ffe40fe73240b249996d42ab0a2ba31e154e2d"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "9a3e3127135e16b5204eae31e7aefd0cf1441287", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7471a1f03c040550e7295c80df4deac080d49ffa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7471a1f03c040550e7295c80df4deac080d49ffa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7471a1f03c040550e7295c80df4deac080d49ffa", "patch": "@@ -1,3 +1,8 @@\n+2001-04-20  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* config/i386/i386.c (ix86_expand_int_movcc,\n+\tix86_expand_strlensi_unroll_1): Sign-extend CONST_INTs.\n+\n 2001-04-20  Geoff Keating  <geoffk@redhat.com>\n \n \t* config/rs6000/rs6000.md (ctrsi_internal1, ctrsi_internal2,"}, {"sha": "163b36e5f4d0790e1d3bdcfff79f915bee49f870", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7471a1f03c040550e7295c80df4deac080d49ffa/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7471a1f03c040550e7295c80df4deac080d49ffa/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=7471a1f03c040550e7295c80df4deac080d49ffa", "patch": "@@ -6316,7 +6316,8 @@ ix86_expand_int_movcc (operands)\n \t       *\n \t       * Size 8 - 11.\n \t       */\n-\t      emit_insn (gen_andsi3 (out, out, GEN_INT (cf - ct)));\n+\t      emit_insn (gen_andsi3 (out, out, GEN_INT (trunc_int_for_mode\n+\t\t\t\t\t\t\t(cf - ct, SImode))));\n \t      if (ct)\n \t        emit_insn (gen_addsi3 (out, out, GEN_INT (ct)));\n \t    }\n@@ -6473,7 +6474,8 @@ ix86_expand_int_movcc (operands)\n \t\t\t\t ix86_compare_op1, VOIDmode, 0, 1);\n \n \t  emit_insn (gen_addsi3 (out, out, constm1_rtx));\n-\t  emit_insn (gen_andsi3 (out, out, GEN_INT (cf-ct)));\n+\t  emit_insn (gen_andsi3 (out, out, GEN_INT (trunc_int_for_mode\n+\t\t\t\t\t\t    (cf - ct, SImode))));\n \t  if (ct != 0)\n \t    emit_insn (gen_addsi3 (out, out, GEN_INT (ct)));\n \t  if (out != operands[0])\n@@ -7886,7 +7888,9 @@ ix86_expand_strlensi_unroll_1 (out, align_rtx)\n   emit_insn (gen_addsi3 (tmpreg, scratch, GEN_INT (-0x01010101)));\n   emit_insn (gen_one_cmplsi2 (scratch, scratch));\n   emit_insn (gen_andsi3 (tmpreg, tmpreg, scratch));\n-  emit_insn (gen_andsi3 (tmpreg, tmpreg, GEN_INT (0x80808080)));\n+  emit_insn (gen_andsi3 (tmpreg, tmpreg,\n+\t\t\t GEN_INT (trunc_int_for_mode\n+\t\t\t\t  (0x80808080, SImode))));\n   emit_cmp_and_jump_insns (tmpreg, const0_rtx, EQ, 0,\n \t\t\t   SImode, 1, 0, align_4_label);\n "}]}