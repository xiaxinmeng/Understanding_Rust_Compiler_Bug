{"sha": "1395ea397e41bfeadbda2f2a9b5f39513bda2844", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTM5NWVhMzk3ZTQxYmZlYWRiZGEyZjJhOWI1ZjM5NTEzYmRhMjg0NA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2006-09-11T21:34:06Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2006-09-11T21:34:06Z"}, "message": "re PR target/13685 (Building simple test application with -march=pentium3 -Os gives SIGSEGV (unaligned sse instruction))\n\ngcc/\n\n2006-09-11  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/13685\n\tPR target/27537\n\tPR target/28621\n\t* config/i386/i386.c (override_options): Always default to 16\n\tbyte stack boundary.\n\ngcc/testsuite/\n\n2006-09-11  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/13685\n\t* gcc.target/i386/pr13685.c: New test.\n\nFrom-SVN: r116860", "tree": {"sha": "bf69a11670b8b23ee210691e7fa78fd6f6e0a043", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf69a11670b8b23ee210691e7fa78fd6f6e0a043"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1395ea397e41bfeadbda2f2a9b5f39513bda2844", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1395ea397e41bfeadbda2f2a9b5f39513bda2844", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1395ea397e41bfeadbda2f2a9b5f39513bda2844", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1395ea397e41bfeadbda2f2a9b5f39513bda2844/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d30673031579bf894eb1dc702ea892e0a32c0741", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d30673031579bf894eb1dc702ea892e0a32c0741", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d30673031579bf894eb1dc702ea892e0a32c0741"}], "stats": {"total": 62, "additions": 56, "deletions": 6}, "files": [{"sha": "d2b3658fef7d7ed6d1c5dbfbfd641efe9f01c4e9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1395ea397e41bfeadbda2f2a9b5f39513bda2844/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1395ea397e41bfeadbda2f2a9b5f39513bda2844/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1395ea397e41bfeadbda2f2a9b5f39513bda2844", "patch": "@@ -1,3 +1,11 @@\n+2006-09-11  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/13685\n+\tPR target/27537\n+\tPR target/28621\n+\t* config/i386/i386.c (override_options): Always default to 16\n+\tbyte stack boundary.\n+\n 2006-09-11  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR target/28672"}, {"sha": "daba68d2d2de329943f5ab2eb25afb8371e7fa14", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1395ea397e41bfeadbda2f2a9b5f39513bda2844/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1395ea397e41bfeadbda2f2a9b5f39513bda2844/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=1395ea397e41bfeadbda2f2a9b5f39513bda2844", "patch": "@@ -1899,12 +1899,10 @@ override_options (void)\n     }\n \n   /* Validate -mpreferred-stack-boundary= value, or provide default.\n-     The default of 128 bits is for Pentium III's SSE __m128, but we\n-     don't want additional code to keep the stack aligned when\n-     optimizing for code size.  */\n-  ix86_preferred_stack_boundary\n-    = (TARGET_64BIT || TARGET_MACHO || TARGET_SSE || !optimize_size) \n-       ? 128 : 32;\n+     The default of 128 bits is for Pentium III's SSE __m128.  We can't\n+     change it because of optimize_size.  Otherwise, we can't mix object\n+     files compiled with -Os and -On.  */\n+  ix86_preferred_stack_boundary = 128;\n   if (ix86_preferred_stack_boundary_string)\n     {\n       i = atoi (ix86_preferred_stack_boundary_string);"}, {"sha": "72711d67f34914f17031d83ce0efe98297b88401", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1395ea397e41bfeadbda2f2a9b5f39513bda2844/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1395ea397e41bfeadbda2f2a9b5f39513bda2844/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1395ea397e41bfeadbda2f2a9b5f39513bda2844", "patch": "@@ -1,3 +1,8 @@\n+2006-09-11  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/13685\n+\t* gcc.target/i386/pr13685.c: New test.\n+\n 2006-09-11  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* gcc.dg/pr28726.c: New test."}, {"sha": "7c4446abf950f7cc38ff5611ff2e4919a111c049", "filename": "gcc/testsuite/gcc.target/i386/pr13685.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1395ea397e41bfeadbda2f2a9b5f39513bda2844/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr13685.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1395ea397e41bfeadbda2f2a9b5f39513bda2844/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr13685.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr13685.c?ref=1395ea397e41bfeadbda2f2a9b5f39513bda2844", "patch": "@@ -0,0 +1,39 @@\n+/* PR target/13685 */\n+/* { dg-do run } */\n+/* { dg-options \"-Os -msse\" } */\n+#include <stdlib.h>\n+#include <stdio.h>\n+#include <xmmintrin.h>\n+#include \"../../gcc.dg/i386-cpuid.h\"\n+\n+void foo (__m128 *, __m64 *, int);\n+\n+__m128 xmm0 = { 0 };\n+__m64 mm0 = { 0 };\n+\n+int\n+main ()\n+{\n+  unsigned long cpu_facilities = i386_cpuid ();\n+  \n+  if ((cpu_facilities & (bit_MMX | bit_SSE | bit_CMOV))\n+      != (bit_MMX | bit_SSE | bit_CMOV))\n+    /* If host has no SSE support, pass.  */\n+    return 0;\n+\n+  foo (&xmm0, &mm0, 4);\n+  return 0;\n+}\n+\n+void\n+foo (__m128 *dst, __m64 *src, int n)\n+{\n+  __m128 xmm0 = { 0 };\n+  while (n > 64)\n+    {\n+      puts (\"\");\n+      xmm0 = _mm_cvtpi32_ps (xmm0, *src);\n+      *dst = xmm0;\n+      n--;\n+    }\n+}"}]}