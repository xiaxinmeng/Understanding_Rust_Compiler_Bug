{"sha": "cb2bbc673b91b08de12c199259368a05484dbba2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2IyYmJjNjczYjkxYjA4ZGUxMmMxOTkyNTkzNjhhMDU0ODRkYmJhMg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2006-02-07T21:57:38Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2006-02-07T21:57:38Z"}, "message": "libgomp-dg.exp (libgomp_init): Compute multilib-related part of LD_LIBRARY_PATH manually.\n\n\t* testsuite/lib/libgomp-dg.exp (libgomp_init): Compute multilib-related\n\tpart of LD_LIBRARY_PATH manually.\n\nFrom-SVN: r110720", "tree": {"sha": "41f9669cb954bd27ce14801617ee284d8a90cac5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41f9669cb954bd27ce14801617ee284d8a90cac5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb2bbc673b91b08de12c199259368a05484dbba2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb2bbc673b91b08de12c199259368a05484dbba2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb2bbc673b91b08de12c199259368a05484dbba2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb2bbc673b91b08de12c199259368a05484dbba2/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7127d9c7d139e90cb58511b31c5a4a617bce3eea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7127d9c7d139e90cb58511b31c5a4a617bce3eea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7127d9c7d139e90cb58511b31c5a4a617bce3eea"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "5a3878e2d2188cc83bc0684de75ee21189b30963", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb2bbc673b91b08de12c199259368a05484dbba2/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb2bbc673b91b08de12c199259368a05484dbba2/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=cb2bbc673b91b08de12c199259368a05484dbba2", "patch": "@@ -1,3 +1,8 @@\n+2006-02-07  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* testsuite/lib/libgomp-dg.exp (libgomp_init): Compute multilib related\n+\tpart of LD_LIBRARY_PATH manually.\n+\n 2006-02-03  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR libgomp/25852"}, {"sha": "d064a8012c8abfd3307bf2acfc0bdfb19c62f36c", "filename": "libgomp/testsuite/lib/libgomp-dg.exp", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb2bbc673b91b08de12c199259368a05484dbba2/libgomp%2Ftestsuite%2Flib%2Flibgomp-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb2bbc673b91b08de12c199259368a05484dbba2/libgomp%2Ftestsuite%2Flib%2Flibgomp-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flib%2Flibgomp-dg.exp?ref=cb2bbc673b91b08de12c199259368a05484dbba2", "patch": "@@ -94,14 +94,29 @@ proc libgomp_init { args } {\n     # Compute what needs to be put into LD_LIBRARY_PATH\n     set ld_library_path \".:${blddir}/.libs\"\n \n-    if {$gccdir != \"\"} {\n-\tappend ld_library_path \":${gccdir}\"\n-    }\n-\n     if { [info exists lang_test_file] && [file exists \"${blddir}/\"] } {\n \tappend ld_library_path \":${blddir}/${lang_library_path}\"\n     }\n-    append ld_library_path [gcc-set-multilib-library-path $GCC_UNDER_TEST]\n+\n+    # Compute what needs to be added to the existing LD_LIBRARY_PATH.\n+    if {$gccdir != \"\"} {\n+\tappend ld_library_path \":${gccdir}\"\n+\tset compiler [lindex $GCC_UNDER_TEST 0]\n+\n+\tif { [is_remote host] == 0 && [which $compiler] != 0 } {\n+\t  foreach i \"[exec $compiler --print-multi-lib]\" {\n+\t    set mldir \"\"\n+\t    regexp -- \"\\[a-z0-9=/\\.-\\]*;\" $i mldir\n+\t    set mldir [string trimright $mldir \"\\;@\"]\n+\t    if { \"$mldir\" == \".\" } {\n+\t      continue\n+\t    }\n+\t    if { [llength [glob -nocomplain ${gccdir}/${mldir}/libgcc_s*.so.*]] >= 1 } {\n+\t      append ld_library_path \":${gccdir}/${mldir}\"\n+\t    }\n+\t  }\n+\t}\n+    }\n     set_ld_library_path_env_vars\n \n     set ALWAYS_CFLAGS \"\""}]}