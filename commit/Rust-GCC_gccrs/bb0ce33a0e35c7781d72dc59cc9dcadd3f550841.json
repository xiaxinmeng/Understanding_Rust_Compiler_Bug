{"sha": "bb0ce33a0e35c7781d72dc59cc9dcadd3f550841", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmIwY2UzM2EwZTM1Yzc3ODFkNzJkYzU5Y2M5ZGNhZGQzZjU1MDg0MQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-04-02T00:29:49Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-04-02T00:29:49Z"}, "message": "libgo: Sort test output in libgo.sum and libgo.log.\n\nFrom-SVN: r171868", "tree": {"sha": "0ef580ab4095f047454ef652c94030fdeea3f1df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ef580ab4095f047454ef652c94030fdeea3f1df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb0ce33a0e35c7781d72dc59cc9dcadd3f550841", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb0ce33a0e35c7781d72dc59cc9dcadd3f550841", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb0ce33a0e35c7781d72dc59cc9dcadd3f550841", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb0ce33a0e35c7781d72dc59cc9dcadd3f550841/comments", "author": null, "committer": null, "parents": [{"sha": "c9181fc867b6e69a4b253d57cee488e19f857b41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9181fc867b6e69a4b253d57cee488e19f857b41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9181fc867b6e69a4b253d57cee488e19f857b41"}], "stats": {"total": 647, "additions": 349, "deletions": 298}, "files": [{"sha": "9d2c8efd54d3bf0098a39e9d0f33f485a03a2c81", "filename": "libgo/Makefile.am", "status": "modified", "additions": 174, "deletions": 149, "changes": 323, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb0ce33a0e35c7781d72dc59cc9dcadd3f550841/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb0ce33a0e35c7781d72dc59cc9dcadd3f550841/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=bb0ce33a0e35c7781d72dc59cc9dcadd3f550841", "patch": "@@ -1547,32 +1547,42 @@ GOTESTFLAGS =\n \n # Check a package.\n CHECK = \\\n-\t@GC=\"$(GOC) -L `${PWD_COMMAND}` -L `${PWD_COMMAND}`/.libs -Wl,-R,`${PWD_COMMAND}`/.libs\"; \\\n+\tGC=\"$(GOC) -L `${PWD_COMMAND}` -L `${PWD_COMMAND}`/.libs -Wl,-R,`${PWD_COMMAND}`/.libs\"; \\\n \texport GC; \\\n \tRUNTESTFLAGS=\"$(RUNTESTFLAGS)\"; \\\n \texport RUNTESTFLAGS; \\\n \tMAKE=\"$(MAKE)\"; \\\n \texport MAKE; \\\n-\trm -f $@-testlog; \\\n+\trm -f $@-testsum $@-testlog; \\\n \tprefix=`if test \"$(@D)\" = \"regexp\"; then echo regexp-test; else dirname $(@D); fi`; \\\n \ttest \"$${prefix}\" != \".\" || prefix=\"$(@D)\"; \\\n \tif test \"$(use_dejagnu)\" = \"yes\"; then \\\n \t  $(SHELL) $(srcdir)/testsuite/gotest --dejagnu=yes --basedir=$(srcdir) --srcdir=$(srcdir)/go/$(@D) --prefix=\"libgo_$${prefix}\" --pkgfiles=\"$(go_$(subst /,_,$(@D))_files)\" --testname=\"$(@D)\" $(GOTESTFLAGS); \\\n \telse \\\n \t  if $(SHELL) $(srcdir)/testsuite/gotest --basedir=$(srcdir) --srcdir=$(srcdir)/go/$(@D) --prefix=\"libgo_$${prefix}\" --pkgfiles=\"$(go_$(subst /,_,$(@D))_files)\" $(GOTESTFLAGS) >>$@-testlog 2>&1; then \\\n-\t    echo \"PASS: $(@D)\"; \\\n-\t    echo \"PASS: $(@D)\" >> libgo.sum; \\\n \t    echo \"PASS: $(@D)\" >> $@-testlog; \\\n-\t    cat $@-testlog >> libgo.log; \\\n+\t    echo \"PASS: $(@D)\"; \\\n+\t    echo \"PASS: $(@D)\" > $@-testsum; \\\n \t  else \\\n \t    echo \"FAIL: $(@D)\" >> $@-testlog; \\\n \t    cat $@-testlog; \\\n-\t    echo \"FAIL: $(@D)\" >> libgo.sum; \\\n-\t    cat $@-testlog >> libgo.log; \\\n+\t    echo \"FAIL: $(@D)\" > $@-testsum; \\\n \t    exit 1; \\\n \t  fi; \\\n \tfi\n \n+# Check a package that is only tested if GCCGO_RUN_ALL_TESTS is set.\n+CHECK_ON_REQUEST = \\\n+\tif test \"$$GCCGO_RUN_ALL_TESTS\" != \"\"; then \\\n+\t  $(CHECK); \\\n+\telse \\\n+\t  rm -f $@-testsum $@-testlog; \\\n+\t  echo \"Set GCCGO_RUN_ALL_TESTS in environment to run $(@D) test\" > $@-testlog; \\\n+\t  echo \"UNTESTED: $(@D)\" >> $@-testlog; \\\n+\t  echo \"UNTESTED: $(@D)\"; \\\n+\t  echo \"UNTESTED: $(@D)\" > $@-testsum; \\\n+\tfi\n+\n # Build all packages before checking any.\n CHECK_DEPS = libgo.la libgobegin.a \\\n \t$(toolexeclibgo_DATA) \\\n@@ -1603,93 +1613,93 @@ asn1/asn1.lo: $(go_asn1_files) bytes.gox fmt.gox io.gox os.gox reflect.gox \\\n \t\tstrconv.gox strings.gox time.gox\n \t$(BUILDPACKAGE)\n asn1/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: asn1/check\n \n big/big.lo: $(go_big_files) fmt.gox rand.gox strings.gox os.gox\n \t$(BUILDPACKAGE)\n big/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: big/check\n \n bufio/bufio.lo: $(go_bufio_files) bytes.gox io.gox os.gox strconv.gox utf8.gox\n \t$(BUILDPACKAGE)\n bufio/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: bufio/check\n \n bytes/bytes.lo: $(go_bytes_files) io.gox os.gox unicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n bytes/index.lo: $(go_bytes_c_files) bytes/bytes.lo\n \t$(LTCOMPILE) -c -o bytes/index.lo $(srcdir)/go/bytes/indexbyte.c\n bytes/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: bytes/check\n \n cmath/cmath.lo: $(go_cmath_files) math.gox\n \t$(BUILDPACKAGE)\n cmath/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: cmath/check\n \n crypto/crypto.lo: $(go_crypto_files) hash.gox\n \t$(BUILDPACKAGE)\n crypto/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/check\n \n ebnf/ebnf.lo: $(go_ebnf_files) container/vector.gox go/scanner.gox \\\n \t\tgo/token.gox os.gox strconv.gox unicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n ebnf/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: ebnf/check\n \n exec/exec.lo: $(go_exec_files) os.gox strconv.gox strings.gox\n \t$(BUILDPACKAGE)\n exec/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: exec/check\n \n expvar/expvar.lo: $(go_expvar_files) bytes.gox fmt.gox http.gox json.gox \\\n \t\tlog.gox os.gox runtime.gox strconv.gox sync.gox\n \t$(BUILDPACKAGE)\n expvar/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: expvar/check\n \n flag/flag.lo: $(go_flag_files) fmt.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n flag/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: flag/check\n \n fmt/fmt.lo: $(go_fmt_files) bytes.gox io.gox math.gox os.gox reflect.gox \\\n \t\tstrconv.gox strings.gox unicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n fmt/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: fmt/check\n \n gob/gob.lo: $(go_gob_files) bufio.gox bytes.gox fmt.gox io.gox math.gox \\\n \t\tos.gox reflect.gox runtime.gox strings.gox sync.gox \\\n \t\tunicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n gob/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: gob/check\n \n hash/hash.lo: $(go_hash_files) io.gox\n \t$(BUILDPACKAGE)\n hash/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: hash/check\n \n html/html.lo: $(go_html_files) bytes.gox io.gox os.gox strconv.gox strings.gox \\\n \t\tutf8.gox\n \t$(BUILDPACKAGE)\n html/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: html/check\n \n http/http.lo: $(go_http_files) bufio.gox bytes.gox container/vector.gox \\\n@@ -1699,19 +1709,19 @@ http/http.lo: $(go_http_files) bufio.gox bytes.gox container/vector.gox \\\n \t\tsort.gox strconv.gox strings.gox sync.gox time.gox utf8.gox\n \t$(BUILDPACKAGE)\n http/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: http/check\n \n image/image.lo: $(go_image_files) bufio.gox io.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n image/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: image/check\n \n io/io.lo: $(go_io_files) os.gox sync.gox\n \t$(BUILDPACKAGE)\n io/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: io/check\n \n json/json.lo: $(go_json_files) bytes.gox container/vector.gox \\\n@@ -1720,194 +1730,194 @@ json/json.lo: $(go_json_files) bytes.gox container/vector.gox \\\n \t\tutf16.gox utf8.gox\n \t$(BUILDPACKAGE)\n json/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: json/check\n \n log/log.lo: $(go_log_files) bytes.gox fmt.gox io.gox runtime.gox os.gox \\\n \t\tsync.gox time.gox\n \t$(BUILDPACKAGE)\n log/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: log/check\n \n math/math.lo: $(go_math_files)\n \t$(BUILDPACKAGE)\n math/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: math/check\n \n mime/mime.lo: $(go_mime_files) bufio.gox bytes.gox os.gox strings.gox \\\n \t\tsync.gox unicode.gox\n \t$(BUILDPACKAGE)\n mime/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: mime/check\n \n net/net.lo: $(go_net_files) bytes.gox fmt.gox io.gox os.gox rand.gox \\\n \t\treflect.gox strconv.gox strings.gox sync.gox syscall.gox \\\n \t\ttime.gox\n \t$(BUILDPACKAGE)\n net/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK_ON_REQUEST)\n .PHONY: net/check\n \n netchan/netchan.lo: $(go_netchan_files) gob.gox io.gox log.gox net.gox os.gox \\\n \t\treflect.gox strconv.gox sync.gox time.gox\n \t$(BUILDPACKAGE)\n netchan/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: netchan/check\n \n os/os.lo: $(go_os_files) runtime.gox sync.gox syscall.gox\n \t$(BUILDPACKAGE)\n os/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: os/check\n \n patch/patch.lo: $(go_patch_files) bytes.gox compress/zlib.gox \\\n \t\tcrypto/sha1.gox encoding/git85.gox fmt.gox io.gox os.gox \\\n \t\tpath.gox strings.gox\n \t$(BUILDPACKAGE)\n patch/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: patch/check\n \n path/path.lo: $(go_path_files) os.gox strings.gox utf8.gox\n \t$(BUILDPACKAGE)\n path/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: path/check\n \n rand/rand.lo: $(go_rand_files) math.gox sync.gox\n \t$(BUILDPACKAGE)\n rand/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: rand/check\n \n reflect/reflect.lo: $(go_reflect_files) math.gox runtime.gox strconv.gox \\\n \t\tsync.gox\n \t$(BUILDPACKAGE)\n reflect/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: reflect/check\n \n regexp/regexp.lo: $(go_regexp_files) bytes.gox io.gox os.gox strings.gox \\\n \t\tutf8.gox\n \t$(BUILDPACKAGE)\n regexp/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: regexp/check\n \n rpc/rpc.lo: $(go_rpc_files) bufio.gox fmt.gox gob.gox http.gox io.gox log.gox \\\n \t\tnet.gox os.gox reflect.gox sort.gox strings.gox strconv.gox \\\n \t\tsync.gox template.gox unicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n rpc/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: rpc/check\n \n runtime/runtime.lo: $(go_runtime_files)\n \t$(BUILDPACKAGE)\n runtime/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: runtime/check\n \n scanner/scanner.lo: $(go_scanner_files) bytes.gox fmt.gox io.gox os.gox \\\n \t\tunicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n scanner/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: scanner/check\n \n smtp/smtp.lo: $(go_smtp_files) crypto/tls.gox encoding/base64.gox io.gox \\\n \t\tnet.gox net/textproto.gox os.gox strings.gox\n \t$(BUILDPACKAGE)\n smtp/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: smtp/check\n \n sort/sort.lo: $(go_sort_files)\n \t$(BUILDPACKAGE)\n sort/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: sort/check\n \n strconv/strconv.lo: $(go_strconv_files) bytes.gox math.gox os.gox strings.gox \\\n \t\tunicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n strconv/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: strconv/check\n \n strings/strings.lo: $(go_strings_files) os.gox unicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n strings/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: strings/check\n \n sync/sync.lo: $(go_sync_files) runtime.gox sync/atomic.gox\n \t$(BUILDPACKAGE)\n sync/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: sync/check\n \n syslog/syslog.lo: $(go_syslog_files) fmt.gox log.gox net.gox os.gox syscall.gox\n \t$(BUILDPACKAGE)\n syslog/syslog_c.lo: $(go_syslog_c_files) syslog/syslog.lo\n \t$(LTCOMPILE) -c -o $@ $(srcdir)/go/syslog/syslog_c.c\n syslog/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK_ON_REQUEST)\n .PHONY: syslog/check\n \n tabwriter/tabwriter.lo: $(go_tabwriter_files) bytes.gox io.gox os.gox utf8.gox\n \t$(BUILDPACKAGE)\n tabwriter/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: tabwriter/check\n \n template/template.lo: $(go_template_files) bytes.gox fmt.gox io.gox os.gox \\\n \t\treflect.gox runtime.gox strings.gox container/vector.gox\n \t$(BUILDPACKAGE)\n template/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: template/check\n \n testing/testing.lo: $(go_testing_files) flag.gox fmt.gox os.gox regexp.gox \\\n \t\truntime.gox runtime/pprof.gox time.gox\n \t$(BUILDPACKAGE)\n testing/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: testing/check\n \n time/time.lo: $(go_time_files) bytes.gox container/heap.gox io/ioutil.gox \\\n \t\tos.gox strconv.gox sync.gox syscall.gox\n \t$(BUILDPACKAGE)\n time/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: time/check\n \n try/try.lo: $(go_try_files) fmt.gox io.gox os.gox reflect.gox unicode.gox\n \t$(BUILDPACKAGE)\n try/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: try/check\n \n unicode/unicode.lo: $(go_unicode_files)\n \t$(BUILDPACKAGE)\n unicode/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: unicode/check\n \n utf16/utf16.lo: $(go_utf16_files) unicode.gox\n \t$(BUILDPACKAGE)\n utf16/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: utf16/check\n \n utf8/utf8.lo: $(go_utf8_files) unicode.gox\n \t$(BUILDPACKAGE)\n utf8/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: utf8/check\n \n websocket/websocket.lo: $(go_websocket_files) bufio.gox bytes.gox \\\n@@ -1916,22 +1926,22 @@ websocket/websocket.lo: $(go_websocket_files) bufio.gox bytes.gox \\\n \t\trand.gox strings.gox\n \t$(BUILDPACKAGE)\n websocket/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: websocket/check\n \n xml/xml.lo: $(go_xml_files) bufio.gox bytes.gox fmt.gox io.gox os.gox \\\n \t\treflect.gox strconv.gox strings.gox unicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n xml/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: xml/check\n \n archive/tar.lo: $(go_archive_tar_files) bytes.gox io.gox os.gox strconv.gox \\\n \t\tstrings.gox\n \t$(BUILDPACKAGE)\n archive/tar/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) archive/tar\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: archive/tar/check\n \n archive/zip.lo: $(go_archive_zip_files) bufio.gox bytes.gox \\\n@@ -1940,160 +1950,160 @@ archive/zip.lo: $(go_archive_zip_files) bufio.gox bytes.gox \\\n \t$(BUILDPACKAGE)\n archive/zip/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) archive/zip\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: archive/zip/check\n \n compress/bzip2.lo: $(go_compress_bzip2_files) bufio.gox io.gox os.gox sort.gox\n \t$(BUILDPACKAGE)\n compress/bzip2/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) compress/bzip2\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: compress/bzip2/check\n \n compress/flate.lo: $(go_compress_flate_files) bufio.gox io.gox math.gox \\\n \t\tos.gox sort.gox strconv.gox\n \t$(BUILDPACKAGE)\n compress/flate/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) compress/flate\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: compress/flate/check\n \n compress/gzip.lo: $(go_compress_gzip_files) bufio.gox compress/flate.gox \\\n \t\thash.gox hash/crc32.gox io.gox os.gox\n \t$(BUILDPACKAGE)\n compress/gzip/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) compress/gzip\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: compress/gzip/check\n \n compress/lzw.lo: $(go_compress_lzw_files) bufio.gox fmt.gox io.gox os.gox\n \t$(BUILDPACKAGE)\n compress/lzw/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) compress/lzw\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: compress/lzw/check\n \n compress/zlib.lo: $(go_compress_zlib_files) bufio.gox compress/flate.gox \\\n \t\thash.gox hash/adler32.gox io.gox os.gox\n \t$(BUILDPACKAGE)\n compress/zlib/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) compress/zlib\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: compress/zlib/check\n \n container/heap.lo: $(go_container_heap_files) sort.gox\n \t$(BUILDPACKAGE)\n container/heap/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) container/heap\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: container/heap/check\n \n container/list.lo: $(go_container_list_files)\n \t$(BUILDPACKAGE)\n container/list/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) container/list\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: container/list/check\n \n container/ring.lo: $(go_container_ring_files)\n \t$(BUILDPACKAGE)\n container/ring/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) container/ring\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: container/ring/check\n \n container/vector.lo: $(go_container_vector_files)\n \t$(BUILDPACKAGE)\n container/vector/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) container/vector\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: container/vector/check\n \n crypto/aes.lo: $(go_crypto_aes_files) os.gox strconv.gox\n \t$(BUILDPACKAGE)\n crypto/aes/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/aes\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/aes/check\n \n crypto/block.lo: $(go_crypto_block_files) fmt.gox io.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n crypto/block/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/block\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/block/check\n \n crypto/blowfish.lo: $(go_crypto_blowfish_files) os.gox strconv.gox\n \t$(BUILDPACKAGE)\n crypto/blowfish/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/blowfish\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/blowfish/check\n \n crypto/cast5.lo: $(go_crypto_cast5_files) os.gox\n \t$(BUILDPACKAGE)\n crypto/cast5/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/cast5\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/cast5/check\n \n crypto/cipher.lo: $(go_crypto_cipher_files) io.gox os.gox\n \t$(BUILDPACKAGE)\n crypto/cipher/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/cipher\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/cipher/check\n \n crypto/dsa.lo: $(go_crypto_dsa_files) big.gox io.gox os.gox\n \t$(BUILDPACKAGE)\n crypto/dsa/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/dsa\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/dsa/check\n \n crypto/ecdsa.lo: $(go_crypto_ecdsa_files) big.gox crypto/elliptic.gox io.gox \\\n \t\tos.gox\n \t$(BUILDPACKAGE)\n crypto/ecdsa/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/ecdsa\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/ecdsa/check\n \n crypto/elliptic.lo: $(go_crypto_elliptic_files) big.gox io.gox os.gox sync.gox\n \t$(BUILDPACKAGE)\n crypto/elliptic/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/elliptic\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/elliptic/check\n \n crypto/hmac.lo: $(go_crypto_hmac_files) crypto/md5.gox crypto/sha1.gox \\\n \t\tcrypto/sha256.gox hash.gox os.gox\n \t$(BUILDPACKAGE)\n crypto/hmac/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/hmac\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/hmac/check\n \n crypto/md4.lo: $(go_crypto_md4_files) crypto.gox hash.gox os.gox\n \t$(BUILDPACKAGE)\n crypto/md4/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/md4\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/md4/check\n \n crypto/md5.lo: $(go_crypto_md5_files) crypto.gox hash.gox os.gox\n \t$(BUILDPACKAGE)\n crypto/md5/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/md5\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/md5/check\n \n crypto/ocsp.lo: $(go_crypto_ocsp_files) asn1.gox crypto.gox crypto/rsa.gox \\\n \t\tcrypto/sha1.gox crypto/x509.gox os.gox time.gox\n \t$(BUILDPACKAGE)\n crypto/ocsp/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/ocsp\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/ocsp/check\n \n crypto/openpgp.lo: $(go_crypto_openpgp_files) crypto.gox crypto/dsa.gox \\\n@@ -2103,65 +2113,65 @@ crypto/openpgp.lo: $(go_crypto_openpgp_files) crypto.gox crypto/dsa.gox \\\n \t$(BUILDPACKAGE)\n crypto/openpgp/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/openpgp\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/openpgp/check\n \n crypto/rand.lo: $(go_crypto_rand_files) bufio.gox crypto/aes.gox io.gox \\\n \t\tos.gox sync.gox time.gox\n \t$(BUILDPACKAGE)\n crypto/rand/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/rand\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/rand/check\n \n crypto/rc4.lo: $(go_crypto_rc4_files) os.gox strconv.gox\n \t$(BUILDPACKAGE)\n crypto/rc4/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/rc4\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/rc4/check\n \n crypto/ripemd160.lo: $(go_crypto_ripemd160_files) crypto.gox hash.gox os.gox\n \t$(BUILDPACKAGE)\n crypto/ripemd160/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/ripemd160\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/ripemd160/check\n \n crypto/rsa.lo: $(go_crypto_rsa_files) big.gox crypto.gox crypto/sha1.gox \\\n \t\tcrypto/subtle.gox encoding/hex.gox hash.gox io.gox os.gox\n \t$(BUILDPACKAGE)\n crypto/rsa/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/rsa\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/rsa/check\n \n crypto/sha1.lo: $(go_crypto_sha1_files) crypto.gox hash.gox os.gox\n \t$(BUILDPACKAGE)\n crypto/sha1/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/sha1\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/sha1/check\n \n crypto/sha256.lo: $(go_crypto_sha256_files) crypto.gox hash.gox os.gox\n \t$(BUILDPACKAGE)\n crypto/sha256/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/sha256\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/sha256/check\n \n crypto/sha512.lo: $(go_crypto_sha512_files) crypto.gox hash.gox os.gox\n \t$(BUILDPACKAGE)\n crypto/sha512/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/sha512\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/sha512/check\n \n crypto/subtle.lo: $(go_crypto_subtle_files)\n \t$(BUILDPACKAGE)\n crypto/subtle/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/subtle\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/subtle/check\n \n crypto/tls.lo: $(go_crypto_tls_files) big.gox bufio.gox bytes.gox \\\n@@ -2174,14 +2184,14 @@ crypto/tls.lo: $(go_crypto_tls_files) big.gox bufio.gox bytes.gox \\\n \t$(BUILDPACKAGE)\n crypto/tls/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/tls\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/tls/check\n \n crypto/twofish.lo: $(go_crypto_twofish_files) os.gox strconv.gox\n \t$(BUILDPACKAGE)\n crypto/twofish/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/twofish\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/twofish/check\n \n crypto/x509.lo: $(go_crypto_x509_files) asn1.gox big.gox container/vector.gox \\\n@@ -2190,14 +2200,14 @@ crypto/x509.lo: $(go_crypto_x509_files) asn1.gox big.gox container/vector.gox \\\n \t$(BUILDPACKAGE)\n crypto/x509/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/x509\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/x509/check\n \n crypto/xtea.lo: $(go_crypto_xtea_files) os.gox strconv.gox\n \t$(BUILDPACKAGE)\n crypto/xtea/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/xtea\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/xtea/check\n \n crypto/openpgp/armor.lo: $(go_crypto_openpgp_armor_files) bytes.gox \\\n@@ -2206,14 +2216,14 @@ crypto/openpgp/armor.lo: $(go_crypto_openpgp_armor_files) bytes.gox \\\n \t$(BUILDPACKAGE)\n crypto/openpgp/armor/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/openpgp/armor\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/openpgp/armor/check\n \n crypto/openpgp/error.lo: $(go_crypto_openpgp_error_files) strconv.gox\n \t$(BUILDPACKAGE)\n crypto/openpgp/error/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/openpgp/error\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/openpgp/error/check\n \n crypto/openpgp/packet.lo: $(go_crypto_openpgp_packet_files) big.gox bytes.gox \\\n@@ -2226,7 +2236,7 @@ crypto/openpgp/packet.lo: $(go_crypto_openpgp_packet_files) big.gox bytes.gox \\\n \t$(BUILDPACKAGE)\n crypto/openpgp/packet/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/openpgp/packet\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/openpgp/packet/check\n \n crypto/openpgp/s2k.lo: $(go_crypto_openpgp_s2k_files) crypto.gox \\\n@@ -2236,46 +2246,46 @@ crypto/openpgp/s2k.lo: $(go_crypto_openpgp_s2k_files) crypto.gox \\\n \t$(BUILDPACKAGE)\n crypto/openpgp/s2k/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/openpgp/s2k\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/openpgp/s2k/check\n \n debug/dwarf.lo: $(go_debug_dwarf_files) encoding/binary.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n debug/dwarf/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/dwarf\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: debug/dwarf/check\n \n debug/elf.lo: $(go_debug_elf_files) bytes.gox debug/dwarf.gox \\\n \t\tencoding/binary.gox fmt.gox io.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n debug/elf/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/elf\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: debug/elf/check\n \n debug/gosym.lo: $(go_debug_gosym_files) encoding/binary.gox fmt.gox os.gox \\\n \t\tstrconv.gox strings.gox\n \t$(BUILDPACKAGE)\n debug/gosym/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/gosym\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: debug/gosym/check\n \n debug/macho.lo: $(go_debug_macho_files) bytes.gox debug/dwarf.gox \\\n \t\tencoding/binary.gox fmt.gox io.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n debug/macho/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/macho\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: debug/macho/check\n \n debug/pe.lo: $(go_debug_pe_files) debug/dwarf.gox \\\n \t\tencoding/binary.gox fmt.gox io.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n debug/pe/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/pe\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: debug/pe/check\n \n debug/proc.lo: $(go_debug_proc_files) container/vector.gox fmt.gox \\\n@@ -2284,65 +2294,65 @@ debug/proc.lo: $(go_debug_proc_files) container/vector.gox fmt.gox \\\n \t$(BUILDPACKAGE)\n debug/proc/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/proc\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: debug/proc/check\n \n encoding/ascii85.lo: $(go_encoding_ascii85_files) io.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n encoding/ascii85/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/ascii85\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: encoding/ascii85/check\n \n encoding/base32.lo: $(go_encoding_base32_files) io.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n encoding/base32/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/base32\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: encoding/base32/check\n \n encoding/base64.lo: $(go_encoding_base64_files) io.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n encoding/base64/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/base64\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: encoding/base64/check\n \n encoding/binary.lo: $(go_encoding_binary_files) io.gox math.gox os.gox \\\n \t\treflect.gox\n \t$(BUILDPACKAGE)\n encoding/binary/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/binary\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: encoding/binary/check\n \n encoding/git85.lo: $(go_encoding_git85_files) bytes.gox io.gox os.gox \\\n \t\tstrconv.gox\n \t$(BUILDPACKAGE)\n encoding/git85/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/git85\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: encoding/git85/check\n \n encoding/hex.lo: $(go_encoding_hex_files) os.gox strconv.gox\n \t$(BUILDPACKAGE)\n encoding/hex/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/hex\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: encoding/hex/check\n \n encoding/line.lo: $(go_encoding_line_files) io.gox os.gox\n \t$(BUILDPACKAGE)\n encoding/line/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/line\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: encoding/line/check\n \n encoding/pem.lo: $(go_encoding_pem_files) bytes.gox encoding/base64.gox\n \t$(BUILDPACKAGE)\n encoding/pem/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/pem\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: encoding/pem/check\n \n exp/datafmt.lo: $(go_exp_datafmt_files) bytes.gox container/vector.gox \\\n@@ -2351,14 +2361,14 @@ exp/datafmt.lo: $(go_exp_datafmt_files) bytes.gox container/vector.gox \\\n \t$(BUILDPACKAGE)\n exp/datafmt/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/datafmt\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: exp/datafmt/check\n \n exp/draw.lo: $(go_exp_draw_files) image.gox os.gox\n \t$(BUILDPACKAGE)\n exp/draw/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/draw\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: exp/draw/check\n \n exp/eval.lo: $(go_exp_eval_files) big.gox go/ast.gox go/parser.gox \\\n@@ -2367,23 +2377,23 @@ exp/eval.lo: $(go_exp_eval_files) big.gox go/ast.gox go/parser.gox \\\n \t$(BUILDPACKAGE)\n exp/eval/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/eval\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: exp/eval/check\n \n go/ast.lo: $(go_go_ast_files) bytes.gox fmt.gox go/scanner.gox go/token.gox \\\n \t\tio.gox os.gox reflect.gox unicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n go/ast/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/ast\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: go/ast/check\n \n go/doc.lo: $(go_go_doc_files) go/ast.gox go/token.gox io.gox regexp.gox \\\n \t\tsort.gox strings.gox template.gox\n \t$(BUILDPACKAGE)\n go/doc/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/doc\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: go/doc/check\n \n go/parser.lo: $(go_go_parser_files) bytes.gox fmt.gox go/ast.gox \\\n@@ -2392,7 +2402,7 @@ go/parser.lo: $(go_go_parser_files) bytes.gox fmt.gox go/ast.gox \\\n \t$(BUILDPACKAGE)\n go/parser/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/parser\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: go/parser/check\n \n go/printer.lo: $(go_go_printer_files) bytes.gox fmt.gox go/ast.gox \\\n@@ -2401,7 +2411,7 @@ go/printer.lo: $(go_go_printer_files) bytes.gox fmt.gox go/ast.gox \\\n \t$(BUILDPACKAGE)\n go/printer/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/printer\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: go/printer/check\n \n go/scanner.lo: $(go_go_scanner_files) bytes.gox container/vector.gox fmt.gox \\\n@@ -2410,50 +2420,50 @@ go/scanner.lo: $(go_go_scanner_files) bytes.gox container/vector.gox fmt.gox \\\n \t$(BUILDPACKAGE)\n go/scanner/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/scanner\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: go/scanner/check\n \n go/token.lo: $(go_go_token_files) fmt.gox strconv.gox\n \t$(BUILDPACKAGE)\n go/token/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/token\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: go/token/check\n \n go/typechecker.lo: $(go_go_typechecker_files) fmt.gox go/ast.gox go/token.gox \\\n \t\tgo/scanner.gox os.gox\n \t$(BUILDPACKAGE)\n go/typechecker/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/typechecker\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: go/typechecker/check\n \n hash/adler32.lo: $(go_hash_adler32_files) hash.gox os.gox\n \t$(BUILDPACKAGE)\n hash/adler32/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) hash/adler32\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: hash/adler32/check\n \n hash/crc32.lo: $(go_hash_crc32_files) hash.gox os.gox\n \t$(BUILDPACKAGE)\n hash/crc32/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) hash/crc32\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: hash/crc32/check\n \n hash/crc64.lo: $(go_hash_crc64_files) hash.gox os.gox\n \t$(BUILDPACKAGE)\n hash/crc64/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) hash/crc64\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: hash/crc64/check\n \n hash/fnv.lo: $(go_hash_fnv_files) encoding/binary.gox hash.gox os.gox\n \t$(BUILDPACKAGE)\n hash/fnv/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) hash/fnv\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: hash/fnv/check\n \n http/cgi.lo: $(go_http_cgi_files) bufio.gox bytes.gox encoding/line.gox \\\n@@ -2462,62 +2472,62 @@ http/cgi.lo: $(go_http_cgi_files) bufio.gox bytes.gox encoding/line.gox \\\n \t$(BUILDPACKAGE)\n http/cgi/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) http/cgi\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: http/cgi/check\n \n http/httptest.lo: $(go_http_httptest_files) bytes.gox fmt.gox http.gox \\\n \t\tnet.gox os.gox\n \t$(BUILDPACKAGE)\n http/httptest/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) http/httptest\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: http/httptest/check\n \n http/pprof.lo: $(go_http_pprof_files) bufio.gox fmt.gox http.gox os.gox \\\n \t\truntime.gox runtime/pprof.gox strconv.gox strings.gox\n \t$(BUILDPACKAGE)\n http/pprof/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) http/pprof\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: http/pprof/check\n \n image/jpeg.lo: $(go_image_jpeg_files) bufio.gox image.gox io.gox os.gox\n \t$(BUILDPACKAGE)\n image/jpeg/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) image/jpeg\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: image/jpeg/check\n \n image/png.lo: $(go_image_png_files) bufio.gox compress/zlib.gox fmt.gox \\\n \t\thash.gox hash/crc32.gox image.gox io.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n image/png/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) image/png\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: image/png/check\n \n index/suffixarray.lo: $(go_index_suffixarray_files) bytes.gox regexp.gox \\\n \t\tsort.gox\n \t$(BUILDPACKAGE)\n index/suffixarray/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) index/suffixarray\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: index/suffixarray/check\n \n io/ioutil.lo: $(go_io_ioutil_files) bytes.gox io.gox os.gox path/filepath.gox \\\n \t\tsort.gox strconv.gox\n \t$(BUILDPACKAGE)\n io/ioutil/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) io/ioutil\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: io/ioutil/check\n \n mime/multipart.lo: $(go_mime_multipart_files) bufio.gox bytes.gox io.gox \\\n \t\tmime.gox net/textproto.gox os.gox regexp.gox strings.gox\n \t$(BUILDPACKAGE)\n mime/multipart/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) mime/multipart\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: mime/multipart/check\n \n net/dict.lo: $(go_net_dict_files) container/vector.gox net/textproto.gox \\\n@@ -2530,21 +2540,21 @@ net/textproto.lo: $(go_net_textproto_files) bufio.gox bytes.gox \\\n \t$(BUILDPACKAGE)\n net/textproto/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) net/textproto\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: net/textproto/check\n \n os/inotify.lo: $(go_os_inotify_files) fmt.gox os.gox strings.gox syscall.gox\n \t$(BUILDPACKAGE)\n os/inotify/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) os/inotify\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: os/inotify/check\n \n os/signal.lo: $(go_os_signal_files) runtime.gox strconv.gox\n \t$(BUILDPACKAGE)\n os/signal/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) os/signal\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: os/signal/check\n \n unix.go: $(srcdir)/go/os/signal/mkunix.sh sysinfo.go\n@@ -2556,31 +2566,31 @@ path/filepath.lo: $(go_path_filepath_files) bytes.gox os.gox sort.gox \\\n \t$(BUILDPACKAGE)\n path/filepath/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) path/filepath\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: path/filepath/check\n \n rpc/jsonrpc.lo: $(go_rpc_jsonrpc_files) fmt.gox io.gox json.gox net.gox \\\n \t\tos.gox rpc.gox sync.gox\n \t$(BUILDPACKAGE)\n rpc/jsonrpc/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) rpc/jsonrpc\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: rpc/jsonrpc/check\n \n runtime/debug.lo: $(go_runtime_debug_files) bytes.gox fmt.gox io/ioutil.gox \\\n \t\tos.gox runtime.gox\n \t$(BUILDPACKAGE)\n runtime/debug/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) runtime/debug\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: runtime/debug/check\n \n runtime/pprof.lo: $(go_runtime_pprof_files) bufio.gox fmt.gox io.gox os.gox \\\n \t\truntime.gox sync.gox\n \t$(BUILDPACKAGE)\n runtime/pprof/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) runtime/pprof\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: runtime/pprof/check\n \n sync/atomic.lo: $(go_sync_atomic_files)\n@@ -2589,30 +2599,30 @@ sync/atomic_c.lo: $(go_sync_atomic_c_files) sync/atomic.lo\n \t$(LTCOMPILE) -c -o $@ $(srcdir)/go/sync/atomic/atomic.c\n sync/atomic/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) sync/atomic\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: sync/atomic/check\n \n testing/iotest.lo: $(go_testing_iotest_files) io.gox log.gox os.gox\n \t$(BUILDPACKAGE)\n testing/iotest/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) testing/iotest\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: testing/iotest/check\n \n testing/quick.lo: $(go_testing_quick_files) flag.gox fmt.gox math.gox os.gox \\\n \t\trand.gox reflect.gox strings.gox\n \t$(BUILDPACKAGE)\n testing/quick/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) testing/quick\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: testing/quick/check\n \n testing/script.lo: $(go_testing_script_files) fmt.gox os.gox rand.gox \\\n \t\treflect.gox strings.gox\n \t$(BUILDPACKAGE)\n testing/script/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) testing/script\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: testing/script/check\n \n sysinfo.go: s-sysinfo; @true\n@@ -2954,7 +2964,7 @@ TEST_PACKAGES = \\\n \tlog/check \\\n \tmath/check \\\n \tmime/check \\\n-\t$(if $(GCCGO_RUN_ALL_TESTS),net/check) \\\n+\tnet/check \\\n \tnetchan/check \\\n \tos/check \\\n \tpatch/check \\\n@@ -2970,7 +2980,7 @@ TEST_PACKAGES = \\\n \tstrconv/check \\\n \tstrings/check \\\n \tsync/check \\\n-\t$(if $(GCCGO_RUN_ALL_TESTS),syslog/check) \\\n+\tsyslog/check \\\n \ttabwriter/check \\\n \ttemplate/check \\\n \ttime/check \\\n@@ -3058,7 +3068,7 @@ TEST_PACKAGES = \\\n \ttesting/script/check\n \n check-am:\n-\t@rm -f libgo.sum libgo.log\n+\t@rm -f libgo.sum libgo.log libgo.tail\n \t@echo \"Test Run By $${USER} on `date`\" > libgo.sum\n \t@echo \"Native configuration is $(host_triplet)\" >> libgo.sum\n \t@echo >> libgo.sum\n@@ -3070,12 +3080,22 @@ check-am:\n \t@echo \"Running target unix\" >> libgo.sum\n \t@echo \"Running $(srcdir)/libgo.exp ...\" >> libgo.sum\n \t@cp libgo.sum libgo.log\n-\t@rm -f libgo.tail\n+\t@echo > libgo.tail\n+\t@echo \"\t\t=== libgo summary ===\" >> libgo.tail\n+\t@echo >> libgo.tail\n+\t@for f in $(TEST_PACKAGES); do \\\n+\t   rm -f $$f-testsum $$f-testlog; \\\n+\t done\n \t@$(MAKE) -k $(TEST_PACKAGES); \\\n \tstatus=$$?; \\\n-\techo > libgo.tail; \\\n-\techo \"\t\t=== libgo summary ===\" >> libgo.tail; \\\n-\techo >> libgo.tail; \\\n+\tfor f in $(TEST_PACKAGES); do \\\n+\t  if test -f $$f-testsum; then \\\n+\t    cat $$f-testsum >> libgo.sum; \\\n+\t  fi; \\\n+\t  if test -f $$f-testlog; then \\\n+\t    cat $$f-testlog >> libgo.log; \\\n+\t  fi; \\\n+\tdone; \\\n \tp=`grep -c PASS libgo.sum`; \\\n \tif test \"$$p\" != \"0\"; then \\\n \t  echo \"# of expected passes\t\t$$p\" >> libgo.tail; \\\n@@ -3084,6 +3104,10 @@ check-am:\n \tif test \"$$p\" != \"0\"; then \\\n \t  echo \"# of unexpected failures\t$$p\" >> libgo.tail; \\\n \tfi; \\\n+\tp=`grep -c UNTESTED libgo.sum`; \\\n+\tif test \"$$p\" != \"0\"; then \\\n+\t  echo \"# of untested testcases\t\t$$p\" >> libgo.tail; \\\n+\tfi; \\\n \tcat libgo.tail >> libgo.sum; \\\n \tcat libgo.tail >> libgo.log; \\\n \techo `echo $(GOC) | sed -e 's/ .*//'`  `$(GOC) -v 2>&1 | grep \" version\" | sed -n -e 's/.* \\(version.*$$\\)/\\1/p'` >> libgo.sum; \\\n@@ -3096,6 +3120,7 @@ MOSTLYCLEAN_FILES = libgo.tail\n mostlyclean-local:\n \tfind . -name '*.lo' -print | xargs $(LIBTOOL) --mode=clean rm -f\n \tfind . -name '*.$(OBJEXT)' -print | xargs rm -f\n+\tfind . -name '*-testsum' -print | xargs rm -f\n \tfind . -name '*-testlog' -print | xargs rm -f\n \n CLEANFILES = *.go *.gox goc2c *.c s-version libgo.sum libgo.log"}, {"sha": "540366db6c58cf6bf078a0f4252dbf2c089abc93", "filename": "libgo/Makefile.in", "status": "modified", "additions": 175, "deletions": 149, "changes": 324, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb0ce33a0e35c7781d72dc59cc9dcadd3f550841/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb0ce33a0e35c7781d72dc59cc9dcadd3f550841/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=bb0ce33a0e35c7781d72dc59cc9dcadd3f550841", "patch": "@@ -1877,33 +1877,44 @@ GOTESTFLAGS =\n \n # Check a package.\n CHECK = \\\n-\t@GC=\"$(GOC) -L `${PWD_COMMAND}` -L `${PWD_COMMAND}`/.libs -Wl,-R,`${PWD_COMMAND}`/.libs\"; \\\n+\tGC=\"$(GOC) -L `${PWD_COMMAND}` -L `${PWD_COMMAND}`/.libs -Wl,-R,`${PWD_COMMAND}`/.libs\"; \\\n \texport GC; \\\n \tRUNTESTFLAGS=\"$(RUNTESTFLAGS)\"; \\\n \texport RUNTESTFLAGS; \\\n \tMAKE=\"$(MAKE)\"; \\\n \texport MAKE; \\\n-\trm -f $@-testlog; \\\n+\trm -f $@-testsum $@-testlog; \\\n \tprefix=`if test \"$(@D)\" = \"regexp\"; then echo regexp-test; else dirname $(@D); fi`; \\\n \ttest \"$${prefix}\" != \".\" || prefix=\"$(@D)\"; \\\n \tif test \"$(use_dejagnu)\" = \"yes\"; then \\\n \t  $(SHELL) $(srcdir)/testsuite/gotest --dejagnu=yes --basedir=$(srcdir) --srcdir=$(srcdir)/go/$(@D) --prefix=\"libgo_$${prefix}\" --pkgfiles=\"$(go_$(subst /,_,$(@D))_files)\" --testname=\"$(@D)\" $(GOTESTFLAGS); \\\n \telse \\\n \t  if $(SHELL) $(srcdir)/testsuite/gotest --basedir=$(srcdir) --srcdir=$(srcdir)/go/$(@D) --prefix=\"libgo_$${prefix}\" --pkgfiles=\"$(go_$(subst /,_,$(@D))_files)\" $(GOTESTFLAGS) >>$@-testlog 2>&1; then \\\n-\t    echo \"PASS: $(@D)\"; \\\n-\t    echo \"PASS: $(@D)\" >> libgo.sum; \\\n \t    echo \"PASS: $(@D)\" >> $@-testlog; \\\n-\t    cat $@-testlog >> libgo.log; \\\n+\t    echo \"PASS: $(@D)\"; \\\n+\t    echo \"PASS: $(@D)\" > $@-testsum; \\\n \t  else \\\n \t    echo \"FAIL: $(@D)\" >> $@-testlog; \\\n \t    cat $@-testlog; \\\n-\t    echo \"FAIL: $(@D)\" >> libgo.sum; \\\n-\t    cat $@-testlog >> libgo.log; \\\n+\t    echo \"FAIL: $(@D)\" > $@-testsum; \\\n \t    exit 1; \\\n \t  fi; \\\n \tfi\n \n \n+# Check a package that is only tested if GCCGO_RUN_ALL_TESTS is set.\n+CHECK_ON_REQUEST = \\\n+\tif test \"$$GCCGO_RUN_ALL_TESTS\" != \"\"; then \\\n+\t  $(CHECK); \\\n+\telse \\\n+\t  rm -f $@-testsum $@-testlog; \\\n+\t  echo \"Set GCCGO_RUN_ALL_TESTS in environment to run $(@D) test\" > $@-testlog; \\\n+\t  echo \"UNTESTED: $(@D)\" >> $@-testlog; \\\n+\t  echo \"UNTESTED: $(@D)\"; \\\n+\t  echo \"UNTESTED: $(@D)\" > $@-testsum; \\\n+\tfi\n+\n+\n # Build all packages before checking any.\n CHECK_DEPS = libgo.la libgobegin.a \\\n \t$(toolexeclibgo_DATA) \\\n@@ -1959,7 +1970,7 @@ TEST_PACKAGES = \\\n \tlog/check \\\n \tmath/check \\\n \tmime/check \\\n-\t$(if $(GCCGO_RUN_ALL_TESTS),net/check) \\\n+\tnet/check \\\n \tnetchan/check \\\n \tos/check \\\n \tpatch/check \\\n@@ -1975,7 +1986,7 @@ TEST_PACKAGES = \\\n \tstrconv/check \\\n \tstrings/check \\\n \tsync/check \\\n-\t$(if $(GCCGO_RUN_ALL_TESTS),syslog/check) \\\n+\tsyslog/check \\\n \ttabwriter/check \\\n \ttemplate/check \\\n \ttime/check \\\n@@ -4012,93 +4023,93 @@ asn1/asn1.lo: $(go_asn1_files) bytes.gox fmt.gox io.gox os.gox reflect.gox \\\n \t\tstrconv.gox strings.gox time.gox\n \t$(BUILDPACKAGE)\n asn1/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: asn1/check\n \n big/big.lo: $(go_big_files) fmt.gox rand.gox strings.gox os.gox\n \t$(BUILDPACKAGE)\n big/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: big/check\n \n bufio/bufio.lo: $(go_bufio_files) bytes.gox io.gox os.gox strconv.gox utf8.gox\n \t$(BUILDPACKAGE)\n bufio/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: bufio/check\n \n bytes/bytes.lo: $(go_bytes_files) io.gox os.gox unicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n bytes/index.lo: $(go_bytes_c_files) bytes/bytes.lo\n \t$(LTCOMPILE) -c -o bytes/index.lo $(srcdir)/go/bytes/indexbyte.c\n bytes/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: bytes/check\n \n cmath/cmath.lo: $(go_cmath_files) math.gox\n \t$(BUILDPACKAGE)\n cmath/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: cmath/check\n \n crypto/crypto.lo: $(go_crypto_files) hash.gox\n \t$(BUILDPACKAGE)\n crypto/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/check\n \n ebnf/ebnf.lo: $(go_ebnf_files) container/vector.gox go/scanner.gox \\\n \t\tgo/token.gox os.gox strconv.gox unicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n ebnf/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: ebnf/check\n \n exec/exec.lo: $(go_exec_files) os.gox strconv.gox strings.gox\n \t$(BUILDPACKAGE)\n exec/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: exec/check\n \n expvar/expvar.lo: $(go_expvar_files) bytes.gox fmt.gox http.gox json.gox \\\n \t\tlog.gox os.gox runtime.gox strconv.gox sync.gox\n \t$(BUILDPACKAGE)\n expvar/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: expvar/check\n \n flag/flag.lo: $(go_flag_files) fmt.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n flag/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: flag/check\n \n fmt/fmt.lo: $(go_fmt_files) bytes.gox io.gox math.gox os.gox reflect.gox \\\n \t\tstrconv.gox strings.gox unicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n fmt/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: fmt/check\n \n gob/gob.lo: $(go_gob_files) bufio.gox bytes.gox fmt.gox io.gox math.gox \\\n \t\tos.gox reflect.gox runtime.gox strings.gox sync.gox \\\n \t\tunicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n gob/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: gob/check\n \n hash/hash.lo: $(go_hash_files) io.gox\n \t$(BUILDPACKAGE)\n hash/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: hash/check\n \n html/html.lo: $(go_html_files) bytes.gox io.gox os.gox strconv.gox strings.gox \\\n \t\tutf8.gox\n \t$(BUILDPACKAGE)\n html/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: html/check\n \n http/http.lo: $(go_http_files) bufio.gox bytes.gox container/vector.gox \\\n@@ -4108,19 +4119,19 @@ http/http.lo: $(go_http_files) bufio.gox bytes.gox container/vector.gox \\\n \t\tsort.gox strconv.gox strings.gox sync.gox time.gox utf8.gox\n \t$(BUILDPACKAGE)\n http/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: http/check\n \n image/image.lo: $(go_image_files) bufio.gox io.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n image/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: image/check\n \n io/io.lo: $(go_io_files) os.gox sync.gox\n \t$(BUILDPACKAGE)\n io/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: io/check\n \n json/json.lo: $(go_json_files) bytes.gox container/vector.gox \\\n@@ -4129,194 +4140,194 @@ json/json.lo: $(go_json_files) bytes.gox container/vector.gox \\\n \t\tutf16.gox utf8.gox\n \t$(BUILDPACKAGE)\n json/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: json/check\n \n log/log.lo: $(go_log_files) bytes.gox fmt.gox io.gox runtime.gox os.gox \\\n \t\tsync.gox time.gox\n \t$(BUILDPACKAGE)\n log/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: log/check\n \n math/math.lo: $(go_math_files)\n \t$(BUILDPACKAGE)\n math/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: math/check\n \n mime/mime.lo: $(go_mime_files) bufio.gox bytes.gox os.gox strings.gox \\\n \t\tsync.gox unicode.gox\n \t$(BUILDPACKAGE)\n mime/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: mime/check\n \n net/net.lo: $(go_net_files) bytes.gox fmt.gox io.gox os.gox rand.gox \\\n \t\treflect.gox strconv.gox strings.gox sync.gox syscall.gox \\\n \t\ttime.gox\n \t$(BUILDPACKAGE)\n net/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK_ON_REQUEST)\n .PHONY: net/check\n \n netchan/netchan.lo: $(go_netchan_files) gob.gox io.gox log.gox net.gox os.gox \\\n \t\treflect.gox strconv.gox sync.gox time.gox\n \t$(BUILDPACKAGE)\n netchan/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: netchan/check\n \n os/os.lo: $(go_os_files) runtime.gox sync.gox syscall.gox\n \t$(BUILDPACKAGE)\n os/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: os/check\n \n patch/patch.lo: $(go_patch_files) bytes.gox compress/zlib.gox \\\n \t\tcrypto/sha1.gox encoding/git85.gox fmt.gox io.gox os.gox \\\n \t\tpath.gox strings.gox\n \t$(BUILDPACKAGE)\n patch/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: patch/check\n \n path/path.lo: $(go_path_files) os.gox strings.gox utf8.gox\n \t$(BUILDPACKAGE)\n path/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: path/check\n \n rand/rand.lo: $(go_rand_files) math.gox sync.gox\n \t$(BUILDPACKAGE)\n rand/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: rand/check\n \n reflect/reflect.lo: $(go_reflect_files) math.gox runtime.gox strconv.gox \\\n \t\tsync.gox\n \t$(BUILDPACKAGE)\n reflect/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: reflect/check\n \n regexp/regexp.lo: $(go_regexp_files) bytes.gox io.gox os.gox strings.gox \\\n \t\tutf8.gox\n \t$(BUILDPACKAGE)\n regexp/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: regexp/check\n \n rpc/rpc.lo: $(go_rpc_files) bufio.gox fmt.gox gob.gox http.gox io.gox log.gox \\\n \t\tnet.gox os.gox reflect.gox sort.gox strings.gox strconv.gox \\\n \t\tsync.gox template.gox unicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n rpc/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: rpc/check\n \n runtime/runtime.lo: $(go_runtime_files)\n \t$(BUILDPACKAGE)\n runtime/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: runtime/check\n \n scanner/scanner.lo: $(go_scanner_files) bytes.gox fmt.gox io.gox os.gox \\\n \t\tunicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n scanner/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: scanner/check\n \n smtp/smtp.lo: $(go_smtp_files) crypto/tls.gox encoding/base64.gox io.gox \\\n \t\tnet.gox net/textproto.gox os.gox strings.gox\n \t$(BUILDPACKAGE)\n smtp/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: smtp/check\n \n sort/sort.lo: $(go_sort_files)\n \t$(BUILDPACKAGE)\n sort/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: sort/check\n \n strconv/strconv.lo: $(go_strconv_files) bytes.gox math.gox os.gox strings.gox \\\n \t\tunicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n strconv/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: strconv/check\n \n strings/strings.lo: $(go_strings_files) os.gox unicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n strings/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: strings/check\n \n sync/sync.lo: $(go_sync_files) runtime.gox sync/atomic.gox\n \t$(BUILDPACKAGE)\n sync/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: sync/check\n \n syslog/syslog.lo: $(go_syslog_files) fmt.gox log.gox net.gox os.gox syscall.gox\n \t$(BUILDPACKAGE)\n syslog/syslog_c.lo: $(go_syslog_c_files) syslog/syslog.lo\n \t$(LTCOMPILE) -c -o $@ $(srcdir)/go/syslog/syslog_c.c\n syslog/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK_ON_REQUEST)\n .PHONY: syslog/check\n \n tabwriter/tabwriter.lo: $(go_tabwriter_files) bytes.gox io.gox os.gox utf8.gox\n \t$(BUILDPACKAGE)\n tabwriter/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: tabwriter/check\n \n template/template.lo: $(go_template_files) bytes.gox fmt.gox io.gox os.gox \\\n \t\treflect.gox runtime.gox strings.gox container/vector.gox\n \t$(BUILDPACKAGE)\n template/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: template/check\n \n testing/testing.lo: $(go_testing_files) flag.gox fmt.gox os.gox regexp.gox \\\n \t\truntime.gox runtime/pprof.gox time.gox\n \t$(BUILDPACKAGE)\n testing/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: testing/check\n \n time/time.lo: $(go_time_files) bytes.gox container/heap.gox io/ioutil.gox \\\n \t\tos.gox strconv.gox sync.gox syscall.gox\n \t$(BUILDPACKAGE)\n time/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: time/check\n \n try/try.lo: $(go_try_files) fmt.gox io.gox os.gox reflect.gox unicode.gox\n \t$(BUILDPACKAGE)\n try/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: try/check\n \n unicode/unicode.lo: $(go_unicode_files)\n \t$(BUILDPACKAGE)\n unicode/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: unicode/check\n \n utf16/utf16.lo: $(go_utf16_files) unicode.gox\n \t$(BUILDPACKAGE)\n utf16/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: utf16/check\n \n utf8/utf8.lo: $(go_utf8_files) unicode.gox\n \t$(BUILDPACKAGE)\n utf8/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: utf8/check\n \n websocket/websocket.lo: $(go_websocket_files) bufio.gox bytes.gox \\\n@@ -4325,22 +4336,22 @@ websocket/websocket.lo: $(go_websocket_files) bufio.gox bytes.gox \\\n \t\trand.gox strings.gox\n \t$(BUILDPACKAGE)\n websocket/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: websocket/check\n \n xml/xml.lo: $(go_xml_files) bufio.gox bytes.gox fmt.gox io.gox os.gox \\\n \t\treflect.gox strconv.gox strings.gox unicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n xml/check: $(CHECK_DEPS)\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: xml/check\n \n archive/tar.lo: $(go_archive_tar_files) bytes.gox io.gox os.gox strconv.gox \\\n \t\tstrings.gox\n \t$(BUILDPACKAGE)\n archive/tar/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) archive/tar\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: archive/tar/check\n \n archive/zip.lo: $(go_archive_zip_files) bufio.gox bytes.gox \\\n@@ -4349,160 +4360,160 @@ archive/zip.lo: $(go_archive_zip_files) bufio.gox bytes.gox \\\n \t$(BUILDPACKAGE)\n archive/zip/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) archive/zip\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: archive/zip/check\n \n compress/bzip2.lo: $(go_compress_bzip2_files) bufio.gox io.gox os.gox sort.gox\n \t$(BUILDPACKAGE)\n compress/bzip2/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) compress/bzip2\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: compress/bzip2/check\n \n compress/flate.lo: $(go_compress_flate_files) bufio.gox io.gox math.gox \\\n \t\tos.gox sort.gox strconv.gox\n \t$(BUILDPACKAGE)\n compress/flate/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) compress/flate\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: compress/flate/check\n \n compress/gzip.lo: $(go_compress_gzip_files) bufio.gox compress/flate.gox \\\n \t\thash.gox hash/crc32.gox io.gox os.gox\n \t$(BUILDPACKAGE)\n compress/gzip/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) compress/gzip\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: compress/gzip/check\n \n compress/lzw.lo: $(go_compress_lzw_files) bufio.gox fmt.gox io.gox os.gox\n \t$(BUILDPACKAGE)\n compress/lzw/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) compress/lzw\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: compress/lzw/check\n \n compress/zlib.lo: $(go_compress_zlib_files) bufio.gox compress/flate.gox \\\n \t\thash.gox hash/adler32.gox io.gox os.gox\n \t$(BUILDPACKAGE)\n compress/zlib/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) compress/zlib\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: compress/zlib/check\n \n container/heap.lo: $(go_container_heap_files) sort.gox\n \t$(BUILDPACKAGE)\n container/heap/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) container/heap\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: container/heap/check\n \n container/list.lo: $(go_container_list_files)\n \t$(BUILDPACKAGE)\n container/list/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) container/list\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: container/list/check\n \n container/ring.lo: $(go_container_ring_files)\n \t$(BUILDPACKAGE)\n container/ring/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) container/ring\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: container/ring/check\n \n container/vector.lo: $(go_container_vector_files)\n \t$(BUILDPACKAGE)\n container/vector/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) container/vector\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: container/vector/check\n \n crypto/aes.lo: $(go_crypto_aes_files) os.gox strconv.gox\n \t$(BUILDPACKAGE)\n crypto/aes/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/aes\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/aes/check\n \n crypto/block.lo: $(go_crypto_block_files) fmt.gox io.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n crypto/block/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/block\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/block/check\n \n crypto/blowfish.lo: $(go_crypto_blowfish_files) os.gox strconv.gox\n \t$(BUILDPACKAGE)\n crypto/blowfish/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/blowfish\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/blowfish/check\n \n crypto/cast5.lo: $(go_crypto_cast5_files) os.gox\n \t$(BUILDPACKAGE)\n crypto/cast5/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/cast5\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/cast5/check\n \n crypto/cipher.lo: $(go_crypto_cipher_files) io.gox os.gox\n \t$(BUILDPACKAGE)\n crypto/cipher/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/cipher\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/cipher/check\n \n crypto/dsa.lo: $(go_crypto_dsa_files) big.gox io.gox os.gox\n \t$(BUILDPACKAGE)\n crypto/dsa/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/dsa\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/dsa/check\n \n crypto/ecdsa.lo: $(go_crypto_ecdsa_files) big.gox crypto/elliptic.gox io.gox \\\n \t\tos.gox\n \t$(BUILDPACKAGE)\n crypto/ecdsa/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/ecdsa\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/ecdsa/check\n \n crypto/elliptic.lo: $(go_crypto_elliptic_files) big.gox io.gox os.gox sync.gox\n \t$(BUILDPACKAGE)\n crypto/elliptic/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/elliptic\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/elliptic/check\n \n crypto/hmac.lo: $(go_crypto_hmac_files) crypto/md5.gox crypto/sha1.gox \\\n \t\tcrypto/sha256.gox hash.gox os.gox\n \t$(BUILDPACKAGE)\n crypto/hmac/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/hmac\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/hmac/check\n \n crypto/md4.lo: $(go_crypto_md4_files) crypto.gox hash.gox os.gox\n \t$(BUILDPACKAGE)\n crypto/md4/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/md4\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/md4/check\n \n crypto/md5.lo: $(go_crypto_md5_files) crypto.gox hash.gox os.gox\n \t$(BUILDPACKAGE)\n crypto/md5/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/md5\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/md5/check\n \n crypto/ocsp.lo: $(go_crypto_ocsp_files) asn1.gox crypto.gox crypto/rsa.gox \\\n \t\tcrypto/sha1.gox crypto/x509.gox os.gox time.gox\n \t$(BUILDPACKAGE)\n crypto/ocsp/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/ocsp\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/ocsp/check\n \n crypto/openpgp.lo: $(go_crypto_openpgp_files) crypto.gox crypto/dsa.gox \\\n@@ -4512,65 +4523,65 @@ crypto/openpgp.lo: $(go_crypto_openpgp_files) crypto.gox crypto/dsa.gox \\\n \t$(BUILDPACKAGE)\n crypto/openpgp/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/openpgp\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/openpgp/check\n \n crypto/rand.lo: $(go_crypto_rand_files) bufio.gox crypto/aes.gox io.gox \\\n \t\tos.gox sync.gox time.gox\n \t$(BUILDPACKAGE)\n crypto/rand/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/rand\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/rand/check\n \n crypto/rc4.lo: $(go_crypto_rc4_files) os.gox strconv.gox\n \t$(BUILDPACKAGE)\n crypto/rc4/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/rc4\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/rc4/check\n \n crypto/ripemd160.lo: $(go_crypto_ripemd160_files) crypto.gox hash.gox os.gox\n \t$(BUILDPACKAGE)\n crypto/ripemd160/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/ripemd160\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/ripemd160/check\n \n crypto/rsa.lo: $(go_crypto_rsa_files) big.gox crypto.gox crypto/sha1.gox \\\n \t\tcrypto/subtle.gox encoding/hex.gox hash.gox io.gox os.gox\n \t$(BUILDPACKAGE)\n crypto/rsa/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/rsa\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/rsa/check\n \n crypto/sha1.lo: $(go_crypto_sha1_files) crypto.gox hash.gox os.gox\n \t$(BUILDPACKAGE)\n crypto/sha1/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/sha1\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/sha1/check\n \n crypto/sha256.lo: $(go_crypto_sha256_files) crypto.gox hash.gox os.gox\n \t$(BUILDPACKAGE)\n crypto/sha256/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/sha256\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/sha256/check\n \n crypto/sha512.lo: $(go_crypto_sha512_files) crypto.gox hash.gox os.gox\n \t$(BUILDPACKAGE)\n crypto/sha512/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/sha512\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/sha512/check\n \n crypto/subtle.lo: $(go_crypto_subtle_files)\n \t$(BUILDPACKAGE)\n crypto/subtle/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/subtle\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/subtle/check\n \n crypto/tls.lo: $(go_crypto_tls_files) big.gox bufio.gox bytes.gox \\\n@@ -4583,14 +4594,14 @@ crypto/tls.lo: $(go_crypto_tls_files) big.gox bufio.gox bytes.gox \\\n \t$(BUILDPACKAGE)\n crypto/tls/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/tls\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/tls/check\n \n crypto/twofish.lo: $(go_crypto_twofish_files) os.gox strconv.gox\n \t$(BUILDPACKAGE)\n crypto/twofish/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/twofish\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/twofish/check\n \n crypto/x509.lo: $(go_crypto_x509_files) asn1.gox big.gox container/vector.gox \\\n@@ -4599,14 +4610,14 @@ crypto/x509.lo: $(go_crypto_x509_files) asn1.gox big.gox container/vector.gox \\\n \t$(BUILDPACKAGE)\n crypto/x509/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/x509\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/x509/check\n \n crypto/xtea.lo: $(go_crypto_xtea_files) os.gox strconv.gox\n \t$(BUILDPACKAGE)\n crypto/xtea/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/xtea\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/xtea/check\n \n crypto/openpgp/armor.lo: $(go_crypto_openpgp_armor_files) bytes.gox \\\n@@ -4615,14 +4626,14 @@ crypto/openpgp/armor.lo: $(go_crypto_openpgp_armor_files) bytes.gox \\\n \t$(BUILDPACKAGE)\n crypto/openpgp/armor/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/openpgp/armor\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/openpgp/armor/check\n \n crypto/openpgp/error.lo: $(go_crypto_openpgp_error_files) strconv.gox\n \t$(BUILDPACKAGE)\n crypto/openpgp/error/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/openpgp/error\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/openpgp/error/check\n \n crypto/openpgp/packet.lo: $(go_crypto_openpgp_packet_files) big.gox bytes.gox \\\n@@ -4635,7 +4646,7 @@ crypto/openpgp/packet.lo: $(go_crypto_openpgp_packet_files) big.gox bytes.gox \\\n \t$(BUILDPACKAGE)\n crypto/openpgp/packet/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/openpgp/packet\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/openpgp/packet/check\n \n crypto/openpgp/s2k.lo: $(go_crypto_openpgp_s2k_files) crypto.gox \\\n@@ -4645,46 +4656,46 @@ crypto/openpgp/s2k.lo: $(go_crypto_openpgp_s2k_files) crypto.gox \\\n \t$(BUILDPACKAGE)\n crypto/openpgp/s2k/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/openpgp/s2k\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: crypto/openpgp/s2k/check\n \n debug/dwarf.lo: $(go_debug_dwarf_files) encoding/binary.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n debug/dwarf/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/dwarf\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: debug/dwarf/check\n \n debug/elf.lo: $(go_debug_elf_files) bytes.gox debug/dwarf.gox \\\n \t\tencoding/binary.gox fmt.gox io.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n debug/elf/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/elf\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: debug/elf/check\n \n debug/gosym.lo: $(go_debug_gosym_files) encoding/binary.gox fmt.gox os.gox \\\n \t\tstrconv.gox strings.gox\n \t$(BUILDPACKAGE)\n debug/gosym/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/gosym\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: debug/gosym/check\n \n debug/macho.lo: $(go_debug_macho_files) bytes.gox debug/dwarf.gox \\\n \t\tencoding/binary.gox fmt.gox io.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n debug/macho/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/macho\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: debug/macho/check\n \n debug/pe.lo: $(go_debug_pe_files) debug/dwarf.gox \\\n \t\tencoding/binary.gox fmt.gox io.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n debug/pe/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/pe\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: debug/pe/check\n \n debug/proc.lo: $(go_debug_proc_files) container/vector.gox fmt.gox \\\n@@ -4693,65 +4704,65 @@ debug/proc.lo: $(go_debug_proc_files) container/vector.gox fmt.gox \\\n \t$(BUILDPACKAGE)\n debug/proc/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/proc\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: debug/proc/check\n \n encoding/ascii85.lo: $(go_encoding_ascii85_files) io.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n encoding/ascii85/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/ascii85\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: encoding/ascii85/check\n \n encoding/base32.lo: $(go_encoding_base32_files) io.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n encoding/base32/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/base32\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: encoding/base32/check\n \n encoding/base64.lo: $(go_encoding_base64_files) io.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n encoding/base64/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/base64\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: encoding/base64/check\n \n encoding/binary.lo: $(go_encoding_binary_files) io.gox math.gox os.gox \\\n \t\treflect.gox\n \t$(BUILDPACKAGE)\n encoding/binary/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/binary\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: encoding/binary/check\n \n encoding/git85.lo: $(go_encoding_git85_files) bytes.gox io.gox os.gox \\\n \t\tstrconv.gox\n \t$(BUILDPACKAGE)\n encoding/git85/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/git85\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: encoding/git85/check\n \n encoding/hex.lo: $(go_encoding_hex_files) os.gox strconv.gox\n \t$(BUILDPACKAGE)\n encoding/hex/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/hex\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: encoding/hex/check\n \n encoding/line.lo: $(go_encoding_line_files) io.gox os.gox\n \t$(BUILDPACKAGE)\n encoding/line/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/line\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: encoding/line/check\n \n encoding/pem.lo: $(go_encoding_pem_files) bytes.gox encoding/base64.gox\n \t$(BUILDPACKAGE)\n encoding/pem/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/pem\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: encoding/pem/check\n \n exp/datafmt.lo: $(go_exp_datafmt_files) bytes.gox container/vector.gox \\\n@@ -4760,14 +4771,14 @@ exp/datafmt.lo: $(go_exp_datafmt_files) bytes.gox container/vector.gox \\\n \t$(BUILDPACKAGE)\n exp/datafmt/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/datafmt\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: exp/datafmt/check\n \n exp/draw.lo: $(go_exp_draw_files) image.gox os.gox\n \t$(BUILDPACKAGE)\n exp/draw/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/draw\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: exp/draw/check\n \n exp/eval.lo: $(go_exp_eval_files) big.gox go/ast.gox go/parser.gox \\\n@@ -4776,23 +4787,23 @@ exp/eval.lo: $(go_exp_eval_files) big.gox go/ast.gox go/parser.gox \\\n \t$(BUILDPACKAGE)\n exp/eval/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/eval\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: exp/eval/check\n \n go/ast.lo: $(go_go_ast_files) bytes.gox fmt.gox go/scanner.gox go/token.gox \\\n \t\tio.gox os.gox reflect.gox unicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n go/ast/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/ast\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: go/ast/check\n \n go/doc.lo: $(go_go_doc_files) go/ast.gox go/token.gox io.gox regexp.gox \\\n \t\tsort.gox strings.gox template.gox\n \t$(BUILDPACKAGE)\n go/doc/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/doc\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: go/doc/check\n \n go/parser.lo: $(go_go_parser_files) bytes.gox fmt.gox go/ast.gox \\\n@@ -4801,7 +4812,7 @@ go/parser.lo: $(go_go_parser_files) bytes.gox fmt.gox go/ast.gox \\\n \t$(BUILDPACKAGE)\n go/parser/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/parser\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: go/parser/check\n \n go/printer.lo: $(go_go_printer_files) bytes.gox fmt.gox go/ast.gox \\\n@@ -4810,7 +4821,7 @@ go/printer.lo: $(go_go_printer_files) bytes.gox fmt.gox go/ast.gox \\\n \t$(BUILDPACKAGE)\n go/printer/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/printer\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: go/printer/check\n \n go/scanner.lo: $(go_go_scanner_files) bytes.gox container/vector.gox fmt.gox \\\n@@ -4819,50 +4830,50 @@ go/scanner.lo: $(go_go_scanner_files) bytes.gox container/vector.gox fmt.gox \\\n \t$(BUILDPACKAGE)\n go/scanner/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/scanner\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: go/scanner/check\n \n go/token.lo: $(go_go_token_files) fmt.gox strconv.gox\n \t$(BUILDPACKAGE)\n go/token/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/token\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: go/token/check\n \n go/typechecker.lo: $(go_go_typechecker_files) fmt.gox go/ast.gox go/token.gox \\\n \t\tgo/scanner.gox os.gox\n \t$(BUILDPACKAGE)\n go/typechecker/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/typechecker\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: go/typechecker/check\n \n hash/adler32.lo: $(go_hash_adler32_files) hash.gox os.gox\n \t$(BUILDPACKAGE)\n hash/adler32/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) hash/adler32\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: hash/adler32/check\n \n hash/crc32.lo: $(go_hash_crc32_files) hash.gox os.gox\n \t$(BUILDPACKAGE)\n hash/crc32/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) hash/crc32\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: hash/crc32/check\n \n hash/crc64.lo: $(go_hash_crc64_files) hash.gox os.gox\n \t$(BUILDPACKAGE)\n hash/crc64/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) hash/crc64\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: hash/crc64/check\n \n hash/fnv.lo: $(go_hash_fnv_files) encoding/binary.gox hash.gox os.gox\n \t$(BUILDPACKAGE)\n hash/fnv/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) hash/fnv\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: hash/fnv/check\n \n http/cgi.lo: $(go_http_cgi_files) bufio.gox bytes.gox encoding/line.gox \\\n@@ -4871,62 +4882,62 @@ http/cgi.lo: $(go_http_cgi_files) bufio.gox bytes.gox encoding/line.gox \\\n \t$(BUILDPACKAGE)\n http/cgi/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) http/cgi\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: http/cgi/check\n \n http/httptest.lo: $(go_http_httptest_files) bytes.gox fmt.gox http.gox \\\n \t\tnet.gox os.gox\n \t$(BUILDPACKAGE)\n http/httptest/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) http/httptest\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: http/httptest/check\n \n http/pprof.lo: $(go_http_pprof_files) bufio.gox fmt.gox http.gox os.gox \\\n \t\truntime.gox runtime/pprof.gox strconv.gox strings.gox\n \t$(BUILDPACKAGE)\n http/pprof/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) http/pprof\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: http/pprof/check\n \n image/jpeg.lo: $(go_image_jpeg_files) bufio.gox image.gox io.gox os.gox\n \t$(BUILDPACKAGE)\n image/jpeg/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) image/jpeg\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: image/jpeg/check\n \n image/png.lo: $(go_image_png_files) bufio.gox compress/zlib.gox fmt.gox \\\n \t\thash.gox hash/crc32.gox image.gox io.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n image/png/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) image/png\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: image/png/check\n \n index/suffixarray.lo: $(go_index_suffixarray_files) bytes.gox regexp.gox \\\n \t\tsort.gox\n \t$(BUILDPACKAGE)\n index/suffixarray/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) index/suffixarray\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: index/suffixarray/check\n \n io/ioutil.lo: $(go_io_ioutil_files) bytes.gox io.gox os.gox path/filepath.gox \\\n \t\tsort.gox strconv.gox\n \t$(BUILDPACKAGE)\n io/ioutil/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) io/ioutil\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: io/ioutil/check\n \n mime/multipart.lo: $(go_mime_multipart_files) bufio.gox bytes.gox io.gox \\\n \t\tmime.gox net/textproto.gox os.gox regexp.gox strings.gox\n \t$(BUILDPACKAGE)\n mime/multipart/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) mime/multipart\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: mime/multipart/check\n \n net/dict.lo: $(go_net_dict_files) container/vector.gox net/textproto.gox \\\n@@ -4939,21 +4950,21 @@ net/textproto.lo: $(go_net_textproto_files) bufio.gox bytes.gox \\\n \t$(BUILDPACKAGE)\n net/textproto/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) net/textproto\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: net/textproto/check\n \n os/inotify.lo: $(go_os_inotify_files) fmt.gox os.gox strings.gox syscall.gox\n \t$(BUILDPACKAGE)\n os/inotify/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) os/inotify\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: os/inotify/check\n \n os/signal.lo: $(go_os_signal_files) runtime.gox strconv.gox\n \t$(BUILDPACKAGE)\n os/signal/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) os/signal\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: os/signal/check\n \n unix.go: $(srcdir)/go/os/signal/mkunix.sh sysinfo.go\n@@ -4965,31 +4976,31 @@ path/filepath.lo: $(go_path_filepath_files) bytes.gox os.gox sort.gox \\\n \t$(BUILDPACKAGE)\n path/filepath/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) path/filepath\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: path/filepath/check\n \n rpc/jsonrpc.lo: $(go_rpc_jsonrpc_files) fmt.gox io.gox json.gox net.gox \\\n \t\tos.gox rpc.gox sync.gox\n \t$(BUILDPACKAGE)\n rpc/jsonrpc/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) rpc/jsonrpc\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: rpc/jsonrpc/check\n \n runtime/debug.lo: $(go_runtime_debug_files) bytes.gox fmt.gox io/ioutil.gox \\\n \t\tos.gox runtime.gox\n \t$(BUILDPACKAGE)\n runtime/debug/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) runtime/debug\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: runtime/debug/check\n \n runtime/pprof.lo: $(go_runtime_pprof_files) bufio.gox fmt.gox io.gox os.gox \\\n \t\truntime.gox sync.gox\n \t$(BUILDPACKAGE)\n runtime/pprof/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) runtime/pprof\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: runtime/pprof/check\n \n sync/atomic.lo: $(go_sync_atomic_files)\n@@ -4998,30 +5009,30 @@ sync/atomic_c.lo: $(go_sync_atomic_c_files) sync/atomic.lo\n \t$(LTCOMPILE) -c -o $@ $(srcdir)/go/sync/atomic/atomic.c\n sync/atomic/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) sync/atomic\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: sync/atomic/check\n \n testing/iotest.lo: $(go_testing_iotest_files) io.gox log.gox os.gox\n \t$(BUILDPACKAGE)\n testing/iotest/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) testing/iotest\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: testing/iotest/check\n \n testing/quick.lo: $(go_testing_quick_files) flag.gox fmt.gox math.gox os.gox \\\n \t\trand.gox reflect.gox strings.gox\n \t$(BUILDPACKAGE)\n testing/quick/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) testing/quick\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: testing/quick/check\n \n testing/script.lo: $(go_testing_script_files) fmt.gox os.gox rand.gox \\\n \t\treflect.gox strings.gox\n \t$(BUILDPACKAGE)\n testing/script/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) testing/script\n-\t$(CHECK)\n+\t@$(CHECK)\n .PHONY: testing/script/check\n \n sysinfo.go: s-sysinfo; @true\n@@ -5333,7 +5344,7 @@ testing/script.gox: testing/script.lo\n \t$(BUILDGOX)\n \n check-am:\n-\t@rm -f libgo.sum libgo.log\n+\t@rm -f libgo.sum libgo.log libgo.tail\n \t@echo \"Test Run By $${USER} on `date`\" > libgo.sum\n \t@echo \"Native configuration is $(host_triplet)\" >> libgo.sum\n \t@echo >> libgo.sum\n@@ -5345,12 +5356,22 @@ check-am:\n \t@echo \"Running target unix\" >> libgo.sum\n \t@echo \"Running $(srcdir)/libgo.exp ...\" >> libgo.sum\n \t@cp libgo.sum libgo.log\n-\t@rm -f libgo.tail\n+\t@echo > libgo.tail\n+\t@echo \"\t\t=== libgo summary ===\" >> libgo.tail\n+\t@echo >> libgo.tail\n+\t@for f in $(TEST_PACKAGES); do \\\n+\t   rm -f $$f-testsum $$f-testlog; \\\n+\t done\n \t@$(MAKE) -k $(TEST_PACKAGES); \\\n \tstatus=$$?; \\\n-\techo > libgo.tail; \\\n-\techo \"\t\t=== libgo summary ===\" >> libgo.tail; \\\n-\techo >> libgo.tail; \\\n+\tfor f in $(TEST_PACKAGES); do \\\n+\t  if test -f $$f-testsum; then \\\n+\t    cat $$f-testsum >> libgo.sum; \\\n+\t  fi; \\\n+\t  if test -f $$f-testlog; then \\\n+\t    cat $$f-testlog >> libgo.log; \\\n+\t  fi; \\\n+\tdone; \\\n \tp=`grep -c PASS libgo.sum`; \\\n \tif test \"$$p\" != \"0\"; then \\\n \t  echo \"# of expected passes\t\t$$p\" >> libgo.tail; \\\n@@ -5359,6 +5380,10 @@ check-am:\n \tif test \"$$p\" != \"0\"; then \\\n \t  echo \"# of unexpected failures\t$$p\" >> libgo.tail; \\\n \tfi; \\\n+\tp=`grep -c UNTESTED libgo.sum`; \\\n+\tif test \"$$p\" != \"0\"; then \\\n+\t  echo \"# of untested testcases\t\t$$p\" >> libgo.tail; \\\n+\tfi; \\\n \tcat libgo.tail >> libgo.sum; \\\n \tcat libgo.tail >> libgo.log; \\\n \techo `echo $(GOC) | sed -e 's/ .*//'`  `$(GOC) -v 2>&1 | grep \" version\" | sed -n -e 's/.* \\(version.*$$\\)/\\1/p'` >> libgo.sum; \\\n@@ -5369,6 +5394,7 @@ check-am:\n mostlyclean-local:\n \tfind . -name '*.lo' -print | xargs $(LIBTOOL) --mode=clean rm -f\n \tfind . -name '*.$(OBJEXT)' -print | xargs rm -f\n+\tfind . -name '*-testsum' -print | xargs rm -f\n \tfind . -name '*-testlog' -print | xargs rm -f\n \n clean-local:"}]}