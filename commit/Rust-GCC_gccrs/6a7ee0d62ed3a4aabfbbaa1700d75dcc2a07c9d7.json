{"sha": "6a7ee0d62ed3a4aabfbbaa1700d75dcc2a07c9d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE3ZWUwZDYyZWQzYTRhYWJmYmJhYTE3MDBkNzVkY2MyYTA3YzlkNw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2003-11-17T08:39:57Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-11-17T08:39:57Z"}, "message": "8.cc: New test, summarizing the discussion ensuing libstdc++/12988.\n\n2003-11-17  Paolo Carlini  <pcarlini@suse.de>\n\n\t* testsuite/22_locale/num_put/put/char/8.cc: New test,\n\tsummarizing the discussion ensuing libstdc++/12988.\n\t* testsuite/22_locale/num_put/put/wchar_t/8.cc: Ditto.\n\nFrom-SVN: r73665", "tree": {"sha": "bb10247bdbc087488f6594ef05bcea1fb1b0b721", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb10247bdbc087488f6594ef05bcea1fb1b0b721"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a7ee0d62ed3a4aabfbbaa1700d75dcc2a07c9d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a7ee0d62ed3a4aabfbbaa1700d75dcc2a07c9d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a7ee0d62ed3a4aabfbbaa1700d75dcc2a07c9d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a7ee0d62ed3a4aabfbbaa1700d75dcc2a07c9d7/comments", "author": null, "committer": null, "parents": [{"sha": "c06d5c8586da408dc208f97b95058599aef96089", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c06d5c8586da408dc208f97b95058599aef96089", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c06d5c8586da408dc208f97b95058599aef96089"}], "stats": {"total": 142, "additions": 142, "deletions": 0}, "files": [{"sha": "d8bf0e40a1b16264dbe903deb2e3d8d46720f8ba", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a7ee0d62ed3a4aabfbbaa1700d75dcc2a07c9d7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a7ee0d62ed3a4aabfbbaa1700d75dcc2a07c9d7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6a7ee0d62ed3a4aabfbbaa1700d75dcc2a07c9d7", "patch": "@@ -1,3 +1,9 @@\n+2003-11-17  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* testsuite/22_locale/num_put/put/char/8.cc: New test,\n+\tsummarizing the discussion ensuing libstdc++/12988.\n+\t* testsuite/22_locale/num_put/put/wchar_t/8.cc: Ditto.\n+\n 2003-11-15  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/std/std_fstream.h: Tweak a comment."}, {"sha": "4ec8de1d958e8ba025229f2514327fdfe9951a35", "filename": "libstdc++-v3/testsuite/22_locale/num_put/put/char/8.cc", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a7ee0d62ed3a4aabfbbaa1700d75dcc2a07c9d7/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fchar%2F8.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a7ee0d62ed3a4aabfbbaa1700d75dcc2a07c9d7/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fchar%2F8.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fchar%2F8.cc?ref=6a7ee0d62ed3a4aabfbbaa1700d75dcc2a07c9d7", "patch": "@@ -0,0 +1,68 @@\n+// Copyright (C) 2003 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 22.2.2.2.1  num_put members\n+\n+#include <locale>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+struct Ctype: std::ctype<char>\n+{\n+  char\n+  do_widen(char c) const \n+  { return 'A' + c % 26; }\n+\n+  const char*\n+  do_widen(const char* lo, const char* hi, char* to) const\n+  {\n+    for (; lo != hi; *to++ = Ctype::do_widen(*lo++));\n+    return hi;\n+  } \n+};\n+\n+// See http://gcc.gnu.org/ml/libstdc++/2003-11/msg00154.html\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  ostringstream oss;\n+  oss.imbue(locale(locale::classic(), new Ctype));\n+  const num_put<char>& np = use_facet<num_put<char> >(oss.getloc());\n+\n+  const string empty;\n+  string result;\n+  long inum = 123;\n+  double fnum = 123.456;\n+\n+  np.put(oss.rdbuf(), oss, '+', inum);\n+  result = oss.str();\n+  VERIFY( result == \"XYZ\" );\n+\n+  oss.clear();\n+  oss.str(empty);\n+  np.put(oss.rdbuf(), oss, '+', fnum);\n+  result = oss.str();\n+  VERIFY( result == \"XYZ.ABC\" );\n+}\n+\n+int main()\n+{\n+  test01();\n+}"}, {"sha": "b1915d4d9f69c337a8075483bfcb7d631d0c6278", "filename": "libstdc++-v3/testsuite/22_locale/num_put/put/wchar_t/8.cc", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a7ee0d62ed3a4aabfbbaa1700d75dcc2a07c9d7/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fwchar_t%2F8.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a7ee0d62ed3a4aabfbbaa1700d75dcc2a07c9d7/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fwchar_t%2F8.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fwchar_t%2F8.cc?ref=6a7ee0d62ed3a4aabfbbaa1700d75dcc2a07c9d7", "patch": "@@ -0,0 +1,68 @@\n+// Copyright (C) 2003 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 22.2.2.2.1  num_put members\n+\n+#include <locale>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+struct Ctype: std::ctype<wchar_t>\n+{\n+  wchar_t\n+  do_widen(char c) const\n+  { return L'A' + c % 26; }\n+\n+  const char*\n+  do_widen(const char* lo, const char* hi, wchar_t* to) const\n+  {\n+    for (; lo != hi; *to++ = Ctype::do_widen(*lo++));\n+    return hi;\n+  }\n+};\n+\n+// See http://gcc.gnu.org/ml/libstdc++/2003-11/msg00154.html\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  wostringstream oss;\n+  oss.imbue(locale(locale::classic(), new Ctype));\n+  const num_put<wchar_t>& np = use_facet<num_put<wchar_t> >(oss.getloc());\n+\n+  const wstring empty;\n+  wstring result;\n+  long inum = 123;\n+  double fnum = 123.456;\n+\n+  np.put(oss.rdbuf(), oss, '+', inum);\n+  result = oss.str();\n+  VERIFY( result == L\"XYZ\" );\n+\n+  oss.clear();\n+  oss.str(empty);\n+  np.put(oss.rdbuf(), oss, '+', fnum);\n+  result = oss.str();\n+  VERIFY( result == L\"XYZ.ABC\" );\n+}\n+\n+int main()\n+{\n+  test01();\n+}"}]}