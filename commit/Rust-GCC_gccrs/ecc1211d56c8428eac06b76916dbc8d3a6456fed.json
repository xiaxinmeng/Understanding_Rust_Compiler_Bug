{"sha": "ecc1211d56c8428eac06b76916dbc8d3a6456fed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWNjMTIxMWQ1NmM4NDI4ZWFjMDZiNzY5MTZkYmM4ZDNhNjQ1NmZlZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-10-12T02:14:03Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-10-12T02:14:03Z"}, "message": "t-cygwin32 (TARGET_LIBGCC2_CFLAGS): Define.\n\n\t* i386/t-cygwin32 (TARGET_LIBGCC2_CFLAGS): Define.\n(cp)\t* inc/typeinfo: Add #pragma interface.\n\t(operator!=): Just call operator==.\n\t* tinfo.cc: Add #pragma implementation.\n\t(operator==): Move from inc/typeinfo and tinfo2.cc.\n\tCheck __COMMON_UNRELIABLE instead of _WIN32.\n\nFrom-SVN: r23004", "tree": {"sha": "f7e79f132a1f5fa1a9f90732456954ead751b633", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f7e79f132a1f5fa1a9f90732456954ead751b633"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ecc1211d56c8428eac06b76916dbc8d3a6456fed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecc1211d56c8428eac06b76916dbc8d3a6456fed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecc1211d56c8428eac06b76916dbc8d3a6456fed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecc1211d56c8428eac06b76916dbc8d3a6456fed/comments", "author": null, "committer": null, "parents": [{"sha": "acf82af24fb759dfa802691dcba994a68c1f62c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acf82af24fb759dfa802691dcba994a68c1f62c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acf82af24fb759dfa802691dcba994a68c1f62c1"}], "stats": {"total": 62, "additions": 36, "deletions": 26}, "files": [{"sha": "ef57f796b636ea83053980fcfe6a7ef0ffcc828c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecc1211d56c8428eac06b76916dbc8d3a6456fed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecc1211d56c8428eac06b76916dbc8d3a6456fed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ecc1211d56c8428eac06b76916dbc8d3a6456fed", "patch": "@@ -1,3 +1,7 @@\n+Mon Oct 12 02:03:25 1998  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* i386/t-cygwin32 (TARGET_LIBGCC2_CFLAGS): Define.\n+\n Mon Oct 12 01:22:53 PDT 1998 Jeff Law  (law@cygnus.com)\n \n \t* version.c: Bump for snapshot."}, {"sha": "42eb7d7ef81550a59d17742ae82c7660dba5e63a", "filename": "gcc/config/i386/t-cygwin32", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecc1211d56c8428eac06b76916dbc8d3a6456fed/gcc%2Fconfig%2Fi386%2Ft-cygwin32", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecc1211d56c8428eac06b76916dbc8d3a6456fed/gcc%2Fconfig%2Fi386%2Ft-cygwin32", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-cygwin32?ref=ecc1211d56c8428eac06b76916dbc8d3a6456fed", "patch": "@@ -3,6 +3,10 @@ CROSS_LIBGCC1 = libgcc1-asm.a\n LIB1ASMSRC = i386/cygwin32.asm\n LIB1ASMFUNCS = _chkstk\n \n+# We can't rely on common symbols being shared between translation units\n+# under Windows.\n+TARGET_LIBGCC2_CFLAGS = -D__COMMON_UNRELIABLE\n+\n # cygwin32 always has a limits.h, but, depending upon how we are doing\n # the build, it may not be installed yet.\n LIMITS_H_TEST = true"}, {"sha": "14abce98e27ea48b887bee839e68e8ae2248249a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecc1211d56c8428eac06b76916dbc8d3a6456fed/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecc1211d56c8428eac06b76916dbc8d3a6456fed/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ecc1211d56c8428eac06b76916dbc8d3a6456fed", "patch": "@@ -1,5 +1,11 @@\n 1998-10-12  Jason Merrill  <jason@yorick.cygnus.com>\n \n+\t* inc/typeinfo: Add #pragma interface.\n+\t(operator!=): Just call operator==.\n+\t* tinfo.cc: Add #pragma implementation.\n+\t(operator==): Move from inc/typeinfo and tinfo2.cc.\n+\tCheck __COMMON_UNRELIABLE instead of _WIN32.\n+\n \t* typeck2.c (my_friendly_abort): Add URL.\n \n 1998-10-12  Alastair J. Houghton <ajh8@doc.ic.ac.uk>"}, {"sha": "6c8ea05aa725a6126474ab3e8a5790091457c829", "filename": "gcc/cp/inc/typeinfo", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecc1211d56c8428eac06b76916dbc8d3a6456fed/gcc%2Fcp%2Finc%2Ftypeinfo", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecc1211d56c8428eac06b76916dbc8d3a6456fed/gcc%2Fcp%2Finc%2Ftypeinfo", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finc%2Ftypeinfo?ref=ecc1211d56c8428eac06b76916dbc8d3a6456fed", "patch": "@@ -4,6 +4,8 @@\n #ifndef __TYPEINFO__\n #define __TYPEINFO__\n \n+#pragma interface \"typeinfo\"\n+\n #include <exception>\n \n extern \"C++\" {\n@@ -32,22 +34,11 @@ public:\n   bool operator!= (const type_info& arg) const;\n };\n \n-// We can't rely on common symbols being shared between translation units\n-// under Windows.  Sigh.\n-\n-#ifndef _WIN32\n-inline bool type_info::\n-operator== (const type_info& arg) const\n-{\n-  return &arg == this;\n-}\n-\n inline bool type_info::\n operator!= (const type_info& arg) const\n {\n-  return &arg != this;\n+  return !operator== (arg);\n }\n-#endif\n \n class bad_cast : public exception {\n public:"}, {"sha": "2096a512a23d20fa591ef70f71675bef943a9cdb", "filename": "gcc/cp/tinfo.cc", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecc1211d56c8428eac06b76916dbc8d3a6456fed/gcc%2Fcp%2Ftinfo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecc1211d56c8428eac06b76916dbc8d3a6456fed/gcc%2Fcp%2Ftinfo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftinfo.cc?ref=ecc1211d56c8428eac06b76916dbc8d3a6456fed", "patch": "@@ -25,6 +25,8 @@\n // This exception does not however invalidate any other reasons why\n // the executable file might be covered by the GNU General Public License.\n \n+#pragma implementation \"typeinfo\"\n+\n #include <stddef.h>\n #include \"tinfo.h\"\n #include \"new\"\t\t\t// for placement new\n@@ -37,6 +39,23 @@ std::type_info::\n ~type_info ()\n { }\n \n+#ifndef __COMMON_UNRELIABLE\n+bool type_info::\n+operator== (const type_info& arg) const\n+{\n+  return &arg == this;\n+}\n+#else\n+// We can't rely on common symbols being shared between translation units\n+// under Windows.  Sigh.\n+\n+bool type_info::\n+operator== (const type_info& arg) const\n+{\n+  return fast_compare (name (), arg.name ()) == 0;\n+}\n+#endif\n+\n extern \"C\" void\n __rtti_class (void *addr, const char *name,\n \t      const __class_type_info::base_info *bl, size_t bn)"}, {"sha": "c19cf607762f8aea6f37cec20abc5aa07b3e27fc", "filename": "gcc/cp/tinfo2.cc", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecc1211d56c8428eac06b76916dbc8d3a6456fed/gcc%2Fcp%2Ftinfo2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecc1211d56c8428eac06b76916dbc8d3a6456fed/gcc%2Fcp%2Ftinfo2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftinfo2.cc?ref=ecc1211d56c8428eac06b76916dbc8d3a6456fed", "patch": "@@ -49,20 +49,6 @@ type_info::before (const type_info &arg) const\n   return fast_compare (name (), arg.name ()) < 0;\n }\n \n-#ifdef _WIN32\n-bool type_info::\n-operator== (const type_info& arg) const\n-{\n-  return fast_compare (name (), arg.name ()) == 0;\n-}\n-\n-bool type_info::\n-operator!= (const type_info& arg) const\n-{\n-  return fast_compare (name (), arg.name ()) != 0;\n-}\n-#endif\n-\n // type info for pointer type.\n \n struct __pointer_type_info : public type_info {"}]}