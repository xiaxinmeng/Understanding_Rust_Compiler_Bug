{"sha": "52cdcfb7b4733ab7190b9699926407dc22f1b0fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTJjZGNmYjdiNDczM2FiNzE5MGI5Njk5OTI2NDA3ZGMyMmYxYjBmYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-04-11T13:35:13Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-04-11T13:35:13Z"}, "message": "re PR tree-optimization/85331 (during GIMPLE pass, internal compiler error: Segmentation fault (-O1 and above))\n\n\tPR tree-optimization/85331\n\t* vec-perm-indices.h (vec_perm_indices::clamp): Change input type\n\tfrom int to HOST_WIDE_INT.\n\n\t* gcc.c-torture/execute/pr85331.c: New test.\n\nFrom-SVN: r259320", "tree": {"sha": "f82f6677df53ba811efe0dad4e8fc77fb5c4fd2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f82f6677df53ba811efe0dad4e8fc77fb5c4fd2d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52cdcfb7b4733ab7190b9699926407dc22f1b0fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52cdcfb7b4733ab7190b9699926407dc22f1b0fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52cdcfb7b4733ab7190b9699926407dc22f1b0fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52cdcfb7b4733ab7190b9699926407dc22f1b0fa/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7b668576fc09c86a301087f464e195678cb0aea0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b668576fc09c86a301087f464e195678cb0aea0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b668576fc09c86a301087f464e195678cb0aea0"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "96c7c2874aead9380b18273557a567e30903d5cd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52cdcfb7b4733ab7190b9699926407dc22f1b0fa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52cdcfb7b4733ab7190b9699926407dc22f1b0fa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=52cdcfb7b4733ab7190b9699926407dc22f1b0fa", "patch": "@@ -1,3 +1,9 @@\n+2018-04-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/85331\n+\t* vec-perm-indices.h (vec_perm_indices::clamp): Change input type\n+\tfrom int to HOST_WIDE_INT.\n+\n 2018-04-11  Martin Jambor  <mjambor@suse.cz>\n \n \tPR ipa/84149"}, {"sha": "b473add86db294dfed9512cc75b8d15bb2fa1d5e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52cdcfb7b4733ab7190b9699926407dc22f1b0fa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52cdcfb7b4733ab7190b9699926407dc22f1b0fa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=52cdcfb7b4733ab7190b9699926407dc22f1b0fa", "patch": "@@ -1,3 +1,8 @@\n+2018-04-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/85331\n+\t* gcc.c-torture/execute/pr85331.c: New test.\n+\n 2018-04-11  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/85032"}, {"sha": "3ef805a289e3debf1ff74c6b7b4dc4a859218b6e", "filename": "gcc/testsuite/gcc.c-torture/execute/pr85331.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52cdcfb7b4733ab7190b9699926407dc22f1b0fa/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr85331.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52cdcfb7b4733ab7190b9699926407dc22f1b0fa/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr85331.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr85331.c?ref=52cdcfb7b4733ab7190b9699926407dc22f1b0fa", "patch": "@@ -0,0 +1,22 @@\n+/* PR tree-optimization/85331 */\n+\n+typedef double V __attribute__((vector_size (2 * sizeof (double))));\n+typedef long long W __attribute__((vector_size (2 * sizeof (long long))));\n+\n+__attribute__((noipa)) void\n+foo (V *r)\n+{\n+  V y = { 1.0, 2.0 };\n+  W m = { 10000000001LL, 0LL };\n+  *r = __builtin_shuffle (y, m);\n+}\n+\n+int\n+main ()\n+{\n+  V r;\n+  foo (&r);\n+  if (r[0] != 2.0 || r[1] != 1.0)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "d805fbb8f761e17a28bf41f5a19db6970fece94e", "filename": "gcc/vec-perm-indices.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52cdcfb7b4733ab7190b9699926407dc22f1b0fa/gcc%2Fvec-perm-indices.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52cdcfb7b4733ab7190b9699926407dc22f1b0fa/gcc%2Fvec-perm-indices.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvec-perm-indices.h?ref=52cdcfb7b4733ab7190b9699926407dc22f1b0fa", "patch": "@@ -119,7 +119,7 @@ inline vec_perm_indices::element_type\n vec_perm_indices::clamp (element_type elt) const\n {\n   element_type limit = input_nelts (), elem_within_input;\n-  int input;\n+  HOST_WIDE_INT input;\n   if (!can_div_trunc_p (elt, limit, &input, &elem_within_input))\n     return elt;\n "}]}