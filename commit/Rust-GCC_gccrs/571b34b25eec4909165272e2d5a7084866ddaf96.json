{"sha": "571b34b25eec4909165272e2d5a7084866ddaf96", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTcxYjM0YjI1ZWVjNDkwOTE2NTI3MmUyZDVhNzA4NDg2NmRkYWY5Ng==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2011-11-07T15:31:31Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2011-11-07T15:31:31Z"}, "message": "clock and time are part of the C standard library.\n\n2011-11-07  Janne Blomqvist  <jb@gcc.gnu.org>\n\n\t* intrinsic.texi (MCLOCK, MCLOCK8, TIME, TIME8): Functions clock\n\tand time are part of the C standard library.\n\nFrom-SVN: r181087", "tree": {"sha": "7590a137248d228fe15eb11510fc3cbe045d603c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7590a137248d228fe15eb11510fc3cbe045d603c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/571b34b25eec4909165272e2d5a7084866ddaf96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/571b34b25eec4909165272e2d5a7084866ddaf96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/571b34b25eec4909165272e2d5a7084866ddaf96", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/571b34b25eec4909165272e2d5a7084866ddaf96/comments", "author": null, "committer": null, "parents": [{"sha": "ed377f02a60ce77f94e5ae099abf06c5bdcf2c6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed377f02a60ce77f94e5ae099abf06c5bdcf2c6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed377f02a60ce77f94e5ae099abf06c5bdcf2c6f"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "ea828c88f0fbdd3b1f081ee1484c4ef19aa55610", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/571b34b25eec4909165272e2d5a7084866ddaf96/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/571b34b25eec4909165272e2d5a7084866ddaf96/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=571b34b25eec4909165272e2d5a7084866ddaf96", "patch": "@@ -1,3 +1,8 @@\n+2011-11-07  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* intrinsic.texi (MCLOCK, MCLOCK8, TIME, TIME8): Functions clock\n+\tand time are part of the C standard library.\n+\n 2011-11-06  Janus Weil  <janus@gcc.gnu.org>\n \n \t* gfortran.h (gfc_extend_expr): Modified prototype."}, {"sha": "f7d5a193e56a2694031b3a2d62ba595483eead76", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/571b34b25eec4909165272e2d5a7084866ddaf96/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/571b34b25eec4909165272e2d5a7084866ddaf96/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=571b34b25eec4909165272e2d5a7084866ddaf96", "patch": "@@ -8639,7 +8639,7 @@ cases, the result is of the same type and kind as @var{ARRAY}.\n @table @asis\n @item @emph{Description}:\n Returns the number of clock ticks since the start of the process, based\n-on the UNIX function @code{clock(3)}.\n+on the function @code{clock(3)} in the C standard library.\n \n This intrinsic is not fully portable, such as to systems with 32-bit\n @code{INTEGER} types but supporting times wider than 32 bits. Therefore,\n@@ -8677,7 +8677,7 @@ the system does not support @code{clock(3)}.\n @table @asis\n @item @emph{Description}:\n Returns the number of clock ticks since the start of the process, based\n-on the UNIX function @code{clock(3)}.\n+on the function @code{clock(3)} in the C standard library.\n \n @emph{Warning:} this intrinsic does not increase the range of the timing\n values over that returned by @code{clock(3)}. On a system with a 32-bit\n@@ -12222,8 +12222,8 @@ END IF\n @table @asis\n @item @emph{Description}:\n Returns the current time encoded as an integer (in the manner of the\n-UNIX function @code{time(3)}). This value is suitable for passing to\n-@code{CTIME}, @code{GMTIME}, and @code{LTIME}.\n+function @code{time(3)} in the C standard library). This value is\n+suitable for passing to @code{CTIME}, @code{GMTIME}, and @code{LTIME}.\n \n This intrinsic is not fully portable, such as to systems with 32-bit\n @code{INTEGER} types but supporting times wider than 32 bits. Therefore,\n@@ -12263,8 +12263,8 @@ The return value is a scalar of type @code{INTEGER(4)}.\n @table @asis\n @item @emph{Description}:\n Returns the current time encoded as an integer (in the manner of the\n-UNIX function @code{time(3)}). This value is suitable for passing to\n-@code{CTIME}, @code{GMTIME}, and @code{LTIME}.\n+function @code{time(3)} in the C standard library). This value is\n+suitable for passing to @code{CTIME}, @code{GMTIME}, and @code{LTIME}.\n \n @emph{Warning:} this intrinsic does not increase the range of the timing\n values over that returned by @code{time(3)}. On a system with a 32-bit"}]}