{"sha": "1893a69a50e1baae2fe767b9ab8c883588e87c0a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTg5M2E2OWE1MGUxYmFhZTJmZTc2N2I5YWI4Yzg4MzU4OGU4N2MwYQ==", "commit": {"author": {"name": "Michael Eager", "email": "eager@eagercon.com", "date": "2011-12-29T15:50:28Z"}, "committer": {"name": "Michael Eager", "email": "eager@gcc.gnu.org", "date": "2011-12-29T15:50:28Z"}, "message": "microblaze.md: Add expander for simple_return...\n\n* config/microblaze/microblaze.md: Add expander for simple_return,\n  return, add return_internal and simple_return_internal insns.\n\nFrom-SVN: r182725", "tree": {"sha": "c9eab138ad6040d5dbd6d6f765fb1d0d20528606", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9eab138ad6040d5dbd6d6f765fb1d0d20528606"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1893a69a50e1baae2fe767b9ab8c883588e87c0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1893a69a50e1baae2fe767b9ab8c883588e87c0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1893a69a50e1baae2fe767b9ab8c883588e87c0a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1893a69a50e1baae2fe767b9ab8c883588e87c0a/comments", "author": {"login": "eagerm", "id": 945532, "node_id": "MDQ6VXNlcjk0NTUzMg==", "avatar_url": "https://avatars.githubusercontent.com/u/945532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eagerm", "html_url": "https://github.com/eagerm", "followers_url": "https://api.github.com/users/eagerm/followers", "following_url": "https://api.github.com/users/eagerm/following{/other_user}", "gists_url": "https://api.github.com/users/eagerm/gists{/gist_id}", "starred_url": "https://api.github.com/users/eagerm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eagerm/subscriptions", "organizations_url": "https://api.github.com/users/eagerm/orgs", "repos_url": "https://api.github.com/users/eagerm/repos", "events_url": "https://api.github.com/users/eagerm/events{/privacy}", "received_events_url": "https://api.github.com/users/eagerm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "10b293bbd0844afa8a500f535dbd4b3a010f5d81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10b293bbd0844afa8a500f535dbd4b3a010f5d81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10b293bbd0844afa8a500f535dbd4b3a010f5d81"}], "stats": {"total": 39, "additions": 31, "deletions": 8}, "files": [{"sha": "8b7c11e6bc369ce89c43b1707af5582d2c01a0e3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1893a69a50e1baae2fe767b9ab8c883588e87c0a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1893a69a50e1baae2fe767b9ab8c883588e87c0a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1893a69a50e1baae2fe767b9ab8c883588e87c0a", "patch": "@@ -1,3 +1,8 @@\n+2011-12-29  Michael Eager  <eager@eagercon.com>\n+\n+\t* config/microblaze/microblaze.md: Add expander for simple_return,\n+\treturn, add return_internal and simple_return_internal insns.\n+\n 2011-12-29  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \t* config/sh/sh.h (BRANCH_COST): Use sh_branch_cost variable."}, {"sha": "a4c341f66b32bd8d9b1534fae4df5ffecfba726e", "filename": "gcc/config/microblaze/microblaze.md", "status": "modified", "additions": 26, "deletions": 8, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1893a69a50e1baae2fe767b9ab8c883588e87c0a/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1893a69a50e1baae2fe767b9ab8c883588e87c0a/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.md?ref=1893a69a50e1baae2fe767b9ab8c883588e87c0a", "patch": "@@ -82,6 +82,13 @@\n ;; # instructions (4 bytes each)\n (define_attr \"length\" \"\" (const_int 4))\n \n+(define_code_iterator any_return [return simple_return])\n+\n+;; <optab> expands to the name of the optab for a particular code.\n+(define_code_attr optab [(return \"return\")\n+\t\t\t (simple_return \"simple_return\")])\n+\n+\n ;;----------------------------------------------------\n ;; Attribute describing the processor.  \n ;;----------------------------------------------------\n@@ -1936,9 +1943,21 @@\n \n ;; Trivial return.  Make it look like a normal return insn as that\n ;; allows jump optimizations to work better .\n-(define_insn \"return\"\n-  [(return)]\n+(define_expand \"return\"\n+  [(simple_return)]\n   \"microblaze_can_use_return_insn ()\"\n+  {}\n+)\n+\n+(define_expand \"simple_return\"\n+  [(simple_return)]\n+  \"\"\n+  {}\n+)\n+\n+(define_insn \"*<optab>\"\n+  [(any_return)]\n+  \"\"\n   { \n     if (microblaze_is_interrupt_handler ())\n         return \"rtid\\tr14, 0\\;%#\";\n@@ -1947,15 +1966,14 @@\n   }\n   [(set_attr \"type\"\t\"jump\")\n   (set_attr \"mode\"\t\"none\")\n-  (set_attr \"length\"\t\"4\")])\n+  (set_attr \"length\"\t\"4\")]\n+)\n \n ;; Normal return.\n-;; We match any mode for the return address, so that this will work with\n-;; both 32 bit and 64 bit targets.\n \n-(define_insn \"return_internal\"\n-  [(parallel [(use (match_operand:SI 0 \"register_operand\" \"\"))\n-              (return)])]\n+(define_insn \"<optab>_internal\"\n+  [(any_return)\n+   (use (match_operand:SI 0 \"register_operand\" \"\"))]\n   \"\"\n   {\t\n     if (microblaze_is_interrupt_handler ())"}]}