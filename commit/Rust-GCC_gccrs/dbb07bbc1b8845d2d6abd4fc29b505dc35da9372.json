{"sha": "dbb07bbc1b8845d2d6abd4fc29b505dc35da9372", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJiMDdiYmMxYjg4NDVkMmQ2YWJkNGZjMjliNTA1ZGMzNWRhOTM3Mg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2011-06-30T17:56:50Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2011-06-30T17:56:50Z"}, "message": "df-scan.c (df_get_entry_block_def_set): Use INCOMING_REGNO macro unconditionally.\n\n\t* df-scan.c (df_get_entry_block_def_set): Use INCOMING_REGNO macro\n\tunconditionally.\n\nFrom-SVN: r175718", "tree": {"sha": "c143bf87dd2a9359a4762b716264d5126778a70e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c143bf87dd2a9359a4762b716264d5126778a70e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dbb07bbc1b8845d2d6abd4fc29b505dc35da9372", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbb07bbc1b8845d2d6abd4fc29b505dc35da9372", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbb07bbc1b8845d2d6abd4fc29b505dc35da9372", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbb07bbc1b8845d2d6abd4fc29b505dc35da9372/comments", "author": null, "committer": null, "parents": [{"sha": "1565af083011ebc0469a3df4f93350ce1eecf20a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1565af083011ebc0469a3df4f93350ce1eecf20a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1565af083011ebc0469a3df4f93350ce1eecf20a"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "c343b1685d255f141f83ca86881257979d5bf681", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb07bbc1b8845d2d6abd4fc29b505dc35da9372/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb07bbc1b8845d2d6abd4fc29b505dc35da9372/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dbb07bbc1b8845d2d6abd4fc29b505dc35da9372", "patch": "@@ -1,3 +1,8 @@\n+2011-06-30  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* df-scan.c (df_get_entry_block_def_set): Use INCOMING_REGNO macro\n+\tunconditionally.\n+\n 2011-06-30  Richard Guenther  <rguenther@suse.de>\n \n \t* opts.c (finish_options): Do not disable IPA-PTA during ltrans.\n@@ -66,10 +71,12 @@\n \toriginal statement is irrelevant.\n \t* tree-vect-slp.c (vect_get_and_check_slp_defs): Likewise.\n \n-2011-06-29  Changpeng Fang <changpeng.fang@amd.com>\n+2011-06-29  Changpeng Fang  <changpeng.fang@amd.com>\n \n-\t* config/i386/i386.opt (mprefer-avx128): Redefine the flag as a Mask option.\n-\t* config/i386/i386.h (ix86_tune_indices): Add X86_TUNE_AVX128_OPTIMAL entry.\n+\t* config/i386/i386.opt (mprefer-avx128): Redefine the flag as a Mask\n+\toption.\n+\t* config/i386/i386.h (ix86_tune_indices): Add X86_TUNE_AVX128_OPTIMAL\n+\tentry.\n \t(TARGET_AVX128_OPTIMAL): New definition.\n \t* config/i386/i386.c (initial_ix86_tune_features): Initialize\n \tX86_TUNE_AVX128_OPTIMAL entry."}, {"sha": "de2ae82853ad8736989adaec6aa09571f08bbee5", "filename": "gcc/df-scan.c", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb07bbc1b8845d2d6abd4fc29b505dc35da9372/gcc%2Fdf-scan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb07bbc1b8845d2d6abd4fc29b505dc35da9372/gcc%2Fdf-scan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-scan.c?ref=dbb07bbc1b8845d2d6abd4fc29b505dc35da9372", "patch": "@@ -3733,14 +3733,8 @@ df_get_entry_block_def_set (bitmap entry_block_defs)\n   bitmap_clear (entry_block_defs);\n \n   for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\n-    {\n-      if (FUNCTION_ARG_REGNO_P (i))\n-#ifdef INCOMING_REGNO\n-\tbitmap_set_bit (entry_block_defs, INCOMING_REGNO (i));\n-#else\n-\tbitmap_set_bit (entry_block_defs, i);\n-#endif\n-    }\n+    if (FUNCTION_ARG_REGNO_P (i))\n+      bitmap_set_bit (entry_block_defs, INCOMING_REGNO (i));\n \n   /* The always important stack pointer.  */\n   bitmap_set_bit (entry_block_defs, STACK_POINTER_REGNUM);"}]}