{"sha": "c0eccde6cfcfc5923c2f71917793cf9df5881e7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzBlY2NkZTZjZmNmYzU5MjNjMmY3MTkxNzc5M2NmOWRmNTg4MWU3ZA==", "commit": {"author": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1996-10-23T04:15:02Z"}, "committer": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1996-10-23T04:15:02Z"}, "message": "(emit_store_flag_force): Declare.\n\nFrom-SVN: r13001", "tree": {"sha": "1ae9f957e6b941bfeff573cc40e3fa1d4a85617b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ae9f957e6b941bfeff573cc40e3fa1d4a85617b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0eccde6cfcfc5923c2f71917793cf9df5881e7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0eccde6cfcfc5923c2f71917793cf9df5881e7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0eccde6cfcfc5923c2f71917793cf9df5881e7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0eccde6cfcfc5923c2f71917793cf9df5881e7d/comments", "author": null, "committer": null, "parents": [{"sha": "34d6007ae0d0bc36beaef2da55c9324adacbc476", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34d6007ae0d0bc36beaef2da55c9324adacbc476", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34d6007ae0d0bc36beaef2da55c9324adacbc476"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "573acdf7b0bd0dec3626c661b5892ce51f283610", "filename": "gcc/expr.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0eccde6cfcfc5923c2f71917793cf9df5881e7d/gcc%2Fexpr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0eccde6cfcfc5923c2f71917793cf9df5881e7d/gcc%2Fexpr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.h?ref=c0eccde6cfcfc5923c2f71917793cf9df5881e7d", "patch": "@@ -580,6 +580,10 @@ extern rtx expand_and PROTO((rtx, rtx, rtx));\n extern rtx emit_store_flag PROTO((rtx, enum rtx_code, rtx, rtx,\n \t\t\t\t  enum machine_mode, int, int));\n \n+/* Like emit_store_flag, but always succeeds.  */\n+extern rtx emit_store_flag_force PROTO((rtx, enum rtx_code, rtx, rtx,\n+\t\t\t\t\tenum machine_mode, int, int));\n+\n /* Functions from loop.c:  */\n \n /* Given a JUMP_INSN, return a description of the test being made.  */"}]}