{"sha": "da8c0ebea20e3b0a1003c1c113d2ec1b0cdda2e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGE4YzBlYmVhMjBlM2IwYTEwMDNjMWMxMTNkMmVjMWIwY2RkYTJlNw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2006-08-28T13:26:22Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-08-28T13:26:22Z"}, "message": "2.cc: New.\n\n2006-08-28  Paolo Carlini  <pcarlini@suse.de>\n\t    Roger Sayle  <roger@eyesopen.com>\n\n\t* testsuite/25_algorithms/nth_element/2.cc: New.\n\nCo-Authored-By: Roger Sayle <roger@eyesopen.com>\n\nFrom-SVN: r116508", "tree": {"sha": "f887b1215ddddafb14a55b4f2837d634fdd27f7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f887b1215ddddafb14a55b4f2837d634fdd27f7d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da8c0ebea20e3b0a1003c1c113d2ec1b0cdda2e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da8c0ebea20e3b0a1003c1c113d2ec1b0cdda2e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da8c0ebea20e3b0a1003c1c113d2ec1b0cdda2e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da8c0ebea20e3b0a1003c1c113d2ec1b0cdda2e7/comments", "author": null, "committer": null, "parents": [{"sha": "8d8e3aa02cbbae89cf3bdb61208caa9346d08f17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d8e3aa02cbbae89cf3bdb61208caa9346d08f17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d8e3aa02cbbae89cf3bdb61208caa9346d08f17"}], "stats": {"total": 80, "additions": 80, "deletions": 0}, "files": [{"sha": "3feaa99932e3dee6aef1b459b7348daac41978b9", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da8c0ebea20e3b0a1003c1c113d2ec1b0cdda2e7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da8c0ebea20e3b0a1003c1c113d2ec1b0cdda2e7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=da8c0ebea20e3b0a1003c1c113d2ec1b0cdda2e7", "patch": "@@ -1,3 +1,8 @@\n+2006-08-28  Paolo Carlini  <pcarlini@suse.de>\n+\t    Roger Sayle  <roger@eyesopen.com>\n+\n+\t* testsuite/25_algorithms/nth_element/2.cc: New.\n+\n 2006-08-27  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/28830"}, {"sha": "ed8635033b8c6e24953202f020847502a7c8f13d", "filename": "libstdc++-v3/testsuite/25_algorithms/nth_element/2.cc", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da8c0ebea20e3b0a1003c1c113d2ec1b0cdda2e7/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fnth_element%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da8c0ebea20e3b0a1003c1c113d2ec1b0cdda2e7/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fnth_element%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fnth_element%2F2.cc?ref=da8c0ebea20e3b0a1003c1c113d2ec1b0cdda2e7", "patch": "@@ -0,0 +1,75 @@\n+// Copyright (C) 2006 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// 25.3.2 [lib.alg.nth.element]\n+\n+#include <vector>\n+#include <algorithm>\n+#include <testsuite_hooks.h>\n+\n+void\n+test_set(std::vector<int>& v, int size)\n+{\n+  v.clear();\n+\n+  for (int i = 0; i < size; i += 4)\n+    {\n+      v.push_back(i / 2);\n+      v.push_back((size - 2) - (i / 2));\n+    }\n+  for (int i = 1; i < size; i += 2)\n+    v.push_back(i);\n+}\n+\n+void\n+do_test01(int size)\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  std::vector<int> v, s;\n+\n+  for (int j = 0; j < size; ++j)\n+    {\n+      test_set(v, size);\n+      s = v;\n+      std::sort(s.begin(), s.end());\n+      \n+      std::nth_element(v.begin(), v.begin() + j, v.end());\n+\n+      VERIFY( v[j] == s[j] );\n+      \n+      for (int i = 0; i < j; ++i)\n+\tVERIFY( !(v[j] < v[i]) );\n+\n+      for (int i = j; i < v.size(); ++i)\n+\tVERIFY( !(v[i] < v[j]) );\n+    }\n+}\n+\n+void\n+test01()\n+{\n+  for (int size = 4; size <= 1 << 10; size <<= 1)\n+    do_test01(size);\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}