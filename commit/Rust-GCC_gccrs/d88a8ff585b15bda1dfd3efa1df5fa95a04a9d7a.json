{"sha": "d88a8ff585b15bda1dfd3efa1df5fa95a04a9d7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDg4YThmZjU4NWIxNWJkYTFkZmQzZWZhMWRmNWZhOTVhMDRhOWQ3YQ==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2002-05-14T08:41:39Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2002-05-14T08:41:39Z"}, "message": "Fix typo in last change.\n\nFrom-SVN: r53451", "tree": {"sha": "c66f45d2ecdc0f518ffb8bf6f4e67d74a25dba4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c66f45d2ecdc0f518ffb8bf6f4e67d74a25dba4a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d88a8ff585b15bda1dfd3efa1df5fa95a04a9d7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d88a8ff585b15bda1dfd3efa1df5fa95a04a9d7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d88a8ff585b15bda1dfd3efa1df5fa95a04a9d7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d88a8ff585b15bda1dfd3efa1df5fa95a04a9d7a/comments", "author": null, "committer": null, "parents": [{"sha": "c1ae3eb4409f53b08f7c5e9da27d54ac5ae7043a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1ae3eb4409f53b08f7c5e9da27d54ac5ae7043a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1ae3eb4409f53b08f7c5e9da27d54ac5ae7043a"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "279dc9085f45cc8b5bc8169d3874dfd88aae2e5b", "filename": "gcc/varasm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d88a8ff585b15bda1dfd3efa1df5fa95a04a9d7a/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d88a8ff585b15bda1dfd3efa1df5fa95a04a9d7a/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=d88a8ff585b15bda1dfd3efa1df5fa95a04a9d7a", "patch": "@@ -1596,7 +1596,7 @@ assemble_variable (decl, top_level, at_end, dont_output_data)\n     reloc = contains_pointers_p (TREE_TYPE (decl)) ? 3 : 0;\n   else if (DECL_INITIAL (decl))\n     reloc = output_addressed_constants (DECL_INITIAL (decl));\n-  resolve_unique_section (decl, reloc, flag_data_section);\n+  resolve_unique_section (decl, reloc, flag_data_sections);\n \n   /* Handle uninitialized definitions.  */\n "}]}