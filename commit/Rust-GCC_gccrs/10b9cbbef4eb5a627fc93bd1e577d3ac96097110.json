{"sha": "10b9cbbef4eb5a627fc93bd1e577d3ac96097110", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTBiOWNiYmVmNGViNWE2MjdmYzkzYmQxZTU3N2QzYWM5NjA5NzExMA==", "commit": {"author": {"name": "Benjamin Chelf", "email": "chelf@codesourcery.com", "date": "2000-07-11T22:21:58Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-07-11T22:21:58Z"}, "message": "Regenerate after this patch:\n\n2000-07-10  Benjamin Chelf  <chelf@codesourcery.com>\n\n        * c-parse.in (BREAK): Change to build tree, then generate RTL.\n        (CONTINUE): Likewise.\n        (RETURN): Likewise.\n        (CASE): Likewise.\n        (DEFAULT): Likewise.\n\nFrom-SVN: r34970", "tree": {"sha": "b6373507c9c836e03dea27b0744ba0255ecc9879", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6373507c9c836e03dea27b0744ba0255ecc9879"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10b9cbbef4eb5a627fc93bd1e577d3ac96097110", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10b9cbbef4eb5a627fc93bd1e577d3ac96097110", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10b9cbbef4eb5a627fc93bd1e577d3ac96097110", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10b9cbbef4eb5a627fc93bd1e577d3ac96097110/comments", "author": null, "committer": null, "parents": [{"sha": "4f923eb83d32ac3201a608fff7290bf4af6ea840", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f923eb83d32ac3201a608fff7290bf4af6ea840", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f923eb83d32ac3201a608fff7290bf4af6ea840"}], "stats": {"total": 572, "additions": 225, "deletions": 347}, "files": [{"sha": "ed1eb18bfe2134462012a914bd1fbd87d2657601", "filename": "gcc/objc/objc-parse.c", "status": "modified", "additions": 201, "deletions": 262, "changes": 463, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10b9cbbef4eb5a627fc93bd1e577d3ac96097110/gcc%2Fobjc%2Fobjc-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10b9cbbef4eb5a627fc93bd1e577d3ac96097110/gcc%2Fobjc%2Fobjc-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-parse.c?ref=10b9cbbef4eb5a627fc93bd1e577d3ac96097110", "patch": "@@ -495,27 +495,27 @@ static const short yyrline[] = { 0,\n   1574,  1580,  1598,  1603,  1608,  1611,  1625,  1634,  1638,  1642,\n   1646,  1652,  1656,  1661,  1664,  1669,  1672,  1673,  1689,  1694,\n   1697,  1709,  1711,  1721,  1731,  1732,  1739,  1741,  1753,  1757,\n-  1771,  1777,  1783,  1784,  1789,  1794,  1798,  1802,  1813,  1820,\n-  1827,  1834,  1845,  1851,  1854,  1859,  1882,  1912,  1943,  1974,\n-  1989,  2003,  2007,  2011,  2014,  2019,  2021,  2024,  2026,  2030,\n-  2035,  2038,  2044,  2049,  2054,  2056,  2065,  2066,  2072,  2074,\n-  2084,  2086,  2090,  2093,  2099,  2108,  2116,  2124,  2133,  2146,\n-  2151,  2156,  2158,  2167,  2170,  2175,  2178,  2182,  2191,  2193,\n-  2194,  2195,  2196,  2197,  2211,  2214,  2218,  2224,  2230,  2237,\n-  2242,  2248,  2255,  2261,  2267,  2272,  2278,  2285,  2291,  2297,\n-  2303,  2311,  2317,  2323,  2331,  2338,  2344,  2353,  2360,  2368,\n-  2373,  2376,  2386,  2388,  2391,  2393,  2394,  2397,  2402,  2403,\n-  2420,  2426,  2431,  2435,  2438,  2439,  2442,  2450,  2456,  2465,\n-  2475,  2482,  2486,  2491,  2500,  2507,  2511,  2521,  2523,  2524,\n-  2526,  2528,  2529,  2530,  2531,  2533,  2535,  2538,  2546,  2553,\n-  2553,  2560,  2566,  2568,  2574,  2579,  2584,  2593,  2595,  2601,\n-  2603,  2606,  2608,  2609,  2610,  2613,  2618,  2620,  2624,  2627,\n-  2634,  2640,  2645,  2652,  2657,  2662,  2667,  2674,  2678,  2681,\n-  2687,  2689,  2690,  2691,  2694,  2696,  2697,  2698,  2699,  2700,\n-  2701,  2702,  2703,  2704,  2705,  2706,  2707,  2708,  2709,  2710,\n-  2711,  2712,  2713,  2714,  2714,  2717,  2723,  2728,  2733,  2739,\n-  2741,  2744,  2746,  2753,  2765,  2770,  2776,  2778,  2784,  2788,\n-  2789,  2795,  2797,  2800,  2802,  2808,  2813,  2819,  2826,  2835\n+  1771,  1777,  1783,  1784,  1788,  1792,  1796,  1800,  1811,  1818,\n+  1825,  1832,  1843,  1849,  1852,  1857,  1880,  1910,  1916,  1922,\n+  1928,  1942,  1946,  1950,  1953,  1958,  1960,  1963,  1965,  1969,\n+  1974,  1977,  1983,  1988,  1993,  1995,  2004,  2005,  2011,  2013,\n+  2023,  2025,  2029,  2032,  2038,  2047,  2055,  2063,  2072,  2085,\n+  2090,  2095,  2097,  2106,  2109,  2114,  2117,  2121,  2130,  2132,\n+  2133,  2134,  2135,  2136,  2150,  2153,  2157,  2163,  2169,  2176,\n+  2181,  2187,  2194,  2200,  2206,  2211,  2217,  2224,  2230,  2236,\n+  2242,  2250,  2256,  2262,  2270,  2277,  2283,  2292,  2299,  2307,\n+  2312,  2315,  2325,  2327,  2330,  2332,  2333,  2336,  2341,  2342,\n+  2359,  2365,  2370,  2374,  2377,  2378,  2381,  2389,  2395,  2404,\n+  2414,  2421,  2425,  2430,  2439,  2446,  2450,  2460,  2462,  2463,\n+  2465,  2467,  2468,  2469,  2470,  2472,  2474,  2477,  2485,  2492,\n+  2492,  2499,  2505,  2507,  2513,  2518,  2523,  2532,  2534,  2540,\n+  2542,  2545,  2547,  2548,  2549,  2552,  2557,  2559,  2563,  2566,\n+  2573,  2579,  2584,  2591,  2596,  2601,  2606,  2613,  2617,  2620,\n+  2626,  2628,  2629,  2630,  2633,  2635,  2636,  2637,  2638,  2639,\n+  2640,  2641,  2642,  2643,  2644,  2645,  2646,  2647,  2648,  2649,\n+  2650,  2651,  2652,  2653,  2653,  2656,  2662,  2667,  2672,  2678,\n+  2680,  2683,  2685,  2692,  2704,  2709,  2715,  2717,  2723,  2727,\n+  2728,  2734,  2736,  2739,  2741,  2747,  2752,  2758,  2765,  2774\n };\n #endif\n \n@@ -3874,32 +3874,30 @@ case 363:\n     break;}\n case 364:\n #line 1785 \"objc-parse.y\"\n-{ stmt_count++;\n-\t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n-\t\t  if ( ! expand_exit_something ())\n-\t\t    error (\"break statement not within loop or switch\"); ;\n+{ tree break_stmt = build_break_stmt ();\n+\t\t  stmt_count++;\n+\t\t  genrtl_break_stmt (); ;\n     break;}\n case 365:\n-#line 1790 \"objc-parse.y\"\n-{ stmt_count++;\n-\t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n-\t\t  if (! expand_continue_loop (NULL_PTR))\n-\t\t    error (\"continue statement not within a loop\"); ;\n+#line 1789 \"objc-parse.y\"\n+{ tree continue_stmt = build_continue_stmt ();\n+                  stmt_count++;\n+\t\t  genrtl_continue_stmt (); ;\n     break;}\n case 366:\n-#line 1795 \"objc-parse.y\"\n-{ stmt_count++;\n-\t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n-\t\t  c_expand_return (NULL_TREE); ;\n+#line 1793 \"objc-parse.y\"\n+{ tree return_stmt = build_return_stmt (NULL_TREE);\n+                  stmt_count++;\n+\t\t  genrtl_return_stmt (RETURN_EXPR(return_stmt)); ;\n     break;}\n case 367:\n-#line 1799 \"objc-parse.y\"\n-{ stmt_count++;\n-\t\t  emit_line_note (yyvsp[-4].filename, yyvsp[-3].lineno);\n-\t\t  c_expand_return (yyvsp[-1].ttype); ;\n+#line 1797 \"objc-parse.y\"\n+{ tree return_stmt = build_return_stmt (yyvsp[-1].ttype);\n+                  stmt_count++;\n+\t\t  genrtl_return_stmt (RETURN_EXPR(return_stmt)); ;\n     break;}\n case 368:\n-#line 1803 \"objc-parse.y\"\n+#line 1801 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-7].filename, yyvsp[-6].lineno);\n \t\t  STRIP_NOPS (yyvsp[-2].ttype);\n@@ -3911,31 +3909,31 @@ case 368:\n \t\t    error (\"argument of `asm' is not a constant string\"); ;\n     break;}\n case 369:\n-#line 1814 \"objc-parse.y\"\n+#line 1812 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-9].filename, yyvsp[-8].lineno);\n \t\t  c_expand_asm_operands (yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE, NULL_TREE,\n \t\t\t\t\t yyvsp[-6].ttype == ridpointers[(int)RID_VOLATILE],\n \t\t\t\t\t input_filename, lineno); ;\n     break;}\n case 370:\n-#line 1821 \"objc-parse.y\"\n+#line 1819 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-11].filename, yyvsp[-10].lineno);\n \t\t  c_expand_asm_operands (yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE,\n \t\t\t\t\t yyvsp[-8].ttype == ridpointers[(int)RID_VOLATILE],\n \t\t\t\t\t input_filename, lineno); ;\n     break;}\n case 371:\n-#line 1829 \"objc-parse.y\"\n+#line 1827 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-13].filename, yyvsp[-12].lineno);\n \t\t  c_expand_asm_operands (yyvsp[-8].ttype, yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype,\n \t\t\t\t\t yyvsp[-10].ttype == ridpointers[(int)RID_VOLATILE],\n \t\t\t\t\t input_filename, lineno); ;\n     break;}\n case 372:\n-#line 1835 \"objc-parse.y\"\n+#line 1833 \"objc-parse.y\"\n { tree decl;\n \t\t  stmt_count++;\n \t\t  emit_line_note (yyvsp[-4].filename, yyvsp[-3].lineno);\n@@ -3948,15 +3946,15 @@ case 372:\n \t\t;\n     break;}\n case 373:\n-#line 1846 \"objc-parse.y\"\n+#line 1844 \"objc-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids `goto *expr;'\");\n \t\t  stmt_count++;\n \t\t  emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  expand_computed_goto (convert (ptr_type_node, yyvsp[-1].ttype)); ;\n     break;}\n case 376:\n-#line 1861 \"objc-parse.y\"\n+#line 1859 \"objc-parse.y\"\n {\n \t    /* The value returned by this action is  */\n \t    /*      1 if everything is OK */ \n@@ -3979,97 +3977,38 @@ case 376:\n \t  ;\n     break;}\n case 377:\n-#line 1882 \"objc-parse.y\"\n+#line 1880 \"objc-parse.y\"\n {\n \t    if (yyvsp[-1].itype)\n \t      iterator_for_loop_end (yyvsp[-3].ttype);\n \t  ;\n     break;}\n case 378:\n-#line 1913 \"objc-parse.y\"\n-{ register tree value = check_case_value (yyvsp[-1].ttype);\n-\t\t  register tree label\n-\t\t    = build_decl (LABEL_DECL, NULL_TREE, NULL_TREE);\n-\n+#line 1911 \"objc-parse.y\"\n+{ tree case_label_tree = build_case_label (yyvsp[-1].ttype, NULL_TREE);\n \t\t  stmt_count++;\n-\n-\t\t  if (value != error_mark_node)\n-\t\t    {\n-\t\t      tree duplicate;\n-\t\t      int success;\n-\n-\t\t      if (pedantic && ! INTEGRAL_TYPE_P (TREE_TYPE (value)))\n-\t\t\tpedwarn (\"label must have integral type in ANSI C\");\n-\n-\t\t      success = pushcase (value, convert_and_check,\n-\t\t\t\t\t  label, &duplicate);\n-\n-\t\t      if (success == 1)\n-\t\t\terror (\"case label not within a switch statement\");\n-\t\t      else if (success == 2)\n-\t\t\t{\n-\t\t\t  error (\"duplicate case value\");\n-\t\t\t  error_with_decl (duplicate, \"this is the first entry for that value\");\n-\t\t\t}\n-\t\t      else if (success == 3)\n-\t\t\twarning (\"case value out of range\");\n-\t\t      else if (success == 5)\n-\t\t\terror (\"case label within scope of cleanup or variable array\");\n-\t\t    }\n-\t\t  position_after_white_space (); ;\n+\t\t  genrtl_case_label(CASE_LOW(case_label_tree), CASE_HIGH(case_label_tree));\n+\t\t  position_after_white_space ();\n+\t\t;\n     break;}\n case 379:\n-#line 1944 \"objc-parse.y\"\n-{ register tree value1 = check_case_value (yyvsp[-3].ttype);\n-\t\t  register tree value2 = check_case_value (yyvsp[-1].ttype);\n-\t\t  register tree label\n-\t\t    = build_decl (LABEL_DECL, NULL_TREE, NULL_TREE);\n-\n-\t\t  if (pedantic)\n-\t\t    pedwarn (\"ANSI C forbids case ranges\");\n+#line 1917 \"objc-parse.y\"\n+{ tree case_label_tree = build_case_label (yyvsp[-3].ttype, yyvsp[-1].ttype);\n \t\t  stmt_count++;\n-\n-\t\t  if (value1 != error_mark_node && value2 != error_mark_node)\n-\t\t    {\n-\t\t      tree duplicate;\n-\t\t      int success = pushcase_range (value1, value2,\n-\t\t\t\t\t\t    convert_and_check, label,\n-\t\t\t\t\t\t    &duplicate);\n-\t\t      if (success == 1)\n-\t\t\terror (\"case label not within a switch statement\");\n-\t\t      else if (success == 2)\n-\t\t\t{\n-\t\t\t  error (\"duplicate case value\");\n-\t\t\t  error_with_decl (duplicate, \"this is the first entry for that value\");\n-\t\t\t}\n-\t\t      else if (success == 3)\n-\t\t\twarning (\"case value out of range\");\n-\t\t      else if (success == 4)\n-\t\t\twarning (\"empty case range\");\n-\t\t      else if (success == 5)\n-\t\t\terror (\"case label within scope of cleanup or variable array\");\n-\t\t    }\n-\t\t  position_after_white_space (); ;\n+\t\t  genrtl_case_label(CASE_LOW(case_label_tree), CASE_HIGH(case_label_tree));\n+\t\t  position_after_white_space ();\n+\t\t;\n     break;}\n case 380:\n-#line 1975 \"objc-parse.y\"\n-{\n-\t\t  tree duplicate;\n-\t\t  register tree label\n-\t\t    = build_decl (LABEL_DECL, NULL_TREE, NULL_TREE);\n-\t\t  int success = pushcase (NULL_TREE, 0, label, &duplicate);\n+#line 1923 \"objc-parse.y\"\n+{ tree case_label_tree = build_case_label (NULL_TREE, NULL_TREE);\n \t\t  stmt_count++;\n-\t\t  if (success == 1)\n-\t\t    error (\"default label not within a switch statement\");\n-\t\t  else if (success == 2)\n-\t\t    {\n-\t\t      error (\"multiple default labels in one switch\");\n-\t\t      error_with_decl (duplicate, \"this is the first default label\");\n-\t\t    }\n-\t\t  position_after_white_space (); ;\n+\t\t  genrtl_case_label(CASE_LOW(case_label_tree), CASE_HIGH(case_label_tree));\n+\t\t  position_after_white_space ();\n+\t\t;\n     break;}\n case 381:\n-#line 1990 \"objc-parse.y\"\n+#line 1929 \"objc-parse.y\"\n { tree label = define_label (input_filename, lineno, yyvsp[-2].ttype);\n \t\t  stmt_count++;\n \t\t  emit_nop ();\n@@ -4081,52 +4020,52 @@ case 381:\n \t\t  position_after_white_space (); ;\n     break;}\n case 382:\n-#line 2005 \"objc-parse.y\"\n+#line 1944 \"objc-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 383:\n-#line 2008 \"objc-parse.y\"\n+#line 1947 \"objc-parse.y\"\n { emit_line_note (input_filename, lineno); ;\n     break;}\n case 384:\n-#line 2013 \"objc-parse.y\"\n+#line 1952 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 386:\n-#line 2020 \"objc-parse.y\"\n+#line 1959 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 389:\n-#line 2027 \"objc-parse.y\"\n+#line 1966 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 390:\n-#line 2032 \"objc-parse.y\"\n+#line 1971 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 391:\n-#line 2037 \"objc-parse.y\"\n+#line 1976 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, combine_strings (yyvsp[0].ttype), NULL_TREE); ;\n     break;}\n case 392:\n-#line 2039 \"objc-parse.y\"\n+#line 1978 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, combine_strings (yyvsp[0].ttype), yyvsp[-2].ttype); ;\n     break;}\n case 393:\n-#line 2045 \"objc-parse.y\"\n+#line 1984 \"objc-parse.y\"\n { pushlevel (0);\n \t\t  clear_parm_order ();\n \t\t  declare_parm_level (0); ;\n     break;}\n case 394:\n-#line 2049 \"objc-parse.y\"\n+#line 1988 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  parmlist_tags_warning ();\n \t\t  poplevel (0, 0, 0); ;\n     break;}\n case 396:\n-#line 2057 \"objc-parse.y\"\n+#line 1996 \"objc-parse.y\"\n { tree parm;\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids forward parameter declarations\");\n@@ -4136,19 +4075,19 @@ case 396:\n \t\t  clear_parm_order (); ;\n     break;}\n case 397:\n-#line 2065 \"objc-parse.y\"\n+#line 2004 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 398:\n-#line 2067 \"objc-parse.y\"\n+#line 2006 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, NULL_TREE, NULL_TREE); ;\n     break;}\n case 399:\n-#line 2073 \"objc-parse.y\"\n+#line 2012 \"objc-parse.y\"\n { yyval.ttype = get_parm_info (0); ;\n     break;}\n case 400:\n-#line 2075 \"objc-parse.y\"\n+#line 2014 \"objc-parse.y\"\n { yyval.ttype = get_parm_info (0);\n \t\t  /* Gcc used to allow this as an extension.  However, it does\n \t\t     not work for all targets, and thus has been disabled.\n@@ -4160,23 +4099,23 @@ case 400:\n \t\t;\n     break;}\n case 401:\n-#line 2085 \"objc-parse.y\"\n+#line 2024 \"objc-parse.y\"\n { yyval.ttype = get_parm_info (1); ;\n     break;}\n case 402:\n-#line 2087 \"objc-parse.y\"\n+#line 2026 \"objc-parse.y\"\n { yyval.ttype = get_parm_info (0); ;\n     break;}\n case 403:\n-#line 2092 \"objc-parse.y\"\n+#line 2031 \"objc-parse.y\"\n { push_parm_decl (yyvsp[0].ttype); ;\n     break;}\n case 404:\n-#line 2094 \"objc-parse.y\"\n+#line 2033 \"objc-parse.y\"\n { push_parm_decl (yyvsp[0].ttype); ;\n     break;}\n case 405:\n-#line 2101 \"objc-parse.y\"\n+#line 2040 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -4186,7 +4125,7 @@ case 405:\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 406:\n-#line 2109 \"objc-parse.y\"\n+#line 2048 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -4196,7 +4135,7 @@ case 406:\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 407:\n-#line 2117 \"objc-parse.y\"\n+#line 2056 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -4206,7 +4145,7 @@ case 407:\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 408:\n-#line 2125 \"objc-parse.y\"\n+#line 2064 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -4216,7 +4155,7 @@ case 408:\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 409:\n-#line 2134 \"objc-parse.y\"\n+#line 2073 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -4226,49 +4165,49 @@ case 409:\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 410:\n-#line 2147 \"objc-parse.y\"\n+#line 2086 \"objc-parse.y\"\n { pushlevel (0);\n \t\t  clear_parm_order ();\n \t\t  declare_parm_level (1); ;\n     break;}\n case 411:\n-#line 2151 \"objc-parse.y\"\n+#line 2090 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  parmlist_tags_warning ();\n \t\t  poplevel (0, 0, 0); ;\n     break;}\n case 413:\n-#line 2159 \"objc-parse.y\"\n+#line 2098 \"objc-parse.y\"\n { tree t;\n \t\t  for (t = yyvsp[-1].ttype; t; t = TREE_CHAIN (t))\n \t\t    if (TREE_VALUE (t) == NULL_TREE)\n \t\t      error (\"`...' in old-style identifier list\");\n \t\t  yyval.ttype = tree_cons (NULL_TREE, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 414:\n-#line 2169 \"objc-parse.y\"\n+#line 2108 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 415:\n-#line 2171 \"objc-parse.y\"\n+#line 2110 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 416:\n-#line 2177 \"objc-parse.y\"\n+#line 2116 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 417:\n-#line 2179 \"objc-parse.y\"\n+#line 2118 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 418:\n-#line 2184 \"objc-parse.y\"\n+#line 2123 \"objc-parse.y\"\n { yyval.ttype = SAVE_WARN_FLAGS();\n \t\t  pedantic = 0;\n \t\t  warn_pointer_arith = 0; ;\n     break;}\n case 424:\n-#line 2198 \"objc-parse.y\"\n+#line 2137 \"objc-parse.y\"\n {\n \t\t  if (objc_implementation_context)\n                     {\n@@ -4281,114 +4220,114 @@ case 424:\n \t\t;\n     break;}\n case 425:\n-#line 2213 \"objc-parse.y\"\n+#line 2152 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 426:\n-#line 2215 \"objc-parse.y\"\n+#line 2154 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 427:\n-#line 2220 \"objc-parse.y\"\n+#line 2159 \"objc-parse.y\"\n {\n \t\t  objc_declare_class (yyvsp[-1].ttype);\n \t\t;\n     break;}\n case 428:\n-#line 2226 \"objc-parse.y\"\n+#line 2165 \"objc-parse.y\"\n {\n \t\t  objc_declare_alias (yyvsp[-2].ttype, yyvsp[-1].ttype);\n \t\t;\n     break;}\n case 429:\n-#line 2232 \"objc-parse.y\"\n+#line 2171 \"objc-parse.y\"\n {\n \t\t  objc_interface_context = objc_ivar_context\n \t\t    = start_class (CLASS_INTERFACE_TYPE, yyvsp[-2].ttype, NULL_TREE, yyvsp[-1].ttype);\n                   objc_public_flag = 0;\n \t\t;\n     break;}\n case 430:\n-#line 2238 \"objc-parse.y\"\n+#line 2177 \"objc-parse.y\"\n {\n                   continue_class (objc_interface_context);\n \t\t;\n     break;}\n case 431:\n-#line 2243 \"objc-parse.y\"\n+#line 2182 \"objc-parse.y\"\n {\n \t\t  finish_class (objc_interface_context);\n \t\t  objc_interface_context = NULL_TREE;\n \t\t;\n     break;}\n case 432:\n-#line 2249 \"objc-parse.y\"\n+#line 2188 \"objc-parse.y\"\n {\n \t\t  objc_interface_context\n \t\t    = start_class (CLASS_INTERFACE_TYPE, yyvsp[-1].ttype, NULL_TREE, yyvsp[0].ttype);\n                   continue_class (objc_interface_context);\n \t\t;\n     break;}\n case 433:\n-#line 2256 \"objc-parse.y\"\n+#line 2195 \"objc-parse.y\"\n {\n \t\t  finish_class (objc_interface_context);\n \t\t  objc_interface_context = NULL_TREE;\n \t\t;\n     break;}\n case 434:\n-#line 2262 \"objc-parse.y\"\n+#line 2201 \"objc-parse.y\"\n {\n \t\t  objc_interface_context = objc_ivar_context\n \t\t    = start_class (CLASS_INTERFACE_TYPE, yyvsp[-4].ttype, yyvsp[-2].ttype, yyvsp[-1].ttype);\n                   objc_public_flag = 0;\n \t\t;\n     break;}\n case 435:\n-#line 2268 \"objc-parse.y\"\n+#line 2207 \"objc-parse.y\"\n {\n                   continue_class (objc_interface_context);\n \t\t;\n     break;}\n case 436:\n-#line 2273 \"objc-parse.y\"\n+#line 2212 \"objc-parse.y\"\n {\n \t\t  finish_class (objc_interface_context);\n \t\t  objc_interface_context = NULL_TREE;\n \t\t;\n     break;}\n case 437:\n-#line 2279 \"objc-parse.y\"\n+#line 2218 \"objc-parse.y\"\n {\n \t\t  objc_interface_context\n \t\t    = start_class (CLASS_INTERFACE_TYPE, yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype);\n                   continue_class (objc_interface_context);\n \t\t;\n     break;}\n case 438:\n-#line 2286 \"objc-parse.y\"\n+#line 2225 \"objc-parse.y\"\n {\n \t\t  finish_class (objc_interface_context);\n \t\t  objc_interface_context = NULL_TREE;\n \t\t;\n     break;}\n case 439:\n-#line 2292 \"objc-parse.y\"\n+#line 2231 \"objc-parse.y\"\n {\n \t\t  objc_implementation_context = objc_ivar_context\n \t\t    = start_class (CLASS_IMPLEMENTATION_TYPE, yyvsp[-1].ttype, NULL_TREE, NULL_TREE);\n                   objc_public_flag = 0;\n \t\t;\n     break;}\n case 440:\n-#line 2298 \"objc-parse.y\"\n+#line 2237 \"objc-parse.y\"\n {\n                   objc_ivar_chain\n \t\t    = continue_class (objc_implementation_context);\n \t\t;\n     break;}\n case 441:\n-#line 2304 \"objc-parse.y\"\n+#line 2243 \"objc-parse.y\"\n {\n \t\t  objc_implementation_context\n \t\t    = start_class (CLASS_IMPLEMENTATION_TYPE, yyvsp[0].ttype, NULL_TREE, NULL_TREE);\n@@ -4397,22 +4336,22 @@ case 441:\n \t\t;\n     break;}\n case 442:\n-#line 2312 \"objc-parse.y\"\n+#line 2251 \"objc-parse.y\"\n {\n \t\t  objc_implementation_context = objc_ivar_context\n \t\t    = start_class (CLASS_IMPLEMENTATION_TYPE, yyvsp[-3].ttype, yyvsp[-1].ttype, NULL_TREE);\n                   objc_public_flag = 0;\n \t\t;\n     break;}\n case 443:\n-#line 2318 \"objc-parse.y\"\n+#line 2257 \"objc-parse.y\"\n {\n                   objc_ivar_chain\n \t\t    = continue_class (objc_implementation_context);\n \t\t;\n     break;}\n case 444:\n-#line 2324 \"objc-parse.y\"\n+#line 2263 \"objc-parse.y\"\n {\n \t\t  objc_implementation_context\n \t\t    = start_class (CLASS_IMPLEMENTATION_TYPE, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE);\n@@ -4421,22 +4360,22 @@ case 444:\n \t\t;\n     break;}\n case 445:\n-#line 2332 \"objc-parse.y\"\n+#line 2271 \"objc-parse.y\"\n {\n \t\t  objc_interface_context\n \t\t    = start_class (CATEGORY_INTERFACE_TYPE, yyvsp[-4].ttype, yyvsp[-2].ttype, yyvsp[0].ttype);\n                   continue_class (objc_interface_context);\n \t\t;\n     break;}\n case 446:\n-#line 2339 \"objc-parse.y\"\n+#line 2278 \"objc-parse.y\"\n {\n \t\t  finish_class (objc_interface_context);\n \t\t  objc_interface_context = NULL_TREE;\n \t\t;\n     break;}\n case 447:\n-#line 2345 \"objc-parse.y\"\n+#line 2284 \"objc-parse.y\"\n {\n \t\t  objc_implementation_context\n \t\t    = start_class (CATEGORY_IMPLEMENTATION_TYPE, yyvsp[-3].ttype, yyvsp[-1].ttype, NULL_TREE);\n@@ -4445,29 +4384,29 @@ case 447:\n \t\t;\n     break;}\n case 448:\n-#line 2355 \"objc-parse.y\"\n+#line 2294 \"objc-parse.y\"\n {\n \t\t  remember_protocol_qualifiers ();\n \t\t  objc_interface_context\n \t\t    = start_protocol(PROTOCOL_INTERFACE_TYPE, yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 449:\n-#line 2361 \"objc-parse.y\"\n+#line 2300 \"objc-parse.y\"\n {\n \t\t  forget_protocol_qualifiers();\n \t\t  finish_protocol(objc_interface_context);\n \t\t  objc_interface_context = NULL_TREE;\n \t\t;\n     break;}\n case 450:\n-#line 2370 \"objc-parse.y\"\n+#line 2309 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = NULL_TREE;\n \t\t;\n     break;}\n case 452:\n-#line 2378 \"objc-parse.y\"\n+#line 2317 \"objc-parse.y\"\n {\n \t\t  if (yyvsp[-2].code == LT_EXPR && yyvsp[0].code == GT_EXPR)\n \t\t    yyval.ttype = yyvsp[-1].ttype;\n@@ -4476,54 +4415,54 @@ case 452:\n \t\t;\n     break;}\n case 455:\n-#line 2392 \"objc-parse.y\"\n+#line 2331 \"objc-parse.y\"\n { objc_public_flag = 2; ;\n     break;}\n case 456:\n-#line 2393 \"objc-parse.y\"\n+#line 2332 \"objc-parse.y\"\n { objc_public_flag = 0; ;\n     break;}\n case 457:\n-#line 2394 \"objc-parse.y\"\n+#line 2333 \"objc-parse.y\"\n { objc_public_flag = 1; ;\n     break;}\n case 458:\n-#line 2399 \"objc-parse.y\"\n+#line 2338 \"objc-parse.y\"\n {\n                   yyval.ttype = NULL_TREE;\n                 ;\n     break;}\n case 460:\n-#line 2404 \"objc-parse.y\"\n+#line 2343 \"objc-parse.y\"\n {\n                   if (pedantic)\n \t\t    pedwarn (\"extra semicolon in struct or union specified\");\n                 ;\n     break;}\n case 461:\n-#line 2422 \"objc-parse.y\"\n+#line 2361 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 462:\n-#line 2427 \"objc-parse.y\"\n+#line 2366 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 463:\n-#line 2432 \"objc-parse.y\"\n+#line 2371 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 464:\n-#line 2437 \"objc-parse.y\"\n+#line 2376 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 467:\n-#line 2444 \"objc-parse.y\"\n+#line 2383 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = add_instance_variable (objc_ivar_context,\n \t\t\t\t\t      objc_public_flag,\n@@ -4532,15 +4471,15 @@ case 467:\n                 ;\n     break;}\n case 468:\n-#line 2451 \"objc-parse.y\"\n+#line 2390 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = add_instance_variable (objc_ivar_context,\n \t\t\t\t\t      objc_public_flag,\n \t\t\t\t\t      yyvsp[-2].ttype, current_declspecs, yyvsp[0].ttype);\n                 ;\n     break;}\n case 469:\n-#line 2457 \"objc-parse.y\"\n+#line 2396 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = add_instance_variable (objc_ivar_context,\n \t\t\t\t\t      objc_public_flag,\n@@ -4549,7 +4488,7 @@ case 469:\n                 ;\n     break;}\n case 470:\n-#line 2467 \"objc-parse.y\"\n+#line 2406 \"objc-parse.y\"\n {\n \t\t  remember_protocol_qualifiers ();\n \t\t  if (objc_implementation_context)\n@@ -4559,7 +4498,7 @@ case 470:\n \t\t;\n     break;}\n case 471:\n-#line 2475 \"objc-parse.y\"\n+#line 2414 \"objc-parse.y\"\n {\n \t\t  forget_protocol_qualifiers ();\n \t\t  add_class_method (objc_implementation_context, yyvsp[0].ttype);\n@@ -4568,20 +4507,20 @@ case 471:\n \t\t;\n     break;}\n case 472:\n-#line 2482 \"objc-parse.y\"\n+#line 2421 \"objc-parse.y\"\n {\n \t\t  continue_method_def ();\n \t\t;\n     break;}\n case 473:\n-#line 2486 \"objc-parse.y\"\n+#line 2425 \"objc-parse.y\"\n {\n \t\t  finish_method_def ();\n \t\t  objc_method_context = NULL_TREE;\n \t\t;\n     break;}\n case 474:\n-#line 2492 \"objc-parse.y\"\n+#line 2431 \"objc-parse.y\"\n {\n \t\t  remember_protocol_qualifiers ();\n \t\t  if (objc_implementation_context)\n@@ -4591,7 +4530,7 @@ case 474:\n \t\t;\n     break;}\n case 475:\n-#line 2500 \"objc-parse.y\"\n+#line 2439 \"objc-parse.y\"\n {\n \t\t  forget_protocol_qualifiers ();\n \t\t  add_instance_method (objc_implementation_context, yyvsp[0].ttype);\n@@ -4600,266 +4539,266 @@ case 475:\n \t\t;\n     break;}\n case 476:\n-#line 2507 \"objc-parse.y\"\n+#line 2446 \"objc-parse.y\"\n {\n \t\t  continue_method_def ();\n \t\t;\n     break;}\n case 477:\n-#line 2511 \"objc-parse.y\"\n+#line 2450 \"objc-parse.y\"\n {\n \t\t  finish_method_def ();\n \t\t  objc_method_context = NULL_TREE;\n \t\t;\n     break;}\n case 479:\n-#line 2523 \"objc-parse.y\"\n+#line 2462 \"objc-parse.y\"\n {yyval.ttype = NULL_TREE; ;\n     break;}\n case 484:\n-#line 2530 \"objc-parse.y\"\n+#line 2469 \"objc-parse.y\"\n {yyval.ttype = NULL_TREE; ;\n     break;}\n case 488:\n-#line 2540 \"objc-parse.y\"\n+#line 2479 \"objc-parse.y\"\n {\n \t\t  /* Remember protocol qualifiers in prototypes.  */\n \t\t  remember_protocol_qualifiers ();\n \t\t  objc_inherit_code = CLASS_METHOD_DECL;\n \t\t;\n     break;}\n case 489:\n-#line 2546 \"objc-parse.y\"\n+#line 2485 \"objc-parse.y\"\n {\n \t\t  /* Forget protocol qualifiers here.  */\n \t\t  forget_protocol_qualifiers ();\n \t\t  add_class_method (objc_interface_context, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 491:\n-#line 2554 \"objc-parse.y\"\n+#line 2493 \"objc-parse.y\"\n {\n \t\t  /* Remember protocol qualifiers in prototypes.  */\n \t\t  remember_protocol_qualifiers ();\n \t\t  objc_inherit_code = INSTANCE_METHOD_DECL;\n \t\t;\n     break;}\n case 492:\n-#line 2560 \"objc-parse.y\"\n+#line 2499 \"objc-parse.y\"\n {\n \t\t  /* Forget protocol qualifiers here.  */\n \t\t  forget_protocol_qualifiers ();\n \t\t  add_instance_method (objc_interface_context, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 494:\n-#line 2570 \"objc-parse.y\"\n+#line 2509 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_method_decl (objc_inherit_code, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE);\n \t\t;\n     break;}\n case 495:\n-#line 2575 \"objc-parse.y\"\n+#line 2514 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_method_decl (objc_inherit_code, NULL_TREE, yyvsp[0].ttype, NULL_TREE);\n \t\t;\n     break;}\n case 496:\n-#line 2580 \"objc-parse.y\"\n+#line 2519 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_method_decl (objc_inherit_code, yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 497:\n-#line 2585 \"objc-parse.y\"\n+#line 2524 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_method_decl (objc_inherit_code, NULL_TREE, yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 506:\n-#line 2615 \"objc-parse.y\"\n+#line 2554 \"objc-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack); ;\n     break;}\n case 507:\n-#line 2619 \"objc-parse.y\"\n+#line 2558 \"objc-parse.y\"\n { shadow_tag (yyvsp[-1].ttype); ;\n     break;}\n case 508:\n-#line 2621 \"objc-parse.y\"\n+#line 2560 \"objc-parse.y\"\n { pedwarn (\"empty declaration\"); ;\n     break;}\n case 509:\n-#line 2626 \"objc-parse.y\"\n+#line 2565 \"objc-parse.y\"\n { push_parm_decl (yyvsp[0].ttype); ;\n     break;}\n case 510:\n-#line 2628 \"objc-parse.y\"\n+#line 2567 \"objc-parse.y\"\n { push_parm_decl (yyvsp[0].ttype); ;\n     break;}\n case 511:\n-#line 2636 \"objc-parse.y\"\n+#line 2575 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n \t\t\t\t\t\t\t yyvsp[0].ttype)); ;\n     break;}\n case 512:\n-#line 2641 \"objc-parse.y\"\n+#line 2580 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n \t\t\t\t\t\t\t yyvsp[0].ttype)); ;\n     break;}\n case 513:\n-#line 2646 \"objc-parse.y\"\n+#line 2585 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n \t\t\t\t\t\t\t yyvsp[0].ttype)); ;\n     break;}\n case 514:\n-#line 2654 \"objc-parse.y\"\n+#line 2593 \"objc-parse.y\"\n {\n \t    \t  yyval.ttype = NULL_TREE;\n \t\t;\n     break;}\n case 515:\n-#line 2658 \"objc-parse.y\"\n+#line 2597 \"objc-parse.y\"\n {\n \t\t  /* oh what a kludge! */\n \t\t  yyval.ttype = objc_ellipsis_node;\n \t\t;\n     break;}\n case 516:\n-#line 2663 \"objc-parse.y\"\n+#line 2602 \"objc-parse.y\"\n {\n \t\t  pushlevel (0);\n \t\t;\n     break;}\n case 517:\n-#line 2667 \"objc-parse.y\"\n+#line 2606 \"objc-parse.y\"\n {\n \t  \t  /* returns a tree list node generated by get_parm_info */\n \t\t  yyval.ttype = yyvsp[0].ttype;\n \t\t  poplevel (0, 0, 0);\n \t\t;\n     break;}\n case 520:\n-#line 2682 \"objc-parse.y\"\n+#line 2621 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 525:\n-#line 2695 \"objc-parse.y\"\n+#line 2634 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 526:\n-#line 2696 \"objc-parse.y\"\n+#line 2635 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 527:\n-#line 2697 \"objc-parse.y\"\n+#line 2636 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 528:\n-#line 2698 \"objc-parse.y\"\n+#line 2637 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 529:\n-#line 2699 \"objc-parse.y\"\n+#line 2638 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 530:\n-#line 2700 \"objc-parse.y\"\n+#line 2639 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 531:\n-#line 2701 \"objc-parse.y\"\n+#line 2640 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 532:\n-#line 2702 \"objc-parse.y\"\n+#line 2641 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 533:\n-#line 2703 \"objc-parse.y\"\n+#line 2642 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 534:\n-#line 2704 \"objc-parse.y\"\n+#line 2643 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 535:\n-#line 2705 \"objc-parse.y\"\n+#line 2644 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 536:\n-#line 2706 \"objc-parse.y\"\n+#line 2645 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 537:\n-#line 2707 \"objc-parse.y\"\n+#line 2646 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 538:\n-#line 2708 \"objc-parse.y\"\n+#line 2647 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 539:\n-#line 2709 \"objc-parse.y\"\n+#line 2648 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 540:\n-#line 2710 \"objc-parse.y\"\n+#line 2649 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 541:\n-#line 2711 \"objc-parse.y\"\n+#line 2650 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 542:\n-#line 2712 \"objc-parse.y\"\n+#line 2651 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 543:\n-#line 2713 \"objc-parse.y\"\n+#line 2652 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 546:\n-#line 2719 \"objc-parse.y\"\n+#line 2658 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_keyword_decl (yyvsp[-5].ttype, yyvsp[-2].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 547:\n-#line 2724 \"objc-parse.y\"\n+#line 2663 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_keyword_decl (yyvsp[-2].ttype, NULL_TREE, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 548:\n-#line 2729 \"objc-parse.y\"\n+#line 2668 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_keyword_decl (NULL_TREE, yyvsp[-2].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 549:\n-#line 2734 \"objc-parse.y\"\n+#line 2673 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_keyword_decl (NULL_TREE, NULL_TREE, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 553:\n-#line 2747 \"objc-parse.y\"\n+#line 2686 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 554:\n-#line 2755 \"objc-parse.y\"\n+#line 2694 \"objc-parse.y\"\n {\n \t\t  if (TREE_CHAIN (yyvsp[0].ttype) == NULL_TREE)\n \t\t    /* just return the expr., remove a level of indirection */\n@@ -4870,69 +4809,69 @@ case 554:\n \t\t;\n     break;}\n case 555:\n-#line 2767 \"objc-parse.y\"\n+#line 2706 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_tree_list (yyvsp[-2].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 556:\n-#line 2771 \"objc-parse.y\"\n+#line 2710 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 558:\n-#line 2779 \"objc-parse.y\"\n+#line 2718 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = get_class_reference (yyvsp[0].ttype);\n \t\t;\n     break;}\n case 559:\n-#line 2786 \"objc-parse.y\"\n+#line 2725 \"objc-parse.y\"\n { objc_receiver_context = 1; ;\n     break;}\n case 560:\n-#line 2788 \"objc-parse.y\"\n+#line 2727 \"objc-parse.y\"\n { objc_receiver_context = 0; ;\n     break;}\n case 561:\n-#line 2790 \"objc-parse.y\"\n+#line 2729 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_tree_list (yyvsp[-3].ttype, yyvsp[-1].ttype);\n \t\t;\n     break;}\n case 565:\n-#line 2803 \"objc-parse.y\"\n+#line 2742 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 566:\n-#line 2810 \"objc-parse.y\"\n+#line 2749 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_tree_list (yyvsp[-1].ttype, NULL_TREE);\n \t\t;\n     break;}\n case 567:\n-#line 2814 \"objc-parse.y\"\n+#line 2753 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, NULL_TREE);\n \t\t;\n     break;}\n case 568:\n-#line 2821 \"objc-parse.y\"\n+#line 2760 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = yyvsp[-1].ttype;\n \t\t;\n     break;}\n case 569:\n-#line 2828 \"objc-parse.y\"\n+#line 2767 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = yyvsp[-1].ttype;\n \t\t;\n     break;}\n case 570:\n-#line 2837 \"objc-parse.y\"\n+#line 2776 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = groktypename (yyvsp[-1].ttype);\n \t\t;\n@@ -5159,5 +5098,5 @@ case 570:\n     }\n   return 1;\n }\n-#line 2842 \"objc-parse.y\"\n+#line 2781 \"objc-parse.y\"\n "}, {"sha": "91324bb48b0d15ca9c85d78488df4d9b9bdb945f", "filename": "gcc/objc/objc-parse.y", "status": "modified", "additions": 24, "deletions": 85, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10b9cbbef4eb5a627fc93bd1e577d3ac96097110/gcc%2Fobjc%2Fobjc-parse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10b9cbbef4eb5a627fc93bd1e577d3ac96097110/gcc%2Fobjc%2Fobjc-parse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-parse.y?ref=10b9cbbef4eb5a627fc93bd1e577d3ac96097110", "patch": "@@ -1782,23 +1782,21 @@ stmt:\n \t  lineno_labeled_stmt\n \t\t{ expand_end_case ($3); }\n \t| BREAK ';'\n-\t\t{ stmt_count++;\n-\t\t  emit_line_note ($<filename>-1, $<lineno>0);\n-\t\t  if ( ! expand_exit_something ())\n-\t\t    error (\"break statement not within loop or switch\"); }\n+\t        { tree break_stmt = build_break_stmt ();\n+\t\t  stmt_count++;\n+\t\t  genrtl_break_stmt (); }\n \t| CONTINUE ';'\n-\t\t{ stmt_count++;\n-\t\t  emit_line_note ($<filename>-1, $<lineno>0);\n-\t\t  if (! expand_continue_loop (NULL_PTR))\n-\t\t    error (\"continue statement not within a loop\"); }\n+                { tree continue_stmt = build_continue_stmt ();\n+                  stmt_count++;\n+\t\t  genrtl_continue_stmt (); }\n \t| RETURN ';'\n-\t\t{ stmt_count++;\n-\t\t  emit_line_note ($<filename>-1, $<lineno>0);\n-\t\t  c_expand_return (NULL_TREE); }\n+                { tree return_stmt = build_return_stmt (NULL_TREE);\n+                  stmt_count++;\n+\t\t  genrtl_return_stmt (RETURN_EXPR(return_stmt)); }\n \t| RETURN expr ';'\n-\t\t{ stmt_count++;\n-\t\t  emit_line_note ($<filename>-1, $<lineno>0);\n-\t\t  c_expand_return ($2); }\n+                { tree return_stmt = build_return_stmt ($2);\n+                  stmt_count++;\n+\t\t  genrtl_return_stmt (RETURN_EXPR(return_stmt)); }\n \t| ASM_KEYWORD maybe_type_qual '(' expr ')' ';'\n \t\t{ stmt_count++;\n \t\t  emit_line_note ($<filename>-1, $<lineno>0);\n@@ -1910,82 +1908,23 @@ all_iter_stmt_with_decl:\n    also at the end of a compound statement.  */\n \n label:\t  CASE expr_no_commas ':'\n-\t\t{ register tree value = check_case_value ($2);\n-\t\t  register tree label\n-\t\t    = build_decl (LABEL_DECL, NULL_TREE, NULL_TREE);\n-\n+                { tree case_label_tree = build_case_label ($2, NULL_TREE);\n \t\t  stmt_count++;\n-\n-\t\t  if (value != error_mark_node)\n-\t\t    {\n-\t\t      tree duplicate;\n-\t\t      int success;\n-\n-\t\t      if (pedantic && ! INTEGRAL_TYPE_P (TREE_TYPE (value)))\n-\t\t\tpedwarn (\"label must have integral type in ANSI C\");\n-\n-\t\t      success = pushcase (value, convert_and_check,\n-\t\t\t\t\t  label, &duplicate);\n-\n-\t\t      if (success == 1)\n-\t\t\terror (\"case label not within a switch statement\");\n-\t\t      else if (success == 2)\n-\t\t\t{\n-\t\t\t  error (\"duplicate case value\");\n-\t\t\t  error_with_decl (duplicate, \"this is the first entry for that value\");\n-\t\t\t}\n-\t\t      else if (success == 3)\n-\t\t\twarning (\"case value out of range\");\n-\t\t      else if (success == 5)\n-\t\t\terror (\"case label within scope of cleanup or variable array\");\n-\t\t    }\n-\t\t  position_after_white_space (); }\n+\t\t  genrtl_case_label(CASE_LOW(case_label_tree), CASE_HIGH(case_label_tree));\n+\t\t  position_after_white_space ();\n+\t\t}\n \t| CASE expr_no_commas ELLIPSIS expr_no_commas ':'\n-\t\t{ register tree value1 = check_case_value ($2);\n-\t\t  register tree value2 = check_case_value ($4);\n-\t\t  register tree label\n-\t\t    = build_decl (LABEL_DECL, NULL_TREE, NULL_TREE);\n-\n-\t\t  if (pedantic)\n-\t\t    pedwarn (\"ANSI C forbids case ranges\");\n+                { tree case_label_tree = build_case_label ($2, $4);\n \t\t  stmt_count++;\n-\n-\t\t  if (value1 != error_mark_node && value2 != error_mark_node)\n-\t\t    {\n-\t\t      tree duplicate;\n-\t\t      int success = pushcase_range (value1, value2,\n-\t\t\t\t\t\t    convert_and_check, label,\n-\t\t\t\t\t\t    &duplicate);\n-\t\t      if (success == 1)\n-\t\t\terror (\"case label not within a switch statement\");\n-\t\t      else if (success == 2)\n-\t\t\t{\n-\t\t\t  error (\"duplicate case value\");\n-\t\t\t  error_with_decl (duplicate, \"this is the first entry for that value\");\n-\t\t\t}\n-\t\t      else if (success == 3)\n-\t\t\twarning (\"case value out of range\");\n-\t\t      else if (success == 4)\n-\t\t\twarning (\"empty case range\");\n-\t\t      else if (success == 5)\n-\t\t\terror (\"case label within scope of cleanup or variable array\");\n-\t\t    }\n-\t\t  position_after_white_space (); }\n+\t\t  genrtl_case_label(CASE_LOW(case_label_tree), CASE_HIGH(case_label_tree));\n+\t\t  position_after_white_space ();\n+\t\t}\n \t| DEFAULT ':'\n-\t\t{\n-\t\t  tree duplicate;\n-\t\t  register tree label\n-\t\t    = build_decl (LABEL_DECL, NULL_TREE, NULL_TREE);\n-\t\t  int success = pushcase (NULL_TREE, 0, label, &duplicate);\n+                { tree case_label_tree = build_case_label (NULL_TREE, NULL_TREE);\n \t\t  stmt_count++;\n-\t\t  if (success == 1)\n-\t\t    error (\"default label not within a switch statement\");\n-\t\t  else if (success == 2)\n-\t\t    {\n-\t\t      error (\"multiple default labels in one switch\");\n-\t\t      error_with_decl (duplicate, \"this is the first default label\");\n-\t\t    }\n-\t\t  position_after_white_space (); }\n+\t\t  genrtl_case_label(CASE_LOW(case_label_tree), CASE_HIGH(case_label_tree));\n+\t\t  position_after_white_space ();\n+\t\t}\n \t| identifier ':' maybe_attribute\n \t\t{ tree label = define_label (input_filename, lineno, $1);\n \t\t  stmt_count++;"}]}