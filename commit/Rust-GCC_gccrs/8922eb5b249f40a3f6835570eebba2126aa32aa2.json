{"sha": "8922eb5b249f40a3f6835570eebba2126aa32aa2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODkyMmViNWIyNDlmNDBhM2Y2ODM1NTcwZWViYmEyMTI2YWEzMmFhMg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-11-30T23:04:48Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-11-30T23:04:48Z"}, "message": "(combine_reloads): If using reg dying in this insn as reload reg,\n\nensure it can't be a secondary output reload reg.\n\nFrom-SVN: r8584", "tree": {"sha": "243faf3cb04910a184eb799e05cd0096c9dce281", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/243faf3cb04910a184eb799e05cd0096c9dce281"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8922eb5b249f40a3f6835570eebba2126aa32aa2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8922eb5b249f40a3f6835570eebba2126aa32aa2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8922eb5b249f40a3f6835570eebba2126aa32aa2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8922eb5b249f40a3f6835570eebba2126aa32aa2/comments", "author": null, "committer": null, "parents": [{"sha": "a07805c01cf1ffe6a5b038d0ca5af3d1bb8f385d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a07805c01cf1ffe6a5b038d0ca5af3d1bb8f385d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a07805c01cf1ffe6a5b038d0ca5af3d1bb8f385d"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "ce5019190c6181df203acba995d997918c064a51", "filename": "gcc/reload.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8922eb5b249f40a3f6835570eebba2126aa32aa2/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8922eb5b249f40a3f6835570eebba2126aa32aa2/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=8922eb5b249f40a3f6835570eebba2126aa32aa2", "patch": "@@ -1382,6 +1382,7 @@ combine_reloads ()\n {\n   int i;\n   int output_reload = -1;\n+  int secondary_out = -1;\n   rtx note;\n \n   /* Find the output reload; return unless there is exactly one\n@@ -1525,6 +1526,16 @@ combine_reloads ()\n \t\t\t      REGNO (XEXP (note, 0)))\n \t&& (HARD_REGNO_NREGS (REGNO (XEXP (note, 0)), reload_outmode[output_reload])\n \t    <= HARD_REGNO_NREGS (REGNO (XEXP (note, 0)), GET_MODE (XEXP (note, 0))))\n+\t/* Ensure that a secondary or tertiary reload for this output\n+\t   won't want this register.  */\n+        && ((secondary_out = reload_secondary_out_reload[output_reload]) == -1\n+            || (! (TEST_HARD_REG_BIT\n+\t\t    (reg_class_contents[(int) reload_reg_class[secondary_out]],\n+\t\t     REGNO (XEXP (note, 0))))\n+\t\t&& ((secondary_out = reload_secondary_out_reload[secondary_out]) == -1\n+\t\t    ||  ! (TEST_HARD_REG_BIT\n+\t\t\t   (reg_class_contents[(int) reload_reg_class[secondary_out]],\n+\t\t\t    REGNO (XEXP (note, 0)))))))\n \t&& ! fixed_regs[REGNO (XEXP (note, 0))])\n       {\n \treload_reg_rtx[output_reload] = gen_rtx (REG,"}]}