{"sha": "be14fe72cbae6192bfa999ce25e07ecb0e53fc5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmUxNGZlNzJjYmFlNjE5MmJmYTk5OWNlMjVlMDdlY2IwZTUzZmM1Zg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2006-09-29T21:18:51Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2006-09-29T21:18:51Z"}, "message": "re PR other/25035 (libssp causes a failure with cross compilers with unified trees)\n\n\tPR other/25035\n\t* configure.ac (AC_EXEEXT): Remove.\n\t(GCC_NO_EXECUTABLES): Call.\n\t(ssp_use_symver): Default to no if unable to link.\n\t(AC_CHECK_FUNCS): Hardwire results if unable to link.\n\t* aclocal.m4, configure, Makefile.in: Regenerate.\n\nFrom-SVN: r117318", "tree": {"sha": "346dee200c6a0383469b6f2717eb67627098f850", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/346dee200c6a0383469b6f2717eb67627098f850"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be14fe72cbae6192bfa999ce25e07ecb0e53fc5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be14fe72cbae6192bfa999ce25e07ecb0e53fc5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be14fe72cbae6192bfa999ce25e07ecb0e53fc5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be14fe72cbae6192bfa999ce25e07ecb0e53fc5f/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a44c1a228783f56c4c4b7e7aeee102115a6696d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a44c1a228783f56c4c4b7e7aeee102115a6696d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a44c1a228783f56c4c4b7e7aeee102115a6696d"}], "stats": {"total": 107, "additions": 101, "deletions": 6}, "files": [{"sha": "60d9a19d831c552fbb62428fd95c207cebd528f8", "filename": "libssp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be14fe72cbae6192bfa999ce25e07ecb0e53fc5f/libssp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be14fe72cbae6192bfa999ce25e07ecb0e53fc5f/libssp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2FChangeLog?ref=be14fe72cbae6192bfa999ce25e07ecb0e53fc5f", "patch": "@@ -1,3 +1,12 @@\n+2006-09-29  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\tPR other/25035\n+\t* configure.ac (AC_EXEEXT): Remove.\n+\t(GCC_NO_EXECUTABLES): Call.\n+\t(ssp_use_symver): Default to no if unable to link.\n+\t(AC_CHECK_FUNCS): Hardwire results if unable to link.\n+\t* aclocal.m4, configure, Makefile.in: Regenerate.\n+\n 2006-05-23  Carlos O'Donell  <carlos@codesourcery.com>\n \n \t* Makefile.am: Add install-html target. Add install-html to .PHONY"}, {"sha": "b098221eb507081353193b41b8ba21342e74d9cb", "filename": "libssp/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be14fe72cbae6192bfa999ce25e07ecb0e53fc5f/libssp%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be14fe72cbae6192bfa999ce25e07ecb0e53fc5f/libssp%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2FMakefile.in?ref=be14fe72cbae6192bfa999ce25e07ecb0e53fc5f", "patch": "@@ -53,6 +53,7 @@ ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/depstand.m4 \\\n \t$(top_srcdir)/../config/lead-dot.m4 \\\n+\t$(top_srcdir)/../config/no-executables.m4 \\\n \t$(top_srcdir)/../libtool.m4 $(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)"}, {"sha": "7777acfc6d79c769d86797b16b36478689acffc5", "filename": "libssp/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be14fe72cbae6192bfa999ce25e07ecb0e53fc5f/libssp%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be14fe72cbae6192bfa999ce25e07ecb0e53fc5f/libssp%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2Faclocal.m4?ref=be14fe72cbae6192bfa999ce25e07ecb0e53fc5f", "patch": "@@ -917,4 +917,5 @@ AC_SUBST([am__untar])\n m4_include([../config/acx.m4])\n m4_include([../config/depstand.m4])\n m4_include([../config/lead-dot.m4])\n+m4_include([../config/no-executables.m4])\n m4_include([../libtool.m4])"}, {"sha": "dbb7abbd3c1dbfad3fd6ea80899c796d6d8a3697", "filename": "libssp/configure", "status": "modified", "additions": 73, "deletions": 3, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be14fe72cbae6192bfa999ce25e07ecb0e53fc5f/libssp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be14fe72cbae6192bfa999ce25e07ecb0e53fc5f/libssp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2Fconfigure?ref=be14fe72cbae6192bfa999ce25e07ecb0e53fc5f", "patch": "@@ -1897,6 +1897,7 @@ fi\n \n \n \n+\n # Default to --enable-multilib\n # Check whether --enable-multilib or --disable-multilib was given.\n if test \"${enable_multilib+set}\" = set; then\n@@ -2291,6 +2292,39 @@ cat confdefs.h >>conftest.$ac_ext\n cat >>conftest.$ac_ext <<_ACEOF\n /* end confdefs.h.  */\n \n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+# FIXME: Cleanup?\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n+  (eval $ac_link) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; then\n+  gcc_no_link=no\n+else\n+  gcc_no_link=yes\n+fi\n+\n+if test x$gcc_no_link = xyes; then\n+  # Setting cross_compile will disable run tests; it will\n+  # also disable AC_CHECK_FILE but that's generally\n+  # correct if we can't link.\n+  cross_compiling=yes\n+  EXEEXT=\n+else\n+  cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+\n int\n main ()\n {\n@@ -2435,6 +2469,7 @@ echo \"${ECHO_T}$ac_cv_exeext\" >&6\n rm -f conftest.$ac_ext\n EXEEXT=$ac_cv_exeext\n ac_exeext=$EXEEXT\n+fi\n echo \"$as_me:$LINENO: checking for suffix of object files\" >&5\n echo $ECHO_N \"checking for suffix of object files... $ECHO_C\" >&6\n if test \"${ac_cv_objext+set}\" = set; then\n@@ -3422,6 +3457,16 @@ FOO_1.0 {\n EOF\n save_LDFLAGS=\"$LDFLAGS\"\n LDFLAGS=\"$LDFLAGS -fPIC -shared -Wl,--version-script,./conftest.map\"\n+if test x$gcc_no_link = xyes; then\n+  # If we cannot link, we cannot build shared libraries, so do not use\n+  # symbol versioning.\n+  ssp_use_symver=no\n+else\n+  if test x$gcc_no_link = xyes; then\n+  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n+echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n cat >conftest.$ac_ext <<_ACEOF\n /* confdefs.h.  */\n _ACEOF\n@@ -3468,6 +3513,7 @@ ssp_use_symver=no\n fi\n rm -f conftest.err conftest.$ac_objext \\\n       conftest$ac_exeext conftest.$ac_ext\n+fi\n LDFLAGS=\"$save_LDFLAGS\"\n echo \"$as_me:$LINENO: result: $ssp_use_symver\" >&5\n echo \"${ECHO_T}$ssp_use_symver\" >&6\n@@ -3894,6 +3940,18 @@ fi\n done\n \n \n+if test x$gcc_no_link = xyes; then\n+  # Presume the ISO C functions are available; add target-specific\n+  # configuration here if required.\n+  cat >>confdefs.h <<\\_ACEOF\n+#define HAVE_STRNCPY 1\n+_ACEOF\n+\n+  cat >>confdefs.h <<\\_ACEOF\n+#define HAVE_STRNCAT 1\n+_ACEOF\n+\n+else\n \n \n \n@@ -3905,7 +3963,12 @@ echo $ECHO_N \"checking for $ac_func... $ECHO_C\" >&6\n if eval \"test \\\"\\${$as_ac_var+set}\\\" = set\"; then\n   echo $ECHO_N \"(cached) $ECHO_C\" >&6\n else\n-  cat >conftest.$ac_ext <<_ACEOF\n+  if test x$gcc_no_link = xyes; then\n+  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n+echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n+cat >conftest.$ac_ext <<_ACEOF\n /* confdefs.h.  */\n _ACEOF\n cat confdefs.h >>conftest.$ac_ext\n@@ -3998,6 +4061,7 @@ _ACEOF\n fi\n done\n \n+fi\n \n echo \"$as_me:$LINENO: checking whether vsnprintf is usable\" >&5\n echo $ECHO_N \"checking whether vsnprintf is usable... $ECHO_C\" >&6\n@@ -4468,6 +4532,7 @@ deplibs_check_method=$lt_cv_deplibs_check_method\n \n \n \n+\n # Autoconf 2.13's AC_OBJEXT and AC_EXEEXT macros only works for C compilers!\n \n # find the maximum length of command line arguments\n@@ -4864,7 +4929,7 @@ test x\"$pic_mode\" = xno && libtool_flags=\"$libtool_flags --prefer-non-pic\"\n case $host in\n *-*-irix6*)\n   # Find out which ABI we are using.\n-  echo '#line 4867 \"configure\"' > conftest.$ac_ext\n+  echo '#line 4932 \"configure\"' > conftest.$ac_ext\n   if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?\n@@ -4982,7 +5047,12 @@ ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n-     cat >conftest.$ac_ext <<_ACEOF\n+     if test x$gcc_no_link = xyes; then\n+  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n+echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n+cat >conftest.$ac_ext <<_ACEOF\n /* confdefs.h.  */\n _ACEOF\n cat confdefs.h >>conftest.$ac_ext"}, {"sha": "99b4edfe1049c6468d9b5e3b3389dd6b3eb6e6ee", "filename": "libssp/configure.ac", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be14fe72cbae6192bfa999ce25e07ecb0e53fc5f/libssp%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be14fe72cbae6192bfa999ce25e07ecb0e53fc5f/libssp%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2Fconfigure.ac?ref=be14fe72cbae6192bfa999ce25e07ecb0e53fc5f", "patch": "@@ -22,7 +22,8 @@ AC_ARG_ENABLE(version-specific-runtime-libs,\n AC_MSG_RESULT($version_specific_libs)\n \n AM_MAINTAINER_MODE\n-AC_EXEEXT\n+\n+GCC_NO_EXECUTABLES\n \n AM_ENABLE_MULTILIB(, ..)\n \n@@ -78,14 +79,27 @@ FOO_1.0 {\n EOF\n save_LDFLAGS=\"$LDFLAGS\"\n LDFLAGS=\"$LDFLAGS -fPIC -shared -Wl,--version-script,./conftest.map\"\n-AC_TRY_LINK([int foo;],[],[ssp_use_symver=yes],[ssp_use_symver=no])\n+if test x$gcc_no_link = xyes; then\n+  # If we cannot link, we cannot build shared libraries, so do not use\n+  # symbol versioning.\n+  ssp_use_symver=no\n+else\n+  AC_TRY_LINK([int foo;],[],[ssp_use_symver=yes],[ssp_use_symver=no])\n+fi\n LDFLAGS=\"$save_LDFLAGS\"\n AC_MSG_RESULT($ssp_use_symver)\n AM_CONDITIONAL(LIBSSP_USE_SYMVER, [test \"x$ssp_use_symver\" = xyes])\n \n AC_CHECK_HEADERS(alloca.h paths.h syslog.h string.h unistd.h fcntl.h stdio.h limits.h)\n \n-AC_CHECK_FUNCS(mempcpy strncpy strncat)\n+if test x$gcc_no_link = xyes; then\n+  # Presume the ISO C functions are available; add target-specific\n+  # configuration here if required.\n+  AC_DEFINE(HAVE_STRNCPY)\n+  AC_DEFINE(HAVE_STRNCAT)\n+else\n+  AC_CHECK_FUNCS(mempcpy strncpy strncat)\n+fi\n \n AC_MSG_CHECKING([whether vsnprintf is usable])\n AC_RUN_IFELSE(AC_LANG_PROGRAM(["}]}