{"sha": "048d3ad731c59a987b3d56e0aa890cc0114efe09", "node_id": "C_kwDOANBUbNoAKDA0OGQzYWQ3MzFjNTlhOTg3YjNkNTZlMGFhODkwY2MwMTE0ZWZlMDk", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-08-31T12:19:24Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-08-31T12:20:09Z"}, "message": "fix clang warnings (-Winconsistent-missing-override)\n\ngcc/ChangeLog:\n\n\t* value-range.h: Add more override keywords.", "tree": {"sha": "503485bc7323ef38d2688aba29f638eaad7d2617", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/503485bc7323ef38d2688aba29f638eaad7d2617"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/048d3ad731c59a987b3d56e0aa890cc0114efe09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/048d3ad731c59a987b3d56e0aa890cc0114efe09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/048d3ad731c59a987b3d56e0aa890cc0114efe09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/048d3ad731c59a987b3d56e0aa890cc0114efe09/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc95bca72f6e7f54c4adb6d332f881c277746366", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc95bca72f6e7f54c4adb6d332f881c277746366", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc95bca72f6e7f54c4adb6d332f881c277746366"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "f7f3665be0775008c7df12f88bc4701c27732041", "filename": "gcc/value-range.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/048d3ad731c59a987b3d56e0aa890cc0114efe09/gcc%2Fvalue-range.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/048d3ad731c59a987b3d56e0aa890cc0114efe09/gcc%2Fvalue-range.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-range.h?ref=048d3ad731c59a987b3d56e0aa890cc0114efe09", "patch": "@@ -350,10 +350,10 @@ class frange : public vrange\n   virtual bool singleton_p (tree *result = NULL) const override;\n   virtual bool supports_type_p (const_tree type) const override;\n   virtual void accept (const vrange_visitor &v) const override;\n-  virtual bool zero_p () const;\n-  virtual bool nonzero_p () const;\n-  virtual void set_nonzero (tree type);\n-  virtual void set_zero (tree type);\n+  virtual bool zero_p () const override;\n+  virtual bool nonzero_p () const override;\n+  virtual void set_nonzero (tree type) override;\n+  virtual void set_zero (tree type) override;\n   virtual void set_nonnegative (tree type) override;\n   frange& operator= (const frange &);\n   bool operator== (const frange &) const;"}]}