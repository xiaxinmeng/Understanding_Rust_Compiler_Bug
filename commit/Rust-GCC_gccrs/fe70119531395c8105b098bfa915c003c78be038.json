{"sha": "fe70119531395c8105b098bfa915c003c78be038", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU3MDExOTUzMTM5NWM4MTA1YjA5OGJmYTkxNWMwMDNjNzhiZTAzOA==", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2021-01-14T20:49:55Z"}, "committer": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2021-01-14T20:49:55Z"}, "message": "slp: elide intermediate nodes for complex add and avoid truncate\n\nThis applies the same feedback received for MUL and the rest to\nADD which was already committed.  In short it elides the intermediate\nnodes vec and avoids the use of truncate on the SLP child.\n\ngcc/ChangeLog:\n\n\t* tree-vect-slp-patterns.c (complex_add_pattern::build):\n\tElide nodes.", "tree": {"sha": "4c2e6882ca761e3e002668ed7f794f68c26c1350", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c2e6882ca761e3e002668ed7f794f68c26c1350"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe70119531395c8105b098bfa915c003c78be038", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe70119531395c8105b098bfa915c003c78be038", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe70119531395c8105b098bfa915c003c78be038", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe70119531395c8105b098bfa915c003c78be038/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dea4a32b24fb888532c47f3920f6910b3c94a8a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dea4a32b24fb888532c47f3920f6910b3c94a8a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dea4a32b24fb888532c47f3920f6910b3c94a8a0"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "c4fa269baa3ceb2142443624a6cb46f8f90533d9", "filename": "gcc/tree-vect-slp-patterns.c", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe70119531395c8105b098bfa915c003c78be038/gcc%2Ftree-vect-slp-patterns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe70119531395c8105b098bfa915c003c78be038/gcc%2Ftree-vect-slp-patterns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp-patterns.c?ref=fe70119531395c8105b098bfa915c003c78be038", "patch": "@@ -627,23 +627,21 @@ class complex_add_pattern : public complex_pattern\n void\n complex_add_pattern::build (vec_info *vinfo)\n {\n-  auto_vec<slp_tree> nodes;\n+  SLP_TREE_CHILDREN (*this->m_node).reserve_exact (2);\n+\n   slp_tree node = this->m_ops[0];\n   vec<slp_tree> children = SLP_TREE_CHILDREN (node);\n \n   /* First re-arrange the children.  */\n-  nodes.create (children.length ());\n-  nodes.quick_push (children[0]);\n-  nodes.quick_push (vect_build_swap_evenodd_node (children[1]));\n+  SLP_TREE_CHILDREN (*this->m_node)[0] = children[0];\n+  SLP_TREE_CHILDREN (*this->m_node)[1] =\n+    vect_build_swap_evenodd_node (children[1]);\n \n-  SLP_TREE_REF_COUNT (nodes[0])++;\n-  SLP_TREE_REF_COUNT (nodes[1])++;\n+  SLP_TREE_REF_COUNT (SLP_TREE_CHILDREN (*this->m_node)[0])++;\n+  SLP_TREE_REF_COUNT (SLP_TREE_CHILDREN (*this->m_node)[1])++;\n   vect_free_slp_tree (this->m_ops[0]);\n   vect_free_slp_tree (this->m_ops[1]);\n \n-  SLP_TREE_CHILDREN (*this->m_node).truncate (0);\n-  SLP_TREE_CHILDREN (*this->m_node).safe_splice (nodes);\n-\n   complex_pattern::build (vinfo);\n }\n "}]}