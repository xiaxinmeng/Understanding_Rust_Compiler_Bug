{"sha": "ea3e1915954371d8230fda44ce6821928f04f80e", "node_id": "C_kwDOANBUbNoAKGVhM2UxOTE1OTU0MzcxZDgyMzBmZGE0NGNlNjgyMTkyOGYwNGY4MGU", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-02-01T20:48:26Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-02-02T14:54:32Z"}, "message": "analyzer: consolidate duplicate code in region::calc_offset\n\ngcc/analyzer/ChangeLog:\n\t* region.cc (region::calc_offset): Consolidate effectively\n\tidentical cases.\n\nSigned-off-by: David Malcolm <dmalcolm@redhat.com>", "tree": {"sha": "63a81403f42418a1415a3df26c8a06697a3af664", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63a81403f42418a1415a3df26c8a06697a3af664"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea3e1915954371d8230fda44ce6821928f04f80e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea3e1915954371d8230fda44ce6821928f04f80e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea3e1915954371d8230fda44ce6821928f04f80e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea3e1915954371d8230fda44ce6821928f04f80e/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93e759fc18a1a4208ae2898610c55ebd8c9e25d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93e759fc18a1a4208ae2898610c55ebd8c9e25d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93e759fc18a1a4208ae2898610c55ebd8c9e25d8"}], "stats": {"total": 48, "additions": 5, "deletions": 43}, "files": [{"sha": "77554b861431fb7be3d5adbdae4be864c20cd496", "filename": "gcc/analyzer/region.cc", "status": "modified", "additions": 5, "deletions": 43, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea3e1915954371d8230fda44ce6821928f04f80e/gcc%2Fanalyzer%2Fregion.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea3e1915954371d8230fda44ce6821928f04f80e/gcc%2Fanalyzer%2Fregion.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion.cc?ref=ea3e1915954371d8230fda44ce6821928f04f80e", "patch": "@@ -499,41 +499,16 @@ region::calc_offset () const\n       switch (iter_region->get_kind ())\n \t{\n \tcase RK_FIELD:\n-\t  {\n-\t    const field_region *field_reg\n-\t      = (const field_region *)iter_region;\n-\t    iter_region = iter_region->get_parent_region ();\n-\n-\t    bit_offset_t rel_bit_offset;\n-\t    if (!field_reg->get_relative_concrete_offset (&rel_bit_offset))\n-\t      return region_offset::make_symbolic (iter_region);\n-\t    accum_bit_offset += rel_bit_offset;\n-\t  }\n-\t  continue;\n-\n \tcase RK_ELEMENT:\n-\t  {\n-\t    const element_region *element_reg\n-\t      = (const element_region *)iter_region;\n-\t    iter_region = iter_region->get_parent_region ();\n-\n-\t    bit_offset_t rel_bit_offset;\n-\t    if (!element_reg->get_relative_concrete_offset (&rel_bit_offset))\n-\t      return region_offset::make_symbolic (iter_region);\n-\t    accum_bit_offset += rel_bit_offset;\n-\t  }\n-\t  continue;\n-\n \tcase RK_OFFSET:\n+\tcase RK_BIT_RANGE:\n \t  {\n-\t    const offset_region *offset_reg\n-\t      = (const offset_region *)iter_region;\n-\t    iter_region = iter_region->get_parent_region ();\n-\n \t    bit_offset_t rel_bit_offset;\n-\t    if (!offset_reg->get_relative_concrete_offset (&rel_bit_offset))\n-\t      return region_offset::make_symbolic (iter_region);\n+\t    if (!iter_region->get_relative_concrete_offset (&rel_bit_offset))\n+\t      return region_offset::make_symbolic\n+\t\t(iter_region->get_parent_region ());\n \t    accum_bit_offset += rel_bit_offset;\n+\t    iter_region = iter_region->get_parent_region ();\n \t  }\n \t  continue;\n \n@@ -549,19 +524,6 @@ region::calc_offset () const\n \t  }\n \t  continue;\n \n-\tcase RK_BIT_RANGE:\n-\t  {\n-\t    const bit_range_region *bit_range_reg\n-\t      = (const bit_range_region *)iter_region;\n-\t    iter_region = iter_region->get_parent_region ();\n-\n-\t    bit_offset_t rel_bit_offset;\n-\t    if (!bit_range_reg->get_relative_concrete_offset (&rel_bit_offset))\n-\t      return region_offset::make_symbolic (iter_region);\n-\t    accum_bit_offset += rel_bit_offset;\n-\t  }\n-\t  continue;\n-\n \tdefault:\n \t  return region_offset::make_concrete (iter_region, accum_bit_offset);\n \t}"}]}