{"sha": "8cc857f9490dd71c311b529c4284f54a597e97bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGNjODU3Zjk0OTBkZDcxYzMxMWI1MjljNDI4NGY1NGE1OTdlOTdiZA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2017-10-22T18:05:17Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-10-22T18:05:17Z"}, "message": "re PR rtl-optimization/82628 (wrong code at -Os on x86_64-linux-gnu in the 32-bit mode)\n\n\tPR target/82628\n\t* config/i386/i386.md (cmp<dwi>_doubleword): New pattern.\n\t* config/i386/i386.c (ix86_expand_branch) <case E_TImode>:\n\tExpand with cmp<dwi>_doubleword.\n\ntestsuite/ChangeLog:\n\n\tPR target/82628\n\t* gcc.dg/torture/pr82628.c: New test.\n\n\nCo-Authored-By: Jakub Jelinek <jakub@redhat.com>\n\nFrom-SVN: r253985", "tree": {"sha": "28116b37107e98d67df1d6b2658b08b08dab6377", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28116b37107e98d67df1d6b2658b08b08dab6377"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8cc857f9490dd71c311b529c4284f54a597e97bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cc857f9490dd71c311b529c4284f54a597e97bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cc857f9490dd71c311b529c4284f54a597e97bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cc857f9490dd71c311b529c4284f54a597e97bd/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "00c378a954da643639e9e311fb713f908b0b0cc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00c378a954da643639e9e311fb713f908b0b0cc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00c378a954da643639e9e311fb713f908b0b0cc2"}], "stats": {"total": 88, "additions": 70, "deletions": 18}, "files": [{"sha": "5abd4d8ab25015aed6e285925a62d6bbf2bff0a3", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 9, "deletions": 17, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cc857f9490dd71c311b529c4284f54a597e97bd/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cc857f9490dd71c311b529c4284f54a597e97bd/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=8cc857f9490dd71c311b529c4284f54a597e97bd", "patch": "@@ -22357,33 +22357,25 @@ ix86_expand_branch (enum rtx_code code, rtx op0, rtx op1, rtx label)\n \tswitch (code)\n \t  {\n \t  case LE: case LEU: case GT: case GTU:\n-\t    std::swap (lo[0], lo[1]);\n-\t    std::swap (hi[0], hi[1]);\n+\t    std::swap (op0, op1);\n \t    code = swap_condition (code);\n \t    /* FALLTHRU */\n \n \t  case LT: case LTU: case GE: case GEU:\n \t    {\n-\t      rtx (*cmp_insn) (rtx, rtx);\n-\t      rtx (*sbb_insn) (rtx, rtx, rtx);\n+\t      rtx (*cmp_insn) (rtx, rtx, rtx);\n \n \t      if (TARGET_64BIT)\n-\t\tcmp_insn = gen_cmpdi_1, sbb_insn = gen_subdi3_carry_ccgz;\n+\t\tcmp_insn = gen_cmpti_doubleword;\n \t      else\n-\t\tcmp_insn = gen_cmpsi_1, sbb_insn = gen_subsi3_carry_ccgz;\n-\n-\t      if (!nonimmediate_operand (lo[0], submode))\n-\t\tlo[0] = force_reg (submode, lo[0]);\n-\t      if (!x86_64_general_operand (lo[1], submode))\n-\t\tlo[1] = force_reg (submode, lo[1]);\n+\t\tcmp_insn = gen_cmpdi_doubleword;\n \n-\t      if (!register_operand (hi[0], submode))\n-\t\thi[0] = force_reg (submode, hi[0]);\n-\t      if (!x86_64_general_operand (hi[1], submode))\n-\t\thi[1] = force_reg (submode, hi[1]);\n+\t      if (!register_operand (op0, mode))\n+\t\top0 = force_reg (mode, op0);\n+\t      if (!x86_64_hilo_general_operand (op1, mode))\n+\t\top1 = force_reg (mode, op1);\n \n-\t      emit_insn (cmp_insn (lo[0], lo[1]));\n-\t      emit_insn (sbb_insn (gen_rtx_SCRATCH (submode), hi[0], hi[1]));\n+\t      emit_insn (cmp_insn (gen_rtx_SCRATCH (mode), op0, op1));\n \n \t      tmp = gen_rtx_REG (CCGZmode, FLAGS_REG);\n "}, {"sha": "1fc4a38b82c2b5897585e702ac1e0864cb848e2c", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cc857f9490dd71c311b529c4284f54a597e97bd/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cc857f9490dd71c311b529c4284f54a597e97bd/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=8cc857f9490dd71c311b529c4284f54a597e97bd", "patch": "@@ -1273,6 +1273,26 @@\n \t(compare:CC (match_operand:SWI48 0 \"nonimmediate_operand\")\n \t\t    (match_operand:SWI48 1 \"<general_operand>\")))])\n \n+(define_insn_and_split \"cmp<dwi>_doubleword\"\n+  [(set (reg:CCGZ FLAGS_REG)\n+\t(compare:CCGZ\n+\t  (match_operand:<DWI> 1 \"register_operand\" \"0\")\n+\t  (match_operand:<DWI> 2 \"x86_64_hilo_general_operand\" \"ro<di>\")))\n+   (clobber (match_scratch:<DWI> 0 \"=r\"))]\n+  \"\"\n+  \"#\"\n+  \"reload_completed\"\n+  [(set (reg:CC FLAGS_REG)\n+\t(compare:CC (match_dup 1) (match_dup 2)))\n+   (parallel [(set (reg:CCGZ FLAGS_REG)\n+\t\t   (compare: CCGZ\n+\t\t     (match_dup 4)\n+\t\t     (plus:DWIH\n+\t\t       (ltu:DWIH (reg:CC FLAGS_REG) (const_int 0))\n+\t\t       (match_dup 5))))\n+\t      (clobber (match_dup 3))])]\n+  \"split_double_mode (<DWI>mode, &operands[0], 3, &operands[0], &operands[3]);\")\n+\n (define_insn \"*cmp<mode>_ccno_1\"\n   [(set (reg FLAGS_REG)\n \t(compare (match_operand:SWI 0 \"nonimmediate_operand\" \"<r>,?m<r>\")\n@@ -6891,7 +6911,7 @@\n    (set_attr \"pent_pair\" \"pu\")\n    (set_attr \"mode\" \"SI\")])\n \n-(define_insn \"sub<mode>3_carry_ccgz\"\n+(define_insn \"*sub<mode>3_carry_ccgz\"\n   [(set (reg:CCGZ FLAGS_REG)\n \t(compare:CCGZ\n \t  (match_operand:DWIH 1 \"register_operand\" \"0\")"}, {"sha": "493b361c8bf78b0522ebc7ad12e06d2782dc45a2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cc857f9490dd71c311b529c4284f54a597e97bd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cc857f9490dd71c311b529c4284f54a597e97bd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8cc857f9490dd71c311b529c4284f54a597e97bd", "patch": "@@ -1,3 +1,9 @@\n+2017-10-22  Uros Bizjak  <ubizjak@gmail.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/82628\n+\t* gcc.dg/torture/pr82628.c: New test.\n+\n 2017-10-22  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n \n \t* c-c++-common/attr-nocf-check-1a.c: Remove test."}, {"sha": "d71352204853ae25fe32636425540cf91d1a7715", "filename": "gcc/testsuite/gcc.target/i386/pr82628.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cc857f9490dd71c311b529c4284f54a597e97bd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82628.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cc857f9490dd71c311b529c4284f54a597e97bd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82628.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82628.c?ref=8cc857f9490dd71c311b529c4284f54a597e97bd", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do run { target ia32 } } */\n+/* { dg-options \"-Os\" } */\n+\n+void\n+__attribute__ ((noipa))\n+foo (const char *x)\n+{\n+  asm volatile (\"\" : \"+g\" (x) : : \"memory\");\n+  if (x)\n+    __builtin_abort ();\n+}\n+\n+int a, b = 1;\n+\n+int\n+main ()\n+{\n+  while (1)\n+    {\n+      unsigned long long d = 18446744073709551615UL;\n+      while (1)\n+\t{\n+\t  int e = b;\n+\t  while (d < 2)\n+\t    foo (\"0\");\n+\t  if (a)\n+\t    d++;\n+\t  if (b)\n+\t    break;\n+\t}\n+      break;\n+    }\n+  return 0;\n+}"}]}