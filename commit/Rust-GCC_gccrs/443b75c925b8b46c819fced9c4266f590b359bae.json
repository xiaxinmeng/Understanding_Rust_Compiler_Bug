{"sha": "443b75c925b8b46c819fced9c4266f590b359bae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQzYjc1YzkyNWI4YjQ2YzgxOWZjZWQ5YzQyNjZmNTkwYjM1OWJhZQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "2000-04-27T05:12:26Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-04-27T05:12:26Z"}, "message": "flow.c (find_auto_inc): Use pbi->bb instead of BLOCK_FOR_INSN.\n\n        * flow.c (find_auto_inc): Use pbi->bb instead of BLOCK_FOR_INSN.\n        * ssa.c (convert_from_ssa): Don't run compute_bb_for_insn.\n\nFrom-SVN: r33461", "tree": {"sha": "cb8d9095d02418889642f4329daf7bcf3633ad5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb8d9095d02418889642f4329daf7bcf3633ad5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/443b75c925b8b46c819fced9c4266f590b359bae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/443b75c925b8b46c819fced9c4266f590b359bae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/443b75c925b8b46c819fced9c4266f590b359bae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/443b75c925b8b46c819fced9c4266f590b359bae/comments", "author": null, "committer": null, "parents": [{"sha": "292f38694a71cd35b5eb3239e39bff7bf2b244e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/292f38694a71cd35b5eb3239e39bff7bf2b244e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/292f38694a71cd35b5eb3239e39bff7bf2b244e4"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "664481c09b13b5af8e7223142f7d033efc2616ca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/443b75c925b8b46c819fced9c4266f590b359bae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/443b75c925b8b46c819fced9c4266f590b359bae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=443b75c925b8b46c819fced9c4266f590b359bae", "patch": "@@ -1,3 +1,8 @@\n+2000-04-26  Richard Henderson  <rth@cygnus.com>\n+\n+\t* flow.c (find_auto_inc): Use pbi->bb instead of BLOCK_FOR_INSN.\n+\t* ssa.c (convert_from_ssa): Don't run compute_bb_for_insn.\n+\n 2000-04-26  Richard Henderson  <rth@cygnus.com>\n \n \t* flow.c (propagate_one_insn): Break out from propagate_block."}, {"sha": "80c51a4178f7021bed514a70e9c6d2b608143197", "filename": "gcc/flow.c", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/443b75c925b8b46c819fced9c4266f590b359bae/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/443b75c925b8b46c819fced9c4266f590b359bae/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=443b75c925b8b46c819fced9c4266f590b359bae", "patch": "@@ -2662,8 +2662,6 @@ verify_local_live_at_start (new_live_at_start, bb)\n    generates subregs of a multi-word pseudo, current life analysis will\n    lose the kill.  So we _can_ have a pseudo go live.  How irritating.\n \n-   BLOCK_FOR_INSN is assumed to be correct.\n-\n    Including PROP_REG_INFO does not properly refresh regs_ever_live\n    unless the caller resets it to zero.  */\n \n@@ -4336,16 +4334,15 @@ find_auto_inc (pbi, x, insn)\n \t\t Change it to q = p, ...*q..., q = q+size.\n \t\t Then fall into the usual case.  */\n \t      rtx insns, temp;\n-\t      basic_block bb;\n \n \t      start_sequence ();\n \t      emit_move_insn (q, addr);\n \t      insns = get_insns ();\n \t      end_sequence ();\n \n-\t      bb = BLOCK_FOR_INSN (insn);\n-\t      for (temp = insns; temp; temp = NEXT_INSN (temp))\n-\t\tset_block_for_insn (temp, bb);\n+\t      if (basic_block_for_insn)\n+\t\tfor (temp = insns; temp; temp = NEXT_INSN (temp))\n+\t\t  set_block_for_insn (temp, pbi->bb);\n \n \t      /* If we can't make the auto-inc, or can't make the\n \t\t replacement into Y, exit.  There's no point in making\n@@ -4363,8 +4360,8 @@ find_auto_inc (pbi, x, insn)\n \t\t new insn(s) and do the updates.  */\n \t      emit_insns_before (insns, insn);\n \n-\t      if (BLOCK_FOR_INSN (insn)->head == insn)\n-\t\tBLOCK_FOR_INSN (insn)->head = insns;\n+\t      if (pbi->bb->head == insn)\n+\t\tpbi->bb->head = insns;\n \n \t      /* INCR will become a NOTE and INSN won't contain a\n \t\t use of ADDR.  If a use of ADDR was just placed in"}, {"sha": "2db2d93030be670ce03c4358f28baad2fd2cf446", "filename": "gcc/ssa.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/443b75c925b8b46c819fced9c4266f590b359bae/gcc%2Fssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/443b75c925b8b46c819fced9c4266f590b359bae/gcc%2Fssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fssa.c?ref=443b75c925b8b46c819fced9c4266f590b359bae", "patch": "@@ -1811,7 +1811,6 @@ convert_from_ssa()\n   rtx insns = get_insns ();\n     \n   /* We need up-to-date life information.  */\n-  compute_bb_for_insn (get_max_uid ());\n   life_analysis (insns, NULL, PROP_KILL_DEAD_CODE | PROP_SCAN_DEAD_CODE);\n \n   /* Figure out which regs in copies and phi nodes don't conflict and"}]}