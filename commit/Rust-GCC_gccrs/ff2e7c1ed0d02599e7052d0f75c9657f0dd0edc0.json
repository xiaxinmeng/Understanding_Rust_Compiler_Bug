{"sha": "ff2e7c1ed0d02599e7052d0f75c9657f0dd0edc0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmYyZTdjMWVkMGQwMjU5OWU3MDUyZDBmNzVjOTY1N2YwZGQwZWRjMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-20T08:41:44Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-20T08:41:44Z"}, "message": "[multiple changes]\n\n2009-04-20  Arnaud Charlet  <charlet@adacore.com>\n\n\t* opt.ads (Inspector_Mode): Update documentation of this flag.\n\n2009-04-20  Thomas Quinot  <quinot@adacore.com>\n\n\t* g-socket.ads: Minor reformatting\n\n\t* socket.c, gsocket.h (__gnat_get_h_errno, VxWorks case): No need to\n\tconsider S_resolvLib error codes since we only use the hostLib wrappers.\n\n2009-04-20  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* sem_ch3.adb (Build_Derived_Private_Type): Insert the declaration\n\tof the Underlying_Record_View after that of the derived type.\n\nFrom-SVN: r146371", "tree": {"sha": "cd580f83fa8c2bbdc7f124a7ec689c989f153195", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd580f83fa8c2bbdc7f124a7ec689c989f153195"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff2e7c1ed0d02599e7052d0f75c9657f0dd0edc0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff2e7c1ed0d02599e7052d0f75c9657f0dd0edc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff2e7c1ed0d02599e7052d0f75c9657f0dd0edc0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff2e7c1ed0d02599e7052d0f75c9657f0dd0edc0/comments", "author": null, "committer": null, "parents": [{"sha": "26a43556c88b96c608246b39023bc698be3b751d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26a43556c88b96c608246b39023bc698be3b751d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26a43556c88b96c608246b39023bc698be3b751d"}], "stats": {"total": 70, "additions": 30, "deletions": 40}, "files": [{"sha": "99f5be04c5ac538bdb527942eb5cd52e4ce45e24", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff2e7c1ed0d02599e7052d0f75c9657f0dd0edc0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff2e7c1ed0d02599e7052d0f75c9657f0dd0edc0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ff2e7c1ed0d02599e7052d0f75c9657f0dd0edc0", "patch": "@@ -1,3 +1,19 @@\n+2009-04-20  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* opt.ads (Inspector_Mode): Update documentation of this flag.\n+\n+2009-04-20  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* g-socket.ads: Minor reformatting\n+\n+\t* socket.c, gsocket.h (__gnat_get_h_errno, VxWorks case): No need to\n+\tconsider S_resolvLib error codes since we only use the hostLib wrappers.\n+\n+2009-04-20  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_ch3.adb (Build_Derived_Private_Type): Insert the declaration\n+\tof the Underlying_Record_View after that of the derived type.\n+\n 2009-04-20  Arnaud Charlet  <charlet@adacore.com>\n \n \t* switch-c.adb (Scan_Front_End_Switches): Disable front-end inlining"}, {"sha": "009f5672456fe11691437ed00a790ee98c9a581a", "filename": "gcc/ada/g-socket.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff2e7c1ed0d02599e7052d0f75c9657f0dd0edc0/gcc%2Fada%2Fg-socket.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff2e7c1ed0d02599e7052d0f75c9657f0dd0edc0/gcc%2Fada%2Fg-socket.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.ads?ref=ff2e7c1ed0d02599e7052d0f75c9657f0dd0edc0", "patch": "@@ -1082,9 +1082,9 @@ package GNAT.Sockets is\n       Status       : out Selector_Status;\n       Timeout      : Selector_Duration := Forever);\n    --  This refined version of Check_Selector allows to watch for exception\n-   --  events (that is notifications of out-of-band transmission and\n-   --  reception). As above, all of R_Socket_Set, W_Socket_Set and\n-   --  E_Socket_Set must be different objects.\n+   --  events (i.e. notifications of out-of-band transmission and reception).\n+   --  As above, all of R_Socket_Set, W_Socket_Set and E_Socket_Set must be\n+   --  different objects.\n \n    procedure Abort_Selector (Selector : Selector_Type);\n    --  Send an abort signal to the selector"}, {"sha": "7e88eea47500c68ffcd1270fb4c205a1b8e9bde1", "filename": "gcc/ada/gsocket.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff2e7c1ed0d02599e7052d0f75c9657f0dd0edc0/gcc%2Fada%2Fgsocket.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff2e7c1ed0d02599e7052d0f75c9657f0dd0edc0/gcc%2Fada%2Fgsocket.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgsocket.h?ref=ff2e7c1ed0d02599e7052d0f75c9657f0dd0edc0", "patch": "@@ -65,9 +65,6 @@\n #include <vxWorks.h>\n #include <ioLib.h>\n #include <hostLib.h>\n-#if (_WRS_VXWORKS_MAJOR != 6) && ! defined (__RTP__)\n-#include <resolvLib.h>\n-#endif\n #define SHUT_RD\t\t0\n #define SHUT_WR\t\t1\n #define SHUT_RDWR\t2"}, {"sha": "496453457b021afac095ef7780c3da9f87af4e45", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff2e7c1ed0d02599e7052d0f75c9657f0dd0edc0/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff2e7c1ed0d02599e7052d0f75c9657f0dd0edc0/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=ff2e7c1ed0d02599e7052d0f75c9657f0dd0edc0", "patch": "@@ -640,9 +640,10 @@ package Opt is\n    Inspector_Mode : Boolean renames Debug.Debug_Flag_Dot_II;\n    --  GNAT\n    --  True if compiling in inspector mode (-gnatd.I switch).\n-   --  Only relevant when VM_Target /= None. The compiler will attempt to\n-   --  generate code even in case of unsupported construct, so that the byte\n-   --  code can be used by static analysis tools.\n+   --  Enable inspector mode, in particular SCIL generation.\n+   --  When VM_Target /= None, the compiler will also attempt to\n+   --  generate code even in case of unsupported construct instead of\n+   --  displaying an error.\n \n    Invalid_Value_Used : Boolean := False;\n    --  GNAT"}, {"sha": "d53cb88cbc69c85a63236c258d88084259b5bdcb", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff2e7c1ed0d02599e7052d0f75c9657f0dd0edc0/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff2e7c1ed0d02599e7052d0f75c9657f0dd0edc0/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=ff2e7c1ed0d02599e7052d0f75c9657f0dd0edc0", "patch": "@@ -5552,7 +5552,10 @@ package body Sem_Ch3 is\n                  (N, Parent_Type, Derived_Type, Derive_Subps);\n \n                --  Build anonymous completion, as a derivation from the full\n-               --  view of the parent.\n+               --  view of the parent. Because it is used as a placeholder\n+               --  to convey information to the back-end, it must be declared\n+               --  after the original type so the back-end knows that it needs\n+               --  to disregard the declaration.\n \n                Decl :=\n                  Make_Full_Type_Declaration (Loc,\n@@ -5574,11 +5577,9 @@ package body Sem_Ch3 is\n \n                --  Freeze the underlying record view, to prevent generation\n                --  of useless dispatching information, which is simply shared\n-               --  with the real derived type. The underlying view must be\n-               --  treated as an itype by the back-end.\n+               --  with the real derived type.\n \n                Set_Is_Frozen (Full_Der);\n-               Set_Is_Itype (Full_Der);\n                Set_Underlying_Record_View (Derived_Type, Full_Der);\n             end;\n \n@@ -13495,7 +13496,7 @@ package body Sem_Ch3 is\n                   elsif No (Interface_List (N)) then\n                      Error_Msg_N\n                         (\"completion of tagged private type must be tagged\",\n-                           N);\n+                         N);\n                   end if;\n \n                elsif Nkind (N) = N_Full_Type_Declaration\n@@ -13504,8 +13505,7 @@ package body Sem_Ch3 is\n                  and then Interface_Present (Type_Definition (N))\n                then\n                   Error_Msg_N\n-                    (\"completion of private type canot be an interface\",\n-                       N);\n+                    (\"completion of private type cannot be an interface\", N);\n                end if;\n \n             --  Ada 2005 (AI-251): Private extension declaration of a task"}, {"sha": "33a06397467bb011642b4ec6a0a7c6f191f7ab63", "filename": "gcc/ada/socket.c", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff2e7c1ed0d02599e7052d0f75c9657f0dd0edc0/gcc%2Fada%2Fsocket.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff2e7c1ed0d02599e7052d0f75c9657f0dd0edc0/gcc%2Fada%2Fsocket.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsocket.c?ref=ff2e7c1ed0d02599e7052d0f75c9657f0dd0edc0", "patch": "@@ -351,36 +351,17 @@ __gnat_get_h_errno (void) {\n     case 0:\n       return 0;\n \n-#ifdef S_resolvLib_HOST_NOT_FOUND\n-    case S_resolvLib_HOST_NOT_FOUND:\n-#endif\n #ifdef S_hostLib_HOST_NOT_FOUND\n     case S_hostLib_HOST_NOT_FOUND:\n #endif\n     case S_hostLib_UNKNOWN_HOST:\n       return HOST_NOT_FOUND;\n \n-#ifdef S_resolvLib_TRY_AGAIN\n-    case S_resolvLib_TRY_AGAIN:\n-      return TRY_AGAIN;\n-#endif\n #ifdef S_hostLib_TRY_AGAIN\n     case S_hostLib_TRY_AGAIN:\n       return TRY_AGAIN;\n #endif\n \n-#ifdef S_resolvLib_NO_RECOVERY\n-    case S_resolvLib_NO_RECOVERY:\n-#endif\n-#ifdef S_resolvLib_BUFFER_2_SMALL\n-    case S_resolvLib_BUFFER_2_SMALL:\n-#endif\n-#ifdef S_resolvLib_INVALID_PARAMETER\n-    case S_resolvLib_INVALID_PARAMETER:\n-#endif\n-#ifdef S_resolvLib_INVALID_ADDRESS\n-    case S_resolvLib_INVALID_ADDRESS:\n-#endif\n #ifdef S_hostLib_NO_RECOVERY\n     case S_hostLib_NO_RECOVERY:\n #endif\n@@ -390,11 +371,6 @@ __gnat_get_h_errno (void) {\n     case S_hostLib_INVALID_PARAMETER:\n       return NO_RECOVERY;\n \n-#ifdef S_resolvLib_NO_DATA\n-    case S_resolvLib_NO_DATA:\n-      return NO_DATA;\n-#endif\n-\n     default:\n       return -1;\n   }"}]}