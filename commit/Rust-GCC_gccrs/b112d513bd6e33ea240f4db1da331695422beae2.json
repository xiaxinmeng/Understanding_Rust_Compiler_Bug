{"sha": "b112d513bd6e33ea240f4db1da331695422beae2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjExMmQ1MTNiZDZlMzNlYTI0MGY0ZGIxZGEzMzE2OTU0MjJiZWFlMg==", "commit": {"author": {"name": "Christian Bruel", "email": "christian.bruel@st.com", "date": "2013-05-21T07:48:08Z"}, "committer": {"name": "Christian Bruel", "email": "chrbr@gcc.gnu.org", "date": "2013-05-21T07:48:08Z"}, "message": "dwarf2out.c (multiple_reg_loc_descriptor): Use dbx_reg_number for spanning registers.\n\n2013-05-21  Christian Bruel  <christian.bruel@st.com>\n\n        * dwarf2out.c (multiple_reg_loc_descriptor): Use dbx_reg_number for\n        spanning registers. LEAF_REG_REMAP is supported only for contiguous\n        registers. Set register size out of the PARALLEL loop.\n\nFrom-SVN: r199132", "tree": {"sha": "357ffc164dfcca5171e811fabe2044251f6dfa15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/357ffc164dfcca5171e811fabe2044251f6dfa15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b112d513bd6e33ea240f4db1da331695422beae2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b112d513bd6e33ea240f4db1da331695422beae2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b112d513bd6e33ea240f4db1da331695422beae2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b112d513bd6e33ea240f4db1da331695422beae2/comments", "author": null, "committer": null, "parents": [{"sha": "21633c909a4c903218ad3603b240c62658d8f3c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21633c909a4c903218ad3603b240c62658d8f3c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21633c909a4c903218ad3603b240c62658d8f3c0"}], "stats": {"total": 39, "additions": 23, "deletions": 16}, "files": [{"sha": "d6113341ba7afb0132768ecaea29289073b70598", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b112d513bd6e33ea240f4db1da331695422beae2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b112d513bd6e33ea240f4db1da331695422beae2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b112d513bd6e33ea240f4db1da331695422beae2", "patch": "@@ -1,3 +1,9 @@\n+2013-05-21  Christian Bruel  <christian.bruel@st.com>\n+\n+        * dwarf2out.c (multiple_reg_loc_descriptor): Use dbx_reg_number for\n+        spanning registers. LEAF_REG_REMAP is supported only for contiguous\n+\tregisters. Set register size out of the PARALLEL loop.\n+\n 2013-05-20  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/56547"}, {"sha": "e4a3c075520bd3760c17e55c7ae2081e80e97132", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 17, "deletions": 16, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b112d513bd6e33ea240f4db1da331695422beae2/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b112d513bd6e33ea240f4db1da331695422beae2/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=b112d513bd6e33ea240f4db1da331695422beae2", "patch": "@@ -10612,25 +10612,27 @@ static dw_loc_descr_ref\n multiple_reg_loc_descriptor (rtx rtl, rtx regs,\n \t\t\t     enum var_init_status initialized)\n {\n-  int nregs, size, i;\n-  unsigned reg;\n+  int size, i;\n   dw_loc_descr_ref loc_result = NULL;\n \n-  reg = REGNO (rtl);\n-#ifdef LEAF_REG_REMAP\n-  if (crtl->uses_only_leaf_regs)\n-    {\n-      int leaf_reg = LEAF_REG_REMAP (reg);\n-      if (leaf_reg != -1)\n-\treg = (unsigned) leaf_reg;\n-    }\n-#endif\n-  gcc_assert ((unsigned) DBX_REGISTER_NUMBER (reg) == dbx_reg_number (rtl));\n-  nregs = hard_regno_nregs[REGNO (rtl)][GET_MODE (rtl)];\n-\n   /* Simple, contiguous registers.  */\n   if (regs == NULL_RTX)\n     {\n+      unsigned reg = REGNO (rtl);\n+      int nregs;\n+\n+#ifdef LEAF_REG_REMAP\n+      if (crtl->uses_only_leaf_regs)\n+\t{\n+\t  int leaf_reg = LEAF_REG_REMAP (reg);\n+\t  if (leaf_reg != -1)\n+\t    reg = (unsigned) leaf_reg;\n+\t}\n+#endif\n+\n+      gcc_assert ((unsigned) DBX_REGISTER_NUMBER (reg) == dbx_reg_number (rtl));\n+      nregs = hard_regno_nregs[REGNO (rtl)][GET_MODE (rtl)];\n+\n       size = GET_MODE_SIZE (GET_MODE (rtl)) / nregs;\n \n       loc_result = NULL;\n@@ -10658,10 +10660,9 @@ multiple_reg_loc_descriptor (rtx rtl, rtx regs,\n     {\n       dw_loc_descr_ref t;\n \n-      t = one_reg_loc_descriptor (REGNO (XVECEXP (regs, 0, i)),\n+      t = one_reg_loc_descriptor (dbx_reg_number (XVECEXP (regs, 0, i)),\n \t\t\t\t  VAR_INIT_STATUS_INITIALIZED);\n       add_loc_descr (&loc_result, t);\n-      size = GET_MODE_SIZE (GET_MODE (XVECEXP (regs, 0, 0)));\n       add_loc_descr_op_piece (&loc_result, size);\n     }\n "}]}