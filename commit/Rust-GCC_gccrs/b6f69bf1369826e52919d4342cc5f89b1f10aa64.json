{"sha": "b6f69bf1369826e52919d4342cc5f89b1f10aa64", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjZmNjliZjEzNjk4MjZlNTI5MTlkNDM0MmNjNWY4OWIxZjEwYWE2NA==", "commit": {"author": {"name": "CohenArthur", "email": "arthur.cohen@epita.fr", "date": "2021-08-09T15:15:13Z"}, "committer": {"name": "CohenArthur", "email": "arthur.cohen@epita.fr", "date": "2021-09-06T14:18:23Z"}, "message": "parser: Expose get_errors() function", "tree": {"sha": "e9072b3d2fb0edeb074b1231ec0781a93bc56cab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9072b3d2fb0edeb074b1231ec0781a93bc56cab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6f69bf1369826e52919d4342cc5f89b1f10aa64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6f69bf1369826e52919d4342cc5f89b1f10aa64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6f69bf1369826e52919d4342cc5f89b1f10aa64", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6f69bf1369826e52919d4342cc5f89b1f10aa64/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50623899998de5a8ffe47227a351c2b3dd29aa0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50623899998de5a8ffe47227a351c2b3dd29aa0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50623899998de5a8ffe47227a351c2b3dd29aa0a"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "45f00f570534970a03804cb76b339723a082c19c", "filename": "gcc/rust/parse/rust-parse.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6f69bf1369826e52919d4342cc5f89b1f10aa64/gcc%2Frust%2Fparse%2Frust-parse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6f69bf1369826e52919d4342cc5f89b1f10aa64/gcc%2Frust%2Fparse%2Frust-parse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse.h?ref=b6f69bf1369826e52919d4342cc5f89b1f10aa64", "patch": "@@ -595,7 +595,6 @@ template <typename ManagedTokenSource> class Parser\n   bool done_end_of_file ();\n \n   void add_error (Error error) { error_table.push_back (std::move (error)); }\n-  std::vector<Error> &get_errors () { return error_table; }\n \n public:\n   // Construct parser with specified \"managed\" token source.\n@@ -615,6 +614,9 @@ template <typename ManagedTokenSource> class Parser\n   // Returns whether any parsing errors have occurred.\n   bool has_errors () const { return !error_table.empty (); }\n \n+  // Get a reference to the list of errors encountered\n+  std::vector<Error> &get_errors () { return error_table; }\n+\n private:\n   // The token source (usually lexer) associated with the parser.\n   ManagedTokenSource lexer;"}]}