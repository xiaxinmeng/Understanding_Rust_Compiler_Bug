{"sha": "6f4185d7863f05abadb10550b26eb659a2b1eace", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmY0MTg1ZDc4NjNmMDVhYmFkYjEwNTUwYjI2ZWI2NTlhMmIxZWFjZQ==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-05-31T16:43:31Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-05-31T16:43:31Z"}, "message": "Makefile.in: Fix many dependencies.\n\n\t* Makefile.in: Fix many dependencies.\n\t* tree-profile.c: Don't include regs.h.\n\t* tree-vectorizer.c: Don't include cfglayout.h.\n\t* tree-vect-stmts.c: Likewise.\n\t* tree-vect-slp.c: Likewise.\n\t* tree-vect-loop.c: Likewise.\n\t* reg-stack.c: Likewise.\n\t* tree-ssa-loop-manip.c: Likewise.\n\t* toplev.c: Likewise.\n\t* varasm.c: Don't include cfglayout.h, basic-block.h,\n\tand tree-iterator.h.\n\t* tree-cfgcleanup.c: Don't include cfglayout.h.\n\t* passes.c: Don't include cfglayout.h, dwarf2asm.h,\n\tdwarf2out.h, dbxout.h, sdbout.h, and xcoffout.h.\n\t* cgraphclones.c: Don't include plugin.h.\n\nFrom-SVN: r188068", "tree": {"sha": "3f2a7eeb0b475f62a57db19df71b411970c67aac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f2a7eeb0b475f62a57db19df71b411970c67aac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f4185d7863f05abadb10550b26eb659a2b1eace", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f4185d7863f05abadb10550b26eb659a2b1eace", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f4185d7863f05abadb10550b26eb659a2b1eace", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f4185d7863f05abadb10550b26eb659a2b1eace/comments", "author": null, "committer": null, "parents": [{"sha": "5be35a6121448a5692041a94b1caa7c710ef6f11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5be35a6121448a5692041a94b1caa7c710ef6f11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5be35a6121448a5692041a94b1caa7c710ef6f11"}], "stats": {"total": 253, "additions": 121, "deletions": 132}, "files": [{"sha": "a2c5d69ab30d7b4bc81d46fa0a80a251288797b4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6f4185d7863f05abadb10550b26eb659a2b1eace", "patch": "@@ -1,3 +1,21 @@\n+2012-05-31  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* Makefile.in: Fix many dependencies.\n+\t* tree-profile.c: Don't include regs.h.\n+\t* tree-vectorizer.c: Don't include cfglayout.h.\n+\t* tree-vect-stmts.c: Likewise.\n+\t* tree-vect-slp.c: Likewise.\n+\t* tree-vect-loop.c: Likewise.\n+\t* reg-stack.c: Likewise.\n+\t* tree-ssa-loop-manip.c: Likewise.\n+\t* toplev.c: Likewise.\n+\t* varasm.c: Don't include cfglayout.h, basic-block.h,\n+\tand tree-iterator.h.\n+\t* tree-cfgcleanup.c: Don't include cfglayout.h.\n+\t* passes.c: Don't include cfglayout.h, dwarf2asm.h,\n+\tdwarf2out.h, dbxout.h, sdbout.h, and xcoffout.h.\n+\t* cgraphclones.c: Don't include plugin.h.\n+\n 2012-05-31  Georg-Johann Lay  <avr@gjlay.de>\n \n \t* config/avr/t-avr: Correct avr-mmcu.texi dependencies."}, {"sha": "53f49807ced0edccce69bbd8de0aaa79b171af8f", "filename": "gcc/Makefile.in", "status": "modified", "additions": 94, "deletions": 91, "changes": 185, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=6f4185d7863f05abadb10550b26eb659a2b1eace", "patch": "@@ -771,7 +771,7 @@ OPTIONS_H_EXTRA =\n \n # Extra include files that are defined by SourceInclude directives in\n # the .opt files\n-OPTIONS_C_EXTRA =\n+OPTIONS_C_EXTRA = $(PRETTY_PRINT_H)\n \n @option_includes@\n \n@@ -932,15 +932,18 @@ TREE_PRETTY_PRINT_H = tree-pretty-print.h $(PRETTY_PRINT_H)\n GIMPLE_PRETTY_PRINT_H = gimple-pretty-print.h $(TREE_PRETTY_PRINT_H)\n DIAGNOSTIC_CORE_H = diagnostic-core.h $(INPUT_H) bversion.h diagnostic.def\n DIAGNOSTIC_H = diagnostic.h $(DIAGNOSTIC_CORE_H) $(PRETTY_PRINT_H)\n+DWARF2OUT_H = dwarf2out.h $(DWARF2_H)\n C_PRETTY_PRINT_H = c-family/c-pretty-print.h $(PRETTY_PRINT_H) \\\n \t$(C_COMMON_H) $(TREE_H)\n SCEV_H = tree-scalar-evolution.h $(GGC_H) tree-chrec.h $(PARAMS_H)\n-TREE_DATA_REF_H = tree-data-ref.h omega.h graphds.h $(SCEV_H)\n+OMEGA_H = omega.h $(PARAMS_H)\n+TREE_DATA_REF_H = tree-data-ref.h $(OMEGA_H) graphds.h $(SCEV_H)\n TREE_INLINE_H = tree-inline.h vecir.h\n REAL_H = real.h $(MACHMODE_H)\n IRA_INT_H = ira.h ira-int.h $(CFGLOOP_H) alloc-pool.h\n DBGCNT_H = dbgcnt.h dbgcnt.def\n EBITMAP_H = ebitmap.h sbitmap.h\n+GRAPHITE_PPL_H = graphite-ppl.h $(TREE_H)\n LTO_STREAMER_H = lto-streamer.h $(LINKER_PLUGIN_API_H) $(TARGET_H) \\\n \t\t$(CGRAPH_H) $(VEC_H) vecprim.h $(TREE_H) $(GIMPLE_H) \\\n \t\t$(GCOV_IO_H) $(DIAGNOSTIC_H) alloc-pool.h\n@@ -2046,7 +2049,7 @@ c-family/c-semantics.o : c-family/c-semantics.c $(CONFIG_H) $(SYSTEM_H) \\\n \n c-family/c-ada-spec.o : c-family/c-ada-spec.c c-family/c-ada-spec.h \\\n \t$(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(CPP_ID_DATA_H) $(TM_H) \\\n-\tcoretypes.h tree-iterator.h tree-pass.h output.h\n+\tcoretypes.h tree-iterator.h $(TREE_PASS_H) output.h\n \n c-family/stub-objc.o : c-family/stub-objc.c $(CONFIG_H) $(SYSTEM_H) \\\n \tcoretypes.h $(TREE_H) $(C_COMMON_H) c-family/c-objc.h\n@@ -2165,7 +2168,8 @@ trans-mem.o : trans-mem.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n \t$(TREE_H) $(GIMPLE_H) $(TREE_FLOW_H) $(TREE_PASS_H) $(TREE_INLINE_H) \\\n \t$(DIAGNOSTIC_CORE_H) $(DEMANGLE_H) output.h $(TRANS_MEM_H) \\\n \t$(PARAMS_H) $(TARGET_H) langhooks.h \\\n-\t$(GIMPLE_PRETTY_PRINT_H) $(CFGLOOP_H)\n+\t$(GIMPLE_PRETTY_PRINT_H) $(CFGLOOP_H) \\\n+\tgt-trans-mem.h\n \n ggc-common.o: ggc-common.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t\t\\\n \t$(GGC_H) $(HASHTAB_H) $(DIAGNOSTIC_CORE_H) $(PARAMS_H) hosthooks.h\t\\\n@@ -2266,14 +2270,14 @@ tree.o: tree.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    toplev.h $(DIAGNOSTIC_CORE_H) $(GGC_H) $(HASHTAB_H) $(TARGET_H) output.h $(TM_P_H) \\\n    langhooks.h gt-tree.h $(TREE_INLINE_H) tree-iterator.h \\\n    $(BASIC_BLOCK_H) $(TREE_FLOW_H) $(OBSTACK_H) pointer-set.h \\\n-   tree-pass.h $(LANGHOOKS_DEF_H) $(DIAGNOSTIC_H) $(CGRAPH_H) $(TIMEVAR_H) \\\n+   $(TREE_PASS_H) $(LANGHOOKS_DEF_H) $(DIAGNOSTIC_H) $(CGRAPH_H) $(TIMEVAR_H) \\\n    $(EXCEPT_H) debug.h intl.h tree-diagnostic.h $(TREE_PRETTY_PRINT_H) \\\n    $(COMMON_TARGET_H)\n tree-dump.o: tree-dump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) langhooks.h toplev.h $(SPLAY_TREE_H) $(TREE_DUMP_H) \\\n    tree-iterator.h $(TREE_PASS_H) $(DIAGNOSTIC_H)\n tree-inline.o : tree-inline.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) $(RTL_H) $(EXPR_H) $(FLAGS_H) $(PARAMS_H) $(INPUT_H) insn-config.h \\\n+   $(TREE_H) $(RTL_H) $(FLAGS_H) $(PARAMS_H) $(INPUT_H) insn-config.h \\\n    $(HASHTAB_H) langhooks.h $(TREE_INLINE_H) $(CGRAPH_H) \\\n    intl.h $(FUNCTION_H) $(GIMPLE_H) \\\n    debug.h $(DIAGNOSTIC_H) $(EXCEPT_H) $(TREE_FLOW_H) tree-iterator.h tree-mudflap.h \\\n@@ -2301,9 +2305,9 @@ tree-ssa-structalias.o: tree-ssa-structalias.c \\\n    $(TREE_PASS_H) $(TIMEVAR_H) alloc-pool.h $(SPLAY_TREE_H) $(PARAMS_H) \\\n    $(CGRAPH_H) $(ALIAS_H) pointer-set.h\n tree-ssa-uninit.o : tree-ssa-uninit.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(TREE_H) $(TM_P_H) $(EXPR_H) output.h $(DIAGNOSTIC_H) \\\n+   $(TREE_H) $(TM_P_H) output.h $(DIAGNOSTIC_H) \\\n    $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n-   $(TREE_DUMP_H) langhooks.h tree-pass.h $(BASIC_BLOCK_H) $(BITMAP_H) \\\n+   $(TREE_DUMP_H) langhooks.h $(TREE_PASS_H) $(BASIC_BLOCK_H) $(BITMAP_H) \\\n    $(FLAGS_H) $(HASHTAB_H) pointer-set.h \\\n    $(GIMPLE_H) $(TREE_INLINE_H) $(GIMPLE_PRETTY_PRINT_H)\n tree-ssa.o : tree-ssa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n@@ -2314,7 +2318,7 @@ tree-ssa.o : tree-ssa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(GIMPLE_H) $(TREE_INLINE_H) $(TARGET_H) \\\n    $(GIMPLE_PRETTY_PRINT_H) $(CFGLOOP_H)\n tree-into-ssa.o : tree-into-ssa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(TREE_H) $(TM_P_H) $(EXPR_H) output.h $(DIAGNOSTIC_H) \\\n+   $(TREE_H) $(TM_P_H) output.h $(DIAGNOSTIC_H) \\\n    $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    langhooks.h domwalk.h $(TREE_PASS_H) $(PARAMS_H) $(BASIC_BLOCK_H) \\\n    $(BITMAP_H) $(CFGLOOP_H) $(FLAGS_H) $(HASHTAB_H) \\\n@@ -2333,9 +2337,9 @@ tree-outof-ssa.o : tree-outof-ssa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_PASS_H) $(TREE_SSA_LIVE_H) $(BASIC_BLOCK_H) $(BITMAP_H) $(GGC_H) \\\n    $(EXPR_H) $(SSAEXPAND_H) $(GIMPLE_PRETTY_PRINT_H)\n tree-ssa-dse.o : tree-ssa-dse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(GGC_H) $(TREE_H) $(RTL_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n+   $(TM_H) $(GGC_H) $(TREE_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n    $(TREE_FLOW_H) $(TREE_PASS_H) $(TREE_DUMP_H) domwalk.h $(FLAGS_H) \\\n-   $(DIAGNOSTIC_H) $(TIMEVAR_H) langhooks.h\n+   $(GIMPLE_PRETTY_PRINT_H) $(TIMEVAR_H) langhooks.h\n tree-ssa-forwprop.o : tree-ssa-forwprop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(TREE_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n    $(TREE_FLOW_H) $(TREE_PASS_H) $(TREE_DUMP_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n@@ -2358,35 +2362,35 @@ tree-nrv.o : tree-nrv.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TIMEVAR_H) $(TREE_DUMP_H) $(TREE_PASS_H) \\\n    langhooks.h $(TREE_PRETTY_PRINT_H)\n tree-ssa-copy.o : tree-ssa-copy.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h $(DIAGNOSTIC_H) \\\n+   $(TREE_H) $(TM_P_H) $(GGC_H) output.h $(DIAGNOSTIC_H) \\\n    $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    $(BASIC_BLOCK_H) $(TREE_PASS_H) langhooks.h tree-ssa-propagate.h \\\n    $(FLAGS_H) $(CFGLOOP_H) $(GIMPLE_PRETTY_PRINT_H)\n tree-ssa-propagate.o : tree-ssa-propagate.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(EXPR_H) output.h \\\n+   $(SYSTEM_H) $(TREE_H) $(TM_P_H) output.h \\\n    $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) $(BASIC_BLOCK_H) $(TREE_PASS_H) langhooks.h \\\n    tree-ssa-propagate.h $(VEC_H) value-prof.h gt-tree-ssa-propagate.h $(FLAGS_H) \\\n    $(GIMPLE_H) $(GIMPLE_PRETTY_PRINT_H)\n tree-ssa-dom.o : tree-ssa-dom.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(TREE_H) $(TM_P_H) $(EXPR_H) output.h $(DIAGNOSTIC_H) \\\n+   $(TREE_H) $(TM_P_H) output.h $(DIAGNOSTIC_H) \\\n    $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    $(BASIC_BLOCK_H) domwalk.h $(TREE_PASS_H) $(FLAGS_H) langhooks.h \\\n    tree-ssa-propagate.h $(CFGLOOP_H) $(PARAMS_H) \\\n    $(GIMPLE_PRETTY_PRINT_H)\n tree-ssa-uncprop.o : tree-ssa-uncprop.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(EXPR_H) output.h \\\n+   $(SYSTEM_H) $(TREE_H) $(TM_P_H) output.h \\\n    $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) $(BASIC_BLOCK_H) domwalk.h $(TREE_PASS_H) $(FLAGS_H) \\\n    langhooks.h tree-ssa-propagate.h\n tree-ssa-threadedge.o : tree-ssa-threadedge.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(FLAGS_H) $(TM_P_H) \\\n-   $(BASIC_BLOCK_H) $(CFGLOOP_H) output.h $(EXPR_H) \\\n+   $(BASIC_BLOCK_H) $(CFGLOOP_H) output.h \\\n    $(FUNCTION_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TREE_DUMP_H) $(TREE_FLOW_H) \\\n    $(TREE_PASS_H) tree-ssa-propagate.h langhooks.h \\\n    $(PARAMS_H)\n tree-ssa-threadupdate.o : tree-ssa-threadupdate.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(EXPR_H) output.h \\\n+   $(SYSTEM_H) $(TREE_H) $(TM_P_H) output.h \\\n    $(DIAGNOSTIC_H) $(FUNCTION_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    $(BASIC_BLOCK_H) $(FLAGS_H) $(TREE_PASS_H) $(CFGLOOP_H)\n tree-ssanames.o : tree-ssanames.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n@@ -2418,25 +2422,25 @@ tree-ssa-sccvn.o : tree-ssa-sccvn.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(TREE_INLINE_H) tree-iterator.h tree-ssa-propagate.h tree-ssa-sccvn.h \\\n    $(PARAMS_H) $(GIMPLE_PRETTY_PRINT_H) gimple-fold.h\n tree-vrp.o : tree-vrp.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-   $(TREE_FLOW_H) $(TREE_PASS_H) $(TREE_DUMP_H) $(DIAGNOSTIC_H) $(GGC_H) \\\n+   $(TREE_FLOW_H) $(TREE_PASS_H) $(TREE_DUMP_H) $(DIAGNOSTIC_CORE_H) $(GGC_H) \\\n    $(BASIC_BLOCK_H) tree-ssa-propagate.h $(FLAGS_H) $(TREE_DUMP_H) \\\n    $(CFGLOOP_H) $(SCEV_H) $(TIMEVAR_H) intl.h \\\n    $(GIMPLE_PRETTY_PRINT_H) gimple-fold.h $(OPTABS_H) $(EXPR_H)\n tree-cfg.o : tree-cfg.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) $(FLAGS_H) output.h \\\n-   $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n+   $(TREE_H) $(TM_P_H) $(GGC_H) $(FLAGS_H) output.h \\\n+   $(DIAGNOSTIC_CORE_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) $(EXCEPT_H) langhooks.h $(CFGLOOP_H) $(TREE_PASS_H) \\\n    $(CFGLAYOUT_H) $(BASIC_BLOCK_H) \\\n    value-prof.h tree-ssa-propagate.h $(TREE_INLINE_H) $(GIMPLE_PRETTY_PRINT_H)\n tree-cfgcleanup.o : tree-cfgcleanup.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) $(FLAGS_H) output.h \\\n-   $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n+   $(TREE_H) $(TM_P_H) $(GGC_H) $(FLAGS_H) output.h \\\n+   $(DIAGNOSTIC_CORE_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) $(EXCEPT_H) langhooks.h $(CFGLOOP_H) $(TREE_PASS_H) \\\n-   $(CFGLAYOUT_H) $(BASIC_BLOCK_H) $(HASHTAB_H)  \\\n+   $(BASIC_BLOCK_H) $(HASHTAB_H)  \\\n    tree-ssa-propagate.h $(SCEV_H)\n tree-tailcall.o : tree-tailcall.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TM_P_H) $(FUNCTION_H) $(TM_H) coretypes.h \\\n-   $(TREE_DUMP_H) $(DIAGNOSTIC_H) $(EXCEPT_H) $(TREE_PASS_H) $(FLAGS_H) langhooks.h \\\n+   $(TREE_DUMP_H) $(EXCEPT_H) $(TREE_PASS_H) $(FLAGS_H) langhooks.h \\\n    $(BASIC_BLOCK_H) $(DBGCNT_H) $(GIMPLE_PRETTY_PRINT_H) $(TARGET_H) \\\n    $(COMMON_TARGET_H)\n tree-ssa-sink.o : tree-ssa-sink.c $(TREE_FLOW_H) $(CONFIG_H) \\\n@@ -2456,7 +2460,7 @@ tree-if-conv.o: tree-if-conv.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n tree-iterator.o : tree-iterator.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n    coretypes.h $(GGC_H) tree-iterator.h $(GIMPLE_H) gt-tree-iterator.h\n tree-dfa.o : tree-dfa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h $(DIAGNOSTIC_H) \\\n+   $(TREE_H) $(TM_P_H) $(GGC_H) output.h $(DIAGNOSTIC_H) \\\n    $(TREE_INLINE_H) $(HASHTAB_H) pointer-set.h $(FLAGS_H) $(FUNCTION_H) \\\n    $(TIMEVAR_H) convert.h $(TM_H) coretypes.h langhooks.h $(TREE_DUMP_H) \\\n    $(TREE_PASS_H) $(PARAMS_H) $(CGRAPH_H) $(BASIC_BLOCK_H) $(GIMPLE_H) \\\n@@ -2519,12 +2523,12 @@ tree-ssa-loop-ivopts.o : tree-ssa-loop-ivopts.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(GIMPLE_PRETTY_PRINT_H) tree-ssa-propagate.h\n tree-affine.o : tree-affine.c tree-affine.h $(CONFIG_H) pointer-set.h \\\n    $(SYSTEM_H) $(TREE_H) $(GIMPLE_H) \\\n-   output.h $(DIAGNOSTIC_H) coretypes.h $(TREE_DUMP_H) $(FLAGS_H) \\\n+   output.h coretypes.h $(TREE_DUMP_H) $(FLAGS_H) \\\n    $(TREE_PRETTY_PRINT_H)\n tree-ssa-loop-manip.o : tree-ssa-loop-manip.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(BASIC_BLOCK_H) output.h $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) \\\n-   $(TIMEVAR_H) $(CFGLOOP_H) $(TREE_PASS_H) $(CFGLAYOUT_H) \\\n+   $(TIMEVAR_H) $(CFGLOOP_H) $(TREE_PASS_H) \\\n    $(SCEV_H) $(PARAMS_H) $(TREE_INLINE_H) langhooks.h\n tree-ssa-loop-im.o : tree-ssa-loop-im.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) domwalk.h \\\n@@ -2536,7 +2540,7 @@ tree-ssa-math-opts.o : tree-ssa-math-opts.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\n    $(TREE_PASS_H) alloc-pool.h $(BASIC_BLOCK_H) $(TARGET_H) \\\n    $(DIAGNOSTIC_H) $(RTL_H) $(EXPR_H) $(OPTABS_H) $(GIMPLE_PRETTY_PRINT_H)\n tree-ssa-alias.o : tree-ssa-alias.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) $(TREE_INLINE_H) $(FLAGS_H) \\\n+   $(TREE_H) $(TM_P_H) $(GGC_H) $(TREE_INLINE_H) $(FLAGS_H) \\\n    $(FUNCTION_H) $(TIMEVAR_H) convert.h $(TM_H) coretypes.h langhooks.h \\\n    $(TREE_DUMP_H) $(TREE_PASS_H) $(PARAMS_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) \\\n    $(GIMPLE_H) $(VEC_H) $(TARGET_H) \\\n@@ -2561,18 +2565,18 @@ gimplify.o : gimplify.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(GIMPLE_H) \\\n    $(LANGHOOKS_DEF_H) $(TREE_FLOW_H) $(CGRAPH_H) $(TIMEVAR_H) $(TM_H) \\\n    coretypes.h $(EXCEPT_H) $(FLAGS_H) $(RTL_H) $(FUNCTION_H) $(EXPR_H) output.h \\\n    $(GGC_H) gt-gimplify.h $(HASHTAB_H) $(TARGET_H) $(DIAGNOSTIC_CORE_H) $(OPTABS_H) \\\n-   $(SPLAY_TREE_H) $(VEC_H) tree-iterator.h tree-pass.h $(TREE_PRETTY_PRINT_H)\n+   $(SPLAY_TREE_H) $(VEC_H) tree-iterator.h $(TREE_PASS_H) $(TREE_PRETTY_PRINT_H)\n gimple-iterator.o : gimple-iterator.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TREE_H) $(GIMPLE_H) $(TREE_FLOW_H) value-prof.h\n gimple-fold.o : gimple-fold.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h \\\n-   $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n+   $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(GGC_H) \\\n+   $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) $(BASIC_BLOCK_H) $(TREE_PASS_H) langhooks.h \\\n-   tree-ssa-propagate.h value-prof.h $(FLAGS_H) $(TARGET_H) gimple-fold.h\n+   tree-ssa-propagate.h $(FLAGS_H) $(TARGET_H) gimple-fold.h\n gimple-low.o : gimple-low.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n-   $(DIAGNOSTIC_H) $(GIMPLE_H) $(TREE_INLINE_H) langhooks.h \\\n+   $(DIAGNOSTIC_CORE_H) $(GIMPLE_H) $(TREE_INLINE_H) langhooks.h \\\n    $(LANGHOOKS_DEF_H) $(TREE_FLOW_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n-   $(EXCEPT_H) $(FLAGS_H) $(RTL_H) $(FUNCTION_H) $(EXPR_H) $(TREE_PASS_H) \\\n+   $(EXCEPT_H) $(FLAGS_H) $(RTL_H) $(FUNCTION_H) $(TREE_PASS_H) \\\n    $(HASHTAB_H) $(DIAGNOSTIC_CORE_H) tree-iterator.h\n omp-low.o : omp-low.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(RTL_H) $(GIMPLE_H) $(TREE_INLINE_H) langhooks.h $(DIAGNOSTIC_CORE_H) \\\n@@ -2581,7 +2585,7 @@ omp-low.o : omp-low.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(CFGLOOP_H) tree-iterator.h gt-omp-low.h\n tree-browser.o : tree-browser.c tree-browser.def $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TREE_H) $(TREE_PRETTY_PRINT_H)\n-omega.o : omega.c omega.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TREE_H) \\\n+omega.o : omega.c $(OMEGA_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TREE_H) \\\n    $(DIAGNOSTIC_CORE_H) $(TREE_PASS_H)\n tree-chrec.o : tree-chrec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TREE_PRETTY_PRINT_H) $(CFGLOOP_H) $(TREE_FLOW_H) $(SCEV_H) $(TREE_PASS_H) \\\n@@ -2593,72 +2597,72 @@ tree-data-ref.o : tree-data-ref.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(GIMPLE_PRETTY_PRINT_H) $(TREE_FLOW_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) \\\n    $(TREE_PASS_H) langhooks.h tree-affine.h $(PARAMS_H)\n sese.o : sese.c sese.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TREE_PRETTY_PRINT_H) \\\n-   $(TREE_FLOW_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) tree-pass.h value-prof.h\n+   $(TREE_FLOW_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) $(TREE_PASS_H) value-prof.h\n graphite.o : graphite.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(DIAGNOSTIC_CORE_H) \\\n    $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) sese.h \\\n-   $(DBGCNT_H) graphite-ppl.h graphite-poly.h graphite-scop-detection.h \\\n+   $(DBGCNT_H) $(GRAPHITE_PPL_H) graphite-poly.h graphite-scop-detection.h \\\n    graphite-clast-to-gimple.h graphite-sese-to-poly.h\n graphite-blocking.o : graphite-blocking.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) \\\n-   sese.h graphite-ppl.h graphite-poly.h\n+   sese.h $(GRAPHITE_PPL_H) graphite-poly.h\n graphite-clast-to-gimple.o : graphite-clast-to-gimple.c $(CONFIG_H) \\\n    $(SYSTEM_H) coretypes.h $(DIAGNOSTIC_CORE_H) $(TREE_FLOW_H) $(TREE_DUMP_H) \\\n    $(CFGLOOP_H) $(TREE_DATA_REF_H) sese.h graphite-cloog-util.h \\\n-   graphite-ppl.h graphite-poly.h graphite-clast-to-gimple.h \\\n+   $(GRAPHITE_PPL_H) graphite-poly.h graphite-clast-to-gimple.h \\\n    graphite-dependences.h graphite-cloog-compat.h\n graphite-cloog-util.o : graphite-cloog-util.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h graphite-cloog-util.h graphite-cloog-compat.h\n graphite-dependences.o : graphite-dependences.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) \\\n-   sese.h graphite-ppl.h graphite-poly.h graphite-dependences.h \\\n+   sese.h $(GRAPHITE_PPL_H) graphite-poly.h graphite-dependences.h \\\n    graphite-cloog-util.h\n graphite-interchange.o : graphite-interchange.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) \\\n-   sese.h graphite-ppl.h graphite-poly.h\n+   sese.h $(GRAPHITE_PPL_H) graphite-poly.h\n graphite-poly.o : graphite-poly.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(DIAGNOSTIC_CORE_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(GIMPLE_PRETTY_PRINT_H) \\\n-   $(CFGLOOP_H) $(TREE_DATA_REF_H) sese.h graphite-ppl.h graphite-poly.h \\\n+   $(CFGLOOP_H) $(TREE_DATA_REF_H) sese.h $(GRAPHITE_PPL_H) graphite-poly.h \\\n    graphite-dependences.h graphite-cloog-util.h\n graphite-ppl.o : graphite-ppl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   graphite-cloog-util.h graphite-ppl.h\n+   graphite-cloog-util.h $(GRAPHITE_PPL_H)\n graphite-scop-detection.o : graphite-scop-detection.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TREE_FLOW_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) $(TREE_PASS_H) \\\n-   sese.h graphite-ppl.h graphite-poly.h graphite-scop-detection.h\n+   sese.h $(GRAPHITE_PPL_H) graphite-poly.h graphite-scop-detection.h\n graphite-sese-to-poly.o : graphite-sese-to-poly.c $(CONFIG_H) \\\n    $(SYSTEM_H) coretypes.h $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) \\\n-   $(TREE_DATA_REF_H) domwalk.h sese.h graphite-ppl.h graphite-poly.h \\\n+   $(TREE_DATA_REF_H) domwalk.h sese.h $(GRAPHITE_PPL_H) graphite-poly.h \\\n    graphite-sese-to-poly.h\n tree-vect-loop.o: tree-vect-loop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(GGC_H) $(TREE_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) \\\n-   $(TREE_DUMP_H) $(CFGLOOP_H) $(CFGLAYOUT_H) $(EXPR_H) $(RECOG_H) $(OPTABS_H) \\\n+   $(TM_H) $(GGC_H) $(TREE_H) $(BASIC_BLOCK_H) $(TREE_FLOW_H) \\\n+   $(TREE_DUMP_H) $(CFGLOOP_H) $(EXPR_H) $(RECOG_H) $(OPTABS_H) \\\n    $(DIAGNOSTIC_CORE_H) $(SCEV_H) $(TREE_VECTORIZER_H) \\\n    $(GIMPLE_PRETTY_PRINT_H) $(TARGET_H) $(TREE_DATA_REF_H)\n tree-vect-loop-manip.o: tree-vect-loop-manip.c $(CONFIG_H) $(SYSTEM_H) \\\n-   coretypes.h $(TM_H) $(GGC_H) $(TREE_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) \\\n-   $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) $(CFGLAYOUT_H) $(EXPR_H) $(DIAGNOSTIC_CORE_H) \\\n+   coretypes.h $(TM_H) $(GGC_H) $(TREE_H) $(BASIC_BLOCK_H) \\\n+   $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) $(CFGLAYOUT_H) $(DIAGNOSTIC_CORE_H) \\\n    $(SCEV_H) $(TREE_VECTORIZER_H) langhooks.h $(GIMPLE_PRETTY_PRINT_H)\n tree-vect-patterns.o: tree-vect-patterns.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(GGC_H) $(TREE_H) $(TARGET_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) \\\n+   $(TM_H) $(GGC_H) $(TREE_H) $(TARGET_H) $(BASIC_BLOCK_H) \\\n    $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) $(EXPR_H) $(OPTABS_H) $(PARAMS_H) \\\n    $(TREE_DATA_REF_H) $(TREE_VECTORIZER_H) $(RECOG_H) $(DIAGNOSTIC_CORE_H) \\\n    $(GIMPLE_PRETTY_PRINT_H)\n tree-vect-slp.o: tree-vect-slp.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(GGC_H) $(TREE_H) $(TARGET_H) $(BASIC_BLOCK_H) \\\n-   $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) $(CFGLAYOUT_H) \\\n+   $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) \\\n    $(EXPR_H) $(RECOG_H) $(OPTABS_H) $(TREE_VECTORIZER_H) \\\n    $(GIMPLE_PRETTY_PRINT_H) $(TREE_DATA_REF_H) langhooks.h\n tree-vect-stmts.o: tree-vect-stmts.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(GGC_H) $(TREE_H) $(TARGET_H) $(BASIC_BLOCK_H) \\\n-   $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) $(CFGLAYOUT_H) \\\n-   $(EXPR_H) $(RECOG_H) $(OPTABS_H) $(DIAGNOSTIC_CORE_H) $(TREE_VECTORIZER_H) \\\n+   $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) \\\n+   $(EXPR_H) $(RECOG_H) $(OPTABS_H) $(TREE_VECTORIZER_H) \\\n    langhooks.h $(GIMPLE_PRETTY_PRINT_H)\n tree-vect-data-refs.o: tree-vect-data-refs.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(GGC_H) $(TREE_H) $(TARGET_H) $(BASIC_BLOCK_H) \\\n-   $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) \\\n+   $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) \\\n    $(EXPR_H) $(OPTABS_H) $(SCEV_H) $(TREE_VECTORIZER_H) \\\n    $(DIAGNOSTIC_CORE_H) $(TM_P_H) $(GIMPLE_PRETTY_PRINT_H)\n tree-vectorizer.o: tree-vectorizer.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(GGC_H) $(TREE_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) \\\n+   $(TM_H) $(GGC_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_DUMP_H) \\\n    $(CFGLOOP_H) $(TREE_PASS_H) $(TREE_VECTORIZER_H) $(TIMEVAR_H) \\\n    $(TREE_PRETTY_PRINT_H)\n tree-loop-distribution.o: tree-loop-distribution.c $(CONFIG_H) $(SYSTEM_H) \\\n@@ -2667,7 +2671,7 @@ tree-parloops.o: tree-parloops.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TREE_FLOW_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) $(GIMPLE_PRETTY_PRINT_H) \\\n    $(TREE_PASS_H) langhooks.h gt-tree-parloops.h $(TREE_VECTORIZER_H)\n tree-stdarg.o: tree-stdarg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) $(FUNCTION_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_PASS_H) \\\n+   $(TREE_H) $(FUNCTION_H) $(TREE_FLOW_H) $(TREE_PASS_H) \\\n    tree-stdarg.h $(TARGET_H) langhooks.h $(GIMPLE_PRETTY_PRINT_H)\n tree-object-size.o: tree-object-size.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(TREE_H) $(DIAGNOSTIC_CORE_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) \\\n@@ -2697,7 +2701,7 @@ tree-pretty-print.o : tree-pretty-print.c $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_PASS_H) value-prof.h output.h $(TREE_PRETTY_PRINT_H)\n tree-diagnostic.o : tree-diagnostic.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TREE_H) $(DIAGNOSTIC_H) tree-diagnostic.h langhooks.h $(LANGHOOKS_DEF_H) \\\n-   $(VEC_H)\n+   $(VEC_H) $(TREE_PRETTY_PRINT_H) $(TREE_PASS_H)\n fold-const.o : fold-const.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(FLAGS_H) $(DIAGNOSTIC_CORE_H) $(HASHTAB_H) $(EXPR_H) $(RTL_H) \\\n    $(GGC_H) $(TM_P_H) langhooks.h $(MD5_H) intl.h $(TARGET_H) \\\n@@ -2717,7 +2721,7 @@ opts-common.o : opts-common.c $(OPTS_H) $(FLAGS_H) $(CONFIG_H) $(SYSTEM_H) \\\n targhooks.o : targhooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TREE_H) \\\n    $(EXPR_H) $(TM_H) $(RTL_H) $(TM_P_H) $(FUNCTION_H) output.h $(DIAGNOSTIC_CORE_H) \\\n    $(MACHMODE_H) $(TARGET_DEF_H) $(TARGET_H) $(GGC_H) gt-targhooks.h \\\n-   $(OPTABS_H) $(RECOG_H) reload.h hard-reg-set.h intl.h $(OPTS_H) \\\n+   $(OPTABS_H) $(RECOG_H) $(REGS_H) reload.h hard-reg-set.h intl.h $(OPTS_H) \\\n    tree-ssa-alias.h $(TREE_FLOW_H)\n common/common-targhooks.o : common/common-targhooks.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(INPUT_H) $(TM_H) $(COMMON_TARGET_H) common/common-targhooks.h\n@@ -2736,7 +2740,7 @@ CFLAGS-toplev.o += -DTARGET_NAME=\\\"$(target_noncanonical)\\\"\n toplev.o : toplev.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    version.h $(RTL_H) $(FUNCTION_H) $(FLAGS_H) xcoffout.h $(INPUT_H) \\\n    $(INSN_ATTR_H) output.h $(DIAGNOSTIC_H) debug.h insn-config.h intl.h \\\n-   $(RECOG_H) Makefile toplev.h dwarf2out.h sdbout.h dbxout.h $(EXPR_H) \\\n+   $(RECOG_H) Makefile toplev.h $(DWARF2OUT_H) sdbout.h dbxout.h $(EXPR_H) \\\n    hard-reg-set.h $(BASIC_BLOCK_H) graph.h $(EXCEPT_H) $(REGS_H) $(TIMEVAR_H) \\\n    value-prof.h $(PARAMS_H) $(TM_P_H) reload.h ira.h dwarf2asm.h $(TARGET_H) \\\n    langhooks.h insn-flags.h $(CFGLAYOUT_H) $(CFGLOOP_H) hosthooks.h \\\n@@ -2748,15 +2752,15 @@ toplev.o : toplev.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n hwint.o : hwint.c $(CONFIG_H) $(SYSTEM_H) $(DIAGNOSTIC_CORE_H)\n \n passes.o : passes.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-   $(RTL_H) $(FUNCTION_H) $(FLAGS_H) xcoffout.h $(INPUT_H) $(INSN_ATTR_H) output.h \\\n+   $(RTL_H) $(FUNCTION_H) $(FLAGS_H) $(INPUT_H) $(INSN_ATTR_H) output.h \\\n    $(DIAGNOSTIC_CORE_H) debug.h insn-config.h intl.h $(RECOG_H) toplev.h \\\n-   dwarf2out.h sdbout.h dbxout.h $(EXPR_H) hard-reg-set.h $(BASIC_BLOCK_H) \\\n+   $(EXPR_H) hard-reg-set.h $(BASIC_BLOCK_H) \\\n    graph.h $(EXCEPT_H) $(REGS_H) $(TIMEVAR_H) value-prof.h \\\n-   $(PARAMS_H) $(TM_P_H) reload.h dwarf2asm.h $(TARGET_H) \\\n-   langhooks.h insn-flags.h $(CFGLAYOUT_H) $(CFGLOOP_H) \\\n+   $(PARAMS_H) $(TM_P_H) reload.h $(TARGET_H) \\\n+   langhooks.h insn-flags.h $(CFGLOOP_H) \\\n    hosthooks.h $(CGRAPH_H) $(COVERAGE_H) $(TREE_PASS_H) $(TREE_DUMP_H) \\\n-   $(GGC_H) $(CPPLIB_H) $(OPTS_H) $(TREE_FLOW_H) $(TREE_INLINE_H) \\\n-   gt-passes.h $(DF_H) $(PREDICT_H) $(LTO_HEADER_H) $(LTO_SECTION_OUT_H) \\\n+   $(GGC_H) $(OPTS_H) $(TREE_FLOW_H) $(TREE_INLINE_H) \\\n+   gt-passes.h $(DF_H) $(PREDICT_H) $(LTO_STREAMER_H) \\\n    $(PLUGIN_H) $(IPA_UTILS_H)\n \n plugin.o : plugin.c $(PLUGIN_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n@@ -2772,13 +2776,13 @@ rtl-error.o: rtl-error.c $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_H) \\\n    $(CONFIG_H)\n \n rtl.o : rtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-  $(GGC_H) $(BCONFIG_H) insn-notes.def reg-notes.def toplev.h $(DIAGNOSTIC_CORE_H)\n+  $(GGC_H) $(BCONFIG_H) insn-notes.def reg-notes.def $(DIAGNOSTIC_CORE_H)\n \n print-rtl.o : print-rtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n     $(RTL_H) $(TREE_H) hard-reg-set.h $(BASIC_BLOCK_H) $(FLAGS_H) \\\n     $(BCONFIG_H) $(DIAGNOSTIC_H) cselib.h $(TREE_PASS_H) $(TREE_PRETTY_PRINT_H) \\\n-    dwarf2out.h\n-rtlanal.o : rtlanal.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) toplev.h $(DIAGNOSTIC_CORE_H) \\\n+    $(DWARF2OUT_H)\n+rtlanal.o : rtlanal.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(DIAGNOSTIC_CORE_H) \\\n    $(RTL_H) hard-reg-set.h $(TM_P_H) insn-config.h $(RECOG_H) \\\n    $(FLAGS_H) $(REGS_H) output.h $(TARGET_H) $(FUNCTION_H) $(TREE_H) \\\n    $(DF_H) $(EMIT_RTL_H)\n@@ -2787,8 +2791,8 @@ varasm.o : varasm.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(RTL_H) $(FLAGS_H) $(FUNCTION_H) $(EXPR_H) hard-reg-set.h $(REGS_H) \\\n    output.h $(DIAGNOSTIC_CORE_H) xcoffout.h debug.h $(GGC_H) $(TM_P_H) \\\n    $(HASHTAB_H) $(TARGET_H) langhooks.h gt-varasm.h $(BASIC_BLOCK_H) \\\n-   $(CFGLAYOUT_H) $(CGRAPH_H) targhooks.h tree-mudflap.h \\\n-   tree-iterator.h pointer-set.h $(COMMON_TARGET_H)\n+   $(CGRAPH_H) $(TARGET_DEF_H) tree-mudflap.h \\\n+   pointer-set.h $(COMMON_TARGET_H)\n function.o : function.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_H) \\\n    $(TREE_H) $(CFGLAYOUT_H) $(GIMPLE_H) $(FLAGS_H) $(FUNCTION_H) $(EXPR_H) \\\n    $(OPTABS_H) $(LIBFUNCS_H) $(REGS_H) hard-reg-set.h insn-config.h $(RECOG_H) \\\n@@ -2807,7 +2811,7 @@ stmt.o : stmt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n except.o : except.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(FLAGS_H) $(EXCEPT_H) $(FUNCTION_H) $(EXPR_H) $(LIBFUNCS_H) \\\n    langhooks.h insn-config.h hard-reg-set.h $(BASIC_BLOCK_H) output.h \\\n-   dwarf2asm.h dwarf2out.h toplev.h $(DIAGNOSTIC_CORE_H) $(HASHTAB_H) intl.h $(GGC_H) \\\n+   dwarf2asm.h $(DWARF2OUT_H) toplev.h $(DIAGNOSTIC_CORE_H) $(HASHTAB_H) intl.h $(GGC_H) \\\n    gt-except.h $(CGRAPH_H) $(DIAGNOSTIC_H) $(DWARF2_H) \\\n    $(TARGET_H) $(TM_P_H) $(TREE_PASS_H) $(TIMEVAR_H) $(TREE_FLOW_H) \\\n    $(TREE_PRETTY_PRINT_H) sbitmap.h $(COMMON_TARGET_H) $(CFGLOOP_H)\n@@ -2860,14 +2864,14 @@ sdbout.o : sdbout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) debug.h \\\n dwarf2out.o : dwarf2out.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) version.h $(RTL_H) $(DWARF2_H) debug.h $(FLAGS_H) insn-config.h \\\n    output.h $(DIAGNOSTIC_H) hard-reg-set.h $(REGS_H) $(EXPR_H) \\\n-   $(LIBFUNCS_H) toplev.h $(DIAGNOSTIC_CORE_H) dwarf2out.h reload.h \\\n+   $(LIBFUNCS_H) toplev.h $(DIAGNOSTIC_CORE_H) $(DWARF2OUT_H) reload.h \\\n    $(GGC_H) $(EXCEPT_H) dwarf2asm.h $(TM_P_H) langhooks.h $(HASHTAB_H) \\\n    gt-dwarf2out.h $(TARGET_H) $(CGRAPH_H) $(MD5_H) $(INPUT_H) $(FUNCTION_H) \\\n    $(GIMPLE_H) $(TREE_PASS_H) $(TREE_FLOW_H) $(CFGLAYOUT_H) \\\n    $(TREE_PRETTY_PRINT_H) $(COMMON_TARGET_H) $(OPTS_H)\n dwarf2cfi.o : dwarf2cfi.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    version.h $(RTL_H) $(EXPR_H) $(REGS_H) $(FUNCTION_H) output.h \\\n-   gt-dwarf2cfi.h debug.h $(DWARF2_H) dwarf2asm.h dwarf2out.h $(COMMON_TARGET_H) \\\n+   gt-dwarf2cfi.h debug.h $(DWARF2_H) dwarf2asm.h $(DWARF2OUT_H) $(COMMON_TARGET_H) \\\n    $(GGC_H) $(TM_P_H) $(TARGET_H) $(TREE_PASS_H) $(BASIC_BLOCK_H) $(EXCEPT_H)\n dwarf2asm.o : dwarf2asm.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(FLAGS_H) $(RTL_H) $(TREE_H) output.h dwarf2asm.h $(TM_P_H) $(GGC_H) \\\n@@ -2878,15 +2882,15 @@ xcoffout.o : xcoffout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(RTL_H) xcoffout.h $(FLAGS_H) $(DIAGNOSTIC_CORE_H) output.h dbxout.h \\\n    $(GGC_H) $(TARGET_H) debug.h $(GSTAB_H) xcoff.h\n godump.o : godump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(DIAGNOSTIC_CORE_H) \\\n-   $(TREE_H) $(GGC_H) pointer-set.h $(OBSTACK_H) debug.h\n+   $(TREE_H) $(GGC_H) pointer-set.h $(OBSTACK_H) debug.h gt-godump.h\n emit-rtl.o : emit-rtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(FLAGS_H) $(FUNCTION_H) $(REGS_H) insn-config.h $(RECOG_H) \\\n    $(GGC_H) $(EXPR_H) hard-reg-set.h $(BITMAP_H) $(DIAGNOSTIC_CORE_H) $(BASIC_BLOCK_H) \\\n    $(HASHTAB_H) $(TM_P_H) debug.h langhooks.h $(TREE_PASS_H) gt-emit-rtl.h \\\n    $(DF_H) $(PARAMS_H) $(TARGET_H) $(TREE_FLOW_H)\n real.o : real.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(DIAGNOSTIC_CORE_H) $(TM_P_H) $(REAL_H) dfp.h realmpfr.h\n-realmpfr.o : realmpfr.c realmpfr.h $(CONFIG_H) $(SYSTEM_H) $(REAL_H)\n+realmpfr.o : realmpfr.c realmpfr.h $(CONFIG_H) $(SYSTEM_H) $(REAL_H) $(TREE_H)\n dfp.o : dfp.c dfp.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H)\t$(TREE_H) \\\n    $(TM_P_H) $(REAL_H) $(DECNUM_H)\n fixed-value.o: fixed-value.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n@@ -2901,7 +2905,7 @@ simplify-rtx.o : simplify-rtx.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RECOG_H) $(EXPR_H) $(DIAGNOSTIC_CORE_H) output.h $(FUNCTION_H) $(GGC_H) $(TM_P_H) \\\n    $(TREE_H) $(TARGET_H)\n symtab.o : symtab.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-   langhooks.h toplev.h $(DIAGNOSTIC_CORE_H) $(FLAGS_H) $(GGC_H) $(TARGET_H) $(CGRAPH_H) \\\n+   langhooks.h $(DIAGNOSTIC_CORE_H) $(FLAGS_H) $(GGC_H) $(TARGET_H) $(CGRAPH_H) \\\n    $(HASHTAB_H) gt-symtab.h\n cgraph.o : cgraph.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    langhooks.h toplev.h $(DIAGNOSTIC_CORE_H) $(FLAGS_H) $(GGC_H) $(TARGET_H) $(CGRAPH_H) \\\n@@ -2975,7 +2979,7 @@ ipa-inline-transform.o : ipa-inline-transform.c $(CONFIG_H) $(SYSTEM_H) coretype\n    $(TREE_H) langhooks.h $(TREE_INLINE_H) $(FLAGS_H) $(CGRAPH_H) intl.h \\\n    $(TIMEVAR_H) $(TREE_PASS_H) \\\n    $(HASHTAB_H) $(COVERAGE_H) $(GGC_H) $(TREE_FLOW_H) $(IPA_PROP_H) \\\n-   tree-pass.h\n+   $(TREE_PASS_H)\n ipa-utils.o : ipa-utils.c $(IPA_UTILS_H) $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_INLINE_H) langhooks.h \\\n    pointer-set.h $(GGC_H) $(GIMPLE_H) $(SPLAY_TREE_H) \\\n@@ -3025,7 +3029,7 @@ web.o : web.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    insn-config.h $(RECOG_H) $(DF_H) $(OBSTACK_H) $(TIMEVAR_H) $(TREE_PASS_H)\n ree.o : ree.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    hard-reg-set.h $(FLAGS_H) $(BASIC_BLOCK_H) $(FUNCTION_H) output.h \\\n-   $(DF_H) $(TIMEVAR_H) tree-pass.h $(RECOG_H) $(EXPR_H) \\\n+   $(DF_H) $(TIMEVAR_H) $(TREE_PASS_H) $(RECOG_H) $(EXPR_H) \\\n    $(REGS_H) $(TREE_H) $(TM_P_H) insn-config.h $(INSN_ATTR_H) $(DIAGNOSTIC_CORE_H) \\\n    $(TARGET_H) $(OPTABS_H) insn-codes.h rtlhooks-def.h $(PARAMS_H) $(CGRAPH_H)\n cprop.o : cprop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n@@ -3060,11 +3064,11 @@ tree-ssa-dce.o : tree-ssa-dce.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n     coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) $(BASIC_BLOCK_H) \\\n     $(GGC_H) $(GIMPLE_H) $(CFGLOOP_H) $(SCEV_H) $(GIMPLE_PRETTY_PRINT_H)\n tree-call-cdce.o : tree-call-cdce.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n-    $(TREE_FLOW_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) \\\n+    $(TREE_FLOW_H) $(TIMEVAR_H) $(TM_H) \\\n     coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) $(BASIC_BLOCK_H) \\\n     $(GIMPLE_H) $(GIMPLE_PRETTY_PRINT_H)\n tree-ssa-ccp.o : tree-ssa-ccp.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(EXPR_H) output.h \\\n+   $(SYSTEM_H) $(TREE_H) $(TM_P_H) output.h \\\n    $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) $(BASIC_BLOCK_H) $(TREE_PASS_H) langhooks.h  $(PARAMS_H) \\\n    tree-ssa-propagate.h value-prof.h $(FLAGS_H) $(TARGET_H) $(DIAGNOSTIC_CORE_H) \\\n@@ -3075,7 +3079,7 @@ tree-ssa-strlen.o : tree-ssa-strlen.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n tree-sra.o : tree-sra.c $(CONFIG_H) $(SYSTEM_H) coretypes.h alloc-pool.h \\\n    $(TM_H) $(TREE_H) $(GIMPLE_H) $(CGRAPH_H) $(TREE_FLOW_H) \\\n    $(IPA_PROP_H) $(DIAGNOSTIC_H) statistics.h $(TREE_DUMP_H) $(TIMEVAR_H) \\\n-   $(PARAMS_H) $(TARGET_H) $(FLAGS_H) $(EXPR_H) \\\n+   $(PARAMS_H) $(TARGET_H) $(FLAGS_H) \\\n    $(DBGCNT_H) $(TREE_INLINE_H) $(GIMPLE_PRETTY_PRINT_H)\n tree-switch-conversion.o : tree-switch-conversion.c $(CONFIG_H) $(SYSTEM_H) \\\n     $(TREE_H) $(TM_P_H) $(TREE_FLOW_H) $(DIAGNOSTIC_H) $(TREE_INLINE_H) \\\n@@ -3085,10 +3089,10 @@ tree-switch-conversion.o : tree-switch-conversion.c $(CONFIG_H) $(SYSTEM_H) \\\n     $(GIMPLE_PRETTY_PRINT_H) langhooks.h\n tree-complex.o : tree-complex.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TREE_H) \\\n     $(TM_H) $(FLAGS_H) $(TREE_FLOW_H) $(GIMPLE_H) \\\n-    tree-iterator.h $(TREE_PASS_H) tree-ssa-propagate.h $(DIAGNOSTIC_H)\n+    tree-iterator.h $(TREE_PASS_H) tree-ssa-propagate.h\n tree-emutls.o : tree-emutls.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TREE_H) \\\n     $(GIMPLE_H) $(TREE_PASS_H) $(TREE_FLOW_H) $(CGRAPH_H) langhooks.h \\\n-    $(TARGET_H) targhooks.h tree-iterator.h\n+    $(TARGET_H) $(TARGET_DEF_H) tree-iterator.h\n tree-vect-generic.o : tree-vect-generic.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n     $(TM_H) $(TREE_FLOW_H) $(GIMPLE_H) tree-iterator.h $(TREE_PASS_H) \\\n     $(FLAGS_H) $(OPTABS_H) $(MACHMODE_H) $(EXPR_H) \\\n@@ -3123,11 +3127,11 @@ profile.o : profile.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n mcf.o : mcf.c profile.h $(CONFIG_H) $(SYSTEM_H) $(TM_H) coretypes.h \\\n    $(BASIC_BLOCK_H) output.h langhooks.h $(GCOV_IO_H) $(TREE_H) \n tree-profile.o : tree-profile.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(TREE_H) $(FLAGS_H) $(REGS_H) $(EXPR_H) $(FUNCTION_H) \\\n+   $(TM_H) $(TREE_H) $(FLAGS_H) $(FUNCTION_H) \\\n    $(BASIC_BLOCK_H) $(DIAGNOSTIC_CORE_H) $(COVERAGE_H) $(TREE_H) value-prof.h $(TREE_DUMP_H) \\\n    $(TREE_PASS_H) $(TREE_FLOW_H) $(TIMEVAR_H) gt-tree-profile.h $(CGRAPH_H)\n value-prof.o : value-prof.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(BASIC_BLOCK_H) hard-reg-set.h value-prof.h $(EXPR_H) output.h $(FLAGS_H) \\\n+   $(BASIC_BLOCK_H) hard-reg-set.h profile.h value-prof.h $(EXPR_H) output.h $(FLAGS_H) \\\n    $(RECOG_H) insn-config.h $(OPTABS_H) $(REGS_H) $(GGC_H) $(DIAGNOSTIC_H) \\\n    $(TREE_H) $(COVERAGE_H) $(RTL_H) $(GCOV_IO_H) $(TREE_FLOW_H) \\\n    tree-flow-inline.h $(TIMEVAR_H) $(TREE_PASS_H) $(DIAGNOSTIC_CORE_H) pointer-set.h \\\n@@ -3220,7 +3224,7 @@ reginfo.o : reginfo.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n bitmap.o : bitmap.c $(CONFIG_H) $(SYSTEM_H)  coretypes.h \\\n    $(GGC_H) gt-bitmap.h $(BITMAP_H) $(OBSTACK_H) $(HASHTAB_H)\n vec.o : vec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(VEC_H) $(GGC_H) \\\n-   toplev.h $(DIAGNOSTIC_CORE_H) $(HASHTAB_H)\n+   $(DIAGNOSTIC_CORE_H) $(HASHTAB_H)\n reload.o : reload.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_H) \\\n    $(FLAGS_H) output.h $(EXPR_H) $(OPTABS_H) reload.h $(RECOG_H) \\\n    hard-reg-set.h insn-config.h $(REGS_H) $(FUNCTION_H) real.h \\\n@@ -3361,11 +3365,11 @@ sel-sched-ir.o : sel-sched-ir.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n final.o : final.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_H) \\\n    $(TREE_H) $(FLAGS_H) intl.h $(REGS_H) $(RECOG_H) conditions.h \\\n    insn-config.h $(INSN_ATTR_H) $(FUNCTION_H) output.h hard-reg-set.h \\\n-   $(EXCEPT_H) debug.h xcoffout.h toplev.h $(DIAGNOSTIC_CORE_H) reload.h dwarf2out.h \\\n+   $(EXCEPT_H) debug.h xcoffout.h toplev.h $(DIAGNOSTIC_CORE_H) reload.h $(DWARF2OUT_H) \\\n    $(TREE_PASS_H) $(BASIC_BLOCK_H) $(TM_P_H) $(TARGET_H) $(EXPR_H) \\\n    $(CFGLAYOUT_H) dbxout.h $(TIMEVAR_H) $(CGRAPH_H) $(COVERAGE_H) \\\n    $(DF_H) vecprim.h $(GGC_H) $(CFGLOOP_H) $(PARAMS_H) $(TREE_FLOW_H) \\\n-   $(DWARF2_H) targhooks.h $(TREE_PRETTY_PRINT_H)\n+   $(TARGET_DEF_H) $(TREE_PRETTY_PRINT_H)\n recog.o : recog.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_H) \\\n    $(FUNCTION_H) $(BASIC_BLOCK_H) $(REGS_H) $(RECOG_H) $(EXPR_H) \\\n    $(FLAGS_H) insn-config.h $(INSN_ATTR_H) output.h reload.h \\\n@@ -3374,7 +3378,7 @@ recog.o : recog.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_H) \\\n reg-stack.o : reg-stack.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_ERROR_H) $(TREE_H) $(RECOG_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) \\\n    insn-config.h reload.h $(FUNCTION_H) $(TM_P_H) $(GGC_H) \\\n-   $(BASIC_BLOCK_H) $(CFGLAYOUT_H) output.h $(TIMEVAR_H) \\\n+   $(BASIC_BLOCK_H) output.h $(TIMEVAR_H) \\\n    $(TREE_PASS_H) $(TARGET_H) vecprim.h $(DF_H) $(EMIT_RTL_H)\n sreal.o: sreal.c $(CONFIG_H) $(SYSTEM_H) coretypes.h sreal.h\n predict.o: predict.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n@@ -3399,8 +3403,7 @@ cfglayout.o : cfglayout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(FUNCTION_H) $(CFGLAYOUT_H) $(CFGLOOP_H) $(TARGET_H) gt-cfglayout.h \\\n    $(GGC_H) alloc-pool.h $(FLAGS_H) $(OBSTACK_H) $(TREE_PASS_H) vecprim.h \\\n    $(DF_H) $(EMIT_RTL_H) $(COMMON_TARGET_H)\n-timevar.o : timevar.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TIMEVAR_H) $(FLAGS_H) intl.h toplev.h $(DIAGNOSTIC_CORE_H) $(RTL_H) timevar.def\n+timevar.o : timevar.c $(CONFIG_H) $(SYSTEM_H) $(TIMEVAR_H)\n regcprop.o : regcprop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) insn-config.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h \\\n    output.h $(RECOG_H) $(FUNCTION_H) $(OBSTACK_H) $(FLAGS_H) $(TM_P_H) \\"}, {"sha": "cd2a7dbb107f44c172027589c73fc49b5fbe9f5e", "filename": "gcc/cgraphclones.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2Fcgraphclones.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2Fcgraphclones.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphclones.c?ref=6f4185d7863f05abadb10550b26eb659a2b1eace", "patch": "@@ -96,7 +96,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple-pretty-print.h\"\n #include \"output.h\"\n #include \"coverage.h\"\n-#include \"plugin.h\"\n #include \"ipa-inline.h\"\n #include \"ipa-utils.h\"\n #include \"lto-streamer.h\""}, {"sha": "da52415083ea1d3dd84a2b268278e0358a20e64a", "filename": "gcc/dse.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2Fdse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2Fdse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdse.c?ref=6f4185d7863f05abadb10550b26eb659a2b1eace", "patch": "@@ -48,7 +48,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"dbgcnt.h\"\n #include \"target.h\"\n #include \"params.h\"\n-#include \"tree-flow.h\"\n+#include \"tree-flow.h\" /* for may_be_aliased */\n \n /* This file contains three techniques for performing Dead Store\n    Elimination (dse)."}, {"sha": "0c498ebece0554b920d41ea2c324c59106cb2d5d", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=6f4185d7863f05abadb10550b26eb659a2b1eace", "patch": "@@ -93,7 +93,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple.h\"\n #include \"tree-pass.h\"\n #include \"tree-flow.h\"\n-#include \"cfglayout.h\"\n+#include \"cfglayout.h\" /* for insn_scope.  */\n #include \"opts.h\"\n \n static void dwarf2out_source_line (unsigned int, const char *, int, bool);"}, {"sha": "fe72374fbf317116b8a68646f730e7acdf5a5388", "filename": "gcc/et-forest.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2Fet-forest.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2Fet-forest.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fet-forest.c?ref=6f4185d7863f05abadb10550b26eb659a2b1eace", "patch": "@@ -33,7 +33,7 @@ License along with libiberty; see the file COPYING3.  If not see\n #undef DEBUG_ET\n \n #ifdef DEBUG_ET\n-#include \"basic-block.h\"\n+#include \"basic-block.h\" /* To access index in record_path_before_1.  */\n #endif\n \n /* The occurrence of a node in the et tree.  */"}, {"sha": "fe1add226cb5fe296a1ae90ffc015777d24f2ce2", "filename": "gcc/final.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=6f4185d7863f05abadb10550b26eb659a2b1eace", "patch": "@@ -72,7 +72,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"targhooks.h\"\n #include \"debug.h\"\n #include \"expr.h\"\n-#include \"cfglayout.h\"\n+#include \"cfglayout.h\" /* for reemit_insn_block_notes */\n #include \"tree-pass.h\"\n #include \"tree-flow.h\"\n #include \"timevar.h\"\n@@ -83,7 +83,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ggc.h\"\n #include \"cfgloop.h\"\n #include \"params.h\"\n-#include \"tree-pretty-print.h\"\n+#include \"tree-pretty-print.h\" /* for dump_function_header */\n \n #ifdef XCOFF_DEBUGGING_INFO\n #include \"xcoffout.h\"\t\t/* Needed for external data"}, {"sha": "bfd4ce34087e7846a06092c352c00db75df43922", "filename": "gcc/passes.c", "status": "modified", "additions": 1, "deletions": 20, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=6f4185d7863f05abadb10550b26eb659a2b1eace", "patch": "@@ -53,11 +53,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic-core.h\"\n #include \"params.h\"\n #include \"reload.h\"\n-#include \"dwarf2asm.h\"\n #include \"debug.h\"\n #include \"target.h\"\n #include \"langhooks.h\"\n-#include \"cfglayout.h\"\n #include \"cfgloop.h\"\n #include \"hosthooks.h\"\n #include \"cgraph.h\"\n@@ -73,24 +71,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"lto-streamer.h\"\n #include \"plugin.h\"\n #include \"ipa-utils.h\"\n-#include \"tree-pretty-print.h\"\n-\n-#if defined (DWARF2_UNWIND_INFO) || defined (DWARF2_DEBUGGING_INFO)\n-#include \"dwarf2out.h\"\n-#endif\n-\n-#if defined (DBX_DEBUGGING_INFO) || defined (XCOFF_DEBUGGING_INFO)\n-#include \"dbxout.h\"\n-#endif\n-\n-#ifdef SDB_DEBUGGING_INFO\n-#include \"sdbout.h\"\n-#endif\n-\n-#ifdef XCOFF_DEBUGGING_INFO\n-#include \"xcoffout.h\"\t\t/* Needed for external data\n-\t\t\t\t   declarations for e.g. AIX 4.x.  */\n-#endif\n+#include \"tree-pretty-print.h\" /* for dump_function_header */\n \n /* This is used for debugging.  It allows the current pass to printed\n    from anywhere in compilation."}, {"sha": "62787085497e11046f60f87b9aecab84d8df7b80", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=6f4185d7863f05abadb10550b26eb659a2b1eace", "patch": "@@ -166,7 +166,6 @@\n #include \"recog.h\"\n #include \"output.h\"\n #include \"basic-block.h\"\n-#include \"cfglayout.h\"\n #include \"reload.h\"\n #include \"ggc.h\"\n #include \"timevar.h\""}, {"sha": "3f5e61be672976a983547e5de5c72c7f4e9b01f7", "filename": "gcc/toplev.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=6f4185d7863f05abadb10550b26eb659a2b1eace", "patch": "@@ -63,8 +63,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target.h\"\n #include \"common/common-target.h\"\n #include \"langhooks.h\"\n-#include \"cfglayout.h\"\n-#include \"cfgloop.h\"\n+#include \"cfgloop.h\" /* for init_set_costs */\n #include \"hosthooks.h\"\n #include \"cgraph.h\"\n #include \"opts.h\""}, {"sha": "9b54a69b7ca31b005d1393ff5f7f6b4f1d40be9b", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=6f4185d7863f05abadb10550b26eb659a2b1eace", "patch": "@@ -40,7 +40,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic-core.h\"\n #include \"except.h\"\n #include \"cfgloop.h\"\n-#include \"cfglayout.h\"\n+#include \"cfglayout.h\" /* for can_copy_bbs_p and copy_bbs */\n #include \"tree-ssa-propagate.h\"\n #include \"value-prof.h\"\n #include \"pointer-set.h\""}, {"sha": "a7e10a297dbb3046e749ad7abf138d786d8027e3", "filename": "gcc/tree-cfgcleanup.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2Ftree-cfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2Ftree-cfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfgcleanup.c?ref=6f4185d7863f05abadb10550b26eb659a2b1eace", "patch": "@@ -37,7 +37,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-pass.h\"\n #include \"except.h\"\n #include \"cfgloop.h\"\n-#include \"cfglayout.h\"\n #include \"hashtab.h\"\n #include \"tree-ssa-propagate.h\"\n #include \"tree-scalar-evolution.h\""}, {"sha": "2c0bbafb761ddc354540439d3c288ca072d75a46", "filename": "gcc/tree-profile.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2Ftree-profile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2Ftree-profile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-profile.c?ref=6f4185d7863f05abadb10550b26eb659a2b1eace", "patch": "@@ -31,7 +31,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"flags.h\"\n-#include \"regs.h\"\n #include \"function.h\"\n #include \"basic-block.h\"\n #include \"diagnostic-core.h\""}, {"sha": "25431c5238fbf07e00593ff151fdff488eaa245c", "filename": "gcc/tree-ssa-loop-manip.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2Ftree-ssa-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2Ftree-ssa-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-manip.c?ref=6f4185d7863f05abadb10550b26eb659a2b1eace", "patch": "@@ -31,7 +31,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"timevar.h\"\n #include \"cfgloop.h\"\n #include \"tree-pass.h\"\n-#include \"cfglayout.h\"\n #include \"tree-scalar-evolution.h\"\n #include \"params.h\"\n #include \"tree-inline.h\""}, {"sha": "810c17cf347a2b674b182a7d0497a762df374d01", "filename": "gcc/tree-vect-loop-manip.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2Ftree-vect-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2Ftree-vect-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop-manip.c?ref=6f4185d7863f05abadb10550b26eb659a2b1eace", "patch": "@@ -32,7 +32,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-flow.h\"\n #include \"tree-dump.h\"\n #include \"cfgloop.h\"\n-#include \"cfglayout.h\"\n+#include \"cfglayout.h\" /* for can_copy_bbs_p and copy_bbs */\n #include \"diagnostic-core.h\"\n #include \"tree-scalar-evolution.h\"\n #include \"tree-vectorizer.h\""}, {"sha": "ea48b4ba514f3c3a58ceabf4ca27d7a384d6ff98", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=6f4185d7863f05abadb10550b26eb659a2b1eace", "patch": "@@ -32,7 +32,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-flow.h\"\n #include \"tree-dump.h\"\n #include \"cfgloop.h\"\n-#include \"cfglayout.h\"\n #include \"expr.h\"\n #include \"recog.h\"\n #include \"optabs.h\""}, {"sha": "0692d0b7007ece3185e1cf4589cf2bc9825b68e7", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=6f4185d7863f05abadb10550b26eb659a2b1eace", "patch": "@@ -33,7 +33,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-flow.h\"\n #include \"tree-dump.h\"\n #include \"cfgloop.h\"\n-#include \"cfglayout.h\"\n #include \"expr.h\"\n #include \"recog.h\"\n #include \"optabs.h\""}, {"sha": "0aa42577c09777dfef22d0a35cce769a9d8b6910", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=6f4185d7863f05abadb10550b26eb659a2b1eace", "patch": "@@ -33,7 +33,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-flow.h\"\n #include \"tree-dump.h\"\n #include \"cfgloop.h\"\n-#include \"cfglayout.h\"\n #include \"expr.h\"\n #include \"recog.h\"\n #include \"optabs.h\""}, {"sha": "2522e02259d4d8d33bf025a60f16e68c1f1c724a", "filename": "gcc/tree-vectorizer.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2Ftree-vectorizer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2Ftree-vectorizer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.c?ref=6f4185d7863f05abadb10550b26eb659a2b1eace", "patch": "@@ -65,7 +65,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-flow.h\"\n #include \"tree-dump.h\"\n #include \"cfgloop.h\"\n-#include \"cfglayout.h\"\n #include \"tree-vectorizer.h\"\n #include \"tree-pass.h\"\n #include \"timevar.h\""}, {"sha": "6679b79369bfca011afda63ac83ee9e8f06cffa6", "filename": "gcc/varasm.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4185d7863f05abadb10550b26eb659a2b1eace/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=6f4185d7863f05abadb10550b26eb659a2b1eace", "patch": "@@ -50,9 +50,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"targhooks.h\"\n #include \"tree-mudflap.h\"\n #include \"cgraph.h\"\n-#include \"cfglayout.h\"\n-#include \"basic-block.h\"\n-#include \"tree-iterator.h\"\n #include \"pointer-set.h\"\n \n #ifdef XCOFF_DEBUGGING_INFO"}]}