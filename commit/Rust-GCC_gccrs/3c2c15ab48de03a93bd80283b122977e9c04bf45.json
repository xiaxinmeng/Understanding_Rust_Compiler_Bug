{"sha": "3c2c15ab48de03a93bd80283b122977e9c04bf45", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MyYzE1YWI0OGRlMDNhOTNiZDgwMjgzYjEyMjk3N2U5YzA0YmY0NQ==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2007-10-15T13:54:57Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-10-15T13:54:57Z"}, "message": "exp_ch9.adb (Actual_Index_Expression): When the expansion occurs inside a generic body...\n\n2007-10-15  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch9.adb (Actual_Index_Expression): When the expansion occurs\n\tinside a generic body, retrieve the full view of the entry family\n\tdiscrete subtype if available.\n\nFrom-SVN: r129324", "tree": {"sha": "8ff0d7f1ea0c299463f08e93f145f3a9def8887a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ff0d7f1ea0c299463f08e93f145f3a9def8887a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c2c15ab48de03a93bd80283b122977e9c04bf45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c2c15ab48de03a93bd80283b122977e9c04bf45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c2c15ab48de03a93bd80283b122977e9c04bf45", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c2c15ab48de03a93bd80283b122977e9c04bf45/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ae7adb1b554f9a17421c74f45a727e90ef87682e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae7adb1b554f9a17421c74f45a727e90ef87682e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae7adb1b554f9a17421c74f45a727e90ef87682e"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "87fbc1282a0e357752da53a1673166774aa7c186", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c2c15ab48de03a93bd80283b122977e9c04bf45/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c2c15ab48de03a93bd80283b122977e9c04bf45/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=3c2c15ab48de03a93bd80283b122977e9c04bf45", "patch": "@@ -511,6 +511,53 @@ package body Exp_Ch9 is\n          elsif Ekind (Prev) = E_Entry_Family then\n             S :=\n               Etype (Discrete_Subtype_Definition (Declaration_Node (Prev)));\n+\n+            --  The need for the following full view retrieval stems from\n+            --  this complex case of nested generics and tasking:\n+\n+            --     generic\n+            --        type Formal_Index is range <>;\n+            --        ...\n+            --     package Outer is\n+            --        type Index is private;\n+            --        generic\n+            --           ...\n+            --        package Inner is\n+            --           procedure P;\n+            --        end Inner;\n+            --     private\n+            --        type Index is new Formal_Index range 1 .. 10;\n+            --     end Outer;\n+\n+            --     package body Outer is\n+            --        task type T is\n+            --           entry Fam (Index);  --  (2)\n+            --           entry E;\n+            --        end T;\n+            --        package body Inner is  --  (3)\n+            --           procedure P is\n+            --           begin\n+            --              T.E;             --  (1)\n+            --           end P;\n+            --       end Inner;\n+            --       ...\n+\n+            --  We are currently building the index expression for the entry\n+            --  call \"T.E\" (1). Part of the expansion must mention the range\n+            --  of the discrete type \"Index\" (2) of entry family \"Fam\".\n+            --  However only the private view of type \"Index\" is available to\n+            --  the inner generic (3) because there was no prior mention of\n+            --  the type inside \"Inner\". This visibility requirement is\n+            --  implicit and cannot be detected during the construction of\n+            --  the generic trees and needs special handling.\n+\n+            if In_Instance_Body\n+              and then Is_Private_Type (S)\n+              and then Present (Full_View (S))\n+            then\n+               S := Full_View (S);\n+            end if;\n+\n             Lo := Type_Low_Bound  (S);\n             Hi := Type_High_Bound (S);\n "}]}