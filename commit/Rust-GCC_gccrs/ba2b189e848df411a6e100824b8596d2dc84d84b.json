{"sha": "ba2b189e848df411a6e100824b8596d2dc84d84b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmEyYjE4OWU4NDhkZjQxMWE2ZTEwMDgyNGI4NTk2ZDJkYzg0ZDg0Yg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-10-23T00:51:14Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-10-23T00:51:14Z"}, "message": "call.c (add_template_conv_candidate): Pass DEDUCE_CALL.\n\n\t* call.c (add_template_conv_candidate): Pass DEDUCE_CALL.\n\t(add_template_candidate_real): Handle it.\n\t(fn_type_unification): Handle it.\n\nFrom-SVN: r229210", "tree": {"sha": "c9a4ea95262666890d67b0f92815b36bb9255da5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9a4ea95262666890d67b0f92815b36bb9255da5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba2b189e848df411a6e100824b8596d2dc84d84b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba2b189e848df411a6e100824b8596d2dc84d84b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba2b189e848df411a6e100824b8596d2dc84d84b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba2b189e848df411a6e100824b8596d2dc84d84b/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d4db50606926a56219b6952cd84d4f0880d12799", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4db50606926a56219b6952cd84d4f0880d12799", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4db50606926a56219b6952cd84d4f0880d12799"}], "stats": {"total": 43, "additions": 40, "deletions": 3}, "files": [{"sha": "e2fd1614744b1d3c0ca1e5322fcc0964cb9212f4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba2b189e848df411a6e100824b8596d2dc84d84b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba2b189e848df411a6e100824b8596d2dc84d84b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ba2b189e848df411a6e100824b8596d2dc84d84b", "patch": "@@ -1,5 +1,9 @@\n 2015-10-22  Jason Merrill  <jason@redhat.com>\n \n+\t* call.c (add_template_conv_candidate): Pass DEDUCE_CALL.\n+\t(add_template_candidate_real): Handle it.\n+\t(fn_type_unification): Handle it.\n+\n \t* call.c (add_conv_candidate): Remove first_arg parm.\n \t(add_template_conv_candidate): Likewise.\n \t(add_template_candidate_real): Don't pass it."}, {"sha": "5b57dc97b54b945fc33dc3ac47936d74279ddb27", "filename": "gcc/cp/call.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba2b189e848df411a6e100824b8596d2dc84d84b/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba2b189e848df411a6e100824b8596d2dc84d84b/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=ba2b189e848df411a6e100824b8596d2dc84d84b", "patch": "@@ -3027,6 +3027,9 @@ add_template_candidate_real (struct z_candidate **candidates, tree tmpl,\n     {\n       if (first_arg_without_in_chrg != NULL_TREE)\n \tfirst_arg_without_in_chrg = NULL_TREE;\n+      else if (return_type && strict == DEDUCE_CALL)\n+\t/* We're deducing for a call to the result of a template conversion\n+\t   function, so the args don't contain 'this'; leave them alone.  */;\n       else\n \t++skip_without_in_chrg;\n     }\n@@ -3167,6 +3170,11 @@ add_template_candidate (struct z_candidate **candidates, tree tmpl, tree ctype,\n \t\t\t\t flags, NULL_TREE, strict, complain);\n }\n \n+/* Create an overload candidate for the conversion function template TMPL,\n+   returning RETURN_TYPE, which will be invoked for expression OBJ to produce a\n+   pointer-to-function which will in turn be called with the argument list\n+   ARGLIST, and add it to CANDIDATES.  This does not change ARGLIST.  FLAGS is\n+   passed on to implicit_conversion.  */\n \n static struct z_candidate *\n add_template_conv_candidate (struct z_candidate **candidates, tree tmpl,\n@@ -3178,7 +3186,7 @@ add_template_conv_candidate (struct z_candidate **candidates, tree tmpl,\n   return\n     add_template_candidate_real (candidates, tmpl, NULL_TREE, NULL_TREE,\n \t\t\t\t NULL_TREE, arglist, return_type, access_path,\n-\t\t\t\t conversion_path, 0, obj, DEDUCE_CONV,\n+\t\t\t\t conversion_path, 0, obj, DEDUCE_CALL,\n \t\t\t\t complain);\n }\n "}, {"sha": "ffe02da00db4b5fb4bcc2b73062a03311c7f01cf", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba2b189e848df411a6e100824b8596d2dc84d84b/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba2b189e848df411a6e100824b8596d2dc84d84b/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=ba2b189e848df411a6e100824b8596d2dc84d84b", "patch": "@@ -17235,7 +17235,9 @@ pack_deducible_p (tree parm, tree fn)\n \n    DEDUCE_CALL:\n      We are deducing arguments for a function call, as in\n-     [temp.deduct.call].\n+     [temp.deduct.call].  If RETURN_TYPE is non-null, we are\n+     deducing arguments for a call to the result of a conversion\n+     function template, as in [over.call.object].\n \n    DEDUCE_CONV:\n      We are deducing arguments for a conversion function, as in\n@@ -17402,7 +17404,15 @@ fn_type_unification (tree fn,\n   /* Never do unification on the 'this' parameter.  */\n   parms = skip_artificial_parms_for (fn, TYPE_ARG_TYPES (fntype));\n \n-  if (return_type)\n+  if (return_type && strict == DEDUCE_CALL)\n+    {\n+      /* We're deducing for a call to the result of a template conversion\n+         function.  The parms we really want are in return_type.  */\n+      if (POINTER_TYPE_P (return_type))\n+\treturn_type = TREE_TYPE (return_type);\n+      parms = TYPE_ARG_TYPES (return_type);\n+    }\n+  else if (return_type)\n     {\n       tree *new_args;\n "}, {"sha": "7f866daf4eaa139458ecefebf52959d359bcc1e4", "filename": "gcc/testsuite/g++.dg/cpp0x/conv-tmpl1.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba2b189e848df411a6e100824b8596d2dc84d84b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconv-tmpl1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba2b189e848df411a6e100824b8596d2dc84d84b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconv-tmpl1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconv-tmpl1.C?ref=ba2b189e848df411a6e100824b8596d2dc84d84b", "patch": "@@ -0,0 +1,15 @@\n+// { dg-do compile { target c++11 } }\n+\n+template <class T>\n+using Fn = void (*)(T);\n+\n+struct A\n+{\n+  template <class T>\n+  operator Fn<T>();\n+};\n+\n+int main()\n+{\n+  A()(42);\n+}"}]}