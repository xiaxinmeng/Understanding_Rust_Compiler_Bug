{"sha": "c3bea07622b9a0ffc7a6724c06a04c9801642dfd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNiZWEwNzYyMmI5YTBmZmM3YTY3MjRjMDZhMDRjOTgwMTY0MmRmZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-10-14T12:59:15Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-10-14T12:59:15Z"}, "message": "re PR tree-optimization/67915 (ICE on valid code at -O2 and -O3 on x86_64-linux-gnu)\n\n2015-10-14  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/67915\n\t* match.pd: Handle comparisons of addresses of STRING_CSTs.\n\t* gimplify.c (gimplify_cond_expr): Fold the GIMPLE conds we build.\n\t* tree-cfgcleanup.c (cleanup_control_expr_graph): Remove GENERIC\n\tstmt folding in favor of GIMPLE one.\n\n\t* gcc.dg/torture/pr67915.c: New testcase.\n\nFrom-SVN: r228810", "tree": {"sha": "1c951111002e36e36791d6b8c618654105a3bdc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c951111002e36e36791d6b8c618654105a3bdc9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3bea07622b9a0ffc7a6724c06a04c9801642dfd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3bea07622b9a0ffc7a6724c06a04c9801642dfd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3bea07622b9a0ffc7a6724c06a04c9801642dfd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3bea07622b9a0ffc7a6724c06a04c9801642dfd/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0155ad4011c58e3608d88e76d1fa0f628ccedcdb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0155ad4011c58e3608d88e76d1fa0f628ccedcdb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0155ad4011c58e3608d88e76d1fa0f628ccedcdb"}], "stats": {"total": 78, "additions": 62, "deletions": 16}, "files": [{"sha": "b257f3908d7bf2584f90a3025de6475c8c8608f6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3bea07622b9a0ffc7a6724c06a04c9801642dfd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3bea07622b9a0ffc7a6724c06a04c9801642dfd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c3bea07622b9a0ffc7a6724c06a04c9801642dfd", "patch": "@@ -1,3 +1,11 @@\n+2015-10-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/67915\n+\t* match.pd: Handle comparisons of addresses of STRING_CSTs.\n+\t* gimplify.c (gimplify_cond_expr): Fold the GIMPLE conds we build.\n+\t* tree-cfgcleanup.c (cleanup_control_expr_graph): Remove GENERIC\n+\tstmt folding in favor of GIMPLE one.\n+\n 2015-10-14  Marek Polacek  <polacek@redhat.com>\n \n \tPR tree-optimization/67815"}, {"sha": "071645fc0e33e35aa356598de269056932df8fa8", "filename": "gcc/gimplify.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3bea07622b9a0ffc7a6724c06a04c9801642dfd/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3bea07622b9a0ffc7a6724c06a04c9801642dfd/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=c3bea07622b9a0ffc7a6724c06a04c9801642dfd", "patch": "@@ -3152,11 +3152,12 @@ gimplify_cond_expr (tree *expr_p, gimple_seq *pre_p, fallback_t fallback)\n \n   gimple_cond_get_ops_from_tree (COND_EXPR_COND (expr), &pred_code, &arm1,\n \t\t\t\t &arm2);\n-\n   cond_stmt = gimple_build_cond (pred_code, arm1, arm2, label_true,\n-                                   label_false);\n-\n+\t\t\t\t label_false);\n   gimplify_seq_add_stmt (&seq, cond_stmt);\n+  gimple_stmt_iterator gsi = gsi_last (seq);\n+  maybe_fold_stmt (&gsi);\n+\n   label_cont = NULL_TREE;\n   if (!have_then_clause_p)\n     {"}, {"sha": "655c9ffcf260f911681f521d88c6f40cd433d965", "filename": "gcc/match.pd", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3bea07622b9a0ffc7a6724c06a04c9801642dfd/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3bea07622b9a0ffc7a6724c06a04c9801642dfd/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=c3bea07622b9a0ffc7a6724c06a04c9801642dfd", "patch": "@@ -1998,18 +1998,22 @@ along with GCC; see the file COPYING3.  If not see\n \t   && decl_in_symtab_p (base1))\n          equal = symtab_node::get_create (base0)\n \t           ->equal_address_to (symtab_node::get_create (base1));\n-       else if ((DECL_P (base0) || TREE_CODE (base0) == SSA_NAME)\n-\t\t&& (DECL_P (base1) || TREE_CODE (base1) == SSA_NAME))\n+       else if ((DECL_P (base0)\n+\t\t || TREE_CODE (base0) == SSA_NAME\n+\t\t || TREE_CODE (base0) == STRING_CST)\n+\t\t&& (DECL_P (base1)\n+\t\t    || TREE_CODE (base1) == SSA_NAME\n+\t\t    || TREE_CODE (base1) == STRING_CST))\n          equal = (base0 == base1);\n      }\n      (if (equal == 1\n \t  && (cmp == EQ_EXPR || cmp == NE_EXPR\n \t      /* If the offsets are equal we can ignore overflow.  */\n \t      || off0 == off1\n \t      || POINTER_TYPE_OVERFLOW_UNDEFINED\n-\t      /* Or if we compare using pointers to decls.  */\n+\t      /* Or if we compare using pointers to decls or strings.  */\n \t      || (POINTER_TYPE_P (TREE_TYPE (@2))\n-\t\t  && DECL_P (base0))))\n+\t\t  && (DECL_P (base0) || TREE_CODE (base0) == STRING_CST))))\n       (switch\n        (if (cmp == EQ_EXPR)\n \t{ constant_boolean_node (off0 == off1, type); })"}, {"sha": "e6a457b4f7f6bd5ead7f1ef79bd2b4f425cb1743", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3bea07622b9a0ffc7a6724c06a04c9801642dfd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3bea07622b9a0ffc7a6724c06a04c9801642dfd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c3bea07622b9a0ffc7a6724c06a04c9801642dfd", "patch": "@@ -1,3 +1,8 @@\n+2015-10-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/67915\n+\t* gcc.dg/torture/pr67915.c: New testcase.\n+\n 2015-10-14  Marek Polacek  <polacek@redhat.com>\n \n \tPR tree-optimization/67815"}, {"sha": "77a2edf17a0d2dbd4f1ece17fbbf46ac97be5ff1", "filename": "gcc/testsuite/gcc.dg/torture/pr67915.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3bea07622b9a0ffc7a6724c06a04c9801642dfd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr67915.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3bea07622b9a0ffc7a6724c06a04c9801642dfd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr67915.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr67915.c?ref=c3bea07622b9a0ffc7a6724c06a04c9801642dfd", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+\n+int a, b, c, d, e, f, g;\n+\n+int\n+fn1 (int p1)\n+{\n+  return p1;\n+}\n+\n+void\n+fn2 ()\n+{\n+lbl:\n+  g = b;\n+  if (fn1 (c && e))\n+    {\n+      f = a ? 0 : 1 << 1;\n+      short h = b;\n+      d = h < 0 || f ? 0 : 1;\n+    }\n+  goto lbl;\n+}"}, {"sha": "eeedd8a423b5373919fa25b06917a2941bfa94c6", "filename": "gcc/tree-cfgcleanup.c", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3bea07622b9a0ffc7a6724c06a04c9801642dfd/gcc%2Ftree-cfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3bea07622b9a0ffc7a6724c06a04c9801642dfd/gcc%2Ftree-cfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfgcleanup.c?ref=c3bea07622b9a0ffc7a6724c06a04c9801642dfd", "patch": "@@ -56,6 +56,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cfgloop.h\"\n #include \"tree-ssa-propagate.h\"\n #include \"tree-scalar-evolution.h\"\n+#include \"gimple-match.h\"\n+#include \"gimple-fold.h\"\n+\n \n /* The set of blocks in that at least one of the following changes happened:\n    -- the statement at the end of the block was changed\n@@ -96,32 +99,34 @@ cleanup_control_expr_graph (basic_block bb, gimple_stmt_iterator gsi)\n   edge taken_edge;\n   bool retval = false;\n   gimple *stmt = gsi_stmt (gsi);\n-  tree val;\n \n   if (!single_succ_p (bb))\n     {\n       edge e;\n       edge_iterator ei;\n       bool warned;\n-      location_t loc;\n+      tree val = NULL_TREE;\n \n       fold_defer_overflow_warnings ();\n-      loc = gimple_location (stmt);\n       switch (gimple_code (stmt))\n \t{\n \tcase GIMPLE_COND:\n-\t  val = fold_binary_loc (loc, gimple_cond_code (stmt),\n-\t\t\t\t boolean_type_node,\n-\t\t\t         gimple_cond_lhs (stmt),\n-\t\t\t\t gimple_cond_rhs (stmt));\n-\t  break;\n+\t  {\n+\t    code_helper rcode;\n+\t    tree ops[3] = {};\n+\t    if (gimple_simplify (stmt, &rcode, ops, NULL, no_follow_ssa_edges,\n+\t\t\t\t no_follow_ssa_edges)\n+\t\t&& rcode == INTEGER_CST)\n+\t      val = ops[0];\n+\t    break;\n+\t  }\n \n \tcase GIMPLE_SWITCH:\n \t  val = gimple_switch_index (as_a <gswitch *> (stmt));\n \t  break;\n \n \tdefault:\n-\t  val = NULL_TREE;\n+\t  ;\n \t}\n       taken_edge = find_taken_edge (bb, val);\n       if (!taken_edge)"}]}