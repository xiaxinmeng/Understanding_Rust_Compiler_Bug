{"sha": "0f345950ec4144742c56a93aea07ada593e03788", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGYzNDU5NTBlYzQxNDQ3NDJjNTZhOTNhZWEwN2FkYTU5M2UwMzc4OA==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2014-08-01T10:29:51Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-01T10:29:51Z"}, "message": "gnat1drv.adb (Adjust_Global_Switches): Reverse meaning of -gnatd.z.\n\n2014-08-01  Javier Miranda  <miranda@adacore.com>\n\n\t* gnat1drv.adb (Adjust_Global_Switches): Reverse meaning of\n\t-gnatd.z.\n\t* debug.adb: Updating documentation.\n\t* exp_ch6.adb (Expand_Call): Remove assertion.\n\nFrom-SVN: r213452", "tree": {"sha": "ee2abb0a430b9515856a52a22f84ff7947cdb508", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee2abb0a430b9515856a52a22f84ff7947cdb508"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f345950ec4144742c56a93aea07ada593e03788", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f345950ec4144742c56a93aea07ada593e03788", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f345950ec4144742c56a93aea07ada593e03788", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f345950ec4144742c56a93aea07ada593e03788/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b330e3c8662dc2a2214d96f15c66ae7b42dfdecd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b330e3c8662dc2a2214d96f15c66ae7b42dfdecd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b330e3c8662dc2a2214d96f15c66ae7b42dfdecd"}], "stats": {"total": 43, "additions": 25, "deletions": 18}, "files": [{"sha": "27fe80fe8d8977e43d17f6a642773b80328cb52a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f345950ec4144742c56a93aea07ada593e03788/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f345950ec4144742c56a93aea07ada593e03788/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0f345950ec4144742c56a93aea07ada593e03788", "patch": "@@ -1,3 +1,10 @@\n+2014-08-01  Javier Miranda  <miranda@adacore.com>\n+\n+\t* gnat1drv.adb (Adjust_Global_Switches): Reverse meaning of\n+\t-gnatd.z.\n+\t* debug.adb: Updating documentation.\n+\t* exp_ch6.adb (Expand_Call): Remove assertion.\n+\n 2014-08-01  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_aggr.adb, sem_ch3.adb, sem_ch5.adb, sem_util.adb,"}, {"sha": "3c36e5d8033dabf2fe7edc21006fd6fbfb8bb7f0", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f345950ec4144742c56a93aea07ada593e03788/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f345950ec4144742c56a93aea07ada593e03788/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=0f345950ec4144742c56a93aea07ada593e03788", "patch": "@@ -116,7 +116,7 @@ package body Debug is\n    --  d.w  Do not check for infinite loops\n    --  d.x  No exception handlers\n    --  d.y\n-   --  d.z  Enable new support for backend inlining\n+   --  d.z  Disable support for back end inlining\n \n    --  d.A  Read/write Aspect_Specifications hash table to tree\n    --  d.B\n@@ -582,16 +582,14 @@ package body Debug is\n    --       fully compiled and analyzed, they just get eliminated from the\n    --       code generation step.\n \n-   --  d.z  Enable back end inlining on targets that have the GCC backend (ie.\n-   --       all targets except AAMP, .NET and JVM). This switch has no effect\n-   --       under GNATprove to avoid confusing the formal verification output,\n-   --       and it has no effect if the sources are compiled with frontend\n-   --       inlining (ie. -gnatN). This switch is used to evaluate the impact\n-   --       of back end inlining since the GCC backend has now more support for\n-   --       inlining than before, and hence most of the inlinings that are\n-   --       currently handled by the frontend can be done by the backend with\n-   --       the extra benefit of supporting cases which are currently rejected\n-   --       by GNAT.\n+   --  d.z  Disable back end inlining. Back end inlining is enabled by default\n+   --       on targets that have the GCC backend (ie. all targets except AAMP,\n+   --       .NET and JVM). Back end inlining has no effect under GNATprove to\n+   --       avoid confusing the formal verification output, and it is disabled\n+   --       if the sources are compiled with frontend inlining (ie. -gnatN) to\n+   --       minimize the output differences to customers still using this\n+   --       deprecated switch. The flag .z facilitates disabling the back end\n+   --       inlining in case of unexpected problems.\n \n    --  d.A  There seems to be a problem with ASIS if we activate the circuit\n    --       for reading and writing the aspect specification hash table, so"}, {"sha": "44488fbafceee68669e900b82e5d5a175547122f", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f345950ec4144742c56a93aea07ada593e03788/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f345950ec4144742c56a93aea07ada593e03788/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=0f345950ec4144742c56a93aea07ada593e03788", "patch": "@@ -3929,12 +3929,11 @@ package body Exp_Ch6 is\n             Add_Inlined_Body (Subp);\n             Register_Backend_Call (Call_Node);\n \n-         --  Frontend expands supported functions returning unconstrained types\n+         --  Frontend expansion of supported functions returning unconstrained\n+         --  types and simple renamings inlined by the frontend (see Freeze.\n+         --  Build_Renamed_Entity).\n \n          else\n-            pragma Assert (Ekind (Subp) = E_Function\n-              and then Returns_Unconstrained_Type (Subp));\n-\n             declare\n                Spec : constant Node_Id := Unit_Declaration_Node (Subp);\n "}, {"sha": "4650548b5f0fe1ea355059f1f0f0409fe06a6fb2", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f345950ec4144742c56a93aea07ada593e03788/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f345950ec4144742c56a93aea07ada593e03788/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=0f345950ec4144742c56a93aea07ada593e03788", "patch": "@@ -602,13 +602,16 @@ procedure Gnat1drv is\n \n         and then not GNATprove_Mode\n \n-        --  No back end inlining if front end inlining explicitly enabled?\n+        --  No back end inlining if front end inlining explicitly enabled.\n+        --  Done to minimize the output differences to customers still using\n+        --  this deprecated switch; in addition, this behavior reduces the\n+        --  output differences in old tests.\n \n         and then not Front_End_Inlining\n \n-        --  For now, we only enable back end inlining if debug flag .z is set\n+        --  Back end inlining is disabled if debug flag .z is set\n \n-        and then Debug_Flag_Dot_Z;\n+        and then not Debug_Flag_Dot_Z;\n \n       --  Output warning if -gnateE specified and cannot be supported\n "}]}