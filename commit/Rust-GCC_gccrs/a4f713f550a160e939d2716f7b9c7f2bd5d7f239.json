{"sha": "a4f713f550a160e939d2716f7b9c7f2bd5d7f239", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRmNzEzZjU1MGExNjBlOTM5ZDI3MTZmN2I5YzdmMmJkNWQ3ZjIzOQ==", "commit": {"author": {"name": "David S. Miller", "email": "davem@davemloft.net", "date": "2011-10-04T06:34:22Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2011-10-04T06:34:22Z"}, "message": "More consistent access to sparc %ger register.\n\n\t* config/sparc/sparc.md (fpack16_vis, fpackfix_vis, fpack32_vis): Make\n\tGSR_REG an input operand to UNSPEC instead of a parallel USE.\n\t(faligndata<V64I:mode>_vis): Likewise and use DI mode.\n\t(alignaddrsi_vis, alignaddrdi_vis, alignaddrlsi_vis, alignaddrldi_vis):\n\tReference GSR_REG in DI mode, simplify convoluted expressions by using\n\tzero_extract.\n\t(bshuffle<V64I:mode>_vis): Reference GSR_REG in DI mode.\n\nFrom-SVN: r179489", "tree": {"sha": "3e1a519b57d86464538173154093aa43adef6d3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e1a519b57d86464538173154093aa43adef6d3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4f713f550a160e939d2716f7b9c7f2bd5d7f239", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4f713f550a160e939d2716f7b9c7f2bd5d7f239", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4f713f550a160e939d2716f7b9c7f2bd5d7f239", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4f713f550a160e939d2716f7b9c7f2bd5d7f239/comments", "author": {"login": "davem330", "id": 1053866, "node_id": "MDQ6VXNlcjEwNTM4NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1053866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davem330", "html_url": "https://github.com/davem330", "followers_url": "https://api.github.com/users/davem330/followers", "following_url": "https://api.github.com/users/davem330/following{/other_user}", "gists_url": "https://api.github.com/users/davem330/gists{/gist_id}", "starred_url": "https://api.github.com/users/davem330/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davem330/subscriptions", "organizations_url": "https://api.github.com/users/davem330/orgs", "repos_url": "https://api.github.com/users/davem330/repos", "events_url": "https://api.github.com/users/davem330/events{/privacy}", "received_events_url": "https://api.github.com/users/davem330/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "57f934115e8ff1b0eee552e6ce8b0ecc79b68c47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57f934115e8ff1b0eee552e6ce8b0ecc79b68c47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57f934115e8ff1b0eee552e6ce8b0ecc79b68c47"}], "stats": {"total": 65, "additions": 33, "deletions": 32}, "files": [{"sha": "bdbe2a322c7ee75f1053e5f8b79098cfbfdab4de", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4f713f550a160e939d2716f7b9c7f2bd5d7f239/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4f713f550a160e939d2716f7b9c7f2bd5d7f239/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a4f713f550a160e939d2716f7b9c7f2bd5d7f239", "patch": "@@ -1,3 +1,13 @@\n+2011-10-03  David S. Miller  <davem@davemloft.net>\n+\n+\t* config/sparc/sparc.md (fpack16_vis, fpackfix_vis, fpack32_vis): Make\n+\tGSR_REG an input operand to UNSPEC instead of a parallel USE.\n+\t(faligndata<V64I:mode>_vis): Likewise and use DI mode.\n+\t(alignaddrsi_vis, alignaddrdi_vis, alignaddrlsi_vis, alignaddrldi_vis):\n+\tReference GSR_REG in DI mode, simplify convoluted expressions by using\n+\tzero_extract.\n+\t(bshuffle<V64I:mode>_vis): Reference GSR_REG in DI mode.\n+\n 2011-10-03  Maxim Kuvyrkov  <maxim@codesourcery.com>\n \n \t* tree-eh.c (remove_unreachable_handlers): Obvious cleanup."}, {"sha": "92ec3a63b2ce9dd7c0334540c10036c9ca19008b", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 23, "deletions": 32, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4f713f550a160e939d2716f7b9c7f2bd5d7f239/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4f713f550a160e939d2716f7b9c7f2bd5d7f239/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=a4f713f550a160e939d2716f7b9c7f2bd5d7f239", "patch": "@@ -7867,19 +7867,19 @@\n \n (define_insn \"fpack16_vis\"\n   [(set (match_operand:V4QI 0 \"register_operand\" \"=f\")\n-        (unspec:V4QI [(match_operand:V4HI 1 \"register_operand\" \"e\")]\n-\t\t      UNSPEC_FPACK16))\n-   (use (reg:DI GSR_REG))]\n+        (unspec:V4QI [(match_operand:V4HI 1 \"register_operand\" \"e\")\n+                      (reg:DI GSR_REG)]\n+\t\t      UNSPEC_FPACK16))]\n   \"TARGET_VIS\"\n   \"fpack16\\t%1, %0\"\n   [(set_attr \"type\" \"fga\")\n    (set_attr \"fptype\" \"double\")])\n \n (define_insn \"fpackfix_vis\"\n   [(set (match_operand:V2HI 0 \"register_operand\" \"=f\")\n-        (unspec:V2HI [(match_operand:V2SI 1 \"register_operand\" \"e\")]\n-\t\t      UNSPEC_FPACKFIX))\n-   (use (reg:DI GSR_REG))]\n+        (unspec:V2HI [(match_operand:V2SI 1 \"register_operand\" \"e\")\n+                      (reg:DI GSR_REG)]\n+\t\t      UNSPEC_FPACKFIX))]\n   \"TARGET_VIS\"\n   \"fpackfix\\t%1, %0\"\n   [(set_attr \"type\" \"fga\")\n@@ -7888,9 +7888,9 @@\n (define_insn \"fpack32_vis\"\n   [(set (match_operand:V8QI 0 \"register_operand\" \"=e\")\n         (unspec:V8QI [(match_operand:V2SI 1 \"register_operand\" \"e\")\n-        \t      (match_operand:V8QI 2 \"register_operand\" \"e\")]\n-                     UNSPEC_FPACK32))\n-   (use (reg:DI GSR_REG))]\n+        \t      (match_operand:V8QI 2 \"register_operand\" \"e\")\n+                      (reg:DI GSR_REG)]\n+                     UNSPEC_FPACK32))]\n   \"TARGET_VIS\"\n   \"fpack32\\t%1, %2, %0\"\n   [(set_attr \"type\" \"fga\")\n@@ -8053,9 +8053,9 @@\n (define_insn \"faligndata<V64I:mode>_vis\"\n   [(set (match_operand:V64I 0 \"register_operand\" \"=e\")\n         (unspec:V64I [(match_operand:V64I 1 \"register_operand\" \"e\")\n-                      (match_operand:V64I 2 \"register_operand\" \"e\")]\n-         UNSPEC_ALIGNDATA))\n-   (use (reg:SI GSR_REG))]\n+                      (match_operand:V64I 2 \"register_operand\" \"e\")\n+                      (reg:DI GSR_REG)]\n+         UNSPEC_ALIGNDATA))]\n   \"TARGET_VIS\"\n   \"faligndata\\t%1, %2, %0\"\n   [(set_attr \"type\" \"fga\")\n@@ -8065,46 +8065,37 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n         (plus:SI (match_operand:SI 1 \"register_or_zero_operand\" \"rJ\")\n                  (match_operand:SI 2 \"register_or_zero_operand\" \"rJ\")))\n-   (set (reg:SI GSR_REG)\n-        (ior:SI (and:SI (reg:SI GSR_REG) (const_int -8))\n-                (and:SI (plus:SI (match_dup 1) (match_dup 2))\n-                        (const_int 7))))]\n+   (set (zero_extract:DI (reg:DI GSR_REG) (const_int 3) (const_int 0))\n+        (zero_extend:DI (plus:SI (match_dup 1) (match_dup 2))))]\n   \"TARGET_VIS\"\n   \"alignaddr\\t%r1, %r2, %0\")\n \n (define_insn \"alignaddrdi_vis\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n         (plus:DI (match_operand:DI 1 \"register_or_zero_operand\" \"rJ\")\n                  (match_operand:DI 2 \"register_or_zero_operand\" \"rJ\")))\n-   (set (reg:SI GSR_REG)\n-        (ior:SI (and:SI (reg:SI GSR_REG) (const_int -8))\n-                (and:SI (truncate:SI (plus:DI (match_dup 1) (match_dup 2)))\n-                        (const_int 7))))]\n+   (set (zero_extract:DI (reg:DI GSR_REG) (const_int 3) (const_int 0))\n+        (plus:DI (match_dup 1) (match_dup 2)))]\n   \"TARGET_VIS\"\n   \"alignaddr\\t%r1, %r2, %0\")\n \n (define_insn \"alignaddrlsi_vis\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n         (plus:SI (match_operand:SI 1 \"register_or_zero_operand\" \"rJ\")\n                  (match_operand:SI 2 \"register_or_zero_operand\" \"rJ\")))\n-   (set (reg:SI GSR_REG)\n-        (ior:SI (and:SI (reg:SI GSR_REG) (const_int -8))\n-                (xor:SI (and:SI (plus:SI (match_dup 1) (match_dup 2))\n-                                (const_int 7))\n-                        (const_int 7))))]\n+   (set (zero_extract:DI (reg:DI GSR_REG) (const_int 3) (const_int 0))\n+        (xor:DI (zero_extend:DI (plus:SI (match_dup 1) (match_dup 2)))\n+                (const_int 7)))]\n   \"TARGET_VIS\"\n   \"alignaddrl\\t%r1, %r2, %0\")\n \n (define_insn \"alignaddrldi_vis\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n         (plus:DI (match_operand:DI 1 \"register_or_zero_operand\" \"rJ\")\n                  (match_operand:DI 2 \"register_or_zero_operand\" \"rJ\")))\n-   (set (reg:SI GSR_REG)\n-        (ior:SI (and:SI (reg:SI GSR_REG) (const_int -8))\n-                (xor:SI (and:SI (truncate:SI (plus:DI (match_dup 1)\n-                                                      (match_dup 2)))\n-                                (const_int 7))\n-                        (const_int 7))))]\n+   (set (zero_extract:DI (reg:DI GSR_REG) (const_int 3) (const_int 0))\n+        (xor:DI (plus:DI (match_dup 1) (match_dup 2))\n+                (const_int 7)))]\n   \"TARGET_VIS\"\n   \"alignaddrl\\t%r1, %r2, %0\")\n \n@@ -8252,7 +8243,7 @@\n   [(set (match_operand:V64I 0 \"register_operand\" \"=e\")\n         (unspec:V64I [(match_operand:V64I 1 \"register_operand\" \"e\")\n \t              (match_operand:V64I 2 \"register_operand\" \"e\")\n-\t\t      (reg:SI GSR_REG)]\n+\t\t      (reg:DI GSR_REG)]\n                      UNSPEC_BSHUFFLE))]\n   \"TARGET_VIS2\"\n   \"bshuffle\\t%1, %2, %0\""}]}