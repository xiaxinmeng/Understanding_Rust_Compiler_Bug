{"sha": "5bb08c847fa53bc7d6e4c835f4ba4fcf4ca1fdf3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJiMDhjODQ3ZmE1M2JjN2Q2ZTRjODM1ZjRiYTRmY2Y0Y2ExZmRmMw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2001-09-09T08:45:21Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2001-09-09T08:45:21Z"}, "message": "* loop.c (combine_givs): Fix computing of benefit once giv is combined.\n\nFrom-SVN: r45494", "tree": {"sha": "0a5c30ced0389a2e395fdf18fe927e3da06fdbe9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a5c30ced0389a2e395fdf18fe927e3da06fdbe9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bb08c847fa53bc7d6e4c835f4ba4fcf4ca1fdf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bb08c847fa53bc7d6e4c835f4ba4fcf4ca1fdf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bb08c847fa53bc7d6e4c835f4ba4fcf4ca1fdf3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bb08c847fa53bc7d6e4c835f4ba4fcf4ca1fdf3/comments", "author": null, "committer": null, "parents": [{"sha": "1eb356b98df2a898b6650c7641d629fcf3db0c30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1eb356b98df2a898b6650c7641d629fcf3db0c30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1eb356b98df2a898b6650c7641d629fcf3db0c30"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "dbf705c53665c39275a3af79669a3796e275fcd5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bb08c847fa53bc7d6e4c835f4ba4fcf4ca1fdf3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bb08c847fa53bc7d6e4c835f4ba4fcf4ca1fdf3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5bb08c847fa53bc7d6e4c835f4ba4fcf4ca1fdf3", "patch": "@@ -1,3 +1,7 @@\n+Sun Sep  9 10:43:17 CEST 2001  Jan Hubicka  <jh@suse.cz>\n+\n+\t* loop.c (combine_givs): Fix computing of benefit once giv is combined.\n+\n 2001-09-09  Richard Henderson  <rth@redhat.com>\n \n \t* config/alpha/alpha.c (alpha_next_sequence_number): New."}, {"sha": "ef1b7ee3ea873b2d11589125699fef8d9e620d61", "filename": "gcc/loop.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bb08c847fa53bc7d6e4c835f4ba4fcf4ca1fdf3/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bb08c847fa53bc7d6e4c835f4ba4fcf4ca1fdf3/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=5bb08c847fa53bc7d6e4c835f4ba4fcf4ca1fdf3", "patch": "@@ -6851,6 +6851,13 @@ combine_givs (regs, bl)\n \n \t      g2->new_reg = can_combine[i * giv_count + j];\n \t      g2->same = g1;\n+\t      /* For destination, we now may replace by mem expression instead\n+\t\t of register.  This changes the costs considerably, so add the\n+\t\t compensation.  */\n+\t      if (g2->giv_type == DEST_ADDR)\n+\t\tg2->benefit = (g2->benefit + reg_address_cost\n+\t\t\t       - address_cost (g2->new_reg,\n+\t\t\t       GET_MODE (g2->mem)));\n \t      g1->combined_with++;\n \t      g1->lifetime += g2->lifetime;\n "}]}