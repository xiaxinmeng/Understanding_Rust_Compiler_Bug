{"sha": "99d2293dbfa03ddc5b0308858412ddded4c832a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTlkMjI5M2RiZmEwM2RkYzViMDMwODg1ODQxMmRkZGVkNGM4MzJhOA==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2018-07-05T16:27:38Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2018-07-05T16:27:38Z"}, "message": "re PR fortran/86408 (bogus error: ABSTRACT INTERFACE must not have an assumed character length result (F2003: C418))\n\n2018-07-05  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/86408\n\t* resolve.c.c (resolve_contained_fntype): Reference to C418 is\n\tin F2008 and not F2003.\n\t(resolve_function): Ditto in error message. Also, exclude\n\tdeferred character length results from the error.\n\n2018-07-05  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/86408\n\t* gfortran.dg/deferred_character_20.f90: New test.\n\nFrom-SVN: r262445", "tree": {"sha": "6111bca9d108092f39cc4c754a3e30762f6e3eef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6111bca9d108092f39cc4c754a3e30762f6e3eef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99d2293dbfa03ddc5b0308858412ddded4c832a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99d2293dbfa03ddc5b0308858412ddded4c832a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99d2293dbfa03ddc5b0308858412ddded4c832a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99d2293dbfa03ddc5b0308858412ddded4c832a8/comments", "author": null, "committer": null, "parents": [{"sha": "d8d9b83b33dd13d81a1e107ce4d1e075a30e6f21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8d9b83b33dd13d81a1e107ce4d1e075a30e6f21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8d9b83b33dd13d81a1e107ce4d1e075a30e6f21"}], "stats": {"total": 52, "additions": 49, "deletions": 3}, "files": [{"sha": "3134580fa5ab809a8cfd65787826dc4b9922a293", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99d2293dbfa03ddc5b0308858412ddded4c832a8/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99d2293dbfa03ddc5b0308858412ddded4c832a8/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=99d2293dbfa03ddc5b0308858412ddded4c832a8", "patch": "@@ -1,3 +1,11 @@\n+2018-07-05  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/86408\n+\t* resolve.c.c (resolve_contained_fntype): Reference to C418 is\n+\tin F2008 and not F2003.\n+\t(resolve_function): Ditto in error message. Also, exclude\n+\tdeferred character length results from the error.\n+\n 2018-07-05  Fritz Reese  <fritzoreese@gmail.com>\n \n \tPR fortran/83183"}, {"sha": "9f88c26ee1a380da675b9542aa6dcc1e2cd97875", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99d2293dbfa03ddc5b0308858412ddded4c832a8/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99d2293dbfa03ddc5b0308858412ddded4c832a8/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=99d2293dbfa03ddc5b0308858412ddded4c832a8", "patch": "@@ -601,7 +601,7 @@ resolve_contained_fntype (gfc_symbol *sym, gfc_namespace *ns)\n \t}\n     }\n \n-  /* Fortran 2003 Draft Standard, page 535, C418, on type-param-value\n+  /* Fortran 2008 Draft Standard, page 535, C418, on type-param-value\n      type, lists the only ways a character length value of * can be used:\n      dummy arguments of procedures, named constants, function results and\n      in allocate statements if the allocate_object is an assumed length dummy\n@@ -3117,10 +3117,11 @@ resolve_function (gfc_expr *expr)\n      cannot be an assumed length character (F2003: C418).  */\n   if (sym && sym->attr.abstract && sym->attr.function\n       && sym->result->ts.u.cl\n-      && sym->result->ts.u.cl->length == NULL)\n+      && sym->result->ts.u.cl->length == NULL\n+      && !sym->result->ts.deferred)\n     {\n       gfc_error (\"ABSTRACT INTERFACE %qs at %L must not have an assumed \"\n-\t\t \"character length result (F2003: C418)\", sym->name,\n+\t\t \"character length result (F2008: C418)\", sym->name,\n \t\t &sym->declared_at);\n       return false;\n     }"}, {"sha": "8496a38c291285e2e2c25057704f5c6a668a15e8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99d2293dbfa03ddc5b0308858412ddded4c832a8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99d2293dbfa03ddc5b0308858412ddded4c832a8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=99d2293dbfa03ddc5b0308858412ddded4c832a8", "patch": "@@ -1,3 +1,8 @@\n+2018-07-05  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/86408\n+\t* gfortran.dg/deferred_character_20.f90: New test.\n+\n 2018-07-05  Fritz Reese  <fritzoreese@gmail.com>\n \n \tPR fortran/83183"}, {"sha": "85e2a2ca6c4cd5120dfe296e518a3a42ccd7dae1", "filename": "gcc/testsuite/gfortran.dg/deferred_character_20.f90", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99d2293dbfa03ddc5b0308858412ddded4c832a8/gcc%2Ftestsuite%2Fgfortran.dg%2Fdeferred_character_20.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99d2293dbfa03ddc5b0308858412ddded4c832a8/gcc%2Ftestsuite%2Fgfortran.dg%2Fdeferred_character_20.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdeferred_character_20.f90?ref=99d2293dbfa03ddc5b0308858412ddded4c832a8", "patch": "@@ -0,0 +1,32 @@\n+! { dg-do compile }\n+!\n+! Test the fix for PR86408.\n+!\n+! Contributed by Janus Weil  <janus@gcc.gnu.org>\n+!\n+module m\n+\n+   implicit none\n+\n+   type, abstract :: t\n+   contains\n+      procedure(ifc), deferred :: tbf\n+      procedure :: tbs\n+   end type\n+\n+   abstract interface\n+      function ifc(x) result(str)\n+         import :: t\n+         class(t) :: x\n+         character(len=:), allocatable :: str\n+      end function\n+   end interface\n+\n+contains\n+\n+   subroutine tbs(x)\n+      class(t) :: x\n+      print *, x%tbf()\n+   end subroutine\n+\n+end"}]}