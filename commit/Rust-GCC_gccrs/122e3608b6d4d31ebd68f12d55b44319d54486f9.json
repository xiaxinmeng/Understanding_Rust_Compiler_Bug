{"sha": "122e3608b6d4d31ebd68f12d55b44319d54486f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTIyZTM2MDhiNmQ0ZDMxZWJkNjhmMTJkNTViNDQzMTlkNTQ0ODZmOQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2016-11-03T16:04:22Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2016-11-03T16:04:22Z"}, "message": "combine lhs zero_extract fix (PR78186)\n\n\n\tPR rtl-optimization/78186\n\t* combine.c (change_zero_ext): Mask the RHS of a zero_extract as\n\twell, when converting to IOR.\n\nFrom-SVN: r241824", "tree": {"sha": "14a4a730fd2320211bae5b06c7ac7c09e0de26af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14a4a730fd2320211bae5b06c7ac7c09e0de26af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/122e3608b6d4d31ebd68f12d55b44319d54486f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/122e3608b6d4d31ebd68f12d55b44319d54486f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/122e3608b6d4d31ebd68f12d55b44319d54486f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/122e3608b6d4d31ebd68f12d55b44319d54486f9/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "35ea947ffabd427908f9fa0b5df56c6fe58176ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35ea947ffabd427908f9fa0b5df56c6fe58176ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35ea947ffabd427908f9fa0b5df56c6fe58176ff"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "680b54947c2ced6a328a1b1dc842e71c493ff695", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/122e3608b6d4d31ebd68f12d55b44319d54486f9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/122e3608b6d4d31ebd68f12d55b44319d54486f9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=122e3608b6d4d31ebd68f12d55b44319d54486f9", "patch": "@@ -1,3 +1,9 @@\n+2016-11-03  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR rtl-optimization/78186\n+\t* combine.c (change_zero_ext): Mask the RHS of a zero_extract as\n+\twell, when converting to IOR.\n+\n 2016-11-03  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* config/sparc/sparc.md (vec_interleave_lowv8qi): Delete."}, {"sha": "c605b1a7831f182b4c8dad756c64f0ca30e42ed9", "filename": "gcc/combine.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/122e3608b6d4d31ebd68f12d55b44319d54486f9/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/122e3608b6d4d31ebd68f12d55b44319d54486f9/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=122e3608b6d4d31ebd68f12d55b44319d54486f9", "patch": "@@ -11190,6 +11190,9 @@ change_zero_ext (rtx pat)\n       rtx x = gen_rtx_AND (mode, reg, immed_wide_int_const (mask, mode));\n       rtx y = simplify_gen_binary (ASHIFT, mode, SET_SRC (pat),\n \t\t\t\t   GEN_INT (offset));\n+      wide_int mask2 = wi::shifted_mask (offset, width, false, reg_width);\n+      y = simplify_gen_binary (AND, mode, y,\n+\t\t\t       immed_wide_int_const (mask2, mode));\n       rtx z = simplify_gen_binary (IOR, mode, x, y);\n       SUBST (SET_DEST (pat), reg);\n       SUBST (SET_SRC (pat), z);"}]}