{"sha": "dc3fce90205e2da23b404eb215e2807307cc531e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGMzZmNlOTAyMDVlMmRhMjNiNDA0ZWIyMTVlMjgwNzMwN2NjNTMxZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "1997-09-10T22:14:29Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-09-10T22:14:29Z"}, "message": "Makefile.in (LN): Add new symbol.\n\n        * Makefile.in (LN): Add new symbol.\n        (FLAGS_TO_PASS): Pass it down.\n        (stage[1-4]-start): Use $(LN), not \"ln -s\".\nBring over from gcc2.\n\nFrom-SVN: r15392", "tree": {"sha": "27d7d1bc63dc3b6a993d0906a3c433642fcdeca4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27d7d1bc63dc3b6a993d0906a3c433642fcdeca4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc3fce90205e2da23b404eb215e2807307cc531e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc3fce90205e2da23b404eb215e2807307cc531e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc3fce90205e2da23b404eb215e2807307cc531e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc3fce90205e2da23b404eb215e2807307cc531e/comments", "author": null, "committer": null, "parents": [{"sha": "04395f964f8c0a0bd8c08d5ca040f9c709a4766c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04395f964f8c0a0bd8c08d5ca040f9c709a4766c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04395f964f8c0a0bd8c08d5ca040f9c709a4766c"}], "stats": {"total": 32, "additions": 20, "deletions": 12}, "files": [{"sha": "10dbc3470c579516316e2ba26623bbb22d681877", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc3fce90205e2da23b404eb215e2807307cc531e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc3fce90205e2da23b404eb215e2807307cc531e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dc3fce90205e2da23b404eb215e2807307cc531e", "patch": "@@ -1,3 +1,9 @@\n+Wed Sep 10 16:16:07 1997  Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n+\n+\t* Makefile.in (LN): Add new symbol.  \n+\t(FLAGS_TO_PASS): Pass it down.\n+\t(stage[1-4]-start): Use $(LN), not \"ln -s\".\n+\n Wed Sep 10 14:58:40 1997  Jim Wilson  <wilson@cygnus.com>\n \n \t* emit-rtl.c (gen_lowpart_common): For a SUBREG, add in word when"}, {"sha": "c1e4e2315b260b5c22c89c566a6bce51a5cd8012", "filename": "gcc/Makefile.in", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc3fce90205e2da23b404eb215e2807307cc531e/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc3fce90205e2da23b404eb215e2807307cc531e/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=dc3fce90205e2da23b404eb215e2807307cc531e", "patch": "@@ -73,6 +73,7 @@ LEX = flex\n LEXFLAGS =\n AR = ar\n AR_FLAGS = rc\n+LN = @symbolic_link@\n DLLTOOL = dlltool\n SHELL = /bin/sh\n # on sysV, define this as cp.\n@@ -530,6 +531,7 @@ FLAGS_TO_PASS = \\\n \t\"LDFLAGS=$(LDFLAGS)\" \\\n \t\"LEX=$(LEX)\" \\\n \t\"LEXFLAGS=$(LEXFLAGS)\" \\\n+\t\"LN=$(LN)\" \\\n \t\"MAKEINFO=$(MAKEINFO)\" \\\n \t\"MAKEINFOFLAGS=$(MAKEINFOFLAGS)\" \\\n \t\"RANLIB_FOR_TARGET=$(RANLIB_FOR_TARGET)\" \\\n@@ -2660,9 +2662,9 @@ stage1-start:\n \t-mv $(STAGESTUFF) stage1\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n-\t-if [ -f as$(exeext) ] ; then ln -s ../as$(exeext) stage1 || cp as$(exeext) stage1 ; else true ; fi\n-\t-if [ -f ld$(exeext) ] ; then ln -s ../ld$(exeext) stage1 || cp ld$(exeext) stage1 ; else true ; fi\n-\t-if [ -f collect-ld$(exeext) ] ; then ln -s ../collect-ld$(exeext) stage1 || cp collect-ld$(exeext) stage1 ; else true ; fi\n+\t-if [ -f as$(exeext) ] ; then $(LN) ../as$(exeext) stage1 ; else true ; fi\n+\t-if [ -f ld$(exeext) ] ; then $(LN) ../ld$(exeext) stage1 ; else true ; fi\n+\t-if [ -f collect-ld$(exeext) ] ; then $(LN) ../collect-ld$(exeext) stage1 ; else true ; fi\n \t-rm -f stage1/libgcc.a\n \t-cp libgcc.a stage1\n \t-if $(RANLIB_TEST) ; then $(RANLIB) stage1/libgcc.a; else true; fi\n@@ -2681,9 +2683,9 @@ stage2-start:\n \t-mv $(STAGESTUFF) stage2\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n-\t-if [ -f as$(exeext) ] ; then ln -s ../as$(exeext) stage2 || cp as$(exeext) stage2 ; else true ; fi\n-\t-if [ -f ld$(exeext) ] ; then ln -s ../ld$(exeext) stage2 || cp ld$(exeext) stage2 ; else true ; fi\n-\t-if [ -f collect-ld ] ; then ln -s ../collect-ld$(exeext) stage2 || cp collect-ld$(exeext) stage2 ; else true ; fi\n+\t-if [ -f as$(exeext) ] ; then $(LN) ../as$(exeext) stage2 ; else true ; fi\n+\t-if [ -f ld$(exeext) ] ; then $(LN) ../ld$(exeext) stage2 ; else true ; fi\n+\t-if [ -f collect-ld ] ; then $(LN) ../collect-ld$(exeext) stage2 ; else true ; fi\n \t-rm -f stage2/libgcc.a\n \t-cp libgcc.a stage2\n \t-if $(RANLIB_TEST) ; then $(RANLIB) stage2/libgcc.a; else true; fi\n@@ -2702,9 +2704,9 @@ stage3-start:\n \t-mv $(STAGESTUFF) stage3\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n-\t-if [ -f as$(exeext) ] ; then ln -s ../as$(exeext) stage3 || cp as$(exeext) stage3 ; else true ; fi\n-\t-if [ -f ld$(exeext) ] ; then ln -s ../ld$(exeext) stage3 || cp ld$(exeext) stage3 ; else true ; fi\n-\t-if [ -f collect-ld$(exeext) ] ; then ln -s ../collect-ld$(exeext) stage3 || cp collect-ld$(exeext) stage3 ; else true ; fi\n+\t-if [ -f as$(exeext) ] ; then $(LN) ../as$(exeext) stage3 ; else true ; fi\n+\t-if [ -f ld$(exeext) ] ; then $(LN) ../ld$(exeext) stage3 ; else true ; fi\n+\t-if [ -f collect-ld$(exeext) ] ; then $(LN) ../collect-ld$(exeext) stage3 ; else true ; fi\n \t-rm -f stage3/libgcc.a\n \t-cp libgcc.a stage3\n \t-if $(RANLIB_TEST) ; then $(RANLIB) stage3/libgcc.a; else true; fi\n@@ -2723,9 +2725,9 @@ stage4-start:\n \t-mv $(STAGESTUFF) stage4\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n-\t-if [ -f as$(exeext) ] ; then ln -s ../as$(exeext) stage4 || cp as$(exeext) stage4 ; else true ; fi\n-\t-if [ -f ld$(exeext) ] ; then ln -s ../ld$(exeext) stage4 || cp ld$(exeext) stage4 ; else true ; fi\n-\t-if [ -f collect-ld$(exeext) ] ; then ln -s ../collect-ld$(exeext) stage4 || cp collect-ld$(exeext) stage4 ; else true ; fi\n+\t-if [ -f as$(exeext) ] ; then $(LN) ../as$(exeext) stage4 ; else true ; fi\n+\t-if [ -f ld$(exeext) ] ; then $(LN) ../ld$(exeext) stage4 ; else true ; fi\n+\t-if [ -f collect-ld$(exeext) ] ; then $(LN) ../collect-ld$(exeext) stage4 ; else true ; fi\n \t-rm -f stage4/libgcc.a\n \t-cp libgcc.a stage4\n \t-if $(RANLIB_TEST) ; then $(RANLIB) stage4/libgcc.a; else true; fi"}]}