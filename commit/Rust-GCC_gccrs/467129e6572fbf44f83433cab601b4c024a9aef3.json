{"sha": "467129e6572fbf44f83433cab601b4c024a9aef3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDY3MTI5ZTY1NzJmYmY0NGY4MzQzM2NhYjYwMWI0YzAyNGE5YWVmMw==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2005-07-24T03:44:26Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2005-07-24T03:44:26Z"}, "message": "configure.ac (ACX_PROG_CC_WARNING_OPTS): add -Wmissing-format-attribute.\n\n\t* configure.ac (ACX_PROG_CC_WARNING_OPTS): add\n\t-Wmissing-format-attribute.\n\n\t* configure: Regenerate.\n\nFrom-SVN: r102327", "tree": {"sha": "2a13962b71d66445aca24b6d7a29646aea03e10f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a13962b71d66445aca24b6d7a29646aea03e10f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/467129e6572fbf44f83433cab601b4c024a9aef3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/467129e6572fbf44f83433cab601b4c024a9aef3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/467129e6572fbf44f83433cab601b4c024a9aef3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/467129e6572fbf44f83433cab601b4c024a9aef3/comments", "author": null, "committer": null, "parents": [{"sha": "ac0f3f3949090eeb1687345bcd3f8dd9a5aef1cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac0f3f3949090eeb1687345bcd3f8dd9a5aef1cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac0f3f3949090eeb1687345bcd3f8dd9a5aef1cd"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "74b93085f2a26bd7365daaac0048806683fb722a", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/467129e6572fbf44f83433cab601b4c024a9aef3/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/467129e6572fbf44f83433cab601b4c024a9aef3/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=467129e6572fbf44f83433cab601b4c024a9aef3", "patch": "@@ -1,3 +1,10 @@\n+2005-07-23  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* configure.ac (ACX_PROG_CC_WARNING_OPTS): add\n+\t-Wmissing-format-attribute.\n+\n+\t* configure: Regenerate.\n+\n 2005-06-29  Kelley Cook  <kcook@gcc.gnu.org>\n \n \t* all files: Update FSF address in copyright headers."}, {"sha": "cd8fac81548edc5b46b672b60b00b16ac4366032", "filename": "libcpp/configure", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/467129e6572fbf44f83433cab601b4c024a9aef3/libcpp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/467129e6572fbf44f83433cab601b4c024a9aef3/libcpp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fconfigure?ref=467129e6572fbf44f83433cab601b4c024a9aef3", "patch": "@@ -2691,7 +2691,8 @@ test -n \"$AUTOHEADER\" || AUTOHEADER=\"$MISSING autoheader\"\n WARN_CFLAGS=\n save_CFLAGS=\"$CFLAGS\"\n for option in -W -Wall -Wwrite-strings -Wstrict-prototypes \\\n-\t\t\t  -Wmissing-prototypes -Wold-style-definition; do\n+\t\t\t  -Wmissing-prototypes -Wold-style-definition \\\n+\t\t\t  -Wmissing-format-attribute; do\n   as_acx_Woption=`echo \"acx_cv_prog_cc_warning_$option\" | $as_tr_sh`\n \n   echo \"$as_me:$LINENO: checking whether $CC supports $option\" >&5"}, {"sha": "9a000bd04cb4aa83d4b33780d9ed8abc92a7a507", "filename": "libcpp/configure.ac", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/467129e6572fbf44f83433cab601b4c024a9aef3/libcpp%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/467129e6572fbf44f83433cab601b4c024a9aef3/libcpp%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fconfigure.ac?ref=467129e6572fbf44f83433cab601b4c024a9aef3", "patch": "@@ -22,7 +22,8 @@ AC_CHECK_PROGS([AUTOHEADER], [autoheader], [$MISSING autoheader])\n # See config/warnings.m4 for details.\n \n ACX_PROG_CC_WARNING_OPTS([-W -Wall -Wwrite-strings -Wstrict-prototypes \\\n-\t\t\t  -Wmissing-prototypes -Wold-style-definition])\n+\t\t\t  -Wmissing-prototypes -Wold-style-definition \\\n+\t\t\t  -Wmissing-format-attribute])\n ACX_PROG_CC_WARNING_ALMOST_PEDANTIC([-Wno-long-long])\n \n # Only enable with --enable-werror-always until existing warnings are"}]}