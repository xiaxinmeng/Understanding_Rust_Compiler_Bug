{"sha": "6e8323274a29065a1eecdf19001484ad2958d45a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmU4MzIzMjc0YTI5MDY1YTFlZWNkZjE5MDAxNDg0YWQyOTU4ZDQ1YQ==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2016-10-12T12:35:00Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2016-10-12T12:35:00Z"}, "message": "rtl.h (struct rtx_def): Comment how RTX_FLAGS will be dumped in RTL dumps.\n\n\t* rtl.h (struct rtx_def): Comment how RTX_FLAGS will be\n\tdumped in RTL dumps.\n\nFrom-SVN: r241037", "tree": {"sha": "cfcf16271483c0dc1d779fef24e0d1f9057568b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cfcf16271483c0dc1d779fef24e0d1f9057568b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e8323274a29065a1eecdf19001484ad2958d45a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e8323274a29065a1eecdf19001484ad2958d45a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e8323274a29065a1eecdf19001484ad2958d45a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e8323274a29065a1eecdf19001484ad2958d45a/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc3a3580dad5f061d1ac645ddb8b0c78889d10a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc3a3580dad5f061d1ac645ddb8b0c78889d10a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc3a3580dad5f061d1ac645ddb8b0c78889d10a8"}], "stats": {"total": 30, "additions": 21, "deletions": 9}, "files": [{"sha": "8044af024b83d1dc66df799b2d262c6497aa6e0c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e8323274a29065a1eecdf19001484ad2958d45a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e8323274a29065a1eecdf19001484ad2958d45a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6e8323274a29065a1eecdf19001484ad2958d45a", "patch": "@@ -1,3 +1,8 @@\n+2016-10-12  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\t* rtl.h (struct rtx_def): Comment how RTX_FLAGS will be\n+\tdumped in RTL dumps.\n+\n 2016-10-12  Martin Liska  <mliska@suse.cz>\n \n \t* gimple-fold.c (create_tmp_reg_or_ssa_name): New function."}, {"sha": "7de2cebaef9bf9f358b1da52b26a9048570ddaa1", "filename": "gcc/rtl.h", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e8323274a29065a1eecdf19001484ad2958d45a/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e8323274a29065a1eecdf19001484ad2958d45a/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=6e8323274a29065a1eecdf19001484ad2958d45a", "patch": "@@ -317,12 +317,14 @@ struct GTY((desc(\"0\"), tag(\"0\"),\n      1 in a CONCAT is VAL_EXPR_IS_COPIED in var-tracking.c.\n      1 in a VALUE is SP_BASED_VALUE_P in cselib.c.\n      1 in a SUBREG generated by LRA for reload insns.\n-     1 in a CALL for calls instrumented by Pointer Bounds Checker.  */\n+     1 in a CALL for calls instrumented by Pointer Bounds Checker.\n+     Dumped as \"/j\" in RTL dumps.  */\n   unsigned int jump : 1;\n   /* In a CODE_LABEL, part of the two-bit alternate entry field.\n      1 in a MEM if it cannot trap.\n      1 in a CALL_INSN logically equivalent to\n-       ECF_LOOPING_CONST_OR_PURE and DECL_LOOPING_CONST_OR_PURE_P. */\n+       ECF_LOOPING_CONST_OR_PURE and DECL_LOOPING_CONST_OR_PURE_P.\n+     Dumped as \"/c\" in RTL dumps.  */\n   unsigned int call : 1;\n   /* 1 in a REG, MEM, or CONCAT if the value is set at most once, anywhere.\n      1 in a SUBREG used for SUBREG_PROMOTED_UNSIGNED_P.\n@@ -333,7 +335,8 @@ struct GTY((desc(\"0\"), tag(\"0\"),\n      1 in a JUMP_INSN of an annulling branch.\n      1 in a CONCAT is VAL_EXPR_IS_CLOBBERED in var-tracking.c.\n      1 in a preserved VALUE is PRESERVED_VALUE_P in cselib.c.\n-     1 in a clobber temporarily created for LRA.  */\n+     1 in a clobber temporarily created for LRA.\n+     Dumped as \"/u\" in RTL dumps.  */\n   unsigned int unchanging : 1;\n   /* 1 in a MEM or ASM_OPERANDS expression if the memory reference is volatile.\n      1 in an INSN, CALL_INSN, JUMP_INSN, CODE_LABEL, BARRIER, or NOTE\n@@ -344,9 +347,10 @@ struct GTY((desc(\"0\"), tag(\"0\"),\n      1 in a LABEL_REF, REG_LABEL_TARGET or REG_LABEL_OPERAND note for a\n      non-local label.\n      In a SYMBOL_REF, this flag is used for machine-specific purposes.\n-     In a PREFETCH, this flag indicates that it should be considered a scheduling\n-     barrier.\n-     1 in a CONCAT is VAL_NEEDS_RESOLUTION in var-tracking.c.  */\n+     In a PREFETCH, this flag indicates that it should be considered a\n+     scheduling barrier.\n+     1 in a CONCAT is VAL_NEEDS_RESOLUTION in var-tracking.c.\n+     Dumped as \"/v\" in RTL dumps.  */\n   unsigned int volatil : 1;\n   /* 1 in a REG if the register is used only in exit code a loop.\n      1 in a SUBREG expression if was generated from a variable with a\n@@ -360,7 +364,8 @@ struct GTY((desc(\"0\"), tag(\"0\"),\n      cleared before used.\n \n      The name of the field is historical.  It used to be used in MEMs\n-     to record whether the MEM accessed part of a structure.  */\n+     to record whether the MEM accessed part of a structure.\n+     Dumped as \"/s\" in RTL dumps.  */\n   unsigned int in_struct : 1;\n   /* At the end of RTL generation, 1 if this rtx is used.  This is used for\n      copying shared structure.  See `unshare_all_rtl'.\n@@ -377,13 +382,15 @@ struct GTY((desc(\"0\"), tag(\"0\"),\n      1 in a REG or MEM if it is a pointer.\n      1 in a SYMBOL_REF if it addresses something in the per-function\n      constant string pool.\n-     1 in a VALUE is VALUE_CHANGED in var-tracking.c.  */\n+     1 in a VALUE is VALUE_CHANGED in var-tracking.c.\n+     Dumped as \"/f\" in RTL dumps.  */\n   unsigned frame_related : 1;\n   /* 1 in a REG or PARALLEL that is the current function's return value.\n      1 in a SYMBOL_REF for a weak symbol.\n      1 in a CALL_INSN logically equivalent to ECF_PURE and DECL_PURE_P.\n      1 in a CONCAT is VAL_EXPR_HAS_REVERSE in var-tracking.c.\n-     1 in a VALUE or DEBUG_EXPR is NO_LOC_P in var-tracking.c.  */\n+     1 in a VALUE or DEBUG_EXPR is NO_LOC_P in var-tracking.c.\n+     Dumped as \"/i\" in RTL dumps.  */\n   unsigned return_val : 1;\n \n   union {"}]}