{"sha": "86654b2cc167b540f4f144549b80748ce0054729", "node_id": "C_kwDOANBUbNoAKDg2NjU0YjJjYzE2N2I1NDBmNGYxNDQ1NDliODA3NDhjZTAwNTQ3Mjk", "commit": {"author": {"name": "Monk Chiang", "email": "monk.chiang@sifive.com", "date": "2022-10-25T06:17:33Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2022-10-26T08:37:01Z"}, "message": "RISC-V: Recognized Svinval and Svnapot extensions\n\ngcc/ChangeLog:\n\n\t* common/config/riscv/riscv-common.cc (riscv_ext_version_table):\n\tAdd svinval and svnapot extension.\n\t(riscv_ext_flag_table): Ditto.\n\t* config/riscv/riscv-opts.h (MASK_SVINVAL): New.\n\t(MASK_SVNAPOT): Ditto.\n\t(TARGET_SVINVAL): Ditto.\n\t(TARGET_SVNAPOT): Ditto.\n\t* config/riscv/riscv.opt (riscv_sv_subext): New.\n\ngcc/testsuite/ChangeLog:\n\t* gcc.target/riscv/predef-24.c:New.\n\t* gcc.target/riscv/predef-25.c:New.", "tree": {"sha": "e3cb8a1d914c9bbd919ee98f1ea86a17ffd311d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3cb8a1d914c9bbd919ee98f1ea86a17ffd311d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86654b2cc167b540f4f144549b80748ce0054729", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86654b2cc167b540f4f144549b80748ce0054729", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86654b2cc167b540f4f144549b80748ce0054729", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86654b2cc167b540f4f144549b80748ce0054729/comments", "author": {"login": "monkchiang", "id": 62004175, "node_id": "MDQ6VXNlcjYyMDA0MTc1", "avatar_url": "https://avatars.githubusercontent.com/u/62004175?v=4", "gravatar_id": "", "url": "https://api.github.com/users/monkchiang", "html_url": "https://github.com/monkchiang", "followers_url": "https://api.github.com/users/monkchiang/followers", "following_url": "https://api.github.com/users/monkchiang/following{/other_user}", "gists_url": "https://api.github.com/users/monkchiang/gists{/gist_id}", "starred_url": "https://api.github.com/users/monkchiang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/monkchiang/subscriptions", "organizations_url": "https://api.github.com/users/monkchiang/orgs", "repos_url": "https://api.github.com/users/monkchiang/repos", "events_url": "https://api.github.com/users/monkchiang/events{/privacy}", "received_events_url": "https://api.github.com/users/monkchiang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ef04aa86a4c7a7535ef1fac02c2457282bc9172", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ef04aa86a4c7a7535ef1fac02c2457282bc9172", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ef04aa86a4c7a7535ef1fac02c2457282bc9172"}], "stats": {"total": 109, "additions": 109, "deletions": 0}, "files": [{"sha": "bd356ce2093be068a25683095e07a461f161465f", "filename": "gcc/common/config/riscv/riscv-common.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86654b2cc167b540f4f144549b80748ce0054729/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86654b2cc167b540f4f144549b80748ce0054729/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.cc?ref=86654b2cc167b540f4f144549b80748ce0054729", "patch": "@@ -204,6 +204,9 @@ static const struct riscv_ext_version riscv_ext_version_table[] =\n \n   {\"zmmul\", ISA_SPEC_CLASS_NONE, 1, 0},\n \n+  {\"svinval\", ISA_SPEC_CLASS_NONE, 1, 0},\n+  {\"svnapot\", ISA_SPEC_CLASS_NONE, 1, 0},\n+\n   /* Terminate the list.  */\n   {NULL, ISA_SPEC_CLASS_NONE, 0, 0}\n };\n@@ -1219,6 +1222,9 @@ static const riscv_ext_flag_table_t riscv_ext_flag_table[] =\n \n   {\"zmmul\", &gcc_options::x_riscv_zm_subext, MASK_ZMMUL},\n \n+  {\"svinval\", &gcc_options::x_riscv_sv_subext, MASK_SVINVAL},\n+  {\"svnapot\", &gcc_options::x_riscv_sv_subext, MASK_SVNAPOT},\n+\n   {NULL, NULL, 0}\n };\n "}, {"sha": "63ac56a8ca0c41c4c824bbea46f6435ef8266be5", "filename": "gcc/config/riscv/riscv-opts.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86654b2cc167b540f4f144549b80748ce0054729/gcc%2Fconfig%2Friscv%2Friscv-opts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86654b2cc167b540f4f144549b80748ce0054729/gcc%2Fconfig%2Friscv%2Friscv-opts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-opts.h?ref=86654b2cc167b540f4f144549b80748ce0054729", "patch": "@@ -162,6 +162,12 @@ enum stack_protector_guard {\n #define MASK_ZMMUL      (1 << 0)\n #define TARGET_ZMMUL    ((riscv_zm_subext & MASK_ZMMUL) != 0)\n \n+#define MASK_SVINVAL (1 << 0)\n+#define MASK_SVNAPOT (1 << 1)\n+\n+#define TARGET_SVINVAL ((riscv_sv_subext & MASK_SVINVAL) != 0)\n+#define TARGET_SVNAPOT ((riscv_sv_subext & MASK_SVNAPOT) != 0)\n+\n /* Bit of riscv_zvl_flags will set contintuly, N-1 bit will set if N-bit is\n    set, e.g. MASK_ZVL64B has set then MASK_ZVL32B is set, so we can use\n    popcount to caclulate the minimal VLEN.  */"}, {"sha": "949311775c1ec9375ddedc8727aacca06e7839b6", "filename": "gcc/config/riscv/riscv.opt", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86654b2cc167b540f4f144549b80748ce0054729/gcc%2Fconfig%2Friscv%2Friscv.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86654b2cc167b540f4f144549b80748ce0054729/gcc%2Fconfig%2Friscv%2Friscv.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.opt?ref=86654b2cc167b540f4f144549b80748ce0054729", "patch": "@@ -224,6 +224,9 @@ int riscv_zf_subext\n TargetVariable\n int riscv_zm_subext\n \n+TargetVariable\n+int riscv_sv_subext\n+\n Enum\n Name(isa_spec_class) Type(enum riscv_isa_spec_class)\n Supported ISA specs (for use with the -misa-spec= option):"}, {"sha": "2b51a19eacdaf4b0231bf7ab882da819483a2c8c", "filename": "gcc/testsuite/gcc.target/riscv/predef-24.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86654b2cc167b540f4f144549b80748ce0054729/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpredef-24.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86654b2cc167b540f4f144549b80748ce0054729/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpredef-24.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpredef-24.c?ref=86654b2cc167b540f4f144549b80748ce0054729", "patch": "@@ -0,0 +1,47 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gc_svnapot -mabi=lp64 -mcmodel=medlow -misa-spec=20191213\" } */\n+\n+int main () {\n+\n+#ifndef __riscv_arch_test\n+#error \"__riscv_arch_test\"\n+#endif\n+\n+#if __riscv_xlen != 64\n+#error \"__riscv_xlen\"\n+#endif\n+\n+#if !defined(__riscv_i) || (__riscv_i != (2 * 1000 * 1000 + 1 * 1000))\n+#error \"__riscv_i\"\n+#endif\n+\n+#if !defined(__riscv_c) || (__riscv_c != (2 * 1000 * 1000))\n+#error \"__riscv_c\"\n+#endif\n+\n+#if defined(__riscv_e)\n+#error \"__riscv_e\"\n+#endif\n+\n+#if !defined(__riscv_a) || (__riscv_a != (2 * 1000 * 1000 + 1 * 1000))\n+#error \"__riscv_a\"\n+#endif\n+\n+#if !defined(__riscv_m) || (__riscv_m != (2 * 1000 * 1000))\n+#error \"__riscv_m\"\n+#endif\n+\n+#if !defined(__riscv_f) || (__riscv_f != (2 * 1000 * 1000 + 2 * 1000))\n+#error \"__riscv_f\"\n+#endif\n+\n+#if !defined(__riscv_d) || (__riscv_d != (2 * 1000 * 1000 + 2 * 1000))\n+#error \"__riscv_d\"\n+#endif\n+\n+#if !defined(__riscv_svnapot)\n+#error \"__riscv_svnapot\"\n+#endif\n+\n+  return 0;\n+}"}, {"sha": "64bde17efa90be6766ff29d86233f0fc944a66f1", "filename": "gcc/testsuite/gcc.target/riscv/predef-25.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86654b2cc167b540f4f144549b80748ce0054729/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpredef-25.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86654b2cc167b540f4f144549b80748ce0054729/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpredef-25.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpredef-25.c?ref=86654b2cc167b540f4f144549b80748ce0054729", "patch": "@@ -0,0 +1,47 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gc_svinval -mabi=lp64 -mcmodel=medlow -misa-spec=20191213\" } */\n+\n+int main () {\n+\n+#ifndef __riscv_arch_test\n+#error \"__riscv_arch_test\"\n+#endif\n+\n+#if __riscv_xlen != 64\n+#error \"__riscv_xlen\"\n+#endif\n+\n+#if !defined(__riscv_i) || (__riscv_i != (2 * 1000 * 1000 + 1 * 1000))\n+#error \"__riscv_i\"\n+#endif\n+\n+#if !defined(__riscv_c) || (__riscv_c != (2 * 1000 * 1000))\n+#error \"__riscv_c\"\n+#endif\n+\n+#if defined(__riscv_e)\n+#error \"__riscv_e\"\n+#endif\n+\n+#if !defined(__riscv_a) || (__riscv_a != (2 * 1000 * 1000 + 1 * 1000))\n+#error \"__riscv_a\"\n+#endif\n+\n+#if !defined(__riscv_m) || (__riscv_m != (2 * 1000 * 1000))\n+#error \"__riscv_m\"\n+#endif\n+\n+#if !defined(__riscv_f) || (__riscv_f != (2 * 1000 * 1000 + 2 * 1000))\n+#error \"__riscv_f\"\n+#endif\n+\n+#if !defined(__riscv_d) || (__riscv_d != (2 * 1000 * 1000 + 2 * 1000))\n+#error \"__riscv_d\"\n+#endif\n+\n+#if !defined(__riscv_svinval)\n+#error \"__riscv_svinval\"\n+#endif\n+\n+  return 0;\n+}"}]}