{"sha": "37d1c5db3a195a239888866c8ce089b4845fe100", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzdkMWM1ZGIzYTE5NWEyMzk4ODg4NjZjOGNlMDg5YjQ4NDVmZTEwMA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2013-10-12T14:55:28Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2013-10-12T14:55:28Z"}, "message": "Truncate x32 DImode TLS address to a SImode register\n\ngcc/\n\n\tPR target/58690\n\t* config/i386/i386.c (ix86_copy_addr_to_reg): New function.\n\t(ix86_expand_movmem): Replace copy_addr_to_reg with\n\tix86_copy_addr_to_reg.\n\t(ix86_expand_setmem): Likewise.\n\ngcc/testsuite/\n\n\tPR target/58690\n\t* gcc.target/i386/pr58690.c: New test\n\nFrom-SVN: r203486", "tree": {"sha": "8377c23d5e044345c52bdb64fc974eca3417b98d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8377c23d5e044345c52bdb64fc974eca3417b98d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37d1c5db3a195a239888866c8ce089b4845fe100", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37d1c5db3a195a239888866c8ce089b4845fe100", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37d1c5db3a195a239888866c8ce089b4845fe100", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37d1c5db3a195a239888866c8ce089b4845fe100/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b86a70ff8d42f72bf998602fb1fcd724b7f76092", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b86a70ff8d42f72bf998602fb1fcd724b7f76092", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b86a70ff8d42f72bf998602fb1fcd724b7f76092"}], "stats": {"total": 48, "additions": 45, "deletions": 3}, "files": [{"sha": "2d0761bbeee0e43078ea7b03078e4ba1df0b4d15", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37d1c5db3a195a239888866c8ce089b4845fe100/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37d1c5db3a195a239888866c8ce089b4845fe100/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=37d1c5db3a195a239888866c8ce089b4845fe100", "patch": "@@ -1,3 +1,11 @@\n+2013-10-12  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/58690\n+\t* config/i386/i386.c (ix86_copy_addr_to_reg): New function.\n+\t(ix86_expand_movmem): Replace copy_addr_to_reg with\n+\tix86_copy_addr_to_reg.\n+\t(ix86_expand_setmem): Likewise.\n+\n 2013-10-12  Alexander Monakov  <amonakov@ispras.ru>\n \n \t* config/i386/i386.c (ix86_expand_sse_compare_and_jump): Use mode"}, {"sha": "02cbbbde37e09ee2e12de49fe4eb31ede29be787", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37d1c5db3a195a239888866c8ce089b4845fe100/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37d1c5db3a195a239888866c8ce089b4845fe100/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=37d1c5db3a195a239888866c8ce089b4845fe100", "patch": "@@ -22076,6 +22076,21 @@ counter_mode (rtx count_exp)\n   return SImode;\n }\n \n+/* Copy the address to a Pmode register.  This is used for x32 to\n+   truncate DImode TLS address to a SImode register. */\n+\n+static rtx\n+ix86_copy_addr_to_reg (rtx addr)\n+{\n+  if (GET_MODE (addr) == Pmode)\n+    return copy_addr_to_reg (addr);\n+  else\n+    {\n+      gcc_assert (GET_MODE (addr) == DImode && Pmode == SImode);\n+      return gen_rtx_SUBREG (SImode, copy_to_mode_reg (DImode, addr), 0);\n+    }\n+}\n+\n /* When SRCPTR is non-NULL, output simple loop to move memory\n    pointer to SRCPTR to DESTPTR via chunks of MODE unrolled UNROLL times,\n    overall size is COUNT specified in bytes.  When SRCPTR is NULL, output the\n@@ -23032,8 +23047,8 @@ ix86_expand_movmem (rtx dst, rtx src, rtx count_exp, rtx align_exp,\n \n   if (!count)\n     count_exp = copy_to_mode_reg (GET_MODE (count_exp), count_exp);\n-  destreg = copy_addr_to_reg (XEXP (dst, 0));\n-  srcreg = copy_addr_to_reg (XEXP (src, 0));\n+  destreg = ix86_copy_addr_to_reg (XEXP (dst, 0));\n+  srcreg = ix86_copy_addr_to_reg (XEXP (src, 0));\n \n   unroll_factor = 1;\n   move_mode = word_mode;\n@@ -23436,7 +23451,7 @@ ix86_expand_setmem (rtx dst, rtx count_exp, rtx val_exp, rtx align_exp,\n \n   if (!count)\n     count_exp = copy_to_mode_reg (counter_mode (count_exp), count_exp);\n-  destreg = copy_addr_to_reg (XEXP (dst, 0));\n+  destreg = ix86_copy_addr_to_reg (XEXP (dst, 0));\n \n   move_mode = word_mode;\n   unroll_factor = 1;"}, {"sha": "9ff25b023cfeb8a8f756a23eeff370120a738743", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37d1c5db3a195a239888866c8ce089b4845fe100/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37d1c5db3a195a239888866c8ce089b4845fe100/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=37d1c5db3a195a239888866c8ce089b4845fe100", "patch": "@@ -1,3 +1,8 @@\n+2013-10-12  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/58690\n+\t* gcc.target/i386/pr58690.c: New test\n+\n 2013-10-12  Alexander Monakov  <amonakov@ispras.ru>\n \n \t* gcc.target/i386/builtin-ucmp.c: New test."}, {"sha": "87a87cc9c907d4f3c3baceac2c424344fe0a5466", "filename": "gcc/testsuite/gcc.target/i386/pr58690.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37d1c5db3a195a239888866c8ce089b4845fe100/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr58690.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37d1c5db3a195a239888866c8ce089b4845fe100/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr58690.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr58690.c?ref=37d1c5db3a195a239888866c8ce089b4845fe100", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile { target { ! { ia32 } } } } */\n+/* { dg-require-effective-target maybe_x32 } */\n+/* { dg-options \"-O2 -mx32 -maddress-mode=short\" } */\n+\n+struct gomp_thread\n+{\n+  char foo[41];\n+};\n+extern __thread struct gomp_thread gomp_tls_data;\n+void\n+foo (void)\n+{\n+  __builtin_memset (&gomp_tls_data, '\\0', sizeof (gomp_tls_data));\n+}"}]}