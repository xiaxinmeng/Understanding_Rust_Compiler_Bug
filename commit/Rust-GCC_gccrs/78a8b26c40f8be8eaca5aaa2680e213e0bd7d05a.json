{"sha": "78a8b26c40f8be8eaca5aaa2680e213e0bd7d05a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhhOGIyNmM0MGY4YmU4ZWFjYTVhYWEyNjgwZTIxM2UwYmQ3ZDA1YQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-05-04T14:24:49Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-05-04T14:24:49Z"}, "message": "re PR middle-end/65965 (Straight-line memcpy/memset not vectorized when equivalent loop is)\n\n2015-05-04  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/65965\n\t* tree-vect-data-refs.c (vect_analyze_data_ref_accesses): Split\n\tstore groups at gaps.\n\n\t* gcc.dg/vect/bb-slp-33.c: New testcase.\n\nFrom-SVN: r222765", "tree": {"sha": "9ef0826a52ad6fa9d58f2d6a4b69cfa220f5f9f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ef0826a52ad6fa9d58f2d6a4b69cfa220f5f9f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78a8b26c40f8be8eaca5aaa2680e213e0bd7d05a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78a8b26c40f8be8eaca5aaa2680e213e0bd7d05a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78a8b26c40f8be8eaca5aaa2680e213e0bd7d05a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78a8b26c40f8be8eaca5aaa2680e213e0bd7d05a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7457466941a2a06b99731bb7ed3ab90ba37b8110", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7457466941a2a06b99731bb7ed3ab90ba37b8110", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7457466941a2a06b99731bb7ed3ab90ba37b8110"}], "stats": {"total": 69, "additions": 69, "deletions": 0}, "files": [{"sha": "756071d5df4b13356a0f2528e3a29e87b97698f1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78a8b26c40f8be8eaca5aaa2680e213e0bd7d05a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78a8b26c40f8be8eaca5aaa2680e213e0bd7d05a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=78a8b26c40f8be8eaca5aaa2680e213e0bd7d05a", "patch": "@@ -1,3 +1,9 @@\n+2015-05-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/65965\n+\t* tree-vect-data-refs.c (vect_analyze_data_ref_accesses): Split\n+\tstore groups at gaps.\n+\n 2015-05-04  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/65935"}, {"sha": "58308186822f8a05b63e6508d5e1ff29fa4151f2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78a8b26c40f8be8eaca5aaa2680e213e0bd7d05a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78a8b26c40f8be8eaca5aaa2680e213e0bd7d05a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=78a8b26c40f8be8eaca5aaa2680e213e0bd7d05a", "patch": "@@ -1,3 +1,8 @@\n+2015-05-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/65965\n+\t* gcc.dg/vect/bb-slp-33.c: New testcase.\n+\n 2015-05-04  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/65935"}, {"sha": "4e84f51ee8d5d63fc5ee81f3ee16559d56ce5d24", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-33.c", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78a8b26c40f8be8eaca5aaa2680e213e0bd7d05a/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-33.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78a8b26c40f8be8eaca5aaa2680e213e0bd7d05a/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-33.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-33.c?ref=78a8b26c40f8be8eaca5aaa2680e213e0bd7d05a", "patch": "@@ -0,0 +1,49 @@\n+/* { dg-require-effective-target vect_int } */\n+\n+#include \"tree-vect.h\"\n+\n+extern void abort (void);\n+\n+void __attribute__((noinline,noclone))\n+test(int *__restrict__ a, int *__restrict__ b)\n+{\n+  a[0] = b[0];\n+  a[1] = b[1];\n+  a[2] = b[2];\n+  a[3] = b[3];\n+  a[5] = 0;\n+  a[6] = 0;\n+  a[7] = 0;\n+  a[8] = 0;\n+}\n+\n+int main()\n+{\n+  int a[9];\n+  int b[4];\n+  b[0] = 1;\n+  __asm__ volatile (\"\");\n+  b[1] = 2;\n+  __asm__ volatile (\"\");\n+  b[2] = 3;\n+  __asm__ volatile (\"\");\n+  b[3] = 4;\n+  __asm__ volatile (\"\");\n+  a[4] = 7;\n+  check_vect ();\n+  test(a, b);\n+  if (a[0] != 1\n+      || a[1] != 2\n+      || a[2] != 3\n+      || a[3] != 4\n+      || a[4] != 7\n+      || a[5] != 0\n+      || a[6] != 0\n+      || a[7] != 0\n+      || a[8] != 0)\n+    abort ();\n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 2 \"slp2\" { target { vect_element_align || vect_hw_misalign } } } } */\n+/* { dg-final { cleanup-tree-dump \"slp2\" } } */"}, {"sha": "ccb1f620c2d09e0c394dab80a97b7c728052af5e", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78a8b26c40f8be8eaca5aaa2680e213e0bd7d05a/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78a8b26c40f8be8eaca5aaa2680e213e0bd7d05a/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=78a8b26c40f8be8eaca5aaa2680e213e0bd7d05a", "patch": "@@ -2602,6 +2602,15 @@ vect_analyze_data_ref_accesses (loop_vec_info loop_vinfo, bb_vec_info bb_vinfo)\n \t  if ((init_b - init_a) % type_size_a != 0)\n \t    break;\n \n+\t  /* If we have a store, the accesses are adjacent.  This splits\n+\t     groups into chunks we support (we don't support vectorization\n+\t     of stores with gaps).  */\n+\t  if (!DR_IS_READ (dra)\n+\t      && (init_b - (HOST_WIDE_INT) TREE_INT_CST_LOW\n+\t\t\t\t\t     (DR_INIT (datarefs_copy[i-1]))\n+\t\t  != type_size_a))\n+\t    break;\n+\n \t  /* The step (if not zero) is greater than the difference between\n \t     data-refs' inits.  This splits groups into suitable sizes.  */\n \t  HOST_WIDE_INT step = tree_to_shwi (DR_STEP (dra));"}]}