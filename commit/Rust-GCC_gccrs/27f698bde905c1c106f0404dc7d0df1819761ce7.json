{"sha": "27f698bde905c1c106f0404dc7d0df1819761ce7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdmNjk4YmRlOTA1YzFjMTA2ZjA0MDRkYzdkMGRmMTgxOTc2MWNlNw==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-09-08T16:16:45Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-09-10T16:04:11Z"}, "message": "d: Don't warn about variables initialized with 'void'\n\nThere is no problem with using `T var = void', it is if the variable\nremains uninitialized on first use that a warning should be issued.\n\ngcc/d/ChangeLog:\n\n\t* decl.cc (DeclVisitor::visit (VarDeclaration *)): Don't warn about\n\tvariables initialized with 'void'.", "tree": {"sha": "9738582dd620f8d87eaf53b1ad277ad133c9ab72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9738582dd620f8d87eaf53b1ad277ad133c9ab72"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27f698bde905c1c106f0404dc7d0df1819761ce7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27f698bde905c1c106f0404dc7d0df1819761ce7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27f698bde905c1c106f0404dc7d0df1819761ce7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27f698bde905c1c106f0404dc7d0df1819761ce7/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29ff25e70671ce2046aab5cf89bf519ec6cf2bed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29ff25e70671ce2046aab5cf89bf519ec6cf2bed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29ff25e70671ce2046aab5cf89bf519ec6cf2bed"}], "stats": {"total": 35, "additions": 13, "deletions": 22}, "files": [{"sha": "59844bc8633e6448773c76bd4158fd9e83bc0821", "filename": "gcc/d/decl.cc", "status": "modified", "additions": 13, "deletions": 22, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27f698bde905c1c106f0404dc7d0df1819761ce7/gcc%2Fd%2Fdecl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27f698bde905c1c106f0404dc7d0df1819761ce7/gcc%2Fd%2Fdecl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdecl.cc?ref=27f698bde905c1c106f0404dc7d0df1819761ce7", "patch": "@@ -734,33 +734,24 @@ class DeclVisitor : public Visitor\n \t   a check for isVarDeclaration() in DeclarationExp codegen.  */\n \tdeclare_local_var (d);\n \n-\tif (d->_init)\n+\tif (d->_init && !d->_init->isVoidInitializer ())\n \t  {\n \t    tree decl = get_symbol_decl (d);\n \n-\t    if (!d->_init->isVoidInitializer ())\n-\t      {\n-\t\tExpInitializer *vinit = d->_init->isExpInitializer ();\n-\t\tExpression *ie = initializerToExpression (vinit);\n-\t\ttree exp = build_expr (ie);\n-\n-\t\t/* Maybe put variable on list of things needing destruction.  */\n-\t\tif (d->needsScopeDtor ())\n-\t\t  {\n-\t\t    vec_safe_push (d_function_chain->vars_in_scope, decl);\n-\t\t    /* Force a TARGET_EXPR to add the corresponding cleanup.  */\n-\t\t    exp = force_target_expr (compound_expr (exp, decl));\n-\t\t    TARGET_EXPR_CLEANUP (exp) = build_expr (d->edtor);\n-\t\t  }\n-\n-\t\tadd_stmt (exp);\n-\t      }\n-\t    else if (d->size (d->loc) != 0)\n+\t    ExpInitializer *vinit = d->_init->isExpInitializer ();\n+\t    Expression *ie = initializerToExpression (vinit);\n+\t    tree exp = build_expr (ie);\n+\n+\t    /* Maybe put variable on list of things needing destruction.  */\n+\t    if (d->needsScopeDtor ())\n \t      {\n-\t\t/* Zero-length arrays do not have an initializer.  */\n-\t\twarning (OPT_Wuninitialized, \"uninitialized variable '%s'\",\n-\t\t\t d->ident ? d->ident->toChars () : \"(no name)\");\n+\t\tvec_safe_push (d_function_chain->vars_in_scope, decl);\n+\t\t/* Force a TARGET_EXPR to add the corresponding cleanup.  */\n+\t\texp = force_target_expr (compound_expr (exp, decl));\n+\t\tTARGET_EXPR_CLEANUP (exp) = build_expr (d->edtor);\n \t      }\n+\n+\t    add_stmt (exp);\n \t  }\n       }\n "}]}