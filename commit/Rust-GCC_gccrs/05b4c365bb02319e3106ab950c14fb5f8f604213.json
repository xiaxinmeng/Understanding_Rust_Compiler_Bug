{"sha": "05b4c365bb02319e3106ab950c14fb5f8f604213", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDViNGMzNjViYjAyMzE5ZTMxMDZhYjk1MGMxNGZiNWY4ZjYwNDIxMw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-08-04T22:28:48Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-08-04T22:28:48Z"}, "message": "(eliminate_regs_in_insn): Always do elimination in REG_NOTES if we\nchanged anything in the insn.\n\nFrom-SVN: r5069", "tree": {"sha": "88c2268d281caba41c66493a061848e4434fcd1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88c2268d281caba41c66493a061848e4434fcd1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05b4c365bb02319e3106ab950c14fb5f8f604213", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05b4c365bb02319e3106ab950c14fb5f8f604213", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05b4c365bb02319e3106ab950c14fb5f8f604213", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05b4c365bb02319e3106ab950c14fb5f8f604213/comments", "author": null, "committer": null, "parents": [{"sha": "065e678f6ecb3688e60ffa02b10c703efc694103", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/065e678f6ecb3688e60ffa02b10c703efc694103", "html_url": "https://github.com/Rust-GCC/gccrs/commit/065e678f6ecb3688e60ffa02b10c703efc694103"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "6d872ec62dd5765bd48b5b5e49419a798529d422", "filename": "gcc/reload1.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b4c365bb02319e3106ab950c14fb5f8f604213/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b4c365bb02319e3106ab950c14fb5f8f604213/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=05b4c365bb02319e3106ab950c14fb5f8f604213", "patch": "@@ -3158,8 +3158,7 @@ eliminate_regs_in_insn (insn, replace)\n   old_asm_operands_vec = 0;\n \n   /* Replace the body of this insn with a substituted form.  If we changed\n-     something, return non-zero.  If this is the final call for this\n-     insn (REPLACE is non-zero), do the elimination in REG_NOTES as well.\n+     something, return non-zero.  \n \n      If we are replacing a body that was a (set X (plus Y Z)), try to\n      re-recognize the insn.  We do this in case we had a simple addition\n@@ -3197,8 +3196,6 @@ eliminate_regs_in_insn (insn, replace)\n       else\n \tPATTERN (insn) = new_body;\n \n-      if (replace && REG_NOTES (insn))\n-\tREG_NOTES (insn) = eliminate_regs (REG_NOTES (insn), 0, NULL_RTX);\n       val = 1;\n     }\n \n@@ -3240,6 +3237,14 @@ eliminate_regs_in_insn (insn, replace)\n     }\n \n  done:\n+  /* If we changed something, perform elmination in REG_NOTES.  This is\n+     needed even when REPLACE is zero because a REG_DEAD note might refer\n+     to a register that we eliminate and could cause a different number\n+     of spill registers to be needed in the final reload pass than in\n+     the pre-passes.  */\n+  if (val)\n+    REG_NOTES (insn) = eliminate_regs (REG_NOTES (insn), 0, NULL_RTX);\n+\n   if (! replace)\n     pop_obstacks ();\n "}]}