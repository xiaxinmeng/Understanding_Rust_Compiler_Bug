{"sha": "f4dff765db23e352a544759d2ca3a6a1a3602ac3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRkZmY3NjVkYjIzZTM1MmE1NDQ3NTlkMmNhM2E2YTFhMzYwMmFjMw==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2020-05-06T08:09:11Z"}, "committer": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2020-05-06T08:09:11Z"}, "message": "doc: Update install.texi for GCC 10 on Solaris\n\nThis patch updates install.texi for GCC 10 on Solaris.  It includes some\ngeneral cleanup and updates and includes a couple of caveats, some of\nthem found when testing GCC 10.1.0 RC1 with only the bundled tools.\n\nThe reference to TGCware on the binaries page is gone because they only\nprovide binaries up to Solaris 9.\n\nThe note about configuring 64-bit Solaris/SPARC compilers with\n--build=sparcv9-sun-solaris2.11 became necessary because upstream\nconfig.guess silently reverted my patch to automatically detect this.  We\nalready had a bug report about a comparison failure caused by this issue.\n\nTested with make doc/gccinstall.info and doc/gccinstall.pdf and\ninspection of the resulting files.\n\n\t* doc/install.texi: Replace Sun with Solaris as appropriate.\n\t(Tools/packages necessary for building GCC, Perl version between\n\t5.6.1 and 5.6.24): Remove Solaris 8 reference.\n\t(Installing GCC: Binaries, Solaris 2 (SPARC, Intel)): Remove\n\tTGCware reference.\n\t(Specific, i?86-*-solaris2*): Update version references for\n\tSolaris 11.3 and later.  Remove gas 2.26 caveat.\n\t(Specific, *-*-solaris2*): Update version references for\n\tSolaris 11.3 and later.  Remove boehm-gc reference.\n\tDocument GMP, MPFR caveats on Solaris 11.3.\n\t(Specific, sparc-sun-solaris2*): Update Solaris 9 references.\n\t(Specific, sparc64-*-solaris2*): Likewise.\n\tDocument --build requirement.", "tree": {"sha": "a0c874d0bead13e8f95ca19f16b554601fc8c560", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0c874d0bead13e8f95ca19f16b554601fc8c560"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4dff765db23e352a544759d2ca3a6a1a3602ac3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4dff765db23e352a544759d2ca3a6a1a3602ac3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4dff765db23e352a544759d2ca3a6a1a3602ac3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4dff765db23e352a544759d2ca3a6a1a3602ac3/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e47cb3597c9051f57dbd09b3e8c57371f70f037", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e47cb3597c9051f57dbd09b3e8c57371f70f037", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e47cb3597c9051f57dbd09b3e8c57371f70f037"}], "stats": {"total": 103, "additions": 68, "deletions": 35}, "files": [{"sha": "ed91bfa4f4ed6718ef320af37036362d27d8180e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4dff765db23e352a544759d2ca3a6a1a3602ac3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4dff765db23e352a544759d2ca3a6a1a3602ac3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f4dff765db23e352a544759d2ca3a6a1a3602ac3", "patch": "@@ -1,3 +1,19 @@\n+2020-05-06  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* doc/install.texi: Replace Sun with Solaris as appropriate.\n+\t(Tools/packages necessary for building GCC, Perl version between\n+\t5.6.1 and 5.6.24): Remove Solaris 8 reference.\n+\t(Installing GCC: Binaries, Solaris 2 (SPARC, Intel)): Remove\n+\tTGCware reference.\n+\t(Specific, i?86-*-solaris2*): Update version references for\n+\tSolaris 11.3 and later.  Remove gas 2.26 caveat.\n+\t(Specific, *-*-solaris2*): Update version references for\n+\tSolaris 11.3 and later.  Remove boehm-gc reference.\n+\tDocument GMP, MPFR caveats on Solaris 11.3.\n+\t(Specific, sparc-sun-solaris2*): Update Solaris 9 references.\n+\t(Specific, sparc64-*-solaris2*): Likewise.\n+\tDocument --build requirement.\n+\n 2020-05-06  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/94950"}, {"sha": "876b04f9c455a40d7aefe9541a394448e1aee24d", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 52, "deletions": 35, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4dff765db23e352a544759d2ca3a6a1a3602ac3/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4dff765db23e352a544759d2ca3a6a1a3602ac3/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=f4dff765db23e352a544759d2ca3a6a1a3602ac3", "patch": "@@ -349,9 +349,8 @@ systems' @command{tar} programs will also work, only try GNU\n \n Necessary when targeting Darwin, building @samp{libstdc++},\n and not using @option{--disable-symvers}.\n-Necessary when targeting Solaris 2 with Sun @command{ld} and not using\n-@option{--disable-symvers}.  The bundled @command{perl} in Solaris@tie{}8\n-and up works.\n+Necessary when targeting Solaris 2 with Solaris @command{ld} and not using\n+@option{--disable-symvers}.\n \n Necessary when regenerating @file{Makefile} dependencies in libiberty.\n Necessary when regenerating @file{libiberty/functions.texi}.\n@@ -1016,7 +1015,7 @@ is the target system triple, such as @samp{sparc-sun-solaris2.7}, and\n @item\n If the target system is the same that you are building on, check\n operating system specific directories (e.g.@: @file{/usr/ccs/bin} on\n-Sun Solaris 2).\n+Solaris 2).\n \n @item\n Check in the @env{PATH} for a tool whose name is prefixed by the\n@@ -3340,9 +3339,6 @@ Solaris 2 (SPARC, Intel):\n @itemize\n @item\n @uref{https://www.opencsw.org/,,OpenCSW}\n-\n-@item\n-@uref{http://jupiterrise.com/tgcware/,,TGCware}\n @end itemize\n \n @item\n@@ -4048,29 +4044,27 @@ found on @uref{http://www.bitwizard.nl/sig11/,,www.bitwizard.nl}.\n @end html\n @anchor{ix86-x-solaris2}\n @heading i?86-*-solaris2*\n-Use this for Solaris 11 or later on x86 and x86-64 systems.  Starting\n+Use this for Solaris 11.3 or later on x86 and x86-64 systems.  Starting\n with GCC 4.7, there is also a 64-bit @samp{amd64-*-solaris2*} or\n @samp{x86_64-*-solaris2*} configuration that corresponds to\n @samp{sparcv9-sun-solaris2*}.\n \n It is recommended that you configure GCC to use the GNU assembler.  The\n-versions included in Solaris 11, from GNU binutils 2.19 or\n-newer (also available as @file{/usr/bin/gas} and\n+versions included in Solaris 11.3, from GNU binutils 2.23.1 or\n+newer (available as @file{/usr/bin/gas} and\n @file{/usr/gnu/bin/as}), work fine.  The current version, from GNU\n-binutils 2.32, is known to work, but the version from GNU binutils 2.26\n-must be avoided.  Recent versions of the Solaris assembler in\n-@file{/usr/ccs/bin/as} work almost as well, though.\n-@c FIXME: as patch requirements?\n+binutils 2.34, is known to work.  Recent versions of the Solaris assembler in\n+@file{/usr/bin/as} work almost as well, though.\n \n-For linking, the Solaris linker, is preferred.  If you want to use the GNU\n-linker instead, the version in Solaris 11, from GNU binutils 2.19 or\n-newer (also in @file{/usr/gnu/bin/ld} and @file{/usr/bin/gld}), works,\n-as does the latest version, from GNU binutils 2.32.\n+For linking, the Solaris linker is preferred.  If you want to use the GNU\n+linker instead, the version in Solaris 11.3, from GNU binutils 2.23.1 or\n+newer (in @file{/usr/gnu/bin/ld} and @file{/usr/bin/gld}), works,\n+as does the latest version, from GNU binutils 2.34.\n \n To use GNU @command{as}, configure with the options\n @option{--with-gnu-as --with-as=@//usr/@/gnu/@/bin/@/as}.  It may be necessary\n to configure with @option{--without-gnu-ld --with-ld=@//usr/@/ccs/@/bin/@/ld} to\n-guarantee use of Sun @command{ld}.\n+guarantee use of Solaris @command{ld}.\n @c FIXME: why --without-gnu-ld --with-ld?\n \n @html\n@@ -4658,13 +4652,14 @@ Support for Solaris 10 has been removed in GCC 10.  Support for Solaris\n 9 has been removed in GCC 5.  Support for Solaris 8 has been removed in\n GCC 4.8.  Support for Solaris 7 has been removed in GCC 4.6.\n \n-Solaris 11 provides GCC 4.5.2, 4.7.3, and 4.8.2 as\n-@command{/usr/gcc/4.5/bin/gcc} or similar.  Alternatively,\n+Solaris 11.3 provides GCC 4.5.2, 4.7.3, and 4.8.2 as\n+@command{/usr/gcc/4.5/bin/gcc} or similar.  Newer Solaris versions\n+provide one or more of GCC 5, 7, and 9.  Alternatively,\n you can install a pre-built GCC to bootstrap and install GCC.  See the\n @uref{binaries.html,,binaries page} for details.\n \n The Solaris 2 @command{/bin/sh} will often fail to configure\n-@samp{libstdc++-v3}or @samp{boehm-gc}.  We therefore recommend using the\n+@samp{libstdc++-v3}.  We therefore recommend using the\n following initial sequence of commands\n \n @smallexample\n@@ -4685,24 +4680,24 @@ Trying to use the linker and other tools in\n For example, the linker may hang indefinitely.  The fix is to remove\n @file{/usr/ucb} from your @env{PATH}.\n \n-The build process works more smoothly with the legacy Sun tools so, if you\n+The build process works more smoothly with the legacy Solaris tools so, if you\n have @file{/usr/xpg4/bin} in your @env{PATH}, we recommend that you place\n @file{/usr/bin} before @file{/usr/xpg4/bin} for the duration of the build.\n \n We recommend the use of the Solaris assembler or the GNU assembler, in\n conjunction with the Solaris linker.  The GNU @command{as}\n-versions included in Solaris 11,\n-from GNU binutils 2.19 or newer (also in @file{/usr/bin/gas} and\n+versions included in Solaris 11.3,\n+from GNU binutils 2.23.1 or newer (in @file{/usr/bin/gas} and\n @file{/usr/gnu/bin/as}), are known to work.\n-The current version, from GNU binutils 2.32,\n+The current version, from GNU binutils 2.34,\n is known to work as well.  Note that your mileage may vary\n if you use a combination of the GNU tools and the Solaris tools: while the\n-combination GNU @command{as} + Sun @command{ld} should reasonably work,\n-the reverse combination Sun @command{as} + GNU @command{ld} may fail to\n+combination GNU @command{as} + Solaris @command{ld} should reasonably work,\n+the reverse combination Solaris @command{as} + GNU @command{ld} may fail to\n build or cause memory corruption at runtime in some cases for C++ programs.\n @c FIXME: still?\n GNU @command{ld} usually works as well.  Again, the current\n-version (2.32) is known to work, but generally lacks platform specific\n+version (2.34) is known to work, but generally lacks platform specific\n features, so better stay with Solaris @command{ld}.  To use the LTO linker\n plugin (@option{-fuse-linker-plugin}) with GNU @command{ld}, GNU\n binutils @emph{must} be configured with @option{--enable-largefile}.\n@@ -4713,6 +4708,21 @@ GNU binutils.  @samp{libstdc++} symbol versioning will be disabled if no\n appropriate version is found.  Solaris @command{c++filt} from the Solaris\n Studio compilers does @emph{not} work.\n \n+The versions of the GNU Multiple Precision Library (GMP), the MPFR\n+library and the MPC library bundled with Solaris 11.3 and later are\n+usually recent enough to match GCC's requirements.  There are two\n+caveats:\n+\n+@itemize @bullet\n+@item\n+While the version of the GMP library in Solaris 11.3 works with GCC, you\n+need to configure with @option{--with-gmp-include=/usr/include/gmp}.\n+\n+@item\n+The version of the MPFR libary included in Solaris 11.3 is too old; you\n+need to provide a more recent one.\n+@end itemize\n+\n @html\n <hr />\n @end html\n@@ -4734,7 +4744,7 @@ in @uref{prerequisites.html,,the prerequisites}.\n @anchor{sparc-sun-solaris2}\n @heading sparc-sun-solaris2*\n When GCC is configured to use GNU binutils 2.14 or later, the binaries\n-produced are smaller than the ones produced using Sun's native tools;\n+produced are smaller than the ones produced using Solaris native tools;\n this difference is quite significant for binaries containing debugging\n information.\n \n@@ -4750,10 +4760,10 @@ When configuring the GNU Multiple Precision Library (GMP), the MPFR\n library or the MPC library on a Solaris 7 or later system, the canonical\n target triplet must be specified as the @command{build} parameter on the\n configure line.  This target triplet can be obtained by invoking @command{./config.guess} in the toplevel source directory of GCC (and\n-not that of GMP or MPFR or MPC).  For example on a Solaris 9 system:\n+not that of GMP or MPFR or MPC).  For example on a Solaris 11 system:\n \n @smallexample\n-% ./configure --build=sparc-sun-solaris2.9 --prefix=xxx\n+% ./configure --build=sparc-sun-solaris2.11 --prefix=xxx\n @end smallexample\n \n @html\n@@ -4767,13 +4777,20 @@ not that of GMP or MPFR or MPC).  For example on a Solaris 9 system:\n @end html\n @anchor{sparc64-x-solaris2}\n @heading sparc64-*-solaris2*\n+When configuring a 64-bit-default GCC on Solaris/SPARC, you must use a\n+build compiler that generates 64-bit code, either by default or by\n+specifying @samp{CC='gcc -m64' CXX='gcc-m64'} to @command{configure}.\n+Additionally, you @emph{must} pass @option{--build=sparc64-sun-solaris2.11}\n+or @option{--build=sparcv9-sun-solaris2.11} because @file{config.guess}\n+misdetects this situation, which can cause build failures.\n+\n When configuring the GNU Multiple Precision Library (GMP), the MPFR\n library or the MPC library, the canonical target triplet must be specified\n as the @command{build} parameter on the configure line.  For example\n-on a Solaris 9 system:\n+on a Solaris 11 system:\n \n @smallexample\n-% ./configure --build=sparc64-sun-solaris2.9 --prefix=xxx\n+% ./configure --build=sparc64-sun-solaris2.11 --prefix=xxx\n @end smallexample\n \n @html\n@@ -4881,7 +4898,7 @@ can generate 64-bit x86-64 code with the @option{-m64} switch.  Since\n GCC 4.7, there is also a configuration that defaults to 64-bit code, but\n can generate 32-bit code with @option{-m32}.  To configure and build\n this way, you have to provide all support libraries like @file{libgmp}\n-as 64-bit code, configure with @option{--target=x86_64-pc-solaris2.1x}\n+as 64-bit code, configure with @option{--target=x86_64-pc-solaris2.11}\n and @samp{CC=gcc -m64}.\n \n @html"}]}