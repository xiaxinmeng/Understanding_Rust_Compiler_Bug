{"sha": "8beccec86d944d599dd4598ab607c2f747327967", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGJlY2NlYzg2ZDk0NGQ1OTlkZDQ1OThhYjYwN2MyZjc0NzMyNzk2Nw==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2003-02-26T03:05:40Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2003-02-26T03:05:40Z"}, "message": "combine.c (combine_simplify_rtx, [...]): Use CC0_P.\n\n\n\t* combine.c (combine_simplify_rtx, simplfy_comparison):  Use CC0_P.\n\t* cse.c (invalidate_skipped_set):  Likewise.\n\t* integrate.c (subst_constants):  Likewise.\n\t* jump.c (reversed_comparison_code_parts):  Likewise.\n\t* loop.c (canonicalize_condition):  Likewise.\n\t* simplify-rtx.c (simplify_relational_operation):  Likewise.\n\nFrom-SVN: r63446", "tree": {"sha": "528ae78f7e10b37399d1b8ddea63ecb542811b27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/528ae78f7e10b37399d1b8ddea63ecb542811b27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8beccec86d944d599dd4598ab607c2f747327967", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8beccec86d944d599dd4598ab607c2f747327967", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8beccec86d944d599dd4598ab607c2f747327967", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8beccec86d944d599dd4598ab607c2f747327967/comments", "author": null, "committer": null, "parents": [{"sha": "b052d8ee4d954827cac504052ede36053543a2a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b052d8ee4d954827cac504052ede36053543a2a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b052d8ee4d954827cac504052ede36053543a2a4"}], "stats": {"total": 58, "additions": 21, "deletions": 37}, "files": [{"sha": "a227392c543753252b59f3e5f25c8b69dfdbf752", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8beccec86d944d599dd4598ab607c2f747327967/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8beccec86d944d599dd4598ab607c2f747327967/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8beccec86d944d599dd4598ab607c2f747327967", "patch": "@@ -1,3 +1,12 @@\n+2003-02-25  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* combine.c (combine_simplify_rtx, simplfy_comparison):  Use CC0_P.\n+\t* cse.c (invalidate_skipped_set):  Likewise.\n+\t* integrate.c (subst_constants):  Likewise.\n+\t* jump.c (reversed_comparison_code_parts):  Likewise.\n+\t* loop.c (canonicalize_condition):  Likewise.\n+\t* simplify-rtx.c (simplify_relational_operation):  Likewise.\n+\n 2003-02-25  Roger Sayle  <roger@eyesopen.com>\n \n \t* builtins.def (DEF_LIB_ALWAYS_BUILTIN, DEF_UNUSED_BUILTIN): Delete."}, {"sha": "fe5cce50f24cdd428c3b691efb22c58917b2a60a", "filename": "gcc/combine.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8beccec86d944d599dd4598ab607c2f747327967/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8beccec86d944d599dd4598ab607c2f747327967/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=8beccec86d944d599dd4598ab607c2f747327967", "patch": "@@ -4494,10 +4494,7 @@ combine_simplify_rtx (x, op0_mode, last, in_dest)\n \t with it.  */\n       if (GET_CODE (XEXP (x, 0)) == COMPARE\n \t  || (GET_MODE_CLASS (GET_MODE (XEXP (x, 0))) != MODE_CC\n-#ifdef HAVE_cc0\n-\t      && XEXP (x, 0) != cc0_rtx\n-#endif\n-\t      ))\n+\t      && ! CC0_P (XEXP (x, 0))))\n \t{\n \t  rtx op0 = XEXP (x, 0);\n \t  rtx op1 = XEXP (x, 1);\n@@ -11010,9 +11007,7 @@ simplify_comparison (code, pop0, pop1)\n \t  /* We can't do anything if OP0 is a condition code value, rather\n \t     than an actual data value.  */\n \t  if (const_op != 0\n-#ifdef HAVE_cc0\n-\t      || XEXP (op0, 0) == cc0_rtx\n-#endif\n+\t      || CC0_P (XEXP (op0, 0))\n \t      || GET_MODE_CLASS (GET_MODE (XEXP (op0, 0))) == MODE_CC)\n \t    break;\n "}, {"sha": "6c763f48792ed5a67d09a0f21a2ce482e77463f7", "filename": "gcc/cse.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8beccec86d944d599dd4598ab607c2f747327967/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8beccec86d944d599dd4598ab607c2f747327967/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=8beccec86d944d599dd4598ab607c2f747327967", "patch": "@@ -6658,9 +6658,7 @@ invalidate_skipped_set (dest, set, data)\n     }\n \n   if (GET_CODE (set) == CLOBBER\n-#ifdef HAVE_cc0\n-      || dest == cc0_rtx\n-#endif\n+      || CC0_P (dest)\n       || dest == pc_rtx)\n     return;\n "}, {"sha": "576d8240c6568f9e4aba817b168460a7f2910b61", "filename": "gcc/integrate.c", "status": "modified", "additions": 5, "deletions": 13, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8beccec86d944d599dd4598ab607c2f747327967/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8beccec86d944d599dd4598ab607c2f747327967/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=8beccec86d944d599dd4598ab607c2f747327967", "patch": "@@ -1,6 +1,6 @@\n /* Procedure integration for GCC.\n-   Copyright (C) 1988, 1991, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 1991, 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n+   2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@cygnus.com)\n \n This file is part of GCC.\n@@ -2611,10 +2611,7 @@ subst_constants (loc, insn, map, memonly)\n \t  {\n \t    src = SET_SRC (x);\n \t    if (GET_MODE_CLASS (GET_MODE (src)) == MODE_CC\n-#ifdef HAVE_cc0\n-\t\t|| dest == cc0_rtx\n-#endif\n-\t\t)\n+\t\t|| CC0_P (dest))\n \t      {\n \t\tcompare_mode = GET_MODE (XEXP (src, 0));\n \t\tif (compare_mode == VOIDmode)\n@@ -2666,9 +2663,7 @@ subst_constants (loc, insn, map, memonly)\n \t\t\t|| REGNO (XEXP (src, 0)) == VIRTUAL_STACK_VARS_REGNUM)\n \t\t    && CONSTANT_P (XEXP (src, 1)))\n \t\t|| GET_CODE (src) == COMPARE\n-#ifdef HAVE_cc0\n-\t\t|| dest == cc0_rtx\n-#endif\n+\t\t|| CC0_P (dest)\n \t\t|| (dest == pc_rtx\n \t\t    && (src == pc_rtx || GET_CODE (src) == RETURN\n \t\t\t|| GET_CODE (src) == LABEL_REF))))\n@@ -2682,10 +2677,7 @@ subst_constants (loc, insn, map, memonly)\n \t    if (compare_mode != VOIDmode\n \t\t&& GET_CODE (src) == COMPARE\n \t\t&& (GET_MODE_CLASS (GET_MODE (src)) == MODE_CC\n-#ifdef HAVE_cc0\n-\t\t    || dest == cc0_rtx\n-#endif\n-\t\t    )\n+\t\t    || CC0_P (dest))\n \t\t&& GET_MODE (XEXP (src, 0)) == VOIDmode\n \t\t&& GET_MODE (XEXP (src, 1)) == VOIDmode)\n \t      {"}, {"sha": "e18abef51a781f290c0d318317df4b3835584023", "filename": "gcc/jump.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8beccec86d944d599dd4598ab607c2f747327967/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8beccec86d944d599dd4598ab607c2f747327967/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=8beccec86d944d599dd4598ab607c2f747327967", "patch": "@@ -701,11 +701,7 @@ reversed_comparison_code_parts (code, arg0, arg1, insn)\n       break;\n     }\n \n-  if (GET_MODE_CLASS (mode) == MODE_CC\n-#ifdef HAVE_cc0\n-      || arg0 == cc0_rtx\n-#endif\n-      )\n+  if (GET_MODE_CLASS (mode) == MODE_CC || CC0_P (arg0))\n     {\n       rtx prev;\n       /* Try to search for the comparison to determine the real mode."}, {"sha": "1b2acec67af13488f91916687ed69563e35b8846", "filename": "gcc/loop.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8beccec86d944d599dd4598ab607c2f747327967/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8beccec86d944d599dd4598ab607c2f747327967/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=8beccec86d944d599dd4598ab607c2f747327967", "patch": "@@ -1,6 +1,6 @@\n /* Perform various loop optimizations, including strength reduction.\n    Copyright (C) 1987, 1988, 1989, 1991, 1992, 1993, 1994, 1995, 1996, 1997,\n-   1998, 1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n+   1998, 1999, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -9442,11 +9442,9 @@ canonicalize_condition (insn, cond, reverse, earliest, want_reg)\n \t}\n     }\n \n-#ifdef HAVE_cc0\n   /* Never return CC0; return zero instead.  */\n-  if (op0 == cc0_rtx)\n+  if (CC0_P (op0))\n     return 0;\n-#endif\n \n   return gen_rtx_fmt_ee (code, VOIDmode, op0, op1);\n }"}, {"sha": "0bd9b6055b6eadb68c06cb082c226476a6562074", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8beccec86d944d599dd4598ab607c2f747327967/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8beccec86d944d599dd4598ab607c2f747327967/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=8beccec86d944d599dd4598ab607c2f747327967", "patch": "@@ -2177,11 +2177,7 @@ simplify_relational_operation (code, mode, op0, op1)\n \n   /* We can't simplify MODE_CC values since we don't know what the\n      actual comparison is.  */\n-  if (GET_MODE_CLASS (GET_MODE (op0)) == MODE_CC\n-#ifdef HAVE_cc0\n-      || op0 == cc0_rtx\n-#endif\n-      )\n+  if (GET_MODE_CLASS (GET_MODE (op0)) == MODE_CC || CC0_P (op0))\n     return 0;\n \n   /* Make sure the constant is second.  */"}]}