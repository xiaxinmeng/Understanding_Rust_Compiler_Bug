{"sha": "16d46c7bfda76b5b3e88a2d9a809aacdc3ed8e1a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTZkNDZjN2JmZGE3NmI1YjNlODhhMmQ5YTgwOWFhY2RjM2VkOGUxYQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-01-17T15:32:10Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-01-17T15:32:10Z"}, "message": "Fix filesystem::equivalent for mingw\n\n\t* src/c++17/fs_ops.cc\n\t(equivalent(const path&, const path&, error_code&))\n\t[_GLIBCXX_FILESYSTEM_IS_WINDOWS]: Use GetFileInformationByHandle to\n\tcompare files instead of relying on incomplete info returned by stat.\n\nFrom-SVN: r268036", "tree": {"sha": "ba4d252d5301e19425e9c6a71185ca7b60392f3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba4d252d5301e19425e9c6a71185ca7b60392f3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16d46c7bfda76b5b3e88a2d9a809aacdc3ed8e1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16d46c7bfda76b5b3e88a2d9a809aacdc3ed8e1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16d46c7bfda76b5b3e88a2d9a809aacdc3ed8e1a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16d46c7bfda76b5b3e88a2d9a809aacdc3ed8e1a/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc6f857bd30bd678323783a595fc132769cdc659", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc6f857bd30bd678323783a595fc132769cdc659", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc6f857bd30bd678323783a595fc132769cdc659"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "3ea31688ae8d56d0ddbf8b8cdfc221f7e4a77f7b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16d46c7bfda76b5b3e88a2d9a809aacdc3ed8e1a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16d46c7bfda76b5b3e88a2d9a809aacdc3ed8e1a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=16d46c7bfda76b5b3e88a2d9a809aacdc3ed8e1a", "patch": "@@ -1,5 +1,10 @@\n 2019-01-17  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* src/c++17/fs_ops.cc\n+\t(equivalent(const path&, const path&, error_code&))\n+\t[_GLIBCXX_FILESYSTEM_IS_WINDOWS]: Use GetFileInformationByHandle to\n+\tcompare files instead of relying on incomplete info returned by stat.\n+\n \tPR libstdc++/88884\n \t* src/c++17/fs_ops.cc (absolute(const path&, error_code&)): Do nothing\n \tif the path is already absolute."}, {"sha": "3ff0ded1c66cde6a4615c73f05f5a7173044ebf4", "filename": "libstdc++-v3/src/c++17/fs_ops.cc", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16d46c7bfda76b5b3e88a2d9a809aacdc3ed8e1a/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_ops.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16d46c7bfda76b5b3e88a2d9a809aacdc3ed8e1a/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_ops.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_ops.cc?ref=16d46c7bfda76b5b3e88a2d9a809aacdc3ed8e1a", "patch": "@@ -851,7 +851,49 @@ fs::equivalent(const path& p1, const path& p2, error_code& ec) noexcept\n       ec.clear();\n       if (is_other(s1) || is_other(s2))\n \treturn false;\n+#if _GLIBCXX_FILESYSTEM_IS_WINDOWS\n+      // st_ino is not set, so can't be used to distinguish files\n+      if (st1.st_mode != st2.st_mode || st1.st_dev != st2.st_dev)\n+\treturn false;\n+\n+      struct auto_handle {\n+\texplicit auto_handle(const path& p_)\n+\t: handle(CreateFileW(p_.c_str(), 0,\n+\t      FILE_SHARE_DELETE | FILE_SHARE_READ | FILE_SHARE_WRITE,\n+\t      0, OPEN_EXISTING, FILE_FLAG_BACKUP_SEMANTICS, 0))\n+\t{ }\n+\n+\t~auto_handle()\n+\t{ if (*this) CloseHandle(handle); }\n+\n+\texplicit operator bool() const\n+\t{ return handle != INVALID_HANDLE_VALUE; }\n+\n+\tbool get_info()\n+\t{ return GetFileInformationByHandle(handle, &info); }\n+\n+\tHANDLE handle;\n+\tBY_HANDLE_FILE_INFORMATION info;\n+      };\n+      auto_handle h1(p1);\n+      auto_handle h2(p2);\n+      if (!h1 || !h2)\n+\t{\n+\t  if (!h1 && !h2)\n+\t    ec.assign((int)GetLastError(), generic_category());\n+\t  return false;\n+\t}\n+      if (!h1.get_info() || !h2.get_info())\n+\t{\n+\t  ec.assign((int)GetLastError(), generic_category());\n+\t  return false;\n+\t}\n+      return h1.info.dwVolumeSerialNumber == h2.info.dwVolumeSerialNumber\n+\t&& h1.info.nFileIndexHigh == h2.info.nFileIndexHigh\n+\t&& h1.info.nFileIndexLow == h2.info.nFileIndexLow;\n+#else\n       return st1.st_dev == st2.st_dev && st1.st_ino == st2.st_ino;\n+#endif\n     }\n   else if (!exists(s1) && !exists(s2))\n     ec = std::make_error_code(std::errc::no_such_file_or_directory);"}]}