{"sha": "2784ed9c44fce2d6649fda97d31dc98e4b065b9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjc4NGVkOWM0NGZjZTJkNjY0OWZkYTk3ZDMxZGM5OGU0YjA2NWI5YQ==", "commit": {"author": {"name": "Kai Tietz", "email": "kai.tietz@onevision.com", "date": "2010-07-08T18:07:52Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2010-07-08T18:07:52Z"}, "message": "final.c (final_scan_insn): Replace TARGET_UNWIND_INFO macro check by unwind_emit hook NULL check.\n\n2010-07-08  Kai Tietz  <kai.tietz@onevision.com>\n\n\t* final.c (final_scan_insn): Replace\n\tTARGET_UNWIND_INFO macro check by unwind_emit\n\thook NULL check.\n\t* targhooks.c (default_unwind_emit): Removed.\n\t* targhooks.h (default_unwind_emit): Likewise.\n\t* target.def (unwind_emit): Set default value to NULL.\n\nFrom-SVN: r161972", "tree": {"sha": "10ec1c53c1c2db01b8a8ce3a67402ca2db841df5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10ec1c53c1c2db01b8a8ce3a67402ca2db841df5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2784ed9c44fce2d6649fda97d31dc98e4b065b9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2784ed9c44fce2d6649fda97d31dc98e4b065b9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2784ed9c44fce2d6649fda97d31dc98e4b065b9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2784ed9c44fce2d6649fda97d31dc98e4b065b9a/comments", "author": null, "committer": null, "parents": [{"sha": "135a687e07ebca28ae62b9b37f421f8e73dd50da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/135a687e07ebca28ae62b9b37f421f8e73dd50da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/135a687e07ebca28ae62b9b37f421f8e73dd50da"}], "stats": {"total": 30, "additions": 12, "deletions": 18}, "files": [{"sha": "b0b53615965a972c9186df70c128c8ef70b870c7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2784ed9c44fce2d6649fda97d31dc98e4b065b9a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2784ed9c44fce2d6649fda97d31dc98e4b065b9a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2784ed9c44fce2d6649fda97d31dc98e4b065b9a", "patch": "@@ -1,5 +1,12 @@\n 2010-07-08  Kai Tietz  <kai.tietz@onevision.com>\n \n+\t* final.c (final_scan_insn): Replace\n+\tTARGET_UNWIND_INFO macro check by unwind_emit\n+\thook NULL check.\n+\t* targhooks.c (default_unwind_emit): Removed.\n+\t* targhooks.h (default_unwind_emit): Likewise.\n+\t* target.def (unwind_emit): Set default value to NULL.\n+\n \t* config/i386/i386-protos.h (ix86_asm_output_function_label):\n \tNew prototype.\n \t* config/i386/i386.c (ix86_function_ms_hook_prologue): Check"}, {"sha": "fd597ac713d57c96f89c06ab9658944543f312ff", "filename": "gcc/final.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2784ed9c44fce2d6649fda97d31dc98e4b065b9a/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2784ed9c44fce2d6649fda97d31dc98e4b065b9a/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=2784ed9c44fce2d6649fda97d31dc98e4b065b9a", "patch": "@@ -1850,9 +1850,8 @@ final_scan_insn (rtx insn, FILE *file, int optimize ATTRIBUTE_UNUSED,\n \t  break;\n \n \tcase NOTE_INSN_BASIC_BLOCK:\n-#ifdef TARGET_UNWIND_INFO\n-\t  targetm.asm_out.unwind_emit (asm_out_file, insn);\n-#endif\n+\t  if (targetm.asm_out.unwind_emit)\n+\t    targetm.asm_out.unwind_emit (asm_out_file, insn);\n \n \t  if (flag_debug_asm)\n \t    fprintf (asm_out_file, \"\\t%s basic block %d\\n\",\n@@ -2659,12 +2658,11 @@ final_scan_insn (rtx insn, FILE *file, int optimize ATTRIBUTE_UNUSED,\n \t    return new_rtx;\n \t  }\n \n-#ifdef TARGET_UNWIND_INFO\n \t/* ??? This will put the directives in the wrong place if\n \t   get_insn_template outputs assembly directly.  However calling it\n \t   before get_insn_template breaks if the insns is split.  */\n-\ttargetm.asm_out.unwind_emit (asm_out_file, insn);\n-#endif\n+\tif (targetm.asm_out.unwind_emit)\n+\t  targetm.asm_out.unwind_emit (asm_out_file, insn);\n \n \tif (CALL_P (insn))\n \t  {"}, {"sha": "583e78b48b6182c83c6a24c02bf8f96a5a52d4e8", "filename": "gcc/target.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2784ed9c44fce2d6649fda97d31dc98e4b065b9a/gcc%2Ftarget.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2784ed9c44fce2d6649fda97d31dc98e4b065b9a/gcc%2Ftarget.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.def?ref=2784ed9c44fce2d6649fda97d31dc98e4b065b9a", "patch": "@@ -150,7 +150,7 @@ DEFHOOK\n (unwind_emit,\n  \"\",\n  void, (FILE *stream, rtx insn),\n- default_unwind_emit)\n+ NULL)\n \n /* Output an internal label.  */\n DEFHOOK"}, {"sha": "22077f8c437e7a37bfdb9ae68b0f2da7250a9eec", "filename": "gcc/targhooks.c", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2784ed9c44fce2d6649fda97d31dc98e4b065b9a/gcc%2Ftarghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2784ed9c44fce2d6649fda97d31dc98e4b065b9a/gcc%2Ftarghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.c?ref=2784ed9c44fce2d6649fda97d31dc98e4b065b9a", "patch": "@@ -316,16 +316,6 @@ hook_callee_copies_named (CUMULATIVE_ARGS *ca ATTRIBUTE_UNUSED,\n   return named;\n }\n \n-/* Emit any directives required to unwind this instruction.  */\n-\n-void\n-default_unwind_emit (FILE * stream ATTRIBUTE_UNUSED,\n-\t\t     rtx insn ATTRIBUTE_UNUSED)\n-{\n-  /* Should never happen.  */\n-  gcc_unreachable ();\n-}\n-\n /* Emit to STREAM the assembler syntax for insn operand X.  */\n \n void"}, {"sha": "23393b4625542313b30bd9d1ffff232f690f4059", "filename": "gcc/targhooks.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2784ed9c44fce2d6649fda97d31dc98e4b065b9a/gcc%2Ftarghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2784ed9c44fce2d6649fda97d31dc98e4b065b9a/gcc%2Ftarghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.h?ref=2784ed9c44fce2d6649fda97d31dc98e4b065b9a", "patch": "@@ -62,7 +62,6 @@ extern bool hook_pass_by_reference_must_pass_in_stack\n extern bool hook_callee_copies_named\n   (CUMULATIVE_ARGS *ca, enum machine_mode, const_tree, bool);\n \n-extern void default_unwind_emit (FILE *, rtx);\n extern void default_print_operand (FILE *, rtx, int);\n extern void default_print_operand_address (FILE *, rtx);\n extern bool default_print_operand_punct_valid_p (unsigned char);"}]}