{"sha": "e3bc4a35bde5c510fcd009134ad0c633ff759095", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTNiYzRhMzViZGU1YzUxMGZjZDAwOTEzNGFkMGM2MzNmZjc1OTA5NQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2015-02-04T14:26:16Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-02-04T14:26:16Z"}, "message": "builtins.def (DEF_BUILTIN_CHKP): Define if not defined.\n\n\t* builtins.def (DEF_BUILTIN_CHKP): Define if not defined.\n\t(DEF_LIB_BUILTIN_CHKP, DEF_EXT_LIB_BUILTIN_CHKP): Redefine.\n\t(DEF_CHKP_BUILTIN): Define using DEF_BUILTIN_CHKP instead\n\tof DEF_BUILTIN.\n\t(BUILT_IN_MEMCPY, BUILT_IN_MEMMOVE, BUILT_IN_MEMSET, BUILT_IN_STRCAT,\n\tBUILT_IN_STRCHR, BUILT_IN_STRCPY, BUILT_IN_STRLEN): Use\n\tDEF_LIB_BUILTIN_CHKP macro instead of DEF_LIB_BUILTIN.\n\t(BUILT_IN_MEMCPY_CHK, BUILT_IN_MEMMOVE_CHK, BUILT_IN_MEMPCPY_CHK,\n\tBUILT_IN_MEMPCPY, BUILT_IN_MEMSET_CHK, BUILT_IN_STPCPY_CHK,\n\tBUILT_IN_STPCPY, BUILT_IN_STRCAT_CHK, BUILT_IN_STRCPY_CHK): Use\n\tDEF_EXT_LIB_BUILTIN_CHKP macro instead of DEF_EXT_LIB_BUILTIN.\n\t* tree-core.h (enum built_in_function): In between\n\tBEGIN_CHKP_BUILTINS and END_CHKP_BUILTINS only define enum values\n\tfor builtins that use DEF_BUILTIN_CHKP macro.\n\nFrom-SVN: r220407", "tree": {"sha": "f80c4fb15c773076fe297f19373704de9bbad243", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f80c4fb15c773076fe297f19373704de9bbad243"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3bc4a35bde5c510fcd009134ad0c633ff759095", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3bc4a35bde5c510fcd009134ad0c633ff759095", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3bc4a35bde5c510fcd009134ad0c633ff759095", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3bc4a35bde5c510fcd009134ad0c633ff759095/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "871dae346542544552ae7c74cd63f7036bd2ad74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/871dae346542544552ae7c74cd63f7036bd2ad74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/871dae346542544552ae7c74cd63f7036bd2ad74"}], "stats": {"total": 79, "additions": 59, "deletions": 20}, "files": [{"sha": "4e03848bed0e8ce5f557030513d69d7b9578c34f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3bc4a35bde5c510fcd009134ad0c633ff759095/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3bc4a35bde5c510fcd009134ad0c633ff759095/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e3bc4a35bde5c510fcd009134ad0c633ff759095", "patch": "@@ -1,3 +1,20 @@\n+2015-02-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* builtins.def (DEF_BUILTIN_CHKP): Define if not defined.\n+\t(DEF_LIB_BUILTIN_CHKP, DEF_EXT_LIB_BUILTIN_CHKP): Redefine.\n+\t(DEF_CHKP_BUILTIN): Define using DEF_BUILTIN_CHKP instead\n+\tof DEF_BUILTIN.\n+\t(BUILT_IN_MEMCPY, BUILT_IN_MEMMOVE, BUILT_IN_MEMSET, BUILT_IN_STRCAT,\n+\tBUILT_IN_STRCHR, BUILT_IN_STRCPY, BUILT_IN_STRLEN): Use\n+\tDEF_LIB_BUILTIN_CHKP macro instead of DEF_LIB_BUILTIN.\n+\t(BUILT_IN_MEMCPY_CHK, BUILT_IN_MEMMOVE_CHK, BUILT_IN_MEMPCPY_CHK,\n+\tBUILT_IN_MEMPCPY, BUILT_IN_MEMSET_CHK, BUILT_IN_STPCPY_CHK,\n+\tBUILT_IN_STPCPY, BUILT_IN_STRCAT_CHK, BUILT_IN_STRCPY_CHK): Use\n+\tDEF_EXT_LIB_BUILTIN_CHKP macro instead of DEF_EXT_LIB_BUILTIN.\n+\t* tree-core.h (enum built_in_function): In between\n+\tBEGIN_CHKP_BUILTINS and END_CHKP_BUILTINS only define enum values\n+\tfor builtins that use DEF_BUILTIN_CHKP macro.\n+\n 2015-02-04  Alexandre Oliva <aoliva@redhat.com>\n \n \tPR debug/64817"}, {"sha": "55ce9f6daa0fe9328a6f7d1ea4e0be260d496a51", "filename": "gcc/builtins.def", "status": "modified", "additions": 36, "deletions": 18, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3bc4a35bde5c510fcd009134ad0c633ff759095/gcc%2Fbuiltins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3bc4a35bde5c510fcd009134ad0c633ff759095/gcc%2Fbuiltins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.def?ref=e3bc4a35bde5c510fcd009134ad0c633ff759095", "patch": "@@ -63,6 +63,16 @@ along with GCC; see the file COPYING3.  If not see\n \n    The builtins is registered only if COND is true.  */\n \n+/* A macro for builtins where the\n+   BUILT_IN_*_CHKP = BUILT_IN_* + BEGIN_CHKP_BUILTINS + 1\n+   enums should be defined too.  */\n+#ifndef DEF_BUILTIN_CHKP\n+#define DEF_BUILTIN_CHKP(ENUM, NAME, CLASS, TYPE, LIBTYPE, BOTH_P,\t\\\n+\t\t\t FALLBACK_P, NONANSI_P, ATTRS, IMPLICIT, COND)\t\\\n+  DEF_BUILTIN(ENUM, NAME, CLASS, TYPE, LIBTYPE, BOTH_P, FALLBACK_P,\t\\\n+\t      NONANSI_P, ATTRS, IMPLICIT, COND)\n+#endif\n+\n /* A GCC builtin (like __builtin_saveregs) is provided by the\n    compiler, but does not correspond to a function in the standard\n    library.  */\n@@ -87,6 +97,10 @@ along with GCC; see the file COPYING3.  If not see\n #define DEF_LIB_BUILTIN(ENUM, NAME, TYPE, ATTRS)\t\\\n   DEF_BUILTIN (ENUM, \"__builtin_\" NAME, BUILT_IN_NORMAL, TYPE, TYPE,\t\\\n \t       true, true, false, ATTRS, true, true)\n+#undef DEF_LIB_BUILTIN_CHKP\n+#define DEF_LIB_BUILTIN_CHKP(ENUM, NAME, TYPE, ATTRS)\t\\\n+  DEF_BUILTIN_CHKP (ENUM, \"__builtin_\" NAME, BUILT_IN_NORMAL, TYPE,\t\\\n+\t\t    TYPE, true, true, false, ATTRS, true, true)\n \n /* Like DEF_LIB_BUILTIN, except that the function is not one that is\n    specified by ANSI/ISO C.  So, when we're being fully conformant we\n@@ -96,6 +110,10 @@ along with GCC; see the file COPYING3.  If not see\n #define DEF_EXT_LIB_BUILTIN(ENUM, NAME, TYPE, ATTRS)\t\\\n   DEF_BUILTIN (ENUM, \"__builtin_\" NAME, BUILT_IN_NORMAL, TYPE, TYPE,\t\\\n \t       true, true, true, ATTRS, false, true)\n+#undef DEF_EXT_LIB_BUILTIN_CHKP\n+#define DEF_EXT_LIB_BUILTIN_CHKP(ENUM, NAME, TYPE, ATTRS)\t\\\n+  DEF_BUILTIN_CHKP (ENUM, \"__builtin_\" NAME, BUILT_IN_NORMAL, TYPE,\t\\\n+\t\t    TYPE, true, true, true, ATTRS, false, true)\n \n /* Like DEF_LIB_BUILTIN, except that the function is only a part of\n    the standard in C94 or above.  */\n@@ -199,8 +217,8 @@ along with GCC; see the file COPYING3.  If not see\n /* Builtin used by the implementation of Pointer Bounds Checker.  */\n #undef DEF_CHKP_BUILTIN\n #define DEF_CHKP_BUILTIN(ENUM, NAME, TYPE, ATTRS) \\\n-  DEF_BUILTIN (ENUM, \"__builtin_\" NAME, BUILT_IN_NORMAL, TYPE, TYPE,    \\\n-\t       true, true, false, ATTRS, true, true)\n+  DEF_BUILTIN_CHKP (ENUM, \"__builtin_\" NAME, BUILT_IN_NORMAL, TYPE,\t\\\n+\t\t    TYPE, true, true, false, ATTRS, true, true)\n \n /* Define an attribute list for math functions that are normally\n    \"impure\" because some of them may write into global memory for\n@@ -595,22 +613,22 @@ DEF_EXT_LIB_BUILTIN    (BUILT_IN_BZERO, \"bzero\", BT_FN_VOID_PTR_SIZE, ATTR_NOTHR\n DEF_EXT_LIB_BUILTIN    (BUILT_IN_INDEX, \"index\", BT_FN_STRING_CONST_STRING_INT, ATTR_PURE_NOTHROW_NONNULL_LEAF)\n DEF_LIB_BUILTIN        (BUILT_IN_MEMCHR, \"memchr\", BT_FN_PTR_CONST_PTR_INT_SIZE, ATTR_PURE_NOTHROW_NONNULL_LEAF)\n DEF_LIB_BUILTIN        (BUILT_IN_MEMCMP, \"memcmp\", BT_FN_INT_CONST_PTR_CONST_PTR_SIZE, ATTR_PURE_NOTHROW_NONNULL_LEAF)\n-DEF_LIB_BUILTIN        (BUILT_IN_MEMCPY, \"memcpy\", BT_FN_PTR_PTR_CONST_PTR_SIZE, ATTR_RET1_NOTHROW_NONNULL_LEAF)\n-DEF_LIB_BUILTIN        (BUILT_IN_MEMMOVE, \"memmove\", BT_FN_PTR_PTR_CONST_PTR_SIZE, ATTR_RET1_NOTHROW_NONNULL_LEAF)\n-DEF_EXT_LIB_BUILTIN    (BUILT_IN_MEMPCPY, \"mempcpy\", BT_FN_PTR_PTR_CONST_PTR_SIZE, ATTR_NOTHROW_NONNULL_LEAF)\n-DEF_LIB_BUILTIN        (BUILT_IN_MEMSET, \"memset\", BT_FN_PTR_PTR_INT_SIZE, ATTR_RET1_NOTHROW_NONNULL_LEAF)\n+DEF_LIB_BUILTIN_CHKP   (BUILT_IN_MEMCPY, \"memcpy\", BT_FN_PTR_PTR_CONST_PTR_SIZE, ATTR_RET1_NOTHROW_NONNULL_LEAF)\n+DEF_LIB_BUILTIN_CHKP   (BUILT_IN_MEMMOVE, \"memmove\", BT_FN_PTR_PTR_CONST_PTR_SIZE, ATTR_RET1_NOTHROW_NONNULL_LEAF)\n+DEF_EXT_LIB_BUILTIN_CHKP (BUILT_IN_MEMPCPY, \"mempcpy\", BT_FN_PTR_PTR_CONST_PTR_SIZE, ATTR_NOTHROW_NONNULL_LEAF)\n+DEF_LIB_BUILTIN_CHKP   (BUILT_IN_MEMSET, \"memset\", BT_FN_PTR_PTR_INT_SIZE, ATTR_RET1_NOTHROW_NONNULL_LEAF)\n DEF_EXT_LIB_BUILTIN    (BUILT_IN_RINDEX, \"rindex\", BT_FN_STRING_CONST_STRING_INT, ATTR_PURE_NOTHROW_NONNULL_LEAF)\n-DEF_EXT_LIB_BUILTIN    (BUILT_IN_STPCPY, \"stpcpy\", BT_FN_STRING_STRING_CONST_STRING, ATTR_NOTHROW_NONNULL_LEAF)\n+DEF_EXT_LIB_BUILTIN_CHKP (BUILT_IN_STPCPY, \"stpcpy\", BT_FN_STRING_STRING_CONST_STRING, ATTR_NOTHROW_NONNULL_LEAF)\n DEF_EXT_LIB_BUILTIN    (BUILT_IN_STPNCPY, \"stpncpy\", BT_FN_STRING_STRING_CONST_STRING_SIZE, ATTR_NOTHROW_NONNULL_LEAF)\n DEF_EXT_LIB_BUILTIN    (BUILT_IN_STRCASECMP, \"strcasecmp\", BT_FN_INT_CONST_STRING_CONST_STRING, ATTR_PURE_NOTHROW_NONNULL_LEAF)\n-DEF_LIB_BUILTIN        (BUILT_IN_STRCAT, \"strcat\", BT_FN_STRING_STRING_CONST_STRING, ATTR_NOTHROW_NONNULL_LEAF)\n-DEF_LIB_BUILTIN        (BUILT_IN_STRCHR, \"strchr\", BT_FN_STRING_CONST_STRING_INT, ATTR_PURE_NOTHROW_NONNULL_LEAF)\n+DEF_LIB_BUILTIN_CHKP   (BUILT_IN_STRCAT, \"strcat\", BT_FN_STRING_STRING_CONST_STRING, ATTR_NOTHROW_NONNULL_LEAF)\n+DEF_LIB_BUILTIN_CHKP   (BUILT_IN_STRCHR, \"strchr\", BT_FN_STRING_CONST_STRING_INT, ATTR_PURE_NOTHROW_NONNULL_LEAF)\n DEF_LIB_BUILTIN        (BUILT_IN_STRCMP, \"strcmp\", BT_FN_INT_CONST_STRING_CONST_STRING, ATTR_PURE_NOTHROW_NONNULL_LEAF)\n-DEF_LIB_BUILTIN        (BUILT_IN_STRCPY, \"strcpy\", BT_FN_STRING_STRING_CONST_STRING, ATTR_RET1_NOTHROW_NONNULL_LEAF)\n+DEF_LIB_BUILTIN_CHKP   (BUILT_IN_STRCPY, \"strcpy\", BT_FN_STRING_STRING_CONST_STRING, ATTR_RET1_NOTHROW_NONNULL_LEAF)\n DEF_LIB_BUILTIN        (BUILT_IN_STRCSPN, \"strcspn\", BT_FN_SIZE_CONST_STRING_CONST_STRING, ATTR_PURE_NOTHROW_NONNULL_LEAF)\n DEF_EXT_LIB_BUILTIN    (BUILT_IN_STRDUP, \"strdup\", BT_FN_STRING_CONST_STRING, ATTR_MALLOC_NOTHROW_NONNULL_LEAF)\n DEF_EXT_LIB_BUILTIN    (BUILT_IN_STRNDUP, \"strndup\", BT_FN_STRING_CONST_STRING_SIZE, ATTR_MALLOC_NOTHROW_NONNULL_LEAF)\n-DEF_LIB_BUILTIN        (BUILT_IN_STRLEN, \"strlen\", BT_FN_SIZE_CONST_STRING, ATTR_PURE_NOTHROW_NONNULL_LEAF)\n+DEF_LIB_BUILTIN_CHKP   (BUILT_IN_STRLEN, \"strlen\", BT_FN_SIZE_CONST_STRING, ATTR_PURE_NOTHROW_NONNULL_LEAF)\n DEF_EXT_LIB_BUILTIN    (BUILT_IN_STRNCASECMP, \"strncasecmp\", BT_FN_INT_CONST_STRING_CONST_STRING_SIZE, ATTR_PURE_NOTHROW_NONNULL_LEAF)\n DEF_LIB_BUILTIN        (BUILT_IN_STRNCAT, \"strncat\", BT_FN_STRING_STRING_CONST_STRING_SIZE, ATTR_NOTHROW_NONNULL_LEAF)\n DEF_LIB_BUILTIN        (BUILT_IN_STRNCMP, \"strncmp\", BT_FN_INT_CONST_STRING_CONST_STRING_SIZE, ATTR_PURE_NOTHROW_NONNULL_LEAF)\n@@ -844,14 +862,14 @@ DEF_BUILTIN_STUB (BUILT_IN_ALLOCA_WITH_ALIGN, \"__builtin_alloca_with_align\")\n \n /* Object size checking builtins.  */\n DEF_GCC_BUILTIN\t       (BUILT_IN_OBJECT_SIZE, \"object_size\", BT_FN_SIZE_CONST_PTR_INT, ATTR_PURE_NOTHROW_LEAF_LIST)\n-DEF_EXT_LIB_BUILTIN    (BUILT_IN_MEMCPY_CHK, \"__memcpy_chk\", BT_FN_PTR_PTR_CONST_PTR_SIZE_SIZE, ATTR_RET1_NOTHROW_NONNULL_LEAF)\n-DEF_EXT_LIB_BUILTIN    (BUILT_IN_MEMMOVE_CHK, \"__memmove_chk\", BT_FN_PTR_PTR_CONST_PTR_SIZE_SIZE, ATTR_RET1_NOTHROW_NONNULL_LEAF)\n-DEF_EXT_LIB_BUILTIN    (BUILT_IN_MEMPCPY_CHK, \"__mempcpy_chk\", BT_FN_PTR_PTR_CONST_PTR_SIZE_SIZE, ATTR_NOTHROW_NONNULL_LEAF)\n-DEF_EXT_LIB_BUILTIN    (BUILT_IN_MEMSET_CHK, \"__memset_chk\", BT_FN_PTR_PTR_INT_SIZE_SIZE, ATTR_NOTHROW_NONNULL_LEAF)\n-DEF_EXT_LIB_BUILTIN    (BUILT_IN_STPCPY_CHK, \"__stpcpy_chk\", BT_FN_STRING_STRING_CONST_STRING_SIZE, ATTR_NOTHROW_NONNULL_LEAF)\n+DEF_EXT_LIB_BUILTIN_CHKP (BUILT_IN_MEMCPY_CHK, \"__memcpy_chk\", BT_FN_PTR_PTR_CONST_PTR_SIZE_SIZE, ATTR_RET1_NOTHROW_NONNULL_LEAF)\n+DEF_EXT_LIB_BUILTIN_CHKP (BUILT_IN_MEMMOVE_CHK, \"__memmove_chk\", BT_FN_PTR_PTR_CONST_PTR_SIZE_SIZE, ATTR_RET1_NOTHROW_NONNULL_LEAF)\n+DEF_EXT_LIB_BUILTIN_CHKP (BUILT_IN_MEMPCPY_CHK, \"__mempcpy_chk\", BT_FN_PTR_PTR_CONST_PTR_SIZE_SIZE, ATTR_NOTHROW_NONNULL_LEAF)\n+DEF_EXT_LIB_BUILTIN_CHKP (BUILT_IN_MEMSET_CHK, \"__memset_chk\", BT_FN_PTR_PTR_INT_SIZE_SIZE, ATTR_NOTHROW_NONNULL_LEAF)\n+DEF_EXT_LIB_BUILTIN_CHKP (BUILT_IN_STPCPY_CHK, \"__stpcpy_chk\", BT_FN_STRING_STRING_CONST_STRING_SIZE, ATTR_NOTHROW_NONNULL_LEAF)\n DEF_EXT_LIB_BUILTIN    (BUILT_IN_STPNCPY_CHK, \"__stpncpy_chk\", BT_FN_STRING_STRING_CONST_STRING_SIZE_SIZE, ATTR_NOTHROW_NONNULL_LEAF)\n-DEF_EXT_LIB_BUILTIN    (BUILT_IN_STRCAT_CHK, \"__strcat_chk\", BT_FN_STRING_STRING_CONST_STRING_SIZE, ATTR_NOTHROW_NONNULL_LEAF)\n-DEF_EXT_LIB_BUILTIN    (BUILT_IN_STRCPY_CHK, \"__strcpy_chk\", BT_FN_STRING_STRING_CONST_STRING_SIZE, ATTR_NOTHROW_NONNULL_LEAF)\n+DEF_EXT_LIB_BUILTIN_CHKP (BUILT_IN_STRCAT_CHK, \"__strcat_chk\", BT_FN_STRING_STRING_CONST_STRING_SIZE, ATTR_NOTHROW_NONNULL_LEAF)\n+DEF_EXT_LIB_BUILTIN_CHKP (BUILT_IN_STRCPY_CHK, \"__strcpy_chk\", BT_FN_STRING_STRING_CONST_STRING_SIZE, ATTR_NOTHROW_NONNULL_LEAF)\n DEF_EXT_LIB_BUILTIN    (BUILT_IN_STRNCAT_CHK, \"__strncat_chk\", BT_FN_STRING_STRING_CONST_STRING_SIZE_SIZE, ATTR_NOTHROW_NONNULL_LEAF)\n DEF_EXT_LIB_BUILTIN    (BUILT_IN_STRNCPY_CHK, \"__strncpy_chk\", BT_FN_STRING_STRING_CONST_STRING_SIZE_SIZE, ATTR_NOTHROW_NONNULL_LEAF)\n DEF_EXT_LIB_BUILTIN    (BUILT_IN_SNPRINTF_CHK, \"__snprintf_chk\", BT_FN_INT_STRING_SIZE_INT_SIZE_CONST_STRING_VAR, ATTR_FORMAT_PRINTF_NOTHROW_5_6)"}, {"sha": "3aaf650ff73893fe194b8297396306d7d9bca008", "filename": "gcc/tree-core.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3bc4a35bde5c510fcd009134ad0c633ff759095/gcc%2Ftree-core.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3bc4a35bde5c510fcd009134ad0c633ff759095/gcc%2Ftree-core.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-core.h?ref=e3bc4a35bde5c510fcd009134ad0c633ff759095", "patch": "@@ -158,10 +158,14 @@ enum built_in_function {\n   BEGIN_CHKP_BUILTINS,\n \n #undef DEF_BUILTIN\n-#define DEF_BUILTIN(ENUM, N, C, T, LT, B, F, NA, AT, IM, COND) ENUM##_CHKP,\n+#define DEF_BUILTIN(ENUM, N, C, T, LT, B, F, NA, AT, IM, COND)\n+#undef DEF_BUILTIN_CHKP\n+#define DEF_BUILTIN_CHKP(ENUM, N, C, T, LT, B, F, NA, AT, IM, COND) \\\n+  ENUM##_CHKP = ENUM + BEGIN_CHKP_BUILTINS + 1,\n #include \"builtins.def\"\n+#undef DEF_BUILTIN_CHKP\n \n-  END_CHKP_BUILTINS,\n+  END_CHKP_BUILTINS = BEGIN_CHKP_BUILTINS * 2 + 1,\n \n   /* Complex division routines in libgcc.  These are done via builtins\n      because emit_library_call_value can't handle complex values.  */"}]}