{"sha": "89f9fe50b1185280cc8cfe89a248f7dac7727fee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODlmOWZlNTBiMTE4NTI4MGNjOGNmZTg5YTI0OGY3ZGFjNzcyN2ZlZQ==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2005-05-24T09:09:07Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2005-05-24T09:09:07Z"}, "message": "(rs6000_cpu_cpp_builtins): Define __NO_FPRS__ when 'f' class registers will\nnot be available.\n\nFrom-SVN: r100097", "tree": {"sha": "12045d44ee70fe9447535a338f8b144242abc05f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12045d44ee70fe9447535a338f8b144242abc05f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89f9fe50b1185280cc8cfe89a248f7dac7727fee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89f9fe50b1185280cc8cfe89a248f7dac7727fee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89f9fe50b1185280cc8cfe89a248f7dac7727fee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89f9fe50b1185280cc8cfe89a248f7dac7727fee/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0be4693a48dfdb376dcb42fad36b286c6f10e178", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0be4693a48dfdb376dcb42fad36b286c6f10e178", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0be4693a48dfdb376dcb42fad36b286c6f10e178"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "7e821ab869569b77fa9534406ca76361dc15c54e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89f9fe50b1185280cc8cfe89a248f7dac7727fee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89f9fe50b1185280cc8cfe89a248f7dac7727fee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=89f9fe50b1185280cc8cfe89a248f7dac7727fee", "patch": "@@ -1,3 +1,8 @@\n+2005-05-24  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/rs6000/rs6000-c.c (rs6000_cpu_cpp_builtins): Define\n+\t__NO_FPRS__ when 'f' class registers will not be available. \n+\n 2005-05-24  Kazuhiro Inaoka <inaoka.kazuhiro@renesas.com>\n \n \t* config/m32r/m32r.c (m32r_expand_block_move):  Return 0 if"}, {"sha": "41a4d296452ca929014f0e4c0f2afeae74945f75", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89f9fe50b1185280cc8cfe89a248f7dac7727fee/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89f9fe50b1185280cc8cfe89a248f7dac7727fee/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=89f9fe50b1185280cc8cfe89a248f7dac7727fee", "patch": "@@ -140,6 +140,10 @@ rs6000_cpu_cpp_builtins (cpp_reader *pfile)\n       break;\n     }\n \n+  /* Let the compiled code know if 'f' class registers will not be available.  */\n+  if (TARGET_SOFT_FLOAT || !TARGET_FPRS)\n+    builtin_define (\"__NO_FPRS__\");\n+\n   targetm.resolve_overloaded_builtin = altivec_resolve_overloaded_builtin;\n }\n "}]}