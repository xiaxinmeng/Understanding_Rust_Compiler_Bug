{"sha": "362303298ac4c1f93bda87535df2b726481d54bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzYyMzAzMjk4YWM0YzFmOTNiZGE4NzUzNWRmMmI3MjY0ODFkNTRiYg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-12-14T16:10:27Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-12-15T15:09:59Z"}, "message": "Add libcody\n\nIn order to separate compiler from build system, C++ Modules, as\nimplemented in GCC introduces a communication channel between those\ntwo entities.  This is implemented by libcody.  It is anticipated that\nother implementations will also implement this protocol, or use\nlibcody to provide it.\n\n\t* Makefile.def: Add libcody.\n\t* configure.ac: Add libcody.\n\t* Makefile.in: Regenerated.\n\t* configure: Regenerated.\n\tgcc/\n\t* Makefile.in (CODYINC, CODYLIB, CODYLIB_H): New. Use them.\n\tlibcody/\n\t* configure.ac: New.\n\t* CMakeLists.txt: New.\n\t* CODING.md: New.\n\t* CONTRIB.md: New.\n\t* LICENSE: New.\n\t* LICENSE.gcc: New.\n\t* Makefile.in: New.\n\t* Makesub.in: New.\n\t* README.md: New.\n\t* buffer.cc: New.\n\t* build-aux/config.guess: New.\n\t* build-aux/config.sub: New.\n\t* build-aux/install-sh: New.\n\t* client.cc: New.\n\t* cmake/libcody-config-ix.cmake\n\t* cody.hh: New.\n\t* config.h.in: New.\n\t* config.m4: New.\n\t* configure: New.\n\t* configure.ac: New.\n\t* dox.cfg.in: New.\n\t* fatal.cc: New.\n\t* gdbinit.in: New.\n\t* internal.hh: New.\n\t* netclient.cc: New.\n\t* netserver.cc: New.\n\t* packet.cc: New.\n\t* resolver.cc: New.\n\t* server.cc: New.\n\t* tests/01-serialize/connect.cc: New.\n\t* tests/01-serialize/decoder.cc: New.\n\t* tests/01-serialize/encoder.cc: New.\n\t* tests/02-comms/client-1.cc: New.\n\t* tests/02-comms/pivot-1.cc: New.\n\t* tests/02-comms/server-1.cc: New.\n\t* tests/Makesub.in: New.\n\t* tests/jouster: New.", "tree": {"sha": "b728e42aa7e93c1fd673e75ee0071b86b8ae9c6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b728e42aa7e93c1fd673e75ee0071b86b8ae9c6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/362303298ac4c1f93bda87535df2b726481d54bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/362303298ac4c1f93bda87535df2b726481d54bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/362303298ac4c1f93bda87535df2b726481d54bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/362303298ac4c1f93bda87535df2b726481d54bb/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5271279d6e86df0d0203c11fc4c3e3c99a14bb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5271279d6e86df0d0203c11fc4c3e3c99a14bb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5271279d6e86df0d0203c11fc4c3e3c99a14bb7"}], "stats": {"total": 16305, "additions": 16301, "deletions": 4}, "files": [{"sha": "3bb3a811dde05d78037efc9f74ffcb91069afde7", "filename": "Makefile.def", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/Makefile.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/Makefile.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.def?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -81,6 +81,15 @@ host_modules= { module= itcl; };\n host_modules= { module= ld; bootstrap=true; };\n host_modules= { module= libbacktrace; bootstrap=true; };\n host_modules= { module= libcpp; bootstrap=true; };\n+// As with libiconv, don't install any of libcody\n+host_modules= { module= libcody; bootstrap=true;\n+\t\tno_install= true;\n+\t\tmissing= pdf;\n+\t\tmissing= html;\n+\t\tmissing= info;\n+\t\tmissing= install-pdf;\n+\t\tmissing= install-html;\n+\t\tmissing= install-info; };\n host_modules= { module= libdecnumber; bootstrap=true; };\n host_modules= { module= libgui; };\n host_modules= { module= libiberty; bootstrap=true;\n@@ -347,6 +356,7 @@ dependencies = { module=all-gcc; on=all-build-libcpp; };\n dependencies = { module=all-gcc; on=all-zlib; };\n dependencies = { module=all-gcc; on=all-libbacktrace; hard=true; };\n dependencies = { module=all-gcc; on=all-libcpp; hard=true; };\n+dependencies = { module=all-gcc; on=all-libcody; hard=true; };\n dependencies = { module=all-gcc; on=all-libdecnumber; hard=true; };\n dependencies = { module=all-gcc; on=all-libiberty; };\n dependencies = { module=all-gcc; on=all-fixincludes; };"}, {"sha": "d9d2d1d8e6a94aa0a6bb1549179f2ec4e7e2fba1", "filename": "Makefile.in", "status": "modified", "additions": 1146, "deletions": 0, "changes": 1146, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -1017,6 +1017,7 @@ configure-host:  \\\n     maybe-configure-ld \\\n     maybe-configure-libbacktrace \\\n     maybe-configure-libcpp \\\n+    maybe-configure-libcody \\\n     maybe-configure-libdecnumber \\\n     maybe-configure-libgui \\\n     maybe-configure-libiberty \\\n@@ -1163,6 +1164,9 @@ all-host: maybe-all-libbacktrace\n @if libcpp-no-bootstrap\n all-host: maybe-all-libcpp\n @endif libcpp-no-bootstrap\n+@if libcody-no-bootstrap\n+all-host: maybe-all-libcody\n+@endif libcody-no-bootstrap\n @if libdecnumber-no-bootstrap\n all-host: maybe-all-libdecnumber\n @endif libdecnumber-no-bootstrap\n@@ -1281,6 +1285,7 @@ info-host: maybe-info-itcl\n info-host: maybe-info-ld\n info-host: maybe-info-libbacktrace\n info-host: maybe-info-libcpp\n+info-host: maybe-info-libcody\n info-host: maybe-info-libdecnumber\n info-host: maybe-info-libgui\n info-host: maybe-info-libiberty\n@@ -1370,6 +1375,7 @@ dvi-host: maybe-dvi-itcl\n dvi-host: maybe-dvi-ld\n dvi-host: maybe-dvi-libbacktrace\n dvi-host: maybe-dvi-libcpp\n+dvi-host: maybe-dvi-libcody\n dvi-host: maybe-dvi-libdecnumber\n dvi-host: maybe-dvi-libgui\n dvi-host: maybe-dvi-libiberty\n@@ -1459,6 +1465,7 @@ pdf-host: maybe-pdf-itcl\n pdf-host: maybe-pdf-ld\n pdf-host: maybe-pdf-libbacktrace\n pdf-host: maybe-pdf-libcpp\n+pdf-host: maybe-pdf-libcody\n pdf-host: maybe-pdf-libdecnumber\n pdf-host: maybe-pdf-libgui\n pdf-host: maybe-pdf-libiberty\n@@ -1548,6 +1555,7 @@ html-host: maybe-html-itcl\n html-host: maybe-html-ld\n html-host: maybe-html-libbacktrace\n html-host: maybe-html-libcpp\n+html-host: maybe-html-libcody\n html-host: maybe-html-libdecnumber\n html-host: maybe-html-libgui\n html-host: maybe-html-libiberty\n@@ -1637,6 +1645,7 @@ TAGS-host: maybe-TAGS-itcl\n TAGS-host: maybe-TAGS-ld\n TAGS-host: maybe-TAGS-libbacktrace\n TAGS-host: maybe-TAGS-libcpp\n+TAGS-host: maybe-TAGS-libcody\n TAGS-host: maybe-TAGS-libdecnumber\n TAGS-host: maybe-TAGS-libgui\n TAGS-host: maybe-TAGS-libiberty\n@@ -1726,6 +1735,7 @@ install-info-host: maybe-install-info-itcl\n install-info-host: maybe-install-info-ld\n install-info-host: maybe-install-info-libbacktrace\n install-info-host: maybe-install-info-libcpp\n+install-info-host: maybe-install-info-libcody\n install-info-host: maybe-install-info-libdecnumber\n install-info-host: maybe-install-info-libgui\n install-info-host: maybe-install-info-libiberty\n@@ -1815,6 +1825,7 @@ install-pdf-host: maybe-install-pdf-itcl\n install-pdf-host: maybe-install-pdf-ld\n install-pdf-host: maybe-install-pdf-libbacktrace\n install-pdf-host: maybe-install-pdf-libcpp\n+install-pdf-host: maybe-install-pdf-libcody\n install-pdf-host: maybe-install-pdf-libdecnumber\n install-pdf-host: maybe-install-pdf-libgui\n install-pdf-host: maybe-install-pdf-libiberty\n@@ -1904,6 +1915,7 @@ install-html-host: maybe-install-html-itcl\n install-html-host: maybe-install-html-ld\n install-html-host: maybe-install-html-libbacktrace\n install-html-host: maybe-install-html-libcpp\n+install-html-host: maybe-install-html-libcody\n install-html-host: maybe-install-html-libdecnumber\n install-html-host: maybe-install-html-libgui\n install-html-host: maybe-install-html-libiberty\n@@ -1993,6 +2005,7 @@ installcheck-host: maybe-installcheck-itcl\n installcheck-host: maybe-installcheck-ld\n installcheck-host: maybe-installcheck-libbacktrace\n installcheck-host: maybe-installcheck-libcpp\n+installcheck-host: maybe-installcheck-libcody\n installcheck-host: maybe-installcheck-libdecnumber\n installcheck-host: maybe-installcheck-libgui\n installcheck-host: maybe-installcheck-libiberty\n@@ -2082,6 +2095,7 @@ mostlyclean-host: maybe-mostlyclean-itcl\n mostlyclean-host: maybe-mostlyclean-ld\n mostlyclean-host: maybe-mostlyclean-libbacktrace\n mostlyclean-host: maybe-mostlyclean-libcpp\n+mostlyclean-host: maybe-mostlyclean-libcody\n mostlyclean-host: maybe-mostlyclean-libdecnumber\n mostlyclean-host: maybe-mostlyclean-libgui\n mostlyclean-host: maybe-mostlyclean-libiberty\n@@ -2171,6 +2185,7 @@ clean-host: maybe-clean-itcl\n clean-host: maybe-clean-ld\n clean-host: maybe-clean-libbacktrace\n clean-host: maybe-clean-libcpp\n+clean-host: maybe-clean-libcody\n clean-host: maybe-clean-libdecnumber\n clean-host: maybe-clean-libgui\n clean-host: maybe-clean-libiberty\n@@ -2260,6 +2275,7 @@ distclean-host: maybe-distclean-itcl\n distclean-host: maybe-distclean-ld\n distclean-host: maybe-distclean-libbacktrace\n distclean-host: maybe-distclean-libcpp\n+distclean-host: maybe-distclean-libcody\n distclean-host: maybe-distclean-libdecnumber\n distclean-host: maybe-distclean-libgui\n distclean-host: maybe-distclean-libiberty\n@@ -2349,6 +2365,7 @@ maintainer-clean-host: maybe-maintainer-clean-itcl\n maintainer-clean-host: maybe-maintainer-clean-ld\n maintainer-clean-host: maybe-maintainer-clean-libbacktrace\n maintainer-clean-host: maybe-maintainer-clean-libcpp\n+maintainer-clean-host: maybe-maintainer-clean-libcody\n maintainer-clean-host: maybe-maintainer-clean-libdecnumber\n maintainer-clean-host: maybe-maintainer-clean-libgui\n maintainer-clean-host: maybe-maintainer-clean-libiberty\n@@ -2494,6 +2511,7 @@ check-host:  \\\n     maybe-check-ld \\\n     maybe-check-libbacktrace \\\n     maybe-check-libcpp \\\n+    maybe-check-libcody \\\n     maybe-check-libdecnumber \\\n     maybe-check-libgui \\\n     maybe-check-libiberty \\\n@@ -2630,6 +2648,7 @@ install-host-nogcc:  \\\n     maybe-install-ld \\\n     maybe-install-libbacktrace \\\n     maybe-install-libcpp \\\n+    maybe-install-libcody \\\n     maybe-install-libdecnumber \\\n     maybe-install-libgui \\\n     maybe-install-libiberty \\\n@@ -2683,6 +2702,7 @@ install-host:  \\\n     maybe-install-ld \\\n     maybe-install-libbacktrace \\\n     maybe-install-libcpp \\\n+    maybe-install-libcody \\\n     maybe-install-libdecnumber \\\n     maybe-install-libgui \\\n     maybe-install-libiberty \\\n@@ -2792,6 +2812,7 @@ install-strip-host:  \\\n     maybe-install-strip-ld \\\n     maybe-install-strip-libbacktrace \\\n     maybe-install-strip-libcpp \\\n+    maybe-install-strip-libcody \\\n     maybe-install-strip-libdecnumber \\\n     maybe-install-strip-libgui \\\n     maybe-install-strip-libiberty \\\n@@ -25050,6 +25071,1015 @@ maintainer-clean-libcpp:\n \n \n \n+.PHONY: configure-libcody maybe-configure-libcody\n+maybe-configure-libcody:\n+@if gcc-bootstrap\n+configure-libcody: stage_current\n+@endif gcc-bootstrap\n+@if libcody\n+maybe-configure-libcody: configure-libcody\n+configure-libcody: \n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\ttest ! -f $(HOST_SUBDIR)/libcody/Makefile || exit 0; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody; \\\n+\t$(HOST_EXPORTS)  \\\n+\techo Configuring in $(HOST_SUBDIR)/libcody; \\\n+\tcd \"$(HOST_SUBDIR)/libcody\" || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libcody/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libcody; \\\n+\t$(SHELL) \\\n+\t  $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias}  \\\n+\t  || exit 1\n+@endif libcody\n+\n+\n+\n+.PHONY: configure-stage1-libcody maybe-configure-stage1-libcody\n+maybe-configure-stage1-libcody:\n+@if libcody-bootstrap\n+maybe-configure-stage1-libcody: configure-stage1-libcody\n+configure-stage1-libcody:\n+\t@[ $(current_stage) = stage1 ] || $(MAKE) stage1-start\n+\t@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGE1_TFLAGS)\"; \\\n+\ttest ! -f $(HOST_SUBDIR)/libcody/Makefile || exit 0; \\\n+\t$(HOST_EXPORTS) \\\n+\tCFLAGS=\"$(STAGE1_CFLAGS)\"; export CFLAGS; \\\n+\tCXXFLAGS=\"$(STAGE1_CXXFLAGS)\"; export CXXFLAGS; \\\n+\tLIBCFLAGS=\"$(LIBCFLAGS)\"; export LIBCFLAGS;  \\\n+\techo Configuring stage 1 in $(HOST_SUBDIR)/libcody; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody; \\\n+\tcd $(HOST_SUBDIR)/libcody || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libcody/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libcody; \\\n+\t$(SHELL) $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias} \\\n+\t   \\\n+\t  $(STAGE1_CONFIGURE_FLAGS)\n+@endif libcody-bootstrap\n+\n+.PHONY: configure-stage2-libcody maybe-configure-stage2-libcody\n+maybe-configure-stage2-libcody:\n+@if libcody-bootstrap\n+maybe-configure-stage2-libcody: configure-stage2-libcody\n+configure-stage2-libcody:\n+\t@[ $(current_stage) = stage2 ] || $(MAKE) stage2-start\n+\t@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGE2_TFLAGS)\"; \\\n+\ttest ! -f $(HOST_SUBDIR)/libcody/Makefile || exit 0; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS) \\\n+\tCFLAGS=\"$(STAGE2_CFLAGS)\"; export CFLAGS; \\\n+\tCXXFLAGS=\"$(STAGE2_CXXFLAGS)\"; export CXXFLAGS; \\\n+\tLIBCFLAGS=\"$(STAGE2_CFLAGS)\"; export LIBCFLAGS;  \\\n+\techo Configuring stage 2 in $(HOST_SUBDIR)/libcody; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody; \\\n+\tcd $(HOST_SUBDIR)/libcody || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libcody/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libcody; \\\n+\t$(SHELL) $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias} \\\n+\t  --with-build-libsubdir=$(HOST_SUBDIR) \\\n+\t  $(STAGE2_CONFIGURE_FLAGS)\n+@endif libcody-bootstrap\n+\n+.PHONY: configure-stage3-libcody maybe-configure-stage3-libcody\n+maybe-configure-stage3-libcody:\n+@if libcody-bootstrap\n+maybe-configure-stage3-libcody: configure-stage3-libcody\n+configure-stage3-libcody:\n+\t@[ $(current_stage) = stage3 ] || $(MAKE) stage3-start\n+\t@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGE3_TFLAGS)\"; \\\n+\ttest ! -f $(HOST_SUBDIR)/libcody/Makefile || exit 0; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS) \\\n+\tCFLAGS=\"$(STAGE3_CFLAGS)\"; export CFLAGS; \\\n+\tCXXFLAGS=\"$(STAGE3_CXXFLAGS)\"; export CXXFLAGS; \\\n+\tLIBCFLAGS=\"$(STAGE3_CFLAGS)\"; export LIBCFLAGS;  \\\n+\techo Configuring stage 3 in $(HOST_SUBDIR)/libcody; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody; \\\n+\tcd $(HOST_SUBDIR)/libcody || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libcody/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libcody; \\\n+\t$(SHELL) $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias} \\\n+\t  --with-build-libsubdir=$(HOST_SUBDIR) \\\n+\t  $(STAGE3_CONFIGURE_FLAGS)\n+@endif libcody-bootstrap\n+\n+.PHONY: configure-stage4-libcody maybe-configure-stage4-libcody\n+maybe-configure-stage4-libcody:\n+@if libcody-bootstrap\n+maybe-configure-stage4-libcody: configure-stage4-libcody\n+configure-stage4-libcody:\n+\t@[ $(current_stage) = stage4 ] || $(MAKE) stage4-start\n+\t@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGE4_TFLAGS)\"; \\\n+\ttest ! -f $(HOST_SUBDIR)/libcody/Makefile || exit 0; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS) \\\n+\tCFLAGS=\"$(STAGE4_CFLAGS)\"; export CFLAGS; \\\n+\tCXXFLAGS=\"$(STAGE4_CXXFLAGS)\"; export CXXFLAGS; \\\n+\tLIBCFLAGS=\"$(STAGE4_CFLAGS)\"; export LIBCFLAGS;  \\\n+\techo Configuring stage 4 in $(HOST_SUBDIR)/libcody; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody; \\\n+\tcd $(HOST_SUBDIR)/libcody || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libcody/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libcody; \\\n+\t$(SHELL) $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias} \\\n+\t  --with-build-libsubdir=$(HOST_SUBDIR) \\\n+\t  $(STAGE4_CONFIGURE_FLAGS)\n+@endif libcody-bootstrap\n+\n+.PHONY: configure-stageprofile-libcody maybe-configure-stageprofile-libcody\n+maybe-configure-stageprofile-libcody:\n+@if libcody-bootstrap\n+maybe-configure-stageprofile-libcody: configure-stageprofile-libcody\n+configure-stageprofile-libcody:\n+\t@[ $(current_stage) = stageprofile ] || $(MAKE) stageprofile-start\n+\t@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGEprofile_TFLAGS)\"; \\\n+\ttest ! -f $(HOST_SUBDIR)/libcody/Makefile || exit 0; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS) \\\n+\tCFLAGS=\"$(STAGEprofile_CFLAGS)\"; export CFLAGS; \\\n+\tCXXFLAGS=\"$(STAGEprofile_CXXFLAGS)\"; export CXXFLAGS; \\\n+\tLIBCFLAGS=\"$(STAGEprofile_CFLAGS)\"; export LIBCFLAGS;  \\\n+\techo Configuring stage profile in $(HOST_SUBDIR)/libcody; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody; \\\n+\tcd $(HOST_SUBDIR)/libcody || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libcody/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libcody; \\\n+\t$(SHELL) $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias} \\\n+\t  --with-build-libsubdir=$(HOST_SUBDIR) \\\n+\t  $(STAGEprofile_CONFIGURE_FLAGS)\n+@endif libcody-bootstrap\n+\n+.PHONY: configure-stagetrain-libcody maybe-configure-stagetrain-libcody\n+maybe-configure-stagetrain-libcody:\n+@if libcody-bootstrap\n+maybe-configure-stagetrain-libcody: configure-stagetrain-libcody\n+configure-stagetrain-libcody:\n+\t@[ $(current_stage) = stagetrain ] || $(MAKE) stagetrain-start\n+\t@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGEtrain_TFLAGS)\"; \\\n+\ttest ! -f $(HOST_SUBDIR)/libcody/Makefile || exit 0; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS) \\\n+\tCFLAGS=\"$(STAGEtrain_CFLAGS)\"; export CFLAGS; \\\n+\tCXXFLAGS=\"$(STAGEtrain_CXXFLAGS)\"; export CXXFLAGS; \\\n+\tLIBCFLAGS=\"$(STAGEtrain_CFLAGS)\"; export LIBCFLAGS;  \\\n+\techo Configuring stage train in $(HOST_SUBDIR)/libcody; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody; \\\n+\tcd $(HOST_SUBDIR)/libcody || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libcody/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libcody; \\\n+\t$(SHELL) $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias} \\\n+\t  --with-build-libsubdir=$(HOST_SUBDIR) \\\n+\t  $(STAGEtrain_CONFIGURE_FLAGS)\n+@endif libcody-bootstrap\n+\n+.PHONY: configure-stagefeedback-libcody maybe-configure-stagefeedback-libcody\n+maybe-configure-stagefeedback-libcody:\n+@if libcody-bootstrap\n+maybe-configure-stagefeedback-libcody: configure-stagefeedback-libcody\n+configure-stagefeedback-libcody:\n+\t@[ $(current_stage) = stagefeedback ] || $(MAKE) stagefeedback-start\n+\t@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGEfeedback_TFLAGS)\"; \\\n+\ttest ! -f $(HOST_SUBDIR)/libcody/Makefile || exit 0; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS) \\\n+\tCFLAGS=\"$(STAGEfeedback_CFLAGS)\"; export CFLAGS; \\\n+\tCXXFLAGS=\"$(STAGEfeedback_CXXFLAGS)\"; export CXXFLAGS; \\\n+\tLIBCFLAGS=\"$(STAGEfeedback_CFLAGS)\"; export LIBCFLAGS;  \\\n+\techo Configuring stage feedback in $(HOST_SUBDIR)/libcody; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody; \\\n+\tcd $(HOST_SUBDIR)/libcody || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libcody/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libcody; \\\n+\t$(SHELL) $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias} \\\n+\t  --with-build-libsubdir=$(HOST_SUBDIR) \\\n+\t  $(STAGEfeedback_CONFIGURE_FLAGS)\n+@endif libcody-bootstrap\n+\n+.PHONY: configure-stageautoprofile-libcody maybe-configure-stageautoprofile-libcody\n+maybe-configure-stageautoprofile-libcody:\n+@if libcody-bootstrap\n+maybe-configure-stageautoprofile-libcody: configure-stageautoprofile-libcody\n+configure-stageautoprofile-libcody:\n+\t@[ $(current_stage) = stageautoprofile ] || $(MAKE) stageautoprofile-start\n+\t@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGEautoprofile_TFLAGS)\"; \\\n+\ttest ! -f $(HOST_SUBDIR)/libcody/Makefile || exit 0; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS) \\\n+\tCFLAGS=\"$(STAGEautoprofile_CFLAGS)\"; export CFLAGS; \\\n+\tCXXFLAGS=\"$(STAGEautoprofile_CXXFLAGS)\"; export CXXFLAGS; \\\n+\tLIBCFLAGS=\"$(STAGEautoprofile_CFLAGS)\"; export LIBCFLAGS;  \\\n+\techo Configuring stage autoprofile in $(HOST_SUBDIR)/libcody; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody; \\\n+\tcd $(HOST_SUBDIR)/libcody || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libcody/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libcody; \\\n+\t$(SHELL) $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias} \\\n+\t  --with-build-libsubdir=$(HOST_SUBDIR) \\\n+\t  $(STAGEautoprofile_CONFIGURE_FLAGS)\n+@endif libcody-bootstrap\n+\n+.PHONY: configure-stageautofeedback-libcody maybe-configure-stageautofeedback-libcody\n+maybe-configure-stageautofeedback-libcody:\n+@if libcody-bootstrap\n+maybe-configure-stageautofeedback-libcody: configure-stageautofeedback-libcody\n+configure-stageautofeedback-libcody:\n+\t@[ $(current_stage) = stageautofeedback ] || $(MAKE) stageautofeedback-start\n+\t@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGEautofeedback_TFLAGS)\"; \\\n+\ttest ! -f $(HOST_SUBDIR)/libcody/Makefile || exit 0; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS) \\\n+\tCFLAGS=\"$(STAGEautofeedback_CFLAGS)\"; export CFLAGS; \\\n+\tCXXFLAGS=\"$(STAGEautofeedback_CXXFLAGS)\"; export CXXFLAGS; \\\n+\tLIBCFLAGS=\"$(STAGEautofeedback_CFLAGS)\"; export LIBCFLAGS;  \\\n+\techo Configuring stage autofeedback in $(HOST_SUBDIR)/libcody; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody; \\\n+\tcd $(HOST_SUBDIR)/libcody || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libcody/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libcody; \\\n+\t$(SHELL) $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias} \\\n+\t  --with-build-libsubdir=$(HOST_SUBDIR) \\\n+\t  $(STAGEautofeedback_CONFIGURE_FLAGS)\n+@endif libcody-bootstrap\n+\n+\n+\n+\n+\n+.PHONY: all-libcody maybe-all-libcody\n+maybe-all-libcody:\n+@if gcc-bootstrap\n+all-libcody: stage_current\n+@endif gcc-bootstrap\n+@if libcody\n+TARGET-libcody=all\n+maybe-all-libcody: all-libcody\n+all-libcody: configure-libcody\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS)  \\\n+\t(cd $(HOST_SUBDIR)/libcody && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n+\t\t$(TARGET-libcody))\n+@endif libcody\n+\n+\n+\n+.PHONY: all-stage1-libcody maybe-all-stage1-libcody\n+.PHONY: clean-stage1-libcody maybe-clean-stage1-libcody\n+maybe-all-stage1-libcody:\n+maybe-clean-stage1-libcody:\n+@if libcody-bootstrap\n+maybe-all-stage1-libcody: all-stage1-libcody\n+all-stage1: all-stage1-libcody\n+TARGET-stage1-libcody = $(TARGET-libcody)\n+all-stage1-libcody: configure-stage1-libcody\n+\t@[ $(current_stage) = stage1 ] || $(MAKE) stage1-start\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGE1_TFLAGS)\"; \\\n+\t$(HOST_EXPORTS)  \\\n+\tcd $(HOST_SUBDIR)/libcody && \\\n+\t \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) \\\n+\t\tCFLAGS=\"$(STAGE1_CFLAGS)\" \\\n+\t\tGENERATOR_CFLAGS=\"$(STAGE1_GENERATOR_CFLAGS)\" \\\n+\t\tCXXFLAGS=\"$(STAGE1_CXXFLAGS)\" \\\n+\t\tLIBCFLAGS=\"$(LIBCFLAGS)\" \\\n+\t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n+\t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n+\t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\t$(EXTRA_HOST_FLAGS)  \\\n+\t\t$(STAGE1_FLAGS_TO_PASS)  \\\n+\t\tTFLAGS=\"$(STAGE1_TFLAGS)\"  \\\n+\t\t$(TARGET-stage1-libcody)\n+\n+maybe-clean-stage1-libcody: clean-stage1-libcody\n+clean-stage1: clean-stage1-libcody\n+clean-stage1-libcody:\n+\t@if [ $(current_stage) = stage1 ]; then \\\n+\t  [ -f $(HOST_SUBDIR)/libcody/Makefile ] || exit 0; \\\n+\telse \\\n+\t  [ -f $(HOST_SUBDIR)/stage1-libcody/Makefile ] || exit 0; \\\n+\t  $(MAKE) stage1-start; \\\n+\tfi; \\\n+\tcd $(HOST_SUBDIR)/libcody && \\\n+\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n+\t$(STAGE1_FLAGS_TO_PASS)  clean\n+@endif libcody-bootstrap\n+\n+\n+.PHONY: all-stage2-libcody maybe-all-stage2-libcody\n+.PHONY: clean-stage2-libcody maybe-clean-stage2-libcody\n+maybe-all-stage2-libcody:\n+maybe-clean-stage2-libcody:\n+@if libcody-bootstrap\n+maybe-all-stage2-libcody: all-stage2-libcody\n+all-stage2: all-stage2-libcody\n+TARGET-stage2-libcody = $(TARGET-libcody)\n+all-stage2-libcody: configure-stage2-libcody\n+\t@[ $(current_stage) = stage2 ] || $(MAKE) stage2-start\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGE2_TFLAGS)\"; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS)  \\\n+\tcd $(HOST_SUBDIR)/libcody && \\\n+\t \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) \\\n+\t\tCFLAGS=\"$(STAGE2_CFLAGS)\" \\\n+\t\tGENERATOR_CFLAGS=\"$(STAGE2_GENERATOR_CFLAGS)\" \\\n+\t\tCXXFLAGS=\"$(STAGE2_CXXFLAGS)\" \\\n+\t\tLIBCFLAGS=\"$(STAGE2_CFLAGS)\" \\\n+\t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n+\t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n+\t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\tTFLAGS=\"$(STAGE2_TFLAGS)\"  \\\n+\t\t$(TARGET-stage2-libcody)\n+\n+maybe-clean-stage2-libcody: clean-stage2-libcody\n+clean-stage2: clean-stage2-libcody\n+clean-stage2-libcody:\n+\t@if [ $(current_stage) = stage2 ]; then \\\n+\t  [ -f $(HOST_SUBDIR)/libcody/Makefile ] || exit 0; \\\n+\telse \\\n+\t  [ -f $(HOST_SUBDIR)/stage2-libcody/Makefile ] || exit 0; \\\n+\t  $(MAKE) stage2-start; \\\n+\tfi; \\\n+\tcd $(HOST_SUBDIR)/libcody && \\\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+@endif libcody-bootstrap\n+\n+\n+.PHONY: all-stage3-libcody maybe-all-stage3-libcody\n+.PHONY: clean-stage3-libcody maybe-clean-stage3-libcody\n+maybe-all-stage3-libcody:\n+maybe-clean-stage3-libcody:\n+@if libcody-bootstrap\n+maybe-all-stage3-libcody: all-stage3-libcody\n+all-stage3: all-stage3-libcody\n+TARGET-stage3-libcody = $(TARGET-libcody)\n+all-stage3-libcody: configure-stage3-libcody\n+\t@[ $(current_stage) = stage3 ] || $(MAKE) stage3-start\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGE3_TFLAGS)\"; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS)  \\\n+\tcd $(HOST_SUBDIR)/libcody && \\\n+\t \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) \\\n+\t\tCFLAGS=\"$(STAGE3_CFLAGS)\" \\\n+\t\tGENERATOR_CFLAGS=\"$(STAGE3_GENERATOR_CFLAGS)\" \\\n+\t\tCXXFLAGS=\"$(STAGE3_CXXFLAGS)\" \\\n+\t\tLIBCFLAGS=\"$(STAGE3_CFLAGS)\" \\\n+\t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n+\t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n+\t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\tTFLAGS=\"$(STAGE3_TFLAGS)\"  \\\n+\t\t$(TARGET-stage3-libcody)\n+\n+maybe-clean-stage3-libcody: clean-stage3-libcody\n+clean-stage3: clean-stage3-libcody\n+clean-stage3-libcody:\n+\t@if [ $(current_stage) = stage3 ]; then \\\n+\t  [ -f $(HOST_SUBDIR)/libcody/Makefile ] || exit 0; \\\n+\telse \\\n+\t  [ -f $(HOST_SUBDIR)/stage3-libcody/Makefile ] || exit 0; \\\n+\t  $(MAKE) stage3-start; \\\n+\tfi; \\\n+\tcd $(HOST_SUBDIR)/libcody && \\\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+@endif libcody-bootstrap\n+\n+\n+.PHONY: all-stage4-libcody maybe-all-stage4-libcody\n+.PHONY: clean-stage4-libcody maybe-clean-stage4-libcody\n+maybe-all-stage4-libcody:\n+maybe-clean-stage4-libcody:\n+@if libcody-bootstrap\n+maybe-all-stage4-libcody: all-stage4-libcody\n+all-stage4: all-stage4-libcody\n+TARGET-stage4-libcody = $(TARGET-libcody)\n+all-stage4-libcody: configure-stage4-libcody\n+\t@[ $(current_stage) = stage4 ] || $(MAKE) stage4-start\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGE4_TFLAGS)\"; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS)  \\\n+\tcd $(HOST_SUBDIR)/libcody && \\\n+\t \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) \\\n+\t\tCFLAGS=\"$(STAGE4_CFLAGS)\" \\\n+\t\tGENERATOR_CFLAGS=\"$(STAGE4_GENERATOR_CFLAGS)\" \\\n+\t\tCXXFLAGS=\"$(STAGE4_CXXFLAGS)\" \\\n+\t\tLIBCFLAGS=\"$(STAGE4_CFLAGS)\" \\\n+\t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n+\t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n+\t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\tTFLAGS=\"$(STAGE4_TFLAGS)\"  \\\n+\t\t$(TARGET-stage4-libcody)\n+\n+maybe-clean-stage4-libcody: clean-stage4-libcody\n+clean-stage4: clean-stage4-libcody\n+clean-stage4-libcody:\n+\t@if [ $(current_stage) = stage4 ]; then \\\n+\t  [ -f $(HOST_SUBDIR)/libcody/Makefile ] || exit 0; \\\n+\telse \\\n+\t  [ -f $(HOST_SUBDIR)/stage4-libcody/Makefile ] || exit 0; \\\n+\t  $(MAKE) stage4-start; \\\n+\tfi; \\\n+\tcd $(HOST_SUBDIR)/libcody && \\\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+@endif libcody-bootstrap\n+\n+\n+.PHONY: all-stageprofile-libcody maybe-all-stageprofile-libcody\n+.PHONY: clean-stageprofile-libcody maybe-clean-stageprofile-libcody\n+maybe-all-stageprofile-libcody:\n+maybe-clean-stageprofile-libcody:\n+@if libcody-bootstrap\n+maybe-all-stageprofile-libcody: all-stageprofile-libcody\n+all-stageprofile: all-stageprofile-libcody\n+TARGET-stageprofile-libcody = $(TARGET-libcody)\n+all-stageprofile-libcody: configure-stageprofile-libcody\n+\t@[ $(current_stage) = stageprofile ] || $(MAKE) stageprofile-start\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGEprofile_TFLAGS)\"; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS)  \\\n+\tcd $(HOST_SUBDIR)/libcody && \\\n+\t \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) \\\n+\t\tCFLAGS=\"$(STAGEprofile_CFLAGS)\" \\\n+\t\tGENERATOR_CFLAGS=\"$(STAGEprofile_GENERATOR_CFLAGS)\" \\\n+\t\tCXXFLAGS=\"$(STAGEprofile_CXXFLAGS)\" \\\n+\t\tLIBCFLAGS=\"$(STAGEprofile_CFLAGS)\" \\\n+\t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n+\t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n+\t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\tTFLAGS=\"$(STAGEprofile_TFLAGS)\"  \\\n+\t\t$(TARGET-stageprofile-libcody)\n+\n+maybe-clean-stageprofile-libcody: clean-stageprofile-libcody\n+clean-stageprofile: clean-stageprofile-libcody\n+clean-stageprofile-libcody:\n+\t@if [ $(current_stage) = stageprofile ]; then \\\n+\t  [ -f $(HOST_SUBDIR)/libcody/Makefile ] || exit 0; \\\n+\telse \\\n+\t  [ -f $(HOST_SUBDIR)/stageprofile-libcody/Makefile ] || exit 0; \\\n+\t  $(MAKE) stageprofile-start; \\\n+\tfi; \\\n+\tcd $(HOST_SUBDIR)/libcody && \\\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+@endif libcody-bootstrap\n+\n+\n+.PHONY: all-stagetrain-libcody maybe-all-stagetrain-libcody\n+.PHONY: clean-stagetrain-libcody maybe-clean-stagetrain-libcody\n+maybe-all-stagetrain-libcody:\n+maybe-clean-stagetrain-libcody:\n+@if libcody-bootstrap\n+maybe-all-stagetrain-libcody: all-stagetrain-libcody\n+all-stagetrain: all-stagetrain-libcody\n+TARGET-stagetrain-libcody = $(TARGET-libcody)\n+all-stagetrain-libcody: configure-stagetrain-libcody\n+\t@[ $(current_stage) = stagetrain ] || $(MAKE) stagetrain-start\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGEtrain_TFLAGS)\"; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS)  \\\n+\tcd $(HOST_SUBDIR)/libcody && \\\n+\t \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) \\\n+\t\tCFLAGS=\"$(STAGEtrain_CFLAGS)\" \\\n+\t\tGENERATOR_CFLAGS=\"$(STAGEtrain_GENERATOR_CFLAGS)\" \\\n+\t\tCXXFLAGS=\"$(STAGEtrain_CXXFLAGS)\" \\\n+\t\tLIBCFLAGS=\"$(STAGEtrain_CFLAGS)\" \\\n+\t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n+\t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n+\t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\tTFLAGS=\"$(STAGEtrain_TFLAGS)\"  \\\n+\t\t$(TARGET-stagetrain-libcody)\n+\n+maybe-clean-stagetrain-libcody: clean-stagetrain-libcody\n+clean-stagetrain: clean-stagetrain-libcody\n+clean-stagetrain-libcody:\n+\t@if [ $(current_stage) = stagetrain ]; then \\\n+\t  [ -f $(HOST_SUBDIR)/libcody/Makefile ] || exit 0; \\\n+\telse \\\n+\t  [ -f $(HOST_SUBDIR)/stagetrain-libcody/Makefile ] || exit 0; \\\n+\t  $(MAKE) stagetrain-start; \\\n+\tfi; \\\n+\tcd $(HOST_SUBDIR)/libcody && \\\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+@endif libcody-bootstrap\n+\n+\n+.PHONY: all-stagefeedback-libcody maybe-all-stagefeedback-libcody\n+.PHONY: clean-stagefeedback-libcody maybe-clean-stagefeedback-libcody\n+maybe-all-stagefeedback-libcody:\n+maybe-clean-stagefeedback-libcody:\n+@if libcody-bootstrap\n+maybe-all-stagefeedback-libcody: all-stagefeedback-libcody\n+all-stagefeedback: all-stagefeedback-libcody\n+TARGET-stagefeedback-libcody = $(TARGET-libcody)\n+all-stagefeedback-libcody: configure-stagefeedback-libcody\n+\t@[ $(current_stage) = stagefeedback ] || $(MAKE) stagefeedback-start\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGEfeedback_TFLAGS)\"; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS)  \\\n+\tcd $(HOST_SUBDIR)/libcody && \\\n+\t \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) \\\n+\t\tCFLAGS=\"$(STAGEfeedback_CFLAGS)\" \\\n+\t\tGENERATOR_CFLAGS=\"$(STAGEfeedback_GENERATOR_CFLAGS)\" \\\n+\t\tCXXFLAGS=\"$(STAGEfeedback_CXXFLAGS)\" \\\n+\t\tLIBCFLAGS=\"$(STAGEfeedback_CFLAGS)\" \\\n+\t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n+\t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n+\t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\tTFLAGS=\"$(STAGEfeedback_TFLAGS)\"  \\\n+\t\t$(TARGET-stagefeedback-libcody)\n+\n+maybe-clean-stagefeedback-libcody: clean-stagefeedback-libcody\n+clean-stagefeedback: clean-stagefeedback-libcody\n+clean-stagefeedback-libcody:\n+\t@if [ $(current_stage) = stagefeedback ]; then \\\n+\t  [ -f $(HOST_SUBDIR)/libcody/Makefile ] || exit 0; \\\n+\telse \\\n+\t  [ -f $(HOST_SUBDIR)/stagefeedback-libcody/Makefile ] || exit 0; \\\n+\t  $(MAKE) stagefeedback-start; \\\n+\tfi; \\\n+\tcd $(HOST_SUBDIR)/libcody && \\\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+@endif libcody-bootstrap\n+\n+\n+.PHONY: all-stageautoprofile-libcody maybe-all-stageautoprofile-libcody\n+.PHONY: clean-stageautoprofile-libcody maybe-clean-stageautoprofile-libcody\n+maybe-all-stageautoprofile-libcody:\n+maybe-clean-stageautoprofile-libcody:\n+@if libcody-bootstrap\n+maybe-all-stageautoprofile-libcody: all-stageautoprofile-libcody\n+all-stageautoprofile: all-stageautoprofile-libcody\n+TARGET-stageautoprofile-libcody = $(TARGET-libcody)\n+all-stageautoprofile-libcody: configure-stageautoprofile-libcody\n+\t@[ $(current_stage) = stageautoprofile ] || $(MAKE) stageautoprofile-start\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGEautoprofile_TFLAGS)\"; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS)  \\\n+\tcd $(HOST_SUBDIR)/libcody && \\\n+\t$$s/gcc/config/i386/$(AUTO_PROFILE) \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) \\\n+\t\tCFLAGS=\"$(STAGEautoprofile_CFLAGS)\" \\\n+\t\tGENERATOR_CFLAGS=\"$(STAGEautoprofile_GENERATOR_CFLAGS)\" \\\n+\t\tCXXFLAGS=\"$(STAGEautoprofile_CXXFLAGS)\" \\\n+\t\tLIBCFLAGS=\"$(STAGEautoprofile_CFLAGS)\" \\\n+\t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n+\t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n+\t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\tTFLAGS=\"$(STAGEautoprofile_TFLAGS)\"  \\\n+\t\t$(TARGET-stageautoprofile-libcody)\n+\n+maybe-clean-stageautoprofile-libcody: clean-stageautoprofile-libcody\n+clean-stageautoprofile: clean-stageautoprofile-libcody\n+clean-stageautoprofile-libcody:\n+\t@if [ $(current_stage) = stageautoprofile ]; then \\\n+\t  [ -f $(HOST_SUBDIR)/libcody/Makefile ] || exit 0; \\\n+\telse \\\n+\t  [ -f $(HOST_SUBDIR)/stageautoprofile-libcody/Makefile ] || exit 0; \\\n+\t  $(MAKE) stageautoprofile-start; \\\n+\tfi; \\\n+\tcd $(HOST_SUBDIR)/libcody && \\\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+@endif libcody-bootstrap\n+\n+\n+.PHONY: all-stageautofeedback-libcody maybe-all-stageautofeedback-libcody\n+.PHONY: clean-stageautofeedback-libcody maybe-clean-stageautofeedback-libcody\n+maybe-all-stageautofeedback-libcody:\n+maybe-clean-stageautofeedback-libcody:\n+@if libcody-bootstrap\n+maybe-all-stageautofeedback-libcody: all-stageautofeedback-libcody\n+all-stageautofeedback: all-stageautofeedback-libcody\n+TARGET-stageautofeedback-libcody = $(TARGET-libcody)\n+all-stageautofeedback-libcody: configure-stageautofeedback-libcody\n+\t@[ $(current_stage) = stageautofeedback ] || $(MAKE) stageautofeedback-start\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGEautofeedback_TFLAGS)\"; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS)  \\\n+\tcd $(HOST_SUBDIR)/libcody && \\\n+\t \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) \\\n+\t\tCFLAGS=\"$(STAGEautofeedback_CFLAGS)\" \\\n+\t\tGENERATOR_CFLAGS=\"$(STAGEautofeedback_GENERATOR_CFLAGS)\" \\\n+\t\tCXXFLAGS=\"$(STAGEautofeedback_CXXFLAGS)\" \\\n+\t\tLIBCFLAGS=\"$(STAGEautofeedback_CFLAGS)\" \\\n+\t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n+\t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n+\t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\tTFLAGS=\"$(STAGEautofeedback_TFLAGS)\" PERF_DATA=perf.data \\\n+\t\t$(TARGET-stageautofeedback-libcody)\n+\n+maybe-clean-stageautofeedback-libcody: clean-stageautofeedback-libcody\n+clean-stageautofeedback: clean-stageautofeedback-libcody\n+clean-stageautofeedback-libcody:\n+\t@if [ $(current_stage) = stageautofeedback ]; then \\\n+\t  [ -f $(HOST_SUBDIR)/libcody/Makefile ] || exit 0; \\\n+\telse \\\n+\t  [ -f $(HOST_SUBDIR)/stageautofeedback-libcody/Makefile ] || exit 0; \\\n+\t  $(MAKE) stageautofeedback-start; \\\n+\tfi; \\\n+\tcd $(HOST_SUBDIR)/libcody && \\\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+@endif libcody-bootstrap\n+\n+\n+\n+\n+\n+.PHONY: check-libcody maybe-check-libcody\n+maybe-check-libcody:\n+@if libcody\n+maybe-check-libcody: check-libcody\n+\n+check-libcody:\n+\t@: $(MAKE); $(unstage)\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) $(EXTRA_HOST_EXPORTS) \\\n+\t(cd $(HOST_SUBDIR)/libcody && \\\n+\t  $(MAKE) $(FLAGS_TO_PASS)  $(EXTRA_BOOTSTRAP_FLAGS) check)\n+\n+@endif libcody\n+\n+.PHONY: install-libcody maybe-install-libcody\n+maybe-install-libcody:\n+@if libcody\n+maybe-install-libcody: install-libcody\n+\n+install-libcody:\n+\n+@endif libcody\n+\n+.PHONY: install-strip-libcody maybe-install-strip-libcody\n+maybe-install-strip-libcody:\n+@if libcody\n+maybe-install-strip-libcody: install-strip-libcody\n+\n+install-strip-libcody:\n+\n+@endif libcody\n+\n+# Other targets (info, dvi, pdf, etc.)\n+\n+.PHONY: maybe-info-libcody info-libcody\n+maybe-info-libcody:\n+@if libcody\n+maybe-info-libcody: info-libcody\n+\n+# libcody doesn't support info.\n+info-libcody:\n+\n+@endif libcody\n+\n+.PHONY: maybe-dvi-libcody dvi-libcody\n+maybe-dvi-libcody:\n+@if libcody\n+maybe-dvi-libcody: dvi-libcody\n+\n+dvi-libcody: \\\n+    configure-libcody \n+\t@[ -f ./libcody/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing dvi in libcody\"; \\\n+\t(cd $(HOST_SUBDIR)/libcody && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          dvi) \\\n+\t  || exit 1\n+\n+@endif libcody\n+\n+.PHONY: maybe-pdf-libcody pdf-libcody\n+maybe-pdf-libcody:\n+@if libcody\n+maybe-pdf-libcody: pdf-libcody\n+\n+# libcody doesn't support pdf.\n+pdf-libcody:\n+\n+@endif libcody\n+\n+.PHONY: maybe-html-libcody html-libcody\n+maybe-html-libcody:\n+@if libcody\n+maybe-html-libcody: html-libcody\n+\n+# libcody doesn't support html.\n+html-libcody:\n+\n+@endif libcody\n+\n+.PHONY: maybe-TAGS-libcody TAGS-libcody\n+maybe-TAGS-libcody:\n+@if libcody\n+maybe-TAGS-libcody: TAGS-libcody\n+\n+TAGS-libcody: \\\n+    configure-libcody \n+\t@[ -f ./libcody/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing TAGS in libcody\"; \\\n+\t(cd $(HOST_SUBDIR)/libcody && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          TAGS) \\\n+\t  || exit 1\n+\n+@endif libcody\n+\n+.PHONY: maybe-install-info-libcody install-info-libcody\n+maybe-install-info-libcody:\n+@if libcody\n+maybe-install-info-libcody: install-info-libcody\n+\n+# libcody doesn't support install-info.\n+install-info-libcody:\n+\n+@endif libcody\n+\n+.PHONY: maybe-install-pdf-libcody install-pdf-libcody\n+maybe-install-pdf-libcody:\n+@if libcody\n+maybe-install-pdf-libcody: install-pdf-libcody\n+\n+# libcody doesn't support install-pdf.\n+install-pdf-libcody:\n+\n+@endif libcody\n+\n+.PHONY: maybe-install-html-libcody install-html-libcody\n+maybe-install-html-libcody:\n+@if libcody\n+maybe-install-html-libcody: install-html-libcody\n+\n+# libcody doesn't support install-html.\n+install-html-libcody:\n+\n+@endif libcody\n+\n+.PHONY: maybe-installcheck-libcody installcheck-libcody\n+maybe-installcheck-libcody:\n+@if libcody\n+maybe-installcheck-libcody: installcheck-libcody\n+\n+installcheck-libcody: \\\n+    configure-libcody \n+\t@[ -f ./libcody/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing installcheck in libcody\"; \\\n+\t(cd $(HOST_SUBDIR)/libcody && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          installcheck) \\\n+\t  || exit 1\n+\n+@endif libcody\n+\n+.PHONY: maybe-mostlyclean-libcody mostlyclean-libcody\n+maybe-mostlyclean-libcody:\n+@if libcody\n+maybe-mostlyclean-libcody: mostlyclean-libcody\n+\n+mostlyclean-libcody: \n+\t@[ -f ./libcody/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing mostlyclean in libcody\"; \\\n+\t(cd $(HOST_SUBDIR)/libcody && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          mostlyclean) \\\n+\t  || exit 1\n+\n+@endif libcody\n+\n+.PHONY: maybe-clean-libcody clean-libcody\n+maybe-clean-libcody:\n+@if libcody\n+maybe-clean-libcody: clean-libcody\n+\n+clean-libcody: \n+\t@[ -f ./libcody/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing clean in libcody\"; \\\n+\t(cd $(HOST_SUBDIR)/libcody && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          clean) \\\n+\t  || exit 1\n+\n+@endif libcody\n+\n+.PHONY: maybe-distclean-libcody distclean-libcody\n+maybe-distclean-libcody:\n+@if libcody\n+maybe-distclean-libcody: distclean-libcody\n+\n+distclean-libcody: \n+\t@[ -f ./libcody/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing distclean in libcody\"; \\\n+\t(cd $(HOST_SUBDIR)/libcody && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          distclean) \\\n+\t  || exit 1\n+\n+@endif libcody\n+\n+.PHONY: maybe-maintainer-clean-libcody maintainer-clean-libcody\n+maybe-maintainer-clean-libcody:\n+@if libcody\n+maybe-maintainer-clean-libcody: maintainer-clean-libcody\n+\n+maintainer-clean-libcody: \n+\t@[ -f ./libcody/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing maintainer-clean in libcody\"; \\\n+\t(cd $(HOST_SUBDIR)/libcody && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          maintainer-clean) \\\n+\t  || exit 1\n+\n+@endif libcody\n+\n+\n+\n .PHONY: configure-libdecnumber maybe-configure-libdecnumber\n maybe-configure-libdecnumber:\n @if gcc-bootstrap\n@@ -55705,6 +56735,11 @@ stage1-start::\n \t  mkdir stage1-libcpp; \\\n \tmv stage1-libcpp libcpp\n @endif libcpp\n+@if libcody\n+\t@cd $(HOST_SUBDIR); [ -d stage1-libcody ] || \\\n+\t  mkdir stage1-libcody; \\\n+\tmv stage1-libcody libcody\n+@endif libcody\n @if libdecnumber\n \t@cd $(HOST_SUBDIR); [ -d stage1-libdecnumber ] || \\\n \t  mkdir stage1-libdecnumber; \\\n@@ -55825,6 +56860,11 @@ stage1-end::\n \t  cd $(HOST_SUBDIR); mv libcpp stage1-libcpp; \\\n \tfi\n @endif libcpp\n+@if libcody\n+\t@if test -d $(HOST_SUBDIR)/libcody; then \\\n+\t  cd $(HOST_SUBDIR); mv libcody stage1-libcody; \\\n+\tfi\n+@endif libcody\n @if libdecnumber\n \t@if test -d $(HOST_SUBDIR)/libdecnumber; then \\\n \t  cd $(HOST_SUBDIR); mv libdecnumber stage1-libdecnumber; \\\n@@ -56004,6 +57044,12 @@ stage2-start::\n \tmv stage2-libcpp libcpp; \\\n \tmv stage1-libcpp prev-libcpp || test -f stage1-lean \n @endif libcpp\n+@if libcody\n+\t@cd $(HOST_SUBDIR); [ -d stage2-libcody ] || \\\n+\t  mkdir stage2-libcody; \\\n+\tmv stage2-libcody libcody; \\\n+\tmv stage1-libcody prev-libcody || test -f stage1-lean \n+@endif libcody\n @if libdecnumber\n \t@cd $(HOST_SUBDIR); [ -d stage2-libdecnumber ] || \\\n \t  mkdir stage2-libdecnumber; \\\n@@ -56148,6 +57194,12 @@ stage2-end::\n \t  mv prev-libcpp stage1-libcpp; : ; \\\n \tfi\n @endif libcpp\n+@if libcody\n+\t@if test -d $(HOST_SUBDIR)/libcody; then \\\n+\t  cd $(HOST_SUBDIR); mv libcody stage2-libcody; \\\n+\t  mv prev-libcody stage1-libcody; : ; \\\n+\tfi\n+@endif libcody\n @if libdecnumber\n \t@if test -d $(HOST_SUBDIR)/libdecnumber; then \\\n \t  cd $(HOST_SUBDIR); mv libdecnumber stage2-libdecnumber; \\\n@@ -56358,6 +57410,12 @@ stage3-start::\n \tmv stage3-libcpp libcpp; \\\n \tmv stage2-libcpp prev-libcpp || test -f stage2-lean \n @endif libcpp\n+@if libcody\n+\t@cd $(HOST_SUBDIR); [ -d stage3-libcody ] || \\\n+\t  mkdir stage3-libcody; \\\n+\tmv stage3-libcody libcody; \\\n+\tmv stage2-libcody prev-libcody || test -f stage2-lean \n+@endif libcody\n @if libdecnumber\n \t@cd $(HOST_SUBDIR); [ -d stage3-libdecnumber ] || \\\n \t  mkdir stage3-libdecnumber; \\\n@@ -56502,6 +57560,12 @@ stage3-end::\n \t  mv prev-libcpp stage2-libcpp; : ; \\\n \tfi\n @endif libcpp\n+@if libcody\n+\t@if test -d $(HOST_SUBDIR)/libcody; then \\\n+\t  cd $(HOST_SUBDIR); mv libcody stage3-libcody; \\\n+\t  mv prev-libcody stage2-libcody; : ; \\\n+\tfi\n+@endif libcody\n @if libdecnumber\n \t@if test -d $(HOST_SUBDIR)/libdecnumber; then \\\n \t  cd $(HOST_SUBDIR); mv libdecnumber stage3-libdecnumber; \\\n@@ -56768,6 +57832,12 @@ stage4-start::\n \tmv stage4-libcpp libcpp; \\\n \tmv stage3-libcpp prev-libcpp || test -f stage3-lean \n @endif libcpp\n+@if libcody\n+\t@cd $(HOST_SUBDIR); [ -d stage4-libcody ] || \\\n+\t  mkdir stage4-libcody; \\\n+\tmv stage4-libcody libcody; \\\n+\tmv stage3-libcody prev-libcody || test -f stage3-lean \n+@endif libcody\n @if libdecnumber\n \t@cd $(HOST_SUBDIR); [ -d stage4-libdecnumber ] || \\\n \t  mkdir stage4-libdecnumber; \\\n@@ -56912,6 +57982,12 @@ stage4-end::\n \t  mv prev-libcpp stage3-libcpp; : ; \\\n \tfi\n @endif libcpp\n+@if libcody\n+\t@if test -d $(HOST_SUBDIR)/libcody; then \\\n+\t  cd $(HOST_SUBDIR); mv libcody stage4-libcody; \\\n+\t  mv prev-libcody stage3-libcody; : ; \\\n+\tfi\n+@endif libcody\n @if libdecnumber\n \t@if test -d $(HOST_SUBDIR)/libdecnumber; then \\\n \t  cd $(HOST_SUBDIR); mv libdecnumber stage4-libdecnumber; \\\n@@ -57166,6 +58242,12 @@ stageprofile-start::\n \tmv stageprofile-libcpp libcpp; \\\n \tmv stage1-libcpp prev-libcpp || test -f stage1-lean \n @endif libcpp\n+@if libcody\n+\t@cd $(HOST_SUBDIR); [ -d stageprofile-libcody ] || \\\n+\t  mkdir stageprofile-libcody; \\\n+\tmv stageprofile-libcody libcody; \\\n+\tmv stage1-libcody prev-libcody || test -f stage1-lean \n+@endif libcody\n @if libdecnumber\n \t@cd $(HOST_SUBDIR); [ -d stageprofile-libdecnumber ] || \\\n \t  mkdir stageprofile-libdecnumber; \\\n@@ -57310,6 +58392,12 @@ stageprofile-end::\n \t  mv prev-libcpp stage1-libcpp; : ; \\\n \tfi\n @endif libcpp\n+@if libcody\n+\t@if test -d $(HOST_SUBDIR)/libcody; then \\\n+\t  cd $(HOST_SUBDIR); mv libcody stageprofile-libcody; \\\n+\t  mv prev-libcody stage1-libcody; : ; \\\n+\tfi\n+@endif libcody\n @if libdecnumber\n \t@if test -d $(HOST_SUBDIR)/libdecnumber; then \\\n \t  cd $(HOST_SUBDIR); mv libdecnumber stageprofile-libdecnumber; \\\n@@ -57497,6 +58585,12 @@ stagetrain-start::\n \tmv stagetrain-libcpp libcpp; \\\n \tmv stageprofile-libcpp prev-libcpp || test -f stageprofile-lean \n @endif libcpp\n+@if libcody\n+\t@cd $(HOST_SUBDIR); [ -d stagetrain-libcody ] || \\\n+\t  mkdir stagetrain-libcody; \\\n+\tmv stagetrain-libcody libcody; \\\n+\tmv stageprofile-libcody prev-libcody || test -f stageprofile-lean \n+@endif libcody\n @if libdecnumber\n \t@cd $(HOST_SUBDIR); [ -d stagetrain-libdecnumber ] || \\\n \t  mkdir stagetrain-libdecnumber; \\\n@@ -57641,6 +58735,12 @@ stagetrain-end::\n \t  mv prev-libcpp stageprofile-libcpp; : ; \\\n \tfi\n @endif libcpp\n+@if libcody\n+\t@if test -d $(HOST_SUBDIR)/libcody; then \\\n+\t  cd $(HOST_SUBDIR); mv libcody stagetrain-libcody; \\\n+\t  mv prev-libcody stageprofile-libcody; : ; \\\n+\tfi\n+@endif libcody\n @if libdecnumber\n \t@if test -d $(HOST_SUBDIR)/libdecnumber; then \\\n \t  cd $(HOST_SUBDIR); mv libdecnumber stagetrain-libdecnumber; \\\n@@ -57828,6 +58928,12 @@ stagefeedback-start::\n \tmv stagefeedback-libcpp libcpp; \\\n \tmv stagetrain-libcpp prev-libcpp || test -f stagetrain-lean \n @endif libcpp\n+@if libcody\n+\t@cd $(HOST_SUBDIR); [ -d stagefeedback-libcody ] || \\\n+\t  mkdir stagefeedback-libcody; \\\n+\tmv stagefeedback-libcody libcody; \\\n+\tmv stagetrain-libcody prev-libcody || test -f stagetrain-lean \n+@endif libcody\n @if libdecnumber\n \t@cd $(HOST_SUBDIR); [ -d stagefeedback-libdecnumber ] || \\\n \t  mkdir stagefeedback-libdecnumber; \\\n@@ -57972,6 +59078,12 @@ stagefeedback-end::\n \t  mv prev-libcpp stagetrain-libcpp; : ; \\\n \tfi\n @endif libcpp\n+@if libcody\n+\t@if test -d $(HOST_SUBDIR)/libcody; then \\\n+\t  cd $(HOST_SUBDIR); mv libcody stagefeedback-libcody; \\\n+\t  mv prev-libcody stagetrain-libcody; : ; \\\n+\tfi\n+@endif libcody\n @if libdecnumber\n \t@if test -d $(HOST_SUBDIR)/libdecnumber; then \\\n \t  cd $(HOST_SUBDIR); mv libdecnumber stagefeedback-libdecnumber; \\\n@@ -58182,6 +59294,12 @@ stageautoprofile-start::\n \tmv stageautoprofile-libcpp libcpp; \\\n \tmv stage1-libcpp prev-libcpp || test -f stage1-lean \n @endif libcpp\n+@if libcody\n+\t@cd $(HOST_SUBDIR); [ -d stageautoprofile-libcody ] || \\\n+\t  mkdir stageautoprofile-libcody; \\\n+\tmv stageautoprofile-libcody libcody; \\\n+\tmv stage1-libcody prev-libcody || test -f stage1-lean \n+@endif libcody\n @if libdecnumber\n \t@cd $(HOST_SUBDIR); [ -d stageautoprofile-libdecnumber ] || \\\n \t  mkdir stageautoprofile-libdecnumber; \\\n@@ -58326,6 +59444,12 @@ stageautoprofile-end::\n \t  mv prev-libcpp stage1-libcpp; : ; \\\n \tfi\n @endif libcpp\n+@if libcody\n+\t@if test -d $(HOST_SUBDIR)/libcody; then \\\n+\t  cd $(HOST_SUBDIR); mv libcody stageautoprofile-libcody; \\\n+\t  mv prev-libcody stage1-libcody; : ; \\\n+\tfi\n+@endif libcody\n @if libdecnumber\n \t@if test -d $(HOST_SUBDIR)/libdecnumber; then \\\n \t  cd $(HOST_SUBDIR); mv libdecnumber stageautoprofile-libdecnumber; \\\n@@ -58513,6 +59637,12 @@ stageautofeedback-start::\n \tmv stageautofeedback-libcpp libcpp; \\\n \tmv stageautoprofile-libcpp prev-libcpp || test -f stageautoprofile-lean \n @endif libcpp\n+@if libcody\n+\t@cd $(HOST_SUBDIR); [ -d stageautofeedback-libcody ] || \\\n+\t  mkdir stageautofeedback-libcody; \\\n+\tmv stageautofeedback-libcody libcody; \\\n+\tmv stageautoprofile-libcody prev-libcody || test -f stageautoprofile-lean \n+@endif libcody\n @if libdecnumber\n \t@cd $(HOST_SUBDIR); [ -d stageautofeedback-libdecnumber ] || \\\n \t  mkdir stageautofeedback-libdecnumber; \\\n@@ -58657,6 +59787,12 @@ stageautofeedback-end::\n \t  mv prev-libcpp stageautoprofile-libcpp; : ; \\\n \tfi\n @endif libcpp\n+@if libcody\n+\t@if test -d $(HOST_SUBDIR)/libcody; then \\\n+\t  cd $(HOST_SUBDIR); mv libcody stageautofeedback-libcody; \\\n+\t  mv prev-libcody stageautoprofile-libcody; : ; \\\n+\tfi\n+@endif libcody\n @if libdecnumber\n \t@if test -d $(HOST_SUBDIR)/libdecnumber; then \\\n \t  cd $(HOST_SUBDIR); mv libdecnumber stageautofeedback-libdecnumber; \\\n@@ -59185,6 +60321,16 @@ all-stagetrain-gcc: all-stagetrain-libcpp\n all-stagefeedback-gcc: all-stagefeedback-libcpp\n all-stageautoprofile-gcc: all-stageautoprofile-libcpp\n all-stageautofeedback-gcc: all-stageautofeedback-libcpp\n+all-gcc: all-libcody\n+all-stage1-gcc: all-stage1-libcody\n+all-stage2-gcc: all-stage2-libcody\n+all-stage3-gcc: all-stage3-libcody\n+all-stage4-gcc: all-stage4-libcody\n+all-stageprofile-gcc: all-stageprofile-libcody\n+all-stagetrain-gcc: all-stagetrain-libcody\n+all-stagefeedback-gcc: all-stagefeedback-libcody\n+all-stageautoprofile-gcc: all-stageautoprofile-libcody\n+all-stageautofeedback-gcc: all-stageautofeedback-libcody\n all-gcc: all-libdecnumber\n all-stage1-gcc: all-stage1-libdecnumber\n all-stage2-gcc: all-stage2-libdecnumber"}, {"sha": "8f4302ea7e5446f2a3bca0e97036f72d5d8f6cf7", "filename": "configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -2787,7 +2787,7 @@ build_tools=\"build-texinfo build-flex build-bison build-m4 build-fixincludes\"\n \n # these libraries are used by various programs built for the host environment\n #f\n-host_libs=\"intl libiberty opcodes bfd readline tcl tk itcl libgui zlib libbacktrace libcpp libdecnumber gmp mpfr mpc isl libelf libiconv libctf\"\n+host_libs=\"intl libiberty opcodes bfd readline tcl tk itcl libgui zlib libbacktrace libcpp libcody libdecnumber gmp mpfr mpc isl libelf libiconv libctf\"\n \n # these tools are built for the host environment\n # Note, the powerpc-eabi build depends on sim occurring before gdb in order to"}, {"sha": "56fdbf48084985c2a48f1eaec00669338f4872ac", "filename": "configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -132,7 +132,7 @@ build_tools=\"build-texinfo build-flex build-bison build-m4 build-fixincludes\"\n \n # these libraries are used by various programs built for the host environment\n #f\n-host_libs=\"intl libiberty opcodes bfd readline tcl tk itcl libgui zlib libbacktrace libcpp libdecnumber gmp mpfr mpc isl libelf libiconv libctf\"\n+host_libs=\"intl libiberty opcodes bfd readline tcl tk itcl libgui zlib libbacktrace libcpp libcody libdecnumber gmp mpfr mpc isl libelf libiconv libctf\"\n \n # these tools are built for the host environment\n # Note, the powerpc-eabi build depends on sim occurring before gdb in order to"}, {"sha": "0d6084cbd528df0540177836bbd419f604cc39d1", "filename": "gcc/Makefile.in", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -412,6 +412,9 @@ enable_as_accelerator = @enable_as_accelerator@\n CPPLIB = ../libcpp/libcpp.a\n CPPINC = -I$(srcdir)/../libcpp/include\n \n+CODYLIB = ../libcody/libcody.a\n+CODYINC = -I$(srcdir)/../libcody\n+\n # Where to find decNumber\n enable_decimal_float = @enable_decimal_float@\n DECNUM = $(srcdir)/../libdecnumber\n@@ -982,6 +985,7 @@ SYSTEM_H = system.h hwint.h $(srcdir)/../include/libiberty.h \\\n PREDICT_H = predict.h predict.def\n CPPLIB_H = $(srcdir)/../libcpp/include/line-map.h \\\n \t$(srcdir)/../libcpp/include/cpplib.h\n+CODYLIB_H = $(srcdir)/../libcody/cody.hh\n INPUT_H = $(srcdir)/../libcpp/include/line-map.h input.h\n OPTS_H = $(INPUT_H) $(VEC_H) opts.h $(OBSTACK_H)\n SYMTAB_H = $(srcdir)/../libcpp/include/symtab.h $(OBSTACK_H)\n@@ -1102,7 +1106,7 @@ BUILD_ERRORS = build/errors.o\n # libintl.h will be found in ../intl if we are using the included libintl.\n INCLUDES = -I. -I$(@D) -I$(srcdir) -I$(srcdir)/$(@D) \\\n \t   -I$(srcdir)/../include @INCINTL@ \\\n-\t   $(CPPINC) $(GMPINC) $(DECNUMINC) $(BACKTRACEINC) \\\n+\t   $(CPPINC) $(CODYINC) $(GMPINC) $(DECNUMINC) $(BACKTRACEINC) \\\n \t   $(ISLINC)\n \n COMPILE.base = $(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) -o $@\n@@ -1714,7 +1718,7 @@ endif\n ALL_HOST_OBJS = $(ALL_HOST_FRONTEND_OBJS) $(ALL_HOST_BACKEND_OBJS)\n \n BACKEND = libbackend.a main.o libcommon-target.a libcommon.a \\\n-\t$(CPPLIB) $(LIBDECNUMBER)\n+\t$(CPPLIB) $(CODYLIB) $(LIBDECNUMBER)\n \n # This is defined to \"yes\" if Tree checking is enabled, which roughly means\n # front-end checking."}, {"sha": "72e59f955ea0e20d2b7110388b97c823fcf815d3", "filename": "libcody/CMakeLists.txt", "status": "added", "additions": 121, "deletions": 0, "changes": 121, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2FCMakeLists.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2FCMakeLists.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2FCMakeLists.txt?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -0,0 +1,121 @@\n+# Top Level CMake file for libcody.\n+\n+cmake_minimum_required(VERSION 3.4.3)\n+\n+if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n+  message(STATUS \"No build type selected, default to MinSizeRel\")\n+  set(CMAKE_BUILD_TYPE MinSizeRel)\n+  set(LIBCODY_ENABLE_ASSERTIONS 1)\n+endif()\n+string(TOUPPER \"${CMAKE_BUILD_TYPE}\" uppercase_CMAKE_BUILD_TYPE)\n+\n+set(cmake_3_2_USES_TERMINAL USES_TERMINAL)\n+\n+if( CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR AND NOT MSVC_IDE)\n+  message(FATAL_ERROR \"In-source builds are not allowed. \")\n+endif()\n+\n+# message(STATUS \"SRC ${CMAKE_SOURCE_DIR} CSRC : ${CMAKE_CURRENT_SOURCE_DIR} \")\n+\n+# Add path for custom modules\n+set(CMAKE_MODULE_PATH\n+    ${CMAKE_MODULE_PATH}\n+    \"${CMAKE_CURRENT_SOURCE_DIR}/cmake\"\n+    \"${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules\")\n+\n+# If we are building stand-alone, set up the names and versions.\n+if(CMAKE_SOURCE_DIR STREQUAL CMAKE_CURRENT_SOURCE_DIR\n+   OR LIBCODY_STANDALONE_BUILD)\n+\n+  project(libcody CXX)\n+\n+  set(PACKAGE_NAME codylib)\n+  set(LIBCODY_VERSION_MAJOR 0)\n+  set(LIBCODY_VERSION_MINOR 0)\n+  set(LIBCODY_VERSION_PATCH 1)\n+  set(LIBCODY_VERSION_SUFFIX git)\n+  set(LIBCODY_VERSION \"${LIBCODY_VERSION_MAJOR}.${LIBCODY_VERSION_MINOR}.${LIBCODY_VERSION_PATCH}\")\n+  set(PACKAGE_VERSION \"${LIBCODY_VERSION}-${LIBCODY_VERSION_SUFFIX}\")\n+  set(PACKAGE_STRING \"${PACKAGE_NAME} ${PACKAGE_VERSION}\")\n+  set(PACKAGE_URL \"https://github.com/urnathan/libcody\")\n+  set(PACKAGE_BUGREPORT \"https://github.com/urnathan/libcody/issues\")\n+\n+  set (GIT_REV \"git\" \"-C\" \"${CMAKE_CURRENT_SOURCE_DIR}\" \"rev-parse\" \"--short=12\" \"HEAD\")\n+  execute_process(\n+      COMMAND ${GIT_REV}\n+      RESULT_VARIABLE HAD_ERROR\n+      OUTPUT_VARIABLE CODY_REVISION\n+    )\n+  if (NOT HAD_ERROR)\n+    string(REGEX REPLACE \"\\n$\" \"\" CODY_REVISION \"${CODY_REVISION}\")\n+    set (GIT_CHANGES \"git\" \"-C\" \"${CMAKE_CURRENT_SOURCE_DIR}\" \"diff-index\" \"--quiet\" \"HEAD\" \"--\")\n+    execute_process(\n+      COMMAND ${GIT_CHANGES}\n+      RESULT_VARIABLE MOD_ERROR\n+      OUTPUT_VARIABLE MOD_OUTPUT\n+    )\n+    if (MOD_ERROR)\n+      set (CODY_REVISION \"${CODY_REVISION}-modified\")\n+    endif ()\n+  else()\n+    set(CODY_REVISION, \"unknown\")\n+  endif ()\n+  set(LIBCODY_STANDALONE YES)\n+else()\n+  set(LIBCODY_STANDALONE NO)\n+endif()\n+\n+# We are using C++11\n+set (CMAKE_CXX_STANDARD 11)\n+\n+message(STATUS \"git revision ${CODY_REVISION} \")\n+option(CODY_CHECKING \"Enable checking\" ON)\n+# Address github issue #10\n+option(CODY_WITHEXCEPTIONS \"Enable exceptions\" OFF)\n+\n+if (LIBCODY_STANDALONE)\n+  include(CTest)\n+endif()\n+\n+include(libcody-config-ix)\n+\n+add_definitions(\n+ -DPACKAGE_URL=\"${PACKAGE_URL}\"\n+ -DBUGURL=\"${PACKAGE_BUGREPORT}\"\n+ -DSRCDIR=\"${CMAKE_CURRENT_SOURCE_DIR}\"\n+ -DPACKAGE_NAME=\"${PACKAGE_NAME}\"\n+ -DPACKAGE_STRING=\"${PACKAGE_STRING}\"\n+ -DPACKAGE_VERSION=\"${LIBCODY_VERSION}\"\n+ -DREVISION=\"${CODY_REVISION}\"\n+ )\n+if (CODY_CHECKING)\n+  add_definitions(-DNMS_CHECKING=1)\n+else()\n+  add_definitions(-DNMS_CHECKING=0)\n+endif()\n+\n+set(LIBCODY_SOURCES\n+  buffer.cc\n+  client.cc\n+  fatal.cc\n+  netclient.cc\n+  netserver.cc\n+  resolver.cc\n+  packet.cc\n+  server.cc)\n+\n+if(LIBCODY_STANDALONE)\n+  add_library(cody STATIC ${LIBCODY_SOURCES})\n+else()\n+  message(STATUS \"Configured for in-tree build of libcody as LLVMcody\")\n+  add_llvm_component_library(LLVMcody ${LIBCODY_SOURCES})\n+endif()\n+\n+if (LIBCODY_STANDALONE)\n+\n+  set_target_properties(cody PROPERTIES PUBLIC_HEADER \"cody.hh\")\n+  install(TARGETS cody \n+        LIBRARY DESTINATION lib\n+        PUBLIC_HEADER DESTINATION include\n+  )\n+endif()"}, {"sha": "1ff0a9da76319fde1bff8c4bfca85b9ae2ac72de", "filename": "libcody/CODING.md", "status": "added", "additions": 115, "deletions": 0, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2FCODING.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2FCODING.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2FCODING.md?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -0,0 +1,115 @@\n+# Coding standard\n+\n+I guess I should document this, it might not be obvious.\n+\n+libcody is implemented in C++11.  Because it's used in compiler\n+development, we can't use the latest and greatest.\n+\n+The formatting is close to GNU, but with a few differences.\n+\n+## Extensions to C++11\n+\n+It uses __VA_OPT__ when available, falling back on GNU's variadic\n+macro `,#` extension.  This is in the `Assert` macro, so one can have\n+multi-argument template instantiations there.  Not that libcody does\n+that, but this is code I used elsewhere.\n+\n+## GNU\n+\n+The underlying formatting is GNU style.  Here are a few notes about\n+things that commonly catches programmers unfamiliar with it is:\n+\n+* Spaces between binary operators.  Particularly in a function call,\n+  between the name and the open paren:\n+\n+  ```c++\n+  Fn (a + b, ary[4], *ptr);\n+  ```\n+\n+  In general GNU style uses a lot more whitespace than Clang-style.\n+  We're not trying to cram as much code as possible onto a page!\n+\n+* Scope braces are always on a line of their own, indented by 2\n+  spaces, if they're a sub-statement of an `if`, `for` or whatever:\n+\n+  ```c++\n+  if (bob)\n+    {\n+      Frob ();\n+      Quux ();\n+    }\n+  ```\n+\n+  Conditions and loops containing a single statement should not use `{}`.\n+  FWIW this was my personal indentation scheme, before I even met GNU code!\n+\n+* The same is true for a function definition body, except the\n+  indentation is zero:\n+\n+  ```c++\n+  int Foo ()\n+    noexcept // indented\n+  {\n+    return 0;\n+  }\n+  ```\n+\n+* Initialization bracing is not like scope bracing.  There tends to be\n+  more flexibility.\n+\n+* Break lines at 80 chars, this should be /before/ the operator, not after:\n+\n+  ```c++\n+  a = (b\n+       + c);\n+  ptr\n+  ->MemberFn (stuff);\n+  Func\n+  (arg);\n+  ```\n+\n+  Thus you can tell what lines are continued from the previous by\n+  looking at their start.  Use parens to control indentation.\n+\n+  If you find yourself wanting to break a line at `.`, don't.\n+  Refactor your code to avoid needing that.\n+\n+* Template instantiations and C++ casts should have no space before the `<`:\n+\n+  ```c++\n+  std::vector<int> k;\n+  static_cast<T> (arg); // space before the ( though\n+  ```\n+\n+* Pointer and reference types need a space before the `*` or `&`, if\n+  the preceding token is ascii text (a cpp-identifier):\n+\n+  ```\n+  int *ptr;\n+  int **ptr_ptr;\n+  int *&pref = ptr;\n+  ```\n+\n+  See below a difference in qualifier placement.\n+\n+* Code should compile without warnings.\n+\n+## Not GNU\n+\n+### Names\n+\n+Unlike GNU code, variants of Camel Case are used.  use `PascalCase`\n+for function, type and global variable names.  Use `dromedaryCase` for\n+member variables.  Block-scope vars can be `dromedaryCase` or\n+`snake_case`, your choice.\n+\n+### Type qualifiers\n+\n+Type qualifiers go after the thing they qualify.  You have to do this\n+for pointers anyway, and read them inside-out, because, C Just being\n+consistent:\n+\n+```c++\n+int const foo = 5; // constant int\n+int *const pfoo = nullptr;  // constant pointer to int\n+```"}, {"sha": "234ed069d411f1743f5a1c2542392da7a0d461ca", "filename": "libcody/CONTRIB.md", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2FCONTRIB.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2FCONTRIB.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2FCONTRIB.md?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -0,0 +1,10 @@\n+# A probably incomplete list of contributors\n+\n+Thanks for the interest in this library!\n+\n+* Iain Sandoe\n+  Darwin testing and porting\n+\n+* Martin Liska\n+  Code cleanups\n+"}, {"sha": "261eeb9e9f8b2b4b0d119366dda99c6fd7d35c64", "filename": "libcody/LICENSE", "status": "added", "additions": 201, "deletions": 0, "changes": 201, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2FLICENSE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2FLICENSE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2FLICENSE?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -0,0 +1,201 @@\n+                                 Apache License\n+                           Version 2.0, January 2004\n+                        http://www.apache.org/licenses/\n+\n+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n+\n+   1. Definitions.\n+\n+      \"License\" shall mean the terms and conditions for use, reproduction,\n+      and distribution as defined by Sections 1 through 9 of this document.\n+\n+      \"Licensor\" shall mean the copyright owner or entity authorized by\n+      the copyright owner that is granting the License.\n+\n+      \"Legal Entity\" shall mean the union of the acting entity and all\n+      other entities that control, are controlled by, or are under common\n+      control with that entity. For the purposes of this definition,\n+      \"control\" means (i) the power, direct or indirect, to cause the\n+      direction or management of such entity, whether by contract or\n+      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n+      outstanding shares, or (iii) beneficial ownership of such entity.\n+\n+      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n+      exercising permissions granted by this License.\n+\n+      \"Source\" form shall mean the preferred form for making modifications,\n+      including but not limited to software source code, documentation\n+      source, and configuration files.\n+\n+      \"Object\" form shall mean any form resulting from mechanical\n+      transformation or translation of a Source form, including but\n+      not limited to compiled object code, generated documentation,\n+      and conversions to other media types.\n+\n+      \"Work\" shall mean the work of authorship, whether in Source or\n+      Object form, made available under the License, as indicated by a\n+      copyright notice that is included in or attached to the work\n+      (an example is provided in the Appendix below).\n+\n+      \"Derivative Works\" shall mean any work, whether in Source or Object\n+      form, that is based on (or derived from) the Work and for which the\n+      editorial revisions, annotations, elaborations, or other modifications\n+      represent, as a whole, an original work of authorship. For the purposes\n+      of this License, Derivative Works shall not include works that remain\n+      separable from, or merely link (or bind by name) to the interfaces of,\n+      the Work and Derivative Works thereof.\n+\n+      \"Contribution\" shall mean any work of authorship, including\n+      the original version of the Work and any modifications or additions\n+      to that Work or Derivative Works thereof, that is intentionally\n+      submitted to Licensor for inclusion in the Work by the copyright owner\n+      or by an individual or Legal Entity authorized to submit on behalf of\n+      the copyright owner. For the purposes of this definition, \"submitted\"\n+      means any form of electronic, verbal, or written communication sent\n+      to the Licensor or its representatives, including but not limited to\n+      communication on electronic mailing lists, source code control systems,\n+      and issue tracking systems that are managed by, or on behalf of, the\n+      Licensor for the purpose of discussing and improving the Work, but\n+      excluding communication that is conspicuously marked or otherwise\n+      designated in writing by the copyright owner as \"Not a Contribution.\"\n+\n+      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n+      on behalf of whom a Contribution has been received by Licensor and\n+      subsequently incorporated within the Work.\n+\n+   2. Grant of Copyright License. Subject to the terms and conditions of\n+      this License, each Contributor hereby grants to You a perpetual,\n+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n+      copyright license to reproduce, prepare Derivative Works of,\n+      publicly display, publicly perform, sublicense, and distribute the\n+      Work and such Derivative Works in Source or Object form.\n+\n+   3. Grant of Patent License. Subject to the terms and conditions of\n+      this License, each Contributor hereby grants to You a perpetual,\n+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n+      (except as stated in this section) patent license to make, have made,\n+      use, offer to sell, sell, import, and otherwise transfer the Work,\n+      where such license applies only to those patent claims licensable\n+      by such Contributor that are necessarily infringed by their\n+      Contribution(s) alone or by combination of their Contribution(s)\n+      with the Work to which such Contribution(s) was submitted. If You\n+      institute patent litigation against any entity (including a\n+      cross-claim or counterclaim in a lawsuit) alleging that the Work\n+      or a Contribution incorporated within the Work constitutes direct\n+      or contributory patent infringement, then any patent licenses\n+      granted to You under this License for that Work shall terminate\n+      as of the date such litigation is filed.\n+\n+   4. Redistribution. You may reproduce and distribute copies of the\n+      Work or Derivative Works thereof in any medium, with or without\n+      modifications, and in Source or Object form, provided that You\n+      meet the following conditions:\n+\n+      (a) You must give any other recipients of the Work or\n+          Derivative Works a copy of this License; and\n+\n+      (b) You must cause any modified files to carry prominent notices\n+          stating that You changed the files; and\n+\n+      (c) You must retain, in the Source form of any Derivative Works\n+          that You distribute, all copyright, patent, trademark, and\n+          attribution notices from the Source form of the Work,\n+          excluding those notices that do not pertain to any part of\n+          the Derivative Works; and\n+\n+      (d) If the Work includes a \"NOTICE\" text file as part of its\n+          distribution, then any Derivative Works that You distribute must\n+          include a readable copy of the attribution notices contained\n+          within such NOTICE file, excluding those notices that do not\n+          pertain to any part of the Derivative Works, in at least one\n+          of the following places: within a NOTICE text file distributed\n+          as part of the Derivative Works; within the Source form or\n+          documentation, if provided along with the Derivative Works; or,\n+          within a display generated by the Derivative Works, if and\n+          wherever such third-party notices normally appear. The contents\n+          of the NOTICE file are for informational purposes only and\n+          do not modify the License. You may add Your own attribution\n+          notices within Derivative Works that You distribute, alongside\n+          or as an addendum to the NOTICE text from the Work, provided\n+          that such additional attribution notices cannot be construed\n+          as modifying the License.\n+\n+      You may add Your own copyright statement to Your modifications and\n+      may provide additional or different license terms and conditions\n+      for use, reproduction, or distribution of Your modifications, or\n+      for any such Derivative Works as a whole, provided Your use,\n+      reproduction, and distribution of the Work otherwise complies with\n+      the conditions stated in this License.\n+\n+   5. Submission of Contributions. Unless You explicitly state otherwise,\n+      any Contribution intentionally submitted for inclusion in the Work\n+      by You to the Licensor shall be under the terms and conditions of\n+      this License, without any additional terms or conditions.\n+      Notwithstanding the above, nothing herein shall supersede or modify\n+      the terms of any separate license agreement you may have executed\n+      with Licensor regarding such Contributions.\n+\n+   6. Trademarks. This License does not grant permission to use the trade\n+      names, trademarks, service marks, or product names of the Licensor,\n+      except as required for reasonable and customary use in describing the\n+      origin of the Work and reproducing the content of the NOTICE file.\n+\n+   7. Disclaimer of Warranty. Unless required by applicable law or\n+      agreed to in writing, Licensor provides the Work (and each\n+      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+      implied, including, without limitation, any warranties or conditions\n+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n+      PARTICULAR PURPOSE. You are solely responsible for determining the\n+      appropriateness of using or redistributing the Work and assume any\n+      risks associated with Your exercise of permissions under this License.\n+\n+   8. Limitation of Liability. In no event and under no legal theory,\n+      whether in tort (including negligence), contract, or otherwise,\n+      unless required by applicable law (such as deliberate and grossly\n+      negligent acts) or agreed to in writing, shall any Contributor be\n+      liable to You for damages, including any direct, indirect, special,\n+      incidental, or consequential damages of any character arising as a\n+      result of this License or out of the use or inability to use the\n+      Work (including but not limited to damages for loss of goodwill,\n+      work stoppage, computer failure or malfunction, or any and all\n+      other commercial damages or losses), even if such Contributor\n+      has been advised of the possibility of such damages.\n+\n+   9. Accepting Warranty or Additional Liability. While redistributing\n+      the Work or Derivative Works thereof, You may choose to offer,\n+      and charge a fee for, acceptance of support, warranty, indemnity,\n+      or other liability obligations and/or rights consistent with this\n+      License. However, in accepting such obligations, You may act only\n+      on Your own behalf and on Your sole responsibility, not on behalf\n+      of any other Contributor, and only if You agree to indemnify,\n+      defend, and hold each Contributor harmless for any liability\n+      incurred by, or claims asserted against, such Contributor by reason\n+      of your accepting any such warranty or additional liability.\n+\n+   END OF TERMS AND CONDITIONS\n+\n+   APPENDIX: How to apply the Apache License to your work.\n+\n+      To apply the Apache License to your work, attach the following\n+      boilerplate notice, with the fields enclosed by brackets \"[]\"\n+      replaced with your own identifying information. (Don't include\n+      the brackets!)  The text should be enclosed in the appropriate\n+      comment syntax for the file format. We also recommend that a\n+      file or class name and description of purpose be included on the\n+      same \"printed page\" as the copyright notice for easier\n+      identification within third-party archives.\n+\n+   Copyright [yyyy] [name of copyright owner]\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License."}, {"sha": "6a72a2b9feb6809640f87093f8044f05b950bf77", "filename": "libcody/LICENSE.gcc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2FLICENSE.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2FLICENSE.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2FLICENSE.gcc?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -0,0 +1,29 @@\n+This instance of Libcody is licensed under the GPLv3 as part of\n+GCC. (See ../COPYING3.)\n+\n+The documentation of this file itself is separate from libcody.\n+\n+The GCC steering committee have declined to decide whether libcody may\n+be included in GCC as an external dependency licensed under the Apache\n+v2 license.\n+\n+In order to progress C++20 modules, this instance is relicensed as\n+part of GCC under the GPLv3 and assigned to the FSF.  This version is\n+derived from libcody upstream b79dbea with contributions from jjravi\n+removed.  Specifically the bulk of the code is authored by Nathan\n+Sidwell (me), and some portability issues fixed by Iain Sandoe.  Iain\n+has blessed this contribution in a private communication to me.  A\n+trivial install fix from Johel Pe\u00f1a is included here, along with typo\n+fixes to README.md from Boris Kolpackov (I do not think either of\n+those contains copyrightable work).\n+\n+To the extent that Apache V2 prevents it, you may not update to other\n+upstream versions (past or future) of libcody and relicensing and/or\n+reassigning copyright of that update without reobtaining the authors'\n+permission.  You may of course update to other versions of libcody\n+but keep the Apache license and libcody's copyright assignment.  [This\n+is merely pointing out the implications of the Apache V2 license and\n+libcody's copyright, not adding additional requirements.]\n+\n+Any patches applied to this instance should be provided to upstream\n+libcody, for consideration there."}, {"sha": "7b8a64180277e249d70d94aedfe4dc2408e4629a", "filename": "libcody/Makefile.in", "status": "added", "additions": 187, "deletions": 0, "changes": 187, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2FMakefile.in?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -0,0 +1,187 @@\n+# Nathan's generic Makefile\t\t-*- mode:Makefile -*-\n+# Copyright (C) 2019-2020 Nathan Sidwell, nathan@acm.org\n+# License: Apache v2.0\n+\n+ifeq (0,$(MAKELEVEL))\n+ifneq (,@tools@)\n+$(info Prepending @tools@/bin to PATH)\n+PATH := @tools@/bin:$(PATH)\n+export PATH\n+endif\n+ifeq (,$(SERIAL))\n+# Figure out if we should set parallelism\n+ifeq (,$(filter clean%,$(MAKECMDGOALS)))\n+PARALLELISM := @NUM_CPUS@\n+endif\n+endif\n+endif\n+\n+ifeq (00,$(MAKELEVEL)$(if $(PARALLELISM),0,1))\n+# Although Make 4.3 documentation suggests I can set parallelism just\n+# by appending to MAKEFLAGS, it doesn't seem to work.  It's also not\n+# possible to figure out the current Make invocation's parallelism,\n+# the -j option doesn't appear in MAKEFLAGS and is magically inserted\n+# when that is expanded in a rule.  I can't figure how to get a rule\n+# expansion into a variable to test.  Fortunately, Make propagates an\n+# incoming -j option rather than the one you attempted to append\n+$(info Parallelizing $(PARALLELISM) ways)\n+MAKEFLAGS += -j$(PARALLELISM)\n+ifneq (,$(MAKECMDGOALS))\n+$(MAKECMDGOALS): recurse\n+endif\n+recurse:\n+\t$(MAKE) -r$(MAKEFLAGS) $(MAKECMDGOALS)\n+.PHONY: recurse\n+else\n+\n+srcdir := @srcdir@\n+prefix := @prefix@\n+exec_prefix := @exec_prefix@\n+bindir := @bindir@\n+libdir := @libdir@\n+includedir := @includedir@\n+SUBDIRS := @SUBDIRS@\n+# autoconf doesn't seem to like setting SHELL\n+SHELL := $(shell which zsh 2>/dev/null >/dev/null && echo zsh \\\n+  || (echo \"No ZSH, maybe flakey\" >&2 && echo sh))\n+\n+# We have to place the -I paths last, so that building will see -I paths to us\n+CXX := $(filter-out -I%,@CXX@)\n+AR := @AR@\n+INSTALL := $(srcdir)/build-aux/install-sh\n+\n+# C++ compiler options\n+CXXFLAGS := @CXXFLAGS@\n+CXXINC := $(filter -I%,@CXX@)\n+CXXOPTS := $(CXXFLAGS)\n+ifeq ($(notdir $(firstword $(CXX))),g++)\n+# It's GCC, or pretending to be it -- so it better smell like it!\n+# Code generation\n+CXXOPTS += -fno-enforce-eh-specs\n+CXXOPTS += -fno-stack-protector -fno-threadsafe-statics\n+ifneq (@EXCEPTIONS@,yes)\n+CXXOPTS += -fno-exceptions -fno-rtti\n+endif\n+ifeq ($(filter -fdebug-prefix-map=%,$(CXXOPTS)),)\n+CXXOPTS += -fdebug-prefix-map=${srcdir}/=\n+endif\n+# Warning options\n+CXXOPTS += -W -Wall -Woverloaded-virtual -Wshadow\n+CXXOPTS += -Wno-invalid-offsetof -Wno-unused-variable\n+CXXOPTS += -Wno-missing-field-initializers\n+# Diagnostic options, look at controlling terminal so that piping\n+# through more works\n+MLEN := $(shell stty size </dev/tty 2>/dev/null | cut -d' ' -f2)\n+ifneq (,$(MLEN))\n+CXXOPTS += -fmessage-length=$(MLEN)\n+endif\n+CXXOPTS += -fdiagnostics-color=always -fno-diagnostics-show-option\n+else\n+ifeq ($(notdir $(firstword $(CXX))),clang++)\n+CXXOPTS += -fno-stack-protector -fno-threadsafe-statics\n+ifneq (@EXCEPTIONS@,yes)\n+CXXOPTS += -fno-exceptions -fno-rtti\n+endif\n+# Warning options\n+CXXOPTS += -W -Wall -Woverloaded-virtual -Wshadow\n+CXXOPTS += -Wno-invalid-offsetof -Wno-unused-variable\n+CXXOPTS += -Wno-missing-field-initializers\n+else\n+# Add different compiler's options here\n+endif\n+endif\n+\n+# Config\n+CXXOPTS += $(filter-out -DHAVE_CONFIG_H,@DEFS@) -include config.h\n+\n+# Linker options\n+LDFLAGS := -L. @LDFLAGS@\n+LIBS := @LIBS@\n+\n+# Per-source & per-directory compile flags (warning: recursive)\n+SRC_CXXFLAGS = $(CXXFLAGS$(patsubst $(srcdir)%,%,$1)) \\\n+\t$(if $(filter-out $(srcdir)/,$1),\\\n+\t  $(call $0,$(dir $(patsubst %/,%,$1))))\n+\n+ifneq ($(MAINTAINER),)\n+override MAINTAINER += $1\n+endif\n+ifeq (@MAINTAINER@,yes)\n+MAINTAINER = $2\n+else\n+MAINTAINER = \\# --enable-maintainer-mode to rebuild $1, or make MAINTAINER=touch\n+endif\n+\n+vpath %.in $(srcdir)\n+vpath %.cc $(srcdir)\n+\n+.SUFFIXES: .o .cc\n+\n+%.o: %.cc\n+\t@mkdir -p $(dir $@)\n+\t$(CXX) $(strip $(CXXOPTS) $(call SRC_CXXFLAGS,$<) $(CXXINC)) \\\n+\t  -MMD -MP -MF ${@:.o=.d} -c -o $@ $<\n+\n+all:: Makefile $(addprefix all.,$(SUBDIRS))\n+\n+check:: Makefile $(addprefix check.,$(SUBDIRS))\n+\n+clean:: Makefile $(addprefix clean.,$(SUBDIRS))\n+\n+revision.stamp: $(addprefix $(srcdir)/,. $(SUBDIRS))\n+\t@revision=$$(git -C $(srcdir) rev-parse HEAD 2>/dev/null) ;\\\n+\tif test -n \"$$revision\" ;\\\n+\tthen revision=git-$$revision ;\\\n+\t  if git -C $(srcdir) status --porcelain 2>/dev/null | grep -vq '^  ' ;\\\n+\t  then revision+=M ;\\\n+\t  fi ;\\\n+\telse revision=unknown ;\\\n+\tfi ;\\\n+\techo $$revision > $@\n+\n+revision: revision.stamp\n+\t@cmp -s $< $@ || cp -f $< $@\n+\n+clean::\n+\trm -f revision.stamp revision\n+\n+distclean:: clean\n+\trm -f config.log config.status\n+\trm -rf $(SUBDIRS)\n+\n+$(srcdir)/configure: $(srcdir)/configure.ac \\\n+\t  $(patsubst %,$(srcdir)/%/config.m4,. $(SUBDIRS))\n+\t$(call MAINTAINER,$@,cd $(@D) && autoconf -W all,error)\n+\n+$(srcdir)/config.h.in: $(srcdir)/configure.ac \\\n+\t  $(patsubst %,$(srcdir)/%/config.m4,. $(SUBDIRS))\n+\t$(call MAINTAINER,$@,cd $(@D) && autoheader -f -W all,error)\n+\n+config.h: config.status config.h.in\n+\t./$< --header=$@\n+\ttouch $@\n+\n+ifeq ($(filter %clean,$(MAKECMDGOALS)),)\n+@CONFIG_FILES@: %: config.status %.in\n+\t./$< --file=$@\n+\ttouch $@\n+endif\n+\n+config.status: $(srcdir)/configure $(srcdir)/config.h.in\n+\tif test -x $@; then ./$@ -recheck; else $< @configure_args@; fi\n+\n+distclean:: clean\n+\trm -f config.h\n+\n+maintainer-clean:: distclean\n+\trm -f $(srcdir)/config.h.in\n+\n+clean::\n+\trm -f $(shell find $(srcdir) -name '*~')\n+\n+.PHONY: all check clean distclean maintainer-clean\n+\n+-include $(addsuffix /Makesub,. $(SUBDIRS))\n+-include $(addsuffix /tests/Makesub,. $(SUBDIRS))\n+\n+endif"}, {"sha": "0bfe6f6c1b3a241d93d949b1f59f8221ddcb6a60", "filename": "libcody/Makesub.in", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2FMakesub.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2FMakesub.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2FMakesub.in?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -0,0 +1,48 @@\n+# CODYlib\t\t-*- mode:Makefile -*-\n+# Copyright (C) 2019-2020 Nathan Sidwell, nathan@acm.org\n+# License: Apache v2.0\n+\n+DOXYGEN := @DOXYGEN@\n+CXXFLAGS/ := -I$(srcdir)\n+LIBCODY.O := buffer.o client.o fatal.o netclient.o netserver.o \\\n+\tresolver.o packet.o server.o\n+\n+all:: .gdbinit\n+\n+.gdbinit: gdbinit\n+\trm -f $@ ; ln -s $< $@\n+\n+clean::\n+\trm -f gdbinit .gdbinit\n+\n+all:: libcody.a\n+\n+libcody.a: $(LIBCODY.O)\n+\t$(AR) -cr $@ $^\n+\n+clean::\n+\trm -f $(LIBCODY.O) $(LIBCODY.O:.o=.d)\n+\trm -f libcody.a\n+\n+CXXFLAGS/fatal.cc = -DREVISION='\"$(shell cat revision)\"' -DSRCDIR='\"$(srcdir)\"'\n+\n+fatal.o: Makefile revision\n+\n+doc:: dox.cfg\n+ifneq ($(DOXYGEN),:)\n+\tcd $(<D); $(DOXYGEN) $(<F) >&dox.log\n+else\n+\t@echo \"doxygen not present, documentation not built\"\n+endif\n+\n+clean::\n+\trm -rf dox dox.log\n+\n+install::\n+\t$(INSTALL) -d $(libdir) $(includedir)\n+\t$(INSTALL) libcody.a $(libdir)\n+\t$(INSTALL) $(srcdir)/cody.hh $(includedir)\n+\n+ifeq ($(filter clean%,$(MAKECMDGOALS)),)\n+-include $(LIBCODY.O:.o=.d)\n+endif"}, {"sha": "a95085eac7aaa11dd3dd55362bcc9c4140cb2242", "filename": "libcody/README.md", "status": "added", "additions": 497, "deletions": 0, "changes": 497, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2FREADME.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2FREADME.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2FREADME.md?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -0,0 +1,497 @@\n+# libCODY: COmpiler DYnamism<sup><a href=\"#1\">1</a></sup>\n+\n+Copyright (C) 2020 Nathan Sidwell, nathan@acm.org\n+\n+libCODY is an implementation of a communication protocol between\n+compilers and build systems.\n+\n+**WARNING:**  This is preliminary software.\n+\n+In addition to supporting C++modules, this may also support LTO\n+requirements and could also deal with generated #include files\n+and feed the compiler with prepruned include paths and whatnot.  (The\n+system calls involved in include searches can be quite expensive on\n+some build infrastructures.)\n+\n+* Client and Server objects\n+* Direct connection for in-process use\n+* Testing with Joust (that means nothing to you, doesn't it!)\n+\n+\n+## Problem Being Solved\n+\n+The origin is in C++20 modules:\n+```\n+import foo;\n+```\n+\n+At that import, the compiler needs<sup><a href=\"#2\">2</a></sup> to\n+load up the compiled serialization of module `foo`.  Where is that\n+file?  Does it even exist?  Unless the build system already knows the\n+dependency graph, this might be a completely unknown module.  Now, the\n+build system knows how to build things, but it might not have complete\n+information about the dependencies.  The ultimate source of\n+dependencies is the source code being compiled, and specifying the\n+same thing in multiple places is a recipe for build skew.\n+\n+Hence, a protocol by which a compiler can query a build system.  This\n+was originally described in <a\n+href=\"https://wg21.link/p1184r1\">p1184r1:A Module Mapper</a>.  Along\n+with a proof-of-concept hack in GNUmake, described in <a\n+href=\"https://wg21.link/p1602\">p1602:Make Me A Module</a>. The current\n+implementation has evolved and an update to p1184 will be forthcoming.\n+\n+## Packet Encoding\n+\n+The protocol is turn-based.  The compiler sends a block of one or more\n+requests to the builder, then waits for a block of responses to all of\n+those requests.  If the builder needs to compile something to satisfy\n+a request, there may be some time before the response.  A builder may\n+service multiple compilers concurrently, each as a separate connection.\n+\n+When multiple requests are in a block, the responses are also in a\n+block, and in corresponding order.  The responses must not be\n+commenced eagerly -- they must wait until the incoming block has ended\n+(as mentioned above, it is turn-based).  To do otherwise risks\n+deadlock, as there is no requirement for a sending end of the\n+communication to listen for incoming responses (or new requests) until\n+it has completed sending its current block.\n+\n+Every request has a response.\n+\n+Requests and responses are user-readable text.  It is not intended as\n+a transmission medium to send large binary objects (such as compiled\n+modules).  It is presumed the builder and the compiler share a file\n+system, for that kind of thing.<sup><a href=\"#3\">3</a></sup>\n+\n+Messages characters are encoded in UTF8.\n+\n+Messages are a sequence of octets ending with a NEWLINE (0xa).  The lines\n+consist of a sequence of words, separated by WHITESPACE (0x20 or 0x9).\n+Words themselves do not contain WHITESPACE.  Lines consisting solely\n+of WHITESPACE (or empty) are ignored.\n+\n+To encode a block of multiple messages, non-final messages end with a\n+single word of SEMICOLON (0x3b), immediately before the NEWLINE.  Thus\n+a serial connection can determine whether a block is complete without\n+decoding the messages.\n+\n+Words containing characters in the set [-+_/%.A-Za-z0-9] need not be\n+quoted.  Words containing characters outside that set should be\n+quoted.  A zero-length word may be achieved with `''`\n+\n+Quoted words begin and end with APOSTROPHE (x27). Within the quoted\n+word, BACKSLASH (x5c) is used as an escape mechanism, with the\n+following meanings:\n+\n+* \\\\n - NEWLINE (0xa)\n+* \\\\t - TAB (0x9)\n+* \\\\' - APOSTROPHE (')\n+* \\\\\\\\ - BACKSLASH (\\\\)\n+\n+Characters in the range [0x00, 0x20) and 0x7f are encoded with one or\n+two lowercase hex characters.  Octets in the range [0x80,0xff) are\n+UTF8 encodings of unicode characters outside the traditional ASCII set\n+and passed as such.\n+\n+Decoding should be more relaxed.  Unquoted words containing characters\n+in the range [0x20,0xff] other than BACKSLASH or APOSTROPHE should be\n+accepted.  In a quoted sequence, `\\` followed by one or two lower case\n+hex characters decode to that octet.  Further, words can be\n+constructed from a mixture of abutted quoted and unquoted sequences.\n+For instance `FOO' 'bar` would decode to the word `FOO bar`.\n+\n+Notice that the block continuation marker of `;` is not a valid\n+encoding of the word `;`, which would be `';'`.\n+\n+It is recommended that words are separated by single SPACE characters.\n+\n+## Messages\n+\n+The message descriptions use `$metavariable` examples.\n+\n+The request messages are specific to a particular action.  The response\n+messages are more generic, describing their value types, but not their\n+meaning.  Message consumers need to know the response to decode them.\n+Notice the `Packet::GetRequest()` method records in response packets\n+what the request being responded to was.  Do not confuse this with the\n+`Packet::GetCode ()` method.\n+\n+### Responses\n+\n+The simplest response is a single:\n+\n+`OK`\n+\n+This indicates the request was successful.\n+\n+\n+An error response is:\n+\n+`ERROR $message`\n+\n+The message is a human-readable string.  It indicates failure of the request.\n+\n+Pathnames are encoded with:\n+\n+`PATHNAME $pathname`\n+\n+Boolean responses use:\n+\n+`BOOL `(`TRUE`|`FALSE`)\n+\n+### Handshake Request\n+\n+The first message is a handshake:\n+\n+`HELLO $version $compiler $ident`\n+\n+The `$version` is a numeric value, currently `1`.  `$compiler` identifies\n+the compiler &mdash; builders may need to keep compiled modules from\n+different compilers separate.  `$ident` is an identifier the builder\n+might use to identify the compilation it is communicating with.\n+\n+Responses are:\n+\n+`HELLO $version $builder [$flags]`\n+\n+A successful handshake.  The communication is now connected and other\n+messages may be exchanged.  An ERROR response indicates an unsuccessful\n+handshake.  The communication remains unconnected.\n+\n+There is nothing restricting a handshake to its own message block.  Of\n+course, if the handshake fails, subsequent non-handshake messages in\n+the block will fail (producing error responses).\n+\n+The `$flags` word, if present allows a server to control what requests\n+might be given.  See below.\n+\n+### C++ Module Requests\n+\n+A set of requests are specific to C++ modules:\n+\n+#### Flags\n+\n+Several requests and one response have an optional `$flags` word.\n+These are the `Cody::Flags` value pertaining to that request.  If\n+omitted the value 0 is implied.  The following flags are available:\n+\n+* `0`, `None`: No flags.\n+\n+* `1<<0`, `NameOnly`: The request is for the name only, and not the\n+  CMI contents.\n+\n+The `NameOnly` flag may be provded in a handshake response, and\n+indicates that the server is interested in requests only for their\n+implied dependency information.  It may be provided on a request to\n+indicate that only the CMI name is required, not its contents (for\n+instance, when preprocessing).  Note that a compiler may still make\n+`NameOnly` requests even if the server did not ask for such.\n+\n+#### Repository\n+\n+All relative CMI file names are relative to a repository.  (There are\n+usually no absolute CMI files).  The repository may be determined\n+with:\n+\n+`MODULE-REPO`\n+\n+A PATHNAME response is expected.  The `$pathname` may be an empty\n+word, which is equivalent to `.`.  When the response is a relative\n+pathname, it must be relative to the client's current working\n+directory (which might be a process on a different host to the\n+server).  You may set the repository to `/`, if you with to use paths\n+relative to the root directory.\n+\n+#### Exporting\n+\n+A compilation of a module interface, partition or header unit can\n+inform the builder with:\n+\n+`MODULE-EXPORT $module [$flags]`\n+\n+This will result in a PATHNAME response naming the Compiled Module\n+Interface pathname to write.\n+\n+The `MODULE-EXPORT` request does not indicate the module has been\n+successfully compiled.  At most one `MODULE-EXPORT` is to be made, and\n+as the connection is for a single compilation, the builder may infer\n+dependency relationships between the module being generated and import\n+requests made.\n+\n+Named module names and header unit names are distinguished by making\n+the latter unambiguously look like file names.  Firstly, they must be\n+fully resolved according to the compiler's usual include path.  If\n+that results in an absolute name file name (beginning with `/`, or\n+certain other OS-specific sequences), all is well.  Otherwise a\n+relative file name must be prefixed by `./` to be distinguished from a\n+similarly named named module.  This prefixing must occur, even if the\n+header-unit's name contains characters that cannot appear in a named\n+module's name.\n+\n+It is expected that absolute header-unit names convert to relative CMI\n+names, to keep all CMIs within the CMI repository.  This means that\n+steps must be taken to distinguish the CMIs for `/here` from `./here`,\n+and this can be achieved by replacing the leading `./` directory with\n+`,/`, which is visually similar but does not have the self-reference\n+semantics of dot.  Likewise, header-unit names containing `..`\n+directories, can be remapped to `,,`.  (When symlinks are involved\n+`bob/dob/..` might not be `bob`, of course.)  C++ header-unit\n+semantics are such that there is no need to resolve multiple ways of\n+spelling a particular header-unit to a unique CMI file.\n+\n+Successful compilation of an interface is indicated with a subsequent:\n+\n+`MODULE-COMPILED $module [$flags]`\n+\n+request.  This indicates the CMI file has been written to disk, so\n+that any other compilations waiting on it may proceed.  Depending on\n+compiler implementation, the CMI may be written before the compilation\n+completes.  A single OK response is expected.\n+\n+Compilation failure can be inferred by lack of a `MODULE-COMPILED`\n+request.  It is presumed the builder can determine this, as it is also\n+responsible for launching and reaping the compiler invocations\n+themselves.\n+\n+#### Importing\n+\n+Importation, including that of header-units, uses:\n+\n+`MODULE-IMPORT $module [$flags]`\n+\n+A PATHNAME response names the CMI file to be read.  Should the builder\n+have to invoke a compilation to produce the CMI, the response should\n+be delayed until that occurs.  If such a compilation fails, an error\n+response should be provided to the requestor &mdash; which will then\n+presumably fail in some manner.\n+\n+#### Include Translation\n+\n+Include translation can be determined with:\n+\n+`INCLUDE-TRANSLATE $header [$flags]`\n+\n+The header name, `$header`, is the fully resolved header name, in the\n+above-mentioned unambiguous filename form.  The response will either\n+be a BOOL response indicating textual inclusion, or a PATHNAME\n+response naming the CMI for such translation.  The BOOL value is TRUE,\n+if the header is known to be a textual header, and FALSE if nothing is\n+known about it -- the latter might cause diagnostics about incomplete\n+knowledge.\n+\n+### GCC LTO Messages\n+\n+These set of requests are used for GCC LTO jobserver integration with GNU Make\n+\n+## Building libCody\n+\n+Libcody is written in C++11.  (It's a intended for compilers, so\n+there'd be a bootstrapping problem if it used the latest and greatest.)\n+\n+### Using configure and make.\n+\n+It supports the usual `configure`, `make`, `make check` & `make install`\n+sequence.  It does not support building in the source directory --\n+that just didn't drop out, and it's not how I build things (because,\n+again, for compilers).  Excitingly it uses my own `joust` test\n+harness, so you'll need to build and install that somewhere, if you\n+want the comfort of testing.\n+\n+The following configure options are available, in addition to the usual set:\n+\n+* `--enable-checking` Compile with assert-like checking.  Defaults to on.\n+\n+* `--with-tooldir=DIR` Prepend `DIR` to `PATH` when building (`DIR`\n+  need not already include the trailing `/bin`, and the right things\n+  happen).  Use this if you need to point to non-standard tools that\n+  you usually don't have in your path.  This path is also used when\n+  the configure script searches for programs.\n+\n+* `--with-toolinc=DIR`, `--with-toollib=DIR`, include path and library\n+  path variants of `--with-tooldir`.  If these are siblings of the\n+  tool bin directory, they'll be found automatically.\n+\n+* `--with-compiler=NAME` Specify a particular compiler to use.\n+  Usually what configure finds is sufficiently usable.\n+\n+* `--with-bugurl=URL` Override the bugreporting URL.  Do this if\n+  you're providing libcody as part of a package that /you/ are\n+  supporting.\n+\n+* `--enable-maintainer-mode` Specify that rules to rebuild things like\n+  `configure` (with `autoconf`) should be enabled.  When not enabled,\n+  you'll get a message if these appear out of date, but that can\n+  happen naturally after an update or clone as `git`, in common with\n+  other VCs, doesn't preserve the relative ordering of file\n+  modifications.  You can use `make MAINTAINER=touch` to shut make up,\n+  if this occurs (or manually execute the `autoconf` and related\n+  commands).\n+\n+When building, you can override the default optimization flags with\n+`CXXFLAGS=$flags`.  I often build a debuggable library with `make\n+CXXFLAGS=-g3`.\n+\n+The `Makefile` will also parallelize according to the number of CPUs,\n+unless you specify explicitly with a `-j` option.  This is a little\n+clunky, as it's not possible to figure out inside the makefile whether\n+the user provided `-j`.  (Or at least I've not figured out how.)\n+\n+### Using cmake and make\n+\n+#### In the clang/LLVM project\n+\n+The primary motivation for a cmake implementation is to allow building\n+libcody \"in tree\" in clang/LLVM.  In that case, a checkout of libcody\n+can be placed (or symbolically linked) into clang/tools.  This will\n+configure and build the library along with other LLVM dependencies.\n+\n+*NOTE* This is not treated as an installable entity (it is present only\n+for use by the project).\n+\n+*NOTE* The testing targets would not be appropriate in this configuration;\n+it is expected that lit-based testing of the required functionality will be\n+done by the code using the library.\n+\n+#### Stand-alone\n+\n+For use on platforms that don't support configure & make effectively, it\n+is possible to use the cmake & make process in stand-alone mode (similar\n+to the configure & make process above).\n+\n+An example use.\n+```\n+cmake -DCMAKE_INSTALL_PREFIX=/path/to/installation -DCMAKE_CXX_COMPILER=clang++ /path/to/libcody/source\n+make\n+make install\n+```\n+Supported flags (additions to the usual cmake ones).\n+\n+* `-DCODY_CHECKING=ON,OFF`: Compile with assert-like checking. (defaults ON)\n+\n+* `-DCODY_WITHEXCEPTIONS=ON,OFF`: Compile with C++ exceptions and RTTI enabled.\n+(defaults OFF, to be compatible with GCC and LLVM).\n+\n+*TODO*: At present there is no support for `ctest` integration (this should be\n+feasible, provided that `joust` is installed and can be discovered by `cmake`).\n+\n+## API\n+\n+The library defines entities in the `::Cody` namespace.\n+\n+There are 4 user-visible classes:\n+\n+* `Packet`: Responses to requests are `Packets`.  These have a code,\n+  indicating the response kind, and a payload.\n+\n+* `Client`: The compiler-end of a connection.  Requests may be made\n+  and responses are returned.\n+\n+* `Server`: The builder-end of a connection.  Requests may be waited\n+  for, and responses made.  Builders that serve multiple concurrent\n+  connections and spawn compilations to resolve dependencies may need\n+  to derive from this class to provide response queuing.\n+\n+* `Resolver`: The processing engine of the builder side.  User code is\n+  expected to derive from this class and provide virtual function\n+  overriders to affect the semantics of the resolver.\n+\n+In addition there are a number of helpers to setup connections.\n+\n+Logically the Client and the Server communicate via a sequential\n+channel.  The channel may be provided by:\n+\n+* two pipes, with different file descriptors for reading and writing\n+  at each end.\n+\n+* a socket, which will use the same file descriptor for reading and\n+  writing.  the socket can be created in a number of ways, including\n+  Unix domain and IPv6 TCP, for which helpers are provided.\n+\n+* a direct, in-process, connection, using buffer swapping.\n+\n+The communication channel is presumed reliable.\n+\n+Refer to the (currently very sparse) doxygen-generated documentation\n+for details of the API.\n+\n+## Examples\n+\n+To create an in-process resolver, use the following boilerplate:\n+\n+```\n+class MyResolver : Cody::Resolver { ... stuff here ... };\n+\n+Cody::Client *MakeClient (char const *maybe_ident)\n+{\n+  auto *r = new MyResolver (...);\n+  auto *s = new Cody::Server (r);\n+  auto *c = new Cody::Client (s);\n+\n+  auto t = c->ConnectRequest (\"ME\", maybe_ident);\n+  if (t.GetCode () == Cody::Client::TC_CONNECT)\n+    ;// Yay!\n+  else if (t.GetCode () == Cody::Client::TC_ERROR)\n+    report_error (t.GetString ());\n+\n+  return c;\n+}\n+\n+```\n+\n+For a remotely connecting client:\n+```\n+Cody::Client *MakeClient ()\n+{\n+  char const *err = nullptr;\n+  int fd = OpenInet6 (char const **err, name, port);\n+  if (fd < 0)\n+    { ... error... return nullptr;}\n+\n+  auto *c = new Cody::Client (fd);\n+\n+  auto t = c->ConnectRequest (\"ME\", maybe_ident);\n+  if (t.GetCode () == Cody::Client::TC_CONNECT)\n+    ;// Yay!\n+  else if (t.GetCode () == Cody::Client::TC_ERROR)\n+    report_error (t.GetString ());\n+\n+  return c;\n+}\n+```\n+\n+# Future Directions\n+\n+* Current Directory.  There is no mechanism to check the builder and\n+  the compiler have the same working directory.  Perhaps that should\n+  be addressed.\n+\n+* Include path canonization and/or header file lookup.  This can be\n+  expensive, particularly with many `-I` options, due to the system\n+  calls.  Perhaps using a common resource would be cheaper?\n+\n+* Generated header file lookup/construction.  This is essentially the\n+  same problem as importing a module, and build systems are crap at\n+  dealing with this.\n+\n+* Link-time compilations.  Another place the compiler would like to\n+  ask the build system to do things.\n+\n+* C++20 API entrypoints &mdash; std:string_view would be nice\n+\n+* Exception-safety audit.  Exceptions are not used, but memory\n+  exhaustion could happen.  And perhaps user's resolver code employs\n+  exceptions?\n+\n+<a name=\"1\">1</a>: Or a small town in Wyoming\n+\n+<a name=\"2\">2</a>: This describes one common implementation technique.\n+The std itself doesn't require such serializations, but the ability to\n+create them is kind of the point.  Also, 'compiler' is used where we\n+mean any consumer of a module, and 'build system' where we mean any\n+producer of a module.\n+\n+<a name=\"3\">3</a>: Even when the builder is managing a distributed set\n+of compilations, the builder must have a mechanism to get source files\n+to, and object files from, the compilations.  That scheme can also\n+transfer the CMI files."}, {"sha": "52df3176c9ae2566edea1cf5e4e2065da2cbe102", "filename": "libcody/buffer.cc", "status": "added", "additions": 387, "deletions": 0, "changes": 387, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Fbuffer.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Fbuffer.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2Fbuffer.cc?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -0,0 +1,387 @@\n+// CODYlib\t\t-*- mode:c++ -*-\n+// Copyright (C) 2020 Nathan Sidwell, nathan@acm.org\n+// License: Apache v2.0\n+\n+// Cody\n+#include \"internal.hh\"\n+// C++\n+#include <algorithm>\n+// C\n+#include <cstring>\n+// OS\n+#include <unistd.h>\n+#include <cerrno>\n+\n+// MessageBuffer code\n+\n+// Lines consist of words and end with a NEWLINE (0xa) char\n+// Whitespace characters are TAB (0x9) and SPACE (0x20)\n+// Words consist of non-whitespace chars separated by whitespace.\n+// Multiple lines in one transaction are indicated by ending non-final\n+// lines with a SEMICOLON (0x3b) word, immediately before the NEWLINE\n+// Continuations with ; preceding it\n+// Words matching regexp [-+_/%.a-zA-Z0-9]+ need no quoting.\n+// Quoting with '...'\n+// Anything outside of [-+_/%.a-zA-Z0-9] needs quoting\n+// Anything outside of <= <space> or DEL or \\' or \\\\ needs escaping.\n+// Escapes are \\\\, \\', \\n, \\t, \\_, everything else as \\<hex><hex>?\n+// Spaces separate words, UTF8 encoding for non-ascii chars\n+\n+namespace Cody {\n+namespace Detail {\n+\n+static const char CONTINUE = S2C(u8\";\");\n+\n+void MessageBuffer::BeginLine ()\n+{\n+  if (!buffer.empty ())\n+    {\n+      // Terminate the previous line with a continuation\n+      buffer.reserve (buffer.size () + 3);\n+      buffer.push_back (S2C(u8\" \"));\n+      buffer.push_back (CONTINUE);\n+      buffer.push_back (S2C(u8\"\\n\"));\n+    }\n+  lastBol = buffer.size ();\n+}\n+\n+// QUOTE means 'maybe quote', we search it for quote-needing chars\n+\n+void MessageBuffer::Append (char const *str, bool quote, size_t len)\n+{\n+  if (len == ~size_t (0))\n+    len = strlen (str);\n+\n+  if (!len && !quote)\n+    return;\n+\n+  // We want to quote characters outside of [-+_A-Za-z0-9/%.], anything\n+  // that could remotely be shell-active.  UTF8 encoding for non-ascii.\n+  if (quote && len)\n+    {\n+      quote = false;\n+      // Scan looking for quote-needing characters.  We could just\n+      // append until we find one, but that's probably confusing\n+      for (size_t ix = len; ix--;)\n+\t{\n+\t  unsigned char c = (unsigned char)str[ix];\n+\t  if (!((c >= S2C(u8\"a\") && c <= S2C(u8\"z\"))\n+\t\t|| (c >= S2C(u8\"A\") && c <= S2C(u8\"Z\"))\n+\t\t|| (c >= S2C(u8\"0\") && c <= S2C(u8\"9\"))\n+\t\t|| c == S2C(u8\"-\") || c == S2C(u8\"+\") || c == S2C(u8\"_\")\n+\t\t|| c == S2C(u8\"/\") || c == S2C(u8\"%\") || c == S2C(u8\".\")))\n+\t    {\n+\t      quote = true;\n+\t      break;\n+\t    }\n+\t}\n+    }\n+\n+  // Maximal length of appended string\n+  buffer.reserve (buffer.size () + len * (quote ? 3 : 1) + 2);\n+\n+  if (quote)\n+    buffer.push_back (S2C(u8\"'\"));\n+\n+  for (auto *end = str + len; str != end;)\n+    {\n+      auto *e = end;\n+\n+      if (quote)\n+\t// Look for next escape-needing char.  More relaxed than\n+\t// the earlier needs-quoting check.\n+\tfor (e = str; e != end; ++e)\n+\t  {\n+\t    unsigned char c = (unsigned char)*e;\n+\t    if (c < S2C(u8\" \") || c == 0x7f\n+\t\t|| c == S2C(u8\"\\\\\") || c == S2C(u8\"'\"))\n+\t      break;\n+\t  }\n+      buffer.insert (buffer.end (), str, e);\n+      str = e;\n+\n+      if (str == end)\n+\tbreak;\n+\n+      buffer.push_back (S2C(u8\"\\\\\"));\n+      switch (unsigned char c = (unsigned char)*str++)\n+\t{\n+\tcase S2C(u8\"\\t\"):\n+\t  c = S2C(u8\"t\");\n+\t  goto append;\n+\n+\tcase S2C(u8\"\\n\"):\n+\t  c = S2C(u8\"n\");\n+\t  goto append;\n+\n+\tcase S2C(u8\"'\"):\n+\tcase S2C(u8\"\\\\\"):\n+\tappend:\n+\t  buffer.push_back (c);\n+\t  break;\n+\n+\tdefault:\n+\t  // Full-on escape.  Use 2 lower-case hex chars\n+\t  for (unsigned shift = 8; shift;)\n+\t    {\n+\t      shift -= 4;\n+\n+\t      char nibble = (c >> shift) & 0xf;\n+\t      nibble += S2C(u8\"0\");\n+\t      if (nibble > S2C(u8\"9\"))\n+\t\tnibble += S2C(u8\"a\") - (S2C(u8\"9\") + 1);\n+\t      buffer.push_back (nibble);\n+\t    }\n+\t}\n+    }\n+\n+  if (quote)\n+    buffer.push_back (S2C(u8\"'\"));\n+}\n+\n+void MessageBuffer::Append (char c)\n+{\n+  buffer.push_back (c);\n+}\n+\n+void MessageBuffer::AppendInteger (unsigned u)\n+{\n+  std::string v (std::to_string (u));\n+  AppendWord (v);\n+}\n+\n+int MessageBuffer::Write (int fd) noexcept\n+{\n+  size_t limit = buffer.size () - lastBol;\n+  ssize_t count = write (fd, &buffer.data ()[lastBol], limit);\n+\n+  int err = 0;\n+  if (count < 0)\n+    err = errno;\n+  else\n+    {\n+      lastBol += count;\n+      if (size_t (count) != limit)\n+\terr = EAGAIN;\n+    }\n+\n+  if (err != EAGAIN && err != EINTR)\n+    {\n+      // Reset for next message\n+      buffer.clear ();\n+      lastBol = 0;\n+    }\n+\n+  return err;\n+}\n+\n+int MessageBuffer::Read (int fd) noexcept\n+{\n+  constexpr size_t blockSize = 200;\n+\n+  size_t lwm = buffer.size ();\n+  size_t hwm = buffer.capacity ();\n+  if (hwm - lwm < blockSize / 2)\n+    hwm += blockSize;\n+  buffer.resize (hwm);\n+\n+  auto iter = buffer.begin () + lwm;\n+  ssize_t count = read (fd, &*iter, hwm - lwm);\n+  buffer.resize (lwm + (count >= 0 ? count : 0));\n+\n+  if (count < 0)\n+    return errno;\n+\n+  if (!count)\n+    // End of file\n+    return -1;\n+\n+  bool more = true;\n+  for (;;)\n+    {\n+      auto newline = std::find (iter, buffer.end (), S2C(u8\"\\n\"));\n+      if (newline == buffer.end ())\n+\tbreak;\n+      more = newline != buffer.begin () && newline[-1] == CONTINUE;\n+      iter = newline + 1;\n+\t\n+      if (iter == buffer.end ())\n+\tbreak;\n+\n+      if (!more)\n+\t{\n+\t  // There is no continuation, but there are chars after the\n+\t  // newline.  Truncate the buffer and return an error\n+\t  buffer.resize (iter - buffer.begin ());\n+\t  return EINVAL;\n+\t}\n+    }\n+\n+  return more ? EAGAIN : 0;\n+}\n+\n+int MessageBuffer::Lex (std::vector<std::string> &result)\n+{\n+  result.clear ();\n+\n+  int err = ENOENT;\n+  if (IsAtEnd ())\n+    return ENOENT;\n+\n+  Assert (buffer.back () == S2C(u8\"\\n\"));\n+\n+  auto iter = buffer.begin () + lastBol;\n+\n+  for (std::string *word = nullptr;;)\n+    {\n+      char c = *iter;\n+\n+      ++iter;\n+      if (c == S2C(u8\" \") || c == S2C(u8\"\\t\"))\n+\t{\n+\t  word = nullptr;\n+\t  continue;\n+\t}\n+\n+      if (c == S2C(u8\"\\n\"))\n+\tbreak;\n+\n+      if (c == CONTINUE)\n+\t{\n+\t  // Line continuation\n+\t  if (word || *iter != S2C(u8\"\\n\"))\n+\t    goto malformed;\n+\t  ++iter;\n+\t  break;\n+\t}\n+\n+      if (c <= S2C(u8\" \") || c >= 0x7f)\n+\tgoto malformed;\n+\n+      if (!word)\n+\t{\n+\t  result.emplace_back ();\n+\t  word = &result.back ();\n+\t}\n+\n+      if (c == S2C(u8\"'\"))\n+\t{\n+\t  // Quoted word\n+\t  for (;;)\n+\t    {\n+\t      c = *iter;\n+\n+\t      if (c == S2C(u8\"\\n\"))\n+\t\t{\n+\t\tmalformed:;\n+\t\t  result.clear ();\n+\t\t  iter = std::find (iter, buffer.end (), S2C(u8\"\\n\"));\n+\t\t  auto back = iter;\n+\t\t  if (back[-1] == CONTINUE  && back[-2] == S2C(u8\" \"))\n+\t\t    // Smells like a line continuation\n+\t\t    back -= 2;\n+\t\t  result.emplace_back (&buffer[lastBol],\n+\t\t\t\t       back - buffer.begin () - lastBol);\n+\t\t  ++iter;\n+\t\t  lastBol = iter - buffer.begin ();\n+\t\t  return EINVAL;\n+\t\t}\n+\n+\t      if (c < S2C(u8\" \") || c >= 0x7f)\n+\t\tgoto malformed;\n+\n+\t      ++iter;\n+\t      if (c == S2C(u8\"'\"))\n+\t\tbreak;\n+\n+\t      if (c == S2C(u8\"\\\\\"))\n+\t\t// escape\n+\t\tswitch (c = *iter)\n+\t\t  {\n+\t\t    case S2C(u8\"\\\\\"):\n+\t\t    case S2C(u8\"'\"):\n+\t\t      ++iter;\n+\t\t      break;\n+\n+\t\t    case S2C(u8\"n\"):\n+\t\t      c = S2C(u8\"\\n\");\n+\t\t      ++iter;\n+\t\t      break;\n+\n+\t\t    case S2C(u8\"_\"):\n+\t\t      // We used to escape SPACE as \\_, so accept that\n+\t\t      c = S2C(u8\" \");\n+\t\t      ++iter;\n+\t\t      break;\n+\n+\t\t    case S2C(u8\"t\"):\n+\t\t      c = S2C(u8\"\\t\");\n+\t\t      ++iter;\n+\t\t      break;\n+\n+\t\t    default:\n+\t\t      {\n+\t\t\tunsigned v = 0;\n+\t\t\tfor (unsigned nibble = 0; nibble != 2; nibble++)\n+\t\t\t  {\n+\t\t\t    c = *iter;\n+\t\t\t    if (c < S2C(u8\"0\"))\n+\t\t\t      {\n+\t\t\t\tif (!nibble)\n+\t\t\t\t  goto malformed;\n+\t\t\t\tbreak;\n+\t\t\t      }\n+\t\t\t    else if (c <= S2C(u8\"9\"))\n+\t\t\t      c -= S2C(u8\"0\");\n+\t\t\t    else if (c < S2C(u8\"a\"))\n+\t\t\t      {\n+\t\t\t\tif (!nibble)\n+\t\t\t\t  goto malformed;\n+\t\t\t\tbreak;\n+\t\t\t      }\n+\t\t\t    else if (c <= S2C(u8\"f\"))\n+\t\t\t      c -= S2C(u8\"a\") - 10;\n+\t\t\t    else\n+\t\t\t      {\n+\t\t\t\tif (!nibble)\n+\t\t\t\t  goto malformed;\n+\t\t\t\tbreak;\n+\t\t\t      }\n+\t\t\t    ++iter;\n+\t\t\t    v = (v << 4) | c;\n+\t\t\t  }\n+\t\t\tc = v;\n+\t\t      }\n+\t\t  }\n+\t      word->push_back (c);\n+\t    }\n+\t}\n+      else\n+\t// Unquoted character\n+\tword->push_back (c);\n+    }\n+  lastBol = iter - buffer.begin ();\n+  if (result.empty ())\n+    return ENOENT;\n+\n+  return 0;\n+}\n+\n+void MessageBuffer::LexedLine (std::string &str)\n+{\n+  if (lastBol)\n+    {\n+      size_t pos = lastBol - 1;\n+      for (; pos; pos--)\n+\tif (buffer[pos-1] == S2C(u8\"\\n\"))\n+\t  break;\n+\n+      size_t end = lastBol - 1;\n+      if (buffer[end-1] == CONTINUE && buffer[end-2] == S2C(u8\" \"))\n+\t// Strip line continuation\n+\tend -= 2;\n+      str.append (&buffer[pos], end - pos);\n+    }\n+}\n+} // Detail\n+} // Cody"}, {"sha": "256083a70d35921d544b15f4f51749af89d18b89", "filename": "libcody/build-aux/config.guess", "status": "added", "additions": 1476, "deletions": 0, "changes": 1476, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Fbuild-aux%2Fconfig.guess", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Fbuild-aux%2Fconfig.guess", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2Fbuild-aux%2Fconfig.guess?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -0,0 +1,1476 @@\n+#! /bin/sh\n+# Attempt to guess a canonical system name.\n+#   Copyright 1992-2018 Free Software Foundation, Inc.\n+\n+timestamp='2018-03-08'\n+\n+# This file is free software; you can redistribute it and/or modify it\n+# under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful, but\n+# WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+# General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, see <https://www.gnu.org/licenses/>.\n+#\n+# As a special exception to the GNU General Public License, if you\n+# distribute this file as part of a program that contains a\n+# configuration script generated by Autoconf, you may include it under\n+# the same distribution terms that you use for the rest of that\n+# program.  This Exception is an additional permission under section 7\n+# of the GNU General Public License, version 3 (\"GPLv3\").\n+#\n+# Originally written by Per Bothner; maintained since 2000 by Ben Elliston.\n+#\n+# You can get the latest version of this script from:\n+# https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess\n+#\n+# Please send patches to <config-patches@gnu.org>.\n+\n+\n+me=`echo \"$0\" | sed -e 's,.*/,,'`\n+\n+usage=\"\\\n+Usage: $0 [OPTION]\n+\n+Output the configuration name of the system \\`$me' is run on.\n+\n+Options:\n+  -h, --help         print this help, then exit\n+  -t, --time-stamp   print date of last modification, then exit\n+  -v, --version      print version number, then exit\n+\n+Report bugs and patches to <config-patches@gnu.org>.\"\n+\n+version=\"\\\n+GNU config.guess ($timestamp)\n+\n+Originally written by Per Bothner.\n+Copyright 1992-2018 Free Software Foundation, Inc.\n+\n+This is free software; see the source for copying conditions.  There is NO\n+warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n+\n+help=\"\n+Try \\`$me --help' for more information.\"\n+\n+# Parse command line\n+while test $# -gt 0 ; do\n+  case $1 in\n+    --time-stamp | --time* | -t )\n+       echo \"$timestamp\" ; exit ;;\n+    --version | -v )\n+       echo \"$version\" ; exit ;;\n+    --help | --h* | -h )\n+       echo \"$usage\"; exit ;;\n+    -- )     # Stop option processing\n+       shift; break ;;\n+    - )\t# Use stdin as input.\n+       break ;;\n+    -* )\n+       echo \"$me: invalid option $1$help\" >&2\n+       exit 1 ;;\n+    * )\n+       break ;;\n+  esac\n+done\n+\n+if test $# != 0; then\n+  echo \"$me: too many arguments$help\" >&2\n+  exit 1\n+fi\n+\n+trap 'exit 1' 1 2 15\n+\n+# CC_FOR_BUILD -- compiler used by this script. Note that the use of a\n+# compiler to aid in system detection is discouraged as it requires\n+# temporary files to be created and, as you can see below, it is a\n+# headache to deal with in a portable fashion.\n+\n+# Historically, `CC_FOR_BUILD' used to be named `HOST_CC'. We still\n+# use `HOST_CC' if defined, but it is deprecated.\n+\n+# Portable tmp directory creation inspired by the Autoconf team.\n+\n+set_cc_for_build='\n+trap \"exitcode=\\$?; (rm -f \\$tmpfiles 2>/dev/null; rmdir \\$tmp 2>/dev/null) && exit \\$exitcode\" 0 ;\n+trap \"rm -f \\$tmpfiles 2>/dev/null; rmdir \\$tmp 2>/dev/null; exit 1\" 1 2 13 15 ;\n+: ${TMPDIR=/tmp} ;\n+ { tmp=`(umask 077 && mktemp -d \"$TMPDIR/cgXXXXXX\") 2>/dev/null` && test -n \"$tmp\" && test -d \"$tmp\" ; } ||\n+ { test -n \"$RANDOM\" && tmp=$TMPDIR/cg$$-$RANDOM && (umask 077 && mkdir $tmp) ; } ||\n+ { tmp=$TMPDIR/cg-$$ && (umask 077 && mkdir $tmp) && echo \"Warning: creating insecure temp directory\" >&2 ; } ||\n+ { echo \"$me: cannot create a temporary directory in $TMPDIR\" >&2 ; exit 1 ; } ;\n+dummy=$tmp/dummy ;\n+tmpfiles=\"$dummy.c $dummy.o $dummy.rel $dummy\" ;\n+case $CC_FOR_BUILD,$HOST_CC,$CC in\n+ ,,)    echo \"int x;\" > \"$dummy.c\" ;\n+\tfor c in cc gcc c89 c99 ; do\n+\t  if ($c -c -o \"$dummy.o\" \"$dummy.c\") >/dev/null 2>&1 ; then\n+\t     CC_FOR_BUILD=\"$c\"; break ;\n+\t  fi ;\n+\tdone ;\n+\tif test x\"$CC_FOR_BUILD\" = x ; then\n+\t  CC_FOR_BUILD=no_compiler_found ;\n+\tfi\n+\t;;\n+ ,,*)   CC_FOR_BUILD=$CC ;;\n+ ,*,*)  CC_FOR_BUILD=$HOST_CC ;;\n+esac ; set_cc_for_build= ;'\n+\n+# This is needed to find uname on a Pyramid OSx when run in the BSD universe.\n+# (ghazi@noc.rutgers.edu 1994-08-24)\n+if (test -f /.attbin/uname) >/dev/null 2>&1 ; then\n+\tPATH=$PATH:/.attbin ; export PATH\n+fi\n+\n+UNAME_MACHINE=`(uname -m) 2>/dev/null` || UNAME_MACHINE=unknown\n+UNAME_RELEASE=`(uname -r) 2>/dev/null` || UNAME_RELEASE=unknown\n+UNAME_SYSTEM=`(uname -s) 2>/dev/null`  || UNAME_SYSTEM=unknown\n+UNAME_VERSION=`(uname -v) 2>/dev/null` || UNAME_VERSION=unknown\n+\n+case \"$UNAME_SYSTEM\" in\n+Linux|GNU|GNU/*)\n+\t# If the system lacks a compiler, then just pick glibc.\n+\t# We could probably try harder.\n+\tLIBC=gnu\n+\n+\teval \"$set_cc_for_build\"\n+\tcat <<-EOF > \"$dummy.c\"\n+\t#include <features.h>\n+\t#if defined(__UCLIBC__)\n+\tLIBC=uclibc\n+\t#elif defined(__dietlibc__)\n+\tLIBC=dietlibc\n+\t#else\n+\tLIBC=gnu\n+\t#endif\n+\tEOF\n+\teval \"`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^LIBC' | sed 's, ,,g'`\"\n+\n+\t# If ldd exists, use it to detect musl libc.\n+\tif command -v ldd >/dev/null && \\\n+\t\tldd --version 2>&1 | grep -q ^musl\n+\tthen\n+\t    LIBC=musl\n+\tfi\n+\t;;\n+esac\n+\n+# Note: order is significant - the case branches are not exclusive.\n+\n+case \"$UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION\" in\n+    *:NetBSD:*:*)\n+\t# NetBSD (nbsd) targets should (where applicable) match one or\n+\t# more of the tuples: *-*-netbsdelf*, *-*-netbsdaout*,\n+\t# *-*-netbsdecoff* and *-*-netbsd*.  For targets that recently\n+\t# switched to ELF, *-*-netbsd* would select the old\n+\t# object file format.  This provides both forward\n+\t# compatibility and a consistent mechanism for selecting the\n+\t# object file format.\n+\t#\n+\t# Note: NetBSD doesn't particularly care about the vendor\n+\t# portion of the name.  We always set it to \"unknown\".\n+\tsysctl=\"sysctl -n hw.machine_arch\"\n+\tUNAME_MACHINE_ARCH=`(uname -p 2>/dev/null || \\\n+\t    \"/sbin/$sysctl\" 2>/dev/null || \\\n+\t    \"/usr/sbin/$sysctl\" 2>/dev/null || \\\n+\t    echo unknown)`\n+\tcase \"$UNAME_MACHINE_ARCH\" in\n+\t    armeb) machine=armeb-unknown ;;\n+\t    arm*) machine=arm-unknown ;;\n+\t    sh3el) machine=shl-unknown ;;\n+\t    sh3eb) machine=sh-unknown ;;\n+\t    sh5el) machine=sh5le-unknown ;;\n+\t    earmv*)\n+\t\tarch=`echo \"$UNAME_MACHINE_ARCH\" | sed -e 's,^e\\(armv[0-9]\\).*$,\\1,'`\n+\t\tendian=`echo \"$UNAME_MACHINE_ARCH\" | sed -ne 's,^.*\\(eb\\)$,\\1,p'`\n+\t\tmachine=\"${arch}${endian}\"-unknown\n+\t\t;;\n+\t    *) machine=\"$UNAME_MACHINE_ARCH\"-unknown ;;\n+\tesac\n+\t# The Operating System including object format, if it has switched\n+\t# to ELF recently (or will in the future) and ABI.\n+\tcase \"$UNAME_MACHINE_ARCH\" in\n+\t    earm*)\n+\t\tos=netbsdelf\n+\t\t;;\n+\t    arm*|i386|m68k|ns32k|sh3*|sparc|vax)\n+\t\teval \"$set_cc_for_build\"\n+\t\tif echo __ELF__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n+\t\t\t| grep -q __ELF__\n+\t\tthen\n+\t\t    # Once all utilities can be ECOFF (netbsdecoff) or a.out (netbsdaout).\n+\t\t    # Return netbsd for either.  FIX?\n+\t\t    os=netbsd\n+\t\telse\n+\t\t    os=netbsdelf\n+\t\tfi\n+\t\t;;\n+\t    *)\n+\t\tos=netbsd\n+\t\t;;\n+\tesac\n+\t# Determine ABI tags.\n+\tcase \"$UNAME_MACHINE_ARCH\" in\n+\t    earm*)\n+\t\texpr='s/^earmv[0-9]/-eabi/;s/eb$//'\n+\t\tabi=`echo \"$UNAME_MACHINE_ARCH\" | sed -e \"$expr\"`\n+\t\t;;\n+\tesac\n+\t# The OS release\n+\t# Debian GNU/NetBSD machines have a different userland, and\n+\t# thus, need a distinct triplet. However, they do not need\n+\t# kernel version information, so it can be replaced with a\n+\t# suitable tag, in the style of linux-gnu.\n+\tcase \"$UNAME_VERSION\" in\n+\t    Debian*)\n+\t\trelease='-gnu'\n+\t\t;;\n+\t    *)\n+\t\trelease=`echo \"$UNAME_RELEASE\" | sed -e 's/[-_].*//' | cut -d. -f1,2`\n+\t\t;;\n+\tesac\n+\t# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:\n+\t# contains redundant information, the shorter form:\n+\t# CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM is used.\n+\techo \"$machine-${os}${release}${abi}\"\n+\texit ;;\n+    *:Bitrig:*:*)\n+\tUNAME_MACHINE_ARCH=`arch | sed 's/Bitrig.//'`\n+\techo \"$UNAME_MACHINE_ARCH\"-unknown-bitrig\"$UNAME_RELEASE\"\n+\texit ;;\n+    *:OpenBSD:*:*)\n+\tUNAME_MACHINE_ARCH=`arch | sed 's/OpenBSD.//'`\n+\techo \"$UNAME_MACHINE_ARCH\"-unknown-openbsd\"$UNAME_RELEASE\"\n+\texit ;;\n+    *:LibertyBSD:*:*)\n+\tUNAME_MACHINE_ARCH=`arch | sed 's/^.*BSD\\.//'`\n+\techo \"$UNAME_MACHINE_ARCH\"-unknown-libertybsd\"$UNAME_RELEASE\"\n+\texit ;;\n+    *:MidnightBSD:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-midnightbsd\"$UNAME_RELEASE\"\n+\texit ;;\n+    *:ekkoBSD:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-ekkobsd\"$UNAME_RELEASE\"\n+\texit ;;\n+    *:SolidBSD:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-solidbsd\"$UNAME_RELEASE\"\n+\texit ;;\n+    macppc:MirBSD:*:*)\n+\techo powerpc-unknown-mirbsd\"$UNAME_RELEASE\"\n+\texit ;;\n+    *:MirBSD:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-mirbsd\"$UNAME_RELEASE\"\n+\texit ;;\n+    *:Sortix:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-sortix\n+\texit ;;\n+    *:Redox:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-redox\n+\texit ;;\n+    mips:OSF1:*.*)\n+        echo mips-dec-osf1\n+        exit ;;\n+    alpha:OSF1:*:*)\n+\tcase $UNAME_RELEASE in\n+\t*4.0)\n+\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $3}'`\n+\t\t;;\n+\t*5.*)\n+\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $4}'`\n+\t\t;;\n+\tesac\n+\t# According to Compaq, /usr/sbin/psrinfo has been available on\n+\t# OSF/1 and Tru64 systems produced since 1995.  I hope that\n+\t# covers most systems running today.  This code pipes the CPU\n+\t# types through head -n 1, so we only detect the type of CPU 0.\n+\tALPHA_CPU_TYPE=`/usr/sbin/psrinfo -v | sed -n -e 's/^  The alpha \\(.*\\) processor.*$/\\1/p' | head -n 1`\n+\tcase \"$ALPHA_CPU_TYPE\" in\n+\t    \"EV4 (21064)\")\n+\t\tUNAME_MACHINE=alpha ;;\n+\t    \"EV4.5 (21064)\")\n+\t\tUNAME_MACHINE=alpha ;;\n+\t    \"LCA4 (21066/21068)\")\n+\t\tUNAME_MACHINE=alpha ;;\n+\t    \"EV5 (21164)\")\n+\t\tUNAME_MACHINE=alphaev5 ;;\n+\t    \"EV5.6 (21164A)\")\n+\t\tUNAME_MACHINE=alphaev56 ;;\n+\t    \"EV5.6 (21164PC)\")\n+\t\tUNAME_MACHINE=alphapca56 ;;\n+\t    \"EV5.7 (21164PC)\")\n+\t\tUNAME_MACHINE=alphapca57 ;;\n+\t    \"EV6 (21264)\")\n+\t\tUNAME_MACHINE=alphaev6 ;;\n+\t    \"EV6.7 (21264A)\")\n+\t\tUNAME_MACHINE=alphaev67 ;;\n+\t    \"EV6.8CB (21264C)\")\n+\t\tUNAME_MACHINE=alphaev68 ;;\n+\t    \"EV6.8AL (21264B)\")\n+\t\tUNAME_MACHINE=alphaev68 ;;\n+\t    \"EV6.8CX (21264D)\")\n+\t\tUNAME_MACHINE=alphaev68 ;;\n+\t    \"EV6.9A (21264/EV69A)\")\n+\t\tUNAME_MACHINE=alphaev69 ;;\n+\t    \"EV7 (21364)\")\n+\t\tUNAME_MACHINE=alphaev7 ;;\n+\t    \"EV7.9 (21364A)\")\n+\t\tUNAME_MACHINE=alphaev79 ;;\n+\tesac\n+\t# A Pn.n version is a patched version.\n+\t# A Vn.n version is a released version.\n+\t# A Tn.n version is a released field test version.\n+\t# A Xn.n version is an unreleased experimental baselevel.\n+\t# 1.2 uses \"1.2\" for uname -r.\n+\techo \"$UNAME_MACHINE\"-dec-osf\"`echo \"$UNAME_RELEASE\" | sed -e 's/^[PVTX]//' | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`\"\n+\t# Reset EXIT trap before exiting to avoid spurious non-zero exit code.\n+\texitcode=$?\n+\ttrap '' 0\n+\texit $exitcode ;;\n+    Amiga*:UNIX_System_V:4.0:*)\n+\techo m68k-unknown-sysv4\n+\texit ;;\n+    *:[Aa]miga[Oo][Ss]:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-amigaos\n+\texit ;;\n+    *:[Mm]orph[Oo][Ss]:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-morphos\n+\texit ;;\n+    *:OS/390:*:*)\n+\techo i370-ibm-openedition\n+\texit ;;\n+    *:z/VM:*:*)\n+\techo s390-ibm-zvmoe\n+\texit ;;\n+    *:OS400:*:*)\n+\techo powerpc-ibm-os400\n+\texit ;;\n+    arm:RISC*:1.[012]*:*|arm:riscix:1.[012]*:*)\n+\techo arm-acorn-riscix\"$UNAME_RELEASE\"\n+\texit ;;\n+    arm*:riscos:*:*|arm*:RISCOS:*:*)\n+\techo arm-unknown-riscos\n+\texit ;;\n+    SR2?01:HI-UX/MPP:*:* | SR8000:HI-UX/MPP:*:*)\n+\techo hppa1.1-hitachi-hiuxmpp\n+\texit ;;\n+    Pyramid*:OSx*:*:* | MIS*:OSx*:*:* | MIS*:SMP_DC-OSx*:*:*)\n+\t# akee@wpdis03.wpafb.af.mil (Earle F. Ake) contributed MIS and NILE.\n+\tif test \"`(/bin/universe) 2>/dev/null`\" = att ; then\n+\t\techo pyramid-pyramid-sysv3\n+\telse\n+\t\techo pyramid-pyramid-bsd\n+\tfi\n+\texit ;;\n+    NILE*:*:*:dcosx)\n+\techo pyramid-pyramid-svr4\n+\texit ;;\n+    DRS?6000:unix:4.0:6*)\n+\techo sparc-icl-nx6\n+\texit ;;\n+    DRS?6000:UNIX_SV:4.2*:7* | DRS?6000:isis:4.2*:7*)\n+\tcase `/usr/bin/uname -p` in\n+\t    sparc) echo sparc-icl-nx7; exit ;;\n+\tesac ;;\n+    s390x:SunOS:*:*)\n+\techo \"$UNAME_MACHINE\"-ibm-solaris2\"`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\"\n+\texit ;;\n+    sun4H:SunOS:5.*:*)\n+\techo sparc-hal-solaris2\"`echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*//'`\"\n+\texit ;;\n+    sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)\n+\techo sparc-sun-solaris2\"`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\"\n+\texit ;;\n+    i86pc:AuroraUX:5.*:* | i86xen:AuroraUX:5.*:*)\n+\techo i386-pc-auroraux\"$UNAME_RELEASE\"\n+\texit ;;\n+    i86pc:SunOS:5.*:* | i86xen:SunOS:5.*:*)\n+\teval \"$set_cc_for_build\"\n+\tSUN_ARCH=i386\n+\t# If there is a compiler, see if it is configured for 64-bit objects.\n+\t# Note that the Sun cc does not turn __LP64__ into 1 like gcc does.\n+\t# This test works for both compilers.\n+\tif [ \"$CC_FOR_BUILD\" != no_compiler_found ]; then\n+\t    if (echo '#ifdef __amd64'; echo IS_64BIT_ARCH; echo '#endif') | \\\n+\t\t(CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n+\t\tgrep IS_64BIT_ARCH >/dev/null\n+\t    then\n+\t\tSUN_ARCH=x86_64\n+\t    fi\n+\tfi\n+\techo \"$SUN_ARCH\"-pc-solaris2\"`echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*//'`\"\n+\texit ;;\n+    sun4*:SunOS:6*:*)\n+\t# According to config.sub, this is the proper way to canonicalize\n+\t# SunOS6.  Hard to guess exactly what SunOS6 will be like, but\n+\t# it's likely to be more like Solaris than SunOS4.\n+\techo sparc-sun-solaris3\"`echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*//'`\"\n+\texit ;;\n+    sun4*:SunOS:*:*)\n+\tcase \"`/usr/bin/arch -k`\" in\n+\t    Series*|S4*)\n+\t\tUNAME_RELEASE=`uname -v`\n+\t\t;;\n+\tesac\n+\t# Japanese Language versions have a version number like `4.1.3-JL'.\n+\techo sparc-sun-sunos\"`echo \"$UNAME_RELEASE\"|sed -e 's/-/_/'`\"\n+\texit ;;\n+    sun3*:SunOS:*:*)\n+\techo m68k-sun-sunos\"$UNAME_RELEASE\"\n+\texit ;;\n+    sun*:*:4.2BSD:*)\n+\tUNAME_RELEASE=`(sed 1q /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null`\n+\ttest \"x$UNAME_RELEASE\" = x && UNAME_RELEASE=3\n+\tcase \"`/bin/arch`\" in\n+\t    sun3)\n+\t\techo m68k-sun-sunos\"$UNAME_RELEASE\"\n+\t\t;;\n+\t    sun4)\n+\t\techo sparc-sun-sunos\"$UNAME_RELEASE\"\n+\t\t;;\n+\tesac\n+\texit ;;\n+    aushp:SunOS:*:*)\n+\techo sparc-auspex-sunos\"$UNAME_RELEASE\"\n+\texit ;;\n+    # The situation for MiNT is a little confusing.  The machine name\n+    # can be virtually everything (everything which is not\n+    # \"atarist\" or \"atariste\" at least should have a processor\n+    # > m68000).  The system name ranges from \"MiNT\" over \"FreeMiNT\"\n+    # to the lowercase version \"mint\" (or \"freemint\").  Finally\n+    # the system name \"TOS\" denotes a system which is actually not\n+    # MiNT.  But MiNT is downward compatible to TOS, so this should\n+    # be no problem.\n+    atarist[e]:*MiNT:*:* | atarist[e]:*mint:*:* | atarist[e]:*TOS:*:*)\n+\techo m68k-atari-mint\"$UNAME_RELEASE\"\n+\texit ;;\n+    atari*:*MiNT:*:* | atari*:*mint:*:* | atarist[e]:*TOS:*:*)\n+\techo m68k-atari-mint\"$UNAME_RELEASE\"\n+\texit ;;\n+    *falcon*:*MiNT:*:* | *falcon*:*mint:*:* | *falcon*:*TOS:*:*)\n+\techo m68k-atari-mint\"$UNAME_RELEASE\"\n+\texit ;;\n+    milan*:*MiNT:*:* | milan*:*mint:*:* | *milan*:*TOS:*:*)\n+\techo m68k-milan-mint\"$UNAME_RELEASE\"\n+\texit ;;\n+    hades*:*MiNT:*:* | hades*:*mint:*:* | *hades*:*TOS:*:*)\n+\techo m68k-hades-mint\"$UNAME_RELEASE\"\n+\texit ;;\n+    *:*MiNT:*:* | *:*mint:*:* | *:*TOS:*:*)\n+\techo m68k-unknown-mint\"$UNAME_RELEASE\"\n+\texit ;;\n+    m68k:machten:*:*)\n+\techo m68k-apple-machten\"$UNAME_RELEASE\"\n+\texit ;;\n+    powerpc:machten:*:*)\n+\techo powerpc-apple-machten\"$UNAME_RELEASE\"\n+\texit ;;\n+    RISC*:Mach:*:*)\n+\techo mips-dec-mach_bsd4.3\n+\texit ;;\n+    RISC*:ULTRIX:*:*)\n+\techo mips-dec-ultrix\"$UNAME_RELEASE\"\n+\texit ;;\n+    VAX*:ULTRIX*:*:*)\n+\techo vax-dec-ultrix\"$UNAME_RELEASE\"\n+\texit ;;\n+    2020:CLIX:*:* | 2430:CLIX:*:*)\n+\techo clipper-intergraph-clix\"$UNAME_RELEASE\"\n+\texit ;;\n+    mips:*:*:UMIPS | mips:*:*:RISCos)\n+\teval \"$set_cc_for_build\"\n+\tsed 's/^\t//' << EOF > \"$dummy.c\"\n+#ifdef __cplusplus\n+#include <stdio.h>  /* for printf() prototype */\n+\tint main (int argc, char *argv[]) {\n+#else\n+\tint main (argc, argv) int argc; char *argv[]; {\n+#endif\n+\t#if defined (host_mips) && defined (MIPSEB)\n+\t#if defined (SYSTYPE_SYSV)\n+\t  printf (\"mips-mips-riscos%ssysv\\\\n\", argv[1]); exit (0);\n+\t#endif\n+\t#if defined (SYSTYPE_SVR4)\n+\t  printf (\"mips-mips-riscos%ssvr4\\\\n\", argv[1]); exit (0);\n+\t#endif\n+\t#if defined (SYSTYPE_BSD43) || defined(SYSTYPE_BSD)\n+\t  printf (\"mips-mips-riscos%sbsd\\\\n\", argv[1]); exit (0);\n+\t#endif\n+\t#endif\n+\t  exit (-1);\n+\t}\n+EOF\n+\t$CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" &&\n+\t  dummyarg=`echo \"$UNAME_RELEASE\" | sed -n 's/\\([0-9]*\\).*/\\1/p'` &&\n+\t  SYSTEM_NAME=`\"$dummy\" \"$dummyarg\"` &&\n+\t    { echo \"$SYSTEM_NAME\"; exit; }\n+\techo mips-mips-riscos\"$UNAME_RELEASE\"\n+\texit ;;\n+    Motorola:PowerMAX_OS:*:*)\n+\techo powerpc-motorola-powermax\n+\texit ;;\n+    Motorola:*:4.3:PL8-*)\n+\techo powerpc-harris-powermax\n+\texit ;;\n+    Night_Hawk:*:*:PowerMAX_OS | Synergy:PowerMAX_OS:*:*)\n+\techo powerpc-harris-powermax\n+\texit ;;\n+    Night_Hawk:Power_UNIX:*:*)\n+\techo powerpc-harris-powerunix\n+\texit ;;\n+    m88k:CX/UX:7*:*)\n+\techo m88k-harris-cxux7\n+\texit ;;\n+    m88k:*:4*:R4*)\n+\techo m88k-motorola-sysv4\n+\texit ;;\n+    m88k:*:3*:R3*)\n+\techo m88k-motorola-sysv3\n+\texit ;;\n+    AViiON:dgux:*:*)\n+\t# DG/UX returns AViiON for all architectures\n+\tUNAME_PROCESSOR=`/usr/bin/uname -p`\n+\tif [ \"$UNAME_PROCESSOR\" = mc88100 ] || [ \"$UNAME_PROCESSOR\" = mc88110 ]\n+\tthen\n+\t    if [ \"$TARGET_BINARY_INTERFACE\"x = m88kdguxelfx ] || \\\n+\t       [ \"$TARGET_BINARY_INTERFACE\"x = x ]\n+\t    then\n+\t\techo m88k-dg-dgux\"$UNAME_RELEASE\"\n+\t    else\n+\t\techo m88k-dg-dguxbcs\"$UNAME_RELEASE\"\n+\t    fi\n+\telse\n+\t    echo i586-dg-dgux\"$UNAME_RELEASE\"\n+\tfi\n+\texit ;;\n+    M88*:DolphinOS:*:*)\t# DolphinOS (SVR3)\n+\techo m88k-dolphin-sysv3\n+\texit ;;\n+    M88*:*:R3*:*)\n+\t# Delta 88k system running SVR3\n+\techo m88k-motorola-sysv3\n+\texit ;;\n+    XD88*:*:*:*) # Tektronix XD88 system running UTekV (SVR3)\n+\techo m88k-tektronix-sysv3\n+\texit ;;\n+    Tek43[0-9][0-9]:UTek:*:*) # Tektronix 4300 system running UTek (BSD)\n+\techo m68k-tektronix-bsd\n+\texit ;;\n+    *:IRIX*:*:*)\n+\techo mips-sgi-irix\"`echo \"$UNAME_RELEASE\"|sed -e 's/-/_/g'`\"\n+\texit ;;\n+    ????????:AIX?:[12].1:2)   # AIX 2.2.1 or AIX 2.1.1 is RT/PC AIX.\n+\techo romp-ibm-aix     # uname -m gives an 8 hex-code CPU id\n+\texit ;;               # Note that: echo \"'`uname -s`'\" gives 'AIX '\n+    i*86:AIX:*:*)\n+\techo i386-ibm-aix\n+\texit ;;\n+    ia64:AIX:*:*)\n+\tif [ -x /usr/bin/oslevel ] ; then\n+\t\tIBM_REV=`/usr/bin/oslevel`\n+\telse\n+\t\tIBM_REV=\"$UNAME_VERSION.$UNAME_RELEASE\"\n+\tfi\n+\techo \"$UNAME_MACHINE\"-ibm-aix\"$IBM_REV\"\n+\texit ;;\n+    *:AIX:2:3)\n+\tif grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then\n+\t\teval \"$set_cc_for_build\"\n+\t\tsed 's/^\t\t//' << EOF > \"$dummy.c\"\n+\t\t#include <sys/systemcfg.h>\n+\n+\t\tmain()\n+\t\t\t{\n+\t\t\tif (!__power_pc())\n+\t\t\t\texit(1);\n+\t\t\tputs(\"powerpc-ibm-aix3.2.5\");\n+\t\t\texit(0);\n+\t\t\t}\n+EOF\n+\t\tif $CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" && SYSTEM_NAME=`\"$dummy\"`\n+\t\tthen\n+\t\t\techo \"$SYSTEM_NAME\"\n+\t\telse\n+\t\t\techo rs6000-ibm-aix3.2.5\n+\t\tfi\n+\telif grep bos324 /usr/include/stdio.h >/dev/null 2>&1; then\n+\t\techo rs6000-ibm-aix3.2.4\n+\telse\n+\t\techo rs6000-ibm-aix3.2\n+\tfi\n+\texit ;;\n+    *:AIX:*:[4567])\n+\tIBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`\n+\tif /usr/sbin/lsattr -El \"$IBM_CPU_ID\" | grep ' POWER' >/dev/null 2>&1; then\n+\t\tIBM_ARCH=rs6000\n+\telse\n+\t\tIBM_ARCH=powerpc\n+\tfi\n+\tif [ -x /usr/bin/lslpp ] ; then\n+\t\tIBM_REV=`/usr/bin/lslpp -Lqc bos.rte.libc |\n+\t\t\t   awk -F: '{ print $3 }' | sed s/[0-9]*$/0/`\n+\telse\n+\t\tIBM_REV=\"$UNAME_VERSION.$UNAME_RELEASE\"\n+\tfi\n+\techo \"$IBM_ARCH\"-ibm-aix\"$IBM_REV\"\n+\texit ;;\n+    *:AIX:*:*)\n+\techo rs6000-ibm-aix\n+\texit ;;\n+    ibmrt:4.4BSD:*|romp-ibm:4.4BSD:*)\n+\techo romp-ibm-bsd4.4\n+\texit ;;\n+    ibmrt:*BSD:*|romp-ibm:BSD:*)            # covers RT/PC BSD and\n+\techo romp-ibm-bsd\"$UNAME_RELEASE\"   # 4.3 with uname added to\n+\texit ;;                             # report: romp-ibm BSD 4.3\n+    *:BOSX:*:*)\n+\techo rs6000-bull-bosx\n+\texit ;;\n+    DPX/2?00:B.O.S.:*:*)\n+\techo m68k-bull-sysv3\n+\texit ;;\n+    9000/[34]??:4.3bsd:1.*:*)\n+\techo m68k-hp-bsd\n+\texit ;;\n+    hp300:4.4BSD:*:* | 9000/[34]??:4.3bsd:2.*:*)\n+\techo m68k-hp-bsd4.4\n+\texit ;;\n+    9000/[34678]??:HP-UX:*:*)\n+\tHPUX_REV=`echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*.[0B]*//'`\n+\tcase \"$UNAME_MACHINE\" in\n+\t    9000/31?)            HP_ARCH=m68000 ;;\n+\t    9000/[34]??)         HP_ARCH=m68k ;;\n+\t    9000/[678][0-9][0-9])\n+\t\tif [ -x /usr/bin/getconf ]; then\n+\t\t    sc_cpu_version=`/usr/bin/getconf SC_CPU_VERSION 2>/dev/null`\n+\t\t    sc_kernel_bits=`/usr/bin/getconf SC_KERNEL_BITS 2>/dev/null`\n+\t\t    case \"$sc_cpu_version\" in\n+\t\t      523) HP_ARCH=hppa1.0 ;; # CPU_PA_RISC1_0\n+\t\t      528) HP_ARCH=hppa1.1 ;; # CPU_PA_RISC1_1\n+\t\t      532)                      # CPU_PA_RISC2_0\n+\t\t\tcase \"$sc_kernel_bits\" in\n+\t\t\t  32) HP_ARCH=hppa2.0n ;;\n+\t\t\t  64) HP_ARCH=hppa2.0w ;;\n+\t\t\t  '') HP_ARCH=hppa2.0 ;;   # HP-UX 10.20\n+\t\t\tesac ;;\n+\t\t    esac\n+\t\tfi\n+\t\tif [ \"$HP_ARCH\" = \"\" ]; then\n+\t\t    eval \"$set_cc_for_build\"\n+\t\t    sed 's/^\t\t//' << EOF > \"$dummy.c\"\n+\n+\t\t#define _HPUX_SOURCE\n+\t\t#include <stdlib.h>\n+\t\t#include <unistd.h>\n+\n+\t\tint main ()\n+\t\t{\n+\t\t#if defined(_SC_KERNEL_BITS)\n+\t\t    long bits = sysconf(_SC_KERNEL_BITS);\n+\t\t#endif\n+\t\t    long cpu  = sysconf (_SC_CPU_VERSION);\n+\n+\t\t    switch (cpu)\n+\t\t\t{\n+\t\t\tcase CPU_PA_RISC1_0: puts (\"hppa1.0\"); break;\n+\t\t\tcase CPU_PA_RISC1_1: puts (\"hppa1.1\"); break;\n+\t\t\tcase CPU_PA_RISC2_0:\n+\t\t#if defined(_SC_KERNEL_BITS)\n+\t\t\t    switch (bits)\n+\t\t\t\t{\n+\t\t\t\tcase 64: puts (\"hppa2.0w\"); break;\n+\t\t\t\tcase 32: puts (\"hppa2.0n\"); break;\n+\t\t\t\tdefault: puts (\"hppa2.0\"); break;\n+\t\t\t\t} break;\n+\t\t#else  /* !defined(_SC_KERNEL_BITS) */\n+\t\t\t    puts (\"hppa2.0\"); break;\n+\t\t#endif\n+\t\t\tdefault: puts (\"hppa1.0\"); break;\n+\t\t\t}\n+\t\t    exit (0);\n+\t\t}\n+EOF\n+\t\t    (CCOPTS=\"\" $CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" 2>/dev/null) && HP_ARCH=`\"$dummy\"`\n+\t\t    test -z \"$HP_ARCH\" && HP_ARCH=hppa\n+\t\tfi ;;\n+\tesac\n+\tif [ \"$HP_ARCH\" = hppa2.0w ]\n+\tthen\n+\t    eval \"$set_cc_for_build\"\n+\n+\t    # hppa2.0w-hp-hpux* has a 64-bit kernel and a compiler generating\n+\t    # 32-bit code.  hppa64-hp-hpux* has the same kernel and a compiler\n+\t    # generating 64-bit code.  GNU and HP use different nomenclature:\n+\t    #\n+\t    # $ CC_FOR_BUILD=cc ./config.guess\n+\t    # => hppa2.0w-hp-hpux11.23\n+\t    # $ CC_FOR_BUILD=\"cc +DA2.0w\" ./config.guess\n+\t    # => hppa64-hp-hpux11.23\n+\n+\t    if echo __LP64__ | (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) |\n+\t\tgrep -q __LP64__\n+\t    then\n+\t\tHP_ARCH=hppa2.0w\n+\t    else\n+\t\tHP_ARCH=hppa64\n+\t    fi\n+\tfi\n+\techo \"$HP_ARCH\"-hp-hpux\"$HPUX_REV\"\n+\texit ;;\n+    ia64:HP-UX:*:*)\n+\tHPUX_REV=`echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*.[0B]*//'`\n+\techo ia64-hp-hpux\"$HPUX_REV\"\n+\texit ;;\n+    3050*:HI-UX:*:*)\n+\teval \"$set_cc_for_build\"\n+\tsed 's/^\t//' << EOF > \"$dummy.c\"\n+\t#include <unistd.h>\n+\tint\n+\tmain ()\n+\t{\n+\t  long cpu = sysconf (_SC_CPU_VERSION);\n+\t  /* The order matters, because CPU_IS_HP_MC68K erroneously returns\n+\t     true for CPU_PA_RISC1_0.  CPU_IS_PA_RISC returns correct\n+\t     results, however.  */\n+\t  if (CPU_IS_PA_RISC (cpu))\n+\t    {\n+\t      switch (cpu)\n+\t\t{\n+\t\t  case CPU_PA_RISC1_0: puts (\"hppa1.0-hitachi-hiuxwe2\"); break;\n+\t\t  case CPU_PA_RISC1_1: puts (\"hppa1.1-hitachi-hiuxwe2\"); break;\n+\t\t  case CPU_PA_RISC2_0: puts (\"hppa2.0-hitachi-hiuxwe2\"); break;\n+\t\t  default: puts (\"hppa-hitachi-hiuxwe2\"); break;\n+\t\t}\n+\t    }\n+\t  else if (CPU_IS_HP_MC68K (cpu))\n+\t    puts (\"m68k-hitachi-hiuxwe2\");\n+\t  else puts (\"unknown-hitachi-hiuxwe2\");\n+\t  exit (0);\n+\t}\n+EOF\n+\t$CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" && SYSTEM_NAME=`\"$dummy\"` &&\n+\t\t{ echo \"$SYSTEM_NAME\"; exit; }\n+\techo unknown-hitachi-hiuxwe2\n+\texit ;;\n+    9000/7??:4.3bsd:*:* | 9000/8?[79]:4.3bsd:*:*)\n+\techo hppa1.1-hp-bsd\n+\texit ;;\n+    9000/8??:4.3bsd:*:*)\n+\techo hppa1.0-hp-bsd\n+\texit ;;\n+    *9??*:MPE/iX:*:* | *3000*:MPE/iX:*:*)\n+\techo hppa1.0-hp-mpeix\n+\texit ;;\n+    hp7??:OSF1:*:* | hp8?[79]:OSF1:*:*)\n+\techo hppa1.1-hp-osf\n+\texit ;;\n+    hp8??:OSF1:*:*)\n+\techo hppa1.0-hp-osf\n+\texit ;;\n+    i*86:OSF1:*:*)\n+\tif [ -x /usr/sbin/sysversion ] ; then\n+\t    echo \"$UNAME_MACHINE\"-unknown-osf1mk\n+\telse\n+\t    echo \"$UNAME_MACHINE\"-unknown-osf1\n+\tfi\n+\texit ;;\n+    parisc*:Lites*:*:*)\n+\techo hppa1.1-hp-lites\n+\texit ;;\n+    C1*:ConvexOS:*:* | convex:ConvexOS:C1*:*)\n+\techo c1-convex-bsd\n+\texit ;;\n+    C2*:ConvexOS:*:* | convex:ConvexOS:C2*:*)\n+\tif getsysinfo -f scalar_acc\n+\tthen echo c32-convex-bsd\n+\telse echo c2-convex-bsd\n+\tfi\n+\texit ;;\n+    C34*:ConvexOS:*:* | convex:ConvexOS:C34*:*)\n+\techo c34-convex-bsd\n+\texit ;;\n+    C38*:ConvexOS:*:* | convex:ConvexOS:C38*:*)\n+\techo c38-convex-bsd\n+\texit ;;\n+    C4*:ConvexOS:*:* | convex:ConvexOS:C4*:*)\n+\techo c4-convex-bsd\n+\texit ;;\n+    CRAY*Y-MP:*:*:*)\n+\techo ymp-cray-unicos\"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'\n+\texit ;;\n+    CRAY*[A-Z]90:*:*:*)\n+\techo \"$UNAME_MACHINE\"-cray-unicos\"$UNAME_RELEASE\" \\\n+\t| sed -e 's/CRAY.*\\([A-Z]90\\)/\\1/' \\\n+\t      -e y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/ \\\n+\t      -e 's/\\.[^.]*$/.X/'\n+\texit ;;\n+    CRAY*TS:*:*:*)\n+\techo t90-cray-unicos\"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'\n+\texit ;;\n+    CRAY*T3E:*:*:*)\n+\techo alphaev5-cray-unicosmk\"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'\n+\texit ;;\n+    CRAY*SV1:*:*:*)\n+\techo sv1-cray-unicos\"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'\n+\texit ;;\n+    *:UNICOS/mp:*:*)\n+\techo craynv-cray-unicosmp\"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'\n+\texit ;;\n+    F30[01]:UNIX_System_V:*:* | F700:UNIX_System_V:*:*)\n+\tFUJITSU_PROC=`uname -m | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`\n+\tFUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\\///'`\n+\tFUJITSU_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/ /_/'`\n+\techo \"${FUJITSU_PROC}-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\"\n+\texit ;;\n+    5000:UNIX_System_V:4.*:*)\n+\tFUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\\///'`\n+\tFUJITSU_REL=`echo \"$UNAME_RELEASE\" | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/ /_/'`\n+\techo \"sparc-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\"\n+\texit ;;\n+    i*86:BSD/386:*:* | i*86:BSD/OS:*:* | *:Ascend\\ Embedded/OS:*:*)\n+\techo \"$UNAME_MACHINE\"-pc-bsdi\"$UNAME_RELEASE\"\n+\texit ;;\n+    sparc*:BSD/OS:*:*)\n+\techo sparc-unknown-bsdi\"$UNAME_RELEASE\"\n+\texit ;;\n+    *:BSD/OS:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-bsdi\"$UNAME_RELEASE\"\n+\texit ;;\n+    *:FreeBSD:*:*)\n+\tUNAME_PROCESSOR=`/usr/bin/uname -p`\n+\tcase \"$UNAME_PROCESSOR\" in\n+\t    amd64)\n+\t\tUNAME_PROCESSOR=x86_64 ;;\n+\t    i386)\n+\t\tUNAME_PROCESSOR=i586 ;;\n+\tesac\n+\techo \"$UNAME_PROCESSOR\"-unknown-freebsd\"`echo \"$UNAME_RELEASE\"|sed -e 's/[-(].*//'`\"\n+\texit ;;\n+    i*:CYGWIN*:*)\n+\techo \"$UNAME_MACHINE\"-pc-cygwin\n+\texit ;;\n+    *:MINGW64*:*)\n+\techo \"$UNAME_MACHINE\"-pc-mingw64\n+\texit ;;\n+    *:MINGW*:*)\n+\techo \"$UNAME_MACHINE\"-pc-mingw32\n+\texit ;;\n+    *:MSYS*:*)\n+\techo \"$UNAME_MACHINE\"-pc-msys\n+\texit ;;\n+    i*:PW*:*)\n+\techo \"$UNAME_MACHINE\"-pc-pw32\n+\texit ;;\n+    *:Interix*:*)\n+\tcase \"$UNAME_MACHINE\" in\n+\t    x86)\n+\t\techo i586-pc-interix\"$UNAME_RELEASE\"\n+\t\texit ;;\n+\t    authenticamd | genuineintel | EM64T)\n+\t\techo x86_64-unknown-interix\"$UNAME_RELEASE\"\n+\t\texit ;;\n+\t    IA64)\n+\t\techo ia64-unknown-interix\"$UNAME_RELEASE\"\n+\t\texit ;;\n+\tesac ;;\n+    i*:UWIN*:*)\n+\techo \"$UNAME_MACHINE\"-pc-uwin\n+\texit ;;\n+    amd64:CYGWIN*:*:* | x86_64:CYGWIN*:*:*)\n+\techo x86_64-unknown-cygwin\n+\texit ;;\n+    prep*:SunOS:5.*:*)\n+\techo powerpcle-unknown-solaris2\"`echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*//'`\"\n+\texit ;;\n+    *:GNU:*:*)\n+\t# the GNU system\n+\techo \"`echo \"$UNAME_MACHINE\"|sed -e 's,[-/].*$,,'`-unknown-$LIBC`echo \"$UNAME_RELEASE\"|sed -e 's,/.*$,,'`\"\n+\texit ;;\n+    *:GNU/*:*:*)\n+\t# other systems with GNU libc and userland\n+\techo \"$UNAME_MACHINE-unknown-`echo \"$UNAME_SYSTEM\" | sed 's,^[^/]*/,,' | tr \"[:upper:]\" \"[:lower:]\"``echo \"$UNAME_RELEASE\"|sed -e 's/[-(].*//'`-$LIBC\"\n+\texit ;;\n+    i*86:Minix:*:*)\n+\techo \"$UNAME_MACHINE\"-pc-minix\n+\texit ;;\n+    aarch64:Linux:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n+\texit ;;\n+    aarch64_be:Linux:*:*)\n+\tUNAME_MACHINE=aarch64_be\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n+\texit ;;\n+    alpha:Linux:*:*)\n+\tcase `sed -n '/^cpu model/s/^.*: \\(.*\\)/\\1/p' < /proc/cpuinfo` in\n+\t  EV5)   UNAME_MACHINE=alphaev5 ;;\n+\t  EV56)  UNAME_MACHINE=alphaev56 ;;\n+\t  PCA56) UNAME_MACHINE=alphapca56 ;;\n+\t  PCA57) UNAME_MACHINE=alphapca56 ;;\n+\t  EV6)   UNAME_MACHINE=alphaev6 ;;\n+\t  EV67)  UNAME_MACHINE=alphaev67 ;;\n+\t  EV68*) UNAME_MACHINE=alphaev68 ;;\n+\tesac\n+\tobjdump --private-headers /bin/sh | grep -q ld.so.1\n+\tif test \"$?\" = 0 ; then LIBC=gnulibc1 ; fi\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n+\texit ;;\n+    arc:Linux:*:* | arceb:Linux:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n+\texit ;;\n+    arm*:Linux:*:*)\n+\teval \"$set_cc_for_build\"\n+\tif echo __ARM_EABI__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n+\t    | grep -q __ARM_EABI__\n+\tthen\n+\t    echo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n+\telse\n+\t    if echo __ARM_PCS_VFP | $CC_FOR_BUILD -E - 2>/dev/null \\\n+\t\t| grep -q __ARM_PCS_VFP\n+\t    then\n+\t\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"eabi\n+\t    else\n+\t\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"eabihf\n+\t    fi\n+\tfi\n+\texit ;;\n+    avr32*:Linux:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n+\texit ;;\n+    cris:Linux:*:*)\n+\techo \"$UNAME_MACHINE\"-axis-linux-\"$LIBC\"\n+\texit ;;\n+    crisv32:Linux:*:*)\n+\techo \"$UNAME_MACHINE\"-axis-linux-\"$LIBC\"\n+\texit ;;\n+    e2k:Linux:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n+\texit ;;\n+    frv:Linux:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n+\texit ;;\n+    hexagon:Linux:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n+\texit ;;\n+    i*86:Linux:*:*)\n+\techo \"$UNAME_MACHINE\"-pc-linux-\"$LIBC\"\n+\texit ;;\n+    ia64:Linux:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n+\texit ;;\n+    k1om:Linux:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n+\texit ;;\n+    m32r*:Linux:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n+\texit ;;\n+    m68*:Linux:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n+\texit ;;\n+    mips:Linux:*:* | mips64:Linux:*:*)\n+\teval \"$set_cc_for_build\"\n+\tsed 's/^\t//' << EOF > \"$dummy.c\"\n+\t#undef CPU\n+\t#undef ${UNAME_MACHINE}\n+\t#undef ${UNAME_MACHINE}el\n+\t#if defined(__MIPSEL__) || defined(__MIPSEL) || defined(_MIPSEL) || defined(MIPSEL)\n+\tCPU=${UNAME_MACHINE}el\n+\t#else\n+\t#if defined(__MIPSEB__) || defined(__MIPSEB) || defined(_MIPSEB) || defined(MIPSEB)\n+\tCPU=${UNAME_MACHINE}\n+\t#else\n+\tCPU=\n+\t#endif\n+\t#endif\n+EOF\n+\teval \"`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^CPU'`\"\n+\ttest \"x$CPU\" != x && { echo \"$CPU-unknown-linux-$LIBC\"; exit; }\n+\t;;\n+    mips64el:Linux:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n+\texit ;;\n+    openrisc*:Linux:*:*)\n+\techo or1k-unknown-linux-\"$LIBC\"\n+\texit ;;\n+    or32:Linux:*:* | or1k*:Linux:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n+\texit ;;\n+    padre:Linux:*:*)\n+\techo sparc-unknown-linux-\"$LIBC\"\n+\texit ;;\n+    parisc64:Linux:*:* | hppa64:Linux:*:*)\n+\techo hppa64-unknown-linux-\"$LIBC\"\n+\texit ;;\n+    parisc:Linux:*:* | hppa:Linux:*:*)\n+\t# Look for CPU level\n+\tcase `grep '^cpu[^a-z]*:' /proc/cpuinfo 2>/dev/null | cut -d' ' -f2` in\n+\t  PA7*) echo hppa1.1-unknown-linux-\"$LIBC\" ;;\n+\t  PA8*) echo hppa2.0-unknown-linux-\"$LIBC\" ;;\n+\t  *)    echo hppa-unknown-linux-\"$LIBC\" ;;\n+\tesac\n+\texit ;;\n+    ppc64:Linux:*:*)\n+\techo powerpc64-unknown-linux-\"$LIBC\"\n+\texit ;;\n+    ppc:Linux:*:*)\n+\techo powerpc-unknown-linux-\"$LIBC\"\n+\texit ;;\n+    ppc64le:Linux:*:*)\n+\techo powerpc64le-unknown-linux-\"$LIBC\"\n+\texit ;;\n+    ppcle:Linux:*:*)\n+\techo powerpcle-unknown-linux-\"$LIBC\"\n+\texit ;;\n+    riscv32:Linux:*:* | riscv64:Linux:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n+\texit ;;\n+    s390:Linux:*:* | s390x:Linux:*:*)\n+\techo \"$UNAME_MACHINE\"-ibm-linux-\"$LIBC\"\n+\texit ;;\n+    sh64*:Linux:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n+\texit ;;\n+    sh*:Linux:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n+\texit ;;\n+    sparc:Linux:*:* | sparc64:Linux:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n+\texit ;;\n+    tile*:Linux:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n+\texit ;;\n+    vax:Linux:*:*)\n+\techo \"$UNAME_MACHINE\"-dec-linux-\"$LIBC\"\n+\texit ;;\n+    x86_64:Linux:*:*)\n+\techo \"$UNAME_MACHINE\"-pc-linux-\"$LIBC\"\n+\texit ;;\n+    xtensa*:Linux:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n+\texit ;;\n+    i*86:DYNIX/ptx:4*:*)\n+\t# ptx 4.0 does uname -s correctly, with DYNIX/ptx in there.\n+\t# earlier versions are messed up and put the nodename in both\n+\t# sysname and nodename.\n+\techo i386-sequent-sysv4\n+\texit ;;\n+    i*86:UNIX_SV:4.2MP:2.*)\n+\t# Unixware is an offshoot of SVR4, but it has its own version\n+\t# number series starting with 2...\n+\t# I am not positive that other SVR4 systems won't match this,\n+\t# I just have to hope.  -- rms.\n+\t# Use sysv4.2uw... so that sysv4* matches it.\n+\techo \"$UNAME_MACHINE\"-pc-sysv4.2uw\"$UNAME_VERSION\"\n+\texit ;;\n+    i*86:OS/2:*:*)\n+\t# If we were able to find `uname', then EMX Unix compatibility\n+\t# is probably installed.\n+\techo \"$UNAME_MACHINE\"-pc-os2-emx\n+\texit ;;\n+    i*86:XTS-300:*:STOP)\n+\techo \"$UNAME_MACHINE\"-unknown-stop\n+\texit ;;\n+    i*86:atheos:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-atheos\n+\texit ;;\n+    i*86:syllable:*:*)\n+\techo \"$UNAME_MACHINE\"-pc-syllable\n+\texit ;;\n+    i*86:LynxOS:2.*:* | i*86:LynxOS:3.[01]*:* | i*86:LynxOS:4.[02]*:*)\n+\techo i386-unknown-lynxos\"$UNAME_RELEASE\"\n+\texit ;;\n+    i*86:*DOS:*:*)\n+\techo \"$UNAME_MACHINE\"-pc-msdosdjgpp\n+\texit ;;\n+    i*86:*:4.*:*)\n+\tUNAME_REL=`echo \"$UNAME_RELEASE\" | sed 's/\\/MP$//'`\n+\tif grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then\n+\t\techo \"$UNAME_MACHINE\"-univel-sysv\"$UNAME_REL\"\n+\telse\n+\t\techo \"$UNAME_MACHINE\"-pc-sysv\"$UNAME_REL\"\n+\tfi\n+\texit ;;\n+    i*86:*:5:[678]*)\n+\t# UnixWare 7.x, OpenUNIX and OpenServer 6.\n+\tcase `/bin/uname -X | grep \"^Machine\"` in\n+\t    *486*)\t     UNAME_MACHINE=i486 ;;\n+\t    *Pentium)\t     UNAME_MACHINE=i586 ;;\n+\t    *Pent*|*Celeron) UNAME_MACHINE=i686 ;;\n+\tesac\n+\techo \"$UNAME_MACHINE-unknown-sysv${UNAME_RELEASE}${UNAME_SYSTEM}{$UNAME_VERSION}\"\n+\texit ;;\n+    i*86:*:3.2:*)\n+\tif test -f /usr/options/cb.name; then\n+\t\tUNAME_REL=`sed -n 's/.*Version //p' </usr/options/cb.name`\n+\t\techo \"$UNAME_MACHINE\"-pc-isc\"$UNAME_REL\"\n+\telif /bin/uname -X 2>/dev/null >/dev/null ; then\n+\t\tUNAME_REL=`(/bin/uname -X|grep Release|sed -e 's/.*= //')`\n+\t\t(/bin/uname -X|grep i80486 >/dev/null) && UNAME_MACHINE=i486\n+\t\t(/bin/uname -X|grep '^Machine.*Pentium' >/dev/null) \\\n+\t\t\t&& UNAME_MACHINE=i586\n+\t\t(/bin/uname -X|grep '^Machine.*Pent *II' >/dev/null) \\\n+\t\t\t&& UNAME_MACHINE=i686\n+\t\t(/bin/uname -X|grep '^Machine.*Pentium Pro' >/dev/null) \\\n+\t\t\t&& UNAME_MACHINE=i686\n+\t\techo \"$UNAME_MACHINE\"-pc-sco\"$UNAME_REL\"\n+\telse\n+\t\techo \"$UNAME_MACHINE\"-pc-sysv32\n+\tfi\n+\texit ;;\n+    pc:*:*:*)\n+\t# Left here for compatibility:\n+\t# uname -m prints for DJGPP always 'pc', but it prints nothing about\n+\t# the processor, so we play safe by assuming i586.\n+\t# Note: whatever this is, it MUST be the same as what config.sub\n+\t# prints for the \"djgpp\" host, or else GDB configure will decide that\n+\t# this is a cross-build.\n+\techo i586-pc-msdosdjgpp\n+\texit ;;\n+    Intel:Mach:3*:*)\n+\techo i386-pc-mach3\n+\texit ;;\n+    paragon:*:*:*)\n+\techo i860-intel-osf1\n+\texit ;;\n+    i860:*:4.*:*) # i860-SVR4\n+\tif grep Stardent /usr/include/sys/uadmin.h >/dev/null 2>&1 ; then\n+\t  echo i860-stardent-sysv\"$UNAME_RELEASE\" # Stardent Vistra i860-SVR4\n+\telse # Add other i860-SVR4 vendors below as they are discovered.\n+\t  echo i860-unknown-sysv\"$UNAME_RELEASE\"  # Unknown i860-SVR4\n+\tfi\n+\texit ;;\n+    mini*:CTIX:SYS*5:*)\n+\t# \"miniframe\"\n+\techo m68010-convergent-sysv\n+\texit ;;\n+    mc68k:UNIX:SYSTEM5:3.51m)\n+\techo m68k-convergent-sysv\n+\texit ;;\n+    M680?0:D-NIX:5.3:*)\n+\techo m68k-diab-dnix\n+\texit ;;\n+    M68*:*:R3V[5678]*:*)\n+\ttest -r /sysV68 && { echo 'm68k-motorola-sysv'; exit; } ;;\n+    3[345]??:*:4.0:3.0 | 3[34]??A:*:4.0:3.0 | 3[34]??,*:*:4.0:3.0 | 3[34]??/*:*:4.0:3.0 | 4400:*:4.0:3.0 | 4850:*:4.0:3.0 | SKA40:*:4.0:3.0 | SDS2:*:4.0:3.0 | SHG2:*:4.0:3.0 | S7501*:*:4.0:3.0)\n+\tOS_REL=''\n+\ttest -r /etc/.relid \\\n+\t&& OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n+\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n+\t  && { echo i486-ncr-sysv4.3\"$OS_REL\"; exit; }\n+\t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n+\t  && { echo i586-ncr-sysv4.3\"$OS_REL\"; exit; } ;;\n+    3[34]??:*:4.0:* | 3[34]??,*:*:4.0:*)\n+\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n+\t  && { echo i486-ncr-sysv4; exit; } ;;\n+    NCR*:*:4.2:* | MPRAS*:*:4.2:*)\n+\tOS_REL='.3'\n+\ttest -r /etc/.relid \\\n+\t    && OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n+\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n+\t    && { echo i486-ncr-sysv4.3\"$OS_REL\"; exit; }\n+\t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n+\t    && { echo i586-ncr-sysv4.3\"$OS_REL\"; exit; }\n+\t/bin/uname -p 2>/dev/null | /bin/grep pteron >/dev/null \\\n+\t    && { echo i586-ncr-sysv4.3\"$OS_REL\"; exit; } ;;\n+    m68*:LynxOS:2.*:* | m68*:LynxOS:3.0*:*)\n+\techo m68k-unknown-lynxos\"$UNAME_RELEASE\"\n+\texit ;;\n+    mc68030:UNIX_System_V:4.*:*)\n+\techo m68k-atari-sysv4\n+\texit ;;\n+    TSUNAMI:LynxOS:2.*:*)\n+\techo sparc-unknown-lynxos\"$UNAME_RELEASE\"\n+\texit ;;\n+    rs6000:LynxOS:2.*:*)\n+\techo rs6000-unknown-lynxos\"$UNAME_RELEASE\"\n+\texit ;;\n+    PowerPC:LynxOS:2.*:* | PowerPC:LynxOS:3.[01]*:* | PowerPC:LynxOS:4.[02]*:*)\n+\techo powerpc-unknown-lynxos\"$UNAME_RELEASE\"\n+\texit ;;\n+    SM[BE]S:UNIX_SV:*:*)\n+\techo mips-dde-sysv\"$UNAME_RELEASE\"\n+\texit ;;\n+    RM*:ReliantUNIX-*:*:*)\n+\techo mips-sni-sysv4\n+\texit ;;\n+    RM*:SINIX-*:*:*)\n+\techo mips-sni-sysv4\n+\texit ;;\n+    *:SINIX-*:*:*)\n+\tif uname -p 2>/dev/null >/dev/null ; then\n+\t\tUNAME_MACHINE=`(uname -p) 2>/dev/null`\n+\t\techo \"$UNAME_MACHINE\"-sni-sysv4\n+\telse\n+\t\techo ns32k-sni-sysv\n+\tfi\n+\texit ;;\n+    PENTIUM:*:4.0*:*)\t# Unisys `ClearPath HMP IX 4000' SVR4/MP effort\n+\t\t\t# says <Richard.M.Bartel@ccMail.Census.GOV>\n+\techo i586-unisys-sysv4\n+\texit ;;\n+    *:UNIX_System_V:4*:FTX*)\n+\t# From Gerald Hewes <hewes@openmarket.com>.\n+\t# How about differentiating between stratus architectures? -djm\n+\techo hppa1.1-stratus-sysv4\n+\texit ;;\n+    *:*:*:FTX*)\n+\t# From seanf@swdc.stratus.com.\n+\techo i860-stratus-sysv4\n+\texit ;;\n+    i*86:VOS:*:*)\n+\t# From Paul.Green@stratus.com.\n+\techo \"$UNAME_MACHINE\"-stratus-vos\n+\texit ;;\n+    *:VOS:*:*)\n+\t# From Paul.Green@stratus.com.\n+\techo hppa1.1-stratus-vos\n+\texit ;;\n+    mc68*:A/UX:*:*)\n+\techo m68k-apple-aux\"$UNAME_RELEASE\"\n+\texit ;;\n+    news*:NEWS-OS:6*:*)\n+\techo mips-sony-newsos6\n+\texit ;;\n+    R[34]000:*System_V*:*:* | R4000:UNIX_SYSV:*:* | R*000:UNIX_SV:*:*)\n+\tif [ -d /usr/nec ]; then\n+\t\techo mips-nec-sysv\"$UNAME_RELEASE\"\n+\telse\n+\t\techo mips-unknown-sysv\"$UNAME_RELEASE\"\n+\tfi\n+\texit ;;\n+    BeBox:BeOS:*:*)\t# BeOS running on hardware made by Be, PPC only.\n+\techo powerpc-be-beos\n+\texit ;;\n+    BeMac:BeOS:*:*)\t# BeOS running on Mac or Mac clone, PPC only.\n+\techo powerpc-apple-beos\n+\texit ;;\n+    BePC:BeOS:*:*)\t# BeOS running on Intel PC compatible.\n+\techo i586-pc-beos\n+\texit ;;\n+    BePC:Haiku:*:*)\t# Haiku running on Intel PC compatible.\n+\techo i586-pc-haiku\n+\texit ;;\n+    x86_64:Haiku:*:*)\n+\techo x86_64-unknown-haiku\n+\texit ;;\n+    SX-4:SUPER-UX:*:*)\n+\techo sx4-nec-superux\"$UNAME_RELEASE\"\n+\texit ;;\n+    SX-5:SUPER-UX:*:*)\n+\techo sx5-nec-superux\"$UNAME_RELEASE\"\n+\texit ;;\n+    SX-6:SUPER-UX:*:*)\n+\techo sx6-nec-superux\"$UNAME_RELEASE\"\n+\texit ;;\n+    SX-7:SUPER-UX:*:*)\n+\techo sx7-nec-superux\"$UNAME_RELEASE\"\n+\texit ;;\n+    SX-8:SUPER-UX:*:*)\n+\techo sx8-nec-superux\"$UNAME_RELEASE\"\n+\texit ;;\n+    SX-8R:SUPER-UX:*:*)\n+\techo sx8r-nec-superux\"$UNAME_RELEASE\"\n+\texit ;;\n+    SX-ACE:SUPER-UX:*:*)\n+\techo sxace-nec-superux\"$UNAME_RELEASE\"\n+\texit ;;\n+    Power*:Rhapsody:*:*)\n+\techo powerpc-apple-rhapsody\"$UNAME_RELEASE\"\n+\texit ;;\n+    *:Rhapsody:*:*)\n+\techo \"$UNAME_MACHINE\"-apple-rhapsody\"$UNAME_RELEASE\"\n+\texit ;;\n+    *:Darwin:*:*)\n+\tUNAME_PROCESSOR=`uname -p` || UNAME_PROCESSOR=unknown\n+\teval \"$set_cc_for_build\"\n+\tif test \"$UNAME_PROCESSOR\" = unknown ; then\n+\t    UNAME_PROCESSOR=powerpc\n+\tfi\n+\tif test \"`echo \"$UNAME_RELEASE\" | sed -e 's/\\..*//'`\" -le 10 ; then\n+\t    if [ \"$CC_FOR_BUILD\" != no_compiler_found ]; then\n+\t\tif (echo '#ifdef __LP64__'; echo IS_64BIT_ARCH; echo '#endif') | \\\n+\t\t       (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n+\t\t       grep IS_64BIT_ARCH >/dev/null\n+\t\tthen\n+\t\t    case $UNAME_PROCESSOR in\n+\t\t\ti386) UNAME_PROCESSOR=x86_64 ;;\n+\t\t\tpowerpc) UNAME_PROCESSOR=powerpc64 ;;\n+\t\t    esac\n+\t\tfi\n+\t\t# On 10.4-10.6 one might compile for PowerPC via gcc -arch ppc\n+\t\tif (echo '#ifdef __POWERPC__'; echo IS_PPC; echo '#endif') | \\\n+\t\t       (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n+\t\t       grep IS_PPC >/dev/null\n+\t\tthen\n+\t\t    UNAME_PROCESSOR=powerpc\n+\t\tfi\n+\t    fi\n+\telif test \"$UNAME_PROCESSOR\" = i386 ; then\n+\t    # Avoid executing cc on OS X 10.9, as it ships with a stub\n+\t    # that puts up a graphical alert prompting to install\n+\t    # developer tools.  Any system running Mac OS X 10.7 or\n+\t    # later (Darwin 11 and later) is required to have a 64-bit\n+\t    # processor. This is not true of the ARM version of Darwin\n+\t    # that Apple uses in portable devices.\n+\t    UNAME_PROCESSOR=x86_64\n+\tfi\n+\techo \"$UNAME_PROCESSOR\"-apple-darwin\"$UNAME_RELEASE\"\n+\texit ;;\n+    *:procnto*:*:* | *:QNX:[0123456789]*:*)\n+\tUNAME_PROCESSOR=`uname -p`\n+\tif test \"$UNAME_PROCESSOR\" = x86; then\n+\t\tUNAME_PROCESSOR=i386\n+\t\tUNAME_MACHINE=pc\n+\tfi\n+\techo \"$UNAME_PROCESSOR\"-\"$UNAME_MACHINE\"-nto-qnx\"$UNAME_RELEASE\"\n+\texit ;;\n+    *:QNX:*:4*)\n+\techo i386-pc-qnx\n+\texit ;;\n+    NEO-*:NONSTOP_KERNEL:*:*)\n+\techo neo-tandem-nsk\"$UNAME_RELEASE\"\n+\texit ;;\n+    NSE-*:NONSTOP_KERNEL:*:*)\n+\techo nse-tandem-nsk\"$UNAME_RELEASE\"\n+\texit ;;\n+    NSR-*:NONSTOP_KERNEL:*:*)\n+\techo nsr-tandem-nsk\"$UNAME_RELEASE\"\n+\texit ;;\n+    NSV-*:NONSTOP_KERNEL:*:*)\n+\techo nsv-tandem-nsk\"$UNAME_RELEASE\"\n+\texit ;;\n+    NSX-*:NONSTOP_KERNEL:*:*)\n+\techo nsx-tandem-nsk\"$UNAME_RELEASE\"\n+\texit ;;\n+    *:NonStop-UX:*:*)\n+\techo mips-compaq-nonstopux\n+\texit ;;\n+    BS2000:POSIX*:*:*)\n+\techo bs2000-siemens-sysv\n+\texit ;;\n+    DS/*:UNIX_System_V:*:*)\n+\techo \"$UNAME_MACHINE\"-\"$UNAME_SYSTEM\"-\"$UNAME_RELEASE\"\n+\texit ;;\n+    *:Plan9:*:*)\n+\t# \"uname -m\" is not consistent, so use $cputype instead. 386\n+\t# is converted to i386 for consistency with other x86\n+\t# operating systems.\n+\tif test \"$cputype\" = 386; then\n+\t    UNAME_MACHINE=i386\n+\telse\n+\t    UNAME_MACHINE=\"$cputype\"\n+\tfi\n+\techo \"$UNAME_MACHINE\"-unknown-plan9\n+\texit ;;\n+    *:TOPS-10:*:*)\n+\techo pdp10-unknown-tops10\n+\texit ;;\n+    *:TENEX:*:*)\n+\techo pdp10-unknown-tenex\n+\texit ;;\n+    KS10:TOPS-20:*:* | KL10:TOPS-20:*:* | TYPE4:TOPS-20:*:*)\n+\techo pdp10-dec-tops20\n+\texit ;;\n+    XKL-1:TOPS-20:*:* | TYPE5:TOPS-20:*:*)\n+\techo pdp10-xkl-tops20\n+\texit ;;\n+    *:TOPS-20:*:*)\n+\techo pdp10-unknown-tops20\n+\texit ;;\n+    *:ITS:*:*)\n+\techo pdp10-unknown-its\n+\texit ;;\n+    SEI:*:*:SEIUX)\n+\techo mips-sei-seiux\"$UNAME_RELEASE\"\n+\texit ;;\n+    *:DragonFly:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-dragonfly\"`echo \"$UNAME_RELEASE\"|sed -e 's/[-(].*//'`\"\n+\texit ;;\n+    *:*VMS:*:*)\n+\tUNAME_MACHINE=`(uname -p) 2>/dev/null`\n+\tcase \"$UNAME_MACHINE\" in\n+\t    A*) echo alpha-dec-vms ; exit ;;\n+\t    I*) echo ia64-dec-vms ; exit ;;\n+\t    V*) echo vax-dec-vms ; exit ;;\n+\tesac ;;\n+    *:XENIX:*:SysV)\n+\techo i386-pc-xenix\n+\texit ;;\n+    i*86:skyos:*:*)\n+\techo \"$UNAME_MACHINE\"-pc-skyos\"`echo \"$UNAME_RELEASE\" | sed -e 's/ .*$//'`\"\n+\texit ;;\n+    i*86:rdos:*:*)\n+\techo \"$UNAME_MACHINE\"-pc-rdos\n+\texit ;;\n+    i*86:AROS:*:*)\n+\techo \"$UNAME_MACHINE\"-pc-aros\n+\texit ;;\n+    x86_64:VMkernel:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-esx\n+\texit ;;\n+    amd64:Isilon\\ OneFS:*:*)\n+\techo x86_64-unknown-onefs\n+\texit ;;\n+esac\n+\n+echo \"$0: unable to guess system type\" >&2\n+\n+case \"$UNAME_MACHINE:$UNAME_SYSTEM\" in\n+    mips:Linux | mips64:Linux)\n+\t# If we got here on MIPS GNU/Linux, output extra information.\n+\tcat >&2 <<EOF\n+\n+NOTE: MIPS GNU/Linux systems require a C compiler to fully recognize\n+the system type. Please install a C compiler and try again.\n+EOF\n+\t;;\n+esac\n+\n+cat >&2 <<EOF\n+\n+This script (version $timestamp), has failed to recognize the\n+operating system you are using. If your script is old, overwrite *all*\n+copies of config.guess and config.sub with the latest versions from:\n+\n+  https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess\n+and\n+  https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub\n+\n+If $0 has already been updated, send the following data and any\n+information you think might be pertinent to config-patches@gnu.org to\n+provide the necessary information to handle your system.\n+\n+config.guess timestamp = $timestamp\n+\n+uname -m = `(uname -m) 2>/dev/null || echo unknown`\n+uname -r = `(uname -r) 2>/dev/null || echo unknown`\n+uname -s = `(uname -s) 2>/dev/null || echo unknown`\n+uname -v = `(uname -v) 2>/dev/null || echo unknown`\n+\n+/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null`\n+/bin/uname -X     = `(/bin/uname -X) 2>/dev/null`\n+\n+hostinfo               = `(hostinfo) 2>/dev/null`\n+/bin/universe          = `(/bin/universe) 2>/dev/null`\n+/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null`\n+/bin/arch              = `(/bin/arch) 2>/dev/null`\n+/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null`\n+/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null`\n+\n+UNAME_MACHINE = \"$UNAME_MACHINE\"\n+UNAME_RELEASE = \"$UNAME_RELEASE\"\n+UNAME_SYSTEM  = \"$UNAME_SYSTEM\"\n+UNAME_VERSION = \"$UNAME_VERSION\"\n+EOF\n+\n+exit 1\n+\n+# Local variables:\n+# eval: (add-hook 'before-save-hook 'time-stamp)\n+# time-stamp-start: \"timestamp='\"\n+# time-stamp-format: \"%:y-%02m-%02d\"\n+# time-stamp-end: \"'\"\n+# End:"}, {"sha": "20f7cf29a9ed34f61ad235a26d67c09a9a6a523d", "filename": "libcody/build-aux/config.sub", "status": "added", "additions": 1833, "deletions": 0, "changes": 1833, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Fbuild-aux%2Fconfig.sub", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Fbuild-aux%2Fconfig.sub", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2Fbuild-aux%2Fconfig.sub?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -0,0 +1,1833 @@\n+#! /bin/sh\n+# Configuration validation subroutine script.\n+#   Copyright 1992-2018 Free Software Foundation, Inc.\n+\n+timestamp='2018-05-05'\n+\n+# This file is free software; you can redistribute it and/or modify it\n+# under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful, but\n+# WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+# General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, see <https://www.gnu.org/licenses/>.\n+#\n+# As a special exception to the GNU General Public License, if you\n+# distribute this file as part of a program that contains a\n+# configuration script generated by Autoconf, you may include it under\n+# the same distribution terms that you use for the rest of that\n+# program.  This Exception is an additional permission under section 7\n+# of the GNU General Public License, version 3 (\"GPLv3\").\n+\n+\n+# Please send patches to <config-patches@gnu.org>.\n+#\n+# Configuration subroutine to validate and canonicalize a configuration type.\n+# Supply the specified configuration type as an argument.\n+# If it is invalid, we print an error message on stderr and exit with code 1.\n+# Otherwise, we print the canonical config type on stdout and succeed.\n+\n+# You can get the latest version of this script from:\n+# https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub\n+\n+# This file is supposed to be the same for all GNU packages\n+# and recognize all the CPU types, system types and aliases\n+# that are meaningful with *any* GNU software.\n+# Each package is responsible for reporting which valid configurations\n+# it does not support.  The user should be able to distinguish\n+# a failure to support a valid configuration from a meaningless\n+# configuration.\n+\n+# The goal of this file is to map all the various variations of a given\n+# machine specification into a single specification in the form:\n+#\tCPU_TYPE-MANUFACTURER-OPERATING_SYSTEM\n+# or in some cases, the newer four-part form:\n+#\tCPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM\n+# It is wrong to echo any other type of specification.\n+\n+me=`echo \"$0\" | sed -e 's,.*/,,'`\n+\n+usage=\"\\\n+Usage: $0 [OPTION] CPU-MFR-OPSYS or ALIAS\n+\n+Canonicalize a configuration name.\n+\n+Options:\n+  -h, --help         print this help, then exit\n+  -t, --time-stamp   print date of last modification, then exit\n+  -v, --version      print version number, then exit\n+\n+Report bugs and patches to <config-patches@gnu.org>.\"\n+\n+version=\"\\\n+GNU config.sub ($timestamp)\n+\n+Copyright 1992-2018 Free Software Foundation, Inc.\n+\n+This is free software; see the source for copying conditions.  There is NO\n+warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n+\n+help=\"\n+Try \\`$me --help' for more information.\"\n+\n+# Parse command line\n+while test $# -gt 0 ; do\n+  case $1 in\n+    --time-stamp | --time* | -t )\n+       echo \"$timestamp\" ; exit ;;\n+    --version | -v )\n+       echo \"$version\" ; exit ;;\n+    --help | --h* | -h )\n+       echo \"$usage\"; exit ;;\n+    -- )     # Stop option processing\n+       shift; break ;;\n+    - )\t# Use stdin as input.\n+       break ;;\n+    -* )\n+       echo \"$me: invalid option $1$help\"\n+       exit 1 ;;\n+\n+    *local*)\n+       # First pass through any local machine types.\n+       echo \"$1\"\n+       exit ;;\n+\n+    * )\n+       break ;;\n+  esac\n+done\n+\n+case $# in\n+ 0) echo \"$me: missing argument$help\" >&2\n+    exit 1;;\n+ 1) ;;\n+ *) echo \"$me: too many arguments$help\" >&2\n+    exit 1;;\n+esac\n+\n+# Spilt fields of configuration type\n+IFS=\"-\" read -r field1 field2 field3 field4 <<EOF\n+$1\n+EOF\n+\n+# Separate into logical components for further validation\n+case $1 in\n+\t*-*-*-*)\n+\t\tbasic_machine=$field1-$field2\n+\t\tos=-$field3-$field4\n+\t\t;;\n+\t*-*-*)\n+\t\t# Ambiguous whether COMPANY is present, or skipped and KERNEL-OS is two\n+\t\t# parts\n+\t\tmaybe_os=$field2-$field3\n+\t\tcase $maybe_os in\n+\t\t\tnto-qnx* | linux-gnu* | linux-android* | linux-dietlibc \\\n+\t\t\t| linux-newlib* | linux-musl* | linux-uclibc* | uclinux-uclibc* \\\n+\t\t\t| uclinux-gnu* | kfreebsd*-gnu* | knetbsd*-gnu* | netbsd*-gnu* \\\n+\t\t\t| netbsd*-eabi* | kopensolaris*-gnu* | cloudabi*-eabi* \\\n+\t\t\t| storm-chaos* | os2-emx* | rtmk-nova*)\n+\t\t\t\tbasic_machine=$field1\n+\t\t\t\tos=-$maybe_os\n+\t\t\t\t;;\n+\t\t\tandroid-linux)\n+\t\t\t\tbasic_machine=$field1-unknown\n+\t\t\t\tos=-linux-android\n+\t\t\t\t;;\n+\t\t\t*)\n+\t\t\t\tbasic_machine=$field1-$field2\n+\t\t\t\tos=-$field3\n+\t\t\t\t;;\n+\t\tesac\n+\t\t;;\n+\t*-*)\n+\t\tbasic_machine=$field1\n+\t\tos=-$field2\n+\t\t;;\n+\t*)\n+\t\tbasic_machine=$1\n+\t\tos=\n+\t\t;;\n+esac\n+\n+### Let's recognize common machines as not being operating systems so\n+### that things like config.sub decstation-3100 work.  We also\n+### recognize some manufacturers as not being operating systems, so we\n+### can provide default operating systems below.\n+case $os in\n+\t-sun*os*)\n+\t\t# Prevent following clause from handling this invalid input.\n+\t\t;;\n+\t-dec* | -mips* | -sequent* | -encore* | -pc532* | -sgi* | -sony* | \\\n+\t-att* | -7300* | -3300* | -delta* | -motorola* | -sun[234]* | \\\n+\t-unicom* | -ibm* | -next | -hp | -isi* | -apollo | -altos* | \\\n+\t-convergent* | -ncr* | -news | -32* | -3600* | -3100* | -hitachi* |\\\n+\t-c[123]* | -convex* | -sun | -crds | -omron* | -dg | -ultra | -tti* | \\\n+\t-harris | -dolphin | -highlevel | -gould | -cbm | -ns | -masscomp | \\\n+\t-apple | -axis | -knuth | -cray | -microblaze*)\n+\t\tos=\n+\t\tbasic_machine=$1\n+\t\t;;\n+\t-bluegene*)\n+\t\tos=-cnk\n+\t\t;;\n+\t-sim | -cisco | -oki | -wec | -winbond)\n+\t\tos=\n+\t\tbasic_machine=$1\n+\t\t;;\n+\t-scout)\n+\t\t;;\n+\t-wrs)\n+\t\tos=-vxworks\n+\t\tbasic_machine=$1\n+\t\t;;\n+\t-chorusos*)\n+\t\tos=-chorusos\n+\t\tbasic_machine=$1\n+\t\t;;\n+\t-chorusrdb)\n+\t\tos=-chorusrdb\n+\t\tbasic_machine=$1\n+\t\t;;\n+\t-hiux*)\n+\t\tos=-hiuxwe2\n+\t\t;;\n+\t-sco6)\n+\t\tos=-sco5v6\n+\t\tbasic_machine=`echo \"$1\" | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-sco5)\n+\t\tos=-sco3.2v5\n+\t\tbasic_machine=`echo \"$1\" | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-sco4)\n+\t\tos=-sco3.2v4\n+\t\tbasic_machine=`echo \"$1\" | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-sco3.2.[4-9]*)\n+\t\tos=`echo $os | sed -e 's/sco3.2./sco3.2v/'`\n+\t\tbasic_machine=`echo \"$1\" | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-sco3.2v[4-9]*)\n+\t\t# Don't forget version if it is 3.2v4 or newer.\n+\t\tbasic_machine=`echo \"$1\" | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-sco5v6*)\n+\t\t# Don't forget version if it is 3.2v4 or newer.\n+\t\tbasic_machine=`echo \"$1\" | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-sco*)\n+\t\tos=-sco3.2v2\n+\t\tbasic_machine=`echo \"$1\" | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-udk*)\n+\t\tbasic_machine=`echo \"$1\" | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-isc)\n+\t\tos=-isc2.2\n+\t\tbasic_machine=`echo \"$1\" | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-clix*)\n+\t\tbasic_machine=clipper-intergraph\n+\t\t;;\n+\t-isc*)\n+\t\tbasic_machine=`echo \"$1\" | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-lynx*178)\n+\t\tos=-lynxos178\n+\t\t;;\n+\t-lynx*5)\n+\t\tos=-lynxos5\n+\t\t;;\n+\t-lynx*)\n+\t\tos=-lynxos\n+\t\t;;\n+\t-ptx*)\n+\t\tbasic_machine=`echo \"$1\" | sed -e 's/86-.*/86-sequent/'`\n+\t\t;;\n+\t-psos*)\n+\t\tos=-psos\n+\t\t;;\n+\t-mint | -mint[0-9]*)\n+\t\tbasic_machine=m68k-atari\n+\t\tos=-mint\n+\t\t;;\n+esac\n+\n+# Decode aliases for certain CPU-COMPANY combinations.\n+case $basic_machine in\n+\t# Recognize the basic CPU types without company name.\n+\t# Some are omitted here because they have special meanings below.\n+\t1750a | 580 \\\n+\t| a29k \\\n+\t| aarch64 | aarch64_be \\\n+\t| alpha | alphaev[4-8] | alphaev56 | alphaev6[78] | alphapca5[67] \\\n+\t| alpha64 | alpha64ev[4-8] | alpha64ev56 | alpha64ev6[78] | alpha64pca5[67] \\\n+\t| am33_2.0 \\\n+\t| arc | arceb \\\n+\t| arm | arm[bl]e | arme[lb] | armv[2-8] | armv[3-8][lb] | armv6m | armv[78][arm] \\\n+\t| avr | avr32 \\\n+\t| ba \\\n+\t| be32 | be64 \\\n+\t| bfin \\\n+\t| c4x | c8051 | clipper | csky \\\n+\t| d10v | d30v | dlx | dsp16xx \\\n+\t| e2k | epiphany \\\n+\t| fido | fr30 | frv | ft32 \\\n+\t| h8300 | h8500 | hppa | hppa1.[01] | hppa2.0 | hppa2.0[nw] | hppa64 \\\n+\t| hexagon \\\n+\t| i370 | i860 | i960 | ia16 | ia64 \\\n+\t| ip2k | iq2000 \\\n+\t| k1om \\\n+\t| le32 | le64 \\\n+\t| lm32 \\\n+\t| m32c | m32r | m32rle | m68000 | m68k | m88k \\\n+\t| maxq | mb | microblaze | microblazeel | mcore | mep | metag \\\n+\t| mips | mipsbe | mipseb | mipsel | mipsle \\\n+\t| mips16 \\\n+\t| mips64 | mips64el \\\n+\t| mips64octeon | mips64octeonel \\\n+\t| mips64orion | mips64orionel \\\n+\t| mips64r5900 | mips64r5900el \\\n+\t| mips64vr | mips64vrel \\\n+\t| mips64vr4100 | mips64vr4100el \\\n+\t| mips64vr4300 | mips64vr4300el \\\n+\t| mips64vr5000 | mips64vr5000el \\\n+\t| mips64vr5900 | mips64vr5900el \\\n+\t| mipsisa32 | mipsisa32el \\\n+\t| mipsisa32r2 | mipsisa32r2el \\\n+\t| mipsisa32r6 | mipsisa32r6el \\\n+\t| mipsisa64 | mipsisa64el \\\n+\t| mipsisa64r2 | mipsisa64r2el \\\n+\t| mipsisa64r6 | mipsisa64r6el \\\n+\t| mipsisa64sb1 | mipsisa64sb1el \\\n+\t| mipsisa64sr71k | mipsisa64sr71kel \\\n+\t| mipsr5900 | mipsr5900el \\\n+\t| mipstx39 | mipstx39el \\\n+\t| mn10200 | mn10300 \\\n+\t| moxie \\\n+\t| mt \\\n+\t| msp430 \\\n+\t| nds32 | nds32le | nds32be \\\n+\t| nfp \\\n+\t| nios | nios2 | nios2eb | nios2el \\\n+\t| ns16k | ns32k \\\n+\t| open8 | or1k | or1knd | or32 \\\n+\t| pdp10 | pj | pjl \\\n+\t| powerpc | powerpc64 | powerpc64le | powerpcle \\\n+\t| pru \\\n+\t| pyramid \\\n+\t| riscv32 | riscv64 \\\n+\t| rl78 | rx \\\n+\t| score \\\n+\t| sh | sh[1234] | sh[24]a | sh[24]aeb | sh[23]e | sh[234]eb | sheb | shbe | shle | sh[1234]le | sh3ele \\\n+\t| sh64 | sh64le \\\n+\t| sparc | sparc64 | sparc64b | sparc64v | sparc86x | sparclet | sparclite \\\n+\t| sparcv8 | sparcv9 | sparcv9b | sparcv9v \\\n+\t| spu \\\n+\t| tahoe | tic4x | tic54x | tic55x | tic6x | tic80 | tron \\\n+\t| ubicom32 \\\n+\t| v850 | v850e | v850e1 | v850e2 | v850es | v850e2v3 \\\n+\t| visium \\\n+\t| wasm32 \\\n+\t| x86 | xc16x | xstormy16 | xtensa \\\n+\t| z8k | z80)\n+\t\tbasic_machine=$basic_machine-unknown\n+\t\t;;\n+\tc54x)\n+\t\tbasic_machine=tic54x-unknown\n+\t\t;;\n+\tc55x)\n+\t\tbasic_machine=tic55x-unknown\n+\t\t;;\n+\tc6x)\n+\t\tbasic_machine=tic6x-unknown\n+\t\t;;\n+\tleon|leon[3-9])\n+\t\tbasic_machine=sparc-$basic_machine\n+\t\t;;\n+\tm6811 | m68hc11 | m6812 | m68hc12 | m68hcs12x | nvptx | picochip)\n+\t\tbasic_machine=$basic_machine-unknown\n+\t\tos=-none\n+\t\t;;\n+\tm88110 | m680[12346]0 | m683?2 | m68360 | m5200 | v70 | w65)\n+\t\t;;\n+\tm9s12z | m68hcs12z | hcs12z | s12z)\n+\t\tbasic_machine=s12z-unknown\n+\t\tos=-none\n+\t\t;;\n+\tms1)\n+\t\tbasic_machine=mt-unknown\n+\t\t;;\n+\n+\tstrongarm | thumb | xscale)\n+\t\tbasic_machine=arm-unknown\n+\t\t;;\n+\txgate)\n+\t\tbasic_machine=$basic_machine-unknown\n+\t\tos=-none\n+\t\t;;\n+\txscaleeb)\n+\t\tbasic_machine=armeb-unknown\n+\t\t;;\n+\n+\txscaleel)\n+\t\tbasic_machine=armel-unknown\n+\t\t;;\n+\n+\t# We use `pc' rather than `unknown'\n+\t# because (1) that's what they normally are, and\n+\t# (2) the word \"unknown\" tends to confuse beginning users.\n+\ti*86 | x86_64)\n+\t  basic_machine=$basic_machine-pc\n+\t  ;;\n+\t# Object if more than one company name word.\n+\t*-*-*)\n+\t\techo Invalid configuration \\`\"$1\"\\': machine \\`\"$basic_machine\"\\' not recognized 1>&2\n+\t\texit 1\n+\t\t;;\n+\t# Recognize the basic CPU types with company name.\n+\t580-* \\\n+\t| a29k-* \\\n+\t| aarch64-* | aarch64_be-* \\\n+\t| alpha-* | alphaev[4-8]-* | alphaev56-* | alphaev6[78]-* \\\n+\t| alpha64-* | alpha64ev[4-8]-* | alpha64ev56-* | alpha64ev6[78]-* \\\n+\t| alphapca5[67]-* | alpha64pca5[67]-* | arc-* | arceb-* \\\n+\t| arm-*  | armbe-* | armle-* | armeb-* | armv*-* \\\n+\t| avr-* | avr32-* \\\n+\t| ba-* \\\n+\t| be32-* | be64-* \\\n+\t| bfin-* | bs2000-* \\\n+\t| c[123]* | c30-* | [cjt]90-* | c4x-* \\\n+\t| c8051-* | clipper-* | craynv-* | csky-* | cydra-* \\\n+\t| d10v-* | d30v-* | dlx-* \\\n+\t| e2k-* | elxsi-* \\\n+\t| f30[01]-* | f700-* | fido-* | fr30-* | frv-* | fx80-* \\\n+\t| h8300-* | h8500-* \\\n+\t| hppa-* | hppa1.[01]-* | hppa2.0-* | hppa2.0[nw]-* | hppa64-* \\\n+\t| hexagon-* \\\n+\t| i*86-* | i860-* | i960-* | ia16-* | ia64-* \\\n+\t| ip2k-* | iq2000-* \\\n+\t| k1om-* \\\n+\t| le32-* | le64-* \\\n+\t| lm32-* \\\n+\t| m32c-* | m32r-* | m32rle-* \\\n+\t| m68000-* | m680[012346]0-* | m68360-* | m683?2-* | m68k-* \\\n+\t| m88110-* | m88k-* | maxq-* | mcore-* | metag-* \\\n+\t| microblaze-* | microblazeel-* \\\n+\t| mips-* | mipsbe-* | mipseb-* | mipsel-* | mipsle-* \\\n+\t| mips16-* \\\n+\t| mips64-* | mips64el-* \\\n+\t| mips64octeon-* | mips64octeonel-* \\\n+\t| mips64orion-* | mips64orionel-* \\\n+\t| mips64r5900-* | mips64r5900el-* \\\n+\t| mips64vr-* | mips64vrel-* \\\n+\t| mips64vr4100-* | mips64vr4100el-* \\\n+\t| mips64vr4300-* | mips64vr4300el-* \\\n+\t| mips64vr5000-* | mips64vr5000el-* \\\n+\t| mips64vr5900-* | mips64vr5900el-* \\\n+\t| mipsisa32-* | mipsisa32el-* \\\n+\t| mipsisa32r2-* | mipsisa32r2el-* \\\n+\t| mipsisa32r6-* | mipsisa32r6el-* \\\n+\t| mipsisa64-* | mipsisa64el-* \\\n+\t| mipsisa64r2-* | mipsisa64r2el-* \\\n+\t| mipsisa64r6-* | mipsisa64r6el-* \\\n+\t| mipsisa64sb1-* | mipsisa64sb1el-* \\\n+\t| mipsisa64sr71k-* | mipsisa64sr71kel-* \\\n+\t| mipsr5900-* | mipsr5900el-* \\\n+\t| mipstx39-* | mipstx39el-* \\\n+\t| mmix-* \\\n+\t| mt-* \\\n+\t| msp430-* \\\n+\t| nds32-* | nds32le-* | nds32be-* \\\n+\t| nfp-* \\\n+\t| nios-* | nios2-* | nios2eb-* | nios2el-* \\\n+\t| none-* | np1-* | ns16k-* | ns32k-* \\\n+\t| open8-* \\\n+\t| or1k*-* \\\n+\t| orion-* \\\n+\t| pdp10-* | pdp11-* | pj-* | pjl-* | pn-* | power-* \\\n+\t| powerpc-* | powerpc64-* | powerpc64le-* | powerpcle-* \\\n+\t| pru-* \\\n+\t| pyramid-* \\\n+\t| riscv32-* | riscv64-* \\\n+\t| rl78-* | romp-* | rs6000-* | rx-* \\\n+\t| sh-* | sh[1234]-* | sh[24]a-* | sh[24]aeb-* | sh[23]e-* | sh[34]eb-* | sheb-* | shbe-* \\\n+\t| shle-* | sh[1234]le-* | sh3ele-* | sh64-* | sh64le-* \\\n+\t| sparc-* | sparc64-* | sparc64b-* | sparc64v-* | sparc86x-* | sparclet-* \\\n+\t| sparclite-* \\\n+\t| sparcv8-* | sparcv9-* | sparcv9b-* | sparcv9v-* | sv1-* | sx*-* \\\n+\t| tahoe-* \\\n+\t| tic30-* | tic4x-* | tic54x-* | tic55x-* | tic6x-* | tic80-* \\\n+\t| tile*-* \\\n+\t| tron-* \\\n+\t| ubicom32-* \\\n+\t| v850-* | v850e-* | v850e1-* | v850es-* | v850e2-* | v850e2v3-* \\\n+\t| vax-* \\\n+\t| visium-* \\\n+\t| wasm32-* \\\n+\t| we32k-* \\\n+\t| x86-* | x86_64-* | xc16x-* | xps100-* \\\n+\t| xstormy16-* | xtensa*-* \\\n+\t| ymp-* \\\n+\t| z8k-* | z80-*)\n+\t\t;;\n+\t# Recognize the basic CPU types without company name, with glob match.\n+\txtensa*)\n+\t\tbasic_machine=$basic_machine-unknown\n+\t\t;;\n+\t# Recognize the various machine names and aliases which stand\n+\t# for a CPU type and a company and sometimes even an OS.\n+\t386bsd)\n+\t\tbasic_machine=i386-pc\n+\t\tos=-bsd\n+\t\t;;\n+\t3b1 | 7300 | 7300-att | att-7300 | pc7300 | safari | unixpc)\n+\t\tbasic_machine=m68000-att\n+\t\t;;\n+\t3b*)\n+\t\tbasic_machine=we32k-att\n+\t\t;;\n+\ta29khif)\n+\t\tbasic_machine=a29k-amd\n+\t\tos=-udi\n+\t\t;;\n+\tabacus)\n+\t\tbasic_machine=abacus-unknown\n+\t\t;;\n+\tadobe68k)\n+\t\tbasic_machine=m68010-adobe\n+\t\tos=-scout\n+\t\t;;\n+\talliant | fx80)\n+\t\tbasic_machine=fx80-alliant\n+\t\t;;\n+\taltos | altos3068)\n+\t\tbasic_machine=m68k-altos\n+\t\t;;\n+\tam29k)\n+\t\tbasic_machine=a29k-none\n+\t\tos=-bsd\n+\t\t;;\n+\tamd64)\n+\t\tbasic_machine=x86_64-pc\n+\t\t;;\n+\tamd64-*)\n+\t\tbasic_machine=x86_64-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tamdahl)\n+\t\tbasic_machine=580-amdahl\n+\t\tos=-sysv\n+\t\t;;\n+\tamiga | amiga-*)\n+\t\tbasic_machine=m68k-unknown\n+\t\t;;\n+\tamigaos | amigados)\n+\t\tbasic_machine=m68k-unknown\n+\t\tos=-amigaos\n+\t\t;;\n+\tamigaunix | amix)\n+\t\tbasic_machine=m68k-unknown\n+\t\tos=-sysv4\n+\t\t;;\n+\tapollo68)\n+\t\tbasic_machine=m68k-apollo\n+\t\tos=-sysv\n+\t\t;;\n+\tapollo68bsd)\n+\t\tbasic_machine=m68k-apollo\n+\t\tos=-bsd\n+\t\t;;\n+\taros)\n+\t\tbasic_machine=i386-pc\n+\t\tos=-aros\n+\t\t;;\n+\tasmjs)\n+\t\tbasic_machine=asmjs-unknown\n+\t\t;;\n+\taux)\n+\t\tbasic_machine=m68k-apple\n+\t\tos=-aux\n+\t\t;;\n+\tbalance)\n+\t\tbasic_machine=ns32k-sequent\n+\t\tos=-dynix\n+\t\t;;\n+\tblackfin)\n+\t\tbasic_machine=bfin-unknown\n+\t\tos=-linux\n+\t\t;;\n+\tblackfin-*)\n+\t\tbasic_machine=bfin-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\t\tos=-linux\n+\t\t;;\n+\tbluegene*)\n+\t\tbasic_machine=powerpc-ibm\n+\t\tos=-cnk\n+\t\t;;\n+\tc54x-*)\n+\t\tbasic_machine=tic54x-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tc55x-*)\n+\t\tbasic_machine=tic55x-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tc6x-*)\n+\t\tbasic_machine=tic6x-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tc90)\n+\t\tbasic_machine=c90-cray\n+\t\tos=-unicos\n+\t\t;;\n+\tcegcc)\n+\t\tbasic_machine=arm-unknown\n+\t\tos=-cegcc\n+\t\t;;\n+\tconvex-c1)\n+\t\tbasic_machine=c1-convex\n+\t\tos=-bsd\n+\t\t;;\n+\tconvex-c2)\n+\t\tbasic_machine=c2-convex\n+\t\tos=-bsd\n+\t\t;;\n+\tconvex-c32)\n+\t\tbasic_machine=c32-convex\n+\t\tos=-bsd\n+\t\t;;\n+\tconvex-c34)\n+\t\tbasic_machine=c34-convex\n+\t\tos=-bsd\n+\t\t;;\n+\tconvex-c38)\n+\t\tbasic_machine=c38-convex\n+\t\tos=-bsd\n+\t\t;;\n+\tcray | j90)\n+\t\tbasic_machine=j90-cray\n+\t\tos=-unicos\n+\t\t;;\n+\tcraynv)\n+\t\tbasic_machine=craynv-cray\n+\t\tos=-unicosmp\n+\t\t;;\n+\tcr16 | cr16-*)\n+\t\tbasic_machine=cr16-unknown\n+\t\tos=-elf\n+\t\t;;\n+\tcrds | unos)\n+\t\tbasic_machine=m68k-crds\n+\t\t;;\n+\tcrisv32 | crisv32-* | etraxfs*)\n+\t\tbasic_machine=crisv32-axis\n+\t\t;;\n+\tcris | cris-* | etrax*)\n+\t\tbasic_machine=cris-axis\n+\t\t;;\n+\tcrx)\n+\t\tbasic_machine=crx-unknown\n+\t\tos=-elf\n+\t\t;;\n+\tda30 | da30-*)\n+\t\tbasic_machine=m68k-da30\n+\t\t;;\n+\tdecstation | decstation-3100 | pmax | pmax-* | pmin | dec3100 | decstatn)\n+\t\tbasic_machine=mips-dec\n+\t\t;;\n+\tdecsystem10* | dec10*)\n+\t\tbasic_machine=pdp10-dec\n+\t\tos=-tops10\n+\t\t;;\n+\tdecsystem20* | dec20*)\n+\t\tbasic_machine=pdp10-dec\n+\t\tos=-tops20\n+\t\t;;\n+\tdelta | 3300 | motorola-3300 | motorola-delta \\\n+\t      | 3300-motorola | delta-motorola)\n+\t\tbasic_machine=m68k-motorola\n+\t\t;;\n+\tdelta88)\n+\t\tbasic_machine=m88k-motorola\n+\t\tos=-sysv3\n+\t\t;;\n+\tdicos)\n+\t\tbasic_machine=i686-pc\n+\t\tos=-dicos\n+\t\t;;\n+\tdjgpp)\n+\t\tbasic_machine=i586-pc\n+\t\tos=-msdosdjgpp\n+\t\t;;\n+\tdpx20 | dpx20-*)\n+\t\tbasic_machine=rs6000-bull\n+\t\tos=-bosx\n+\t\t;;\n+\tdpx2*)\n+\t\tbasic_machine=m68k-bull\n+\t\tos=-sysv3\n+\t\t;;\n+\te500v[12])\n+\t\tbasic_machine=powerpc-unknown\n+\t\tos=$os\"spe\"\n+\t\t;;\n+\te500v[12]-*)\n+\t\tbasic_machine=powerpc-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\t\tos=$os\"spe\"\n+\t\t;;\n+\tebmon29k)\n+\t\tbasic_machine=a29k-amd\n+\t\tos=-ebmon\n+\t\t;;\n+\telxsi)\n+\t\tbasic_machine=elxsi-elxsi\n+\t\tos=-bsd\n+\t\t;;\n+\tencore | umax | mmax)\n+\t\tbasic_machine=ns32k-encore\n+\t\t;;\n+\tes1800 | OSE68k | ose68k | ose | OSE)\n+\t\tbasic_machine=m68k-ericsson\n+\t\tos=-ose\n+\t\t;;\n+\tfx2800)\n+\t\tbasic_machine=i860-alliant\n+\t\t;;\n+\tgenix)\n+\t\tbasic_machine=ns32k-ns\n+\t\t;;\n+\tgmicro)\n+\t\tbasic_machine=tron-gmicro\n+\t\tos=-sysv\n+\t\t;;\n+\tgo32)\n+\t\tbasic_machine=i386-pc\n+\t\tos=-go32\n+\t\t;;\n+\th3050r* | hiux*)\n+\t\tbasic_machine=hppa1.1-hitachi\n+\t\tos=-hiuxwe2\n+\t\t;;\n+\th8300hms)\n+\t\tbasic_machine=h8300-hitachi\n+\t\tos=-hms\n+\t\t;;\n+\th8300xray)\n+\t\tbasic_machine=h8300-hitachi\n+\t\tos=-xray\n+\t\t;;\n+\th8500hms)\n+\t\tbasic_machine=h8500-hitachi\n+\t\tos=-hms\n+\t\t;;\n+\tharris)\n+\t\tbasic_machine=m88k-harris\n+\t\tos=-sysv3\n+\t\t;;\n+\thp300-*)\n+\t\tbasic_machine=m68k-hp\n+\t\t;;\n+\thp300bsd)\n+\t\tbasic_machine=m68k-hp\n+\t\tos=-bsd\n+\t\t;;\n+\thp300hpux)\n+\t\tbasic_machine=m68k-hp\n+\t\tos=-hpux\n+\t\t;;\n+\thp3k9[0-9][0-9] | hp9[0-9][0-9])\n+\t\tbasic_machine=hppa1.0-hp\n+\t\t;;\n+\thp9k2[0-9][0-9] | hp9k31[0-9])\n+\t\tbasic_machine=m68000-hp\n+\t\t;;\n+\thp9k3[2-9][0-9])\n+\t\tbasic_machine=m68k-hp\n+\t\t;;\n+\thp9k6[0-9][0-9] | hp6[0-9][0-9])\n+\t\tbasic_machine=hppa1.0-hp\n+\t\t;;\n+\thp9k7[0-79][0-9] | hp7[0-79][0-9])\n+\t\tbasic_machine=hppa1.1-hp\n+\t\t;;\n+\thp9k78[0-9] | hp78[0-9])\n+\t\t# FIXME: really hppa2.0-hp\n+\t\tbasic_machine=hppa1.1-hp\n+\t\t;;\n+\thp9k8[67]1 | hp8[67]1 | hp9k80[24] | hp80[24] | hp9k8[78]9 | hp8[78]9 | hp9k893 | hp893)\n+\t\t# FIXME: really hppa2.0-hp\n+\t\tbasic_machine=hppa1.1-hp\n+\t\t;;\n+\thp9k8[0-9][13679] | hp8[0-9][13679])\n+\t\tbasic_machine=hppa1.1-hp\n+\t\t;;\n+\thp9k8[0-9][0-9] | hp8[0-9][0-9])\n+\t\tbasic_machine=hppa1.0-hp\n+\t\t;;\n+\thppaosf)\n+\t\tbasic_machine=hppa1.1-hp\n+\t\tos=-osf\n+\t\t;;\n+\thppro)\n+\t\tbasic_machine=hppa1.1-hp\n+\t\tos=-proelf\n+\t\t;;\n+\ti370-ibm* | ibm*)\n+\t\tbasic_machine=i370-ibm\n+\t\t;;\n+\ti*86v32)\n+\t\tbasic_machine=`echo \"$1\" | sed -e 's/86.*/86-pc/'`\n+\t\tos=-sysv32\n+\t\t;;\n+\ti*86v4*)\n+\t\tbasic_machine=`echo \"$1\" | sed -e 's/86.*/86-pc/'`\n+\t\tos=-sysv4\n+\t\t;;\n+\ti*86v)\n+\t\tbasic_machine=`echo \"$1\" | sed -e 's/86.*/86-pc/'`\n+\t\tos=-sysv\n+\t\t;;\n+\ti*86sol2)\n+\t\tbasic_machine=`echo \"$1\" | sed -e 's/86.*/86-pc/'`\n+\t\tos=-solaris2\n+\t\t;;\n+\ti386mach)\n+\t\tbasic_machine=i386-mach\n+\t\tos=-mach\n+\t\t;;\n+\tvsta)\n+\t\tbasic_machine=i386-unknown\n+\t\tos=-vsta\n+\t\t;;\n+\tiris | iris4d)\n+\t\tbasic_machine=mips-sgi\n+\t\tcase $os in\n+\t\t    -irix*)\n+\t\t\t;;\n+\t\t    *)\n+\t\t\tos=-irix4\n+\t\t\t;;\n+\t\tesac\n+\t\t;;\n+\tisi68 | isi)\n+\t\tbasic_machine=m68k-isi\n+\t\tos=-sysv\n+\t\t;;\n+\tleon-*|leon[3-9]-*)\n+\t\tbasic_machine=sparc-`echo \"$basic_machine\" | sed 's/-.*//'`\n+\t\t;;\n+\tm68knommu)\n+\t\tbasic_machine=m68k-unknown\n+\t\tos=-linux\n+\t\t;;\n+\tm68knommu-*)\n+\t\tbasic_machine=m68k-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\t\tos=-linux\n+\t\t;;\n+\tmagnum | m3230)\n+\t\tbasic_machine=mips-mips\n+\t\tos=-sysv\n+\t\t;;\n+\tmerlin)\n+\t\tbasic_machine=ns32k-utek\n+\t\tos=-sysv\n+\t\t;;\n+\tmicroblaze*)\n+\t\tbasic_machine=microblaze-xilinx\n+\t\t;;\n+\tmingw64)\n+\t\tbasic_machine=x86_64-pc\n+\t\tos=-mingw64\n+\t\t;;\n+\tmingw32)\n+\t\tbasic_machine=i686-pc\n+\t\tos=-mingw32\n+\t\t;;\n+\tmingw32ce)\n+\t\tbasic_machine=arm-unknown\n+\t\tos=-mingw32ce\n+\t\t;;\n+\tminiframe)\n+\t\tbasic_machine=m68000-convergent\n+\t\t;;\n+\t*mint | -mint[0-9]* | *MiNT | *MiNT[0-9]*)\n+\t\tbasic_machine=m68k-atari\n+\t\tos=-mint\n+\t\t;;\n+\tmips3*-*)\n+\t\tbasic_machine=`echo \"$basic_machine\" | sed -e 's/mips3/mips64/'`\n+\t\t;;\n+\tmips3*)\n+\t\tbasic_machine=`echo \"$basic_machine\" | sed -e 's/mips3/mips64/'`-unknown\n+\t\t;;\n+\tmonitor)\n+\t\tbasic_machine=m68k-rom68k\n+\t\tos=-coff\n+\t\t;;\n+\tmorphos)\n+\t\tbasic_machine=powerpc-unknown\n+\t\tos=-morphos\n+\t\t;;\n+\tmoxiebox)\n+\t\tbasic_machine=moxie-unknown\n+\t\tos=-moxiebox\n+\t\t;;\n+\tmsdos)\n+\t\tbasic_machine=i386-pc\n+\t\tos=-msdos\n+\t\t;;\n+\tms1-*)\n+\t\tbasic_machine=`echo \"$basic_machine\" | sed -e 's/ms1-/mt-/'`\n+\t\t;;\n+\tmsys)\n+\t\tbasic_machine=i686-pc\n+\t\tos=-msys\n+\t\t;;\n+\tmvs)\n+\t\tbasic_machine=i370-ibm\n+\t\tos=-mvs\n+\t\t;;\n+\tnacl)\n+\t\tbasic_machine=le32-unknown\n+\t\tos=-nacl\n+\t\t;;\n+\tncr3000)\n+\t\tbasic_machine=i486-ncr\n+\t\tos=-sysv4\n+\t\t;;\n+\tnetbsd386)\n+\t\tbasic_machine=i386-unknown\n+\t\tos=-netbsd\n+\t\t;;\n+\tnetwinder)\n+\t\tbasic_machine=armv4l-rebel\n+\t\tos=-linux\n+\t\t;;\n+\tnews | news700 | news800 | news900)\n+\t\tbasic_machine=m68k-sony\n+\t\tos=-newsos\n+\t\t;;\n+\tnews1000)\n+\t\tbasic_machine=m68030-sony\n+\t\tos=-newsos\n+\t\t;;\n+\tnews-3600 | risc-news)\n+\t\tbasic_machine=mips-sony\n+\t\tos=-newsos\n+\t\t;;\n+\tnecv70)\n+\t\tbasic_machine=v70-nec\n+\t\tos=-sysv\n+\t\t;;\n+\tnext | m*-next)\n+\t\tbasic_machine=m68k-next\n+\t\tcase $os in\n+\t\t    -nextstep* )\n+\t\t\t;;\n+\t\t    -ns2*)\n+\t\t      os=-nextstep2\n+\t\t\t;;\n+\t\t    *)\n+\t\t      os=-nextstep3\n+\t\t\t;;\n+\t\tesac\n+\t\t;;\n+\tnh3000)\n+\t\tbasic_machine=m68k-harris\n+\t\tos=-cxux\n+\t\t;;\n+\tnh[45]000)\n+\t\tbasic_machine=m88k-harris\n+\t\tos=-cxux\n+\t\t;;\n+\tnindy960)\n+\t\tbasic_machine=i960-intel\n+\t\tos=-nindy\n+\t\t;;\n+\tmon960)\n+\t\tbasic_machine=i960-intel\n+\t\tos=-mon960\n+\t\t;;\n+\tnonstopux)\n+\t\tbasic_machine=mips-compaq\n+\t\tos=-nonstopux\n+\t\t;;\n+\tnp1)\n+\t\tbasic_machine=np1-gould\n+\t\t;;\n+\tneo-tandem)\n+\t\tbasic_machine=neo-tandem\n+\t\t;;\n+\tnse-tandem)\n+\t\tbasic_machine=nse-tandem\n+\t\t;;\n+\tnsr-tandem)\n+\t\tbasic_machine=nsr-tandem\n+\t\t;;\n+\tnsv-tandem)\n+\t\tbasic_machine=nsv-tandem\n+\t\t;;\n+\tnsx-tandem)\n+\t\tbasic_machine=nsx-tandem\n+\t\t;;\n+\top50n-* | op60c-*)\n+\t\tbasic_machine=hppa1.1-oki\n+\t\tos=-proelf\n+\t\t;;\n+\topenrisc | openrisc-*)\n+\t\tbasic_machine=or32-unknown\n+\t\t;;\n+\tos400)\n+\t\tbasic_machine=powerpc-ibm\n+\t\tos=-os400\n+\t\t;;\n+\tOSE68000 | ose68000)\n+\t\tbasic_machine=m68000-ericsson\n+\t\tos=-ose\n+\t\t;;\n+\tos68k)\n+\t\tbasic_machine=m68k-none\n+\t\tos=-os68k\n+\t\t;;\n+\tpa-hitachi)\n+\t\tbasic_machine=hppa1.1-hitachi\n+\t\tos=-hiuxwe2\n+\t\t;;\n+\tparagon)\n+\t\tbasic_machine=i860-intel\n+\t\tos=-osf\n+\t\t;;\n+\tparisc)\n+\t\tbasic_machine=hppa-unknown\n+\t\tos=-linux\n+\t\t;;\n+\tparisc-*)\n+\t\tbasic_machine=hppa-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\t\tos=-linux\n+\t\t;;\n+\tpbd)\n+\t\tbasic_machine=sparc-tti\n+\t\t;;\n+\tpbb)\n+\t\tbasic_machine=m68k-tti\n+\t\t;;\n+\tpc532 | pc532-*)\n+\t\tbasic_machine=ns32k-pc532\n+\t\t;;\n+\tpc98)\n+\t\tbasic_machine=i386-pc\n+\t\t;;\n+\tpc98-*)\n+\t\tbasic_machine=i386-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tpentium | p5 | k5 | k6 | nexgen | viac3)\n+\t\tbasic_machine=i586-pc\n+\t\t;;\n+\tpentiumpro | p6 | 6x86 | athlon | athlon_*)\n+\t\tbasic_machine=i686-pc\n+\t\t;;\n+\tpentiumii | pentium2 | pentiumiii | pentium3)\n+\t\tbasic_machine=i686-pc\n+\t\t;;\n+\tpentium4)\n+\t\tbasic_machine=i786-pc\n+\t\t;;\n+\tpentium-* | p5-* | k5-* | k6-* | nexgen-* | viac3-*)\n+\t\tbasic_machine=i586-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tpentiumpro-* | p6-* | 6x86-* | athlon-*)\n+\t\tbasic_machine=i686-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tpentiumii-* | pentium2-* | pentiumiii-* | pentium3-*)\n+\t\tbasic_machine=i686-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tpentium4-*)\n+\t\tbasic_machine=i786-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tpn)\n+\t\tbasic_machine=pn-gould\n+\t\t;;\n+\tpower)\tbasic_machine=power-ibm\n+\t\t;;\n+\tppc | ppcbe)\tbasic_machine=powerpc-unknown\n+\t\t;;\n+\tppc-* | ppcbe-*)\n+\t\tbasic_machine=powerpc-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tppcle | powerpclittle)\n+\t\tbasic_machine=powerpcle-unknown\n+\t\t;;\n+\tppcle-* | powerpclittle-*)\n+\t\tbasic_machine=powerpcle-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tppc64)\tbasic_machine=powerpc64-unknown\n+\t\t;;\n+\tppc64-*) basic_machine=powerpc64-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tppc64le | powerpc64little)\n+\t\tbasic_machine=powerpc64le-unknown\n+\t\t;;\n+\tppc64le-* | powerpc64little-*)\n+\t\tbasic_machine=powerpc64le-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tps2)\n+\t\tbasic_machine=i386-ibm\n+\t\t;;\n+\tpw32)\n+\t\tbasic_machine=i586-unknown\n+\t\tos=-pw32\n+\t\t;;\n+\trdos | rdos64)\n+\t\tbasic_machine=x86_64-pc\n+\t\tos=-rdos\n+\t\t;;\n+\trdos32)\n+\t\tbasic_machine=i386-pc\n+\t\tos=-rdos\n+\t\t;;\n+\trom68k)\n+\t\tbasic_machine=m68k-rom68k\n+\t\tos=-coff\n+\t\t;;\n+\trm[46]00)\n+\t\tbasic_machine=mips-siemens\n+\t\t;;\n+\trtpc | rtpc-*)\n+\t\tbasic_machine=romp-ibm\n+\t\t;;\n+\ts390 | s390-*)\n+\t\tbasic_machine=s390-ibm\n+\t\t;;\n+\ts390x | s390x-*)\n+\t\tbasic_machine=s390x-ibm\n+\t\t;;\n+\tsa29200)\n+\t\tbasic_machine=a29k-amd\n+\t\tos=-udi\n+\t\t;;\n+\tsb1)\n+\t\tbasic_machine=mipsisa64sb1-unknown\n+\t\t;;\n+\tsb1el)\n+\t\tbasic_machine=mipsisa64sb1el-unknown\n+\t\t;;\n+\tsde)\n+\t\tbasic_machine=mipsisa32-sde\n+\t\tos=-elf\n+\t\t;;\n+\tsei)\n+\t\tbasic_machine=mips-sei\n+\t\tos=-seiux\n+\t\t;;\n+\tsequent)\n+\t\tbasic_machine=i386-sequent\n+\t\t;;\n+\tsh5el)\n+\t\tbasic_machine=sh5le-unknown\n+\t\t;;\n+\tsimso-wrs)\n+\t\tbasic_machine=sparclite-wrs\n+\t\tos=-vxworks\n+\t\t;;\n+\tsps7)\n+\t\tbasic_machine=m68k-bull\n+\t\tos=-sysv2\n+\t\t;;\n+\tspur)\n+\t\tbasic_machine=spur-unknown\n+\t\t;;\n+\tst2000)\n+\t\tbasic_machine=m68k-tandem\n+\t\t;;\n+\tstratus)\n+\t\tbasic_machine=i860-stratus\n+\t\tos=-sysv4\n+\t\t;;\n+\tstrongarm-* | thumb-*)\n+\t\tbasic_machine=arm-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tsun2)\n+\t\tbasic_machine=m68000-sun\n+\t\t;;\n+\tsun2os3)\n+\t\tbasic_machine=m68000-sun\n+\t\tos=-sunos3\n+\t\t;;\n+\tsun2os4)\n+\t\tbasic_machine=m68000-sun\n+\t\tos=-sunos4\n+\t\t;;\n+\tsun3os3)\n+\t\tbasic_machine=m68k-sun\n+\t\tos=-sunos3\n+\t\t;;\n+\tsun3os4)\n+\t\tbasic_machine=m68k-sun\n+\t\tos=-sunos4\n+\t\t;;\n+\tsun4os3)\n+\t\tbasic_machine=sparc-sun\n+\t\tos=-sunos3\n+\t\t;;\n+\tsun4os4)\n+\t\tbasic_machine=sparc-sun\n+\t\tos=-sunos4\n+\t\t;;\n+\tsun4sol2)\n+\t\tbasic_machine=sparc-sun\n+\t\tos=-solaris2\n+\t\t;;\n+\tsun3 | sun3-*)\n+\t\tbasic_machine=m68k-sun\n+\t\t;;\n+\tsun4)\n+\t\tbasic_machine=sparc-sun\n+\t\t;;\n+\tsun386 | sun386i | roadrunner)\n+\t\tbasic_machine=i386-sun\n+\t\t;;\n+\tsv1)\n+\t\tbasic_machine=sv1-cray\n+\t\tos=-unicos\n+\t\t;;\n+\tsymmetry)\n+\t\tbasic_machine=i386-sequent\n+\t\tos=-dynix\n+\t\t;;\n+\tt3e)\n+\t\tbasic_machine=alphaev5-cray\n+\t\tos=-unicos\n+\t\t;;\n+\tt90)\n+\t\tbasic_machine=t90-cray\n+\t\tos=-unicos\n+\t\t;;\n+\ttile*)\n+\t\tbasic_machine=$basic_machine-unknown\n+\t\tos=-linux-gnu\n+\t\t;;\n+\ttx39)\n+\t\tbasic_machine=mipstx39-unknown\n+\t\t;;\n+\ttx39el)\n+\t\tbasic_machine=mipstx39el-unknown\n+\t\t;;\n+\ttoad1)\n+\t\tbasic_machine=pdp10-xkl\n+\t\tos=-tops20\n+\t\t;;\n+\ttower | tower-32)\n+\t\tbasic_machine=m68k-ncr\n+\t\t;;\n+\ttpf)\n+\t\tbasic_machine=s390x-ibm\n+\t\tos=-tpf\n+\t\t;;\n+\tudi29k)\n+\t\tbasic_machine=a29k-amd\n+\t\tos=-udi\n+\t\t;;\n+\tultra3)\n+\t\tbasic_machine=a29k-nyu\n+\t\tos=-sym1\n+\t\t;;\n+\tv810 | necv810)\n+\t\tbasic_machine=v810-nec\n+\t\tos=-none\n+\t\t;;\n+\tvaxv)\n+\t\tbasic_machine=vax-dec\n+\t\tos=-sysv\n+\t\t;;\n+\tvms)\n+\t\tbasic_machine=vax-dec\n+\t\tos=-vms\n+\t\t;;\n+\tvpp*|vx|vx-*)\n+\t\tbasic_machine=f301-fujitsu\n+\t\t;;\n+\tvxworks960)\n+\t\tbasic_machine=i960-wrs\n+\t\tos=-vxworks\n+\t\t;;\n+\tvxworks68)\n+\t\tbasic_machine=m68k-wrs\n+\t\tos=-vxworks\n+\t\t;;\n+\tvxworks29k)\n+\t\tbasic_machine=a29k-wrs\n+\t\tos=-vxworks\n+\t\t;;\n+\tw65*)\n+\t\tbasic_machine=w65-wdc\n+\t\tos=-none\n+\t\t;;\n+\tw89k-*)\n+\t\tbasic_machine=hppa1.1-winbond\n+\t\tos=-proelf\n+\t\t;;\n+\tx64)\n+\t\tbasic_machine=x86_64-pc\n+\t\t;;\n+\txbox)\n+\t\tbasic_machine=i686-pc\n+\t\tos=-mingw32\n+\t\t;;\n+\txps | xps100)\n+\t\tbasic_machine=xps100-honeywell\n+\t\t;;\n+\txscale-* | xscalee[bl]-*)\n+\t\tbasic_machine=`echo \"$basic_machine\" | sed 's/^xscale/arm/'`\n+\t\t;;\n+\tymp)\n+\t\tbasic_machine=ymp-cray\n+\t\tos=-unicos\n+\t\t;;\n+\tnone)\n+\t\tbasic_machine=none-none\n+\t\tos=-none\n+\t\t;;\n+\n+# Here we handle the default manufacturer of certain CPU types.  It is in\n+# some cases the only manufacturer, in others, it is the most popular.\n+\tw89k)\n+\t\tbasic_machine=hppa1.1-winbond\n+\t\t;;\n+\top50n)\n+\t\tbasic_machine=hppa1.1-oki\n+\t\t;;\n+\top60c)\n+\t\tbasic_machine=hppa1.1-oki\n+\t\t;;\n+\tromp)\n+\t\tbasic_machine=romp-ibm\n+\t\t;;\n+\tmmix)\n+\t\tbasic_machine=mmix-knuth\n+\t\t;;\n+\trs6000)\n+\t\tbasic_machine=rs6000-ibm\n+\t\t;;\n+\tvax)\n+\t\tbasic_machine=vax-dec\n+\t\t;;\n+\tpdp11)\n+\t\tbasic_machine=pdp11-dec\n+\t\t;;\n+\twe32k)\n+\t\tbasic_machine=we32k-att\n+\t\t;;\n+\tsh[1234] | sh[24]a | sh[24]aeb | sh[34]eb | sh[1234]le | sh[23]ele)\n+\t\tbasic_machine=sh-unknown\n+\t\t;;\n+\tcydra)\n+\t\tbasic_machine=cydra-cydrome\n+\t\t;;\n+\torion)\n+\t\tbasic_machine=orion-highlevel\n+\t\t;;\n+\torion105)\n+\t\tbasic_machine=clipper-highlevel\n+\t\t;;\n+\tmac | mpw | mac-mpw)\n+\t\tbasic_machine=m68k-apple\n+\t\t;;\n+\tpmac | pmac-mpw)\n+\t\tbasic_machine=powerpc-apple\n+\t\t;;\n+\t*-unknown)\n+\t\t# Make sure to match an already-canonicalized machine name.\n+\t\t;;\n+\t*)\n+\t\techo Invalid configuration \\`\"$1\"\\': machine \\`\"$basic_machine\"\\' not recognized 1>&2\n+\t\texit 1\n+\t\t;;\n+esac\n+\n+# Here we canonicalize certain aliases for manufacturers.\n+case $basic_machine in\n+\t*-digital*)\n+\t\tbasic_machine=`echo \"$basic_machine\" | sed 's/digital.*/dec/'`\n+\t\t;;\n+\t*-commodore*)\n+\t\tbasic_machine=`echo \"$basic_machine\" | sed 's/commodore.*/cbm/'`\n+\t\t;;\n+\t*)\n+\t\t;;\n+esac\n+\n+# Decode manufacturer-specific aliases for certain operating systems.\n+\n+if [ x$os != x ]\n+then\n+case $os in\n+\t# First match some system type aliases that might get confused\n+\t# with valid system types.\n+\t# -solaris* is a basic system type, with this one exception.\n+\t-auroraux)\n+\t\tos=-auroraux\n+\t\t;;\n+\t-solaris1 | -solaris1.*)\n+\t\tos=`echo $os | sed -e 's|solaris1|sunos4|'`\n+\t\t;;\n+\t-solaris)\n+\t\tos=-solaris2\n+\t\t;;\n+\t-unixware*)\n+\t\tos=-sysv4.2uw\n+\t\t;;\n+\t-gnu/linux*)\n+\t\tos=`echo $os | sed -e 's|gnu/linux|linux-gnu|'`\n+\t\t;;\n+\t# es1800 is here to avoid being matched by es* (a different OS)\n+\t-es1800*)\n+\t\tos=-ose\n+\t\t;;\n+\t# Now accept the basic system types.\n+\t# The portable systems comes first.\n+\t# Each alternative MUST end in a * to match a version number.\n+\t# -sysv* is not here because it comes later, after sysvr4.\n+\t-gnu* | -bsd* | -mach* | -minix* | -genix* | -ultrix* | -irix* \\\n+\t      | -*vms* | -sco* | -esix* | -isc* | -aix* | -cnk* | -sunos | -sunos[34]*\\\n+\t      | -hpux* | -unos* | -osf* | -luna* | -dgux* | -auroraux* | -solaris* \\\n+\t      | -sym* | -kopensolaris* | -plan9* \\\n+\t      | -amigaos* | -amigados* | -msdos* | -newsos* | -unicos* | -aof* \\\n+\t      | -aos* | -aros* | -cloudabi* | -sortix* \\\n+\t      | -nindy* | -vxsim* | -vxworks* | -ebmon* | -hms* | -mvs* \\\n+\t      | -clix* | -riscos* | -uniplus* | -iris* | -rtu* | -xenix* \\\n+\t      | -hiux* | -knetbsd* | -mirbsd* | -netbsd* \\\n+\t      | -bitrig* | -openbsd* | -solidbsd* | -libertybsd* \\\n+\t      | -ekkobsd* | -kfreebsd* | -freebsd* | -riscix* | -lynxos* \\\n+\t      | -bosx* | -nextstep* | -cxux* | -aout* | -elf* | -oabi* \\\n+\t      | -ptx* | -coff* | -ecoff* | -winnt* | -domain* | -vsta* \\\n+\t      | -udi* | -eabi* | -lites* | -ieee* | -go32* | -aux* | -hcos* \\\n+\t      | -chorusos* | -chorusrdb* | -cegcc* | -glidix* \\\n+\t      | -cygwin* | -msys* | -pe* | -psos* | -moss* | -proelf* | -rtems* \\\n+\t      | -midipix* | -mingw32* | -mingw64* | -linux-gnu* | -linux-android* \\\n+\t      | -linux-newlib* | -linux-musl* | -linux-uclibc* \\\n+\t      | -uxpv* | -beos* | -mpeix* | -udk* | -moxiebox* \\\n+\t      | -interix* | -uwin* | -mks* | -rhapsody* | -darwin* \\\n+\t      | -openstep* | -oskit* | -conix* | -pw32* | -nonstopux* \\\n+\t      | -storm-chaos* | -tops10* | -tenex* | -tops20* | -its* \\\n+\t      | -os2* | -vos* | -palmos* | -uclinux* | -nucleus* \\\n+\t      | -morphos* | -superux* | -rtmk* | -windiss* \\\n+\t      | -powermax* | -dnix* | -nx6 | -nx7 | -sei* | -dragonfly* \\\n+\t      | -skyos* | -haiku* | -rdos* | -toppers* | -drops* | -es* \\\n+\t      | -onefs* | -tirtos* | -phoenix* | -fuchsia* | -redox* | -bme* \\\n+\t      | -midnightbsd*)\n+\t# Remember, each alternative MUST END IN *, to match a version number.\n+\t\t;;\n+\t-qnx*)\n+\t\tcase $basic_machine in\n+\t\t    x86-* | i*86-*)\n+\t\t\t;;\n+\t\t    *)\n+\t\t\tos=-nto$os\n+\t\t\t;;\n+\t\tesac\n+\t\t;;\n+\t-nto-qnx*)\n+\t\t;;\n+\t-nto*)\n+\t\tos=`echo $os | sed -e 's|nto|nto-qnx|'`\n+\t\t;;\n+\t-sim | -xray | -os68k* | -v88r* \\\n+\t      | -windows* | -osx | -abug | -netware* | -os9* \\\n+\t      | -macos* | -mpw* | -magic* | -mmixware* | -mon960* | -lnews*)\n+\t\t;;\n+\t-mac*)\n+\t\tos=`echo \"$os\" | sed -e 's|mac|macos|'`\n+\t\t;;\n+\t-linux-dietlibc)\n+\t\tos=-linux-dietlibc\n+\t\t;;\n+\t-linux*)\n+\t\tos=`echo $os | sed -e 's|linux|linux-gnu|'`\n+\t\t;;\n+\t-sunos5*)\n+\t\tos=`echo \"$os\" | sed -e 's|sunos5|solaris2|'`\n+\t\t;;\n+\t-sunos6*)\n+\t\tos=`echo \"$os\" | sed -e 's|sunos6|solaris3|'`\n+\t\t;;\n+\t-opened*)\n+\t\tos=-openedition\n+\t\t;;\n+\t-os400*)\n+\t\tos=-os400\n+\t\t;;\n+\t-wince*)\n+\t\tos=-wince\n+\t\t;;\n+\t-utek*)\n+\t\tos=-bsd\n+\t\t;;\n+\t-dynix*)\n+\t\tos=-bsd\n+\t\t;;\n+\t-acis*)\n+\t\tos=-aos\n+\t\t;;\n+\t-atheos*)\n+\t\tos=-atheos\n+\t\t;;\n+\t-syllable*)\n+\t\tos=-syllable\n+\t\t;;\n+\t-386bsd)\n+\t\tos=-bsd\n+\t\t;;\n+\t-ctix* | -uts*)\n+\t\tos=-sysv\n+\t\t;;\n+\t-nova*)\n+\t\tos=-rtmk-nova\n+\t\t;;\n+\t-ns2)\n+\t\tos=-nextstep2\n+\t\t;;\n+\t-nsk*)\n+\t\tos=-nsk\n+\t\t;;\n+\t# Preserve the version number of sinix5.\n+\t-sinix5.*)\n+\t\tos=`echo $os | sed -e 's|sinix|sysv|'`\n+\t\t;;\n+\t-sinix*)\n+\t\tos=-sysv4\n+\t\t;;\n+\t-tpf*)\n+\t\tos=-tpf\n+\t\t;;\n+\t-triton*)\n+\t\tos=-sysv3\n+\t\t;;\n+\t-oss*)\n+\t\tos=-sysv3\n+\t\t;;\n+\t-svr4*)\n+\t\tos=-sysv4\n+\t\t;;\n+\t-svr3)\n+\t\tos=-sysv3\n+\t\t;;\n+\t-sysvr4)\n+\t\tos=-sysv4\n+\t\t;;\n+\t# This must come after -sysvr4.\n+\t-sysv*)\n+\t\t;;\n+\t-ose*)\n+\t\tos=-ose\n+\t\t;;\n+\t-*mint | -mint[0-9]* | -*MiNT | -MiNT[0-9]*)\n+\t\tos=-mint\n+\t\t;;\n+\t-zvmoe)\n+\t\tos=-zvmoe\n+\t\t;;\n+\t-dicos*)\n+\t\tos=-dicos\n+\t\t;;\n+\t-pikeos*)\n+\t\t# Until real need of OS specific support for\n+\t\t# particular features comes up, bare metal\n+\t\t# configurations are quite functional.\n+\t\tcase $basic_machine in\n+\t\t    arm*)\n+\t\t\tos=-eabi\n+\t\t\t;;\n+\t\t    *)\n+\t\t\tos=-elf\n+\t\t\t;;\n+\t\tesac\n+\t\t;;\n+\t-nacl*)\n+\t\t;;\n+\t-ios)\n+\t\t;;\n+\t-none)\n+\t\t;;\n+\t-*-eabi)\n+\t\tcase $basic_machine in\n+\t\t    arm*)\n+\t\t\t;;\n+\t\tesac\n+\t\t;;\n+\t*)\n+\t\t# Get rid of the `-' at the beginning of $os.\n+\t\tos=`echo $os | sed 's/[^-]*-//'`\n+\t\techo Invalid configuration \\`\"$1\"\\': system \\`\"$os\"\\' not recognized 1>&2\n+\t\texit 1\n+\t\t;;\n+esac\n+else\n+\n+# Here we handle the default operating systems that come with various machines.\n+# The value should be what the vendor currently ships out the door with their\n+# machine or put another way, the most popular os provided with the machine.\n+\n+# Note that if you're going to try to match \"-MANUFACTURER\" here (say,\n+# \"-sun\"), then you have to tell the case statement up towards the top\n+# that MANUFACTURER isn't an operating system.  Otherwise, code above\n+# will signal an error saying that MANUFACTURER isn't an operating\n+# system, and we'll never get to this point.\n+\n+case $basic_machine in\n+\tscore-*)\n+\t\tos=-elf\n+\t\t;;\n+\tspu-*)\n+\t\tos=-elf\n+\t\t;;\n+\t*-acorn)\n+\t\tos=-riscix1.2\n+\t\t;;\n+\tarm*-rebel)\n+\t\tos=-linux\n+\t\t;;\n+\tarm*-semi)\n+\t\tos=-aout\n+\t\t;;\n+\tc4x-* | tic4x-*)\n+\t\tos=-coff\n+\t\t;;\n+\tc8051-*)\n+\t\tos=-elf\n+\t\t;;\n+\thexagon-*)\n+\t\tos=-elf\n+\t\t;;\n+\ttic54x-*)\n+\t\tos=-coff\n+\t\t;;\n+\ttic55x-*)\n+\t\tos=-coff\n+\t\t;;\n+\ttic6x-*)\n+\t\tos=-coff\n+\t\t;;\n+\t# This must come before the *-dec entry.\n+\tpdp10-*)\n+\t\tos=-tops20\n+\t\t;;\n+\tpdp11-*)\n+\t\tos=-none\n+\t\t;;\n+\t*-dec | vax-*)\n+\t\tos=-ultrix4.2\n+\t\t;;\n+\tm68*-apollo)\n+\t\tos=-domain\n+\t\t;;\n+\ti386-sun)\n+\t\tos=-sunos4.0.2\n+\t\t;;\n+\tm68000-sun)\n+\t\tos=-sunos3\n+\t\t;;\n+\tm68*-cisco)\n+\t\tos=-aout\n+\t\t;;\n+\tmep-*)\n+\t\tos=-elf\n+\t\t;;\n+\tmips*-cisco)\n+\t\tos=-elf\n+\t\t;;\n+\tmips*-*)\n+\t\tos=-elf\n+\t\t;;\n+\tor32-*)\n+\t\tos=-coff\n+\t\t;;\n+\t*-tti)\t# must be before sparc entry or we get the wrong os.\n+\t\tos=-sysv3\n+\t\t;;\n+\tsparc-* | *-sun)\n+\t\tos=-sunos4.1.1\n+\t\t;;\n+\tpru-*)\n+\t\tos=-elf\n+\t\t;;\n+\t*-be)\n+\t\tos=-beos\n+\t\t;;\n+\t*-ibm)\n+\t\tos=-aix\n+\t\t;;\n+\t*-knuth)\n+\t\tos=-mmixware\n+\t\t;;\n+\t*-wec)\n+\t\tos=-proelf\n+\t\t;;\n+\t*-winbond)\n+\t\tos=-proelf\n+\t\t;;\n+\t*-oki)\n+\t\tos=-proelf\n+\t\t;;\n+\t*-hp)\n+\t\tos=-hpux\n+\t\t;;\n+\t*-hitachi)\n+\t\tos=-hiux\n+\t\t;;\n+\ti860-* | *-att | *-ncr | *-altos | *-motorola | *-convergent)\n+\t\tos=-sysv\n+\t\t;;\n+\t*-cbm)\n+\t\tos=-amigaos\n+\t\t;;\n+\t*-dg)\n+\t\tos=-dgux\n+\t\t;;\n+\t*-dolphin)\n+\t\tos=-sysv3\n+\t\t;;\n+\tm68k-ccur)\n+\t\tos=-rtu\n+\t\t;;\n+\tm88k-omron*)\n+\t\tos=-luna\n+\t\t;;\n+\t*-next)\n+\t\tos=-nextstep\n+\t\t;;\n+\t*-sequent)\n+\t\tos=-ptx\n+\t\t;;\n+\t*-crds)\n+\t\tos=-unos\n+\t\t;;\n+\t*-ns)\n+\t\tos=-genix\n+\t\t;;\n+\ti370-*)\n+\t\tos=-mvs\n+\t\t;;\n+\t*-gould)\n+\t\tos=-sysv\n+\t\t;;\n+\t*-highlevel)\n+\t\tos=-bsd\n+\t\t;;\n+\t*-encore)\n+\t\tos=-bsd\n+\t\t;;\n+\t*-sgi)\n+\t\tos=-irix\n+\t\t;;\n+\t*-siemens)\n+\t\tos=-sysv4\n+\t\t;;\n+\t*-masscomp)\n+\t\tos=-rtu\n+\t\t;;\n+\tf30[01]-fujitsu | f700-fujitsu)\n+\t\tos=-uxpv\n+\t\t;;\n+\t*-rom68k)\n+\t\tos=-coff\n+\t\t;;\n+\t*-*bug)\n+\t\tos=-coff\n+\t\t;;\n+\t*-apple)\n+\t\tos=-macos\n+\t\t;;\n+\t*-atari*)\n+\t\tos=-mint\n+\t\t;;\n+\t*)\n+\t\tos=-none\n+\t\t;;\n+esac\n+fi\n+\n+# Here we handle the case where we know the os, and the CPU type, but not the\n+# manufacturer.  We pick the logical manufacturer.\n+vendor=unknown\n+case $basic_machine in\n+\t*-unknown)\n+\t\tcase $os in\n+\t\t\t-riscix*)\n+\t\t\t\tvendor=acorn\n+\t\t\t\t;;\n+\t\t\t-sunos*)\n+\t\t\t\tvendor=sun\n+\t\t\t\t;;\n+\t\t\t-cnk*|-aix*)\n+\t\t\t\tvendor=ibm\n+\t\t\t\t;;\n+\t\t\t-beos*)\n+\t\t\t\tvendor=be\n+\t\t\t\t;;\n+\t\t\t-hpux*)\n+\t\t\t\tvendor=hp\n+\t\t\t\t;;\n+\t\t\t-mpeix*)\n+\t\t\t\tvendor=hp\n+\t\t\t\t;;\n+\t\t\t-hiux*)\n+\t\t\t\tvendor=hitachi\n+\t\t\t\t;;\n+\t\t\t-unos*)\n+\t\t\t\tvendor=crds\n+\t\t\t\t;;\n+\t\t\t-dgux*)\n+\t\t\t\tvendor=dg\n+\t\t\t\t;;\n+\t\t\t-luna*)\n+\t\t\t\tvendor=omron\n+\t\t\t\t;;\n+\t\t\t-genix*)\n+\t\t\t\tvendor=ns\n+\t\t\t\t;;\n+\t\t\t-mvs* | -opened*)\n+\t\t\t\tvendor=ibm\n+\t\t\t\t;;\n+\t\t\t-os400*)\n+\t\t\t\tvendor=ibm\n+\t\t\t\t;;\n+\t\t\t-ptx*)\n+\t\t\t\tvendor=sequent\n+\t\t\t\t;;\n+\t\t\t-tpf*)\n+\t\t\t\tvendor=ibm\n+\t\t\t\t;;\n+\t\t\t-vxsim* | -vxworks* | -windiss*)\n+\t\t\t\tvendor=wrs\n+\t\t\t\t;;\n+\t\t\t-aux*)\n+\t\t\t\tvendor=apple\n+\t\t\t\t;;\n+\t\t\t-hms*)\n+\t\t\t\tvendor=hitachi\n+\t\t\t\t;;\n+\t\t\t-mpw* | -macos*)\n+\t\t\t\tvendor=apple\n+\t\t\t\t;;\n+\t\t\t-*mint | -mint[0-9]* | -*MiNT | -MiNT[0-9]*)\n+\t\t\t\tvendor=atari\n+\t\t\t\t;;\n+\t\t\t-vos*)\n+\t\t\t\tvendor=stratus\n+\t\t\t\t;;\n+\t\tesac\n+\t\tbasic_machine=`echo \"$basic_machine\" | sed \"s/unknown/$vendor/\"`\n+\t\t;;\n+esac\n+\n+echo \"$basic_machine$os\"\n+exit\n+\n+# Local variables:\n+# eval: (add-hook 'before-save-hook 'time-stamp)\n+# time-stamp-start: \"timestamp='\"\n+# time-stamp-format: \"%:y-%02m-%02d\"\n+# time-stamp-end: \"'\"\n+# End:"}, {"sha": "8175c640fe6288a75cc846567ea5506086f326f4", "filename": "libcody/build-aux/install-sh", "status": "added", "additions": 518, "deletions": 0, "changes": 518, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Fbuild-aux%2Finstall-sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Fbuild-aux%2Finstall-sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2Fbuild-aux%2Finstall-sh?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -0,0 +1,518 @@\n+#!/bin/sh\n+# install - install a program, script, or datafile\n+\n+scriptversion=2018-03-11.20; # UTC\n+\n+# This originates from X11R5 (mit/util/scripts/install.sh), which was\n+# later released in X11R6 (xc/config/util/install.sh) with the\n+# following copyright and license.\n+#\n+# Copyright (C) 1994 X Consortium\n+#\n+# Permission is hereby granted, free of charge, to any person obtaining a copy\n+# of this software and associated documentation files (the \"Software\"), to\n+# deal in the Software without restriction, including without limitation the\n+# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n+# sell copies of the Software, and to permit persons to whom the Software is\n+# furnished to do so, subject to the following conditions:\n+#\n+# The above copyright notice and this permission notice shall be included in\n+# all copies or substantial portions of the Software.\n+#\n+# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n+# X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN\n+# AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNEC-\n+# TION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n+#\n+# Except as contained in this notice, the name of the X Consortium shall not\n+# be used in advertising or otherwise to promote the sale, use or other deal-\n+# ings in this Software without prior written authorization from the X Consor-\n+# tium.\n+#\n+#\n+# FSF changes to this file are in the public domain.\n+#\n+# Calling this script install-sh is preferred over install.sh, to prevent\n+# 'make' implicit rules from creating a file called install from it\n+# when there is no Makefile.\n+#\n+# This script is compatible with the BSD install script, but was written\n+# from scratch.\n+\n+tab='\t'\n+nl='\n+'\n+IFS=\" $tab$nl\"\n+\n+# Set DOITPROG to \"echo\" to test this script.\n+\n+doit=${DOITPROG-}\n+doit_exec=${doit:-exec}\n+\n+# Put in absolute file names if you don't have them in your path;\n+# or use environment vars.\n+\n+chgrpprog=${CHGRPPROG-chgrp}\n+chmodprog=${CHMODPROG-chmod}\n+chownprog=${CHOWNPROG-chown}\n+cmpprog=${CMPPROG-cmp}\n+cpprog=${CPPROG-cp}\n+mkdirprog=${MKDIRPROG-mkdir}\n+mvprog=${MVPROG-mv}\n+rmprog=${RMPROG-rm}\n+stripprog=${STRIPPROG-strip}\n+\n+posix_mkdir=\n+\n+# Desired mode of installed file.\n+mode=0755\n+\n+chgrpcmd=\n+chmodcmd=$chmodprog\n+chowncmd=\n+mvcmd=$mvprog\n+rmcmd=\"$rmprog -f\"\n+stripcmd=\n+\n+src=\n+dst=\n+dir_arg=\n+dst_arg=\n+\n+copy_on_change=false\n+is_target_a_directory=possibly\n+\n+usage=\"\\\n+Usage: $0 [OPTION]... [-T] SRCFILE DSTFILE\n+   or: $0 [OPTION]... SRCFILES... DIRECTORY\n+   or: $0 [OPTION]... -t DIRECTORY SRCFILES...\n+   or: $0 [OPTION]... -d DIRECTORIES...\n+\n+In the 1st form, copy SRCFILE to DSTFILE.\n+In the 2nd and 3rd, copy all SRCFILES to DIRECTORY.\n+In the 4th, create DIRECTORIES.\n+\n+Options:\n+     --help     display this help and exit.\n+     --version  display version info and exit.\n+\n+  -c            (ignored)\n+  -C            install only if different (preserve the last data modification time)\n+  -d            create directories instead of installing files.\n+  -g GROUP      $chgrpprog installed files to GROUP.\n+  -m MODE       $chmodprog installed files to MODE.\n+  -o USER       $chownprog installed files to USER.\n+  -s            $stripprog installed files.\n+  -t DIRECTORY  install into DIRECTORY.\n+  -T            report an error if DSTFILE is a directory.\n+\n+Environment variables override the default commands:\n+  CHGRPPROG CHMODPROG CHOWNPROG CMPPROG CPPROG MKDIRPROG MVPROG\n+  RMPROG STRIPPROG\n+\"\n+\n+while test $# -ne 0; do\n+  case $1 in\n+    -c) ;;\n+\n+    -C) copy_on_change=true;;\n+\n+    -d) dir_arg=true;;\n+\n+    -g) chgrpcmd=\"$chgrpprog $2\"\n+        shift;;\n+\n+    --help) echo \"$usage\"; exit $?;;\n+\n+    -m) mode=$2\n+        case $mode in\n+          *' '* | *\"$tab\"* | *\"$nl\"* | *'*'* | *'?'* | *'['*)\n+            echo \"$0: invalid mode: $mode\" >&2\n+            exit 1;;\n+        esac\n+        shift;;\n+\n+    -o) chowncmd=\"$chownprog $2\"\n+        shift;;\n+\n+    -s) stripcmd=$stripprog;;\n+\n+    -t)\n+        is_target_a_directory=always\n+        dst_arg=$2\n+        # Protect names problematic for 'test' and other utilities.\n+        case $dst_arg in\n+          -* | [=\\(\\)!]) dst_arg=./$dst_arg;;\n+        esac\n+        shift;;\n+\n+    -T) is_target_a_directory=never;;\n+\n+    --version) echo \"$0 $scriptversion\"; exit $?;;\n+\n+    --) shift\n+        break;;\n+\n+    -*) echo \"$0: invalid option: $1\" >&2\n+        exit 1;;\n+\n+    *)  break;;\n+  esac\n+  shift\n+done\n+\n+# We allow the use of options -d and -T together, by making -d\n+# take the precedence; this is for compatibility with GNU install.\n+\n+if test -n \"$dir_arg\"; then\n+  if test -n \"$dst_arg\"; then\n+    echo \"$0: target directory not allowed when installing a directory.\" >&2\n+    exit 1\n+  fi\n+fi\n+\n+if test $# -ne 0 && test -z \"$dir_arg$dst_arg\"; then\n+  # When -d is used, all remaining arguments are directories to create.\n+  # When -t is used, the destination is already specified.\n+  # Otherwise, the last argument is the destination.  Remove it from $@.\n+  for arg\n+  do\n+    if test -n \"$dst_arg\"; then\n+      # $@ is not empty: it contains at least $arg.\n+      set fnord \"$@\" \"$dst_arg\"\n+      shift # fnord\n+    fi\n+    shift # arg\n+    dst_arg=$arg\n+    # Protect names problematic for 'test' and other utilities.\n+    case $dst_arg in\n+      -* | [=\\(\\)!]) dst_arg=./$dst_arg;;\n+    esac\n+  done\n+fi\n+\n+if test $# -eq 0; then\n+  if test -z \"$dir_arg\"; then\n+    echo \"$0: no input file specified.\" >&2\n+    exit 1\n+  fi\n+  # It's OK to call 'install-sh -d' without argument.\n+  # This can happen when creating conditional directories.\n+  exit 0\n+fi\n+\n+if test -z \"$dir_arg\"; then\n+  if test $# -gt 1 || test \"$is_target_a_directory\" = always; then\n+    if test ! -d \"$dst_arg\"; then\n+      echo \"$0: $dst_arg: Is not a directory.\" >&2\n+      exit 1\n+    fi\n+  fi\n+fi\n+\n+if test -z \"$dir_arg\"; then\n+  do_exit='(exit $ret); exit $ret'\n+  trap \"ret=129; $do_exit\" 1\n+  trap \"ret=130; $do_exit\" 2\n+  trap \"ret=141; $do_exit\" 13\n+  trap \"ret=143; $do_exit\" 15\n+\n+  # Set umask so as not to create temps with too-generous modes.\n+  # However, 'strip' requires both read and write access to temps.\n+  case $mode in\n+    # Optimize common cases.\n+    *644) cp_umask=133;;\n+    *755) cp_umask=22;;\n+\n+    *[0-7])\n+      if test -z \"$stripcmd\"; then\n+        u_plus_rw=\n+      else\n+        u_plus_rw='% 200'\n+      fi\n+      cp_umask=`expr '(' 777 - $mode % 1000 ')' $u_plus_rw`;;\n+    *)\n+      if test -z \"$stripcmd\"; then\n+        u_plus_rw=\n+      else\n+        u_plus_rw=,u+rw\n+      fi\n+      cp_umask=$mode$u_plus_rw;;\n+  esac\n+fi\n+\n+for src\n+do\n+  # Protect names problematic for 'test' and other utilities.\n+  case $src in\n+    -* | [=\\(\\)!]) src=./$src;;\n+  esac\n+\n+  if test -n \"$dir_arg\"; then\n+    dst=$src\n+    dstdir=$dst\n+    test -d \"$dstdir\"\n+    dstdir_status=$?\n+  else\n+\n+    # Waiting for this to be detected by the \"$cpprog $src $dsttmp\" command\n+    # might cause directories to be created, which would be especially bad\n+    # if $src (and thus $dsttmp) contains '*'.\n+    if test ! -f \"$src\" && test ! -d \"$src\"; then\n+      echo \"$0: $src does not exist.\" >&2\n+      exit 1\n+    fi\n+\n+    if test -z \"$dst_arg\"; then\n+      echo \"$0: no destination specified.\" >&2\n+      exit 1\n+    fi\n+    dst=$dst_arg\n+\n+    # If destination is a directory, append the input filename.\n+    if test -d \"$dst\"; then\n+      if test \"$is_target_a_directory\" = never; then\n+        echo \"$0: $dst_arg: Is a directory\" >&2\n+        exit 1\n+      fi\n+      dstdir=$dst\n+      dstbase=`basename \"$src\"`\n+      case $dst in\n+\t*/) dst=$dst$dstbase;;\n+\t*)  dst=$dst/$dstbase;;\n+      esac\n+      dstdir_status=0\n+    else\n+      dstdir=`dirname \"$dst\"`\n+      test -d \"$dstdir\"\n+      dstdir_status=$?\n+    fi\n+  fi\n+\n+  case $dstdir in\n+    */) dstdirslash=$dstdir;;\n+    *)  dstdirslash=$dstdir/;;\n+  esac\n+\n+  obsolete_mkdir_used=false\n+\n+  if test $dstdir_status != 0; then\n+    case $posix_mkdir in\n+      '')\n+        # Create intermediate dirs using mode 755 as modified by the umask.\n+        # This is like FreeBSD 'install' as of 1997-10-28.\n+        umask=`umask`\n+        case $stripcmd.$umask in\n+          # Optimize common cases.\n+          *[2367][2367]) mkdir_umask=$umask;;\n+          .*0[02][02] | .[02][02] | .[02]) mkdir_umask=22;;\n+\n+          *[0-7])\n+            mkdir_umask=`expr $umask + 22 \\\n+              - $umask % 100 % 40 + $umask % 20 \\\n+              - $umask % 10 % 4 + $umask % 2\n+            `;;\n+          *) mkdir_umask=$umask,go-w;;\n+        esac\n+\n+        # With -d, create the new directory with the user-specified mode.\n+        # Otherwise, rely on $mkdir_umask.\n+        if test -n \"$dir_arg\"; then\n+          mkdir_mode=-m$mode\n+        else\n+          mkdir_mode=\n+        fi\n+\n+        posix_mkdir=false\n+        case $umask in\n+          *[123567][0-7][0-7])\n+            # POSIX mkdir -p sets u+wx bits regardless of umask, which\n+            # is incompatible with FreeBSD 'install' when (umask & 300) != 0.\n+            ;;\n+          *)\n+            # Note that $RANDOM variable is not portable (e.g. dash);  Use it\n+            # here however when possible just to lower collision chance.\n+            tmpdir=${TMPDIR-/tmp}/ins$RANDOM-$$\n+\n+            trap 'ret=$?; rmdir \"$tmpdir/a/b\" \"$tmpdir/a\" \"$tmpdir\" 2>/dev/null; exit $ret' 0\n+\n+            # Because \"mkdir -p\" follows existing symlinks and we likely work\n+            # directly in world-writeable /tmp, make sure that the '$tmpdir'\n+            # directory is successfully created first before we actually test\n+            # 'mkdir -p' feature.\n+            if (umask $mkdir_umask &&\n+                $mkdirprog $mkdir_mode \"$tmpdir\" &&\n+                exec $mkdirprog $mkdir_mode -p -- \"$tmpdir/a/b\") >/dev/null 2>&1\n+            then\n+              if test -z \"$dir_arg\" || {\n+                   # Check for POSIX incompatibilities with -m.\n+                   # HP-UX 11.23 and IRIX 6.5 mkdir -m -p sets group- or\n+                   # other-writable bit of parent directory when it shouldn't.\n+                   # FreeBSD 6.1 mkdir -m -p sets mode of existing directory.\n+                   test_tmpdir=\"$tmpdir/a\"\n+                   ls_ld_tmpdir=`ls -ld \"$test_tmpdir\"`\n+                   case $ls_ld_tmpdir in\n+                     d????-?r-*) different_mode=700;;\n+                     d????-?--*) different_mode=755;;\n+                     *) false;;\n+                   esac &&\n+                   $mkdirprog -m$different_mode -p -- \"$test_tmpdir\" && {\n+                     ls_ld_tmpdir_1=`ls -ld \"$test_tmpdir\"`\n+                     test \"$ls_ld_tmpdir\" = \"$ls_ld_tmpdir_1\"\n+                   }\n+                 }\n+              then posix_mkdir=:\n+              fi\n+              rmdir \"$tmpdir/a/b\" \"$tmpdir/a\" \"$tmpdir\"\n+            else\n+              # Remove any dirs left behind by ancient mkdir implementations.\n+              rmdir ./$mkdir_mode ./-p ./-- \"$tmpdir\" 2>/dev/null\n+            fi\n+            trap '' 0;;\n+        esac;;\n+    esac\n+\n+    if\n+      $posix_mkdir && (\n+        umask $mkdir_umask &&\n+        $doit_exec $mkdirprog $mkdir_mode -p -- \"$dstdir\"\n+      )\n+    then :\n+    else\n+\n+      # The umask is ridiculous, or mkdir does not conform to POSIX,\n+      # or it failed possibly due to a race condition.  Create the\n+      # directory the slow way, step by step, checking for races as we go.\n+\n+      case $dstdir in\n+        /*) prefix='/';;\n+        [-=\\(\\)!]*) prefix='./';;\n+        *)  prefix='';;\n+      esac\n+\n+      oIFS=$IFS\n+      IFS=/\n+      set -f\n+      set fnord $dstdir\n+      shift\n+      set +f\n+      IFS=$oIFS\n+\n+      prefixes=\n+\n+      for d\n+      do\n+        test X\"$d\" = X && continue\n+\n+        prefix=$prefix$d\n+        if test -d \"$prefix\"; then\n+          prefixes=\n+        else\n+          if $posix_mkdir; then\n+            (umask=$mkdir_umask &&\n+             $doit_exec $mkdirprog $mkdir_mode -p -- \"$dstdir\") && break\n+            # Don't fail if two instances are running concurrently.\n+            test -d \"$prefix\" || exit 1\n+          else\n+            case $prefix in\n+              *\\'*) qprefix=`echo \"$prefix\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"`;;\n+              *) qprefix=$prefix;;\n+            esac\n+            prefixes=\"$prefixes '$qprefix'\"\n+          fi\n+        fi\n+        prefix=$prefix/\n+      done\n+\n+      if test -n \"$prefixes\"; then\n+        # Don't fail if two instances are running concurrently.\n+        (umask $mkdir_umask &&\n+         eval \"\\$doit_exec \\$mkdirprog $prefixes\") ||\n+          test -d \"$dstdir\" || exit 1\n+        obsolete_mkdir_used=true\n+      fi\n+    fi\n+  fi\n+\n+  if test -n \"$dir_arg\"; then\n+    { test -z \"$chowncmd\" || $doit $chowncmd \"$dst\"; } &&\n+    { test -z \"$chgrpcmd\" || $doit $chgrpcmd \"$dst\"; } &&\n+    { test \"$obsolete_mkdir_used$chowncmd$chgrpcmd\" = false ||\n+      test -z \"$chmodcmd\" || $doit $chmodcmd $mode \"$dst\"; } || exit 1\n+  else\n+\n+    # Make a couple of temp file names in the proper directory.\n+    dsttmp=${dstdirslash}_inst.$$_\n+    rmtmp=${dstdirslash}_rm.$$_\n+\n+    # Trap to clean up those temp files at exit.\n+    trap 'ret=$?; rm -f \"$dsttmp\" \"$rmtmp\" && exit $ret' 0\n+\n+    # Copy the file name to the temp name.\n+    (umask $cp_umask && $doit_exec $cpprog \"$src\" \"$dsttmp\") &&\n+\n+    # and set any options; do chmod last to preserve setuid bits.\n+    #\n+    # If any of these fail, we abort the whole thing.  If we want to\n+    # ignore errors from any of these, just make sure not to ignore\n+    # errors from the above \"$doit $cpprog $src $dsttmp\" command.\n+    #\n+    { test -z \"$chowncmd\" || $doit $chowncmd \"$dsttmp\"; } &&\n+    { test -z \"$chgrpcmd\" || $doit $chgrpcmd \"$dsttmp\"; } &&\n+    { test -z \"$stripcmd\" || $doit $stripcmd \"$dsttmp\"; } &&\n+    { test -z \"$chmodcmd\" || $doit $chmodcmd $mode \"$dsttmp\"; } &&\n+\n+    # If -C, don't bother to copy if it wouldn't change the file.\n+    if $copy_on_change &&\n+       old=`LC_ALL=C ls -dlL \"$dst\"     2>/dev/null` &&\n+       new=`LC_ALL=C ls -dlL \"$dsttmp\"  2>/dev/null` &&\n+       set -f &&\n+       set X $old && old=:$2:$4:$5:$6 &&\n+       set X $new && new=:$2:$4:$5:$6 &&\n+       set +f &&\n+       test \"$old\" = \"$new\" &&\n+       $cmpprog \"$dst\" \"$dsttmp\" >/dev/null 2>&1\n+    then\n+      rm -f \"$dsttmp\"\n+    else\n+      # Rename the file to the real destination.\n+      $doit $mvcmd -f \"$dsttmp\" \"$dst\" 2>/dev/null ||\n+\n+      # The rename failed, perhaps because mv can't rename something else\n+      # to itself, or perhaps because mv is so ancient that it does not\n+      # support -f.\n+      {\n+        # Now remove or move aside any old file at destination location.\n+        # We try this two ways since rm can't unlink itself on some\n+        # systems and the destination file might be busy for other\n+        # reasons.  In this case, the final cleanup might fail but the new\n+        # file should still install successfully.\n+        {\n+          test ! -f \"$dst\" ||\n+          $doit $rmcmd -f \"$dst\" 2>/dev/null ||\n+          { $doit $mvcmd -f \"$dst\" \"$rmtmp\" 2>/dev/null &&\n+            { $doit $rmcmd -f \"$rmtmp\" 2>/dev/null; :; }\n+          } ||\n+          { echo \"$0: cannot unlink or rename $dst\" >&2\n+            (exit 1); exit 1\n+          }\n+        } &&\n+\n+        # Now rename the file to the real destination.\n+        $doit $mvcmd \"$dsttmp\" \"$dst\"\n+      }\n+    fi || exit 1\n+\n+    trap '' 0\n+  fi\n+done\n+\n+# Local variables:\n+# eval: (add-hook 'before-save-hook 'time-stamp)\n+# time-stamp-start: \"scriptversion=\"\n+# time-stamp-format: \"%:y-%02m-%02d.%02H\"\n+# time-stamp-time-zone: \"UTC0\"\n+# time-stamp-end: \"; # UTC\"\n+# End:"}, {"sha": "54111b851d0f139c3694cfd949e847ca04bd6e10", "filename": "libcody/client.cc", "status": "added", "additions": 336, "deletions": 0, "changes": 336, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Fclient.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Fclient.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2Fclient.cc?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -0,0 +1,336 @@\n+// CODYlib\t\t-*- mode:c++ -*-\n+// Copyright (C) 2020 Nathan Sidwell, nathan@acm.org\n+// License: Apache v2.0\n+\n+// Cody\n+#include \"internal.hh\"\n+// C\n+#include <cerrno>\n+#include <cstring>\n+\n+// Client code\n+\n+namespace Cody {\n+\n+// These do not need to be members\n+static Packet ConnectResponse (std::vector<std::string> &words);\n+static Packet PathnameResponse (std::vector<std::string> &words);\n+static Packet OKResponse (std::vector<std::string> &words);\n+static Packet IncludeTranslateResponse (std::vector<std::string> &words);\n+\n+// Must be consistently ordered with the RequestCode enum\n+static Packet (*const responseTable[Detail::RC_HWM])\n+  (std::vector<std::string> &) =\n+  {\n+    &ConnectResponse,\n+    &PathnameResponse,\n+    &PathnameResponse,\n+    &PathnameResponse,\n+    &OKResponse,\n+    &IncludeTranslateResponse,\n+  };\n+\n+Client::Client ()\n+{\n+  fd.from = fd.to = -1;\n+}\n+\n+Client::Client (Client &&src)\n+  : write (std::move (src.write)),\n+    read (std::move (src.read)),\n+    corked (std::move (src.corked)),\n+    is_direct (src.is_direct),\n+    is_connected (src.is_connected)\n+{\n+  if (is_direct)\n+    server = src.server;\n+  else\n+    {\n+      fd.from = src.fd.from;\n+      fd.to = src.fd.to;\n+    }\n+}\n+\n+Client::~Client ()\n+{\n+}\n+\n+Client &Client::operator= (Client &&src)\n+{\n+  write = std::move (src.write);\n+  read = std::move (src.read);\n+  corked = std::move (src.corked);\n+  is_direct = src.is_direct;\n+  is_connected = src.is_connected;\n+  if (is_direct)\n+    server = src.server;\n+  else\n+    {\n+      fd.from = src.fd.from;\n+      fd.to = src.fd.to;\n+    }\n+\n+  return *this;\n+}\n+\n+int Client::CommunicateWithServer ()\n+{\n+  write.PrepareToWrite ();\n+  read.PrepareToRead ();\n+  if (IsDirect ())\n+    server->DirectProcess (write, read);\n+  else\n+    {\n+      // Write the write buffer\n+      while (int e = write.Write (fd.to))\n+\tif (e != EAGAIN && e != EINTR)\n+\t  return e;\n+      // Read the read buffer\n+      while (int e = read.Read (fd.from))\n+\tif (e != EAGAIN && e != EINTR)\n+\t  return e;\n+    }\n+\n+  return 0;\n+}\n+\n+static Packet CommunicationError (int err)\n+{\n+  std::string e {u8\"communication error:\"};\n+  e.append (strerror (err));\n+\n+  return Packet (Client::PC_ERROR, std::move (e));\n+}\n+\n+Packet Client::ProcessResponse (std::vector<std::string> &words,\n+\t\t\t       unsigned code, bool isLast)\n+{\n+  if (int e = read.Lex (words))\n+    {\n+      if (e == EINVAL)\n+\t{\n+\t  std::string msg (u8\"malformed string '\");\n+\t  msg.append (words[0]);\n+\t  msg.append (u8\"'\");\n+\t  return Packet (Client::PC_ERROR, std::move (msg));\n+\t}\n+      else\n+\treturn Packet (Client::PC_ERROR, u8\"missing response\");\n+    }\n+\n+  Assert (!words.empty ());\n+  if (words[0] == u8\"ERROR\")\n+    return Packet (Client::PC_ERROR,\n+\t\t  std::move (words.size () == 2 ? words[1]\n+\t\t\t     : u8\"malformed error response\"));\n+\n+  if (isLast && !read.IsAtEnd ())\n+    return Packet (Client::PC_ERROR,\n+\t\t   std::string (u8\"unexpected extra response\"));\n+\n+  Assert (code < Detail::RC_HWM);\n+  Packet result (responseTable[code] (words));\n+  result.SetRequest (code);\n+  if (result.GetCode () == Client::PC_ERROR && result.GetString ().empty ())\n+    {\n+      std::string msg {u8\"malformed response '\"};\n+\n+      read.LexedLine (msg);\n+      msg.append (u8\"'\");\n+      result.GetString () = std::move (msg);\n+    }\n+  else if (result.GetCode () == Client::PC_CONNECT)\n+    is_connected = true;\n+\n+  return result;\n+}\n+\n+Packet Client::MaybeRequest (unsigned code)\n+{\n+  if (IsCorked ())\n+    {\n+      corked.push_back (code);\n+      return Packet (PC_CORKED);\n+    }\n+\n+  if (int err = CommunicateWithServer ())\n+    return CommunicationError (err);\n+\n+  std::vector<std::string> words;\n+  return ProcessResponse(words, code, true);\n+}\n+\n+void Client::Cork ()\n+{\n+  if (corked.empty ())\n+    corked.push_back (-1);\n+}\n+\n+std::vector<Packet> Client::Uncork ()\n+{\n+  std::vector<Packet> result;\n+\n+  if (corked.size () > 1)\n+    {\n+      if (int err = CommunicateWithServer ())\n+\tresult.emplace_back (CommunicationError (err));\n+      else\n+\t{\n+\t  std::vector<std::string> words;\n+\t  for (auto iter = corked.begin () + 1; iter != corked.end ();)\n+\t    {\n+\t      char code = *iter;\n+\t      ++iter;\n+\t      result.emplace_back (ProcessResponse (words, code,\n+\t\t\t\t\t\t    iter == corked.end ()));\n+\t    }\n+\t}\n+    }\n+\n+  corked.clear ();\n+\n+  return result;\n+}\n+\n+// Now the individual message handlers\n+\n+// HELLO $vernum $agent $ident\n+Packet Client::Connect (char const *agent, char const *ident,\n+\t\t\t  size_t alen, size_t ilen)\n+{\n+  write.BeginLine ();\n+  write.AppendWord (u8\"HELLO\");\n+  write.AppendInteger (Version);\n+  write.AppendWord (agent, true, alen);\n+  write.AppendWord (ident, true, ilen);\n+  write.EndLine ();\n+\n+  return MaybeRequest (Detail::RC_CONNECT);\n+}\n+\n+// HELLO $version $agent [$flags]\n+Packet ConnectResponse (std::vector<std::string> &words)\n+{\n+  if (words[0] == u8\"HELLO\" && (words.size () == 3 || words.size () == 4))\n+    {\n+      char *eptr;\n+      unsigned long val = strtoul (words[1].c_str (), &eptr, 10);\n+\n+      unsigned version = unsigned (val);\n+      if (*eptr || version != val || version < Version)\n+\treturn Packet (Client::PC_ERROR, u8\"incompatible version\");\n+      else\n+\t{\n+\t  unsigned flags = 0;\n+\t  if (words.size () == 4)\n+\t    {\n+\t      val = strtoul (words[3].c_str (), &eptr, 10);\n+\t      flags = unsigned (val);\n+\t    }\n+\t  return Packet (Client::PC_CONNECT, flags);\n+\t}\n+    }\n+\n+  return Packet (Client::PC_ERROR, u8\"\");\n+}\n+\n+// MODULE-REPO\n+Packet Client::ModuleRepo ()\n+{\n+  write.BeginLine ();\n+  write.AppendWord (u8\"MODULE-REPO\");\n+  write.EndLine ();\n+\n+  return MaybeRequest (Detail::RC_MODULE_REPO);\n+}\n+\n+// PATHNAME $dir | ERROR\n+Packet PathnameResponse (std::vector<std::string> &words)\n+{\n+  if (words[0] == u8\"PATHNAME\" && words.size () == 2)\n+    return Packet (Client::PC_PATHNAME, std::move (words[1]));\n+\n+  return Packet (Client::PC_ERROR, u8\"\");\n+}\n+\n+// OK or ERROR\n+Packet OKResponse (std::vector<std::string> &words)\n+{\n+  if (words[0] == u8\"OK\")\n+    return Packet (Client::PC_OK);\n+  else\n+    return Packet (Client::PC_ERROR,\n+\t\t   words.size () == 2 ? std::move (words[1]) : \"\");\n+}\n+\n+// MODULE-EXPORT $modulename [$flags]\n+Packet Client::ModuleExport (char const *module, Flags flags, size_t mlen)\n+{\n+  write.BeginLine ();\n+  write.AppendWord (u8\"MODULE-EXPORT\");\n+  write.AppendWord (module, true, mlen);\n+  if (flags != Flags::None)\n+    write.AppendInteger (unsigned (flags));\n+  write.EndLine ();\n+\n+  return MaybeRequest (Detail::RC_MODULE_EXPORT);\n+}\n+\n+// MODULE-IMPORT $modulename [$flags]\n+Packet Client::ModuleImport (char const *module, Flags flags, size_t mlen)\n+{\n+  write.BeginLine ();\n+  write.AppendWord (u8\"MODULE-IMPORT\");\n+  write.AppendWord (module, true, mlen);\n+  if (flags != Flags::None)\n+    write.AppendInteger (unsigned (flags));\n+  write.EndLine ();\n+\n+  return MaybeRequest (Detail::RC_MODULE_IMPORT);\n+}\n+\n+// MODULE-COMPILED $modulename [$flags]\n+Packet Client::ModuleCompiled (char const *module, Flags flags, size_t mlen)\n+{\n+  write.BeginLine ();\n+  write.AppendWord (u8\"MODULE-COMPILED\");\n+  write.AppendWord (module, true, mlen);\n+  if (flags != Flags::None)\n+    write.AppendInteger (unsigned (flags));\n+  write.EndLine ();\n+\n+  return MaybeRequest (Detail::RC_MODULE_COMPILED);\n+}\n+\n+// INCLUDE-TRANSLATE $includename [$flags]\n+Packet Client::IncludeTranslate (char const *include, Flags flags, size_t ilen)\n+{\n+  write.BeginLine ();\n+  write.AppendWord (u8\"INCLUDE-TRANSLATE\");\n+  write.AppendWord (include, true, ilen);\n+  if (flags != Flags::None)\n+    write.AppendInteger (unsigned (flags));\n+  write.EndLine ();\n+\n+  return MaybeRequest (Detail::RC_INCLUDE_TRANSLATE);\n+}\n+\n+// BOOL $knowntextualness\n+// PATHNAME $cmifile\n+Packet IncludeTranslateResponse (std::vector<std::string> &words)\n+{\n+  if (words[0] == u8\"BOOL\" && words.size () == 2)\n+    {\n+      if (words[1] == u8\"FALSE\")\n+\treturn Packet (Client::PC_BOOL, 0);\n+      else if (words[1] == u8\"TRUE\")\n+\treturn Packet (Client::PC_BOOL, 1);\n+      else\n+\treturn Packet (Client::PC_ERROR, u8\"\");\n+    }\n+  else\n+    return PathnameResponse (words);\n+}\n+\n+}\n+"}, {"sha": "0606e85e3b8d60fcb3719506b1a8680623b38932", "filename": "libcody/cmake/libcody-config-ix.cmake", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Fcmake%2Flibcody-config-ix.cmake", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Fcmake%2Flibcody-config-ix.cmake", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2Fcmake%2Flibcody-config-ix.cmake?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -0,0 +1,43 @@\n+# message(STATUS \"*top config-ix* CMAKE_SYSTEM : ${CMAKE_SYSTEM}\")\n+\n+include(CheckIncludeFile)\n+include(CheckIncludeFileCXX)\n+#include(CheckLibraryExists)\n+#include(CheckSymbolExists)\n+include(CheckFunctionExists)\n+#include(CheckCXXSourceCompiles)\n+#include(TestBigEndian)\n+include(CheckCCompilerFlag)\n+include(CheckCXXCompilerFlag)\n+\n+# Flags\n+\n+check_cxx_compiler_flag(-stdlib=libc++    LIBCODY_CXX_HAS_STDLIB_FLAG)\n+\n+check_cxx_compiler_flag(-fno-enforce-eh-specs LIBCODY_HAS_NOENFORCE)\n+check_cxx_compiler_flag(-fno-stack-protector LIBCODY_HAS_NOSTACKPROT)\n+check_cxx_compiler_flag(-fno-threadsafe-statics LIBCODY_HAS_NOTHREADSAFESTATICS)\n+\n+check_cxx_compiler_flag(-Wno-gnu-zero-variadic-macro-arguments LIBCODY_CXX_W_GZVMA)\n+\n+# Address github issue #10\n+if (NOT CODY_WITHEXCEPTIONS)\n+  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fno-exceptions -fno-rtti\")\n+  if (LIBCODY_HAS_NOENFORCE)\n+    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fno-enforce-eh-specs\")\n+  endif()\n+endif()\n+\n+if (LIBCODY_HAS_NOSTACKPROT)\n+  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fno-stack-protector\")\n+endif()\n+if (LIBCODY_HAS_NOTHREADSAFESTATICS)\n+  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fno-threadsafe-statics\")\n+endif()\n+\n+set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -W -Wall -Woverloaded-virtual -Wshadow\")\n+set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wno-invalid-offsetof -Wno-unused-variable\")\n+set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wno-missing-field-initializers\")\n+if (LIBCODY_CXX_W_GZVMA)\n+set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wno-gnu-zero-variadic-macro-arguments\")\n+endif ()"}, {"sha": "31d9c182cbe9c1a3a4dbd175e89a10ebdb06f6fc", "filename": "libcody/cody.hh", "status": "added", "additions": 800, "deletions": 0, "changes": 800, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Fcody.hh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Fcody.hh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2Fcody.hh?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -0,0 +1,800 @@\n+// CODYlib\t\t-*- mode:c++ -*-\n+// Copyright (C) 2020 Nathan Sidwell, nathan@acm.org\n+// License: Apache v2.0\n+\n+#ifndef CODY_HH\n+#define CODY_HH 1\n+\n+// Have a known-good list of networking systems\n+#if defined (__unix__) || defined (__MACH__)\n+#define CODY_NETWORKING 1\n+#else\n+#define CODY_NETWORKING 0\n+#endif\n+#if 0  // For testing\n+#undef CODY_NETWORKING\n+#define CODY_NETWORKING 0\n+#endif\n+\n+// C++\n+#include <memory>\n+#include <string>\n+#include <vector>\n+// C\n+#include <cstddef>\n+// OS\n+#include <errno.h>\n+#include <sys/types.h>\n+#if CODY_NETWORKING\n+#include <sys/socket.h>\n+#endif\n+\n+namespace Cody {\n+\n+// Set version to 1, as this is completely incompatible with 0.\n+// Fortunately both versions 0 and 1 will recognize each other's HELLO\n+// messages sufficiently to error out\n+constexpr unsigned Version = 1;\n+\n+// FIXME: I guess we need a file-handle abstraction here\n+// Is windows DWORDPTR still?, or should it be FILE *? (ew).\n+\n+namespace Detail  {\n+\n+// C++11 doesn't have utf8 character literals :(\n+\n+template<unsigned I>\n+constexpr char S2C (char const (&s)[I])\n+{\n+  static_assert (I == 2, \"only single octet strings may be converted\");\n+  return s[0];\n+}\n+\n+/// Internal buffering class.  Used to concatenate outgoing messages\n+/// and Lex incoming ones.\n+class MessageBuffer\n+{\n+  std::vector<char> buffer;  ///< buffer holding the message\n+  size_t lastBol = 0;  ///< location of the most recent Beginning Of\n+\t\t       ///< Line, or position we've readed when writing\n+\n+public:\n+  MessageBuffer () = default;\n+  ~MessageBuffer () = default;\n+  MessageBuffer (MessageBuffer &&) = default;\n+  MessageBuffer &operator= (MessageBuffer &&) = default;\n+\n+public:\n+  ///\n+  /// Finalize a buffer to be written.  No more lines can be added to\n+  /// the buffer.  Use before a sequence of Write calls.\n+  void PrepareToWrite ()\n+  {\n+    buffer.push_back (u8\"\\n\"[0]);\n+    lastBol = 0;\n+  }\n+  ///\n+  /// Prepare a buffer for reading.  Use before a sequence of Read calls.\n+  void PrepareToRead ()\n+  {\n+    buffer.clear ();\n+    lastBol = 0;\n+  }\n+\n+public:\n+  /// Begin a message line.  Use before a sequence of Append and\n+  /// related calls.\n+  void BeginLine ();\n+  /// End a message line.  Use after a sequence of Append and related calls.\n+  void EndLine () {}\n+\n+public:\n+  /// Append a string to the current line.  No whitespace is prepended\n+  /// or appended.\n+  ///\n+  /// @param str the string to be written\n+  /// @param maybe_quote indicate if there's a possibility the string\n+  /// contains characters that need quoting.  Defaults to false.\n+  /// It is always safe to set\n+  /// this true, but that causes an additional scan of the string.\n+  /// @param len The length of the string.  If not specified, strlen\n+  /// is used to find the length.\n+  void Append (char const *str, bool maybe_quote = false,\n+\t       size_t len = ~size_t (0));\n+\n+  ///\n+  /// Add whitespace word separator.  Multiple adjacent whitespace is fine.\n+  void Space ()\n+  {\n+    Append (Detail::S2C(u8\" \"));\n+  }\n+\n+public:\n+  /// Add a word as with Append, but prefixing whitespace to make a\n+  /// separate word\n+  void AppendWord (char const *str, bool maybe_quote = false,\n+\t\t   size_t len = ~size_t (0))\n+  {\n+    if (buffer.size () != lastBol)\n+      Space ();\n+    Append (str, maybe_quote, len);\n+  }\n+  /// Add a word as with AppendWord\n+  /// @param str the string to append\n+  /// @param maybe_quote string might need quoting, as for Append\n+  void AppendWord (std::string const &str, bool maybe_quote = false)\n+  {\n+    AppendWord (str.data (), maybe_quote, str.size ());\n+  }\n+  ///\n+  /// Add an integral value, prepending a space.\n+  void AppendInteger (unsigned u);\n+\n+private:\n+  /// Append a literal character.\n+  /// @param c character to append\n+  void Append (char c);\n+\n+public:\n+  /// Lex the next input line into a vector of words.\n+  /// @param words filled with a vector of lexed strings\n+  /// @result 0 if no errors, an errno value on lexxing error such as\n+  /// there being no next line (ENOENT), or malformed quoting (EINVAL)\n+  int Lex (std::vector<std::string> &words);\n+\n+public:\n+  /// Append the most-recently lexxed line to a string.  May be useful\n+  /// in error messages.  The unparsed line is appended -- before any\n+  /// unquoting.\n+  /// If we had c++17 string_view, we'd simply return a view of the\n+  /// line, and leave it to the caller to do any concatenation.\n+  /// @param l string to-which the lexxed line is appended.\n+  void LexedLine (std::string &l);\n+\n+public:\n+  /// Detect if we have reached the end of the input buffer.\n+  /// I.e. there are no more lines to Lex\n+  /// @result True if at end\n+  bool IsAtEnd () const\n+  {\n+    return lastBol == buffer.size ();\n+  }\n+\n+public:\n+  /// Read from end point into a read buffer, as with read(2).  This will\n+  /// not block , unless FD is blocking, and there is nothing\n+  /// immediately available.\n+  /// @param fd file descriptor to read from.  This may be a regular\n+  /// file, pipe or socket.\n+  /// @result on error returns errno.  If end of file occurs, returns\n+  /// -1.  At end of message returns 0.  If there is more needed\n+  /// returns EAGAIN (or possibly EINTR).  If the message is\n+  /// malformed, returns EINVAL.\n+  int Read (int fd) noexcept;\n+\n+public:\n+  /// Write to an end point from a write buffer, as with write(2).  As\n+  /// with Read, this will not usually block.\n+  /// @param fd file descriptor to write to.  This may be a regular\n+  /// file, pipe or socket.\n+  /// @result on error returns errno.\n+  /// At end of message returns 0.  If there is more to write\n+  /// returns EAGAIN (or possibly EINTR).\n+  int Write (int fd) noexcept;\n+};\n+\n+///\n+/// Request codes.  Perhaps this should be exposed?  These are likely\n+/// useful to servers that queue requests.\n+enum RequestCode\n+{\n+  RC_CONNECT,\n+  RC_MODULE_REPO,\n+  RC_MODULE_EXPORT,\n+  RC_MODULE_IMPORT,\n+  RC_MODULE_COMPILED,\n+  RC_INCLUDE_TRANSLATE,\n+  RC_HWM\n+};\n+\n+/// Internal file descriptor tuple.  It's used as an anonymous union member.\n+struct FD\n+{\n+  int from;\t///< Read from this FD\n+  int to;\t///< Write to this FD\n+};\n+\n+}\n+\n+// Flags for various requests\n+enum class Flags : unsigned\n+{\n+  None,\n+  NameOnly = 1<<0,  // Only querying for CMI names, not contents\n+};\n+\n+inline Flags operator& (Flags a, Flags b)\n+{\n+  return Flags (unsigned (a) & unsigned (b));\n+}\n+inline Flags operator| (Flags a, Flags b)\n+{\n+  return Flags (unsigned (a) | unsigned (b));\n+}\n+\n+///\n+/// Response data for a request.  Returned by Client's request calls,\n+/// which return a single Packet.  When the connection is Corked, the\n+/// Uncork call will return a vector of Packets.\n+class Packet\n+{\n+public:\n+  ///\n+  /// Packet is a variant structure.  These are the possible content types.\n+  enum Category { INTEGER, STRING, VECTOR};\n+\n+private:\n+  // std:variant is a C++17 thing, so we're doing this ourselves.\n+  union\n+  {\n+    size_t integer;\t///< Integral value\n+    std::string string; ///< String value\n+    std::vector<std::string> vector;  ///< Vector of string value\n+  };\n+  Category cat : 2;  ///< Discriminator\n+\n+private:\n+  unsigned short code = 0;  ///< Packet type\n+  unsigned short request = 0;\n+\n+public:\n+  Packet (unsigned c, size_t i = 0)\n+    : integer (i), cat (INTEGER), code (c)\n+  {\n+  }\n+  Packet (unsigned c, std::string &&s)\n+    : string (std::move (s)), cat (STRING), code (c)\n+  {\n+  }\n+  Packet (unsigned c, std::string const &s)\n+    : string (s), cat (STRING), code (c)\n+  {\n+  }\n+  Packet (unsigned c, std::vector<std::string> &&v)\n+    : vector (std::move (v)), cat (VECTOR), code (c)\n+  {\n+  }\n+  // No non-move constructor from a vector.  You should not be doing\n+  // that.\n+\n+  // Only move constructor and move assignment\n+  Packet (Packet &&t)\n+  {\n+    Create (std::move (t));\n+  }\n+  Packet &operator= (Packet &&t)\n+  {\n+    Destroy ();\n+    Create (std::move (t));\n+\n+    return *this;\n+  }\n+  ~Packet ()\n+  {\n+    Destroy ();\n+  }\n+\n+private:\n+  ///\n+  /// Variant move creation from another packet\n+  void Create (Packet &&t);\n+  ///\n+  /// Variant destruction\n+  void Destroy ();\n+\n+public:\n+  ///\n+  /// Return the packet type\n+  unsigned GetCode () const\n+  {\n+    return code;\n+  }\n+  ///\n+  /// Return the packet type\n+  unsigned GetRequest () const\n+  {\n+    return request;\n+  }\n+  void SetRequest (unsigned r)\n+  {\n+    request = r;\n+  }\n+  ///\n+  /// Return the category of the packet's payload\n+  Category GetCategory () const\n+  {\n+    return cat;\n+  }\n+\n+public:\n+  ///\n+  /// Return an integral payload.  Undefined if the category is not INTEGER\n+  size_t GetInteger () const\n+  {\n+    return integer;\n+  }\n+  ///\n+  /// Return (a reference to) a string payload.  Undefined if the\n+  /// category is not STRING\n+  std::string const &GetString () const\n+  {\n+    return string;\n+  }\n+  std::string &GetString ()\n+  {\n+    return string;\n+  }\n+  ///\n+  /// Return (a reference to) a constant vector of strings payload.\n+  /// Undefined if the category is not VECTOR\n+  std::vector<std::string> const &GetVector () const\n+  {\n+    return vector;\n+  }\n+  ///\n+  /// Return (a reference to) a non-conatant vector of strings payload.\n+  /// Undefined if the category is not VECTOR\n+  std::vector<std::string> &GetVector ()\n+  {\n+    return vector;\n+  }\n+};\n+\n+class Server;\n+\n+///\n+/// Client-side (compiler) object.\n+class Client\n+{\n+public:\n+  /// Response packet codes\n+  enum PacketCode\n+  {\n+    PC_CORKED,\t\t///< Messages are corked\n+    PC_CONNECT,\t\t///< Packet is integer version\n+    PC_ERROR,\t\t///< Packet is error string\n+    PC_OK,\n+    PC_BOOL,\n+    PC_PATHNAME\n+  };\n+\n+private:\n+  Detail::MessageBuffer write; ///< Outgoing write buffer\n+  Detail::MessageBuffer read;  ///< Incoming read buffer\n+  std::string corked; ///< Queued request tags\n+  union\n+  {\n+    Detail::FD fd;   ///< FDs connecting to server\n+    Server *server;  ///< Directly connected server\n+  };\n+  bool is_direct = false;  ///< Discriminator\n+  bool is_connected = false;  /// Connection handshake succesful\n+\n+private:\n+  Client ();\n+public:\n+  /// Direct connection constructor.\n+  /// @param s Server to directly connect\n+  Client (Server *s)\n+    : Client ()\n+  {\n+    is_direct = true;\n+    server = s;\n+  }\n+  /// Communication connection constructor\n+  /// @param from file descriptor to read from\n+  /// @param to file descriptor to write to, defaults to from\n+  Client (int from, int to = -1)\n+    : Client ()\n+  {\n+    fd.from = from;\n+    fd.to = to < 0 ? from : to;\n+  }\n+  ~Client ();\n+  // We have to provide our own move variants, because of the variant member.\n+  Client (Client &&);\n+  Client &operator= (Client &&);\n+\n+public:\n+  ///\n+  /// Direct connection predicate\n+  bool IsDirect () const\n+  {\n+    return is_direct;\n+  }\n+  ///\n+  /// Successful handshake predicate\n+  bool IsConnected () const\n+  {\n+    return is_connected;\n+  }\n+\n+public:\n+  ///\n+  /// Get the read FD\n+  /// @result the FD to read from, -1 if a direct connection\n+  int GetFDRead () const\n+  {\n+    return is_direct ? -1 : fd.from;\n+  }\n+  ///\n+  /// Get the write FD\n+  /// @result the FD to write to, -1 if a direct connection\n+  int GetFDWrite () const\n+  {\n+    return is_direct ? -1 : fd.to;\n+  }\n+  ///\n+  /// Get the directly-connected server\n+  /// @result the server, or nullptr if a communication connection\n+  Server *GetServer () const\n+  {\n+    return is_direct ? server : nullptr;\n+  }\n+\n+public:\n+  ///\n+  /// Perform connection handshake.  All othe requests will result in\n+  /// errors, until handshake is succesful.\n+  /// @param agent compiler identification\n+  /// @param ident compilation identifiation (maybe nullptr)\n+  /// @param alen length of agent string, if known\n+  /// @param ilen length of ident string, if known\n+  /// @result packet indicating success (or deferrment) of the\n+  /// connection, payload is optional flags\n+  Packet Connect (char const *agent, char const *ident,\n+\t\t size_t alen = ~size_t (0), size_t ilen = ~size_t (0));\n+  /// std::string wrapper for connection\n+  /// @param agent compiler identification\n+  /// @param ident compilation identification\n+  Packet Connect (std::string const &agent, std::string const &ident)\n+  {\n+    return Connect (agent.c_str (), ident.c_str (),\n+\t\t    agent.size (), ident.size ());\n+  }\n+\n+public:\n+  /// Request compiler module repository\n+  /// @result packet indicating repo\n+  Packet ModuleRepo ();\n+\n+public:\n+  /// Inform of compilation of a named module interface or partition,\n+  /// or a header unit\n+  /// @param str module or header-unit\n+  /// @param len name length, if known\n+  /// @result CMI name (or deferrment/error)\n+  Packet ModuleExport (char const *str, Flags flags, size_t len = ~size_t (0));\n+\n+  Packet ModuleExport (char const *str)\n+  {\n+    return ModuleExport (str, Flags::None, ~size_t (0));\n+  }\n+  Packet ModuleExport (std::string const &s, Flags flags = Flags::None)\n+  {\n+    return ModuleExport (s.c_str (), flags, s.size ());\n+  }\n+\n+public:\n+  /// Importation of a module, partition or header-unit\n+  /// @param str module or header-unit\n+  /// @param len name length, if known\n+  /// @result CMI name (or deferrment/error)\n+  Packet ModuleImport (char const *str, Flags flags, size_t len = ~size_t (0));\n+\n+  Packet ModuleImport (char const *str)\n+  {\n+    return ModuleImport (str, Flags::None, ~size_t (0));\n+  }\n+  Packet ModuleImport (std::string const &s, Flags flags = Flags::None)\n+  {\n+    return ModuleImport (s.c_str (), flags, s.size ());\n+  }\n+\n+public:\n+  /// Successful compilation of a module interface, partition or\n+  /// header-unit.  Must have been preceeded by a ModuleExport\n+  /// request.\n+  /// @param str module or header-unit\n+  /// @param len name length, if known\n+  /// @result  OK (or deferment/error)\n+  Packet ModuleCompiled (char const *str, Flags flags, size_t len = ~size_t (0));\n+\n+  Packet ModuleCompiled (char const *str)\n+  {\n+    return ModuleCompiled (str, Flags::None, ~size_t (0));\n+  }\n+  Packet ModuleCompiled (std::string const &s, Flags flags = Flags::None)\n+  {\n+    return ModuleCompiled (s.c_str (), flags, s.size ());\n+  }\n+\n+  /// Include translation query.\n+  /// @param str header unit name\n+  /// @param len name length, if known\n+  /// @result  Packet indicating include translation boolean, or CMI\n+  /// name (or deferment/error)\n+  Packet IncludeTranslate (char const *str, Flags flags,\n+\t\t\t   size_t len = ~size_t (0));\n+\n+  Packet IncludeTranslate (char const *str)\n+  {\n+    return IncludeTranslate (str, Flags::None, ~size_t (0));\n+  }\n+  Packet IncludeTranslate (std::string const &s, Flags flags = Flags::None)\n+  {\n+    return IncludeTranslate (s.c_str (), flags, s.size ());\n+  }\n+\n+public:\n+  /// Cork the connection.  All requests are queued up.  Each request\n+  /// call will return a PC_CORKED packet.\n+  void Cork ();\n+\n+  /// Uncork the connection.  All queued requests are sent to the\n+  /// server, and a block of responses waited for.\n+  /// @result A vector of packets, containing the in-order responses to the\n+  /// queued requests.\n+  std::vector<Packet> Uncork ();\n+  ///\n+  /// Indicate corkedness of connection\n+  bool IsCorked () const\n+  {\n+    return !corked.empty ();\n+  }\n+\n+private:\n+  Packet ProcessResponse (std::vector<std::string> &, unsigned code,\n+\t\t\t  bool isLast);\n+  Packet MaybeRequest (unsigned code);\n+  int CommunicateWithServer ();\n+};\n+\n+/// This server-side class is used to resolve requests from one or\n+/// more clients.  You are expected to derive from it and override the\n+/// virtual functions it provides.  The connection resolver may return\n+/// a different resolved object to service the remainder of the\n+/// connection -- for instance depending on the compiler that is\n+/// making the requests.\n+class Resolver\n+{\n+public:\n+  Resolver () = default;\n+  virtual ~Resolver ();\n+\n+protected:\n+  /// Mapping from a module or header-unit name to a CMI file name.\n+  /// @param module module name\n+  /// @result CMI name\n+  virtual std::string GetCMIName (std::string const &module);\n+\n+  /// Return the CMI file suffix to use\n+  /// @result CMI suffix, a statically allocated string\n+  virtual char const *GetCMISuffix ();\n+\n+public:\n+  /// When the requests of a directly-connected server are processed,\n+  /// we may want to wait for the requests to complete (for instance a\n+  /// set of subjobs).\n+  /// @param s directly connected server.\n+  virtual void WaitUntilReady (Server *s);\n+\n+public:\n+  /// Provide an error response.\n+  /// @param s the server to provide the response to.\n+  /// @param msg the error message\n+  virtual void ErrorResponse (Server *s, std::string &&msg);\n+\n+public:\n+  /// Connection handshake.  Provide response to server and return new\n+  /// (or current) resolver, or nullptr.\n+  /// @param s server to provide response to\n+  /// @param version the client's version number\n+  /// @param agent the client agent (compiler identification)\n+  /// @param ident the compilation identification (may be empty)\n+  /// @result nullptr in the case of an error.  An error response will\n+  /// be sent.  If handing off to another resolver, return that,\n+  /// otherwise this\n+  virtual Resolver *ConnectRequest (Server *s, unsigned version,\n+\t\t\t\t    std::string &agent, std::string &ident);\n+\n+public:\n+  // return 0 on ok, ERRNO on failure, -1 on unspecific error\n+  virtual int ModuleRepoRequest (Server *s);\n+\n+  virtual int ModuleExportRequest (Server *s, Flags flags,\n+\t\t\t\t   std::string &module);\n+  virtual int ModuleImportRequest (Server *s, Flags flags,\n+\t\t\t\t   std::string &module);\n+  virtual int ModuleCompiledRequest (Server *s, Flags flags,\n+\t\t\t\t     std::string &module);\n+  virtual int IncludeTranslateRequest (Server *s, Flags flags,\n+\t\t\t\t       std::string &include);\n+};\n+\n+\n+/// This server-side (build system) class handles a single connection\n+/// to a client.  It has 3 states, READING:accumulating a message\n+/// block froma client, WRITING:writing a message block to a client\n+/// and PROCESSING:resolving requests.  If the server does not spawn\n+/// jobs to build needed artifacts, the PROCESSING state will be brief.\n+class Server\n+{\n+public:\n+  enum Direction\n+  {\n+    READING,  // Server is waiting for completion of a (set of)\n+\t      // requests from client.  The next state will be PROCESSING.\n+    WRITING,  // Server is writing a (set of) responses to client.\n+\t      // The next state will be READING.\n+    PROCESSING  // Server is processing client request(s).  The next\n+\t\t// state will be WRITING.\n+  };\n+\n+private:\n+  Detail::MessageBuffer write;\n+  Detail::MessageBuffer read;\n+  Resolver *resolver;\n+  Detail::FD fd;\n+  bool is_connected = false;\n+  Direction direction : 2;\n+\n+public:\n+  Server (Resolver *r);\n+  Server (Resolver *r, int from, int to = -1)\n+    : Server (r)\n+  {\n+    fd.from = from;\n+    fd.to = to >= 0 ? to : from;\n+  }\n+  ~Server ();\n+  Server (Server &&);\n+  Server &operator= (Server &&);\n+\n+public:\n+  bool IsConnected () const\n+  {\n+    return is_connected;\n+  }\n+\n+public:\n+  void SetDirection (Direction d)\n+  {\n+    direction = d;\n+  }\n+\n+public:\n+  Direction GetDirection () const\n+  {\n+    return direction;\n+  }\n+  int GetFDRead () const\n+  {\n+    return fd.from;\n+  }\n+  int GetFDWrite () const\n+  {\n+    return fd.to;\n+  }\n+  Resolver *GetResolver () const\n+  {\n+    return resolver;\n+  }\n+\n+public:\n+  /// Process requests from a directly-connected client.  This is a\n+  /// small wrapper around ProcessRequests, with some buffer swapping\n+  /// for communication.  It is expected that such processessing is\n+  /// immediate.\n+  /// @param from message block from client\n+  /// @param to message block to client\n+  void DirectProcess (Detail::MessageBuffer &from, Detail::MessageBuffer &to);\n+\n+public:\n+  /// Process the messages queued in the read buffer.  We enter the\n+  /// PROCESSING state, and each message line causes various resolver\n+  /// methods to be called.  Once processed, the server may need to\n+  /// wait for all the requests to be ready, or it may be able to\n+  /// immediately write responses back.\n+  void ProcessRequests ();\n+\n+public:\n+  /// Accumulate an error response.\n+  /// @param error the error message to encode\n+  /// @param elen length of error, if known\n+  void ErrorResponse (char const *error, size_t elen = ~size_t (0));\n+  void ErrorResponse (std::string const &error)\n+  {\n+    ErrorResponse (error.data (), error.size ());\n+  }\n+\n+  /// Accumulate an OK response\n+  void OKResponse ();\n+\n+  /// Accumulate a boolean response\n+  void BoolResponse (bool);\n+\n+  /// Accumulate a pathname response\n+  /// @param path (may be nullptr, or empty)\n+  /// @param rlen length, if known\n+  void PathnameResponse (char const *path, size_t plen = ~size_t (0));\n+  void PathnameResponse (std::string const &path)\n+  {\n+    PathnameResponse (path.data (), path.size ());\n+  }\n+\n+public:\n+  /// Accumulate a (successful) connection response\n+  /// @param agent the server-side agent\n+  /// @param alen agent length, if known\n+  void ConnectResponse (char const *agent, size_t alen = ~size_t (0));\n+  void ConnectResponse (std::string const &agent)\n+  {\n+    ConnectResponse (agent.data (), agent.size ());\n+  }\n+\n+public:\n+  /// Write message block to client.  Semantics as for\n+  /// MessageBuffer::Write.\n+  /// @result errno or completion (0).\n+  int Write ()\n+  {\n+    return write.Write (fd.to);\n+  }\n+  /// Initialize for writing a message block.  All responses to the\n+  /// incomping message block must be complete  Enters WRITING state.\n+  void PrepareToWrite ()\n+  {\n+    write.PrepareToWrite ();\n+    direction = WRITING;\n+  }\n+\n+public:\n+  /// Read message block from client.  Semantics as for\n+  /// MessageBuffer::Read.\n+  /// @result errno, eof (-1) or completion (0)\n+  int Read ()\n+  {\n+    return read.Read (fd.from);\n+  }\n+  /// Initialize for reading a message block.  Enters READING state.\n+  void PrepareToRead ()\n+  {\n+    read.PrepareToRead ();\n+    direction = READING;\n+  }\n+};\n+\n+// Helper network stuff\n+\n+#if CODY_NETWORKING\n+// Socket with specific address\n+int OpenSocket (char const **, sockaddr const *sock, socklen_t len);\n+int ListenSocket (char const **, sockaddr const *sock, socklen_t len,\n+\t\t  unsigned backlog);\n+\n+// Local domain socket (eg AF_UNIX)\n+int OpenLocal (char const **, char const *name);\n+int ListenLocal (char const **, char const *name, unsigned backlog = 0);\n+\n+// ipv6 socket\n+int OpenInet6 (char const **e, char const *name, int port);\n+int ListenInet6 (char const **, char const *name, int port,\n+\t\t unsigned backlog = 0);\n+#endif\n+\n+// FIXME: Mapping file utilities?\n+\n+}\n+\n+#endif // CODY_HH"}, {"sha": "85425472a167066d83a8314b66de0ed6bcbbd8f6", "filename": "libcody/config.h.in", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2Fconfig.h.in?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -0,0 +1,29 @@\n+/* config.h.in.  Generated from configure.ac by autoheader.  */\n+\n+/* Bug reporting location */\n+#undef BUGURL\n+\n+/* Enable checking */\n+#undef NMS_CHECKING\n+\n+/* Define to the address where bug reports for this package should be sent. */\n+#undef PACKAGE_BUGREPORT\n+\n+/* Define to the full name of this package. */\n+#undef PACKAGE_NAME\n+\n+/* Define to the full name and version of this package. */\n+#undef PACKAGE_STRING\n+\n+/* Define to the one symbol short name of this package. */\n+#undef PACKAGE_TARNAME\n+\n+/* Define to the home page for this package. */\n+#undef PACKAGE_URL\n+\n+/* Define to the version of this package. */\n+#undef PACKAGE_VERSION\n+\n+#undef _FORTIFY_SOURCE\n+\n+#define _GNU_SOURCE 1"}, {"sha": "364195a9f0b06f7e9a1062ec17304b4777b3c643", "filename": "libcody/config.m4", "status": "added", "additions": 280, "deletions": 0, "changes": 280, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Fconfig.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Fconfig.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2Fconfig.m4?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -0,0 +1,280 @@\n+# Nathan's Common Config -*- mode:autoconf -*-\n+# Copyright (C) 2020 Nathan Sidwell, nathan@acm.org\n+# License: Apache v2.0\n+\n+AC_DEFUN([NMS_NOT_IN_SOURCE],\n+[if test -e configure ; then\n+AC_MSG_ERROR([Do not build in the source tree.  Reasons])\n+fi])\n+\n+# thanks to Zack Weinberg for fixing this!\n+AC_DEFUN([NMS_TOOLS],\n+[AC_SUBST([tools], [])\n+AC_ARG_WITH([tools],\n+  AS_HELP_STRING([--with-tools=DIR],[tool directory]),\n+  [AS_CASE([$withval],\n+    [yes], [AC_MSG_ERROR([--with-tools requires an argument])],\n+    [no], [:],\n+    [tools=\"${withval%/bin}\"])])\n+\n+if test -n \"$tools\" ; then\n+  if test -d \"$tools/bin\"; then\n+    PATH=\"$tools/bin:$PATH\"\n+    AC_MSG_NOTICE([Using tools in $tools])\n+  else\n+    AC_MSG_ERROR([tool location does not exist])\n+  fi\n+fi])\n+\n+AC_DEFUN([NMS_TOOL_DIRS],\n+[if test \"$tools\" && test -d \"$tools/include\" ; then\n+  CXX+=\" -I$tools/include\"\n+fi\n+if test \"$tools\" && test -d \"$tools/lib\" ; then\n+  toollib=\"$tools/lib\"\n+  if os=$(CXX -print-multi-os-directory 2>/dev/null) ; then\n+    toollib+=\"/${os}\"\n+  fi\n+  LDFLAGS+=\" -L $toollib\"\n+  unset toollib\n+fi])\n+\n+AC_DEFUN([NMS_NUM_CPUS],\n+[AC_MSG_CHECKING([number of CPUs])\n+AS_CASE([$build],\n+[*-*-darwin*], [NUM_CPUS=$(sysctl -n hw.ncpu 2>/dev/null)],\n+[NUM_CPUS=$(grep -c '^processor' /proc/cpuinfo 2>/dev/null)])\n+test \"$NUM_CPUS\" = 0 && NUM_CPUS=\n+AC_MSG_RESULT([${NUM_CPUS:-unknown}])\n+test \"$NUM_CPUS\" = 1 && NUM_CPUS=\n+AC_SUBST(NUM_CPUS)])\n+\n+AC_DEFUN([NMS_MAINTAINER_MODE],\n+[AC_ARG_ENABLE([maintainer-mode],\n+AS_HELP_STRING([--enable-maintainer-mode],\n+[enable maintainer mode.  Add rules to rebuild configurey bits]),,\n+[enable_maintainer_mode=no])\n+AS_CASE([$enable_maintainer_mode],\n+  [yes], [maintainer_mode=yes],\n+  [no], [maintainer=no],\n+  [AC_MSG_ERROR([unknown maintainer mode $enable_maintainer_mode])])\n+AC_MSG_CHECKING([maintainer-mode])\n+AC_MSG_RESULT([$maintainer_mode])\n+test \"$maintainer_mode\" = yes && MAINTAINER=yes\n+AC_SUBST(MAINTAINER)])\n+\n+AC_DEFUN([NMS_CXX_COMPILER],\n+[AC_ARG_WITH([compiler],\n+AS_HELP_STRING([--with-compiler=NAME],[which compiler to use]),\n+AC_MSG_CHECKING([C++ compiler])\n+if test \"$withval\" = \"yes\" ; then\n+  AC_MSG_ERROR([NAME not specified])\n+elif test \"$withval\" = \"no\" ; then\n+  AC_MSG_ERROR([Gonna need a C++ compiler!])\n+else\n+  CXX=\"${withval}\"\n+  AC_MSG_RESULT([$CXX])\n+fi)])\n+\n+AC_DEFUN([NMS_CXX_11],\n+[AC_MSG_CHECKING([whether $CXX is for C++11])\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([\n+[#if __cplusplus != 201103\n+#error \"C++11 is required\"\n+#endif\n+]])],\n+[AC_MSG_RESULT([yes])],\n+[CXX_ORIG=\"$CXX\"\n+CXX+=\" -std=c++11\"\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([\n+[#if __cplusplus != 201103\n+#error \"C++11 is required\"\n+#endif\n+]])],\n+AC_MSG_RESULT([adding -std=c++11]),\n+[CXX=\"$CXX_ORIG\"\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([\n+[#if __cplusplus > 201103\n+#error \"C++11 is required\"\n+#endif\n+]])],\n+AC_MSG_RESULT([> C++11]),\n+AC_MSG_RESULT([no])\n+AC_MSG_ERROR([C++11 is required])]))\n+unset CXX_ORIG])])\n+\n+AC_DEFUN([NMS_CXX_20],\n+[AC_MSG_CHECKING([whether $CXX is for C++20])\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([\n+[#if __cplusplus <= 201703\n+#error \"C++20 is required\"\n+#endif\n+]])],\n+[AC_MSG_RESULT([yes])],\n+[CXX+=\" -std=c++20\"\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([\n+[#if __cplusplus <= 201703\n+#error \"C++20 is required\"\n+#endif\n+]])],\n+AC_MSG_RESULT([adding -std=c++20]),\n+AC_MSG_RESULT([no])\n+AC_MSG_ERROR([C++20 is required])]))\n+\n+AC_MSG_CHECKING([whether C++20 support is sufficiently advanced])\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+#include <version>\n+// There doesn't seem to be a feature macro for __VA_OPT__ :(\n+#define VARIADIC(X,...) X __VA_OPT__((__VA_ARGS__))\n+#define X(Y,Z) 1\n+int ary[VARIADIC(X,Y,Z)];\n+#if  __cpp_constinit < 201907\n+#error \"C++20 constinit required\"\n+cpp_constinit is __cpp_constinit\n+#endif\n+#if  __cpp_if_constexpr < 201606\n+#error \"C++20 constexpr required\"\n+cpp_constexpr is __cpp_if_constexpr\n+#endif\n+#if  __cpp_concepts < 201907\n+#error \"C++20 concepts required\"\n+cpp_concepts is __cpp_concepts\n+#endif\n+#if __cpp_structured_bindings < 201606\n+#error \"C++20 structured bindings required\"\n+cpp_structured_bindings is __cpp_structured_bindings\n+#endif\n+#if __cpp_lib_int_pow2 < 202002\n+#error \"std::has_single_bit required\"\n+cpp_lib_int_pow2 is __cpp_lib_int_pow2\n+#endif\n+]])],\n+AC_MSG_RESULT([yes \ud83d\ude42]),\n+AC_MSG_RESULT([no \ud83d\ude41])\n+AC_MSG_ERROR([C++20 support is too immature]))])\n+\n+AC_DEFUN([NMS_ENABLE_EXCEPTIONS],\n+[AC_ARG_ENABLE([exceptions],\n+AS_HELP_STRING([--enable-exceptions],\n+[enable exceptions & rtti]),,\n+[enable_exceptions=\"no\"])\n+AS_CASE([$enable_exceptions],\n+  [yes], [nms_exceptions=yes],\n+  [no], [nms_exceptions=no],\n+  [AC_MSG_ERROR([unknown exceptions $enable_exceptions])])\n+AC_MSG_CHECKING([exceptions])\n+AC_MSG_RESULT([$nms_exceptions])\n+if test \"$nms_exceptions\" != no ; then\n+  EXCEPTIONS=yes\n+fi\n+AC_SUBST(EXCEPTIONS)])\n+\n+AC_DEFUN([NMS_LINK_OPT],\n+[AC_MSG_CHECKING([adding $1 to linker])\n+ORIG_LDFLAGS=\"$LDFLAGS\"\n+LDFLAGS+=\" $1\"\n+AC_LINK_IFELSE([AC_LANG_PROGRAM([])],\n+[AC_MSG_RESULT([ok])],\n+[LDFLAGS=\"$ORIG_LDFLAGS\"\n+AC_MSG_RESULT([no])])\n+unset ORIG_LDFLAGS])\n+\n+AC_DEFUN([NMS_BUGURL],\n+[AC_MSG_CHECKING([bugurl])\n+AC_ARG_WITH(bugurl,\n+AS_HELP_STRING([--with-bugurl=URL],[where to report bugs]),\n+AS_CASE([\"$withval\"],\n+  [yes], [AC_MSG_ERROR([--with-bugurl requires an argument])],\n+  [no], [BUGURL=\"\"],\n+  [BUGURL=\"${withval}\"]),\n+[BUGURL=\"${PACKAGE_BUGREPORT}\"])\n+AC_MSG_RESULT($BUGURL)\n+AC_DEFINE_UNQUOTED(BUGURL,\"$BUGURL\",[Bug reporting location])])\n+\n+AC_DEFUN([NMS_DISTRIBUTION],\n+[AC_ARG_ENABLE([distribution],\n+AS_HELP_STRING([--enable-distribution],\n+[enable distribution.  Inhibit components that prevent distribution]),,\n+[enable_distribution=\"no\"])\n+AS_CASE([$enable_distribution],\n+  [yes], [nms_distribution=yes],\n+  [no], [nms_distribution=no],\n+  [AC_MSG_ERROR([unknown distribution $enable_distribution])])\n+AC_MSG_CHECKING([distribution])\n+AC_MSG_RESULT([$nms_distribution])])\n+\n+AC_DEFUN([NMS_ENABLE_CHECKING],\n+[AC_ARG_ENABLE([checking],\n+AS_HELP_STRING([--enable-checking],\n+[enable run-time checking]),,\n+[enable_checking=\"yes\"])\n+AS_CASE([$enable_checking],\n+  [yes|all|yes,*], [nms_checking=yes],\n+  [no|none|release], [nms_checking=],\n+  [AC_MSG_ERROR([unknown check \"$enable_checking\"])])\n+AC_MSG_CHECKING([checking])\n+AC_MSG_RESULT([${nms_checking:-no}])\n+if test \"$nms_checking\" = yes ; then\n+  AC_DEFINE_UNQUOTED([NMS_CHECKING], [0${nms_checking:+1}], [Enable checking])\n+fi])\n+\n+AC_DEFUN([NMS_WITH_BINUTILS],\n+[AC_MSG_CHECKING([binutils])\n+AC_ARG_WITH(bfd,\n+AS_HELP_STRING([--with-bfd=DIR], [location of libbfd]),\n+if test \"$withval\" = \"yes\" ; then\n+  AC_MSG_ERROR([DIR not specified])\n+elif test \"$withval\" = \"no\" ; then\n+  AC_MSG_RESULT(installed)\n+else\n+  AC_MSG_RESULT(${withval})\n+  CPPFLAGS+=\" -I${withval}/include\"\n+  LDFLAGS+=\" -L${withval}/lib\"\n+fi,\n+AC_MSG_RESULT(installed))])\n+\n+AC_DEFUN([NMS_ENABLE_BACKTRACE],\n+[AC_REQUIRE([NMS_DISTRIBUTION])\n+AC_ARG_ENABLE([backtrace],\n+AS_HELP_STRING([--enable-backtrace],[provide backtrace on fatality.]),,\n+[enable_backtrace=\"maybe\"])\n+if test \"${enable_backtrace:-maybe}\" != no ; then\n+  AC_CHECK_HEADERS(execinfo.h)\n+  AC_CHECK_FUNCS(backtrace)\n+  if test \"$nms_distribution\" = no ; then\n+    AC_DEFINE([HAVE_DECL_BASENAME], [1], [Needed for demangle.h])\n+    # libiberty prevents distribution because of licensing\n+    AC_CHECK_HEADERS([demangle.h libiberty/demangle.h],[break])\n+    # libbfd prevents distribution because of licensing\n+    AC_CHECK_HEADERS([bfd.h])\n+    AC_SEARCH_LIBS([bfd_openr],[bfd],[LIBS+=\"-lz -liberty -ldl\"],,[-lz -liberty -ldl])\n+  fi\n+  if test \"$ac_cv_func_backtrace\" = yes ; then\n+    nms_backtrace=yes\n+    ldbacktrace=-rdynamic\n+    AC_DEFINE([NMS_BACKTRACE], [1], [Enable backtrace])\n+  elif test \"$enable_backtrace\" = yes ; then\n+    AC_MSG_ERROR([Backtrace unavailable])\n+  fi\n+  AC_SUBST([ldbacktrace])\n+fi\n+AC_MSG_CHECKING([backtrace])\n+AC_MSG_RESULT([${nms_backtrace:-no}])])\n+\n+AC_DEFUN([NMS_CONFIG_FILES],\n+[CONFIG_FILES=\"Makefile $1\"\n+SUBDIRS=\"$2\"\n+for generated in config.h.in configure ; do\n+  if test $srcdir/configure.ac -nt $srcdir/$generated ; then\n+    touch $srcdir/$generated\n+  fi\n+done\n+for dir in . $SUBDIRS\n+do\n+  CONFIG_FILES+=\" $dir/Makesub\"\n+  test -f ${srcdir}/$dir/tests/Makesub.in && CONFIG_FILES+=\" $dir/tests/Makesub\"\n+done\n+AC_CONFIG_FILES([$CONFIG_FILES])\n+AC_SUBST(configure_args,[$ac_configure_args])\n+AC_SUBST(SUBDIRS)\n+AC_SUBST(CONFIG_FILES)])"}, {"sha": "35fd4e9db7e50462d025f71ca6ecb7202fcf1e38", "filename": "libcody/configure", "status": "added", "additions": 4201, "deletions": 0, "changes": 4201, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2Fconfigure?ref=362303298ac4c1f93bda87535df2b726481d54bb"}, {"sha": "31f041e6679fabfd3752c8c55c275660a643a858", "filename": "libcody/configure.ac", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2Fconfigure.ac?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -0,0 +1,37 @@\n+# CODYlib  -*- mode:autoconf -*-\n+# Copyright (C) 2020 Nathan Sidwell, nathan@acm.org\n+# License: Apache v2.0\n+\n+AC_INIT([codylib],[0.0],[github.com/urnathan/libcody])\n+AC_CONFIG_SRCDIR(cody.hh)\n+m4_include(config.m4)\n+\n+AC_CONFIG_AUX_DIR(build-aux)\n+AC_SUBST(PACKAGE_VERSION)\n+\n+NMS_NOT_IN_SOURCE\n+AC_CANONICAL_HOST\n+\n+NMS_TOOLS\n+NMS_NUM_CPUS\n+NMS_MAINTAINER_MODE\n+NMS_CXX_COMPILER\n+AC_LANG(C++)\n+AC_PROG_CXX\n+NMS_CXX_11\n+NMS_TOOL_DIRS\n+NMS_LINK_OPT([-Wl,--no-undefined])\n+NMS_CONFIG_FILES([gdbinit dox.cfg])\n+\n+NMS_BUGURL\n+NMS_ENABLE_CHECKING\n+NMS_ENABLE_EXCEPTIONS\n+\n+AC_CONFIG_HEADERS([config.h])\n+AC_CHECK_TOOL([AR],[ar])\n+AC_CHECK_PROG([DOXYGEN],[doxygen],[doxygen],[: NOTdoxygen])\n+AC_CHECK_PROG([ALOY],[aloy],[aloy],[: Joust testsuite missing])\n+AH_VERBATIM([_GNU_SOURCE],[#define _GNU_SOURCE 1])\n+AH_VERBATIM([_FORTIFY_SOURCE],[#undef _FORTIFY_SOURCE])\n+\n+AC_OUTPUT"}, {"sha": "1a39b2aa6ee9a0d87eef8058bc256494a6d05eea", "filename": "libcody/dox.cfg.in", "status": "added", "additions": 2478, "deletions": 0, "changes": 2478, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Fdox.cfg.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Fdox.cfg.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2Fdox.cfg.in?ref=362303298ac4c1f93bda87535df2b726481d54bb"}, {"sha": "b35094e6b19a02d8d2f97c80d35b538fcd65af5e", "filename": "libcody/fatal.cc", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Ffatal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Ffatal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2Ffatal.cc?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -0,0 +1,78 @@\n+// CODYlib\t\t-*- mode:c++ -*-\n+// Copyright (C) 2019-2020 Nathan Sidwell, nathan@acm.org\n+// License: Apache v2.0\n+\n+// Cody\n+#include \"internal.hh\"\n+// C\n+#include <csignal>\n+#include <cstdint>\n+#include <cstdio>\n+#include <cstdlib>\n+#include <cstring>\n+\n+namespace Cody {\n+\n+#if NMS_CHECKING\n+void (AssertFailed) (Location loc) noexcept\n+{\n+  (HCF) (\"assertion failed\", loc);\n+}\n+void (Unreachable) (Location loc) noexcept\n+{\n+  (HCF) (\"unreachable reached\", loc);\n+}\n+#endif\n+\n+void (HCF) (char const *msg\n+#if NMS_CHECKING\n+\t  , Location const loc\n+#endif\n+\t  ) noexcept\n+{ // HCF - you goofed!\n+  __asm__ volatile (\"nop\");  // HCF - you goofed!\n+\n+#if !NMS_CHECKING\n+  constexpr Location loc (nullptr, 0);\n+#endif\n+\n+  fprintf (stderr, \"CODYlib: %s\", msg ? msg : \"internal error\");\n+  if (char const *file = loc.File ())\n+    {\n+      char const *src = SRCDIR;\n+\n+      if (src[0])\n+\t{\n+\t  size_t l = strlen (src);\n+\n+\t  if (!strncmp (src, file, l) && file[l] == '/')\n+\t    file += l + 1;\n+\t}\n+      fprintf (stderr, \" at %s:%u\", file, loc.Line ());\n+    }\n+  fprintf (stderr, \"\\n\");\n+  raise (SIGABRT);\n+  exit (2);\n+}\n+\n+void BuildNote (FILE *stream) noexcept\n+{\n+  fprintf (stream, \"Version %s.\\n\", PACKAGE_NAME \" \" PACKAGE_VERSION);\n+  fprintf (stream, \"Report bugs to %s.\\n\", BUGURL[0] ? BUGURL : \"you\");\n+  if (PACKAGE_URL[0])\n+    fprintf (stream, \"See %s for more information.\\n\", PACKAGE_URL);\n+  if (REVISION[0])\n+    fprintf (stream, \"Source %s.\\n\", REVISION);\n+\n+  fprintf (stream, \"Build is %s & %s.\\n\",\n+#if !NMS_CHECKING\n+\t   \"un\"\n+#endif\n+\t   \"checked\",\n+#if !__OPTIMIZE__\n+\t   \"un\"\n+#endif\n+\t   \"optimized\");\n+}\n+\n+}"}, {"sha": "b81b7d8398195f66b9de1d2a242828febf549030", "filename": "libcody/gdbinit.in", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Fgdbinit.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Fgdbinit.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2Fgdbinit.in?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -0,0 +1,11 @@\n+# CODYlib  -*- mode:autoconf -*-\n+# Copyright (C) 2020 Nathan Sidwell, nathan@acm.org\n+# License: Apache v2.0\n+\n+dir @srcdir@\n+# some default breakpoints, to catch the fatal exit\n+set breakpoint pending on\n+break HCF\n+set complaints 0\n+break exit\n+set breakpoint pending off"}, {"sha": "d744b564cda90f28de1af262beb5ea496047a1e0", "filename": "libcody/internal.hh", "status": "added", "additions": 125, "deletions": 0, "changes": 125, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Finternal.hh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Finternal.hh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2Finternal.hh?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -0,0 +1,125 @@\n+// CODYlib\t\t-*- mode:c++ -*-\n+// Copyright (C) 2020 Nathan Sidwell, nathan@acm.org\n+// License: Apache v2.0\n+\n+#include \"cody.hh\"\n+\n+// C++\n+#if __GNUC__ >= 10\n+#define CODY_LOC_BUILTIN 1\n+#elif !defined (__has_include)\n+#elif __has_include (<source_location>)\n+#include <source_location>\n+#define CODY_LOC_SOURCE 1\n+#endif\n+// C\n+#include <cstdio>\n+\n+namespace Cody {\n+\n+// Location is needed regardless of checking, to make the fatal\n+// handler simpler\n+class Location\n+{\n+protected:\n+  char const *file;\n+  unsigned line;\n+\n+public:\n+  constexpr Location (char const *file_\n+#if CODY_LOC_BUILTIN\n+\t\t      = __builtin_FILE ()\n+#elif !CODY_LOC_SOURCE\n+\t\t      = nullptr\n+#endif\n+\t\t      , unsigned line_\n+#if CODY_LOC_BUILTIN\n+\t\t      = __builtin_LINE ()\n+#elif !CODY_LOC_SOURCE\n+\t\t      = 0\n+#endif\n+\t\t      )\n+    :file (file_), line (line_)\n+  {\n+  }\n+\n+#if !CODY_LOC_BUILTIN && CODY_LOC_SOURCE\n+  constexpr Location (source_location loc = source_location::current ())\n+    : Location (loc.file (), loc.line ())\n+  {\n+  }\n+#endif\n+\n+public:\n+  constexpr char const *File () const\n+  {\n+    return file;\n+  }\n+  constexpr unsigned Line () const\n+  {\n+    return line;\n+  }\n+};\n+\n+void HCF [[noreturn]]\n+(\n+ char const *msg\n+#if NMS_CHECKING\n+ , Location const = Location ()\n+#if !CODY_LOC_BUILTIN && !CODY_LOC_SOURCE\n+#define HCF(M) HCF ((M), Cody::Location (__FILE__, __LINE__))\n+#endif\n+#endif\n+ ) noexcept;\n+\n+#if NMS_CHECKING\n+void AssertFailed [[noreturn]] (Location loc = Location ()) noexcept;\n+void Unreachable [[noreturn]] (Location loc = Location ()) noexcept;\n+#if !CODY_LOC_BUILTIN && !CODY_LOC_SOURCE\n+#define AssertFailed() AssertFailed (Cody::Location (__FILE__, __LINE__))\n+#define Unreachable() Unreachable (Cody::Location (__FILE__, __LINE__))\n+#endif\n+\n+// Do we have __VA_OPT__, alas no specific feature macro for it :(\n+// From stack overflow\n+// https://stackoverflow.com/questions/48045470/portably-detect-va-opt-support\n+// Relies on having variadic macros, but they're a C++11 thing, so\n+// we're good\n+#define HAVE_ARG_3(a,b,c,...) c\n+#define HAVE_VA_OPT_(...) HAVE_ARG_3(__VA_OPT__(,),true,false,)\n+#define HAVE_VA_OPT HAVE_VA_OPT_(?)\n+\n+// Oh, for lazily evaluated function parameters\n+#if HAVE_VA_OPT\n+// Assert is variadic, so you can write Assert (TPL<A,B>(C)) without\n+// extraneous parens.  I don't think we need that though.\n+#define Assert(EXPR, ...)\t\t\t\t\t\t\\\n+  (__builtin_expect (bool (EXPR __VA_OPT__ (, __VA_ARGS__)), true)\t\\\n+   ? (void)0 : AssertFailed ())\n+#else\n+// If you don't have the GNU ,##__VA_ARGS__ pasting extension, we'll\n+// need another fallback\n+#define Assert(EXPR, ...)\t\t\t\t\t\t\\\n+  (__builtin_expect (bool (EXPR, ##__VA_ARGS__), true)\t\t\t\\\n+   ? (void)0 : AssertFailed ())\n+#endif\n+#else\n+// Not asserting, use EXPR in an unevaluated context\n+#if  HAVE_VA_OPT\n+#define Assert(EXPR, ...)\t\t\t\t\t\\\n+  ((void)sizeof (bool (EXPR __VA_OPT__ (, __VA_ARGS__))), (void)0)\n+#else\n+#define Assert(EXPR, ...)\t\t\t\t\t\\\n+  ((void)sizeof (bool (EXPR, ##__VA_ARGS__)), (void)0)\n+#endif\n+\n+inline void Unreachable () noexcept\n+{\n+  __builtin_unreachable ();\n+}\n+#endif\n+\n+// FIXME: This should be user visible in some way\n+void BuildNote (FILE *stream) noexcept;\n+\n+}"}, {"sha": "8cccface71cad7835ec5db8ae54ed10e3d1d12bd", "filename": "libcody/netclient.cc", "status": "added", "additions": 140, "deletions": 0, "changes": 140, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Fnetclient.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Fnetclient.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2Fnetclient.cc?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -0,0 +1,140 @@\n+// CODYlib\t\t-*- mode:c++ -*-\n+// Copyright (C) 2020 Nathan Sidwell, nathan@acm.org\n+// License: Apache v2.0\n+\n+// Cody\n+#include \"internal.hh\"\n+\n+#if CODY_NETWORKING\n+// C\n+#include <cerrno>\n+#include <cstring>\n+// OS\n+#include <netdb.h>\n+#include <unistd.h>\n+#include <arpa/inet.h>\n+#include <sys/un.h>\n+\n+#ifndef AI_NUMERICSERV\n+#define AI_NUMERICSERV 0\n+#endif\n+\n+// Client-side networking helpers\n+\n+namespace Cody {\n+\n+int OpenSocket (char const **e, sockaddr const *addr, socklen_t len)\n+{\n+  char const *errstr = nullptr;\n+\n+  int fd = socket (addr->sa_family, SOCK_STREAM, 0);\n+  if (fd < 0)\n+    {\n+      errstr = \"creating socket\";\n+\n+    fail:;\n+      int err = errno;\n+      if (e)\n+\t*e = errstr;\n+      if (fd >= 0)\n+\tclose (fd);\n+      errno = err;\n+      return -1;\n+    }\n+\n+  if (connect (fd, addr, len) < 0)\n+    {\n+      errstr = \"connecting socket\";\n+      goto fail;\n+    }\n+\n+  return fd;\n+}\n+\n+int OpenLocal (char const **e, char const *name)\n+{\n+  sockaddr_un addr;\n+  size_t len = strlen (name);\n+\n+  if (len >= sizeof (addr.sun_path))\n+    {\n+      errno = ENAMETOOLONG;\n+      return -1;\n+    }\n+\n+  memset (&addr, 0, offsetof (sockaddr_un, sun_path));\n+  addr.sun_family = AF_UNIX;\n+  memcpy (addr.sun_path, name, len + 1);\n+  return OpenSocket (e, (sockaddr *)&addr, sizeof (addr));\n+}\n+\n+int OpenInet6 (char const **e, char const *name, int port)\n+{\n+  addrinfo *addrs = nullptr;\n+  int fd = -1;\n+  char const *errstr = nullptr;\n+\n+  fd = socket (AF_INET6, SOCK_STREAM, 0);\n+  if (fd < 0)\n+    {\n+      errstr = \"socket\";\n+\n+    fail:;\n+      int err = errno;\n+      if (e)\n+\t*e = errstr;\n+      if (fd >= 0)\n+\tclose (fd);\n+      if (addrs)\n+\tfreeaddrinfo (addrs);\n+      errno = err;\n+      return -1;\n+    }\n+\n+  addrinfo hints;\n+  hints.ai_flags = AI_NUMERICSERV;\n+  hints.ai_family = AF_INET6;\n+  hints.ai_socktype = SOCK_STREAM;\n+  hints.ai_protocol = 0;\n+  hints.ai_addrlen = 0;\n+  hints.ai_addr = nullptr;\n+  hints.ai_canonname = nullptr;\n+  hints.ai_next = nullptr;\n+\n+  /* getaddrinfo requires a port number, but is quite happy to accept\n+     invalid ones.  So don't rely on it.  */\n+  if (int err = getaddrinfo (name, \"0\", &hints, &addrs))\n+    {\n+      errstr = gai_strerror (err);\n+      // What's the best errno to set?\n+      errno = 0;\n+      goto fail;\n+    }\n+\n+  sockaddr_in6 addr;\n+  memset (&addr, 0, sizeof (addr));\n+  addr.sin6_family = AF_INET6;\n+\n+  for (struct addrinfo *next = addrs; next; next = next->ai_next)\n+    if (next->ai_family == AF_INET6\n+\t&& next->ai_socktype == SOCK_STREAM)\n+      {\n+\tsockaddr_in6 *in6 = (sockaddr_in6 *)next->ai_addr;\n+\tin6->sin6_port = htons (port);\n+\tif (ntohs (in6->sin6_port) != port)\n+\t  errno = EINVAL;\n+\telse if (!connect (fd, next->ai_addr, next->ai_addrlen))\n+\t  goto done;\n+      }\n+  errstr = \"connecting\";\n+  goto fail;\n+\n+ done:;\n+  freeaddrinfo (addrs);\n+\n+  return fd;\n+}\n+\n+}\n+\n+#endif"}, {"sha": "7e43eb033f47553c834af70de25e7bb6766d263a", "filename": "libcody/netserver.cc", "status": "added", "additions": 153, "deletions": 0, "changes": 153, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Fnetserver.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Fnetserver.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2Fnetserver.cc?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -0,0 +1,153 @@\n+// CODYlib\t\t-*- mode:c++ -*-\n+// Copyright (C) 2020 Nathan Sidwell, nathan@acm.org\n+// License: Apache v2.0\n+\n+// Cody\n+#include \"internal.hh\"\n+#if CODY_NETWORKING\n+// C\n+#include <cerrno>\n+#include <cstring>\n+// OS\n+#include <netdb.h>\n+#include <unistd.h>\n+#include <arpa/inet.h>\n+#include <sys/un.h>\n+\n+#ifndef AI_NUMERICSERV\n+#define AI_NUMERICSERV 0\n+#endif\n+\n+// Server-side networking helpers\n+\n+namespace Cody {\n+\n+int ListenSocket (char const **e, sockaddr const *addr, socklen_t len,\n+\t\t  unsigned backlog)\n+{\n+  char const *errstr = nullptr;\n+\n+  int fd = socket (addr->sa_family, SOCK_STREAM, 0);\n+  if (fd < 0)\n+    {\n+      errstr = \"creating socket\";\n+\n+    fail:;\n+      int err = errno;\n+      if (e)\n+\t*e = errstr;\n+      if (fd >= 0)\n+\tclose (fd);\n+      errno = err;\n+      return -1;\n+    }\n+\n+  if (bind (fd, addr, len) < 0)\n+    {\n+      errstr = \"binding socket\";\n+      goto fail;\n+    }\n+\n+  if (listen (fd, backlog ? backlog : 17) < 0)\n+    {\n+      errstr = \"listening socket\";\n+      goto fail;\n+    }\n+\n+  return fd;\n+}\n+\n+int ListenLocal (char const **e, char const *name, unsigned backlog)\n+{\n+  sockaddr_un addr;\n+  size_t len = strlen (name);\n+\n+  if (len >= sizeof (addr.sun_path))\n+    {\n+      errno = ENAMETOOLONG;\n+      return -1;\n+    }\n+\n+  memset (&addr, 0, offsetof (sockaddr_un, sun_path));\n+  addr.sun_family = AF_UNIX;\n+  memcpy (addr.sun_path, name, len + 1);\n+\n+  return ListenSocket (e, (sockaddr *)&addr, sizeof (addr), backlog);\n+}\n+\n+int ListenInet6 (char const **e, char const *name, int port, unsigned backlog)\n+{\n+  addrinfo *addrs = nullptr;\n+  int fd = -1;\n+  char const *errstr = nullptr;\n+\n+  fd = socket (AF_INET6, SOCK_STREAM, 0);\n+  if (fd < 0)\n+    {\n+      errstr = \"creating socket\";\n+\n+    fail:;\n+      int err = errno;\n+      if (e)\n+\t*e = errstr;\n+      if (fd >= 0)\n+\tclose (fd);\n+      if (addrs)\n+\tfreeaddrinfo (addrs);\n+      errno = err;\n+      return -1;\n+    }\n+\n+  addrinfo hints;\n+  hints.ai_flags = AI_NUMERICSERV;\n+  hints.ai_family = AF_INET6;\n+  hints.ai_socktype = SOCK_STREAM;\n+  hints.ai_protocol = 0;\n+  hints.ai_addrlen = 0;\n+  hints.ai_addr = nullptr;\n+  hints.ai_canonname = nullptr;\n+  hints.ai_next = nullptr;\n+\n+  /* getaddrinfo requires a port number, but is quite happy to accept\n+     invalid ones.  So don't rely on it.  */\n+  if (int err = getaddrinfo (name, \"0\", &hints, &addrs))\n+    {\n+      errstr = gai_strerror (err);\n+      // What's the best errno to set?\n+      errno = 0;\n+      goto fail;\n+    }\n+\n+  sockaddr_in6 addr;\n+  memset (&addr, 0, sizeof (addr));\n+  addr.sin6_family = AF_INET6;\n+\n+  for (struct addrinfo *next = addrs; next; next = next->ai_next)\n+    if (next->ai_family == AF_INET6\n+\t&& next->ai_socktype == SOCK_STREAM)\n+      {\n+\tsockaddr_in6 *in6 = (sockaddr_in6 *)next->ai_addr;\n+\tin6->sin6_port = htons (port);\n+\tif (ntohs (in6->sin6_port) != port)\n+\t  errno = EINVAL;\n+\telse if (!bind (fd, next->ai_addr, next->ai_addrlen))\n+\t  goto listen;\n+      }\n+\n+  errstr = \"binding socket\";\n+  goto fail;\n+\n+ listen:;\n+  freeaddrinfo (addrs);\n+\n+  if (listen (fd, backlog ? backlog : 17) < 0)\n+    {\n+      errstr = \"listening socket\";\n+      goto fail;\n+    }\n+\n+  return fd;\n+}\n+\n+}\n+#endif"}, {"sha": "65dc8f4315547bc5f43226dfe675d0428f7c0f60", "filename": "libcody/packet.cc", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Fpacket.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Fpacket.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2Fpacket.cc?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -0,0 +1,50 @@\n+// CODYlib\t\t-*- mode:c++ -*-\n+// Copyright (C) 2020 Nathan Sidwell, nathan@acm.org\n+// License: Apache v2.0\n+\n+// Cody\n+#include \"internal.hh\"\n+\n+namespace Cody {\n+\n+void Packet::Destroy ()\n+{\n+  switch (cat)\n+    {\n+    case STRING:\n+      // Silly scope destructor name rules\n+      using S = std::string;\n+      string.~S ();\n+      break;\n+\n+    case VECTOR:\n+      using V = std::vector<std::string>;\n+      vector.~V ();\n+      break;\n+\n+    default:;\n+    }\n+}\n+\n+void Packet::Create (Packet &&t)\n+{\n+  cat = t.cat;\n+  code = t.code;\n+  request = t.request;\n+  switch (cat)\n+    {\n+    case STRING:\n+      new (&string) std::string (std::move (t.string));\n+      break;\n+\n+    case VECTOR:\n+      new (&vector) std::vector<std::string> (std::move (t.vector));\n+      break;\n+\n+    default:\n+      integer = t.integer;\n+      break;\n+    }\n+}\n+\n+}"}, {"sha": "b83880f341ee853bf3f97eb86c910ba83e75b438", "filename": "libcody/resolver.cc", "status": "added", "additions": 209, "deletions": 0, "changes": 209, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Fresolver.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Fresolver.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2Fresolver.cc?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -0,0 +1,209 @@\n+// CODYlib\t\t-*- mode:c++ -*-\n+// Copyright (C) 2020 Nathan Sidwell, nathan@acm.org\n+// License: Apache v2.0\n+\n+// Cody\n+#include \"internal.hh\"\n+// OS\n+#include <fcntl.h>\n+#include <unistd.h>\n+#include <sys/stat.h>\n+#include <sys/types.h>\n+\n+#if (defined (__unix__)\t\t\t\t\t\t\t\\\n+     || (defined (__Apple__)\t\t\t\t\t\t\\\n+\t && defined (__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__) \t\\\n+\t && __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ >= 101000))\n+// Autoconf test?\n+#define HAVE_FSTATAT 1\n+#else\n+#define HAVE_FSTATAT 0\n+#endif\n+\n+// Resolver code\n+\n+#if __windows__\n+inline bool IsDirSep (char c)\n+{\n+  return c == '/' || c == '\\\\';\n+}\n+inline bool IsAbsPath (char const *str)\n+{\n+  // IIRC windows has the concept of per-drive current directories,\n+  // which make drive-using paths confusing.  Let's not get into that.\n+  return IsDirSep (str)\n+    || (((str[0] >= 'A' && str[1] <= 'Z')\n+\t || (str[0] >= 'a' && str[1] <= 'z'))&& str[1] == ':');\n+}\n+#else\n+inline bool IsDirSep (char c)\n+{\n+  return c == '/';\n+}\n+inline bool IsAbsPath (char const *str)\n+{\n+  return IsDirSep (str[0]);\n+}\n+#endif\n+\n+constexpr char DIR_SEPARATOR = '/';\n+\n+constexpr char DOT_REPLACE = ','; // Replace . directories\n+constexpr char COLON_REPLACE = '-'; // Replace : (partition char)\n+constexpr char const REPO_DIR[] = \"cmi.cache\";\n+\n+namespace Cody {\n+\n+Resolver::~Resolver ()\n+{\n+}\n+\n+char const *Resolver::GetCMISuffix ()\n+{\n+  return \"cmi\";\n+}\n+\n+std::string Resolver::GetCMIName (std::string const &module)\n+{\n+  std::string result;\n+\n+  result.reserve (module.size () + 8);\n+  bool is_header = false;\n+  bool is_abs = false;\n+\n+  if (IsAbsPath (module.c_str ()))\n+    is_header = is_abs = true;\n+  else if (module.front () == '.' && IsDirSep (module.c_str ()[1]))\n+    is_header = true;\n+\n+  if (is_abs)\n+    {\n+      result.push_back ('.');\n+      result.append (module);\n+    }\n+  else\n+    result = std::move (module);\n+\n+  if (is_header)\n+    {\n+      if (!is_abs)\n+\tresult[0] = DOT_REPLACE;\n+\n+      /* Map .. to DOT_REPLACE, DOT_REPLACE.  */\n+      for (size_t ix = 1; ; ix++)\n+\t{\n+\t  ix = result.find ('.', ix);\n+\t  if (ix == result.npos)\n+\t    break;\n+\t  if (ix + 2 > result.size ())\n+\t    break;\n+\t  if (result[ix + 1] != '.')\n+\t    continue;\n+\t  if (!IsDirSep (result[ix - 1]))\n+\t    continue;\n+\t  if (!IsDirSep (result[ix + 2]))\n+\t    continue;\n+\t  result[ix] = DOT_REPLACE;\n+\t  result[ix + 1] = DOT_REPLACE;\n+\t}\n+    }\n+  else if (COLON_REPLACE != ':')\n+    {\n+      // There can only be one colon in a module name\n+      auto colon = result.find (':');\n+      if (colon != result.npos)\n+\tresult[colon] = COLON_REPLACE;\n+    }\n+\n+  if (char const *suffix = GetCMISuffix ())\n+    {\n+      result.push_back ('.');\n+      result.append (suffix);\n+    }\n+\n+  return result;\n+}\n+\n+void Resolver::WaitUntilReady (Server *)\n+{\n+}\n+\n+Resolver *Resolver::ConnectRequest (Server *s, unsigned version,\n+\t\t\t       std::string &, std::string &)\n+{\n+  if (version > Version)\n+    s->ErrorResponse (\"version mismatch\");\n+  else\n+    s->ConnectResponse (\"default\");\n+\n+  return this;\n+}\n+\n+int Resolver::ModuleRepoRequest (Server *s)\n+{\n+  s->PathnameResponse (REPO_DIR);\n+  return 0;\n+}\n+\n+// Deprecated resolver functions\n+int Resolver::ModuleExportRequest (Server *s, Flags, std::string &module)\n+{\n+  auto cmi = GetCMIName (module);\n+  s->PathnameResponse (cmi);\n+  return 0;\n+}\n+\n+int Resolver::ModuleImportRequest (Server *s, Flags, std::string &module)\n+{\n+  auto cmi = GetCMIName (module);\n+  s->PathnameResponse (cmi);\n+  return 0;\n+}\n+\n+int Resolver::ModuleCompiledRequest (Server *s, Flags, std::string &)\n+{\n+  s->OKResponse ();\n+  return 0;\n+}\n+\n+int Resolver::IncludeTranslateRequest (Server *s, Flags, std::string &include)\n+{\n+  bool xlate = false;\n+\n+  // This is not the most efficient\n+  auto cmi = GetCMIName (include);\n+  struct stat statbuf;\n+\n+#if HAVE_FSTATAT\n+  int fd_dir = open (REPO_DIR, O_RDONLY | O_CLOEXEC | O_DIRECTORY);\n+  if (fd_dir >= 0\n+      && fstatat (fd_dir, cmi.c_str (), &statbuf, 0) == 0\n+      && S_ISREG (statbuf.st_mode))\n+    // Sadly can't easily check if this process has read access,\n+    // except by trying to open it.\n+    xlate = true;\n+  if (fd_dir >= 0)\n+    close (fd_dir);\n+#else\n+  std::string append = REPO_DIR;\n+  append.push_back (DIR_SEPARATOR);\n+  append.append (cmi);\n+  if (stat (append.c_str (), &statbuf) == 0\n+      || S_ISREG (statbuf.st_mode))\n+    xlate = true;\n+#endif\n+\n+  if (xlate)\n+    s->PathnameResponse (cmi);\n+  else\n+    s->BoolResponse (false);\n+\n+  return 0;\n+}\n+\n+void Resolver::ErrorResponse (Server *server, std::string &&msg)\n+{\n+  server->ErrorResponse (msg);\n+}\n+\n+}"}, {"sha": "b9ceec48a68559db1febc2b9373281b0802a8015", "filename": "libcody/server.cc", "status": "added", "additions": 306, "deletions": 0, "changes": 306, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Fserver.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Fserver.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2Fserver.cc?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -0,0 +1,306 @@\n+// CODYlib\t\t-*- mode:c++ -*-\n+// Copyright (C) 2020 Nathan Sidwell, nathan@acm.org\n+// License: Apache v2.0\n+\n+// Cody\n+#include \"internal.hh\"\n+// C++\n+#include <tuple>\n+// C\n+#include <cerrno>\n+#include <cstring>\n+\n+// Server code\n+\n+namespace Cody {\n+\n+// These do not need to be members\n+static Resolver *ConnectRequest (Server *, Resolver *,\n+\t\t\t\t std::vector<std::string> &words);\n+static int ModuleRepoRequest (Server *, Resolver *,\n+\t\t\t      std::vector<std::string> &words);\n+static int ModuleExportRequest (Server *, Resolver *,\n+\t\t\t\tstd::vector<std::string> &words);\n+static int ModuleImportRequest (Server *, Resolver *,\n+\t\t\t\tstd::vector<std::string> &words);\n+static int ModuleCompiledRequest (Server *, Resolver *,\n+\t\t\t\t  std::vector<std::string> &words);\n+static int IncludeTranslateRequest (Server *, Resolver *,\n+\t\t\t\t     std::vector<std::string> &words);\n+\n+namespace {\n+using RequestFn = int (Server *, Resolver *, std::vector<std::string> &);\n+using RequestPair = std::tuple<char const *, RequestFn *>;\n+static RequestPair\n+  const requestTable[Detail::RC_HWM] =\n+  {\n+    // Same order as enum RequestCode\n+    RequestPair {u8\"HELLO\", nullptr},\n+    RequestPair {u8\"MODULE-REPO\", ModuleRepoRequest},\n+    RequestPair {u8\"MODULE-EXPORT\", ModuleExportRequest},\n+    RequestPair {u8\"MODULE-IMPORT\", ModuleImportRequest},\n+    RequestPair {u8\"MODULE-COMPILED\", ModuleCompiledRequest},\n+    RequestPair {u8\"INCLUDE-TRANSLATE\", IncludeTranslateRequest},\n+  };\n+}\n+\n+Server::Server (Resolver *r)\n+  : resolver (r), direction (READING)\n+{\n+  PrepareToRead ();\n+}\n+\n+Server::Server (Server &&src)\n+  : write (std::move (src.write)),\n+    read (std::move (src.read)),\n+    resolver (src.resolver),\n+    is_connected (src.is_connected),\n+    direction (src.direction)\n+{\n+  fd.from = src.fd.from;\n+  fd.to = src.fd.to;\n+}\n+\n+Server::~Server ()\n+{\n+}\n+\n+Server &Server::operator= (Server &&src)\n+{\n+  write = std::move (src.write);\n+  read = std::move (src.read);\n+  resolver = src.resolver;\n+  is_connected = src.is_connected;\n+  direction = src.direction;\n+  fd.from = src.fd.from;\n+  fd.to = src.fd.to;\n+\n+  return *this;\n+}\n+\n+void Server::DirectProcess (Detail::MessageBuffer &from,\n+\t\t\t    Detail::MessageBuffer &to)\n+{\n+  read.PrepareToRead ();\n+  std::swap (read, from);\n+  ProcessRequests ();\n+  resolver->WaitUntilReady (this);\n+  write.PrepareToWrite ();\n+  std::swap (to, write);\n+}\n+\n+void Server::ProcessRequests (void)\n+{\n+  std::vector<std::string> words;\n+\n+  direction = PROCESSING;\n+  while (!read.IsAtEnd ())\n+    {\n+      int err = 0;\n+      unsigned ix = Detail::RC_HWM;\n+      if (!read.Lex (words))\n+\t{\n+\t  Assert (!words.empty ());\n+\t  while (ix--)\n+\t    {\n+\t      if (words[0] != std::get<0> (requestTable[ix]))\n+\t\tcontinue; // not this one\n+\n+\t      if (ix == Detail::RC_CONNECT)\n+\t\t{\n+\t\t  // CONNECT\n+\t\t  if (IsConnected ())\n+\t\t    err = -1;\n+\t\t  else if (auto *r = ConnectRequest (this, resolver, words))\n+\t\t    resolver = r;\n+\t\t  else\n+\t\t    err = -1;\n+\t\t}\n+\t      else\n+\t\t{\n+\t\t  if (!IsConnected ())\n+\t\t    err = -1;\n+\t\t  else if (int res = (std::get<1> (requestTable[ix])\n+\t\t\t\t      (this, resolver, words)))\n+\t\t    err = res;\n+\t\t}\n+\t      break;\n+\t    }\n+\t}\n+\n+      if (err || ix >= Detail::RC_HWM)\n+\t{\n+\t  // Some kind of error\n+\t  std::string msg;\n+\n+\t  if (err > 0)\n+\t    msg = u8\"error processing '\";\n+\t  else if (ix >= Detail::RC_HWM)\n+\t    msg = u8\"unrecognized '\";\n+\t  else if (IsConnected () && ix == Detail::RC_CONNECT)\n+\t    msg = u8\"already connected '\";\n+\t  else if (!IsConnected () && ix != Detail::RC_CONNECT)\n+\t    msg = u8\"not connected '\";\n+\t  else\n+\t    msg = u8\"malformed '\";\n+\n+\t  read.LexedLine (msg);\n+\t  msg.append (u8\"'\");\n+\t  if (err > 0)\n+\t    {\n+\t      msg.append (u8\" \");\n+\t      msg.append (strerror (err));\n+\t    }\n+\t  resolver->ErrorResponse (this, std::move (msg));\n+\t}\n+    }\n+}\n+\n+// Return numeric value of STR as an unsigned.  Returns ~0u on error\n+// (so that value is not representable).\n+static unsigned ParseUnsigned (std::string &str)\n+{\n+  char *eptr;\n+  unsigned long val = strtoul (str.c_str (), &eptr, 10);\n+  if (*eptr || unsigned (val) != val)\n+    return ~0u;\n+\n+  return unsigned (val);\n+}\n+\n+Resolver *ConnectRequest (Server *s, Resolver *r,\n+\t\t\t  std::vector<std::string> &words)\n+{\n+  if (words.size () < 3 || words.size () > 4)\n+    return nullptr;\n+\n+  if (words.size () == 3)\n+    words.emplace_back (u8\"\");\n+  unsigned version = ParseUnsigned (words[1]);\n+  if (version == ~0u)\n+    return nullptr;\n+\n+  return r->ConnectRequest (s, version, words[2], words[3]);\n+}\n+\n+int ModuleRepoRequest (Server *s, Resolver *r,std::vector<std::string> &words)\n+{\n+  if (words.size () != 1)\n+    return -1;\n+\n+  return r->ModuleRepoRequest (s);\n+}\n+\n+int ModuleExportRequest (Server *s, Resolver *r, std::vector<std::string> &words)\n+{\n+  if (words.size () < 2 || words.size () > 3 || words[1].empty ())\n+    return -1;\n+\n+  Flags flags = Flags::None;\n+  if (words.size () == 3)\n+    {\n+      unsigned val = ParseUnsigned (words[2]);\n+      if (val == ~0u)\n+\treturn -1;\n+      flags = Flags (val);\n+    }\n+\n+  return r->ModuleExportRequest (s, flags, words[1]);\n+}\n+\n+int ModuleImportRequest (Server *s, Resolver *r, std::vector<std::string> &words)\n+{\n+  if (words.size () < 2 || words.size () > 3 || words[1].empty ())\n+    return -1;\n+\n+  Flags flags = Flags::None;\n+  if (words.size () == 3)\n+    {\n+      unsigned val = ParseUnsigned (words[2]);\n+      if (val == ~0u)\n+\treturn -1;\n+      flags = Flags (val);\n+    }\n+\n+  return r->ModuleImportRequest (s, flags, words[1]);\n+}\n+\n+int ModuleCompiledRequest (Server *s, Resolver *r,\n+\t\t\t   std::vector<std::string> &words)\n+{\n+  if (words.size () < 2 || words.size () > 3 || words[1].empty ())\n+    return -1;\n+\n+  Flags flags = Flags::None;\n+  if (words.size () == 3)\n+    {\n+      unsigned val = ParseUnsigned (words[2]);\n+      if (val == ~0u)\n+\treturn -1;\n+      flags = Flags (val);\n+    }\n+\n+  return r->ModuleCompiledRequest (s, flags, words[1]);\n+}\n+\n+int IncludeTranslateRequest (Server *s, Resolver *r,\n+\t\t\t     std::vector<std::string> &words)\n+{\n+  if (words.size () < 2 || words.size () > 3 || words[1].empty ())\n+    return -1;\n+\n+  Flags flags = Flags::None;\n+  if (words.size () == 3)\n+    {\n+      unsigned val = ParseUnsigned (words[2]);\n+      if (val == ~0u)\n+\treturn -1;\n+      flags = Flags (val);\n+    }\n+\n+  return r->IncludeTranslateRequest (s, flags, words[1]);\n+}\n+\n+void Server::ErrorResponse (char const *error, size_t elen)\n+{\n+  write.BeginLine ();\n+  write.AppendWord (u8\"ERROR\");\n+  write.AppendWord (error, true, elen);\n+  write.EndLine ();\n+}\n+\n+void Server::OKResponse ()\n+{\n+  write.BeginLine ();\n+  write.AppendWord (u8\"OK\");\n+  write.EndLine ();\n+}\n+\n+void Server::ConnectResponse (char const *agent, size_t alen)\n+{\n+  is_connected = true;\n+\n+  write.BeginLine ();\n+  write.AppendWord (u8\"HELLO\");\n+  write.AppendInteger (Version);\n+  write.AppendWord (agent, true, alen);\n+  write.EndLine ();\n+}\n+\n+void Server::PathnameResponse (char const *cmi, size_t clen)\n+{\n+  write.BeginLine ();\n+  write.AppendWord (u8\"PATHNAME\");\n+  write.AppendWord (cmi, true, clen);\n+  write.EndLine ();\n+}\n+\n+void Server::BoolResponse (bool truthiness)\n+{\n+  write.BeginLine ();\n+  write.AppendWord (u8\"BOOL\");\n+  write.AppendWord (truthiness ? u8\"TRUE\" : u8\"FALSE\");\n+  write.EndLine ();\n+}\n+\n+}"}, {"sha": "85277c844afad3775d279241df2c96f7687978a7", "filename": "libcody/tests/01-serialize/connect.cc", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Ftests%2F01-serialize%2Fconnect.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Ftests%2F01-serialize%2Fconnect.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2Ftests%2F01-serialize%2Fconnect.cc?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -0,0 +1,30 @@\n+\n+// Test client connection handshake\n+// RUN: <<HELLO 1 TESTING\n+// RUN: $subdir$stem | ezio -p OUT $test |& ezio -p ERR $test\n+// RUN-END:\n+\n+// OUT-NEXT:^HELLO {:[0-9]+} TEST IDENT$\n+// OUT-NEXT:$EOF\n+\n+// ERR-NEXT:Code:{:[0-9]+}$\n+// ERR-NEXT:Version:1$\n+// ERR-NEXT:$EOF\n+\n+\n+// Cody\n+#include \"cody.hh\"\n+// C++\n+#include <iostream>\n+\n+using namespace Cody;\n+\n+int main (int, char *[])\n+{\n+  Client client (0, 1);\n+\n+  auto token = client.Connect (\"TEST\", \"IDENT\");\n+\n+  std::cerr << \"Code:\" << token.GetCode () << '\\n';\n+  std::cerr << \"Version:\" << token.GetInteger () << '\\n';\n+}"}, {"sha": "a3495d145daed2d491e49adda3b19b0a5f138e09", "filename": "libcody/tests/01-serialize/decoder.cc", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Ftests%2F01-serialize%2Fdecoder.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Ftests%2F01-serialize%2Fdecoder.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2Ftests%2F01-serialize%2Fdecoder.cc?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -0,0 +1,73 @@\n+// CODYlib\t\t-*- mode:c++ -*-\n+// Copyright (C) 2020 Nathan Sidwell, nathan@acm.org\n+// License: Apache v2.0\n+\n+// RUN: <<bob 'frob dob''\\nF\\_b\\20\\61\\\\'\n+// RUN: $subdir$stem |& ezio $test\n+// CHECK-NEXT: ^line:0 word:0 'bob'\n+// CHECK-NEXT: ^line:0 word:1 'frob dob$\n+// CHECK-OPTION: matchSpace\n+// CHECK-NEXT: ^F b a\\'$\n+// CHECK-NEXT: $EOF\n+\n+/* RUN: <<line-1 word:1 ;\n+   RUN: <<'line 2' ;\n+   RUN: <<\n+*/\n+// RUN: $subdir$stem |& ezio -p CHECK2 $test\n+// CHECK2-NEXT: line:0 word:0 'line-1'\n+// CHECK2-NEXT: line:0 word:1 'word:1'\n+// CHECK2-NEXT: line:1 word:0 'line 2'\n+// CHECK2-NEXT: error:No \n+// CHECK2-NEXT: $EOF\n+\n+// RUN: <<'\n+// RUN: $subdir$stem |& ezio -p CHECK3 $test\n+// CHECK3-NEXT: error:Invalid argument\n+// CHECK3-NEXT: line:0 word:0 '''\n+// CHECK3-NEXT: $EOF\n+\n+/* RUN: << ;\n+   RUN: <<'\\g'\n+*/\n+// RUN: $subdir$stem |& ezio -p CHECK4 $test\n+// CHECK4-NEXT: error:No \n+// CHECK4-NEXT: error:Invalid argument\n+// CHECK4-NEXT: line:1 word:0 ''\\g''\n+// CHECK4-NEXT: $EOF\n+\n+// RUN-END:\n+\n+// Cody\n+#include \"cody.hh\"\n+// C++\n+#include <iostream>\n+// C\n+#include <cstring>\n+\n+using namespace Cody;\n+\n+int main (int, char *[])\n+{\n+  Detail::MessageBuffer reader;\n+\n+  reader.PrepareToRead ();\n+  while (int e = reader.Read (0))\n+    if (e != EAGAIN && e != EINTR)\n+      break;\n+\n+  std::vector<std::string> words;\n+  for (unsigned line = 0; !reader.IsAtEnd (); line++)\n+    {\n+      if (int e = reader.Lex (words))\n+\tstd::cerr << \"error:\" << strerror (e) << '\\n';\n+      for (unsigned ix = 0; ix != words.size (); ix++)\n+\t{\n+\t  auto &word = words[ix];\n+\n+\t  std::cerr << \"line:\" << line << \" word:\" << ix\n+\t\t    << \" '\" << word << \"'\\n\";\n+\t}\n+    }\n+  return 0;\n+}"}, {"sha": "c4cab6c630ffb5ea3fd58c246cd12606b2e9140b", "filename": "libcody/tests/01-serialize/encoder.cc", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Ftests%2F01-serialize%2Fencoder.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Ftests%2F01-serialize%2Fencoder.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2Ftests%2F01-serialize%2Fencoder.cc?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -0,0 +1,48 @@\n+// CODYlib\t\t-*- mode:c++ -*-\n+// Copyright (C) 2020 Nathan Sidwell, nathan@acm.org\n+// License: Apache v2.0\n+\n+// Test message encoding, both string quoting and continuation lines\n+\n+// RUN: $subdir$stem |& ezio $test\n+// RUN-END:\n+// The \u00af is utf8-encoded as c2 af\n+// CHECK-NEXT: ^bob 'frob dob''\\n\u00af\\\\'$\n+// CHECK-NEXT: ^2 ;$\n+// CHECK-NEXT: ^3$\n+// CHECK-NEXT: $EOF\n+\n+// Cody\n+#include \"cody.hh\"\n+\n+using namespace Cody;\n+\n+int main (int, char *[])\n+{\n+  Detail::MessageBuffer writer;\n+\n+  writer.BeginLine ();\n+  writer.AppendWord (\"bob\");\n+  writer.AppendWord (\"frob dob\", true);\n+  writer.Append (\"\\n\\xc2\\xaf\\\\\", true);\n+  writer.EndLine ();\n+\n+  writer.PrepareToWrite ();\n+  while (int err = writer.Write (2))\n+    if (err != EAGAIN && err != EINTR)\n+      break;\n+\n+  writer.BeginLine ();\n+  writer.Append (\"2\", true);\n+  writer.EndLine ();\n+  writer.BeginLine ();\n+  writer.Append (\"3\", true);\n+  writer.EndLine ();\n+\n+  writer.PrepareToWrite ();\n+  while (int err = writer.Write (2))\n+    if (err != EAGAIN && err != EINTR)\n+      break;\n+\n+  return 0;\n+}"}, {"sha": "edff0ab4732698765295aa5f4a123b0c1087b343", "filename": "libcody/tests/02-comms/client-1.cc", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Ftests%2F02-comms%2Fclient-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Ftests%2F02-comms%2Fclient-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2Ftests%2F02-comms%2Fclient-1.cc?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -0,0 +1,97 @@\n+\n+// Test client message round tripping\n+/*\n+  RUN: <<HELLO 1 TESTING ;\n+  RUN: <<PATHNAME REPO ;\n+  RUN: <<PATHNAME biz/bar ;\n+  RUN: <<PATHNAME blob ;\n+  RUN: <<BOOL FALSE ;\n+  RUN: << BOOL TRUE ;\n+  RUN: << PATHNAME foo ;\n+  RUN: <<OK\n+*/\n+// RUN: $subdir$stem | ezio -p OUT $test |& ezio -p ERR $test\n+// RUN-END:\n+\n+/*\n+  OUT-NEXT:^HELLO {:[0-9]+} TEST IDENT ;$\n+  OUT-NEXT:^MODULE-REPO ;\n+  OUT-NEXT:^MODULE-EXPORT bar ;\n+  OUT-NEXT:^MODULE-IMPORT foo ;\n+  OUT-NEXT:^INCLUDE-TRANSLATE baz.frob ;\n+  OUT-NEXT:^INCLUDE-TRANSLATE ./corge ;\n+  OUT-NEXT:^INCLUDE-TRANSLATE ./quux ;\n+  OUT-NEXT:^MODULE-COMPILED bar\n+*/\n+// OUT-NEXT:$EOF\n+\n+// ERR-NEXT:Code:1$\n+// ERR-NEXT:Integer:1$\n+// ERR-NEXT:Code:5$\n+// ERR-NEXT:String:REPO$\n+// ERR-NEXT:Code:5$\n+// ERR-NEXT:String:biz/bar$\n+// ERR-NEXT:Code:5$\n+// ERR-NEXT:String:blob$\n+// ERR-NEXT:Code:4$\n+// ERR-NEXT:Integer:0$\n+// ERR-NEXT:Code:4$\n+// ERR-NEXT:Integer:1$\n+// ERR-NEXT:Code:5$\n+// ERR-NEXT:String:foo\n+// ERR-NEXT:Code:3$\n+// ERR-NEXT:Integer:\n+// ERR-NEXT:$EOF\n+\n+\n+// Cody\n+#include \"cody.hh\"\n+// C++\n+#include <iostream>\n+\n+using namespace Cody;\n+\n+int main (int, char *[])\n+{\n+  Client client (0, 1);\n+\n+  client.Cork ();\n+  if (client.Connect (\"TEST\", \"IDENT\").GetCode () != Client::PC_CORKED)\n+    std::cerr << \"Not corked!\\n\";\n+  if (client.ModuleRepo ().GetCode () != Client::PC_CORKED)\n+    std::cerr << \"Not corked!\\n\";\n+  if (client.ModuleExport (\"bar\").GetCode () != Client::PC_CORKED)\n+    std::cerr << \"Not corked!\\n\";\n+  if (client.ModuleImport (\"foo\").GetCode () != Client::PC_CORKED)\n+    std::cerr << \"Not corked!\\n\";\n+  if (client.IncludeTranslate (\"baz.frob\").GetCode () != Client::PC_CORKED)\n+    std::cerr << \"Not corked!\\n\";\n+  if (client.IncludeTranslate (\"./corge\").GetCode () != Client::PC_CORKED)\n+    std::cerr << \"Not corked!\\n\";\n+  if (client.IncludeTranslate (\"./quux\").GetCode () != Client::PC_CORKED)\n+    std::cerr << \"Not corked!\\n\";\n+  if (client.ModuleCompiled (\"bar\").GetCode () != Client::PC_CORKED)\n+    std::cerr << \"Not corked!\\n\";\n+\n+  auto result = client.Uncork ();\n+  for (auto iter = result.begin (); iter != result.end (); ++iter)\n+    {\n+      std::cerr << \"Code:\" << iter->GetCode () << '\\n';\n+      switch (iter->GetCategory ())\n+\t{\n+\tcase Packet::INTEGER:\n+\t  std::cerr << \"Integer:\" << iter->GetInteger () << '\\n';\n+\t  break;\n+\tcase Packet::STRING:\n+\t  std::cerr << \"String:\" << iter->GetString () << '\\n';\n+\t  break;\n+\tcase Packet::VECTOR:\n+\t  {\n+\t    auto const &v = iter->GetVector ();\n+\t    for (unsigned ix = 0; ix != v.size (); ix++)\n+\t      std::cerr << \"Vector[\" << ix << \"]:\" << v[ix] << '\\n';\n+\t  }\n+\t  break;\n+\t}\n+    }\n+}"}, {"sha": "b98c833ab2776419493d274bb2726dac6b309bcf", "filename": "libcody/tests/02-comms/pivot-1.cc", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Ftests%2F02-comms%2Fpivot-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Ftests%2F02-comms%2Fpivot-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2Ftests%2F02-comms%2Fpivot-1.cc?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -0,0 +1,76 @@\n+\n+// Test resolver pivot\n+\n+// RUN:<<HELLO 1 TEST IDENT ;\n+// RUN:<<MODULE-REPO ;\n+// RUN:<<HELLO 1 TEST IDENT\n+// RUN: $subdir$stem | ezio -p OUT1 $test |& ezio -p ERR1 $test\n+// OUT1-NEXT:HELLO 1 default ;\n+// OUT1-NEXT:PATHNAME cmi.cache ;\n+// OUT1-NEXT:ERROR 'already connected\n+// OUT1-NEXT:$EOF\n+// ERR1-NEXT:resolver is handler\n+// ERR1-NEXT:$EOF\n+\n+// RUN:<<MODULE-REPO ;\n+// RUN:<<HELLO 1 TEST IDENT ;\n+// RUN:<<MODULE-REPO\n+// RUN: $subdir$stem | ezio -p OUT2 $test |& ezio -p ERR2 $test\n+// OUT2-NEXT:ERROR 'not connected\n+// OUT2-NEXT:HELLO 1 default ;\n+// OUT2-NEXT:PATHNAME cmi.cache\n+// OUT2-NEXT:$EOF\n+// ERR2-NEXT:resolver is handler\n+// ERR2-NEXT:$EOF\n+\n+// RUN-END:\n+#include \"cody.hh\"\n+#include <iostream>\n+\n+using namespace Cody;\n+\n+class Handler : public Resolver\n+{\n+  virtual Handler *ConnectRequest (Server *s, unsigned ,\n+\t\t\t\t   std::string &, std::string &)\n+  {\n+    ErrorResponse (s, \"unexpected connect call\");\n+    return nullptr;\n+  }\n+};\n+\n+Handler handler;\n+\n+class Initial : public Resolver\n+{\n+  virtual Handler *ConnectRequest (Server *s, unsigned v,\n+\t\t\t\t   std::string &agent, std::string &ident)\n+  {\n+    Resolver::ConnectRequest (s, v, agent, ident);\n+    return &handler;\n+  }\n+};\n+\n+Initial initial;\n+\n+int main (int, char *[])\n+{\n+  Server server (&initial, 0, 1);\n+\n+  while (int e = server.Read ())\n+    if (e != EAGAIN && e != EINTR)\n+      break;\n+\n+  server.ProcessRequests ();\n+  if (server.GetResolver () == &handler)\n+    std::cerr << \"resolver is handler\\n\";\n+  else if (server.GetResolver () == &initial)\n+    std::cerr << \"resolver is initial\\n\";\n+  else\n+    std::cerr << \"resolver is surprising\\n\";\n+\n+  server.PrepareToWrite ();\n+  while (int e = server.Write ())\n+    if (e != EAGAIN && e != EINTR)\n+      break;\n+}"}, {"sha": "0a8694e94df52df589963e4f9bf31a029fe6ace1", "filename": "libcody/tests/02-comms/server-1.cc", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Ftests%2F02-comms%2Fserver-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Ftests%2F02-comms%2Fserver-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2Ftests%2F02-comms%2Fserver-1.cc?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -0,0 +1,68 @@\n+\n+// Test server message round tripping\n+/*\n+  RUN:<<HELLO 1 TEST IDENT ;\n+  RUN:<<MODULE-REPO ;\n+  RUN:<<MODULE-EXPORT bar ;\n+  RUN:<<MODULE-IMPORT foo ;\n+  RUN:<<NOT A COMMAND ;\n+  RUN:<<INCLUDE-TRANSLATE baz.frob ;\n+  RUN:<<INCLUDE-TRANSLATE ./quux ;\n+  RUN:<<MODULE-COMPILED bar ;\n+  RUN:<<MODULE-IMPORT ''\n+*/\n+// RUN: $subdir$stem | ezio -p OUT1 $test |& ezio -p ERR1 $test\n+\n+// These all fail because there's nothing in the server interpretting stuff\n+/*\n+  OUT1-NEXT: ^HELLO 1 default\t;\n+  OUT1-NEXT: ^PATHNAME cmi.cache\t;\n+  OUT1-NEXT: ^PATHNAME bar.cmi\t;\n+  OUT1-NEXT: ^PATHNAME foo.cmi\t;\n+  OUT1-NEXT: ^ERROR 'unrecognized \\'NOT\n+  OUT1-NEXT: ^BOOL FALSE\t;\n+  OUT1-NEXT: ^BOOL FALSE\t;\n+  OUT1-NEXT: ^OK\n+  OUT1-NEXT: ^ERROR 'malformed\n+*/\n+// OUT1-NEXT:$EOF\n+// ERR1-NEXT:$EOF\n+\n+/*\n+  RUN:<<HELLO 1 TEST IDENT\n+  RUN:<<MODULE-REPO\n+*/\n+// RUN: $subdir$stem | ezio -p OUT2 $test |& ezio -p ERR2 $test\n+/*\n+  OUT2-NEXT: ^HELLO 1 default\n+*/\n+// OUT2-NEXT:$EOF\n+// ERR2-NEXT:$EOF\n+\n+// RUN-END:\n+\n+// Cody\n+#include \"cody.hh\"\n+// C++\n+#include <iostream>\n+\n+using namespace Cody;\n+\n+int main (int, char *[])\n+{\n+  Resolver r;\n+  Server server (&r, 0, 1);\n+\n+  while (int e = server.Read ())\n+    if (e != EAGAIN && e != EINTR)\n+      break;\n+\n+  server.ProcessRequests ();\n+  if (server.GetResolver () != &r)\n+    std::cerr << \"resolver changed\\n\";\n+  server.PrepareToWrite ();\n+\n+  while (int e = server.Write ())\n+    if (e != EAGAIN && e != EINTR)\n+      break;\n+}"}, {"sha": "329e94609eee4debed9b8209373806bc1ef11598", "filename": "libcody/tests/Makesub.in", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Ftests%2FMakesub.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Ftests%2FMakesub.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2Ftests%2FMakesub.in?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -0,0 +1,36 @@\n+# CODYlib\t\t-*- mode:Makefile -*-\n+# Copyright (C) 2019-2020 Nathan Sidwell, nathan@acm.org\n+# License: Apache v2.0\n+\n+ALOY := @ALOY@\n+TESTS := $(patsubst $(srcdir)/%.cc,%,\\\n+\t$(wildcard $(srcdir)/tests/*/*.cc))\n+TESTDIRS = $(shell cd $(srcdir)/${<D} ; echo *(/))\n+testdir := $(and $(filter-out /%,$(srcdir)),../)$(srcdir)/tests\n+\n+check:: tests/cody.defs $(TESTS)\n+\t+cd ${<D} && srcbuilddir=$(srcdir)/tests JOUST=${<F} \\\n+\t  $(ALOY) -t kratos -o cody -g $(testdir)/jouster $(TESTDIRS)\n+ifeq ($(firstword $(aloy)),:)\n+\t@echo WARNING: tests were not run as Joust test harness was not found\n+endif\n+\n+tests/cody.defs: tests/Makesub\n+\techo '# Automatically generated by Make' >$@\n+\techo 'testdir=$(testdir)' >>$@\n+\techo 'timelimit=60' >>$@\n+\techo 'memlimit=1' >>$@\n+\techo 'cpulimit=60' >>$@\n+\techo 'filelimit=1' >>$@\n+\techo 'SHELL=$(SHELL)' >>$@\n+\n+$(TESTS): %: %.o libcody.a\n+\t$(CXX) $(LDFLAGS) $< -lcody $(LIBS) -o $@\n+\n+clean::\n+\trm -f $(TESTS)\n+\trm -f $(TESTS:=.o) $(TESTS:=.d)\n+\n+ifeq ($(filter clean%,$(MAKECMDGOALS)),)\n+-include $(TESTS:=.d)\n+endif"}, {"sha": "c7a913c8a190de26d3d20a7c002710a05556a4a0", "filename": "libcody/tests/jouster", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Ftests%2Fjouster", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362303298ac4c1f93bda87535df2b726481d54bb/libcody%2Ftests%2Fjouster", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2Ftests%2Fjouster?ref=362303298ac4c1f93bda87535df2b726481d54bb", "patch": "@@ -0,0 +1,11 @@\n+#! /bin/zsh\n+# CODYlib\t\t-*- mode:Makefile -*-\n+# Copyright (C) 2019-2020 Nathan Sidwell, nathan@acm.org\n+# License Apache v2.0\n+\n+pushd ${0%/*}\n+setopt nullglob\n+for subdir in $@ ; do\n+    echo $subdir/*(.^*)\n+done\n+popd"}]}