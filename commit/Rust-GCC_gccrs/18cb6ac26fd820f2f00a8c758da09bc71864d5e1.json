{"sha": "18cb6ac26fd820f2f00a8c758da09bc71864d5e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThjYjZhYzI2ZmQ4MjBmMmYwMGE4Yzc1OGRhMDliYzcxODY0ZDVlMQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2020-01-13T12:29:02Z"}, "committer": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2020-01-13T12:29:02Z"}, "message": "Replace update_version_svn with update_version_git.\n\nThis patch replaces the update_version_svn script, that updates the\nDATESTAMP files from cron, with update_version_git.\n\n\t* update_version_git: New file.\n\t* update_version:svn: Remove.\n\t* crontab: Use update_version_git.", "tree": {"sha": "467dfa94e8d54858544b616ec8a60d3f3bbc538d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/467dfa94e8d54858544b616ec8a60d3f3bbc538d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18cb6ac26fd820f2f00a8c758da09bc71864d5e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18cb6ac26fd820f2f00a8c758da09bc71864d5e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18cb6ac26fd820f2f00a8c758da09bc71864d5e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18cb6ac26fd820f2f00a8c758da09bc71864d5e1/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2b465c555370b60f48864b5cd525b9b60b4e29f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2b465c555370b60f48864b5cd525b9b60b4e29f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2b465c555370b60f48864b5cd525b9b60b4e29f"}], "stats": {"total": 178, "additions": 92, "deletions": 86}, "files": [{"sha": "dafbbd714f06dfdae3eb4e9305df92a0a01407d3", "filename": "maintainer-scripts/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18cb6ac26fd820f2f00a8c758da09bc71864d5e1/maintainer-scripts%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18cb6ac26fd820f2f00a8c758da09bc71864d5e1/maintainer-scripts%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/maintainer-scripts%2FChangeLog?ref=18cb6ac26fd820f2f00a8c758da09bc71864d5e1", "patch": "@@ -1,3 +1,9 @@\n+2020-01-13  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* update_version_git: New file.\n+\t* update_version:svn: Remove.\n+\t* crontab: Use update_version_git.\n+\n 2019-11-20  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \t* gcc_release: Use https for gcc.gnu.org."}, {"sha": "f064d6fb45ebbdfc10ad1a466355db90dc844206", "filename": "maintainer-scripts/crontab", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18cb6ac26fd820f2f00a8c758da09bc71864d5e1/maintainer-scripts%2Fcrontab", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18cb6ac26fd820f2f00a8c758da09bc71864d5e1/maintainer-scripts%2Fcrontab", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/maintainer-scripts%2Fcrontab?ref=18cb6ac26fd820f2f00a8c758da09bc71864d5e1", "patch": "@@ -1,4 +1,4 @@\n-16  0 * * * sh /home/gccadmin/scripts/update_version_svn\n+16  0 * * * sh /home/gccadmin/scripts/update_version_git\n 50  0 * * * sh /home/gccadmin/scripts/update_web_docs_svn\n 55  0 * * * sh /home/gccadmin/scripts/update_web_docs_libstdcxx_svn\n 32 22 * * 5 sh /home/gccadmin/scripts/gcc_release -s 8:branches/gcc-8-branch -l -d /sourceware/snapshot-tmp/gcc all"}, {"sha": "b1b5f4c9cf97548a787f9c2430663e4db68386ec", "filename": "maintainer-scripts/update_version_git", "status": "added", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18cb6ac26fd820f2f00a8c758da09bc71864d5e1/maintainer-scripts%2Fupdate_version_git", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18cb6ac26fd820f2f00a8c758da09bc71864d5e1/maintainer-scripts%2Fupdate_version_git", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/maintainer-scripts%2Fupdate_version_git?ref=18cb6ac26fd820f2f00a8c758da09bc71864d5e1", "patch": "@@ -0,0 +1,85 @@\n+#!/bin/sh\n+#\n+# Update the current version date in all files in the tree containing\n+# it.  Consider all single-component-version release branches except\n+# those matching the regular expression in $IGNORE_BRANCHES, and also\n+# consider those branches listed in the space separated list in\n+# $ADD_BRANCHES.\n+\n+GITROOT=${GITROOT:-\"/git/gcc.git\"}\n+IGNORE_BRANCHES='releases/gcc-(.*\\..*|5|6|7)'\n+ADD_BRANCHES='master'\n+\n+# Run this from /tmp.\n+export GITROOT\n+BASEDIR=/tmp/$$\n+/bin/rm -rf \"$BASEDIR\"\n+/bin/mkdir \"$BASEDIR\"\n+cd \"$BASEDIR\"\n+\n+GIT=${GIT:-/usr/local/bin/git}\n+\n+# Compute the branches which we should update.\n+BRANCHES=`(cd $GITROOT \\\n+\t   && ${GIT} for-each-ref --format='%(refname)' \\\n+\t\t     'refs/heads/releases/gcc-*') \\\n+\t  | sed -e 's/refs\\/heads\\///' \\\n+          | egrep -v $IGNORE_BRANCHES`\n+# Always update the mainline.\n+BRANCHES=\"${ADD_BRANCHES} ${BRANCHES}\"\n+\n+# This is put into the datestamp files.\n+CURR_DATE=`/bin/date +\"%Y%m%d\"`\n+\n+datestamp_FILES=\"gcc/DATESTAMP\"\n+\n+\n+# Assume all will go well.\n+RESULT=0\n+SUBDIR=$BASEDIR/gcc\n+for BRANCH in $BRANCHES; do\n+  echo \"Working on \\\"$BRANCH\\\".\"\n+  # Check out the files on the branch.\n+  if [ -d \"$SUBDIR\" ]; then\n+    cd \"$SUBDIR\"\n+    ${GIT} pull -q\n+    ${GIT} checkout -q \"$BRANCH\"\n+  else\n+    ${GIT} clone -q -b \"$BRANCH\" \"$GITROOT\" \"$SUBDIR\"\n+  fi\n+\n+  # There are no files to commit yet.\n+  COMMIT_FILES=\"\"\n+\n+  cd \"$SUBDIR\"\n+  for file in $datestamp_FILES; do\n+    if test -f $file; then\n+      echo \"${CURR_DATE}\" > $file.new\n+\n+      if /usr/bin/cmp -s $file $file.new; then\n+\trm -f $file.new\n+      else\n+\tmv -f $file.new $file\n+        COMMIT_FILES=\"$COMMIT_FILES $file\"\n+      fi\n+    fi\n+  done\n+\n+  if test -n \"$COMMIT_FILES\"; then\n+    for i in $COMMIT_FILES; do\n+    echo \"Attempting to commit $i\"\n+    if ${GIT} commit -m \"Daily bump.\" $i; then\n+      if ! ${GIT} push origin \"$BRANCH\"; then\n+        # If we could not push the files, indicate failure.\n+        RESULT=1\n+      fi\n+    else\n+      # If we could not commit the files, indicate failure.\n+      RESULT=1\n+    fi\n+    done\n+  fi\n+done\n+\n+/bin/rm -rf $BASEDIR\n+exit $RESULT"}, {"sha": "dfbaee6e44a9a0748ce60a03c16a6eb63f5d5f88", "filename": "maintainer-scripts/update_version_svn", "status": "removed", "additions": 0, "deletions": 85, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2b465c555370b60f48864b5cd525b9b60b4e29f/maintainer-scripts%2Fupdate_version_svn", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2b465c555370b60f48864b5cd525b9b60b4e29f/maintainer-scripts%2Fupdate_version_svn", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/maintainer-scripts%2Fupdate_version_svn?ref=b2b465c555370b60f48864b5cd525b9b60b4e29f", "patch": "@@ -1,85 +0,0 @@\n-#!/bin/sh\n-#\n-# Update the current version date in all files in the tree containing\n-# it.  Consider all release branches except those matching the regular\n-# expression in $IGNORE_BRANCHES, and also consider those branches listed\n-# in the space separated list in $ADD_BRANCHES.\n-\n-SVNROOT=${SVNROOT:-\"file:///svn/gcc\"}\n-IGNORE_BRANCHES='gcc-(2_95|3_0|3_1|3_2|3_3|3_4|4_0|4_1|4_2|4_3|4_4|4_5|4_6|4_7|4_8|4_9|5|6|7)-branch'\n-ADD_BRANCHES='HEAD'\n-\n-# Run this from /tmp.\n-export SVNROOT\n-/bin/rm -rf /tmp/$$\n-/bin/mkdir /tmp/$$\n-cd /tmp/$$\n-\n-SVN=${SVN:-/usr/bin/svn}\n-\n-# Compute the branches which we should update.\n-BRANCHES=`$SVN ls $SVNROOT/branches \\\n-\t  | sed -e 's/\\///' \\\n-          | egrep 'gcc-[0-9]+(_[0-9]+)?-branch$' \\\n-          | egrep -v $IGNORE_BRANCHES`\n-# Always update the mainline.\n-BRANCHES=\"${BRANCHES} ${ADD_BRANCHES}\"\n-\n-# This is put into the datestamp files.\n-CURR_DATE=`/bin/date +\"%Y%m%d\"`\n-\n-datestamp_FILES=\"gcc/DATESTAMP\"\n-\n-\n-# Assume all will go well.\n-RESULT=0\n-for BRANCH in $BRANCHES; do\n-  echo \"Working on \\\"$BRANCH\\\".\"\n-  # Check out the files on the branch.  HEAD is in a different namespace.\n-  if test \"$BRANCH\" = HEAD; then \n-    SVNROOT2=${SVNROOT}/trunk\n-  else    \n-    SVNROOT2=${SVNROOT}/branches/${BRANCH}\n-  fi\n-\n-  for i in $datestamp_FILES; do\n-    ${SVN} -q co -N ${SVNROOT2}/`dirname $i` `basename $i`\n-  done\n-\n-  # There are no files to commit yet.\n-  COMMIT_FILES=\"\"\n-\n-  for file in $datestamp_FILES; do\n-    dirname=`basename $file`\n-    file=`basename $file`\n-    file=\"$dirname/$file\"\n-    if test -f $file; then\n-      echo ${CURR_DATE} > $file.new\n-\n-      if /usr/bin/cmp -s $file $file.new; then\n-\trm -f $file.new\n-      else\n-\tmv -f $file.new $file\n-        COMMIT_FILES=\"$COMMIT_FILES $file\"\n-      fi\n-    fi\n-  done\n-\n-  if test -n \"$COMMIT_FILES\"; then\n-    for i in $COMMIT_FILES; do\n-    echo \"Attempting to commit $i\"\n-    if ! ${SVN} commit -m \"Daily bump.\" $i; then\n-       # If we could not commit the files, indicate failure.\n-       RESULT=1\n-     fi\n-    done\n-  fi\n-  \n-  # Remove the files.\n-  for i in $datestamp_FILES; do\n-   rm -rf /tmp/$$/`basename $i`\n-  done\n-done\n-\n-/bin/rm -rf /tmp/$$\n-exit $RESULT"}]}