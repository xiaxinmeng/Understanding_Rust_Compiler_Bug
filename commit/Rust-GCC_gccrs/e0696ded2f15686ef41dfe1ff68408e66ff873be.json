{"sha": "e0696ded2f15686ef41dfe1ff68408e66ff873be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA2OTZkZWQyZjE1Njg2ZWY0MWRmZTFmZjY4NDA4ZTY2ZmY4NzNiZQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2007-05-28T22:07:23Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-05-28T22:07:23Z"}, "message": "re PR fortran/32124 (Execution stops with stat= in ALLOCATE)\n\n2007-05-28  Tobias Burnus  <burnus@net-b.de>\n\n       PR fortran/32124\n       * gfortran.dg/allocate_stat_1.f90: New.\n\nFrom-SVN: r125148", "tree": {"sha": "a9a81a28ac7402d8835ab3e88ca4a3e2c1f14d35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9a81a28ac7402d8835ab3e88ca4a3e2c1f14d35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0696ded2f15686ef41dfe1ff68408e66ff873be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0696ded2f15686ef41dfe1ff68408e66ff873be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0696ded2f15686ef41dfe1ff68408e66ff873be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0696ded2f15686ef41dfe1ff68408e66ff873be/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3659e0cd912c59970a0521fda398738fe0502ea9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3659e0cd912c59970a0521fda398738fe0502ea9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3659e0cd912c59970a0521fda398738fe0502ea9"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "863a060e4b8988a575698453c84ccacd21ae8f63", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0696ded2f15686ef41dfe1ff68408e66ff873be/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0696ded2f15686ef41dfe1ff68408e66ff873be/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e0696ded2f15686ef41dfe1ff68408e66ff873be", "patch": "@@ -1,3 +1,8 @@\n+2007-05-28  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/32124\n+\t* gfortran.dg/allocate_stat_1.f90: New.\n+\n 2007-05-28  Brooks Moses  <brooks.moses@codesourcery.com>\n \n \tPR fortran/31972"}, {"sha": "a9c681aeb0945116a5fa5cfc90291de0675b9a28", "filename": "gcc/testsuite/gfortran.dg/allocate_stat_1.f90", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0696ded2f15686ef41dfe1ff68408e66ff873be/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_stat_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0696ded2f15686ef41dfe1ff68408e66ff873be/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_stat_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_stat_1.f90?ref=e0696ded2f15686ef41dfe1ff68408e66ff873be", "patch": "@@ -0,0 +1,17 @@\n+! { dg-do run }\n+! Check whether uppon failure no run-time error is issued.\n+! PR fortran/32124\n+!\n+program mem\n+  implicit none\n+  real(8), allocatable :: A(:,:,:,:)\n+  integer :: status\n+\n+  status = 0\n+  allocate(A(huge(0),huge(0),huge(0),huge(0)),stat=status) ! this should fail\n+  if(status == 0) call abort()\n+\n+  status = 0\n+  deallocate(A,stat=status)\n+  if(status == 0) call abort()\n+end program mem"}]}