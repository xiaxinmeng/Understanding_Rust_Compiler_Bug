{"sha": "081c96621da658760b4a67c07530805f770fa22c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDgxYzk2NjIxZGE2NTg3NjBiNGE2N2MwNzUzMDgwNWY3NzBmYTIyYw==", "commit": {"author": {"name": "Vladimir N. Makarov", "email": "vmakarov@redhat.com", "date": "2021-01-27T19:53:28Z"}, "committer": {"name": "Vladimir N. Makarov", "email": "vmakarov@redhat.com", "date": "2021-01-27T20:59:05Z"}, "message": "[PR97684] IRA: Recalculate pseudo classes if we added new pseduos since last calculation before updating equiv regs\n\nupdate_equiv_regs can use reg classes of pseudos and they are set up in\nregister pressure sensitive scheduling and loop invariant motion and in\nlive range shrinking.  This info can become obsolete if we add new pseudos\nsince the last set up.  Recalculate it again if the new pseudos were\nadded.\n\ngcc/ChangeLog:\n\n\tPR rtl-optimization/97684\n\t* ira.c (ira): Call ira_set_pseudo_classes before\n\tupdate_equiv_regs when it is necessary.\n\ngcc/testsuite/ChangeLog:\n\n\tPR rtl-optimization/97684\n\t* gcc.target/i386/pr97684.c: New.", "tree": {"sha": "7a1709c59076a2d211df3dfc944fba7018caa5b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a1709c59076a2d211df3dfc944fba7018caa5b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/081c96621da658760b4a67c07530805f770fa22c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/081c96621da658760b4a67c07530805f770fa22c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/081c96621da658760b4a67c07530805f770fa22c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/081c96621da658760b4a67c07530805f770fa22c/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9cd7c32549fa334885b716fe98b674f6447fa7c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cd7c32549fa334885b716fe98b674f6447fa7c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cd7c32549fa334885b716fe98b674f6447fa7c0"}], "stats": {"total": 36, "additions": 33, "deletions": 3}, "files": [{"sha": "c32ecf814fdbd2c6eac5142125bb53caae103b6f", "filename": "gcc/ira.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/081c96621da658760b4a67c07530805f770fa22c/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/081c96621da658760b4a67c07530805f770fa22c/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=081c96621da658760b4a67c07530805f770fa22c", "patch": "@@ -5566,6 +5566,15 @@ ira (FILE *f)\n   if (warn_clobbered)\n     generate_setjmp_warnings ();\n \n+  /* update_equiv_regs can use reg classes of pseudos and they are set up in\n+     register pressure sensitive scheduling and loop invariant motion and in\n+     live range shrinking.  This info can become obsolete if we add new pseudos\n+     since the last set up.  Recalculate it again if the new pseudos were\n+     added.  */\n+  if (resize_reg_info () && (flag_sched_pressure || flag_live_range_shrinkage\n+\t\t\t     || flag_ira_loop_pressure))\n+    ira_set_pseudo_classes (true, ira_dump_file);\n+\n   init_alias_analysis ();\n   loop_optimizer_init (AVOID_CFG_MODIFICATIONS);\n   reg_equiv = XCNEWVEC (struct equivalence, max_reg_num ());\n@@ -5610,9 +5619,6 @@ ira (FILE *f)\n       regstat_recompute_for_max_regno ();\n     }\n \n-  if (resize_reg_info () && flag_ira_loop_pressure)\n-    ira_set_pseudo_classes (true, ira_dump_file);\n-\n   setup_reg_equiv ();\n   grow_reg_equivs ();\n   setup_reg_equiv_init ();"}, {"sha": "983bf535ad89320ece92bee25f0940f36a2a2c64", "filename": "gcc/testsuite/gcc.target/i386/pr97684.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/081c96621da658760b4a67c07530805f770fa22c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr97684.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/081c96621da658760b4a67c07530805f770fa22c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr97684.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr97684.c?ref=081c96621da658760b4a67c07530805f770fa22c", "patch": "@@ -0,0 +1,24 @@\n+/* PR rtl-optimization/97684 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -flive-range-shrinkage -fschedule-insns -fselective-scheduling -funroll-all-loops -fno-web\" } */\n+\n+void\n+c5 (double);\n+\n+void\n+g4 (int *n4)\n+{\n+  double lp = 0.0;\n+  int fn;\n+\n+  for (fn = 0; fn < 18; ++fn)\n+    {\n+      int as;\n+\n+      as = __builtin_abs (n4[fn]);\n+      if (as > lp)\n+        lp = as;\n+    }\n+\n+  c5 (lp);\n+}"}]}