{"sha": "5a0c86bdde35b0184cc7c0821b090d6c02cb3921", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWEwYzg2YmRkZTM1YjAxODRjYzdjMDgyMWIwOTBkNmMwMmNiMzkyMQ==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2018-05-30T08:56:59Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-30T08:56:59Z"}, "message": "[Ada] Secondary stack leak in \"for X of ...\" loops\n\nThis patch fixes a memory leak bug. In particular, in a loop of the form \"for X\nof ...\", with a type that has the Iterable aspect specified, if the result of\nthe Element function is returned on the secondary stack (e.g. the result\nsubtype has caller-unknown size), then memory for the secondary stack could\nleak.\n\n2018-05-30  Bob Duff  <duff@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch5.adb (Expand_Formal_Container_Element_Loop): Remove the code\n\tto analyze the Elmt_Decl, because it gets analyzed in the wrong scope.\n\tWe need to analyze it as part of analyzing the block, so that if the\n\tcall to Element that initializes Elmt_Decl returns on the secondary\n\tstack, the block will ss_mark/ss_release. This block is inside the\n\tloop; we don't want to leak memory until the loop exits.  The purpose\n\tof analyzing Elmt_Decl first was to catch the error of modifying it,\n\twhich is illegal because it's a loop parameter. The above causes us to\n\tmiss that error.  Therefore, we add a flag Is_Loop_Parameter, and set\n\tit on the Element entity, so we end up with an E_Variable node with the\n\tflag set.\n\t* einfo.ads, einfo.adb (Is_Loop_Parameter): New flag.\n\t* sem_ch5.adb (Diagnose_Non_Variable_Lhs): Give the \"assignment to loop\n\tparameter not allowed\" error if Is_Loop_Parameter.\n\t* sem_util.adb (Is_Variable): Return False if Is_Loop_Parameter, to\n\ttrigger the call to Diagnose_Non_Variable_Lhs.\n\nFrom-SVN: r260930", "tree": {"sha": "e77fabca4d9496d1b786382be81f134c486c567f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e77fabca4d9496d1b786382be81f134c486c567f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a0c86bdde35b0184cc7c0821b090d6c02cb3921", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a0c86bdde35b0184cc7c0821b090d6c02cb3921", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a0c86bdde35b0184cc7c0821b090d6c02cb3921", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a0c86bdde35b0184cc7c0821b090d6c02cb3921/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "88ad52c90d5aa992fbbcba44f91faccdc02150ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88ad52c90d5aa992fbbcba44f91faccdc02150ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88ad52c90d5aa992fbbcba44f91faccdc02150ef"}], "stats": {"total": 75, "additions": 59, "deletions": 16}, "files": [{"sha": "c2b6338f4ee3bae25806e40f75101e4832e29c1d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a0c86bdde35b0184cc7c0821b090d6c02cb3921/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a0c86bdde35b0184cc7c0821b090d6c02cb3921/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5a0c86bdde35b0184cc7c0821b090d6c02cb3921", "patch": "@@ -1,3 +1,22 @@\n+2018-05-30  Bob Duff  <duff@adacore.com>\n+\n+\t* exp_ch5.adb (Expand_Formal_Container_Element_Loop): Remove the code\n+\tto analyze the Elmt_Decl, because it gets analyzed in the wrong scope.\n+\tWe need to analyze it as part of analyzing the block, so that if the\n+\tcall to Element that initializes Elmt_Decl returns on the secondary\n+\tstack, the block will ss_mark/ss_release. This block is inside the\n+\tloop; we don't want to leak memory until the loop exits.  The purpose\n+\tof analyzing Elmt_Decl first was to catch the error of modifying it,\n+\twhich is illegal because it's a loop parameter. The above causes us to\n+\tmiss that error.  Therefore, we add a flag Is_Loop_Parameter, and set\n+\tit on the Element entity, so we end up with an E_Variable node with the\n+\tflag set.\n+\t* einfo.ads, einfo.adb (Is_Loop_Parameter): New flag.\n+\t* sem_ch5.adb (Diagnose_Non_Variable_Lhs): Give the \"assignment to loop\n+\tparameter not allowed\" error if Is_Loop_Parameter.\n+\t* sem_util.adb (Is_Variable): Return False if Is_Loop_Parameter, to\n+\ttrigger the call to Diagnose_Non_Variable_Lhs.\n+\n 2018-05-30  Arnaud Charlet  <charlet@adacore.com>\n \n \t* checks.adb (Apply_Scalar_Range_Check):"}, {"sha": "320b16715ed793312ce4554239b24d79f9e00a8c", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a0c86bdde35b0184cc7c0821b090d6c02cb3921/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a0c86bdde35b0184cc7c0821b090d6c02cb3921/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=5a0c86bdde35b0184cc7c0821b090d6c02cb3921", "patch": "@@ -630,8 +630,8 @@ package body Einfo is\n    --    Is_Elaboration_Warnings_OK_Id   Flag304\n    --    Is_Activation_Record            Flag305\n    --    Needs_Activation_Record         Flag306\n+   --    Is_Loop_Parameter               Flag307\n \n-   --    (unused)                        Flag307\n    --    (unused)                        Flag308\n    --    (unused)                        Flag309\n \n@@ -2486,6 +2486,11 @@ package body Einfo is\n       return Flag194 (Id);\n    end Is_Local_Anonymous_Access;\n \n+   function Is_Loop_Parameter (Id : E) return B is\n+   begin\n+      return Flag307 (Id);\n+   end Is_Loop_Parameter;\n+\n    function Is_Machine_Code_Subprogram (Id : E) return B is\n    begin\n       pragma Assert (Is_Subprogram (Id));\n@@ -5715,6 +5720,11 @@ package body Einfo is\n       Set_Flag25 (Id, V);\n    end Set_Is_Limited_Record;\n \n+   procedure Set_Is_Loop_Parameter (Id : E; V : B := True) is\n+   begin\n+      Set_Flag307 (Id, V);\n+   end Set_Is_Loop_Parameter;\n+\n    procedure Set_Is_Machine_Code_Subprogram (Id : E; V : B := True) is\n    begin\n       pragma Assert (Is_Subprogram (Id));\n@@ -9865,6 +9875,7 @@ package body Einfo is\n       W (\"Is_Limited_Interface\",            Flag197 (Id));\n       W (\"Is_Limited_Record\",               Flag25  (Id));\n       W (\"Is_Local_Anonymous_Access\",       Flag194 (Id));\n+      W (\"Is_Loop_Parameter\",               Flag307 (Id));\n       W (\"Is_Machine_Code_Subprogram\",      Flag137 (Id));\n       W (\"Is_Non_Static_Subtype\",           Flag109 (Id));\n       W (\"Is_Null_Init_Proc\",               Flag178 (Id));"}, {"sha": "384de07134d941e441e40c76289d9d1f5c018b74", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a0c86bdde35b0184cc7c0821b090d6c02cb3921/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a0c86bdde35b0184cc7c0821b090d6c02cb3921/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=5a0c86bdde35b0184cc7c0821b090d6c02cb3921", "patch": "@@ -2915,6 +2915,12 @@ package Einfo is\n --       that are created for access parameters, access discriminants, and\n --       (as of Ada 2012) stand-alone objects.\n \n+--    Is_Loop_Parameter (Flag307)\n+--       Applies to all entities. Certain loops, in particular \"for ... of\"\n+--       loops, get transformed so that the loop parameter is declared by a\n+--       variable declaration, so the entity is an E_Variable. This is True for\n+--       such E_Variables; False otherwise.\n+\n --    Is_Machine_Code_Subprogram (Flag137)\n --       Defined in subprogram entities. Set to indicate that the subprogram\n --       is a machine code subprogram (i.e. its body includes at least one\n@@ -5621,6 +5627,7 @@ package Einfo is\n    --    Is_Known_Valid                      (Flag170)\n    --    Is_Limited_Composite                (Flag106)\n    --    Is_Limited_Record                   (Flag25)\n+   --    Is_Loop_Parameter                   (Flag307)\n    --    Is_Obsolescent                      (Flag153)\n    --    Is_Package_Body_Entity              (Flag160)\n    --    Is_Packed_Array_Impl_Type           (Flag138)\n@@ -7343,6 +7350,7 @@ package Einfo is\n    function Is_Limited_Composite                (Id : E) return B;\n    function Is_Limited_Interface                (Id : E) return B;\n    function Is_Local_Anonymous_Access           (Id : E) return B;\n+   function Is_Loop_Parameter                   (Id : E) return B;\n    function Is_Machine_Code_Subprogram          (Id : E) return B;\n    function Is_Non_Static_Subtype               (Id : E) return B;\n    function Is_Null_Init_Proc                   (Id : E) return B;\n@@ -8049,6 +8057,7 @@ package Einfo is\n    procedure Set_Is_Limited_Interface            (Id : E; V : B := True);\n    procedure Set_Is_Limited_Record               (Id : E; V : B := True);\n    procedure Set_Is_Local_Anonymous_Access       (Id : E; V : B := True);\n+   procedure Set_Is_Loop_Parameter               (Id : E; V : B := True);\n    procedure Set_Is_Machine_Code_Subprogram      (Id : E; V : B := True);\n    procedure Set_Is_Non_Static_Subtype           (Id : E; V : B := True);\n    procedure Set_Is_Null_Init_Proc               (Id : E; V : B := True);\n@@ -8905,6 +8914,7 @@ package Einfo is\n    pragma Inline (Is_Limited_Interface);\n    pragma Inline (Is_Limited_Record);\n    pragma Inline (Is_Local_Anonymous_Access);\n+   pragma Inline (Is_Loop_Parameter);\n    pragma Inline (Is_Machine_Code_Subprogram);\n    pragma Inline (Is_Modular_Integer_Type);\n    pragma Inline (Is_Named_Number);\n@@ -9415,6 +9425,7 @@ package Einfo is\n    pragma Inline (Set_Is_Limited_Interface);\n    pragma Inline (Set_Is_Limited_Record);\n    pragma Inline (Set_Is_Local_Anonymous_Access);\n+   pragma Inline (Set_Is_Loop_Parameter);\n    pragma Inline (Set_Is_Machine_Code_Subprogram);\n    pragma Inline (Set_Is_Non_Static_Subtype);\n    pragma Inline (Set_Is_Null_Init_Proc);"}, {"sha": "cf1b5c55d39fd5858f8c478404ac2068ff5ed362", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a0c86bdde35b0184cc7c0821b090d6c02cb3921/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a0c86bdde35b0184cc7c0821b090d6c02cb3921/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=5a0c86bdde35b0184cc7c0821b090d6c02cb3921", "patch": "@@ -3266,6 +3266,12 @@ package body Exp_Ch5 is\n       Set_Ekind (Cursor, E_Variable);\n       Insert_Action (N, Init);\n \n+      --  The loop parameter is declared by an object declaration, but within\n+      --  the loop we must prevent user assignments to it; the following flag\n+      --  accomplishes that.\n+\n+      Set_Is_Loop_Parameter (Element);\n+\n       --  Declaration for Element\n \n       Elmt_Decl :=\n@@ -3280,7 +3286,6 @@ package body Exp_Ch5 is\n              Parameter_Associations => New_List (\n                Convert_To_Iterable_Type (Container, Loc),\n                New_Occurrence_Of (Cursor, Loc))));\n-\n          Set_Statements (New_Loop,\n            New_List\n              (Make_Block_Statement (Loc,\n@@ -3323,15 +3328,6 @@ package body Exp_Ch5 is\n       Set_Warnings_Off (Element);\n \n       Rewrite (N, New_Loop);\n-\n-      --  The loop parameter is declared by an object declaration, but within\n-      --  the loop we must prevent user assignments to it, so we analyze the\n-      --  declaration and reset the entity kind, before analyzing the rest of\n-      --  the loop.\n-\n-      Analyze (Elmt_Decl);\n-      Set_Ekind (Defining_Identifier (Elmt_Decl), E_Loop_Parameter);\n-\n       Analyze (N);\n    end Expand_Formal_Container_Element_Loop;\n "}, {"sha": "7df4fa99d13fbc419f44ecfa4d1cbc5b8448e3aa", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a0c86bdde35b0184cc7c0821b090d6c02cb3921/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a0c86bdde35b0184cc7c0821b090d6c02cb3921/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=5a0c86bdde35b0184cc7c0821b090d6c02cb3921", "patch": "@@ -169,7 +169,13 @@ package body Sem_Ch5 is\n                Ent : constant Entity_Id := Entity (N);\n \n             begin\n-               if Ekind (Ent) = E_In_Parameter then\n+               if Ekind (Ent) = E_Loop_Parameter\n+                 or else Is_Loop_Parameter (Ent)\n+               then\n+                  Error_Msg_N (\"assignment to loop parameter not allowed\", N);\n+                  return;\n+\n+               elsif Ekind (Ent) = E_In_Parameter then\n                   Error_Msg_N\n                     (\"assignment to IN mode parameter not allowed\", N);\n                   return;\n@@ -187,10 +193,6 @@ package body Sem_Ch5 is\n                   Error_Msg_N\n                     (\"protected function cannot modify protected object\", N);\n                   return;\n-\n-               elsif Ekind (Ent) = E_Loop_Parameter then\n-                  Error_Msg_N (\"assignment to loop parameter not allowed\", N);\n-                  return;\n                end if;\n             end;\n "}, {"sha": "16ba8e890aced4ccd2c05cc83059a8a0352e2147", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a0c86bdde35b0184cc7c0821b090d6c02cb3921/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a0c86bdde35b0184cc7c0821b090d6c02cb3921/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=5a0c86bdde35b0184cc7c0821b090d6c02cb3921", "patch": "@@ -17761,6 +17761,10 @@ package body Sem_Util is\n             K : constant Entity_Kind := Ekind (E);\n \n          begin\n+            if Is_Loop_Parameter (E) then\n+               return False;\n+            end if;\n+\n             return    (K = E_Variable\n                         and then Nkind (Parent (E)) /= N_Exception_Handler)\n               or else (K = E_Component"}]}