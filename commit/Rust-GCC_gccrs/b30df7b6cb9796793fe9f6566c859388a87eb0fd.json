{"sha": "b30df7b6cb9796793fe9f6566c859388a87eb0fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjMwZGY3YjZjYjk3OTY3OTNmZTlmNjU2NmM4NTkzODhhODdlYjBmZA==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@cavium.com", "date": "2014-11-20T17:12:02Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2014-11-20T17:12:02Z"}, "message": "re PR target/63981 (some C++ tests fail with -mabi=ilp32 on aarch64 (with -O2 and above))\n\n2014-11-20  Andrew Pinski  <apinski@cavium.com>\n\n        PR ipa/63981\n        * ipa-polymorphic-call.c (possible_placement_new):\n        Use POINTER_SIZE instead of GET_MODE_BITSIZE (Pmode).\n        (ipa_polymorphic_call_context::restrict_to_inner_class): Likewise.\n        (extr_type_from_vtbl_ptr_store): Likewise.\n\nFrom-SVN: r217888", "tree": {"sha": "d29f74ef775aa2267a13a1857fb793d9ece8d99a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d29f74ef775aa2267a13a1857fb793d9ece8d99a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b30df7b6cb9796793fe9f6566c859388a87eb0fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b30df7b6cb9796793fe9f6566c859388a87eb0fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b30df7b6cb9796793fe9f6566c859388a87eb0fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b30df7b6cb9796793fe9f6566c859388a87eb0fd/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d7ca26e4167f1c7abe50041c838111ee4fab15d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7ca26e4167f1c7abe50041c838111ee4fab15d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7ca26e4167f1c7abe50041c838111ee4fab15d1"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "48b4f5370ac8b0f4b5fca82ca77359da17c5c539", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b30df7b6cb9796793fe9f6566c859388a87eb0fd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b30df7b6cb9796793fe9f6566c859388a87eb0fd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b30df7b6cb9796793fe9f6566c859388a87eb0fd", "patch": "@@ -1,3 +1,11 @@\n+2014-11-20  Andrew Pinski  <apinski@cavium.com>\n+\n+\tPR ipa/63981\n+\t* ipa-polymorphic-call.c (possible_placement_new):\n+\tUse POINTER_SIZE instead of GET_MODE_BITSIZE (Pmode).\n+\t(ipa_polymorphic_call_context::restrict_to_inner_class): Likewise.\n+\t(extr_type_from_vtbl_ptr_store): Likewise.\n+\n 2014-11-20  Markus Trippelsdorf  <markus@trippelsdorf.de>\n \n \t* config/rs6000/constraints.md: Avoid signed integer overflows."}, {"sha": "6fed594269c7f662e35ba56cefe6451dff3cd7dc", "filename": "gcc/ipa-polymorphic-call.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b30df7b6cb9796793fe9f6566c859388a87eb0fd/gcc%2Fipa-polymorphic-call.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b30df7b6cb9796793fe9f6566c859388a87eb0fd/gcc%2Fipa-polymorphic-call.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-polymorphic-call.c?ref=b30df7b6cb9796793fe9f6566c859388a87eb0fd", "patch": "@@ -112,7 +112,7 @@ possible_placement_new (tree type, tree expected_type,\n \t      || !tree_fits_shwi_p (TYPE_SIZE (type))\n \t      || (cur_offset\n \t\t  + (expected_type ? tree_to_uhwi (TYPE_SIZE (expected_type))\n-\t\t     : GET_MODE_BITSIZE (Pmode))\n+\t\t     : POINTER_SIZE)\n \t\t  <= tree_to_uhwi (TYPE_SIZE (type)))));\n }\n \n@@ -155,7 +155,7 @@ ipa_polymorphic_call_context::restrict_to_inner_class (tree otr_type,\n   HOST_WIDE_INT cur_offset = offset;\n   bool speculative = false;\n   bool size_unknown = false;\n-  unsigned HOST_WIDE_INT otr_type_size = GET_MODE_BITSIZE (Pmode);\n+  unsigned HOST_WIDE_INT otr_type_size = POINTER_SIZE;\n \n   /* Update OUTER_TYPE to match EXPECTED_TYPE if it is not set.  */\n   if (!outer_type)\n@@ -316,7 +316,7 @@ ipa_polymorphic_call_context::restrict_to_inner_class (tree otr_type,\n \t\t\n \t      if (pos <= (unsigned HOST_WIDE_INT)cur_offset\n \t\t  && (pos + size) >= (unsigned HOST_WIDE_INT)cur_offset\n-\t\t\t\t     + GET_MODE_BITSIZE (Pmode)\n+\t\t\t\t     + POINTER_SIZE\n \t\t  && (!otr_type\n \t\t      || !TYPE_SIZE (TREE_TYPE (fld))\n \t\t      || !tree_fits_shwi_p (TYPE_SIZE (TREE_TYPE (fld)))\n@@ -1243,7 +1243,7 @@ extr_type_from_vtbl_ptr_store (gimple stmt, struct type_change_info *tci,\n \t      print_generic_expr (dump_file, tci->instance, TDF_SLIM);\n \t      fprintf (dump_file, \" with offset %i\\n\", (int)tci->offset);\n \t    }\n-\t  return tci->offset > GET_MODE_BITSIZE (Pmode) ? error_mark_node : NULL_TREE;\n+\t  return tci->offset > POINTER_SIZE ? error_mark_node : NULL_TREE;\n \t}\n       if (offset != tci->offset\n \t  || size != POINTER_SIZE\n@@ -1252,9 +1252,9 @@ extr_type_from_vtbl_ptr_store (gimple stmt, struct type_change_info *tci,\n \t  if (dump_file)\n \t    fprintf (dump_file, \"    wrong offset %i!=%i or size %i\\n\",\n \t\t     (int)offset, (int)tci->offset, (int)size);\n-\t  return offset + GET_MODE_BITSIZE (Pmode) <= tci->offset\n+\t  return offset + POINTER_SIZE <= tci->offset\n \t         || (max_size != -1\n-\t\t     && tci->offset + GET_MODE_BITSIZE (Pmode) > offset + max_size)\n+\t\t     && tci->offset + POINTER_SIZE > offset + max_size)\n \t\t ? error_mark_node : NULL;\n \t}\n     }"}]}