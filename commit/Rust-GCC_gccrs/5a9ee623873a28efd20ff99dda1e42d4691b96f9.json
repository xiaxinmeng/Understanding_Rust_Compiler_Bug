{"sha": "5a9ee623873a28efd20ff99dda1e42d4691b96f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWE5ZWU2MjM4NzNhMjhlZmQyMGZmOTlkZGExZTQyZDQ2OTFiOTZmOQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2002-06-09T00:26:31Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2002-06-09T00:26:31Z"}, "message": "Makefile.in (LIBCPP_OBJS): Take out version.o.\n\n\t* Makefile.in (LIBCPP_OBJS): Take out version.o.\n\t* cpphash.h (cpp_reader): Take out print_version member.\n\t* cppinit.c: (cpp_handle_option): Don't do anything with\n\t-version.  Just set help_only for --version, --target-help.\n\tJust set verbose option for -v.\n\t(cpp_post_options): Don't print a version string.\n\nFrom-SVN: r54390", "tree": {"sha": "46ae35885239fcd62ec02bd8239fcf69d73945ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46ae35885239fcd62ec02bd8239fcf69d73945ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a9ee623873a28efd20ff99dda1e42d4691b96f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a9ee623873a28efd20ff99dda1e42d4691b96f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a9ee623873a28efd20ff99dda1e42d4691b96f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a9ee623873a28efd20ff99dda1e42d4691b96f9/comments", "author": null, "committer": null, "parents": [{"sha": "c16e5a3596f133f3812119d7d0ddfae30b117140", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c16e5a3596f133f3812119d7d0ddfae30b117140", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c16e5a3596f133f3812119d7d0ddfae30b117140"}], "stats": {"total": 59, "additions": 22, "deletions": 37}, "files": [{"sha": "411ed86e662d3645637a3140e227204e0b08514b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a9ee623873a28efd20ff99dda1e42d4691b96f9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a9ee623873a28efd20ff99dda1e42d4691b96f9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5a9ee623873a28efd20ff99dda1e42d4691b96f9", "patch": "@@ -1,3 +1,12 @@\n+2002-06-08  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* Makefile.in (LIBCPP_OBJS): Take out version.o.\n+\t* cpphash.h (cpp_reader): Take out print_version member.\n+\t* cppinit.c: (cpp_handle_option): Don't do anything with\n+\t-version.  Just set help_only for --version, --target-help.\n+\tJust set verbose option for -v.\n+\t(cpp_post_options): Don't print a version string.\n+\n 2002-06-08  Marek Michalkiewicz  <marekm@amelek.gda.pl>\n \n \t* config/avr/avr.c (TARGET_SECTION_TYPE_FLAGS): New.\n@@ -13,7 +22,7 @@\n 2002-06-08  Jason Thorpe  <thorpej@wasabisystems.com>\n \n \t* config/sh/sh.h (SUBTARGET_EXTRA_SPECS): Define empty\n-\tif not already defined. \n+\tif not already defined.\n \t(EXTRA_SPECS): Add SUBTARGET_EXTRA_SPECS.\n \n 2002-06-08  Marek Michalkiewicz  <marekm@amelek.gda.pl>\n@@ -39,8 +48,9 @@\n \t(LINK_SPEC, NETBSD_ENTRY_POINT): Define.\n \t(SUBTARGET_EXTRA_SPECS): Add netbsd_link_spec and netbsd_entry_point.\n \n-2002-06-08  Marc Espie  <espie@openbsd.org>                                   \n-\t* lists.c (free_list):  Fix typo in comment.                            \n+2002-06-08  Marc Espie  <espie@openbsd.org>\n+\n+\t* lists.c (free_list):  Fix typo in comment.\n \n 2002-06-08  Andreas Jaeger  <aj@suse.de>\n \n@@ -278,9 +288,9 @@ Thu Jun  6 07:17:43 2002  Nicola Pero  <n.pero@mi.flashnet.it>\n \n 2002-06-05  Jeffrey Law  <law@redhat.com>\n \n-        * pa.h (EXTRA_CONSTRAINT, T case): Further refine so that it\n-        rejects (mem (lo_sum (reg) (unspec))), but will allow\n-        (mem (lo_sum (reg) (symbol_ref)) for PA2.0.\n+\t* pa.h (EXTRA_CONSTRAINT, T case): Further refine so that it\n+\trejects (mem (lo_sum (reg) (unspec))), but will allow\n+\t(mem (lo_sum (reg) (symbol_ref)) for PA2.0.\n \n 2002-06-05  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n@@ -428,8 +438,8 @@ config/i386:\n \t* config/ia64/ia64.c (gen_thread_pointer): Fix variable name.\n \n 2002-06-04  Jeff Law <law@redhat.com.\n-            David Edelsohn <edelsohn@gnu.org>\n-            Michael Matz <matz@kde.org>\n+\t    David Edelsohn <edelsohn@gnu.org>\n+\t    Michael Matz <matz@kde.org>\n \n \t* sched-int.h (struct deps): New field libcall_block_tail_insn.\n \t* sched_deps.c (init_deps): Initialize libcall_block_tail_insn."}, {"sha": "24b016ff1f44004d3729b1b3ae40efc0dca900cd", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a9ee623873a28efd20ff99dda1e42d4691b96f9/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a9ee623873a28efd20ff99dda1e42d4691b96f9/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=5a9ee623873a28efd20ff99dda1e42d4691b96f9", "patch": "@@ -2072,7 +2072,7 @@ PREPROCESSOR_DEFINES = \\\n \n LIBCPP_OBJS =\tcpplib.o cpplex.o cppmacro.o cppexp.o cppfiles.o cpptrad.o \\\n \t\tcpphash.o cpperror.o cppinit.o cppdefault.o cppmain.o \\\n-\t\thashtable.o line-map.o mkdeps.o prefix.o version.o mbchar.o\n+\t\thashtable.o line-map.o mkdeps.o prefix.o mbchar.o\n \n LIBCPP_DEPS =\t$(CPPLIB_H) cpphash.h line-map.h hashtable.h intl.h \\\n \t\t$(OBSTACK_H) $(SYSTEM_H)"}, {"sha": "9a4915daf7235c61889c9c88e788700b30982157", "filename": "gcc/cpphash.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a9ee623873a28efd20ff99dda1e42d4691b96f9/gcc%2Fcpphash.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a9ee623873a28efd20ff99dda1e42d4691b96f9/gcc%2Fcpphash.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpphash.h?ref=5a9ee623873a28efd20ff99dda1e42d4691b96f9", "patch": "@@ -386,10 +386,6 @@ struct cpp_reader\n      preprocessor.  */\n   struct spec_nodes spec_nodes;\n \n-  /* Whether to print our version number.  Done this way so\n-     we don't get it twice for -v -version.  */\n-  unsigned char print_version;\n-\n   /* Whether cpplib owns the hashtable.  */\n   unsigned char our_hashtable;\n "}, {"sha": "466c7c582dd622fbf34a6b36e60ff30b085ac245", "filename": "gcc/cppinit.c", "status": "modified", "additions": 3, "deletions": 24, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a9ee623873a28efd20ff99dda1e42d4691b96f9/gcc%2Fcppinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a9ee623873a28efd20ff99dda1e42d4691b96f9/gcc%2Fcppinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppinit.c?ref=5a9ee623873a28efd20ff99dda1e42d4691b96f9", "patch": "@@ -1211,7 +1211,6 @@ new_pending_directive (pend, text, handler)\n   DEF_OPT(\"traditional-cpp\",\t      0,      OPT_traditional_cpp)            \\\n   DEF_OPT(\"trigraphs\",                0,      OPT_trigraphs)                  \\\n   DEF_OPT(\"v\",                        0,      OPT_v)                          \\\n-  DEF_OPT(\"version\",                  0,      OPT_version)                    \\\n   DEF_OPT(\"w\",                        0,      OPT_w)\n \n #define DEF_OPT(text, msg, code) code,\n@@ -1389,26 +1388,15 @@ cpp_handle_option (pfile, argc, argv)\n \tcase OPT_h:\n \tcase OPT__help:\n \t  print_help ();\n-\t  CPP_OPTION (pfile, help_only) = 1;\n-\t  break;\n+\t  /* fall through */\n \tcase OPT_target__help:\n-\t  /* Print if any target specific options. cpplib has none, but\n-\t     make sure help_only gets set.  */\n-\t  CPP_OPTION (pfile, help_only) = 1;\n-\t  break;\n-\n-\t  /* --version inhibits compilation, -version doesn't. -v means\n-\t     verbose and -version.  Historical reasons, don't ask.  */\n \tcase OPT__version:\n+\t  /* Nothing to do for these cases, but we need to be sure\n+\t     help_only is set.  */\n \t  CPP_OPTION (pfile, help_only) = 1;\n-\t  pfile->print_version = 1;\n \t  break;\n \tcase OPT_v:\n \t  CPP_OPTION (pfile, verbose) = 1;\n-\t  pfile->print_version = 1;\n-\t  break;\n-\tcase OPT_version:\n-\t  pfile->print_version = 1;\n \t  break;\n \n \tcase OPT_C:\n@@ -1771,15 +1759,6 @@ void\n cpp_post_options (pfile)\n      cpp_reader *pfile;\n {\n-  if (pfile->print_version)\n-    {\n-      fprintf (stderr, _(\"GNU CPP version %s (cpplib)\"), version_string);\n-#ifdef TARGET_VERSION\n-      TARGET_VERSION;\n-#endif\n-      fputc ('\\n', stderr);\n-    }\n-\n   /* Canonicalize in_fname and out_fname.  We guarantee they are not\n      NULL, and that the empty string represents stdin / stdout.  */\n   if (CPP_OPTION (pfile, in_fname) == NULL"}]}