{"sha": "fb6d0a04a724e911dbb14a042898b55230caa773", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmI2ZDBhMDRhNzI0ZTkxMWRiYjE0YTA0Mjg5OGI1NTIzMGNhYTc3Mw==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2007-02-09T15:28:13Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2007-02-09T15:28:13Z"}, "message": "* libiberty.h (pex_write_input): Remove prototype.\n\nFrom-SVN: r121755", "tree": {"sha": "2fa0d6044d8511b74024c0cefd08bc7dd834d258", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2fa0d6044d8511b74024c0cefd08bc7dd834d258"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb6d0a04a724e911dbb14a042898b55230caa773", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb6d0a04a724e911dbb14a042898b55230caa773", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb6d0a04a724e911dbb14a042898b55230caa773", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb6d0a04a724e911dbb14a042898b55230caa773/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c710c3ca66e758aa6570ecbd58de4dc92cf7329", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c710c3ca66e758aa6570ecbd58de4dc92cf7329", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c710c3ca66e758aa6570ecbd58de4dc92cf7329"}], "stats": {"total": 31, "additions": 4, "deletions": 27}, "files": [{"sha": "dc04f662427542409f34dffe31b2c13e0e7b69ba", "filename": "include/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb6d0a04a724e911dbb14a042898b55230caa773/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb6d0a04a724e911dbb14a042898b55230caa773/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=fb6d0a04a724e911dbb14a042898b55230caa773", "patch": "@@ -1,3 +1,7 @@\n+2007-02-09  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* libiberty.h (pex_write_input): Remove prototype.\n+\n 2007-01-31  Vladimir Prus  <vladimir@codesourcery.com>\n \t\n \t* libiberty.h (PEX_STDERR_TO_PIPE): New define."}, {"sha": "7a58b711c37df383e3a6bf6b5f91b09bd40f49dc", "filename": "include/libiberty.h", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb6d0a04a724e911dbb14a042898b55230caa773/include%2Flibiberty.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb6d0a04a724e911dbb14a042898b55230caa773/include%2Flibiberty.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Flibiberty.h?ref=fb6d0a04a724e911dbb14a042898b55230caa773", "patch": "@@ -485,33 +485,6 @@ extern const char *pex_run_in_environment (struct pex_obj *obj, int flags,\n               \t          \t\t   const char *outname,\n \t\t\t\t\t   const char *errname, int *err);\n \n-/* Return a `FILE' pointer FP for the standard input of the first\n-   program in the pipeline; FP is opened for writing.  You must have\n-   passed `PEX_USE_PIPES' to the `pex_init' call that returned OBJ.\n-   You must close FP yourself with `fclose' to indicate that the\n-   pipeline's input is complete.\n-\n-   The file descriptor underlying FP is marked not to be inherited by\n-   child processes.\n-\n-   This call is not supported on systems which do not support pipes;\n-   it returns with an error.  (We could implement it by writing a\n-   temporary file, but then you would need to write all your data and\n-   close FP before your first call to `pex_run' -- and that wouldn't\n-   work on systems that do support pipes: the pipe would fill up, and\n-   you would block.  So there isn't any easy way to conceal the\n-   differences between the two types of systems.)\n-\n-   If you call both `pex_write_input' and `pex_read_output', be\n-   careful to avoid deadlock.  If the output pipe fills up, so that\n-   each program in the pipeline is waiting for the next to read more\n-   data, and you fill the input pipe by writing more data to FP, then\n-   there is no way to make progress: the only process that could read\n-   data from the output pipe is you, but you are blocked on the input\n-   pipe.  */\n-\n-extern FILE *pex_write_input (struct pex_obj *obj, int binary);\n-\n /* Return a stream for a temporary file to pass to the first program\n    in the pipeline as input.  The file name is chosen as for pex_run.\n    pex_run closes the file automatically; don't close it yourself.  */"}]}