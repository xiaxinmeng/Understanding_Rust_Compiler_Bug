{"sha": "11fb784ac592567dbcb7874c27e67ee0feb8fbf0", "node_id": "C_kwDOANBUbNoAKDExZmI3ODRhYzU5MjU2N2RiY2I3ODc0YzI3ZTY3ZWUwZmViOGZiZjA", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2022-03-23T15:37:45Z"}, "committer": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2022-03-24T12:30:57Z"}, "message": "[libatomic] Fix return value in libat_test_and_set\n\nOn nvptx (using a Quadro K2000 with driver 470.103.01) I ran into this:\n...\nFAIL: gcc.dg/atomic/stdatomic-flag-2.c -O1 execution test\n...\nwhich mimimized to:\n...\n  #include <stdatomic.h>\n  atomic_flag a = ATOMIC_FLAG_INIT;\n  int main () {\n    if ((atomic_flag_test_and_set) (&a))\n      __builtin_abort ();\n    return 0;\n  }\n...\n\nThe atomic_flag_test_and_set is implemented using __atomic_test_and_set_1,\nwhich corresponds to the \"word-sized compare-and-swap loop\" version of\nlibat_test_and_set in libatomic/tas_n.c.\n\nThe semantics of a test-and-set is that the return value is \"true if and only\nif the previous contents were 'set'\".\n\nBut the code uses:\n...\n  return woldval != 0;\n...\nwhich means it doesn't look only at the byte that was either set or not set,\nbut at the entire word.\n\nFix this by using instead:\n...\n  return (woldval & ((UTYPE) ~(UTYPE) 0 << shift)) != 0;\n...\n\nTested on nvptx.\n\nlibatomic/ChangeLog:\n\n2022-03-24  Tom de Vries  <tdevries@suse.de>\n\n\tPR target/105011\n\t* tas_n.c (libat_test_and_set): Fix return value.", "tree": {"sha": "fc2e87f8bad1ff57287669a7b1406b8cdad7c10d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc2e87f8bad1ff57287669a7b1406b8cdad7c10d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11fb784ac592567dbcb7874c27e67ee0feb8fbf0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11fb784ac592567dbcb7874c27e67ee0feb8fbf0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11fb784ac592567dbcb7874c27e67ee0feb8fbf0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11fb784ac592567dbcb7874c27e67ee0feb8fbf0/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "568377743e22c1377d0aaa1ac9113da3ff1b6bd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/568377743e22c1377d0aaa1ac9113da3ff1b6bd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/568377743e22c1377d0aaa1ac9113da3ff1b6bd4"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "524312e7d8db4a1f12048e3a38c053f0e738224a", "filename": "libatomic/tas_n.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11fb784ac592567dbcb7874c27e67ee0feb8fbf0/libatomic%2Ftas_n.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11fb784ac592567dbcb7874c27e67ee0feb8fbf0/libatomic%2Ftas_n.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Ftas_n.c?ref=11fb784ac592567dbcb7874c27e67ee0feb8fbf0", "patch": "@@ -73,7 +73,7 @@ SIZE(libat_test_and_set) (UTYPE *mptr, int smodel)\n \t\t\t\t     __ATOMIC_RELAXED, __ATOMIC_RELAXED));\n \n   post_barrier (smodel);\n-  return woldval != 0;\n+  return (woldval & ((UTYPE) ~(UTYPE) 0 << shift)) != 0;\n }\n \n #define DONE 1"}]}