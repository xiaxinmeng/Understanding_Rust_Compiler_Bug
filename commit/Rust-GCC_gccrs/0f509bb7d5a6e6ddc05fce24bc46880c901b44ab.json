{"sha": "0f509bb7d5a6e6ddc05fce24bc46880c901b44ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGY1MDliYjdkNWE2ZTZkZGMwNWZjZTI0YmM0Njg4MGM5MDFiNDRhYg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-07-11T17:19:53Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-07-11T17:19:53Z"}, "message": "testsuite_allocator.h (propagating_allocator<>:: operator=(const propagating_allocator<>&)): Retun *this.\n\n2011-07-11  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* testsuite/util/testsuite_allocator.h (propagating_allocator<>::\n\toperator=(const propagating_allocator<>&)): Retun *this.\n\nFrom-SVN: r176169", "tree": {"sha": "f87448996ff9a4c3cb3ad6fc10e3c9741e578f57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f87448996ff9a4c3cb3ad6fc10e3c9741e578f57"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f509bb7d5a6e6ddc05fce24bc46880c901b44ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f509bb7d5a6e6ddc05fce24bc46880c901b44ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f509bb7d5a6e6ddc05fce24bc46880c901b44ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f509bb7d5a6e6ddc05fce24bc46880c901b44ab/comments", "author": null, "committer": null, "parents": [{"sha": "96ae7458c01e0a23c71b7809a850493a89f3ebe3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96ae7458c01e0a23c71b7809a850493a89f3ebe3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96ae7458c01e0a23c71b7809a850493a89f3ebe3"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "7ec671c7ba252872791952076f5dbf70616f9caa", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f509bb7d5a6e6ddc05fce24bc46880c901b44ab/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f509bb7d5a6e6ddc05fce24bc46880c901b44ab/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0f509bb7d5a6e6ddc05fce24bc46880c901b44ab", "patch": "@@ -1,3 +1,8 @@\n+2011-07-11  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* testsuite/util/testsuite_allocator.h (propagating_allocator<>::\n+\toperator=(const propagating_allocator<>&)): Retun *this.\n+\n 2011-07-09  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* include/Makefile.am: Add new header.\n@@ -24,10 +29,10 @@\n \tAdjust dg-error line numbers.\n \t* testsuite/23_containers/vector/requirements/dr438/insert_neg.cc:\n \tLikewise.\n-\t* testsuite/23_containers/vector/requirements/dr438/constructor_1_neg.cc:\n-\tLikewise.\n-\t* testsuite/23_containers/vector/requirements/dr438/constructor_2_neg.cc:\n-\tLikewise.\n+\t* testsuite/23_containers/vector/requirements/dr438/\n+\tconstructor_1_neg.cc: Likewise.\n+\t* testsuite/23_containers/vector/requirements/dr438/\n+\tconstructor_2_neg.cc: Likewise.\n \n 2011-07-09  Jonathan Wakely  <jwakely.gcc@gmail.com>\n "}, {"sha": "5ef5cdbffb9099063ed7ee0586800015de5c0b27", "filename": "libstdc++-v3/testsuite/util/testsuite_allocator.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f509bb7d5a6e6ddc05fce24bc46880c901b44ab/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f509bb7d5a6e6ddc05fce24bc46880c901b44ab/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_allocator.h?ref=0f509bb7d5a6e6ddc05fce24bc46880c901b44ab", "patch": "@@ -408,6 +408,7 @@ namespace __gnu_test\n   \t{\n \t  static_assert(P2, \"assigning propagating_allocator<T, true>\");\n \t  propagating_allocator(a).swap_base(*this);\n+\t  return *this;\n   \t}\n \n       // postcondition: a.get_personality() == 0"}]}