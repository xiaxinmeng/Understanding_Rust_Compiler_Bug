{"sha": "d2d8b2a70d792987761480ac14301816498a6454", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDJkOGIyYTcwZDc5Mjk4Nzc2MTQ4MGFjMTQzMDE4MTY0OThhNjQ1NA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-17T06:12:09Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-17T06:12:09Z"}, "message": "[multiple changes]\n\n2014-07-17  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch7.adb, exp_ch7.ads, sinfo.ads: Minor reformatting.\n\n2014-07-17  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_case.adb (Check_Choice_Set): If the case expression is the\n\texpression in a predicate, do not recheck coverage against itself,\n\tto prevent spurious errors.\n\t* sem_ch13.adb (Check_Aspect_At_End_Of_Declarations): Indicate that\n\texpression comes from an aspect specification, to prevent spurious\n\terrors when expression is a case expression in a predicate.\n\n2014-07-17  Pascal Obry  <obry@adacore.com>\n\n\t* adaint.c, adaint.h (__gnat_set_executable): Add mode parameter.\n\t* s-os_lib.ads, s-os_lib.adb (Set_Executable): Add Mode parameter.\n\n2014-07-17  Vincent Celier  <celier@adacore.com>\n\n\t* gnatchop.adb, make.adb, gnatbind.adb, clean.adb, gprep.adb,\n\tgnatxref.adb, gnatls.adb, gnatfind.adb, gnatname.adb: Do not output\n\tthe usage for an erroneous invocation of a gnat tool.\n\nFrom-SVN: r212716", "tree": {"sha": "dbf1a3f04bae9a8d171e9ca2a7b1aaec91d67569", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dbf1a3f04bae9a8d171e9ca2a7b1aaec91d67569"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2d8b2a70d792987761480ac14301816498a6454", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2d8b2a70d792987761480ac14301816498a6454", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2d8b2a70d792987761480ac14301816498a6454", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2d8b2a70d792987761480ac14301816498a6454/comments", "author": null, "committer": null, "parents": [{"sha": "3fad4d00acc3ccc59e4d028eb94d759e9ed4c55f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fad4d00acc3ccc59e4d028eb94d759e9ed4c55f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fad4d00acc3ccc59e4d028eb94d759e9ed4c55f"}], "stats": {"total": 226, "additions": 169, "deletions": 57}, "files": [{"sha": "e00a808e19fbeba2dac0c2cabf5565278b40e979", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d2d8b2a70d792987761480ac14301816498a6454", "patch": "@@ -1,3 +1,27 @@\n+2014-07-17  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch7.adb, exp_ch7.ads, sinfo.ads: Minor reformatting.\n+\n+2014-07-17  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_case.adb (Check_Choice_Set): If the case expression is the\n+\texpression in a predicate, do not recheck coverage against itself,\n+\tto prevent spurious errors.\n+\t* sem_ch13.adb (Check_Aspect_At_End_Of_Declarations): Indicate that\n+\texpression comes from an aspect specification, to prevent spurious\n+\terrors when expression is a case expression in a predicate.\n+\n+2014-07-17  Pascal Obry  <obry@adacore.com>\n+\n+\t* adaint.c, adaint.h (__gnat_set_executable): Add mode parameter.\n+\t* s-os_lib.ads, s-os_lib.adb (Set_Executable): Add Mode parameter.\n+\n+2014-07-17  Vincent Celier  <celier@adacore.com>\n+\n+\t* gnatchop.adb, make.adb, gnatbind.adb, clean.adb, gprep.adb,\n+\tgnatxref.adb, gnatls.adb, gnatfind.adb, gnatname.adb: Do not output\n+\tthe usage for an erroneous invocation of a gnat tool.\n+\n 2014-07-16  Vincent Celier  <celier@adacore.com>\n \n \t* gnatls.adb: Get the target parameters only if -nostdinc was"}, {"sha": "151f2e60b8752f27d840cc8842e48c5995b073e8", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=d2d8b2a70d792987761480ac14301816498a6454", "patch": "@@ -2332,8 +2332,13 @@ __gnat_set_writable (char *name)\n #endif\n }\n \n+/* must match definition in s-os_lib.ads */\n+#define S_OWNER  1\n+#define S_GROUP  2\n+#define S_OTHERS 4\n+\n void\n-__gnat_set_executable (char *name)\n+__gnat_set_executable (char *name, int mode)\n {\n #if defined (_WIN32) && !defined (RTX)\n   TCHAR wname [GNAT_MAX_PATH_LEN + 2];\n@@ -2349,7 +2354,12 @@ __gnat_set_executable (char *name)\n \n   if (GNAT_STAT (name, &statbuf) == 0)\n     {\n-      statbuf.st_mode = statbuf.st_mode | S_IXUSR;\n+      if (mode & S_OWNER)\n+        statbuf.st_mode = statbuf.st_mode | S_IXUSR;\n+      if (mode & S_GROUP)\n+        statbuf.st_mode = statbuf.st_mode | S_IXGRP;\n+      if (mode & S_OTHERS)\n+        statbuf.st_mode = statbuf.st_mode | S_IXOTH;\n       chmod (name, statbuf.st_mode);\n     }\n #endif"}, {"sha": "3c3e4760c70fb89fdf798c929c89dd4fa84c2010", "filename": "gcc/ada/adaint.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2Fadaint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2Fadaint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.h?ref=d2d8b2a70d792987761480ac14301816498a6454", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *          Copyright (C) 1992-2013, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2014, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -183,7 +183,7 @@ extern int    __gnat_is_symbolic_link_attr   (char *, struct file_attributes *);\n \n extern void   __gnat_set_non_writable              (char *name);\n extern void   __gnat_set_writable                  (char *name);\n-extern void   __gnat_set_executable                (char *name);\n+extern void   __gnat_set_executable                (char *name, int);\n extern void   __gnat_set_readable                  (char *name);\n extern void   __gnat_set_non_readable              (char *name);\n extern int    __gnat_is_symbolic_link\t\t   (char *name);"}, {"sha": "dd216cd571887d8d6f0ba9528fc9babf275fbc14", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=d2d8b2a70d792987761480ac14301816498a6454", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2003-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2003-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1460,11 +1460,16 @@ package body Clean is\n          end;\n       end if;\n \n-      --  If neither a project file nor an executable were specified, output\n-      --  the usage and exit.\n+      --  If neither a project file nor an executable were specified, exit\n+      --  displaying the usage if there were no arguments on the command line.\n \n       if Main_Project = No_Project and then Osint.Number_Of_Files = 0 then\n-         Usage;\n+         if Argument_Count = 0 then\n+            Usage;\n+         else\n+            Put_Line (\"type \"\"gnatclean --help\"\" for help\");\n+         end if;\n+\n          return;\n       end if;\n "}, {"sha": "060329411939a5ec3d76c1bf46d69a59c0f32514", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=d2d8b2a70d792987761480ac14301816498a6454", "patch": "@@ -3721,8 +3721,7 @@ package body Exp_Ch7 is\n \n          End_Lab := End_Label (HSS);\n          Block :=\n-           Make_Block_Statement (Loc,\n-             Handled_Statement_Sequence => HSS);\n+           Make_Block_Statement (Loc, Handled_Statement_Sequence => HSS);\n \n          --  Signal the finalization machinery that this particular block\n          --  contains the original context.\n@@ -7890,8 +7889,8 @@ package body Exp_Ch7 is\n \n    begin\n       if Present (SE.Actions_To_Be_Wrapped_After) then\n-         Insert_List_Before_And_Analyze (\n-          First (SE.Actions_To_Be_Wrapped_After), L);\n+         Insert_List_Before_And_Analyze\n+           (First (SE.Actions_To_Be_Wrapped_After), L);\n \n       else\n          SE.Actions_To_Be_Wrapped_After := L;\n@@ -7915,8 +7914,8 @@ package body Exp_Ch7 is\n \n    begin\n       if Present (SE.Actions_To_Be_Wrapped_Before) then\n-         Insert_List_After_And_Analyze (\n-           Last (SE.Actions_To_Be_Wrapped_Before), L);\n+         Insert_List_After_And_Analyze\n+           (Last (SE.Actions_To_Be_Wrapped_Before), L);\n \n       else\n          SE.Actions_To_Be_Wrapped_Before := L;"}, {"sha": "ba141cbe3f8ec1405f406b064f92126380ffb413", "filename": "gcc/ada/exp_ch7.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2Fexp_ch7.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2Fexp_ch7.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.ads?ref=d2d8b2a70d792987761480ac14301816498a6454", "patch": "@@ -295,11 +295,12 @@ package Exp_Ch7 is\n \n    procedure Store_Before_Actions_In_Scope (L : List_Id);\n    --  Append the list L of actions to the end of the before-actions store in\n-   --  the top of the scope stack.\n+   --  the top of the scope stack (also analyzes these actions).\n \n    procedure Store_After_Actions_In_Scope (L : List_Id);\n    --  Prepend the list L of actions to the beginning of the after-actions\n-   --  store in the top of the scope stack.\n+   --  stored in the top of the scope stack (also analyzes these actions).\n+   --  Why prepend rather than append ???\n \n    procedure Wrap_Transient_Declaration (N : Node_Id);\n    --  N is an object declaration. Expand the finalization calls after the"}, {"sha": "527fc4cae9d0bcf7adf2967cad9eb0e4285d926b", "filename": "gcc/ada/gnatbind.adb", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2Fgnatbind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2Fgnatbind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatbind.adb?ref=d2d8b2a70d792987761480ac14301816498a6454", "patch": "@@ -666,10 +666,15 @@ begin\n       Display_Version (\"GNATBIND\", \"1995\");\n    end if;\n \n-   --  Output usage information if no files\n+   --  Output usage information if no arguments\n \n    if not More_Lib_Files then\n-      Bindusg.Display;\n+      if Argument_Count = 0 then\n+         Bindusg.Display;\n+      else\n+         Write_Line (\"type \"\"gnatbind --help\"\" for help\");\n+      end if;\n+\n       Exit_Program (E_Fatal);\n    end if;\n "}, {"sha": "6017c563af106a9aea143a4584609fb134270952", "filename": "gcc/ada/gnatchop.adb", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2Fgnatchop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2Fgnatchop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatchop.adb?ref=d2d8b2a70d792987761480ac14301816498a6454", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1998-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1248,7 +1248,12 @@ procedure Gnatchop is\n       --  At least one filename must be given\n \n       elsif File.Last = 0 then\n-         Usage;\n+         if Argument_Count = 0 then\n+            Usage;\n+         else\n+            Put_Line (\"type \"\"gnatchop --help\"\" for help\");\n+         end if;\n+\n          return False;\n \n       --  No directory given, set directory to null, so that we can just"}, {"sha": "a09df21a9282b3cfc75349a32ff2855467c668c5", "filename": "gcc/ada/gnatfind.adb", "status": "modified", "additions": 18, "deletions": 7, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2Fgnatfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2Fgnatfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatfind.adb?ref=d2d8b2a70d792987761480ac14301816498a6454", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1998-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -30,6 +30,7 @@ with Types;    use Types;\n with Xr_Tabls; use Xr_Tabls;\n with Xref_Lib; use Xref_Lib;\n \n+with Ada.Command_Line;  use Ada.Command_Line;\n with Ada.Strings.Fixed; use Ada.Strings.Fixed;\n with Ada.Text_IO;       use Ada.Text_IO;\n \n@@ -227,7 +228,8 @@ procedure Gnatfind is\n                end if;\n \n             when others =>\n-               Write_Usage;\n+               Put_Line (\"type \"\"gnatfind --help\"\" for help\");\n+               raise Usage_Error;\n          end case;\n       end loop;\n \n@@ -266,16 +268,19 @@ procedure Gnatfind is\n       when GNAT.Command_Line.Invalid_Switch =>\n          Ada.Text_IO.Put_Line (\"Invalid switch : \"\n                                & GNAT.Command_Line.Full_Switch);\n-         Write_Usage;\n+         Put_Line (\"type \"\"gnatfind --help\"\" for help\");\n+         raise Usage_Error;\n \n       when GNAT.Command_Line.Invalid_Parameter =>\n          Ada.Text_IO.Put_Line (\"Parameter missing for : \"\n                                & GNAT.Command_Line.Full_Switch);\n-         Write_Usage;\n+         Put_Line (\"type \"\"gnatfind --help\"\" for help\");\n+         raise Usage_Error;\n \n       when Xref_Lib.Invalid_Argument =>\n          Ada.Text_IO.Put_Line (\"Invalid line or column in the pattern\");\n-         Write_Usage;\n+         Put_Line (\"type \"\"gnatfind --help\"\" for help\");\n+         raise Usage_Error;\n    end Parse_Cmd_Line;\n \n    -----------\n@@ -344,7 +349,12 @@ begin\n    Parse_Cmd_Line;\n \n    if not Have_Entity then\n-      Write_Usage;\n+      if Argument_Count = 0 then\n+         Write_Usage;\n+      else\n+         Put_Line (\"type \"\"gnatfind --help\"\" for help\");\n+         raise Usage_Error;\n+      end if;\n    end if;\n \n    --  Special case to speed things up: if the user has a command line of the\n@@ -372,7 +382,8 @@ begin\n       Ada.Text_IO.Put_Line (\"Error: for type hierarchy output you must \"\n                             & \"specify only one file.\");\n       Ada.Text_IO.New_Line;\n-      Write_Usage;\n+      Put_Line (\"type \"\"gnatfind --help\"\" for help\");\n+      raise Usage_Error;\n    end if;\n \n    Search (Pattern, Local_Symbols, Wide_Search, Read_Only,"}, {"sha": "4df2503bde081d476ecf98fdaf6fd16f510b31bc", "filename": "gcc/ada/gnatls.adb", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2Fgnatls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2Fgnatls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatls.adb?ref=d2d8b2a70d792987761480ac14301816498a6454", "patch": "@@ -45,6 +45,8 @@ with Switch;      use Switch;\n with Targparm;    use Targparm;\n with Types;       use Types;\n \n+with Ada.Command_Line; use Ada.Command_Line;\n+\n with GNAT.Case_Util; use GNAT.Case_Util;\n \n procedure Gnatls is\n@@ -1599,7 +1601,7 @@ begin\n       Set_Standard_Error;\n       Write_Str (\"Can't use -l with another switch\");\n       Write_Eol;\n-      Usage;\n+      Write_Line (\"type \"\"gnatls --help\"\" for help\");\n       Exit_Program (E_Fatal);\n    end if;\n \n@@ -1748,7 +1750,11 @@ begin\n \n    if not More_Lib_Files then\n       if not Print_Usage and then not Verbose_Mode then\n-         Usage;\n+         if Argument_Count = 0 then\n+            Usage;\n+         else\n+            Write_Line (\"type \"\"gnatls --help\"\" for help\");\n+         end if;\n       end if;\n \n       Exit_Program (E_Fatal);"}, {"sha": "efc842780c3532c1865d8c99edf84736b0e071ce", "filename": "gcc/ada/gnatname.adb", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2Fgnatname.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2Fgnatname.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatname.adb?ref=d2d8b2a70d792987761480ac14301816498a6454", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -289,7 +289,7 @@ procedure Gnatname is\n                       Patterns.Last\n                         (Arguments.Table (Arguments.Last).Foreign_Patterns) = 0\n                   then\n-                     Usage;\n+                     Put_Line (\"type \"\"gnatname --help\"\" for help\");\n                      return;\n                   end if;\n \n@@ -619,7 +619,12 @@ begin\n       and then\n       Patterns.Last (Arguments.Table (Arguments.Last).Foreign_Patterns) = 0\n    then\n-      Usage;\n+      if Argument_Count = 0 then\n+         Usage;\n+      else\n+         Put_Line (\"type \"\"gnatname --help\"\" for help\");\n+      end if;\n+\n       return;\n    end if;\n "}, {"sha": "2912b4f5db1815307ce795a15c61172ce6ec2869", "filename": "gcc/ada/gnatxref.adb", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2Fgnatxref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2Fgnatxref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatxref.adb?ref=d2d8b2a70d792987761480ac14301816498a6454", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1998-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -30,6 +30,7 @@ with Switch;   use Switch;\n with Xr_Tabls; use Xr_Tabls;\n with Xref_Lib; use Xref_Lib;\n \n+with Ada.Command_Line;  use Ada.Command_Line;\n with Ada.Strings.Fixed; use Ada.Strings.Fixed;\n with Ada.Text_IO;       use Ada.Text_IO;\n \n@@ -209,7 +210,8 @@ procedure Gnatxref is\n                end if;\n \n             when others =>\n-               Write_Usage;\n+               Put_Line (\"type \"\"gnatxref --help\"\" for help\");\n+               raise Usage_Error;\n          end case;\n       end loop;\n \n@@ -225,7 +227,8 @@ procedure Gnatxref is\n             if Ada.Strings.Fixed.Index (S, \":\") /= 0 then\n                Ada.Text_IO.Put_Line\n                  (\"Only file names are allowed on the command line\");\n-               Write_Usage;\n+               Put_Line (\"type \"\"gnatxref --help\"\" for help\");\n+               raise Usage_Error;\n             end if;\n \n             Add_Xref_File (S);\n@@ -237,12 +240,14 @@ procedure Gnatxref is\n       when GNAT.Command_Line.Invalid_Switch =>\n          Ada.Text_IO.Put_Line (\"Invalid switch : \"\n                                & GNAT.Command_Line.Full_Switch);\n-         Write_Usage;\n+         Put_Line (\"type \"\"gnatxref --help\"\" for help\");\n+         raise Usage_Error;\n \n       when GNAT.Command_Line.Invalid_Parameter =>\n          Ada.Text_IO.Put_Line (\"Parameter missing for : \"\n                                & GNAT.Command_Line.Full_Switch);\n-         Write_Usage;\n+         Put_Line (\"type \"\"gnatxref --help\"\" for help\");\n+         raise Usage_Error;\n    end Parse_Cmd_Line;\n \n    -----------\n@@ -296,7 +301,12 @@ begin\n    Parse_Cmd_Line;\n \n    if not Have_File then\n-      Write_Usage;\n+      if Argument_Count = 0 then\n+         Write_Usage;\n+      else\n+         Put_Line (\"type \"\"gnatxref --help\"\" for help\");\n+         raise Usage_Error;\n+      end if;\n    end if;\n \n    Xr_Tabls.Set_Default_Match (True);"}, {"sha": "63286cad1fc856ca5cfd91c8d5a825bbc5c3c2fb", "filename": "gcc/ada/gprep.adb", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2Fgprep.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2Fgprep.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgprep.adb?ref=d2d8b2a70d792987761480ac14301816498a6454", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2002-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2002-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -38,7 +38,8 @@ with Stringt;  use Stringt;\n with Switch;   use Switch;\n with Types;    use Types;\n \n-with Ada.Text_IO;     use Ada.Text_IO;\n+with Ada.Command_Line; use Ada.Command_Line;\n+with Ada.Text_IO;      use Ada.Text_IO;\n \n with GNAT.Case_Util;            use GNAT.Case_Util;\n with GNAT.Command_Line;\n@@ -205,14 +206,19 @@ package body GPrep is\n \n          --  No input file specified, just output the usage and exit\n \n-         Usage;\n+         if Argument_Count = 0 then\n+            Usage;\n+         else\n+            Put_Line (\"type \"\"gnatprep --help\"\" for help\");\n+         end if;\n+\n          return;\n \n       elsif Outfile_Name = No_Name then\n \n-         --  No output file specified, just output the usage and exit\n+         --  No output file specified, exit\n \n-         Usage;\n+         Put_Line (\"type \"\"gnatprep --help\"\" for help\");\n          return;\n       end if;\n \n@@ -767,7 +773,7 @@ package body GPrep is\n             when GNAT.Command_Line.Invalid_Switch =>\n                Write_Str (\"Invalid Switch: -\");\n                Write_Line (GNAT.Command_Line.Full_Switch);\n-               Usage;\n+               Put_Line (\"type \"\"gnatprep --help\"\" for help\");\n                OS_Exit (1);\n          end;\n       end loop;"}, {"sha": "15b6330142910614a393b44b46b1df3d7472d15b", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=d2d8b2a70d792987761480ac14301816498a6454", "patch": "@@ -5856,9 +5856,14 @@ package body Make is\n \n             Targparm.Get_Target_Parameters;\n \n-            --  Output usage information if no files to compile\n+            --  Output usage information if no argument on the command line\n+\n+            if Argument_Count = 0 then\n+               Usage;\n+            else\n+               Write_Line (\"type \"\"gnatmake --help\"\" for help\");\n+            end if;\n \n-            Usage;\n             Finish_Program (Project_Tree, E_Success);\n          end if;\n       end if;"}, {"sha": "6669b42f0cc5a2a3a704c2da4e141f11bd66b490", "filename": "gcc/ada/s-os_lib.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2Fs-os_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2Fs-os_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.adb?ref=d2d8b2a70d792987761480ac14301816498a6454", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1995-2013, AdaCore                     --\n+--                     Copyright (C) 1995-2014, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -2375,14 +2375,14 @@ package body System.OS_Lib is\n    -- Set_Executable --\n    --------------------\n \n-   procedure Set_Executable (Name : String) is\n-      procedure C_Set_Executable (Name : C_File_Name);\n+   procedure Set_Executable (Name : String; Mode : Positive := S_Owner) is\n+      procedure C_Set_Executable (Name : C_File_Name; Mode : Integer);\n       pragma Import (C, C_Set_Executable, \"__gnat_set_executable\");\n       C_Name : aliased String (Name'First .. Name'Last + 1);\n    begin\n       C_Name (Name'Range)  := Name;\n       C_Name (C_Name'Last) := ASCII.NUL;\n-      C_Set_Executable (C_Name (C_Name'First)'Address);\n+      C_Set_Executable (C_Name (C_Name'First)'Address, Mode);\n    end Set_Executable;\n \n    ----------------------"}, {"sha": "41989d9c202ab9de3f14602f984507163508bc33", "filename": "gcc/ada/s-os_lib.ads", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2Fs-os_lib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2Fs-os_lib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.ads?ref=d2d8b2a70d792987761480ac14301816498a6454", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1995-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1995-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -522,6 +522,10 @@ package System.OS_Lib is\n    --  contains the name of the file to which it is linked. Symbolic links may\n    --  span file systems and may refer to directories.\n \n+   S_Owner  : constant := 1;\n+   S_Group  : constant := 2;\n+   S_Others : constant := 4;\n+\n    procedure Set_Writable (Name : String);\n    --  Change permissions on the named file to make it writable for its owner\n \n@@ -533,7 +537,7 @@ package System.OS_Lib is\n    --  This renaming is provided for backwards compatibility with previous\n    --  versions. The use of Set_Non_Writable is preferred (clearer name).\n \n-   procedure Set_Executable (Name : String);\n+   procedure Set_Executable (Name : String; Mode : Positive := S_Owner);\n    --  Change permissions on the named file to make it executable for its owner\n \n    procedure Set_Readable (Name : String);"}, {"sha": "fc7dc44ef96e36fd19c9ac19f41a0c7bc7f3fea2", "filename": "gcc/ada/sem_case.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2Fsem_case.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2Fsem_case.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_case.adb?ref=d2d8b2a70d792987761480ac14301816498a6454", "patch": "@@ -662,6 +662,15 @@ package body Sem_Case is\n    --  Start of processing for Check_Choice_Set\n \n    begin\n+      --  If the case is part of a predicate aspect specification, do not\n+      --  recheck it against itself.\n+\n+      if Present (Parent (Case_Node))\n+        and then Nkind (Parent (Case_Node)) = N_Aspect_Specification\n+      then\n+         return;\n+      end if;\n+\n       --  Choice_Table must start at 0 which is an unused location used by the\n       --  sorting algorithm. However the first valid position for a discrete\n       --  choice is 1."}, {"sha": "7245306a343d710dfe2a7547fa24921c16ca48bc", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=d2d8b2a70d792987761480ac14301816498a6454", "patch": "@@ -8033,6 +8033,11 @@ package body Sem_Ch13 is\n       --  All other cases\n \n       else\n+         --  Indicate that the expression comes from an aspect specification,\n+         --  which is used in subsequent analysis even if expansion is off.\n+\n+         Set_Parent (End_Decl_Expr, ASN);\n+\n          --  In a generic context the aspect expressions have not been\n          --  preanalyzed, so do it now. There are no conformance checks\n          --  to perform in this case.\n@@ -8052,18 +8057,20 @@ package body Sem_Ch13 is\n             and then Is_Private_Type (T)\n          then\n             Preanalyze_Spec_Expression (End_Decl_Expr, Full_View (T));\n+\n          else\n             Preanalyze_Spec_Expression (End_Decl_Expr, T);\n          end if;\n \n          Err := not Fully_Conformant_Expressions (End_Decl_Expr, Freeze_Expr);\n       end if;\n \n-      --  Output error message if error\n+      --  Output error message if error. Force error on aspect specification\n+      --  even if there is an error on the expression itself.\n \n       if Err then\n          Error_Msg_NE\n-           (\"visibility of aspect for& changes after freeze point\",\n+           (\"!visibility of aspect for& changes after freeze point\",\n             ASN, Ent);\n          Error_Msg_NE\n            (\"info: & is frozen here, aspects evaluated at this point??\","}, {"sha": "be0e6498dd75c28cd1b0256a21b3e5732f0fc8c8", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d8b2a70d792987761480ac14301816498a6454/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=d2d8b2a70d792987761480ac14301816498a6454", "patch": "@@ -492,10 +492,10 @@ package Sinfo is\n    --  technical reasons it is impossible or very hard to have the original\n    --  structure properly decorated by semantic information, and the rewritten\n    --  structure fully reproduces the original source. Below is the (incomplete\n-   --  for the moment) list of such exceptions:\n+   --  for the moment???) list of such exceptions:\n    --\n-   --  * generic specifications and generic bodies;\n-   --  * function calls that use prefixed notation (Operand.Operation [(...)]);\n+   --    Generic specifications and generic bodies\n+   --    Function calls that use prefixed notation (Operand.Operation [(...)])\n \n    --  Representation Information\n "}]}