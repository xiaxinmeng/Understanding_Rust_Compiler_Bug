{"sha": "a1ae0cbd96f326debd929214ee78cf683fc6f2a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFhZTBjYmQ5NmYzMjZkZWJkOTI5MjE0ZWU3OGNmNjgzZmM2ZjJhNg==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2018-08-28T04:02:11Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2018-08-28T04:02:11Z"}, "message": "re PR tree-optimization/87110 ([9 Regresssion] tree check fail in to_wide, at tree.h:5523)\n\n\tPR tree-optimization/87110\n\t* tree-ssa-dse.c (compute_trims): Handle non-constant\n\tTYPE_SIZE_UNIT.\n\n\tPR tree-optimization/87110\n\t* gcc.c-torture/compile/pr87110.c: New test.\n\nFrom-SVN: r263906", "tree": {"sha": "f6c36d9521210e0db5f9a093aa271694d23bad4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6c36d9521210e0db5f9a093aa271694d23bad4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1ae0cbd96f326debd929214ee78cf683fc6f2a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1ae0cbd96f326debd929214ee78cf683fc6f2a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1ae0cbd96f326debd929214ee78cf683fc6f2a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1ae0cbd96f326debd929214ee78cf683fc6f2a6/comments", "author": null, "committer": null, "parents": [{"sha": "d1af2f668fb0fca982183265e1a56e23d4f25fa8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1af2f668fb0fca982183265e1a56e23d4f25fa8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1af2f668fb0fca982183265e1a56e23d4f25fa8"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "a85530438877319752db7221521adc04a9aefa3f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1ae0cbd96f326debd929214ee78cf683fc6f2a6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1ae0cbd96f326debd929214ee78cf683fc6f2a6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a1ae0cbd96f326debd929214ee78cf683fc6f2a6", "patch": "@@ -1,3 +1,9 @@\n+2018-08-27  Jeff Law  <law@redhat.com>\n+\n+\tPR tree-optimization/87110\n+\t* tree-ssa-dse.c (compute_trims): Handle non-constant\n+\tTYPE_SIZE_UNIT.\n+\n 2018-08-27  Martin Sebor  <msebor@redhat.com>\n \n \tPR tree-optimization/86914"}, {"sha": "6d85561ef839e747dcccb99e90e079bb9c25800e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1ae0cbd96f326debd929214ee78cf683fc6f2a6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1ae0cbd96f326debd929214ee78cf683fc6f2a6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a1ae0cbd96f326debd929214ee78cf683fc6f2a6", "patch": "@@ -1,3 +1,8 @@\n+2018-08-27  Jeff Law  <law@redhat.com>\n+\n+\tPR tree-optimization/87110\n+\t* gcc.c-torture/compile/pr87110.c: New test.\n+\n 2018-08-27  Martin Sebor  <msebor@redhat.com>\n \n \tPR tree-optimization/86914"}, {"sha": "8428d3d120a38ce0c1322e0f7a3bfa3467c7926b", "filename": "gcc/testsuite/gcc.c-torture/compile/pr87110.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1ae0cbd96f326debd929214ee78cf683fc6f2a6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr87110.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1ae0cbd96f326debd929214ee78cf683fc6f2a6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr87110.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr87110.c?ref=a1ae0cbd96f326debd929214ee78cf683fc6f2a6", "patch": "@@ -0,0 +1,13 @@\n+enum a { b, c };\n+struct d {\n+  _Bool e;\n+  enum a f\n+};\n+g, h;\n+i() {\n+  struct d j[h];\n+  j[0] = (struct d){.f = c};\n+  for (; g;)\n+    (struct d){};\n+}\n+"}, {"sha": "8b7aea0e54ee2a636866254142bd29d3a2c376f6", "filename": "gcc/tree-ssa-dse.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1ae0cbd96f326debd929214ee78cf683fc6f2a6/gcc%2Ftree-ssa-dse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1ae0cbd96f326debd929214ee78cf683fc6f2a6/gcc%2Ftree-ssa-dse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dse.c?ref=a1ae0cbd96f326debd929214ee78cf683fc6f2a6", "patch": "@@ -250,9 +250,13 @@ compute_trims (ao_ref *ref, sbitmap live, int *trim_head, int *trim_tail,\n       *trim_tail = last_orig - last_live;\n \n       /* But don't trim away out of bounds accesses, as this defeats\n-\t proper warnings.  */\n+\t proper warnings.\n+\n+\t We could have a type with no TYPE_SIZE_UNIT or we could have a VLA\n+\t where TYPE_SIZE_UNIT is not a constant.  */\n       if (*trim_tail\n \t  && TYPE_SIZE_UNIT (TREE_TYPE (ref->base))\n+\t  && TREE_CODE (TYPE_SIZE_UNIT (TREE_TYPE (ref->base))) == INTEGER_CST\n \t  && compare_tree_int (TYPE_SIZE_UNIT (TREE_TYPE (ref->base)),\n \t\t\t       last_orig) <= 0)\n \t*trim_tail = 0;"}]}