{"sha": "522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a", "node_id": "C_kwDOANBUbNoAKDUyMmQzODU4MzFiZjZjY2RjMzRhODJjMzcwMWViYWEyZTNiYzZiNmE", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2023-02-06T05:23:27Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-02-12T03:04:09Z"}, "message": "RISC-V: Add vzext.vf4 C++ API tests\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.target/riscv/rvv/base/vzext_vf4-1.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf4-2.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf4-3.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf4_mu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf4_mu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf4_mu-3.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf4_tu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf4_tu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf4_tu-3.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf4_tum-1.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf4_tum-2.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf4_tum-3.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf4_tumu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf4_tumu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf4_tumu-3.C: New test.", "tree": {"sha": "d8f6fdd6af51ba48d2fc1eebedeea82ba0a020a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8f6fdd6af51ba48d2fc1eebedeea82ba0a020a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "221f26c9624586b5cec6c5bb8c0a63e21359d1f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/221f26c9624586b5cec6c5bb8c0a63e21359d1f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/221f26c9624586b5cec6c5bb8c0a63e21359d1f6"}], "stats": {"total": 1224, "additions": 1224, "deletions": 0}, "files": [{"sha": "5875271fa88b508e2eb0eb36ed3f59b4d0c6603f", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf4-1.C", "status": "added", "additions": 132, "deletions": 0, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4-1.C?ref=522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a", "patch": "@@ -0,0 +1,132 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint32mf2_t test___riscv_vzext_vf4(vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(op1,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf4(vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(op1,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf4(vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(op1,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf4(vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(op1,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf4(vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(op1,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf4(vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(op1,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf4(vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(op1,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf4(vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(op1,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf4(vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(op1,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf4(vbool64_t mask,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(mask,op1,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf4(vbool32_t mask,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(mask,op1,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf4(vbool16_t mask,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(mask,op1,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf4(vbool8_t mask,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(mask,op1,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf4(vbool4_t mask,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(mask,op1,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf4(vbool64_t mask,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(mask,op1,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf4(vbool32_t mask,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(mask,op1,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf4(vbool16_t mask,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(mask,op1,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf4(vbool8_t mask,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(mask,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "270227840404fe1526a0d1c45caeb2ba1706e9c3", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf4-2.C", "status": "added", "additions": 132, "deletions": 0, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4-2.C?ref=522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a", "patch": "@@ -0,0 +1,132 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint32mf2_t test___riscv_vzext_vf4(vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(op1,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf4(vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(op1,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf4(vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(op1,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf4(vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(op1,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf4(vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(op1,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf4(vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(op1,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf4(vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(op1,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf4(vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(op1,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf4(vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(op1,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf4(vbool64_t mask,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(mask,op1,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf4(vbool32_t mask,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(mask,op1,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf4(vbool16_t mask,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(mask,op1,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf4(vbool8_t mask,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(mask,op1,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf4(vbool4_t mask,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(mask,op1,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf4(vbool64_t mask,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(mask,op1,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf4(vbool32_t mask,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(mask,op1,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf4(vbool16_t mask,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(mask,op1,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf4(vbool8_t mask,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(mask,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "a7f36a35cfba0e807314e10832da1196a5c8eb6b", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf4-3.C", "status": "added", "additions": 132, "deletions": 0, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4-3.C?ref=522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a", "patch": "@@ -0,0 +1,132 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint32mf2_t test___riscv_vzext_vf4(vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(op1,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf4(vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(op1,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf4(vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(op1,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf4(vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(op1,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf4(vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(op1,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf4(vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(op1,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf4(vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(op1,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf4(vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(op1,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf4(vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(op1,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vzext_vf4(vbool64_t mask,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(mask,op1,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf4(vbool32_t mask,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(mask,op1,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf4(vbool16_t mask,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(mask,op1,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf4(vbool8_t mask,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(mask,op1,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf4(vbool4_t mask,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(mask,op1,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf4(vbool64_t mask,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(mask,op1,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf4(vbool32_t mask,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(mask,op1,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf4(vbool16_t mask,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(mask,op1,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf4(vbool8_t mask,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4(mask,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "1692dfbdbeec177cdb771cfd10871d546d38808f", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf4_mu-1.C", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_mu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_mu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_mu-1.C?ref=522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint32mf2_t test___riscv_vzext_vf4_mu(vbool64_t mask,vuint32mf2_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf4_mu(vbool32_t mask,vuint32m1_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf4_mu(vbool16_t mask,vuint32m2_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf4_mu(vbool8_t mask,vuint32m4_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf4_mu(vbool4_t mask,vuint32m8_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf4_mu(vbool64_t mask,vuint64m1_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf4_mu(vbool32_t mask,vuint64m2_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf4_mu(vbool16_t mask,vuint64m4_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf4_mu(vbool8_t mask,vuint64m8_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "98dc58d13a39056eb079d0bf53411577bbd6ce5c", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf4_mu-2.C", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_mu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_mu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_mu-2.C?ref=522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint32mf2_t test___riscv_vzext_vf4_mu(vbool64_t mask,vuint32mf2_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf4_mu(vbool32_t mask,vuint32m1_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf4_mu(vbool16_t mask,vuint32m2_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf4_mu(vbool8_t mask,vuint32m4_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf4_mu(vbool4_t mask,vuint32m8_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf4_mu(vbool64_t mask,vuint64m1_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf4_mu(vbool32_t mask,vuint64m2_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf4_mu(vbool16_t mask,vuint64m4_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf4_mu(vbool8_t mask,vuint64m8_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_mu(mask,merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "2c205ef5c5e6992284dc7254cc60c461c3887b3b", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf4_mu-3.C", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_mu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_mu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_mu-3.C?ref=522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint32mf2_t test___riscv_vzext_vf4_mu(vbool64_t mask,vuint32mf2_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf4_mu(vbool32_t mask,vuint32m1_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf4_mu(vbool16_t mask,vuint32m2_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf4_mu(vbool8_t mask,vuint32m4_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf4_mu(vbool4_t mask,vuint32m8_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf4_mu(vbool64_t mask,vuint64m1_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf4_mu(vbool32_t mask,vuint64m2_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf4_mu(vbool16_t mask,vuint64m4_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf4_mu(vbool8_t mask,vuint64m8_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_mu(mask,merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "e37164c9b00cc29b1a6783b575ead74f5ab352d2", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf4_tu-1.C", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tu-1.C?ref=522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint32mf2_t test___riscv_vzext_vf4_tu(vuint32mf2_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tu(merge,op1,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf4_tu(vuint32m1_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tu(merge,op1,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf4_tu(vuint32m2_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tu(merge,op1,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf4_tu(vuint32m4_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tu(merge,op1,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf4_tu(vuint32m8_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tu(merge,op1,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf4_tu(vuint64m1_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tu(merge,op1,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf4_tu(vuint64m2_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tu(merge,op1,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf4_tu(vuint64m4_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tu(merge,op1,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf4_tu(vuint64m8_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tu(merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */"}, {"sha": "c0ad65324783f978ad2d9bf7b46e286a84223db9", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf4_tu-2.C", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tu-2.C?ref=522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint32mf2_t test___riscv_vzext_vf4_tu(vuint32mf2_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tu(merge,op1,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf4_tu(vuint32m1_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tu(merge,op1,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf4_tu(vuint32m2_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tu(merge,op1,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf4_tu(vuint32m4_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tu(merge,op1,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf4_tu(vuint32m8_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tu(merge,op1,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf4_tu(vuint64m1_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tu(merge,op1,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf4_tu(vuint64m2_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tu(merge,op1,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf4_tu(vuint64m4_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tu(merge,op1,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf4_tu(vuint64m8_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tu(merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */"}, {"sha": "9534e557bea2ea98485dafe904dcbb43f454bd7b", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf4_tu-3.C", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tu-3.C?ref=522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint32mf2_t test___riscv_vzext_vf4_tu(vuint32mf2_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tu(merge,op1,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf4_tu(vuint32m1_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tu(merge,op1,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf4_tu(vuint32m2_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tu(merge,op1,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf4_tu(vuint32m4_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tu(merge,op1,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf4_tu(vuint32m8_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tu(merge,op1,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf4_tu(vuint64m1_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tu(merge,op1,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf4_tu(vuint64m2_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tu(merge,op1,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf4_tu(vuint64m4_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tu(merge,op1,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf4_tu(vuint64m8_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tu(merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */"}, {"sha": "e4cecb10784d9efebccb33e7aa32ac1459d672b3", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf4_tum-1.C", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tum-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tum-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tum-1.C?ref=522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint32mf2_t test___riscv_vzext_vf4_tum(vbool64_t mask,vuint32mf2_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf4_tum(vbool32_t mask,vuint32m1_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf4_tum(vbool16_t mask,vuint32m2_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf4_tum(vbool8_t mask,vuint32m4_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf4_tum(vbool4_t mask,vuint32m8_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf4_tum(vbool64_t mask,vuint64m1_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf4_tum(vbool32_t mask,vuint64m2_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf4_tum(vbool16_t mask,vuint64m4_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf4_tum(vbool8_t mask,vuint64m8_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "ce6152107ea23c3c74063c1940ea891590aabac6", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf4_tum-2.C", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tum-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tum-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tum-2.C?ref=522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint32mf2_t test___riscv_vzext_vf4_tum(vbool64_t mask,vuint32mf2_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf4_tum(vbool32_t mask,vuint32m1_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf4_tum(vbool16_t mask,vuint32m2_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf4_tum(vbool8_t mask,vuint32m4_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf4_tum(vbool4_t mask,vuint32m8_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf4_tum(vbool64_t mask,vuint64m1_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf4_tum(vbool32_t mask,vuint64m2_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf4_tum(vbool16_t mask,vuint64m4_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf4_tum(vbool8_t mask,vuint64m8_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tum(mask,merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "c688e2f000179f21801a3d2d94f00326de16f768", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf4_tum-3.C", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tum-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tum-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tum-3.C?ref=522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint32mf2_t test___riscv_vzext_vf4_tum(vbool64_t mask,vuint32mf2_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf4_tum(vbool32_t mask,vuint32m1_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf4_tum(vbool16_t mask,vuint32m2_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf4_tum(vbool8_t mask,vuint32m4_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf4_tum(vbool4_t mask,vuint32m8_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf4_tum(vbool64_t mask,vuint64m1_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf4_tum(vbool32_t mask,vuint64m2_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf4_tum(vbool16_t mask,vuint64m4_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf4_tum(vbool8_t mask,vuint64m8_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tum(mask,merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "6f462f555bb8684503d5539e3f04f215a538478a", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf4_tumu-1.C", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tumu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tumu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tumu-1.C?ref=522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint32mf2_t test___riscv_vzext_vf4_tumu(vbool64_t mask,vuint32mf2_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf4_tumu(vbool32_t mask,vuint32m1_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf4_tumu(vbool16_t mask,vuint32m2_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf4_tumu(vbool8_t mask,vuint32m4_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf4_tumu(vbool4_t mask,vuint32m8_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf4_tumu(vbool64_t mask,vuint64m1_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf4_tumu(vbool32_t mask,vuint64m2_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf4_tumu(vbool16_t mask,vuint64m4_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf4_tumu(vbool8_t mask,vuint64m8_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "87bf15b394faf07905792f65aeadb9ac6d539003", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf4_tumu-2.C", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tumu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tumu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tumu-2.C?ref=522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint32mf2_t test___riscv_vzext_vf4_tumu(vbool64_t mask,vuint32mf2_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf4_tumu(vbool32_t mask,vuint32m1_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf4_tumu(vbool16_t mask,vuint32m2_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf4_tumu(vbool8_t mask,vuint32m4_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf4_tumu(vbool4_t mask,vuint32m8_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf4_tumu(vbool64_t mask,vuint64m1_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf4_tumu(vbool32_t mask,vuint64m2_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf4_tumu(vbool16_t mask,vuint64m4_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf4_tumu(vbool8_t mask,vuint64m8_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "4c19699db2a99c062fe40586705730bd27514807", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf4_tumu-3.C", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tumu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tumu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tumu-3.C?ref=522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint32mf2_t test___riscv_vzext_vf4_tumu(vbool64_t mask,vuint32mf2_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf4_tumu(vbool32_t mask,vuint32m1_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf4_tumu(vbool16_t mask,vuint32m2_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf4_tumu(vbool8_t mask,vuint32m4_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf4_tumu(vbool4_t mask,vuint32m8_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf4_tumu(vbool64_t mask,vuint64m1_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf4_tumu(vbool32_t mask,vuint64m2_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf4_tumu(vbool16_t mask,vuint64m4_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf4_tumu(vbool8_t mask,vuint64m8_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}]}