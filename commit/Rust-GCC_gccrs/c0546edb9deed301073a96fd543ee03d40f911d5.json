{"sha": "c0546edb9deed301073a96fd543ee03d40f911d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA1NDZlZGI5ZGVlZDMwMTA3M2E5NmZkNTQzZWUwM2Q0MGY5MTFkNQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2006-10-22T17:53:02Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2006-10-22T17:53:02Z"}, "message": "tmmintrin.h: Remove the duplicated content.\n\n2006-10-22  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* config/i386/tmmintrin.h: Remove the duplicated content.\n\nFrom-SVN: r117959", "tree": {"sha": "0d83b462c14fb9ceaca170aabff2e18018821b7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d83b462c14fb9ceaca170aabff2e18018821b7a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0546edb9deed301073a96fd543ee03d40f911d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0546edb9deed301073a96fd543ee03d40f911d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0546edb9deed301073a96fd543ee03d40f911d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0546edb9deed301073a96fd543ee03d40f911d5/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b1875f5291aa2c8765bd46efea03354a2288f447", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1875f5291aa2c8765bd46efea03354a2288f447", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1875f5291aa2c8765bd46efea03354a2288f447"}], "stats": {"total": 228, "additions": 4, "deletions": 224}, "files": [{"sha": "bbe1878cd8ef7466ad5a1fe87b211a0d5c7f8738", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0546edb9deed301073a96fd543ee03d40f911d5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0546edb9deed301073a96fd543ee03d40f911d5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c0546edb9deed301073a96fd543ee03d40f911d5", "patch": "@@ -1,3 +1,7 @@\n+2006-10-22  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/i386/tmmintrin.h: Remove the duplicated content.\n+\n 2006-10-22  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config.gcc (i[34567]86-*-*): Add tmmintrin.h to extra_headers."}, {"sha": "e53dd0f5c556a6b44db69af41ea1c617309c9e18", "filename": "gcc/config/i386/tmmintrin.h", "status": "modified", "additions": 0, "deletions": 224, "changes": 224, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0546edb9deed301073a96fd543ee03d40f911d5/gcc%2Fconfig%2Fi386%2Ftmmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0546edb9deed301073a96fd543ee03d40f911d5/gcc%2Fconfig%2Fi386%2Ftmmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ftmmintrin.h?ref=c0546edb9deed301073a96fd543ee03d40f911d5", "patch": "@@ -222,227 +222,3 @@ _mm_abs_pi32 (__m64 __X)\n #endif /* __SSSE3__ */\n \n #endif /* _TMMINTRIN_H_INCLUDED */\n-/* Copyright (C) 2006 Free Software Foundation, Inc.\n-\n-   This file is part of GCC.\n-\n-   GCC is free software; you can redistribute it and/or modify\n-   it under the terms of the GNU General Public License as published by\n-   the Free Software Foundation; either version 2, or (at your option)\n-   any later version.\n-\n-   GCC is distributed in the hope that it will be useful,\n-   but WITHOUT ANY WARRANTY; without even the implied warranty of\n-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-   GNU General Public License for more details.\n-\n-   You should have received a copy of the GNU General Public License\n-   along with GCC; see the file COPYING.  If not, write to\n-   the Free Software Foundation, 59 Temple Place - Suite 330,\n-   Boston, MA 02111-1307, USA.  */\n-\n-/* As a special exception, if you include this header file into source\n-   files compiled by GCC, this header file does not by itself cause\n-   the resulting executable to be covered by the GNU General Public\n-   License.  This exception does not however invalidate any other\n-   reasons why the executable file might be covered by the GNU General\n-   Public License.  */\n-\n-/* Implemented from the specification included in the Intel C++ Compiler\n-   User Guide and Reference, version 9.1.  */\n-\n-#ifndef _TMMINTRIN_H_INCLUDED\n-#define _TMMINTRIN_H_INCLUDED\n-\n-#ifdef __SSSE3__\n-#include <pmmintrin.h>\n-\n-static __inline __m128i __attribute__((__always_inline__))\n-_mm_hadd_epi16 (__m128i __X, __m128i __Y)\n-{\n-  return (__m128i) __builtin_ia32_phaddw128 ((__v8hi)__X, (__v8hi)__Y);\n-}\n-\n-static __inline __m128i __attribute__((__always_inline__))\n-_mm_hadd_epi32 (__m128i __X, __m128i __Y)\n-{\n-  return (__m128i) __builtin_ia32_phaddd128 ((__v4si)__X, (__v4si)__Y);\n-}\n-\n-static __inline __m128i __attribute__((__always_inline__))\n-_mm_hadds_epi16 (__m128i __X, __m128i __Y)\n-{\n-  return (__m128i) __builtin_ia32_phaddsw128 ((__v8hi)__X, (__v8hi)__Y);\n-}\n-\n-static __inline __m64 __attribute__((__always_inline__))\n-_mm_hadd_pi16 (__m64 __X, __m64 __Y)\n-{\n-  return (__m64) __builtin_ia32_phaddw ((__v4hi)__X, (__v4hi)__Y);\n-}\n-\n-static __inline __m64 __attribute__((__always_inline__))\n-_mm_hadd_pi32 (__m64 __X, __m64 __Y)\n-{\n-  return (__m64) __builtin_ia32_phaddd ((__v2si)__X, (__v2si)__Y);\n-}\n-\n-static __inline __m64 __attribute__((__always_inline__))\n-_mm_hadds_pi16 (__m64 __X, __m64 __Y)\n-{\n-  return (__m64) __builtin_ia32_phaddsw ((__v4hi)__X, (__v4hi)__Y);\n-}\n-\n-static __inline __m128i __attribute__((__always_inline__))\n-_mm_hsub_epi16 (__m128i __X, __m128i __Y)\n-{\n-  return (__m128i) __builtin_ia32_phsubw128 ((__v8hi)__X, (__v8hi)__Y);\n-}\n-\n-static __inline __m128i __attribute__((__always_inline__))\n-_mm_hsub_epi32 (__m128i __X, __m128i __Y)\n-{\n-  return (__m128i) __builtin_ia32_phsubd128 ((__v4si)__X, (__v4si)__Y);\n-}\n-\n-static __inline __m128i __attribute__((__always_inline__))\n-_mm_hsubs_epi16 (__m128i __X, __m128i __Y)\n-{\n-  return (__m128i) __builtin_ia32_phsubsw128 ((__v8hi)__X, (__v8hi)__Y);\n-}\n-\n-static __inline __m64 __attribute__((__always_inline__))\n-_mm_hsub_pi16 (__m64 __X, __m64 __Y)\n-{\n-  return (__m64) __builtin_ia32_phsubw ((__v4hi)__X, (__v4hi)__Y);\n-}\n-\n-static __inline __m64 __attribute__((__always_inline__))\n-_mm_hsub_pi32 (__m64 __X, __m64 __Y)\n-{\n-  return (__m64) __builtin_ia32_phsubd ((__v2si)__X, (__v2si)__Y);\n-}\n-\n-static __inline __m64 __attribute__((__always_inline__))\n-_mm_hsubs_pi16 (__m64 __X, __m64 __Y)\n-{\n-  return (__m64) __builtin_ia32_phsubsw ((__v4hi)__X, (__v4hi)__Y);\n-}\n-\n-static __inline __m128i __attribute__((__always_inline__))\n-_mm_maddubs_epi16 (__m128i __X, __m128i __Y)\n-{\n-  return (__m128i) __builtin_ia32_pmaddubsw128 ((__v16qi)__X, (__v16qi)__Y);\n-}\n-\n-static __inline __m64 __attribute__((__always_inline__))\n-_mm_maddubs_pi16 (__m64 __X, __m64 __Y)\n-{\n-  return (__m64) __builtin_ia32_pmaddubsw ((__v8qi)__X, (__v8qi)__Y);\n-}\n-\n-static __inline __m128i __attribute__((__always_inline__))\n-_mm_mulhrs_epi16 (__m128i __X, __m128i __Y)\n-{\n-  return (__m128i) __builtin_ia32_pmulhrsw128 ((__v8hi)__X, (__v8hi)__Y);\n-}\n-\n-static __inline __m64 __attribute__((__always_inline__))\n-_mm_mulhrs_pi16 (__m64 __X, __m64 __Y)\n-{\n-  return (__m64) __builtin_ia32_pmulhrsw ((__v4hi)__X, (__v4hi)__Y);\n-}\n-\n-static __inline __m128i __attribute__((__always_inline__))\n-_mm_shuffle_epi8 (__m128i __X, __m128i __Y)\n-{\n-  return (__m128i) __builtin_ia32_pshufb128 ((__v16qi)__X, (__v16qi)__Y);\n-}\n-\n-static __inline __m64 __attribute__((__always_inline__))\n-_mm_shuffle_pi8 (__m64 __X, __m64 __Y)\n-{\n-  return (__m64) __builtin_ia32_pshufb ((__v8qi)__X, (__v8qi)__Y);\n-}\n-\n-static __inline __m128i __attribute__((__always_inline__))\n-_mm_sign_epi8 (__m128i __X, __m128i __Y)\n-{\n-  return (__m128i) __builtin_ia32_psignb128 ((__v16qi)__X, (__v16qi)__Y);\n-}\n-\n-static __inline __m128i __attribute__((__always_inline__))\n-_mm_sign_epi16 (__m128i __X, __m128i __Y)\n-{\n-  return (__m128i) __builtin_ia32_psignw128 ((__v8hi)__X, (__v8hi)__Y);\n-}\n-\n-static __inline __m128i __attribute__((__always_inline__))\n-_mm_sign_epi32 (__m128i __X, __m128i __Y)\n-{\n-  return (__m128i) __builtin_ia32_psignd128 ((__v4si)__X, (__v4si)__Y);\n-}\n-\n-static __inline __m64 __attribute__((__always_inline__))\n-_mm_sign_pi8 (__m64 __X, __m64 __Y)\n-{\n-  return (__m64) __builtin_ia32_psignb ((__v8qi)__X, (__v8qi)__Y);\n-}\n-\n-static __inline __m64 __attribute__((__always_inline__))\n-_mm_sign_pi16 (__m64 __X, __m64 __Y)\n-{\n-  return (__m64) __builtin_ia32_psignw ((__v4hi)__X, (__v4hi)__Y);\n-}\n-\n-static __inline __m64 __attribute__((__always_inline__))\n-_mm_sign_pi32 (__m64 __X, __m64 __Y)\n-{\n-  return (__m64) __builtin_ia32_psignd ((__v2si)__X, (__v2si)__Y);\n-}\n-\n-#define _mm_alignr_epi8(__X, __Y, __N) \\\n-  ((__m128i)__builtin_ia32_palignr128 ((__v2di) __X, (__v2di) __Y, (__N) * 8))\n-\n-#define _mm_alignr_pi8(__X, __Y, __N) \\\n-  ((__m64)__builtin_ia32_palignr ((long long) (__X), (long long) (__Y), (__N) * 8))\n-\n-static __inline __m128i __attribute__((__always_inline__))\n-_mm_abs_epi8 (__m128i __X)\n-{\n-  return (__m128i) __builtin_ia32_pabsb128 ((__v16qi)__X);\n-}\n-\n-static __inline __m128i __attribute__((__always_inline__))\n-_mm_abs_epi16 (__m128i __X)\n-{\n-  return (__m128i) __builtin_ia32_pabsw128 ((__v8hi)__X);\n-}\n-\n-static __inline __m128i __attribute__((__always_inline__))\n-_mm_abs_epi32 (__m128i __X)\n-{\n-  return (__m128i) __builtin_ia32_pabsd128 ((__v4si)__X);\n-}\n-\n-static __inline __m64 __attribute__((__always_inline__))\n-_mm_abs_pi8 (__m64 __X)\n-{\n-  return (__m64) __builtin_ia32_pabsb ((__v8qi)__X);\n-}\n-\n-static __inline __m64 __attribute__((__always_inline__))\n-_mm_abs_pi16 (__m64 __X)\n-{\n-  return (__m64) __builtin_ia32_pabsw ((__v4hi)__X);\n-}\n-\n-static __inline __m64 __attribute__((__always_inline__))\n-_mm_abs_pi32 (__m64 __X)\n-{\n-  return (__m64) __builtin_ia32_pabsd ((__v2si)__X);\n-}\n-\n-#endif /* __SSSE3__ */\n-\n-#endif /* _TMMINTRIN_H_INCLUDED */"}]}