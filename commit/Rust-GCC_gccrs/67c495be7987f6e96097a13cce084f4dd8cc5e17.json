{"sha": "67c495be7987f6e96097a13cce084f4dd8cc5e17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdjNDk1YmU3OTg3ZjZlOTYwOTdhMTNjY2UwODRmNGRkOGNjNWUxNw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2010-11-18T11:03:14Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-11-18T11:03:14Z"}, "message": "formatter.h (__truth): Remove, unused.\n\n2010-11-18  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/debug/formatter.h (__truth): Remove, unused.\n\t(__is_same): Remove, include cpp_type_traits.h instead.\n\t(_Parameter::_Parameter(const _Safe_iterator<>&, const char*,\n\t_Is_iterator)): Adjust.\n\t* include/debug/safe_iterator.h (_Safe_iterator<>::_M_constant):\n\tLikewise.\n\nFrom-SVN: r166900", "tree": {"sha": "11da2b79076f9f70fa46e9904f0306798ca3ca7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11da2b79076f9f70fa46e9904f0306798ca3ca7f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67c495be7987f6e96097a13cce084f4dd8cc5e17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67c495be7987f6e96097a13cce084f4dd8cc5e17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67c495be7987f6e96097a13cce084f4dd8cc5e17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67c495be7987f6e96097a13cce084f4dd8cc5e17/comments", "author": null, "committer": null, "parents": [{"sha": "f3764768faee7d25f100e7d60e18c3fef25a65fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3764768faee7d25f100e7d60e18c3fef25a65fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3764768faee7d25f100e7d60e18c3fef25a65fb"}], "stats": {"total": 33, "additions": 14, "deletions": 19}, "files": [{"sha": "71e63c7a8cd3d891f8b25f165beb5aa49d7736a5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67c495be7987f6e96097a13cce084f4dd8cc5e17/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67c495be7987f6e96097a13cce084f4dd8cc5e17/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=67c495be7987f6e96097a13cce084f4dd8cc5e17", "patch": "@@ -1,3 +1,12 @@\n+2010-11-18  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/debug/formatter.h (__truth): Remove, unused.\n+\t(__is_same): Remove, include cpp_type_traits.h instead.\n+\t(_Parameter::_Parameter(const _Safe_iterator<>&, const char*,\n+\t_Is_iterator)): Adjust.\n+\t* include/debug/safe_iterator.h (_Safe_iterator<>::_M_constant):\n+\tLikewise.\n+\n 2010-11-17  Fran\u00e7ois Dumont  <francois.cppdevs@free.fr>\n \n \t* testsuite/lib/libstdc++.exp (check_v3_target_debug_mode): Clean"}, {"sha": "69f622abd92b03d8c08ebf8aadef7ceb0b88b69a", "filename": "libstdc++-v3/include/debug/formatter.h", "status": "modified", "additions": 4, "deletions": 18, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67c495be7987f6e96097a13cce084f4dd8cc5e17/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fformatter.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67c495be7987f6e96097a13cce084f4dd8cc5e17/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fformatter.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fformatter.h?ref=67c495be7987f6e96097a13cce084f4dd8cc5e17", "patch": "@@ -31,6 +31,7 @@\n #define _GLIBCXX_DEBUG_FORMATTER_H 1\n \n #include <bits/c++config.h>\n+#include <bits/cpp_type_traits.h>\n #include <typeinfo>\n \n namespace __gnu_debug\n@@ -40,21 +41,6 @@ namespace __gnu_debug\n   template<typename _Iterator>\n     bool __check_singular(_Iterator&);\n \n-  /** Determine if the two types are the same. */\n-  template<typename _Type1, typename _Type2>\n-    struct __is_same\n-    {\n-      static const bool value = false;\n-    };\n-\n-  template<typename _Type>\n-    struct __is_same<_Type, _Type>\n-    {\n-      static const bool value = true;\n-    };\n-\n-  template<bool> struct __truth { };\n-\n   class _Safe_sequence_base;\n \n   template<typename _Iterator, typename _Sequence>\n@@ -225,9 +211,9 @@ namespace __gnu_debug\n \t  _M_variant._M_iterator._M_type = 0;\n #endif\n \t  _M_variant._M_iterator._M_constness =\n-\t    __is_same<_Safe_iterator<_Iterator, _Sequence>,\n-\t                         typename _Sequence::iterator>::\n-\t      value? __mutable_iterator : __const_iterator;\n+\t    std::__are_same<_Safe_iterator<_Iterator, _Sequence>,\n+\t                    typename _Sequence::iterator>::\n+\t      __value ? __mutable_iterator : __const_iterator;\n \t  _M_variant._M_iterator._M_sequence = __it._M_get_sequence();\n #ifdef __GXX_RTTI\n \t  _M_variant._M_iterator._M_seq_type = &typeid(_Sequence);"}, {"sha": "4bcca092826560ea963b0a01d19493a1f80b6e59", "filename": "libstdc++-v3/include/debug/safe_iterator.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67c495be7987f6e96097a13cce084f4dd8cc5e17/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67c495be7987f6e96097a13cce084f4dd8cc5e17/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_iterator.h?ref=67c495be7987f6e96097a13cce084f4dd8cc5e17", "patch": "@@ -95,7 +95,7 @@ namespace __gnu_debug\n       _M_constant() const\n       {\n \ttypedef typename _Sequence::const_iterator const_iterator;\n-\treturn __is_same<const_iterator, _Safe_iterator>::value;\n+\treturn std::__are_same<const_iterator, _Safe_iterator>::__value;\n       }\n \n       typedef std::iterator_traits<_Iterator> _Traits;"}]}