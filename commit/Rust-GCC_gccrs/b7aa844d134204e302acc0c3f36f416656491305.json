{"sha": "b7aa844d134204e302acc0c3f36f416656491305", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjdhYTg0NGQxMzQyMDRlMzAyYWNjMGMzZjM2ZjQxNjY1NjQ5MTMwNQ==", "commit": {"author": {"name": "Matthias Klose", "email": "doko@ubuntu.com", "date": "2017-01-13T12:10:39Z"}, "committer": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2017-01-13T12:10:39Z"}, "message": "2017-01-13  Matthias Klose  <doko@ubuntu.com>\n\n        * Import zlib 1.2.10.\n        * configure: Regenerate.\n\nFrom-SVN: r244429", "tree": {"sha": "9dc36718c039f9b387af813329eb2b4c17b149e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9dc36718c039f9b387af813329eb2b4c17b149e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7aa844d134204e302acc0c3f36f416656491305", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7aa844d134204e302acc0c3f36f416656491305", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7aa844d134204e302acc0c3f36f416656491305", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7aa844d134204e302acc0c3f36f416656491305/comments", "author": {"login": "doko42", "id": 11258518, "node_id": "MDQ6VXNlcjExMjU4NTE4", "avatar_url": "https://avatars.githubusercontent.com/u/11258518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doko42", "html_url": "https://github.com/doko42", "followers_url": "https://api.github.com/users/doko42/followers", "following_url": "https://api.github.com/users/doko42/following{/other_user}", "gists_url": "https://api.github.com/users/doko42/gists{/gist_id}", "starred_url": "https://api.github.com/users/doko42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doko42/subscriptions", "organizations_url": "https://api.github.com/users/doko42/orgs", "repos_url": "https://api.github.com/users/doko42/repos", "events_url": "https://api.github.com/users/doko42/events{/privacy}", "received_events_url": "https://api.github.com/users/doko42/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2252a8025df20cb5c58659cde04ac0ee0eee3ee1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2252a8025df20cb5c58659cde04ac0ee0eee3ee1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2252a8025df20cb5c58659cde04ac0ee0eee3ee1"}], "stats": {"total": 10140, "additions": 8401, "deletions": 1739}, "files": [{"sha": "1a954a640388ff9579b3250c86db6dc436ef687e", "filename": "zlib/CMakeLists.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2FCMakeLists.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2FCMakeLists.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2FCMakeLists.txt?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -3,7 +3,7 @@ set(CMAKE_ALLOW_LOOSE_LOOP_CONSTRUCTS ON)\n \n project(zlib C)\n \n-set(VERSION \"1.2.8\")\n+set(VERSION \"1.2.10\")\n \n option(ASM686 \"Enable building i686 assembly implementation\")\n option(AMD64 \"Enable building amd64 assembly implementation\")"}, {"sha": "7b3da232ac5e325c89780452e0a2b3a157b76e64", "filename": "zlib/ChangeLog", "status": "modified", "additions": 44, "deletions": 5, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2FChangeLog?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,10 +1,49 @@\n \n                 ChangeLog file for zlib\n \n+Changes in 1.2.10 (2 Jan 2017)\n+- Avoid warnings on snprintf() return value\n+- Fix bug in deflate_stored() for zero-length input\n+- Fix bug in gzwrite.c that produced corrupt gzip files\n+- Remove files to be installed before copying them in Makefile.in\n+- Add warnings when compiling with assembler code\n+\n+Changes in 1.2.9 (31 Dec 2016)\n+- Fix contrib/minizip to permit unzipping with desktop API [Zouzou]\n+- Improve contrib/blast to return unused bytes\n+- Assure that gzoffset() is correct when appending\n+- Improve compress() and uncompress() to support large lengths\n+- Fix bug in test/example.c where error code not saved\n+- Remedy Coverity warning [Randers-Pehrson]\n+- Improve speed of gzprintf() in transparent mode\n+- Fix inflateInit2() bug when windowBits is 16 or 32\n+- Change DEBUG macro to ZLIB_DEBUG\n+- Avoid uninitialized access by gzclose_w()\n+- Allow building zlib outside of the source directory\n+- Fix bug that accepted invalid zlib header when windowBits is zero\n+- Fix gzseek() problem on MinGW due to buggy _lseeki64 there\n+- Loop on write() calls in gzwrite.c in case of non-blocking I/O\n+- Add --warn (-w) option to ./configure for more compiler warnings\n+- Reject a window size of 256 bytes if not using the zlib wrapper\n+- Fix bug when level 0 used with Z_HUFFMAN or Z_RLE\n+- Add --debug (-d) option to ./configure to define ZLIB_DEBUG\n+- Fix bugs in creating a very large gzip header\n+- Add uncompress2() function, which returns the input size used\n+- Assure that deflateParams() will not switch functions mid-block\n+- Dramatically speed up deflation for level 0 (storing)\n+- Add gzfread(), duplicating the interface of fread()\n+- Add gzfwrite(), duplicating the interface of fwrite()\n+- Add deflateGetDictionary() function\n+- Use snprintf() for later versions of Microsoft C\n+- Fix *Init macros to use z_ prefix when requested\n+- Replace as400 with os400 for OS/400 support [Monnerat]\n+- Add crc32_z() and adler32_z() functions with size_t lengths\n+- Update Visual Studio project files [AraHaan]\n+\n Changes in 1.2.8 (28 Apr 2013)\n - Update contrib/minizip/iowin32.c for Windows RT [Vollant]\n - Do not force Z_CONST for C++\n-- Clean up contrib/vstudio [Ro\ufffd]\n+- Clean up contrib/vstudio [Ro\u00df]\n - Correct spelling error in zlib.h\n - Fix mixed line endings in contrib/vstudio\n \n@@ -34,7 +73,7 @@ Changes in 1.2.7.1 (24 Mar 2013)\n - Clean up the usage of z_const and respect const usage within zlib\n - Clean up examples/gzlog.[ch] comparisons of different types\n - Avoid shift equal to bits in type (caused endless loop)\n-- Fix unintialized value bug in gzputc() introduced by const patches\n+- Fix uninitialized value bug in gzputc() introduced by const patches\n - Fix memory allocation error in examples/zran.c [Nor]\n - Fix bug where gzopen(), gzclose() would write an empty file\n - Fix bug in gzclose() when gzwrite() runs out of memory\n@@ -194,7 +233,7 @@ Changes in 1.2.5.2 (17 Dec 2011)\n - Add a transparent write mode to gzopen() when 'T' is in the mode\n - Update python link in zlib man page\n - Get inffixed.h and MAKEFIXED result to match\n-- Add a ./config --solo option to make zlib subset with no libary use\n+- Add a ./config --solo option to make zlib subset with no library use\n - Add undocumented inflateResetKeep() function for CAB file decoding\n - Add --cover option to ./configure for gcc coverage testing\n - Add #define ZLIB_CONST option to use const in the z_stream interface\n@@ -564,7 +603,7 @@ Changes in 1.2.3.1 (16 August 2006)\n - Update make_vms.com [Zinser]\n - Use -fPIC for shared build in configure [Teredesai, Nicholson]\n - Use only major version number for libz.so on IRIX and OSF1 [Reinholdtsen]\n-- Use fdopen() (not _fdopen()) for Interix in zutil.h [B\ufffdck]\n+- Use fdopen() (not _fdopen()) for Interix in zutil.h [B\u00e4ck]\n - Add some FAQ entries about the contrib directory\n - Update the MVS question in the FAQ\n - Avoid extraneous reads after EOF in gzio.c [Brown]\n@@ -1267,7 +1306,7 @@ Changes in 1.0.1 (20 May 96) [1.0 skipped to avoid confusion]\n - fix array overlay in deflate.c which sometimes caused bad compressed data\n - fix inflate bug with empty stored block\n - fix MSDOS medium model which was broken in 0.99\n-- fix deflateParams() which could generated bad compressed data.\n+- fix deflateParams() which could generate bad compressed data.\n - Bytef is define'd instead of typedef'ed (work around Borland bug)\n - added an INDEX file\n - new makefiles for DJGPP (Makefile.dj2), 32-bit Borland (Makefile.b32),"}, {"sha": "93bb7a3eb1521a958876ba733ec3a1de1142de62", "filename": "zlib/ChangeLog.gcj", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2FChangeLog.gcj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2FChangeLog.gcj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2FChangeLog.gcj?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,3 +1,8 @@\n+2017-01-13  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* Import zlib 1.2.10.\n+\t* configure: Regenerate.\n+\n 2016-11-15  Matthias Klose  <doko@ubuntu.com>\n \n \t* configure: Regenerate."}, {"sha": "92f8070ca627ce382fda704840d77ab94e07a71e", "filename": "zlib/README", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2FREADME?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -3,7 +3,7 @@ shipped with GCC as convenience.\n \n ZLIB DATA COMPRESSION LIBRARY\n \n-zlib 1.2.8 is a general purpose data compression library.  All the code is\n+zlib 1.2.10 is a general purpose data compression library.  All the code is\n thread safe.  The data format used by the zlib library is described by RFCs\n (Request for Comments) 1950 to 1952 in the files\n http://tools.ietf.org/html/rfc1950 (zlib format), rfc1951 (deflate format) and\n@@ -34,7 +34,7 @@ Mark Nelson <markn@ieee.org> wrote an article about zlib for the Jan.  1997\n issue of Dr.  Dobb's Journal; a copy of the article is available at\n http://marknelson.us/1997/01/01/zlib-engine/ .\n \n-The changes made in version 1.2.8 are documented in the file ChangeLog.\n+The changes made in version 1.2.10 are documented in the file ChangeLog.\n \n Unsupported third party contributions are provided in directory contrib/ .\n \n@@ -87,7 +87,7 @@ Acknowledgments:\n \n Copyright notice:\n \n- (C) 1995-2013 Jean-loup Gailly and Mark Adler\n+ (C) 1995-2017 Jean-loup Gailly and Mark Adler\n \n   This software is provided 'as-is', without any express or implied\n   warranty.  In no event will the authors be held liable for any damages"}, {"sha": "b3d35e2a891b9dfd14ffecf79bf202c58659b986", "filename": "zlib/adler32.c", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fadler32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fadler32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fadler32.c?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,17 +1,15 @@\n /* adler32.c -- compute the Adler-32 checksum of a data stream\n- * Copyright (C) 1995-2011 Mark Adler\n+ * Copyright (C) 1995-2011, 2016 Mark Adler\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n /* @(#) $Id: adler32.c,v 1.1.1.2 2002/03/11 21:53:23 tromey Exp $ */\n \n #include \"zutil.h\"\n \n-#define local static\n-\n local uLong adler32_combine_ OF((uLong adler1, uLong adler2, z_off64_t len2));\n \n-#define BASE 65521      /* largest prime smaller than 65536 */\n+#define BASE 65521U     /* largest prime smaller than 65536 */\n #define NMAX 5552\n /* NMAX is the largest n such that 255n(n+1)/2 + (n+1)(BASE-1) <= 2^32-1 */\n \n@@ -62,10 +60,10 @@ local uLong adler32_combine_ OF((uLong adler1, uLong adler2, z_off64_t len2));\n #endif\n \n /* ========================================================================= */\n-uLong ZEXPORT adler32(adler, buf, len)\n+uLong ZEXPORT adler32_z(adler, buf, len)\n     uLong adler;\n     const Bytef *buf;\n-    uInt len;\n+    z_size_t len;\n {\n     unsigned long sum2;\n     unsigned n;\n@@ -132,6 +130,15 @@ uLong ZEXPORT adler32(adler, buf, len)\n     return adler | (sum2 << 16);\n }\n \n+/* ========================================================================= */\n+uLong ZEXPORT adler32(adler, buf, len)\n+    uLong adler;\n+    const Bytef *buf;\n+    uInt len;\n+{\n+    return adler32_z(adler, buf, len);\n+}\n+\n /* ========================================================================= */\n local uLong adler32_combine_(adler1, adler2, len2)\n     uLong adler1;\n@@ -156,7 +163,7 @@ local uLong adler32_combine_(adler1, adler2, len2)\n     sum2 += ((adler1 >> 16) & 0xffff) + ((adler2 >> 16) & 0xffff) + BASE - rem;\n     if (sum1 >= BASE) sum1 -= BASE;\n     if (sum1 >= BASE) sum1 -= BASE;\n-    if (sum2 >= (BASE << 1)) sum2 -= (BASE << 1);\n+    if (sum2 >= ((unsigned long)BASE << 1)) sum2 -= ((unsigned long)BASE << 1);\n     if (sum2 >= BASE) sum2 -= BASE;\n     return sum1 | (sum2 << 16);\n }"}, {"sha": "98814fd4c145714602656d17c47eb0dbe0f53d8b", "filename": "zlib/as400/bndsrc", "status": "removed", "additions": 0, "deletions": 215, "changes": 215, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2252a8025df20cb5c58659cde04ac0ee0eee3ee1/zlib%2Fas400%2Fbndsrc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2252a8025df20cb5c58659cde04ac0ee0eee3ee1/zlib%2Fas400%2Fbndsrc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fas400%2Fbndsrc?ref=2252a8025df20cb5c58659cde04ac0ee0eee3ee1", "patch": "@@ -1,215 +0,0 @@\n-STRPGMEXP PGMLVL(*CURRENT) SIGNATURE('ZLIB')\n-\n-/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/\n-/*   Version 1.1.3 entry points.                                    */\n-/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/\n-\n-/********************************************************************/\n-/*   *MODULE      ADLER32      ZLIB         01/02/01  00:15:09      */\n-/********************************************************************/\n-\n-  EXPORT SYMBOL(\"adler32\")\n-\n-/********************************************************************/\n-/*   *MODULE      COMPRESS     ZLIB         01/02/01  00:15:09      */\n-/********************************************************************/\n-\n-  EXPORT SYMBOL(\"compress\")\n-  EXPORT SYMBOL(\"compress2\")\n-\n-/********************************************************************/\n-/*   *MODULE      CRC32        ZLIB         01/02/01  00:15:09      */\n-/********************************************************************/\n-\n-  EXPORT SYMBOL(\"crc32\")\n-  EXPORT SYMBOL(\"get_crc_table\")\n-\n-/********************************************************************/\n-/*   *MODULE      DEFLATE      ZLIB         01/02/01  00:15:09      */\n-/********************************************************************/\n-\n-  EXPORT SYMBOL(\"deflate\")\n-  EXPORT SYMBOL(\"deflateEnd\")\n-  EXPORT SYMBOL(\"deflateSetDictionary\")\n-  EXPORT SYMBOL(\"deflateCopy\")\n-  EXPORT SYMBOL(\"deflateReset\")\n-  EXPORT SYMBOL(\"deflateParams\")\n-  EXPORT SYMBOL(\"deflatePrime\")\n-  EXPORT SYMBOL(\"deflateInit_\")\n-  EXPORT SYMBOL(\"deflateInit2_\")\n-\n-/********************************************************************/\n-/*   *MODULE      GZIO         ZLIB         01/02/01  00:15:09      */\n-/********************************************************************/\n-\n-  EXPORT SYMBOL(\"gzopen\")\n-  EXPORT SYMBOL(\"gzdopen\")\n-  EXPORT SYMBOL(\"gzsetparams\")\n-  EXPORT SYMBOL(\"gzread\")\n-  EXPORT SYMBOL(\"gzwrite\")\n-  EXPORT SYMBOL(\"gzprintf\")\n-  EXPORT SYMBOL(\"gzputs\")\n-  EXPORT SYMBOL(\"gzgets\")\n-  EXPORT SYMBOL(\"gzputc\")\n-  EXPORT SYMBOL(\"gzgetc\")\n-  EXPORT SYMBOL(\"gzflush\")\n-  EXPORT SYMBOL(\"gzseek\")\n-  EXPORT SYMBOL(\"gzrewind\")\n-  EXPORT SYMBOL(\"gztell\")\n-  EXPORT SYMBOL(\"gzeof\")\n-  EXPORT SYMBOL(\"gzclose\")\n-  EXPORT SYMBOL(\"gzerror\")\n-\n-/********************************************************************/\n-/*   *MODULE      INFLATE      ZLIB         01/02/01  00:15:09      */\n-/********************************************************************/\n-\n-  EXPORT SYMBOL(\"inflate\")\n-  EXPORT SYMBOL(\"inflateEnd\")\n-  EXPORT SYMBOL(\"inflateSetDictionary\")\n-  EXPORT SYMBOL(\"inflateSync\")\n-  EXPORT SYMBOL(\"inflateReset\")\n-  EXPORT SYMBOL(\"inflateInit_\")\n-  EXPORT SYMBOL(\"inflateInit2_\")\n-  EXPORT SYMBOL(\"inflateSyncPoint\")\n-\n-/********************************************************************/\n-/*   *MODULE      UNCOMPR      ZLIB         01/02/01  00:15:09      */\n-/********************************************************************/\n-\n-  EXPORT SYMBOL(\"uncompress\")\n-\n-/********************************************************************/\n-/*   *MODULE      ZUTIL        ZLIB         01/02/01  00:15:09      */\n-/********************************************************************/\n-\n-  EXPORT SYMBOL(\"zlibVersion\")\n-  EXPORT SYMBOL(\"zError\")\n-\n-/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/\n-/*   Version 1.2.1 additional entry points.                         */\n-/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/\n-\n-/********************************************************************/\n-/*   *MODULE      COMPRESS     ZLIB         01/02/01  00:15:09      */\n-/********************************************************************/\n-\n-  EXPORT SYMBOL(\"compressBound\")\n-\n-/********************************************************************/\n-/*   *MODULE      DEFLATE      ZLIB         01/02/01  00:15:09      */\n-/********************************************************************/\n-\n-  EXPORT SYMBOL(\"deflateBound\")\n-\n-/********************************************************************/\n-/*   *MODULE      GZIO         ZLIB         01/02/01  00:15:09      */\n-/********************************************************************/\n-\n-  EXPORT SYMBOL(\"gzungetc\")\n-  EXPORT SYMBOL(\"gzclearerr\")\n-\n-/********************************************************************/\n-/*   *MODULE      INFBACK      ZLIB         01/02/01  00:15:09      */\n-/********************************************************************/\n-\n-  EXPORT SYMBOL(\"inflateBack\")\n-  EXPORT SYMBOL(\"inflateBackEnd\")\n-  EXPORT SYMBOL(\"inflateBackInit_\")\n-\n-/********************************************************************/\n-/*   *MODULE      INFLATE      ZLIB         01/02/01  00:15:09      */\n-/********************************************************************/\n-\n-  EXPORT SYMBOL(\"inflateCopy\")\n-\n-/********************************************************************/\n-/*   *MODULE      ZUTIL        ZLIB         01/02/01  00:15:09      */\n-/********************************************************************/\n-\n-  EXPORT SYMBOL(\"zlibCompileFlags\")\n-\n-/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/\n-/*   Version 1.2.5 additional entry points.                         */\n-/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/\n-\n-/********************************************************************/\n-/*   *MODULE      ADLER32      ZLIB         01/02/01  00:15:09      */\n-/********************************************************************/\n-\n-  EXPORT SYMBOL(\"adler32_combine\")\n-  EXPORT SYMBOL(\"adler32_combine64\")\n-\n-/********************************************************************/\n-/*   *MODULE      CRC32        ZLIB         01/02/01  00:15:09      */\n-/********************************************************************/\n-\n-  EXPORT SYMBOL(\"crc32_combine\")\n-  EXPORT SYMBOL(\"crc32_combine64\")\n-\n-/********************************************************************/\n-/*   *MODULE      GZLIB        ZLIB         01/02/01  00:15:09      */\n-/********************************************************************/\n-\n-  EXPORT SYMBOL(\"gzbuffer\")\n-  EXPORT SYMBOL(\"gzoffset\")\n-  EXPORT SYMBOL(\"gzoffset64\")\n-  EXPORT SYMBOL(\"gzopen64\")\n-  EXPORT SYMBOL(\"gzseek64\")\n-  EXPORT SYMBOL(\"gztell64\")\n-\n-/********************************************************************/\n-/*   *MODULE      GZREAD       ZLIB         01/02/01  00:15:09      */\n-/********************************************************************/\n-\n-  EXPORT SYMBOL(\"gzclose_r\")\n-\n-/********************************************************************/\n-/*   *MODULE      GZWRITE      ZLIB         01/02/01  00:15:09      */\n-/********************************************************************/\n-\n-  EXPORT SYMBOL(\"gzclose_w\")\n-\n-/********************************************************************/\n-/*   *MODULE      INFLATE      ZLIB         01/02/01  00:15:09      */\n-/********************************************************************/\n-\n-  EXPORT SYMBOL(\"inflateMark\")\n-  EXPORT SYMBOL(\"inflatePrime\")\n-  EXPORT SYMBOL(\"inflateReset2\")\n-  EXPORT SYMBOL(\"inflateUndermine\")\n-\n-/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/\n-/*   Version 1.2.6 additional entry points.                         */\n-/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/\n-\n-/********************************************************************/\n-/*   *MODULE      DEFLATE      ZLIB         01/02/01  00:15:09      */\n-/********************************************************************/\n-\n-  EXPORT SYMBOL(\"deflateResetKeep\")\n-  EXPORT SYMBOL(\"deflatePending\")\n-\n-/********************************************************************/\n-/*   *MODULE      GZWRITE      ZLIB         01/02/01  00:15:09      */\n-/********************************************************************/\n-\n-  EXPORT SYMBOL(\"gzgetc_\")\n-\n-/********************************************************************/\n-/*   *MODULE      INFLATE      ZLIB         01/02/01  00:15:09      */\n-/********************************************************************/\n-\n-  EXPORT SYMBOL(\"inflateResetKeep\")\n-\n-/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/\n-/*   Version 1.2.8 additional entry points.                         */\n-/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/\n-\n-/********************************************************************/\n-/*   *MODULE      INFLATE      ZLIB         01/02/01  00:15:09      */\n-/********************************************************************/\n-\n-  EXPORT SYMBOL(\"inflateGetDictionary\")\n-\n-ENDPGMEXP"}, {"sha": "e3f47c638727ec9fb1c11d9e4415bca6f47cf214", "filename": "zlib/as400/compile.clp", "status": "removed", "additions": 0, "deletions": 110, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2252a8025df20cb5c58659cde04ac0ee0eee3ee1/zlib%2Fas400%2Fcompile.clp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2252a8025df20cb5c58659cde04ac0ee0eee3ee1/zlib%2Fas400%2Fcompile.clp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fas400%2Fcompile.clp?ref=2252a8025df20cb5c58659cde04ac0ee0eee3ee1", "patch": "@@ -1,110 +0,0 @@\n-/******************************************************************************/\n-/*                                                                            */\n-/*  ZLIB                                                                      */\n-/*                                                                            */\n-/*    Compile sources into modules and link them into a service program.      */\n-/*                                                                            */\n-/******************************************************************************/\n-\n-             PGM\n-\n-/*      Configuration adjustable parameters.                                  */\n-\n-             DCL        VAR(&SRCLIB) TYPE(*CHAR) LEN(10) +\n-                          VALUE('ZLIB')                         /* Source library. */\n-             DCL        VAR(&SRCFILE) TYPE(*CHAR) LEN(10) +\n-                          VALUE('SOURCES')                      /* Source member file. */\n-             DCL        VAR(&CTLFILE) TYPE(*CHAR) LEN(10) +\n-                          VALUE('TOOLS')                        /* Control member file. */\n-\n-             DCL        VAR(&MODLIB) TYPE(*CHAR) LEN(10) +\n-                          VALUE('ZLIB')                         /* Module library. */\n-\n-             DCL        VAR(&SRVLIB) TYPE(*CHAR) LEN(10) +\n-                          VALUE('LGPL')                         /* Service program library. */\n-\n-             DCL        VAR(&CFLAGS) TYPE(*CHAR) +\n-                          VALUE('OPTIMIZE(40)')                 /* Compile options. */\n-\n-             DCL        VAR(&TGTRLS) TYPE(*CHAR) +\n-                          VALUE('V5R3M0')                       /* Target release. */\n-\n-\n-/*      Working storage.                                                      */\n-\n-             DCL        VAR(&CMDLEN) TYPE(*DEC) LEN(15 5) VALUE(300)    /* Command length. */\n-             DCL        VAR(&CMD) TYPE(*CHAR) LEN(512)\n-             DCL        VAR(&FIXDCMD) TYPE(*CHAR) LEN(512)\n-\n-\n-/*      Compile sources into modules.                                         */\n-\n-             CHGVAR     VAR(&FIXDCMD) VALUE('CRTCMOD' *BCAT &CFLAGS *BCAT      +\n-                        'SYSIFCOPT(*IFS64IO)' *BCAT                            +\n-                        'DEFINE(''_LARGEFILE64_SOURCE''' *BCAT                 +\n-                        '''_LFS64_LARGEFILE=1'') TGTRLS(' *TCAT &TGTRLS *TCAT  +\n-                        ') SRCFILE(' *TCAT &SRCLIB *TCAT '/' *TCAT             +\n-                        &SRCFILE *TCAT ') MODULE(' *TCAT &MODLIB *TCAT '/')\n-\n-\n-             CHGVAR     VAR(&CMD) VALUE(&FIXDCMD *TCAT 'ADLER32)')\n-             CALL       PGM(QCMDEXC) PARM(&CMD &CMDLEN)\n-\n-             CHGVAR     VAR(&CMD) VALUE(&FIXDCMD *TCAT 'COMPRESS)')\n-             CALL       PGM(QCMDEXC) PARM(&CMD &CMDLEN)\n-\n-             CHGVAR     VAR(&CMD) VALUE(&FIXDCMD *TCAT 'CRC32)')\n-             CALL       PGM(QCMDEXC) PARM(&CMD &CMDLEN)\n-\n-             CHGVAR     VAR(&CMD) VALUE(&FIXDCMD *TCAT 'DEFLATE)')\n-             CALL       PGM(QCMDEXC) PARM(&CMD &CMDLEN)\n-\n-             CHGVAR     VAR(&CMD) VALUE(&FIXDCMD *TCAT 'GZCLOSE)')\n-             CALL       PGM(QCMDEXC) PARM(&CMD &CMDLEN)\n-\n-             CHGVAR     VAR(&CMD) VALUE(&FIXDCMD *TCAT 'GZLIB)')\n-             CALL       PGM(QCMDEXC) PARM(&CMD &CMDLEN)\n-\n-             CHGVAR     VAR(&CMD) VALUE(&FIXDCMD *TCAT 'GZREAD)')\n-             CALL       PGM(QCMDEXC) PARM(&CMD &CMDLEN)\n-\n-             CHGVAR     VAR(&CMD) VALUE(&FIXDCMD *TCAT 'GZWRITE)')\n-             CALL       PGM(QCMDEXC) PARM(&CMD &CMDLEN)\n-\n-             CHGVAR     VAR(&CMD) VALUE(&FIXDCMD *TCAT 'INFBACK)')\n-             CALL       PGM(QCMDEXC) PARM(&CMD &CMDLEN)\n-\n-             CHGVAR     VAR(&CMD) VALUE(&FIXDCMD *TCAT 'INFFAST)')\n-             CALL       PGM(QCMDEXC) PARM(&CMD &CMDLEN)\n-\n-             CHGVAR     VAR(&CMD) VALUE(&FIXDCMD *TCAT 'INFLATE)')\n-             CALL       PGM(QCMDEXC) PARM(&CMD &CMDLEN)\n-\n-             CHGVAR     VAR(&CMD) VALUE(&FIXDCMD *TCAT 'INFTREES)')\n-             CALL       PGM(QCMDEXC) PARM(&CMD &CMDLEN)\n-\n-             CHGVAR     VAR(&CMD) VALUE(&FIXDCMD *TCAT 'TREES)')\n-             CALL       PGM(QCMDEXC) PARM(&CMD &CMDLEN)\n-\n-             CHGVAR     VAR(&CMD) VALUE(&FIXDCMD *TCAT 'UNCOMPR)')\n-             CALL       PGM(QCMDEXC) PARM(&CMD &CMDLEN)\n-\n-             CHGVAR     VAR(&CMD) VALUE(&FIXDCMD *TCAT 'ZUTIL)')\n-             CALL       PGM(QCMDEXC) PARM(&CMD &CMDLEN)\n-\n-\n-/*      Link modules into a service program.                                  */\n-\n-             CRTSRVPGM  SRVPGM(&SRVLIB/ZLIB) +\n-                          MODULE(&MODLIB/ADLER32     &MODLIB/COMPRESS    +\n-                                 &MODLIB/CRC32       &MODLIB/DEFLATE     +\n-                                 &MODLIB/GZCLOSE     &MODLIB/GZLIB       +\n-                                 &MODLIB/GZREAD      &MODLIB/GZWRITE     +\n-                                 &MODLIB/INFBACK     &MODLIB/INFFAST     +\n-                                 &MODLIB/INFLATE     &MODLIB/INFTREES    +\n-                                 &MODLIB/TREES       &MODLIB/UNCOMPR     +\n-                                 &MODLIB/ZUTIL)                          +\n-                          SRCFILE(&SRCLIB/&CTLFILE) SRCMBR(BNDSRC)       +\n-                          TEXT('ZLIB 1.2.8') TGTRLS(&TGTRLS)\n-\n-             ENDPGM"}, {"sha": "7b5d93bf51f6c6378610782fd84f88eafe4199db", "filename": "zlib/as400/readme.txt", "status": "removed", "additions": 0, "deletions": 115, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2252a8025df20cb5c58659cde04ac0ee0eee3ee1/zlib%2Fas400%2Freadme.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2252a8025df20cb5c58659cde04ac0ee0eee3ee1/zlib%2Fas400%2Freadme.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fas400%2Freadme.txt?ref=2252a8025df20cb5c58659cde04ac0ee0eee3ee1", "patch": "@@ -1,115 +0,0 @@\n-        ZLIB version 1.2.8 for AS400 installation instructions\n-\n-I) From an AS400 *SAVF file:\n-\n-1)      Unpacking archive to an AS400 save file\n-\n-On the AS400:\n-\n-_       Create the ZLIB AS400 library:\n-\n-        CRTLIB LIB(ZLIB) TYPE(*PROD) TEXT('ZLIB compression API library')\n-\n-_       Create a work save file, for example:\n-\n-                CRTSAVF FILE(ZLIB/ZLIBSAVF)\n-\n-On a PC connected to the target AS400:\n-\n-_       Unpack the save file image to a PC file \"ZLIBSAVF\"\n-_       Upload this file into the save file on the AS400, for example\n-                using ftp in BINARY mode.\n-\n-\n-2)      Populating the ZLIB AS400 source library\n-\n-On the AS400:\n-\n-_       Extract the saved objects into the ZLIB AS400 library using:\n-\n-RSTOBJ OBJ(*ALL) SAVLIB(ZLIB) DEV(*SAVF) SAVF(ZLIB/ZLIBSAVF) RSTLIB(ZLIB)\n-\n-\n-3)      Customize installation:\n-\n-_       Edit CL member ZLIB/TOOLS(COMPILE) and change parameters if needed,\n-                according to the comments.\n-\n-_       Compile this member with:\n-\n-        CRTCLPGM PGM(ZLIB/COMPILE) SRCFILE(ZLIB/TOOLS) SRCMBR(COMPILE)\n-\n-\n-4)      Compile and generate the service program:\n-\n-_       This can now be done by executing:\n-\n-        CALL PGM(ZLIB/COMPILE)\n-\n-\n-\n-II) From the original source distribution:\n-\n-1)      On the AS400, create the source library:\n-\n-        CRTLIB LIB(ZLIB) TYPE(*PROD) TEXT('ZLIB compression API library')\n-\n-2)      Create the source files:\n-\n-        CRTSRCPF FILE(ZLIB/SOURCES) RCDLEN(112) TEXT('ZLIB library modules')\n-        CRTSRCPF FILE(ZLIB/H)       RCDLEN(112) TEXT('ZLIB library includes')\n-        CRTSRCPF FILE(ZLIB/TOOLS)   RCDLEN(112) TEXT('ZLIB library control utilities')\n-\n-3)      From the machine hosting the distribution files, upload them (with\n-                FTP in text mode, for example) according to the following table:\n-\n-    Original    AS400   AS400    AS400 AS400\n-    file        file    member   type  description\n-                SOURCES                Original ZLIB C subprogram sources\n-    adler32.c           ADLER32  C     ZLIB - Compute the Adler-32 checksum of a dta strm\n-    compress.c          COMPRESS C     ZLIB - Compress a memory buffer\n-    crc32.c             CRC32    C     ZLIB - Compute the CRC-32 of a data stream\n-    deflate.c           DEFLATE  C     ZLIB - Compress data using the deflation algorithm\n-    gzclose.c           GZCLOSE  C     ZLIB - Close .gz files\n-    gzlib.c             GZLIB    C     ZLIB - Miscellaneous .gz files IO support\n-    gzread.c            GZREAD   C     ZLIB - Read .gz files\n-    gzwrite.c           GZWRITE  C     ZLIB - Write .gz files\n-    infback.c           INFBACK  C     ZLIB - Inflate using a callback interface\n-    inffast.c           INFFAST  C     ZLIB - Fast proc. literals & length/distance pairs\n-    inflate.c           INFLATE  C     ZLIB - Interface to inflate modules\n-    inftrees.c          INFTREES C     ZLIB - Generate Huffman trees for efficient decode\n-    trees.c             TREES    C     ZLIB - Output deflated data using Huffman coding\n-    uncompr.c           UNCOMPR  C     ZLIB - Decompress a memory buffer\n-    zutil.c             ZUTIL    C     ZLIB - Target dependent utility functions\n-                H                      Original ZLIB C and ILE/RPG include files\n-    crc32.h             CRC32    C     ZLIB - CRC32 tables\n-    deflate.h           DEFLATE  C     ZLIB - Internal compression state\n-    gzguts.h            GZGUTS   C     ZLIB - Definitions for the gzclose module\n-    inffast.h           INFFAST  C     ZLIB - Header to use inffast.c\n-    inffixed.h          INFFIXED C     ZLIB - Table for decoding fixed codes\n-    inflate.h           INFLATE  C     ZLIB - Internal inflate state definitions\n-    inftrees.h          INFTREES C     ZLIB - Header to use inftrees.c\n-    trees.h             TREES    C     ZLIB - Created automatically with -DGEN_TREES_H\n-    zconf.h             ZCONF    C     ZLIB - Compression library configuration\n-    zlib.h              ZLIB     C     ZLIB - Compression library C user interface\n-    as400/zlib.inc      ZLIB.INC RPGLE ZLIB - Compression library ILE RPG user interface\n-    zutil.h             ZUTIL    C     ZLIB - Internal interface and configuration\n-                TOOLS                  Building source software & AS/400 README\n-    as400/bndsrc        BNDSRC         Entry point exportation list\n-    as400/compile.clp   COMPILE  CLP   Compile sources & generate service program\n-    as400/readme.txt    README   TXT   Installation instructions\n-\n-4)      Continue as in I)3).\n-\n-\n-\n-\n-Notes:  For AS400 ILE RPG programmers, a /copy member defining the ZLIB\n-                API prototypes for ILE RPG can be found in ZLIB/H(ZLIB.INC).\n-                Please read comments in this member for more information.\n-\n-        Remember that most foreign textual data are ASCII coded: this\n-                implementation does not handle conversion from/to ASCII, so\n-                text data code conversions must be done explicitely.\n-\n-        Mainly for the reason above, always open zipped files in binary mode."}, {"sha": "bb443c6fcf1036969cfdb435295a32a202e80bc3", "filename": "zlib/compress.c", "status": "modified", "additions": 24, "deletions": 18, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcompress.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcompress.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcompress.c?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,5 +1,5 @@\n /* compress.c -- compress a memory buffer\n- * Copyright (C) 1995-2005 Jean-loup Gailly.\n+ * Copyright (C) 1995-2005, 2014, 2016 Jean-loup Gailly, Mark Adler\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -28,16 +28,11 @@ int ZEXPORT compress2 (dest, destLen, source, sourceLen, level)\n {\n     z_stream stream;\n     int err;\n+    const uInt max = (uInt)-1;\n+    uLong left;\n \n-    stream.next_in = (z_const Bytef *)source;\n-    stream.avail_in = (uInt)sourceLen;\n-#ifdef MAXSEG_64K\n-    /* Check for source > 64K on 16-bit machine: */\n-    if ((uLong)stream.avail_in != sourceLen) return Z_BUF_ERROR;\n-#endif\n-    stream.next_out = dest;\n-    stream.avail_out = (uInt)*destLen;\n-    if ((uLong)stream.avail_out != *destLen) return Z_BUF_ERROR;\n+    left = *destLen;\n+    *destLen = 0;\n \n     stream.zalloc = (alloc_func)0;\n     stream.zfree = (free_func)0;\n@@ -46,15 +41,26 @@ int ZEXPORT compress2 (dest, destLen, source, sourceLen, level)\n     err = deflateInit(&stream, level);\n     if (err != Z_OK) return err;\n \n-    err = deflate(&stream, Z_FINISH);\n-    if (err != Z_STREAM_END) {\n-        deflateEnd(&stream);\n-        return err == Z_OK ? Z_BUF_ERROR : err;\n-    }\n-    *destLen = stream.total_out;\n+    stream.next_out = dest;\n+    stream.avail_out = 0;\n+    stream.next_in = (z_const Bytef *)source;\n+    stream.avail_in = 0;\n+\n+    do {\n+        if (stream.avail_out == 0) {\n+            stream.avail_out = left > (uLong)max ? max : (uInt)left;\n+            left -= stream.avail_out;\n+        }\n+        if (stream.avail_in == 0) {\n+            stream.avail_in = sourceLen > (uLong)max ? max : (uInt)sourceLen;\n+            sourceLen -= stream.avail_in;\n+        }\n+        err = deflate(&stream, sourceLen ? Z_NO_FLUSH : Z_FINISH);\n+    } while (err == Z_OK);\n \n-    err = deflateEnd(&stream);\n-    return err;\n+    *destLen = stream.total_out;\n+    deflateEnd(&stream);\n+    return err == Z_STREAM_END ? Z_OK : err;\n }\n \n /* ==========================================================================="}, {"sha": "a411d5c396bd41c0f345d6175f2884313c9a068f", "filename": "zlib/contrib/README.contrib", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2FREADME.contrib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2FREADME.contrib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2FREADME.contrib?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -38,7 +38,7 @@ inflate86/  by Chris Anderson <christop@charm.net>\n iostream/   by Kevin Ruland <kevin@rodin.wustl.edu>\n         A C++ I/O streams interface to the zlib gz* functions\n \n-iostream2/  by Tyge L\ufffdvset <Tyge.Lovset@cmr.no>\n+iostream2/  by Tyge L\u00f8vset <Tyge.Lovset@cmr.no>\n         Another C++ I/O streams interface\n \n iostream3/  by Ludwig Schwardt <schwardt@sun.ac.za>\n@@ -58,7 +58,7 @@ masmx86/    by Gilles Vollant <info@winimage.com>\n minizip/    by Gilles Vollant <info@winimage.com>\n         Mini zip and unzip based on zlib\n         Includes Zip64 support by Mathias Svensson <mathias@result42.com>\n-        See http://www.winimage.com/zLibDll/unzip.html\n+        See http://www.winimage.com/zLibDll/minizip.html\n \n pascal/     by Bob Dellaca <bobdl@xtra.co.nz> et al.\n         Support for Pascal"}, {"sha": "8e26cd450838c64c335b7d2a84a0d1c00ab72dfe", "filename": "zlib/contrib/ada/zlib-streams.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fada%2Fzlib-streams.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fada%2Fzlib-streams.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fada%2Fzlib-streams.ads?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -31,7 +31,7 @@ package ZLib.Streams is\n       Mode   : in     Flush_Mode := Sync_Flush);\n    --  Flush the written data to the back stream,\n    --  all data placed to the compressor is flushing to the Back stream.\n-   --  Should not be used untill necessary, becouse it is decreasing\n+   --  Should not be used until necessary, because it is decreasing\n    --  compression.\n \n    function Read_Total_In (Stream : in Stream_Type) return Count;\n@@ -97,13 +97,13 @@ private\n       Rest_Last  : Stream_Element_Offset;\n       --  Buffer for Read operation.\n       --  We need to have this buffer in the record\n-      --  becouse not all read data from back stream\n+      --  because not all read data from back stream\n       --  could be processed during the read operation.\n \n       Buffer_Size : Stream_Element_Offset;\n       --  Buffer size for write operation.\n       --  We do not need to have this buffer\n-      --  in the record becouse all data could be\n+      --  in the record because all data could be\n       --  processed in the write operation.\n \n       Back       : Stream_Access;"}, {"sha": "810173cff86fa6bbf2d88bad8e63c021c2a5f2a7", "filename": "zlib/contrib/ada/zlib-thin.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fada%2Fzlib-thin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fada%2Fzlib-thin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fada%2Fzlib-thin.ads?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -436,7 +436,7 @@ private\n \n    pragma Import (C, inflateBackInit, \"inflateBackInit_\");\n \n-   --  I stopped binding the inflateBack routines, becouse realize that\n+   --  I stopped binding the inflateBack routines, because realize that\n    --  it does not support zlib and gzip headers for now, and have no\n    --  symmetric deflateBack routines.\n    --  ZLib-Ada is symmetric regarding deflate/inflate data transformation"}, {"sha": "e6e659073c630ab6e42a6ff0e5afb0bf91c1cbe8", "filename": "zlib/contrib/blast/blast.c", "status": "modified", "additions": 33, "deletions": 13, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fblast%2Fblast.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fblast%2Fblast.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fblast%2Fblast.c?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,7 +1,7 @@\n /* blast.c\n- * Copyright (C) 2003, 2012 Mark Adler\n+ * Copyright (C) 2003, 2012, 2013 Mark Adler\n  * For conditions of distribution and use, see copyright notice in blast.h\n- * version 1.2, 24 Oct 2012\n+ * version 1.3, 24 Aug 2013\n  *\n  * blast.c decompresses data compressed by the PKWare Compression Library.\n  * This function provides functionality similar to the explode() function of\n@@ -24,8 +24,12 @@\n  * 1.1  16 Feb 2003     - Fixed distance check for > 4 GB uncompressed data\n  * 1.2  24 Oct 2012     - Add note about using binary mode in stdio\n  *                      - Fix comparisons of differently signed integers\n+ * 1.3  24 Aug 2013     - Return unused input from blast()\n+ *                      - Fix test code to correctly report unused input\n+ *                      - Enable the provision of initial input to blast()\n  */\n \n+#include <stddef.h>             /* for NULL */\n #include <setjmp.h>             /* for setjmp(), longjmp(), and jmp_buf */\n #include \"blast.h\"              /* prototype for blast() */\n \n@@ -256,7 +260,7 @@ local int construct(struct huffman *h, const unsigned char *rep, int n)\n  *   next, 0 for literals, 1 for length/distance.\n  *\n  * - If literals are uncoded, then the next eight bits are the literal, in the\n- *   normal bit order in th stream, i.e. no bit-reversal is needed. Similarly,\n+ *   normal bit order in the stream, i.e. no bit-reversal is needed. Similarly,\n  *   no bit reversal is needed for either the length extra bits or the distance\n  *   extra bits.\n  *\n@@ -376,15 +380,21 @@ local int decomp(struct state *s)\n }\n \n /* See comments in blast.h */\n-int blast(blast_in infun, void *inhow, blast_out outfun, void *outhow)\n+int blast(blast_in infun, void *inhow, blast_out outfun, void *outhow,\n+          unsigned *left, unsigned char **in)\n {\n     struct state s;             /* input/output state */\n     int err;                    /* return value */\n \n     /* initialize input state */\n     s.infun = infun;\n     s.inhow = inhow;\n-    s.left = 0;\n+    if (left != NULL && *left) {\n+        s.left = *left;\n+        s.in = *in;\n+    }\n+    else\n+        s.left = 0;\n     s.bitbuf = 0;\n     s.bitcnt = 0;\n \n@@ -400,6 +410,12 @@ int blast(blast_in infun, void *inhow, blast_out outfun, void *outhow)\n     else\n         err = decomp(&s);               /* decompress */\n \n+    /* return unused input */\n+    if (left != NULL)\n+        *left = s.left;\n+    if (in != NULL)\n+        *in = s.left ? s.in : NULL;\n+\n     /* write any leftover output and update the error code if needed */\n     if (err != 1 && s.next && s.outfun(s.outhow, s.out, s.next) && err == 0)\n         err = 1;\n@@ -429,16 +445,20 @@ local int outf(void *how, unsigned char *buf, unsigned len)\n /* Decompress a PKWare Compression Library stream from stdin to stdout */\n int main(void)\n {\n-    int ret, n;\n+    int ret;\n+    unsigned left;\n \n     /* decompress to stdout */\n-    ret = blast(inf, stdin, outf, stdout);\n-    if (ret != 0) fprintf(stderr, \"blast error: %d\\n\", ret);\n-\n-    /* see if there are any leftover bytes */\n-    n = 0;\n-    while (getchar() != EOF) n++;\n-    if (n) fprintf(stderr, \"blast warning: %d unused bytes of input\\n\", n);\n+    left = 0;\n+    ret = blast(inf, stdin, outf, stdout, &left, NULL);\n+    if (ret != 0)\n+        fprintf(stderr, \"blast error: %d\\n\", ret);\n+\n+    /* count any leftover bytes */\n+    while (getchar() != EOF)\n+        left++;\n+    if (left)\n+        fprintf(stderr, \"blast warning: %u unused bytes of input\\n\", left);\n \n     /* return blast() error code */\n     return ret;"}, {"sha": "6cf65eda16e5b8d506ee6aaa261c7a395bf743f7", "filename": "zlib/contrib/blast/blast.h", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fblast%2Fblast.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fblast%2Fblast.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fblast%2Fblast.h?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,6 +1,6 @@\n /* blast.h -- interface for blast.c\n-  Copyright (C) 2003, 2012 Mark Adler\n-  version 1.2, 24 Oct 2012\n+  Copyright (C) 2003, 2012, 2013 Mark Adler\n+  version 1.3, 24 Aug 2013\n \n   This software is provided 'as-is', without any express or implied\n   warranty.  In no event will the author be held liable for any damages\n@@ -42,7 +42,8 @@ typedef int (*blast_out)(void *how, unsigned char *buf, unsigned len);\n  */\n \n \n-int blast(blast_in infun, void *inhow, blast_out outfun, void *outhow);\n+int blast(blast_in infun, void *inhow, blast_out outfun, void *outhow,\n+          unsigned *left, unsigned char **in);\n /* Decompress input to output using the provided infun() and outfun() calls.\n  * On success, the return value of blast() is zero.  If there is an error in\n  * the source data, i.e. it is not in the proper format, then a negative value\n@@ -55,12 +56,19 @@ int blast(blast_in infun, void *inhow, blast_out outfun, void *outhow);\n  * an input error.  (blast() only asks for input if it needs it.)  inhow is for\n  * use by the application to pass an input descriptor to infun(), if desired.\n  *\n+ * If left and in are not NULL and *left is not zero when blast() is called,\n+ * then the *left bytes are *in are consumed for input before infun() is used.\n+ *\n  * The output function is invoked: err = outfun(how, buf, len), where the bytes\n  * to be written are buf[0..len-1].  If err is not zero, then blast() returns\n  * with an output error.  outfun() is always called with len <= 4096.  outhow\n  * is for use by the application to pass an output descriptor to outfun(), if\n  * desired.\n  *\n+ * If there is any unused input, *left is set to the number of bytes that were\n+ * read and *in points to them.  Otherwise *left is set to zero and *in is set\n+ * to NULL.  If left or in are NULL, then they are not set.\n+ *\n  * The return codes are:\n  *\n  *   2:  ran out of input before completing decompression"}, {"sha": "e9d72f021da16a18e9dc57e28a4fb4ff296ca1ba", "filename": "zlib/contrib/delphi/ZLib.pas", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fdelphi%2FZLib.pas", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fdelphi%2FZLib.pas", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fdelphi%2FZLib.pas?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -152,7 +152,7 @@ procedure DecompressToUserBuf(const InBuf: Pointer; InBytes: Integer;\n   const OutBuf: Pointer; BufSize: Integer);\n \n const\n-  zlib_version = '1.2.8';\n+  zlib_version = '1.2.10';\n \n type\n   EZlibError = class(Exception);"}, {"sha": "a0e39857cc8ba6a5f4e3134ea6345b19d0f577f5", "filename": "zlib/contrib/dotzlib/DotZLib/UnitTests.cs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fdotzlib%2FDotZLib%2FUnitTests.cs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fdotzlib%2FDotZLib%2FUnitTests.cs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fdotzlib%2FDotZLib%2FUnitTests.cs?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -156,7 +156,7 @@ public class InfoTests\n         public void Info_Version()\r\n         {\r\n             Info info = new Info();\r\n-            Assert.AreEqual(\"1.2.8\", Info.Version);\r\n+            Assert.AreEqual(\"1.2.10\", Info.Version);\r\n             Assert.AreEqual(32, info.SizeOfUInt);\r\n             Assert.AreEqual(32, info.SizeOfULong);\r\n             Assert.AreEqual(32, info.SizeOfPointer);\r"}, {"sha": "ea5604731a79e950b19ba2d5fb2b0cdda5ffc2ec", "filename": "zlib/contrib/infback9/inftree9.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Finfback9%2Finftree9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Finfback9%2Finftree9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Finfback9%2Finftree9.c?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,5 +1,5 @@\n /* inftree9.c -- generate Huffman trees for efficient decoding\n- * Copyright (C) 1995-2013 Mark Adler\n+ * Copyright (C) 1995-2017 Mark Adler\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -9,7 +9,7 @@\n #define MAXBITS 15\n \n const char inflate9_copyright[] =\n-   \" inflate9 1.2.8 Copyright 1995-2013 Mark Adler \";\n+   \" inflate9 1.2.10 Copyright 1995-2017 Mark Adler \";\n /*\n   If you use the zlib library in a product, an acknowledgment is welcome\n   in the documentation of your product. If for some reason you cannot\n@@ -64,7 +64,7 @@ unsigned short FAR *work;\n     static const unsigned short lext[31] = { /* Length codes 257..285 extra */\n         128, 128, 128, 128, 128, 128, 128, 128, 129, 129, 129, 129,\n         130, 130, 130, 130, 131, 131, 131, 131, 132, 132, 132, 132,\n-        133, 133, 133, 133, 144, 72, 78};\n+        133, 133, 133, 133, 144, 192, 202};\n     static const unsigned short dbase[32] = { /* Distance codes 0..31 base */\n         1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49,\n         65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073,"}, {"sha": "bbb2283a7d70eee6df54424e90705301cc517066", "filename": "zlib/contrib/minizip/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fminizip%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fminizip%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fminizip%2Fconfigure.ac?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,7 +1,7 @@\n #                                               -*- Autoconf -*-\n # Process this file with autoconf to produce a configure script.\n \n-AC_INIT([minizip], [1.2.8], [bugzilla.redhat.com])\n+AC_INIT([minizip], [1.2.10], [bugzilla.redhat.com])\n AC_CONFIG_SRCDIR([minizip.c])\n AM_INIT_AUTOMAKE([foreign])\n LT_INIT"}, {"sha": "274f39eb1dd2c6d3252b50699da1a5673a25b0f8", "filename": "zlib/contrib/minizip/iowin32.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fminizip%2Fiowin32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fminizip%2Fiowin32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fminizip%2Fiowin32.c?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -26,8 +26,9 @@\n #endif\n \n \n+// see Include/shared/winapifamily.h in the Windows Kit\n #if defined(WINAPI_FAMILY_PARTITION) && (!(defined(IOWIN32_USING_WINRT_API)))\n-#if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP)\n+#if WINAPI_FAMILY_ONE_PARTITION(WINAPI_FAMILY, WINAPI_PARTITION_APP)\n #define IOWIN32_USING_WINRT_API 1\n #endif\n #endif\n@@ -243,7 +244,7 @@ static BOOL MySetFilePointerEx(HANDLE hFile, LARGE_INTEGER pos, LARGE_INTEGER *n\n     return SetFilePointerEx(hFile, pos, newPos, dwMoveMethod);\n #else\n     LONG lHigh = pos.HighPart;\n-    DWORD dwNewPos = SetFilePointer(hFile, pos.LowPart, &lHigh, FILE_CURRENT);\n+    DWORD dwNewPos = SetFilePointer(hFile, pos.LowPart, &lHigh, dwMoveMethod);\n     BOOL fOk = TRUE;\n     if (dwNewPos == 0xFFFFFFFF)\n         if (GetLastError() != NO_ERROR)\n@@ -370,7 +371,7 @@ long ZCALLBACK win32_seek64_file_func (voidpf opaque, voidpf stream,ZPOS64_T off\n     {\n         LARGE_INTEGER pos;\n         pos.QuadPart = offset;\n-        if (!MySetFilePointerEx(hFile, pos, NULL, FILE_CURRENT))\n+        if (!MySetFilePointerEx(hFile, pos, NULL, dwMoveMethod))\n         {\n             DWORD dwErr = GetLastError();\n             ((WIN32FILE_IOWIN*)stream) -> error=(int)dwErr;"}, {"sha": "bcfb9416ec356d1016f890b085677e412ba6e9bf", "filename": "zlib/contrib/minizip/unzip.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fminizip%2Funzip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fminizip%2Funzip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fminizip%2Funzip.c?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -200,7 +200,7 @@ typedef struct\n /* ===========================================================================\n      Read a byte from a gz_stream; update next_in and avail_in. Return EOF\n    for end of file.\n-   IN assertion: the stream s has been sucessfully opened for reading.\n+   IN assertion: the stream s has been successfully opened for reading.\n */\n \n "}, {"sha": "44e88a9cb9898d8c7ba8a9671d259286dd4b2f79", "filename": "zlib/contrib/minizip/zip.c", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fminizip%2Fzip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fminizip%2Fzip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fminizip%2Fzip.c?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -15,7 +15,7 @@\n    Oct-2009 - Mathias Svensson - Did some code cleanup and refactoring to get better overview of some functions.\n    Oct-2009 - Mathias Svensson - Added zipRemoveExtraInfoBlock to strip extra field data from its ZIP64 data\n                                  It is used when recreting zip archive with RAW when deleting items from a zip.\n-                                 ZIP64 data is automaticly added to items that needs it, and existing ZIP64 data need to be removed.\n+                                 ZIP64 data is automatically added to items that needs it, and existing ZIP64 data need to be removed.\n    Oct-2009 - Mathias Svensson - Added support for BZIP2 as compression mode (bzip2 lib is required)\n    Jan-2010 - back to unzip and minizip 1.0 name scheme, with compatibility layer\n \n@@ -116,7 +116,7 @@ typedef struct linkedlist_datablock_internal_s\n   struct linkedlist_datablock_internal_s* next_datablock;\n   uLong  avail_in_this_block;\n   uLong  filled_in_this_block;\n-  uLong  unused; /* for future use and alignement */\n+  uLong  unused; /* for future use and alignment */\n   unsigned char data[SIZEDATA_INDATABLOCK];\n } linkedlist_datablock_internal;\n \n@@ -171,7 +171,7 @@ typedef struct\n     curfile64_info ci;            /* info on the file curretly writing */\n \n     ZPOS64_T begin_pos;            /* position of the beginning of the zipfile */\n-    ZPOS64_T add_position_when_writting_offset;\n+    ZPOS64_T add_position_when_writing_offset;\n     ZPOS64_T number_entry;\n \n #ifndef NO_ADDFILEINEXISTINGZIP\n@@ -807,7 +807,7 @@ int LoadCentralDirectoryRecord(zip64_internal* pziinit)\n   }\n \n   byte_before_the_zipfile = central_pos - (offset_central_dir+size_central_dir);\n-  pziinit->add_position_when_writting_offset = byte_before_the_zipfile;\n+  pziinit->add_position_when_writing_offset = byte_before_the_zipfile;\n \n   {\n     ZPOS64_T size_central_dir_to_read = size_central_dir;\n@@ -875,7 +875,7 @@ extern zipFile ZEXPORT zipOpen3 (const void *pathname, int append, zipcharpc* gl\n     ziinit.in_opened_file_inzip = 0;\n     ziinit.ci.stream_initialised = 0;\n     ziinit.number_entry = 0;\n-    ziinit.add_position_when_writting_offset = 0;\n+    ziinit.add_position_when_writing_offset = 0;\n     init_linkedlist(&(ziinit.central_dir));\n \n \n@@ -1164,7 +1164,7 @@ extern int ZEXPORT zipOpenNewFileInZip4_64 (zipFile file, const char* filename,\n     if(zi->ci.pos_local_header >= 0xffffffff)\n       zip64local_putValue_inmemory(zi->ci.central_header+42,(uLong)0xffffffff,4);\n     else\n-      zip64local_putValue_inmemory(zi->ci.central_header+42,(uLong)zi->ci.pos_local_header - zi->add_position_when_writting_offset,4);\n+      zip64local_putValue_inmemory(zi->ci.central_header+42,(uLong)zi->ci.pos_local_header - zi->add_position_when_writing_offset,4);\n \n     for (i=0;i<size_filename;i++)\n         *(zi->ci.central_header+SIZECENTRALHEADER+i) = *(filename+i);\n@@ -1755,7 +1755,7 @@ extern int ZEXPORT zipCloseFileInZip (zipFile file)\n int Write_Zip64EndOfCentralDirectoryLocator(zip64_internal* zi, ZPOS64_T zip64eocd_pos_inzip)\n {\n   int err = ZIP_OK;\n-  ZPOS64_T pos = zip64eocd_pos_inzip - zi->add_position_when_writting_offset;\n+  ZPOS64_T pos = zip64eocd_pos_inzip - zi->add_position_when_writing_offset;\n \n   err = zip64local_putValue(&zi->z_filefunc,zi->filestream,(uLong)ZIP64ENDLOCHEADERMAGIC,4);\n \n@@ -1808,7 +1808,7 @@ int Write_Zip64EndOfCentralDirectoryRecord(zip64_internal* zi, uLong size_centra\n \n   if (err==ZIP_OK) /* offset of start of central directory with respect to the starting disk number */\n   {\n-    ZPOS64_T pos = centraldir_pos_inzip - zi->add_position_when_writting_offset;\n+    ZPOS64_T pos = centraldir_pos_inzip - zi->add_position_when_writing_offset;\n     err = zip64local_putValue(&zi->z_filefunc,zi->filestream, (ZPOS64_T)pos,8);\n   }\n   return err;\n@@ -1849,13 +1849,13 @@ int Write_EndOfCentralDirectoryRecord(zip64_internal* zi, uLong size_centraldir,\n \n   if (err==ZIP_OK) /* offset of start of central directory with respect to the starting disk number */\n   {\n-    ZPOS64_T pos = centraldir_pos_inzip - zi->add_position_when_writting_offset;\n+    ZPOS64_T pos = centraldir_pos_inzip - zi->add_position_when_writing_offset;\n     if(pos >= 0xffffffff)\n     {\n       err = zip64local_putValue(&zi->z_filefunc,zi->filestream, (uLong)0xffffffff,4);\n     }\n     else\n-      err = zip64local_putValue(&zi->z_filefunc,zi->filestream, (uLong)(centraldir_pos_inzip - zi->add_position_when_writting_offset),4);\n+      err = zip64local_putValue(&zi->z_filefunc,zi->filestream, (uLong)(centraldir_pos_inzip - zi->add_position_when_writing_offset),4);\n   }\n \n    return err;\n@@ -1921,7 +1921,7 @@ extern int ZEXPORT zipClose (zipFile file, const char* global_comment)\n     }\n     free_linkedlist(&(zi->central_dir));\n \n-    pos = centraldir_pos_inzip - zi->add_position_when_writting_offset;\n+    pos = centraldir_pos_inzip - zi->add_position_when_writing_offset;\n     if(pos >= 0xffffffff || zi->number_entry > 0xFFFF)\n     {\n       ZPOS64_T Zip64EOCDpos = ZTELL64(zi->z_filefunc,zi->filestream);"}, {"sha": "2330898c418dbb18a2ee02a60c0539f3237ecb60", "filename": "zlib/contrib/pascal/zlibpas.pas", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fpascal%2Fzlibpas.pas", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fpascal%2Fzlibpas.pas", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fpascal%2Fzlibpas.pas?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -10,8 +10,8 @@\n interface\n \n const\n-  ZLIB_VERSION = '1.2.8';\n-  ZLIB_VERNUM  = $1280;\n+  ZLIB_VERSION = '1.2.10';\n+  ZLIB_VERNUM  = $12a0;\n \n type\n   alloc_func = function(opaque: Pointer; items, size: Integer): Pointer;"}, {"sha": "c6c90d714206a3f6ef8a9cabcb27dffd3cbca4bb", "filename": "zlib/contrib/puff/puff.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fpuff%2Fpuff.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fpuff%2Fpuff.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fpuff%2Fpuff.c?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -17,7 +17,7 @@\n  * All dynamically allocated memory comes from the stack.  The stack required\n  * is less than 2K bytes.  This code is compatible with 16-bit int's and\n  * assumes that long's are at least 32 bits.  puff.c uses the short data type,\n- * assumed to be 16 bits, for arrays in order to to conserve memory.  The code\n+ * assumed to be 16 bits, for arrays in order to conserve memory.  The code\n  * works whether integers are stored big endian or little endian.\n  *\n  * In the comments below are \"Format notes\" that describe the inflate process"}, {"sha": "98d8a05a5b411834aba6bc58cdca2556b643d042", "filename": "zlib/contrib/vstudio/readme.txt", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Freadme.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Freadme.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Freadme.txt?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,4 +1,4 @@\n-Building instructions for the DLL versions of Zlib 1.2.8\r\n+Building instructions for the DLL versions of Zlib 1.2.10\r\n ========================================================\r\n \r\n This directory contains projects that build zlib and minizip using\r\n@@ -16,7 +16,7 @@ More information can be found at this site.\n \r\n Build instructions for Visual Studio 2008 (32 bits or 64 bits)\r\n --------------------------------------------------------------\r\n-- Uncompress current zlib, including all contrib/* files\r\n+- Decompress current zlib, including all contrib/* files\r\n - Compile assembly code (with Visual Studio Command Prompt) by running:\r\n    bld_ml64.bat (in contrib\\masmx64)\r\n    bld_ml32.bat (in contrib\\masmx86)\r\n@@ -25,14 +25,24 @@ Build instructions for Visual Studio 2008 (32 bits or 64 bits)\n \r\n Build instructions for Visual Studio 2010 (32 bits or 64 bits)\r\n --------------------------------------------------------------\r\n-- Uncompress current zlib, including all contrib/* files\r\n+- Decompress current zlib, including all contrib/* files\r\n - Open contrib\\vstudio\\vc10\\zlibvc.sln with Microsoft Visual C++ 2010\r\n \r\n Build instructions for Visual Studio 2012 (32 bits or 64 bits)\r\n --------------------------------------------------------------\r\n-- Uncompress current zlib, including all contrib/* files\r\n+- Decompress current zlib, including all contrib/* files\r\n - Open contrib\\vstudio\\vc11\\zlibvc.sln with Microsoft Visual C++ 2012\r\n \r\n+Build instructions for Visual Studio 2013 (32 bits or 64 bits)\r\n+--------------------------------------------------------------\r\n+- Decompress current zlib, including all contrib/* files\r\n+- Open contrib\\vstudio\\vc12\\zlibvc.sln with Microsoft Visual C++ 2013\r\n+\r\n+Build instructions for Visual Studio 2015 (32 bits or 64 bits)\r\n+--------------------------------------------------------------\r\n+- Decompress current zlib, including all contrib/* files\r\n+- Open contrib\\vstudio\\vc14\\zlibvc.sln with Microsoft Visual C++ 2015\r\n+\r\n \r\n Important\r\n ---------\r\n@@ -63,3 +73,6 @@ Additional notes\n \r\n Gilles Vollant\r\n info@winimage.com\r\n+\r\n+Visual Studio 2013 and 2015 Projects from Sean Hunt\r\n+seandhunt_7@yahoo.com\r"}, {"sha": "f1c19bcec08be863665d664398b2abe814ae64ed", "filename": "zlib/contrib/vstudio/vc10/zlib.rc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlib.rc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlib.rc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlib.rc?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -2,8 +2,8 @@\n \r\n #define IDR_VERSION1  1\r\n IDR_VERSION1\tVERSIONINFO\tMOVEABLE IMPURE LOADONCALL DISCARDABLE\r\n-  FILEVERSION\t 1,2,8,0\r\n-  PRODUCTVERSION 1,2,8,0\r\n+  FILEVERSION\t 1, 2, 10, 0\r\n+  PRODUCTVERSION 1, 2, 10, 0\r\n   FILEFLAGSMASK\tVS_FFI_FILEFLAGSMASK\r\n   FILEFLAGS\t0\r\n   FILEOS\tVOS_DOS_WINDOWS32\r\n@@ -17,12 +17,12 @@ BEGIN\n \r\n     BEGIN\r\n       VALUE \"FileDescription\", \"zlib data compression and ZIP file I/O library\\0\"\r\n-      VALUE \"FileVersion\",\t\"1.2.8\\0\"\r\n+      VALUE \"FileVersion\",\t\"1.2.10\\0\"\r\n       VALUE \"InternalName\",\t\"zlib\\0\"\r\n       VALUE \"OriginalFilename\",\t\"zlibwapi.dll\\0\"\r\n       VALUE \"ProductName\",\t\"ZLib.DLL\\0\"\r\n       VALUE \"Comments\",\"DLL support by Alessandro Iacopetti & Gilles Vollant\\0\"\r\n-      VALUE \"LegalCopyright\", \"(C) 1995-2013 Jean-loup Gailly & Mark Adler\\0\"\r\n+      VALUE \"LegalCopyright\", \"(C) 1995-2017 Jean-loup Gailly & Mark Adler\\0\"\r\n     END\r\n   END\r\n   BLOCK \"VarFileInfo\"\r"}, {"sha": "54e683d99c3547ad891396f3927b2fda49a21c65", "filename": "zlib/contrib/vstudio/vc10/zlibvc.def", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibvc.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibvc.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibvc.def?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,7 +1,7 @@\n LIBRARY\r\n ; zlib data compression and ZIP file I/O library\r\n \r\n-VERSION\t\t1.2.8\r\n+VERSION\t\t1.2\r\n \r\n EXPORTS\r\n         adler32                                  @1\r\n@@ -141,3 +141,13 @@ EXPORTS\n ; zlib1 v1.2.8 added:\r\n         inflateGetDictionary                    @166\r\n         gzvprintf                               @167\r\n+\r\n+; zlib1 v1.2.9 added:\r\n+        inflateCodesUsed                        @168\r\n+        inflateValidate                         @169\r\n+        uncompress2                             @170\r\n+        gzfread                                 @171\r\n+        gzfwrite                                @172\r\n+        deflateGetDictionary                    @173\r\n+        adler32_z                               @174\r\n+        crc32_z                                 @175\r"}, {"sha": "f1c19bcec08be863665d664398b2abe814ae64ed", "filename": "zlib/contrib/vstudio/vc11/zlib.rc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc11%2Fzlib.rc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc11%2Fzlib.rc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc11%2Fzlib.rc?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -2,8 +2,8 @@\n \r\n #define IDR_VERSION1  1\r\n IDR_VERSION1\tVERSIONINFO\tMOVEABLE IMPURE LOADONCALL DISCARDABLE\r\n-  FILEVERSION\t 1,2,8,0\r\n-  PRODUCTVERSION 1,2,8,0\r\n+  FILEVERSION\t 1, 2, 10, 0\r\n+  PRODUCTVERSION 1, 2, 10, 0\r\n   FILEFLAGSMASK\tVS_FFI_FILEFLAGSMASK\r\n   FILEFLAGS\t0\r\n   FILEOS\tVOS_DOS_WINDOWS32\r\n@@ -17,12 +17,12 @@ BEGIN\n \r\n     BEGIN\r\n       VALUE \"FileDescription\", \"zlib data compression and ZIP file I/O library\\0\"\r\n-      VALUE \"FileVersion\",\t\"1.2.8\\0\"\r\n+      VALUE \"FileVersion\",\t\"1.2.10\\0\"\r\n       VALUE \"InternalName\",\t\"zlib\\0\"\r\n       VALUE \"OriginalFilename\",\t\"zlibwapi.dll\\0\"\r\n       VALUE \"ProductName\",\t\"ZLib.DLL\\0\"\r\n       VALUE \"Comments\",\"DLL support by Alessandro Iacopetti & Gilles Vollant\\0\"\r\n-      VALUE \"LegalCopyright\", \"(C) 1995-2013 Jean-loup Gailly & Mark Adler\\0\"\r\n+      VALUE \"LegalCopyright\", \"(C) 1995-2017 Jean-loup Gailly & Mark Adler\\0\"\r\n     END\r\n   END\r\n   BLOCK \"VarFileInfo\"\r"}, {"sha": "54e683d99c3547ad891396f3927b2fda49a21c65", "filename": "zlib/contrib/vstudio/vc11/zlibvc.def", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc11%2Fzlibvc.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc11%2Fzlibvc.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc11%2Fzlibvc.def?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,7 +1,7 @@\n LIBRARY\r\n ; zlib data compression and ZIP file I/O library\r\n \r\n-VERSION\t\t1.2.8\r\n+VERSION\t\t1.2\r\n \r\n EXPORTS\r\n         adler32                                  @1\r\n@@ -141,3 +141,13 @@ EXPORTS\n ; zlib1 v1.2.8 added:\r\n         inflateGetDictionary                    @166\r\n         gzvprintf                               @167\r\n+\r\n+; zlib1 v1.2.9 added:\r\n+        inflateCodesUsed                        @168\r\n+        inflateValidate                         @169\r\n+        uncompress2                             @170\r\n+        gzfread                                 @171\r\n+        gzfwrite                                @172\r\n+        deflateGetDictionary                    @173\r\n+        adler32_z                               @174\r\n+        crc32_z                                 @175\r"}, {"sha": "d88ac7fc7d6fcc1e068e8e24c3ca676bf4fb7c9c", "filename": "zlib/contrib/vstudio/vc12/miniunz.vcxproj", "status": "added", "additions": 316, "deletions": 0, "changes": 316, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc12%2Fminiunz.vcxproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc12%2Fminiunz.vcxproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc12%2Fminiunz.vcxproj?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -0,0 +1,316 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"12.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <ItemGroup Label=\"ProjectConfigurations\">\n+    <ProjectConfiguration Include=\"Debug|Itanium\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Itanium</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|Win32\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|x64\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Itanium\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Itanium</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Win32\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|x64\">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{C52F9E7B-498A-42BE-8DB4-85A15694382A}</ProjectGuid>\n+    <Keyword>Win32Proj</Keyword>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>Unicode</CharacterSet>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <ImportGroup Label=\"ExtensionSettings\">\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <PropertyGroup Label=\"UserMacros\" />\n+  <PropertyGroup>\n+    <_ProjectFileVersion>10.0.30128.1</_ProjectFileVersion>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\MiniUnzip$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\MiniUnzip$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\MiniUnzip$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\MiniUnzip$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\MiniUnzip$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\MiniUnzip$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\MiniUnzip$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\MiniUnzip$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">true</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\MiniUnzip$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\MiniUnzip$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\MiniUnzip$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\MiniUnzip$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">false</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">false</GenerateManifest>\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n+  </PropertyGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MinimalRebuild>true</MinimalRebuild>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>x86\\ZlibDllDebug\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)miniunz.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <ProgramDatabaseFile>$(OutDir)miniunz.pdb</ProgramDatabaseFile>\n+      <SubSystem>Console</SubSystem>\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\n+      <DataExecutionPrevention>\n+      </DataExecutionPrevention>\n+      <TargetMachine>MachineX86</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <ClCompile>\n+      <Optimization>MaxSpeed</Optimization>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <OmitFramePointers>true</OmitFramePointers>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>x86\\ZlibDllRelease\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)miniunz.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <SubSystem>Console</SubSystem>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\n+      <DataExecutionPrevention>\n+      </DataExecutionPrevention>\n+      <TargetMachine>MachineX86</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <Midl>\n+      <TargetEnvironment>X64</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MinimalRebuild>true</MinimalRebuild>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>x64\\ZlibDllDebug\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)miniunz.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <ProgramDatabaseFile>$(OutDir)miniunz.pdb</ProgramDatabaseFile>\n+      <SubSystem>Console</SubSystem>\n+      <TargetMachine>MachineX64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">\n+    <Midl>\n+      <TargetEnvironment>Itanium</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MinimalRebuild>true</MinimalRebuild>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>ia64\\ZlibDllDebug\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)miniunz.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <ProgramDatabaseFile>$(OutDir)miniunz.pdb</ProgramDatabaseFile>\n+      <SubSystem>Console</SubSystem>\n+      <TargetMachine>MachineIA64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <Midl>\n+      <TargetEnvironment>X64</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>MaxSpeed</Optimization>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <OmitFramePointers>true</OmitFramePointers>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>x64\\ZlibDllRelease\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)miniunz.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <SubSystem>Console</SubSystem>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <TargetMachine>MachineX64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">\n+    <Midl>\n+      <TargetEnvironment>Itanium</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>MaxSpeed</Optimization>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <OmitFramePointers>true</OmitFramePointers>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>ia64\\ZlibDllRelease\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)miniunz.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <SubSystem>Console</SubSystem>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <TargetMachine>MachineIA64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\minizip\\miniunz.c\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"zlibvc.vcxproj\">\n+      <Project>{8fd826f8-3739-44e6-8cc8-997122e53b8d}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <ImportGroup Label=\"ExtensionTargets\">\n+  </ImportGroup>\n+</Project>\n\\ No newline at end of file"}, {"sha": "f1f239c9e0c30d34a7c8aa25bd5f32c4b94aa11a", "filename": "zlib/contrib/vstudio/vc12/minizip.vcxproj", "status": "added", "additions": 313, "deletions": 0, "changes": 313, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc12%2Fminizip.vcxproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc12%2Fminizip.vcxproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc12%2Fminizip.vcxproj?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -0,0 +1,313 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"12.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <ItemGroup Label=\"ProjectConfigurations\">\n+    <ProjectConfiguration Include=\"Debug|Itanium\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Itanium</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|Win32\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|x64\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Itanium\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Itanium</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Win32\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|x64\">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}</ProjectGuid>\n+    <Keyword>Win32Proj</Keyword>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>Unicode</CharacterSet>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <ImportGroup Label=\"ExtensionSettings\">\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <PropertyGroup Label=\"UserMacros\" />\n+  <PropertyGroup>\n+    <_ProjectFileVersion>10.0.30128.1</_ProjectFileVersion>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\MiniZip$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\MiniZip$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\MiniZip$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\MiniZip$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\$(Configuration)\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\$(Configuration)\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">true</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\$(Configuration)\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</LinkIncremental>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\$(Configuration)\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">false</LinkIncremental>\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n+  </PropertyGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MinimalRebuild>true</MinimalRebuild>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>x86\\ZlibDllDebug\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)minizip.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <ProgramDatabaseFile>$(OutDir)minizip.pdb</ProgramDatabaseFile>\n+      <SubSystem>Console</SubSystem>\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\n+      <DataExecutionPrevention>\n+      </DataExecutionPrevention>\n+      <TargetMachine>MachineX86</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <ClCompile>\n+      <Optimization>MaxSpeed</Optimization>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <OmitFramePointers>true</OmitFramePointers>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>x86\\ZlibDllRelease\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)minizip.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <SubSystem>Console</SubSystem>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\n+      <DataExecutionPrevention>\n+      </DataExecutionPrevention>\n+      <TargetMachine>MachineX86</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <Midl>\n+      <TargetEnvironment>X64</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MinimalRebuild>true</MinimalRebuild>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>x64\\ZlibDllDebug\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)minizip.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <ProgramDatabaseFile>$(OutDir)minizip.pdb</ProgramDatabaseFile>\n+      <SubSystem>Console</SubSystem>\n+      <TargetMachine>MachineX64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">\n+    <Midl>\n+      <TargetEnvironment>Itanium</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MinimalRebuild>true</MinimalRebuild>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>ia64\\ZlibDllDebug\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)minizip.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <ProgramDatabaseFile>$(OutDir)minizip.pdb</ProgramDatabaseFile>\n+      <SubSystem>Console</SubSystem>\n+      <TargetMachine>MachineIA64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <Midl>\n+      <TargetEnvironment>X64</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>MaxSpeed</Optimization>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <OmitFramePointers>true</OmitFramePointers>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>x64\\ZlibDllRelease\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)minizip.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <SubSystem>Console</SubSystem>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <TargetMachine>MachineX64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">\n+    <Midl>\n+      <TargetEnvironment>Itanium</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>MaxSpeed</Optimization>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <OmitFramePointers>true</OmitFramePointers>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>ia64\\ZlibDllRelease\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)minizip.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <SubSystem>Console</SubSystem>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <TargetMachine>MachineIA64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\minizip\\minizip.c\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"zlibvc.vcxproj\">\n+      <Project>{8fd826f8-3739-44e6-8cc8-997122e53b8d}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <ImportGroup Label=\"ExtensionTargets\">\n+  </ImportGroup>\n+</Project>\n\\ No newline at end of file"}, {"sha": "64b2cbe34a2322b4d0b5463c0e70e8db08b3be3e", "filename": "zlib/contrib/vstudio/vc12/testzlib.vcxproj", "status": "added", "additions": 430, "deletions": 0, "changes": 430, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc12%2Ftestzlib.vcxproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc12%2Ftestzlib.vcxproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc12%2Ftestzlib.vcxproj?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -0,0 +1,430 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"12.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <ItemGroup Label=\"ProjectConfigurations\">\n+    <ProjectConfiguration Include=\"Debug|Itanium\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Itanium</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|Win32\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|x64\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"ReleaseWithoutAsm|Itanium\">\n+      <Configuration>ReleaseWithoutAsm</Configuration>\n+      <Platform>Itanium</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"ReleaseWithoutAsm|Win32\">\n+      <Configuration>ReleaseWithoutAsm</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"ReleaseWithoutAsm|x64\">\n+      <Configuration>ReleaseWithoutAsm</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Itanium\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Itanium</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Win32\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|x64\">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}</ProjectGuid>\n+    <RootNamespace>testzlib</RootNamespace>\n+    <Keyword>Win32Proj</Keyword>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>Unicode</CharacterSet>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <ImportGroup Label=\"ExtensionSettings\">\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <PropertyGroup Label=\"UserMacros\" />\n+  <PropertyGroup>\n+    <_ProjectFileVersion>10.0.30128.1</_ProjectFileVersion>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\TestZlib$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\TestZlib$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">x86\\TestZlib$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">x86\\TestZlib$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">false</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\TestZlib$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\TestZlib$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\TestZlib$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\TestZlib$(Configuration)\\Tmp\\</IntDir>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\TestZlib$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\TestZlib$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">true</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">x64\\TestZlib$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">x64\\TestZlib$(Configuration)\\Tmp\\</IntDir>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">ia64\\TestZlib$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">ia64\\TestZlib$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">false</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\TestZlib$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\TestZlib$(Configuration)\\Tmp\\</IntDir>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\TestZlib$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\TestZlib$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">false</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">false</GenerateManifest>\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n+  </PropertyGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <AdditionalIncludeDirectories>..\\..\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>ASMV;ASMINF;WIN32;ZLIB_WINAPI;_DEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MinimalRebuild>true</MinimalRebuild>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerOutput>AssemblyAndSourceCode</AssemblerOutput>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>..\\..\\masmx86\\match686.obj;..\\..\\masmx86\\inffas32.obj;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)testzlib.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <ProgramDatabaseFile>$(OutDir)testzlib.pdb</ProgramDatabaseFile>\n+      <SubSystem>Console</SubSystem>\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\n+      <DataExecutionPrevention>\n+      </DataExecutionPrevention>\n+      <TargetMachine>MachineX86</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">\n+    <ClCompile>\n+      <Optimization>MaxSpeed</Optimization>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <OmitFramePointers>true</OmitFramePointers>\n+      <AdditionalIncludeDirectories>..\\..\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN32;ZLIB_WINAPI;NDEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <OutputFile>$(OutDir)testzlib.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <SubSystem>Console</SubSystem>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\n+      <DataExecutionPrevention>\n+      </DataExecutionPrevention>\n+      <TargetMachine>MachineX86</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <ClCompile>\n+      <Optimization>MaxSpeed</Optimization>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <OmitFramePointers>true</OmitFramePointers>\n+      <AdditionalIncludeDirectories>..\\..\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>ASMV;ASMINF;WIN32;ZLIB_WINAPI;NDEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>..\\..\\masmx86\\match686.obj;..\\..\\masmx86\\inffas32.obj;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)testzlib.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <SubSystem>Console</SubSystem>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\n+      <DataExecutionPrevention>\n+      </DataExecutionPrevention>\n+      <TargetMachine>MachineX86</TargetMachine>\n+      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <ClCompile>\n+      <AdditionalIncludeDirectories>..\\..\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>ASMV;ASMINF;WIN32;ZLIB_WINAPI;_DEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>..\\..\\masmx64\\gvmat64.obj;..\\..\\masmx64\\inffasx64.obj;%(AdditionalDependencies)</AdditionalDependencies>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">\n+    <Midl>\n+      <TargetEnvironment>Itanium</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <AdditionalIncludeDirectories>..\\..\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>ZLIB_WINAPI;_DEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MinimalRebuild>true</MinimalRebuild>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerOutput>AssemblyAndSourceCode</AssemblerOutput>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <OutputFile>$(OutDir)testzlib.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <ProgramDatabaseFile>$(OutDir)testzlib.pdb</ProgramDatabaseFile>\n+      <SubSystem>Console</SubSystem>\n+      <TargetMachine>MachineIA64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">\n+    <ClCompile>\n+      <AdditionalIncludeDirectories>..\\..\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN32;ZLIB_WINAPI;NDEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">\n+    <Midl>\n+      <TargetEnvironment>Itanium</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>MaxSpeed</Optimization>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <OmitFramePointers>true</OmitFramePointers>\n+      <AdditionalIncludeDirectories>..\\..\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>ZLIB_WINAPI;NDEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <OutputFile>$(OutDir)testzlib.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <SubSystem>Console</SubSystem>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <TargetMachine>MachineIA64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <ClCompile>\n+      <AdditionalIncludeDirectories>..\\..\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>ASMV;ASMINF;WIN32;ZLIB_WINAPI;NDEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>..\\..\\masmx64\\gvmat64.obj;..\\..\\masmx64\\inffasx64.obj;%(AdditionalDependencies)</AdditionalDependencies>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">\n+    <Midl>\n+      <TargetEnvironment>Itanium</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>MaxSpeed</Optimization>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <OmitFramePointers>true</OmitFramePointers>\n+      <AdditionalIncludeDirectories>..\\..\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>ZLIB_WINAPI;NDEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <OutputFile>$(OutDir)testzlib.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <SubSystem>Console</SubSystem>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <TargetMachine>MachineIA64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\..\\adler32.c\" />\n+    <ClCompile Include=\"..\\..\\..\\compress.c\" />\n+    <ClCompile Include=\"..\\..\\..\\crc32.c\" />\n+    <ClCompile Include=\"..\\..\\..\\deflate.c\" />\n+    <ClCompile Include=\"..\\..\\..\\infback.c\" />\n+    <ClCompile Include=\"..\\..\\masmx64\\inffas8664.c\">\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">true</ExcludedFromBuild>\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</ExcludedFromBuild>\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">true</ExcludedFromBuild>\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">true</ExcludedFromBuild>\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">true</ExcludedFromBuild>\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">true</ExcludedFromBuild>\n+    </ClCompile>\n+    <ClCompile Include=\"..\\..\\..\\inffast.c\" />\n+    <ClCompile Include=\"..\\..\\..\\inflate.c\" />\n+    <ClCompile Include=\"..\\..\\..\\inftrees.c\" />\n+    <ClCompile Include=\"..\\..\\testzlib\\testzlib.c\" />\n+    <ClCompile Include=\"..\\..\\..\\trees.c\" />\n+    <ClCompile Include=\"..\\..\\..\\uncompr.c\" />\n+    <ClCompile Include=\"..\\..\\..\\zutil.c\" />\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <ImportGroup Label=\"ExtensionTargets\">\n+  </ImportGroup>\n+</Project>\n\\ No newline at end of file"}, {"sha": "c66573a8bfe186bc09684d5401c066cfe36e954b", "filename": "zlib/contrib/vstudio/vc12/testzlibdll.vcxproj", "status": "added", "additions": 316, "deletions": 0, "changes": 316, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc12%2Ftestzlibdll.vcxproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc12%2Ftestzlibdll.vcxproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc12%2Ftestzlibdll.vcxproj?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -0,0 +1,316 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"12.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <ItemGroup Label=\"ProjectConfigurations\">\n+    <ProjectConfiguration Include=\"Debug|Itanium\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Itanium</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|Win32\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|x64\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Itanium\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Itanium</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Win32\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|x64\">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{C52F9E7B-498A-42BE-8DB4-85A15694366A}</ProjectGuid>\n+    <Keyword>Win32Proj</Keyword>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>Unicode</CharacterSet>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <ImportGroup Label=\"ExtensionSettings\">\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <PropertyGroup Label=\"UserMacros\" />\n+  <PropertyGroup>\n+    <_ProjectFileVersion>10.0.30128.1</_ProjectFileVersion>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\TestZlibDll$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\TestZlibDll$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\TestZlibDll$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\TestZlibDll$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\TestZlibDll$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\TestZlibDll$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\TestZlibDll$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\TestZlibDll$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">true</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\TestZlibDll$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\TestZlibDll$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\TestZlibDll$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\TestZlibDll$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">false</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">false</GenerateManifest>\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n+  </PropertyGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MinimalRebuild>true</MinimalRebuild>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>x86\\ZlibDllDebug\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)testzlibdll.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <ProgramDatabaseFile>$(OutDir)testzlib.pdb</ProgramDatabaseFile>\n+      <SubSystem>Console</SubSystem>\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\n+      <DataExecutionPrevention>\n+      </DataExecutionPrevention>\n+      <TargetMachine>MachineX86</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <ClCompile>\n+      <Optimization>MaxSpeed</Optimization>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <OmitFramePointers>true</OmitFramePointers>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>x86\\ZlibDllRelease\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)testzlibdll.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <SubSystem>Console</SubSystem>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\n+      <DataExecutionPrevention>\n+      </DataExecutionPrevention>\n+      <TargetMachine>MachineX86</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <Midl>\n+      <TargetEnvironment>X64</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MinimalRebuild>true</MinimalRebuild>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>x64\\ZlibDllDebug\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)testzlibdll.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <ProgramDatabaseFile>$(OutDir)testzlib.pdb</ProgramDatabaseFile>\n+      <SubSystem>Console</SubSystem>\n+      <TargetMachine>MachineX64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">\n+    <Midl>\n+      <TargetEnvironment>Itanium</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MinimalRebuild>true</MinimalRebuild>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>ia64\\ZlibDllDebug\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)testzlibdll.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <ProgramDatabaseFile>$(OutDir)testzlib.pdb</ProgramDatabaseFile>\n+      <SubSystem>Console</SubSystem>\n+      <TargetMachine>MachineIA64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <Midl>\n+      <TargetEnvironment>X64</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>MaxSpeed</Optimization>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <OmitFramePointers>true</OmitFramePointers>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>x64\\ZlibDllRelease\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)testzlibdll.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <SubSystem>Console</SubSystem>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <TargetMachine>MachineX64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">\n+    <Midl>\n+      <TargetEnvironment>Itanium</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>MaxSpeed</Optimization>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <OmitFramePointers>true</OmitFramePointers>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>ia64\\ZlibDllRelease\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)testzlibdll.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <SubSystem>Console</SubSystem>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <TargetMachine>MachineIA64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\testzlib\\testzlib.c\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"zlibvc.vcxproj\">\n+      <Project>{8fd826f8-3739-44e6-8cc8-997122e53b8d}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <ImportGroup Label=\"ExtensionTargets\">\n+  </ImportGroup>\n+</Project>\n\\ No newline at end of file"}, {"sha": "ef3829898b6d2a9434447c330d90d62415996676", "filename": "zlib/contrib/vstudio/vc12/zlib.rc", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc12%2Fzlib.rc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc12%2Fzlib.rc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc12%2Fzlib.rc?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -0,0 +1,32 @@\n+#include <windows.h>\n+\n+#define IDR_VERSION1  1\n+IDR_VERSION1\tVERSIONINFO\tMOVEABLE IMPURE LOADONCALL DISCARDABLE\n+  FILEVERSION\t 1, 2, 10, 0\n+  PRODUCTVERSION 1, 2, 10, 0\n+  FILEFLAGSMASK\tVS_FFI_FILEFLAGSMASK\n+  FILEFLAGS\t0\n+  FILEOS\tVOS_DOS_WINDOWS32\n+  FILETYPE\tVFT_DLL\n+  FILESUBTYPE\t0\t// not used\n+BEGIN\n+  BLOCK \"StringFileInfo\"\n+  BEGIN\n+    BLOCK \"040904E4\"\n+    //language ID = U.S. English, char set = Windows, Multilingual\n+\n+    BEGIN\n+      VALUE \"FileDescription\", \"zlib data compression and ZIP file I/O library\\0\"\n+      VALUE \"FileVersion\",\t\"1.2.10\\0\"\n+      VALUE \"InternalName\",\t\"zlib\\0\"\n+      VALUE \"OriginalFilename\",\t\"zlibwapi.dll\\0\"\n+      VALUE \"ProductName\",\t\"ZLib.DLL\\0\"\n+      VALUE \"Comments\",\"DLL support by Alessandro Iacopetti & Gilles Vollant\\0\"\n+      VALUE \"LegalCopyright\", \"(C) 1995-2017 Jean-loup Gailly & Mark Adler\\0\"\n+    END\n+  END\n+  BLOCK \"VarFileInfo\"\n+  BEGIN\n+    VALUE \"Translation\", 0x0409, 1252\n+  END\n+END"}, {"sha": "3fdee7c50782991faf0ee0e61d5a36e1f2be8bd2", "filename": "zlib/contrib/vstudio/vc12/zlibstat.vcxproj", "status": "added", "additions": 467, "deletions": 0, "changes": 467, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc12%2Fzlibstat.vcxproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc12%2Fzlibstat.vcxproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc12%2Fzlibstat.vcxproj?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -0,0 +1,467 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"12.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <ItemGroup Label=\"ProjectConfigurations\">\n+    <ProjectConfiguration Include=\"Debug|Itanium\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Itanium</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|Win32\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|x64\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"ReleaseWithoutAsm|Itanium\">\n+      <Configuration>ReleaseWithoutAsm</Configuration>\n+      <Platform>Itanium</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"ReleaseWithoutAsm|Win32\">\n+      <Configuration>ReleaseWithoutAsm</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"ReleaseWithoutAsm|x64\">\n+      <Configuration>ReleaseWithoutAsm</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Itanium\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Itanium</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Win32\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|x64\">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}</ProjectGuid>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseOfMfc>false</UseOfMfc>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseOfMfc>false</UseOfMfc>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseOfMfc>false</UseOfMfc>\n+    <PlatformToolset>v120</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseOfMfc>false</UseOfMfc>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseOfMfc>false</UseOfMfc>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseOfMfc>false</UseOfMfc>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseOfMfc>false</UseOfMfc>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseOfMfc>false</UseOfMfc>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseOfMfc>false</UseOfMfc>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <ImportGroup Label=\"ExtensionSettings\">\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <PropertyGroup Label=\"UserMacros\" />\n+  <PropertyGroup>\n+    <_ProjectFileVersion>10.0.30128.1</_ProjectFileVersion>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\ZlibStat$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\ZlibStat$(Configuration)\\Tmp\\</IntDir>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\ZlibStat$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\ZlibStat$(Configuration)\\Tmp\\</IntDir>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">x86\\ZlibStat$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">x86\\ZlibStat$(Configuration)\\Tmp\\</IntDir>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\ZlibStat$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\ZlibStat$(Configuration)\\Tmp\\</IntDir>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\ZlibStat$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\ZlibStat$(Configuration)\\Tmp\\</IntDir>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\ZlibStat$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\ZlibStat$(Configuration)\\Tmp\\</IntDir>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\ZlibStat$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\ZlibStat$(Configuration)\\Tmp\\</IntDir>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">x64\\ZlibStat$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">x64\\ZlibStat$(Configuration)\\Tmp\\</IntDir>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">ia64\\ZlibStat$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">ia64\\ZlibStat$(Configuration)\\Tmp\\</IntDir>\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n+  </PropertyGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN32;ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <ExceptionHandling>\n+      </ExceptionHandling>\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibstat.pch</PrecompiledHeaderOutputFile>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\n+      <WarningLevel>Level3</WarningLevel>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <DebugInformationFormat>OldStyle</DebugInformationFormat>\n+    </ClCompile>\n+    <ResourceCompile>\n+      <Culture>0x040c</Culture>\n+    </ResourceCompile>\n+    <Lib>\n+      <AdditionalOptions>/MACHINE:X86 /NODEFAULTLIB %(AdditionalOptions)</AdditionalOptions>\n+      <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </Lib>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <ClCompile>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN32;ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ASMV;ASMINF;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <ExceptionHandling>\n+      </ExceptionHandling>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibstat.pch</PrecompiledHeaderOutputFile>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\n+      <WarningLevel>Level3</WarningLevel>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </ClCompile>\n+    <ResourceCompile>\n+      <Culture>0x040c</Culture>\n+    </ResourceCompile>\n+    <Lib>\n+      <AdditionalOptions>/MACHINE:X86 /NODEFAULTLIB %(AdditionalOptions)</AdditionalOptions>\n+      <AdditionalDependencies>..\\..\\masmx86\\match686.obj;..\\..\\masmx86\\inffas32.obj;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </Lib>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">\n+    <ClCompile>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN32;ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <ExceptionHandling>\n+      </ExceptionHandling>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibstat.pch</PrecompiledHeaderOutputFile>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\n+      <WarningLevel>Level3</WarningLevel>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </ClCompile>\n+    <ResourceCompile>\n+      <Culture>0x040c</Culture>\n+    </ResourceCompile>\n+    <Lib>\n+      <AdditionalOptions>/MACHINE:X86 /NODEFAULTLIB %(AdditionalOptions)</AdditionalOptions>\n+      <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </Lib>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <Midl>\n+      <TargetEnvironment>X64</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <ExceptionHandling>\n+      </ExceptionHandling>\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibstat.pch</PrecompiledHeaderOutputFile>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\n+      <WarningLevel>Level3</WarningLevel>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <DebugInformationFormat>OldStyle</DebugInformationFormat>\n+    </ClCompile>\n+    <ResourceCompile>\n+      <Culture>0x040c</Culture>\n+    </ResourceCompile>\n+    <Lib>\n+      <AdditionalOptions>/MACHINE:AMD64 /NODEFAULTLIB %(AdditionalOptions)</AdditionalOptions>\n+      <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </Lib>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">\n+    <Midl>\n+      <TargetEnvironment>Itanium</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <ExceptionHandling>\n+      </ExceptionHandling>\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibstat.pch</PrecompiledHeaderOutputFile>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\n+      <WarningLevel>Level3</WarningLevel>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <DebugInformationFormat>OldStyle</DebugInformationFormat>\n+    </ClCompile>\n+    <ResourceCompile>\n+      <Culture>0x040c</Culture>\n+    </ResourceCompile>\n+    <Lib>\n+      <AdditionalOptions>/MACHINE:IA64 /NODEFAULTLIB %(AdditionalOptions)</AdditionalOptions>\n+      <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </Lib>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <Midl>\n+      <TargetEnvironment>X64</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ASMV;ASMINF;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <ExceptionHandling>\n+      </ExceptionHandling>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibstat.pch</PrecompiledHeaderOutputFile>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\n+      <WarningLevel>Level3</WarningLevel>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </ClCompile>\n+    <ResourceCompile>\n+      <Culture>0x040c</Culture>\n+    </ResourceCompile>\n+    <Lib>\n+      <AdditionalOptions>/MACHINE:AMD64 /NODEFAULTLIB %(AdditionalOptions)</AdditionalOptions>\n+      <AdditionalDependencies>..\\..\\masmx64\\gvmat64.obj;..\\..\\masmx64\\inffasx64.obj;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </Lib>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">\n+    <Midl>\n+      <TargetEnvironment>Itanium</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <ExceptionHandling>\n+      </ExceptionHandling>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibstat.pch</PrecompiledHeaderOutputFile>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\n+      <WarningLevel>Level3</WarningLevel>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </ClCompile>\n+    <ResourceCompile>\n+      <Culture>0x040c</Culture>\n+    </ResourceCompile>\n+    <Lib>\n+      <AdditionalOptions>/MACHINE:IA64 /NODEFAULTLIB %(AdditionalOptions)</AdditionalOptions>\n+      <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </Lib>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">\n+    <Midl>\n+      <TargetEnvironment>X64</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <ExceptionHandling>\n+      </ExceptionHandling>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibstat.pch</PrecompiledHeaderOutputFile>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\n+      <WarningLevel>Level3</WarningLevel>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </ClCompile>\n+    <ResourceCompile>\n+      <Culture>0x040c</Culture>\n+    </ResourceCompile>\n+    <Lib>\n+      <AdditionalOptions>/MACHINE:AMD64 /NODEFAULTLIB %(AdditionalOptions)</AdditionalOptions>\n+      <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </Lib>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">\n+    <Midl>\n+      <TargetEnvironment>Itanium</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <ExceptionHandling>\n+      </ExceptionHandling>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibstat.pch</PrecompiledHeaderOutputFile>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\n+      <WarningLevel>Level3</WarningLevel>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </ClCompile>\n+    <ResourceCompile>\n+      <Culture>0x040c</Culture>\n+    </ResourceCompile>\n+    <Lib>\n+      <AdditionalOptions>/MACHINE:IA64 /NODEFAULTLIB %(AdditionalOptions)</AdditionalOptions>\n+      <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </Lib>\n+  </ItemDefinitionGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\..\\adler32.c\" />\n+    <ClCompile Include=\"..\\..\\..\\compress.c\" />\n+    <ClCompile Include=\"..\\..\\..\\crc32.c\" />\n+    <ClCompile Include=\"..\\..\\..\\deflate.c\" />\n+    <ClCompile Include=\"..\\..\\..\\gzclose.c\" />\n+    <ClCompile Include=\"..\\..\\..\\gzlib.c\" />\n+    <ClCompile Include=\"..\\..\\..\\gzread.c\" />\n+    <ClCompile Include=\"..\\..\\..\\gzwrite.c\" />\n+    <ClCompile Include=\"..\\..\\..\\infback.c\" />\n+    <ClCompile Include=\"..\\..\\masmx64\\inffas8664.c\">\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">true</ExcludedFromBuild>\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</ExcludedFromBuild>\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">true</ExcludedFromBuild>\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">true</ExcludedFromBuild>\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">true</ExcludedFromBuild>\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">true</ExcludedFromBuild>\n+    </ClCompile>\n+    <ClCompile Include=\"..\\..\\..\\inffast.c\" />\n+    <ClCompile Include=\"..\\..\\..\\inflate.c\" />\n+    <ClCompile Include=\"..\\..\\..\\inftrees.c\" />\n+    <ClCompile Include=\"..\\..\\minizip\\ioapi.c\" />\n+    <ClCompile Include=\"..\\..\\..\\trees.c\" />\n+    <ClCompile Include=\"..\\..\\..\\uncompr.c\" />\n+    <ClCompile Include=\"..\\..\\minizip\\unzip.c\" />\n+    <ClCompile Include=\"..\\..\\minizip\\zip.c\" />\n+    <ClCompile Include=\"..\\..\\..\\zutil.c\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ResourceCompile Include=\"zlib.rc\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <None Include=\"zlibvc.def\" />\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <ImportGroup Label=\"ExtensionTargets\">\n+  </ImportGroup>\n+</Project>\n\\ No newline at end of file"}, {"sha": "54e683d99c3547ad891396f3927b2fda49a21c65", "filename": "zlib/contrib/vstudio/vc12/zlibvc.def", "status": "added", "additions": 153, "deletions": 0, "changes": 153, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc12%2Fzlibvc.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc12%2Fzlibvc.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc12%2Fzlibvc.def?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -0,0 +1,153 @@\n+LIBRARY\r\n+; zlib data compression and ZIP file I/O library\r\n+\r\n+VERSION\t\t1.2\r\n+\r\n+EXPORTS\r\n+        adler32                                  @1\r\n+        compress                                 @2\r\n+        crc32                                    @3\r\n+        deflate                                  @4\r\n+        deflateCopy                              @5\r\n+        deflateEnd                               @6\r\n+        deflateInit2_                            @7\r\n+        deflateInit_                             @8\r\n+        deflateParams                            @9\r\n+        deflateReset                             @10\r\n+        deflateSetDictionary                     @11\r\n+        gzclose                                  @12\r\n+        gzdopen                                  @13\r\n+        gzerror                                  @14\r\n+        gzflush                                  @15\r\n+        gzopen                                   @16\r\n+        gzread                                   @17\r\n+        gzwrite                                  @18\r\n+        inflate                                  @19\r\n+        inflateEnd                               @20\r\n+        inflateInit2_                            @21\r\n+        inflateInit_                             @22\r\n+        inflateReset                             @23\r\n+        inflateSetDictionary                     @24\r\n+        inflateSync                              @25\r\n+        uncompress                               @26\r\n+        zlibVersion                              @27\r\n+        gzprintf                                 @28\r\n+        gzputc                                   @29\r\n+        gzgetc                                   @30\r\n+        gzseek                                   @31\r\n+        gzrewind                                 @32\r\n+        gztell                                   @33\r\n+        gzeof                                    @34\r\n+        gzsetparams                              @35\r\n+        zError                                   @36\r\n+        inflateSyncPoint                         @37\r\n+        get_crc_table                            @38\r\n+        compress2                                @39\r\n+        gzputs                                   @40\r\n+        gzgets                                   @41\r\n+        inflateCopy                              @42\r\n+        inflateBackInit_                         @43\r\n+        inflateBack                              @44\r\n+        inflateBackEnd                           @45\r\n+        compressBound                            @46\r\n+        deflateBound                             @47\r\n+        gzclearerr                               @48\r\n+        gzungetc                                 @49\r\n+        zlibCompileFlags                         @50\r\n+        deflatePrime                             @51\r\n+        deflatePending                           @52\r\n+\r\n+        unzOpen                                  @61\r\n+        unzClose                                 @62\r\n+        unzGetGlobalInfo                         @63\r\n+        unzGetCurrentFileInfo                    @64\r\n+        unzGoToFirstFile                         @65\r\n+        unzGoToNextFile                          @66\r\n+        unzOpenCurrentFile                       @67\r\n+        unzReadCurrentFile                       @68\r\n+        unzOpenCurrentFile3                      @69\r\n+        unztell                                  @70\r\n+        unzeof                                   @71\r\n+        unzCloseCurrentFile                      @72\r\n+        unzGetGlobalComment                      @73\r\n+        unzStringFileNameCompare                 @74\r\n+        unzLocateFile                            @75\r\n+        unzGetLocalExtrafield                    @76\r\n+        unzOpen2                                 @77\r\n+        unzOpenCurrentFile2                      @78\r\n+        unzOpenCurrentFilePassword               @79\r\n+\r\n+        zipOpen                                  @80\r\n+        zipOpenNewFileInZip                      @81\r\n+        zipWriteInFileInZip                      @82\r\n+        zipCloseFileInZip                        @83\r\n+        zipClose                                 @84\r\n+        zipOpenNewFileInZip2                     @86\r\n+        zipCloseFileInZipRaw                     @87\r\n+        zipOpen2                                 @88\r\n+        zipOpenNewFileInZip3                     @89\r\n+\r\n+        unzGetFilePos                            @100\r\n+        unzGoToFilePos                           @101\r\n+\r\n+        fill_win32_filefunc                      @110\r\n+\r\n+; zlibwapi v1.2.4 added:\r\n+        fill_win32_filefunc64                   @111\r\n+        fill_win32_filefunc64A                  @112\r\n+        fill_win32_filefunc64W                  @113\r\n+\r\n+        unzOpen64                               @120\r\n+        unzOpen2_64                             @121\r\n+        unzGetGlobalInfo64                      @122\r\n+        unzGetCurrentFileInfo64                 @124\r\n+        unzGetCurrentFileZStreamPos64           @125\r\n+        unztell64                               @126\r\n+        unzGetFilePos64                         @127\r\n+        unzGoToFilePos64                        @128\r\n+\r\n+        zipOpen64                               @130\r\n+        zipOpen2_64                             @131\r\n+        zipOpenNewFileInZip64                   @132\r\n+        zipOpenNewFileInZip2_64                 @133\r\n+        zipOpenNewFileInZip3_64                 @134\r\n+        zipOpenNewFileInZip4_64                 @135\r\n+        zipCloseFileInZipRaw64                  @136\r\n+\r\n+; zlib1 v1.2.4 added:\r\n+        adler32_combine                         @140\r\n+        crc32_combine                           @142\r\n+        deflateSetHeader                        @144\r\n+        deflateTune                             @145\r\n+        gzbuffer                                @146\r\n+        gzclose_r                               @147\r\n+        gzclose_w                               @148\r\n+        gzdirect                                @149\r\n+        gzoffset                                @150\r\n+        inflateGetHeader                        @156\r\n+        inflateMark                             @157\r\n+        inflatePrime                            @158\r\n+        inflateReset2                           @159\r\n+        inflateUndermine                        @160\r\n+\r\n+; zlib1 v1.2.6 added:\r\n+        gzgetc_                                 @161\r\n+        inflateResetKeep                        @163\r\n+        deflateResetKeep                        @164\r\n+\r\n+; zlib1 v1.2.7 added:\r\n+        gzopen_w                                @165\r\n+\r\n+; zlib1 v1.2.8 added:\r\n+        inflateGetDictionary                    @166\r\n+        gzvprintf                               @167\r\n+\r\n+; zlib1 v1.2.9 added:\r\n+        inflateCodesUsed                        @168\r\n+        inflateValidate                         @169\r\n+        uncompress2                             @170\r\n+        gzfread                                 @171\r\n+        gzfwrite                                @172\r\n+        deflateGetDictionary                    @173\r\n+        adler32_z                               @174\r\n+        crc32_z                                 @175\r"}, {"sha": "dcda2298499fb85c5fb3f6ff3837093346d43084", "filename": "zlib/contrib/vstudio/vc12/zlibvc.sln", "status": "added", "additions": 119, "deletions": 0, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc12%2Fzlibvc.sln", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc12%2Fzlibvc.sln", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc12%2Fzlibvc.sln?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -0,0 +1,119 @@\n+\ufeff\n+Microsoft Visual Studio Solution File, Format Version 12.00\n+# Visual Studio 2013\n+VisualStudioVersion = 12.0.40629.0\n+MinimumVisualStudioVersion = 10.0.40219.1\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"zlibvc\", \"zlibvc.vcxproj\", \"{8FD826F8-3739-44E6-8CC8-997122E53B8D}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"zlibstat\", \"zlibstat.vcxproj\", \"{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"testzlib\", \"testzlib.vcxproj\", \"{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"testzlibdll\", \"testzlibdll.vcxproj\", \"{C52F9E7B-498A-42BE-8DB4-85A15694366A}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"minizip\", \"minizip.vcxproj\", \"{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"miniunz\", \"miniunz.vcxproj\", \"{C52F9E7B-498A-42BE-8DB4-85A15694382A}\"\n+EndProject\n+Global\n+\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n+\t\tDebug|Itanium = Debug|Itanium\n+\t\tDebug|Win32 = Debug|Win32\n+\t\tDebug|x64 = Debug|x64\n+\t\tRelease|Itanium = Release|Itanium\n+\t\tRelease|Win32 = Release|Win32\n+\t\tRelease|x64 = Release|x64\n+\t\tReleaseWithoutAsm|Itanium = ReleaseWithoutAsm|Itanium\n+\t\tReleaseWithoutAsm|Win32 = ReleaseWithoutAsm|Win32\n+\t\tReleaseWithoutAsm|x64 = ReleaseWithoutAsm|x64\n+\tEndGlobalSection\n+\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Debug|Itanium.ActiveCfg = Debug|Win32\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Debug|Win32.ActiveCfg = Debug|Win32\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Debug|Win32.Build.0 = Debug|Win32\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Debug|x64.ActiveCfg = Debug|x64\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Debug|x64.Build.0 = Debug|x64\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Release|Itanium.ActiveCfg = Release|Win32\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Release|Win32.ActiveCfg = Release|Win32\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Release|Win32.Build.0 = Release|Win32\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Release|x64.ActiveCfg = Release|x64\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Release|x64.Build.0 = Release|x64\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.ReleaseWithoutAsm|Itanium.ActiveCfg = ReleaseWithoutAsm|Win32\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.ReleaseWithoutAsm|Win32.ActiveCfg = ReleaseWithoutAsm|Win32\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.ReleaseWithoutAsm|Win32.Build.0 = ReleaseWithoutAsm|Win32\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.ReleaseWithoutAsm|x64.ActiveCfg = ReleaseWithoutAsm|x64\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.ReleaseWithoutAsm|x64.Build.0 = ReleaseWithoutAsm|x64\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Debug|Itanium.ActiveCfg = Debug|Win32\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Debug|Win32.ActiveCfg = Debug|Win32\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Debug|Win32.Build.0 = Debug|Win32\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Debug|x64.ActiveCfg = Debug|x64\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Debug|x64.Build.0 = Debug|x64\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Release|Itanium.ActiveCfg = Release|Win32\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Release|Win32.ActiveCfg = Release|Win32\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Release|Win32.Build.0 = Release|Win32\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Release|x64.ActiveCfg = Release|x64\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Release|x64.Build.0 = Release|x64\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.ReleaseWithoutAsm|Itanium.ActiveCfg = ReleaseWithoutAsm|Win32\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.ReleaseWithoutAsm|Win32.ActiveCfg = ReleaseWithoutAsm|Win32\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.ReleaseWithoutAsm|Win32.Build.0 = ReleaseWithoutAsm|Win32\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.ReleaseWithoutAsm|x64.ActiveCfg = ReleaseWithoutAsm|x64\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.ReleaseWithoutAsm|x64.Build.0 = ReleaseWithoutAsm|x64\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Debug|Itanium.ActiveCfg = Debug|Win32\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Debug|Win32.ActiveCfg = Debug|Win32\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Debug|Win32.Build.0 = Debug|Win32\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Debug|x64.ActiveCfg = Debug|x64\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Debug|x64.Build.0 = Debug|x64\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Release|Itanium.ActiveCfg = Release|Win32\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Release|Win32.ActiveCfg = Release|Win32\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Release|Win32.Build.0 = Release|Win32\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Release|x64.ActiveCfg = Release|x64\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Release|x64.Build.0 = Release|x64\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|Itanium.ActiveCfg = ReleaseWithoutAsm|Win32\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|Win32.ActiveCfg = ReleaseWithoutAsm|Win32\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|Win32.Build.0 = ReleaseWithoutAsm|Win32\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|x64.ActiveCfg = ReleaseWithoutAsm|x64\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|x64.Build.0 = ReleaseWithoutAsm|x64\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Debug|Itanium.ActiveCfg = Debug|Win32\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Debug|Win32.ActiveCfg = Debug|Win32\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Debug|Win32.Build.0 = Debug|Win32\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Debug|x64.ActiveCfg = Debug|x64\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Debug|x64.Build.0 = Debug|x64\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Release|Itanium.ActiveCfg = Release|Win32\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Release|Win32.ActiveCfg = Release|Win32\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Release|Win32.Build.0 = Release|Win32\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Release|x64.ActiveCfg = Release|x64\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Release|x64.Build.0 = Release|x64\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.ReleaseWithoutAsm|Itanium.ActiveCfg = Release|Win32\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.ReleaseWithoutAsm|Win32.ActiveCfg = Release|Win32\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.ReleaseWithoutAsm|x64.ActiveCfg = Release|x64\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Debug|Itanium.ActiveCfg = Debug|Win32\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Debug|Win32.ActiveCfg = Debug|Win32\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Debug|Win32.Build.0 = Debug|Win32\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Debug|x64.ActiveCfg = Debug|x64\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Debug|x64.Build.0 = Debug|x64\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Release|Itanium.ActiveCfg = Release|Win32\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Release|Win32.ActiveCfg = Release|Win32\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Release|Win32.Build.0 = Release|Win32\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Release|x64.ActiveCfg = Release|x64\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Release|x64.Build.0 = Release|x64\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|Itanium.ActiveCfg = Release|Win32\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|Win32.ActiveCfg = Release|Win32\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|x64.ActiveCfg = Release|x64\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Debug|Itanium.ActiveCfg = Debug|Win32\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Debug|Win32.ActiveCfg = Debug|Win32\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Debug|Win32.Build.0 = Debug|Win32\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Debug|x64.ActiveCfg = Debug|x64\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Debug|x64.Build.0 = Debug|x64\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Release|Itanium.ActiveCfg = Release|Win32\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Release|Win32.ActiveCfg = Release|Win32\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Release|Win32.Build.0 = Release|Win32\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Release|x64.ActiveCfg = Release|x64\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Release|x64.Build.0 = Release|x64\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.ReleaseWithoutAsm|Itanium.ActiveCfg = Release|Win32\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.ReleaseWithoutAsm|Win32.ActiveCfg = Release|Win32\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.ReleaseWithoutAsm|x64.ActiveCfg = Release|x64\n+\tEndGlobalSection\n+\tGlobalSection(SolutionProperties) = preSolution\n+\t\tHideSolutionNode = FALSE\n+\tEndGlobalSection\n+EndGlobal"}, {"sha": "ab2b6c360355baeede1c82b017934d9b896aec71", "filename": "zlib/contrib/vstudio/vc12/zlibvc.vcxproj", "status": "added", "additions": 692, "deletions": 0, "changes": 692, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc12%2Fzlibvc.vcxproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc12%2Fzlibvc.vcxproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc12%2Fzlibvc.vcxproj?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -0,0 +1,692 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"12.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <ItemGroup Label=\"ProjectConfigurations\">\n+    <ProjectConfiguration Include=\"Debug|Itanium\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Itanium</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|Win32\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|x64\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"ReleaseWithoutAsm|Itanium\">\n+      <Configuration>ReleaseWithoutAsm</Configuration>\n+      <Platform>Itanium</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"ReleaseWithoutAsm|Win32\">\n+      <Configuration>ReleaseWithoutAsm</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"ReleaseWithoutAsm|x64\">\n+      <Configuration>ReleaseWithoutAsm</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Itanium\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Itanium</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Win32\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|x64\">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{8FD826F8-3739-44E6-8CC8-997122E53B8D}</ProjectGuid>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\n+    <UseOfMfc>false</UseOfMfc>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\n+    <UseOfMfc>false</UseOfMfc>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\n+    <UseOfMfc>false</UseOfMfc>\n+    <PlatformToolset>v120</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"Configuration\">\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\n+    <UseOfMfc>false</UseOfMfc>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" Label=\"Configuration\">\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\n+    <UseOfMfc>false</UseOfMfc>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"Configuration\">\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\n+    <UseOfMfc>false</UseOfMfc>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\n+    <UseOfMfc>false</UseOfMfc>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\n+    <UseOfMfc>false</UseOfMfc>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\n+    <UseOfMfc>false</UseOfMfc>\n+    <PlatformToolset>v120</PlatformToolset>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <ImportGroup Label=\"ExtensionSettings\">\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <PropertyGroup Label=\"UserMacros\" />\n+  <PropertyGroup>\n+    <_ProjectFileVersion>10.0.30128.1</_ProjectFileVersion>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\ZlibDll$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\ZlibDll$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">x86\\ZlibDll$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">x86\\ZlibDll$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">false</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\ZlibDll$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\ZlibDll$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\ZlibDll$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\ZlibDll$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\ZlibDll$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\ZlibDll$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">true</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">x64\\ZlibDll$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">x64\\ZlibDll$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">false</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">ia64\\ZlibDll$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">ia64\\ZlibDll$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">false</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\ZlibDll$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\ZlibDll$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\ZlibDll$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\ZlibDll$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">false</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">false</GenerateManifest>\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n+    <TargetName Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">zlibwapi</TargetName>\n+    <TargetName Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">zlibwapi</TargetName>\n+    <TargetName Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">zlibwapi</TargetName>\n+    <TargetName Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">zlibwapi</TargetName>\n+    <TargetName Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">zlibwapi</TargetName>\n+    <TargetName Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">zlibwapi</TargetName>\n+  </PropertyGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <Midl>\n+      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MkTypLibCompatible>true</MkTypLibCompatible>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <TargetEnvironment>Win32</TargetEnvironment>\n+      <TypeLibraryName>$(OutDir)zlibvc.tlb</TypeLibraryName>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;ASMV;ASMINF;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <ExceptionHandling>\n+      </ExceptionHandling>\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibvc.pch</PrecompiledHeaderOutputFile>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\n+      <BrowseInformation>\n+      </BrowseInformation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <ResourceCompile>\n+      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <Culture>0x040c</Culture>\n+    </ResourceCompile>\n+    <Link>\n+      <AdditionalOptions>/MACHINE:I386 %(AdditionalOptions)</AdditionalOptions>\n+      <AdditionalDependencies>..\\..\\masmx86\\match686.obj;..\\..\\masmx86\\inffas32.obj;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\n+      <GenerateMapFile>true</GenerateMapFile>\n+      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\n+      <SubSystem>Windows</SubSystem>\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\n+      <DataExecutionPrevention>\n+      </DataExecutionPrevention>\n+      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\n+    </Link>\n+    <PreBuildEvent>\n+      <Command>cd ..\\..\\masmx86\n+bld_ml32.bat</Command>\n+    </PreBuildEvent>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">\n+    <Midl>\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MkTypLibCompatible>true</MkTypLibCompatible>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <TargetEnvironment>Win32</TargetEnvironment>\n+      <TypeLibraryName>$(OutDir)zlibvc.tlb</TypeLibraryName>\n+    </Midl>\n+    <ClCompile>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <ExceptionHandling>\n+      </ExceptionHandling>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibvc.pch</PrecompiledHeaderOutputFile>\n+      <AssemblerOutput>All</AssemblerOutput>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\n+      <BrowseInformation>\n+      </BrowseInformation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </ClCompile>\n+    <ResourceCompile>\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <Culture>0x040c</Culture>\n+    </ResourceCompile>\n+    <Link>\n+      <AdditionalOptions>/MACHINE:I386 %(AdditionalOptions)</AdditionalOptions>\n+      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>\n+      <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\n+      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\n+      <GenerateMapFile>true</GenerateMapFile>\n+      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\n+      <SubSystem>Windows</SubSystem>\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\n+      <DataExecutionPrevention>\n+      </DataExecutionPrevention>\n+      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <Midl>\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MkTypLibCompatible>true</MkTypLibCompatible>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <TargetEnvironment>Win32</TargetEnvironment>\n+      <TypeLibraryName>$(OutDir)zlibvc.tlb</TypeLibraryName>\n+    </Midl>\n+    <ClCompile>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;ASMV;ASMINF;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <ExceptionHandling>\n+      </ExceptionHandling>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibvc.pch</PrecompiledHeaderOutputFile>\n+      <AssemblerOutput>All</AssemblerOutput>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\n+      <BrowseInformation>\n+      </BrowseInformation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </ClCompile>\n+    <ResourceCompile>\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <Culture>0x040c</Culture>\n+    </ResourceCompile>\n+    <Link>\n+      <AdditionalOptions>/MACHINE:I386 %(AdditionalOptions)</AdditionalOptions>\n+      <AdditionalDependencies>..\\..\\masmx86\\match686.obj;..\\..\\masmx86\\inffas32.obj;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>\n+      <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\n+      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\n+      <GenerateMapFile>true</GenerateMapFile>\n+      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\n+      <SubSystem>Windows</SubSystem>\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\n+      <DataExecutionPrevention>\n+      </DataExecutionPrevention>\n+      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\n+      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>\n+    </Link>\n+    <PreBuildEvent>\n+      <Command>cd ..\\..\\masmx86\n+bld_ml32.bat</Command>\n+    </PreBuildEvent>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <Midl>\n+      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MkTypLibCompatible>true</MkTypLibCompatible>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <TargetEnvironment>X64</TargetEnvironment>\n+      <TypeLibraryName>$(OutDir)zlibvc.tlb</TypeLibraryName>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;ASMV;ASMINF;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <ExceptionHandling>\n+      </ExceptionHandling>\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibvc.pch</PrecompiledHeaderOutputFile>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\n+      <BrowseInformation>\n+      </BrowseInformation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <ResourceCompile>\n+      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <Culture>0x040c</Culture>\n+    </ResourceCompile>\n+    <Link>\n+      <AdditionalDependencies>..\\..\\masmx64\\gvmat64.obj;..\\..\\masmx64\\inffasx64.obj;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\n+      <GenerateMapFile>true</GenerateMapFile>\n+      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\n+      <SubSystem>Windows</SubSystem>\n+      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\n+      <TargetMachine>MachineX64</TargetMachine>\n+    </Link>\n+    <PreBuildEvent>\n+      <Command>cd ..\\..\\contrib\\masmx64\n+bld_ml64.bat</Command>\n+    </PreBuildEvent>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">\n+    <Midl>\n+      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MkTypLibCompatible>true</MkTypLibCompatible>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <TargetEnvironment>Itanium</TargetEnvironment>\n+      <TypeLibraryName>$(OutDir)zlibvc.tlb</TypeLibraryName>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <ExceptionHandling>\n+      </ExceptionHandling>\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibvc.pch</PrecompiledHeaderOutputFile>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\n+      <BrowseInformation>\n+      </BrowseInformation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <ResourceCompile>\n+      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <Culture>0x040c</Culture>\n+    </ResourceCompile>\n+    <Link>\n+      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\n+      <GenerateMapFile>true</GenerateMapFile>\n+      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\n+      <SubSystem>Windows</SubSystem>\n+      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\n+      <TargetMachine>MachineIA64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">\n+    <Midl>\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MkTypLibCompatible>true</MkTypLibCompatible>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <TargetEnvironment>X64</TargetEnvironment>\n+      <TypeLibraryName>$(OutDir)zlibvc.tlb</TypeLibraryName>\n+    </Midl>\n+    <ClCompile>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <ExceptionHandling>\n+      </ExceptionHandling>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibvc.pch</PrecompiledHeaderOutputFile>\n+      <AssemblerOutput>All</AssemblerOutput>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\n+      <BrowseInformation>\n+      </BrowseInformation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </ClCompile>\n+    <ResourceCompile>\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <Culture>0x040c</Culture>\n+    </ResourceCompile>\n+    <Link>\n+      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>\n+      <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\n+      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\n+      <GenerateMapFile>true</GenerateMapFile>\n+      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\n+      <SubSystem>Windows</SubSystem>\n+      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\n+      <TargetMachine>MachineX64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">\n+    <Midl>\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MkTypLibCompatible>true</MkTypLibCompatible>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <TargetEnvironment>Itanium</TargetEnvironment>\n+      <TypeLibraryName>$(OutDir)zlibvc.tlb</TypeLibraryName>\n+    </Midl>\n+    <ClCompile>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <ExceptionHandling>\n+      </ExceptionHandling>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibvc.pch</PrecompiledHeaderOutputFile>\n+      <AssemblerOutput>All</AssemblerOutput>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\n+      <BrowseInformation>\n+      </BrowseInformation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </ClCompile>\n+    <ResourceCompile>\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <Culture>0x040c</Culture>\n+    </ResourceCompile>\n+    <Link>\n+      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>\n+      <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\n+      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\n+      <GenerateMapFile>true</GenerateMapFile>\n+      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\n+      <SubSystem>Windows</SubSystem>\n+      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\n+      <TargetMachine>MachineIA64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <Midl>\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MkTypLibCompatible>true</MkTypLibCompatible>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <TargetEnvironment>X64</TargetEnvironment>\n+      <TypeLibraryName>$(OutDir)zlibvc.tlb</TypeLibraryName>\n+    </Midl>\n+    <ClCompile>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;ASMV;ASMINF;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <ExceptionHandling>\n+      </ExceptionHandling>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibvc.pch</PrecompiledHeaderOutputFile>\n+      <AssemblerOutput>All</AssemblerOutput>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\n+      <BrowseInformation>\n+      </BrowseInformation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </ClCompile>\n+    <ResourceCompile>\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <Culture>0x040c</Culture>\n+    </ResourceCompile>\n+    <Link>\n+      <AdditionalDependencies>..\\..\\masmx64\\gvmat64.obj;..\\..\\masmx64\\inffasx64.obj;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>\n+      <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\n+      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\n+      <GenerateMapFile>true</GenerateMapFile>\n+      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\n+      <SubSystem>Windows</SubSystem>\n+      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\n+      <TargetMachine>MachineX64</TargetMachine>\n+    </Link>\n+    <PreBuildEvent>\n+      <Command>cd ..\\..\\masmx64\n+bld_ml64.bat</Command>\n+    </PreBuildEvent>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">\n+    <Midl>\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MkTypLibCompatible>true</MkTypLibCompatible>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <TargetEnvironment>Itanium</TargetEnvironment>\n+      <TypeLibraryName>$(OutDir)zlibvc.tlb</TypeLibraryName>\n+    </Midl>\n+    <ClCompile>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <ExceptionHandling>\n+      </ExceptionHandling>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibvc.pch</PrecompiledHeaderOutputFile>\n+      <AssemblerOutput>All</AssemblerOutput>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\n+      <BrowseInformation>\n+      </BrowseInformation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </ClCompile>\n+    <ResourceCompile>\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <Culture>0x040c</Culture>\n+    </ResourceCompile>\n+    <Link>\n+      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>\n+      <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\n+      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\n+      <GenerateMapFile>true</GenerateMapFile>\n+      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\n+      <SubSystem>Windows</SubSystem>\n+      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\n+      <TargetMachine>MachineIA64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\..\\adler32.c\" />\n+    <ClCompile Include=\"..\\..\\..\\compress.c\" />\n+    <ClCompile Include=\"..\\..\\..\\crc32.c\" />\n+    <ClCompile Include=\"..\\..\\..\\deflate.c\" />\n+    <ClCompile Include=\"..\\..\\..\\gzclose.c\" />\n+    <ClCompile Include=\"..\\..\\..\\gzlib.c\" />\n+    <ClCompile Include=\"..\\..\\..\\gzread.c\" />\n+    <ClCompile Include=\"..\\..\\..\\gzwrite.c\" />\n+    <ClCompile Include=\"..\\..\\..\\infback.c\" />\n+    <ClCompile Include=\"..\\..\\masmx64\\inffas8664.c\">\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">true</ExcludedFromBuild>\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</ExcludedFromBuild>\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">true</ExcludedFromBuild>\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">true</ExcludedFromBuild>\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">true</ExcludedFromBuild>\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">true</ExcludedFromBuild>\n+    </ClCompile>\n+    <ClCompile Include=\"..\\..\\..\\inffast.c\" />\n+    <ClCompile Include=\"..\\..\\..\\inflate.c\" />\n+    <ClCompile Include=\"..\\..\\..\\inftrees.c\" />\n+    <ClCompile Include=\"..\\..\\minizip\\ioapi.c\" />\n+    <ClCompile Include=\"..\\..\\minizip\\iowin32.c\" />\n+    <ClCompile Include=\"..\\..\\..\\trees.c\" />\n+    <ClCompile Include=\"..\\..\\..\\uncompr.c\" />\n+    <ClCompile Include=\"..\\..\\minizip\\unzip.c\">\n+      <AdditionalIncludeDirectories Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ZLIB_INTERNAL;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <AdditionalIncludeDirectories Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">ZLIB_INTERNAL;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <AdditionalIncludeDirectories Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">ZLIB_INTERNAL;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+    </ClCompile>\n+    <ClCompile Include=\"..\\..\\minizip\\zip.c\">\n+      <AdditionalIncludeDirectories Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ZLIB_INTERNAL;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <AdditionalIncludeDirectories Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">ZLIB_INTERNAL;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <AdditionalIncludeDirectories Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">ZLIB_INTERNAL;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+    </ClCompile>\n+    <ClCompile Include=\"..\\..\\..\\zutil.c\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ResourceCompile Include=\"zlib.rc\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <None Include=\"zlibvc.def\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ClInclude Include=\"..\\..\\..\\deflate.h\" />\n+    <ClInclude Include=\"..\\..\\..\\infblock.h\" />\n+    <ClInclude Include=\"..\\..\\..\\infcodes.h\" />\n+    <ClInclude Include=\"..\\..\\..\\inffast.h\" />\n+    <ClInclude Include=\"..\\..\\..\\inftrees.h\" />\n+    <ClInclude Include=\"..\\..\\..\\infutil.h\" />\n+    <ClInclude Include=\"..\\..\\..\\zconf.h\" />\n+    <ClInclude Include=\"..\\..\\..\\zlib.h\" />\n+    <ClInclude Include=\"..\\..\\..\\zutil.h\" />\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <ImportGroup Label=\"ExtensionTargets\">\n+  </ImportGroup>\n+</Project>\n\\ No newline at end of file"}, {"sha": "9b5c07587d81785684088dba6f8bec5d67439697", "filename": "zlib/contrib/vstudio/vc14/miniunz.vcxproj", "status": "added", "additions": 316, "deletions": 0, "changes": 316, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Fminiunz.vcxproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Fminiunz.vcxproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Fminiunz.vcxproj?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -0,0 +1,316 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"14.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <ItemGroup Label=\"ProjectConfigurations\">\n+    <ProjectConfiguration Include=\"Debug|Itanium\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Itanium</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|Win32\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|x64\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Itanium\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Itanium</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Win32\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|x64\">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{C52F9E7B-498A-42BE-8DB4-85A15694382A}</ProjectGuid>\n+    <Keyword>Win32Proj</Keyword>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>Unicode</CharacterSet>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <ImportGroup Label=\"ExtensionSettings\">\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <PropertyGroup Label=\"UserMacros\" />\n+  <PropertyGroup>\n+    <_ProjectFileVersion>10.0.30128.1</_ProjectFileVersion>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\MiniUnzip$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\MiniUnzip$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\MiniUnzip$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\MiniUnzip$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\MiniUnzip$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\MiniUnzip$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\MiniUnzip$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\MiniUnzip$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">true</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\MiniUnzip$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\MiniUnzip$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\MiniUnzip$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\MiniUnzip$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">false</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">false</GenerateManifest>\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n+  </PropertyGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MinimalRebuild>true</MinimalRebuild>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>x86\\ZlibDllDebug\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)miniunz.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <ProgramDatabaseFile>$(OutDir)miniunz.pdb</ProgramDatabaseFile>\n+      <SubSystem>Console</SubSystem>\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\n+      <DataExecutionPrevention>\n+      </DataExecutionPrevention>\n+      <TargetMachine>MachineX86</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <ClCompile>\n+      <Optimization>MaxSpeed</Optimization>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <OmitFramePointers>true</OmitFramePointers>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>x86\\ZlibDllRelease\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)miniunz.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <SubSystem>Console</SubSystem>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\n+      <DataExecutionPrevention>\n+      </DataExecutionPrevention>\n+      <TargetMachine>MachineX86</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <Midl>\n+      <TargetEnvironment>X64</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MinimalRebuild>true</MinimalRebuild>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>x64\\ZlibDllDebug\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)miniunz.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <ProgramDatabaseFile>$(OutDir)miniunz.pdb</ProgramDatabaseFile>\n+      <SubSystem>Console</SubSystem>\n+      <TargetMachine>MachineX64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">\n+    <Midl>\n+      <TargetEnvironment>Itanium</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MinimalRebuild>true</MinimalRebuild>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>ia64\\ZlibDllDebug\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)miniunz.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <ProgramDatabaseFile>$(OutDir)miniunz.pdb</ProgramDatabaseFile>\n+      <SubSystem>Console</SubSystem>\n+      <TargetMachine>MachineIA64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <Midl>\n+      <TargetEnvironment>X64</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>MaxSpeed</Optimization>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <OmitFramePointers>true</OmitFramePointers>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>x64\\ZlibDllRelease\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)miniunz.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <SubSystem>Console</SubSystem>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <TargetMachine>MachineX64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">\n+    <Midl>\n+      <TargetEnvironment>Itanium</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>MaxSpeed</Optimization>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <OmitFramePointers>true</OmitFramePointers>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>ia64\\ZlibDllRelease\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)miniunz.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <SubSystem>Console</SubSystem>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <TargetMachine>MachineIA64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\minizip\\miniunz.c\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"zlibvc.vcxproj\">\n+      <Project>{8fd826f8-3739-44e6-8cc8-997122e53b8d}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <ImportGroup Label=\"ExtensionTargets\">\n+  </ImportGroup>\n+</Project>\n\\ No newline at end of file"}, {"sha": "abe8dd8961e3b66a88605bd7083dad32ef27bee9", "filename": "zlib/contrib/vstudio/vc14/miniunz.vcxproj.user", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Fminiunz.vcxproj.user", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Fminiunz.vcxproj.user", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Fminiunz.vcxproj.user?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -0,0 +1,4 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project ToolsVersion=\"14.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <PropertyGroup />\n+</Project>\n\\ No newline at end of file"}, {"sha": "968a410a1251ff0eca095e85ec0d2bc9ce244b6a", "filename": "zlib/contrib/vstudio/vc14/minizip.vcxproj", "status": "added", "additions": 313, "deletions": 0, "changes": 313, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Fminizip.vcxproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Fminizip.vcxproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Fminizip.vcxproj?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -0,0 +1,313 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"14.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <ItemGroup Label=\"ProjectConfigurations\">\n+    <ProjectConfiguration Include=\"Debug|Itanium\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Itanium</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|Win32\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|x64\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Itanium\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Itanium</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Win32\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|x64\">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}</ProjectGuid>\n+    <Keyword>Win32Proj</Keyword>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>Unicode</CharacterSet>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <ImportGroup Label=\"ExtensionSettings\">\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <PropertyGroup Label=\"UserMacros\" />\n+  <PropertyGroup>\n+    <_ProjectFileVersion>10.0.30128.1</_ProjectFileVersion>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\MiniZip$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\MiniZip$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\MiniZip$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\MiniZip$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\$(Configuration)\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\$(Configuration)\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">true</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\$(Configuration)\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</LinkIncremental>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\$(Configuration)\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">false</LinkIncremental>\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n+  </PropertyGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MinimalRebuild>true</MinimalRebuild>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>x86\\ZlibDllDebug\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)minizip.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <ProgramDatabaseFile>$(OutDir)minizip.pdb</ProgramDatabaseFile>\n+      <SubSystem>Console</SubSystem>\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\n+      <DataExecutionPrevention>\n+      </DataExecutionPrevention>\n+      <TargetMachine>MachineX86</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <ClCompile>\n+      <Optimization>MaxSpeed</Optimization>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <OmitFramePointers>true</OmitFramePointers>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>x86\\ZlibDllRelease\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)minizip.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <SubSystem>Console</SubSystem>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\n+      <DataExecutionPrevention>\n+      </DataExecutionPrevention>\n+      <TargetMachine>MachineX86</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <Midl>\n+      <TargetEnvironment>X64</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MinimalRebuild>true</MinimalRebuild>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>x64\\ZlibDllDebug\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)minizip.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <ProgramDatabaseFile>$(OutDir)minizip.pdb</ProgramDatabaseFile>\n+      <SubSystem>Console</SubSystem>\n+      <TargetMachine>MachineX64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">\n+    <Midl>\n+      <TargetEnvironment>Itanium</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MinimalRebuild>true</MinimalRebuild>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>ia64\\ZlibDllDebug\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)minizip.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <ProgramDatabaseFile>$(OutDir)minizip.pdb</ProgramDatabaseFile>\n+      <SubSystem>Console</SubSystem>\n+      <TargetMachine>MachineIA64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <Midl>\n+      <TargetEnvironment>X64</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>MaxSpeed</Optimization>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <OmitFramePointers>true</OmitFramePointers>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>x64\\ZlibDllRelease\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)minizip.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <SubSystem>Console</SubSystem>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <TargetMachine>MachineX64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">\n+    <Midl>\n+      <TargetEnvironment>Itanium</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>MaxSpeed</Optimization>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <OmitFramePointers>true</OmitFramePointers>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>ia64\\ZlibDllRelease\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)minizip.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <SubSystem>Console</SubSystem>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <TargetMachine>MachineIA64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\minizip\\minizip.c\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"zlibvc.vcxproj\">\n+      <Project>{8fd826f8-3739-44e6-8cc8-997122e53b8d}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <ImportGroup Label=\"ExtensionTargets\">\n+  </ImportGroup>\n+</Project>\n\\ No newline at end of file"}, {"sha": "abe8dd8961e3b66a88605bd7083dad32ef27bee9", "filename": "zlib/contrib/vstudio/vc14/minizip.vcxproj.user", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Fminizip.vcxproj.user", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Fminizip.vcxproj.user", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Fminizip.vcxproj.user?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -0,0 +1,4 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project ToolsVersion=\"14.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <PropertyGroup />\n+</Project>\n\\ No newline at end of file"}, {"sha": "2c371252aeb7d7c2b0e5768eec11325746383f46", "filename": "zlib/contrib/vstudio/vc14/testzlib.vcxproj", "status": "added", "additions": 430, "deletions": 0, "changes": 430, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Ftestzlib.vcxproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Ftestzlib.vcxproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Ftestzlib.vcxproj?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -0,0 +1,430 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"14.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <ItemGroup Label=\"ProjectConfigurations\">\n+    <ProjectConfiguration Include=\"Debug|Itanium\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Itanium</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|Win32\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|x64\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"ReleaseWithoutAsm|Itanium\">\n+      <Configuration>ReleaseWithoutAsm</Configuration>\n+      <Platform>Itanium</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"ReleaseWithoutAsm|Win32\">\n+      <Configuration>ReleaseWithoutAsm</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"ReleaseWithoutAsm|x64\">\n+      <Configuration>ReleaseWithoutAsm</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Itanium\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Itanium</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Win32\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|x64\">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}</ProjectGuid>\n+    <RootNamespace>testzlib</RootNamespace>\n+    <Keyword>Win32Proj</Keyword>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>Unicode</CharacterSet>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <ImportGroup Label=\"ExtensionSettings\">\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <PropertyGroup Label=\"UserMacros\" />\n+  <PropertyGroup>\n+    <_ProjectFileVersion>10.0.30128.1</_ProjectFileVersion>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\TestZlib$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\TestZlib$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">x86\\TestZlib$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">x86\\TestZlib$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">false</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\TestZlib$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\TestZlib$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\TestZlib$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\TestZlib$(Configuration)\\Tmp\\</IntDir>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\TestZlib$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\TestZlib$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">true</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">x64\\TestZlib$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">x64\\TestZlib$(Configuration)\\Tmp\\</IntDir>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">ia64\\TestZlib$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">ia64\\TestZlib$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">false</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\TestZlib$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\TestZlib$(Configuration)\\Tmp\\</IntDir>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\TestZlib$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\TestZlib$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">false</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">false</GenerateManifest>\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n+  </PropertyGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <AdditionalIncludeDirectories>..\\..\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>ASMV;ASMINF;WIN32;ZLIB_WINAPI;_DEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MinimalRebuild>true</MinimalRebuild>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerOutput>AssemblyAndSourceCode</AssemblerOutput>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>..\\..\\masmx86\\match686.obj;..\\..\\masmx86\\inffas32.obj;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)testzlib.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <ProgramDatabaseFile>$(OutDir)testzlib.pdb</ProgramDatabaseFile>\n+      <SubSystem>Console</SubSystem>\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\n+      <DataExecutionPrevention>\n+      </DataExecutionPrevention>\n+      <TargetMachine>MachineX86</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">\n+    <ClCompile>\n+      <Optimization>MaxSpeed</Optimization>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <OmitFramePointers>true</OmitFramePointers>\n+      <AdditionalIncludeDirectories>..\\..\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN32;ZLIB_WINAPI;NDEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <OutputFile>$(OutDir)testzlib.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <SubSystem>Console</SubSystem>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\n+      <DataExecutionPrevention>\n+      </DataExecutionPrevention>\n+      <TargetMachine>MachineX86</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <ClCompile>\n+      <Optimization>MaxSpeed</Optimization>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <OmitFramePointers>true</OmitFramePointers>\n+      <AdditionalIncludeDirectories>..\\..\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>ASMV;ASMINF;WIN32;ZLIB_WINAPI;NDEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>..\\..\\masmx86\\match686.obj;..\\..\\masmx86\\inffas32.obj;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)testzlib.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <SubSystem>Console</SubSystem>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\n+      <DataExecutionPrevention>\n+      </DataExecutionPrevention>\n+      <TargetMachine>MachineX86</TargetMachine>\n+      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <ClCompile>\n+      <AdditionalIncludeDirectories>..\\..\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>ASMV;ASMINF;WIN32;ZLIB_WINAPI;_DEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>..\\..\\masmx64\\gvmat64.obj;..\\..\\masmx64\\inffasx64.obj;%(AdditionalDependencies)</AdditionalDependencies>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">\n+    <Midl>\n+      <TargetEnvironment>Itanium</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <AdditionalIncludeDirectories>..\\..\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>ZLIB_WINAPI;_DEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MinimalRebuild>true</MinimalRebuild>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerOutput>AssemblyAndSourceCode</AssemblerOutput>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <OutputFile>$(OutDir)testzlib.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <ProgramDatabaseFile>$(OutDir)testzlib.pdb</ProgramDatabaseFile>\n+      <SubSystem>Console</SubSystem>\n+      <TargetMachine>MachineIA64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">\n+    <ClCompile>\n+      <AdditionalIncludeDirectories>..\\..\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN32;ZLIB_WINAPI;NDEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">\n+    <Midl>\n+      <TargetEnvironment>Itanium</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>MaxSpeed</Optimization>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <OmitFramePointers>true</OmitFramePointers>\n+      <AdditionalIncludeDirectories>..\\..\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>ZLIB_WINAPI;NDEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <OutputFile>$(OutDir)testzlib.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <SubSystem>Console</SubSystem>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <TargetMachine>MachineIA64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <ClCompile>\n+      <AdditionalIncludeDirectories>..\\..\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>ASMV;ASMINF;WIN32;ZLIB_WINAPI;NDEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>..\\..\\masmx64\\gvmat64.obj;..\\..\\masmx64\\inffasx64.obj;%(AdditionalDependencies)</AdditionalDependencies>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">\n+    <Midl>\n+      <TargetEnvironment>Itanium</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>MaxSpeed</Optimization>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <OmitFramePointers>true</OmitFramePointers>\n+      <AdditionalIncludeDirectories>..\\..\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>ZLIB_WINAPI;NDEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <OutputFile>$(OutDir)testzlib.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <SubSystem>Console</SubSystem>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <TargetMachine>MachineIA64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\..\\adler32.c\" />\n+    <ClCompile Include=\"..\\..\\..\\compress.c\" />\n+    <ClCompile Include=\"..\\..\\..\\crc32.c\" />\n+    <ClCompile Include=\"..\\..\\..\\deflate.c\" />\n+    <ClCompile Include=\"..\\..\\..\\infback.c\" />\n+    <ClCompile Include=\"..\\..\\masmx64\\inffas8664.c\">\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">true</ExcludedFromBuild>\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</ExcludedFromBuild>\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">true</ExcludedFromBuild>\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">true</ExcludedFromBuild>\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">true</ExcludedFromBuild>\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">true</ExcludedFromBuild>\n+    </ClCompile>\n+    <ClCompile Include=\"..\\..\\..\\inffast.c\" />\n+    <ClCompile Include=\"..\\..\\..\\inflate.c\" />\n+    <ClCompile Include=\"..\\..\\..\\inftrees.c\" />\n+    <ClCompile Include=\"..\\..\\testzlib\\testzlib.c\" />\n+    <ClCompile Include=\"..\\..\\..\\trees.c\" />\n+    <ClCompile Include=\"..\\..\\..\\uncompr.c\" />\n+    <ClCompile Include=\"..\\..\\..\\zutil.c\" />\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <ImportGroup Label=\"ExtensionTargets\">\n+  </ImportGroup>\n+</Project>\n\\ No newline at end of file"}, {"sha": "abe8dd8961e3b66a88605bd7083dad32ef27bee9", "filename": "zlib/contrib/vstudio/vc14/testzlib.vcxproj.user", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Ftestzlib.vcxproj.user", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Ftestzlib.vcxproj.user", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Ftestzlib.vcxproj.user?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -0,0 +1,4 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project ToolsVersion=\"14.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <PropertyGroup />\n+</Project>\n\\ No newline at end of file"}, {"sha": "d87474dec6880141db029355e349fa4ba303d256", "filename": "zlib/contrib/vstudio/vc14/testzlibdll.vcxproj", "status": "added", "additions": 316, "deletions": 0, "changes": 316, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Ftestzlibdll.vcxproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Ftestzlibdll.vcxproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Ftestzlibdll.vcxproj?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -0,0 +1,316 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"14.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <ItemGroup Label=\"ProjectConfigurations\">\n+    <ProjectConfiguration Include=\"Debug|Itanium\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Itanium</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|Win32\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|x64\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Itanium\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Itanium</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Win32\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|x64\">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{C52F9E7B-498A-42BE-8DB4-85A15694366A}</ProjectGuid>\n+    <Keyword>Win32Proj</Keyword>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>Unicode</CharacterSet>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <CharacterSet>MultiByte</CharacterSet>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <ImportGroup Label=\"ExtensionSettings\">\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <PropertyGroup Label=\"UserMacros\" />\n+  <PropertyGroup>\n+    <_ProjectFileVersion>10.0.30128.1</_ProjectFileVersion>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\TestZlibDll$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\TestZlibDll$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\TestZlibDll$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\TestZlibDll$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\TestZlibDll$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\TestZlibDll$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\TestZlibDll$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\TestZlibDll$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">true</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\TestZlibDll$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\TestZlibDll$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\TestZlibDll$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\TestZlibDll$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">false</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">false</GenerateManifest>\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n+  </PropertyGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MinimalRebuild>true</MinimalRebuild>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>x86\\ZlibDllDebug\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)testzlibdll.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <ProgramDatabaseFile>$(OutDir)testzlib.pdb</ProgramDatabaseFile>\n+      <SubSystem>Console</SubSystem>\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\n+      <DataExecutionPrevention>\n+      </DataExecutionPrevention>\n+      <TargetMachine>MachineX86</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <ClCompile>\n+      <Optimization>MaxSpeed</Optimization>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <OmitFramePointers>true</OmitFramePointers>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>x86\\ZlibDllRelease\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)testzlibdll.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <SubSystem>Console</SubSystem>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\n+      <DataExecutionPrevention>\n+      </DataExecutionPrevention>\n+      <TargetMachine>MachineX86</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <Midl>\n+      <TargetEnvironment>X64</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MinimalRebuild>true</MinimalRebuild>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>x64\\ZlibDllDebug\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)testzlibdll.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <ProgramDatabaseFile>$(OutDir)testzlib.pdb</ProgramDatabaseFile>\n+      <SubSystem>Console</SubSystem>\n+      <TargetMachine>MachineX64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">\n+    <Midl>\n+      <TargetEnvironment>Itanium</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MinimalRebuild>true</MinimalRebuild>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>ia64\\ZlibDllDebug\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)testzlibdll.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <ProgramDatabaseFile>$(OutDir)testzlib.pdb</ProgramDatabaseFile>\n+      <SubSystem>Console</SubSystem>\n+      <TargetMachine>MachineIA64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <Midl>\n+      <TargetEnvironment>X64</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>MaxSpeed</Optimization>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <OmitFramePointers>true</OmitFramePointers>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>x64\\ZlibDllRelease\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)testzlibdll.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <SubSystem>Console</SubSystem>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <TargetMachine>MachineX64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">\n+    <Midl>\n+      <TargetEnvironment>Itanium</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>MaxSpeed</Optimization>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <OmitFramePointers>true</OmitFramePointers>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeader>\n+      </PrecompiledHeader>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>ia64\\ZlibDllRelease\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)testzlibdll.exe</OutputFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <SubSystem>Console</SubSystem>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <TargetMachine>MachineIA64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\testzlib\\testzlib.c\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"zlibvc.vcxproj\">\n+      <Project>{8fd826f8-3739-44e6-8cc8-997122e53b8d}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <ImportGroup Label=\"ExtensionTargets\">\n+  </ImportGroup>\n+</Project>\n\\ No newline at end of file"}, {"sha": "abe8dd8961e3b66a88605bd7083dad32ef27bee9", "filename": "zlib/contrib/vstudio/vc14/testzlibdll.vcxproj.user", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Ftestzlibdll.vcxproj.user", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Ftestzlibdll.vcxproj.user", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Ftestzlibdll.vcxproj.user?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -0,0 +1,4 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project ToolsVersion=\"14.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <PropertyGroup />\n+</Project>\n\\ No newline at end of file"}, {"sha": "ef3829898b6d2a9434447c330d90d62415996676", "filename": "zlib/contrib/vstudio/vc14/zlib.rc", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Fzlib.rc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Fzlib.rc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Fzlib.rc?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -0,0 +1,32 @@\n+#include <windows.h>\n+\n+#define IDR_VERSION1  1\n+IDR_VERSION1\tVERSIONINFO\tMOVEABLE IMPURE LOADONCALL DISCARDABLE\n+  FILEVERSION\t 1, 2, 10, 0\n+  PRODUCTVERSION 1, 2, 10, 0\n+  FILEFLAGSMASK\tVS_FFI_FILEFLAGSMASK\n+  FILEFLAGS\t0\n+  FILEOS\tVOS_DOS_WINDOWS32\n+  FILETYPE\tVFT_DLL\n+  FILESUBTYPE\t0\t// not used\n+BEGIN\n+  BLOCK \"StringFileInfo\"\n+  BEGIN\n+    BLOCK \"040904E4\"\n+    //language ID = U.S. English, char set = Windows, Multilingual\n+\n+    BEGIN\n+      VALUE \"FileDescription\", \"zlib data compression and ZIP file I/O library\\0\"\n+      VALUE \"FileVersion\",\t\"1.2.10\\0\"\n+      VALUE \"InternalName\",\t\"zlib\\0\"\n+      VALUE \"OriginalFilename\",\t\"zlibwapi.dll\\0\"\n+      VALUE \"ProductName\",\t\"ZLib.DLL\\0\"\n+      VALUE \"Comments\",\"DLL support by Alessandro Iacopetti & Gilles Vollant\\0\"\n+      VALUE \"LegalCopyright\", \"(C) 1995-2017 Jean-loup Gailly & Mark Adler\\0\"\n+    END\n+  END\n+  BLOCK \"VarFileInfo\"\n+  BEGIN\n+    VALUE \"Translation\", 0x0409, 1252\n+  END\n+END"}, {"sha": "3e4b986392ecddb3950a0065964b7485572a206e", "filename": "zlib/contrib/vstudio/vc14/zlibstat.vcxproj", "status": "added", "additions": 467, "deletions": 0, "changes": 467, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Fzlibstat.vcxproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Fzlibstat.vcxproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Fzlibstat.vcxproj?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -0,0 +1,467 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"14.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <ItemGroup Label=\"ProjectConfigurations\">\n+    <ProjectConfiguration Include=\"Debug|Itanium\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Itanium</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|Win32\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|x64\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"ReleaseWithoutAsm|Itanium\">\n+      <Configuration>ReleaseWithoutAsm</Configuration>\n+      <Platform>Itanium</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"ReleaseWithoutAsm|Win32\">\n+      <Configuration>ReleaseWithoutAsm</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"ReleaseWithoutAsm|x64\">\n+      <Configuration>ReleaseWithoutAsm</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Itanium\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Itanium</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Win32\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|x64\">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}</ProjectGuid>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseOfMfc>false</UseOfMfc>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseOfMfc>false</UseOfMfc>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseOfMfc>false</UseOfMfc>\n+    <PlatformToolset>v140</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseOfMfc>false</UseOfMfc>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseOfMfc>false</UseOfMfc>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseOfMfc>false</UseOfMfc>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseOfMfc>false</UseOfMfc>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseOfMfc>false</UseOfMfc>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseOfMfc>false</UseOfMfc>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <ImportGroup Label=\"ExtensionSettings\">\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <PropertyGroup Label=\"UserMacros\" />\n+  <PropertyGroup>\n+    <_ProjectFileVersion>10.0.30128.1</_ProjectFileVersion>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\ZlibStat$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\ZlibStat$(Configuration)\\Tmp\\</IntDir>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\ZlibStat$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\ZlibStat$(Configuration)\\Tmp\\</IntDir>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">x86\\ZlibStat$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">x86\\ZlibStat$(Configuration)\\Tmp\\</IntDir>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\ZlibStat$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\ZlibStat$(Configuration)\\Tmp\\</IntDir>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\ZlibStat$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\ZlibStat$(Configuration)\\Tmp\\</IntDir>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\ZlibStat$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\ZlibStat$(Configuration)\\Tmp\\</IntDir>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\ZlibStat$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\ZlibStat$(Configuration)\\Tmp\\</IntDir>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">x64\\ZlibStat$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">x64\\ZlibStat$(Configuration)\\Tmp\\</IntDir>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">ia64\\ZlibStat$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">ia64\\ZlibStat$(Configuration)\\Tmp\\</IntDir>\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n+  </PropertyGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN32;ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <ExceptionHandling>\n+      </ExceptionHandling>\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibstat.pch</PrecompiledHeaderOutputFile>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\n+      <WarningLevel>Level3</WarningLevel>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <DebugInformationFormat>OldStyle</DebugInformationFormat>\n+    </ClCompile>\n+    <ResourceCompile>\n+      <Culture>0x040c</Culture>\n+    </ResourceCompile>\n+    <Lib>\n+      <AdditionalOptions>/MACHINE:X86 /NODEFAULTLIB %(AdditionalOptions)</AdditionalOptions>\n+      <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </Lib>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <ClCompile>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN32;ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ASMV;ASMINF;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <ExceptionHandling>\n+      </ExceptionHandling>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibstat.pch</PrecompiledHeaderOutputFile>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\n+      <WarningLevel>Level3</WarningLevel>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </ClCompile>\n+    <ResourceCompile>\n+      <Culture>0x040c</Culture>\n+    </ResourceCompile>\n+    <Lib>\n+      <AdditionalOptions>/MACHINE:X86 /NODEFAULTLIB %(AdditionalOptions)</AdditionalOptions>\n+      <AdditionalDependencies>..\\..\\masmx86\\match686.obj;..\\..\\masmx86\\inffas32.obj;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </Lib>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">\n+    <ClCompile>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN32;ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <ExceptionHandling>\n+      </ExceptionHandling>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibstat.pch</PrecompiledHeaderOutputFile>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\n+      <WarningLevel>Level3</WarningLevel>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </ClCompile>\n+    <ResourceCompile>\n+      <Culture>0x040c</Culture>\n+    </ResourceCompile>\n+    <Lib>\n+      <AdditionalOptions>/MACHINE:X86 /NODEFAULTLIB %(AdditionalOptions)</AdditionalOptions>\n+      <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </Lib>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <Midl>\n+      <TargetEnvironment>X64</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <ExceptionHandling>\n+      </ExceptionHandling>\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibstat.pch</PrecompiledHeaderOutputFile>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\n+      <WarningLevel>Level3</WarningLevel>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <DebugInformationFormat>OldStyle</DebugInformationFormat>\n+    </ClCompile>\n+    <ResourceCompile>\n+      <Culture>0x040c</Culture>\n+    </ResourceCompile>\n+    <Lib>\n+      <AdditionalOptions>/MACHINE:AMD64 /NODEFAULTLIB %(AdditionalOptions)</AdditionalOptions>\n+      <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </Lib>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">\n+    <Midl>\n+      <TargetEnvironment>Itanium</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <ExceptionHandling>\n+      </ExceptionHandling>\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibstat.pch</PrecompiledHeaderOutputFile>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\n+      <WarningLevel>Level3</WarningLevel>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <DebugInformationFormat>OldStyle</DebugInformationFormat>\n+    </ClCompile>\n+    <ResourceCompile>\n+      <Culture>0x040c</Culture>\n+    </ResourceCompile>\n+    <Lib>\n+      <AdditionalOptions>/MACHINE:IA64 /NODEFAULTLIB %(AdditionalOptions)</AdditionalOptions>\n+      <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </Lib>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <Midl>\n+      <TargetEnvironment>X64</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ASMV;ASMINF;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <ExceptionHandling>\n+      </ExceptionHandling>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibstat.pch</PrecompiledHeaderOutputFile>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\n+      <WarningLevel>Level3</WarningLevel>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </ClCompile>\n+    <ResourceCompile>\n+      <Culture>0x040c</Culture>\n+    </ResourceCompile>\n+    <Lib>\n+      <AdditionalOptions>/MACHINE:AMD64 /NODEFAULTLIB %(AdditionalOptions)</AdditionalOptions>\n+      <AdditionalDependencies>..\\..\\masmx64\\gvmat64.obj;..\\..\\masmx64\\inffasx64.obj;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </Lib>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">\n+    <Midl>\n+      <TargetEnvironment>Itanium</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <ExceptionHandling>\n+      </ExceptionHandling>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibstat.pch</PrecompiledHeaderOutputFile>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\n+      <WarningLevel>Level3</WarningLevel>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </ClCompile>\n+    <ResourceCompile>\n+      <Culture>0x040c</Culture>\n+    </ResourceCompile>\n+    <Lib>\n+      <AdditionalOptions>/MACHINE:IA64 /NODEFAULTLIB %(AdditionalOptions)</AdditionalOptions>\n+      <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </Lib>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">\n+    <Midl>\n+      <TargetEnvironment>X64</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <ExceptionHandling>\n+      </ExceptionHandling>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibstat.pch</PrecompiledHeaderOutputFile>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\n+      <WarningLevel>Level3</WarningLevel>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </ClCompile>\n+    <ResourceCompile>\n+      <Culture>0x040c</Culture>\n+    </ResourceCompile>\n+    <Lib>\n+      <AdditionalOptions>/MACHINE:AMD64 /NODEFAULTLIB %(AdditionalOptions)</AdditionalOptions>\n+      <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </Lib>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">\n+    <Midl>\n+      <TargetEnvironment>Itanium</TargetEnvironment>\n+    </Midl>\n+    <ClCompile>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <ExceptionHandling>\n+      </ExceptionHandling>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibstat.pch</PrecompiledHeaderOutputFile>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\n+      <WarningLevel>Level3</WarningLevel>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </ClCompile>\n+    <ResourceCompile>\n+      <Culture>0x040c</Culture>\n+    </ResourceCompile>\n+    <Lib>\n+      <AdditionalOptions>/MACHINE:IA64 /NODEFAULTLIB %(AdditionalOptions)</AdditionalOptions>\n+      <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </Lib>\n+  </ItemDefinitionGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\..\\adler32.c\" />\n+    <ClCompile Include=\"..\\..\\..\\compress.c\" />\n+    <ClCompile Include=\"..\\..\\..\\crc32.c\" />\n+    <ClCompile Include=\"..\\..\\..\\deflate.c\" />\n+    <ClCompile Include=\"..\\..\\..\\gzclose.c\" />\n+    <ClCompile Include=\"..\\..\\..\\gzlib.c\" />\n+    <ClCompile Include=\"..\\..\\..\\gzread.c\" />\n+    <ClCompile Include=\"..\\..\\..\\gzwrite.c\" />\n+    <ClCompile Include=\"..\\..\\..\\infback.c\" />\n+    <ClCompile Include=\"..\\..\\masmx64\\inffas8664.c\">\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">true</ExcludedFromBuild>\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</ExcludedFromBuild>\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">true</ExcludedFromBuild>\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">true</ExcludedFromBuild>\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">true</ExcludedFromBuild>\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">true</ExcludedFromBuild>\n+    </ClCompile>\n+    <ClCompile Include=\"..\\..\\..\\inffast.c\" />\n+    <ClCompile Include=\"..\\..\\..\\inflate.c\" />\n+    <ClCompile Include=\"..\\..\\..\\inftrees.c\" />\n+    <ClCompile Include=\"..\\..\\minizip\\ioapi.c\" />\n+    <ClCompile Include=\"..\\..\\..\\trees.c\" />\n+    <ClCompile Include=\"..\\..\\..\\uncompr.c\" />\n+    <ClCompile Include=\"..\\..\\minizip\\unzip.c\" />\n+    <ClCompile Include=\"..\\..\\minizip\\zip.c\" />\n+    <ClCompile Include=\"..\\..\\..\\zutil.c\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ResourceCompile Include=\"zlib.rc\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <None Include=\"zlibvc.def\" />\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <ImportGroup Label=\"ExtensionTargets\">\n+  </ImportGroup>\n+</Project>\n\\ No newline at end of file"}, {"sha": "abe8dd8961e3b66a88605bd7083dad32ef27bee9", "filename": "zlib/contrib/vstudio/vc14/zlibstat.vcxproj.user", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Fzlibstat.vcxproj.user", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Fzlibstat.vcxproj.user", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Fzlibstat.vcxproj.user?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -0,0 +1,4 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project ToolsVersion=\"14.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <PropertyGroup />\n+</Project>\n\\ No newline at end of file"}, {"sha": "54e683d99c3547ad891396f3927b2fda49a21c65", "filename": "zlib/contrib/vstudio/vc14/zlibvc.def", "status": "added", "additions": 153, "deletions": 0, "changes": 153, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Fzlibvc.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Fzlibvc.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Fzlibvc.def?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -0,0 +1,153 @@\n+LIBRARY\r\n+; zlib data compression and ZIP file I/O library\r\n+\r\n+VERSION\t\t1.2\r\n+\r\n+EXPORTS\r\n+        adler32                                  @1\r\n+        compress                                 @2\r\n+        crc32                                    @3\r\n+        deflate                                  @4\r\n+        deflateCopy                              @5\r\n+        deflateEnd                               @6\r\n+        deflateInit2_                            @7\r\n+        deflateInit_                             @8\r\n+        deflateParams                            @9\r\n+        deflateReset                             @10\r\n+        deflateSetDictionary                     @11\r\n+        gzclose                                  @12\r\n+        gzdopen                                  @13\r\n+        gzerror                                  @14\r\n+        gzflush                                  @15\r\n+        gzopen                                   @16\r\n+        gzread                                   @17\r\n+        gzwrite                                  @18\r\n+        inflate                                  @19\r\n+        inflateEnd                               @20\r\n+        inflateInit2_                            @21\r\n+        inflateInit_                             @22\r\n+        inflateReset                             @23\r\n+        inflateSetDictionary                     @24\r\n+        inflateSync                              @25\r\n+        uncompress                               @26\r\n+        zlibVersion                              @27\r\n+        gzprintf                                 @28\r\n+        gzputc                                   @29\r\n+        gzgetc                                   @30\r\n+        gzseek                                   @31\r\n+        gzrewind                                 @32\r\n+        gztell                                   @33\r\n+        gzeof                                    @34\r\n+        gzsetparams                              @35\r\n+        zError                                   @36\r\n+        inflateSyncPoint                         @37\r\n+        get_crc_table                            @38\r\n+        compress2                                @39\r\n+        gzputs                                   @40\r\n+        gzgets                                   @41\r\n+        inflateCopy                              @42\r\n+        inflateBackInit_                         @43\r\n+        inflateBack                              @44\r\n+        inflateBackEnd                           @45\r\n+        compressBound                            @46\r\n+        deflateBound                             @47\r\n+        gzclearerr                               @48\r\n+        gzungetc                                 @49\r\n+        zlibCompileFlags                         @50\r\n+        deflatePrime                             @51\r\n+        deflatePending                           @52\r\n+\r\n+        unzOpen                                  @61\r\n+        unzClose                                 @62\r\n+        unzGetGlobalInfo                         @63\r\n+        unzGetCurrentFileInfo                    @64\r\n+        unzGoToFirstFile                         @65\r\n+        unzGoToNextFile                          @66\r\n+        unzOpenCurrentFile                       @67\r\n+        unzReadCurrentFile                       @68\r\n+        unzOpenCurrentFile3                      @69\r\n+        unztell                                  @70\r\n+        unzeof                                   @71\r\n+        unzCloseCurrentFile                      @72\r\n+        unzGetGlobalComment                      @73\r\n+        unzStringFileNameCompare                 @74\r\n+        unzLocateFile                            @75\r\n+        unzGetLocalExtrafield                    @76\r\n+        unzOpen2                                 @77\r\n+        unzOpenCurrentFile2                      @78\r\n+        unzOpenCurrentFilePassword               @79\r\n+\r\n+        zipOpen                                  @80\r\n+        zipOpenNewFileInZip                      @81\r\n+        zipWriteInFileInZip                      @82\r\n+        zipCloseFileInZip                        @83\r\n+        zipClose                                 @84\r\n+        zipOpenNewFileInZip2                     @86\r\n+        zipCloseFileInZipRaw                     @87\r\n+        zipOpen2                                 @88\r\n+        zipOpenNewFileInZip3                     @89\r\n+\r\n+        unzGetFilePos                            @100\r\n+        unzGoToFilePos                           @101\r\n+\r\n+        fill_win32_filefunc                      @110\r\n+\r\n+; zlibwapi v1.2.4 added:\r\n+        fill_win32_filefunc64                   @111\r\n+        fill_win32_filefunc64A                  @112\r\n+        fill_win32_filefunc64W                  @113\r\n+\r\n+        unzOpen64                               @120\r\n+        unzOpen2_64                             @121\r\n+        unzGetGlobalInfo64                      @122\r\n+        unzGetCurrentFileInfo64                 @124\r\n+        unzGetCurrentFileZStreamPos64           @125\r\n+        unztell64                               @126\r\n+        unzGetFilePos64                         @127\r\n+        unzGoToFilePos64                        @128\r\n+\r\n+        zipOpen64                               @130\r\n+        zipOpen2_64                             @131\r\n+        zipOpenNewFileInZip64                   @132\r\n+        zipOpenNewFileInZip2_64                 @133\r\n+        zipOpenNewFileInZip3_64                 @134\r\n+        zipOpenNewFileInZip4_64                 @135\r\n+        zipCloseFileInZipRaw64                  @136\r\n+\r\n+; zlib1 v1.2.4 added:\r\n+        adler32_combine                         @140\r\n+        crc32_combine                           @142\r\n+        deflateSetHeader                        @144\r\n+        deflateTune                             @145\r\n+        gzbuffer                                @146\r\n+        gzclose_r                               @147\r\n+        gzclose_w                               @148\r\n+        gzdirect                                @149\r\n+        gzoffset                                @150\r\n+        inflateGetHeader                        @156\r\n+        inflateMark                             @157\r\n+        inflatePrime                            @158\r\n+        inflateReset2                           @159\r\n+        inflateUndermine                        @160\r\n+\r\n+; zlib1 v1.2.6 added:\r\n+        gzgetc_                                 @161\r\n+        inflateResetKeep                        @163\r\n+        deflateResetKeep                        @164\r\n+\r\n+; zlib1 v1.2.7 added:\r\n+        gzopen_w                                @165\r\n+\r\n+; zlib1 v1.2.8 added:\r\n+        inflateGetDictionary                    @166\r\n+        gzvprintf                               @167\r\n+\r\n+; zlib1 v1.2.9 added:\r\n+        inflateCodesUsed                        @168\r\n+        inflateValidate                         @169\r\n+        uncompress2                             @170\r\n+        gzfread                                 @171\r\n+        gzfwrite                                @172\r\n+        deflateGetDictionary                    @173\r\n+        adler32_z                               @174\r\n+        crc32_z                                 @175\r"}, {"sha": "6f4a1076a4323e90664542ce8871a63b41cb49cb", "filename": "zlib/contrib/vstudio/vc14/zlibvc.sln", "status": "added", "additions": 119, "deletions": 0, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Fzlibvc.sln", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Fzlibvc.sln", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Fzlibvc.sln?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -0,0 +1,119 @@\n+\ufeff\n+Microsoft Visual Studio Solution File, Format Version 12.00\n+# Visual Studio 14\n+VisualStudioVersion = 14.0.25420.1\n+MinimumVisualStudioVersion = 10.0.40219.1\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"zlibvc\", \"zlibvc.vcxproj\", \"{8FD826F8-3739-44E6-8CC8-997122E53B8D}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"zlibstat\", \"zlibstat.vcxproj\", \"{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"testzlib\", \"testzlib.vcxproj\", \"{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"testzlibdll\", \"testzlibdll.vcxproj\", \"{C52F9E7B-498A-42BE-8DB4-85A15694366A}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"minizip\", \"minizip.vcxproj\", \"{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"miniunz\", \"miniunz.vcxproj\", \"{C52F9E7B-498A-42BE-8DB4-85A15694382A}\"\n+EndProject\n+Global\n+\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n+\t\tDebug|Itanium = Debug|Itanium\n+\t\tDebug|Win32 = Debug|Win32\n+\t\tDebug|x64 = Debug|x64\n+\t\tRelease|Itanium = Release|Itanium\n+\t\tRelease|Win32 = Release|Win32\n+\t\tRelease|x64 = Release|x64\n+\t\tReleaseWithoutAsm|Itanium = ReleaseWithoutAsm|Itanium\n+\t\tReleaseWithoutAsm|Win32 = ReleaseWithoutAsm|Win32\n+\t\tReleaseWithoutAsm|x64 = ReleaseWithoutAsm|x64\n+\tEndGlobalSection\n+\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Debug|Itanium.ActiveCfg = Debug|Win32\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Debug|Win32.ActiveCfg = Debug|Win32\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Debug|Win32.Build.0 = Debug|Win32\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Debug|x64.ActiveCfg = Debug|x64\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Debug|x64.Build.0 = Debug|x64\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Release|Itanium.ActiveCfg = Release|Win32\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Release|Win32.ActiveCfg = Release|Win32\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Release|Win32.Build.0 = Release|Win32\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Release|x64.ActiveCfg = Release|x64\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Release|x64.Build.0 = Release|x64\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.ReleaseWithoutAsm|Itanium.ActiveCfg = ReleaseWithoutAsm|Win32\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.ReleaseWithoutAsm|Win32.ActiveCfg = ReleaseWithoutAsm|Win32\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.ReleaseWithoutAsm|Win32.Build.0 = ReleaseWithoutAsm|Win32\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.ReleaseWithoutAsm|x64.ActiveCfg = ReleaseWithoutAsm|x64\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.ReleaseWithoutAsm|x64.Build.0 = ReleaseWithoutAsm|x64\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Debug|Itanium.ActiveCfg = Debug|Win32\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Debug|Win32.ActiveCfg = Debug|Win32\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Debug|Win32.Build.0 = Debug|Win32\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Debug|x64.ActiveCfg = Debug|x64\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Debug|x64.Build.0 = Debug|x64\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Release|Itanium.ActiveCfg = Release|Win32\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Release|Win32.ActiveCfg = Release|Win32\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Release|Win32.Build.0 = Release|Win32\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Release|x64.ActiveCfg = Release|x64\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Release|x64.Build.0 = Release|x64\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.ReleaseWithoutAsm|Itanium.ActiveCfg = ReleaseWithoutAsm|Win32\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.ReleaseWithoutAsm|Win32.ActiveCfg = ReleaseWithoutAsm|Win32\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.ReleaseWithoutAsm|Win32.Build.0 = ReleaseWithoutAsm|Win32\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.ReleaseWithoutAsm|x64.ActiveCfg = ReleaseWithoutAsm|x64\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.ReleaseWithoutAsm|x64.Build.0 = ReleaseWithoutAsm|x64\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Debug|Itanium.ActiveCfg = Debug|Win32\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Debug|Win32.ActiveCfg = Debug|Win32\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Debug|Win32.Build.0 = Debug|Win32\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Debug|x64.ActiveCfg = Debug|x64\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Debug|x64.Build.0 = Debug|x64\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Release|Itanium.ActiveCfg = Release|Win32\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Release|Win32.ActiveCfg = Release|Win32\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Release|Win32.Build.0 = Release|Win32\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Release|x64.ActiveCfg = Release|x64\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Release|x64.Build.0 = Release|x64\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|Itanium.ActiveCfg = ReleaseWithoutAsm|Win32\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|Win32.ActiveCfg = ReleaseWithoutAsm|Win32\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|Win32.Build.0 = ReleaseWithoutAsm|Win32\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|x64.ActiveCfg = ReleaseWithoutAsm|x64\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|x64.Build.0 = ReleaseWithoutAsm|x64\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Debug|Itanium.ActiveCfg = Debug|Win32\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Debug|Win32.ActiveCfg = Debug|Win32\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Debug|Win32.Build.0 = Debug|Win32\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Debug|x64.ActiveCfg = Debug|x64\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Debug|x64.Build.0 = Debug|x64\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Release|Itanium.ActiveCfg = Release|Win32\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Release|Win32.ActiveCfg = Release|Win32\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Release|Win32.Build.0 = Release|Win32\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Release|x64.ActiveCfg = Release|x64\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Release|x64.Build.0 = Release|x64\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.ReleaseWithoutAsm|Itanium.ActiveCfg = Release|Win32\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.ReleaseWithoutAsm|Win32.ActiveCfg = Release|Win32\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.ReleaseWithoutAsm|x64.ActiveCfg = Release|x64\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Debug|Itanium.ActiveCfg = Debug|Win32\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Debug|Win32.ActiveCfg = Debug|Win32\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Debug|Win32.Build.0 = Debug|Win32\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Debug|x64.ActiveCfg = Debug|x64\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Debug|x64.Build.0 = Debug|x64\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Release|Itanium.ActiveCfg = Release|Win32\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Release|Win32.ActiveCfg = Release|Win32\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Release|Win32.Build.0 = Release|Win32\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Release|x64.ActiveCfg = Release|x64\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Release|x64.Build.0 = Release|x64\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|Itanium.ActiveCfg = Release|Win32\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|Win32.ActiveCfg = Release|Win32\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|x64.ActiveCfg = Release|x64\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Debug|Itanium.ActiveCfg = Debug|Win32\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Debug|Win32.ActiveCfg = Debug|Win32\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Debug|Win32.Build.0 = Debug|Win32\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Debug|x64.ActiveCfg = Debug|x64\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Debug|x64.Build.0 = Debug|x64\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Release|Itanium.ActiveCfg = Release|Win32\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Release|Win32.ActiveCfg = Release|Win32\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Release|Win32.Build.0 = Release|Win32\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Release|x64.ActiveCfg = Release|x64\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Release|x64.Build.0 = Release|x64\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.ReleaseWithoutAsm|Itanium.ActiveCfg = Release|Win32\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.ReleaseWithoutAsm|Win32.ActiveCfg = Release|Win32\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.ReleaseWithoutAsm|x64.ActiveCfg = Release|x64\n+\tEndGlobalSection\n+\tGlobalSection(SolutionProperties) = preSolution\n+\t\tHideSolutionNode = FALSE\n+\tEndGlobalSection\n+EndGlobal"}, {"sha": "f8f673cb05695e376760fd222240ba925e624cf5", "filename": "zlib/contrib/vstudio/vc14/zlibvc.vcxproj", "status": "added", "additions": 692, "deletions": 0, "changes": 692, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Fzlibvc.vcxproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Fzlibvc.vcxproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Fzlibvc.vcxproj?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -0,0 +1,692 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"14.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <ItemGroup Label=\"ProjectConfigurations\">\n+    <ProjectConfiguration Include=\"Debug|Itanium\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Itanium</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|Win32\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|x64\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"ReleaseWithoutAsm|Itanium\">\n+      <Configuration>ReleaseWithoutAsm</Configuration>\n+      <Platform>Itanium</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"ReleaseWithoutAsm|Win32\">\n+      <Configuration>ReleaseWithoutAsm</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"ReleaseWithoutAsm|x64\">\n+      <Configuration>ReleaseWithoutAsm</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Itanium\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Itanium</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Win32\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|x64\">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{8FD826F8-3739-44E6-8CC8-997122E53B8D}</ProjectGuid>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\n+    <UseOfMfc>false</UseOfMfc>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\n+    <UseOfMfc>false</UseOfMfc>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\n+    <UseOfMfc>false</UseOfMfc>\n+    <PlatformToolset>v140</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"Configuration\">\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\n+    <UseOfMfc>false</UseOfMfc>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" Label=\"Configuration\">\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\n+    <UseOfMfc>false</UseOfMfc>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"Configuration\">\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\n+    <UseOfMfc>false</UseOfMfc>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\n+    <UseOfMfc>false</UseOfMfc>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\n+    <UseOfMfc>false</UseOfMfc>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\n+    <UseOfMfc>false</UseOfMfc>\n+    <PlatformToolset>v140</PlatformToolset>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <ImportGroup Label=\"ExtensionSettings\">\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <PropertyGroup Label=\"UserMacros\" />\n+  <PropertyGroup>\n+    <_ProjectFileVersion>10.0.30128.1</_ProjectFileVersion>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\ZlibDll$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\ZlibDll$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">x86\\ZlibDll$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">x86\\ZlibDll$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">false</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\ZlibDll$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\ZlibDll$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\ZlibDll$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\ZlibDll$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\ZlibDll$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\ZlibDll$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">true</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">x64\\ZlibDll$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">x64\\ZlibDll$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">false</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">ia64\\ZlibDll$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">ia64\\ZlibDll$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">false</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\ZlibDll$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\ZlibDll$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</GenerateManifest>\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\ZlibDll$(Configuration)\\</OutDir>\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\ZlibDll$(Configuration)\\Tmp\\</IntDir>\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">false</LinkIncremental>\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">false</GenerateManifest>\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\n+    <TargetName Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">zlibwapi</TargetName>\n+    <TargetName Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">zlibwapi</TargetName>\n+    <TargetName Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">zlibwapi</TargetName>\n+    <TargetName Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">zlibwapi</TargetName>\n+    <TargetName Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">zlibwapi</TargetName>\n+    <TargetName Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">zlibwapi</TargetName>\n+  </PropertyGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <Midl>\n+      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MkTypLibCompatible>true</MkTypLibCompatible>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <TargetEnvironment>Win32</TargetEnvironment>\n+      <TypeLibraryName>$(OutDir)zlibvc.tlb</TypeLibraryName>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;ASMV;ASMINF;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <ExceptionHandling>\n+      </ExceptionHandling>\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibvc.pch</PrecompiledHeaderOutputFile>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\n+      <BrowseInformation>\n+      </BrowseInformation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <ResourceCompile>\n+      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <Culture>0x040c</Culture>\n+    </ResourceCompile>\n+    <Link>\n+      <AdditionalOptions>/MACHINE:I386 %(AdditionalOptions)</AdditionalOptions>\n+      <AdditionalDependencies>..\\..\\masmx86\\match686.obj;..\\..\\masmx86\\inffas32.obj;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\n+      <GenerateMapFile>true</GenerateMapFile>\n+      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\n+      <SubSystem>Windows</SubSystem>\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\n+      <DataExecutionPrevention>\n+      </DataExecutionPrevention>\n+      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\n+    </Link>\n+    <PreBuildEvent>\n+      <Command>cd ..\\..\\masmx86\n+bld_ml32.bat</Command>\n+    </PreBuildEvent>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">\n+    <Midl>\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MkTypLibCompatible>true</MkTypLibCompatible>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <TargetEnvironment>Win32</TargetEnvironment>\n+      <TypeLibraryName>$(OutDir)zlibvc.tlb</TypeLibraryName>\n+    </Midl>\n+    <ClCompile>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <ExceptionHandling>\n+      </ExceptionHandling>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibvc.pch</PrecompiledHeaderOutputFile>\n+      <AssemblerOutput>All</AssemblerOutput>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\n+      <BrowseInformation>\n+      </BrowseInformation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </ClCompile>\n+    <ResourceCompile>\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <Culture>0x040c</Culture>\n+    </ResourceCompile>\n+    <Link>\n+      <AdditionalOptions>/MACHINE:I386 %(AdditionalOptions)</AdditionalOptions>\n+      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>\n+      <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\n+      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\n+      <GenerateMapFile>true</GenerateMapFile>\n+      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\n+      <SubSystem>Windows</SubSystem>\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\n+      <DataExecutionPrevention>\n+      </DataExecutionPrevention>\n+      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <Midl>\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MkTypLibCompatible>true</MkTypLibCompatible>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <TargetEnvironment>Win32</TargetEnvironment>\n+      <TypeLibraryName>$(OutDir)zlibvc.tlb</TypeLibraryName>\n+    </Midl>\n+    <ClCompile>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;ASMV;ASMINF;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <ExceptionHandling>\n+      </ExceptionHandling>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibvc.pch</PrecompiledHeaderOutputFile>\n+      <AssemblerOutput>All</AssemblerOutput>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\n+      <BrowseInformation>\n+      </BrowseInformation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </ClCompile>\n+    <ResourceCompile>\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <Culture>0x040c</Culture>\n+    </ResourceCompile>\n+    <Link>\n+      <AdditionalOptions>/MACHINE:I386 %(AdditionalOptions)</AdditionalOptions>\n+      <AdditionalDependencies>..\\..\\masmx86\\match686.obj;..\\..\\masmx86\\inffas32.obj;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>\n+      <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\n+      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\n+      <GenerateMapFile>true</GenerateMapFile>\n+      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\n+      <SubSystem>Windows</SubSystem>\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\n+      <DataExecutionPrevention>\n+      </DataExecutionPrevention>\n+      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\n+      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>\n+    </Link>\n+    <PreBuildEvent>\n+      <Command>cd ..\\..\\masmx86\n+bld_ml32.bat</Command>\n+    </PreBuildEvent>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <Midl>\n+      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MkTypLibCompatible>true</MkTypLibCompatible>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <TargetEnvironment>X64</TargetEnvironment>\n+      <TypeLibraryName>$(OutDir)zlibvc.tlb</TypeLibraryName>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;ASMV;ASMINF;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <ExceptionHandling>\n+      </ExceptionHandling>\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibvc.pch</PrecompiledHeaderOutputFile>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\n+      <BrowseInformation>\n+      </BrowseInformation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <ResourceCompile>\n+      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <Culture>0x040c</Culture>\n+    </ResourceCompile>\n+    <Link>\n+      <AdditionalDependencies>..\\..\\masmx64\\gvmat64.obj;..\\..\\masmx64\\inffasx64.obj;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\n+      <GenerateMapFile>true</GenerateMapFile>\n+      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\n+      <SubSystem>Windows</SubSystem>\n+      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\n+      <TargetMachine>MachineX64</TargetMachine>\n+    </Link>\n+    <PreBuildEvent>\n+      <Command>cd ..\\..\\contrib\\masmx64\n+bld_ml64.bat</Command>\n+    </PreBuildEvent>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">\n+    <Midl>\n+      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MkTypLibCompatible>true</MkTypLibCompatible>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <TargetEnvironment>Itanium</TargetEnvironment>\n+      <TypeLibraryName>$(OutDir)zlibvc.tlb</TypeLibraryName>\n+    </Midl>\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <ExceptionHandling>\n+      </ExceptionHandling>\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibvc.pch</PrecompiledHeaderOutputFile>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\n+      <BrowseInformation>\n+      </BrowseInformation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <ResourceCompile>\n+      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <Culture>0x040c</Culture>\n+    </ResourceCompile>\n+    <Link>\n+      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\n+      <GenerateMapFile>true</GenerateMapFile>\n+      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\n+      <SubSystem>Windows</SubSystem>\n+      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\n+      <TargetMachine>MachineIA64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">\n+    <Midl>\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MkTypLibCompatible>true</MkTypLibCompatible>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <TargetEnvironment>X64</TargetEnvironment>\n+      <TypeLibraryName>$(OutDir)zlibvc.tlb</TypeLibraryName>\n+    </Midl>\n+    <ClCompile>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <ExceptionHandling>\n+      </ExceptionHandling>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibvc.pch</PrecompiledHeaderOutputFile>\n+      <AssemblerOutput>All</AssemblerOutput>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\n+      <BrowseInformation>\n+      </BrowseInformation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </ClCompile>\n+    <ResourceCompile>\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <Culture>0x040c</Culture>\n+    </ResourceCompile>\n+    <Link>\n+      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>\n+      <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\n+      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\n+      <GenerateMapFile>true</GenerateMapFile>\n+      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\n+      <SubSystem>Windows</SubSystem>\n+      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\n+      <TargetMachine>MachineX64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">\n+    <Midl>\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MkTypLibCompatible>true</MkTypLibCompatible>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <TargetEnvironment>Itanium</TargetEnvironment>\n+      <TypeLibraryName>$(OutDir)zlibvc.tlb</TypeLibraryName>\n+    </Midl>\n+    <ClCompile>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <ExceptionHandling>\n+      </ExceptionHandling>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibvc.pch</PrecompiledHeaderOutputFile>\n+      <AssemblerOutput>All</AssemblerOutput>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\n+      <BrowseInformation>\n+      </BrowseInformation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </ClCompile>\n+    <ResourceCompile>\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <Culture>0x040c</Culture>\n+    </ResourceCompile>\n+    <Link>\n+      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>\n+      <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\n+      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\n+      <GenerateMapFile>true</GenerateMapFile>\n+      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\n+      <SubSystem>Windows</SubSystem>\n+      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\n+      <TargetMachine>MachineIA64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <Midl>\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MkTypLibCompatible>true</MkTypLibCompatible>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <TargetEnvironment>X64</TargetEnvironment>\n+      <TypeLibraryName>$(OutDir)zlibvc.tlb</TypeLibraryName>\n+    </Midl>\n+    <ClCompile>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;ASMV;ASMINF;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <ExceptionHandling>\n+      </ExceptionHandling>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibvc.pch</PrecompiledHeaderOutputFile>\n+      <AssemblerOutput>All</AssemblerOutput>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\n+      <BrowseInformation>\n+      </BrowseInformation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </ClCompile>\n+    <ResourceCompile>\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <Culture>0x040c</Culture>\n+    </ResourceCompile>\n+    <Link>\n+      <AdditionalDependencies>..\\..\\masmx64\\gvmat64.obj;..\\..\\masmx64\\inffasx64.obj;%(AdditionalDependencies)</AdditionalDependencies>\n+      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>\n+      <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\n+      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\n+      <GenerateMapFile>true</GenerateMapFile>\n+      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\n+      <SubSystem>Windows</SubSystem>\n+      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\n+      <TargetMachine>MachineX64</TargetMachine>\n+    </Link>\n+    <PreBuildEvent>\n+      <Command>cd ..\\..\\masmx64\n+bld_ml64.bat</Command>\n+    </PreBuildEvent>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">\n+    <Midl>\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <MkTypLibCompatible>true</MkTypLibCompatible>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <TargetEnvironment>Itanium</TargetEnvironment>\n+      <TypeLibraryName>$(OutDir)zlibvc.tlb</TypeLibraryName>\n+    </Midl>\n+    <ClCompile>\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <StringPooling>true</StringPooling>\n+      <ExceptionHandling>\n+      </ExceptionHandling>\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibvc.pch</PrecompiledHeaderOutputFile>\n+      <AssemblerOutput>All</AssemblerOutput>\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\n+      <BrowseInformation>\n+      </BrowseInformation>\n+      <WarningLevel>Level3</WarningLevel>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+    </ClCompile>\n+    <ResourceCompile>\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <Culture>0x040c</Culture>\n+    </ResourceCompile>\n+    <Link>\n+      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\n+      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>\n+      <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\n+      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\n+      <GenerateMapFile>true</GenerateMapFile>\n+      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\n+      <SubSystem>Windows</SubSystem>\n+      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\n+      <TargetMachine>MachineIA64</TargetMachine>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\..\\adler32.c\" />\n+    <ClCompile Include=\"..\\..\\..\\compress.c\" />\n+    <ClCompile Include=\"..\\..\\..\\crc32.c\" />\n+    <ClCompile Include=\"..\\..\\..\\deflate.c\" />\n+    <ClCompile Include=\"..\\..\\..\\gzclose.c\" />\n+    <ClCompile Include=\"..\\..\\..\\gzlib.c\" />\n+    <ClCompile Include=\"..\\..\\..\\gzread.c\" />\n+    <ClCompile Include=\"..\\..\\..\\gzwrite.c\" />\n+    <ClCompile Include=\"..\\..\\..\\infback.c\" />\n+    <ClCompile Include=\"..\\..\\masmx64\\inffas8664.c\">\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">true</ExcludedFromBuild>\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</ExcludedFromBuild>\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">true</ExcludedFromBuild>\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">true</ExcludedFromBuild>\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">true</ExcludedFromBuild>\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">true</ExcludedFromBuild>\n+    </ClCompile>\n+    <ClCompile Include=\"..\\..\\..\\inffast.c\" />\n+    <ClCompile Include=\"..\\..\\..\\inflate.c\" />\n+    <ClCompile Include=\"..\\..\\..\\inftrees.c\" />\n+    <ClCompile Include=\"..\\..\\minizip\\ioapi.c\" />\n+    <ClCompile Include=\"..\\..\\minizip\\iowin32.c\" />\n+    <ClCompile Include=\"..\\..\\..\\trees.c\" />\n+    <ClCompile Include=\"..\\..\\..\\uncompr.c\" />\n+    <ClCompile Include=\"..\\..\\minizip\\unzip.c\">\n+      <AdditionalIncludeDirectories Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ZLIB_INTERNAL;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <AdditionalIncludeDirectories Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">ZLIB_INTERNAL;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <AdditionalIncludeDirectories Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">ZLIB_INTERNAL;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+    </ClCompile>\n+    <ClCompile Include=\"..\\..\\minizip\\zip.c\">\n+      <AdditionalIncludeDirectories Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ZLIB_INTERNAL;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <AdditionalIncludeDirectories Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">ZLIB_INTERNAL;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <AdditionalIncludeDirectories Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">ZLIB_INTERNAL;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+    </ClCompile>\n+    <ClCompile Include=\"..\\..\\..\\zutil.c\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ResourceCompile Include=\"zlib.rc\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <None Include=\"zlibvc.def\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ClInclude Include=\"..\\..\\..\\deflate.h\" />\n+    <ClInclude Include=\"..\\..\\..\\infblock.h\" />\n+    <ClInclude Include=\"..\\..\\..\\infcodes.h\" />\n+    <ClInclude Include=\"..\\..\\..\\inffast.h\" />\n+    <ClInclude Include=\"..\\..\\..\\inftrees.h\" />\n+    <ClInclude Include=\"..\\..\\..\\infutil.h\" />\n+    <ClInclude Include=\"..\\..\\..\\zconf.h\" />\n+    <ClInclude Include=\"..\\..\\..\\zlib.h\" />\n+    <ClInclude Include=\"..\\..\\..\\zutil.h\" />\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <ImportGroup Label=\"ExtensionTargets\">\n+  </ImportGroup>\n+</Project>\n\\ No newline at end of file"}, {"sha": "abe8dd8961e3b66a88605bd7083dad32ef27bee9", "filename": "zlib/contrib/vstudio/vc14/zlibvc.vcxproj.user", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Fzlibvc.vcxproj.user", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Fzlibvc.vcxproj.user", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc14%2Fzlibvc.vcxproj.user?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -0,0 +1,4 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project ToolsVersion=\"14.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <PropertyGroup />\n+</Project>\n\\ No newline at end of file"}, {"sha": "f1c19bcec08be863665d664398b2abe814ae64ed", "filename": "zlib/contrib/vstudio/vc9/zlib.rc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Fzlib.rc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Fzlib.rc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Fzlib.rc?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -2,8 +2,8 @@\n \r\n #define IDR_VERSION1  1\r\n IDR_VERSION1\tVERSIONINFO\tMOVEABLE IMPURE LOADONCALL DISCARDABLE\r\n-  FILEVERSION\t 1,2,8,0\r\n-  PRODUCTVERSION 1,2,8,0\r\n+  FILEVERSION\t 1, 2, 10, 0\r\n+  PRODUCTVERSION 1, 2, 10, 0\r\n   FILEFLAGSMASK\tVS_FFI_FILEFLAGSMASK\r\n   FILEFLAGS\t0\r\n   FILEOS\tVOS_DOS_WINDOWS32\r\n@@ -17,12 +17,12 @@ BEGIN\n \r\n     BEGIN\r\n       VALUE \"FileDescription\", \"zlib data compression and ZIP file I/O library\\0\"\r\n-      VALUE \"FileVersion\",\t\"1.2.8\\0\"\r\n+      VALUE \"FileVersion\",\t\"1.2.10\\0\"\r\n       VALUE \"InternalName\",\t\"zlib\\0\"\r\n       VALUE \"OriginalFilename\",\t\"zlibwapi.dll\\0\"\r\n       VALUE \"ProductName\",\t\"ZLib.DLL\\0\"\r\n       VALUE \"Comments\",\"DLL support by Alessandro Iacopetti & Gilles Vollant\\0\"\r\n-      VALUE \"LegalCopyright\", \"(C) 1995-2013 Jean-loup Gailly & Mark Adler\\0\"\r\n+      VALUE \"LegalCopyright\", \"(C) 1995-2017 Jean-loup Gailly & Mark Adler\\0\"\r\n     END\r\n   END\r\n   BLOCK \"VarFileInfo\"\r"}, {"sha": "54e683d99c3547ad891396f3927b2fda49a21c65", "filename": "zlib/contrib/vstudio/vc9/zlibvc.def", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Fzlibvc.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Fzlibvc.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Fzlibvc.def?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,7 +1,7 @@\n LIBRARY\r\n ; zlib data compression and ZIP file I/O library\r\n \r\n-VERSION\t\t1.2.8\r\n+VERSION\t\t1.2\r\n \r\n EXPORTS\r\n         adler32                                  @1\r\n@@ -141,3 +141,13 @@ EXPORTS\n ; zlib1 v1.2.8 added:\r\n         inflateGetDictionary                    @166\r\n         gzvprintf                               @167\r\n+\r\n+; zlib1 v1.2.9 added:\r\n+        inflateCodesUsed                        @168\r\n+        inflateValidate                         @169\r\n+        uncompress2                             @170\r\n+        gzfread                                 @171\r\n+        gzfwrite                                @172\r\n+        deflateGetDictionary                    @173\r\n+        adler32_z                               @174\r\n+        crc32_z                                 @175\r"}, {"sha": "affcd464ed3161d287f69396e6f8f99490b0de35", "filename": "zlib/crc32.c", "status": "modified", "additions": 29, "deletions": 12, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcrc32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fcrc32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcrc32.c?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,5 +1,5 @@\n /* crc32.c -- compute the CRC-32 of a data stream\n- * Copyright (C) 1995-2006, 2010, 2011, 2012 Mark Adler\n+ * Copyright (C) 1995-2006, 2010, 2011, 2012, 2016 Mark Adler\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  *\n  * Thanks to Rodney Brown <rbrown64@csc.com.au> for his contribution of faster\n@@ -30,17 +30,15 @@\n \n #include \"zutil.h\"      /* for STDC and FAR definitions */\n \n-#define local static\n-\n /* Definitions for doing the crc four data bytes at a time. */\n #if !defined(NOBYFOUR) && defined(Z_U4)\n #  define BYFOUR\n #endif\n #ifdef BYFOUR\n    local unsigned long crc32_little OF((unsigned long,\n-                        const unsigned char FAR *, unsigned));\n+                        const unsigned char FAR *, z_size_t));\n    local unsigned long crc32_big OF((unsigned long,\n-                        const unsigned char FAR *, unsigned));\n+                        const unsigned char FAR *, z_size_t));\n #  define TBLS 8\n #else\n #  define TBLS 1\n@@ -201,10 +199,10 @@ const z_crc_t FAR * ZEXPORT get_crc_table()\n #define DO8 DO1; DO1; DO1; DO1; DO1; DO1; DO1; DO1\n \n /* ========================================================================= */\n-unsigned long ZEXPORT crc32(crc, buf, len)\n+unsigned long ZEXPORT crc32_z(crc, buf, len)\n     unsigned long crc;\n     const unsigned char FAR *buf;\n-    uInt len;\n+    z_size_t len;\n {\n     if (buf == Z_NULL) return 0UL;\n \n@@ -235,8 +233,29 @@ unsigned long ZEXPORT crc32(crc, buf, len)\n     return crc ^ 0xffffffffUL;\n }\n \n+/* ========================================================================= */\n+unsigned long ZEXPORT crc32(crc, buf, len)\n+    unsigned long crc;\n+    const unsigned char FAR *buf;\n+    uInt len;\n+{\n+    return crc32_z(crc, buf, len);\n+}\n+\n #ifdef BYFOUR\n \n+/*\n+   This BYFOUR code accesses the passed unsigned char * buffer with a 32-bit\n+   integer pointer type. This violates the strict aliasing rule, where a\n+   compiler can assume, for optimization purposes, that two pointers to\n+   fundamentally different types won't ever point to the same memory. This can\n+   manifest as a problem only if one of the pointers is written to. This code\n+   only reads from those pointers. So long as this code remains isolated in\n+   this compilation unit, there won't be a problem. For this reason, this code\n+   should not be copied and pasted into a compilation unit in which other code\n+   writes to the buffer that is passed to these routines.\n+ */\n+\n /* ========================================================================= */\n #define DOLIT4 c ^= *buf4++; \\\n         c = crc_table[3][c & 0xff] ^ crc_table[2][(c >> 8) & 0xff] ^ \\\n@@ -247,7 +266,7 @@ unsigned long ZEXPORT crc32(crc, buf, len)\n local unsigned long crc32_little(crc, buf, len)\n     unsigned long crc;\n     const unsigned char FAR *buf;\n-    unsigned len;\n+    z_size_t len;\n {\n     register z_crc_t c;\n     register const z_crc_t FAR *buf4;\n@@ -278,7 +297,7 @@ local unsigned long crc32_little(crc, buf, len)\n }\n \n /* ========================================================================= */\n-#define DOBIG4 c ^= *++buf4; \\\n+#define DOBIG4 c ^= *buf4++; \\\n         c = crc_table[4][c & 0xff] ^ crc_table[5][(c >> 8) & 0xff] ^ \\\n             crc_table[6][(c >> 16) & 0xff] ^ crc_table[7][c >> 24]\n #define DOBIG32 DOBIG4; DOBIG4; DOBIG4; DOBIG4; DOBIG4; DOBIG4; DOBIG4; DOBIG4\n@@ -287,7 +306,7 @@ local unsigned long crc32_little(crc, buf, len)\n local unsigned long crc32_big(crc, buf, len)\n     unsigned long crc;\n     const unsigned char FAR *buf;\n-    unsigned len;\n+    z_size_t len;\n {\n     register z_crc_t c;\n     register const z_crc_t FAR *buf4;\n@@ -300,7 +319,6 @@ local unsigned long crc32_big(crc, buf, len)\n     }\n \n     buf4 = (const z_crc_t FAR *)(const void FAR *)buf;\n-    buf4--;\n     while (len >= 32) {\n         DOBIG32;\n         len -= 32;\n@@ -309,7 +327,6 @@ local unsigned long crc32_big(crc, buf, len)\n         DOBIG4;\n         len -= 4;\n     }\n-    buf4++;\n     buf = (const unsigned char FAR *)buf4;\n \n     if (len) do {"}, {"sha": "faff1b79d4638f04bef1fbfa6c8983358a6f3306", "filename": "zlib/deflate.c", "status": "modified", "additions": 495, "deletions": 304, "changes": 799, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fdeflate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fdeflate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fdeflate.c?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,5 +1,5 @@\n /* deflate.c -- compress data using the deflation algorithm\n- * Copyright (C) 1995-2013 Jean-loup Gailly and Mark Adler\n+ * Copyright (C) 1995-2017 Jean-loup Gailly and Mark Adler\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -52,7 +52,7 @@\n #include \"deflate.h\"\n \n const char deflate_copyright[] =\n-   \" deflate 1.2.8 Copyright 1995-2013 Jean-loup Gailly and Mark Adler \";\n+   \" deflate 1.2.10 Copyright 1995-2017 Jean-loup Gailly and Mark Adler \";\n /*\n   If you use the zlib library in a product, an acknowledgment is welcome\n   in the documentation of your product. If for some reason you cannot\n@@ -73,6 +73,8 @@ typedef enum {\n typedef block_state (*compress_func) OF((deflate_state *s, int flush));\n /* Compression function. Returns the block state after the call. */\n \n+local int deflateStateCheck      OF((z_streamp strm));\n+local void slide_hash     OF((deflate_state *s));\n local void fill_window    OF((deflate_state *s));\n local block_state deflate_stored OF((deflate_state *s, int flush));\n local block_state deflate_fast   OF((deflate_state *s, int flush));\n@@ -84,15 +86,16 @@ local block_state deflate_huff   OF((deflate_state *s, int flush));\n local void lm_init        OF((deflate_state *s));\n local void putShortMSB    OF((deflate_state *s, uInt b));\n local void flush_pending  OF((z_streamp strm));\n-local int read_buf        OF((z_streamp strm, Bytef *buf, unsigned size));\n+local unsigned read_buf   OF((z_streamp strm, Bytef *buf, unsigned size));\n #ifdef ASMV\n+#  pragma message(\"Assembler code may have bugs -- use at your own risk\")\n       void match_init OF((void)); /* asm code initialization */\n       uInt longest_match  OF((deflate_state *s, IPos cur_match));\n #else\n local uInt longest_match  OF((deflate_state *s, IPos cur_match));\n #endif\n \n-#ifdef DEBUG\n+#ifdef ZLIB_DEBUG\n local  void check_match OF((deflate_state *s, IPos start, IPos match,\n                             int length));\n #endif\n@@ -148,21 +151,14 @@ local const config configuration_table[10] = {\n  * meaning.\n  */\n \n-#define EQUAL 0\n-/* result of memcmp for equal strings */\n-\n-#ifndef NO_DUMMY_DECL\n-struct static_tree_desc_s {int dummy;}; /* for buggy compilers */\n-#endif\n-\n /* rank Z_BLOCK between Z_NO_FLUSH and Z_PARTIAL_FLUSH */\n-#define RANK(f) (((f) << 1) - ((f) > 4 ? 9 : 0))\n+#define RANK(f) (((f) * 2) - ((f) > 4 ? 9 : 0))\n \n /* ===========================================================================\n  * Update a hash value with the given input byte\n- * IN  assertion: all calls to to UPDATE_HASH are made with consecutive\n- *    input characters, so that a running hash key can be computed from the\n- *    previous key instead of complete recalculation each time.\n+ * IN  assertion: all calls to UPDATE_HASH are made with consecutive input\n+ *    characters, so that a running hash key can be computed from the previous\n+ *    key instead of complete recalculation each time.\n  */\n #define UPDATE_HASH(s,h,c) (h = (((h)<<s->hash_shift) ^ (c)) & s->hash_mask)\n \n@@ -173,9 +169,9 @@ struct static_tree_desc_s {int dummy;}; /* for buggy compilers */\n  * the previous length of the hash chain.\n  * If this file is compiled with -DFASTEST, the compression level is forced\n  * to 1, and no hash chains are maintained.\n- * IN  assertion: all calls to to INSERT_STRING are made with consecutive\n- *    input characters and the first MIN_MATCH bytes of str are valid\n- *    (except for the last MIN_MATCH-1 bytes of the input file).\n+ * IN  assertion: all calls to INSERT_STRING are made with consecutive input\n+ *    characters and the first MIN_MATCH bytes of str are valid (except for\n+ *    the last MIN_MATCH-1 bytes of the input file).\n  */\n #ifdef FASTEST\n #define INSERT_STRING(s, str, match_head) \\\n@@ -197,6 +193,37 @@ struct static_tree_desc_s {int dummy;}; /* for buggy compilers */\n     s->head[s->hash_size-1] = NIL; \\\n     zmemzero((Bytef *)s->head, (unsigned)(s->hash_size-1)*sizeof(*s->head));\n \n+/* ===========================================================================\n+ * Slide the hash table when sliding the window down (could be avoided with 32\n+ * bit values at the expense of memory usage). We slide even when level == 0 to\n+ * keep the hash table consistent if we switch back to level > 0 later.\n+ */\n+local void slide_hash(s)\n+    deflate_state *s;\n+{\n+    unsigned n, m;\n+    Posf *p;\n+    uInt wsize = s->w_size;\n+\n+    n = s->hash_size;\n+    p = &s->head[n];\n+    do {\n+        m = *--p;\n+        *p = (Pos)(m >= wsize ? m - wsize : NIL);\n+    } while (--n);\n+    n = wsize;\n+#ifndef FASTEST\n+    p = &s->prev[n];\n+    do {\n+        m = *--p;\n+        *p = (Pos)(m >= wsize ? m - wsize : NIL);\n+        /* If n is not on any hash chain, prev[n] is garbage but\n+         * its value will never be used.\n+         */\n+    } while (--n);\n+#endif\n+}\n+\n /* ========================================================================= */\n int ZEXPORT deflateInit_(strm, level, version, stream_size)\n     z_streamp strm;\n@@ -270,22 +297,23 @@ int ZEXPORT deflateInit2_(strm, level, method, windowBits, memLevel, strategy,\n #endif\n     if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method != Z_DEFLATED ||\n         windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n-        strategy < 0 || strategy > Z_FIXED) {\n+        strategy < 0 || strategy > Z_FIXED || (windowBits == 8 && wrap != 1)) {\n         return Z_STREAM_ERROR;\n     }\n     if (windowBits == 8) windowBits = 9;  /* until 256-byte window bug fixed */\n     s = (deflate_state *) ZALLOC(strm, 1, sizeof(deflate_state));\n     if (s == Z_NULL) return Z_MEM_ERROR;\n     strm->state = (struct internal_state FAR *)s;\n     s->strm = strm;\n+    s->status = INIT_STATE;     /* to pass state test in deflateReset() */\n \n     s->wrap = wrap;\n     s->gzhead = Z_NULL;\n-    s->w_bits = windowBits;\n+    s->w_bits = (uInt)windowBits;\n     s->w_size = 1 << s->w_bits;\n     s->w_mask = s->w_size - 1;\n \n-    s->hash_bits = memLevel + 7;\n+    s->hash_bits = (uInt)memLevel + 7;\n     s->hash_size = 1 << s->hash_bits;\n     s->hash_mask = s->hash_size - 1;\n     s->hash_shift =  ((s->hash_bits+MIN_MATCH-1)/MIN_MATCH);\n@@ -319,6 +347,31 @@ int ZEXPORT deflateInit2_(strm, level, method, windowBits, memLevel, strategy,\n     return deflateReset(strm);\n }\n \n+/* =========================================================================\n+ * Check for a valid deflate stream state. Return 0 if ok, 1 if not.\n+ */\n+local int deflateStateCheck (strm)\n+    z_streamp strm;\n+{\n+    deflate_state *s;\n+    if (strm == Z_NULL ||\n+        strm->zalloc == (alloc_func)0 || strm->zfree == (free_func)0)\n+        return 1;\n+    s = strm->state;\n+    if (s == Z_NULL || s->strm != strm || (s->status != INIT_STATE &&\n+#ifdef GZIP\n+                                           s->status != GZIP_STATE &&\n+#endif\n+                                           s->status != EXTRA_STATE &&\n+                                           s->status != NAME_STATE &&\n+                                           s->status != COMMENT_STATE &&\n+                                           s->status != HCRC_STATE &&\n+                                           s->status != BUSY_STATE &&\n+                                           s->status != FINISH_STATE))\n+        return 1;\n+    return 0;\n+}\n+\n /* ========================================================================= */\n int ZEXPORT deflateSetDictionary (strm, dictionary, dictLength)\n     z_streamp strm;\n@@ -331,7 +384,7 @@ int ZEXPORT deflateSetDictionary (strm, dictionary, dictLength)\n     unsigned avail;\n     z_const unsigned char *next;\n \n-    if (strm == Z_NULL || strm->state == Z_NULL || dictionary == Z_NULL)\n+    if (deflateStateCheck(strm) || dictionary == Z_NULL)\n         return Z_STREAM_ERROR;\n     s = strm->state;\n     wrap = s->wrap;\n@@ -388,14 +441,35 @@ int ZEXPORT deflateSetDictionary (strm, dictionary, dictLength)\n     return Z_OK;\n }\n \n+/* ========================================================================= */\n+int ZEXPORT deflateGetDictionary (strm, dictionary, dictLength)\n+    z_streamp strm;\n+    Bytef *dictionary;\n+    uInt  *dictLength;\n+{\n+    deflate_state *s;\n+    uInt len;\n+\n+    if (deflateStateCheck(strm))\n+        return Z_STREAM_ERROR;\n+    s = strm->state;\n+    len = s->strstart + s->lookahead;\n+    if (len > s->w_size)\n+        len = s->w_size;\n+    if (dictionary != Z_NULL && len)\n+        zmemcpy(dictionary, s->window + s->strstart + s->lookahead - len, len);\n+    if (dictLength != Z_NULL)\n+        *dictLength = len;\n+    return Z_OK;\n+}\n+\n /* ========================================================================= */\n int ZEXPORT deflateResetKeep (strm)\n     z_streamp strm;\n {\n     deflate_state *s;\n \n-    if (strm == Z_NULL || strm->state == Z_NULL ||\n-        strm->zalloc == (alloc_func)0 || strm->zfree == (free_func)0) {\n+    if (deflateStateCheck(strm)) {\n         return Z_STREAM_ERROR;\n     }\n \n@@ -410,7 +484,11 @@ int ZEXPORT deflateResetKeep (strm)\n     if (s->wrap < 0) {\n         s->wrap = -s->wrap; /* was made negative by deflate(..., Z_FINISH); */\n     }\n-    s->status = s->wrap ? INIT_STATE : BUSY_STATE;\n+    s->status =\n+#ifdef GZIP\n+        s->wrap == 2 ? GZIP_STATE :\n+#endif\n+        s->wrap ? INIT_STATE : BUSY_STATE;\n     strm->adler =\n #ifdef GZIP\n         s->wrap == 2 ? crc32(0L, Z_NULL, 0) :\n@@ -440,8 +518,8 @@ int ZEXPORT deflateSetHeader (strm, head)\n     z_streamp strm;\n     gz_headerp head;\n {\n-    if (strm == Z_NULL || strm->state == Z_NULL) return Z_STREAM_ERROR;\n-    if (strm->state->wrap != 2) return Z_STREAM_ERROR;\n+    if (deflateStateCheck(strm) || strm->state->wrap != 2)\n+        return Z_STREAM_ERROR;\n     strm->state->gzhead = head;\n     return Z_OK;\n }\n@@ -452,7 +530,7 @@ int ZEXPORT deflatePending (strm, pending, bits)\n     int *bits;\n     z_streamp strm;\n {\n-    if (strm == Z_NULL || strm->state == Z_NULL) return Z_STREAM_ERROR;\n+    if (deflateStateCheck(strm)) return Z_STREAM_ERROR;\n     if (pending != Z_NULL)\n         *pending = strm->state->pending;\n     if (bits != Z_NULL)\n@@ -469,7 +547,7 @@ int ZEXPORT deflatePrime (strm, bits, value)\n     deflate_state *s;\n     int put;\n \n-    if (strm == Z_NULL || strm->state == Z_NULL) return Z_STREAM_ERROR;\n+    if (deflateStateCheck(strm)) return Z_STREAM_ERROR;\n     s = strm->state;\n     if ((Bytef *)(s->d_buf) < s->pending_out + ((Buf_size + 7) >> 3))\n         return Z_BUF_ERROR;\n@@ -494,9 +572,8 @@ int ZEXPORT deflateParams(strm, level, strategy)\n {\n     deflate_state *s;\n     compress_func func;\n-    int err = Z_OK;\n \n-    if (strm == Z_NULL || strm->state == Z_NULL) return Z_STREAM_ERROR;\n+    if (deflateStateCheck(strm)) return Z_STREAM_ERROR;\n     s = strm->state;\n \n #ifdef FASTEST\n@@ -509,22 +586,30 @@ int ZEXPORT deflateParams(strm, level, strategy)\n     }\n     func = configuration_table[s->level].func;\n \n-    if ((strategy != s->strategy || func != configuration_table[level].func) &&\n-        strm->total_in != 0) {\n+    if ((strategy != s->strategy || func != configuration_table[level].func)) {\n         /* Flush the last buffer: */\n-        err = deflate(strm, Z_BLOCK);\n-        if (err == Z_BUF_ERROR && s->pending == 0)\n-            err = Z_OK;\n+        int err = deflate(strm, Z_BLOCK);\n+        if (err == Z_STREAM_ERROR)\n+            return err;\n+        if (strm->avail_out == 0)\n+            return Z_BUF_ERROR;\n     }\n     if (s->level != level) {\n+        if (s->level == 0 && s->matches != 0) {\n+            if (s->matches == 1)\n+                slide_hash(s);\n+            else\n+                CLEAR_HASH(s);\n+            s->matches = 0;\n+        }\n         s->level = level;\n         s->max_lazy_match   = configuration_table[level].max_lazy;\n         s->good_match       = configuration_table[level].good_length;\n         s->nice_match       = configuration_table[level].nice_length;\n         s->max_chain_length = configuration_table[level].max_chain;\n     }\n     s->strategy = strategy;\n-    return err;\n+    return Z_OK;\n }\n \n /* ========================================================================= */\n@@ -537,12 +622,12 @@ int ZEXPORT deflateTune(strm, good_length, max_lazy, nice_length, max_chain)\n {\n     deflate_state *s;\n \n-    if (strm == Z_NULL || strm->state == Z_NULL) return Z_STREAM_ERROR;\n+    if (deflateStateCheck(strm)) return Z_STREAM_ERROR;\n     s = strm->state;\n-    s->good_match = good_length;\n-    s->max_lazy_match = max_lazy;\n+    s->good_match = (uInt)good_length;\n+    s->max_lazy_match = (uInt)max_lazy;\n     s->nice_match = nice_length;\n-    s->max_chain_length = max_chain;\n+    s->max_chain_length = (uInt)max_chain;\n     return Z_OK;\n }\n \n@@ -569,14 +654,13 @@ uLong ZEXPORT deflateBound(strm, sourceLen)\n {\n     deflate_state *s;\n     uLong complen, wraplen;\n-    Bytef *str;\n \n     /* conservative upper bound for compressed data */\n     complen = sourceLen +\n               ((sourceLen + 7) >> 3) + ((sourceLen + 63) >> 6) + 5;\n \n     /* if can't get parameters, return conservative bound plus zlib wrapper */\n-    if (strm == Z_NULL || strm->state == Z_NULL)\n+    if (deflateStateCheck(strm))\n         return complen + 6;\n \n     /* compute wrapper length */\n@@ -588,9 +672,11 @@ uLong ZEXPORT deflateBound(strm, sourceLen)\n     case 1:                                 /* zlib wrapper */\n         wraplen = 6 + (s->strstart ? 4 : 0);\n         break;\n+#ifdef GZIP\n     case 2:                                 /* gzip wrapper */\n         wraplen = 18;\n         if (s->gzhead != Z_NULL) {          /* user-supplied gzip header */\n+            Bytef *str;\n             if (s->gzhead->extra != Z_NULL)\n                 wraplen += 2 + s->gzhead->extra_len;\n             str = s->gzhead->name;\n@@ -607,6 +693,7 @@ uLong ZEXPORT deflateBound(strm, sourceLen)\n                 wraplen += 2;\n         }\n         break;\n+#endif\n     default:                                /* for compiler happiness */\n         wraplen = 6;\n     }\n@@ -634,10 +721,10 @@ local void putShortMSB (s, b)\n }\n \n /* =========================================================================\n- * Flush as much pending output as possible. All deflate() output goes\n- * through this function so some applications may wish to modify it\n- * to avoid allocating a large strm->next_out buffer and copying into it.\n- * (See also read_buf()).\n+ * Flush as much pending output as possible. All deflate() output, except for\n+ * some deflate_stored() output, goes through this function so some\n+ * applications may wish to modify it to avoid allocating a large\n+ * strm->next_out buffer and copying into it. (See also read_buf()).\n  */\n local void flush_pending(strm)\n     z_streamp strm;\n@@ -654,13 +741,23 @@ local void flush_pending(strm)\n     strm->next_out  += len;\n     s->pending_out  += len;\n     strm->total_out += len;\n-    strm->avail_out  -= len;\n-    s->pending -= len;\n+    strm->avail_out -= len;\n+    s->pending      -= len;\n     if (s->pending == 0) {\n         s->pending_out = s->pending_buf;\n     }\n }\n \n+/* ===========================================================================\n+ * Update the header CRC with the bytes s->pending_buf[beg..s->pending - 1].\n+ */\n+#define HCRC_UPDATE(beg) \\\n+    do { \\\n+        if (s->gzhead->hcrc && s->pending > (beg)) \\\n+            strm->adler = crc32(strm->adler, s->pending_buf + (beg), \\\n+                                s->pending - (beg)); \\\n+    } while (0)\n+\n /* ========================================================================= */\n int ZEXPORT deflate (strm, flush)\n     z_streamp strm;\n@@ -669,240 +766,240 @@ int ZEXPORT deflate (strm, flush)\n     int old_flush; /* value of flush param for previous deflate call */\n     deflate_state *s;\n \n-    if (strm == Z_NULL || strm->state == Z_NULL ||\n-        flush > Z_BLOCK || flush < 0) {\n+    if (deflateStateCheck(strm) || flush > Z_BLOCK || flush < 0) {\n         return Z_STREAM_ERROR;\n     }\n     s = strm->state;\n \n     if (strm->next_out == Z_NULL ||\n-        (strm->next_in == Z_NULL && strm->avail_in != 0) ||\n+        (strm->avail_in != 0 && strm->next_in == Z_NULL) ||\n         (s->status == FINISH_STATE && flush != Z_FINISH)) {\n         ERR_RETURN(strm, Z_STREAM_ERROR);\n     }\n     if (strm->avail_out == 0) ERR_RETURN(strm, Z_BUF_ERROR);\n \n-    s->strm = strm; /* just in case */\n     old_flush = s->last_flush;\n     s->last_flush = flush;\n \n+    /* Flush as much pending output as possible */\n+    if (s->pending != 0) {\n+        flush_pending(strm);\n+        if (strm->avail_out == 0) {\n+            /* Since avail_out is 0, deflate will be called again with\n+             * more output space, but possibly with both pending and\n+             * avail_in equal to zero. There won't be anything to do,\n+             * but this is not an error situation so make sure we\n+             * return OK instead of BUF_ERROR at next call of deflate:\n+             */\n+            s->last_flush = -1;\n+            return Z_OK;\n+        }\n+\n+    /* Make sure there is something to do and avoid duplicate consecutive\n+     * flushes. For repeated and useless calls with Z_FINISH, we keep\n+     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n+     */\n+    } else if (strm->avail_in == 0 && RANK(flush) <= RANK(old_flush) &&\n+               flush != Z_FINISH) {\n+        ERR_RETURN(strm, Z_BUF_ERROR);\n+    }\n+\n+    /* User must not provide more input after the first FINISH: */\n+    if (s->status == FINISH_STATE && strm->avail_in != 0) {\n+        ERR_RETURN(strm, Z_BUF_ERROR);\n+    }\n+\n     /* Write the header */\n     if (s->status == INIT_STATE) {\n-#ifdef GZIP\n-        if (s->wrap == 2) {\n-            strm->adler = crc32(0L, Z_NULL, 0);\n-            put_byte(s, 31);\n-            put_byte(s, 139);\n-            put_byte(s, 8);\n-            if (s->gzhead == Z_NULL) {\n-                put_byte(s, 0);\n-                put_byte(s, 0);\n-                put_byte(s, 0);\n-                put_byte(s, 0);\n-                put_byte(s, 0);\n-                put_byte(s, s->level == 9 ? 2 :\n-                            (s->strategy >= Z_HUFFMAN_ONLY || s->level < 2 ?\n-                             4 : 0));\n-                put_byte(s, OS_CODE);\n-                s->status = BUSY_STATE;\n-            }\n-            else {\n-                put_byte(s, (s->gzhead->text ? 1 : 0) +\n-                            (s->gzhead->hcrc ? 2 : 0) +\n-                            (s->gzhead->extra == Z_NULL ? 0 : 4) +\n-                            (s->gzhead->name == Z_NULL ? 0 : 8) +\n-                            (s->gzhead->comment == Z_NULL ? 0 : 16)\n-                        );\n-                put_byte(s, (Byte)(s->gzhead->time & 0xff));\n-                put_byte(s, (Byte)((s->gzhead->time >> 8) & 0xff));\n-                put_byte(s, (Byte)((s->gzhead->time >> 16) & 0xff));\n-                put_byte(s, (Byte)((s->gzhead->time >> 24) & 0xff));\n-                put_byte(s, s->level == 9 ? 2 :\n-                            (s->strategy >= Z_HUFFMAN_ONLY || s->level < 2 ?\n-                             4 : 0));\n-                put_byte(s, s->gzhead->os & 0xff);\n-                if (s->gzhead->extra != Z_NULL) {\n-                    put_byte(s, s->gzhead->extra_len & 0xff);\n-                    put_byte(s, (s->gzhead->extra_len >> 8) & 0xff);\n-                }\n-                if (s->gzhead->hcrc)\n-                    strm->adler = crc32(strm->adler, s->pending_buf,\n-                                        s->pending);\n-                s->gzindex = 0;\n-                s->status = EXTRA_STATE;\n-            }\n-        }\n+        /* zlib header */\n+        uInt header = (Z_DEFLATED + ((s->w_bits-8)<<4)) << 8;\n+        uInt level_flags;\n+\n+        if (s->strategy >= Z_HUFFMAN_ONLY || s->level < 2)\n+            level_flags = 0;\n+        else if (s->level < 6)\n+            level_flags = 1;\n+        else if (s->level == 6)\n+            level_flags = 2;\n         else\n-#endif\n-        {\n-            uInt header = (Z_DEFLATED + ((s->w_bits-8)<<4)) << 8;\n-            uInt level_flags;\n-\n-            if (s->strategy >= Z_HUFFMAN_ONLY || s->level < 2)\n-                level_flags = 0;\n-            else if (s->level < 6)\n-                level_flags = 1;\n-            else if (s->level == 6)\n-                level_flags = 2;\n-            else\n-                level_flags = 3;\n-            header |= (level_flags << 6);\n-            if (s->strstart != 0) header |= PRESET_DICT;\n-            header += 31 - (header % 31);\n+            level_flags = 3;\n+        header |= (level_flags << 6);\n+        if (s->strstart != 0) header |= PRESET_DICT;\n+        header += 31 - (header % 31);\n+\n+        putShortMSB(s, header);\n \n+        /* Save the adler32 of the preset dictionary: */\n+        if (s->strstart != 0) {\n+            putShortMSB(s, (uInt)(strm->adler >> 16));\n+            putShortMSB(s, (uInt)(strm->adler & 0xffff));\n+        }\n+        strm->adler = adler32(0L, Z_NULL, 0);\n+        s->status = BUSY_STATE;\n+\n+        /* Compression must start with an empty pending buffer */\n+        flush_pending(strm);\n+        if (s->pending != 0) {\n+            s->last_flush = -1;\n+            return Z_OK;\n+        }\n+    }\n+#ifdef GZIP\n+    if (s->status == GZIP_STATE) {\n+        /* gzip header */\n+        strm->adler = crc32(0L, Z_NULL, 0);\n+        put_byte(s, 31);\n+        put_byte(s, 139);\n+        put_byte(s, 8);\n+        if (s->gzhead == Z_NULL) {\n+            put_byte(s, 0);\n+            put_byte(s, 0);\n+            put_byte(s, 0);\n+            put_byte(s, 0);\n+            put_byte(s, 0);\n+            put_byte(s, s->level == 9 ? 2 :\n+                     (s->strategy >= Z_HUFFMAN_ONLY || s->level < 2 ?\n+                      4 : 0));\n+            put_byte(s, OS_CODE);\n             s->status = BUSY_STATE;\n-            putShortMSB(s, header);\n \n-            /* Save the adler32 of the preset dictionary: */\n-            if (s->strstart != 0) {\n-                putShortMSB(s, (uInt)(strm->adler >> 16));\n-                putShortMSB(s, (uInt)(strm->adler & 0xffff));\n+            /* Compression must start with an empty pending buffer */\n+            flush_pending(strm);\n+            if (s->pending != 0) {\n+                s->last_flush = -1;\n+                return Z_OK;\n+            }\n+        }\n+        else {\n+            put_byte(s, (s->gzhead->text ? 1 : 0) +\n+                     (s->gzhead->hcrc ? 2 : 0) +\n+                     (s->gzhead->extra == Z_NULL ? 0 : 4) +\n+                     (s->gzhead->name == Z_NULL ? 0 : 8) +\n+                     (s->gzhead->comment == Z_NULL ? 0 : 16)\n+                     );\n+            put_byte(s, (Byte)(s->gzhead->time & 0xff));\n+            put_byte(s, (Byte)((s->gzhead->time >> 8) & 0xff));\n+            put_byte(s, (Byte)((s->gzhead->time >> 16) & 0xff));\n+            put_byte(s, (Byte)((s->gzhead->time >> 24) & 0xff));\n+            put_byte(s, s->level == 9 ? 2 :\n+                     (s->strategy >= Z_HUFFMAN_ONLY || s->level < 2 ?\n+                      4 : 0));\n+            put_byte(s, s->gzhead->os & 0xff);\n+            if (s->gzhead->extra != Z_NULL) {\n+                put_byte(s, s->gzhead->extra_len & 0xff);\n+                put_byte(s, (s->gzhead->extra_len >> 8) & 0xff);\n             }\n-            strm->adler = adler32(0L, Z_NULL, 0);\n+            if (s->gzhead->hcrc)\n+                strm->adler = crc32(strm->adler, s->pending_buf,\n+                                    s->pending);\n+            s->gzindex = 0;\n+            s->status = EXTRA_STATE;\n         }\n     }\n-#ifdef GZIP\n     if (s->status == EXTRA_STATE) {\n         if (s->gzhead->extra != Z_NULL) {\n-            uInt beg = s->pending;  /* start of bytes to update crc */\n-\n-            while (s->gzindex < (s->gzhead->extra_len & 0xffff)) {\n-                if (s->pending == s->pending_buf_size) {\n-                    if (s->gzhead->hcrc && s->pending > beg)\n-                        strm->adler = crc32(strm->adler, s->pending_buf + beg,\n-                                            s->pending - beg);\n-                    flush_pending(strm);\n-                    beg = s->pending;\n-                    if (s->pending == s->pending_buf_size)\n-                        break;\n+            ulg beg = s->pending;   /* start of bytes to update crc */\n+            uInt left = (s->gzhead->extra_len & 0xffff) - s->gzindex;\n+            while (s->pending + left > s->pending_buf_size) {\n+                uInt copy = s->pending_buf_size - s->pending;\n+                zmemcpy(s->pending_buf + s->pending,\n+                        s->gzhead->extra + s->gzindex, copy);\n+                s->pending = s->pending_buf_size;\n+                HCRC_UPDATE(beg);\n+                s->gzindex += copy;\n+                flush_pending(strm);\n+                if (s->pending != 0) {\n+                    s->last_flush = -1;\n+                    return Z_OK;\n                 }\n-                put_byte(s, s->gzhead->extra[s->gzindex]);\n-                s->gzindex++;\n-            }\n-            if (s->gzhead->hcrc && s->pending > beg)\n-                strm->adler = crc32(strm->adler, s->pending_buf + beg,\n-                                    s->pending - beg);\n-            if (s->gzindex == s->gzhead->extra_len) {\n-                s->gzindex = 0;\n-                s->status = NAME_STATE;\n+                beg = 0;\n+                left -= copy;\n             }\n+            zmemcpy(s->pending_buf + s->pending,\n+                    s->gzhead->extra + s->gzindex, left);\n+            s->pending += left;\n+            HCRC_UPDATE(beg);\n+            s->gzindex = 0;\n         }\n-        else\n-            s->status = NAME_STATE;\n+        s->status = NAME_STATE;\n     }\n     if (s->status == NAME_STATE) {\n         if (s->gzhead->name != Z_NULL) {\n-            uInt beg = s->pending;  /* start of bytes to update crc */\n+            ulg beg = s->pending;   /* start of bytes to update crc */\n             int val;\n-\n             do {\n                 if (s->pending == s->pending_buf_size) {\n-                    if (s->gzhead->hcrc && s->pending > beg)\n-                        strm->adler = crc32(strm->adler, s->pending_buf + beg,\n-                                            s->pending - beg);\n+                    HCRC_UPDATE(beg);\n                     flush_pending(strm);\n-                    beg = s->pending;\n-                    if (s->pending == s->pending_buf_size) {\n-                        val = 1;\n-                        break;\n+                    if (s->pending != 0) {\n+                        s->last_flush = -1;\n+                        return Z_OK;\n                     }\n+                    beg = 0;\n                 }\n                 val = s->gzhead->name[s->gzindex++];\n                 put_byte(s, val);\n             } while (val != 0);\n-            if (s->gzhead->hcrc && s->pending > beg)\n-                strm->adler = crc32(strm->adler, s->pending_buf + beg,\n-                                    s->pending - beg);\n-            if (val == 0) {\n-                s->gzindex = 0;\n-                s->status = COMMENT_STATE;\n-            }\n+            HCRC_UPDATE(beg);\n+            s->gzindex = 0;\n         }\n-        else\n-            s->status = COMMENT_STATE;\n+        s->status = COMMENT_STATE;\n     }\n     if (s->status == COMMENT_STATE) {\n         if (s->gzhead->comment != Z_NULL) {\n-            uInt beg = s->pending;  /* start of bytes to update crc */\n+            ulg beg = s->pending;   /* start of bytes to update crc */\n             int val;\n-\n             do {\n                 if (s->pending == s->pending_buf_size) {\n-                    if (s->gzhead->hcrc && s->pending > beg)\n-                        strm->adler = crc32(strm->adler, s->pending_buf + beg,\n-                                            s->pending - beg);\n+                    HCRC_UPDATE(beg);\n                     flush_pending(strm);\n-                    beg = s->pending;\n-                    if (s->pending == s->pending_buf_size) {\n-                        val = 1;\n-                        break;\n+                    if (s->pending != 0) {\n+                        s->last_flush = -1;\n+                        return Z_OK;\n                     }\n+                    beg = 0;\n                 }\n                 val = s->gzhead->comment[s->gzindex++];\n                 put_byte(s, val);\n             } while (val != 0);\n-            if (s->gzhead->hcrc && s->pending > beg)\n-                strm->adler = crc32(strm->adler, s->pending_buf + beg,\n-                                    s->pending - beg);\n-            if (val == 0)\n-                s->status = HCRC_STATE;\n+            HCRC_UPDATE(beg);\n         }\n-        else\n-            s->status = HCRC_STATE;\n+        s->status = HCRC_STATE;\n     }\n     if (s->status == HCRC_STATE) {\n         if (s->gzhead->hcrc) {\n-            if (s->pending + 2 > s->pending_buf_size)\n+            if (s->pending + 2 > s->pending_buf_size) {\n                 flush_pending(strm);\n-            if (s->pending + 2 <= s->pending_buf_size) {\n-                put_byte(s, (Byte)(strm->adler & 0xff));\n-                put_byte(s, (Byte)((strm->adler >> 8) & 0xff));\n-                strm->adler = crc32(0L, Z_NULL, 0);\n-                s->status = BUSY_STATE;\n+                if (s->pending != 0) {\n+                    s->last_flush = -1;\n+                    return Z_OK;\n+                }\n             }\n+            put_byte(s, (Byte)(strm->adler & 0xff));\n+            put_byte(s, (Byte)((strm->adler >> 8) & 0xff));\n+            strm->adler = crc32(0L, Z_NULL, 0);\n         }\n-        else\n-            s->status = BUSY_STATE;\n-    }\n-#endif\n+        s->status = BUSY_STATE;\n \n-    /* Flush as much pending output as possible */\n-    if (s->pending != 0) {\n+        /* Compression must start with an empty pending buffer */\n         flush_pending(strm);\n-        if (strm->avail_out == 0) {\n-            /* Since avail_out is 0, deflate will be called again with\n-             * more output space, but possibly with both pending and\n-             * avail_in equal to zero. There won't be anything to do,\n-             * but this is not an error situation so make sure we\n-             * return OK instead of BUF_ERROR at next call of deflate:\n-             */\n+        if (s->pending != 0) {\n             s->last_flush = -1;\n             return Z_OK;\n         }\n-\n-    /* Make sure there is something to do and avoid duplicate consecutive\n-     * flushes. For repeated and useless calls with Z_FINISH, we keep\n-     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n-     */\n-    } else if (strm->avail_in == 0 && RANK(flush) <= RANK(old_flush) &&\n-               flush != Z_FINISH) {\n-        ERR_RETURN(strm, Z_BUF_ERROR);\n-    }\n-\n-    /* User must not provide more input after the first FINISH: */\n-    if (s->status == FINISH_STATE && strm->avail_in != 0) {\n-        ERR_RETURN(strm, Z_BUF_ERROR);\n     }\n+#endif\n \n     /* Start a new block or continue the current one.\n      */\n     if (strm->avail_in != 0 || s->lookahead != 0 ||\n         (flush != Z_NO_FLUSH && s->status != FINISH_STATE)) {\n         block_state bstate;\n \n-        bstate = s->strategy == Z_HUFFMAN_ONLY ? deflate_huff(s, flush) :\n-                    (s->strategy == Z_RLE ? deflate_rle(s, flush) :\n-                        (*(configuration_table[s->level].func))(s, flush));\n+        bstate = s->level == 0 ? deflate_stored(s, flush) :\n+                 s->strategy == Z_HUFFMAN_ONLY ? deflate_huff(s, flush) :\n+                 s->strategy == Z_RLE ? deflate_rle(s, flush) :\n+                 (*(configuration_table[s->level].func))(s, flush);\n \n         if (bstate == finish_started || bstate == finish_done) {\n             s->status = FINISH_STATE;\n@@ -944,7 +1041,6 @@ int ZEXPORT deflate (strm, flush)\n             }\n         }\n     }\n-    Assert(strm->avail_out > 0, \"bug2\");\n \n     if (flush != Z_FINISH) return Z_OK;\n     if (s->wrap <= 0) return Z_STREAM_END;\n@@ -981,18 +1077,9 @@ int ZEXPORT deflateEnd (strm)\n {\n     int status;\n \n-    if (strm == Z_NULL || strm->state == Z_NULL) return Z_STREAM_ERROR;\n+    if (deflateStateCheck(strm)) return Z_STREAM_ERROR;\n \n     status = strm->state->status;\n-    if (status != INIT_STATE &&\n-        status != EXTRA_STATE &&\n-        status != NAME_STATE &&\n-        status != COMMENT_STATE &&\n-        status != HCRC_STATE &&\n-        status != BUSY_STATE &&\n-        status != FINISH_STATE) {\n-      return Z_STREAM_ERROR;\n-    }\n \n     /* Deallocate in reverse order of allocations: */\n     TRY_FREE(strm, strm->state->pending_buf);\n@@ -1023,7 +1110,7 @@ int ZEXPORT deflateCopy (dest, source)\n     ushf *overlay;\n \n \n-    if (source == Z_NULL || dest == Z_NULL || source->state == Z_NULL) {\n+    if (deflateStateCheck(source) || dest == Z_NULL) {\n         return Z_STREAM_ERROR;\n     }\n \n@@ -1073,7 +1160,7 @@ int ZEXPORT deflateCopy (dest, source)\n  * allocating a large strm->next_in buffer and copying from it.\n  * (See also flush_pending()).\n  */\n-local int read_buf(strm, buf, size)\n+local unsigned read_buf(strm, buf, size)\n     z_streamp strm;\n     Bytef *buf;\n     unsigned size;\n@@ -1097,7 +1184,7 @@ local int read_buf(strm, buf, size)\n     strm->next_in  += len;\n     strm->total_in += len;\n \n-    return (int)len;\n+    return len;\n }\n \n /* ===========================================================================\n@@ -1151,9 +1238,9 @@ local uInt longest_match(s, cur_match)\n {\n     unsigned chain_length = s->max_chain_length;/* max hash chain length */\n     register Bytef *scan = s->window + s->strstart; /* current string */\n-    register Bytef *match;                       /* matched string */\n+    register Bytef *match;                      /* matched string */\n     register int len;                           /* length of current match */\n-    int best_len = s->prev_length;              /* best match length so far */\n+    int best_len = (int)s->prev_length;         /* best match length so far */\n     int nice_match = s->nice_match;             /* stop if match long enough */\n     IPos limit = s->strstart > (IPos)MAX_DIST(s) ?\n         s->strstart - (IPos)MAX_DIST(s) : NIL;\n@@ -1188,7 +1275,7 @@ local uInt longest_match(s, cur_match)\n     /* Do not look for matches beyond the end of the input. This is necessary\n      * to make deflate deterministic.\n      */\n-    if ((uInt)nice_match > s->lookahead) nice_match = s->lookahead;\n+    if ((uInt)nice_match > s->lookahead) nice_match = (int)s->lookahead;\n \n     Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n \n@@ -1349,7 +1436,11 @@ local uInt longest_match(s, cur_match)\n \n #endif /* FASTEST */\n \n-#ifdef DEBUG\n+#ifdef ZLIB_DEBUG\n+\n+#define EQUAL 0\n+/* result of memcmp for equal strings */\n+\n /* ===========================================================================\n  * Check that the match at match_start is indeed a match.\n  */\n@@ -1375,7 +1466,7 @@ local void check_match(s, start, match, length)\n }\n #else\n #  define check_match(s, start, match, length)\n-#endif /* DEBUG */\n+#endif /* ZLIB_DEBUG */\n \n /* ===========================================================================\n  * Fill the window when the lookahead becomes insufficient.\n@@ -1390,8 +1481,7 @@ local void check_match(s, start, match, length)\n local void fill_window(s)\n     deflate_state *s;\n {\n-    register unsigned n, m;\n-    register Posf *p;\n+    unsigned n;\n     unsigned more;    /* Amount of free space at the end of the window. */\n     uInt wsize = s->w_size;\n \n@@ -1418,35 +1508,11 @@ local void fill_window(s)\n          */\n         if (s->strstart >= wsize+MAX_DIST(s)) {\n \n-            zmemcpy(s->window, s->window+wsize, (unsigned)wsize);\n+            zmemcpy(s->window, s->window+wsize, (unsigned)wsize - more);\n             s->match_start -= wsize;\n             s->strstart    -= wsize; /* we now have strstart >= MAX_DIST */\n             s->block_start -= (long) wsize;\n-\n-            /* Slide the hash table (could be avoided with 32 bit values\n-               at the expense of memory usage). We slide even when level == 0\n-               to keep the hash table consistent if we switch back to level > 0\n-               later. (Using level 0 permanently is not an optimal usage of\n-               zlib, so we don't care about this pathological case.)\n-             */\n-            n = s->hash_size;\n-            p = &s->head[n];\n-            do {\n-                m = *--p;\n-                *p = (Pos)(m >= wsize ? m-wsize : NIL);\n-            } while (--n);\n-\n-            n = wsize;\n-#ifndef FASTEST\n-            p = &s->prev[n];\n-            do {\n-                m = *--p;\n-                *p = (Pos)(m >= wsize ? m-wsize : NIL);\n-                /* If n is not on any hash chain, prev[n] is garbage but\n-                 * its value will never be used.\n-                 */\n-            } while (--n);\n-#endif\n+            slide_hash(s);\n             more += wsize;\n         }\n         if (s->strm->avail_in == 0) break;\n@@ -1552,70 +1618,195 @@ local void fill_window(s)\n    if (s->strm->avail_out == 0) return (last) ? finish_started : need_more; \\\n }\n \n+/* Maximum stored block length in deflate format (not including header). */\n+#define MAX_STORED 65535\n+\n+/* Minimum of a and b. */\n+#define MIN(a, b) ((a) > (b) ? (b) : (a))\n+\n /* ===========================================================================\n  * Copy without compression as much as possible from the input stream, return\n  * the current block state.\n- * This function does not insert new strings in the dictionary since\n- * uncompressible data is probably not useful. This function is used\n- * only for the level=0 compression option.\n- * NOTE: this function should be optimized to avoid extra copying from\n- * window to pending_buf.\n+ *\n+ * In case deflateParams() is used to later switch to a non-zero compression\n+ * level, s->matches (otherwise unused when storing) keeps track of the number\n+ * of hash table slides to perform. If s->matches is 1, then one hash table\n+ * slide will be done when switching. If s->matches is 2, the maximum value\n+ * allowed here, then the hash table will be cleared, since two or more slides\n+ * is the same as a clear.\n+ *\n+ * deflate_stored() is written to minimize the number of times an input byte is\n+ * copied. It is most efficient with large input and output buffers, which\n+ * maximizes the opportunites to have a single copy from next_in to next_out.\n  */\n local block_state deflate_stored(s, flush)\n     deflate_state *s;\n     int flush;\n {\n-    /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n-     * to pending_buf_size, and each stored block has a 5 byte header:\n+    /* Smallest worthy block size when not flushing or finishing. By default\n+     * this is 32K. This can be as small as 507 bytes for memLevel == 1. For\n+     * large input and output buffers, the stored block size will be larger.\n      */\n-    ulg max_block_size = 0xffff;\n-    ulg max_start;\n-\n-    if (max_block_size > s->pending_buf_size - 5) {\n-        max_block_size = s->pending_buf_size - 5;\n-    }\n+    unsigned min_block = MIN(s->pending_buf_size - 5, s->w_size);\n \n-    /* Copy as much as possible from input to output: */\n-    for (;;) {\n-        /* Fill the window as much as possible: */\n-        if (s->lookahead <= 1) {\n-\n-            Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n-                   s->block_start >= (long)s->w_size, \"slide too late\");\n+    /* Copy as many min_block or larger stored blocks directly to next_out as\n+     * possible. If flushing, copy the remaining available input to next_out as\n+     * stored blocks, if there is enough space.\n+     */\n+    unsigned len, left, have, last = 0;\n+    unsigned used = s->strm->avail_in;\n+    do {\n+        /* Set len to the maximum size block that we can copy directly with the\n+         * available input data and output space. Set left to how much of that\n+         * would be copied from what's left in the window.\n+         */\n+        len = MAX_STORED;       /* maximum deflate stored block length */\n+        have = (s->bi_valid + 42) >> 3;         /* number of header bytes */\n+        if (s->strm->avail_out < have)          /* need room for header */\n+            break;\n+            /* maximum stored block length that will fit in avail_out: */\n+        have = s->strm->avail_out - have;\n+        left = s->strstart - s->block_start;    /* bytes left in window */\n+        if (len > (ulg)left + s->strm->avail_in)\n+            len = left + s->strm->avail_in;     /* limit len to the input */\n+        if (len > have)\n+            len = have;                         /* limit len to the output */\n+        if (left > len)\n+            left = len;                         /* limit window pull to len */\n+\n+        /* If the stored block would be less than min_block in length, or if\n+         * unable to copy all of the available input when flushing, then try\n+         * copying to the window and the pending buffer instead. Also don't\n+         * write an empty block when flushing -- deflate() does that.\n+         */\n+        if (len < min_block && ((len == 0 && flush != Z_FINISH) ||\n+                                flush == Z_NO_FLUSH ||\n+                                len - left != s->strm->avail_in))\n+            break;\n \n-            fill_window(s);\n-            if (s->lookahead == 0 && flush == Z_NO_FLUSH) return need_more;\n+        /* Make a dummy stored block in pending to get the header bytes,\n+         * including any pending bits. This also updates the debugging counts.\n+         */\n+        last = flush == Z_FINISH && len - left == s->strm->avail_in ? 1 : 0;\n+        _tr_stored_block(s, (char *)0, 0L, last);\n+\n+        /* Replace the lengths in the dummy stored block with len. */\n+        s->pending_buf[s->pending - 4] = len;\n+        s->pending_buf[s->pending - 3] = len >> 8;\n+        s->pending_buf[s->pending - 2] = ~len;\n+        s->pending_buf[s->pending - 1] = ~len >> 8;\n+\n+        /* Write the stored block header bytes. */\n+        flush_pending(s->strm);\n+\n+        /* Update debugging counts for the data about to be copied. */\n+#ifdef ZLIB_DEBUG\n+        s->compressed_len += len << 3;\n+        s->bits_sent += len << 3;\n+#endif\n \n-            if (s->lookahead == 0) break; /* flush the current block */\n+        /* Copy uncompressed bytes from the window to next_out. */\n+        if (left) {\n+            zmemcpy(s->strm->next_out, s->window + s->block_start, left);\n+            s->strm->next_out += left;\n+            s->strm->avail_out -= left;\n+            s->strm->total_out += left;\n+            s->block_start += left;\n+            len -= left;\n         }\n-        Assert(s->block_start >= 0L, \"block gone\");\n-\n-        s->strstart += s->lookahead;\n-        s->lookahead = 0;\n-\n-        /* Emit a stored block if pending_buf will be full: */\n-        max_start = s->block_start + max_block_size;\n-        if (s->strstart == 0 || (ulg)s->strstart >= max_start) {\n-            /* strstart == 0 is possible when wraparound on 16-bit machine */\n-            s->lookahead = (uInt)(s->strstart - max_start);\n-            s->strstart = (uInt)max_start;\n-            FLUSH_BLOCK(s, 0);\n+\n+        /* Copy uncompressed bytes directly from next_in to next_out, updating\n+         * the check value.\n+         */\n+        if (len) {\n+            read_buf(s->strm, s->strm->next_out, len);\n+            s->strm->next_out += len;\n+            s->strm->avail_out -= len;\n+            s->strm->total_out += len;\n         }\n-        /* Flush if we may have to slide, otherwise block_start may become\n-         * negative and the data will be gone:\n+    } while (last == 0);\n+\n+    /* Update the sliding window with the last s->w_size bytes of the copied\n+     * data, or append all of the copied data to the existing window if less\n+     * than s->w_size bytes were copied. Also update the number of bytes to\n+     * insert in the hash tables, in the event that deflateParams() switches to\n+     * a non-zero compression level.\n+     */\n+    used -= s->strm->avail_in;      /* number of input bytes directly copied */\n+    if (used) {\n+        /* If any input was used, then no unused input remains in the window,\n+         * therefore s->block_start == s->strstart.\n          */\n-        if (s->strstart - (uInt)s->block_start >= MAX_DIST(s)) {\n-            FLUSH_BLOCK(s, 0);\n+        if (used >= s->w_size) {    /* supplant the previous history */\n+            s->matches = 2;         /* clear hash */\n+            zmemcpy(s->window, s->strm->next_in - s->w_size, s->w_size);\n+            s->strstart = s->w_size;\n         }\n+        else {\n+            if (s->window_size - s->strstart <= used) {\n+                /* Slide the window down. */\n+                s->strstart -= s->w_size;\n+                zmemcpy(s->window, s->window + s->w_size, s->strstart);\n+                if (s->matches < 2)\n+                    s->matches++;   /* add a pending slide_hash() */\n+            }\n+            zmemcpy(s->window + s->strstart, s->strm->next_in - used, used);\n+            s->strstart += used;\n+        }\n+        s->block_start = s->strstart;\n+        s->insert += MIN(used, s->w_size - s->insert);\n     }\n-    s->insert = 0;\n-    if (flush == Z_FINISH) {\n-        FLUSH_BLOCK(s, 1);\n+\n+    /* If the last block was written to next_out, then done. */\n+    if (last)\n         return finish_done;\n+\n+    /* If flushing and all input has been consumed, then done. */\n+    if (flush != Z_NO_FLUSH && flush != Z_FINISH &&\n+        s->strm->avail_in == 0 && (long)s->strstart == s->block_start)\n+        return block_done;\n+\n+    /* Fill the window with any remaining input. */\n+    have = s->window_size - s->strstart - 1;\n+    if (s->strm->avail_in > have && s->block_start >= (long)s->w_size) {\n+        /* Slide the window down. */\n+        s->block_start -= s->w_size;\n+        s->strstart -= s->w_size;\n+        zmemcpy(s->window, s->window + s->w_size, s->strstart);\n+        if (s->matches < 2)\n+            s->matches++;           /* add a pending slide_hash() */\n+        have += s->w_size;          /* more space now */\n     }\n-    if ((long)s->strstart > s->block_start)\n-        FLUSH_BLOCK(s, 0);\n-    return block_done;\n+    if (have > s->strm->avail_in)\n+        have = s->strm->avail_in;\n+    if (have) {\n+        read_buf(s->strm, s->window + s->strstart, have);\n+        s->strstart += have;\n+    }\n+\n+    /* There was not enough avail_out to write a complete worthy or flushed\n+     * stored block to next_out. Write a stored block to pending instead, if we\n+     * have enough input for a worthy block, or if flushing and there is enough\n+     * room for the remaining input as a stored block in the pending buffer.\n+     */\n+    have = (s->bi_valid + 42) >> 3;         /* number of header bytes */\n+        /* maximum stored block length that will fit in pending: */\n+    have = MIN(s->pending_buf_size - have, MAX_STORED);\n+    min_block = MIN(have, s->w_size);\n+    left = s->strstart - s->block_start;\n+    if (left >= min_block ||\n+        ((left || flush == Z_FINISH) && flush != Z_NO_FLUSH &&\n+         s->strm->avail_in == 0 && left <= have)) {\n+        len = MIN(left, have);\n+        last = flush == Z_FINISH && s->strm->avail_in == 0 &&\n+               len == left ? 1 : 0;\n+        _tr_stored_block(s, (charf *)s->window + s->block_start, len, last);\n+        s->block_start += len;\n+        flush_pending(s->strm);\n+    }\n+\n+    /* We've done all we can with the available input and output. */\n+    return last ? finish_started : need_more;\n }\n \n /* ===========================================================================\n@@ -1892,7 +2083,7 @@ local block_state deflate_rle(s, flush)\n                          prev == *++scan && prev == *++scan &&\n                          prev == *++scan && prev == *++scan &&\n                          scan < strend);\n-                s->match_length = MAX_MATCH - (int)(strend - scan);\n+                s->match_length = MAX_MATCH - (uInt)(strend - scan);\n                 if (s->match_length > s->lookahead)\n                     s->match_length = s->lookahead;\n             }"}, {"sha": "360ca23ff342591ac5a06ce36ad79de9be6b6d44", "filename": "zlib/deflate.h", "status": "modified", "additions": 19, "deletions": 16, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fdeflate.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fdeflate.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fdeflate.h?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,5 +1,5 @@\n /* deflate.h -- internal compression state\n- * Copyright (C) 1995-2012 Jean-loup Gailly\n+ * Copyright (C) 1995-2016 Jean-loup Gailly\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -51,13 +51,16 @@\n #define Buf_size 16\n /* size of bit buffer in bi_buf */\n \n-#define INIT_STATE    42\n-#define EXTRA_STATE   69\n-#define NAME_STATE    73\n-#define COMMENT_STATE 91\n-#define HCRC_STATE   103\n-#define BUSY_STATE   113\n-#define FINISH_STATE 666\n+#define INIT_STATE    42    /* zlib header -> BUSY_STATE */\n+#ifdef GZIP\n+#  define GZIP_STATE  57    /* gzip header -> BUSY_STATE | EXTRA_STATE */\n+#endif\n+#define EXTRA_STATE   69    /* gzip extra block -> NAME_STATE */\n+#define NAME_STATE    73    /* gzip file name -> COMMENT_STATE */\n+#define COMMENT_STATE 91    /* gzip comment -> HCRC_STATE */\n+#define HCRC_STATE   103    /* gzip header CRC -> BUSY_STATE */\n+#define BUSY_STATE   113    /* deflate -> FINISH_STATE */\n+#define FINISH_STATE 666    /* stream complete */\n /* Stream status */\n \n \n@@ -83,7 +86,7 @@ typedef struct static_tree_desc_s  static_tree_desc;\n typedef struct tree_desc_s {\n     ct_data *dyn_tree;           /* the dynamic tree */\n     int     max_code;            /* largest code with non zero frequency */\n-    static_tree_desc *stat_desc; /* the corresponding static tree */\n+    const static_tree_desc *stat_desc;  /* the corresponding static tree */\n } FAR tree_desc;\n \n typedef ush Pos;\n@@ -100,10 +103,10 @@ typedef struct internal_state {\n     Bytef *pending_buf;  /* output still pending */\n     ulg   pending_buf_size; /* size of pending_buf */\n     Bytef *pending_out;  /* next pending byte to output to the stream */\n-    uInt   pending;      /* nb of bytes in the pending buffer */\n+    ulg   pending;       /* nb of bytes in the pending buffer */\n     int   wrap;          /* bit 0 true for zlib, bit 1 true for gzip */\n     gz_headerp  gzhead;  /* gzip header information to write */\n-    uInt   gzindex;      /* where in extra, name, or comment */\n+    ulg   gzindex;       /* where in extra, name, or comment */\n     Byte  method;        /* can only be DEFLATED */\n     int   last_flush;    /* value of flush param for previous deflate call */\n \n@@ -249,7 +252,7 @@ typedef struct internal_state {\n     uInt matches;       /* number of string matches in current block */\n     uInt insert;        /* bytes at end of window left to insert */\n \n-#ifdef DEBUG\n+#ifdef ZLIB_DEBUG\n     ulg compressed_len; /* total bit length of compressed file mod 2^32 */\n     ulg bits_sent;      /* bit length of compressed data sent mod 2^32 */\n #endif\n@@ -275,7 +278,7 @@ typedef struct internal_state {\n /* Output a byte on the stream.\n  * IN assertion: there is enough room in pending_buf.\n  */\n-#define put_byte(s, c) {s->pending_buf[s->pending++] = (c);}\n+#define put_byte(s, c) {s->pending_buf[s->pending++] = (Bytef)(c);}\n \n \n #define MIN_LOOKAHEAD (MAX_MATCH+MIN_MATCH+1)\n@@ -309,7 +312,7 @@ void ZLIB_INTERNAL _tr_stored_block OF((deflate_state *s, charf *buf,\n  * used.\n  */\n \n-#ifndef DEBUG\n+#ifndef ZLIB_DEBUG\n /* Inline versions of _tr_tally for speed: */\n \n #if defined(GEN_TREES_H) || !defined(STDC)\n@@ -328,8 +331,8 @@ void ZLIB_INTERNAL _tr_stored_block OF((deflate_state *s, charf *buf,\n     flush = (s->last_lit == s->lit_bufsize-1); \\\n    }\n # define _tr_tally_dist(s, distance, length, flush) \\\n-  { uch len = (length); \\\n-    ush dist = (distance); \\\n+  { uch len = (uch)(length); \\\n+    ush dist = (ush)(distance); \\\n     s->d_buf[s->last_lit] = dist; \\\n     s->l_buf[s->last_lit++] = len; \\\n     dist--; \\"}, {"sha": "be44fa51ff522c27cad43a6396b22879f6407ec6", "filename": "zlib/examples/gun.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fexamples%2Fgun.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fexamples%2Fgun.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fexamples%2Fgun.c?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -46,7 +46,7 @@\n    end-of-file, they cannot be concantenated.  If a Unix compress stream is\n    encountered in an input file, it is the last stream in that file.\n \n-   Like gunzip and uncompress, the file attributes of the orignal compressed\n+   Like gunzip and uncompress, the file attributes of the original compressed\n    file are maintained in the final uncompressed file, to the extent that the\n    user permissions allow it.\n "}, {"sha": "b8c29274e8b9ece39fed6f6614ff0c2c9243986f", "filename": "zlib/examples/gzlog.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fexamples%2Fgzlog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fexamples%2Fgzlog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fexamples%2Fgzlog.c?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,6 +1,6 @@\n /*\n  * gzlog.c\n- * Copyright (C) 2004, 2008, 2012 Mark Adler, all rights reserved\n+ * Copyright (C) 2004, 2008, 2012, 2016 Mark Adler, all rights reserved\n  * For conditions of distribution and use, see copyright notice in gzlog.h\n  * version 2.2, 14 Aug 2012\n  */\n@@ -243,7 +243,7 @@ typedef unsigned int uint;\n typedef unsigned long ulong;\n \n /* Macro for debugging to deterministically force recovery operations */\n-#ifdef DEBUG\n+#ifdef GZLOG_DEBUG\n     #include <setjmp.h>         /* longjmp */\n     jmp_buf gzlog_jump;         /* where to go back to */\n     int gzlog_bail = 0;         /* which point to bail at (1..8) */"}, {"sha": "4fec6594a6648e759343325ea39ee02b56f9d39d", "filename": "zlib/examples/zran.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fexamples%2Fzran.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fexamples%2Fzran.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fexamples%2Fzran.c?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -27,7 +27,7 @@\n    grows as needed to accommodate the points.\n \n    To use the index, an offset in the uncompressed data is provided, for which\n-   the latest accees point at or preceding that offset is located in the index.\n+   the latest access point at or preceding that offset is located in the index.\n    The input file is positioned to the specified location in the index, and if\n    necessary the first few bits of the compressed data is read from the file.\n    inflate is initialized with those bits and the 32K of uncompressed data, and"}, {"sha": "990a4d2514933709883a7d949ed52146675fe2c1", "filename": "zlib/gzguts.h", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fgzguts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fgzguts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fgzguts.h?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,5 +1,5 @@\n /* gzguts.h -- zlib internal header definitions for gz* operations\n- * Copyright (C) 2004, 2005, 2010, 2011, 2012, 2013 Mark Adler\n+ * Copyright (C) 2004, 2005, 2010, 2011, 2012, 2013, 2016 Mark Adler\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -25,6 +25,10 @@\n #  include <stdlib.h>\n #  include <limits.h>\n #endif\n+\n+#ifndef _POSIX_SOURCE\n+#  define _POSIX_SOURCE\n+#endif\n #include <fcntl.h>\n \n #ifdef _WIN32\n@@ -35,6 +39,10 @@\n #  include <io.h>\n #endif\n \n+#if defined(_WIN32) || defined(__CYGWIN__)\n+#  define WIDECHAR\n+#endif\n+\n #ifdef WINAPI_FAMILY\n #  define open _open\n #  define read _read\n@@ -95,18 +103,19 @@\n #  endif\n #endif\n \n-/* unlike snprintf (which is required in C99, yet still not supported by\n-   Microsoft more than a decade later!), _snprintf does not guarantee null\n-   termination of the result -- however this is only used in gzlib.c where\n+/* unlike snprintf (which is required in C99), _snprintf does not guarantee\n+   null termination of the result -- however this is only used in gzlib.c where\n    the result is assured to fit in the space provided */\n-#ifdef _MSC_VER\n+#if defined(_MSC_VER) && _MSC_VER < 1900\n #  define snprintf _snprintf\n #endif\n \n #ifndef local\n #  define local static\n #endif\n-/* compile with -Dlocal if your debugger can't find static symbols */\n+/* since \"static\" is used to mean two completely different things in C, we\n+   define \"local\" for the non-static meaning of \"static\", for readability\n+   (compile with -Dlocal if your debugger can't find static symbols) */\n \n /* gz* functions always use library allocation functions */\n #ifndef STDC\n@@ -170,7 +179,7 @@ typedef struct {\n     char *path;             /* path or fd for error messages */\n     unsigned size;          /* buffer size, zero if not allocated yet */\n     unsigned want;          /* requested buffer size, default is GZBUFSIZE */\n-    unsigned char *in;      /* input buffer */\n+    unsigned char *in;      /* input buffer (double-sized when writing) */\n     unsigned char *out;     /* output buffer (double-sized when reading) */\n     int direct;             /* 0 if processing gzip, 1 if transparent */\n         /* just for reading */"}, {"sha": "e142ffb3d75c6219af15a5aec167b3b99fd6d15d", "filename": "zlib/gzlib.c", "status": "modified", "additions": 17, "deletions": 14, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fgzlib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fgzlib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fgzlib.c?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,11 +1,11 @@\n /* gzlib.c -- zlib functions common to reading and writing gzip files\n- * Copyright (C) 2004, 2010, 2011, 2012, 2013 Mark Adler\n+ * Copyright (C) 2004, 2010, 2011, 2012, 2013, 2016 Mark Adler\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n #include \"gzguts.h\"\n \n-#if defined(_WIN32) && !defined(__BORLANDC__)\n+#if defined(_WIN32) && !defined(__BORLANDC__) && !defined(__MINGW32__)\n #  define LSEEK _lseeki64\n #else\n #if defined(_LARGEFILE64_SOURCE) && _LFS64_LARGEFILE-0\n@@ -94,7 +94,7 @@ local gzFile gz_open(path, fd, mode)\n     const char *mode;\n {\n     gz_statep state;\n-    size_t len;\n+    z_size_t len;\n     int oflag;\n #ifdef O_CLOEXEC\n     int cloexec = 0;\n@@ -188,10 +188,10 @@ local gzFile gz_open(path, fd, mode)\n     }\n \n     /* save the path name for error messages */\n-#ifdef _WIN32\n+#ifdef WIDECHAR\n     if (fd == -2) {\n         len = wcstombs(NULL, path, 0);\n-        if (len == (size_t)-1)\n+        if (len == (z_size_t)-1)\n             len = 0;\n     }\n     else\n@@ -202,7 +202,7 @@ local gzFile gz_open(path, fd, mode)\n         free(state);\n         return NULL;\n     }\n-#ifdef _WIN32\n+#ifdef WIDECHAR\n     if (fd == -2)\n         if (len)\n             wcstombs(state->path, path, len + 1);\n@@ -211,7 +211,7 @@ local gzFile gz_open(path, fd, mode)\n     else\n #endif\n #if !defined(NO_snprintf) && !defined(NO_vsnprintf)\n-        snprintf(state->path, len + 1, \"%s\", (const char *)path);\n+        (void)snprintf(state->path, len + 1, \"%s\", (const char *)path);\n #else\n         strcpy(state->path, path);\n #endif\n@@ -239,7 +239,7 @@ local gzFile gz_open(path, fd, mode)\n \n     /* open the file with the appropriate flags (or just use fd) */\n     state->fd = fd > -1 ? fd : (\n-#ifdef _WIN32\n+#ifdef WIDECHAR\n         fd == -2 ? _wopen(path, oflag, 0666) :\n #endif\n         open((const char *)path, oflag, 0666));\n@@ -248,8 +248,10 @@ local gzFile gz_open(path, fd, mode)\n         free(state);\n         return NULL;\n     }\n-    if (state->mode == GZ_APPEND)\n+    if (state->mode == GZ_APPEND) {\n+        LSEEK(state->fd, 0, SEEK_END);  /* so gzoffset() is correct */\n         state->mode = GZ_WRITE;         /* simplify later checks */\n+    }\n \n     /* save the current position for rewinding (only if reading) */\n     if (state->mode == GZ_READ) {\n@@ -291,7 +293,7 @@ gzFile ZEXPORT gzdopen(fd, mode)\n     if (fd == -1 || (path = (char *)malloc(7 + 3 * sizeof(int))) == NULL)\n         return NULL;\n #if !defined(NO_snprintf) && !defined(NO_vsnprintf)\n-    snprintf(path, 7 + 3 * sizeof(int), \"<fd:%d>\", fd); /* for debugging */\n+    (void)snprintf(path, 7 + 3 * sizeof(int), \"<fd:%d>\", fd);\n #else\n     sprintf(path, \"<fd:%d>\", fd);   /* for debugging */\n #endif\n@@ -301,7 +303,7 @@ gzFile ZEXPORT gzdopen(fd, mode)\n }\n \n /* -- see zlib.h -- */\n-#ifdef _WIN32\n+#ifdef WIDECHAR\n gzFile ZEXPORT gzopen_w(path, mode)\n     const wchar_t *path;\n     const char *mode;\n@@ -329,6 +331,8 @@ int ZEXPORT gzbuffer(file, size)\n         return -1;\n \n     /* check and set requested size */\n+    if ((size << 1) < size)\n+        return -1;              /* need to be able to double it */\n     if (size < 2)\n         size = 2;               /* need two bytes to check magic header */\n     state->want = size;\n@@ -604,14 +608,13 @@ void ZLIB_INTERNAL gz_error(state, err, msg)\n         return;\n     }\n #if !defined(NO_snprintf) && !defined(NO_vsnprintf)\n-    snprintf(state->msg, strlen(state->path) + strlen(msg) + 3,\n-             \"%s%s%s\", state->path, \": \", msg);\n+    (void)snprintf(state->msg, strlen(state->path) + strlen(msg) + 3,\n+                   \"%s%s%s\", state->path, \": \", msg);\n #else\n     strcpy(state->msg, state->path);\n     strcat(state->msg, \": \");\n     strcat(state->msg, msg);\n #endif\n-    return;\n }\n \n #ifndef INT_MAX"}, {"sha": "956b91ea7d9e2a7cd554f7d6561142509b655244", "filename": "zlib/gzread.c", "status": "modified", "additions": 108, "deletions": 48, "changes": 156, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fgzread.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fgzread.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fgzread.c?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,5 +1,5 @@\n /* gzread.c -- zlib functions for reading gzip files\n- * Copyright (C) 2004, 2005, 2010, 2011, 2012, 2013 Mark Adler\n+ * Copyright (C) 2004, 2005, 2010, 2011, 2012, 2013, 2016 Mark Adler\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -12,6 +12,7 @@ local int gz_look OF((gz_statep));\n local int gz_decomp OF((gz_statep));\n local int gz_fetch OF((gz_statep));\n local int gz_skip OF((gz_statep, z_off64_t));\n+local z_size_t gz_read OF((gz_statep, voidp, z_size_t));\n \n /* Use read() to load a buffer -- return -1 on error, otherwise 0.  Read from\n    state->fd, and update state->eof, state->err, and state->msg as appropriate.\n@@ -24,13 +25,17 @@ local int gz_load(state, buf, len, have)\n     unsigned *have;\n {\n     int ret;\n+    unsigned get, max = ((unsigned)-1 >> 2) + 1;\n \n     *have = 0;\n     do {\n-        ret = read(state->fd, buf + *have, len - *have);\n+        get = len - *have;\n+        if (get > max)\n+            get = max;\n+        ret = read(state->fd, buf + *have, get);\n         if (ret <= 0)\n             break;\n-        *have += ret;\n+        *have += (unsigned)ret;\n     } while (*have < len);\n     if (ret < 0) {\n         gz_error(state, Z_ERRNO, zstrerror());\n@@ -94,10 +99,8 @@ local int gz_look(state)\n         state->in = (unsigned char *)malloc(state->want);\n         state->out = (unsigned char *)malloc(state->want << 1);\n         if (state->in == NULL || state->out == NULL) {\n-            if (state->out != NULL)\n-                free(state->out);\n-            if (state->in != NULL)\n-                free(state->in);\n+            free(state->out);\n+            free(state->in);\n             gz_error(state, Z_MEM_ERROR, \"out of memory\");\n             return -1;\n         }\n@@ -284,33 +287,17 @@ local int gz_skip(state, len)\n     return 0;\n }\n \n-/* -- see zlib.h -- */\n-int ZEXPORT gzread(file, buf, len)\n-    gzFile file;\n+/* Read len bytes into buf from file, or less than len up to the end of the\n+   input.  Return the number of bytes read.  If zero is returned, either the\n+   end of file was reached, or there was an error.  state->err must be\n+   consulted in that case to determine which. */\n+local z_size_t gz_read(state, buf, len)\n+    gz_statep state;\n     voidp buf;\n-    unsigned len;\n+    z_size_t len;\n {\n-    unsigned got, n;\n-    gz_statep state;\n-    z_streamp strm;\n-\n-    /* get internal structure */\n-    if (file == NULL)\n-        return -1;\n-    state = (gz_statep)file;\n-    strm = &(state->strm);\n-\n-    /* check that we're reading and that there's no (serious) error */\n-    if (state->mode != GZ_READ ||\n-            (state->err != Z_OK && state->err != Z_BUF_ERROR))\n-        return -1;\n-\n-    /* since an int is returned, make sure len fits in one, otherwise return\n-       with an error (this avoids the flaw in the interface) */\n-    if ((int)len < 0) {\n-        gz_error(state, Z_DATA_ERROR, \"requested length does not fit in int\");\n-        return -1;\n-    }\n+    z_size_t got;\n+    unsigned n;\n \n     /* if len is zero, avoid unnecessary operations */\n     if (len == 0)\n@@ -320,49 +307,55 @@ int ZEXPORT gzread(file, buf, len)\n     if (state->seek) {\n         state->seek = 0;\n         if (gz_skip(state, state->skip) == -1)\n-            return -1;\n+            return 0;\n     }\n \n     /* get len bytes to buf, or less than len if at the end */\n     got = 0;\n     do {\n+        /* set n to the maximum amount of len that fits in an unsigned int */\n+        n = -1;\n+        if (n > len)\n+            n = len;\n+\n         /* first just try copying data from the output buffer */\n         if (state->x.have) {\n-            n = state->x.have > len ? len : state->x.have;\n+            if (state->x.have < n)\n+                n = state->x.have;\n             memcpy(buf, state->x.next, n);\n             state->x.next += n;\n             state->x.have -= n;\n         }\n \n         /* output buffer empty -- return if we're at the end of the input */\n-        else if (state->eof && strm->avail_in == 0) {\n+        else if (state->eof && state->strm.avail_in == 0) {\n             state->past = 1;        /* tried to read past end */\n             break;\n         }\n \n         /* need output data -- for small len or new stream load up our output\n            buffer */\n-        else if (state->how == LOOK || len < (state->size << 1)) {\n+        else if (state->how == LOOK || n < (state->size << 1)) {\n             /* get more output, looking for header if required */\n             if (gz_fetch(state) == -1)\n-                return -1;\n+                return 0;\n             continue;       /* no progress yet -- go back to copy above */\n             /* the copy above assures that we will leave with space in the\n                output buffer, allowing at least one gzungetc() to succeed */\n         }\n \n         /* large len -- read directly into user buffer */\n         else if (state->how == COPY) {      /* read directly */\n-            if (gz_load(state, (unsigned char *)buf, len, &n) == -1)\n-                return -1;\n+            if (gz_load(state, (unsigned char *)buf, n, &n) == -1)\n+                return 0;\n         }\n \n         /* large len -- decompress directly into user buffer */\n         else {  /* state->how == GZIP */\n-            strm->avail_out = len;\n-            strm->next_out = (unsigned char *)buf;\n+            state->strm.avail_out = n;\n+            state->strm.next_out = (unsigned char *)buf;\n             if (gz_decomp(state) == -1)\n-                return -1;\n+                return 0;\n             n = state->x.have;\n             state->x.have = 0;\n         }\n@@ -374,8 +367,75 @@ int ZEXPORT gzread(file, buf, len)\n         state->x.pos += n;\n     } while (len);\n \n-    /* return number of bytes read into user buffer (will fit in int) */\n-    return (int)got;\n+    /* return number of bytes read into user buffer */\n+    return got;\n+}\n+\n+/* -- see zlib.h -- */\n+int ZEXPORT gzread(file, buf, len)\n+    gzFile file;\n+    voidp buf;\n+    unsigned len;\n+{\n+    gz_statep state;\n+\n+    /* get internal structure */\n+    if (file == NULL)\n+        return -1;\n+    state = (gz_statep)file;\n+\n+    /* check that we're reading and that there's no (serious) error */\n+    if (state->mode != GZ_READ ||\n+            (state->err != Z_OK && state->err != Z_BUF_ERROR))\n+        return -1;\n+\n+    /* since an int is returned, make sure len fits in one, otherwise return\n+       with an error (this avoids a flaw in the interface) */\n+    if ((int)len < 0) {\n+        gz_error(state, Z_STREAM_ERROR, \"request does not fit in an int\");\n+        return -1;\n+    }\n+\n+    /* read len or fewer bytes to buf */\n+    len = gz_read(state, buf, len);\n+\n+    /* check for an error */\n+    if (len == 0 && state->err != Z_OK && state->err != Z_BUF_ERROR)\n+        return -1;\n+\n+    /* return the number of bytes read (this is assured to fit in an int) */\n+    return (int)len;\n+}\n+\n+/* -- see zlib.h -- */\n+z_size_t ZEXPORT gzfread(buf, size, nitems, file)\n+    voidp buf;\n+    z_size_t size;\n+    z_size_t nitems;\n+    gzFile file;\n+{\n+    z_size_t len;\n+    gz_statep state;\n+\n+    /* get internal structure */\n+    if (file == NULL)\n+        return 0;\n+    state = (gz_statep)file;\n+\n+    /* check that we're reading and that there's no (serious) error */\n+    if (state->mode != GZ_READ ||\n+            (state->err != Z_OK && state->err != Z_BUF_ERROR))\n+        return 0;\n+\n+    /* compute bytes to read -- error on overflow */\n+    len = nitems * size;\n+    if (size && len / size != nitems) {\n+        gz_error(state, Z_STREAM_ERROR, \"request does not fit in a size_t\");\n+        return 0;\n+    }\n+\n+    /* read len or fewer bytes to buf, return the number of full items read */\n+    return len ? gz_read(state, buf, len) / size : 0;\n }\n \n /* -- see zlib.h -- */\n@@ -408,8 +468,8 @@ int ZEXPORT gzgetc(file)\n         return *(state->x.next)++;\n     }\n \n-    /* nothing there -- try gzread() */\n-    ret = gzread(file, buf, 1);\n+    /* nothing there -- try gz_read() */\n+    ret = gz_read(state, buf, 1);\n     return ret < 1 ? -1 : buf[0];\n }\n \n@@ -451,7 +511,7 @@ int ZEXPORT gzungetc(c, file)\n     if (state->x.have == 0) {\n         state->x.have = 1;\n         state->x.next = state->out + (state->size << 1) - 1;\n-        state->x.next[0] = c;\n+        state->x.next[0] = (unsigned char)c;\n         state->x.pos--;\n         state->past = 0;\n         return c;\n@@ -473,7 +533,7 @@ int ZEXPORT gzungetc(c, file)\n     }\n     state->x.have++;\n     state->x.next--;\n-    state->x.next[0] = c;\n+    state->x.next[0] = (unsigned char)c;\n     state->x.pos--;\n     state->past = 0;\n     return c;"}, {"sha": "1ec1da409546b79add351a0dd409c5bee31a3568", "filename": "zlib/gzwrite.c", "status": "modified", "additions": 210, "deletions": 122, "changes": 332, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fgzwrite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fgzwrite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fgzwrite.c?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,5 +1,5 @@\n /* gzwrite.c -- zlib functions for writing gzip files\n- * Copyright (C) 2004, 2005, 2010, 2011, 2012, 2013 Mark Adler\n+ * Copyright (C) 2004, 2005, 2010, 2011, 2012, 2013, 2016 Mark Adler\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -9,17 +9,19 @@\n local int gz_init OF((gz_statep));\n local int gz_comp OF((gz_statep, int));\n local int gz_zero OF((gz_statep, z_off64_t));\n+local z_size_t gz_write OF((gz_statep, voidpc, z_size_t));\n \n /* Initialize state for writing a gzip file.  Mark initialization by setting\n-   state->size to non-zero.  Return -1 on failure or 0 on success. */\n+   state->size to non-zero.  Return -1 on a memory allocation failure, or 0 on\n+   success. */\n local int gz_init(state)\n     gz_statep state;\n {\n     int ret;\n     z_streamp strm = &(state->strm);\n \n-    /* allocate input buffer */\n-    state->in = (unsigned char *)malloc(state->want);\n+    /* allocate input buffer (double size for gzprintf) */\n+    state->in = (unsigned char *)malloc(state->want << 1);\n     if (state->in == NULL) {\n         gz_error(state, Z_MEM_ERROR, \"out of memory\");\n         return -1;\n@@ -47,6 +49,7 @@ local int gz_init(state)\n             gz_error(state, Z_MEM_ERROR, \"out of memory\");\n             return -1;\n         }\n+        strm->next_in = NULL;\n     }\n \n     /* mark state as initialized */\n@@ -62,17 +65,17 @@ local int gz_init(state)\n }\n \n /* Compress whatever is at avail_in and next_in and write to the output file.\n-   Return -1 if there is an error writing to the output file, otherwise 0.\n-   flush is assumed to be a valid deflate() flush value.  If flush is Z_FINISH,\n-   then the deflate() state is reset to start a new gzip stream.  If gz->direct\n-   is true, then simply write to the output file without compressing, and\n-   ignore flush. */\n+   Return -1 if there is an error writing to the output file or if gz_init()\n+   fails to allocate memory, otherwise 0.  flush is assumed to be a valid\n+   deflate() flush value.  If flush is Z_FINISH, then the deflate() state is\n+   reset to start a new gzip stream.  If gz->direct is true, then simply write\n+   to the output file without compressing, and ignore flush. */\n local int gz_comp(state, flush)\n     gz_statep state;\n     int flush;\n {\n-    int ret, got;\n-    unsigned have;\n+    int ret, writ;\n+    unsigned have, put, max = ((unsigned)-1 >> 2) + 1;\n     z_streamp strm = &(state->strm);\n \n     /* allocate memory if this is the first time through */\n@@ -81,12 +84,16 @@ local int gz_comp(state, flush)\n \n     /* write directly if requested */\n     if (state->direct) {\n-        got = write(state->fd, strm->next_in, strm->avail_in);\n-        if (got < 0 || (unsigned)got != strm->avail_in) {\n-            gz_error(state, Z_ERRNO, zstrerror());\n-            return -1;\n+        while (strm->avail_in) {\n+            put = strm->avail_in > max ? max : strm->avail_in;\n+            writ = write(state->fd, strm->next_in, put);\n+            if (writ < 0) {\n+                gz_error(state, Z_ERRNO, zstrerror());\n+                return -1;\n+            }\n+            strm->avail_in -= (unsigned)writ;\n+            strm->next_in += writ;\n         }\n-        strm->avail_in = 0;\n         return 0;\n     }\n \n@@ -97,17 +104,21 @@ local int gz_comp(state, flush)\n            doing Z_FINISH then don't write until we get to Z_STREAM_END */\n         if (strm->avail_out == 0 || (flush != Z_NO_FLUSH &&\n             (flush != Z_FINISH || ret == Z_STREAM_END))) {\n-            have = (unsigned)(strm->next_out - state->x.next);\n-            if (have && ((got = write(state->fd, state->x.next, have)) < 0 ||\n-                         (unsigned)got != have)) {\n-                gz_error(state, Z_ERRNO, zstrerror());\n-                return -1;\n+            while (strm->next_out > state->x.next) {\n+                put = strm->next_out - state->x.next > (int)max ? max :\n+                      (unsigned)(strm->next_out - state->x.next);\n+                writ = write(state->fd, state->x.next, put);\n+                if (writ < 0) {\n+                    gz_error(state, Z_ERRNO, zstrerror());\n+                    return -1;\n+                }\n+                state->x.next += writ;\n             }\n             if (strm->avail_out == 0) {\n                 strm->avail_out = state->size;\n                 strm->next_out = state->out;\n+                state->x.next = state->out;\n             }\n-            state->x.next = strm->next_out;\n         }\n \n         /* compress */\n@@ -129,7 +140,8 @@ local int gz_comp(state, flush)\n     return 0;\n }\n \n-/* Compress len zeros to output.  Return -1 on error, 0 on success. */\n+/* Compress len zeros to output.  Return -1 on a write error or memory\n+   allocation failure by gz_comp(), or 0 on success. */\n local int gz_zero(state, len)\n     gz_statep state;\n     z_off64_t len;\n@@ -161,32 +173,14 @@ local int gz_zero(state, len)\n     return 0;\n }\n \n-/* -- see zlib.h -- */\n-int ZEXPORT gzwrite(file, buf, len)\n-    gzFile file;\n+/* Write len bytes from buf to file.  Return the number of bytes written.  If\n+   the returned value is less than len, then there was an error. */\n+local z_size_t gz_write(state, buf, len)\n+    gz_statep state;\n     voidpc buf;\n-    unsigned len;\n+    z_size_t len;\n {\n-    unsigned put = len;\n-    gz_statep state;\n-    z_streamp strm;\n-\n-    /* get internal structure */\n-    if (file == NULL)\n-        return 0;\n-    state = (gz_statep)file;\n-    strm = &(state->strm);\n-\n-    /* check that we're writing and that there's no error */\n-    if (state->mode != GZ_WRITE || state->err != Z_OK)\n-        return 0;\n-\n-    /* since an int is returned, make sure len fits in one, otherwise return\n-       with an error (this avoids the flaw in the interface) */\n-    if ((int)len < 0) {\n-        gz_error(state, Z_DATA_ERROR, \"requested length does not fit in int\");\n-        return 0;\n-    }\n+    z_size_t put = len;\n \n     /* if len is zero, avoid unnecessary operations */\n     if (len == 0)\n@@ -209,14 +203,15 @@ int ZEXPORT gzwrite(file, buf, len)\n         do {\n             unsigned have, copy;\n \n-            if (strm->avail_in == 0)\n-                strm->next_in = state->in;\n-            have = (unsigned)((strm->next_in + strm->avail_in) - state->in);\n+            if (state->strm.avail_in == 0)\n+                state->strm.next_in = state->in;\n+            have = (unsigned)((state->strm.next_in + state->strm.avail_in) -\n+                              state->in);\n             copy = state->size - have;\n             if (copy > len)\n                 copy = len;\n             memcpy(state->in + have, buf, copy);\n-            strm->avail_in += copy;\n+            state->strm.avail_in += copy;\n             state->x.pos += copy;\n             buf = (const char *)buf + copy;\n             len -= copy;\n@@ -226,19 +221,83 @@ int ZEXPORT gzwrite(file, buf, len)\n     }\n     else {\n         /* consume whatever's left in the input buffer */\n-        if (strm->avail_in && gz_comp(state, Z_NO_FLUSH) == -1)\n+        if (state->strm.avail_in && gz_comp(state, Z_NO_FLUSH) == -1)\n             return 0;\n \n         /* directly compress user buffer to file */\n-        strm->avail_in = len;\n-        strm->next_in = (z_const Bytef *)buf;\n-        state->x.pos += len;\n-        if (gz_comp(state, Z_NO_FLUSH) == -1)\n-            return 0;\n+        state->strm.next_in = (z_const Bytef *)buf;\n+        do {\n+            unsigned n = (unsigned)-1;\n+            if (n > len)\n+                n = len;\n+            state->strm.avail_in = n;\n+            state->x.pos += n;\n+            if (gz_comp(state, Z_NO_FLUSH) == -1)\n+                return 0;\n+            len -= n;\n+        } while (len);\n+    }\n+\n+    /* input was all buffered or compressed */\n+    return put;\n+}\n+\n+/* -- see zlib.h -- */\n+int ZEXPORT gzwrite(file, buf, len)\n+    gzFile file;\n+    voidpc buf;\n+    unsigned len;\n+{\n+    gz_statep state;\n+\n+    /* get internal structure */\n+    if (file == NULL)\n+        return 0;\n+    state = (gz_statep)file;\n+\n+    /* check that we're writing and that there's no error */\n+    if (state->mode != GZ_WRITE || state->err != Z_OK)\n+        return 0;\n+\n+    /* since an int is returned, make sure len fits in one, otherwise return\n+       with an error (this avoids a flaw in the interface) */\n+    if ((int)len < 0) {\n+        gz_error(state, Z_DATA_ERROR, \"requested length does not fit in int\");\n+        return 0;\n+    }\n+\n+    /* write len bytes from buf (the return value will fit in an int) */\n+    return (int)gz_write(state, buf, len);\n+}\n+\n+/* -- see zlib.h -- */\n+z_size_t ZEXPORT gzfwrite(buf, size, nitems, file)\n+    voidpc buf;\n+    z_size_t size;\n+    z_size_t nitems;\n+    gzFile file;\n+{\n+    z_size_t len;\n+    gz_statep state;\n+\n+    /* get internal structure */\n+    if (file == NULL)\n+        return 0;\n+    state = (gz_statep)file;\n+\n+    /* check that we're writing and that there's no error */\n+    if (state->mode != GZ_WRITE || state->err != Z_OK)\n+        return 0;\n+\n+    /* compute bytes to read -- error on overflow */\n+    len = nitems * size;\n+    if (size && len / size != nitems) {\n+        gz_error(state, Z_STREAM_ERROR, \"request does not fit in a size_t\");\n+        return 0;\n     }\n \n-    /* input was all buffered or compressed (put will fit in int) */\n-    return (int)put;\n+    /* write len bytes to buf, return the number of full items written */\n+    return len ? gz_write(state, buf, len) / size : 0;\n }\n \n /* -- see zlib.h -- */\n@@ -275,16 +334,16 @@ int ZEXPORT gzputc(file, c)\n             strm->next_in = state->in;\n         have = (unsigned)((strm->next_in + strm->avail_in) - state->in);\n         if (have < state->size) {\n-            state->in[have] = c;\n+            state->in[have] = (unsigned char)c;\n             strm->avail_in++;\n             state->x.pos++;\n             return c & 0xff;\n         }\n     }\n \n     /* no room in buffer or not initialized, use gz_write() */\n-    buf[0] = c;\n-    if (gzwrite(file, buf, 1) != 1)\n+    buf[0] = (unsigned char)c;\n+    if (gz_write(state, buf, 1) != 1)\n         return -1;\n     return c & 0xff;\n }\n@@ -295,11 +354,21 @@ int ZEXPORT gzputs(file, str)\n     const char *str;\n {\n     int ret;\n-    unsigned len;\n+    z_size_t len;\n+    gz_statep state;\n+\n+    /* get internal structure */\n+    if (file == NULL)\n+        return -1;\n+    state = (gz_statep)file;\n+\n+    /* check that we're writing and that there's no error */\n+    if (state->mode != GZ_WRITE || state->err != Z_OK)\n+        return -1;\n \n     /* write string */\n-    len = (unsigned)strlen(str);\n-    ret = gzwrite(file, str, len);\n+    len = strlen(str);\n+    ret = gz_write(state, str, len);\n     return ret == 0 && len != 0 ? -1 : ret;\n }\n \n@@ -309,63 +378,73 @@ int ZEXPORT gzputs(file, str)\n /* -- see zlib.h -- */\n int ZEXPORTVA gzvprintf(gzFile file, const char *format, va_list va)\n {\n-    int size, len;\n+    int len;\n+    unsigned left;\n+    char *next;\n     gz_statep state;\n     z_streamp strm;\n \n     /* get internal structure */\n     if (file == NULL)\n-        return -1;\n+        return Z_STREAM_ERROR;\n     state = (gz_statep)file;\n     strm = &(state->strm);\n \n     /* check that we're writing and that there's no error */\n     if (state->mode != GZ_WRITE || state->err != Z_OK)\n-        return 0;\n+        return Z_STREAM_ERROR;\n \n     /* make sure we have some buffer space */\n     if (state->size == 0 && gz_init(state) == -1)\n-        return 0;\n+        return state->err;\n \n     /* check for seek request */\n     if (state->seek) {\n         state->seek = 0;\n         if (gz_zero(state, state->skip) == -1)\n-            return 0;\n+            return state->err;\n     }\n \n-    /* consume whatever's left in the input buffer */\n-    if (strm->avail_in && gz_comp(state, Z_NO_FLUSH) == -1)\n-        return 0;\n-\n-    /* do the printf() into the input buffer, put length in len */\n-    size = (int)(state->size);\n-    state->in[size - 1] = 0;\n+    /* do the printf() into the input buffer, put length in len -- the input\n+       buffer is double-sized just for this function, so there is guaranteed to\n+       be state->size bytes available after the current contents */\n+    if (strm->avail_in == 0)\n+        strm->next_in = state->in;\n+    next = (char *)(state->in + (strm->next_in - state->in) + strm->avail_in);\n+    next[state->size - 1] = 0;\n #ifdef NO_vsnprintf\n #  ifdef HAS_vsprintf_void\n-    (void)vsprintf((char *)(state->in), format, va);\n-    for (len = 0; len < size; len++)\n-        if (state->in[len] == 0) break;\n+    (void)vsprintf(next, format, va);\n+    for (len = 0; len < state->size; len++)\n+        if (next[len] == 0) break;\n #  else\n-    len = vsprintf((char *)(state->in), format, va);\n+    len = vsprintf(next, format, va);\n #  endif\n #else\n #  ifdef HAS_vsnprintf_void\n-    (void)vsnprintf((char *)(state->in), size, format, va);\n-    len = strlen((char *)(state->in));\n+    (void)vsnprintf(next, state->size, format, va);\n+    len = strlen(next);\n #  else\n-    len = vsnprintf((char *)(state->in), size, format, va);\n+    len = vsnprintf(next, state->size, format, va);\n #  endif\n #endif\n \n     /* check that printf() results fit in buffer */\n-    if (len <= 0 || len >= (int)size || state->in[size - 1] != 0)\n+    if (len == 0 || (unsigned)len >= state->size || next[state->size - 1] != 0)\n         return 0;\n \n-    /* update buffer and position, defer compression until needed */\n-    strm->avail_in = (unsigned)len;\n-    strm->next_in = state->in;\n+    /* update buffer and position, compress first half if past that */\n+    strm->avail_in += (unsigned)len;\n     state->x.pos += len;\n+    if (strm->avail_in >= state->size) {\n+        left = strm->avail_in - state->size;\n+        strm->avail_in = state->size;\n+        if (gz_comp(state, Z_NO_FLUSH) == -1)\n+            return state->err;\n+        memcpy(state->in, state->in + state->size, left);\n+        strm->next_in = state->in;\n+        strm->avail_in = left;\n+    }\n     return len;\n }\n \n@@ -390,73 +469,82 @@ int ZEXPORTVA gzprintf (file, format, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10,\n     int a1, a2, a3, a4, a5, a6, a7, a8, a9, a10,\n         a11, a12, a13, a14, a15, a16, a17, a18, a19, a20;\n {\n-    int size, len;\n+    unsigned len, left;\n+    char *next;\n     gz_statep state;\n     z_streamp strm;\n \n     /* get internal structure */\n     if (file == NULL)\n-        return -1;\n+        return Z_STREAM_ERROR;\n     state = (gz_statep)file;\n     strm = &(state->strm);\n \n     /* check that can really pass pointer in ints */\n     if (sizeof(int) != sizeof(void *))\n-        return 0;\n+        return Z_STREAM_ERROR;\n \n     /* check that we're writing and that there's no error */\n     if (state->mode != GZ_WRITE || state->err != Z_OK)\n-        return 0;\n+        return Z_STREAM_ERROR;\n \n     /* make sure we have some buffer space */\n     if (state->size == 0 && gz_init(state) == -1)\n-        return 0;\n+        return state->error;\n \n     /* check for seek request */\n     if (state->seek) {\n         state->seek = 0;\n         if (gz_zero(state, state->skip) == -1)\n-            return 0;\n+            return state->error;\n     }\n \n-    /* consume whatever's left in the input buffer */\n-    if (strm->avail_in && gz_comp(state, Z_NO_FLUSH) == -1)\n-        return 0;\n-\n-    /* do the printf() into the input buffer, put length in len */\n-    size = (int)(state->size);\n-    state->in[size - 1] = 0;\n+    /* do the printf() into the input buffer, put length in len -- the input\n+       buffer is double-sized just for this function, so there is guaranteed to\n+       be state->size bytes available after the current contents */\n+    if (strm->avail_in == 0)\n+        strm->next_in = state->in;\n+    next = (char *)(strm->next_in + strm->avail_in);\n+    next[state->size - 1] = 0;\n #ifdef NO_snprintf\n #  ifdef HAS_sprintf_void\n-    sprintf((char *)(state->in), format, a1, a2, a3, a4, a5, a6, a7, a8,\n-            a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);\n+    sprintf(next, format, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,\n+            a13, a14, a15, a16, a17, a18, a19, a20);\n     for (len = 0; len < size; len++)\n-        if (state->in[len] == 0) break;\n+        if (next[len] == 0)\n+            break;\n #  else\n-    len = sprintf((char *)(state->in), format, a1, a2, a3, a4, a5, a6, a7, a8,\n-                  a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);\n+    len = sprintf(next, format, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11,\n+                  a12, a13, a14, a15, a16, a17, a18, a19, a20);\n #  endif\n #else\n #  ifdef HAS_snprintf_void\n-    snprintf((char *)(state->in), size, format, a1, a2, a3, a4, a5, a6, a7, a8,\n-             a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);\n-    len = strlen((char *)(state->in));\n+    snprintf(next, state->size, format, a1, a2, a3, a4, a5, a6, a7, a8, a9,\n+             a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);\n+    len = strlen(next);\n #  else\n-    len = snprintf((char *)(state->in), size, format, a1, a2, a3, a4, a5, a6,\n-                   a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18,\n-                   a19, a20);\n+    len = snprintf(next, state->size, format, a1, a2, a3, a4, a5, a6, a7, a8,\n+                   a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);\n #  endif\n #endif\n \n     /* check that printf() results fit in buffer */\n-    if (len <= 0 || len >= (int)size || state->in[size - 1] != 0)\n+    if (len == 0 || len >= state->size || next[state->size - 1] != 0)\n         return 0;\n \n-    /* update buffer and position, defer compression until needed */\n-    strm->avail_in = (unsigned)len;\n-    strm->next_in = state->in;\n+    /* update buffer and position, compress first half if past that */\n+    strm->avail_in += len;\n     state->x.pos += len;\n-    return len;\n+    if (strm->avail_in >= state->size) {\n+        left = strm->avail_in - state->size;\n+        strm->avail_in = state->size;\n+        if (gz_comp(state, Z_NO_FLUSH) == -1)\n+            return state->err;\n+        memcpy(state->in, state->in + state->size, left);\n+        strm->next_in = state->in;\n+        strm->avail_in = left;\n+    }\n+    return (int)len;\n }\n \n #endif\n@@ -470,7 +558,7 @@ int ZEXPORT gzflush(file, flush)\n \n     /* get internal structure */\n     if (file == NULL)\n-        return -1;\n+        return Z_STREAM_ERROR;\n     state = (gz_statep)file;\n \n     /* check that we're writing and that there's no error */\n@@ -485,11 +573,11 @@ int ZEXPORT gzflush(file, flush)\n     if (state->seek) {\n         state->seek = 0;\n         if (gz_zero(state, state->skip) == -1)\n-            return -1;\n+            return state->err;\n     }\n \n     /* compress remaining data with requested flush */\n-    gz_comp(state, flush);\n+    (void)gz_comp(state, flush);\n     return state->err;\n }\n \n@@ -520,13 +608,13 @@ int ZEXPORT gzsetparams(file, level, strategy)\n     if (state->seek) {\n         state->seek = 0;\n         if (gz_zero(state, state->skip) == -1)\n-            return -1;\n+            return state->err;\n     }\n \n     /* change compression parameters for subsequent input */\n     if (state->size) {\n         /* flush previous input with previous parameters before changing */\n-        if (strm->avail_in && gz_comp(state, Z_PARTIAL_FLUSH) == -1)\n+        if (strm->avail_in && gz_comp(state, Z_BLOCK) == -1)\n             return state->err;\n         deflateParams(strm, level, strategy);\n     }"}, {"sha": "59679ecbfc5d778ca85d9ced87565f69bcb4635c", "filename": "zlib/infback.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Finfback.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Finfback.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Finfback.c?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,5 +1,5 @@\n /* infback.c -- inflate using a call-back interface\n- * Copyright (C) 1995-2011 Mark Adler\n+ * Copyright (C) 1995-2016 Mark Adler\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -61,7 +61,7 @@ int stream_size;\n     Tracev((stderr, \"inflate: allocated\\n\"));\n     strm->state = (struct internal_state FAR *)state;\n     state->dmax = 32768U;\n-    state->wbits = windowBits;\n+    state->wbits = (uInt)windowBits;\n     state->wsize = 1U << windowBits;\n     state->window = window;\n     state->wnext = 0;"}, {"sha": "29eb7d8244ae80d689ad7ed4a71ec275c1d64dd6", "filename": "zlib/inffast.c", "status": "modified", "additions": 34, "deletions": 51, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Finffast.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Finffast.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Finffast.c?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,5 +1,5 @@\n /* inffast.c -- fast decoding\n- * Copyright (C) 1995-2008, 2010, 2013 Mark Adler\n+ * Copyright (C) 1995-2008, 2010, 2013, 2016 Mark Adler\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -8,26 +8,9 @@\n #include \"inflate.h\"\n #include \"inffast.h\"\n \n-#ifndef ASMINF\n-\n-/* Allow machine dependent optimization for post-increment or pre-increment.\n-   Based on testing to date,\n-   Pre-increment preferred for:\n-   - PowerPC G3 (Adler)\n-   - MIPS R5000 (Randers-Pehrson)\n-   Post-increment preferred for:\n-   - none\n-   No measurable difference:\n-   - Pentium III (Anderson)\n-   - M68060 (Nikl)\n- */\n-#ifdef POSTINC\n-#  define OFF 0\n-#  define PUP(a) *(a)++\n+#ifdef ASMINF\n+#  pragma message(\"Assembler code may have bugs -- use at your own risk\")\n #else\n-#  define OFF 1\n-#  define PUP(a) *++(a)\n-#endif\n \n /*\n    Decode literal, length, and distance codes and write out the resulting\n@@ -96,9 +79,9 @@ unsigned start;         /* inflate()'s starting value for strm->avail_out */\n \n     /* copy state to local variables */\n     state = (struct inflate_state FAR *)strm->state;\n-    in = strm->next_in - OFF;\n+    in = strm->next_in;\n     last = in + (strm->avail_in - 5);\n-    out = strm->next_out - OFF;\n+    out = strm->next_out;\n     beg = out - (start - strm->avail_out);\n     end = out + (strm->avail_out - 257);\n #ifdef INFLATE_STRICT\n@@ -119,9 +102,9 @@ unsigned start;         /* inflate()'s starting value for strm->avail_out */\n        input data or output space */\n     do {\n         if (bits < 15) {\n-            hold += (unsigned long)(PUP(in)) << bits;\n+            hold += (unsigned long)(*in++) << bits;\n             bits += 8;\n-            hold += (unsigned long)(PUP(in)) << bits;\n+            hold += (unsigned long)(*in++) << bits;\n             bits += 8;\n         }\n         here = lcode[hold & lmask];\n@@ -134,14 +117,14 @@ unsigned start;         /* inflate()'s starting value for strm->avail_out */\n             Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n                     \"inflate:         literal '%c'\\n\" :\n                     \"inflate:         literal 0x%02x\\n\", here.val));\n-            PUP(out) = (unsigned char)(here.val);\n+            *out++ = (unsigned char)(here.val);\n         }\n         else if (op & 16) {                     /* length base */\n             len = (unsigned)(here.val);\n             op &= 15;                           /* number of extra bits */\n             if (op) {\n                 if (bits < op) {\n-                    hold += (unsigned long)(PUP(in)) << bits;\n+                    hold += (unsigned long)(*in++) << bits;\n                     bits += 8;\n                 }\n                 len += (unsigned)hold & ((1U << op) - 1);\n@@ -150,9 +133,9 @@ unsigned start;         /* inflate()'s starting value for strm->avail_out */\n             }\n             Tracevv((stderr, \"inflate:         length %u\\n\", len));\n             if (bits < 15) {\n-                hold += (unsigned long)(PUP(in)) << bits;\n+                hold += (unsigned long)(*in++) << bits;\n                 bits += 8;\n-                hold += (unsigned long)(PUP(in)) << bits;\n+                hold += (unsigned long)(*in++) << bits;\n                 bits += 8;\n             }\n             here = dcode[hold & dmask];\n@@ -165,10 +148,10 @@ unsigned start;         /* inflate()'s starting value for strm->avail_out */\n                 dist = (unsigned)(here.val);\n                 op &= 15;                       /* number of extra bits */\n                 if (bits < op) {\n-                    hold += (unsigned long)(PUP(in)) << bits;\n+                    hold += (unsigned long)(*in++) << bits;\n                     bits += 8;\n                     if (bits < op) {\n-                        hold += (unsigned long)(PUP(in)) << bits;\n+                        hold += (unsigned long)(*in++) << bits;\n                         bits += 8;\n                     }\n                 }\n@@ -196,30 +179,30 @@ unsigned start;         /* inflate()'s starting value for strm->avail_out */\n #ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n                         if (len <= op - whave) {\n                             do {\n-                                PUP(out) = 0;\n+                                *out++ = 0;\n                             } while (--len);\n                             continue;\n                         }\n                         len -= op - whave;\n                         do {\n-                            PUP(out) = 0;\n+                            *out++ = 0;\n                         } while (--op > whave);\n                         if (op == 0) {\n                             from = out - dist;\n                             do {\n-                                PUP(out) = PUP(from);\n+                                *out++ = *from++;\n                             } while (--len);\n                             continue;\n                         }\n #endif\n                     }\n-                    from = window - OFF;\n+                    from = window;\n                     if (wnext == 0) {           /* very common case */\n                         from += wsize - op;\n                         if (op < len) {         /* some from window */\n                             len -= op;\n                             do {\n-                                PUP(out) = PUP(from);\n+                                *out++ = *from++;\n                             } while (--op);\n                             from = out - dist;  /* rest from output */\n                         }\n@@ -230,14 +213,14 @@ unsigned start;         /* inflate()'s starting value for strm->avail_out */\n                         if (op < len) {         /* some from end of window */\n                             len -= op;\n                             do {\n-                                PUP(out) = PUP(from);\n+                                *out++ = *from++;\n                             } while (--op);\n-                            from = window - OFF;\n+                            from = window;\n                             if (wnext < len) {  /* some from start of window */\n                                 op = wnext;\n                                 len -= op;\n                                 do {\n-                                    PUP(out) = PUP(from);\n+                                    *out++ = *from++;\n                                 } while (--op);\n                                 from = out - dist;      /* rest from output */\n                             }\n@@ -248,35 +231,35 @@ unsigned start;         /* inflate()'s starting value for strm->avail_out */\n                         if (op < len) {         /* some from window */\n                             len -= op;\n                             do {\n-                                PUP(out) = PUP(from);\n+                                *out++ = *from++;\n                             } while (--op);\n                             from = out - dist;  /* rest from output */\n                         }\n                     }\n                     while (len > 2) {\n-                        PUP(out) = PUP(from);\n-                        PUP(out) = PUP(from);\n-                        PUP(out) = PUP(from);\n+                        *out++ = *from++;\n+                        *out++ = *from++;\n+                        *out++ = *from++;\n                         len -= 3;\n                     }\n                     if (len) {\n-                        PUP(out) = PUP(from);\n+                        *out++ = *from++;\n                         if (len > 1)\n-                            PUP(out) = PUP(from);\n+                            *out++ = *from++;\n                     }\n                 }\n                 else {\n                     from = out - dist;          /* copy direct from output */\n                     do {                        /* minimum length is three */\n-                        PUP(out) = PUP(from);\n-                        PUP(out) = PUP(from);\n-                        PUP(out) = PUP(from);\n+                        *out++ = *from++;\n+                        *out++ = *from++;\n+                        *out++ = *from++;\n                         len -= 3;\n                     } while (len > 2);\n                     if (len) {\n-                        PUP(out) = PUP(from);\n+                        *out++ = *from++;\n                         if (len > 1)\n-                            PUP(out) = PUP(from);\n+                            *out++ = *from++;\n                     }\n                 }\n             }\n@@ -313,8 +296,8 @@ unsigned start;         /* inflate()'s starting value for strm->avail_out */\n     hold &= (1U << bits) - 1;\n \n     /* update state and return */\n-    strm->next_in = in + OFF;\n-    strm->next_out = out + OFF;\n+    strm->next_in = in;\n+    strm->next_out = out;\n     strm->avail_in = (unsigned)(in < last ? 5 + (last - in) : 5 - (in - last));\n     strm->avail_out = (unsigned)(out < end ?\n                                  257 + (end - out) : 257 - (out - end));"}, {"sha": "ac333e8c2edae90ec1145d06d9852002dd5d0617", "filename": "zlib/inflate.c", "status": "modified", "additions": 86, "deletions": 37, "changes": 123, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Finflate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Finflate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Finflate.c?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,5 +1,5 @@\n /* inflate.c -- zlib decompression\n- * Copyright (C) 1995-2012 Mark Adler\n+ * Copyright (C) 1995-2016 Mark Adler\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -92,6 +92,7 @@\n #endif\n \n /* function prototypes */\n+local int inflateStateCheck OF((z_streamp strm));\n local void fixedtables OF((struct inflate_state FAR *state));\n local int updatewindow OF((z_streamp strm, const unsigned char FAR *end,\n                            unsigned copy));\n@@ -101,12 +102,26 @@ local int updatewindow OF((z_streamp strm, const unsigned char FAR *end,\n local unsigned syncsearch OF((unsigned FAR *have, const unsigned char FAR *buf,\n                               unsigned len));\n \n+local int inflateStateCheck(strm)\n+z_streamp strm;\n+{\n+    struct inflate_state FAR *state;\n+    if (strm == Z_NULL ||\n+        strm->zalloc == (alloc_func)0 || strm->zfree == (free_func)0)\n+        return 1;\n+    state = (struct inflate_state FAR *)strm->state;\n+    if (state == Z_NULL || state->strm != strm ||\n+        state->mode < HEAD || state->mode > SYNC)\n+        return 1;\n+    return 0;\n+}\n+\n int ZEXPORT inflateResetKeep(strm)\n z_streamp strm;\n {\n     struct inflate_state FAR *state;\n \n-    if (strm == Z_NULL || strm->state == Z_NULL) return Z_STREAM_ERROR;\n+    if (inflateStateCheck(strm)) return Z_STREAM_ERROR;\n     state = (struct inflate_state FAR *)strm->state;\n     strm->total_in = strm->total_out = state->total = 0;\n     strm->msg = Z_NULL;\n@@ -131,7 +146,7 @@ z_streamp strm;\n {\n     struct inflate_state FAR *state;\n \n-    if (strm == Z_NULL || strm->state == Z_NULL) return Z_STREAM_ERROR;\n+    if (inflateStateCheck(strm)) return Z_STREAM_ERROR;\n     state = (struct inflate_state FAR *)strm->state;\n     state->wsize = 0;\n     state->whave = 0;\n@@ -147,7 +162,7 @@ int windowBits;\n     struct inflate_state FAR *state;\n \n     /* get the state */\n-    if (strm == Z_NULL || strm->state == Z_NULL) return Z_STREAM_ERROR;\n+    if (inflateStateCheck(strm)) return Z_STREAM_ERROR;\n     state = (struct inflate_state FAR *)strm->state;\n \n     /* extract wrap request from windowBits parameter */\n@@ -156,7 +171,7 @@ int windowBits;\n         windowBits = -windowBits;\n     }\n     else {\n-        wrap = (windowBits >> 4) + 1;\n+        wrap = (windowBits >> 4) + 5;\n #ifdef GUNZIP\n         if (windowBits < 48)\n             windowBits &= 15;\n@@ -210,7 +225,9 @@ int stream_size;\n     if (state == Z_NULL) return Z_MEM_ERROR;\n     Tracev((stderr, \"inflate: allocated\\n\"));\n     strm->state = (struct internal_state FAR *)state;\n+    state->strm = strm;\n     state->window = Z_NULL;\n+    state->mode = HEAD;     /* to pass state test in inflateReset2() */\n     ret = inflateReset2(strm, windowBits);\n     if (ret != Z_OK) {\n         ZFREE(strm, state);\n@@ -234,17 +251,17 @@ int value;\n {\n     struct inflate_state FAR *state;\n \n-    if (strm == Z_NULL || strm->state == Z_NULL) return Z_STREAM_ERROR;\n+    if (inflateStateCheck(strm)) return Z_STREAM_ERROR;\n     state = (struct inflate_state FAR *)strm->state;\n     if (bits < 0) {\n         state->hold = 0;\n         state->bits = 0;\n         return Z_OK;\n     }\n-    if (bits > 16 || state->bits + bits > 32) return Z_STREAM_ERROR;\n+    if (bits > 16 || state->bits + (uInt)bits > 32) return Z_STREAM_ERROR;\n     value &= (1L << bits) - 1;\n-    state->hold += value << state->bits;\n-    state->bits += bits;\n+    state->hold += (unsigned)value << state->bits;\n+    state->bits += (uInt)bits;\n     return Z_OK;\n }\n \n@@ -625,7 +642,7 @@ int flush;\n     static const unsigned short order[19] = /* permutation of code lengths */\n         {16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15};\n \n-    if (strm == Z_NULL || strm->state == Z_NULL || strm->next_out == Z_NULL ||\n+    if (inflateStateCheck(strm) || strm->next_out == Z_NULL ||\n         (strm->next_in == Z_NULL && strm->avail_in != 0))\n         return Z_STREAM_ERROR;\n \n@@ -645,6 +662,8 @@ int flush;\n             NEEDBITS(16);\n #ifdef GUNZIP\n             if ((state->wrap & 2) && hold == 0x8b1f) {  /* gzip header */\n+                if (state->wbits == 0)\n+                    state->wbits = 15;\n                 state->check = crc32(0L, Z_NULL, 0);\n                 CRC2(state->check, hold);\n                 INITBITS();\n@@ -672,7 +691,7 @@ int flush;\n             len = BITS(4) + 8;\n             if (state->wbits == 0)\n                 state->wbits = len;\n-            else if (len > state->wbits) {\n+            if (len > 15 || len > state->wbits) {\n                 strm->msg = (char *)\"invalid window size\";\n                 state->mode = BAD;\n                 break;\n@@ -699,14 +718,16 @@ int flush;\n             }\n             if (state->head != Z_NULL)\n                 state->head->text = (int)((hold >> 8) & 1);\n-            if (state->flags & 0x0200) CRC2(state->check, hold);\n+            if ((state->flags & 0x0200) && (state->wrap & 4))\n+                CRC2(state->check, hold);\n             INITBITS();\n             state->mode = TIME;\n         case TIME:\n             NEEDBITS(32);\n             if (state->head != Z_NULL)\n                 state->head->time = hold;\n-            if (state->flags & 0x0200) CRC4(state->check, hold);\n+            if ((state->flags & 0x0200) && (state->wrap & 4))\n+                CRC4(state->check, hold);\n             INITBITS();\n             state->mode = OS;\n         case OS:\n@@ -715,7 +736,8 @@ int flush;\n                 state->head->xflags = (int)(hold & 0xff);\n                 state->head->os = (int)(hold >> 8);\n             }\n-            if (state->flags & 0x0200) CRC2(state->check, hold);\n+            if ((state->flags & 0x0200) && (state->wrap & 4))\n+                CRC2(state->check, hold);\n             INITBITS();\n             state->mode = EXLEN;\n         case EXLEN:\n@@ -724,7 +746,8 @@ int flush;\n                 state->length = (unsigned)(hold);\n                 if (state->head != Z_NULL)\n                     state->head->extra_len = (unsigned)hold;\n-                if (state->flags & 0x0200) CRC2(state->check, hold);\n+                if ((state->flags & 0x0200) && (state->wrap & 4))\n+                    CRC2(state->check, hold);\n                 INITBITS();\n             }\n             else if (state->head != Z_NULL)\n@@ -742,7 +765,7 @@ int flush;\n                                 len + copy > state->head->extra_max ?\n                                 state->head->extra_max - len : copy);\n                     }\n-                    if (state->flags & 0x0200)\n+                    if ((state->flags & 0x0200) && (state->wrap & 4))\n                         state->check = crc32(state->check, next, copy);\n                     have -= copy;\n                     next += copy;\n@@ -761,9 +784,9 @@ int flush;\n                     if (state->head != Z_NULL &&\n                             state->head->name != Z_NULL &&\n                             state->length < state->head->name_max)\n-                        state->head->name[state->length++] = len;\n+                        state->head->name[state->length++] = (Bytef)len;\n                 } while (len && copy < have);\n-                if (state->flags & 0x0200)\n+                if ((state->flags & 0x0200) && (state->wrap & 4))\n                     state->check = crc32(state->check, next, copy);\n                 have -= copy;\n                 next += copy;\n@@ -782,9 +805,9 @@ int flush;\n                     if (state->head != Z_NULL &&\n                             state->head->comment != Z_NULL &&\n                             state->length < state->head->comm_max)\n-                        state->head->comment[state->length++] = len;\n+                        state->head->comment[state->length++] = (Bytef)len;\n                 } while (len && copy < have);\n-                if (state->flags & 0x0200)\n+                if ((state->flags & 0x0200) && (state->wrap & 4))\n                     state->check = crc32(state->check, next, copy);\n                 have -= copy;\n                 next += copy;\n@@ -796,7 +819,7 @@ int flush;\n         case HCRC:\n             if (state->flags & 0x0200) {\n                 NEEDBITS(16);\n-                if (hold != (state->check & 0xffff)) {\n+                if ((state->wrap & 4) && hold != (state->check & 0xffff)) {\n                     strm->msg = (char *)\"header crc mismatch\";\n                     state->mode = BAD;\n                     break;\n@@ -1177,11 +1200,11 @@ int flush;\n                 out -= left;\n                 strm->total_out += out;\n                 state->total += out;\n-                if (out)\n+                if ((state->wrap & 4) && out)\n                     strm->adler = state->check =\n                         UPDATE(state->check, put - out, out);\n                 out = left;\n-                if ((\n+                if ((state->wrap & 4) && (\n #ifdef GUNZIP\n                      state->flags ? hold :\n #endif\n@@ -1240,10 +1263,10 @@ int flush;\n     strm->total_in += in;\n     strm->total_out += out;\n     state->total += out;\n-    if (state->wrap && out)\n+    if ((state->wrap & 4) && out)\n         strm->adler = state->check =\n             UPDATE(state->check, strm->next_out - out, out);\n-    strm->data_type = state->bits + (state->last ? 64 : 0) +\n+    strm->data_type = (int)state->bits + (state->last ? 64 : 0) +\n                       (state->mode == TYPE ? 128 : 0) +\n                       (state->mode == LEN_ || state->mode == COPY_ ? 256 : 0);\n     if (((in == 0 && out == 0) || flush == Z_FINISH) && ret == Z_OK)\n@@ -1255,7 +1278,7 @@ int ZEXPORT inflateEnd(strm)\n z_streamp strm;\n {\n     struct inflate_state FAR *state;\n-    if (strm == Z_NULL || strm->state == Z_NULL || strm->zfree == (free_func)0)\n+    if (inflateStateCheck(strm))\n         return Z_STREAM_ERROR;\n     state = (struct inflate_state FAR *)strm->state;\n     if (state->window != Z_NULL) ZFREE(strm, state->window);\n@@ -1273,7 +1296,7 @@ uInt *dictLength;\n     struct inflate_state FAR *state;\n \n     /* check state */\n-    if (strm == Z_NULL || strm->state == Z_NULL) return Z_STREAM_ERROR;\n+    if (inflateStateCheck(strm)) return Z_STREAM_ERROR;\n     state = (struct inflate_state FAR *)strm->state;\n \n     /* copy dictionary */\n@@ -1298,7 +1321,7 @@ uInt dictLength;\n     int ret;\n \n     /* check state */\n-    if (strm == Z_NULL || strm->state == Z_NULL) return Z_STREAM_ERROR;\n+    if (inflateStateCheck(strm)) return Z_STREAM_ERROR;\n     state = (struct inflate_state FAR *)strm->state;\n     if (state->wrap != 0 && state->mode != DICT)\n         return Z_STREAM_ERROR;\n@@ -1330,7 +1353,7 @@ gz_headerp head;\n     struct inflate_state FAR *state;\n \n     /* check state */\n-    if (strm == Z_NULL || strm->state == Z_NULL) return Z_STREAM_ERROR;\n+    if (inflateStateCheck(strm)) return Z_STREAM_ERROR;\n     state = (struct inflate_state FAR *)strm->state;\n     if ((state->wrap & 2) == 0) return Z_STREAM_ERROR;\n \n@@ -1383,7 +1406,7 @@ z_streamp strm;\n     struct inflate_state FAR *state;\n \n     /* check parameters */\n-    if (strm == Z_NULL || strm->state == Z_NULL) return Z_STREAM_ERROR;\n+    if (inflateStateCheck(strm)) return Z_STREAM_ERROR;\n     state = (struct inflate_state FAR *)strm->state;\n     if (strm->avail_in == 0 && state->bits < 8) return Z_BUF_ERROR;\n \n@@ -1430,7 +1453,7 @@ z_streamp strm;\n {\n     struct inflate_state FAR *state;\n \n-    if (strm == Z_NULL || strm->state == Z_NULL) return Z_STREAM_ERROR;\n+    if (inflateStateCheck(strm)) return Z_STREAM_ERROR;\n     state = (struct inflate_state FAR *)strm->state;\n     return state->mode == STORED && state->bits == 0;\n }\n@@ -1445,8 +1468,7 @@ z_streamp source;\n     unsigned wsize;\n \n     /* check input */\n-    if (dest == Z_NULL || source == Z_NULL || source->state == Z_NULL ||\n-        source->zalloc == (alloc_func)0 || source->zfree == (free_func)0)\n+    if (inflateStateCheck(source) || dest == Z_NULL)\n         return Z_STREAM_ERROR;\n     state = (struct inflate_state FAR *)source->state;\n \n@@ -1467,6 +1489,7 @@ z_streamp source;\n     /* copy state */\n     zmemcpy((voidpf)dest, (voidpf)source, sizeof(z_stream));\n     zmemcpy((voidpf)copy, (voidpf)state, sizeof(struct inflate_state));\n+    copy->strm = dest;\n     if (state->lencode >= state->codes &&\n         state->lencode <= state->codes + ENOUGH - 1) {\n         copy->lencode = copy->codes + (state->lencode - state->codes);\n@@ -1488,25 +1511,51 @@ int subvert;\n {\n     struct inflate_state FAR *state;\n \n-    if (strm == Z_NULL || strm->state == Z_NULL) return Z_STREAM_ERROR;\n+    if (inflateStateCheck(strm)) return Z_STREAM_ERROR;\n     state = (struct inflate_state FAR *)strm->state;\n-    state->sane = !subvert;\n #ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n+    state->sane = !subvert;\n     return Z_OK;\n #else\n+    (void)subvert;\n     state->sane = 1;\n     return Z_DATA_ERROR;\n #endif\n }\n \n+int ZEXPORT inflateValidate(strm, check)\n+z_streamp strm;\n+int check;\n+{\n+    struct inflate_state FAR *state;\n+\n+    if (inflateStateCheck(strm)) return Z_STREAM_ERROR;\n+    state = (struct inflate_state FAR *)strm->state;\n+    if (check)\n+        state->wrap |= 4;\n+    else\n+        state->wrap &= ~4;\n+    return Z_OK;\n+}\n+\n long ZEXPORT inflateMark(strm)\n z_streamp strm;\n {\n     struct inflate_state FAR *state;\n \n-    if (strm == Z_NULL || strm->state == Z_NULL) return -1L << 16;\n+    if (inflateStateCheck(strm))\n+        return -(1L << 16);\n     state = (struct inflate_state FAR *)strm->state;\n-    return ((long)(state->back) << 16) +\n+    return (long)(((unsigned long)((long)state->back)) << 16) +\n         (state->mode == COPY ? state->length :\n             (state->mode == MATCH ? state->was - state->length : 0));\n }\n+\n+unsigned long ZEXPORT inflateCodesUsed(strm)\n+z_streamp strm;\n+{\n+    struct inflate_state FAR *state;\n+    if (inflateStateCheck(strm)) return (unsigned long)-1;\n+    state = (struct inflate_state FAR *)strm->state;\n+    return (unsigned long)(state->next - state->codes);\n+}"}, {"sha": "a46cce6b6d05ef994d2a386257cf09068f0aa298", "filename": "zlib/inflate.h", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Finflate.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Finflate.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Finflate.h?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,5 +1,5 @@\n /* inflate.h -- internal inflate state definition\n- * Copyright (C) 1995-2009 Mark Adler\n+ * Copyright (C) 1995-2016 Mark Adler\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -18,7 +18,7 @@\n \n /* Possible inflate modes between inflate() calls */\n typedef enum {\n-    HEAD,       /* i: waiting for magic header */\n+    HEAD = 16180,   /* i: waiting for magic header */\n     FLAGS,      /* i: waiting for method and flags (gzip) */\n     TIME,       /* i: waiting for modification time (gzip) */\n     OS,         /* i: waiting for extra flags and operating system (gzip) */\n@@ -77,11 +77,14 @@ typedef enum {\n         CHECK -> LENGTH -> DONE\n  */\n \n-/* state maintained between inflate() calls.  Approximately 10K bytes. */\n+/* State maintained between inflate() calls -- approximately 7K bytes, not\n+   including the allocated sliding window, which is up to 32K bytes. */\n struct inflate_state {\n+    z_streamp strm;             /* pointer back to this zlib stream */\n     inflate_mode mode;          /* current inflate mode */\n     int last;                   /* true if processing last block */\n-    int wrap;                   /* bit 0 true for zlib, bit 1 true for gzip */\n+    int wrap;                   /* bit 0 true for zlib, bit 1 true for gzip,\n+                                   bit 2 true to validate check value */\n     int havedict;               /* true if dictionary provided */\n     int flags;                  /* gzip header method and flags (0 if zlib) */\n     unsigned dmax;              /* zlib header max distance (INFLATE_STRICT) */"}, {"sha": "8a904ddbcef1f0b724d34916a87fc3497a77379b", "filename": "zlib/inftrees.c", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Finftrees.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Finftrees.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Finftrees.c?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,5 +1,5 @@\n /* inftrees.c -- generate Huffman trees for efficient decoding\n- * Copyright (C) 1995-2013 Mark Adler\n+ * Copyright (C) 1995-2017 Mark Adler\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -9,7 +9,7 @@\n #define MAXBITS 15\n \n const char inflate_copyright[] =\n-   \" inflate 1.2.8 Copyright 1995-2013 Mark Adler \";\n+   \" inflate 1.2.10 Copyright 1995-2017 Mark Adler \";\n /*\n   If you use the zlib library in a product, an acknowledgment is welcome\n   in the documentation of your product. If for some reason you cannot\n@@ -54,15 +54,15 @@ unsigned short FAR *work;\n     code FAR *next;             /* next available space in table */\n     const unsigned short FAR *base;     /* base value table to use */\n     const unsigned short FAR *extra;    /* extra bits table to use */\n-    int end;                    /* use base and extra for symbol > end */\n+    unsigned match;             /* use base and extra for symbol >= match */\n     unsigned short count[MAXBITS+1];    /* number of codes of each length */\n     unsigned short offs[MAXBITS+1];     /* offsets in table for each length */\n     static const unsigned short lbase[31] = { /* Length codes 257..285 base */\n         3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n         35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0};\n     static const unsigned short lext[31] = { /* Length codes 257..285 extra */\n         16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n-        19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78};\n+        19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 192, 202};\n     static const unsigned short dbase[32] = { /* Distance codes 0..29 base */\n         1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n         257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n@@ -181,19 +181,17 @@ unsigned short FAR *work;\n     switch (type) {\n     case CODES:\n         base = extra = work;    /* dummy value--not used */\n-        end = 19;\n+        match = 20;\n         break;\n     case LENS:\n         base = lbase;\n-        base -= 257;\n         extra = lext;\n-        extra -= 257;\n-        end = 256;\n+        match = 257;\n         break;\n-    default:            /* DISTS */\n+    default:    /* DISTS */\n         base = dbase;\n         extra = dext;\n-        end = -1;\n+        match = 0;\n     }\n \n     /* initialize state for loop */\n@@ -216,13 +214,13 @@ unsigned short FAR *work;\n     for (;;) {\n         /* create table entry */\n         here.bits = (unsigned char)(len - drop);\n-        if ((int)(work[sym]) < end) {\n+        if (work[sym] + 1U < match) {\n             here.op = (unsigned char)0;\n             here.val = work[sym];\n         }\n-        else if ((int)(work[sym]) > end) {\n-            here.op = (unsigned char)(extra[work[sym]]);\n-            here.val = base[work[sym]];\n+        else if (work[sym] >= match) {\n+            here.op = (unsigned char)(extra[work[sym] - match]);\n+            here.val = base[work[sym] - match];\n         }\n         else {\n             here.op = (unsigned char)(32 + 64);         /* end of block */"}, {"sha": "59d2037d69c4e8450008f44b308209d9db21c7e4", "filename": "zlib/msdos/Makefile.dj2", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fmsdos%2FMakefile.dj2", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fmsdos%2FMakefile.dj2", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fmsdos%2FMakefile.dj2?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -29,7 +29,7 @@ CC=gcc\n \n #CFLAGS=-MMD -O\n #CFLAGS=-O -DMAX_WBITS=14 -DMAX_MEM_LEVEL=7\n-#CFLAGS=-MMD -g -DDEBUG\n+#CFLAGS=-MMD -g -DZLIB_DEBUG\n CFLAGS=-MMD -O3 $(BUTT) -Wall -Wwrite-strings -Wpointer-arith -Wconversion \\\n              -Wstrict-prototypes -Wmissing-prototypes\n "}, {"sha": "e30f67bed68e86380b3843492269b9feda20c88b", "filename": "zlib/msdos/Makefile.emx", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fmsdos%2FMakefile.emx", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fmsdos%2FMakefile.emx", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fmsdos%2FMakefile.emx?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -11,7 +11,7 @@ CC=gcc\n \n #CFLAGS=-MMD -O\n #CFLAGS=-O -DMAX_WBITS=14 -DMAX_MEM_LEVEL=7\n-#CFLAGS=-MMD -g -DDEBUG\n+#CFLAGS=-MMD -g -DZLIB_DEBUG\n CFLAGS=-MMD -O3 $(BUTT) -Wall -Wwrite-strings -Wpointer-arith -Wconversion \\\n              -Wstrict-prototypes -Wmissing-prototypes\n "}, {"sha": "612b03791583cbae48fa384441f424ae3f7490c5", "filename": "zlib/old/Makefile.emx", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fold%2FMakefile.emx", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fold%2FMakefile.emx", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fold%2FMakefile.emx?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -11,7 +11,7 @@ CC=gcc -Zwin32\n \n #CFLAGS=-MMD -O\n #CFLAGS=-O -DMAX_WBITS=14 -DMAX_MEM_LEVEL=7\n-#CFLAGS=-MMD -g -DDEBUG\n+#CFLAGS=-MMD -g -DZLIB_DEBUG\n CFLAGS=-MMD -O3 $(BUTT) -Wall -Wwrite-strings -Wpointer-arith -Wconversion \\\n              -Wstrict-prototypes -Wmissing-prototypes\n "}, {"sha": "bb426c0d8e68df43c559ae816a97a0df99705f94", "filename": "zlib/old/os2/Makefile.os2", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fold%2Fos2%2FMakefile.os2", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fold%2Fos2%2FMakefile.os2", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fold%2Fos2%2FMakefile.os2?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -14,7 +14,7 @@ CC=gcc -Zomf -s\n \n CFLAGS=-O6 -Wall\n #CFLAGS=-O -DMAX_WBITS=14 -DMAX_MEM_LEVEL=7\n-#CFLAGS=-g -DDEBUG\n+#CFLAGS=-g -DZLIB_DEBUG\n #CFLAGS=-O3 -Wall -Wwrite-strings -Wpointer-arith -Wconversion \\\n #           -Wstrict-prototypes -Wmissing-prototypes\n "}, {"sha": "28dca8cd14a9ca8ab97f5cb62903e78ccab2248f", "filename": "zlib/os400/README400", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fos400%2FREADME400", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fos400%2FREADME400", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fos400%2FREADME400?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -0,0 +1,48 @@\n+        ZLIB version 1.2.10 for OS/400 installation instructions\n+\n+1) Download and unpack the zlib tarball to some IFS directory.\n+   (i.e.: /path/to/the/zlib/ifs/source/directory)\n+\n+   If the installed IFS command suppors gzip format, this is straightforward,\n+else you have to unpack first to some directory on a system supporting it,\n+then move the whole directory to the IFS via the network (via SMB or FTP).\n+\n+2) Edit the configuration parameters in the compilation script.\n+\n+        EDTF STMF('/path/to/the/zlib/ifs/source/directory/os400/make.sh')\n+\n+Tune the parameters according to your needs if not matching the defaults.\n+Save the file and exit after edition.\n+\n+3) Enter qshell, then work in the zlib OS/400 specific directory.\n+\n+        QSH\n+        cd /path/to/the/zlib/ifs/source/directory/os400\n+\n+4) Compile and install\n+\n+        sh make.sh\n+\n+The script will:\n+- create the libraries, objects and IFS directories for the zlib environment,\n+- compile all modules,\n+- create a service program,\n+- create a static and a dynamic binding directory,\n+- install header files for C/C++ and for ILE/RPG, both for compilation in\n+  DB2 and IFS environments.\n+\n+That's all. \n+\n+\n+Notes:  For OS/400 ILE RPG programmers, a /copy member defining the ZLIB\n+                API prototypes for ILE RPG can be found in ZLIB/H(ZLIB.INC).\n+                In the ILE environment, the same definitions are available from\n+                file zlib.inc located in the same IFS include directory as the\n+                C/C++ header files.\n+                Please read comments in this member for more information.\n+\n+        Remember that most foreign textual data are ASCII coded: this\n+                implementation does not handle conversion from/to ASCII, so\n+                text data code conversions must be done explicitely.\n+\n+        Mainly for the reason above, always open zipped files in binary mode."}, {"sha": "5e6e0a2f0af3a82e19224079001897b723fe655c", "filename": "zlib/os400/bndsrc", "status": "added", "additions": 119, "deletions": 0, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fos400%2Fbndsrc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fos400%2Fbndsrc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fos400%2Fbndsrc?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -0,0 +1,119 @@\n+STRPGMEXP PGMLVL(*CURRENT) SIGNATURE('ZLIB')\n+\n+/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/\n+/*   Version 1.1.3 entry points.                                    */\n+/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/\n+\n+  EXPORT SYMBOL(\"adler32\")\n+  EXPORT SYMBOL(\"compress\")\n+  EXPORT SYMBOL(\"compress2\")\n+  EXPORT SYMBOL(\"crc32\")\n+  EXPORT SYMBOL(\"get_crc_table\")\n+  EXPORT SYMBOL(\"deflate\")\n+  EXPORT SYMBOL(\"deflateEnd\")\n+  EXPORT SYMBOL(\"deflateSetDictionary\")\n+  EXPORT SYMBOL(\"deflateCopy\")\n+  EXPORT SYMBOL(\"deflateReset\")\n+  EXPORT SYMBOL(\"deflateParams\")\n+  EXPORT SYMBOL(\"deflatePrime\")\n+  EXPORT SYMBOL(\"deflateInit_\")\n+  EXPORT SYMBOL(\"deflateInit2_\")\n+  EXPORT SYMBOL(\"gzopen\")\n+  EXPORT SYMBOL(\"gzdopen\")\n+  EXPORT SYMBOL(\"gzsetparams\")\n+  EXPORT SYMBOL(\"gzread\")\n+  EXPORT SYMBOL(\"gzwrite\")\n+  EXPORT SYMBOL(\"gzprintf\")\n+  EXPORT SYMBOL(\"gzputs\")\n+  EXPORT SYMBOL(\"gzgets\")\n+  EXPORT SYMBOL(\"gzputc\")\n+  EXPORT SYMBOL(\"gzgetc\")\n+  EXPORT SYMBOL(\"gzflush\")\n+  EXPORT SYMBOL(\"gzseek\")\n+  EXPORT SYMBOL(\"gzrewind\")\n+  EXPORT SYMBOL(\"gztell\")\n+  EXPORT SYMBOL(\"gzeof\")\n+  EXPORT SYMBOL(\"gzclose\")\n+  EXPORT SYMBOL(\"gzerror\")\n+  EXPORT SYMBOL(\"inflate\")\n+  EXPORT SYMBOL(\"inflateEnd\")\n+  EXPORT SYMBOL(\"inflateSetDictionary\")\n+  EXPORT SYMBOL(\"inflateSync\")\n+  EXPORT SYMBOL(\"inflateReset\")\n+  EXPORT SYMBOL(\"inflateInit_\")\n+  EXPORT SYMBOL(\"inflateInit2_\")\n+  EXPORT SYMBOL(\"inflateSyncPoint\")\n+  EXPORT SYMBOL(\"uncompress\")\n+  EXPORT SYMBOL(\"zlibVersion\")\n+  EXPORT SYMBOL(\"zError\")\n+  EXPORT SYMBOL(\"z_errmsg\")\n+\n+/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/\n+/*   Version 1.2.1 additional entry points.                         */\n+/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/\n+\n+  EXPORT SYMBOL(\"compressBound\")\n+  EXPORT SYMBOL(\"deflateBound\")\n+  EXPORT SYMBOL(\"deflatePending\")\n+  EXPORT SYMBOL(\"gzungetc\")\n+  EXPORT SYMBOL(\"gzclearerr\")\n+  EXPORT SYMBOL(\"inflateBack\")\n+  EXPORT SYMBOL(\"inflateBackEnd\")\n+  EXPORT SYMBOL(\"inflateBackInit_\")\n+  EXPORT SYMBOL(\"inflateCopy\")\n+  EXPORT SYMBOL(\"zlibCompileFlags\")\n+\n+/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/\n+/*   Version 1.2.4 additional entry points.                         */\n+/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/\n+\n+  EXPORT SYMBOL(\"adler32_combine\")\n+  EXPORT SYMBOL(\"adler32_combine64\")\n+  EXPORT SYMBOL(\"crc32_combine\")\n+  EXPORT SYMBOL(\"crc32_combine64\")\n+  EXPORT SYMBOL(\"deflateSetHeader\")\n+  EXPORT SYMBOL(\"deflateTune\")\n+  EXPORT SYMBOL(\"gzbuffer\")\n+  EXPORT SYMBOL(\"gzclose_r\")\n+  EXPORT SYMBOL(\"gzclose_w\")\n+  EXPORT SYMBOL(\"gzdirect\")\n+  EXPORT SYMBOL(\"gzoffset\")\n+  EXPORT SYMBOL(\"gzoffset64\")\n+  EXPORT SYMBOL(\"gzopen64\")\n+  EXPORT SYMBOL(\"gzseek64\")\n+  EXPORT SYMBOL(\"gztell64\")\n+  EXPORT SYMBOL(\"inflateGetHeader\")\n+  EXPORT SYMBOL(\"inflateMark\")\n+  EXPORT SYMBOL(\"inflatePrime\")\n+  EXPORT SYMBOL(\"inflateReset2\")\n+  EXPORT SYMBOL(\"inflateUndermine\")\n+\n+/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/\n+/*   Version 1.2.6 additional entry points.                         */\n+/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/\n+\n+  EXPORT SYMBOL(\"deflateResetKeep\")\n+  EXPORT SYMBOL(\"gzgetc_\")\n+  EXPORT SYMBOL(\"inflateResetKeep\")\n+\n+/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/\n+/*   Version 1.2.8 additional entry points.                         */\n+/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/\n+\n+  EXPORT SYMBOL(\"gzvprintf\")\n+  EXPORT SYMBOL(\"inflateGetDictionary\")\n+\n+/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/\n+/*   Version 1.2.9 additional entry points.                         */\n+/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/\n+\n+  EXPORT SYMBOL(\"adler32_z\")\n+  EXPORT SYMBOL(\"crc32_z\")\n+  EXPORT SYMBOL(\"deflateGetDictionary\")\n+  EXPORT SYMBOL(\"gzfread\")\n+  EXPORT SYMBOL(\"gzfwrite\")\n+  EXPORT SYMBOL(\"inflateCodesUsed\")\n+  EXPORT SYMBOL(\"inflateValidate\")\n+  EXPORT SYMBOL(\"uncompress2\")\n+\n+ENDPGMEXP"}, {"sha": "ddbfb16b8a33d6633056f3438203a1e214b32fd6", "filename": "zlib/os400/make.sh", "status": "added", "additions": 366, "deletions": 0, "changes": 366, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fos400%2Fmake.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fos400%2Fmake.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fos400%2Fmake.sh?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -0,0 +1,366 @@\n+#!/bin/sh\n+#\n+#       ZLIB compilation script for the OS/400.\n+#\n+#\n+#       This is a shell script since make is not a standard component of OS/400.\n+\n+\n+################################################################################\n+#\n+#                       Tunable configuration parameters.\n+#\n+################################################################################\n+\n+TARGETLIB='ZLIB'                # Target OS/400 program library\n+STATBNDDIR='ZLIB_A'             # Static binding directory.\n+DYNBNDDIR='ZLIB'                # Dynamic binding directory.\n+SRVPGM=\"ZLIB\"                   # Service program.\n+IFSDIR='/zlib'                  # IFS support base directory.\n+TGTCCSID='500'                  # Target CCSID of objects\n+DEBUG='*NONE'                   # Debug level\n+OPTIMIZE='40'                   # Optimisation level\n+OUTPUT='*NONE'                  # Compilation output option.\n+TGTRLS='V6R1M0'                 # Target OS release\n+\n+export TARGETLIB STATBNDDIR DYNBNDDIR SRVPGM IFSDIR\n+export TGTCCSID DEBUG OPTIMIZE OUTPUT TGTRLS\n+\n+\n+################################################################################\n+#\n+#                       OS/400 specific definitions.\n+#\n+################################################################################\n+\n+LIBIFSNAME=\"/QSYS.LIB/${TARGETLIB}.LIB\"\n+\n+\n+################################################################################\n+#\n+#                               Procedures.\n+#\n+################################################################################\n+\n+#       action_needed dest [src]\n+#\n+#       dest is an object to build\n+#       if specified, src is an object on which dest depends.\n+#\n+#       exit 0 (succeeds) if some action has to be taken, else 1.\n+\n+action_needed()\n+\n+{\n+        [ ! -e \"${1}\" ] && return 0\n+        [ \"${2}\" ] || return 1\n+        [ \"${1}\" -ot \"${2}\" ] && return 0\n+        return 1\n+}\n+\n+\n+#       make_module module_name source_name [additional_definitions]\n+#\n+#       Compile source name into module if needed.\n+#       As side effect, append the module name to variable MODULES.\n+#       Set LINK to \"YES\" if the module has been compiled.\n+\n+make_module()\n+\n+{\n+    MODULES=\"${MODULES} ${1}\"\n+    MODIFSNAME=\"${LIBIFSNAME}/${1}.MODULE\"\n+    CSRC=\"`basename \\\"${2}\\\"`\"\n+\n+    if action_needed \"${MODIFSNAME}\" \"${2}\"\n+    then    :\n+    elif [ ! \"`sed -e \\\"/<source name=\\\\\\\"${CSRC}\\\\\\\">/,/<\\\\\\\\/source>/!d\\\" \\\n+      -e '/<depend /!d'                                                 \\\n+      -e 's/.* name=\\\"\\\\([^\\\"]*\\\\)\\\".*/\\\\1/' < \\\"${TOPDIR}/treebuild.xml\\\" |\n+        while read HDR\n+        do      if action_needed \\\"${MODIFSNAME}\\\" \\\"${IFSDIR}/include/${HDR}\\\"\n+                then    echo recompile\n+                        break\n+                fi\n+        done`\" ]\n+    then    return 0\n+    fi\n+\n+    CMD=\"CRTCMOD MODULE(${TARGETLIB}/${1}) SRCSTMF('${2}')\"\n+    CMD=\"${CMD} SYSIFCOPT(*IFS64IO) OPTION(*INCDIRFIRST)\"\n+    CMD=\"${CMD} LOCALETYPE(*LOCALE) FLAG(10)\"\n+    CMD=\"${CMD} INCDIR('${IFSDIR}/include' ${INCLUDES})\"\n+    CMD=\"${CMD} TGTCCSID(${TGTCCSID}) TGTRLS(${TGTRLS})\"\n+    CMD=\"${CMD} OUTPUT(${OUTPUT})\"\n+    CMD=\"${CMD} OPTIMIZE(${OPTIMIZE})\"\n+    CMD=\"${CMD} DBGVIEW(${DEBUG})\"\n+    system \"${CMD}\"\n+    LINK=YES\n+}\n+\n+\n+#       Determine DB2 object name from IFS name.\n+\n+db2_name()\n+\n+{\n+        basename \"${1}\"                                                 |\n+        tr 'a-z-' 'A-Z_'                                                |\n+        sed -e 's/\\..*//'                                               \\\n+            -e 's/^\\(.\\).*\\(.........\\)$/\\1\\2/'\n+}\n+\n+\n+#       Force enumeration types to be the same size as integers.\n+\n+copy_hfile()\n+\n+{\n+        sed -e '1i\\\n+#pragma enum(int)\\\n+' \"${@}\" -e '$a\\\n+#pragma enum(pop)\\\n+'\n+}\n+\n+\n+################################################################################\n+#\n+#                             Script initialization.\n+#\n+################################################################################\n+\n+SCRIPTDIR=`dirname \"${0}\"`\n+\n+case \"${SCRIPTDIR}\" in\n+/*)     ;;\n+*)      SCRIPTDIR=\"`pwd`/${SCRIPTDIR}\"\n+esac\n+\n+while true\n+do      case \"${SCRIPTDIR}\" in\n+        */.)    SCRIPTDIR=\"${SCRIPTDIR%/.}\";;\n+        *)      break;;\n+        esac\n+done\n+\n+#  The script directory is supposed to be in ${TOPDIR}/os400.\n+\n+TOPDIR=`dirname \"${SCRIPTDIR}\"`\n+export SCRIPTDIR TOPDIR\n+cd \"${TOPDIR}\"\n+\n+\n+#  Extract the version from the master compilation XML file.\n+\n+VERSION=`sed -e '/^<package /!d'                                        \\\n+            -e 's/^.* version=\"\\([0-9.]*\\)\".*$/\\1/' -e 'q'              \\\n+            < treebuild.xml`\n+export VERSION\n+\n+################################################################################\n+\n+\n+#       Create the OS/400 library if it does not exist.\n+\n+if action_needed \"${LIBIFSNAME}\"\n+then    CMD=\"CRTLIB LIB(${TARGETLIB}) TEXT('ZLIB: Data compression API')\"\n+        system \"${CMD}\"\n+fi\n+\n+\n+#       Create the DOCS source file if it does not exist.\n+\n+if action_needed \"${LIBIFSNAME}/DOCS.FILE\"\n+then    CMD=\"CRTSRCPF FILE(${TARGETLIB}/DOCS) RCDLEN(112)\"\n+        CMD=\"${CMD} CCSID(${TGTCCSID}) TEXT('Documentation texts')\"\n+        system \"${CMD}\"\n+fi\n+\n+#       Copy some documentation files if needed.\n+\n+for TEXT in \"${TOPDIR}/ChangeLog\" \"${TOPDIR}/FAQ\"                       \\\n+    \"${TOPDIR}/README\" \"${SCRIPTDIR}/README400\"\n+do      MEMBER=\"${LIBIFSNAME}/DOCS.FILE/`db2_name \\\"${TEXT}\\\"`.MBR\"\n+\n+        if action_needed \"${MEMBER}\" \"${TEXT}\"\n+        then    CMD=\"CPY OBJ('${TEXT}') TOOBJ('${MEMBER}') TOCCSID(${TGTCCSID})\"\n+                CMD=\"${CMD} DTAFMT(*TEXT) REPLACE(*YES)\"\n+                system \"${CMD}\"\n+        fi\n+done\n+\n+\n+#       Create the OS/400 source program file for the C header files.\n+\n+SRCPF=\"${LIBIFSNAME}/H.FILE\"\n+\n+if action_needed \"${SRCPF}\"\n+then    CMD=\"CRTSRCPF FILE(${TARGETLIB}/H) RCDLEN(112)\"\n+        CMD=\"${CMD} CCSID(${TGTCCSID}) TEXT('ZLIB: C/C++ header files')\"\n+        system \"${CMD}\"\n+fi\n+\n+\n+#       Create the IFS directory for the C header files.\n+\n+if action_needed \"${IFSDIR}/include\"\n+then    mkdir -p \"${IFSDIR}/include\"\n+fi\n+\n+#       Copy the header files to DB2 library. Link from IFS include directory.\n+\n+for HFILE in \"${TOPDIR}/\"*.h\n+do      DEST=\"${SRCPF}/`db2_name \\\"${HFILE}\\\"`.MBR\"\n+\n+        if action_needed \"${DEST}\" \"${HFILE}\"\n+        then    copy_hfile < \"${HFILE}\" > tmphdrfile\n+\n+                #       Need to translate to target CCSID.\n+\n+                CMD=\"CPY OBJ('`pwd`/tmphdrfile') TOOBJ('${DEST}')\"\n+                CMD=\"${CMD} TOCCSID(${TGTCCSID}) DTAFMT(*TEXT) REPLACE(*YES)\"\n+                system \"${CMD}\"\n+                # touch -r \"${HFILE}\" \"${DEST}\"\n+                rm -f tmphdrfile\n+        fi\n+\n+        IFSFILE=\"${IFSDIR}/include/`basename \\\"${HFILE}\\\"`\"\n+\n+        if action_needed \"${IFSFILE}\" \"${DEST}\"\n+        then    rm -f \"${IFSFILE}\"\n+                ln -s \"${DEST}\" \"${IFSFILE}\"\n+        fi\n+done\n+\n+\n+#       Install the ILE/RPG header file.\n+\n+\n+HFILE=\"${SCRIPTDIR}/zlib.inc\"\n+DEST=\"${SRCPF}/ZLIB.INC.MBR\"\n+\n+if action_needed \"${DEST}\" \"${HFILE}\"\n+then    CMD=\"CPY OBJ('${HFILE}') TOOBJ('${DEST}')\"\n+        CMD=\"${CMD} TOCCSID(${TGTCCSID}) DTAFMT(*TEXT) REPLACE(*YES)\"\n+        system \"${CMD}\"\n+        # touch -r \"${HFILE}\" \"${DEST}\"\n+fi\n+\n+IFSFILE=\"${IFSDIR}/include/`basename \\\"${HFILE}\\\"`\"\n+\n+if action_needed \"${IFSFILE}\" \"${DEST}\"\n+then    rm -f \"${IFSFILE}\"\n+        ln -s \"${DEST}\" \"${IFSFILE}\"\n+fi\n+\n+\n+#      Create and compile the identification source file.\n+\n+echo '#pragma comment(user, \"ZLIB version '\"${VERSION}\"'\")' > os400.c\n+echo '#pragma comment(user, __DATE__)' >> os400.c\n+echo '#pragma comment(user, __TIME__)' >> os400.c\n+echo '#pragma comment(copyright, \"Copyright (C) 1995-2016 Jean-Loup Gailly, Mark Adler. OS/400 version by P. Monnerat.\")' >> os400.c\n+make_module     OS400           os400.c\n+LINK=                           # No need to rebuild service program yet.\n+MODULES=\n+\n+\n+#       Get source list.\n+\n+CSOURCES=`sed -e '/<source name=\"/!d'                                   \\\n+    -e 's/.* name=\"\\([^\"]*\\)\".*/\\1/' < treebuild.xml`\n+\n+#       Compile the sources into modules.\n+\n+for SRC in ${CSOURCES}\n+do      MODULE=`db2_name \"${SRC}\"`\n+        make_module \"${MODULE}\" \"${SRC}\"\n+done\n+\n+\n+#       If needed, (re)create the static binding directory.\n+\n+if action_needed \"${LIBIFSNAME}/${STATBNDDIR}.BNDDIR\"\n+then    LINK=YES\n+fi\n+\n+if [ \"${LINK}\" ]\n+then    rm -rf \"${LIBIFSNAME}/${STATBNDDIR}.BNDDIR\"\n+        CMD=\"CRTBNDDIR BNDDIR(${TARGETLIB}/${STATBNDDIR})\"\n+        CMD=\"${CMD} TEXT('ZLIB static binding directory')\"\n+        system \"${CMD}\"\n+\n+        for MODULE in ${MODULES}\n+        do      CMD=\"ADDBNDDIRE BNDDIR(${TARGETLIB}/${STATBNDDIR})\"\n+                CMD=\"${CMD} OBJ((${TARGETLIB}/${MODULE} *MODULE))\"\n+                system \"${CMD}\"\n+        done\n+fi\n+\n+\n+#       The exportation file for service program creation must be in a DB2\n+#               source file, so make sure it exists.\n+\n+if action_needed \"${LIBIFSNAME}/TOOLS.FILE\"\n+then    CMD=\"CRTSRCPF FILE(${TARGETLIB}/TOOLS) RCDLEN(112)\"\n+        CMD=\"${CMD} CCSID(${TGTCCSID}) TEXT('ZLIB: build tools')\"\n+        system \"${CMD}\"\n+fi\n+\n+\n+DEST=\"${LIBIFSNAME}/TOOLS.FILE/BNDSRC.MBR\"\n+\n+if action_needed \"${SCRIPTDIR}/bndsrc\" \"${DEST}\"\n+then    CMD=\"CPY OBJ('${SCRIPTDIR}/bndsrc') TOOBJ('${DEST}')\"\n+        CMD=\"${CMD} TOCCSID(${TGTCCSID}) DTAFMT(*TEXT) REPLACE(*YES)\"\n+        system \"${CMD}\"\n+        # touch -r \"${SCRIPTDIR}/bndsrc\" \"${DEST}\"\n+        LINK=YES\n+fi\n+\n+\n+#       Build the service program if needed.\n+\n+if action_needed \"${LIBIFSNAME}/${SRVPGM}.SRVPGM\"\n+then    LINK=YES\n+fi\n+\n+if [ \"${LINK}\" ]\n+then    CMD=\"CRTSRVPGM SRVPGM(${TARGETLIB}/${SRVPGM})\"\n+        CMD=\"${CMD} SRCFILE(${TARGETLIB}/TOOLS) SRCMBR(BNDSRC)\"\n+        CMD=\"${CMD} MODULE(${TARGETLIB}/OS400)\"\n+        CMD=\"${CMD} BNDDIR(${TARGETLIB}/${STATBNDDIR})\"\n+        CMD=\"${CMD} TEXT('ZLIB ${VERSION} dynamic library')\"\n+        CMD=\"${CMD} TGTRLS(${TGTRLS})\"\n+        system \"${CMD}\"\n+        LINK=YES\n+\n+        #       Duplicate the service program for a versioned backup.\n+\n+        BACKUP=`echo \"${SRVPGM}${VERSION}\"                              |\n+                sed -e 's/.*\\(..........\\)$/\\1/' -e 's/\\./_/g'`\n+        BACKUP=\"`db2_name \\\"${BACKUP}\\\"`\"\n+        BKUPIFSNAME=\"${LIBIFSNAME}/${BACKUP}.SRVPGM\"\n+        rm -f \"${BKUPIFSNAME}\"\n+        CMD=\"CRTDUPOBJ OBJ(${SRVPGM}) FROMLIB(${TARGETLIB})\"\n+        CMD=\"${CMD} OBJTYPE(*SRVPGM) NEWOBJ(${BACKUP})\"\n+        system \"${CMD}\"\n+fi\n+\n+\n+#       If needed, (re)create the dynamic binding directory.\n+\n+if action_needed \"${LIBIFSNAME}/${DYNBNDDIR}.BNDDIR\"\n+then    LINK=YES\n+fi\n+\n+if [ \"${LINK}\" ]\n+then    rm -rf \"${LIBIFSNAME}/${DYNBNDDIR}.BNDDIR\"\n+        CMD=\"CRTBNDDIR BNDDIR(${TARGETLIB}/${DYNBNDDIR})\"\n+        CMD=\"${CMD} TEXT('ZLIB dynamic binding directory')\"\n+        system \"${CMD}\"\n+        CMD=\"ADDBNDDIRE BNDDIR(${TARGETLIB}/${DYNBNDDIR})\"\n+        CMD=\"${CMD} OBJ((*LIBL/${SRVPGM} *SRVPGM))\"\n+        system \"${CMD}\"\n+fi"}, {"sha": "a2147dd0abe04560f2413fb6cc1e1eb812a55a73", "filename": "zlib/os400/zlib.inc", "status": "renamed", "additions": 83, "deletions": 7, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fos400%2Fzlib.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fos400%2Fzlib.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fos400%2Fzlib.inc?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,7 +1,7 @@\n       *  ZLIB.INC - Interface to the general purpose compression library\n       *\n       *  ILE RPG400 version by Patrick Monnerat, DATASPHERE.\n-      *  Version 1.2.8\n+      *  Version 1.2.10\n       *\n       *\n       *  WARNING:\n@@ -22,12 +22,12 @@\n       *\n       *  Versioning information.\n       *\n-     D ZLIB_VERSION    C                   '1.2.8'\n-     D ZLIB_VERNUM     C                   X'1280'\n+     D ZLIB_VERSION    C                   '1.2.10'\n+     D ZLIB_VERNUM     C                   X'12a0'\n      D ZLIB_VER_MAJOR  C                   1\n      D ZLIB_VER_MINOR  C                   2\n      D ZLIB_VER_REVISION...\n-     D                 C                   8\n+     D                 C                   10\n      D ZLIB_VER_SUBREVISION...\n      D                 C                   0\n       *\n@@ -50,7 +50,7 @@\n      D Z_DATA_ERROR    C                   -3\n      D Z_MEM_ERROR     C                   -4\n      D Z_BUF_ERROR     C                   -5\n-     DZ_VERSION_ERROR  C                   -6\n+     D Z_VERSION_ERROR C                   -6\n       *\n      D Z_NO_COMPRESSION...\n      D                 C                   0\n@@ -80,6 +80,7 @@\n       *\n      D z_streamp       S               *                                        Stream struct ptr\n      D gzFile          S               *                                        File pointer\n+     D gz_headerp      S               *\n      D z_off_t         S             10i 0                                      Stream offsets\n      D z_off64_t       S             20i 0                                      Stream offsets\n       *\n@@ -132,6 +133,12 @@\n      D  source                    65535    const options(*varsize)              Source buffer\n      D  sourceLen                    10U 0 value                                Source length\n       *\n+     D uncompress2     PR            10I 0 extproc('uncompress2')\n+     D  dest                      65535    options(*varsize)                    Destination buffer\n+     D  destLen                      10U 0                                      Destination length\n+     D  source                    65535    const options(*varsize)              Source buffer\n+     D  sourceLen                    10U 0                                      Source length\n+      *\n       /if not defined(LARGE_FILES)\n      D gzopen          PR                  extproc('gzopen')\n      D                                     like(gzFile)\n@@ -168,11 +175,23 @@\n      D  buf                       65535    options(*varsize)                    Buffer\n      D  len                          10u 0 value                                Buffer length\n       *\n+     D gzfread          PR           20I 0 extproc('gzfread')\n+     D  buf                       65535    options(*varsize)                    Buffer\n+     D  size                         20u 0 value                                Buffer length\n+     D  nitems                       20u 0 value                                Buffer length\n+     D  file                               value like(gzFile)                   File pointer\n+      *\n      D gzwrite         PR            10I 0 extproc('gzwrite')\n      D  file                               value like(gzFile)                   File pointer\n      D  buf                       65535    const options(*varsize)              Buffer\n      D  len                          10u 0 value                                Buffer length\n       *\n+     D gzfwrite         PR           20I 0 extproc('gzfwrite')\n+     D  buf                       65535    options(*varsize)                    Buffer\n+     D  size                         20u 0 value                                Buffer length\n+     D  nitems                       20u 0 value                                Buffer length\n+     D  file                               value like(gzFile)                   File pointer\n+      *\n      D gzputs          PR            10I 0 extproc('gzputs')\n      D  file                               value like(gzFile)                   File pointer\n      D  s                              *   value options(*string)               String to output\n@@ -252,6 +271,9 @@\n       /endif\n       *\n      D gzeof           PR            10i 0 extproc('gzeof')\n+     D  file                               value like(gzFile)                   File pointer\n+      *\n+     D gzdirect        PR            10i 0 extproc('gzdirect')\n      D  file                               value like(gzFile)                   File pointer\n       *\n      D gzclose_r       PR            10i 0 extproc('gzclose_r')\n@@ -311,7 +333,7 @@\n      D  method                       10I 0 value                                Compression method\n      D  windowBits                   10I 0 value                                log2(window size)\n      D  memLevel                     10I 0 value                                Mem/cmpress tradeoff\n-     D  strategy                     10I 0 value                                Compression stategy\n+     D  strategy                     10I 0 value                                Compression strategy\n      D  version                        *   value options(*string)               Version string\n      D  stream_size                  10i 0 value                                Stream struct. size\n       *\n@@ -331,7 +353,14 @@\n      D deflateParams   PR            10I 0 extproc('deflateParams')             Change level & strat\n      D  strm                               like(z_stream)                       Compression stream\n      D  level                        10I 0 value                                Compression level\n-     D  strategy                     10I 0 value                                Compression stategy\n+     D  strategy                     10I 0 value                                Compression strategy\n+      *\n+     D deflateTune     PR            10I 0 extproc('deflateTune')\n+     D  strm                               like(z_stream)                       Compression stream\n+     D  good                         10I 0 value\n+     D  lazy                         10I 0 value\n+     D  nice                         10I 0 value\n+     D  chain                        10I 0 value\n       *\n      D deflateBound    PR            10U 0 extproc('deflateBound')              Change level & strat\n      D  strm                               like(z_stream)                       Compression stream\n@@ -363,6 +392,12 @@\n      D                 PR            10I 0 extproc('inflateGetDictionary')      Get dictionary\n      D  strm                               like(z_stream)                       Expansion stream\n      D  dictionary                65535    options(*varsize)                    Dictionary bytes\n+     D  dictLength                   10U 0                                      Dictionary length\n+      *\n+     D deflateGetDictionary...\n+     D                 PR            10I 0 extproc('deflateGetDictionary')      Get dictionary\n+     D  strm                               like(z_stream)                       Expansion stream\n+     D  dictionary                65535    options(*varsize)                    Dictionary bytes\n      D  dictLength                   10U 0                                      Dictionary length\n       *\n      D inflateSync     PR            10I 0 extproc('inflateSync')               Sync. expansion\n@@ -387,6 +422,25 @@\n      D inflateMark     PR            10I 0 extproc('inflateMark')               Get inflate info\n      D  strm                               like(z_stream)                       Expansion stream\n       *\n+     D inflateCodesUsed...\n+                       PR            20U 0 extproc('inflateCodesUsed')\n+     D  strm                               like(z_stream)                       Expansion stream\n+      *\n+     D inflateValidate...\n+                       PR            20U 0 extproc('inflateValidate')\n+     D  strm                               like(z_stream)                       Expansion stream\n+     D  check                        10I 0 value\n+      *\n+     D inflateGetHeader...\n+                       PR            10U 0 extproc('inflateGetHeader')\n+     D  strm                               like(z_stream)                       Expansion stream\n+     D  head                               like(gz_headerp)\n+      *\n+     D deflateSetHeader...\n+                       PR            10U 0 extproc('deflateSetHeader')\n+     D  strm                               like(z_stream)                       Expansion stream\n+     D  head                               like(gz_headerp)\n+      *\n      D inflateBackInit...\n      D                 PR            10I 0 extproc('inflateBackInit_')\n      D  strm                               like(z_stream)                       Expansion stream\n@@ -417,11 +471,33 @@\n      D  buf                       65535    const options(*varsize)              Bytes to accumulate\n      D  len                          10U 0 value                                Buffer length\n       *\n+     D adler32_combine...\n+                       PR            10U 0 extproc('adler32_combine')           New checksum\n+     D  adler1                       10U 0 value                                Old checksum\n+     D  adler2                       10U 0 value                                Old checksum\n+     D  len2                         20U 0 value                                Buffer length\n+      *\n+     D adler32_z       PR            10U 0 extproc('adler32_z')                 New checksum\n+     D  adler                        10U 0 value                                Old checksum\n+     D  buf                       65535    const options(*varsize)              Bytes to accumulate\n+     D  len                          20U 0 value                                Buffer length\n+      *\n      D crc32           PR            10U 0 extproc('crc32')                     New checksum\n      D  crc                          10U 0 value                                Old checksum\n      D  buf                       65535    const options(*varsize)              Bytes to accumulate\n      D  len                          10U 0 value                                Buffer length\n       *\n+     D crc32_combine...\n+                       PR            10U 0 extproc('crc32_combine')             New checksum\n+     D  crc1                         10U 0 value                                Old checksum\n+     D  crc2                         10U 0 value                                Old checksum\n+     D  len2                         20U 0 value                                Buffer length\n+      *\n+     D crc32_z         PR            10U 0 extproc('crc32_z')                   New checksum\n+     D  crc                          10U 0 value                                Old checksum\n+     D  buf                       65535    const options(*varsize)              Bytes to accumulate\n+     D  len                          20U 0 value                                Buffer length\n+      *\n       **************************************************************************\n       *                     Miscellaneous function prototypes\n       **************************************************************************", "previous_filename": "zlib/as400/zlib.inc"}, {"sha": "d9a1229e96efc6ef9a5c75d78f4ad1692fa979ee", "filename": "zlib/qnx/package.qpg", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fqnx%2Fpackage.qpg", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fqnx%2Fpackage.qpg", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fqnx%2Fpackage.qpg?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -25,10 +25,10 @@\n       <QPG:Files>\n          <QPG:Add file=\"../zconf.h\" install=\"/opt/include/\" user=\"root:sys\" permission=\"644\"/>\n          <QPG:Add file=\"../zlib.h\" install=\"/opt/include/\" user=\"root:sys\" permission=\"644\"/>\n-         <QPG:Add file=\"../libz.so.1.2.8\" install=\"/opt/lib/\" user=\"root:bin\" permission=\"644\"/>\n-         <QPG:Add file=\"libz.so\" install=\"/opt/lib/\" component=\"dev\" filetype=\"symlink\" linkto=\"libz.so.1.2.8\"/>\n-         <QPG:Add file=\"libz.so.1\" install=\"/opt/lib/\" filetype=\"symlink\" linkto=\"libz.so.1.2.8\"/>\n-         <QPG:Add file=\"../libz.so.1.2.8\" install=\"/opt/lib/\" component=\"slib\"/>\n+         <QPG:Add file=\"../libz.so.1.2.10\" install=\"/opt/lib/\" user=\"root:bin\" permission=\"644\"/>\n+         <QPG:Add file=\"libz.so\" install=\"/opt/lib/\" component=\"dev\" filetype=\"symlink\" linkto=\"libz.so.1.2.10\"/>\n+         <QPG:Add file=\"libz.so.1\" install=\"/opt/lib/\" filetype=\"symlink\" linkto=\"libz.so.1.2.10\"/>\n+         <QPG:Add file=\"../libz.so.1.2.10\" install=\"/opt/lib/\" component=\"slib\"/>\n       </QPG:Files>\n \n       <QPG:PackageFilter>\n@@ -63,7 +63,7 @@\n             </QPM:ProductDescription>\n \n             <QPM:ReleaseDescription>\n-               <QPM:ReleaseVersion>1.2.8</QPM:ReleaseVersion>\n+               <QPM:ReleaseVersion>1.2.10</QPM:ReleaseVersion>\n                <QPM:ReleaseUrgency>Medium</QPM:ReleaseUrgency>\n                <QPM:ReleaseStability>Stable</QPM:ReleaseStability>\n                <QPM:ReleaseNoteMinor></QPM:ReleaseNoteMinor>"}, {"sha": "eee17ce7c1591f35bef47ca27c9d6bb1961712dc", "filename": "zlib/test/example.c", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Ftest%2Fexample.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Ftest%2Fexample.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Ftest%2Fexample.c?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,5 +1,5 @@\n /* example.c -- usage example of the zlib compression library\n- * Copyright (C) 1995-2006, 2011 Jean-loup Gailly.\n+ * Copyright (C) 1995-2006, 2011, 2016 Jean-loup Gailly\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -26,13 +26,13 @@\n     } \\\n }\n \n-z_const char hello[] = \"hello, hello!\";\n+static z_const char hello[] = \"hello, hello!\";\n /* \"hello world\" would be more standard, but the repeated \"hello\"\n  * stresses the compression code better, sorry...\n  */\n \n-const char dictionary[] = \"hello\";\n-uLong dictId; /* Adler32 value of the dictionary */\n+static const char dictionary[] = \"hello\";\n+static uLong dictId;    /* Adler32 value of the dictionary */\n \n void test_deflate       OF((Byte *compr, uLong comprLen));\n void test_inflate       OF((Byte *compr, uLong comprLen,\n@@ -59,13 +59,13 @@ void *myalloc(q, n, m)\n     void *q;\n     unsigned n, m;\n {\n-    q = Z_NULL;\n+    (void)q;\n     return calloc(n, m);\n }\n \n void myfree(void *q, void *p)\n {\n-    q = Z_NULL;\n+    (void)q;\n     free(p);\n }\n \n@@ -432,7 +432,7 @@ void test_sync(compr, comprLen, uncompr, uncomprLen)\n     d_stream.next_out = uncompr;\n     d_stream.avail_out = (uInt)uncomprLen;\n \n-    inflate(&d_stream, Z_NO_FLUSH);\n+    err = inflate(&d_stream, Z_NO_FLUSH);\n     CHECK_ERR(err, \"inflate\");\n \n     d_stream.avail_in = (uInt)comprLen-2;   /* read all compressed data */\n@@ -573,7 +573,8 @@ int main(argc, argv)\n     }\n \n #ifdef Z_SOLO\n-    argc = strlen(argv[0]);\n+    (void)argc;\n+    (void)argv;\n #else\n     test_compress(compr, comprLen, uncompr, uncomprLen);\n "}, {"sha": "2be01646cec3c6641e6a562c872328e9a84ad631", "filename": "zlib/test/infcover.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Ftest%2Finfcover.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Ftest%2Finfcover.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Ftest%2Finfcover.c?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,5 +1,5 @@\n /* infcover.c -- test zlib's inflate routines with full code coverage\n- * Copyright (C) 2011 Mark Adler\n+ * Copyright (C) 2011, 2016 Mark Adler\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -237,14 +237,14 @@ local void mem_done(z_stream *strm, char *prefix)\n \n /* Decode a hexadecimal string, set *len to length, in[] to the bytes.  This\n    decodes liberally, in that hex digits can be adjacent, in which case two in\n-   a row writes a byte.  Or they can delimited by any non-hex character, where\n-   the delimiters are ignored except when a single hex digit is followed by a\n-   delimiter in which case that single digit writes a byte.  The returned\n-   data is allocated and must eventually be freed.  NULL is returned if out of\n-   memory.  If the length is not needed, then len can be NULL. */\n+   a row writes a byte.  Or they can be delimited by any non-hex character,\n+   where the delimiters are ignored except when a single hex digit is followed\n+   by a delimiter, where that single digit writes a byte.  The returned data is\n+   allocated and must eventually be freed.  NULL is returned if out of memory.\n+   If the length is not needed, then len can be NULL. */\n local unsigned char *h2b(const char *hex, unsigned *len)\n {\n-    unsigned char *in;\n+    unsigned char *in, *re;\n     unsigned next, val;\n \n     in = malloc((strlen(hex) + 1) >> 1);\n@@ -268,8 +268,8 @@ local unsigned char *h2b(const char *hex, unsigned *len)\n     } while (*hex++);       /* go through the loop with the terminating null */\n     if (len != NULL)\n         *len = next;\n-    in = reallocf(in, next);\n-    return in;\n+    re = realloc(in, next);\n+    return re == NULL ? in : re;\n }\n \n /* generic inflate() run, where hex is the hexadecimal input data, what is the"}, {"sha": "e22fb08c0a2921b47efba0ce06c3b5998212c3cc", "filename": "zlib/test/minigzip.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Ftest%2Fminigzip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Ftest%2Fminigzip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Ftest%2Fminigzip.c?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,5 +1,5 @@\n /* minigzip.c -- simulate gzip using the zlib compression library\n- * Copyright (C) 1995-2006, 2010, 2011 Jean-loup Gailly.\n+ * Copyright (C) 1995-2006, 2010, 2011, 2016 Jean-loup Gailly\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -40,7 +40,7 @@\n #  define SET_BINARY_MODE(file)\n #endif\n \n-#ifdef _MSC_VER\n+#if defined(_MSC_VER) && _MSC_VER < 1900\n #  define snprintf _snprintf\n #endif\n \n@@ -156,14 +156,14 @@ void *myalloc(q, n, m)\n     void *q;\n     unsigned n, m;\n {\n-    q = Z_NULL;\n+    (void)q;\n     return calloc(n, m);\n }\n \n void myfree(q, p)\n     void *q, *p;\n {\n-    q = Z_NULL;\n+    (void)q;\n     free(p);\n }\n \n@@ -333,7 +333,7 @@ const char *gzerror(gz, err)\n \n #endif\n \n-char *prog;\n+static char *prog;\n \n void error            OF((const char *msg));\n void gz_compress      OF((FILE   *in, gzFile out));\n@@ -500,7 +500,7 @@ void file_uncompress(file)\n     char *infile, *outfile;\n     FILE  *out;\n     gzFile in;\n-    size_t len = strlen(file);\n+    unsigned len = strlen(file);\n \n     if (len + strlen(GZ_SUFFIX) >= sizeof(buf)) {\n         fprintf(stderr, \"%s: filename too long\\n\", prog);"}, {"sha": "a530cc075cb1f42ee2dccd155be28cc86c58b4a4", "filename": "zlib/treebuild.xml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Ftreebuild.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Ftreebuild.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Ftreebuild.xml?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,6 +1,6 @@\n <?xml version=\"1.0\" ?>\n-<package name=\"zlib\" version=\"1.2.8\">\n-    <library name=\"zlib\" dlversion=\"1.2.8\" dlname=\"z\">\n+<package name=\"zlib\" version=\"1.2.10\">\n+    <library name=\"zlib\" dlversion=\"1.2.10\" dlname=\"z\">\n \t<property name=\"description\"> zip compression library </property>\n \t<property name=\"include-target-dir\" value=\"$(@PACKAGE/install-includedir)\" />\n \n@@ -101,7 +101,7 @@\n <!--\n CFLAGS=-O\n #CFLAGS=-O -DMAX_WBITS=14 -DMAX_MEM_LEVEL=7\n-#CFLAGS=-g -DDEBUG\n+#CFLAGS=-g -DZLIB_DEBUG\n #CFLAGS=-O3 -Wall -Wwrite-strings -Wpointer-arith -Wconversion \\\n #           -Wstrict-prototypes -Wmissing-prototypes\n "}, {"sha": "6dfb2bc7f6b8a7717cf86a8fd2300c50486a42a4", "filename": "zlib/trees.c", "status": "modified", "additions": 37, "deletions": 60, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Ftrees.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Ftrees.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Ftrees.c?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,5 +1,5 @@\n /* trees.c -- output deflated data using Huffman coding\n- * Copyright (C) 1995-2012 Jean-loup Gailly\n+ * Copyright (C) 1995-2016 Jean-loup Gailly\n  * detect_data_type() function provided freely by Cosmin Truta, 2006\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n@@ -36,7 +36,7 @@\n \n #include \"deflate.h\"\n \n-#ifdef DEBUG\n+#ifdef ZLIB_DEBUG\n #  include <ctype.h>\n #endif\n \n@@ -122,13 +122,13 @@ struct static_tree_desc_s {\n     int     max_length;          /* max bit length for the codes */\n };\n \n-local static_tree_desc  static_l_desc =\n+local const static_tree_desc  static_l_desc =\n {static_ltree, extra_lbits, LITERALS+1, L_CODES, MAX_BITS};\n \n-local static_tree_desc  static_d_desc =\n+local const static_tree_desc  static_d_desc =\n {static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS};\n \n-local static_tree_desc  static_bl_desc =\n+local const static_tree_desc  static_bl_desc =\n {(const ct_data *)0, extra_blbits, 0,   BL_CODES, MAX_BL_BITS};\n \n /* ===========================================================================\n@@ -152,18 +152,16 @@ local int  detect_data_type OF((deflate_state *s));\n local unsigned bi_reverse OF((unsigned value, int length));\n local void bi_windup      OF((deflate_state *s));\n local void bi_flush       OF((deflate_state *s));\n-local void copy_block     OF((deflate_state *s, charf *buf, unsigned len,\n-                              int header));\n \n #ifdef GEN_TREES_H\n local void gen_trees_header OF((void));\n #endif\n \n-#ifndef DEBUG\n+#ifndef ZLIB_DEBUG\n #  define send_code(s, c, tree) send_bits(s, tree[c].Code, tree[c].Len)\n    /* Send a code of the given tree. c and tree must not have side effects */\n \n-#else /* DEBUG */\n+#else /* !ZLIB_DEBUG */\n #  define send_code(s, c, tree) \\\n      { if (z_verbose>2) fprintf(stderr,\"\\ncd %3d \",(c)); \\\n        send_bits(s, tree[c].Code, tree[c].Len); }\n@@ -182,7 +180,7 @@ local void gen_trees_header OF((void));\n  * Send a value on a given number of bits.\n  * IN assertion: length <= 16 and value fits in length bits.\n  */\n-#ifdef DEBUG\n+#ifdef ZLIB_DEBUG\n local void send_bits      OF((deflate_state *s, int value, int length));\n \n local void send_bits(s, value, length)\n@@ -208,12 +206,12 @@ local void send_bits(s, value, length)\n         s->bi_valid += length;\n     }\n }\n-#else /* !DEBUG */\n+#else /* !ZLIB_DEBUG */\n \n #define send_bits(s, value, length) \\\n { int len = length;\\\n   if (s->bi_valid > (int)Buf_size - len) {\\\n-    int val = value;\\\n+    int val = (int)value;\\\n     s->bi_buf |= (ush)val << s->bi_valid;\\\n     put_short(s, s->bi_buf);\\\n     s->bi_buf = (ush)val >> (Buf_size - s->bi_valid);\\\n@@ -223,7 +221,7 @@ local void send_bits(s, value, length)\n     s->bi_valid += len;\\\n   }\\\n }\n-#endif /* DEBUG */\n+#endif /* ZLIB_DEBUG */\n \n \n /* the arguments must not have side effects */\n@@ -317,7 +315,7 @@ local void tr_static_init()\n  * Genererate the file trees.h describing the static trees.\n  */\n #ifdef GEN_TREES_H\n-#  ifndef DEBUG\n+#  ifndef ZLIB_DEBUG\n #    include <stdio.h>\n #  endif\n \n@@ -394,7 +392,7 @@ void ZLIB_INTERNAL _tr_init(s)\n \n     s->bi_buf = 0;\n     s->bi_valid = 0;\n-#ifdef DEBUG\n+#ifdef ZLIB_DEBUG\n     s->compressed_len = 0L;\n     s->bits_sent = 0L;\n #endif\n@@ -522,12 +520,12 @@ local void gen_bitlen(s, desc)\n         xbits = 0;\n         if (n >= base) xbits = extra[n-base];\n         f = tree[n].Freq;\n-        s->opt_len += (ulg)f * (bits + xbits);\n-        if (stree) s->static_len += (ulg)f * (stree[n].Len + xbits);\n+        s->opt_len += (ulg)f * (unsigned)(bits + xbits);\n+        if (stree) s->static_len += (ulg)f * (unsigned)(stree[n].Len + xbits);\n     }\n     if (overflow == 0) return;\n \n-    Trace((stderr,\"\\nbit length overflow\\n\"));\n+    Tracev((stderr,\"\\nbit length overflow\\n\"));\n     /* This happens for example on obj2 and pic of the Calgary corpus */\n \n     /* Find the first bit length which could increase: */\n@@ -554,9 +552,8 @@ local void gen_bitlen(s, desc)\n             m = s->heap[--h];\n             if (m > max_code) continue;\n             if ((unsigned) tree[m].Len != (unsigned) bits) {\n-                Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n-                s->opt_len += ((long)bits - (long)tree[m].Len)\n-                              *(long)tree[m].Freq;\n+                Tracev((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n+                s->opt_len += ((ulg)bits - tree[m].Len) * tree[m].Freq;\n                 tree[m].Len = (ush)bits;\n             }\n             n--;\n@@ -578,15 +575,16 @@ local void gen_codes (tree, max_code, bl_count)\n     ushf *bl_count;            /* number of codes at each bit length */\n {\n     ush next_code[MAX_BITS+1]; /* next code value for each bit length */\n-    ush code = 0;              /* running code value */\n+    unsigned code = 0;         /* running code value */\n     int bits;                  /* bit index */\n     int n;                     /* code index */\n \n     /* The distribution counts are first used to generate the code values\n      * without bit reversal.\n      */\n     for (bits = 1; bits <= MAX_BITS; bits++) {\n-        next_code[bits] = code = (code + bl_count[bits-1]) << 1;\n+        code = (code + bl_count[bits-1]) << 1;\n+        next_code[bits] = (ush)code;\n     }\n     /* Check that the bit counts in bl_count are consistent. The last code\n      * must be all ones.\n@@ -599,7 +597,7 @@ local void gen_codes (tree, max_code, bl_count)\n         int len = tree[n].Len;\n         if (len == 0) continue;\n         /* Now reverse the bits */\n-        tree[n].Code = bi_reverse(next_code[len]++, len);\n+        tree[n].Code = (ush)bi_reverse(next_code[len]++, len);\n \n         Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n              n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n@@ -821,7 +819,7 @@ local int build_bl_tree(s)\n         if (s->bl_tree[bl_order[max_blindex]].Len != 0) break;\n     }\n     /* Update opt_len to include the bit length tree and counts */\n-    s->opt_len += 3*(max_blindex+1) + 5+5+4;\n+    s->opt_len += 3*((ulg)max_blindex+1) + 5+5+4;\n     Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n             s->opt_len, s->static_len));\n \n@@ -869,11 +867,17 @@ void ZLIB_INTERNAL _tr_stored_block(s, buf, stored_len, last)\n     int last;         /* one if this is the last block for a file */\n {\n     send_bits(s, (STORED_BLOCK<<1)+last, 3);    /* send block type */\n-#ifdef DEBUG\n+    bi_windup(s);        /* align on byte boundary */\n+    put_short(s, (ush)stored_len);\n+    put_short(s, (ush)~stored_len);\n+    zmemcpy(s->pending_buf + s->pending, (Bytef *)buf, stored_len);\n+    s->pending += stored_len;\n+#ifdef ZLIB_DEBUG\n     s->compressed_len = (s->compressed_len + 3 + 7) & (ulg)~7L;\n     s->compressed_len += (stored_len + 4) << 3;\n+    s->bits_sent += 2*16;\n+    s->bits_sent += stored_len<<3;\n #endif\n-    copy_block(s, buf, (unsigned)stored_len, 1); /* with header */\n }\n \n /* ===========================================================================\n@@ -894,7 +898,7 @@ void ZLIB_INTERNAL _tr_align(s)\n {\n     send_bits(s, STATIC_TREES<<1, 3);\n     send_code(s, END_BLOCK, static_ltree);\n-#ifdef DEBUG\n+#ifdef ZLIB_DEBUG\n     s->compressed_len += 10L; /* 3 for block type, 7 for EOB */\n #endif\n     bi_flush(s);\n@@ -974,7 +978,7 @@ void ZLIB_INTERNAL _tr_flush_block(s, buf, stored_len, last)\n         send_bits(s, (STATIC_TREES<<1)+last, 3);\n         compress_block(s, (const ct_data *)static_ltree,\n                        (const ct_data *)static_dtree);\n-#ifdef DEBUG\n+#ifdef ZLIB_DEBUG\n         s->compressed_len += 3 + s->static_len;\n #endif\n     } else {\n@@ -983,7 +987,7 @@ void ZLIB_INTERNAL _tr_flush_block(s, buf, stored_len, last)\n                        max_blindex+1);\n         compress_block(s, (const ct_data *)s->dyn_ltree,\n                        (const ct_data *)s->dyn_dtree);\n-#ifdef DEBUG\n+#ifdef ZLIB_DEBUG\n         s->compressed_len += 3 + s->opt_len;\n #endif\n     }\n@@ -995,7 +999,7 @@ void ZLIB_INTERNAL _tr_flush_block(s, buf, stored_len, last)\n \n     if (last) {\n         bi_windup(s);\n-#ifdef DEBUG\n+#ifdef ZLIB_DEBUG\n         s->compressed_len += 7;  /* align on byte boundary */\n #endif\n     }\n@@ -1090,7 +1094,7 @@ local void compress_block(s, ltree, dtree)\n             send_code(s, code, dtree);       /* send the distance code */\n             extra = extra_dbits[code];\n             if (extra != 0) {\n-                dist -= base_dist[code];\n+                dist -= (unsigned)base_dist[code];\n                 send_bits(s, dist, extra);   /* send the extra distance bits */\n             }\n         } /* literal or match pair ? */\n@@ -1193,34 +1197,7 @@ local void bi_windup(s)\n     }\n     s->bi_buf = 0;\n     s->bi_valid = 0;\n-#ifdef DEBUG\n+#ifdef ZLIB_DEBUG\n     s->bits_sent = (s->bits_sent+7) & ~7;\n #endif\n }\n-\n-/* ===========================================================================\n- * Copy a stored block, storing first the length and its\n- * one's complement if requested.\n- */\n-local void copy_block(s, buf, len, header)\n-    deflate_state *s;\n-    charf    *buf;    /* the input data */\n-    unsigned len;     /* its length */\n-    int      header;  /* true if block header must be written */\n-{\n-    bi_windup(s);        /* align on byte boundary */\n-\n-    if (header) {\n-        put_short(s, (ush)len);\n-        put_short(s, (ush)~len);\n-#ifdef DEBUG\n-        s->bits_sent += 2*16;\n-#endif\n-    }\n-#ifdef DEBUG\n-    s->bits_sent += (ulg)len<<3;\n-#endif\n-    while (len--) {\n-        put_byte(s, *buf++);\n-    }\n-}"}, {"sha": "a6ef81e1cdedc6e788c3fb72df600e97f82e332f", "filename": "zlib/uncompr.c", "status": "modified", "additions": 66, "deletions": 32, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Funcompr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Funcompr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Funcompr.c?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,5 +1,5 @@\n /* uncompr.c -- decompress a memory buffer\n- * Copyright (C) 1995-2003, 2010 Jean-loup Gailly.\n+ * Copyright (C) 1995-2003, 2010, 2014, 2016 Jean-loup Gailly, Mark Adler\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -9,51 +9,85 @@\n #include \"zlib.h\"\n \n /* ===========================================================================\n-     Decompresses the source buffer into the destination buffer.  sourceLen is\n-   the byte length of the source buffer. Upon entry, destLen is the total\n-   size of the destination buffer, which must be large enough to hold the\n-   entire uncompressed data. (The size of the uncompressed data must have\n-   been saved previously by the compressor and transmitted to the decompressor\n-   by some mechanism outside the scope of this compression library.)\n-   Upon exit, destLen is the actual size of the compressed buffer.\n-\n-     uncompress returns Z_OK if success, Z_MEM_ERROR if there was not\n-   enough memory, Z_BUF_ERROR if there was not enough room in the output\n-   buffer, or Z_DATA_ERROR if the input data was corrupted.\n+     Decompresses the source buffer into the destination buffer.  *sourceLen is\n+   the byte length of the source buffer. Upon entry, *destLen is the total size\n+   of the destination buffer, which must be large enough to hold the entire\n+   uncompressed data. (The size of the uncompressed data must have been saved\n+   previously by the compressor and transmitted to the decompressor by some\n+   mechanism outside the scope of this compression library.) Upon exit,\n+   *destLen is the size of the decompressed data and *sourceLen is the number\n+   of source bytes consumed. Upon return, source + *sourceLen points to the\n+   first unused input byte.\n+\n+     uncompress returns Z_OK if success, Z_MEM_ERROR if there was not enough\n+   memory, Z_BUF_ERROR if there was not enough room in the output buffer, or\n+   Z_DATA_ERROR if the input data was corrupted, including if the input data is\n+   an incomplete zlib stream.\n */\n-int ZEXPORT uncompress (dest, destLen, source, sourceLen)\n+int ZEXPORT uncompress2 (dest, destLen, source, sourceLen)\n     Bytef *dest;\n     uLongf *destLen;\n     const Bytef *source;\n-    uLong sourceLen;\n+    uLong *sourceLen;\n {\n     z_stream stream;\n     int err;\n+    const uInt max = (uInt)-1;\n+    uLong len, left;\n+    Byte buf[1];    /* for detection of incomplete stream when *destLen == 0 */\n \n-    stream.next_in = (z_const Bytef *)source;\n-    stream.avail_in = (uInt)sourceLen;\n-    /* Check for source > 64K on 16-bit machine: */\n-    if ((uLong)stream.avail_in != sourceLen) return Z_BUF_ERROR;\n-\n-    stream.next_out = dest;\n-    stream.avail_out = (uInt)*destLen;\n-    if ((uLong)stream.avail_out != *destLen) return Z_BUF_ERROR;\n+    len = *sourceLen;\n+    if (*destLen) {\n+        left = *destLen;\n+        *destLen = 0;\n+    }\n+    else {\n+        left = 1;\n+        dest = buf;\n+    }\n \n+    stream.next_in = (z_const Bytef *)source;\n+    stream.avail_in = 0;\n     stream.zalloc = (alloc_func)0;\n     stream.zfree = (free_func)0;\n+    stream.opaque = (voidpf)0;\n \n     err = inflateInit(&stream);\n     if (err != Z_OK) return err;\n \n-    err = inflate(&stream, Z_FINISH);\n-    if (err != Z_STREAM_END) {\n-        inflateEnd(&stream);\n-        if (err == Z_NEED_DICT || (err == Z_BUF_ERROR && stream.avail_in == 0))\n-            return Z_DATA_ERROR;\n-        return err;\n-    }\n-    *destLen = stream.total_out;\n+    stream.next_out = dest;\n+    stream.avail_out = 0;\n \n-    err = inflateEnd(&stream);\n-    return err;\n+    do {\n+        if (stream.avail_out == 0) {\n+            stream.avail_out = left > (uLong)max ? max : (uInt)left;\n+            left -= stream.avail_out;\n+        }\n+        if (stream.avail_in == 0) {\n+            stream.avail_in = len > (uLong)max ? max : (uInt)len;\n+            len -= stream.avail_in;\n+        }\n+        err = inflate(&stream, Z_NO_FLUSH);\n+    } while (err == Z_OK);\n+\n+    *sourceLen -= len + stream.avail_in;\n+    if (dest != buf)\n+        *destLen = stream.total_out;\n+    else if (stream.total_out && err == Z_BUF_ERROR)\n+        left = 1;\n+\n+    inflateEnd(&stream);\n+    return err == Z_STREAM_END ? Z_OK :\n+           err == Z_NEED_DICT ? Z_DATA_ERROR  :\n+           err == Z_BUF_ERROR && left + stream.avail_out ? Z_DATA_ERROR :\n+           err;\n+}\n+\n+int ZEXPORT uncompress (dest, destLen, source, sourceLen)\n+    Bytef *dest;\n+    uLongf *destLen;\n+    const Bytef *source;\n+    uLong sourceLen;\n+{\n+    return uncompress2(dest, destLen, source, &sourceLen);\n }"}, {"sha": "305be50afef66540e31d31da2bc878c490fc0e9d", "filename": "zlib/win32/Makefile.gcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fwin32%2FMakefile.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fwin32%2FMakefile.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fwin32%2FMakefile.gcc?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -39,7 +39,7 @@ IMPLIB    = libz.dll.a\n SHARED_MODE=0\n \n #LOC = -DASMV\n-#LOC = -DDEBUG -g\n+#LOC = -DZLIB_DEBUG -g\n \n PREFIX =\n CC = $(PREFIX)gcc"}, {"sha": "16adcca5d1b0696e27fe5ce737f6272ec089ed42", "filename": "zlib/win32/README-WIN32.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fwin32%2FREADME-WIN32.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fwin32%2FREADME-WIN32.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fwin32%2FREADME-WIN32.txt?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,6 +1,6 @@\n ZLIB DATA COMPRESSION LIBRARY\n \n-zlib 1.2.8 is a general purpose data compression library.  All the code is\n+zlib 1.2.10 is a general purpose data compression library.  All the code is\n thread safe.  The data format used by the zlib library is described by RFCs\n (Request for Comments) 1950 to 1952 in the files\n http://www.ietf.org/rfc/rfc1950.txt (zlib format), rfc1951.txt (deflate format)\n@@ -22,7 +22,7 @@ before asking for help.\n \n Manifest:\n \n-The package zlib-1.2.8-win32-x86.zip will contain the following files:\n+The package zlib-1.2.10-win32-x86.zip will contain the following files:\n \n   README-WIN32.txt This document\n   ChangeLog        Changes since previous zlib packages"}, {"sha": "784b138691385c3e6ba13f8270888ccf7cee90a6", "filename": "zlib/win32/zlib.def", "status": "modified", "additions": 94, "deletions": 86, "changes": 180, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fwin32%2Fzlib.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fwin32%2Fzlib.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fwin32%2Fzlib.def?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,86 +1,94 @@\n-; zlib data compression library\n-EXPORTS\n-; basic functions\n-    zlibVersion\n-    deflate\n-    deflateEnd\n-    inflate\n-    inflateEnd\n-; advanced functions\n-    deflateSetDictionary\n-    deflateCopy\n-    deflateReset\n-    deflateParams\n-    deflateTune\n-    deflateBound\n-    deflatePending\n-    deflatePrime\n-    deflateSetHeader\n-    inflateSetDictionary\n-    inflateGetDictionary\n-    inflateSync\n-    inflateCopy\n-    inflateReset\n-    inflateReset2\n-    inflatePrime\n-    inflateMark\n-    inflateGetHeader\n-    inflateBack\n-    inflateBackEnd\n-    zlibCompileFlags\n-; utility functions\n-    compress\n-    compress2\n-    compressBound\n-    uncompress\n-    gzopen\n-    gzdopen\n-    gzbuffer\n-    gzsetparams\n-    gzread\n-    gzwrite\n-    gzprintf\n-    gzvprintf\n-    gzputs\n-    gzgets\n-    gzputc\n-    gzgetc\n-    gzungetc\n-    gzflush\n-    gzseek\n-    gzrewind\n-    gztell\n-    gzoffset\n-    gzeof\n-    gzdirect\n-    gzclose\n-    gzclose_r\n-    gzclose_w\n-    gzerror\n-    gzclearerr\n-; large file functions\n-    gzopen64\n-    gzseek64\n-    gztell64\n-    gzoffset64\n-    adler32_combine64\n-    crc32_combine64\n-; checksum functions\n-    adler32\n-    crc32\n-    adler32_combine\n-    crc32_combine\n-; various hacks, don't look :)\n-    deflateInit_\n-    deflateInit2_\n-    inflateInit_\n-    inflateInit2_\n-    inflateBackInit_\n-    gzgetc_\n-    zError\n-    inflateSyncPoint\n-    get_crc_table\n-    inflateUndermine\n-    inflateResetKeep\n-    deflateResetKeep\n-    gzopen_w\n+; zlib data compression library\r\n+EXPORTS\r\n+; basic functions\r\n+    zlibVersion\r\n+    deflate\r\n+    deflateEnd\r\n+    inflate\r\n+    inflateEnd\r\n+; advanced functions\r\n+    deflateSetDictionary\r\n+    deflateGetDictionary\r\n+    deflateCopy\r\n+    deflateReset\r\n+    deflateParams\r\n+    deflateTune\r\n+    deflateBound\r\n+    deflatePending\r\n+    deflatePrime\r\n+    deflateSetHeader\r\n+    inflateSetDictionary\r\n+    inflateGetDictionary\r\n+    inflateSync\r\n+    inflateCopy\r\n+    inflateReset\r\n+    inflateReset2\r\n+    inflatePrime\r\n+    inflateMark\r\n+    inflateGetHeader\r\n+    inflateBack\r\n+    inflateBackEnd\r\n+    zlibCompileFlags\r\n+; utility functions\r\n+    compress\r\n+    compress2\r\n+    compressBound\r\n+    uncompress\r\n+    uncompress2\r\n+    gzopen\r\n+    gzdopen\r\n+    gzbuffer\r\n+    gzsetparams\r\n+    gzread\r\n+    gzfread\r\n+    gzwrite\r\n+    gzfwrite\r\n+    gzprintf\r\n+    gzvprintf\r\n+    gzputs\r\n+    gzgets\r\n+    gzputc\r\n+    gzgetc\r\n+    gzungetc\r\n+    gzflush\r\n+    gzseek\r\n+    gzrewind\r\n+    gztell\r\n+    gzoffset\r\n+    gzeof\r\n+    gzdirect\r\n+    gzclose\r\n+    gzclose_r\r\n+    gzclose_w\r\n+    gzerror\r\n+    gzclearerr\r\n+; large file functions\r\n+    gzopen64\r\n+    gzseek64\r\n+    gztell64\r\n+    gzoffset64\r\n+    adler32_combine64\r\n+    crc32_combine64\r\n+; checksum functions\r\n+    adler32\r\n+    adler32_z\r\n+    crc32\r\n+    crc32_z\r\n+    adler32_combine\r\n+    crc32_combine\r\n+; various hacks, don't look :)\r\n+    deflateInit_\r\n+    deflateInit2_\r\n+    inflateInit_\r\n+    inflateInit2_\r\n+    inflateBackInit_\r\n+    gzgetc_\r\n+    zError\r\n+    inflateSyncPoint\r\n+    get_crc_table\r\n+    inflateUndermine\r\n+    inflateValidate\r\n+    inflateCodesUsed\r\n+    inflateResetKeep\r\n+    deflateResetKeep\r\n+    gzopen_w\r"}, {"sha": "b399839aa95473bbd885d1b92b3b212fe932647c", "filename": "zlib/zconf.h", "status": "modified", "additions": 32, "deletions": 9, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fzconf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fzconf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fzconf.h?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,5 +1,5 @@\n /* zconf.h -- configuration of the zlib compression library\n- * Copyright (C) 1995-2013 Jean-loup Gailly.\n+ * Copyright (C) 1995-2016 Jean-loup Gailly, Mark Adler\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -17,7 +17,7 @@\n #ifdef Z_PREFIX     /* may be set to #if 1 by ./configure */\n #  define Z_PREFIX_SET\n \n-/* all linked symbols */\n+/* all linked symbols and init macros */\n #  define _dist_code            z__dist_code\n #  define _length_code          z__length_code\n #  define _tr_align             z__tr_align\n@@ -29,6 +29,7 @@\n #  define adler32               z_adler32\n #  define adler32_combine       z_adler32_combine\n #  define adler32_combine64     z_adler32_combine64\n+#  define adler32_z             z_adler32_z\n #  ifndef Z_SOLO\n #    define compress              z_compress\n #    define compress2             z_compress2\n@@ -37,10 +38,14 @@\n #  define crc32                 z_crc32\n #  define crc32_combine         z_crc32_combine\n #  define crc32_combine64       z_crc32_combine64\n+#  define crc32_z               z_crc32_z\n #  define deflate               z_deflate\n #  define deflateBound          z_deflateBound\n #  define deflateCopy           z_deflateCopy\n #  define deflateEnd            z_deflateEnd\n+#  define deflateGetDictionary  z_deflateGetDictionary\n+#  define deflateInit           z_deflateInit\n+#  define deflateInit2          z_deflateInit2\n #  define deflateInit2_         z_deflateInit2_\n #  define deflateInit_          z_deflateInit_\n #  define deflateParams         z_deflateParams\n@@ -67,6 +72,8 @@\n #    define gzeof                 z_gzeof\n #    define gzerror               z_gzerror\n #    define gzflush               z_gzflush\n+#    define gzfread               z_gzfread\n+#    define gzfwrite              z_gzfwrite\n #    define gzgetc                z_gzgetc\n #    define gzgetc_               z_gzgetc_\n #    define gzgets                z_gzgets\n@@ -78,7 +85,6 @@\n #      define gzopen_w              z_gzopen_w\n #    endif\n #    define gzprintf              z_gzprintf\n-#    define gzvprintf             z_gzvprintf\n #    define gzputc                z_gzputc\n #    define gzputs                z_gzputs\n #    define gzread                z_gzread\n@@ -89,32 +95,39 @@\n #    define gztell                z_gztell\n #    define gztell64              z_gztell64\n #    define gzungetc              z_gzungetc\n+#    define gzvprintf             z_gzvprintf\n #    define gzwrite               z_gzwrite\n #  endif\n #  define inflate               z_inflate\n #  define inflateBack           z_inflateBack\n #  define inflateBackEnd        z_inflateBackEnd\n+#  define inflateBackInit       z_inflateBackInit\n #  define inflateBackInit_      z_inflateBackInit_\n+#  define inflateCodesUsed      z_inflateCodesUsed\n #  define inflateCopy           z_inflateCopy\n #  define inflateEnd            z_inflateEnd\n+#  define inflateGetDictionary  z_inflateGetDictionary\n #  define inflateGetHeader      z_inflateGetHeader\n+#  define inflateInit           z_inflateInit\n+#  define inflateInit2          z_inflateInit2\n #  define inflateInit2_         z_inflateInit2_\n #  define inflateInit_          z_inflateInit_\n #  define inflateMark           z_inflateMark\n #  define inflatePrime          z_inflatePrime\n #  define inflateReset          z_inflateReset\n #  define inflateReset2         z_inflateReset2\n+#  define inflateResetKeep      z_inflateResetKeep\n #  define inflateSetDictionary  z_inflateSetDictionary\n-#  define inflateGetDictionary  z_inflateGetDictionary\n #  define inflateSync           z_inflateSync\n #  define inflateSyncPoint      z_inflateSyncPoint\n #  define inflateUndermine      z_inflateUndermine\n-#  define inflateResetKeep      z_inflateResetKeep\n+#  define inflateValidate       z_inflateValidate\n #  define inflate_copyright     z_inflate_copyright\n #  define inflate_fast          z_inflate_fast\n #  define inflate_table         z_inflate_table\n #  ifndef Z_SOLO\n #    define uncompress            z_uncompress\n+#    define uncompress2           z_uncompress2\n #  endif\n #  define zError                z_zError\n #  ifndef Z_SOLO\n@@ -224,9 +237,19 @@\n #  define z_const\n #endif\n \n-/* Some Mac compilers merge all .h files incorrectly: */\n-#if defined(__MWERKS__)||defined(applec)||defined(THINK_C)||defined(__SC__)\n-#  define NO_DUMMY_DECL\n+#ifdef Z_SOLO\n+   typedef unsigned long z_size_t;\n+#else\n+#  define z_longlong long long\n+#  if defined(NO_SIZE_T)\n+     typedef unsigned NO_SIZE_T z_size_t;\n+#  elif defined(STDC)\n+#    include <stddef.h>\n+     typedef size_t z_size_t;\n+#  else\n+     typedef unsigned long z_size_t;\n+#  endif\n+#  undef z_longlong\n #endif\n \n /* Maximum value for memLevel in deflateInit2 */\n@@ -256,7 +279,7 @@\n  Of course this will generally degrade compression (there's no free lunch).\n \n    The memory requirements for inflate are (in bytes) 1 << windowBits\n- that is, 32K for windowBits=15 (default value) plus a few kilobytes\n+ that is, 32K for windowBits=15 (default value) plus about 7 kilobytes\n  for small objects.\n */\n "}, {"sha": "a7f24cce60ff7a2a5f98a8df59965a8eb433309e", "filename": "zlib/zconf.h.cmakein", "status": "modified", "additions": 32, "deletions": 9, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fzconf.h.cmakein", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fzconf.h.cmakein", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fzconf.h.cmakein?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,5 +1,5 @@\n /* zconf.h -- configuration of the zlib compression library\n- * Copyright (C) 1995-2013 Jean-loup Gailly.\n+ * Copyright (C) 1995-2016 Jean-loup Gailly, Mark Adler\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -19,7 +19,7 @@\n #ifdef Z_PREFIX     /* may be set to #if 1 by ./configure */\n #  define Z_PREFIX_SET\n \n-/* all linked symbols */\n+/* all linked symbols and init macros */\n #  define _dist_code            z__dist_code\n #  define _length_code          z__length_code\n #  define _tr_align             z__tr_align\n@@ -31,6 +31,7 @@\n #  define adler32               z_adler32\n #  define adler32_combine       z_adler32_combine\n #  define adler32_combine64     z_adler32_combine64\n+#  define adler32_z             z_adler32_z\n #  ifndef Z_SOLO\n #    define compress              z_compress\n #    define compress2             z_compress2\n@@ -39,10 +40,14 @@\n #  define crc32                 z_crc32\n #  define crc32_combine         z_crc32_combine\n #  define crc32_combine64       z_crc32_combine64\n+#  define crc32_z               z_crc32_z\n #  define deflate               z_deflate\n #  define deflateBound          z_deflateBound\n #  define deflateCopy           z_deflateCopy\n #  define deflateEnd            z_deflateEnd\n+#  define deflateGetDictionary  z_deflateGetDictionary\n+#  define deflateInit           z_deflateInit\n+#  define deflateInit2          z_deflateInit2\n #  define deflateInit2_         z_deflateInit2_\n #  define deflateInit_          z_deflateInit_\n #  define deflateParams         z_deflateParams\n@@ -69,6 +74,8 @@\n #    define gzeof                 z_gzeof\n #    define gzerror               z_gzerror\n #    define gzflush               z_gzflush\n+#    define gzfread               z_gzfread\n+#    define gzfwrite              z_gzfwrite\n #    define gzgetc                z_gzgetc\n #    define gzgetc_               z_gzgetc_\n #    define gzgets                z_gzgets\n@@ -80,7 +87,6 @@\n #      define gzopen_w              z_gzopen_w\n #    endif\n #    define gzprintf              z_gzprintf\n-#    define gzvprintf             z_gzvprintf\n #    define gzputc                z_gzputc\n #    define gzputs                z_gzputs\n #    define gzread                z_gzread\n@@ -91,32 +97,39 @@\n #    define gztell                z_gztell\n #    define gztell64              z_gztell64\n #    define gzungetc              z_gzungetc\n+#    define gzvprintf             z_gzvprintf\n #    define gzwrite               z_gzwrite\n #  endif\n #  define inflate               z_inflate\n #  define inflateBack           z_inflateBack\n #  define inflateBackEnd        z_inflateBackEnd\n+#  define inflateBackInit       z_inflateBackInit\n #  define inflateBackInit_      z_inflateBackInit_\n+#  define inflateCodesUsed      z_inflateCodesUsed\n #  define inflateCopy           z_inflateCopy\n #  define inflateEnd            z_inflateEnd\n+#  define inflateGetDictionary  z_inflateGetDictionary\n #  define inflateGetHeader      z_inflateGetHeader\n+#  define inflateInit           z_inflateInit\n+#  define inflateInit2          z_inflateInit2\n #  define inflateInit2_         z_inflateInit2_\n #  define inflateInit_          z_inflateInit_\n #  define inflateMark           z_inflateMark\n #  define inflatePrime          z_inflatePrime\n #  define inflateReset          z_inflateReset\n #  define inflateReset2         z_inflateReset2\n+#  define inflateResetKeep      z_inflateResetKeep\n #  define inflateSetDictionary  z_inflateSetDictionary\n-#  define inflateGetDictionary  z_inflateGetDictionary\n #  define inflateSync           z_inflateSync\n #  define inflateSyncPoint      z_inflateSyncPoint\n #  define inflateUndermine      z_inflateUndermine\n-#  define inflateResetKeep      z_inflateResetKeep\n+#  define inflateValidate       z_inflateValidate\n #  define inflate_copyright     z_inflate_copyright\n #  define inflate_fast          z_inflate_fast\n #  define inflate_table         z_inflate_table\n #  ifndef Z_SOLO\n #    define uncompress            z_uncompress\n+#    define uncompress2           z_uncompress2\n #  endif\n #  define zError                z_zError\n #  ifndef Z_SOLO\n@@ -226,9 +239,19 @@\n #  define z_const\n #endif\n \n-/* Some Mac compilers merge all .h files incorrectly: */\n-#if defined(__MWERKS__)||defined(applec)||defined(THINK_C)||defined(__SC__)\n-#  define NO_DUMMY_DECL\n+#ifdef Z_SOLO\n+   typedef unsigned long z_size_t;\n+#else\n+#  define z_longlong long long\n+#  if defined(NO_SIZE_T)\n+     typedef unsigned NO_SIZE_T z_size_t;\n+#  elif defined(STDC)\n+#    include <stddef.h>\n+     typedef size_t z_size_t;\n+#  else\n+     typedef unsigned long z_size_t;\n+#  endif\n+#  undef z_longlong\n #endif\n \n /* Maximum value for memLevel in deflateInit2 */\n@@ -258,7 +281,7 @@\n  Of course this will generally degrade compression (there's no free lunch).\n \n    The memory requirements for inflate are (in bytes) 1 << windowBits\n- that is, 32K for windowBits=15 (default value) plus a few kilobytes\n+ that is, 32K for windowBits=15 (default value) plus about 7 kilobytes\n  for small objects.\n */\n "}, {"sha": "5e1d68a004e9744cb35f9d5a2fe94fd4dbcb7f76", "filename": "zlib/zconf.h.in", "status": "modified", "additions": 32, "deletions": 9, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fzconf.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fzconf.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fzconf.h.in?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,5 +1,5 @@\n /* zconf.h -- configuration of the zlib compression library\n- * Copyright (C) 1995-2013 Jean-loup Gailly.\n+ * Copyright (C) 1995-2016 Jean-loup Gailly, Mark Adler\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -17,7 +17,7 @@\n #ifdef Z_PREFIX     /* may be set to #if 1 by ./configure */\n #  define Z_PREFIX_SET\n \n-/* all linked symbols */\n+/* all linked symbols and init macros */\n #  define _dist_code            z__dist_code\n #  define _length_code          z__length_code\n #  define _tr_align             z__tr_align\n@@ -29,6 +29,7 @@\n #  define adler32               z_adler32\n #  define adler32_combine       z_adler32_combine\n #  define adler32_combine64     z_adler32_combine64\n+#  define adler32_z             z_adler32_z\n #  ifndef Z_SOLO\n #    define compress              z_compress\n #    define compress2             z_compress2\n@@ -37,10 +38,14 @@\n #  define crc32                 z_crc32\n #  define crc32_combine         z_crc32_combine\n #  define crc32_combine64       z_crc32_combine64\n+#  define crc32_z               z_crc32_z\n #  define deflate               z_deflate\n #  define deflateBound          z_deflateBound\n #  define deflateCopy           z_deflateCopy\n #  define deflateEnd            z_deflateEnd\n+#  define deflateGetDictionary  z_deflateGetDictionary\n+#  define deflateInit           z_deflateInit\n+#  define deflateInit2          z_deflateInit2\n #  define deflateInit2_         z_deflateInit2_\n #  define deflateInit_          z_deflateInit_\n #  define deflateParams         z_deflateParams\n@@ -67,6 +72,8 @@\n #    define gzeof                 z_gzeof\n #    define gzerror               z_gzerror\n #    define gzflush               z_gzflush\n+#    define gzfread               z_gzfread\n+#    define gzfwrite              z_gzfwrite\n #    define gzgetc                z_gzgetc\n #    define gzgetc_               z_gzgetc_\n #    define gzgets                z_gzgets\n@@ -78,7 +85,6 @@\n #      define gzopen_w              z_gzopen_w\n #    endif\n #    define gzprintf              z_gzprintf\n-#    define gzvprintf             z_gzvprintf\n #    define gzputc                z_gzputc\n #    define gzputs                z_gzputs\n #    define gzread                z_gzread\n@@ -89,32 +95,39 @@\n #    define gztell                z_gztell\n #    define gztell64              z_gztell64\n #    define gzungetc              z_gzungetc\n+#    define gzvprintf             z_gzvprintf\n #    define gzwrite               z_gzwrite\n #  endif\n #  define inflate               z_inflate\n #  define inflateBack           z_inflateBack\n #  define inflateBackEnd        z_inflateBackEnd\n+#  define inflateBackInit       z_inflateBackInit\n #  define inflateBackInit_      z_inflateBackInit_\n+#  define inflateCodesUsed      z_inflateCodesUsed\n #  define inflateCopy           z_inflateCopy\n #  define inflateEnd            z_inflateEnd\n+#  define inflateGetDictionary  z_inflateGetDictionary\n #  define inflateGetHeader      z_inflateGetHeader\n+#  define inflateInit           z_inflateInit\n+#  define inflateInit2          z_inflateInit2\n #  define inflateInit2_         z_inflateInit2_\n #  define inflateInit_          z_inflateInit_\n #  define inflateMark           z_inflateMark\n #  define inflatePrime          z_inflatePrime\n #  define inflateReset          z_inflateReset\n #  define inflateReset2         z_inflateReset2\n+#  define inflateResetKeep      z_inflateResetKeep\n #  define inflateSetDictionary  z_inflateSetDictionary\n-#  define inflateGetDictionary  z_inflateGetDictionary\n #  define inflateSync           z_inflateSync\n #  define inflateSyncPoint      z_inflateSyncPoint\n #  define inflateUndermine      z_inflateUndermine\n-#  define inflateResetKeep      z_inflateResetKeep\n+#  define inflateValidate       z_inflateValidate\n #  define inflate_copyright     z_inflate_copyright\n #  define inflate_fast          z_inflate_fast\n #  define inflate_table         z_inflate_table\n #  ifndef Z_SOLO\n #    define uncompress            z_uncompress\n+#    define uncompress2           z_uncompress2\n #  endif\n #  define zError                z_zError\n #  ifndef Z_SOLO\n@@ -224,9 +237,19 @@\n #  define z_const\n #endif\n \n-/* Some Mac compilers merge all .h files incorrectly: */\n-#if defined(__MWERKS__)||defined(applec)||defined(THINK_C)||defined(__SC__)\n-#  define NO_DUMMY_DECL\n+#ifdef Z_SOLO\n+   typedef unsigned long z_size_t;\n+#else\n+#  define z_longlong long long\n+#  if defined(NO_SIZE_T)\n+     typedef unsigned NO_SIZE_T z_size_t;\n+#  elif defined(STDC)\n+#    include <stddef.h>\n+     typedef size_t z_size_t;\n+#  else\n+     typedef unsigned long z_size_t;\n+#  endif\n+#  undef z_longlong\n #endif\n \n /* Maximum value for memLevel in deflateInit2 */\n@@ -256,7 +279,7 @@\n  Of course this will generally degrade compression (there's no free lunch).\n \n    The memory requirements for inflate are (in bytes) 1 << windowBits\n- that is, 32K for windowBits=15 (default value) plus a few kilobytes\n+ that is, 32K for windowBits=15 (default value) plus about 7 kilobytes\n  for small objects.\n */\n "}, {"sha": "00dc06119b10744a59fa37da542e43f10c11538f", "filename": "zlib/zlib.3", "status": "modified", "additions": 35, "deletions": 37, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fzlib.3", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fzlib.3", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fzlib.3?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,4 +1,4 @@\n-.TH ZLIB 3 \"28 Apr 2013\"\n+.TH ZLIB 3 \"2 Jan 2017\"\n .SH NAME\n zlib \\- compression/decompression library\n .SH SYNOPSIS\n@@ -48,32 +48,10 @@ Changes to this version are documented in the file\n that accompanies the source.\n .LP\n .I zlib\n-is available in Java using the java.util.zip package:\n-.IP\n-http://java.sun.com/developer/technicalArticles/Programming/compression/\n-.LP\n-A Perl interface to\n-.IR zlib ,\n-written by Paul Marquess (pmqs@cpan.org),\n-is available at CPAN (Comprehensive Perl Archive Network) sites,\n-including:\n-.IP\n-http://search.cpan.org/~pmqs/IO-Compress-Zlib/\n-.LP\n-A Python interface to\n-.IR zlib ,\n-written by A.M. Kuchling (amk@magnet.com),\n-is available in Python 1.5 and later versions:\n-.IP\n-http://docs.python.org/library/zlib.html\n-.LP\n-.I zlib\n-is built into\n-.IR tcl:\n-.IP\n-http://wiki.tcl.tk/4610\n+is built in to many languages and operating systems, including but not limited to\n+Java, Python, .NET, PHP, Perl, Ruby, Swift, and Go.\n .LP\n-An experimental package to read and write files in .zip format,\n+An experimental package to read and write files in the .zip format,\n written on top of\n .I zlib\n by Gilles Vollant (info@winimage.com),\n@@ -92,7 +70,9 @@ web site can be found at:\n .IP\n http://zlib.net/\n .LP\n-The data format used by the zlib library is described by RFC\n+The data format used by the\n+.I zlib\n+library is described by RFC\n (Request for Comments) 1950 to 1952 in the files:\n .IP\n http://tools.ietf.org/html/rfc1950 (for the zlib header and trailer format)\n@@ -124,17 +104,35 @@ http://zlib.net/zlib_faq.html\n before asking for help.\n Send questions and/or comments to zlib@gzip.org,\n or (for the Windows DLL version) to Gilles Vollant (info@winimage.com).\n-.SH AUTHORS\n-Version 1.2.8\n-Copyright (C) 1995-2013 Jean-loup Gailly (jloup@gzip.org)\n-and Mark Adler (madler@alumni.caltech.edu).\n-.LP\n-This software is provided \"as-is,\"\n-without any express or implied warranty.\n-In no event will the authors be held liable for any damages\n+.SH AUTHORS AND LICENSE\n+Version 1.2.10\n+.LP\n+Copyright (C) 1995-2017 Jean-loup Gailly and Mark Adler\n+.LP\n+This software is provided 'as-is', without any express or implied\n+warranty.  In no event will the authors be held liable for any damages\n arising from the use of this software.\n-See the distribution directory with respect to requirements\n-governing redistribution.\n+.LP\n+Permission is granted to anyone to use this software for any purpose,\n+including commercial applications, and to alter it and redistribute it\n+freely, subject to the following restrictions:\n+.LP\n+.nr step 1 1\n+.IP \\n[step]. 3\n+The origin of this software must not be misrepresented; you must not\n+claim that you wrote the original software. If you use this software\n+in a product, an acknowledgment in the product documentation would be\n+appreciated but is not required.\n+.IP \\n+[step].\n+Altered source versions must be plainly marked as such, and must not be\n+misrepresented as being the original software.\n+.IP \\n+[step].\n+This notice may not be removed or altered from any source distribution.\n+.LP\n+Jean-loup Gailly        Mark Adler\n+.br\n+jloup@gzip.org          madler@alumni.caltech.edu\n+.LP\n The deflate format used by\n .I zlib\n was defined by Phil Katz."}, {"sha": "dc90dc8d22b1db91326ec7ac13d52136ff4dedd7", "filename": "zlib/zlib.h", "status": "modified", "additions": 297, "deletions": 154, "changes": 451, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fzlib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fzlib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fzlib.h?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,7 +1,7 @@\n /* zlib.h -- interface of the 'zlib' general purpose compression library\n-  version 1.2.8, April 28th, 2013\n+  version 1.2.10, January 2nd, 2017\n \n-  Copyright (C) 1995-2013 Jean-loup Gailly and Mark Adler\n+  Copyright (C) 1995-2017 Jean-loup Gailly and Mark Adler\n \n   This software is provided 'as-is', without any express or implied\n   warranty.  In no event will the authors be held liable for any damages\n@@ -37,11 +37,11 @@\n extern \"C\" {\n #endif\n \n-#define ZLIB_VERSION \"1.2.8\"\n-#define ZLIB_VERNUM 0x1280\n+#define ZLIB_VERSION \"1.2.10\"\n+#define ZLIB_VERNUM 0x12a0\n #define ZLIB_VER_MAJOR 1\n #define ZLIB_VER_MINOR 2\n-#define ZLIB_VER_REVISION 8\n+#define ZLIB_VER_REVISION 10\n #define ZLIB_VER_SUBREVISION 0\n \n /*\n@@ -65,7 +65,8 @@ extern \"C\" {\n   with \"gz\".  The gzip format is different from the zlib format.  gzip is a\n   gzip wrapper, documented in RFC 1952, wrapped around a deflate stream.\n \n-    This library can optionally read and write gzip streams in memory as well.\n+    This library can optionally read and write gzip and raw deflate streams in\n+  memory as well.\n \n     The zlib format was designed to be compact and fast for use in memory\n   and on communications channels.  The gzip format was designed for single-\n@@ -74,7 +75,7 @@ extern \"C\" {\n \n     The library does not install any signal handler.  The decoder checks\n   the consistency of the compressed data, so the library should never crash\n-  even in case of corrupted input.\n+  even in the case of corrupted input.\n */\n \n typedef voidpf (*alloc_func) OF((voidpf opaque, uInt items, uInt size));\n@@ -87,7 +88,7 @@ typedef struct z_stream_s {\n     uInt     avail_in;  /* number of bytes available at next_in */\n     uLong    total_in;  /* total number of input bytes read so far */\n \n-    Bytef    *next_out; /* next output byte should be put there */\n+    Bytef    *next_out; /* next output byte will go here */\n     uInt     avail_out; /* remaining free space at next_out */\n     uLong    total_out; /* total number of bytes output so far */\n \n@@ -98,8 +99,9 @@ typedef struct z_stream_s {\n     free_func  zfree;   /* used to free the internal state */\n     voidpf     opaque;  /* private data object passed to zalloc and zfree */\n \n-    int     data_type;  /* best guess about the data type: binary or text */\n-    uLong   adler;      /* adler32 value of the uncompressed data */\n+    int     data_type;  /* best guess about the data type: binary or text\n+                           for deflate, or the decoding state for inflate */\n+    uLong   adler;      /* Adler-32 or CRC-32 value of the uncompressed data */\n     uLong   reserved;   /* reserved for future use */\n } z_stream;\n \n@@ -142,7 +144,9 @@ typedef gz_header FAR *gz_headerp;\n \n      zalloc must return Z_NULL if there is not enough memory for the object.\n    If zlib is used in a multi-threaded application, zalloc and zfree must be\n-   thread safe.\n+   thread safe.  In that case, zlib is thread-safe.  When zalloc and zfree are\n+   Z_NULL on entry to the initialization function, they are set to internal\n+   routines that use the standard library functions malloc() and free().\n \n      On 16-bit systems, the functions zalloc and zfree must be able to allocate\n    exactly 65536 bytes, but will not be required to allocate more than this if\n@@ -155,7 +159,7 @@ typedef gz_header FAR *gz_headerp;\n \n      The fields total_in and total_out can be used for statistics or progress\n    reports.  After compression, total_in holds the total size of the\n-   uncompressed data and may be saved for use in the decompressor (particularly\n+   uncompressed data and may be saved for use by the decompressor (particularly\n    if the decompressor wants to decompress everything in a single step).\n */\n \n@@ -200,7 +204,7 @@ typedef gz_header FAR *gz_headerp;\n #define Z_TEXT     1\n #define Z_ASCII    Z_TEXT   /* for compatibility with 1.2.2 and earlier */\n #define Z_UNKNOWN  2\n-/* Possible values of the data_type field (though see inflate()) */\n+/* Possible values of the data_type field for deflate() */\n \n #define Z_DEFLATED   8\n /* The deflate compression method (the only one supported in this version) */\n@@ -258,11 +262,11 @@ ZEXTERN int ZEXPORT deflate OF((z_streamp strm, int flush));\n     enough room in the output buffer), next_in and avail_in are updated and\n     processing will resume at this point for the next call of deflate().\n \n-  - Provide more output starting at next_out and update next_out and avail_out\n+  - Generate more output starting at next_out and update next_out and avail_out\n     accordingly.  This action is forced if the parameter flush is non zero.\n     Forcing flush frequently degrades the compression ratio, so this parameter\n-    should be set only when necessary (in interactive applications).  Some\n-    output may be provided even if flush is not set.\n+    should be set only when necessary.  Some output may be provided even if\n+    flush is zero.\n \n     Before the call of deflate(), the application should ensure that at least\n   one of the actions is possible, by providing more input and/or consuming more\n@@ -271,7 +275,9 @@ ZEXTERN int ZEXPORT deflate OF((z_streamp strm, int flush));\n   output when it wants, for example when the output buffer is full (avail_out\n   == 0), or after each call of deflate().  If deflate returns Z_OK and with\n   zero avail_out, it must be called again after making room in the output\n-  buffer because there might be more output pending.\n+  buffer because there might be more output pending. See deflatePending(),\n+  which can be used if desired to determine whether or not there is more ouput\n+  in that case.\n \n     Normally the parameter flush is set to Z_NO_FLUSH, which allows deflate to\n   decide how much data to accumulate before producing output, in order to\n@@ -292,8 +298,8 @@ ZEXTERN int ZEXPORT deflate OF((z_streamp strm, int flush));\n   input data so far will be available to the decompressor, as for Z_SYNC_FLUSH.\n   This completes the current deflate block and follows it with an empty fixed\n   codes block that is 10 bits long.  This assures that enough bytes are output\n-  in order for the decompressor to finish the block before the empty fixed code\n-  block.\n+  in order for the decompressor to finish the block before the empty fixed\n+  codes block.\n \n     If flush is set to Z_BLOCK, a deflate block is completed and emitted, as\n   for Z_SYNC_FLUSH, but the output is not aligned on a byte boundary, and up to\n@@ -319,34 +325,38 @@ ZEXTERN int ZEXPORT deflate OF((z_streamp strm, int flush));\n \n     If the parameter flush is set to Z_FINISH, pending input is processed,\n   pending output is flushed and deflate returns with Z_STREAM_END if there was\n-  enough output space; if deflate returns with Z_OK, this function must be\n-  called again with Z_FINISH and more output space (updated avail_out) but no\n-  more input data, until it returns with Z_STREAM_END or an error.  After\n-  deflate has returned Z_STREAM_END, the only possible operations on the stream\n-  are deflateReset or deflateEnd.\n-\n-    Z_FINISH can be used immediately after deflateInit if all the compression\n-  is to be done in a single step.  In this case, avail_out must be at least the\n-  value returned by deflateBound (see below).  Then deflate is guaranteed to\n-  return Z_STREAM_END.  If not enough output space is provided, deflate will\n-  not return Z_STREAM_END, and it must be called again as described above.\n-\n-    deflate() sets strm->adler to the adler32 checksum of all input read\n-  so far (that is, total_in bytes).\n+  enough output space.  If deflate returns with Z_OK or Z_BUF_ERROR, this\n+  function must be called again with Z_FINISH and more output space (updated\n+  avail_out) but no more input data, until it returns with Z_STREAM_END or an\n+  error.  After deflate has returned Z_STREAM_END, the only possible operations\n+  on the stream are deflateReset or deflateEnd.\n+\n+    Z_FINISH can be used in the first deflate call after deflateInit if all the\n+  compression is to be done in a single step.  In order to complete in one\n+  call, avail_out must be at least the value returned by deflateBound (see\n+  below).  Then deflate is guaranteed to return Z_STREAM_END.  If not enough\n+  output space is provided, deflate will not return Z_STREAM_END, and it must\n+  be called again as described above.\n+\n+    deflate() sets strm->adler to the Adler-32 checksum of all input read\n+  so far (that is, total_in bytes).  If a gzip stream is being generated, then\n+  strm->adler will be the CRC-32 checksum of the input read so far.  (See\n+  deflateInit2 below.)\n \n     deflate() may update strm->data_type if it can make a good guess about\n-  the input data type (Z_BINARY or Z_TEXT).  In doubt, the data is considered\n-  binary.  This field is only for information purposes and does not affect the\n-  compression algorithm in any manner.\n+  the input data type (Z_BINARY or Z_TEXT).  If in doubt, the data is\n+  considered binary.  This field is only for information purposes and does not\n+  affect the compression algorithm in any manner.\n \n     deflate() returns Z_OK if some progress has been made (more input\n   processed or more output produced), Z_STREAM_END if all input has been\n   consumed and all output has been produced (only when flush is set to\n   Z_FINISH), Z_STREAM_ERROR if the stream state was inconsistent (for example\n-  if next_in or next_out was Z_NULL), Z_BUF_ERROR if no progress is possible\n-  (for example avail_in or avail_out was zero).  Note that Z_BUF_ERROR is not\n-  fatal, and deflate() can be called again with more input and more output\n-  space to continue compressing.\n+  if next_in or next_out was Z_NULL or the state was inadvertently written over\n+  by the application), or Z_BUF_ERROR if no progress is possible (for example\n+  avail_in or avail_out was zero).  Note that Z_BUF_ERROR is not fatal, and\n+  deflate() can be called again with more input and more output space to\n+  continue compressing.\n */\n \n \n@@ -369,23 +379,21 @@ ZEXTERN int ZEXPORT inflateInit OF((z_streamp strm));\n \n      Initializes the internal stream state for decompression.  The fields\n    next_in, avail_in, zalloc, zfree and opaque must be initialized before by\n-   the caller.  If next_in is not Z_NULL and avail_in is large enough (the\n-   exact value depends on the compression method), inflateInit determines the\n-   compression method from the zlib header and allocates all data structures\n-   accordingly; otherwise the allocation will be deferred to the first call of\n-   inflate.  If zalloc and zfree are set to Z_NULL, inflateInit updates them to\n-   use default allocation functions.\n+   the caller.  In the current version of inflate, the provided input is not\n+   read or consumed.  The allocation of a sliding window will be deferred to\n+   the first call of inflate (if the decompression does not complete on the\n+   first call).  If zalloc and zfree are set to Z_NULL, inflateInit updates\n+   them to use default allocation functions.\n \n      inflateInit returns Z_OK if success, Z_MEM_ERROR if there was not enough\n    memory, Z_VERSION_ERROR if the zlib library version is incompatible with the\n    version assumed by the caller, or Z_STREAM_ERROR if the parameters are\n    invalid, such as a null pointer to the structure.  msg is set to null if\n-   there is no error message.  inflateInit does not perform any decompression\n-   apart from possibly reading the zlib header if present: actual decompression\n-   will be done by inflate().  (So next_in and avail_in may be modified, but\n-   next_out and avail_out are unused and unchanged.) The current implementation\n-   of inflateInit() does not process any header information -- that is deferred\n-   until inflate() is called.\n+   there is no error message.  inflateInit does not perform any decompression.\n+   Actual decompression will be done by inflate().  So next_in, and avail_in,\n+   next_out, and avail_out are unused and unchanged.  The current\n+   implementation of inflateInit() does not process any header information --\n+   that is deferred until inflate() is called.\n */\n \n \n@@ -401,17 +409,20 @@ ZEXTERN int ZEXPORT inflate OF((z_streamp strm, int flush));\n \n   - Decompress more input starting at next_in and update next_in and avail_in\n     accordingly.  If not all input can be processed (because there is not\n-    enough room in the output buffer), next_in is updated and processing will\n-    resume at this point for the next call of inflate().\n+    enough room in the output buffer), then next_in and avail_in are updated\n+    accordingly, and processing will resume at this point for the next call of\n+    inflate().\n \n-  - Provide more output starting at next_out and update next_out and avail_out\n+  - Generate more output starting at next_out and update next_out and avail_out\n     accordingly.  inflate() provides as much output as possible, until there is\n     no more input data or no more space in the output buffer (see below about\n     the flush parameter).\n \n     Before the call of inflate(), the application should ensure that at least\n   one of the actions is possible, by providing more input and/or consuming more\n-  output, and updating the next_* and avail_* values accordingly.  The\n+  output, and updating the next_* and avail_* values accordingly.  If the\n+  caller of inflate() does not provide both available input and available\n+  output space, it is possible that there will be no progress made.  The\n   application can consume the uncompressed output when it wants, for example\n   when the output buffer is full (avail_out == 0), or after each call of\n   inflate().  If inflate returns Z_OK and with zero avail_out, it must be\n@@ -428,7 +439,7 @@ ZEXTERN int ZEXPORT inflate OF((z_streamp strm, int flush));\n   gets to the end of that block, or when it runs out of data.\n \n     The Z_BLOCK option assists in appending to or combining deflate streams.\n-  Also to assist in this, on return inflate() will set strm->data_type to the\n+  To assist in this, on return inflate() always sets strm->data_type to the\n   number of unused bits in the last byte taken from strm->next_in, plus 64 if\n   inflate() is currently decoding the last block in the deflate stream, plus\n   128 if inflate() returned immediately after decoding an end-of-block code or\n@@ -454,7 +465,7 @@ ZEXTERN int ZEXPORT inflate OF((z_streamp strm, int flush));\n   this case all pending input is processed and all pending output is flushed;\n   avail_out must be large enough to hold all of the uncompressed data for the\n   operation to complete.  (The size of the uncompressed data may have been\n-  saved by the compressor for this purpose.) The use of Z_FINISH is not\n+  saved by the compressor for this purpose.)  The use of Z_FINISH is not\n   required to perform an inflation in one step.  However it may be used to\n   inform inflate that a faster approach can be used for the single inflate()\n   call.  Z_FINISH also informs inflate to not maintain a sliding window if the\n@@ -476,32 +487,33 @@ ZEXTERN int ZEXPORT inflate OF((z_streamp strm, int flush));\n   chosen by the compressor and returns Z_NEED_DICT; otherwise it sets\n   strm->adler to the Adler-32 checksum of all output produced so far (that is,\n   total_out bytes) and returns Z_OK, Z_STREAM_END or an error code as described\n-  below.  At the end of the stream, inflate() checks that its computed adler32\n+  below.  At the end of the stream, inflate() checks that its computed Adler-32\n   checksum is equal to that saved by the compressor and returns Z_STREAM_END\n   only if the checksum is correct.\n \n     inflate() can decompress and check either zlib-wrapped or gzip-wrapped\n   deflate data.  The header type is detected automatically, if requested when\n   initializing with inflateInit2().  Any information contained in the gzip\n-  header is not retained, so applications that need that information should\n-  instead use raw inflate, see inflateInit2() below, or inflateBack() and\n-  perform their own processing of the gzip header and trailer.  When processing\n+  header is not retained unless inflateGetHeader() is used.  When processing\n   gzip-wrapped deflate data, strm->adler32 is set to the CRC-32 of the output\n-  producted so far.  The CRC-32 is checked against the gzip trailer.\n+  produced so far.  The CRC-32 is checked against the gzip trailer, as is the\n+  uncompressed length, modulo 2^32.\n \n     inflate() returns Z_OK if some progress has been made (more input processed\n   or more output produced), Z_STREAM_END if the end of the compressed data has\n   been reached and all uncompressed output has been produced, Z_NEED_DICT if a\n   preset dictionary is needed at this point, Z_DATA_ERROR if the input data was\n   corrupted (input stream not conforming to the zlib format or incorrect check\n-  value), Z_STREAM_ERROR if the stream structure was inconsistent (for example\n-  next_in or next_out was Z_NULL), Z_MEM_ERROR if there was not enough memory,\n-  Z_BUF_ERROR if no progress is possible or if there was not enough room in the\n-  output buffer when Z_FINISH is used.  Note that Z_BUF_ERROR is not fatal, and\n+  value, in which case strm->msg points to a string with a more specific\n+  error), Z_STREAM_ERROR if the stream structure was inconsistent (for example\n+  next_in or next_out was Z_NULL, or the state was inadvertently written over\n+  by the application), Z_MEM_ERROR if there was not enough memory, Z_BUF_ERROR\n+  if no progress was possible or if there was not enough room in the output\n+  buffer when Z_FINISH is used.  Note that Z_BUF_ERROR is not fatal, and\n   inflate() can be called again with more input and more output space to\n   continue decompressing.  If Z_DATA_ERROR is returned, the application may\n   then call inflateSync() to look for a good compression block if a partial\n-  recovery of the data is desired.\n+  recovery of the data is to be attempted.\n */\n \n \n@@ -511,9 +523,8 @@ ZEXTERN int ZEXPORT inflateEnd OF((z_streamp strm));\n    This function discards any unprocessed input and does not flush any pending\n    output.\n \n-     inflateEnd returns Z_OK if success, Z_STREAM_ERROR if the stream state\n-   was inconsistent.  In the error case, msg may be set but then points to a\n-   static string (which must not be deallocated).\n+     inflateEnd returns Z_OK if success, or Z_STREAM_ERROR if the stream state\n+   was inconsistent.\n */\n \n \n@@ -544,16 +555,29 @@ ZEXTERN int ZEXPORT deflateInit2 OF((z_streamp strm,\n    compression at the expense of memory usage.  The default value is 15 if\n    deflateInit is used instead.\n \n+     For the current implementation of deflate(), a windowBits value of 8 (a\n+   window size of 256 bytes) is not supported.  As a result, a request for 8\n+   will result in 9 (a 512-byte window).  In that case, providing 8 to\n+   inflateInit2() will result in an error when the zlib header with 9 is\n+   checked against the initialization of inflate().  The remedy is to not use 8\n+   with deflateInit2() with this initialization, or at least in that case use 9\n+   with inflateInit2().\n+\n      windowBits can also be -8..-15 for raw deflate.  In this case, -windowBits\n    determines the window size.  deflate() will then generate raw deflate data\n-   with no zlib header or trailer, and will not compute an adler32 check value.\n+   with no zlib header or trailer, and will not compute a check value.\n \n      windowBits can also be greater than 15 for optional gzip encoding.  Add\n    16 to windowBits to write a simple gzip header and trailer around the\n    compressed data instead of a zlib wrapper.  The gzip header will have no\n    file name, no extra data, no comment, no modification time (set to zero), no\n-   header crc, and the operating system will be set to 255 (unknown).  If a\n-   gzip stream is being written, strm->adler is a crc32 instead of an adler32.\n+   header crc, and the operating system will be set to the appropriate value,\n+   if the operating system was determined at compile time.  If a gzip stream is\n+   being written, strm->adler is a CRC-32 instead of an Adler-32.\n+\n+     For raw deflate or gzip encoding, a request for a 256-byte window is\n+   rejected as invalid, since only the zlib header provides a means of\n+   transmitting the window size to the decompressor.\n \n      The memLevel parameter specifies how much memory should be allocated\n    for the internal compression state.  memLevel=1 uses minimum memory but is\n@@ -614,12 +638,12 @@ ZEXTERN int ZEXPORT deflateSetDictionary OF((z_streamp strm,\n    addition, the current implementation of deflate will use at most the window\n    size minus 262 bytes of the provided dictionary.\n \n-     Upon return of this function, strm->adler is set to the adler32 value\n+     Upon return of this function, strm->adler is set to the Adler-32 value\n    of the dictionary; the decompressor may later use this value to determine\n-   which dictionary has been used by the compressor.  (The adler32 value\n+   which dictionary has been used by the compressor.  (The Adler-32 value\n    applies to the whole dictionary even if only a subset of the dictionary is\n    actually used by the compressor.) If a raw deflate was requested, then the\n-   adler32 value is not computed and strm->adler is not set.\n+   Adler-32 value is not computed and strm->adler is not set.\n \n      deflateSetDictionary returns Z_OK if success, or Z_STREAM_ERROR if a\n    parameter is invalid (e.g.  dictionary being Z_NULL) or the stream state is\n@@ -628,6 +652,28 @@ ZEXTERN int ZEXPORT deflateSetDictionary OF((z_streamp strm,\n    not perform any compression: this will be done by deflate().\n */\n \n+ZEXTERN int ZEXPORT deflateGetDictionary OF((z_streamp strm,\n+                                             Bytef *dictionary,\n+                                             uInt  *dictLength));\n+/*\n+     Returns the sliding dictionary being maintained by deflate.  dictLength is\n+   set to the number of bytes in the dictionary, and that many bytes are copied\n+   to dictionary.  dictionary must have enough space, where 32768 bytes is\n+   always enough.  If deflateGetDictionary() is called with dictionary equal to\n+   Z_NULL, then only the dictionary length is returned, and nothing is copied.\n+   Similary, if dictLength is Z_NULL, then it is not set.\n+\n+     deflateGetDictionary() may return a length less than the window size, even\n+   when more than the window size in input has been provided. It may return up\n+   to 258 bytes less in that case, due to how zlib's implementation of deflate\n+   manages the sliding window and lookahead for matches, where matches can be\n+   up to 258 bytes long. If the application needs the last window-size bytes of\n+   input, then that would need to be saved by the application outside of zlib.\n+\n+     deflateGetDictionary returns Z_OK on success, or Z_STREAM_ERROR if the\n+   stream state is inconsistent.\n+*/\n+\n ZEXTERN int ZEXPORT deflateCopy OF((z_streamp dest,\n                                     z_streamp source));\n /*\n@@ -648,10 +694,10 @@ ZEXTERN int ZEXPORT deflateCopy OF((z_streamp dest,\n \n ZEXTERN int ZEXPORT deflateReset OF((z_streamp strm));\n /*\n-     This function is equivalent to deflateEnd followed by deflateInit,\n-   but does not free and reallocate all the internal compression state.  The\n-   stream will keep the same compression level and any other attributes that\n-   may have been set by deflateInit2.\n+     This function is equivalent to deflateEnd followed by deflateInit, but\n+   does not free and reallocate the internal compression state.  The stream\n+   will leave the compression level and any other attributes that may have been\n+   set unchanged.\n \n      deflateReset returns Z_OK if success, or Z_STREAM_ERROR if the source\n    stream state was inconsistent (such as zalloc or state being Z_NULL).\n@@ -662,20 +708,35 @@ ZEXTERN int ZEXPORT deflateParams OF((z_streamp strm,\n                                       int strategy));\n /*\n      Dynamically update the compression level and compression strategy.  The\n-   interpretation of level and strategy is as in deflateInit2.  This can be\n+   interpretation of level and strategy is as in deflateInit2().  This can be\n    used to switch between compression and straight copy of the input data, or\n    to switch to a different kind of input data requiring a different strategy.\n-   If the compression level is changed, the input available so far is\n-   compressed with the old level (and may be flushed); the new level will take\n-   effect only at the next call of deflate().\n-\n-     Before the call of deflateParams, the stream state must be set as for\n-   a call of deflate(), since the currently available input may have to be\n-   compressed and flushed.  In particular, strm->avail_out must be non-zero.\n-\n-     deflateParams returns Z_OK if success, Z_STREAM_ERROR if the source\n-   stream state was inconsistent or if a parameter was invalid, Z_BUF_ERROR if\n-   strm->avail_out was zero.\n+   If the compression approach (which is a function of the level) or the\n+   strategy is changed, then the input available so far is compressed with the\n+   old level and strategy using deflate(strm, Z_BLOCK).  There are three\n+   approaches for the compression levels 0, 1..3, and 4..9 respectively.  The\n+   new level and strategy will take effect at the next call of deflate().\n+\n+     If a deflate(strm, Z_BLOCK) is performed by deflateParams(), and it does\n+   not have enough output space to complete, then the parameter change will not\n+   take effect.  In this case, deflateParams() can be called again with the\n+   same parameters and more output space to try again.\n+\n+     In order to assure a change in the parameters on the first try, the\n+   deflate stream should be flushed using deflate() with Z_BLOCK or other flush\n+   request until strm.avail_out is not zero, before calling deflateParams().\n+   Then no more input data should be provided before the deflateParams() call.\n+   If this is done, the old level and strategy will be applied to the data\n+   compressed before deflateParams(), and the new level and strategy will be\n+   applied to the the data compressed after deflateParams().\n+\n+     deflateParams returns Z_OK on success, Z_STREAM_ERROR if the source stream\n+   state was inconsistent or if a parameter was invalid, or Z_BUF_ERROR if\n+   there was not enough output space to complete the compression of the\n+   available input data before a change in the strategy or approach.  Note that\n+   in the case of a Z_BUF_ERROR, the parameters are not changed.  A return\n+   value of Z_BUF_ERROR is not fatal, in which case deflateParams() can be\n+   retried with more output space.\n */\n \n ZEXTERN int ZEXPORT deflateTune OF((z_streamp strm,\n@@ -793,7 +854,7 @@ ZEXTERN int ZEXPORT inflateInit2 OF((z_streamp strm,\n    is for use with other formats that use the deflate compressed data format\n    such as zip.  Those formats provide their own check values.  If a custom\n    format is developed using the raw deflate format for compressed data, it is\n-   recommended that a check value such as an adler32 or a crc32 be applied to\n+   recommended that a check value such as an Adler-32 or a CRC-32 be applied to\n    the uncompressed data as is done in the zlib, gzip, and zip formats.  For\n    most applications, the zlib format should be used as is.  Note that comments\n    above on the use in deflateInit2() applies to the magnitude of windowBits.\n@@ -802,7 +863,10 @@ ZEXTERN int ZEXPORT inflateInit2 OF((z_streamp strm,\n    32 to windowBits to enable zlib and gzip decoding with automatic header\n    detection, or add 16 to decode only the gzip format (the zlib format will\n    return a Z_DATA_ERROR).  If a gzip stream is being decoded, strm->adler is a\n-   crc32 instead of an adler32.\n+   CRC-32 instead of an Adler-32.  Unlike the gunzip utility and gzread() (see\n+   below), inflate() will not automatically decode concatenated gzip streams.\n+   inflate() will return Z_STREAM_END at the end of the gzip stream.  The state\n+   would need to be reset to continue decoding a subsequent gzip stream.\n \n      inflateInit2 returns Z_OK if success, Z_MEM_ERROR if there was not enough\n    memory, Z_VERSION_ERROR if the zlib library version is incompatible with the\n@@ -823,7 +887,7 @@ ZEXTERN int ZEXPORT inflateSetDictionary OF((z_streamp strm,\n      Initializes the decompression dictionary from the given uncompressed byte\n    sequence.  This function must be called immediately after a call of inflate,\n    if that call returned Z_NEED_DICT.  The dictionary chosen by the compressor\n-   can be determined from the adler32 value returned by that call of inflate.\n+   can be determined from the Adler-32 value returned by that call of inflate.\n    The compressor and decompressor must use exactly the same dictionary (see\n    deflateSetDictionary).  For raw inflate, this function can be called at any\n    time to set the dictionary.  If the provided dictionary is smaller than the\n@@ -834,7 +898,7 @@ ZEXTERN int ZEXPORT inflateSetDictionary OF((z_streamp strm,\n      inflateSetDictionary returns Z_OK if success, Z_STREAM_ERROR if a\n    parameter is invalid (e.g.  dictionary being Z_NULL) or the stream state is\n    inconsistent, Z_DATA_ERROR if the given dictionary doesn't match the\n-   expected one (incorrect adler32 value).  inflateSetDictionary does not\n+   expected one (incorrect Adler-32 value).  inflateSetDictionary does not\n    perform any decompression: this will be done by subsequent calls of\n    inflate().\n */\n@@ -892,7 +956,7 @@ ZEXTERN int ZEXPORT inflateCopy OF((z_streamp dest,\n ZEXTERN int ZEXPORT inflateReset OF((z_streamp strm));\n /*\n      This function is equivalent to inflateEnd followed by inflateInit,\n-   but does not free and reallocate all the internal decompression state.  The\n+   but does not free and reallocate the internal decompression state.  The\n    stream will keep attributes that may have been set by inflateInit2.\n \n      inflateReset returns Z_OK if success, or Z_STREAM_ERROR if the source\n@@ -904,7 +968,9 @@ ZEXTERN int ZEXPORT inflateReset2 OF((z_streamp strm,\n /*\n      This function is the same as inflateReset, but it also permits changing\n    the wrap and window size requests.  The windowBits parameter is interpreted\n-   the same as it is for inflateInit2.\n+   the same as it is for inflateInit2.  If the window size is changed, then the\n+   memory allocated for the window is freed, and the window will be reallocated\n+   by inflate() if needed.\n \n      inflateReset2 returns Z_OK if success, or Z_STREAM_ERROR if the source\n    stream state was inconsistent (such as zalloc or state being Z_NULL), or if\n@@ -956,7 +1022,7 @@ ZEXTERN long ZEXPORT inflateMark OF((z_streamp strm));\n    location in the input stream can be determined from avail_in and data_type\n    as noted in the description for the Z_BLOCK flush parameter for inflate.\n \n-     inflateMark returns the value noted above or -1 << 16 if the provided\n+     inflateMark returns the value noted above, or -65536 if the provided\n    source stream state was inconsistent.\n */\n \n@@ -1048,9 +1114,9 @@ ZEXTERN int ZEXPORT inflateBack OF((z_streamp strm,\n    This routine would normally be used in a utility that reads zip or gzip\n    files and writes out uncompressed files.  The utility would decode the\n    header and process the trailer on its own, hence this routine expects only\n-   the raw deflate stream to decompress.  This is different from the normal\n-   behavior of inflate(), which expects either a zlib or gzip header and\n-   trailer around the deflate stream.\n+   the raw deflate stream to decompress.  This is different from the default\n+   behavior of inflate(), which expects a zlib header and trailer around the\n+   deflate stream.\n \n      inflateBack() uses two subroutines supplied by the caller that are then\n    called by inflateBack() for input and output.  inflateBack() calls those\n@@ -1059,12 +1125,12 @@ ZEXTERN int ZEXPORT inflateBack OF((z_streamp strm,\n    parameters and return types are defined above in the in_func and out_func\n    typedefs.  inflateBack() will call in(in_desc, &buf) which should return the\n    number of bytes of provided input, and a pointer to that input in buf.  If\n-   there is no input available, in() must return zero--buf is ignored in that\n-   case--and inflateBack() will return a buffer error.  inflateBack() will call\n-   out(out_desc, buf, len) to write the uncompressed data buf[0..len-1].  out()\n-   should return zero on success, or non-zero on failure.  If out() returns\n-   non-zero, inflateBack() will return with an error.  Neither in() nor out()\n-   are permitted to change the contents of the window provided to\n+   there is no input available, in() must return zero -- buf is ignored in that\n+   case -- and inflateBack() will return a buffer error.  inflateBack() will\n+   call out(out_desc, buf, len) to write the uncompressed data buf[0..len-1].\n+   out() should return zero on success, or non-zero on failure.  If out()\n+   returns non-zero, inflateBack() will return with an error.  Neither in() nor\n+   out() are permitted to change the contents of the window provided to\n    inflateBackInit(), which is also the buffer that out() uses to write from.\n    The length written by out() will be at most the window size.  Any non-zero\n    amount of input may be provided by in().\n@@ -1092,7 +1158,7 @@ ZEXTERN int ZEXPORT inflateBack OF((z_streamp strm,\n    using strm->next_in which will be Z_NULL only if in() returned an error.  If\n    strm->next_in is not Z_NULL, then the Z_BUF_ERROR was due to out() returning\n    non-zero.  (in() will always be called before out(), so strm->next_in is\n-   assured to be defined if out() returns non-zero.) Note that inflateBack()\n+   assured to be defined if out() returns non-zero.)  Note that inflateBack()\n    cannot return Z_OK.\n */\n \n@@ -1114,7 +1180,7 @@ ZEXTERN uLong ZEXPORT zlibCompileFlags OF((void));\n      7.6: size of z_off_t\n \n     Compiler, assembler, and debug options:\n-     8: DEBUG\n+     8: ZLIB_DEBUG\n      9: ASMV or ASMINF -- use ASM code\n      10: ZLIB_WINAPI -- exported functions use the WINAPI calling convention\n      11: 0 (reserved)\n@@ -1164,7 +1230,8 @@ ZEXTERN int ZEXPORT compress OF((Bytef *dest,   uLongf *destLen,\n    the byte length of the source buffer.  Upon entry, destLen is the total size\n    of the destination buffer, which must be at least the value returned by\n    compressBound(sourceLen).  Upon exit, destLen is the actual size of the\n-   compressed buffer.\n+   compressed data.  compress() is equivalent to compress2() with a level\n+   parameter of Z_DEFAULT_COMPRESSION.\n \n      compress returns Z_OK if success, Z_MEM_ERROR if there was not\n    enough memory, Z_BUF_ERROR if there was not enough room in the output\n@@ -1180,7 +1247,7 @@ ZEXTERN int ZEXPORT compress2 OF((Bytef *dest,   uLongf *destLen,\n    length of the source buffer.  Upon entry, destLen is the total size of the\n    destination buffer, which must be at least the value returned by\n    compressBound(sourceLen).  Upon exit, destLen is the actual size of the\n-   compressed buffer.\n+   compressed data.\n \n      compress2 returns Z_OK if success, Z_MEM_ERROR if there was not enough\n    memory, Z_BUF_ERROR if there was not enough room in the output buffer,\n@@ -1203,7 +1270,7 @@ ZEXTERN int ZEXPORT uncompress OF((Bytef *dest,   uLongf *destLen,\n    uncompressed data.  (The size of the uncompressed data must have been saved\n    previously by the compressor and transmitted to the decompressor by some\n    mechanism outside the scope of this compression library.) Upon exit, destLen\n-   is the actual size of the uncompressed buffer.\n+   is the actual size of the uncompressed data.\n \n      uncompress returns Z_OK if success, Z_MEM_ERROR if there was not\n    enough memory, Z_BUF_ERROR if there was not enough room in the output\n@@ -1212,6 +1279,14 @@ ZEXTERN int ZEXPORT uncompress OF((Bytef *dest,   uLongf *destLen,\n    buffer with the uncompressed data up to that point.\n */\n \n+ZEXTERN int ZEXPORT uncompress2 OF((Bytef *dest,   uLongf *destLen,\n+                                    const Bytef *source, uLong *sourceLen));\n+/*\n+     Same as uncompress, except that sourceLen is a pointer, where the\n+   length of the source is *sourceLen.  On return, *sourceLen is the number of\n+   source bytes consumed.\n+*/\n+\n                         /* gzip file access functions */\n \n /*\n@@ -1290,10 +1365,9 @@ ZEXTERN int ZEXPORT gzbuffer OF((gzFile file, unsigned size));\n    default buffer size is 8192 bytes.  This function must be called after\n    gzopen() or gzdopen(), and before any other calls that read or write the\n    file.  The buffer memory allocation is always deferred to the first read or\n-   write.  Two buffers are allocated, either both of the specified size when\n-   writing, or one of the specified size and the other twice that size when\n-   reading.  A larger buffer size of, for example, 64K or 128K bytes will\n-   noticeably increase the speed of decompression (reading).\n+   write.  Three times that size in buffer space is allocated.  A larger buffer\n+   size of, for example, 64K or 128K bytes will noticeably increase the speed\n+   of decompression (reading).\n \n      The new buffer size also affects the maximum length for gzprintf().\n \n@@ -1304,10 +1378,12 @@ ZEXTERN int ZEXPORT gzbuffer OF((gzFile file, unsigned size));\n ZEXTERN int ZEXPORT gzsetparams OF((gzFile file, int level, int strategy));\n /*\n      Dynamically update the compression level or strategy.  See the description\n-   of deflateInit2 for the meaning of these parameters.\n+   of deflateInit2 for the meaning of these parameters.  Previously provided\n+   data is flushed before the parameter change.\n \n-     gzsetparams returns Z_OK if success, or Z_STREAM_ERROR if the file was not\n-   opened for writing.\n+     gzsetparams returns Z_OK if success, Z_STREAM_ERROR if the file was not\n+   opened for writing, Z_ERRNO if there is an error writing the flushed data,\n+   or Z_MEM_ERROR if there is a memory allocation error.\n */\n \n ZEXTERN int ZEXPORT gzread OF((gzFile file, voidp buf, unsigned len));\n@@ -1335,7 +1411,35 @@ ZEXTERN int ZEXPORT gzread OF((gzFile file, voidp buf, unsigned len));\n    case.\n \n      gzread returns the number of uncompressed bytes actually read, less than\n-   len for end of file, or -1 for error.\n+   len for end of file, or -1 for error.  If len is too large to fit in an int,\n+   then nothing is read, -1 is returned, and the error state is set to\n+   Z_STREAM_ERROR.\n+*/\n+\n+ZEXTERN z_size_t ZEXPORT gzfread OF((voidp buf, z_size_t size, z_size_t nitems,\n+                                     gzFile file));\n+/*\n+     Read up to nitems items of size size from file to buf, otherwise operating\n+   as gzread() does.  This duplicates the interface of stdio's fread(), with\n+   size_t request and return types.  If the library defines size_t, then\n+   z_size_t is identical to size_t.  If not, then z_size_t is an unsigned\n+   integer type that can contain a pointer.\n+\n+     gzfread() returns the number of full items read of size size, or zero if\n+   the end of the file was reached and a full item could not be read, or if\n+   there was an error.  gzerror() must be consulted if zero is returned in\n+   order to determine if there was an error.  If the multiplication of size and\n+   nitems overflows, i.e. the product does not fit in a z_size_t, then nothing\n+   is read, zero is returned, and the error state is set to Z_STREAM_ERROR.\n+\n+     In the event that the end of file is reached and only a partial item is\n+   available at the end, i.e. the remaining uncompressed data length is not a\n+   multiple of size, then the final partial item is nevetheless read into buf\n+   and the end-of-file flag is set.  The length of the partial item read is not\n+   provided, but could be inferred from the result of gztell().  This behavior\n+   is the same as the behavior of fread() implementations in common libraries,\n+   but it prevents the direct use of gzfread() to read a concurrently written\n+   file, reseting and retrying on end-of-file, when size is not 1.\n */\n \n ZEXTERN int ZEXPORT gzwrite OF((gzFile file,\n@@ -1346,19 +1450,33 @@ ZEXTERN int ZEXPORT gzwrite OF((gzFile file,\n    error.\n */\n \n+ZEXTERN z_size_t ZEXPORT gzfwrite OF((voidpc buf, z_size_t size,\n+                                      z_size_t nitems, gzFile file));\n+/*\n+     gzfwrite() writes nitems items of size size from buf to file, duplicating\n+   the interface of stdio's fwrite(), with size_t request and return types.  If\n+   the library defines size_t, then z_size_t is identical to size_t.  If not,\n+   then z_size_t is an unsigned integer type that can contain a pointer.\n+\n+     gzfwrite() returns the number of full items written of size size, or zero\n+   if there was an error.  If the multiplication of size and nitems overflows,\n+   i.e. the product does not fit in a z_size_t, then nothing is written, zero\n+   is returned, and the error state is set to Z_STREAM_ERROR.\n+*/\n+\n ZEXTERN int ZEXPORTVA gzprintf Z_ARG((gzFile file, const char *format, ...));\n /*\n      Converts, formats, and writes the arguments to the compressed file under\n    control of the format string, as in fprintf.  gzprintf returns the number of\n-   uncompressed bytes actually written, or 0 in case of error.  The number of\n-   uncompressed bytes written is limited to 8191, or one less than the buffer\n-   size given to gzbuffer().  The caller should assure that this limit is not\n-   exceeded.  If it is exceeded, then gzprintf() will return an error (0) with\n-   nothing written.  In this case, there may also be a buffer overflow with\n-   unpredictable consequences, which is possible only if zlib was compiled with\n-   the insecure functions sprintf() or vsprintf() because the secure snprintf()\n-   or vsnprintf() functions were not available.  This can be determined using\n-   zlibCompileFlags().\n+   uncompressed bytes actually written, or a negative zlib error code in case\n+   of error.  The number of uncompressed bytes written is limited to 8191, or\n+   one less than the buffer size given to gzbuffer().  The caller should assure\n+   that this limit is not exceeded.  If it is exceeded, then gzprintf() will\n+   return an error (0) with nothing written.  In this case, there may also be a\n+   buffer overflow with unpredictable consequences, which is possible only if\n+   zlib was compiled with the insecure functions sprintf() or vsprintf()\n+   because the secure snprintf() or vsnprintf() functions were not available.\n+   This can be determined using zlibCompileFlags().\n */\n \n ZEXTERN int ZEXPORT gzputs OF((gzFile file, const char *s));\n@@ -1418,7 +1536,7 @@ ZEXTERN int ZEXPORT gzflush OF((gzFile file, int flush));\n      If the flush parameter is Z_FINISH, the remaining data is written and the\n    gzip stream is completed in the output.  If gzwrite() is called again, a new\n    gzip stream will be started in the output.  gzread() is able to read such\n-   concatented gzip streams.\n+   concatenated gzip streams.\n \n      gzflush should be called only when strictly necessary because it will\n    degrade compression if called too often.\n@@ -1572,7 +1690,7 @@ ZEXTERN uLong ZEXPORT adler32 OF((uLong adler, const Bytef *buf, uInt len));\n    return the updated checksum.  If buf is Z_NULL, this function returns the\n    required initial value for the checksum.\n \n-     An Adler-32 checksum is almost as reliable as a CRC32 but can be computed\n+     An Adler-32 checksum is almost as reliable as a CRC-32 but can be computed\n    much faster.\n \n    Usage example:\n@@ -1585,6 +1703,12 @@ ZEXTERN uLong ZEXPORT adler32 OF((uLong adler, const Bytef *buf, uInt len));\n      if (adler != original_adler) error();\n */\n \n+ZEXTERN uLong ZEXPORT adler32_z OF((uLong adler, const Bytef *buf,\n+                                    z_size_t len));\n+/*\n+     Same as adler32(), but with a size_t length.\n+*/\n+\n /*\n ZEXTERN uLong ZEXPORT adler32_combine OF((uLong adler1, uLong adler2,\n                                           z_off_t len2));\n@@ -1614,6 +1738,12 @@ ZEXTERN uLong ZEXPORT crc32   OF((uLong crc, const Bytef *buf, uInt len));\n      if (crc != original_crc) error();\n */\n \n+ZEXTERN uLong ZEXPORT crc32_z OF((uLong adler, const Bytef *buf,\n+                                  z_size_t len));\n+/*\n+     Same as crc32(), but with a size_t length.\n+*/\n+\n /*\n ZEXTERN uLong ZEXPORT crc32_combine OF((uLong crc1, uLong crc2, z_off_t len2));\n \n@@ -1644,19 +1774,35 @@ ZEXTERN int ZEXPORT inflateBackInit_ OF((z_streamp strm, int windowBits,\n                                          unsigned char FAR *window,\n                                          const char *version,\n                                          int stream_size));\n-#define deflateInit(strm, level) \\\n-        deflateInit_((strm), (level), ZLIB_VERSION, (int)sizeof(z_stream))\n-#define inflateInit(strm) \\\n-        inflateInit_((strm), ZLIB_VERSION, (int)sizeof(z_stream))\n-#define deflateInit2(strm, level, method, windowBits, memLevel, strategy) \\\n-        deflateInit2_((strm),(level),(method),(windowBits),(memLevel),\\\n-                      (strategy), ZLIB_VERSION, (int)sizeof(z_stream))\n-#define inflateInit2(strm, windowBits) \\\n-        inflateInit2_((strm), (windowBits), ZLIB_VERSION, \\\n-                      (int)sizeof(z_stream))\n-#define inflateBackInit(strm, windowBits, window) \\\n-        inflateBackInit_((strm), (windowBits), (window), \\\n-                      ZLIB_VERSION, (int)sizeof(z_stream))\n+#ifdef Z_PREFIX_SET\n+#  define z_deflateInit(strm, level) \\\n+          deflateInit_((strm), (level), ZLIB_VERSION, (int)sizeof(z_stream))\n+#  define z_inflateInit(strm) \\\n+          inflateInit_((strm), ZLIB_VERSION, (int)sizeof(z_stream))\n+#  define z_deflateInit2(strm, level, method, windowBits, memLevel, strategy) \\\n+          deflateInit2_((strm),(level),(method),(windowBits),(memLevel),\\\n+                        (strategy), ZLIB_VERSION, (int)sizeof(z_stream))\n+#  define z_inflateInit2(strm, windowBits) \\\n+          inflateInit2_((strm), (windowBits), ZLIB_VERSION, \\\n+                        (int)sizeof(z_stream))\n+#  define z_inflateBackInit(strm, windowBits, window) \\\n+          inflateBackInit_((strm), (windowBits), (window), \\\n+                           ZLIB_VERSION, (int)sizeof(z_stream))\n+#else\n+#  define deflateInit(strm, level) \\\n+          deflateInit_((strm), (level), ZLIB_VERSION, (int)sizeof(z_stream))\n+#  define inflateInit(strm) \\\n+          inflateInit_((strm), ZLIB_VERSION, (int)sizeof(z_stream))\n+#  define deflateInit2(strm, level, method, windowBits, memLevel, strategy) \\\n+          deflateInit2_((strm),(level),(method),(windowBits),(memLevel),\\\n+                        (strategy), ZLIB_VERSION, (int)sizeof(z_stream))\n+#  define inflateInit2(strm, windowBits) \\\n+          inflateInit2_((strm), (windowBits), ZLIB_VERSION, \\\n+                        (int)sizeof(z_stream))\n+#  define inflateBackInit(strm, windowBits, window) \\\n+          inflateBackInit_((strm), (windowBits), (window), \\\n+                           ZLIB_VERSION, (int)sizeof(z_stream))\n+#endif\n \n #ifndef Z_SOLO\n \n@@ -1676,10 +1822,10 @@ ZEXTERN int ZEXPORT gzgetc_ OF((gzFile file));  /* backward compatibility */\n #ifdef Z_PREFIX_SET\n #  undef z_gzgetc\n #  define z_gzgetc(g) \\\n-          ((g)->have ? ((g)->have--, (g)->pos++, *((g)->next)++) : gzgetc(g))\n+          ((g)->have ? ((g)->have--, (g)->pos++, *((g)->next)++) : (gzgetc)(g))\n #else\n #  define gzgetc(g) \\\n-          ((g)->have ? ((g)->have--, (g)->pos++, *((g)->next)++) : gzgetc(g))\n+          ((g)->have ? ((g)->have--, (g)->pos++, *((g)->next)++) : (gzgetc)(g))\n #endif\n \n /* provide 64-bit offset functions if _LARGEFILE64_SOURCE defined, and/or\n@@ -1737,19 +1883,16 @@ ZEXTERN int ZEXPORT gzgetc_ OF((gzFile file));  /* backward compatibility */\n \n #endif /* !Z_SOLO */\n \n-/* hack for buggy compilers */\n-#if !defined(ZUTIL_H) && !defined(NO_DUMMY_DECL)\n-    struct internal_state {int dummy;};\n-#endif\n-\n /* undocumented functions */\n ZEXTERN const char   * ZEXPORT zError           OF((int));\n ZEXTERN int            ZEXPORT inflateSyncPoint OF((z_streamp));\n ZEXTERN const z_crc_t FAR * ZEXPORT get_crc_table    OF((void));\n ZEXTERN int            ZEXPORT inflateUndermine OF((z_streamp, int));\n+ZEXTERN int            ZEXPORT inflateValidate OF((z_streamp, int));\n+ZEXTERN unsigned long  ZEXPORT inflateCodesUsed OF ((z_streamp));\n ZEXTERN int            ZEXPORT inflateResetKeep OF((z_streamp));\n ZEXTERN int            ZEXPORT deflateResetKeep OF((z_streamp));\n-#if defined(_WIN32) && !defined(Z_SOLO)\n+#if (defined(_WIN32) || defined(__CYGWIN__)) && !defined(Z_SOLO)\n ZEXTERN gzFile         ZEXPORT gzopen_w OF((const wchar_t *path,\n                                             const char *mode));\n #endif"}, {"sha": "40fa9db2bce3514fc4abe46eca4ea77931173e9e", "filename": "zlib/zlib.map", "status": "modified", "additions": 94, "deletions": 83, "changes": 177, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fzlib.map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fzlib.map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fzlib.map?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,83 +1,94 @@\n-ZLIB_1.2.0 {\n-  global:\n-    compressBound;\n-    deflateBound;\n-    inflateBack;\n-    inflateBackEnd;\n-    inflateBackInit_;\n-    inflateCopy;\n-  local:\n-    deflate_copyright;\n-    inflate_copyright;\n-    inflate_fast;\n-    inflate_table;\n-    zcalloc;\n-    zcfree;\n-    z_errmsg;\n-    gz_error;\n-    gz_intmax;\n-    _*;\n-};\n-\n-ZLIB_1.2.0.2 {\n-    gzclearerr;\n-    gzungetc;\n-    zlibCompileFlags;\n-} ZLIB_1.2.0;\n-\n-ZLIB_1.2.0.8 {\n-    deflatePrime;\n-} ZLIB_1.2.0.2;\n-\n-ZLIB_1.2.2 {\n-    adler32_combine;\n-    crc32_combine;\n-    deflateSetHeader;\n-    inflateGetHeader;\n-} ZLIB_1.2.0.8;\n-\n-ZLIB_1.2.2.3 {\n-    deflateTune;\n-    gzdirect;\n-} ZLIB_1.2.2;\n-\n-ZLIB_1.2.2.4 {\n-    inflatePrime;\n-} ZLIB_1.2.2.3;\n-\n-ZLIB_1.2.3.3 {\n-    adler32_combine64;\n-    crc32_combine64;\n-    gzopen64;\n-    gzseek64;\n-    gztell64;\n-    inflateUndermine;\n-} ZLIB_1.2.2.4;\n-\n-ZLIB_1.2.3.4 {\n-    inflateReset2;\n-    inflateMark;\n-} ZLIB_1.2.3.3;\n-\n-ZLIB_1.2.3.5 {\n-    gzbuffer;\n-    gzoffset;\n-    gzoffset64;\n-    gzclose_r;\n-    gzclose_w;\n-} ZLIB_1.2.3.4;\n-\n-ZLIB_1.2.5.1 {\n-    deflatePending;\n-} ZLIB_1.2.3.5;\n-\n-ZLIB_1.2.5.2 {\n-    deflateResetKeep;\n-    gzgetc_;\n-    inflateResetKeep;\n-} ZLIB_1.2.5.1;\n-\n-ZLIB_1.2.7.1 {\n-    inflateGetDictionary;\n-    gzvprintf;\n-} ZLIB_1.2.5.2;\n+ZLIB_1.2.0 {\r\n+  global:\r\n+    compressBound;\r\n+    deflateBound;\r\n+    inflateBack;\r\n+    inflateBackEnd;\r\n+    inflateBackInit_;\r\n+    inflateCopy;\r\n+  local:\r\n+    deflate_copyright;\r\n+    inflate_copyright;\r\n+    inflate_fast;\r\n+    inflate_table;\r\n+    zcalloc;\r\n+    zcfree;\r\n+    z_errmsg;\r\n+    gz_error;\r\n+    gz_intmax;\r\n+    _*;\r\n+};\r\n+\r\n+ZLIB_1.2.0.2 {\r\n+    gzclearerr;\r\n+    gzungetc;\r\n+    zlibCompileFlags;\r\n+} ZLIB_1.2.0;\r\n+\r\n+ZLIB_1.2.0.8 {\r\n+    deflatePrime;\r\n+} ZLIB_1.2.0.2;\r\n+\r\n+ZLIB_1.2.2 {\r\n+    adler32_combine;\r\n+    crc32_combine;\r\n+    deflateSetHeader;\r\n+    inflateGetHeader;\r\n+} ZLIB_1.2.0.8;\r\n+\r\n+ZLIB_1.2.2.3 {\r\n+    deflateTune;\r\n+    gzdirect;\r\n+} ZLIB_1.2.2;\r\n+\r\n+ZLIB_1.2.2.4 {\r\n+    inflatePrime;\r\n+} ZLIB_1.2.2.3;\r\n+\r\n+ZLIB_1.2.3.3 {\r\n+    adler32_combine64;\r\n+    crc32_combine64;\r\n+    gzopen64;\r\n+    gzseek64;\r\n+    gztell64;\r\n+    inflateUndermine;\r\n+} ZLIB_1.2.2.4;\r\n+\r\n+ZLIB_1.2.3.4 {\r\n+    inflateReset2;\r\n+    inflateMark;\r\n+} ZLIB_1.2.3.3;\r\n+\r\n+ZLIB_1.2.3.5 {\r\n+    gzbuffer;\r\n+    gzoffset;\r\n+    gzoffset64;\r\n+    gzclose_r;\r\n+    gzclose_w;\r\n+} ZLIB_1.2.3.4;\r\n+\r\n+ZLIB_1.2.5.1 {\r\n+    deflatePending;\r\n+} ZLIB_1.2.3.5;\r\n+\r\n+ZLIB_1.2.5.2 {\r\n+    deflateResetKeep;\r\n+    gzgetc_;\r\n+    inflateResetKeep;\r\n+} ZLIB_1.2.5.1;\r\n+\r\n+ZLIB_1.2.7.1 {\r\n+    inflateGetDictionary;\r\n+    gzvprintf;\r\n+} ZLIB_1.2.5.2;\r\n+\r\n+ZLIB_1.2.9 {\r\n+    inflateCodesUsed;\r\n+    inflateValidate;\r\n+    uncompress2;\r\n+    gzfread;\r\n+    gzfwrite;\r\n+    deflateGetDictionary;\r\n+    adler32_z;\r\n+    crc32_z;\r\n+} ZLIB_1.2.7.1;\r"}, {"sha": "166d8779cc2849273c7ca9fca338bc1bc133a613", "filename": "zlib/zutil.c", "status": "modified", "additions": 25, "deletions": 24, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fzutil.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fzutil.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fzutil.c?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,5 +1,5 @@\n /* zutil.c -- target dependent utility functions for the compression library\n- * Copyright (C) 1995-2005, 2010, 2011, 2012 Jean-loup Gailly.\n+ * Copyright (C) 1995-2005, 2010, 2011, 2012, 2016 Jean-loup Gailly\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -10,21 +10,18 @@\n #  include \"gzguts.h\"\n #endif\n \n-#ifndef NO_DUMMY_DECL\n-struct internal_state      {int dummy;}; /* for buggy compilers */\n-#endif\n-\n z_const char * const z_errmsg[10] = {\n-\"need dictionary\",     /* Z_NEED_DICT       2  */\n-\"stream end\",          /* Z_STREAM_END      1  */\n-\"\",                    /* Z_OK              0  */\n-\"file error\",          /* Z_ERRNO         (-1) */\n-\"stream error\",        /* Z_STREAM_ERROR  (-2) */\n-\"data error\",          /* Z_DATA_ERROR    (-3) */\n-\"insufficient memory\", /* Z_MEM_ERROR     (-4) */\n-\"buffer error\",        /* Z_BUF_ERROR     (-5) */\n-\"incompatible version\",/* Z_VERSION_ERROR (-6) */\n-\"\"};\n+    (z_const char *)\"need dictionary\",     /* Z_NEED_DICT       2  */\n+    (z_const char *)\"stream end\",          /* Z_STREAM_END      1  */\n+    (z_const char *)\"\",                    /* Z_OK              0  */\n+    (z_const char *)\"file error\",          /* Z_ERRNO         (-1) */\n+    (z_const char *)\"stream error\",        /* Z_STREAM_ERROR  (-2) */\n+    (z_const char *)\"data error\",          /* Z_DATA_ERROR    (-3) */\n+    (z_const char *)\"insufficient memory\", /* Z_MEM_ERROR     (-4) */\n+    (z_const char *)\"buffer error\",        /* Z_BUF_ERROR     (-5) */\n+    (z_const char *)\"incompatible version\",/* Z_VERSION_ERROR (-6) */\n+    (z_const char *)\"\"\n+};\n \n \n const char * ZEXPORT zlibVersion()\n@@ -61,7 +58,7 @@ uLong ZEXPORT zlibCompileFlags()\n     case 8:     flags += 2 << 6;        break;\n     default:    flags += 3 << 6;\n     }\n-#ifdef DEBUG\n+#ifdef ZLIB_DEBUG\n     flags += 1 << 8;\n #endif\n #if defined(ASMV) || defined(ASMINF)\n@@ -115,8 +112,8 @@ uLong ZEXPORT zlibCompileFlags()\n     return flags;\n }\n \n-#ifdef DEBUG\n-\n+#ifdef ZLIB_DEBUG\n+#include <stdlib.h>\n #  ifndef verbose\n #    define verbose 0\n #  endif\n@@ -219,9 +216,11 @@ local ptr_table table[MAX_PTR];\n \n voidpf ZLIB_INTERNAL zcalloc (voidpf opaque, unsigned items, unsigned size)\n {\n-    voidpf buf = opaque; /* just to make some compilers happy */\n+    voidpf buf;\n     ulg bsize = (ulg)items*size;\n \n+    (void)opaque;\n+\n     /* If we allocate less than 65520 bytes, we assume that farmalloc\n      * will return a usable pointer which doesn't have to be normalized.\n      */\n@@ -244,6 +243,9 @@ voidpf ZLIB_INTERNAL zcalloc (voidpf opaque, unsigned items, unsigned size)\n void ZLIB_INTERNAL zcfree (voidpf opaque, voidpf ptr)\n {\n     int n;\n+\n+    (void)opaque;\n+\n     if (*(ush*)&ptr != 0) { /* object < 64K */\n         farfree(ptr);\n         return;\n@@ -259,7 +261,6 @@ void ZLIB_INTERNAL zcfree (voidpf opaque, voidpf ptr)\n         next_ptr--;\n         return;\n     }\n-    ptr = opaque; /* just to make some compilers happy */\n     Assert(0, \"zcfree: ptr not found\");\n }\n \n@@ -278,13 +279,13 @@ void ZLIB_INTERNAL zcfree (voidpf opaque, voidpf ptr)\n \n voidpf ZLIB_INTERNAL zcalloc (voidpf opaque, uInt items, uInt size)\n {\n-    if (opaque) opaque = 0; /* to make compiler happy */\n+    (void)opaque;\n     return _halloc((long)items, size);\n }\n \n void ZLIB_INTERNAL zcfree (voidpf opaque, voidpf ptr)\n {\n-    if (opaque) opaque = 0; /* to make compiler happy */\n+    (void)opaque;\n     _hfree(ptr);\n }\n \n@@ -306,7 +307,7 @@ voidpf ZLIB_INTERNAL zcalloc (opaque, items, size)\n     unsigned items;\n     unsigned size;\n {\n-    if (opaque) items += size - size; /* make compiler happy */\n+    (void)opaque;\n     return sizeof(uInt) > 2 ? (voidpf)malloc(items * size) :\n                               (voidpf)calloc(items, size);\n }\n@@ -315,8 +316,8 @@ void ZLIB_INTERNAL zcfree (opaque, ptr)\n     voidpf opaque;\n     voidpf ptr;\n {\n+    (void)opaque;\n     free(ptr);\n-    if (opaque) return; /* make compiler happy */\n }\n \n #endif /* MY_ZCALLOC */"}, {"sha": "4b596adf6295e2cea5266de15353f66d90d6f2b4", "filename": "zlib/zutil.h", "status": "modified", "additions": 35, "deletions": 17, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fzutil.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7aa844d134204e302acc0c3f36f416656491305/zlib%2Fzutil.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fzutil.h?ref=b7aa844d134204e302acc0c3f36f416656491305", "patch": "@@ -1,5 +1,5 @@\n /* zutil.h -- internal interface and configuration of the compression library\n- * Copyright (C) 1995-2013 Jean-loup Gailly.\n+ * Copyright (C) 1995-2016 Jean-loup Gailly, Mark Adler\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -36,7 +36,9 @@\n #ifndef local\n #  define local static\n #endif\n-/* compile with -Dlocal if your debugger can't find static symbols */\n+/* since \"static\" is used to mean two completely different things in C, we\n+   define \"local\" for the non-static meaning of \"static\", for readability\n+   (compile with -Dlocal if your debugger can't find static symbols) */\n \n typedef unsigned char  uch;\n typedef uch FAR uchf;\n@@ -98,28 +100,38 @@ extern z_const char * const z_errmsg[10]; /* indexed by 2-zlib_error */\n #endif\n \n #ifdef AMIGA\n-#  define OS_CODE  0x01\n+#  define OS_CODE  1\n #endif\n \n #if defined(VAXC) || defined(VMS)\n-#  define OS_CODE  0x02\n+#  define OS_CODE  2\n #  define F_OPEN(name, mode) \\\n      fopen((name), (mode), \"mbc=60\", \"ctx=stm\", \"rfm=fix\", \"mrs=512\")\n #endif\n \n+#ifdef __370__\n+#  if __TARGET_LIB__ < 0x20000000\n+#    define OS_CODE 4\n+#  elif __TARGET_LIB__ < 0x40000000\n+#    define OS_CODE 11\n+#  else\n+#    define OS_CODE 8\n+#  endif\n+#endif\n+\n #if defined(ATARI) || defined(atarist)\n-#  define OS_CODE  0x05\n+#  define OS_CODE  5\n #endif\n \n #ifdef OS2\n-#  define OS_CODE  0x06\n+#  define OS_CODE  6\n #  if defined(M_I86) && !defined(Z_SOLO)\n #    include <malloc.h>\n #  endif\n #endif\n \n #if defined(MACOS) || defined(TARGET_OS_MAC)\n-#  define OS_CODE  0x07\n+#  define OS_CODE  7\n #  ifndef Z_SOLO\n #    if defined(__MWERKS__) && __dest_os != __be_os && __dest_os != __win32_os\n #      include <unix.h> /* for fdopen */\n@@ -131,18 +143,24 @@ extern z_const char * const z_errmsg[10]; /* indexed by 2-zlib_error */\n #  endif\n #endif\n \n-#ifdef TOPS20\n-#  define OS_CODE  0x0a\n+#ifdef __acorn\n+#  define OS_CODE 13\n #endif\n \n-#ifdef WIN32\n-#  ifndef __CYGWIN__  /* Cygwin is Unix, not Win32 */\n-#    define OS_CODE  0x0b\n-#  endif\n+#if defined(WIN32) && !defined(__CYGWIN__)\n+#  define OS_CODE  10\n+#endif\n+\n+#ifdef _BEOS_\n+#  define OS_CODE  16\n+#endif\n+\n+#ifdef __TOS_OS400__\n+#  define OS_CODE 18\n #endif\n \n-#ifdef __50SERIES /* Prime/PRIMOS */\n-#  define OS_CODE  0x0f\n+#ifdef __APPLE__\n+#  define OS_CODE 19\n #endif\n \n #if defined(_BEOS_) || defined(RISCOS)\n@@ -177,7 +195,7 @@ extern z_const char * const z_errmsg[10]; /* indexed by 2-zlib_error */\n         /* common defaults */\n \n #ifndef OS_CODE\n-#  define OS_CODE  0x03  /* assume Unix */\n+#  define OS_CODE  3     /* assume Unix */\n #endif\n \n #ifndef F_OPEN\n@@ -216,7 +234,7 @@ extern z_const char * const z_errmsg[10]; /* indexed by 2-zlib_error */\n #endif\n \n /* Diagnostic functions */\n-#ifdef DEBUG\n+#ifdef ZLIB_DEBUG\n #  include <stdio.h>\n    extern int ZLIB_INTERNAL z_verbose;\n    extern void ZLIB_INTERNAL z_error OF((char *m));"}]}