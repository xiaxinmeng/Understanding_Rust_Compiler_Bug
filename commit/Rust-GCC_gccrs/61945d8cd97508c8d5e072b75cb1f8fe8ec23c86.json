{"sha": "61945d8cd97508c8d5e072b75cb1f8fe8ec23c86", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE5NDVkOGNkOTc1MDhjOGQ1ZTA3MmI3NWNiMWY4ZmU4ZWMyM2M4Ng==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2008-07-16T10:45:57Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2008-07-16T10:45:57Z"}, "message": "re PR target/36827 (newlib:libm/math/k_rem_pio2.c fails in reload)\n\n\tPR target/36827\n\t* config/m32c/m32c.c (BIG_FB_ADJ): Move definition earlier.\n\t(m32c_legitimate_address_p): Handle \"++rii\" addresses created by\n\tm32c_legitimize_reload_address.\n\nFrom-SVN: r137875", "tree": {"sha": "f842ac2d1b52fa476ef5bdf787923b58a01f8127", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f842ac2d1b52fa476ef5bdf787923b58a01f8127"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61945d8cd97508c8d5e072b75cb1f8fe8ec23c86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61945d8cd97508c8d5e072b75cb1f8fe8ec23c86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61945d8cd97508c8d5e072b75cb1f8fe8ec23c86", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61945d8cd97508c8d5e072b75cb1f8fe8ec23c86/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "751a3fcab3942ec698d97cbb1028dbe12107da1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/751a3fcab3942ec698d97cbb1028dbe12107da1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/751a3fcab3942ec698d97cbb1028dbe12107da1a"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "15e82057f1761732d3d48a3c40441bf5d4f6b439", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61945d8cd97508c8d5e072b75cb1f8fe8ec23c86/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61945d8cd97508c8d5e072b75cb1f8fe8ec23c86/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=61945d8cd97508c8d5e072b75cb1f8fe8ec23c86", "patch": "@@ -1,3 +1,10 @@\n+2008-07-16  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR target/36827\n+\t* config/m32c/m32c.c (BIG_FB_ADJ): Move definition earlier.\n+\t(m32c_legitimate_address_p): Handle \"++rii\" addresses created by\n+\tm32c_legitimize_reload_address.\n+\n 2007-07-16  Rafael Avila de Espindola  <espindola@google.com>\n \n        * c-decl.c (merge_decls): Keep DECL_SOURCE_LOCATION and"}, {"sha": "ef6ba16b5a92b4426ecc12d4d8fa8ce79eba6636", "filename": "gcc/config/m32c/m32c.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61945d8cd97508c8d5e072b75cb1f8fe8ec23c86/gcc%2Fconfig%2Fm32c%2Fm32c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61945d8cd97508c8d5e072b75cb1f8fe8ec23c86/gcc%2Fconfig%2Fm32c%2Fm32c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Fm32c.c?ref=61945d8cd97508c8d5e072b75cb1f8fe8ec23c86", "patch": "@@ -1778,6 +1778,8 @@ m32c_init_libfuncs (void)\n \n /* Addressing Modes */\n \n+#define BIG_FB_ADJ 0\n+\n /* Used by GO_IF_LEGITIMATE_ADDRESS.  The r8c/m32c family supports a\n    wide range of non-orthogonal addressing modes, including the\n    ability to double-indirect on *some* of them.  Not all insns\n@@ -1895,6 +1897,17 @@ m32c_legitimate_address_p (enum machine_mode mode, rtx x, int strict)\n \t  return 0;\n \t}\n     }\n+  if (RTX_IS (\"++rii\"))\n+    {\n+      rtx reg = patternr[2];\n+      HOST_WIDE_INT offs = INTVAL (patternr[3]);\n+\n+      /* Avoid reloads for addresses generated by\n+\t m32c_legitimize_reload_address being generated by\n+\t find_reloads_subreg_address.  */\n+      if (REGNO (reg) == FB_REGNO && offs == -BIG_FB_ADJ)\n+\treturn 1;\n+    }\n   return 0;\n }\n \n@@ -1942,8 +1955,6 @@ m32c_reg_ok_for_base_p (rtx x, int strict)\n    frame, so the third case seems best.  Note that we subtract the\n    zero, but detect that in the addhi3 pattern.  */\n \n-#define BIG_FB_ADJ 0\n-\n /* Implements LEGITIMIZE_ADDRESS.  The only address we really have to\n    worry about is frame base offsets, as $fb has a limited\n    displacement range.  We deal with this by attempting to reload $fb"}]}