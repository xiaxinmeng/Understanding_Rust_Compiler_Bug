{"sha": "13c60208d0428ad14b4bd41a63a47d67bd35253f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTNjNjAyMDhkMDQyOGFkMTRiNGJkNDFhNjNhNDdkNjdiZDM1MjUzZg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-04-09T15:32:05Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-04-09T15:32:05Z"}, "message": "PR c++/85256 - ICE capturing pointer to VLA.\n\n\t* lambda.c (add_capture): Distinguish between variable-size and\n\tvariably-modified types.\n\nFrom-SVN: r259240", "tree": {"sha": "0e0706c24ed4dec8f73d5d0ffc1ccdc88426446d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e0706c24ed4dec8f73d5d0ffc1ccdc88426446d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13c60208d0428ad14b4bd41a63a47d67bd35253f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13c60208d0428ad14b4bd41a63a47d67bd35253f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13c60208d0428ad14b4bd41a63a47d67bd35253f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13c60208d0428ad14b4bd41a63a47d67bd35253f/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cca538a46e6a482af93cd75b76d357908f0cbd2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cca538a46e6a482af93cd75b76d357908f0cbd2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cca538a46e6a482af93cd75b76d357908f0cbd2f"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "c3751551517684b1a9141192977f9ca2246df750", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13c60208d0428ad14b4bd41a63a47d67bd35253f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13c60208d0428ad14b4bd41a63a47d67bd35253f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=13c60208d0428ad14b4bd41a63a47d67bd35253f", "patch": "@@ -1,3 +1,9 @@\n+2018-04-09  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/85256 - ICE capturing pointer to VLA.\n+\t* lambda.c (add_capture): Distinguish between variable-size and\n+\tvariably-modified types.\n+\n 2018-04-06  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/85214 - ICE with alias, generic lambda, constexpr if."}, {"sha": "e9b962a8f3316cab44bf676f349e3371e49c775e", "filename": "gcc/cp/lambda.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13c60208d0428ad14b4bd41a63a47d67bd35253f/gcc%2Fcp%2Flambda.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13c60208d0428ad14b4bd41a63a47d67bd35253f/gcc%2Fcp%2Flambda.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flambda.c?ref=13c60208d0428ad14b4bd41a63a47d67bd35253f", "patch": "@@ -554,13 +554,13 @@ add_capture (tree lambda, tree id, tree orig_init, bool by_reference_p,\n   else if (!dependent_type_p (type)\n \t   && variably_modified_type_p (type, NULL_TREE))\n     {\n-      error (\"capture of variable-size type %qT that is not an N3639 array \"\n+      sorry (\"capture of variably-modified type %qT that is not an N3639 array \"\n \t     \"of runtime bound\", type);\n       if (TREE_CODE (type) == ARRAY_TYPE\n \t  && variably_modified_type_p (TREE_TYPE (type), NULL_TREE))\n \tinform (input_location, \"because the array element type %qT has \"\n \t\t\"variable size\", TREE_TYPE (type));\n-      type = error_mark_node;\n+      return error_mark_node;\n     }\n   else\n     {"}, {"sha": "aee9694852d2d4f291ed11e525c38c76e94c856a", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-vla2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13c60208d0428ad14b4bd41a63a47d67bd35253f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-vla2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13c60208d0428ad14b4bd41a63a47d67bd35253f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-vla2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-vla2.C?ref=13c60208d0428ad14b4bd41a63a47d67bd35253f", "patch": "@@ -7,6 +7,6 @@ void f() {\n   int m = 1;\n   int d[n][m];\n   [&]() {\n-    return d[1];\t\t// { dg-error \"variabl\" }\n+    return d[1];\t\t// { dg-prune-output \"sorry\" }\n   }();\n }"}, {"sha": "eebdbcdbb93efa54513b10ab754ba84b99940488", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-vla3.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13c60208d0428ad14b4bd41a63a47d67bd35253f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-vla3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13c60208d0428ad14b4bd41a63a47d67bd35253f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-vla3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-vla3.C?ref=13c60208d0428ad14b4bd41a63a47d67bd35253f", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/85256\n+// { dg-do compile { target c++11 } }\n+// { dg-additional-options -Wno-vla }\n+\n+void foo(int i)\n+{\n+  int (*x)[i];\n+  [=]{ [=]{ 0 ? x : x; }; };\t// { dg-bogus \"sorry\" \"\" { xfail *-*-* } }\n+\n+}"}, {"sha": "afa5fac508d1839c3da42d2439eadc34dcc8a0f6", "filename": "gcc/testsuite/g++.dg/cpp1y/vla7.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13c60208d0428ad14b4bd41a63a47d67bd35253f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvla7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13c60208d0428ad14b4bd41a63a47d67bd35253f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvla7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvla7.C?ref=13c60208d0428ad14b4bd41a63a47d67bd35253f", "patch": "@@ -6,7 +6,7 @@ int main(int argc, char** argv)\n {\n   int x[1][argc];\n \n-  [&x](int i) {\t\t\t// { dg-error \"variable.size\" }\n-    x[0][i] = 0;\t     \t// { dg-prune-output \"assignment\" }\n+  [&x](int i) {\t\t\t// { dg-prune-output \"sorry\" }\n+    x[0][i] = 0;\t     \t// { dg-prune-output \"not captured\" }\n   }(5);\n }"}, {"sha": "2c5b3a5404e9665d630694a3f9080adcb362c581", "filename": "gcc/testsuite/g++.dg/cpp1y/vla9.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13c60208d0428ad14b4bd41a63a47d67bd35253f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvla9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13c60208d0428ad14b4bd41a63a47d67bd35253f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvla9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvla9.C?ref=13c60208d0428ad14b4bd41a63a47d67bd35253f", "patch": "@@ -25,7 +25,7 @@ int main(){\n     fa[0][1]=1.8;\n     auto fx=[&](){\n         for(int c=0; c<2; c++){\n-            printf(\"use me\", fa[0][c]);\t// { dg-error \"capture of variable-size type\" }\n+            printf(\"use me\", fa[0][c]);\t// { dg-prune-output \"sorry\" }\n         }\n     };\n     call(fx);"}]}