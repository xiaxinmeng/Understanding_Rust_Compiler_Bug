{"sha": "6f4454fcabc3449f787b86186accc9a64014242e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmY0NDU0ZmNhYmMzNDQ5Zjc4N2I4NjE4NmFjY2M5YTY0MDE0MjQyZQ==", "commit": {"author": {"name": "Ira Rosen", "email": "irar@il.ibm.com", "date": "2009-08-09T12:13:19Z"}, "committer": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2009-08-09T12:13:19Z"}, "message": "re PR tree-optimization/41008 (ICE in vect_is_simple_reduction, at tree-vect-loop.c:1708)\n\n\n\tPR tree-optimization/41008\n\t* tree-vect-loop.c (vect_is_simple_reduction): Get operands\n\tfrom condition only in case it's a comparison. Adjust checks.\n\nFrom-SVN: r150591", "tree": {"sha": "880e263ea8d9289591a085f2218e119f7dc29604", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/880e263ea8d9289591a085f2218e119f7dc29604"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f4454fcabc3449f787b86186accc9a64014242e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f4454fcabc3449f787b86186accc9a64014242e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f4454fcabc3449f787b86186accc9a64014242e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f4454fcabc3449f787b86186accc9a64014242e/comments", "author": {"login": "irar2", "id": 16818592, "node_id": "MDQ6VXNlcjE2ODE4NTky", "avatar_url": "https://avatars.githubusercontent.com/u/16818592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irar2", "html_url": "https://github.com/irar2", "followers_url": "https://api.github.com/users/irar2/followers", "following_url": "https://api.github.com/users/irar2/following{/other_user}", "gists_url": "https://api.github.com/users/irar2/gists{/gist_id}", "starred_url": "https://api.github.com/users/irar2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irar2/subscriptions", "organizations_url": "https://api.github.com/users/irar2/orgs", "repos_url": "https://api.github.com/users/irar2/repos", "events_url": "https://api.github.com/users/irar2/events{/privacy}", "received_events_url": "https://api.github.com/users/irar2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0a940ddd90f0c10c82ed5c08635d1de80bae4807", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a940ddd90f0c10c82ed5c08635d1de80bae4807", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a940ddd90f0c10c82ed5c08635d1de80bae4807"}], "stats": {"total": 49, "additions": 46, "deletions": 3}, "files": [{"sha": "f4a8a1400801d5712f9db69874cd137937443872", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4454fcabc3449f787b86186accc9a64014242e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4454fcabc3449f787b86186accc9a64014242e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6f4454fcabc3449f787b86186accc9a64014242e", "patch": "@@ -1,3 +1,9 @@\n+2009-08-09  Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/41008\n+\t* tree-vect-loop.c (vect_is_simple_reduction): Get operands\n+\tfrom condition only in case it's a comparison. Adjust checks.\t\n+\n 2009-08-09  Bernd Schmidt  <bernd.schmidt@analog.com>\n \n \t* tree-dfa.c (renumber_gimple_stmt_uids_in_blocks): New function."}, {"sha": "346cc709133e5abd6ae9f59f7876bb8843cbabe4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4454fcabc3449f787b86186accc9a64014242e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4454fcabc3449f787b86186accc9a64014242e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6f4454fcabc3449f787b86186accc9a64014242e", "patch": "@@ -1,3 +1,8 @@\n+2009-08-09  Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/41008\n+\t* gcc.dg/vect/O1-pr41008.c: New test.\n+\n 2009-08-05  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/40955"}, {"sha": "bbdea127ce82170101097260b61f4b6bb5555a20", "filename": "gcc/testsuite/gcc.dg/vect/O1-pr41008.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4454fcabc3449f787b86186accc9a64014242e/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2FO1-pr41008.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4454fcabc3449f787b86186accc9a64014242e/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2FO1-pr41008.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2FO1-pr41008.c?ref=6f4454fcabc3449f787b86186accc9a64014242e", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+\n+double heating[2][2];\n+\n+void foo (int, int);\n+\n+void map_do()\n+{\n+  int jsav, ksav, k, j;\n+\n+  for(k = 0; k < 2; k++)\n+    for(j = 0; j < 2; j++)\n+      if (heating[k][j] > 0.)\n+        {\n+          jsav = j;\n+          ksav = k;\n+        }\n+\n+  foo (jsav, ksav);\n+}\n+\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */\n+"}, {"sha": "b322213f10867ed135ce59dc19fd068f29e69a22", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4454fcabc3449f787b86186accc9a64014242e/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4454fcabc3449f787b86186accc9a64014242e/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=6f4454fcabc3449f787b86186accc9a64014242e", "patch": "@@ -1705,8 +1705,13 @@ vect_is_simple_reduction (loop_vec_info loop_info, gimple phi,\n           return NULL;\n         }\n \n-      op3 = TREE_OPERAND (TREE_OPERAND (gimple_assign_rhs1 (def_stmt), 0), 0);\n-      op4 = TREE_OPERAND (TREE_OPERAND (gimple_assign_rhs1 (def_stmt), 0), 1);\n+      op3 = TREE_OPERAND (gimple_assign_rhs1 (def_stmt), 0);\n+      if (COMPARISON_CLASS_P (op3))\n+        {\n+          op4 = TREE_OPERAND (op3, 1);\n+          op3 = TREE_OPERAND (op3, 0);\n+        }  \n+       \n       op1 = TREE_OPERAND (gimple_assign_rhs1 (def_stmt), 1);\n       op2 = TREE_OPERAND (gimple_assign_rhs1 (def_stmt), 2);\n \n@@ -1750,10 +1755,14 @@ vect_is_simple_reduction (loop_vec_info loop_info, gimple phi,\n           print_generic_expr (vect_dump, TREE_TYPE (op1), TDF_SLIM);\n           fprintf (vect_dump, \",\");\n           print_generic_expr (vect_dump, TREE_TYPE (op2), TDF_SLIM);\n-          if (op3 && op4)\n+          if (op3)\n             {\n               fprintf (vect_dump, \",\");\n               print_generic_expr (vect_dump, TREE_TYPE (op3), TDF_SLIM);\n+            }\n+\n+          if (op4)\n+            {\n               fprintf (vect_dump, \",\");\n               print_generic_expr (vect_dump, TREE_TYPE (op4), TDF_SLIM);\n             }"}]}