{"sha": "f955c4c4837a491a8e8c3962867f276a94125dde", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjk1NWM0YzQ4MzdhNDkxYThlOGMzOTYyODY3ZjI3NmE5NDEyNWRkZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-09-21T07:37:18Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-09-21T07:37:18Z"}, "message": "re PR tree-optimization/77621 (Internal compiler error for mtune=atom + msse2)\n\n2016-09-21  Richard Biener  <rguenther@suse.de>\n\tJakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/77621\n\t* tree-vect-data-refs.c (vect_analyze_data_ref_accesses): Split\n\tgroup at non-vectorizable stmts.\n\n\t* gcc.dg/pr77621.c: New testcase.\n\nCo-Authored-By: Jakub Jelinek <jakub@redhat.com>\n\nFrom-SVN: r240302", "tree": {"sha": "911145e7d1623298e8ba595ddad6269fe773491f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/911145e7d1623298e8ba595ddad6269fe773491f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f955c4c4837a491a8e8c3962867f276a94125dde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f955c4c4837a491a8e8c3962867f276a94125dde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f955c4c4837a491a8e8c3962867f276a94125dde", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f955c4c4837a491a8e8c3962867f276a94125dde/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "096506bb6e4bea8d0f8beafb5eff866e4a7ce3fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/096506bb6e4bea8d0f8beafb5eff866e4a7ce3fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/096506bb6e4bea8d0f8beafb5eff866e4a7ce3fe"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "35f6e3a2f32ca36569076334b4399b152a81589a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f955c4c4837a491a8e8c3962867f276a94125dde/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f955c4c4837a491a8e8c3962867f276a94125dde/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f955c4c4837a491a8e8c3962867f276a94125dde", "patch": "@@ -1,3 +1,10 @@\n+2016-09-21  Richard Biener  <rguenther@suse.de>\n+\tJakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/77621\n+\t* tree-vect-data-refs.c (vect_analyze_data_ref_accesses): Split\n+\tgroup at non-vectorizable stmts.\n+\n 2016-09-21  Kugan Vivekanandarajah  <kuganv@linaro.org>\n \n \tPR tree-optimization/72835"}, {"sha": "04613e4a0a85f2a8ca02b81b534b291fbc5b87d8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f955c4c4837a491a8e8c3962867f276a94125dde/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f955c4c4837a491a8e8c3962867f276a94125dde/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f955c4c4837a491a8e8c3962867f276a94125dde", "patch": "@@ -1,3 +1,9 @@\n+2016-09-21  Richard Biener  <rguenther@suse.de>\n+\tJakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/77621\n+\t* gcc.dg/pr77621.c: New testcase.\n+\n 2016-09-21  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/77657"}, {"sha": "e2804522a497bdb7e8432fcb50b327bdc4563823", "filename": "gcc/testsuite/gcc.dg/pr77621.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f955c4c4837a491a8e8c3962867f276a94125dde/gcc%2Ftestsuite%2Fgcc.dg%2Fpr77621.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f955c4c4837a491a8e8c3962867f276a94125dde/gcc%2Ftestsuite%2Fgcc.dg%2Fpr77621.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr77621.c?ref=f955c4c4837a491a8e8c3962867f276a94125dde", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\" } */\n+/* { dg-additional-options \"-mtune=atom -msse2\" { target i?86-*-* x86_64-*-* } } */\n+\n+void\n+foo (double *x, int *y)\n+{\n+  int i;\n+  for (i = 0; i < 8; i++)\n+    x[i] -= y[i] * x[i + 1];\n+}"}, {"sha": "7c5f1010b9cab0333fe0305fffc7826e01780c57", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f955c4c4837a491a8e8c3962867f276a94125dde/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f955c4c4837a491a8e8c3962867f276a94125dde/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=f955c4c4837a491a8e8c3962867f276a94125dde", "patch": "@@ -2711,10 +2711,17 @@ vect_analyze_data_ref_accesses (vec_info *vinfo)\n       data_reference_p dra = datarefs_copy[i];\n       stmt_vec_info stmtinfo_a = vinfo_for_stmt (DR_STMT (dra));\n       stmt_vec_info lastinfo = NULL;\n+      if (! STMT_VINFO_VECTORIZABLE (stmtinfo_a))\n+\t{\n+\t  ++i;\n+\t  continue;\n+\t}\n       for (i = i + 1; i < datarefs_copy.length (); ++i)\n \t{\n \t  data_reference_p drb = datarefs_copy[i];\n \t  stmt_vec_info stmtinfo_b = vinfo_for_stmt (DR_STMT (drb));\n+\t  if (! STMT_VINFO_VECTORIZABLE (stmtinfo_b))\n+\t    break;\n \n \t  /* ???  Imperfect sorting (non-compatible types, non-modulo\n \t     accesses, same accesses) can lead to a group to be artificially"}]}