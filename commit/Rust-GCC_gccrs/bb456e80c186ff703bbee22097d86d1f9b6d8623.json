{"sha": "bb456e80c186ff703bbee22097d86d1f9b6d8623", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmI0NTZlODBjMTg2ZmY3MDNiYmVlMjIwOTdkODZkMWY5YjZkODYyMw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@adacore.com", "date": "2021-04-07T12:15:13Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-06-29T14:23:46Z"}, "message": "[Ada] Factor out many fields in entities\n\ngcc/ada/\n\n\t* gen_il-gen-gen_entities.adb (Record_Field_Kind,\n\tAllocatable_Kind): Add new abstract kinds.\n\t(Constant_Or_Variable_Kind): Likewise.\n\t(E_Constant, E_Variable, E_Loop_Parameter): Use them.\n\t(E_Discriminant, E_Component): Likewise.\n\t* gen_il-types.ads (type Opt_Type_Enum): Add them.", "tree": {"sha": "22e01b2ed8ddf7910663b5e6f6f30cf37fe71344", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22e01b2ed8ddf7910663b5e6f6f30cf37fe71344"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb456e80c186ff703bbee22097d86d1f9b6d8623", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb456e80c186ff703bbee22097d86d1f9b6d8623", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb456e80c186ff703bbee22097d86d1f9b6d8623", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb456e80c186ff703bbee22097d86d1f9b6d8623/comments", "author": {"login": "richardkenner", "id": 56170968, "node_id": "MDQ6VXNlcjU2MTcwOTY4", "avatar_url": "https://avatars.githubusercontent.com/u/56170968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardkenner", "html_url": "https://github.com/richardkenner", "followers_url": "https://api.github.com/users/richardkenner/followers", "following_url": "https://api.github.com/users/richardkenner/following{/other_user}", "gists_url": "https://api.github.com/users/richardkenner/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardkenner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardkenner/subscriptions", "organizations_url": "https://api.github.com/users/richardkenner/orgs", "repos_url": "https://api.github.com/users/richardkenner/repos", "events_url": "https://api.github.com/users/richardkenner/events{/privacy}", "received_events_url": "https://api.github.com/users/richardkenner/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "997d3894fbd931e4dfa210a809175d7c2dc73b4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/997d3894fbd931e4dfa210a809175d7c2dc73b4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/997d3894fbd931e4dfa210a809175d7c2dc73b4b"}], "stats": {"total": 120, "additions": 42, "deletions": 78}, "files": [{"sha": "f5040b2bf3cf482cee2885f53212d07831804f44", "filename": "gcc/ada/gen_il-gen-gen_entities.adb", "status": "modified", "additions": 39, "deletions": 78, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb456e80c186ff703bbee22097d86d1f9b6d8623/gcc%2Fada%2Fgen_il-gen-gen_entities.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb456e80c186ff703bbee22097d86d1f9b6d8623/gcc%2Fada%2Fgen_il-gen-gen_entities.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-gen-gen_entities.adb?ref=bb456e80c186ff703bbee22097d86d1f9b6d8623", "patch": "@@ -242,8 +242,8 @@ begin -- Gen_IL.Gen.Gen_Entities\n        --  The initial Ekind value for a newly created entity. Also used as the\n        --  Ekind for Standard_Void_Type, a type entity in Standard used as a\n        --  dummy type for the return type of a procedure (the reason we create\n-       --  this type is to share the circuits for performing overload resolution\n-       --  on calls).\n+       --  this type is to share the circuits for performing overload\n+       --  resolution on calls).\n        (Sm (Alignment, Uint),\n         Sm (Contract, Node_Id),\n         Sm (Is_Elaboration_Warnings_OK_Id, Flag),\n@@ -254,7 +254,9 @@ begin -- Gen_IL.Gen.Gen_Entities\n         Sm (Current_Value, Node_Id), -- setter only\n         Sm (Has_Predicates, Flag), -- setter only\n         Sm (Initialization_Statements, Node_Id), -- setter only\n-        Sm (Is_Param_Block_Component_Type, Flag, Base_Type_Only), -- setter only\n+        Sm (Is_Param_Block_Component_Type, Flag, Base_Type_Only),\n+        -- setter only\n+\n         Sm (Package_Instantiation, Node_Id), -- setter only\n         Sm (Related_Expression, Node_Id), -- setter only\n \n@@ -302,132 +304,91 @@ begin -- Gen_IL.Gen.Gen_Entities\n        (Sm (Current_Value, Node_Id),\n         Sm (Renamed_Or_Alias, Node_Id)));\n \n-   Cc (E_Component, Object_Kind,\n-       --  Components of a record declaration, private declarations of\n-       --  protected objects.\n+   Ab (Record_Field_Kind, Object_Kind,\n        (Sm (Component_Bit_Offset, Uint),\n         Sm (Component_Clause, Node_Id),\n         Sm (Corresponding_Record_Component, Node_Id),\n-        Sm (Discriminant_Checking_Func, Node_Id),\n-        Sm (DT_Entry_Count, Uint,\n-            Pre => \"Is_Tag (N)\"),\n-        Sm (DT_Offset_To_Top_Func, Node_Id,\n-            Pre => \"Is_Tag (N)\"),\n         Sm (Entry_Formal, Node_Id),\n         Sm (Esize, Uint),\n         Sm (Interface_Name, Node_Id),\n         Sm (Linker_Section_Pragma, Node_Id),\n         Sm (Normalized_First_Bit, Uint),\n         Sm (Normalized_Position, Uint),\n         Sm (Normalized_Position_Max, Uint),\n-        Sm (Original_Record_Component, Node_Id),\n+        Sm (Original_Record_Component, Node_Id)));\n+\n+   Cc (E_Component, Record_Field_Kind,\n+       --  Components of a record declaration, private declarations of\n+       --  protected objects.\n+       (Sm (Discriminant_Checking_Func, Node_Id),\n+        Sm (DT_Entry_Count, Uint,\n+            Pre => \"Is_Tag (N)\"),\n+        Sm (DT_Offset_To_Top_Func, Node_Id,\n+            Pre => \"Is_Tag (N)\"),\n         Sm (Prival, Node_Id,\n             Pre => \"Is_Protected_Component (N)\"),\n         Sm (Related_Type, Node_Id)));\n \n-   Cc (E_Constant, Object_Kind,\n-       --  Constants created by an object declaration with a constant keyword\n+   Ab (Allocatable_Kind, Object_Kind,\n        (Sm (Activation_Record_Component, Node_Id),\n-        Sm (Actual_Subtype, Node_Id),\n         Sm (Alignment, Uint),\n+        Sm (Esize, Uint),\n+        Sm (Interface_Name, Node_Id),\n+        Sm (Is_Finalized_Transient, Flag),\n+        Sm (Is_Ignored_Transient, Flag),\n+        Sm (Linker_Section_Pragma, Node_Id),\n+        Sm (Related_Expression, Node_Id),\n+        Sm (Status_Flag_Or_Transient_Decl, Node_Id)));\n+\n+   Ab (Constant_Or_Variable_Kind, Allocatable_Kind,\n+       (Sm (Actual_Subtype, Node_Id),\n         Sm (BIP_Initialization_Call, Node_Id),\n         Sm (Contract, Node_Id),\n         Sm (Discriminal_Link, Node_Id),\n         Sm (Encapsulating_State, Node_Id),\n-        Sm (Esize, Uint),\n         Sm (Extra_Accessibility, Node_Id),\n-        Sm (Full_View, Node_Id),\n         Sm (Initialization_Statements, Node_Id),\n-        Sm (Interface_Name, Node_Id),\n         Sm (Is_Elaboration_Checks_OK_Id, Flag),\n         Sm (Is_Elaboration_Warnings_OK_Id, Flag),\n-        Sm (Is_Finalized_Transient, Flag),\n-        Sm (Is_Ignored_Transient, Flag),\n         Sm (Last_Aggregate_Assignment, Node_Id),\n-        Sm (Linker_Section_Pragma, Node_Id),\n         Sm (Optimize_Alignment_Space, Flag),\n         Sm (Optimize_Alignment_Time, Flag),\n         Sm (Prival_Link, Node_Id),\n-        Sm (Related_Expression, Node_Id),\n         Sm (Related_Type, Node_Id),\n         Sm (Return_Statement, Node_Id),\n         Sm (Size_Check_Code, Node_Id),\n         Sm (SPARK_Pragma, Node_Id),\n-        Sm (SPARK_Pragma_Inherited, Flag),\n-        Sm (Status_Flag_Or_Transient_Decl, Node_Id)));\n+        Sm (SPARK_Pragma_Inherited, Flag)));\n+\n+   Cc (E_Constant, Constant_Or_Variable_Kind,\n+       --  Constants created by an object declaration with a constant keyword\n+       (Sm (Full_View, Node_Id)));\n \n-   Cc (E_Discriminant, Object_Kind,\n+   Cc (E_Discriminant, Record_Field_Kind,\n        --  A discriminant, created by the use of a discriminant in a type\n        --  declaration.\n-       (Sm (Component_Bit_Offset, Uint),\n-        Sm (Component_Clause, Node_Id),\n-        Sm (Corresponding_Discriminant, Node_Id),\n-        Sm (Corresponding_Record_Component, Node_Id),\n+       (Sm (Corresponding_Discriminant, Node_Id),\n         Sm (CR_Discriminant, Node_Id),\n         Sm (Discriminal, Node_Id),\n         Sm (Discriminant_Default_Value, Node_Id),\n         Sm (Discriminant_Number, Uint),\n-        Sm (Entry_Formal, Node_Id),\n-        Sm (Esize, Uint),\n-        Sm (Interface_Name, Node_Id),\n-        Sm (Is_Completely_Hidden, Flag),\n-        Sm (Linker_Section_Pragma, Node_Id),\n-        Sm (Normalized_First_Bit, Uint),\n-        Sm (Normalized_Position, Uint),\n-        Sm (Normalized_Position_Max, Uint),\n-        Sm (Original_Record_Component, Node_Id)));\n+        Sm (Is_Completely_Hidden, Flag)));\n \n-   Cc (E_Loop_Parameter, Object_Kind,\n-       --  A loop parameter created by a for loop\n-       (Sm (Activation_Record_Component, Node_Id),\n-        Sm (Alignment, Uint),\n-        Sm (Esize, Uint),\n-        Sm (Interface_Name, Node_Id),\n-        Sm (Is_Finalized_Transient, Flag),\n-        Sm (Is_Ignored_Transient, Flag),\n-        Sm (Linker_Section_Pragma, Node_Id),\n-        Sm (Related_Expression, Node_Id),\n-        Sm (Status_Flag_Or_Transient_Decl, Node_Id)));\n+   Cc (E_Loop_Parameter, Allocatable_Kind);\n+   --  A loop parameter created by a for loop\n \n-   Cc (E_Variable, Object_Kind,\n+   Cc (E_Variable, Constant_Or_Variable_Kind,\n        --  Variables created by an object declaration with no constant keyword\n-       (Sm (Activation_Record_Component, Node_Id),\n-        Sm (Actual_Subtype, Node_Id),\n-        Sm (Alignment, Uint),\n-        Sm (Anonymous_Designated_Type, Node_Id),\n-        Sm (BIP_Initialization_Call, Node_Id),\n-        Sm (Contract, Node_Id),\n+       (Sm (Anonymous_Designated_Type, Node_Id),\n         Sm (Debug_Renaming_Link, Node_Id),\n-        Sm (Discriminal_Link, Node_Id),\n-        Sm (Encapsulating_State, Node_Id),\n-        Sm (Esize, Uint),\n-        Sm (Extra_Accessibility, Node_Id),\n         Sm (Extra_Constrained, Node_Id),\n         Sm (Has_Initial_Value, Flag),\n         Sm (Hiding_Loop_Variable, Node_Id),\n-        Sm (Initialization_Statements, Node_Id),\n-        Sm (Interface_Name, Node_Id),\n-        Sm (Is_Elaboration_Checks_OK_Id, Flag),\n-        Sm (Is_Elaboration_Warnings_OK_Id, Flag),\n-        Sm (Is_Finalized_Transient, Flag),\n-        Sm (Is_Ignored_Transient, Flag),\n-        Sm (Last_Aggregate_Assignment, Node_Id),\n         Sm (Last_Assignment, Node_Id),\n-        Sm (Linker_Section_Pragma, Node_Id),\n         Sm (OK_To_Rename, Flag),\n-        Sm (Optimize_Alignment_Space, Flag),\n-        Sm (Optimize_Alignment_Time, Flag),\n         Sm (Part_Of_Constituents, Elist_Id),\n         Sm (Part_Of_References, Elist_Id),\n-        Sm (Prival_Link, Node_Id),\n-        Sm (Related_Expression, Node_Id),\n-        Sm (Related_Type, Node_Id),\n-        Sm (Return_Statement, Node_Id),\n         Sm (Shared_Var_Procs_Instance, Node_Id),\n-        Sm (Size_Check_Code, Node_Id),\n-        Sm (SPARK_Pragma, Node_Id),\n-        Sm (SPARK_Pragma_Inherited, Flag),\n-        Sm (Status_Flag_Or_Transient_Decl, Node_Id),\n         Sm (Suppress_Initialization, Flag),\n         Sm (Unset_Reference, Node_Id),\n         Sm (Validated_Object, Node_Id)));"}, {"sha": "6850411930664ac0ef234b6bab0a41738d16887b", "filename": "gcc/ada/gen_il-types.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb456e80c186ff703bbee22097d86d1f9b6d8623/gcc%2Fada%2Fgen_il-types.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb456e80c186ff703bbee22097d86d1f9b6d8623/gcc%2Fada%2Fgen_il-types.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-types.ads?ref=bb456e80c186ff703bbee22097d86d1f9b6d8623", "patch": "@@ -124,13 +124,15 @@ package Gen_IL.Types is\n       Access_Subprogram_Kind,\n       Access_Protected_Kind,\n       Aggregate_Kind,\n+      Allocatable_Kind,\n       Anonymous_Access_Kind,\n       Array_Kind,\n       Assignable_Kind,\n       Class_Wide_Kind,\n       Composite_Kind,\n       Concurrent_Kind,\n       Concurrent_Body_Kind,\n+      Constant_Or_Variable_Kind,\n       Decimal_Fixed_Point_Kind,\n       Digits_Kind,\n       Discrete_Kind,\n@@ -158,6 +160,7 @@ package Gen_IL.Types is\n       Protected_Kind,\n       Real_Kind,\n       Record_Kind,\n+      Record_Field_Kind,\n       Scalar_Kind,\n       Subprogram_Kind,\n       Signed_Integer_Kind,"}]}