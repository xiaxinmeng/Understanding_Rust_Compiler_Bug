{"sha": "717b373c0b57fa004cefe3d8545c2512ee2b3d3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzE3YjM3M2MwYjU3ZmEwMDRjZWZlM2Q4NTQ1YzI1MTJlZTJiM2QzZQ==", "commit": {"author": {"name": "Virendra Pathak", "email": "virendra.pathak@broadcom.com", "date": "2016-06-21T13:43:29Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2016-06-21T13:43:29Z"}, "message": "[PATCH/AARCH64] Accept vulcan as a cpu name for the AArch64 port of GCC\n\ngcc/ChangeLog\n\n\t* config/aarch64/aarch64-cores.def (vulcan): New core.\n\t* config/aarch64/aarch64-tune.md: Regenerate.\n\t* doc/invoke.texi: Document vulcan as an available option.\n\nFrom-SVN: r237645", "tree": {"sha": "ff3ce4484ac501b65b32226d7cb2438e938328c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff3ce4484ac501b65b32226d7cb2438e938328c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/717b373c0b57fa004cefe3d8545c2512ee2b3d3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/717b373c0b57fa004cefe3d8545c2512ee2b3d3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/717b373c0b57fa004cefe3d8545c2512ee2b3d3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/717b373c0b57fa004cefe3d8545c2512ee2b3d3e/comments", "author": null, "committer": null, "parents": [{"sha": "316ded5382f62820e2babaaf1c8a1448edd4d13c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/316ded5382f62820e2babaaf1c8a1448edd4d13c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/316ded5382f62820e2babaaf1c8a1448edd4d13c"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "9069308256ec69062674a6125eaaf6b488bbbe20", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/717b373c0b57fa004cefe3d8545c2512ee2b3d3e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/717b373c0b57fa004cefe3d8545c2512ee2b3d3e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=717b373c0b57fa004cefe3d8545c2512ee2b3d3e", "patch": "@@ -1,3 +1,9 @@\n+2016-06-21  Virendra Pathak  <virendra.pathak@broadcom.com>\n+\n+\t* config/aarch64/aarch64-cores.def (vulcan): New core.\n+\t* config/aarch64/aarch64-tune.md: Regenerate.\n+\t* doc/invoke.texi: Document vulcan as an available option.\n+\n 2016-06-21  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* cse.c (canon_asm_operands): New function extracted from..."}, {"sha": "ced8f9436a5632811a0a2283ab700cb40fb1ec96", "filename": "gcc/config/aarch64/aarch64-cores.def", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/717b373c0b57fa004cefe3d8545c2512ee2b3d3e/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/717b373c0b57fa004cefe3d8545c2512ee2b3d3e/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def?ref=717b373c0b57fa004cefe3d8545c2512ee2b3d3e", "patch": "@@ -49,6 +49,10 @@ AARCH64_CORE(\"qdf24xx\",     qdf24xx,   cortexa57, 8A,  AARCH64_FL_FOR_ARCH8 | AA\n AARCH64_CORE(\"thunderx\",    thunderx,  thunderx,  8A,  AARCH64_FL_FOR_ARCH8 | AARCH64_FL_CRC | AARCH64_FL_CRYPTO, thunderx,  \"0x43\", \"0x0a1\")\n AARCH64_CORE(\"xgene1\",      xgene1,    xgene1,    8A,  AARCH64_FL_FOR_ARCH8, xgene1, \"0x50\", \"0x000\")\n \n+/* V8.1 Architecture Processors.  */\n+\n+AARCH64_CORE(\"vulcan\",  vulcan, cortexa57, 8_1A,  AARCH64_FL_FOR_ARCH8_1 | AARCH64_FL_CRYPTO, cortexa57, \"0x42\", \"0x516\")\n+\n /* V8 big.LITTLE implementations.  */\n \n AARCH64_CORE(\"cortex-a57.cortex-a53\",  cortexa57cortexa53, cortexa53, 8A,  AARCH64_FL_FOR_ARCH8 | AARCH64_FL_CRC, cortexa57, \"0x41\", \"0xd07.0xd03\")"}, {"sha": "8c4a0e9fde99bcd5b4caa6780f1058aba532bdd4", "filename": "gcc/config/aarch64/aarch64-tune.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/717b373c0b57fa004cefe3d8545c2512ee2b3d3e/gcc%2Fconfig%2Faarch64%2Faarch64-tune.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/717b373c0b57fa004cefe3d8545c2512ee2b3d3e/gcc%2Fconfig%2Faarch64%2Faarch64-tune.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-tune.md?ref=717b373c0b57fa004cefe3d8545c2512ee2b3d3e", "patch": "@@ -1,5 +1,5 @@\n ;; -*- buffer-read-only: t -*-\n ;; Generated automatically by gentune.sh from aarch64-cores.def\n (define_attr \"tune\"\n-\t\"cortexa35,cortexa53,cortexa57,cortexa72,exynosm1,qdf24xx,thunderx,xgene1,cortexa57cortexa53,cortexa72cortexa53\"\n+\t\"cortexa35,cortexa53,cortexa57,cortexa72,exynosm1,qdf24xx,thunderx,xgene1,vulcan,cortexa57cortexa53,cortexa72cortexa53\"\n \t(const (symbol_ref \"((enum attr_tune) aarch64_tune)\")))"}, {"sha": "4ff0ad5a675dfe55ed6224bfa83aab16aab75018", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/717b373c0b57fa004cefe3d8545c2512ee2b3d3e/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/717b373c0b57fa004cefe3d8545c2512ee2b3d3e/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=717b373c0b57fa004cefe3d8545c2512ee2b3d3e", "patch": "@@ -13097,8 +13097,8 @@ Specify the name of the target processor for which GCC should tune the\n performance of the code.  Permissible values for this option are:\n @samp{generic}, @samp{cortex-a35}, @samp{cortex-a53}, @samp{cortex-a57},\n @samp{cortex-a72}, @samp{exynos-m1}, @samp{qdf24xx}, @samp{thunderx},\n-@samp{xgene1}, @samp{cortex-a57.cortex-a53}, @samp{cortex-a72.cortex-a53},\n-@samp{native}.\n+@samp{xgene1}, @samp{vulcan}, @samp{cortex-a57.cortex-a53},\n+@samp{cortex-a72.cortex-a53}, @samp{native}.\n \n The values @samp{cortex-a57.cortex-a53}, @samp{cortex-a72.cortex-a53}\n specify that GCC should tune for a big.LITTLE system."}]}