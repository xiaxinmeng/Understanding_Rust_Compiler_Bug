{"sha": "17d761bbc821fa6a4212181966454d16dc119e96", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTdkNzYxYmJjODIxZmE2YTQyMTIxODE5NjY0NTRkMTZkYzExOWU5Ng==", "commit": {"author": {"name": "Thomas Koenig", "email": "Thomas.Koenig@online.de", "date": "2006-01-31T22:52:49Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2006-01-31T22:52:49Z"}, "message": "re PR fortran/26039 (ICE with maxval)\n\n2006-01-31  Thomas Koenig  <Thomas.Koenig@online.de>\n\n\tPR fortran/26039\n\texpr.c (gfc_check_conformance):  Reorder error message\n\tto avoid plural.\n\tcheck.c(gfc_check_minloc_maxloc):  Call gfc_check_conformance\n\tfor checking arguments array and mask.\n\t(check_reduction):  Likewise.\n\n2006-01-31  Thomas Koenig  <Thomas.Koenig@online.de>\n\n\tPR fortran/26039\n\tmaxval_maxloc_conformance_1.f90:  New test.\n\nFrom-SVN: r110453", "tree": {"sha": "6d1a58afeaf8925745ad490371ec9535a34ee9fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d1a58afeaf8925745ad490371ec9535a34ee9fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17d761bbc821fa6a4212181966454d16dc119e96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17d761bbc821fa6a4212181966454d16dc119e96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17d761bbc821fa6a4212181966454d16dc119e96", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17d761bbc821fa6a4212181966454d16dc119e96/comments", "author": null, "committer": null, "parents": [{"sha": "44d6427469dc640645f31dda9c3d65fe88f25bf2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44d6427469dc640645f31dda9c3d65fe88f25bf2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44d6427469dc640645f31dda9c3d65fe88f25bf2"}], "stats": {"total": 74, "additions": 72, "deletions": 2}, "files": [{"sha": "517535be712828a008e954e4228d57bd6b8d6b4b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17d761bbc821fa6a4212181966454d16dc119e96/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17d761bbc821fa6a4212181966454d16dc119e96/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=17d761bbc821fa6a4212181966454d16dc119e96", "patch": "@@ -1,3 +1,12 @@\n+2006-01-31  Thomas Koenig  <Thomas.Koenig@online.de>\n+\n+\tPR fortran/26039\n+\texpr.c (gfc_check_conformance):  Reorder error message\n+\tto avoid plural.\n+\tcheck.c(gfc_check_minloc_maxloc):  Call gfc_check_conformance\n+\tfor checking arguments array and mask.\n+\t(check_reduction):  Likewise.\n+\n 2005-01-30  Erik Edelmann  <eedelman@gcc.gnu.org>\n \n \tPR fortran/24266"}, {"sha": "8b56d520f7fc81121aaab8619fa37ba2d93d203b", "filename": "gcc/fortran/check.c", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17d761bbc821fa6a4212181966454d16dc119e96/gcc%2Ffortran%2Fcheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17d761bbc821fa6a4212181966454d16dc119e96/gcc%2Ffortran%2Fcheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcheck.c?ref=17d761bbc821fa6a4212181966454d16dc119e96", "patch": "@@ -1526,6 +1526,16 @@ gfc_check_minloc_maxloc (gfc_actual_arglist * ap)\n   if (m != NULL && type_check (m, 2, BT_LOGICAL) == FAILURE)\n     return FAILURE;\n \n+  if (m != NULL)\n+    {\n+      char buffer[80];\n+      snprintf(buffer, sizeof(buffer), \"arguments '%s' and '%s' for intrinsic %s\",\n+\t       gfc_current_intrinsic_arg[0], gfc_current_intrinsic_arg[2],\n+\t       gfc_current_intrinsic);\n+      if (gfc_check_conformance (buffer, a, m) == FAILURE)\n+\treturn FAILURE;\n+    }\n+\n   return SUCCESS;\n }\n \n@@ -1548,8 +1558,9 @@ gfc_check_minloc_maxloc (gfc_actual_arglist * ap)\n static try\n check_reduction (gfc_actual_arglist * ap)\n {\n-  gfc_expr *m, *d;\n+  gfc_expr *a, *m, *d;\n \n+  a = ap->expr;\n   d = ap->next->expr;\n   m = ap->next->next->expr;\n \n@@ -1571,6 +1582,16 @@ check_reduction (gfc_actual_arglist * ap)\n   if (m != NULL && type_check (m, 2, BT_LOGICAL) == FAILURE)\n     return FAILURE;\n \n+  if (m != NULL)\n+    {\n+      char buffer[80];\n+      snprintf(buffer, sizeof(buffer), \"arguments '%s' and '%s' for intrinsic %s\",\n+\t       gfc_current_intrinsic_arg[0], gfc_current_intrinsic_arg[2],\n+\t       gfc_current_intrinsic);\n+      if (gfc_check_conformance (buffer, a, m) == FAILURE)\n+\treturn FAILURE;\n+    }\n+\n   return SUCCESS;\n }\n "}, {"sha": "92a7dc02792b88cc84a09e042e61d8c14e848d76", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17d761bbc821fa6a4212181966454d16dc119e96/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17d761bbc821fa6a4212181966454d16dc119e96/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=17d761bbc821fa6a4212181966454d16dc119e96", "patch": "@@ -1821,7 +1821,7 @@ gfc_check_conformance (const char *optype_msgid,\n \n       if (op1_flag && op2_flag && mpz_cmp (op1_size, op2_size) != 0)\n \t{\n-\t  gfc_error (\"%s at %L has different shape on dimension %d (%d/%d)\",\n+\t  gfc_error (\"different shape for %s at %L on dimension %d (%d/%d)\",\n \t\t     _(optype_msgid), &op1->where, d + 1,\n \t\t     (int) mpz_get_si (op1_size),\n \t\t     (int) mpz_get_si (op2_size));"}, {"sha": "6b5c65954098342ac5a9c2c4eed683b622148deb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17d761bbc821fa6a4212181966454d16dc119e96/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17d761bbc821fa6a4212181966454d16dc119e96/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=17d761bbc821fa6a4212181966454d16dc119e96", "patch": "@@ -1,3 +1,8 @@\n+2006-01-31  Thomas Koenig  <Thomas.Koenig@online.de>\n+\n+\tPR fortran/26039\n+\tmaxval_maxloc_conformance_1.f90:  New test.\n+\n 2006-01-31  Richard Guenther  <rguenther@suse.de>\n \n \t* gcc.target/i386/sselibm-1.c: New testcase."}, {"sha": "828655cbff0694c88501719d1f70baf7d3bf720e", "filename": "gcc/testsuite/gfortran.dg/maxval_maxloc_conformance_1.f90", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17d761bbc821fa6a4212181966454d16dc119e96/gcc%2Ftestsuite%2Fgfortran.dg%2Fmaxval_maxloc_conformance_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17d761bbc821fa6a4212181966454d16dc119e96/gcc%2Ftestsuite%2Fgfortran.dg%2Fmaxval_maxloc_conformance_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmaxval_maxloc_conformance_1.f90?ref=17d761bbc821fa6a4212181966454d16dc119e96", "patch": "@@ -0,0 +1,35 @@\n+! { dg-do compile }\n+! PR 26039:  Tests for different ranks for (min|max)loc, (min|max)val, product\n+!            and sum were missing.\n+program main\n+  integer, dimension(2) :: a\n+  logical, dimension(2,1) :: lo\n+  logical, dimension(3) :: lo2\n+  a = (/ 1, 2 /)\n+  lo = .true.\n+  print *,minloc(a,mask=lo) ! { dg-error \"Incompatible ranks\" }\n+  print *,maxloc(a,mask=lo) ! { dg-error \"Incompatible ranks\" }\n+  print *,minval(a,mask=lo) ! { dg-error \"Incompatible ranks\" }\n+  print *,maxval(a,mask=lo) ! { dg-error \"Incompatible ranks\" }\n+  print *,sum(a,mask=lo) ! { dg-error \"Incompatible ranks\" }\n+  print *,product(a,mask=lo) ! { dg-error \"Incompatible ranks\" }\n+  print *,minloc(a,1,mask=lo) ! { dg-error \"Incompatible ranks\" }\n+  print *,maxloc(a,1,mask=lo) ! { dg-error \"Incompatible ranks\" }\n+  print *,minval(a,1,mask=lo) ! { dg-error \"Incompatible ranks\" }\n+  print *,maxval(a,1,mask=lo) ! { dg-error \"Incompatible ranks\" }\n+  print *,sum(a,1,mask=lo) ! { dg-error \"Incompatible ranks\" }\n+  print *,product(a,1,mask=lo) ! { dg-error \"Incompatible ranks\" }\n+\n+  print *,minloc(a,mask=lo2) ! { dg-error \"different shape\" }\n+  print *,maxloc(a,mask=lo2) ! { dg-error \"different shape\" }\n+  print *,minval(a,mask=lo2) ! { dg-error \"different shape\" }\n+  print *,maxval(a,mask=lo2) ! { dg-error \"different shape\" }\n+  print *,sum(a,mask=lo2) ! { dg-error \"different shape\" }\n+  print *,product(a,mask=lo2) ! { dg-error \"different shape\" }\n+  print *,minloc(a,1,mask=lo2) ! { dg-error \"different shape\" }\n+  print *,maxloc(a,1,mask=lo2) ! { dg-error \"different shape\" }\n+  print *,minval(a,1,mask=lo2) ! { dg-error \"different shape\" }\n+  print *,maxval(a,1,mask=lo2) ! { dg-error \"different shape\" }\n+  print *,sum(a,1,mask=lo2) ! { dg-error \"different shape\" }\n+  print *,product(a,1,mask=lo2) ! { dg-error \"different shape\" }\n+end program main"}]}