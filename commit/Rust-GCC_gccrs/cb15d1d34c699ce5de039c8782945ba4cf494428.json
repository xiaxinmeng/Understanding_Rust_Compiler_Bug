{"sha": "cb15d1d34c699ce5de039c8782945ba4cf494428", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2IxNWQxZDM0YzY5OWNlNWRlMDM5Yzg3ODI5NDViYTRjZjQ5NDQyOA==", "commit": {"author": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2020-01-01T20:54:58Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2020-01-01T20:54:58Z"}, "message": "re PR target/93111 (FAIL: gfortran.fortran-torture/compile/pr32663.f,  -O3 -g   (internal compiler error))\n\n\tPR target/93111\n\t* config/pa/pa.md (scc): Use ordered_comparison_operator instead of\n\tcomparison_operator in B and S integer comparisons.  Likewise, use\n\tordered_comparison_operator instead of cmpib_comparison_operator in\n\tcmpib patterns.\n\t* config/pa/predicates.md (cmpib_comparison_operator): Remove.\n\nFrom-SVN: r279818", "tree": {"sha": "226a6aa950d6ed6c3a34bfa13266d29b7a1076f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/226a6aa950d6ed6c3a34bfa13266d29b7a1076f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb15d1d34c699ce5de039c8782945ba4cf494428", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb15d1d34c699ce5de039c8782945ba4cf494428", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb15d1d34c699ce5de039c8782945ba4cf494428", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb15d1d34c699ce5de039c8782945ba4cf494428/comments", "author": null, "committer": null, "parents": [{"sha": "a8497ec6102474365d4a7e92ccd5f392d8e96161", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8497ec6102474365d4a7e92ccd5f392d8e96161", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8497ec6102474365d4a7e92ccd5f392d8e96161"}], "stats": {"total": 65, "additions": 34, "deletions": 31}, "files": [{"sha": "305b7785bb58e4d273e6c6e652eaf7f92ecc02c3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb15d1d34c699ce5de039c8782945ba4cf494428/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb15d1d34c699ce5de039c8782945ba4cf494428/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cb15d1d34c699ce5de039c8782945ba4cf494428", "patch": "@@ -1,3 +1,12 @@\n+2020-01-01  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\tPR target/93111\n+\t* config/pa/pa.md (scc): Use ordered_comparison_operator instead of\n+\tcomparison_operator in B and S integer comparisons.  Likewise, use\n+\tordered_comparison_operator instead of cmpib_comparison_operator in\n+\tcmpib patterns.\n+\t* config/pa/predicates.md (cmpib_comparison_operator): Remove.\n+\n 2020-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "c2fa44c25956cb2a641cf4636fc3a7604a50cffd", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb15d1d34c699ce5de039c8782945ba4cf494428/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb15d1d34c699ce5de039c8782945ba4cf494428/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=cb15d1d34c699ce5de039c8782945ba4cf494428", "patch": "@@ -765,7 +765,7 @@\n \n (define_insn \"scc\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(match_operator:SI 3 \"comparison_operator\"\n+\t(match_operator:SI 3 \"ordered_comparison_operator\"\n \t\t\t   [(match_operand:SI 1 \"reg_or_0_operand\" \"rM\")\n \t\t\t    (match_operand:SI 2 \"arith11_operand\" \"rI\")]))]\n   \"\"\n@@ -775,7 +775,7 @@\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(match_operator:DI 3 \"comparison_operator\"\n+\t(match_operator:DI 3 \"ordered_comparison_operator\"\n \t\t\t   [(match_operand:DI 1 \"reg_or_0_operand\" \"rM\")\n \t\t\t    (match_operand:DI 2 \"arith11_operand\" \"rI\")]))]\n   \"TARGET_64BIT\"\n@@ -785,10 +785,10 @@\n \n (define_insn \"iorscc\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(ior:SI (match_operator:SI 3 \"comparison_operator\"\n+\t(ior:SI (match_operator:SI 3 \"ordered_comparison_operator\"\n \t\t\t\t   [(match_operand:SI 1 \"reg_or_0_operand\" \"rM\")\n \t\t\t\t    (match_operand:SI 2 \"arith11_operand\" \"rI\")])\n-\t\t(match_operator:SI 6 \"comparison_operator\"\n+\t\t(match_operator:SI 6 \"ordered_comparison_operator\"\n \t\t\t\t   [(match_operand:SI 4 \"reg_or_0_operand\" \"rM\")\n \t\t\t\t    (match_operand:SI 5 \"arith11_operand\" \"rI\")])))]\n   \"\"\n@@ -798,10 +798,10 @@\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(ior:DI (match_operator:DI 3 \"comparison_operator\"\n+\t(ior:DI (match_operator:DI 3 \"ordered_comparison_operator\"\n \t\t\t\t   [(match_operand:DI 1 \"reg_or_0_operand\" \"rM\")\n \t\t\t\t    (match_operand:DI 2 \"arith11_operand\" \"rI\")])\n-\t\t(match_operator:DI 6 \"comparison_operator\"\n+\t\t(match_operator:DI 6 \"ordered_comparison_operator\"\n \t\t\t\t   [(match_operand:DI 4 \"reg_or_0_operand\" \"rM\")\n \t\t\t\t    (match_operand:DI 5 \"arith11_operand\" \"rI\")])))]\n   \"TARGET_64BIT\"\n@@ -813,7 +813,7 @@\n ;; from an scc insn (negscc and incscc).\n (define_insn \"negscc\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(neg:SI (match_operator:SI 3 \"comparison_operator\"\n+\t(neg:SI (match_operator:SI 3 \"ordered_comparison_operator\"\n \t       [(match_operand:SI 1 \"reg_or_0_operand\" \"rM\")\n \t\t(match_operand:SI 2 \"arith11_operand\" \"rI\")])))]\n   \"\"\n@@ -823,7 +823,7 @@\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(neg:DI (match_operator:DI 3 \"comparison_operator\"\n+\t(neg:DI (match_operator:DI 3 \"ordered_comparison_operator\"\n \t       [(match_operand:DI 1 \"reg_or_0_operand\" \"rM\")\n \t\t(match_operand:DI 2 \"arith11_operand\" \"rI\")])))]\n   \"TARGET_64BIT\"\n@@ -904,7 +904,7 @@\n \n (define_insn \"incscc\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n- \t(plus:SI (match_operator:SI 4 \"comparison_operator\"\n+ \t(plus:SI (match_operator:SI 4 \"ordered_comparison_operator\"\n \t\t    [(match_operand:SI 2 \"register_operand\" \"r,r\")\n \t\t     (match_operand:SI 3 \"arith11_operand\" \"rI,rI\")])\n \t\t (match_operand:SI 1 \"register_operand\" \"0,?r\")))]\n@@ -917,7 +917,7 @@\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r,r\")\n- \t(plus:DI (match_operator:DI 4 \"comparison_operator\"\n+ \t(plus:DI (match_operator:DI 4 \"ordered_comparison_operator\"\n \t\t    [(match_operand:DI 2 \"register_operand\" \"r,r\")\n \t\t     (match_operand:DI 3 \"arith11_operand\" \"rI,rI\")])\n \t\t (match_operand:DI 1 \"register_operand\" \"0,?r\")))]\n@@ -1062,7 +1062,7 @@\n (define_insn \"decscc\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n \t(minus:SI (match_operand:SI 1 \"register_operand\" \"0,?r\")\n-\t\t  (match_operator:SI 4 \"comparison_operator\"\n+\t\t  (match_operator:SI 4 \"ordered_comparison_operator\"\n \t\t     [(match_operand:SI 2 \"register_operand\" \"r,r\")\n \t\t      (match_operand:SI 3 \"arith11_operand\" \"rI,rI\")])))]\n   \"\"\n@@ -1075,7 +1075,7 @@\n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r,r\")\n \t(minus:DI (match_operand:DI 1 \"register_operand\" \"0,?r\")\n-\t\t  (match_operator:DI 4 \"comparison_operator\"\n+\t\t  (match_operator:DI 4 \"ordered_comparison_operator\"\n \t\t     [(match_operand:DI 2 \"register_operand\" \"r,r\")\n \t\t      (match_operand:DI 3 \"arith11_operand\" \"rI,rI\")])))]\n   \"TARGET_64BIT\"\n@@ -1242,7 +1242,7 @@\n (define_expand \"movsicc\"\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t(if_then_else:SI\n-\t (match_operand 1 \"comparison_operator\" \"\")\n+\t (match_operand 1 \"ordered_comparison_operator\" \"\")\n \t (match_operand:SI 2 \"reg_or_cint_move_operand\" \"\")\n \t (match_operand:SI 3 \"reg_or_cint_move_operand\" \"\")))]\n   \"\"\n@@ -1264,7 +1264,7 @@\n (define_insn \"\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r,r,r\")\n \t(if_then_else:SI\n-\t (match_operator 2 \"comparison_operator\"\n+\t (match_operator 2 \"ordered_comparison_operator\"\n \t    [(match_operand:SI 3 \"register_operand\" \"r,r,r,r\")\n \t     (match_operand:SI 4 \"arith11_operand\" \"rI,rI,rI,rI\")])\n \t (match_operand:SI 1 \"reg_or_cint_move_operand\" \"0,J,N,K\")\n@@ -1281,7 +1281,7 @@\n (define_insn \"\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r,r,r,r,r,r,r\")\n \t(if_then_else:SI\n-\t (match_operator 5 \"comparison_operator\"\n+\t (match_operator 5 \"ordered_comparison_operator\"\n \t    [(match_operand:SI 3 \"register_operand\" \"r,r,r,r,r,r,r,r\")\n \t     (match_operand:SI 4 \"arith11_operand\" \"rI,rI,rI,rI,rI,rI,rI,rI\")])\n \t (match_operand:SI 1 \"reg_or_cint_move_operand\" \"0,0,0,0,r,J,N,K\")\n@@ -1302,7 +1302,7 @@\n (define_expand \"movdicc\"\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n \t(if_then_else:DI\n-\t (match_operand 1 \"comparison_operator\" \"\")\n+\t (match_operand 1 \"ordered_comparison_operator\" \"\")\n \t (match_operand:DI 2 \"reg_or_cint_move_operand\" \"\")\n \t (match_operand:DI 3 \"reg_or_cint_move_operand\" \"\")))]\n   \"TARGET_64BIT\"\n@@ -1318,7 +1318,7 @@\n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r,r,r,r,r\")\n \t(if_then_else:DI\n-\t (match_operator 2 \"comparison_operator\"\n+\t (match_operator 2 \"ordered_comparison_operator\"\n \t    [(match_operand:DI 3 \"register_operand\" \"r,r,r,r,r\")\n \t     (match_operand:DI 4 \"arith11_operand\" \"rI,rI,rI,rI,rI\")])\n \t (match_operand:DI 1 \"reg_or_cint_move_operand\" \"0,r,J,N,K\")\n@@ -1336,7 +1336,7 @@\n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r,r,r,r,r,r,r,r\")\n \t(if_then_else:DI\n-\t (match_operator 5 \"comparison_operator\"\n+\t (match_operator 5 \"ordered_comparison_operator\"\n \t    [(match_operand:DI 3 \"register_operand\" \"r,r,r,r,r,r,r,r\")\n \t     (match_operand:DI 4 \"arith11_operand\" \"rI,rI,rI,rI,rI,rI,rI,rI\")])\n \t (match_operand:DI 1 \"reg_or_cint_move_operand\" \"0,0,0,0,r,J,N,K\")\n@@ -1413,7 +1413,7 @@\n (define_insn \"\"\n   [(set (pc)\n \t(if_then_else\n-\t (match_operator 3 \"comparison_operator\"\n+\t (match_operator 3 \"ordered_comparison_operator\"\n \t\t\t [(match_operand:SI 1 \"reg_or_0_operand\" \"rM\")\n \t\t\t  (match_operand:SI 2 \"arith5_operand\" \"rL\")])\n \t (label_ref (match_operand 0 \"\" \"\"))\n@@ -1442,7 +1442,7 @@\n (define_insn \"\"\n   [(set (pc)\n \t(if_then_else\n-\t (match_operator 3 \"comparison_operator\"\n+\t (match_operator 3 \"ordered_comparison_operator\"\n \t\t\t [(match_operand:SI 1 \"reg_or_0_operand\" \"rM\")\n \t\t\t  (match_operand:SI 2 \"arith5_operand\" \"rL\")])\n \t (pc)\n@@ -1469,7 +1469,7 @@\n (define_insn \"\"\n   [(set (pc)\n \t(if_then_else\n-\t (match_operator 3 \"comparison_operator\"\n+\t (match_operator 3 \"ordered_comparison_operator\"\n \t\t\t [(match_operand:DI 1 \"reg_or_0_operand\" \"rM\")\n \t\t\t  (match_operand:DI 2 \"reg_or_0_operand\" \"rM\")])\n \t (label_ref (match_operand 0 \"\" \"\"))\n@@ -1498,7 +1498,7 @@\n (define_insn \"\"\n   [(set (pc)\n \t(if_then_else\n-\t (match_operator 3 \"comparison_operator\"\n+\t (match_operator 3 \"ordered_comparison_operator\"\n \t\t\t [(match_operand:DI 1 \"reg_or_0_operand\" \"rM\")\n \t\t\t  (match_operand:DI 2 \"reg_or_0_operand\" \"rM\")])\n \t (pc)\n@@ -1524,7 +1524,7 @@\n (define_insn \"\"\n   [(set (pc)\n \t(if_then_else\n-\t (match_operator 3 \"cmpib_comparison_operator\"\n+\t (match_operator 3 \"ordered_comparison_operator\"\n \t\t\t [(match_operand:DI 1 \"reg_or_0_operand\" \"rM\")\n \t\t\t  (match_operand:DI 2 \"arith5_operand\" \"rL\")])\n \t (label_ref (match_operand 0 \"\" \"\"))\n@@ -1553,7 +1553,7 @@\n (define_insn \"\"\n   [(set (pc)\n \t(if_then_else\n-\t (match_operator 3 \"cmpib_comparison_operator\"\n+\t (match_operator 3 \"ordered_comparison_operator\"\n \t\t\t [(match_operand:DI 1 \"reg_or_0_operand\" \"rM\")\n \t\t\t  (match_operand:DI 2 \"arith5_operand\" \"rL\")])\n \t (pc)\n@@ -9057,7 +9057,7 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n (define_insn \"decrement_and_branch_until_zero\"\n   [(set (pc)\n \t(if_then_else\n-\t  (match_operator 2 \"comparison_operator\"\n+\t  (match_operator 2 \"ordered_comparison_operator\"\n \t   [(plus:SI\n \t      (match_operand:SI 0 \"reg_before_reload_operand\" \"+!r,!*f,*Q\")\n \t      (match_operand:SI 1 \"int5_operand\" \"L,L,L\"))"}, {"sha": "424a3b9e9b26eb99396bfc624007fe0327f35a91", "filename": "gcc/config/pa/predicates.md", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb15d1d34c699ce5de039c8782945ba4cf494428/gcc%2Fconfig%2Fpa%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb15d1d34c699ce5de039c8782945ba4cf494428/gcc%2Fconfig%2Fpa%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpredicates.md?ref=cb15d1d34c699ce5de039c8782945ba4cf494428", "patch": "@@ -662,12 +662,6 @@\n   (and (match_code \"symbol_ref\")\n        (match_test \"SYMBOL_REF_TLS_MODEL (op) == TLS_MODEL_LOCAL_EXEC\")))\n \n-;; True iff this is a comparison operator.  This allows the use of\n-;; MATCH_OPERATOR to recognize all the branch insns.\n-\n-(define_predicate \"cmpib_comparison_operator\"\n-  (match_code \"eq,ne,lt,le,leu,gt,gtu,ge\"))\n-\n ;; True iff OP is an operator suitable for use in a movb instruction.\n \n (define_predicate \"movb_comparison_operator\""}]}