{"sha": "dc8d7a0f7bbd5d24ba74066ea7d0262f7f732774", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGM4ZDdhMGY3YmJkNWQyNGJhNzQwNjZlYTdkMDI2MmY3ZjczMjc3NA==", "commit": {"author": {"name": "Tejas Belagod", "email": "tejas.belagod@arm.com", "date": "2013-08-30T15:04:58Z"}, "committer": {"name": "Tejas Belagod", "email": "belagod@gcc.gnu.org", "date": "2013-08-30T15:04:58Z"}, "message": "arm_neon.h (__AARCH64_UINT64_C, [...]): New arm_neon.h's internal macros to specify 64-bit constants.\n\n2013-08-30  Tejas Belagod  <tejas.belagod@arm.com>\n\ngcc/\n\t* config/aarch64/arm_neon.h (__AARCH64_UINT64_C, __AARCH64_INT64_C): New\n\tarm_neon.h's internal macros to specify 64-bit constants. Avoid using\n\tstdint.h's macros.\n\nFrom-SVN: r202108", "tree": {"sha": "0fcd2df9eae65914b0086dc312607d39d09cdd2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0fcd2df9eae65914b0086dc312607d39d09cdd2a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc8d7a0f7bbd5d24ba74066ea7d0262f7f732774", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc8d7a0f7bbd5d24ba74066ea7d0262f7f732774", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc8d7a0f7bbd5d24ba74066ea7d0262f7f732774", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc8d7a0f7bbd5d24ba74066ea7d0262f7f732774/comments", "author": {"login": "tejas-belagod-arm", "id": 92718852, "node_id": "U_kgDOBYbHBA", "avatar_url": "https://avatars.githubusercontent.com/u/92718852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tejas-belagod-arm", "html_url": "https://github.com/tejas-belagod-arm", "followers_url": "https://api.github.com/users/tejas-belagod-arm/followers", "following_url": "https://api.github.com/users/tejas-belagod-arm/following{/other_user}", "gists_url": "https://api.github.com/users/tejas-belagod-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/tejas-belagod-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tejas-belagod-arm/subscriptions", "organizations_url": "https://api.github.com/users/tejas-belagod-arm/orgs", "repos_url": "https://api.github.com/users/tejas-belagod-arm/repos", "events_url": "https://api.github.com/users/tejas-belagod-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/tejas-belagod-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ac7eacd2f37c1565ef92a1e3c8cc7510059d4a6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac7eacd2f37c1565ef92a1e3c8cc7510059d4a6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac7eacd2f37c1565ef92a1e3c8cc7510059d4a6c"}], "stats": {"total": 405, "additions": 222, "deletions": 183}, "files": [{"sha": "c1ced6eda18d3d3c43b05e38149f15d88497b029", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc8d7a0f7bbd5d24ba74066ea7d0262f7f732774/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc8d7a0f7bbd5d24ba74066ea7d0262f7f732774/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dc8d7a0f7bbd5d24ba74066ea7d0262f7f732774", "patch": "@@ -1,3 +1,9 @@\n+2013-08-30  Tejas Belagod  <tejas.belagod@arm.com>\n+\n+\t* config/aarch64/arm_neon.h (__AARCH64_UINT64_C, __AARCH64_INT64_C): New\n+\tarm_neon.h's internal macros to specify 64-bit constants. Avoid using\n+\tstdint.h's macros.\n+\n 2013-08-30  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \t* recog.c (verify_changes): Verify that changes[i].old is non-zero"}, {"sha": "af097ad9a0d530cda122c7c1d824a96f6f1c4b25", "filename": "gcc/config/aarch64/arm_neon.h", "status": "modified", "additions": 216, "deletions": 183, "changes": 399, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc8d7a0f7bbd5d24ba74066ea7d0262f7f732774/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc8d7a0f7bbd5d24ba74066ea7d0262f7f732774/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Farm_neon.h?ref=dc8d7a0f7bbd5d24ba74066ea7d0262f7f732774", "patch": "@@ -29,6 +29,9 @@\n \n #include <stdint.h>\n \n+#define __AARCH64_UINT64_C(__C) ((uint64_t) __C)\n+#define __AARCH64_INT64_C(__C) ((int64_t) __C)\n+\n typedef __builtin_aarch64_simd_qi int8x8_t\n   __attribute__ ((__vector_size__ (8)));\n typedef __builtin_aarch64_simd_hi int16x4_t\n@@ -9694,7 +9697,7 @@ vmovl_u32 (uint32x2_t a)\n __extension__ static __inline int8x16_t __attribute__ ((__always_inline__))\n vmovn_high_s16 (int8x8_t a, int16x8_t b)\n {\n-  int8x16_t result = vcombine_s8 (a, vcreate_s8 (UINT64_C (0x0)));\n+  int8x16_t result = vcombine_s8 (a, vcreate_s8 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"xtn2 %0.16b,%1.8h\"\n            : \"+w\"(result)\n            : \"w\"(b)\n@@ -9705,7 +9708,7 @@ vmovn_high_s16 (int8x8_t a, int16x8_t b)\n __extension__ static __inline int16x8_t __attribute__ ((__always_inline__))\n vmovn_high_s32 (int16x4_t a, int32x4_t b)\n {\n-  int16x8_t result = vcombine_s16 (a, vcreate_s16 (UINT64_C (0x0)));\n+  int16x8_t result = vcombine_s16 (a, vcreate_s16 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"xtn2 %0.8h,%1.4s\"\n            : \"+w\"(result)\n            : \"w\"(b)\n@@ -9716,7 +9719,7 @@ vmovn_high_s32 (int16x4_t a, int32x4_t b)\n __extension__ static __inline int32x4_t __attribute__ ((__always_inline__))\n vmovn_high_s64 (int32x2_t a, int64x2_t b)\n {\n-  int32x4_t result = vcombine_s32 (a, vcreate_s32 (UINT64_C (0x0)));\n+  int32x4_t result = vcombine_s32 (a, vcreate_s32 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"xtn2 %0.4s,%1.2d\"\n            : \"+w\"(result)\n            : \"w\"(b)\n@@ -9727,7 +9730,7 @@ vmovn_high_s64 (int32x2_t a, int64x2_t b)\n __extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n vmovn_high_u16 (uint8x8_t a, uint16x8_t b)\n {\n-  uint8x16_t result = vcombine_u8 (a, vcreate_u8 (UINT64_C (0x0)));\n+  uint8x16_t result = vcombine_u8 (a, vcreate_u8 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"xtn2 %0.16b,%1.8h\"\n            : \"+w\"(result)\n            : \"w\"(b)\n@@ -9738,7 +9741,7 @@ vmovn_high_u16 (uint8x8_t a, uint16x8_t b)\n __extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n vmovn_high_u32 (uint16x4_t a, uint32x4_t b)\n {\n-  uint16x8_t result = vcombine_u16 (a, vcreate_u16 (UINT64_C (0x0)));\n+  uint16x8_t result = vcombine_u16 (a, vcreate_u16 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"xtn2 %0.8h,%1.4s\"\n            : \"+w\"(result)\n            : \"w\"(b)\n@@ -9749,7 +9752,7 @@ vmovn_high_u32 (uint16x4_t a, uint32x4_t b)\n __extension__ static __inline uint32x4_t __attribute__ ((__always_inline__))\n vmovn_high_u64 (uint32x2_t a, uint64x2_t b)\n {\n-  uint32x4_t result = vcombine_u32 (a, vcreate_u32 (UINT64_C (0x0)));\n+  uint32x4_t result = vcombine_u32 (a, vcreate_u32 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"xtn2 %0.4s,%1.2d\"\n            : \"+w\"(result)\n            : \"w\"(b)\n@@ -12168,7 +12171,7 @@ vqdmulhq_n_s32 (int32x4_t a, int32_t b)\n __extension__ static __inline int8x16_t __attribute__ ((__always_inline__))\n vqmovn_high_s16 (int8x8_t a, int16x8_t b)\n {\n-  int8x16_t result = vcombine_s8 (a, vcreate_s8 (UINT64_C (0x0)));\n+  int8x16_t result = vcombine_s8 (a, vcreate_s8 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"sqxtn2 %0.16b, %1.8h\"\n            : \"+w\"(result)\n            : \"w\"(b)\n@@ -12179,7 +12182,7 @@ vqmovn_high_s16 (int8x8_t a, int16x8_t b)\n __extension__ static __inline int16x8_t __attribute__ ((__always_inline__))\n vqmovn_high_s32 (int16x4_t a, int32x4_t b)\n {\n-  int16x8_t result = vcombine_s16 (a, vcreate_s16 (UINT64_C (0x0)));\n+  int16x8_t result = vcombine_s16 (a, vcreate_s16 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"sqxtn2 %0.8h, %1.4s\"\n            : \"+w\"(result)\n            : \"w\"(b)\n@@ -12190,7 +12193,7 @@ vqmovn_high_s32 (int16x4_t a, int32x4_t b)\n __extension__ static __inline int32x4_t __attribute__ ((__always_inline__))\n vqmovn_high_s64 (int32x2_t a, int64x2_t b)\n {\n-  int32x4_t result = vcombine_s32 (a, vcreate_s32 (UINT64_C (0x0)));\n+  int32x4_t result = vcombine_s32 (a, vcreate_s32 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"sqxtn2 %0.4s, %1.2d\"\n            : \"+w\"(result)\n            : \"w\"(b)\n@@ -12201,7 +12204,7 @@ vqmovn_high_s64 (int32x2_t a, int64x2_t b)\n __extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n vqmovn_high_u16 (uint8x8_t a, uint16x8_t b)\n {\n-  uint8x16_t result = vcombine_u8 (a, vcreate_u8 (UINT64_C (0x0)));\n+  uint8x16_t result = vcombine_u8 (a, vcreate_u8 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"uqxtn2 %0.16b, %1.8h\"\n            : \"+w\"(result)\n            : \"w\"(b)\n@@ -12212,7 +12215,7 @@ vqmovn_high_u16 (uint8x8_t a, uint16x8_t b)\n __extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n vqmovn_high_u32 (uint16x4_t a, uint32x4_t b)\n {\n-  uint16x8_t result = vcombine_u16 (a, vcreate_u16 (UINT64_C (0x0)));\n+  uint16x8_t result = vcombine_u16 (a, vcreate_u16 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"uqxtn2 %0.8h, %1.4s\"\n            : \"+w\"(result)\n            : \"w\"(b)\n@@ -12223,7 +12226,7 @@ vqmovn_high_u32 (uint16x4_t a, uint32x4_t b)\n __extension__ static __inline uint32x4_t __attribute__ ((__always_inline__))\n vqmovn_high_u64 (uint32x2_t a, uint64x2_t b)\n {\n-  uint32x4_t result = vcombine_u32 (a, vcreate_u32 (UINT64_C (0x0)));\n+  uint32x4_t result = vcombine_u32 (a, vcreate_u32 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"uqxtn2 %0.4s, %1.2d\"\n            : \"+w\"(result)\n            : \"w\"(b)\n@@ -12234,7 +12237,7 @@ vqmovn_high_u64 (uint32x2_t a, uint64x2_t b)\n __extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n vqmovun_high_s16 (uint8x8_t a, int16x8_t b)\n {\n-  uint8x16_t result = vcombine_u8 (a, vcreate_u8 (UINT64_C (0x0)));\n+  uint8x16_t result = vcombine_u8 (a, vcreate_u8 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"sqxtun2 %0.16b, %1.8h\"\n            : \"+w\"(result)\n            : \"w\"(b)\n@@ -12245,7 +12248,7 @@ vqmovun_high_s16 (uint8x8_t a, int16x8_t b)\n __extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n vqmovun_high_s32 (uint16x4_t a, int32x4_t b)\n {\n-  uint16x8_t result = vcombine_u16 (a, vcreate_u16 (UINT64_C (0x0)));\n+  uint16x8_t result = vcombine_u16 (a, vcreate_u16 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"sqxtun2 %0.8h, %1.4s\"\n            : \"+w\"(result)\n            : \"w\"(b)\n@@ -12256,7 +12259,7 @@ vqmovun_high_s32 (uint16x4_t a, int32x4_t b)\n __extension__ static __inline uint32x4_t __attribute__ ((__always_inline__))\n vqmovun_high_s64 (uint32x2_t a, int64x2_t b)\n {\n-  uint32x4_t result = vcombine_u32 (a, vcreate_u32 (UINT64_C (0x0)));\n+  uint32x4_t result = vcombine_u32 (a, vcreate_u32 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"sqxtun2 %0.4s, %1.2d\"\n            : \"+w\"(result)\n            : \"w\"(b)\n@@ -12314,7 +12317,8 @@ vqrdmulhq_n_s32 (int32x4_t a, int32_t b)\n        int16x8_t b_ = (b);                                              \\\n        int8x8_t a_ = (a);                                               \\\n        int8x16_t result = vcombine_s8                                   \\\n-                            (a_, vcreate_s8 (UINT64_C (0x0)));          \\\n+                            (a_, vcreate_s8                             \\\n+                                   (__AARCH64_UINT64_C (0x0)));         \\\n        __asm__ (\"sqrshrn2 %0.16b, %1.8h, #%2\"                           \\\n                 : \"+w\"(result)                                          \\\n                 : \"w\"(b_), \"i\"(c)                                       \\\n@@ -12328,7 +12332,8 @@ vqrdmulhq_n_s32 (int32x4_t a, int32_t b)\n        int32x4_t b_ = (b);                                              \\\n        int16x4_t a_ = (a);                                              \\\n        int16x8_t result = vcombine_s16                                  \\\n-                            (a_, vcreate_s16 (UINT64_C (0x0)));         \\\n+                            (a_, vcreate_s16                            \\\n+                                   (__AARCH64_UINT64_C (0x0)));         \\\n        __asm__ (\"sqrshrn2 %0.8h, %1.4s, #%2\"                            \\\n                 : \"+w\"(result)                                          \\\n                 : \"w\"(b_), \"i\"(c)                                       \\\n@@ -12342,7 +12347,8 @@ vqrdmulhq_n_s32 (int32x4_t a, int32_t b)\n        int64x2_t b_ = (b);                                              \\\n        int32x2_t a_ = (a);                                              \\\n        int32x4_t result = vcombine_s32                                  \\\n-                            (a_, vcreate_s32 (UINT64_C (0x0)));         \\\n+                            (a_, vcreate_s32                            \\\n+                                   (__AARCH64_UINT64_C (0x0)));         \\\n        __asm__ (\"sqrshrn2 %0.4s, %1.2d, #%2\"                            \\\n                 : \"+w\"(result)                                          \\\n                 : \"w\"(b_), \"i\"(c)                                       \\\n@@ -12356,7 +12362,8 @@ vqrdmulhq_n_s32 (int32x4_t a, int32_t b)\n        uint16x8_t b_ = (b);                                             \\\n        uint8x8_t a_ = (a);                                              \\\n        uint8x16_t result = vcombine_u8                                  \\\n-                             (a_, vcreate_u8 (UINT64_C (0x0)));         \\\n+                             (a_, vcreate_u8                            \\\n+                                    (__AARCH64_UINT64_C (0x0)));        \\\n        __asm__ (\"uqrshrn2 %0.16b, %1.8h, #%2\"                           \\\n                 : \"+w\"(result)                                          \\\n                 : \"w\"(b_), \"i\"(c)                                       \\\n@@ -12370,7 +12377,8 @@ vqrdmulhq_n_s32 (int32x4_t a, int32_t b)\n        uint32x4_t b_ = (b);                                             \\\n        uint16x4_t a_ = (a);                                             \\\n        uint16x8_t result = vcombine_u16                                 \\\n-                             (a_, vcreate_u16 (UINT64_C (0x0)));        \\\n+                             (a_, vcreate_u16                           \\\n+                                    (__AARCH64_UINT64_C (0x0)));        \\\n        __asm__ (\"uqrshrn2 %0.8h, %1.4s, #%2\"                            \\\n                 : \"+w\"(result)                                          \\\n                 : \"w\"(b_), \"i\"(c)                                       \\\n@@ -12384,7 +12392,8 @@ vqrdmulhq_n_s32 (int32x4_t a, int32_t b)\n        uint64x2_t b_ = (b);                                             \\\n        uint32x2_t a_ = (a);                                             \\\n        uint32x4_t result = vcombine_u32                                 \\\n-                             (a_, vcreate_u32 (UINT64_C (0x0)));        \\\n+                             (a_, vcreate_u32                           \\\n+                                    (__AARCH64_UINT64_C (0x0)));        \\\n        __asm__ (\"uqrshrn2 %0.4s, %1.2d, #%2\"                            \\\n                 : \"+w\"(result)                                          \\\n                 : \"w\"(b_), \"i\"(c)                                       \\\n@@ -12398,7 +12407,8 @@ vqrdmulhq_n_s32 (int32x4_t a, int32_t b)\n        int16x8_t b_ = (b);                                              \\\n        uint8x8_t a_ = (a);                                              \\\n        uint8x16_t result = vcombine_u8                                  \\\n-                             (a_, vcreate_u8 (UINT64_C (0x0)));         \\\n+                             (a_, vcreate_u8                            \\\n+                                    (__AARCH64_UINT64_C (0x0)));        \\\n        __asm__ (\"sqrshrun2 %0.16b, %1.8h, #%2\"                          \\\n                 : \"+w\"(result)                                          \\\n                 : \"w\"(b_), \"i\"(c)                                       \\\n@@ -12412,7 +12422,8 @@ vqrdmulhq_n_s32 (int32x4_t a, int32_t b)\n        int32x4_t b_ = (b);                                              \\\n        uint16x4_t a_ = (a);                                             \\\n        uint16x8_t result = vcombine_u16                                 \\\n-                             (a_, vcreate_u16 (UINT64_C (0x0)));        \\\n+                             (a_, vcreate_u16                           \\\n+                                    (__AARCH64_UINT64_C (0x0)));        \\\n        __asm__ (\"sqrshrun2 %0.8h, %1.4s, #%2\"                           \\\n                 : \"+w\"(result)                                          \\\n                 : \"w\"(b_), \"i\"(c)                                       \\\n@@ -12426,7 +12437,8 @@ vqrdmulhq_n_s32 (int32x4_t a, int32_t b)\n        int64x2_t b_ = (b);                                              \\\n        uint32x2_t a_ = (a);                                             \\\n        uint32x4_t result = vcombine_u32                                 \\\n-                             (a_, vcreate_u32 (UINT64_C (0x0)));        \\\n+                             (a_, vcreate_u32                           \\\n+                                    (__AARCH64_UINT64_C (0x0)));        \\\n        __asm__ (\"sqrshrun2 %0.4s, %1.2d, #%2\"                           \\\n                 : \"+w\"(result)                                          \\\n                 : \"w\"(b_), \"i\"(c)                                       \\\n@@ -12440,7 +12452,8 @@ vqrdmulhq_n_s32 (int32x4_t a, int32_t b)\n        int16x8_t b_ = (b);                                              \\\n        int8x8_t a_ = (a);                                               \\\n        int8x16_t result = vcombine_s8                                   \\\n-                            (a_, vcreate_s8 (UINT64_C (0x0)));          \\\n+                            (a_, vcreate_s8                             \\\n+                                   (__AARCH64_UINT64_C (0x0)));         \\\n        __asm__ (\"sqshrn2 %0.16b, %1.8h, #%2\"                            \\\n                 : \"+w\"(result)                                          \\\n                 : \"w\"(b_), \"i\"(c)                                       \\\n@@ -12454,7 +12467,8 @@ vqrdmulhq_n_s32 (int32x4_t a, int32_t b)\n        int32x4_t b_ = (b);                                              \\\n        int16x4_t a_ = (a);                                              \\\n        int16x8_t result = vcombine_s16                                  \\\n-                            (a_, vcreate_s16 (UINT64_C (0x0)));         \\\n+                            (a_, vcreate_s16                            \\\n+                                   (__AARCH64_UINT64_C (0x0)));         \\\n        __asm__ (\"sqshrn2 %0.8h, %1.4s, #%2\"                             \\\n                 : \"+w\"(result)                                          \\\n                 : \"w\"(b_), \"i\"(c)                                       \\\n@@ -12468,7 +12482,8 @@ vqrdmulhq_n_s32 (int32x4_t a, int32_t b)\n        int64x2_t b_ = (b);                                              \\\n        int32x2_t a_ = (a);                                              \\\n        int32x4_t result = vcombine_s32                                  \\\n-                            (a_, vcreate_s32 (UINT64_C (0x0)));         \\\n+                            (a_, vcreate_s32                            \\\n+                                   (__AARCH64_UINT64_C (0x0)));         \\\n        __asm__ (\"sqshrn2 %0.4s, %1.2d, #%2\"                             \\\n                 : \"+w\"(result)                                          \\\n                 : \"w\"(b_), \"i\"(c)                                       \\\n@@ -12482,7 +12497,8 @@ vqrdmulhq_n_s32 (int32x4_t a, int32_t b)\n        uint16x8_t b_ = (b);                                             \\\n        uint8x8_t a_ = (a);                                              \\\n        uint8x16_t result = vcombine_u8                                  \\\n-                             (a_, vcreate_u8 (UINT64_C (0x0)));         \\\n+                             (a_, vcreate_u8                            \\\n+                                    (__AARCH64_UINT64_C (0x0)));        \\\n        __asm__ (\"uqshrn2 %0.16b, %1.8h, #%2\"                            \\\n                 : \"+w\"(result)                                          \\\n                 : \"w\"(b_), \"i\"(c)                                       \\\n@@ -12496,7 +12512,8 @@ vqrdmulhq_n_s32 (int32x4_t a, int32_t b)\n        uint32x4_t b_ = (b);                                             \\\n        uint16x4_t a_ = (a);                                             \\\n        uint16x8_t result = vcombine_u16                                 \\\n-                             (a_, vcreate_u16 (UINT64_C (0x0)));        \\\n+                             (a_, vcreate_u16                           \\\n+                                    (__AARCH64_UINT64_C (0x0)));        \\\n        __asm__ (\"uqshrn2 %0.8h, %1.4s, #%2\"                             \\\n                 : \"+w\"(result)                                          \\\n                 : \"w\"(b_), \"i\"(c)                                       \\\n@@ -12510,7 +12527,8 @@ vqrdmulhq_n_s32 (int32x4_t a, int32_t b)\n        uint64x2_t b_ = (b);                                             \\\n        uint32x2_t a_ = (a);                                             \\\n        uint32x4_t result = vcombine_u32                                 \\\n-                             (a_, vcreate_u32 (UINT64_C (0x0)));        \\\n+                             (a_, vcreate_u32                           \\\n+                                    (__AARCH64_UINT64_C (0x0)));        \\\n        __asm__ (\"uqshrn2 %0.4s, %1.2d, #%2\"                             \\\n                 : \"+w\"(result)                                          \\\n                 : \"w\"(b_), \"i\"(c)                                       \\\n@@ -12524,7 +12542,8 @@ vqrdmulhq_n_s32 (int32x4_t a, int32_t b)\n        int16x8_t b_ = (b);                                              \\\n        uint8x8_t a_ = (a);                                              \\\n        uint8x16_t result = vcombine_u8                                  \\\n-                             (a_, vcreate_u8 (UINT64_C (0x0)));         \\\n+                             (a_, vcreate_u8                            \\\n+                                    (__AARCH64_UINT64_C (0x0)));        \\\n        __asm__ (\"sqshrun2 %0.16b, %1.8h, #%2\"                           \\\n                 : \"+w\"(result)                                          \\\n                 : \"w\"(b_), \"i\"(c)                                       \\\n@@ -12538,7 +12557,8 @@ vqrdmulhq_n_s32 (int32x4_t a, int32_t b)\n        int32x4_t b_ = (b);                                              \\\n        uint16x4_t a_ = (a);                                             \\\n        uint16x8_t result = vcombine_u16                                 \\\n-                             (a_, vcreate_u16 (UINT64_C (0x0)));        \\\n+                             (a_, vcreate_u16                           \\\n+                                    (__AARCH64_UINT64_C (0x0)));        \\\n        __asm__ (\"sqshrun2 %0.8h, %1.4s, #%2\"                            \\\n                 : \"+w\"(result)                                          \\\n                 : \"w\"(b_), \"i\"(c)                                       \\\n@@ -12552,7 +12572,8 @@ vqrdmulhq_n_s32 (int32x4_t a, int32_t b)\n        int64x2_t b_ = (b);                                              \\\n        uint32x2_t a_ = (a);                                             \\\n        uint32x4_t result = vcombine_u32                                 \\\n-                             (a_, vcreate_u32 (UINT64_C (0x0)));        \\\n+                             (a_, vcreate_u32                           \\\n+                                    (__AARCH64_UINT64_C (0x0)));        \\\n        __asm__ (\"sqshrun2 %0.4s, %1.2d, #%2\"                            \\\n                 : \"+w\"(result)                                          \\\n                 : \"w\"(b_), \"i\"(c)                                       \\\n@@ -13028,7 +13049,8 @@ vrev64q_u32 (uint32x4_t a)\n        int16x8_t b_ = (b);                                              \\\n        int8x8_t a_ = (a);                                               \\\n        int8x16_t result = vcombine_s8                                   \\\n-                            (a_, vcreate_s8 (UINT64_C (0x0)));          \\\n+                            (a_, vcreate_s8                             \\\n+                                   (__AARCH64_UINT64_C (0x0)));         \\\n        __asm__ (\"rshrn2 %0.16b,%1.8h,#%2\"                               \\\n                 : \"+w\"(result)                                          \\\n                 : \"w\"(b_), \"i\"(c)                                       \\\n@@ -13042,7 +13064,8 @@ vrev64q_u32 (uint32x4_t a)\n        int32x4_t b_ = (b);                                              \\\n        int16x4_t a_ = (a);                                              \\\n        int16x8_t result = vcombine_s16                                  \\\n-                            (a_, vcreate_s16 (UINT64_C (0x0)));         \\\n+                            (a_, vcreate_s16                            \\\n+                                   (__AARCH64_UINT64_C (0x0)));         \\\n        __asm__ (\"rshrn2 %0.8h,%1.4s,#%2\"                                \\\n                 : \"+w\"(result)                                          \\\n                 : \"w\"(b_), \"i\"(c)                                       \\\n@@ -13056,7 +13079,8 @@ vrev64q_u32 (uint32x4_t a)\n        int64x2_t b_ = (b);                                              \\\n        int32x2_t a_ = (a);                                              \\\n        int32x4_t result = vcombine_s32                                  \\\n-                            (a_, vcreate_s32 (UINT64_C (0x0)));         \\\n+                            (a_, vcreate_s32                            \\\n+                                   (__AARCH64_UINT64_C (0x0)));         \\\n        __asm__ (\"rshrn2 %0.4s,%1.2d,#%2\"                                \\\n                 : \"+w\"(result)                                          \\\n                 : \"w\"(b_), \"i\"(c)                                       \\\n@@ -13070,7 +13094,8 @@ vrev64q_u32 (uint32x4_t a)\n        uint16x8_t b_ = (b);                                             \\\n        uint8x8_t a_ = (a);                                              \\\n        uint8x16_t result = vcombine_u8                                  \\\n-                            (a_, vcreate_u8 (UINT64_C (0x0)));          \\\n+                            (a_, vcreate_u8                             \\\n+                                   (__AARCH64_UINT64_C (0x0)));         \\\n        __asm__ (\"rshrn2 %0.16b,%1.8h,#%2\"                               \\\n                 : \"+w\"(result)                                          \\\n                 : \"w\"(b_), \"i\"(c)                                       \\\n@@ -13084,7 +13109,8 @@ vrev64q_u32 (uint32x4_t a)\n        uint32x4_t b_ = (b);                                             \\\n        uint16x4_t a_ = (a);                                             \\\n        uint16x8_t result = vcombine_u16                                 \\\n-                            (a_, vcreate_u16 (UINT64_C (0x0)));         \\\n+                            (a_, vcreate_u16                            \\\n+                                   (__AARCH64_UINT64_C (0x0)));         \\\n        __asm__ (\"rshrn2 %0.8h,%1.4s,#%2\"                                \\\n                 : \"+w\"(result)                                          \\\n                 : \"w\"(b_), \"i\"(c)                                       \\\n@@ -13098,7 +13124,8 @@ vrev64q_u32 (uint32x4_t a)\n        uint64x2_t b_ = (b);                                             \\\n        uint32x2_t a_ = (a);                                             \\\n        uint32x4_t result = vcombine_u32                                 \\\n-                            (a_, vcreate_u32 (UINT64_C (0x0)));         \\\n+                            (a_, vcreate_u32                            \\\n+                                   (__AARCH64_UINT64_C (0x0)));         \\\n        __asm__ (\"rshrn2 %0.4s,%1.2d,#%2\"                                \\\n                 : \"+w\"(result)                                          \\\n                 : \"w\"(b_), \"i\"(c)                                       \\\n@@ -13335,7 +13362,7 @@ vrsrtsq_f64 (float64x2_t a, float64x2_t b)\n __extension__ static __inline int8x16_t __attribute__ ((__always_inline__))\n vrsubhn_high_s16 (int8x8_t a, int16x8_t b, int16x8_t c)\n {\n-  int8x16_t result = vcombine_s8 (a, vcreate_s8 (UINT64_C (0x0)));\n+  int8x16_t result = vcombine_s8 (a, vcreate_s8 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"rsubhn2 %0.16b, %1.8h, %2.8h\"\n            : \"+w\"(result)\n            : \"w\"(b), \"w\"(c)\n@@ -13346,7 +13373,7 @@ vrsubhn_high_s16 (int8x8_t a, int16x8_t b, int16x8_t c)\n __extension__ static __inline int16x8_t __attribute__ ((__always_inline__))\n vrsubhn_high_s32 (int16x4_t a, int32x4_t b, int32x4_t c)\n {\n-  int16x8_t result = vcombine_s16 (a, vcreate_s16 (UINT64_C (0x0)));\n+  int16x8_t result = vcombine_s16 (a, vcreate_s16 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"rsubhn2 %0.8h, %1.4s, %2.4s\"\n            : \"+w\"(result)\n            : \"w\"(b), \"w\"(c)\n@@ -13357,7 +13384,7 @@ vrsubhn_high_s32 (int16x4_t a, int32x4_t b, int32x4_t c)\n __extension__ static __inline int32x4_t __attribute__ ((__always_inline__))\n vrsubhn_high_s64 (int32x2_t a, int64x2_t b, int64x2_t c)\n {\n-  int32x4_t result = vcombine_s32 (a, vcreate_s32 (UINT64_C (0x0)));\n+  int32x4_t result = vcombine_s32 (a, vcreate_s32 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"rsubhn2 %0.4s, %1.2d, %2.2d\"\n            : \"+w\"(result)\n            : \"w\"(b), \"w\"(c)\n@@ -13368,7 +13395,7 @@ vrsubhn_high_s64 (int32x2_t a, int64x2_t b, int64x2_t c)\n __extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n vrsubhn_high_u16 (uint8x8_t a, uint16x8_t b, uint16x8_t c)\n {\n-  uint8x16_t result = vcombine_u8 (a, vcreate_u8 (UINT64_C (0x0)));\n+  uint8x16_t result = vcombine_u8 (a, vcreate_u8 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"rsubhn2 %0.16b, %1.8h, %2.8h\"\n            : \"+w\"(result)\n            : \"w\"(b), \"w\"(c)\n@@ -13379,7 +13406,7 @@ vrsubhn_high_u16 (uint8x8_t a, uint16x8_t b, uint16x8_t c)\n __extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n vrsubhn_high_u32 (uint16x4_t a, uint32x4_t b, uint32x4_t c)\n {\n-  uint16x8_t result = vcombine_u16 (a, vcreate_u16 (UINT64_C (0x0)));\n+  uint16x8_t result = vcombine_u16 (a, vcreate_u16 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"rsubhn2 %0.8h, %1.4s, %2.4s\"\n            : \"+w\"(result)\n            : \"w\"(b), \"w\"(c)\n@@ -13390,7 +13417,7 @@ vrsubhn_high_u32 (uint16x4_t a, uint32x4_t b, uint32x4_t c)\n __extension__ static __inline uint32x4_t __attribute__ ((__always_inline__))\n vrsubhn_high_u64 (uint32x2_t a, uint64x2_t b, uint64x2_t c)\n {\n-  uint32x4_t result = vcombine_u32 (a, vcreate_u32 (UINT64_C (0x0)));\n+  uint32x4_t result = vcombine_u32 (a, vcreate_u32 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"rsubhn2 %0.4s, %1.2d, %2.2d\"\n            : \"+w\"(result)\n            : \"w\"(b), \"w\"(c)\n@@ -13782,7 +13809,8 @@ vrsubhn_u64 (uint64x2_t a, uint64x2_t b)\n        int16x8_t b_ = (b);                                              \\\n        int8x8_t a_ = (a);                                               \\\n        int8x16_t result = vcombine_s8                                   \\\n-                            (a_, vcreate_s8 (UINT64_C (0x0)));          \\\n+                            (a_, vcreate_s8                             \\\n+                                   (__AARCH64_UINT64_C (0x0)));         \\\n        __asm__ (\"shrn2 %0.16b,%1.8h,#%2\"                                \\\n                 : \"+w\"(result)                                          \\\n                 : \"w\"(b_), \"i\"(c)                                       \\\n@@ -13796,7 +13824,8 @@ vrsubhn_u64 (uint64x2_t a, uint64x2_t b)\n        int32x4_t b_ = (b);                                              \\\n        int16x4_t a_ = (a);                                              \\\n        int16x8_t result = vcombine_s16                                  \\\n-                            (a_, vcreate_s16 (UINT64_C (0x0)));         \\\n+                            (a_, vcreate_s16                            \\\n+                                   (__AARCH64_UINT64_C (0x0)));         \\\n        __asm__ (\"shrn2 %0.8h,%1.4s,#%2\"                                 \\\n                 : \"+w\"(result)                                          \\\n                 : \"w\"(b_), \"i\"(c)                                       \\\n@@ -13810,7 +13839,8 @@ vrsubhn_u64 (uint64x2_t a, uint64x2_t b)\n        int64x2_t b_ = (b);                                              \\\n        int32x2_t a_ = (a);                                              \\\n        int32x4_t result = vcombine_s32                                  \\\n-                            (a_, vcreate_s32 (UINT64_C (0x0)));         \\\n+                            (a_, vcreate_s32                            \\\n+                                   (__AARCH64_UINT64_C (0x0)));         \\\n        __asm__ (\"shrn2 %0.4s,%1.2d,#%2\"                                 \\\n                 : \"+w\"(result)                                          \\\n                 : \"w\"(b_), \"i\"(c)                                       \\\n@@ -13824,7 +13854,8 @@ vrsubhn_u64 (uint64x2_t a, uint64x2_t b)\n        uint16x8_t b_ = (b);                                             \\\n        uint8x8_t a_ = (a);                                              \\\n        uint8x16_t result = vcombine_u8                                  \\\n-                            (a_, vcreate_u8 (UINT64_C (0x0)));          \\\n+                            (a_, vcreate_u8                             \\\n+                                   (__AARCH64_UINT64_C (0x0)));         \\\n        __asm__ (\"shrn2 %0.16b,%1.8h,#%2\"                                \\\n                 : \"+w\"(result)                                          \\\n                 : \"w\"(b_), \"i\"(c)                                       \\\n@@ -13838,7 +13869,8 @@ vrsubhn_u64 (uint64x2_t a, uint64x2_t b)\n        uint32x4_t b_ = (b);                                             \\\n        uint16x4_t a_ = (a);                                             \\\n        uint16x8_t result = vcombine_u16                                 \\\n-                            (a_, vcreate_u16 (UINT64_C (0x0)));         \\\n+                            (a_, vcreate_u16                            \\\n+                                   (__AARCH64_UINT64_C (0x0)));         \\\n        __asm__ (\"shrn2 %0.8h,%1.4s,#%2\"                                 \\\n                 : \"+w\"(result)                                          \\\n                 : \"w\"(b_), \"i\"(c)                                       \\\n@@ -13852,7 +13884,8 @@ vrsubhn_u64 (uint64x2_t a, uint64x2_t b)\n        uint64x2_t b_ = (b);                                             \\\n        uint32x2_t a_ = (a);                                             \\\n        uint32x4_t result = vcombine_u32                                 \\\n-                            (a_, vcreate_u32 (UINT64_C (0x0)));         \\\n+                            (a_, vcreate_u32                            \\\n+                                   (__AARCH64_UINT64_C (0x0)));         \\\n        __asm__ (\"shrn2 %0.4s,%1.2d,#%2\"                                 \\\n                 : \"+w\"(result)                                          \\\n                 : \"w\"(b_), \"i\"(c)                                       \\\n@@ -14304,7 +14337,7 @@ vrsubhn_u64 (uint64x2_t a, uint64x2_t b)\n __extension__ static __inline int8x16_t __attribute__ ((__always_inline__))\n vsubhn_high_s16 (int8x8_t a, int16x8_t b, int16x8_t c)\n {\n-  int8x16_t result = vcombine_s8 (a, vcreate_s8 (UINT64_C (0x0)));\n+  int8x16_t result = vcombine_s8 (a, vcreate_s8 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"subhn2 %0.16b, %1.8h, %2.8h\"\n            : \"+w\"(result)\n            : \"w\"(b), \"w\"(c)\n@@ -14315,7 +14348,7 @@ vsubhn_high_s16 (int8x8_t a, int16x8_t b, int16x8_t c)\n __extension__ static __inline int16x8_t __attribute__ ((__always_inline__))\n vsubhn_high_s32 (int16x4_t a, int32x4_t b, int32x4_t c)\n {\n-  int16x8_t result = vcombine_s16 (a, vcreate_s16 (UINT64_C (0x0)));\n+  int16x8_t result = vcombine_s16 (a, vcreate_s16 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"subhn2 %0.8h, %1.4s, %2.4s\"\n            : \"+w\"(result)\n            : \"w\"(b), \"w\"(c)\n@@ -14326,7 +14359,7 @@ vsubhn_high_s32 (int16x4_t a, int32x4_t b, int32x4_t c)\n __extension__ static __inline int32x4_t __attribute__ ((__always_inline__))\n vsubhn_high_s64 (int32x2_t a, int64x2_t b, int64x2_t c)\n {\n-  int32x4_t result = vcombine_s32 (a, vcreate_s32 (UINT64_C (0x0)));\n+  int32x4_t result = vcombine_s32 (a, vcreate_s32 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"subhn2 %0.4s, %1.2d, %2.2d\"\n            : \"+w\"(result)\n            : \"w\"(b), \"w\"(c)\n@@ -14337,7 +14370,7 @@ vsubhn_high_s64 (int32x2_t a, int64x2_t b, int64x2_t c)\n __extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n vsubhn_high_u16 (uint8x8_t a, uint16x8_t b, uint16x8_t c)\n {\n-  uint8x16_t result = vcombine_u8 (a, vcreate_u8 (UINT64_C (0x0)));\n+  uint8x16_t result = vcombine_u8 (a, vcreate_u8 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"subhn2 %0.16b, %1.8h, %2.8h\"\n            : \"+w\"(result)\n            : \"w\"(b), \"w\"(c)\n@@ -14348,7 +14381,7 @@ vsubhn_high_u16 (uint8x8_t a, uint16x8_t b, uint16x8_t c)\n __extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n vsubhn_high_u32 (uint16x4_t a, uint32x4_t b, uint32x4_t c)\n {\n-  uint16x8_t result = vcombine_u16 (a, vcreate_u16 (UINT64_C (0x0)));\n+  uint16x8_t result = vcombine_u16 (a, vcreate_u16 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"subhn2 %0.8h, %1.4s, %2.4s\"\n            : \"+w\"(result)\n            : \"w\"(b), \"w\"(c)\n@@ -14359,7 +14392,7 @@ vsubhn_high_u32 (uint16x4_t a, uint32x4_t b, uint32x4_t c)\n __extension__ static __inline uint32x4_t __attribute__ ((__always_inline__))\n vsubhn_high_u64 (uint32x2_t a, uint64x2_t b, uint64x2_t c)\n {\n-  uint32x4_t result = vcombine_u32 (a, vcreate_u32 (UINT64_C (0x0)));\n+  uint32x4_t result = vcombine_u32 (a, vcreate_u32 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"subhn2 %0.4s, %1.2d, %2.2d\"\n            : \"+w\"(result)\n            : \"w\"(b), \"w\"(c)\n@@ -16957,7 +16990,7 @@ __extension__ static __inline int8x8_t __attribute__ ((__always_inline__))\n vtbl1_s8 (int8x8_t tab, int8x8_t idx)\n {\n   int8x8_t result;\n-  int8x16_t temp = vcombine_s8 (tab, vcreate_s8 (UINT64_C (0x0)));\n+  int8x16_t temp = vcombine_s8 (tab, vcreate_s8 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"tbl %0.8b, {%1.16b}, %2.8b\"\n            : \"=w\"(result)\n            : \"w\"(temp), \"w\"(idx)\n@@ -16969,7 +17002,7 @@ __extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n vtbl1_u8 (uint8x8_t tab, uint8x8_t idx)\n {\n   uint8x8_t result;\n-  uint8x16_t temp = vcombine_u8 (tab, vcreate_u8 (UINT64_C (0x0)));\n+  uint8x16_t temp = vcombine_u8 (tab, vcreate_u8 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"tbl %0.8b, {%1.16b}, %2.8b\"\n            : \"=w\"(result)\n            : \"w\"(temp), \"w\"(idx)\n@@ -16981,7 +17014,7 @@ __extension__ static __inline poly8x8_t __attribute__ ((__always_inline__))\n vtbl1_p8 (poly8x8_t tab, uint8x8_t idx)\n {\n   poly8x8_t result;\n-  poly8x16_t temp = vcombine_p8 (tab, vcreate_p8 (UINT64_C (0x0)));\n+  poly8x16_t temp = vcombine_p8 (tab, vcreate_p8 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"tbl %0.8b, {%1.16b}, %2.8b\"\n            : \"=w\"(result)\n            : \"w\"(temp), \"w\"(idx)\n@@ -17031,7 +17064,7 @@ vtbl3_s8 (int8x8x3_t tab, int8x8_t idx)\n   int8x8_t result;\n   int8x16x2_t temp;\n   temp.val[0] = vcombine_s8 (tab.val[0], tab.val[1]);\n-  temp.val[1] = vcombine_s8 (tab.val[2], vcreate_s8 (UINT64_C (0x0)));\n+  temp.val[1] = vcombine_s8 (tab.val[2], vcreate_s8 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"ld1 {v16.16b - v17.16b }, %1\\n\\t\"\n \t   \"tbl %0.8b, {v16.16b - v17.16b}, %2.8b\\n\\t\"\n            : \"=w\"(result)\n@@ -17046,7 +17079,7 @@ vtbl3_u8 (uint8x8x3_t tab, uint8x8_t idx)\n   uint8x8_t result;\n   uint8x16x2_t temp;\n   temp.val[0] = vcombine_u8 (tab.val[0], tab.val[1]);\n-  temp.val[1] = vcombine_u8 (tab.val[2], vcreate_u8 (UINT64_C (0x0)));\n+  temp.val[1] = vcombine_u8 (tab.val[2], vcreate_u8 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"ld1 {v16.16b - v17.16b }, %1\\n\\t\"\n \t   \"tbl %0.8b, {v16.16b - v17.16b}, %2.8b\\n\\t\"\n            : \"=w\"(result)\n@@ -17061,7 +17094,7 @@ vtbl3_p8 (poly8x8x3_t tab, uint8x8_t idx)\n   poly8x8_t result;\n   poly8x16x2_t temp;\n   temp.val[0] = vcombine_p8 (tab.val[0], tab.val[1]);\n-  temp.val[1] = vcombine_p8 (tab.val[2], vcreate_p8 (UINT64_C (0x0)));\n+  temp.val[1] = vcombine_p8 (tab.val[2], vcreate_p8 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"ld1 {v16.16b - v17.16b }, %1\\n\\t\"\n \t   \"tbl %0.8b, {v16.16b - v17.16b}, %2.8b\\n\\t\"\n            : \"=w\"(result)\n@@ -17120,7 +17153,7 @@ vtbx1_s8 (int8x8_t r, int8x8_t tab, int8x8_t idx)\n {\n   int8x8_t result;\n   int8x8_t tmp1;\n-  int8x16_t temp = vcombine_s8 (tab, vcreate_s8 (UINT64_C (0x0)));\n+  int8x16_t temp = vcombine_s8 (tab, vcreate_s8 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"movi %0.8b, 8\\n\\t\"\n \t   \"cmhs %0.8b, %3.8b, %0.8b\\n\\t\"\n \t   \"tbl %1.8b, {%2.16b}, %3.8b\\n\\t\"\n@@ -17136,7 +17169,7 @@ vtbx1_u8 (uint8x8_t r, uint8x8_t tab, uint8x8_t idx)\n {\n   uint8x8_t result;\n   uint8x8_t tmp1;\n-  uint8x16_t temp = vcombine_u8 (tab, vcreate_u8 (UINT64_C (0x0)));\n+  uint8x16_t temp = vcombine_u8 (tab, vcreate_u8 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"movi %0.8b, 8\\n\\t\"\n \t   \"cmhs %0.8b, %3.8b, %0.8b\\n\\t\"\n \t   \"tbl %1.8b, {%2.16b}, %3.8b\\n\\t\"\n@@ -17152,7 +17185,7 @@ vtbx1_p8 (poly8x8_t r, poly8x8_t tab, uint8x8_t idx)\n {\n   poly8x8_t result;\n   poly8x8_t tmp1;\n-  poly8x16_t temp = vcombine_p8 (tab, vcreate_p8 (UINT64_C (0x0)));\n+  poly8x16_t temp = vcombine_p8 (tab, vcreate_p8 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"movi %0.8b, 8\\n\\t\"\n \t   \"cmhs %0.8b, %3.8b, %0.8b\\n\\t\"\n \t   \"tbl %1.8b, {%2.16b}, %3.8b\\n\\t\"\n@@ -17206,7 +17239,7 @@ vtbx3_s8 (int8x8_t r, int8x8x3_t tab, int8x8_t idx)\n   int8x8_t tmp1;\n   int8x16x2_t temp;\n   temp.val[0] = vcombine_s8 (tab.val[0], tab.val[1]);\n-  temp.val[1] = vcombine_s8 (tab.val[2], vcreate_s8 (UINT64_C (0x0)));\n+  temp.val[1] = vcombine_s8 (tab.val[2], vcreate_s8 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"ld1 {v16.16b - v17.16b}, %2\\n\\t\"\n \t   \"movi %0.8b, 24\\n\\t\"\n \t   \"cmhs %0.8b, %3.8b, %0.8b\\n\\t\"\n@@ -17225,7 +17258,7 @@ vtbx3_u8 (uint8x8_t r, uint8x8x3_t tab, uint8x8_t idx)\n   uint8x8_t tmp1;\n   uint8x16x2_t temp;\n   temp.val[0] = vcombine_u8 (tab.val[0], tab.val[1]);\n-  temp.val[1] = vcombine_u8 (tab.val[2], vcreate_u8 (UINT64_C (0x0)));\n+  temp.val[1] = vcombine_u8 (tab.val[2], vcreate_u8 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"ld1 {v16.16b - v17.16b}, %2\\n\\t\"\n \t   \"movi %0.8b, 24\\n\\t\"\n \t   \"cmhs %0.8b, %3.8b, %0.8b\\n\\t\"\n@@ -17244,7 +17277,7 @@ vtbx3_p8 (poly8x8_t r, poly8x8x3_t tab, uint8x8_t idx)\n   poly8x8_t tmp1;\n   poly8x16x2_t temp;\n   temp.val[0] = vcombine_p8 (tab.val[0], tab.val[1]);\n-  temp.val[1] = vcombine_p8 (tab.val[2], vcreate_p8 (UINT64_C (0x0)));\n+  temp.val[1] = vcombine_p8 (tab.val[2], vcreate_p8 (__AARCH64_UINT64_C (0x0)));\n   __asm__ (\"ld1 {v16.16b - v17.16b}, %2\\n\\t\"\n \t   \"movi %0.8b, 24\\n\\t\"\n \t   \"cmhs %0.8b, %3.8b, %0.8b\\n\\t\"\n@@ -21420,7 +21453,7 @@ vqdmlal_high_n_s16 (int32x4_t __a, int16x8_t __b, int16_t __c)\n __extension__ static __inline int32x4_t __attribute__ ((__always_inline__))\n vqdmlal_lane_s16 (int32x4_t __a, int16x4_t __b, int16x4_t __c, int const __d)\n {\n-  int16x8_t __tmp = vcombine_s16 (__c, vcreate_s16 (INT64_C (0)));\n+  int16x8_t __tmp = vcombine_s16 (__c, vcreate_s16 (__AARCH64_INT64_C (0)));\n   return __builtin_aarch64_sqdmlal_lanev4hi (__a, __b, __tmp, __d);\n }\n \n@@ -21471,7 +21504,7 @@ vqdmlal_high_n_s32 (int64x2_t __a, int32x4_t __b, int32_t __c)\n __extension__ static __inline int64x2_t __attribute__ ((__always_inline__))\n vqdmlal_lane_s32 (int64x2_t __a, int32x2_t __b, int32x2_t __c, int const __d)\n {\n-  int32x4_t __tmp = vcombine_s32 (__c, vcreate_s32 (INT64_C (0)));\n+  int32x4_t __tmp = vcombine_s32 (__c, vcreate_s32 (__AARCH64_INT64_C (0)));\n   return __builtin_aarch64_sqdmlal_lanev2si (__a, __b, __tmp, __d);\n }\n \n@@ -21548,7 +21581,7 @@ vqdmlsl_high_n_s16 (int32x4_t __a, int16x8_t __b, int16_t __c)\n __extension__ static __inline int32x4_t __attribute__ ((__always_inline__))\n vqdmlsl_lane_s16 (int32x4_t __a, int16x4_t __b, int16x4_t __c, int const __d)\n {\n-  int16x8_t __tmp = vcombine_s16 (__c, vcreate_s16 (INT64_C (0)));\n+  int16x8_t __tmp = vcombine_s16 (__c, vcreate_s16 (__AARCH64_INT64_C (0)));\n   return __builtin_aarch64_sqdmlsl_lanev4hi (__a, __b, __tmp, __d);\n }\n \n@@ -21599,7 +21632,7 @@ vqdmlsl_high_n_s32 (int64x2_t __a, int32x4_t __b, int32_t __c)\n __extension__ static __inline int64x2_t __attribute__ ((__always_inline__))\n vqdmlsl_lane_s32 (int64x2_t __a, int32x2_t __b, int32x2_t __c, int const __d)\n {\n-  int32x4_t __tmp = vcombine_s32 (__c, vcreate_s32 (INT64_C (0)));\n+  int32x4_t __tmp = vcombine_s32 (__c, vcreate_s32 (__AARCH64_INT64_C (0)));\n   return __builtin_aarch64_sqdmlsl_lanev2si (__a, __b, __tmp, __d);\n }\n \n@@ -21724,7 +21757,7 @@ vqdmull_high_n_s16 (int16x8_t __a, int16_t __b)\n __extension__ static __inline int32x4_t __attribute__ ((__always_inline__))\n vqdmull_lane_s16 (int16x4_t __a, int16x4_t __b, int const __c)\n {\n-  int16x8_t __tmp = vcombine_s16 (__b, vcreate_s16 (INT64_C (0)));\n+  int16x8_t __tmp = vcombine_s16 (__b, vcreate_s16 (__AARCH64_INT64_C (0)));\n   return __builtin_aarch64_sqdmull_lanev4hi (__a, __tmp, __c);\n }\n \n@@ -21773,7 +21806,7 @@ vqdmull_high_n_s32 (int32x4_t __a, int32_t __b)\n __extension__ static __inline int64x2_t __attribute__ ((__always_inline__))\n vqdmull_lane_s32 (int32x2_t __a, int32x2_t __b, int const __c)\n {\n-  int32x4_t __tmp = vcombine_s32 (__b, vcreate_s32 (INT64_C (0)));\n+  int32x4_t __tmp = vcombine_s32 (__b, vcreate_s32 (__AARCH64_INT64_C (0)));\n   return __builtin_aarch64_sqdmull_lanev2si (__a, __tmp, __c);\n }\n \n@@ -24360,8 +24393,8 @@ vst2_s64 (int64_t * __a, int64x1x2_t val)\n {\n   __builtin_aarch64_simd_oi __o;\n   int64x2x2_t temp;\n-  temp.val[0] = vcombine_s64 (val.val[0], vcreate_s64 (INT64_C (0)));\n-  temp.val[1] = vcombine_s64 (val.val[1], vcreate_s64 (INT64_C (0)));\n+  temp.val[0] = vcombine_s64 (val.val[0], vcreate_s64 (__AARCH64_INT64_C (0)));\n+  temp.val[1] = vcombine_s64 (val.val[1], vcreate_s64 (__AARCH64_INT64_C (0)));\n   __o = __builtin_aarch64_set_qregoiv2di (__o, (int64x2_t) temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregoiv2di (__o, (int64x2_t) temp.val[1], 1);\n   __builtin_aarch64_st2di ((__builtin_aarch64_simd_di *) __a, __o);\n@@ -24372,8 +24405,8 @@ vst2_u64 (uint64_t * __a, uint64x1x2_t val)\n {\n   __builtin_aarch64_simd_oi __o;\n   uint64x2x2_t temp;\n-  temp.val[0] = vcombine_u64 (val.val[0], vcreate_u64 (UINT64_C (0)));\n-  temp.val[1] = vcombine_u64 (val.val[1], vcreate_u64 (UINT64_C (0)));\n+  temp.val[0] = vcombine_u64 (val.val[0], vcreate_u64 (__AARCH64_UINT64_C (0)));\n+  temp.val[1] = vcombine_u64 (val.val[1], vcreate_u64 (__AARCH64_UINT64_C (0)));\n   __o = __builtin_aarch64_set_qregoiv2di (__o, (int64x2_t) temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregoiv2di (__o, (int64x2_t) temp.val[1], 1);\n   __builtin_aarch64_st2di ((__builtin_aarch64_simd_di *) __a, __o);\n@@ -24384,8 +24417,8 @@ vst2_f64 (float64_t * __a, float64x1x2_t val)\n {\n   __builtin_aarch64_simd_oi __o;\n   float64x2x2_t temp;\n-  temp.val[0] = vcombine_f64 (val.val[0], vcreate_f64 (UINT64_C (0)));\n-  temp.val[1] = vcombine_f64 (val.val[1], vcreate_f64 (UINT64_C (0)));\n+  temp.val[0] = vcombine_f64 (val.val[0], vcreate_f64 (__AARCH64_UINT64_C (0)));\n+  temp.val[1] = vcombine_f64 (val.val[1], vcreate_f64 (__AARCH64_UINT64_C (0)));\n   __o = __builtin_aarch64_set_qregoiv2df (__o, (float64x2_t) temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregoiv2df (__o, (float64x2_t) temp.val[1], 1);\n   __builtin_aarch64_st2df ((__builtin_aarch64_simd_df *) __a, __o);\n@@ -24396,8 +24429,8 @@ vst2_s8 (int8_t * __a, int8x8x2_t val)\n {\n   __builtin_aarch64_simd_oi __o;\n   int8x16x2_t temp;\n-  temp.val[0] = vcombine_s8 (val.val[0], vcreate_s8 (INT64_C (0)));\n-  temp.val[1] = vcombine_s8 (val.val[1], vcreate_s8 (INT64_C (0)));\n+  temp.val[0] = vcombine_s8 (val.val[0], vcreate_s8 (__AARCH64_INT64_C (0)));\n+  temp.val[1] = vcombine_s8 (val.val[1], vcreate_s8 (__AARCH64_INT64_C (0)));\n   __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t) temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t) temp.val[1], 1);\n   __builtin_aarch64_st2v8qi ((__builtin_aarch64_simd_qi *) __a, __o);\n@@ -24408,8 +24441,8 @@ vst2_p8 (poly8_t * __a, poly8x8x2_t val)\n {\n   __builtin_aarch64_simd_oi __o;\n   poly8x16x2_t temp;\n-  temp.val[0] = vcombine_p8 (val.val[0], vcreate_p8 (UINT64_C (0)));\n-  temp.val[1] = vcombine_p8 (val.val[1], vcreate_p8 (UINT64_C (0)));\n+  temp.val[0] = vcombine_p8 (val.val[0], vcreate_p8 (__AARCH64_UINT64_C (0)));\n+  temp.val[1] = vcombine_p8 (val.val[1], vcreate_p8 (__AARCH64_UINT64_C (0)));\n   __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t) temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t) temp.val[1], 1);\n   __builtin_aarch64_st2v8qi ((__builtin_aarch64_simd_qi *) __a, __o);\n@@ -24420,8 +24453,8 @@ vst2_s16 (int16_t * __a, int16x4x2_t val)\n {\n   __builtin_aarch64_simd_oi __o;\n   int16x8x2_t temp;\n-  temp.val[0] = vcombine_s16 (val.val[0], vcreate_s16 (INT64_C (0)));\n-  temp.val[1] = vcombine_s16 (val.val[1], vcreate_s16 (INT64_C (0)));\n+  temp.val[0] = vcombine_s16 (val.val[0], vcreate_s16 (__AARCH64_INT64_C (0)));\n+  temp.val[1] = vcombine_s16 (val.val[1], vcreate_s16 (__AARCH64_INT64_C (0)));\n   __o = __builtin_aarch64_set_qregoiv8hi (__o, (int16x8_t) temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregoiv8hi (__o, (int16x8_t) temp.val[1], 1);\n   __builtin_aarch64_st2v4hi ((__builtin_aarch64_simd_hi *) __a, __o);\n@@ -24432,8 +24465,8 @@ vst2_p16 (poly16_t * __a, poly16x4x2_t val)\n {\n   __builtin_aarch64_simd_oi __o;\n   poly16x8x2_t temp;\n-  temp.val[0] = vcombine_p16 (val.val[0], vcreate_p16 (UINT64_C (0)));\n-  temp.val[1] = vcombine_p16 (val.val[1], vcreate_p16 (UINT64_C (0)));\n+  temp.val[0] = vcombine_p16 (val.val[0], vcreate_p16 (__AARCH64_UINT64_C (0)));\n+  temp.val[1] = vcombine_p16 (val.val[1], vcreate_p16 (__AARCH64_UINT64_C (0)));\n   __o = __builtin_aarch64_set_qregoiv8hi (__o, (int16x8_t) temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregoiv8hi (__o, (int16x8_t) temp.val[1], 1);\n   __builtin_aarch64_st2v4hi ((__builtin_aarch64_simd_hi *) __a, __o);\n@@ -24444,8 +24477,8 @@ vst2_s32 (int32_t * __a, int32x2x2_t val)\n {\n   __builtin_aarch64_simd_oi __o;\n   int32x4x2_t temp;\n-  temp.val[0] = vcombine_s32 (val.val[0], vcreate_s32 (INT64_C (0)));\n-  temp.val[1] = vcombine_s32 (val.val[1], vcreate_s32 (INT64_C (0)));\n+  temp.val[0] = vcombine_s32 (val.val[0], vcreate_s32 (__AARCH64_INT64_C (0)));\n+  temp.val[1] = vcombine_s32 (val.val[1], vcreate_s32 (__AARCH64_INT64_C (0)));\n   __o = __builtin_aarch64_set_qregoiv4si (__o, (int32x4_t) temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregoiv4si (__o, (int32x4_t) temp.val[1], 1);\n   __builtin_aarch64_st2v2si ((__builtin_aarch64_simd_si *) __a, __o);\n@@ -24456,8 +24489,8 @@ vst2_u8 (uint8_t * __a, uint8x8x2_t val)\n {\n   __builtin_aarch64_simd_oi __o;\n   uint8x16x2_t temp;\n-  temp.val[0] = vcombine_u8 (val.val[0], vcreate_u8 (UINT64_C (0)));\n-  temp.val[1] = vcombine_u8 (val.val[1], vcreate_u8 (UINT64_C (0)));\n+  temp.val[0] = vcombine_u8 (val.val[0], vcreate_u8 (__AARCH64_UINT64_C (0)));\n+  temp.val[1] = vcombine_u8 (val.val[1], vcreate_u8 (__AARCH64_UINT64_C (0)));\n   __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t) temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t) temp.val[1], 1);\n   __builtin_aarch64_st2v8qi ((__builtin_aarch64_simd_qi *) __a, __o);\n@@ -24468,8 +24501,8 @@ vst2_u16 (uint16_t * __a, uint16x4x2_t val)\n {\n   __builtin_aarch64_simd_oi __o;\n   uint16x8x2_t temp;\n-  temp.val[0] = vcombine_u16 (val.val[0], vcreate_u16 (UINT64_C (0)));\n-  temp.val[1] = vcombine_u16 (val.val[1], vcreate_u16 (UINT64_C (0)));\n+  temp.val[0] = vcombine_u16 (val.val[0], vcreate_u16 (__AARCH64_UINT64_C (0)));\n+  temp.val[1] = vcombine_u16 (val.val[1], vcreate_u16 (__AARCH64_UINT64_C (0)));\n   __o = __builtin_aarch64_set_qregoiv8hi (__o, (int16x8_t) temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregoiv8hi (__o, (int16x8_t) temp.val[1], 1);\n   __builtin_aarch64_st2v4hi ((__builtin_aarch64_simd_hi *) __a, __o);\n@@ -24480,8 +24513,8 @@ vst2_u32 (uint32_t * __a, uint32x2x2_t val)\n {\n   __builtin_aarch64_simd_oi __o;\n   uint32x4x2_t temp;\n-  temp.val[0] = vcombine_u32 (val.val[0], vcreate_u32 (UINT64_C (0)));\n-  temp.val[1] = vcombine_u32 (val.val[1], vcreate_u32 (UINT64_C (0)));\n+  temp.val[0] = vcombine_u32 (val.val[0], vcreate_u32 (__AARCH64_UINT64_C (0)));\n+  temp.val[1] = vcombine_u32 (val.val[1], vcreate_u32 (__AARCH64_UINT64_C (0)));\n   __o = __builtin_aarch64_set_qregoiv4si (__o, (int32x4_t) temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregoiv4si (__o, (int32x4_t) temp.val[1], 1);\n   __builtin_aarch64_st2v2si ((__builtin_aarch64_simd_si *) __a, __o);\n@@ -24492,8 +24525,8 @@ vst2_f32 (float32_t * __a, float32x2x2_t val)\n {\n   __builtin_aarch64_simd_oi __o;\n   float32x4x2_t temp;\n-  temp.val[0] = vcombine_f32 (val.val[0], vcreate_f32 (UINT64_C (0)));\n-  temp.val[1] = vcombine_f32 (val.val[1], vcreate_f32 (UINT64_C (0)));\n+  temp.val[0] = vcombine_f32 (val.val[0], vcreate_f32 (__AARCH64_UINT64_C (0)));\n+  temp.val[1] = vcombine_f32 (val.val[1], vcreate_f32 (__AARCH64_UINT64_C (0)));\n   __o = __builtin_aarch64_set_qregoiv4sf (__o, (float32x4_t) temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregoiv4sf (__o, (float32x4_t) temp.val[1], 1);\n   __builtin_aarch64_st2v2sf ((__builtin_aarch64_simd_sf *) __a, __o);\n@@ -24612,9 +24645,9 @@ vst3_s64 (int64_t * __a, int64x1x3_t val)\n {\n   __builtin_aarch64_simd_ci __o;\n   int64x2x3_t temp;\n-  temp.val[0] = vcombine_s64 (val.val[0], vcreate_s64 (INT64_C (0)));\n-  temp.val[1] = vcombine_s64 (val.val[1], vcreate_s64 (INT64_C (0)));\n-  temp.val[2] = vcombine_s64 (val.val[2], vcreate_s64 (INT64_C (0)));\n+  temp.val[0] = vcombine_s64 (val.val[0], vcreate_s64 (__AARCH64_INT64_C (0)));\n+  temp.val[1] = vcombine_s64 (val.val[1], vcreate_s64 (__AARCH64_INT64_C (0)));\n+  temp.val[2] = vcombine_s64 (val.val[2], vcreate_s64 (__AARCH64_INT64_C (0)));\n   __o = __builtin_aarch64_set_qregciv2di (__o, (int64x2_t) temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregciv2di (__o, (int64x2_t) temp.val[1], 1);\n   __o = __builtin_aarch64_set_qregciv2di (__o, (int64x2_t) temp.val[2], 2);\n@@ -24626,9 +24659,9 @@ vst3_u64 (uint64_t * __a, uint64x1x3_t val)\n {\n   __builtin_aarch64_simd_ci __o;\n   uint64x2x3_t temp;\n-  temp.val[0] = vcombine_u64 (val.val[0], vcreate_u64 (UINT64_C (0)));\n-  temp.val[1] = vcombine_u64 (val.val[1], vcreate_u64 (UINT64_C (0)));\n-  temp.val[2] = vcombine_u64 (val.val[2], vcreate_u64 (UINT64_C (0)));\n+  temp.val[0] = vcombine_u64 (val.val[0], vcreate_u64 (__AARCH64_UINT64_C (0)));\n+  temp.val[1] = vcombine_u64 (val.val[1], vcreate_u64 (__AARCH64_UINT64_C (0)));\n+  temp.val[2] = vcombine_u64 (val.val[2], vcreate_u64 (__AARCH64_UINT64_C (0)));\n   __o = __builtin_aarch64_set_qregciv2di (__o, (int64x2_t) temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregciv2di (__o, (int64x2_t) temp.val[1], 1);\n   __o = __builtin_aarch64_set_qregciv2di (__o, (int64x2_t) temp.val[2], 2);\n@@ -24640,9 +24673,9 @@ vst3_f64 (float64_t * __a, float64x1x3_t val)\n {\n   __builtin_aarch64_simd_ci __o;\n   float64x2x3_t temp;\n-  temp.val[0] = vcombine_f64 (val.val[0], vcreate_f64 (UINT64_C (0)));\n-  temp.val[1] = vcombine_f64 (val.val[1], vcreate_f64 (UINT64_C (0)));\n-  temp.val[2] = vcombine_f64 (val.val[2], vcreate_f64 (UINT64_C (0)));\n+  temp.val[0] = vcombine_f64 (val.val[0], vcreate_f64 (__AARCH64_UINT64_C (0)));\n+  temp.val[1] = vcombine_f64 (val.val[1], vcreate_f64 (__AARCH64_UINT64_C (0)));\n+  temp.val[2] = vcombine_f64 (val.val[2], vcreate_f64 (__AARCH64_UINT64_C (0)));\n   __o = __builtin_aarch64_set_qregciv2df (__o, (float64x2_t) temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregciv2df (__o, (float64x2_t) temp.val[1], 1);\n   __o = __builtin_aarch64_set_qregciv2df (__o, (float64x2_t) temp.val[2], 2);\n@@ -24654,9 +24687,9 @@ vst3_s8 (int8_t * __a, int8x8x3_t val)\n {\n   __builtin_aarch64_simd_ci __o;\n   int8x16x3_t temp;\n-  temp.val[0] = vcombine_s8 (val.val[0], vcreate_s8 (INT64_C (0)));\n-  temp.val[1] = vcombine_s8 (val.val[1], vcreate_s8 (INT64_C (0)));\n-  temp.val[2] = vcombine_s8 (val.val[2], vcreate_s8 (INT64_C (0)));\n+  temp.val[0] = vcombine_s8 (val.val[0], vcreate_s8 (__AARCH64_INT64_C (0)));\n+  temp.val[1] = vcombine_s8 (val.val[1], vcreate_s8 (__AARCH64_INT64_C (0)));\n+  temp.val[2] = vcombine_s8 (val.val[2], vcreate_s8 (__AARCH64_INT64_C (0)));\n   __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t) temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t) temp.val[1], 1);\n   __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t) temp.val[2], 2);\n@@ -24668,9 +24701,9 @@ vst3_p8 (poly8_t * __a, poly8x8x3_t val)\n {\n   __builtin_aarch64_simd_ci __o;\n   poly8x16x3_t temp;\n-  temp.val[0] = vcombine_p8 (val.val[0], vcreate_p8 (UINT64_C (0)));\n-  temp.val[1] = vcombine_p8 (val.val[1], vcreate_p8 (UINT64_C (0)));\n-  temp.val[2] = vcombine_p8 (val.val[2], vcreate_p8 (UINT64_C (0)));\n+  temp.val[0] = vcombine_p8 (val.val[0], vcreate_p8 (__AARCH64_UINT64_C (0)));\n+  temp.val[1] = vcombine_p8 (val.val[1], vcreate_p8 (__AARCH64_UINT64_C (0)));\n+  temp.val[2] = vcombine_p8 (val.val[2], vcreate_p8 (__AARCH64_UINT64_C (0)));\n   __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t) temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t) temp.val[1], 1);\n   __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t) temp.val[2], 2);\n@@ -24682,9 +24715,9 @@ vst3_s16 (int16_t * __a, int16x4x3_t val)\n {\n   __builtin_aarch64_simd_ci __o;\n   int16x8x3_t temp;\n-  temp.val[0] = vcombine_s16 (val.val[0], vcreate_s16 (INT64_C (0)));\n-  temp.val[1] = vcombine_s16 (val.val[1], vcreate_s16 (INT64_C (0)));\n-  temp.val[2] = vcombine_s16 (val.val[2], vcreate_s16 (INT64_C (0)));\n+  temp.val[0] = vcombine_s16 (val.val[0], vcreate_s16 (__AARCH64_INT64_C (0)));\n+  temp.val[1] = vcombine_s16 (val.val[1], vcreate_s16 (__AARCH64_INT64_C (0)));\n+  temp.val[2] = vcombine_s16 (val.val[2], vcreate_s16 (__AARCH64_INT64_C (0)));\n   __o = __builtin_aarch64_set_qregciv8hi (__o, (int16x8_t) temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregciv8hi (__o, (int16x8_t) temp.val[1], 1);\n   __o = __builtin_aarch64_set_qregciv8hi (__o, (int16x8_t) temp.val[2], 2);\n@@ -24696,9 +24729,9 @@ vst3_p16 (poly16_t * __a, poly16x4x3_t val)\n {\n   __builtin_aarch64_simd_ci __o;\n   poly16x8x3_t temp;\n-  temp.val[0] = vcombine_p16 (val.val[0], vcreate_p16 (UINT64_C (0)));\n-  temp.val[1] = vcombine_p16 (val.val[1], vcreate_p16 (UINT64_C (0)));\n-  temp.val[2] = vcombine_p16 (val.val[2], vcreate_p16 (UINT64_C (0)));\n+  temp.val[0] = vcombine_p16 (val.val[0], vcreate_p16 (__AARCH64_UINT64_C (0)));\n+  temp.val[1] = vcombine_p16 (val.val[1], vcreate_p16 (__AARCH64_UINT64_C (0)));\n+  temp.val[2] = vcombine_p16 (val.val[2], vcreate_p16 (__AARCH64_UINT64_C (0)));\n   __o = __builtin_aarch64_set_qregciv8hi (__o, (int16x8_t) temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregciv8hi (__o, (int16x8_t) temp.val[1], 1);\n   __o = __builtin_aarch64_set_qregciv8hi (__o, (int16x8_t) temp.val[2], 2);\n@@ -24710,9 +24743,9 @@ vst3_s32 (int32_t * __a, int32x2x3_t val)\n {\n   __builtin_aarch64_simd_ci __o;\n   int32x4x3_t temp;\n-  temp.val[0] = vcombine_s32 (val.val[0], vcreate_s32 (INT64_C (0)));\n-  temp.val[1] = vcombine_s32 (val.val[1], vcreate_s32 (INT64_C (0)));\n-  temp.val[2] = vcombine_s32 (val.val[2], vcreate_s32 (INT64_C (0)));\n+  temp.val[0] = vcombine_s32 (val.val[0], vcreate_s32 (__AARCH64_INT64_C (0)));\n+  temp.val[1] = vcombine_s32 (val.val[1], vcreate_s32 (__AARCH64_INT64_C (0)));\n+  temp.val[2] = vcombine_s32 (val.val[2], vcreate_s32 (__AARCH64_INT64_C (0)));\n   __o = __builtin_aarch64_set_qregciv4si (__o, (int32x4_t) temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregciv4si (__o, (int32x4_t) temp.val[1], 1);\n   __o = __builtin_aarch64_set_qregciv4si (__o, (int32x4_t) temp.val[2], 2);\n@@ -24724,9 +24757,9 @@ vst3_u8 (uint8_t * __a, uint8x8x3_t val)\n {\n   __builtin_aarch64_simd_ci __o;\n   uint8x16x3_t temp;\n-  temp.val[0] = vcombine_u8 (val.val[0], vcreate_u8 (UINT64_C (0)));\n-  temp.val[1] = vcombine_u8 (val.val[1], vcreate_u8 (UINT64_C (0)));\n-  temp.val[2] = vcombine_u8 (val.val[2], vcreate_u8 (UINT64_C (0)));\n+  temp.val[0] = vcombine_u8 (val.val[0], vcreate_u8 (__AARCH64_UINT64_C (0)));\n+  temp.val[1] = vcombine_u8 (val.val[1], vcreate_u8 (__AARCH64_UINT64_C (0)));\n+  temp.val[2] = vcombine_u8 (val.val[2], vcreate_u8 (__AARCH64_UINT64_C (0)));\n   __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t) temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t) temp.val[1], 1);\n   __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t) temp.val[2], 2);\n@@ -24738,9 +24771,9 @@ vst3_u16 (uint16_t * __a, uint16x4x3_t val)\n {\n   __builtin_aarch64_simd_ci __o;\n   uint16x8x3_t temp;\n-  temp.val[0] = vcombine_u16 (val.val[0], vcreate_u16 (UINT64_C (0)));\n-  temp.val[1] = vcombine_u16 (val.val[1], vcreate_u16 (UINT64_C (0)));\n-  temp.val[2] = vcombine_u16 (val.val[2], vcreate_u16 (UINT64_C (0)));\n+  temp.val[0] = vcombine_u16 (val.val[0], vcreate_u16 (__AARCH64_UINT64_C (0)));\n+  temp.val[1] = vcombine_u16 (val.val[1], vcreate_u16 (__AARCH64_UINT64_C (0)));\n+  temp.val[2] = vcombine_u16 (val.val[2], vcreate_u16 (__AARCH64_UINT64_C (0)));\n   __o = __builtin_aarch64_set_qregciv8hi (__o, (int16x8_t) temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregciv8hi (__o, (int16x8_t) temp.val[1], 1);\n   __o = __builtin_aarch64_set_qregciv8hi (__o, (int16x8_t) temp.val[2], 2);\n@@ -24752,9 +24785,9 @@ vst3_u32 (uint32_t * __a, uint32x2x3_t val)\n {\n   __builtin_aarch64_simd_ci __o;\n   uint32x4x3_t temp;\n-  temp.val[0] = vcombine_u32 (val.val[0], vcreate_u32 (UINT64_C (0)));\n-  temp.val[1] = vcombine_u32 (val.val[1], vcreate_u32 (UINT64_C (0)));\n-  temp.val[2] = vcombine_u32 (val.val[2], vcreate_u32 (UINT64_C (0)));\n+  temp.val[0] = vcombine_u32 (val.val[0], vcreate_u32 (__AARCH64_UINT64_C (0)));\n+  temp.val[1] = vcombine_u32 (val.val[1], vcreate_u32 (__AARCH64_UINT64_C (0)));\n+  temp.val[2] = vcombine_u32 (val.val[2], vcreate_u32 (__AARCH64_UINT64_C (0)));\n   __o = __builtin_aarch64_set_qregciv4si (__o, (int32x4_t) temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregciv4si (__o, (int32x4_t) temp.val[1], 1);\n   __o = __builtin_aarch64_set_qregciv4si (__o, (int32x4_t) temp.val[2], 2);\n@@ -24766,9 +24799,9 @@ vst3_f32 (float32_t * __a, float32x2x3_t val)\n {\n   __builtin_aarch64_simd_ci __o;\n   float32x4x3_t temp;\n-  temp.val[0] = vcombine_f32 (val.val[0], vcreate_f32 (UINT64_C (0)));\n-  temp.val[1] = vcombine_f32 (val.val[1], vcreate_f32 (UINT64_C (0)));\n-  temp.val[2] = vcombine_f32 (val.val[2], vcreate_f32 (UINT64_C (0)));\n+  temp.val[0] = vcombine_f32 (val.val[0], vcreate_f32 (__AARCH64_UINT64_C (0)));\n+  temp.val[1] = vcombine_f32 (val.val[1], vcreate_f32 (__AARCH64_UINT64_C (0)));\n+  temp.val[2] = vcombine_f32 (val.val[2], vcreate_f32 (__AARCH64_UINT64_C (0)));\n   __o = __builtin_aarch64_set_qregciv4sf (__o, (float32x4_t) temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregciv4sf (__o, (float32x4_t) temp.val[1], 1);\n   __o = __builtin_aarch64_set_qregciv4sf (__o, (float32x4_t) temp.val[2], 2);\n@@ -24900,10 +24933,10 @@ vst4_s64 (int64_t * __a, int64x1x4_t val)\n {\n   __builtin_aarch64_simd_xi __o;\n   int64x2x4_t temp;\n-  temp.val[0] = vcombine_s64 (val.val[0], vcreate_s64 (INT64_C (0)));\n-  temp.val[1] = vcombine_s64 (val.val[1], vcreate_s64 (INT64_C (0)));\n-  temp.val[2] = vcombine_s64 (val.val[2], vcreate_s64 (INT64_C (0)));\n-  temp.val[3] = vcombine_s64 (val.val[3], vcreate_s64 (INT64_C (0)));\n+  temp.val[0] = vcombine_s64 (val.val[0], vcreate_s64 (__AARCH64_INT64_C (0)));\n+  temp.val[1] = vcombine_s64 (val.val[1], vcreate_s64 (__AARCH64_INT64_C (0)));\n+  temp.val[2] = vcombine_s64 (val.val[2], vcreate_s64 (__AARCH64_INT64_C (0)));\n+  temp.val[3] = vcombine_s64 (val.val[3], vcreate_s64 (__AARCH64_INT64_C (0)));\n   __o = __builtin_aarch64_set_qregxiv2di (__o, (int64x2_t) temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregxiv2di (__o, (int64x2_t) temp.val[1], 1);\n   __o = __builtin_aarch64_set_qregxiv2di (__o, (int64x2_t) temp.val[2], 2);\n@@ -24916,10 +24949,10 @@ vst4_u64 (uint64_t * __a, uint64x1x4_t val)\n {\n   __builtin_aarch64_simd_xi __o;\n   uint64x2x4_t temp;\n-  temp.val[0] = vcombine_u64 (val.val[0], vcreate_u64 (UINT64_C (0)));\n-  temp.val[1] = vcombine_u64 (val.val[1], vcreate_u64 (UINT64_C (0)));\n-  temp.val[2] = vcombine_u64 (val.val[2], vcreate_u64 (UINT64_C (0)));\n-  temp.val[3] = vcombine_u64 (val.val[3], vcreate_u64 (UINT64_C (0)));\n+  temp.val[0] = vcombine_u64 (val.val[0], vcreate_u64 (__AARCH64_UINT64_C (0)));\n+  temp.val[1] = vcombine_u64 (val.val[1], vcreate_u64 (__AARCH64_UINT64_C (0)));\n+  temp.val[2] = vcombine_u64 (val.val[2], vcreate_u64 (__AARCH64_UINT64_C (0)));\n+  temp.val[3] = vcombine_u64 (val.val[3], vcreate_u64 (__AARCH64_UINT64_C (0)));\n   __o = __builtin_aarch64_set_qregxiv2di (__o, (int64x2_t) temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregxiv2di (__o, (int64x2_t) temp.val[1], 1);\n   __o = __builtin_aarch64_set_qregxiv2di (__o, (int64x2_t) temp.val[2], 2);\n@@ -24932,10 +24965,10 @@ vst4_f64 (float64_t * __a, float64x1x4_t val)\n {\n   __builtin_aarch64_simd_xi __o;\n   float64x2x4_t temp;\n-  temp.val[0] = vcombine_f64 (val.val[0], vcreate_f64 (UINT64_C (0)));\n-  temp.val[1] = vcombine_f64 (val.val[1], vcreate_f64 (UINT64_C (0)));\n-  temp.val[2] = vcombine_f64 (val.val[2], vcreate_f64 (UINT64_C (0)));\n-  temp.val[3] = vcombine_f64 (val.val[3], vcreate_f64 (UINT64_C (0)));\n+  temp.val[0] = vcombine_f64 (val.val[0], vcreate_f64 (__AARCH64_UINT64_C (0)));\n+  temp.val[1] = vcombine_f64 (val.val[1], vcreate_f64 (__AARCH64_UINT64_C (0)));\n+  temp.val[2] = vcombine_f64 (val.val[2], vcreate_f64 (__AARCH64_UINT64_C (0)));\n+  temp.val[3] = vcombine_f64 (val.val[3], vcreate_f64 (__AARCH64_UINT64_C (0)));\n   __o = __builtin_aarch64_set_qregxiv2df (__o, (float64x2_t) temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregxiv2df (__o, (float64x2_t) temp.val[1], 1);\n   __o = __builtin_aarch64_set_qregxiv2df (__o, (float64x2_t) temp.val[2], 2);\n@@ -24948,10 +24981,10 @@ vst4_s8 (int8_t * __a, int8x8x4_t val)\n {\n   __builtin_aarch64_simd_xi __o;\n   int8x16x4_t temp;\n-  temp.val[0] = vcombine_s8 (val.val[0], vcreate_s8 (INT64_C (0)));\n-  temp.val[1] = vcombine_s8 (val.val[1], vcreate_s8 (INT64_C (0)));\n-  temp.val[2] = vcombine_s8 (val.val[2], vcreate_s8 (INT64_C (0)));\n-  temp.val[3] = vcombine_s8 (val.val[3], vcreate_s8 (INT64_C (0)));\n+  temp.val[0] = vcombine_s8 (val.val[0], vcreate_s8 (__AARCH64_INT64_C (0)));\n+  temp.val[1] = vcombine_s8 (val.val[1], vcreate_s8 (__AARCH64_INT64_C (0)));\n+  temp.val[2] = vcombine_s8 (val.val[2], vcreate_s8 (__AARCH64_INT64_C (0)));\n+  temp.val[3] = vcombine_s8 (val.val[3], vcreate_s8 (__AARCH64_INT64_C (0)));\n   __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t) temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t) temp.val[1], 1);\n   __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t) temp.val[2], 2);\n@@ -24964,10 +24997,10 @@ vst4_p8 (poly8_t * __a, poly8x8x4_t val)\n {\n   __builtin_aarch64_simd_xi __o;\n   poly8x16x4_t temp;\n-  temp.val[0] = vcombine_p8 (val.val[0], vcreate_p8 (UINT64_C (0)));\n-  temp.val[1] = vcombine_p8 (val.val[1], vcreate_p8 (UINT64_C (0)));\n-  temp.val[2] = vcombine_p8 (val.val[2], vcreate_p8 (UINT64_C (0)));\n-  temp.val[3] = vcombine_p8 (val.val[3], vcreate_p8 (UINT64_C (0)));\n+  temp.val[0] = vcombine_p8 (val.val[0], vcreate_p8 (__AARCH64_UINT64_C (0)));\n+  temp.val[1] = vcombine_p8 (val.val[1], vcreate_p8 (__AARCH64_UINT64_C (0)));\n+  temp.val[2] = vcombine_p8 (val.val[2], vcreate_p8 (__AARCH64_UINT64_C (0)));\n+  temp.val[3] = vcombine_p8 (val.val[3], vcreate_p8 (__AARCH64_UINT64_C (0)));\n   __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t) temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t) temp.val[1], 1);\n   __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t) temp.val[2], 2);\n@@ -24980,10 +25013,10 @@ vst4_s16 (int16_t * __a, int16x4x4_t val)\n {\n   __builtin_aarch64_simd_xi __o;\n   int16x8x4_t temp;\n-  temp.val[0] = vcombine_s16 (val.val[0], vcreate_s16 (INT64_C (0)));\n-  temp.val[1] = vcombine_s16 (val.val[1], vcreate_s16 (INT64_C (0)));\n-  temp.val[2] = vcombine_s16 (val.val[2], vcreate_s16 (INT64_C (0)));\n-  temp.val[3] = vcombine_s16 (val.val[3], vcreate_s16 (INT64_C (0)));\n+  temp.val[0] = vcombine_s16 (val.val[0], vcreate_s16 (__AARCH64_INT64_C (0)));\n+  temp.val[1] = vcombine_s16 (val.val[1], vcreate_s16 (__AARCH64_INT64_C (0)));\n+  temp.val[2] = vcombine_s16 (val.val[2], vcreate_s16 (__AARCH64_INT64_C (0)));\n+  temp.val[3] = vcombine_s16 (val.val[3], vcreate_s16 (__AARCH64_INT64_C (0)));\n   __o = __builtin_aarch64_set_qregxiv8hi (__o, (int16x8_t) temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregxiv8hi (__o, (int16x8_t) temp.val[1], 1);\n   __o = __builtin_aarch64_set_qregxiv8hi (__o, (int16x8_t) temp.val[2], 2);\n@@ -24996,10 +25029,10 @@ vst4_p16 (poly16_t * __a, poly16x4x4_t val)\n {\n   __builtin_aarch64_simd_xi __o;\n   poly16x8x4_t temp;\n-  temp.val[0] = vcombine_p16 (val.val[0], vcreate_p16 (UINT64_C (0)));\n-  temp.val[1] = vcombine_p16 (val.val[1], vcreate_p16 (UINT64_C (0)));\n-  temp.val[2] = vcombine_p16 (val.val[2], vcreate_p16 (UINT64_C (0)));\n-  temp.val[3] = vcombine_p16 (val.val[3], vcreate_p16 (UINT64_C (0)));\n+  temp.val[0] = vcombine_p16 (val.val[0], vcreate_p16 (__AARCH64_UINT64_C (0)));\n+  temp.val[1] = vcombine_p16 (val.val[1], vcreate_p16 (__AARCH64_UINT64_C (0)));\n+  temp.val[2] = vcombine_p16 (val.val[2], vcreate_p16 (__AARCH64_UINT64_C (0)));\n+  temp.val[3] = vcombine_p16 (val.val[3], vcreate_p16 (__AARCH64_UINT64_C (0)));\n   __o = __builtin_aarch64_set_qregxiv8hi (__o, (int16x8_t) temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregxiv8hi (__o, (int16x8_t) temp.val[1], 1);\n   __o = __builtin_aarch64_set_qregxiv8hi (__o, (int16x8_t) temp.val[2], 2);\n@@ -25012,10 +25045,10 @@ vst4_s32 (int32_t * __a, int32x2x4_t val)\n {\n   __builtin_aarch64_simd_xi __o;\n   int32x4x4_t temp;\n-  temp.val[0] = vcombine_s32 (val.val[0], vcreate_s32 (INT64_C (0)));\n-  temp.val[1] = vcombine_s32 (val.val[1], vcreate_s32 (INT64_C (0)));\n-  temp.val[2] = vcombine_s32 (val.val[2], vcreate_s32 (INT64_C (0)));\n-  temp.val[3] = vcombine_s32 (val.val[3], vcreate_s32 (INT64_C (0)));\n+  temp.val[0] = vcombine_s32 (val.val[0], vcreate_s32 (__AARCH64_INT64_C (0)));\n+  temp.val[1] = vcombine_s32 (val.val[1], vcreate_s32 (__AARCH64_INT64_C (0)));\n+  temp.val[2] = vcombine_s32 (val.val[2], vcreate_s32 (__AARCH64_INT64_C (0)));\n+  temp.val[3] = vcombine_s32 (val.val[3], vcreate_s32 (__AARCH64_INT64_C (0)));\n   __o = __builtin_aarch64_set_qregxiv4si (__o, (int32x4_t) temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregxiv4si (__o, (int32x4_t) temp.val[1], 1);\n   __o = __builtin_aarch64_set_qregxiv4si (__o, (int32x4_t) temp.val[2], 2);\n@@ -25028,10 +25061,10 @@ vst4_u8 (uint8_t * __a, uint8x8x4_t val)\n {\n   __builtin_aarch64_simd_xi __o;\n   uint8x16x4_t temp;\n-  temp.val[0] = vcombine_u8 (val.val[0], vcreate_u8 (UINT64_C (0)));\n-  temp.val[1] = vcombine_u8 (val.val[1], vcreate_u8 (UINT64_C (0)));\n-  temp.val[2] = vcombine_u8 (val.val[2], vcreate_u8 (UINT64_C (0)));\n-  temp.val[3] = vcombine_u8 (val.val[3], vcreate_u8 (UINT64_C (0)));\n+  temp.val[0] = vcombine_u8 (val.val[0], vcreate_u8 (__AARCH64_UINT64_C (0)));\n+  temp.val[1] = vcombine_u8 (val.val[1], vcreate_u8 (__AARCH64_UINT64_C (0)));\n+  temp.val[2] = vcombine_u8 (val.val[2], vcreate_u8 (__AARCH64_UINT64_C (0)));\n+  temp.val[3] = vcombine_u8 (val.val[3], vcreate_u8 (__AARCH64_UINT64_C (0)));\n   __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t) temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t) temp.val[1], 1);\n   __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t) temp.val[2], 2);\n@@ -25044,10 +25077,10 @@ vst4_u16 (uint16_t * __a, uint16x4x4_t val)\n {\n   __builtin_aarch64_simd_xi __o;\n   uint16x8x4_t temp;\n-  temp.val[0] = vcombine_u16 (val.val[0], vcreate_u16 (UINT64_C (0)));\n-  temp.val[1] = vcombine_u16 (val.val[1], vcreate_u16 (UINT64_C (0)));\n-  temp.val[2] = vcombine_u16 (val.val[2], vcreate_u16 (UINT64_C (0)));\n-  temp.val[3] = vcombine_u16 (val.val[3], vcreate_u16 (UINT64_C (0)));\n+  temp.val[0] = vcombine_u16 (val.val[0], vcreate_u16 (__AARCH64_UINT64_C (0)));\n+  temp.val[1] = vcombine_u16 (val.val[1], vcreate_u16 (__AARCH64_UINT64_C (0)));\n+  temp.val[2] = vcombine_u16 (val.val[2], vcreate_u16 (__AARCH64_UINT64_C (0)));\n+  temp.val[3] = vcombine_u16 (val.val[3], vcreate_u16 (__AARCH64_UINT64_C (0)));\n   __o = __builtin_aarch64_set_qregxiv8hi (__o, (int16x8_t) temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregxiv8hi (__o, (int16x8_t) temp.val[1], 1);\n   __o = __builtin_aarch64_set_qregxiv8hi (__o, (int16x8_t) temp.val[2], 2);\n@@ -25060,10 +25093,10 @@ vst4_u32 (uint32_t * __a, uint32x2x4_t val)\n {\n   __builtin_aarch64_simd_xi __o;\n   uint32x4x4_t temp;\n-  temp.val[0] = vcombine_u32 (val.val[0], vcreate_u32 (UINT64_C (0)));\n-  temp.val[1] = vcombine_u32 (val.val[1], vcreate_u32 (UINT64_C (0)));\n-  temp.val[2] = vcombine_u32 (val.val[2], vcreate_u32 (UINT64_C (0)));\n-  temp.val[3] = vcombine_u32 (val.val[3], vcreate_u32 (UINT64_C (0)));\n+  temp.val[0] = vcombine_u32 (val.val[0], vcreate_u32 (__AARCH64_UINT64_C (0)));\n+  temp.val[1] = vcombine_u32 (val.val[1], vcreate_u32 (__AARCH64_UINT64_C (0)));\n+  temp.val[2] = vcombine_u32 (val.val[2], vcreate_u32 (__AARCH64_UINT64_C (0)));\n+  temp.val[3] = vcombine_u32 (val.val[3], vcreate_u32 (__AARCH64_UINT64_C (0)));\n   __o = __builtin_aarch64_set_qregxiv4si (__o, (int32x4_t) temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregxiv4si (__o, (int32x4_t) temp.val[1], 1);\n   __o = __builtin_aarch64_set_qregxiv4si (__o, (int32x4_t) temp.val[2], 2);\n@@ -25076,10 +25109,10 @@ vst4_f32 (float32_t * __a, float32x2x4_t val)\n {\n   __builtin_aarch64_simd_xi __o;\n   float32x4x4_t temp;\n-  temp.val[0] = vcombine_f32 (val.val[0], vcreate_f32 (UINT64_C (0)));\n-  temp.val[1] = vcombine_f32 (val.val[1], vcreate_f32 (UINT64_C (0)));\n-  temp.val[2] = vcombine_f32 (val.val[2], vcreate_f32 (UINT64_C (0)));\n-  temp.val[3] = vcombine_f32 (val.val[3], vcreate_f32 (UINT64_C (0)));\n+  temp.val[0] = vcombine_f32 (val.val[0], vcreate_f32 (__AARCH64_UINT64_C (0)));\n+  temp.val[1] = vcombine_f32 (val.val[1], vcreate_f32 (__AARCH64_UINT64_C (0)));\n+  temp.val[2] = vcombine_f32 (val.val[2], vcreate_f32 (__AARCH64_UINT64_C (0)));\n+  temp.val[3] = vcombine_f32 (val.val[3], vcreate_f32 (__AARCH64_UINT64_C (0)));\n   __o = __builtin_aarch64_set_qregxiv4sf (__o, (float32x4_t) temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregxiv4sf (__o, (float32x4_t) temp.val[1], 1);\n   __o = __builtin_aarch64_set_qregxiv4sf (__o, (float32x4_t) temp.val[2], 2);"}]}