{"sha": "1d4def65c83117412beb8093851e349070cc7c1d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQ0ZGVmNjVjODMxMTc0MTJiZWI4MDkzODUxZTM0OTA3MGNjN2MxZA==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "joern.rennecke@st.com", "date": "2005-08-03T18:46:34Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2005-08-03T18:46:34Z"}, "message": "reload.c (find_reloads_subreg_address): Pass down TYPE unchanged.\n\ngcc:\n        * reload.c (find_reloads_subreg_address): Pass down TYPE\n        unchanged.  Change all callers except find_reloads_toplev.\ngcc/testsuite:\n        * gcc.c-torture/execute/pr23135.c: New test.\n\nFrom-SVN: r102706", "tree": {"sha": "93ea7f5343468b53cbb8ef4b1d57cec9989cb91e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93ea7f5343468b53cbb8ef4b1d57cec9989cb91e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d4def65c83117412beb8093851e349070cc7c1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d4def65c83117412beb8093851e349070cc7c1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d4def65c83117412beb8093851e349070cc7c1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d4def65c83117412beb8093851e349070cc7c1d/comments", "author": null, "committer": null, "parents": [{"sha": "279072c8467aa843ac217174a9c2717b4558a2c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/279072c8467aa843ac217174a9c2717b4558a2c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/279072c8467aa843ac217174a9c2717b4558a2c1"}], "stats": {"total": 138, "additions": 138, "deletions": 0}, "files": [{"sha": "916b6f8bfb256f6daf850d28010c3429c224fc24", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d4def65c83117412beb8093851e349070cc7c1d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d4def65c83117412beb8093851e349070cc7c1d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1d4def65c83117412beb8093851e349070cc7c1d", "patch": "@@ -1,3 +1,7 @@\n+2005-08-03  J\"orn Rennecke <joern.rennecke@st.com>\n+\n+\t* gcc.c-torture/execute/pr23135.c: New test.\n+\n 2005-08-03  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n \n \tPR tree-optimization/19899"}, {"sha": "04abc2a648303f058e0989b42ef034c7b7910cf6", "filename": "gcc/testsuite/gcc.c-torture/execute/pr23135.c", "status": "added", "additions": 134, "deletions": 0, "changes": 134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d4def65c83117412beb8093851e349070cc7c1d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr23135.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d4def65c83117412beb8093851e349070cc7c1d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr23135.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr23135.c?ref=1d4def65c83117412beb8093851e349070cc7c1d", "patch": "@@ -0,0 +1,134 @@\n+/* Based on execute/simd-1.c, modifed by joern.rennecke@st.com to\n+   trigger a reload bug.  Verified for gcc mainline from 20050722 13:00 UTC\n+   for sh-elf -m4 -O2.  */\n+#ifndef STACK_SIZE\n+#define STACK_SIZE (256*1024)\n+#endif\n+\n+typedef struct { char c[STACK_SIZE/2]; } big_t;\n+\n+typedef int __attribute__((vector_size (8))) vecint;\n+typedef int __attribute__((mode(SI))) siint;\n+\n+vecint i = { 150, 100 };\n+vecint j = { 10, 13 };\n+vecint k;\n+\n+union {\n+  vecint v;\n+  siint i[2];\n+} res;\n+\n+void\n+verify (siint a1, siint a2, siint b1, siint b2, big_t big)\n+{\n+  if (a1 != b1\n+      || a2 != b2)\n+    abort ();\n+}\n+\n+int\n+main ()\n+{\n+  big_t big;\n+  vecint k0, k1, k2, k3, k4, k5, k6, k7;\n+\n+  k0 = i + j;\n+  res.v = k0;\n+\n+  verify (res.i[0], res.i[1], 160, 113, big);\n+\n+  k1 = i * j;\n+  res.v = k1;\n+\n+  verify (res.i[0], res.i[1], 1500, 1300, big);\n+\n+  k2 = i / j;\n+/* This is the observed failure - reload 0 has the wrong type and thus the\n+   conflict with reload 1 is missed:\n+\n+(insn:HI 94 92 96 1 pr23135.c:46 (parallel [\n+            (set (subreg:SI (reg:DI 253) 0)\n+                (div:SI (reg:SI 4 r4)\n+                    (reg:SI 5 r5)))\n+            (clobber (reg:SI 146 pr))\n+            (clobber (reg:DF 64 fr0))\n+            (clobber (reg:DF 66 fr2))\n+            (use (reg:PSI 151 ))\n+            (use (reg/f:SI 256))\n+        ]) 60 {divsi3_i4} (insn_list:REG_DEP_TRUE 90 (insn_list:REG_DEP_TRUE 89\n+(insn_list:REG_DEP_TRUE 42 (insn_list:REG_DEP_TRUE 83 (insn_list:REG_DEP_TRUE 92\n+ (insn_list:REG_DEP_TRUE 91 (nil)))))))\n+    (expr_list:REG_DEAD (reg:SI 4 r4)\n+        (expr_list:REG_DEAD (reg:SI 5 r5)\n+            (expr_list:REG_UNUSED (reg:DF 66 fr2)\n+                (expr_list:REG_UNUSED (reg:DF 64 fr0)\n+                    (expr_list:REG_UNUSED (reg:SI 146 pr)\n+                        (insn_list:REG_RETVAL 91 (nil))))))))\n+\n+Reloads for insn # 94\n+Reload 0: reload_in (SI) = (plus:SI (reg/f:SI 14 r14)\n+                                                    (const_int 64 [0x40]))\n+        GENERAL_REGS, RELOAD_FOR_OUTADDR_ADDRESS (opnum = 0)\n+        reload_in_reg: (plus:SI (reg/f:SI 14 r14)\n+                                                    (const_int 64 [0x40]))\n+        reload_reg_rtx: (reg:SI 3 r3)\n+Reload 1: GENERAL_REGS, RELOAD_FOR_OUTPUT_ADDRESS (opnum = 0), can't combine, se\n+condary_reload_p\n+        reload_reg_rtx: (reg:SI 3 r3)\n+Reload 2: reload_out (SI) = (mem:SI (plus:SI (plus:SI (reg/f:SI 14 r14)\n+                                                            (const_int 64 [0x40]))\n+                                                        (const_int 28 [0x1c])) [ 16 S8 A32])\n+        FPUL_REGS, RELOAD_FOR_OUTPUT (opnum = 0)\n+        reload_out_reg: (subreg:SI (reg:DI 253) 0)\n+        reload_reg_rtx: (reg:SI 150 fpul)\n+        secondary_out_reload = 1\n+\n+Reload 3: reload_in (SI) = (symbol_ref:SI (\"__sdivsi3_i4\") [flags 0x1])\n+        GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1), can't combine\n+        reload_in_reg: (reg/f:SI 256)\n+        reload_reg_rtx: (reg:SI 3 r3)\n+  */\n+\n+\n+  res.v = k2;\n+\n+  verify (res.i[0], res.i[1], 15, 7, big);\n+\n+  k3 = i & j;\n+  res.v = k3;\n+\n+  verify (res.i[0], res.i[1], 2, 4, big);\n+\n+  k4 = i | j;\n+  res.v = k4;\n+\n+  verify (res.i[0], res.i[1], 158, 109, big);\n+\n+  k5 = i ^ j;\n+  res.v = k5;\n+\n+  verify (res.i[0], res.i[1], 156, 105, big);\n+\n+  k6 = -i;\n+  res.v = k6;\n+  verify (res.i[0], res.i[1], -150, -100, big);\n+\n+  k7 = ~i;\n+  res.v = k7;\n+  verify (res.i[0], res.i[1], -151, -101, big);\n+\n+  k = k0 + k1 + k3 + k4 + k5 + k6 + k7;\n+  res.v = k;\n+  verify (res.i[0], res.i[1], 1675, 1430, big);\n+\n+  k = k0 * k1 * k3 * k4 * k5 * k6 * k7;\n+  res.v = k;\n+  verify (res.i[0], res.i[1], 1456467968, -1579586240, big);\n+\n+  k = k0 / k1 / k2 / k3 / k4 / k5 / k6 / k7;\n+  res.v = k;\n+  verify (res.i[0], res.i[1], 0, 0, big);\n+\n+  exit (0);\n+}"}]}