{"sha": "cbfd7e06e59e1543e5c98074ae467f93ea4d6b55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2JmZDdlMDZlNTllMTU0M2U1Yzk4MDc0YWU0NjdmOTNlYTRkNmI1NQ==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2004-03-24T02:24:09Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2004-03-24T02:24:09Z"}, "message": "Makefile.tpl (new-bootstrap): Set CC and CC_FOR_BUILD in configure for stages 2 and 3 as well as in make.\n\n\t* Makefile.tpl (new-bootstrap): Set CC and CC_FOR_BUILD in configure\n\tfor stages 2 and 3 as well as in make.  As a consequence, remove\n\tOUTPUT_OPTION (now detected by configure) from the flags passed down\n\tto make.\n\t* Makefile.in: Regenerate.\n\nFrom-SVN: r79892", "tree": {"sha": "44c7552910dd9044e52b73097d582d4f6eb53ba6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44c7552910dd9044e52b73097d582d4f6eb53ba6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cbfd7e06e59e1543e5c98074ae467f93ea4d6b55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbfd7e06e59e1543e5c98074ae467f93ea4d6b55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbfd7e06e59e1543e5c98074ae467f93ea4d6b55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbfd7e06e59e1543e5c98074ae467f93ea4d6b55/comments", "author": null, "committer": null, "parents": [{"sha": "5a93e8dea1f33a4e6c987974b41835f16163590e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a93e8dea1f33a4e6c987974b41835f16163590e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a93e8dea1f33a4e6c987974b41835f16163590e"}], "stats": {"total": 28, "additions": 16, "deletions": 12}, "files": [{"sha": "9fcdcb0b2807647d93f98743594e54b783e73b77", "filename": "ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbfd7e06e59e1543e5c98074ae467f93ea4d6b55/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbfd7e06e59e1543e5c98074ae467f93ea4d6b55/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=cbfd7e06e59e1543e5c98074ae467f93ea4d6b55", "patch": "@@ -1,5 +1,11 @@\n 2004-03-23  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n+\t* Makefile.tpl (new-bootstrap): Set CC and CC_FOR_BUILD in configure\n+\tfor stages 2 and 3 as well as in make.  As a consequence, remove\n+\tOUTPUT_OPTION (now detected by configure) from the flags passed down\n+\tto make.\n+\t* Makefile.in: Regenerate.\n+\n \t* Makefile.tpl (new-bootstrap): Fix typo.\n \t* Makefile.in: Regenerate.\n "}, {"sha": "888179146b835543d1a0a8e3713a3bbfd7c9828c", "filename": "Makefile.in", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbfd7e06e59e1543e5c98074ae467f93ea4d6b55/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbfd7e06e59e1543e5c98074ae467f93ea4d6b55/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=cbfd7e06e59e1543e5c98074ae467f93ea4d6b55", "patch": "@@ -24061,20 +24061,20 @@ configure-stage2-gcc: all-stage1-gcc\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \tCONFIG_SHELL=\"$(SHELL)\"; export CONFIG_SHELL; \\\n \tTOPLEVEL_CONFIGURE_ARGUMENTS=\"$(TOPLEVEL_CONFIGURE_ARGUMENTS)\"; export TOPLEVEL_CONFIGURE_ARGUMENTS; \\\n-\tCC=\"$(CC)\"; export CC; \\\n \tCFLAGS=\"$(CFLAGS)\"; export CFLAGS; \\\n \tCXX=\"$(CXX)\"; export CXX; \\\n \tCXXFLAGS=\"$(CXXFLAGS)\"; export CXXFLAGS; \\\n \tAR=\"$(AR)\"; export AR; \\\n \tAS=\"$(AS)\"; export AS; \\\n-\tCC_FOR_BUILD=\"$(CC_FOR_BUILD)\"; export CC_FOR_BUILD; \\\n \tDLLTOOL=\"$(DLLTOOL)\"; export DLLTOOL; \\\n \tLD=\"$(LD)\"; export LD; \\\n \tNM=\"$(NM)\"; export NM; \\\n \tRANLIB=\"$(RANLIB)\"; export RANLIB; \\\n \tWINDRES=\"$(WINDRES)\"; export WINDRES; \\\n \tOBJCOPY=\"$(OBJCOPY)\"; export OBJCOPY; \\\n \tOBJDUMP=\"$(OBJDUMP)\"; export OBJDUMP; \\\n+\tCC=\"$(STAGE_CC_WRAPPER) $$r/prev-gcc/xgcc$(exeext) -B$$r/prev-gcc/ -B$(build_tooldir)/bin/\"; export CC; \\\n+\tCC_FOR_BUILD=\"$(STAGE_CC_WRAPPER) $$r/prev-gcc/xgcc$(exeext) -B$$r/prev-gcc/ -B$(build_tooldir)/bin/\"; export CC_FOR_BUILD; \\\n \techo Configuring stage 2 in gcc; \\\n \tcd gcc || exit 1; \\\n \tcase $(srcdir) in \\\n@@ -24101,8 +24101,7 @@ POSTSTAGE1_FLAGS_TO_PASS = \\\n \tCFLAGS=\"$(BOOT_CFLAGS)\" \\\n \tADAC=\"\\$$(CC)\" \\\n \tWARN_CFLAGS=\"\\$$(GCC_WARN_CFLAGS)\" \\\n-\tSTRICT_WARN=\"\\$$(STRICT2_WARN)\" \\\n-\tOUTPUT_OPTION=\"-o \\$$@\"\n+\tSTRICT_WARN=\"\\$$(STRICT2_WARN)\"\n \n all-stage2-gcc: all-stage1-gcc configure-stage2-gcc\n \techo all-stage2-gcc > stage_last ; \\\n@@ -24136,20 +24135,20 @@ configure-stage3-gcc: all-stage2-gcc\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \tCONFIG_SHELL=\"$(SHELL)\"; export CONFIG_SHELL; \\\n \tTOPLEVEL_CONFIGURE_ARGUMENTS=\"$(TOPLEVEL_CONFIGURE_ARGUMENTS)\"; export TOPLEVEL_CONFIGURE_ARGUMENTS; \\\n-\tCC=\"$(CC)\"; export CC; \\\n \tCFLAGS=\"$(CFLAGS)\"; export CFLAGS; \\\n \tCXX=\"$(CXX)\"; export CXX; \\\n \tCXXFLAGS=\"$(CXXFLAGS)\"; export CXXFLAGS; \\\n \tAR=\"$(AR)\"; export AR; \\\n \tAS=\"$(AS)\"; export AS; \\\n-\tCC_FOR_BUILD=\"$(CC_FOR_BUILD)\"; export CC_FOR_BUILD; \\\n \tDLLTOOL=\"$(DLLTOOL)\"; export DLLTOOL; \\\n \tLD=\"$(LD)\"; export LD; \\\n \tNM=\"$(NM)\"; export NM; \\\n \tRANLIB=\"$(RANLIB)\"; export RANLIB; \\\n \tWINDRES=\"$(WINDRES)\"; export WINDRES; \\\n \tOBJCOPY=\"$(OBJCOPY)\"; export OBJCOPY; \\\n \tOBJDUMP=\"$(OBJDUMP)\"; export OBJDUMP; \\\n+\tCC=\"$(STAGE_CC_WRAPPER) $$r/prev-gcc/xgcc$(exeext) -B$$r/prev-gcc/ -B$(build_tooldir)/bin/\"; export CC; \\\n+\tCC_FOR_BUILD=\"$(STAGE_CC_WRAPPER) $$r/prev-gcc/xgcc$(exeext) -B$$r/prev-gcc/ -B$(build_tooldir)/bin/\"; export CC_FOR_BUILD; \\\n \techo Configuring stage 3 in gcc; \\\n \tcd gcc || exit 1; \\\n \tcase $(srcdir) in \\"}, {"sha": "e486dfeda653309aa8dbc041df600643559333d5", "filename": "Makefile.tpl", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbfd7e06e59e1543e5c98074ae467f93ea4d6b55/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbfd7e06e59e1543e5c98074ae467f93ea4d6b55/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=cbfd7e06e59e1543e5c98074ae467f93ea4d6b55", "patch": "@@ -1389,20 +1389,20 @@ configure-stage2-gcc: all-stage1-gcc\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \tCONFIG_SHELL=\"$(SHELL)\"; export CONFIG_SHELL; \\\n \tTOPLEVEL_CONFIGURE_ARGUMENTS=\"$(TOPLEVEL_CONFIGURE_ARGUMENTS)\"; export TOPLEVEL_CONFIGURE_ARGUMENTS; \\\n-\tCC=\"$(CC)\"; export CC; \\\n \tCFLAGS=\"$(CFLAGS)\"; export CFLAGS; \\\n \tCXX=\"$(CXX)\"; export CXX; \\\n \tCXXFLAGS=\"$(CXXFLAGS)\"; export CXXFLAGS; \\\n \tAR=\"$(AR)\"; export AR; \\\n \tAS=\"$(AS)\"; export AS; \\\n-\tCC_FOR_BUILD=\"$(CC_FOR_BUILD)\"; export CC_FOR_BUILD; \\\n \tDLLTOOL=\"$(DLLTOOL)\"; export DLLTOOL; \\\n \tLD=\"$(LD)\"; export LD; \\\n \tNM=\"$(NM)\"; export NM; \\\n \tRANLIB=\"$(RANLIB)\"; export RANLIB; \\\n \tWINDRES=\"$(WINDRES)\"; export WINDRES; \\\n \tOBJCOPY=\"$(OBJCOPY)\"; export OBJCOPY; \\\n \tOBJDUMP=\"$(OBJDUMP)\"; export OBJDUMP; \\\n+\tCC=\"$(STAGE_CC_WRAPPER) $$r/prev-gcc/xgcc$(exeext) -B$$r/prev-gcc/ -B$(build_tooldir)/bin/\"; export CC; \\\n+\tCC_FOR_BUILD=\"$(STAGE_CC_WRAPPER) $$r/prev-gcc/xgcc$(exeext) -B$$r/prev-gcc/ -B$(build_tooldir)/bin/\"; export CC_FOR_BUILD; \\\n \techo Configuring stage 2 in gcc; \\\n \tcd gcc || exit 1; \\\n \tcase $(srcdir) in \\\n@@ -1429,8 +1429,7 @@ POSTSTAGE1_FLAGS_TO_PASS = \\\n \tCFLAGS=\"$(BOOT_CFLAGS)\" \\\n \tADAC=\"\\$$(CC)\" \\\n \tWARN_CFLAGS=\"\\$$(GCC_WARN_CFLAGS)\" \\\n-\tSTRICT_WARN=\"\\$$(STRICT2_WARN)\" \\\n-\tOUTPUT_OPTION=\"-o \\$$@\"\n+\tSTRICT_WARN=\"\\$$(STRICT2_WARN)\"\n \n all-stage2-gcc: all-stage1-gcc configure-stage2-gcc\n \techo all-stage2-gcc > stage_last ; \\\n@@ -1464,20 +1463,20 @@ configure-stage3-gcc: all-stage2-gcc\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \tCONFIG_SHELL=\"$(SHELL)\"; export CONFIG_SHELL; \\\n \tTOPLEVEL_CONFIGURE_ARGUMENTS=\"$(TOPLEVEL_CONFIGURE_ARGUMENTS)\"; export TOPLEVEL_CONFIGURE_ARGUMENTS; \\\n-\tCC=\"$(CC)\"; export CC; \\\n \tCFLAGS=\"$(CFLAGS)\"; export CFLAGS; \\\n \tCXX=\"$(CXX)\"; export CXX; \\\n \tCXXFLAGS=\"$(CXXFLAGS)\"; export CXXFLAGS; \\\n \tAR=\"$(AR)\"; export AR; \\\n \tAS=\"$(AS)\"; export AS; \\\n-\tCC_FOR_BUILD=\"$(CC_FOR_BUILD)\"; export CC_FOR_BUILD; \\\n \tDLLTOOL=\"$(DLLTOOL)\"; export DLLTOOL; \\\n \tLD=\"$(LD)\"; export LD; \\\n \tNM=\"$(NM)\"; export NM; \\\n \tRANLIB=\"$(RANLIB)\"; export RANLIB; \\\n \tWINDRES=\"$(WINDRES)\"; export WINDRES; \\\n \tOBJCOPY=\"$(OBJCOPY)\"; export OBJCOPY; \\\n \tOBJDUMP=\"$(OBJDUMP)\"; export OBJDUMP; \\\n+\tCC=\"$(STAGE_CC_WRAPPER) $$r/prev-gcc/xgcc$(exeext) -B$$r/prev-gcc/ -B$(build_tooldir)/bin/\"; export CC; \\\n+\tCC_FOR_BUILD=\"$(STAGE_CC_WRAPPER) $$r/prev-gcc/xgcc$(exeext) -B$$r/prev-gcc/ -B$(build_tooldir)/bin/\"; export CC_FOR_BUILD; \\\n \techo Configuring stage 3 in gcc; \\\n \tcd gcc || exit 1; \\\n \tcase $(srcdir) in \\"}]}