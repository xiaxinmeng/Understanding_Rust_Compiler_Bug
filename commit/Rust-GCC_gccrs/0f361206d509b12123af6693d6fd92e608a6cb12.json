{"sha": "0f361206d509b12123af6693d6fd92e608a6cb12", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGYzNjEyMDZkNTA5YjEyMTIzYWY2NjkzZDZmZDkyZTYwOGE2Y2IxMg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-20T13:52:08Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-20T13:52:08Z"}, "message": "[multiple changes]\n\n2014-02-20  Vincent Celier  <celier@adacore.com>\n\n\t* errutil.adb (Initialize): Properly initialize entry in table\n\tWarnings when warnings are suppressed.\n\n2014-02-20  Robert Dewar  <dewar@adacore.com>\n\n\t* s-os_lib.ads: Add warning about non-portability of Rename_File.\n\t* sem_util.ads, sem_util.adb (Is_Junk_Name): New function.\n\t* sem_warn.adb: Use Is_Junk_Name to suppress some warnings.\n\t* gnat_ugn.texi: Document no warnings on junk variable names.\n\t* layout.adb: Minor code reorganization (use Ekind_In).\n\t* stringt.adb: Move initialization of Null_String_Id to Initialize\n\troutine.\n\n2014-02-20  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch13.adb: Initialize optional Element_Id.\n\nFrom-SVN: r207947", "tree": {"sha": "6f9c2f011ad7373733907f5eea8eb01d6244e444", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f9c2f011ad7373733907f5eea8eb01d6244e444"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f361206d509b12123af6693d6fd92e608a6cb12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f361206d509b12123af6693d6fd92e608a6cb12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f361206d509b12123af6693d6fd92e608a6cb12", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f361206d509b12123af6693d6fd92e608a6cb12/comments", "author": null, "committer": null, "parents": [{"sha": "c0cdbd39634ec31bb882cb8fd10281c466a3f116", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0cdbd39634ec31bb882cb8fd10281c466a3f116", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0cdbd39634ec31bb882cb8fd10281c466a3f116"}], "stats": {"total": 130, "additions": 113, "deletions": 17}, "files": [{"sha": "998272e6cf01ecc185dcb7f2ef4198cbd8af0f7e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f361206d509b12123af6693d6fd92e608a6cb12/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f361206d509b12123af6693d6fd92e608a6cb12/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0f361206d509b12123af6693d6fd92e608a6cb12", "patch": "@@ -1,3 +1,22 @@\n+2014-02-20  Vincent Celier  <celier@adacore.com>\n+\n+\t* errutil.adb (Initialize): Properly initialize entry in table\n+\tWarnings when warnings are suppressed.\n+\n+2014-02-20  Robert Dewar  <dewar@adacore.com>\n+\n+\t* s-os_lib.ads: Add warning about non-portability of Rename_File.\n+\t* sem_util.ads, sem_util.adb (Is_Junk_Name): New function.\n+\t* sem_warn.adb: Use Is_Junk_Name to suppress some warnings.\n+\t* gnat_ugn.texi: Document no warnings on junk variable names.\n+\t* layout.adb: Minor code reorganization (use Ekind_In).\n+\t* stringt.adb: Move initialization of Null_String_Id to Initialize\n+\troutine.\n+\n+2014-02-20  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch13.adb: Initialize optional Element_Id.\n+\n 2014-02-20  Robert Dewar  <dewar@adacore.com>\n \n \t* s-os_lib.ads (Rename_File): Minor commment addition."}, {"sha": "0d4af6c49c8834cdd852eecb29007ff8848440ab", "filename": "gcc/ada/errutil.adb", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f361206d509b12123af6693d6fd92e608a6cb12/gcc%2Fada%2Ferrutil.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f361206d509b12123af6693d6fd92e608a6cb12/gcc%2Fada%2Ferrutil.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrutil.adb?ref=0f361206d509b12123af6693d6fd92e608a6cb12", "patch": "@@ -31,6 +31,7 @@ with Opt;      use Opt;\n with Output;   use Output;\n with Scans;    use Scans;\n with Sinput;   use Sinput;\n+with Stringt;  use Stringt;\n with Stylesw;  use Stylesw;\n \n package body Errutil is\n@@ -599,9 +600,11 @@ package body Errutil is\n       Warnings.Init;\n \n       if Warning_Mode = Suppress then\n-         Warnings.Increment_Last;\n-         Warnings.Table (Warnings.Last).Start := Source_Ptr'First;\n-         Warnings.Table (Warnings.Last).Stop  := Source_Ptr'Last;\n+         Warnings.Append\n+           (New_Val =>\n+              (Start  => Source_Ptr'First,\n+               Stop   => Source_Ptr'Last,\n+               Reason => Null_String_Id));\n       end if;\n    end Initialize;\n "}, {"sha": "c02169f74c135f263b431a58065aae0c0b0adca1", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f361206d509b12123af6693d6fd92e608a6cb12/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f361206d509b12123af6693d6fd92e608a6cb12/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=0f361206d509b12123af6693d6fd92e608a6cb12", "patch": "@@ -7133,6 +7133,13 @@ This is particularly useful for clearly signaling that a particular\n parameter is not modified, even though the spec suggests that it might\n be.\n \n+For the variable case, warnings are never given for unreferenced variables\n+whose name contains one of the substrings\n+@code{DISCARD, DUMMY, IGNORE, JUNK, UNUSED} in any casing. Such names\n+are typically to be used in cases where such warnings are expected.\n+Thus it is never necessary to use @code{pragma Unmodified} for such\n+variables, though it is harmless to do so.\n+\n @node Pragma Unreferenced\n @unnumberedsec Pragma Unreferenced\n @findex Unreferenced\n@@ -7183,6 +7190,13 @@ mentioned in @code{with} clauses (similar to the usage of pragma\n @code{Elaborate_All}. The effect is to suppress warnings about unreferenced\n units and unreferenced entities within these units.\n \n+For the variable case, warnings are never given for unreferenced variables\n+whose name contains one of the substrings\n+@code{DISCARD, DUMMY, IGNORE, JUNK, UNUSED} in any casing. Such names\n+are typically to be used in cases where such warnings are expected.\n+Thus it is never necessary to use @code{pragma Unreferenced} for such\n+variables, though it is harmless to do so.\n+\n @node Pragma Unreferenced_Objects\n @unnumberedsec Pragma Unreferenced_Objects\n @findex Unreferenced_Objects"}, {"sha": "b61254db521f15e05f2c16c4797341ba354c529a", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f361206d509b12123af6693d6fd92e608a6cb12/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f361206d509b12123af6693d6fd92e608a6cb12/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=0f361206d509b12123af6693d6fd92e608a6cb12", "patch": "@@ -4852,7 +4852,12 @@ Internal GNAT unit @code{with}'ed by application unit\n Values known to be out of range at compile time\n \n @item\n-Unreferenced labels and variables\n+Unreferenced or unmodified variables. Note that a special\n+exemption applies to variables which contain any of the substrings\n+@code{DISCARD, DUMMY, IGNORE, JUNK, UNUSED}, in any casing. Such variables\n+are considered likely to be intentionally used in a situation where\n+otherwise a warning would be given, so warnings of this kind are\n+always suppressed for such variables.\n \n @item\n Address overlays that could clobber memory"}, {"sha": "ada36de8c758c2fef6d2745c4dba0367f9a9f02c", "filename": "gcc/ada/layout.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f361206d509b12123af6693d6fd92e608a6cb12/gcc%2Fada%2Flayout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f361206d509b12123af6693d6fd92e608a6cb12/gcc%2Fada%2Flayout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flayout.adb?ref=0f361206d509b12123af6693d6fd92e608a6cb12", "patch": "@@ -2276,9 +2276,7 @@ package body Layout is\n       --  original, nothing else needs to be done in this case, since the\n       --  components themselves are all shared.\n \n-      if (Ekind (E) = E_Record_Subtype\n-            or else\n-          Ekind (E) = E_Class_Wide_Subtype)\n+      if Ekind_In (E, E_Record_Subtype, E_Class_Wide_Subtype)\n         and then Present (Cloned_Subtype (E))\n       then\n          Set_Esize     (E, Esize     (Cloned_Subtype (E)));"}, {"sha": "03557b65597a162305f4b94fbeba207d2e8bf11b", "filename": "gcc/ada/s-os_lib.ads", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f361206d509b12123af6693d6fd92e608a6cb12/gcc%2Fada%2Fs-os_lib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f361206d509b12123af6693d6fd92e608a6cb12/gcc%2Fada%2Fs-os_lib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.ads?ref=0f361206d509b12123af6693d6fd92e608a6cb12", "patch": "@@ -301,9 +301,14 @@ package System.OS_Lib is\n       New_Name : String;\n       Success  : out Boolean);\n    --  Rename a file. Success is set True or False indicating if the rename is\n-   --  successful or not. Note that on some Systems (notably Windows), if there\n-   --  is already an existing file with the name New_Name, that is one of the\n-   --  conditions that can cause failure.\n+   --  successful or not.\n+   --\n+   --  WARNING: In one very important respect, this function is significantly\n+   --  non-portable. If New_Name already exists then on Unix systems, the call\n+   --  deletes the existing file, and the call signals success. On Windows, the\n+   --  call fails, without doing the rename operation. See also the procedure\n+   --  Ada.Directories.Rename, which portably provides the windows semantics,\n+   --  i.e. fails if the output file already exists.\n \n    --  The following defines the mode for the Copy_File procedure below. Note\n    --  that \"time stamps and other file attributes\" in the descriptions below"}, {"sha": "79ca903cc626b76c695ca49e0c6542fbcada9832", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f361206d509b12123af6693d6fd92e608a6cb12/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f361206d509b12123af6693d6fd92e608a6cb12/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=0f361206d509b12123af6693d6fd92e608a6cb12", "patch": "@@ -11493,6 +11493,7 @@ package body Sem_Ch13 is\n       First_Id       := Empty;\n       Next_Id        := Empty;\n       Has_Element_Id := Empty;\n+      Element_Id     := Empty;\n \n       --  Each expression must resolve to a function with the proper signature\n "}, {"sha": "435db38f42ba25773501f9194f2ca64a85605dc5", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f361206d509b12123af6693d6fd92e608a6cb12/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f361206d509b12123af6693d6fd92e608a6cb12/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=0f361206d509b12123af6693d6fd92e608a6cb12", "patch": "@@ -10369,6 +10369,45 @@ package body Sem_Util is\n       end if;\n    end Is_Iterator;\n \n+   ------------------\n+   -- Is_Junk_Name --\n+   ------------------\n+\n+   function Is_Junk_Name (N : Name_Id) return Boolean is\n+      function Match (S : String) return Boolean;\n+      --  Return true if substring S is found in Name_Buffer (1 .. Name_Len)\n+\n+      -----------\n+      -- Match --\n+      -----------\n+\n+      function Match (S : String) return Boolean is\n+         Slen1 : constant Integer := S'Length - 1;\n+\n+      begin\n+         for J in 1 .. Name_Len - S'Length + 1 loop\n+            if Name_Buffer (J .. J + Slen1) = S then\n+               return True;\n+            end if;\n+         end loop;\n+\n+         return False;\n+      end Match;\n+\n+   --  Start of processing for Is_Junk_Name\n+\n+   begin\n+      Get_Unqualified_Decoded_Name_String (N);\n+      Set_All_Upper_Case;\n+\n+      return\n+        Match (\"DISCARD\") or else\n+        Match (\"DUMMY\")   or else\n+        Match (\"IGNORE\")  or else\n+        Match (\"JUNK\")    or else\n+        Match (\"UNUSED\");\n+   end Is_Junk_Name;\n+\n    ------------\n    -- Is_LHS --\n    ------------"}, {"sha": "94e446523b4f07d8252d25aa6da62b00ff877983", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f361206d509b12123af6693d6fd92e608a6cb12/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f361206d509b12123af6693d6fd92e608a6cb12/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=0f361206d509b12123af6693d6fd92e608a6cb12", "patch": "@@ -1214,6 +1214,16 @@ package Sem_Util is\n    --  AI05-0139-2: Check whether Typ is one of the predefined interfaces in\n    --  Ada.Iterator_Interfaces, or it is derived from one.\n \n+   function Is_Junk_Name (N : Name_Id) return Boolean;\n+   --  Returns True if the given name contains any of the following substrings\n+   --    discard\n+   --    dummy\n+   --    ignore\n+   --    junk\n+   --    unused\n+   --  Used to suppress warnings on names matching these patterns. The contents\n+   --  of Name_Buffer and Name_Len are desteoyed by this call.\n+\n    type Is_LHS_Result is (Yes, No, Unknown);\n    function Is_LHS (N : Node_Id) return Is_LHS_Result;\n    --  Returns Yes if N is definitely used as Name in an assignment statement."}, {"sha": "e73a54e615a5828551ab96e06a0e43099a862f8c", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f361206d509b12123af6693d6fd92e608a6cb12/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f361206d509b12123af6693d6fd92e608a6cb12/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=0f361206d509b12123af6693d6fd92e608a6cb12", "patch": "@@ -1265,13 +1265,15 @@ package body Sem_Warn is\n                      if Referenced (E1) then\n                         if not Has_Unmodified (E1)\n                           and then not Warnings_Off_E1\n+                          and then not Is_Junk_Name (Chars (E1))\n                         then\n                            Output_Reference_Error\n                              (\"?v?variable& is read but never assigned!\");\n                         end if;\n \n                      elsif not Has_Unreferenced (E1)\n                        and then not Warnings_Off_E1\n+                       and then not Is_Junk_Name (Chars (E1))\n                      then\n                         Output_Reference_Error -- CODEFIX\n                           (\"?v?variable& is never read and never assigned!\");\n@@ -3899,6 +3901,7 @@ package body Sem_Warn is\n       if not Referenced_Check_Spec (E)\n         and then not Has_Pragma_Unreferenced_Check_Spec (E)\n         and then not Warnings_Off_Check_Spec (E)\n+        and then not Is_Junk_Name (Chars (Spec_E))\n       then\n          case Ekind (E) is\n             when E_Variable =>\n@@ -4105,6 +4108,7 @@ package body Sem_Warn is\n         and then not Is_Exported (Ent)\n         and then Safe_To_Capture_Value (N, Ent)\n         and then not Has_Pragma_Unreferenced_Check_Spec (Ent)\n+        and then not Is_Junk_Name (Chars (Ent))\n       then\n          --  Before we issue the message, check covering exception handlers.\n          --  Search up tree for enclosing statement sequences and handlers."}, {"sha": "5a0c89c7d04f5bd80eb71dae9f3d6711ca0ab597", "filename": "gcc/ada/stringt.adb", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f361206d509b12123af6693d6fd92e608a6cb12/gcc%2Fada%2Fstringt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f361206d509b12123af6693d6fd92e608a6cb12/gcc%2Fada%2Fstringt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstringt.adb?ref=0f361206d509b12123af6693d6fd92e608a6cb12", "patch": "@@ -121,6 +121,11 @@ package body Stringt is\n    begin\n       String_Chars.Init;\n       Strings.Init;\n+\n+      --  Set up the null string\n+\n+      Start_String;\n+      Null_String_Id := End_String;\n    end Initialize;\n \n    ----------\n@@ -472,11 +477,4 @@ package body Stringt is\n       end if;\n    end Write_String_Table_Entry;\n \n---  Setup the null string\n-\n-begin\n-   Initialize;\n-   Start_String;\n-   Null_String_Id := End_String;\n-\n end Stringt;"}]}