{"sha": "ef20ab5e01887341e8273dc3909b5d6c04663a5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWYyMGFiNWUwMTg4NzM0MWU4MjczZGMzOTA5YjVkNmMwNDY2M2E1Yw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-07-29T12:55:58Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-07-29T12:55:58Z"}, "message": "* testsuite/24_iterators/container_access.cc: New.\n\nFrom-SVN: r226349", "tree": {"sha": "3bcc8553809a62b7a93bd5324b45aabd8f0d25fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bcc8553809a62b7a93bd5324b45aabd8f0d25fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef20ab5e01887341e8273dc3909b5d6c04663a5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef20ab5e01887341e8273dc3909b5d6c04663a5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef20ab5e01887341e8273dc3909b5d6c04663a5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef20ab5e01887341e8273dc3909b5d6c04663a5c/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a460d06d168e1406f780dd3f5a71b23684bf0769", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a460d06d168e1406f780dd3f5a71b23684bf0769", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a460d06d168e1406f780dd3f5a71b23684bf0769"}], "stats": {"total": 89, "additions": 89, "deletions": 0}, "files": [{"sha": "0cbecdefa21d2c3509b9b0119ad61c5798b6e516", "filename": "libstdc++-v3/testsuite/24_iterators/container_access.cc", "status": "added", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef20ab5e01887341e8273dc3909b5d6c04663a5c/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fcontainer_access.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef20ab5e01887341e8273dc3909b5d6c04663a5c/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fcontainer_access.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fcontainer_access.cc?ref=ef20ab5e01887341e8273dc3909b5d6c04663a5c", "patch": "@@ -0,0 +1,89 @@\n+// { dg-do run }\n+// { dg-options \"-std=gnu++17\" }\n+\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 24.8, container access [iterator.container]\n+\n+#include <iterator>\n+#include <vector>\n+#include <testsuite_hooks.h>\n+\n+bool test __attribute__((unused)) = true;\n+\n+void\n+test01()\n+{\n+  int i[42];\n+  VERIFY(std::data(i) == i);\n+  VERIFY(std::size(i) == 42);\n+  VERIFY(!std::empty(i));\n+}\n+\n+void\n+test02()\n+{\n+  static constexpr int i[42]{};\n+  constexpr auto d = std::data(i);\n+  static_assert(d == i);\n+  constexpr auto s = std::size(i);\n+  static_assert(s == 42);\n+  constexpr auto e = std::empty(i);\n+  static_assert(!e);\n+}\n+\n+int\n+test03()\n+{\n+  std::initializer_list<int> il{1,2,3};\n+  VERIFY(std::data(il) == il.begin());\n+  VERIFY(std::size(il) == 3);\n+  VERIFY(!std::empty(il));\n+  std::initializer_list<int> il2{};\n+  VERIFY(std::size(il2) == 0);\n+  VERIFY(std::empty(il2));\n+  constexpr std::initializer_list<int> il3{1,2,3};\n+  constexpr auto d = std::data(il3);\n+  static_assert(d == il3.begin());\n+  constexpr auto s = std::size(il3);\n+  static_assert(s == 3);\n+  constexpr auto e = std::empty(il3);\n+  static_assert(!e);\n+\n+}\n+\n+int\n+test04()\n+{\n+  std::vector<int> v{1,2,3};\n+  VERIFY(std::data(v) == v.data());\n+  VERIFY(std::size(v) == v.size());\n+  VERIFY(!std::empty(v));\n+  std::vector<int> v2{};\n+  VERIFY(std::size(v2) == v2.size());\n+  VERIFY(std::empty(v2));\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+  test02();\n+  test03();\n+  test04();\n+}"}]}