{"sha": "73f3b8a53e6664c079731c2a183c16621481d039", "node_id": "C_kwDOANBUbNoAKDczZjNiOGE1M2U2NjY0YzA3OTczMWMyYTE4M2MxNjYyMTQ4MWQwMzk", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-03-10T14:17:03Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-03-10T14:25:46Z"}, "message": "libstdc++: Fix std::strong_order to handle NaN on VAX\n\nI mistakenly believed that VAX floats do not support NaN, but with GCC\n__builtin_isnan(__builtin_nan(\"\")) is true. That means my previous\nchange to <compare> is wrong, because it fails to handle NaN.\n\nWhen std::numeric_limits<floating-point-type>::is_iec559 is false, as on\nVAX, the standard only requires an ordering that is consistent with the\nordering observed by comparison operators. With this change the ordering\nis -NaN < numbers < +NaN, and there is no support for different NaN bit\npatterns (as I'm not even sure if GCC supports any for VAX).\n\nlibstdc++-v3/ChangeLog:\n\n\t* libsupc++/compare (_Strong_order::_S_fp_cmp) [__vax__]:\n\tHandle NaN.", "tree": {"sha": "2699289256ab4cb281f0c9c534a3c1d0a8fb1713", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2699289256ab4cb281f0c9c534a3c1d0a8fb1713"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73f3b8a53e6664c079731c2a183c16621481d039", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73f3b8a53e6664c079731c2a183c16621481d039", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73f3b8a53e6664c079731c2a183c16621481d039", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73f3b8a53e6664c079731c2a183c16621481d039/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c65d3c7f9dade18826d1a28d71b98c7cdc3e4300", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c65d3c7f9dade18826d1a28d71b98c7cdc3e4300", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c65d3c7f9dade18826d1a28d71b98c7cdc3e4300"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "6e1ed53eeed5f563bbb95b6dd045cdb94a149e7a", "filename": "libstdc++-v3/libsupc++/compare", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73f3b8a53e6664c079731c2a183c16621481d039/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcompare", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73f3b8a53e6664c079731c2a183c16621481d039/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcompare", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcompare?ref=73f3b8a53e6664c079731c2a183c16621481d039", "patch": "@@ -844,8 +844,16 @@ namespace std\n \t_S_fp_cmp(_Tp __x, _Tp __y) noexcept\n \t{\n #ifdef __vax__\n-\t  // VAX format has no NaN, only \"excess\" for Inf, so totally ordered.\n-\t  return __builtin_bit_cast(strong_ordering, __x <=> __y);\n+\t  if (__builtin_isnan(__x) || __builtin_isnan(__y))\n+\t    {\n+\t      int __ix = (bool) __builtin_isnan(__x);\n+\t      int __iy = (bool) __builtin_isnan(__y);\n+\t      __ix *= __builtin_signbit(__x) ? -1 : 1;\n+\t      __iy *= __builtin_signbit(__y) ? -1 : 1;\n+\t      return __ix <=> __iy;\n+\t    }\n+\t  else\n+\t    return __builtin_bit_cast(strong_ordering, __x <=> __y);\n #endif\n \n \t  auto __ix = _S_fp_bits(__x);"}]}