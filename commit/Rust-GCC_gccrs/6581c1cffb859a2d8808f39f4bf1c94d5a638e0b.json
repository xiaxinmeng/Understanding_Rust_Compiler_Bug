{"sha": "6581c1cffb859a2d8808f39f4bf1c94d5a638e0b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjU4MWMxY2ZmYjg1OWEyZDg4MDhmMzlmNGJmMWM5NGQ1YTYzOGUwYg==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2015-04-20T17:13:52Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2015-04-20T17:13:52Z"}, "message": "re PR tree-optimization/65658 (Jump threading too pessimistic when optimizing for size)\n\n\tPR tree-optimization/65658\n\t* tree-ssa-threadupdate.c (redirection_block_p): Ignore clobber\n\tstatements too.\n\n\tPR tree-optimization/65658\n\t* gcc.dg/pr65658.c: New test.\n\nFrom-SVN: r222242", "tree": {"sha": "aec091096fa8a09febba266c0e554df6c5a823ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aec091096fa8a09febba266c0e554df6c5a823ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6581c1cffb859a2d8808f39f4bf1c94d5a638e0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6581c1cffb859a2d8808f39f4bf1c94d5a638e0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6581c1cffb859a2d8808f39f4bf1c94d5a638e0b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6581c1cffb859a2d8808f39f4bf1c94d5a638e0b/comments", "author": null, "committer": null, "parents": [{"sha": "06aca1d5db0b88e8b6d1785c39ea2bff22d53569", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06aca1d5db0b88e8b6d1785c39ea2bff22d53569", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06aca1d5db0b88e8b6d1785c39ea2bff22d53569"}], "stats": {"total": 126, "additions": 125, "deletions": 1}, "files": [{"sha": "9d8c2bc2a3b7d576bcfef04b953023ae1d981286", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6581c1cffb859a2d8808f39f4bf1c94d5a638e0b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6581c1cffb859a2d8808f39f4bf1c94d5a638e0b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6581c1cffb859a2d8808f39f4bf1c94d5a638e0b", "patch": "@@ -1,3 +1,9 @@\n+2015-04-20  Jeff Law  <law@redhat.com>\n+\n+\tPR tree-optimization/65658\n+\t* tree-ssa-threadupdate.c (redirection_block_p): Ignore clobber\n+\tstatements too.\n+\n 2015-04-20  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* config/aarch64/aarch64.c (aarch64_simd_emit_pair_result_insn): Delete."}, {"sha": "e768f570bf4f1b9296925408f3912aa1da440dc3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6581c1cffb859a2d8808f39f4bf1c94d5a638e0b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6581c1cffb859a2d8808f39f4bf1c94d5a638e0b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6581c1cffb859a2d8808f39f4bf1c94d5a638e0b", "patch": "@@ -1,3 +1,8 @@\n+2015-04-20  Jeff Law  <law@redhat.com>\n+\n+\tPR tree-optimization/65658\n+\t* gcc.dg/pr65658.c: New test.\n+\n 2015-04-20  Alan Lawrence  <alan.lawrence@arm.com>\n \n \tPR target/64134"}, {"sha": "cce0f2af491db6f10fd8c0c1645bb91f8a08e0c3", "filename": "gcc/testsuite/gcc.dg/pr65658.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6581c1cffb859a2d8808f39f4bf1c94d5a638e0b/gcc%2Ftestsuite%2Fgcc.dg%2Fpr65658.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6581c1cffb859a2d8808f39f4bf1c94d5a638e0b/gcc%2Ftestsuite%2Fgcc.dg%2Fpr65658.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr65658.c?ref=6581c1cffb859a2d8808f39f4bf1c94d5a638e0b", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wuninitialized -O2 -Wno-implicit\" } */\n+\n+extern int optind;\n+struct undefinfo\n+{\n+  unsigned long l1;\n+  unsigned long l2;\n+};\n+struct undeffoo\n+{\n+  char a[64];\n+  long b[4];\n+  int c[33];\n+};\n+struct problem\n+{\n+  unsigned long l1;\n+  unsigned long l2;\n+  unsigned long l3;\n+  unsigned long l4;\n+};\n+static unsigned int undef1, undef2, undef3, undef4, undef5, undef6;\n+static void *undefvp1;\n+extern struct undefinfo undefinfo;\n+static int\n+undefinit1 (void)\n+{\n+  struct undeffoo foo;\n+  int i;\n+  for (i = 0; i < 2000; i++)\n+    {\n+      undef6++;\n+      external_function5 (((void *) 0), 0, (void *) &foo);\n+    }\n+}\n+\n+static int\n+undefinit2 (void *problemp, unsigned long problem)\n+{\n+  int ret, u;\n+  if (undefinit1 ())\n+    return 1;\n+  if (fn10 ())\n+    return 1;\n+  for (u = 0; u < undef6; u++)\n+    {\n+      ret = external_function1 (3 + u * 10, 10);\n+      if (ret)\n+\treturn ret;\n+      external_function6 (0, 0, 0, problemp + problem);\n+      return 1;\n+    }\n+}\n+\n+static int\n+fn6 (struct undefinfo *uip, struct problem *problem)\n+{\n+  unsigned long amt;\n+  if (external_function3 (((void *) 0), ((void *) 0), &amt, 0, 0))\n+    return 1;\n+  problem->l1 = (unsigned long) undefvp1;\n+  problem->l4 = uip->l1;\n+  problem->l3 = uip->l2;\n+  return 0;\n+}\n+\n+static int\n+setup (void)\n+{\n+  struct problem problem;\n+  if (fn6 (&undefinfo, &problem))\n+    return 1;\n+  if (fn2 ())\n+    return 1;\n+  if (fn4 (101))\n+    return 1;\n+  if (undefinit2 ((void *) problem.l1, problem.l3 * 4))  /* { dg-bogus \"problem.l3\" \"uninitialized variable warning\" } */ \n+    return 1;\n+}\n+\n+int\n+main (int argc, char **argv)\n+{\n+  int optc;\n+  if (external_function (1))\n+    return 1;\n+  if (external_function (1))\n+    return 1;\n+  if (external_function (1))\n+    return 1;\n+  while ((optc =\n+\t  getopt_long (argc, argv, ((void *) 0), ((void *) 0),\n+\t\t       ((void *) 0))) != -1)\n+    {\n+      switch (optc)\n+\t{\n+\tcase 0:\n+\t  break;\n+\tcase 'F':\n+\t  external_function (1);\n+\tdefault:\n+\t  return 1;\n+\t}\n+    }\n+  if ((optind != 99))\n+    {\n+      return 1;\n+    }\n+  setup ();\n+}"}, {"sha": "9f263bd7843637a25c1574a63c0b8845e1876f0a", "filename": "gcc/tree-ssa-threadupdate.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6581c1cffb859a2d8808f39f4bf1c94d5a638e0b/gcc%2Ftree-ssa-threadupdate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6581c1cffb859a2d8808f39f4bf1c94d5a638e0b/gcc%2Ftree-ssa-threadupdate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadupdate.c?ref=6581c1cffb859a2d8808f39f4bf1c94d5a638e0b", "patch": "@@ -1449,7 +1449,9 @@ redirection_block_p (basic_block bb)\n   while (!gsi_end_p (gsi)\n \t && (gimple_code (gsi_stmt (gsi)) == GIMPLE_LABEL\n \t     || is_gimple_debug (gsi_stmt (gsi))\n-\t     || gimple_nop_p (gsi_stmt (gsi))))\n+\t     || gimple_nop_p (gsi_stmt (gsi))\n+\t     || (gimple_code (gsi_stmt (gsi)) == GIMPLE_ASSIGN\n+\t\t && gimple_clobber_p (gsi_stmt (gsi)))))\n     gsi_next (&gsi);\n \n   /* Check if this is an empty block.  */"}]}