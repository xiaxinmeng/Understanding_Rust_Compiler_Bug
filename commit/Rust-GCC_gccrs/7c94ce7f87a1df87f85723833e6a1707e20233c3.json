{"sha": "7c94ce7f87a1df87f85723833e6a1707e20233c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2M5NGNlN2Y4N2ExZGY4N2Y4NTcyMzgzM2U2YTE3MDdlMjAyMzNjMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-01-15T11:00:43Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-01-15T11:00:43Z"}, "message": "c-typeck.c (process_init_element): Don't save_expr COMPOUND_LITERAL_EXPR if just its initializer will be used.\n\n\t* c-typeck.c (process_init_element): Don't save_expr\n\tCOMPOUND_LITERAL_EXPR if just its initializer will be used.\n\n\t* gcc.dg/gnu89-init-1.c: Add new tests.\n\nFrom-SVN: r48868", "tree": {"sha": "6de273cd90cd66cf20e3c5dc5136b2f813181125", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6de273cd90cd66cf20e3c5dc5136b2f813181125"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c94ce7f87a1df87f85723833e6a1707e20233c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c94ce7f87a1df87f85723833e6a1707e20233c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c94ce7f87a1df87f85723833e6a1707e20233c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c94ce7f87a1df87f85723833e6a1707e20233c3/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9631a0e1170f1396448e7b14935a4cf64a9d2424", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9631a0e1170f1396448e7b14935a4cf64a9d2424", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9631a0e1170f1396448e7b14935a4cf64a9d2424"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "1629ba9a60b236c917a129ecbb75c926712d68ae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c94ce7f87a1df87f85723833e6a1707e20233c3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c94ce7f87a1df87f85723833e6a1707e20233c3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7c94ce7f87a1df87f85723833e6a1707e20233c3", "patch": "@@ -1,3 +1,8 @@\n+2002-01-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* c-typeck.c (process_init_element): Don't save_expr\n+\tCOMPOUND_LITERAL_EXPR if just its initializer will be used.\n+\n 2002-01-15  David Edelsohn  <edelsohn@gnu.org>\n \n \t* config/rs6000/rs6000.c (rs6000_output_function_epilogue): Do not"}, {"sha": "fad00abbec37ac61913ad5f735f063aa4b68bb5c", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c94ce7f87a1df87f85723833e6a1707e20233c3/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c94ce7f87a1df87f85723833e6a1707e20233c3/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=7c94ce7f87a1df87f85723833e6a1707e20233c3", "patch": "@@ -6618,7 +6618,14 @@ process_init_element (value)\n \n   /* In the case of [LO ... HI] = VALUE, only evaluate VALUE once.  */\n   if (constructor_range_stack)\n-    value = save_expr (value);\n+    {\n+      /* If value is a compound literal and we'll be just using its\n+\t content, don't put it into a SAVE_EXPR.  */\n+      if (TREE_CODE (value) != COMPOUND_LITERAL_EXPR\n+\t  || !require_constant_value\n+\t  || flag_isoc99)\n+\tvalue = save_expr (value);\n+    }\n \n   while (1)\n     {"}, {"sha": "4ac978a44ded2ad5b24079dc49778642f6056052", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c94ce7f87a1df87f85723833e6a1707e20233c3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c94ce7f87a1df87f85723833e6a1707e20233c3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7c94ce7f87a1df87f85723833e6a1707e20233c3", "patch": "@@ -1,3 +1,7 @@\n+2002-01-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.dg/gnu89-init-1.c: Add new tests.\n+\n 2002-01-15  Andreas Jaeger  <aj@suse.de>\n \n \t* gcc.dg/i386-mmx-1.c: Also run on x86-64."}, {"sha": "07bf823535d8f5aaf0a2569b3babae16c41f6349", "filename": "gcc/testsuite/gcc.dg/gnu89-init-1.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c94ce7f87a1df87f85723833e6a1707e20233c3/gcc%2Ftestsuite%2Fgcc.dg%2Fgnu89-init-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c94ce7f87a1df87f85723833e6a1707e20233c3/gcc%2Ftestsuite%2Fgcc.dg%2Fgnu89-init-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgnu89-init-1.c?ref=7c94ce7f87a1df87f85723833e6a1707e20233c3", "patch": "@@ -28,6 +28,8 @@ struct C g[3] = { [2] = (struct C) { 13 }, [1] = (const struct C) { 12 } };\n struct D h = { .j = (struct C) { 15 }, .i = 14 };\n struct D i[2] = { [1].j = (const struct C) { 17 },\n \t\t  [0] = { 0, (struct C) { 16 } } };\n+struct C j[2][3] = { [0 ... 1] = { [0 ... 2] = (struct C) { 26 } } };\n+struct C k[3][2] = { [0 ... 2][0 ... 1] = (const struct C) { 27 } };\n \n int main (void)\n {\n@@ -55,5 +57,13 @@ int main (void)\n     abort ();\n   if (i[0].i || i[0].j.i != 16 || i[1].i || i[1].j.i != 17)\n     abort ();\n+  if (j[0][0].i != 26 || j[0][1].i != 26 || j[0][2].i != 26)\n+    abort ();\n+  if (j[1][0].i != 26 || j[1][1].i != 26 || j[1][2].i != 26)\n+    abort ();\n+  if (k[0][0].i != 27 || k[0][1].i != 27 || k[1][0].i != 27)\n+    abort ();\n+  if (k[1][1].i != 27 || k[2][0].i != 27 || k[2][1].i != 27)\n+    abort ();\n   exit (0);\n }"}]}