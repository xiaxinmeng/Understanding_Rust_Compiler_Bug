{"sha": "c875250d42d16abb1c638a1b340ea5dac5c9a479", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzg3NTI1MGQ0MmQxNmFiYjFjNjM4YTFiMzQwZWE1ZGFjNWM5YTQ3OQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2020-08-29T14:24:55Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-23T08:24:49Z"}, "message": "[Ada] Prevent copying uninitialized array with address clause\n\ngcc/ada/\n\n\t* freeze.adb (Is_Uninitialized_Aggregate): Recognize an array\n\taggregate with box initialization, scalar components, and no\n\tcomponent default values.\n\t(Freeze_Entity, Check_Address_Clause): Call it, and simplify\n\tfreeze code for entity by removing useless assignment.", "tree": {"sha": "935ec60d991ef7ede9d521f268864777f129e651", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/935ec60d991ef7ede9d521f268864777f129e651"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c875250d42d16abb1c638a1b340ea5dac5c9a479", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c875250d42d16abb1c638a1b340ea5dac5c9a479", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c875250d42d16abb1c638a1b340ea5dac5c9a479", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c875250d42d16abb1c638a1b340ea5dac5c9a479/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d245fdaf742b468bce03034c47b82f51ce6282c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d245fdaf742b468bce03034c47b82f51ce6282c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d245fdaf742b468bce03034c47b82f51ce6282c"}], "stats": {"total": 49, "additions": 48, "deletions": 1}, "files": [{"sha": "b95a216ef9bcb2adc9913f4070118409f2d71c46", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 48, "deletions": 1, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c875250d42d16abb1c638a1b340ea5dac5c9a479/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c875250d42d16abb1c638a1b340ea5dac5c9a479/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=c875250d42d16abb1c638a1b340ea5dac5c9a479", "patch": "@@ -182,6 +182,12 @@ package body Freeze is\n    --  the designated type. Otherwise freezing the access type does not freeze\n    --  the designated type.\n \n+   function Is_Uninitialized_Aggregate (N : Node_Id) return Boolean;\n+   --  Determine whether an array aggregate used in an object declaration\n+   --  is uninitialized, when the aggregate is declared with a box and\n+   --  the component type has no default value. Such an aggregate can be\n+   --  optimized away and prevent the copying of uninitialized data.\n+\n    procedure Process_Default_Expressions\n      (E     : Entity_Id;\n       After : in out Node_Id);\n@@ -718,7 +724,14 @@ package body Freeze is\n          --  expansion elsewhere. This exception is necessary to avoid copying\n          --  limited objects.\n \n-         if Present (Init) and then not Is_Limited_View (Typ) then\n+         if Present (Init)\n+           and then not Is_Limited_View (Typ)\n+         then\n+            if Is_Uninitialized_Aggregate (Init) then\n+               Init := Empty;\n+               Set_No_Initialization (Decl);\n+               return;\n+            end if;\n \n             --  Capture initialization value at point of declaration, and make\n             --  explicit assignment legal, because object may be a constant.\n@@ -9131,6 +9144,40 @@ package body Freeze is\n       end if;\n    end Freeze_Subprogram;\n \n+   --------------------------------\n+   -- Is_Uninitialized_Aggregate --\n+   --------------------------------\n+\n+   function Is_Uninitialized_Aggregate (N : Node_Id) return Boolean is\n+      Aggr : constant Node_Id := Original_Node (N);\n+      Typ  : constant Entity_Id := Etype (Aggr);\n+\n+      Comp      : Node_Id;\n+      Comp_Type : Entity_Id;\n+   begin\n+      if Nkind (Aggr) /= N_Aggregate\n+        or else No (Typ)\n+        or else Ekind (Typ) /= E_Array_Type\n+        or else Present (Expressions (Aggr))\n+        or else No (Component_Associations (Aggr))\n+      then\n+         return False;\n+      else\n+         Comp_Type := Component_Type (Typ);\n+         Comp := First (Component_Associations (Aggr));\n+\n+         if not Box_Present (Comp)\n+           or else Present (Next (Comp))\n+         then\n+            return False;\n+         end if;\n+\n+         return Is_Scalar_Type (Comp_Type)\n+           and then No (Default_Aspect_Component_Value (Typ))\n+           and then No (Default_Aspect_Value (Comp_Type));\n+      end if;\n+   end Is_Uninitialized_Aggregate;\n+\n    ----------------------\n    -- Is_Fully_Defined --\n    ----------------------"}]}