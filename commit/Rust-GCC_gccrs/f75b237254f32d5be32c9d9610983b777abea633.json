{"sha": "f75b237254f32d5be32c9d9610983b777abea633", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjc1YjIzNzI1NGYzMmQ1YmUzMmM5ZDk2MTA5ODNiNzc3YWJlYTYzMw==", "commit": {"author": {"name": "Jeff Law", "email": "jeffreyalaw@gmail.com", "date": "2021-09-19T17:31:32Z"}, "committer": {"name": "Jeff Law", "email": "jeffreyalaw@gmail.com", "date": "2021-09-19T17:31:32Z"}, "message": "[committed] Make test names unique for a couple of goacc tests\n\ngcc/testsuite\n\t* gfortran.dg/goacc/privatization-1-compute.f90: Make test names\n\tunique.\n\t* gfortran.dg/goacc/routine-external-level-of-parallelism-2.f:\n\tLikewise.", "tree": {"sha": "2d5e034a81cba6180a219343a1a554c2bc44685f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d5e034a81cba6180a219343a1a554c2bc44685f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f75b237254f32d5be32c9d9610983b777abea633", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f75b237254f32d5be32c9d9610983b777abea633", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f75b237254f32d5be32c9d9610983b777abea633", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f75b237254f32d5be32c9d9610983b777abea633/comments", "author": {"login": "JeffreyALaw", "id": 14062506, "node_id": "MDQ6VXNlcjE0MDYyNTA2", "avatar_url": "https://avatars.githubusercontent.com/u/14062506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeffreyALaw", "html_url": "https://github.com/JeffreyALaw", "followers_url": "https://api.github.com/users/JeffreyALaw/followers", "following_url": "https://api.github.com/users/JeffreyALaw/following{/other_user}", "gists_url": "https://api.github.com/users/JeffreyALaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeffreyALaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeffreyALaw/subscriptions", "organizations_url": "https://api.github.com/users/JeffreyALaw/orgs", "repos_url": "https://api.github.com/users/JeffreyALaw/repos", "events_url": "https://api.github.com/users/JeffreyALaw/events{/privacy}", "received_events_url": "https://api.github.com/users/JeffreyALaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JeffreyALaw", "id": 14062506, "node_id": "MDQ6VXNlcjE0MDYyNTA2", "avatar_url": "https://avatars.githubusercontent.com/u/14062506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeffreyALaw", "html_url": "https://github.com/JeffreyALaw", "followers_url": "https://api.github.com/users/JeffreyALaw/followers", "following_url": "https://api.github.com/users/JeffreyALaw/following{/other_user}", "gists_url": "https://api.github.com/users/JeffreyALaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeffreyALaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeffreyALaw/subscriptions", "organizations_url": "https://api.github.com/users/JeffreyALaw/orgs", "repos_url": "https://api.github.com/users/JeffreyALaw/repos", "events_url": "https://api.github.com/users/JeffreyALaw/events{/privacy}", "received_events_url": "https://api.github.com/users/JeffreyALaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e4ada576fe5297e794ca20803e010ed0212fb7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e4ada576fe5297e794ca20803e010ed0212fb7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e4ada576fe5297e794ca20803e010ed0212fb7e"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "31f998dfc92fa2da115a891bf01e99a3b8463ba2", "filename": "gcc/testsuite/gfortran.dg/goacc/privatization-1-compute.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f75b237254f32d5be32c9d9610983b777abea633/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fprivatization-1-compute.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f75b237254f32d5be32c9d9610983b777abea633/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fprivatization-1-compute.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fprivatization-1-compute.f90?ref=f75b237254f32d5be32c9d9610983b777abea633", "patch": "@@ -39,9 +39,9 @@ subroutine f (i, j, a)\n           !$acc atomic write ! ... to force 'TREE_ADDRESSABLE'.\n           y = a\n     !$acc end parallel\n-    ! { dg-note {variable 'i' in 'private' clause potentially has improper OpenACC privatization level: 'parm_decl'} \"TODO\" { xfail *-*-* } l_compute$c_compute }\n-    ! { dg-note {variable 'j' in 'private' clause potentially has improper OpenACC privatization level: 'parm_decl'} \"TODO\" { xfail *-*-* } l_compute$c_compute }\n-    ! { dg-note {variable 'a' in 'private' clause potentially has improper OpenACC privatization level: 'parm_decl'} \"TODO\" { xfail *-*-* } l_compute$c_compute }\n+    ! { dg-note {variable 'i' in 'private' clause potentially has improper OpenACC privatization level: 'parm_decl'} \"TODO2\" { xfail *-*-* } l_compute$c_compute }\n+    ! { dg-note {variable 'j' in 'private' clause potentially has improper OpenACC privatization level: 'parm_decl'} \"TODO3\" { xfail *-*-* } l_compute$c_compute }\n+    ! { dg-note {variable 'a' in 'private' clause potentially has improper OpenACC privatization level: 'parm_decl'} \"TODO4\" { xfail *-*-* } l_compute$c_compute }\n     ! { dg-note {variable 'C\\.[0-9]+' declared in block potentially has improper OpenACC privatization level: 'const_decl'} \"TODO\" { target *-*-* } l_compute$c_compute }\n     ! { dg-note {variable 'D\\.[0-9]+' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} \"\" { target *-*-* } l_compute$c_compute }\n   end subroutine f"}, {"sha": "949d571ee55f80cd00e07e737530dda84823ef82", "filename": "gcc/testsuite/gfortran.dg/goacc/routine-external-level-of-parallelism-2.f", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f75b237254f32d5be32c9d9610983b777abea633/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Froutine-external-level-of-parallelism-2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f75b237254f32d5be32c9d9610983b777abea633/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Froutine-external-level-of-parallelism-2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Froutine-external-level-of-parallelism-2.f?ref=f75b237254f32d5be32c9d9610983b777abea633", "patch": "@@ -22,8 +22,8 @@ subroutine sub\n ! { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n          do j = 1, n\n             call workerr (a, n) ! { dg-message \"optimized: assigned OpenACC worker vector loop parallelism\" }\n-! { dg-bogus \"note: routine 'workerr' declared here\" \"TODO\" { xfail { ! offloading_enabled } } .-1 }\n-! { dg-bogus \"note: routine 'workerr_' declared here\" \"TODO\" { xfail offloading_enabled } .-2 }\n+! { dg-bogus \"note: routine 'workerr' declared here\" \"TODO1\" { xfail { ! offloading_enabled } } .-1 }\n+! { dg-bogus \"note: routine 'workerr_' declared here\" \"TODO2\" { xfail offloading_enabled } .-2 }\n          end do\n       end do\n !$acc end parallel loop\n@@ -36,8 +36,8 @@ subroutine sub\n          do j = 1, n\n             call gangr (a, n) ! { dg-message \"optimized: assigned OpenACC worker vector loop parallelism\" }\n ! { dg-error \"routine call uses same OpenACC parallelism as containing loop\" \"\" { target *-*-* } .-1 }\n-! { dg-bogus \"note: routine 'gangr' declared here\" \"TODO\" { xfail { ! offloading_enabled } } .-2 }\n-! { dg-bogus \"note: routine 'gangr_' declared here\" \"TODO\" { xfail offloading_enabled } .-3 }\n+! { dg-bogus \"note: routine 'gangr' declared here\" \"TODO1\" { xfail { ! offloading_enabled } } .-2 }\n+! { dg-bogus \"note: routine 'gangr_' declared here\" \"TODO2\" { xfail offloading_enabled } .-3 }\n          end do\n       end do\n !$acc end parallel loop\n@@ -162,8 +162,8 @@ subroutine sub\n !$acc parallel loop ! { dg-message \"optimized: assigned OpenACC gang worker loop parallelism\" }\n       do i = 1, n\n          call vectorr (a, n) ! { dg-message \"optimized: assigned OpenACC vector loop parallelism\" }\n-! { dg-bogus \"note: routine 'vectorr' declared here\" \"TODO\" { xfail { ! offloading_enabled } } .-1 }\n-! { dg-bogus \"note: routine 'vectorr_' declared here\" \"TODO\" { xfail offloading_enabled } .-2 }\n+! { dg-bogus \"note: routine 'vectorr' declared here\" \"TODO1\" { xfail { ! offloading_enabled } } .-1 }\n+! { dg-bogus \"note: routine 'vectorr_' declared here\" \"TODO2\" { xfail offloading_enabled } .-2 }\n       end do\n !$acc end parallel loop\n \n@@ -214,8 +214,8 @@ subroutine func\n ! { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n          do j = 1, n\n             a(i) = workerf (a, n) ! { dg-message \"optimized: assigned OpenACC worker vector loop parallelism\" }\n-! { dg-bogus \"note: routine 'workerf' declared here\" \"TODO\" { xfail { ! offloading_enabled } } .-1 }\n-! { dg-bogus \"note: routine 'workerf_' declared here\" \"TODO\" { xfail offloading_enabled } .-2 }\n+! { dg-bogus \"note: routine 'workerf' declared here\" \"TODO1\" { xfail { ! offloading_enabled } } .-1 }\n+! { dg-bogus \"note: routine 'workerf_' declared here\" \"TODO2\" { xfail offloading_enabled } .-2 }\n          end do\n       end do\n !$acc end parallel loop\n@@ -228,8 +228,8 @@ subroutine func\n          do j = 1, n\n             a(i) = gangf (a, n) ! { dg-message \"optimized: assigned OpenACC worker vector loop parallelism\" }\n ! { dg-error \"routine call uses same OpenACC parallelism as containing loop\" \"\" { target *-*-* } .-1 }\n-! { dg-bogus \"note: routine 'gangf' declared here\" \"TODO\" { xfail { ! offloading_enabled } } .-2 }\n-! { dg-bogus \"note: routine 'gangf_' declared here\" \"TODO\" { xfail offloading_enabled } .-3 }\n+! { dg-bogus \"note: routine 'gangf' declared here\" \"TODO1\" { xfail { ! offloading_enabled } } .-2 }\n+! { dg-bogus \"note: routine 'gangf_' declared here\" \"TODO2\" { xfail offloading_enabled } .-3 }\n          end do\n       end do\n !$acc end parallel loop\n@@ -354,8 +354,8 @@ subroutine func\n !$acc parallel loop ! { dg-message \"optimized: assigned OpenACC gang worker loop parallelism\" }\n       do i = 1, n\n          a(i) = vectorf (a, n) ! { dg-message \"optimized: assigned OpenACC vector loop parallelism\" }\n-! { dg-bogus \"note: routine 'vectorf' declared here\" \"TODO\" { xfail { ! offloading_enabled } } .-1 }\n-! { dg-bogus \"note: routine 'vectorf_' declared here\" \"TODO\" { xfail offloading_enabled } .-2 }\n+! { dg-bogus \"note: routine 'vectorf' declared here\" \"TODO1\" { xfail { ! offloading_enabled } } .-1 }\n+! { dg-bogus \"note: routine 'vectorf_' declared here\" \"TODO2\" { xfail offloading_enabled } .-2 }\n       end do\n !$acc end parallel loop\n "}]}