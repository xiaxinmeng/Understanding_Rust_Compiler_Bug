{"sha": "80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODBkZDYzMWZjZWFjM2I5YjhkYTcxMmZhOWUxYzFhMmY2MTAwMmNiOQ==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2017-03-10T19:42:46Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2017-03-10T19:42:46Z"}, "message": "re PR libfortran/79956 (many new -Wmaybe-uninitialized warnings with bootstrap-O3)\n\n2017-03-10  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR libfortran/79956\n\t* m4/iforeach.m4:  Change exit condition from loop for\n\tincreasing dimension to >=.  Fix type in comment.\n\t* m4/ifunction.m4:  Likewise.\n\t* m4/ifunction_logical.m4: Likewise.\n\t* generated/all_l1.c: Regenerated.\n\t* generated/all_l16.c: Regenerated.\n\t* generated/all_l2.c: Regenerated.\n\t* generated/all_l4.c: Regenerated.\n\t* generated/all_l8.c: Regenerated.\n\t* generated/any_l1.c: Regenerated.\n\t* generated/any_l16.c: Regenerated.\n\t* generated/any_l2.c: Regenerated.\n\t* generated/any_l4.c: Regenerated.\n\t* generated/any_l8.c: Regenerated.\n\t* generated/count_16_l.c: Regenerated.\n\t* generated/count_1_l.c: Regenerated.\n\t* generated/count_2_l.c: Regenerated.\n\t* generated/count_4_l.c: Regenerated.\n\t* generated/count_8_l.c: Regenerated.\n\t* generated/iall_i1.c: Regenerated.\n\t* generated/iall_i16.c: Regenerated.\n\t* generated/iall_i2.c: Regenerated.\n\t* generated/iall_i4.c: Regenerated.\n\t* generated/iall_i8.c: Regenerated.\n\t* generated/iany_i1.c: Regenerated.\n\t* generated/iany_i16.c: Regenerated.\n\t* generated/iany_i2.c: Regenerated.\n\t* generated/iany_i4.c: Regenerated.\n\t* generated/iany_i8.c: Regenerated.\n\t* generated/iparity_i1.c: Regenerated.\n\t* generated/iparity_i16.c: Regenerated.\n\t* generated/iparity_i2.c: Regenerated.\n\t* generated/iparity_i4.c: Regenerated.\n\t* generated/iparity_i8.c: Regenerated.\n\t* generated/maxloc0_16_i1.c: Regenerated.\n\t* generated/maxloc0_16_i16.c: Regenerated.\n\t* generated/maxloc0_16_i2.c: Regenerated.\n\t* generated/maxloc0_16_i4.c: Regenerated.\n\t* generated/maxloc0_16_i8.c: Regenerated.\n\t* generated/maxloc0_16_r10.c: Regenerated.\n\t* generated/maxloc0_16_r16.c: Regenerated.\n\t* generated/maxloc0_16_r4.c: Regenerated.\n\t* generated/maxloc0_16_r8.c: Regenerated.\n\t* generated/maxloc0_4_i1.c: Regenerated.\n\t* generated/maxloc0_4_i16.c: Regenerated.\n\t* generated/maxloc0_4_i2.c: Regenerated.\n\t* generated/maxloc0_4_i4.c: Regenerated.\n\t* generated/maxloc0_4_i8.c: Regenerated.\n\t* generated/maxloc0_4_r10.c: Regenerated.\n\t* generated/maxloc0_4_r16.c: Regenerated.\n\t* generated/maxloc0_4_r4.c: Regenerated.\n\t* generated/maxloc0_4_r8.c: Regenerated.\n\t* generated/maxloc0_8_i1.c: Regenerated.\n\t* generated/maxloc0_8_i16.c: Regenerated.\n\t* generated/maxloc0_8_i2.c: Regenerated.\n\t* generated/maxloc0_8_i4.c: Regenerated.\n\t* generated/maxloc0_8_i8.c: Regenerated.\n\t* generated/maxloc0_8_r10.c: Regenerated.\n\t* generated/maxloc0_8_r16.c: Regenerated.\n\t* generated/maxloc0_8_r4.c: Regenerated.\n\t* generated/maxloc0_8_r8.c: Regenerated.\n\t* generated/maxloc1_16_i1.c: Regenerated.\n\t* generated/maxloc1_16_i16.c: Regenerated.\n\t* generated/maxloc1_16_i2.c: Regenerated.\n\t* generated/maxloc1_16_i4.c: Regenerated.\n\t* generated/maxloc1_16_i8.c: Regenerated.\n\t* generated/maxloc1_16_r10.c: Regenerated.\n\t* generated/maxloc1_16_r16.c: Regenerated.\n\t* generated/maxloc1_16_r4.c: Regenerated.\n\t* generated/maxloc1_16_r8.c: Regenerated.\n\t* generated/maxloc1_4_i1.c: Regenerated.\n\t* generated/maxloc1_4_i16.c: Regenerated.\n\t* generated/maxloc1_4_i2.c: Regenerated.\n\t* generated/maxloc1_4_i4.c: Regenerated.\n\t* generated/maxloc1_4_i8.c: Regenerated.\n\t* generated/maxloc1_4_r10.c: Regenerated.\n\t* generated/maxloc1_4_r16.c: Regenerated.\n\t* generated/maxloc1_4_r4.c: Regenerated.\n\t* generated/maxloc1_4_r8.c: Regenerated.\n\t* generated/maxloc1_8_i1.c: Regenerated.\n\t* generated/maxloc1_8_i16.c: Regenerated.\n\t* generated/maxloc1_8_i2.c: Regenerated.\n\t* generated/maxloc1_8_i4.c: Regenerated.\n\t* generated/maxloc1_8_i8.c: Regenerated.\n\t* generated/maxloc1_8_r10.c: Regenerated.\n\t* generated/maxloc1_8_r16.c: Regenerated.\n\t* generated/maxloc1_8_r4.c: Regenerated.\n\t* generated/maxloc1_8_r8.c: Regenerated.\n\t* generated/maxval_i1.c: Regenerated.\n\t* generated/maxval_i16.c: Regenerated.\n\t* generated/maxval_i2.c: Regenerated.\n\t* generated/maxval_i4.c: Regenerated.\n\t* generated/maxval_i8.c: Regenerated.\n\t* generated/maxval_r10.c: Regenerated.\n\t* generated/maxval_r16.c: Regenerated.\n\t* generated/maxval_r4.c: Regenerated.\n\t* generated/maxval_r8.c: Regenerated.\n\t* generated/minloc0_16_i1.c: Regenerated.\n\t* generated/minloc0_16_i16.c: Regenerated.\n\t* generated/minloc0_16_i2.c: Regenerated.\n\t* generated/minloc0_16_i4.c: Regenerated.\n\t* generated/minloc0_16_i8.c: Regenerated.\n\t* generated/minloc0_16_r10.c: Regenerated.\n\t* generated/minloc0_16_r16.c: Regenerated.\n\t* generated/minloc0_16_r4.c: Regenerated.\n\t* generated/minloc0_16_r8.c: Regenerated.\n\t* generated/minloc0_4_i1.c: Regenerated.\n\t* generated/minloc0_4_i16.c: Regenerated.\n\t* generated/minloc0_4_i2.c: Regenerated.\n\t* generated/minloc0_4_i4.c: Regenerated.\n\t* generated/minloc0_4_i8.c: Regenerated.\n\t* generated/minloc0_4_r10.c: Regenerated.\n\t* generated/minloc0_4_r16.c: Regenerated.\n\t* generated/minloc0_4_r4.c: Regenerated.\n\t* generated/minloc0_4_r8.c: Regenerated.\n\t* generated/minloc0_8_i1.c: Regenerated.\n\t* generated/minloc0_8_i16.c: Regenerated.\n\t* generated/minloc0_8_i2.c: Regenerated.\n\t* generated/minloc0_8_i4.c: Regenerated.\n\t* generated/minloc0_8_i8.c: Regenerated.\n\t* generated/minloc0_8_r10.c: Regenerated.\n\t* generated/minloc0_8_r16.c: Regenerated.\n\t* generated/minloc0_8_r4.c: Regenerated.\n\t* generated/minloc0_8_r8.c: Regenerated.\n\t* generated/minloc1_16_i1.c: Regenerated.\n\t* generated/minloc1_16_i16.c: Regenerated.\n\t* generated/minloc1_16_i2.c: Regenerated.\n\t* generated/minloc1_16_i4.c: Regenerated.\n\t* generated/minloc1_16_i8.c: Regenerated.\n\t* generated/minloc1_16_r10.c: Regenerated.\n\t* generated/minloc1_16_r16.c: Regenerated.\n\t* generated/minloc1_16_r4.c: Regenerated.\n\t* generated/minloc1_16_r8.c: Regenerated.\n\t* generated/minloc1_4_i1.c: Regenerated.\n\t* generated/minloc1_4_i16.c: Regenerated.\n\t* generated/minloc1_4_i2.c: Regenerated.\n\t* generated/minloc1_4_i4.c: Regenerated.\n\t* generated/minloc1_4_i8.c: Regenerated.\n\t* generated/minloc1_4_r10.c: Regenerated.\n\t* generated/minloc1_4_r16.c: Regenerated.\n\t* generated/minloc1_4_r4.c: Regenerated.\n\t* generated/minloc1_4_r8.c: Regenerated.\n\t* generated/minloc1_8_i1.c: Regenerated.\n\t* generated/minloc1_8_i16.c: Regenerated.\n\t* generated/minloc1_8_i2.c: Regenerated.\n\t* generated/minloc1_8_i4.c: Regenerated.\n\t* generated/minloc1_8_i8.c: Regenerated.\n\t* generated/minloc1_8_r10.c: Regenerated.\n\t* generated/minloc1_8_r16.c: Regenerated.\n\t* generated/minloc1_8_r4.c: Regenerated.\n\t* generated/minloc1_8_r8.c: Regenerated.\n\t* generated/minval_i1.c: Regenerated.\n\t* generated/minval_i16.c: Regenerated.\n\t* generated/minval_i2.c: Regenerated.\n\t* generated/minval_i4.c: Regenerated.\n\t* generated/minval_i8.c: Regenerated.\n\t* generated/minval_r10.c: Regenerated.\n\t* generated/minval_r16.c: Regenerated.\n\t* generated/minval_r4.c: Regenerated.\n\t* generated/minval_r8.c: Regenerated.\n\t* generated/norm2_r10.c: Regenerated.\n\t* generated/norm2_r16.c: Regenerated.\n\t* generated/norm2_r4.c: Regenerated.\n\t* generated/norm2_r8.c: Regenerated.\n\t* generated/parity_l1.c: Regenerated.\n\t* generated/parity_l16.c: Regenerated.\n\t* generated/parity_l2.c: Regenerated.\n\t* generated/parity_l4.c: Regenerated.\n\t* generated/parity_l8.c: Regenerated.\n\t* generated/product_c10.c: Regenerated.\n\t* generated/product_c16.c: Regenerated.\n\t* generated/product_c4.c: Regenerated.\n\t* generated/product_c8.c: Regenerated.\n\t* generated/product_i1.c: Regenerated.\n\t* generated/product_i16.c: Regenerated.\n\t* generated/product_i2.c: Regenerated.\n\t* generated/product_i4.c: Regenerated.\n\t* generated/product_i8.c: Regenerated.\n\t* generated/product_r10.c: Regenerated.\n\t* generated/product_r16.c: Regenerated.\n\t* generated/product_r4.c: Regenerated.\n\t* generated/product_r8.c: Regenerated.\n\t* generated/sum_c10.c: Regenerated.\n\t* generated/sum_c16.c: Regenerated.\n\t* generated/sum_c4.c: Regenerated.\n\t* generated/sum_c8.c: Regenerated.\n\t* generated/sum_i1.c: Regenerated.\n\t* generated/sum_i16.c: Regenerated.\n\t* generated/sum_i2.c: Regenerated.\n\t* generated/sum_i4.c: Regenerated.\n\t* generated/sum_i8.c: Regenerated.\n\t* generated/sum_r10.c: Regenerated.\n\t* generated/sum_r16.c: Regenerated.\n\t* generated/sum_r4.c: Regenerated.\n\t* generated/sum_r8.c: Regenerated.\n\nFrom-SVN: r246053", "tree": {"sha": "10b7e42e65eb89c6f795ff465b4c61c7527c4353", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10b7e42e65eb89c6f795ff465b4c61c7527c4353"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/comments", "author": null, "committer": null, "parents": [{"sha": "4ccfdb287ef9e8a62ac09f47b0158b17b1d91190", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ccfdb287ef9e8a62ac09f47b0158b17b1d91190", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ccfdb287ef9e8a62ac09f47b0158b17b1d91190"}], "stats": {"total": 1659, "additions": 929, "deletions": 730}, "files": [{"sha": "bd2f726670d0bbd1dd563a1c21bb7eb762ce4110", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 199, "deletions": 0, "changes": 199, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -1,3 +1,202 @@\n+2017-03-10  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/79956\n+\t* m4/iforeach.m4:  Change exit condition from loop for\n+\tincreasing dimension to >=.  Fix type in comment.\n+\t* m4/ifunction.m4:  Likewise.\n+\t* m4/ifunction_logical.m4: Likewise.\n+\t* generated/all_l1.c: Regenerated.\n+\t* generated/all_l16.c: Regenerated.\n+\t* generated/all_l2.c: Regenerated.\n+\t* generated/all_l4.c: Regenerated.\n+\t* generated/all_l8.c: Regenerated.\n+\t* generated/any_l1.c: Regenerated.\n+\t* generated/any_l16.c: Regenerated.\n+\t* generated/any_l2.c: Regenerated.\n+\t* generated/any_l4.c: Regenerated.\n+\t* generated/any_l8.c: Regenerated.\n+\t* generated/count_16_l.c: Regenerated.\n+\t* generated/count_1_l.c: Regenerated.\n+\t* generated/count_2_l.c: Regenerated.\n+\t* generated/count_4_l.c: Regenerated.\n+\t* generated/count_8_l.c: Regenerated.\n+\t* generated/iall_i1.c: Regenerated.\n+\t* generated/iall_i16.c: Regenerated.\n+\t* generated/iall_i2.c: Regenerated.\n+\t* generated/iall_i4.c: Regenerated.\n+\t* generated/iall_i8.c: Regenerated.\n+\t* generated/iany_i1.c: Regenerated.\n+\t* generated/iany_i16.c: Regenerated.\n+\t* generated/iany_i2.c: Regenerated.\n+\t* generated/iany_i4.c: Regenerated.\n+\t* generated/iany_i8.c: Regenerated.\n+\t* generated/iparity_i1.c: Regenerated.\n+\t* generated/iparity_i16.c: Regenerated.\n+\t* generated/iparity_i2.c: Regenerated.\n+\t* generated/iparity_i4.c: Regenerated.\n+\t* generated/iparity_i8.c: Regenerated.\n+\t* generated/maxloc0_16_i1.c: Regenerated.\n+\t* generated/maxloc0_16_i16.c: Regenerated.\n+\t* generated/maxloc0_16_i2.c: Regenerated.\n+\t* generated/maxloc0_16_i4.c: Regenerated.\n+\t* generated/maxloc0_16_i8.c: Regenerated.\n+\t* generated/maxloc0_16_r10.c: Regenerated.\n+\t* generated/maxloc0_16_r16.c: Regenerated.\n+\t* generated/maxloc0_16_r4.c: Regenerated.\n+\t* generated/maxloc0_16_r8.c: Regenerated.\n+\t* generated/maxloc0_4_i1.c: Regenerated.\n+\t* generated/maxloc0_4_i16.c: Regenerated.\n+\t* generated/maxloc0_4_i2.c: Regenerated.\n+\t* generated/maxloc0_4_i4.c: Regenerated.\n+\t* generated/maxloc0_4_i8.c: Regenerated.\n+\t* generated/maxloc0_4_r10.c: Regenerated.\n+\t* generated/maxloc0_4_r16.c: Regenerated.\n+\t* generated/maxloc0_4_r4.c: Regenerated.\n+\t* generated/maxloc0_4_r8.c: Regenerated.\n+\t* generated/maxloc0_8_i1.c: Regenerated.\n+\t* generated/maxloc0_8_i16.c: Regenerated.\n+\t* generated/maxloc0_8_i2.c: Regenerated.\n+\t* generated/maxloc0_8_i4.c: Regenerated.\n+\t* generated/maxloc0_8_i8.c: Regenerated.\n+\t* generated/maxloc0_8_r10.c: Regenerated.\n+\t* generated/maxloc0_8_r16.c: Regenerated.\n+\t* generated/maxloc0_8_r4.c: Regenerated.\n+\t* generated/maxloc0_8_r8.c: Regenerated.\n+\t* generated/maxloc1_16_i1.c: Regenerated.\n+\t* generated/maxloc1_16_i16.c: Regenerated.\n+\t* generated/maxloc1_16_i2.c: Regenerated.\n+\t* generated/maxloc1_16_i4.c: Regenerated.\n+\t* generated/maxloc1_16_i8.c: Regenerated.\n+\t* generated/maxloc1_16_r10.c: Regenerated.\n+\t* generated/maxloc1_16_r16.c: Regenerated.\n+\t* generated/maxloc1_16_r4.c: Regenerated.\n+\t* generated/maxloc1_16_r8.c: Regenerated.\n+\t* generated/maxloc1_4_i1.c: Regenerated.\n+\t* generated/maxloc1_4_i16.c: Regenerated.\n+\t* generated/maxloc1_4_i2.c: Regenerated.\n+\t* generated/maxloc1_4_i4.c: Regenerated.\n+\t* generated/maxloc1_4_i8.c: Regenerated.\n+\t* generated/maxloc1_4_r10.c: Regenerated.\n+\t* generated/maxloc1_4_r16.c: Regenerated.\n+\t* generated/maxloc1_4_r4.c: Regenerated.\n+\t* generated/maxloc1_4_r8.c: Regenerated.\n+\t* generated/maxloc1_8_i1.c: Regenerated.\n+\t* generated/maxloc1_8_i16.c: Regenerated.\n+\t* generated/maxloc1_8_i2.c: Regenerated.\n+\t* generated/maxloc1_8_i4.c: Regenerated.\n+\t* generated/maxloc1_8_i8.c: Regenerated.\n+\t* generated/maxloc1_8_r10.c: Regenerated.\n+\t* generated/maxloc1_8_r16.c: Regenerated.\n+\t* generated/maxloc1_8_r4.c: Regenerated.\n+\t* generated/maxloc1_8_r8.c: Regenerated.\n+\t* generated/maxval_i1.c: Regenerated.\n+\t* generated/maxval_i16.c: Regenerated.\n+\t* generated/maxval_i2.c: Regenerated.\n+\t* generated/maxval_i4.c: Regenerated.\n+\t* generated/maxval_i8.c: Regenerated.\n+\t* generated/maxval_r10.c: Regenerated.\n+\t* generated/maxval_r16.c: Regenerated.\n+\t* generated/maxval_r4.c: Regenerated.\n+\t* generated/maxval_r8.c: Regenerated.\n+\t* generated/minloc0_16_i1.c: Regenerated.\n+\t* generated/minloc0_16_i16.c: Regenerated.\n+\t* generated/minloc0_16_i2.c: Regenerated.\n+\t* generated/minloc0_16_i4.c: Regenerated.\n+\t* generated/minloc0_16_i8.c: Regenerated.\n+\t* generated/minloc0_16_r10.c: Regenerated.\n+\t* generated/minloc0_16_r16.c: Regenerated.\n+\t* generated/minloc0_16_r4.c: Regenerated.\n+\t* generated/minloc0_16_r8.c: Regenerated.\n+\t* generated/minloc0_4_i1.c: Regenerated.\n+\t* generated/minloc0_4_i16.c: Regenerated.\n+\t* generated/minloc0_4_i2.c: Regenerated.\n+\t* generated/minloc0_4_i4.c: Regenerated.\n+\t* generated/minloc0_4_i8.c: Regenerated.\n+\t* generated/minloc0_4_r10.c: Regenerated.\n+\t* generated/minloc0_4_r16.c: Regenerated.\n+\t* generated/minloc0_4_r4.c: Regenerated.\n+\t* generated/minloc0_4_r8.c: Regenerated.\n+\t* generated/minloc0_8_i1.c: Regenerated.\n+\t* generated/minloc0_8_i16.c: Regenerated.\n+\t* generated/minloc0_8_i2.c: Regenerated.\n+\t* generated/minloc0_8_i4.c: Regenerated.\n+\t* generated/minloc0_8_i8.c: Regenerated.\n+\t* generated/minloc0_8_r10.c: Regenerated.\n+\t* generated/minloc0_8_r16.c: Regenerated.\n+\t* generated/minloc0_8_r4.c: Regenerated.\n+\t* generated/minloc0_8_r8.c: Regenerated.\n+\t* generated/minloc1_16_i1.c: Regenerated.\n+\t* generated/minloc1_16_i16.c: Regenerated.\n+\t* generated/minloc1_16_i2.c: Regenerated.\n+\t* generated/minloc1_16_i4.c: Regenerated.\n+\t* generated/minloc1_16_i8.c: Regenerated.\n+\t* generated/minloc1_16_r10.c: Regenerated.\n+\t* generated/minloc1_16_r16.c: Regenerated.\n+\t* generated/minloc1_16_r4.c: Regenerated.\n+\t* generated/minloc1_16_r8.c: Regenerated.\n+\t* generated/minloc1_4_i1.c: Regenerated.\n+\t* generated/minloc1_4_i16.c: Regenerated.\n+\t* generated/minloc1_4_i2.c: Regenerated.\n+\t* generated/minloc1_4_i4.c: Regenerated.\n+\t* generated/minloc1_4_i8.c: Regenerated.\n+\t* generated/minloc1_4_r10.c: Regenerated.\n+\t* generated/minloc1_4_r16.c: Regenerated.\n+\t* generated/minloc1_4_r4.c: Regenerated.\n+\t* generated/minloc1_4_r8.c: Regenerated.\n+\t* generated/minloc1_8_i1.c: Regenerated.\n+\t* generated/minloc1_8_i16.c: Regenerated.\n+\t* generated/minloc1_8_i2.c: Regenerated.\n+\t* generated/minloc1_8_i4.c: Regenerated.\n+\t* generated/minloc1_8_i8.c: Regenerated.\n+\t* generated/minloc1_8_r10.c: Regenerated.\n+\t* generated/minloc1_8_r16.c: Regenerated.\n+\t* generated/minloc1_8_r4.c: Regenerated.\n+\t* generated/minloc1_8_r8.c: Regenerated.\n+\t* generated/minval_i1.c: Regenerated.\n+\t* generated/minval_i16.c: Regenerated.\n+\t* generated/minval_i2.c: Regenerated.\n+\t* generated/minval_i4.c: Regenerated.\n+\t* generated/minval_i8.c: Regenerated.\n+\t* generated/minval_r10.c: Regenerated.\n+\t* generated/minval_r16.c: Regenerated.\n+\t* generated/minval_r4.c: Regenerated.\n+\t* generated/minval_r8.c: Regenerated.\n+\t* generated/norm2_r10.c: Regenerated.\n+\t* generated/norm2_r16.c: Regenerated.\n+\t* generated/norm2_r4.c: Regenerated.\n+\t* generated/norm2_r8.c: Regenerated.\n+\t* generated/parity_l1.c: Regenerated.\n+\t* generated/parity_l16.c: Regenerated.\n+\t* generated/parity_l2.c: Regenerated.\n+\t* generated/parity_l4.c: Regenerated.\n+\t* generated/parity_l8.c: Regenerated.\n+\t* generated/product_c10.c: Regenerated.\n+\t* generated/product_c16.c: Regenerated.\n+\t* generated/product_c4.c: Regenerated.\n+\t* generated/product_c8.c: Regenerated.\n+\t* generated/product_i1.c: Regenerated.\n+\t* generated/product_i16.c: Regenerated.\n+\t* generated/product_i2.c: Regenerated.\n+\t* generated/product_i4.c: Regenerated.\n+\t* generated/product_i8.c: Regenerated.\n+\t* generated/product_r10.c: Regenerated.\n+\t* generated/product_r16.c: Regenerated.\n+\t* generated/product_r4.c: Regenerated.\n+\t* generated/product_r8.c: Regenerated.\n+\t* generated/sum_c10.c: Regenerated.\n+\t* generated/sum_c16.c: Regenerated.\n+\t* generated/sum_c4.c: Regenerated.\n+\t* generated/sum_c8.c: Regenerated.\n+\t* generated/sum_i1.c: Regenerated.\n+\t* generated/sum_i16.c: Regenerated.\n+\t* generated/sum_i2.c: Regenerated.\n+\t* generated/sum_i4.c: Regenerated.\n+\t* generated/sum_i8.c: Regenerated.\n+\t* generated/sum_r10.c: Regenerated.\n+\t* generated/sum_r16.c: Regenerated.\n+\t* generated/sum_r4.c: Regenerated.\n+\t* generated/sum_r8.c: Regenerated.\n+\n 2017-03-05  Andre Vehreschild  <vehre@gcc.gnu.org>\n             Alessandro Fanfarillo  <fanfarillo.gcc@gmail.com>\n "}, {"sha": "46168ebac8331de81c84a544b4c39c078cb9e3d2", "filename": "libgfortran/generated/all_l1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fall_l1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fall_l1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l1.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -199,9 +199,9 @@ all_l1 (gfc_array_l1 * const restrict retarray,\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n-          if (n == rank)\n+          if (n >= rank)\n             {\n-              /* Break out of the look.  */\n+              /* Break out of the loop.  */\n               continue_loop = 0;\n               break;\n             }"}, {"sha": "2fa957829f47d2205cfe86e196407a47ea31bf3d", "filename": "libgfortran/generated/all_l16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fall_l16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fall_l16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -199,9 +199,9 @@ all_l16 (gfc_array_l16 * const restrict retarray,\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n-          if (n == rank)\n+          if (n >= rank)\n             {\n-              /* Break out of the look.  */\n+              /* Break out of the loop.  */\n               continue_loop = 0;\n               break;\n             }"}, {"sha": "5b08556ec5f8c80dfba1165c50a5ab7f90adc388", "filename": "libgfortran/generated/all_l2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fall_l2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fall_l2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l2.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -199,9 +199,9 @@ all_l2 (gfc_array_l2 * const restrict retarray,\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n-          if (n == rank)\n+          if (n >= rank)\n             {\n-              /* Break out of the look.  */\n+              /* Break out of the loop.  */\n               continue_loop = 0;\n               break;\n             }"}, {"sha": "b57374270b51a17b250363935fc447e5efa183e9", "filename": "libgfortran/generated/all_l4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fall_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fall_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -199,9 +199,9 @@ all_l4 (gfc_array_l4 * const restrict retarray,\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n-          if (n == rank)\n+          if (n >= rank)\n             {\n-              /* Break out of the look.  */\n+              /* Break out of the loop.  */\n               continue_loop = 0;\n               break;\n             }"}, {"sha": "dfac0e3c27afe33d35df0501635c31f66c4ef656", "filename": "libgfortran/generated/all_l8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fall_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fall_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -199,9 +199,9 @@ all_l8 (gfc_array_l8 * const restrict retarray,\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n-          if (n == rank)\n+          if (n >= rank)\n             {\n-              /* Break out of the look.  */\n+              /* Break out of the loop.  */\n               continue_loop = 0;\n               break;\n             }"}, {"sha": "e2bf26c4e6a5a16d3a6a2bfb6dcc4ecb6acc7ee9", "filename": "libgfortran/generated/any_l1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fany_l1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fany_l1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l1.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -199,9 +199,9 @@ any_l1 (gfc_array_l1 * const restrict retarray,\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n-          if (n == rank)\n+          if (n >= rank)\n             {\n-              /* Break out of the look.  */\n+              /* Break out of the loop.  */\n               continue_loop = 0;\n               break;\n             }"}, {"sha": "5b2987dbaba00a2ac814df014870a96a5bca125a", "filename": "libgfortran/generated/any_l16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fany_l16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fany_l16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -199,9 +199,9 @@ any_l16 (gfc_array_l16 * const restrict retarray,\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n-          if (n == rank)\n+          if (n >= rank)\n             {\n-              /* Break out of the look.  */\n+              /* Break out of the loop.  */\n               continue_loop = 0;\n               break;\n             }"}, {"sha": "6e28643eace4332c3deb9283df2923dead6db782", "filename": "libgfortran/generated/any_l2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fany_l2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fany_l2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l2.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -199,9 +199,9 @@ any_l2 (gfc_array_l2 * const restrict retarray,\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n-          if (n == rank)\n+          if (n >= rank)\n             {\n-              /* Break out of the look.  */\n+              /* Break out of the loop.  */\n               continue_loop = 0;\n               break;\n             }"}, {"sha": "7d2fcd06814584ff48fb1473c99ac60f79cd0846", "filename": "libgfortran/generated/any_l4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fany_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fany_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -199,9 +199,9 @@ any_l4 (gfc_array_l4 * const restrict retarray,\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n-          if (n == rank)\n+          if (n >= rank)\n             {\n-              /* Break out of the look.  */\n+              /* Break out of the loop.  */\n               continue_loop = 0;\n               break;\n             }"}, {"sha": "c72d12fb07c3ee56e741a6a1e3062c3934aa3d3d", "filename": "libgfortran/generated/any_l8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fany_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fany_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -199,9 +199,9 @@ any_l8 (gfc_array_l8 * const restrict retarray,\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n-          if (n == rank)\n+          if (n >= rank)\n             {\n-              /* Break out of the look.  */\n+              /* Break out of the loop.  */\n               continue_loop = 0;\n               break;\n             }"}, {"sha": "28ae1611db0342ab370b5ba4190e8297c0a2e174", "filename": "libgfortran/generated/count_16_l.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fcount_16_l.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fcount_16_l.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_16_l.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -195,9 +195,9 @@ count_16_l (gfc_array_i16 * const restrict retarray,\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n-          if (n == rank)\n+          if (n >= rank)\n             {\n-              /* Break out of the look.  */\n+              /* Break out of the loop.  */\n               continue_loop = 0;\n               break;\n             }"}, {"sha": "8b1892c0faa4802a728c78f76065e606a596f1f8", "filename": "libgfortran/generated/count_1_l.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fcount_1_l.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fcount_1_l.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_1_l.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -195,9 +195,9 @@ count_1_l (gfc_array_i1 * const restrict retarray,\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n-          if (n == rank)\n+          if (n >= rank)\n             {\n-              /* Break out of the look.  */\n+              /* Break out of the loop.  */\n               continue_loop = 0;\n               break;\n             }"}, {"sha": "8132c2ed757108e8d2e5f07449a51e2091ad0af7", "filename": "libgfortran/generated/count_2_l.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fcount_2_l.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fcount_2_l.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_2_l.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -195,9 +195,9 @@ count_2_l (gfc_array_i2 * const restrict retarray,\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n-          if (n == rank)\n+          if (n >= rank)\n             {\n-              /* Break out of the look.  */\n+              /* Break out of the loop.  */\n               continue_loop = 0;\n               break;\n             }"}, {"sha": "f90ba357d8e3cba6c62657efcdcc670030946ba9", "filename": "libgfortran/generated/count_4_l.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fcount_4_l.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fcount_4_l.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_4_l.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -195,9 +195,9 @@ count_4_l (gfc_array_i4 * const restrict retarray,\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n-          if (n == rank)\n+          if (n >= rank)\n             {\n-              /* Break out of the look.  */\n+              /* Break out of the loop.  */\n               continue_loop = 0;\n               break;\n             }"}, {"sha": "efce9e480621955940dded6a0c8e375c90c9a6f6", "filename": "libgfortran/generated/count_8_l.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fcount_8_l.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fcount_8_l.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_8_l.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -195,9 +195,9 @@ count_8_l (gfc_array_i8 * const restrict retarray,\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n-          if (n == rank)\n+          if (n >= rank)\n             {\n-              /* Break out of the look.  */\n+              /* Break out of the loop.  */\n               continue_loop = 0;\n               break;\n             }"}, {"sha": "619c833c33b36c8d12b9f793c0586f79e1e4c8e1", "filename": "libgfortran/generated/iall_i1.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fiall_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fiall_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fiall_i1.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ iall_i1 (gfc_array_i1 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ miall_i1 (gfc_array_i1 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ siall_i1 (gfc_array_i1 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "4d37d9c80bf15d796c540ade9c5dc9127bf56372", "filename": "libgfortran/generated/iall_i16.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fiall_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fiall_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fiall_i16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ iall_i16 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ miall_i16 (gfc_array_i16 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ siall_i16 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "283ceffb2c95c7ac258f689f406e2da7614cf94c", "filename": "libgfortran/generated/iall_i2.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fiall_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fiall_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fiall_i2.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ iall_i2 (gfc_array_i2 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ miall_i2 (gfc_array_i2 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ siall_i2 (gfc_array_i2 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "ef0ac58d3b956957b69bb8a083b019d3b1181bb4", "filename": "libgfortran/generated/iall_i4.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fiall_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fiall_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fiall_i4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ iall_i4 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ miall_i4 (gfc_array_i4 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ siall_i4 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "ef780b01c71cab1ff70812daaa57b2084d26932c", "filename": "libgfortran/generated/iall_i8.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fiall_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fiall_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fiall_i8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ iall_i8 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ miall_i8 (gfc_array_i8 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ siall_i8 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "b60d4f2d383459c4e13ba7cc9d7a97046211d40e", "filename": "libgfortran/generated/iany_i1.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fiany_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fiany_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fiany_i1.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ iany_i1 (gfc_array_i1 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ miany_i1 (gfc_array_i1 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ siany_i1 (gfc_array_i1 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "f8fb40acd1cb04eb782383658cac902015be274d", "filename": "libgfortran/generated/iany_i16.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fiany_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fiany_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fiany_i16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ iany_i16 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ miany_i16 (gfc_array_i16 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ siany_i16 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "ef931b35a5798caac8fda4ad469b6499d1185a87", "filename": "libgfortran/generated/iany_i2.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fiany_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fiany_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fiany_i2.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ iany_i2 (gfc_array_i2 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ miany_i2 (gfc_array_i2 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ siany_i2 (gfc_array_i2 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "d0ecaef23d01b493c3c66a1ed0bf38bd31b1adbc", "filename": "libgfortran/generated/iany_i4.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fiany_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fiany_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fiany_i4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ iany_i4 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ miany_i4 (gfc_array_i4 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ siany_i4 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "c963165cf184ff09eaf2003a7d3ddc0a16a0cabb", "filename": "libgfortran/generated/iany_i8.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fiany_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fiany_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fiany_i8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ iany_i8 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ miany_i8 (gfc_array_i8 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ siany_i8 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "18e9fc24be135077506b6850bb50896f527d9ea5", "filename": "libgfortran/generated/iparity_i1.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fiparity_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fiparity_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fiparity_i1.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ iparity_i1 (gfc_array_i1 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ miparity_i1 (gfc_array_i1 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ siparity_i1 (gfc_array_i1 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "5b8ea697483385a00be60d7348b255fa87fe8c68", "filename": "libgfortran/generated/iparity_i16.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fiparity_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fiparity_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fiparity_i16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ iparity_i16 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ miparity_i16 (gfc_array_i16 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ siparity_i16 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "0076667cabace18f9081f1a183a8b4d634037fea", "filename": "libgfortran/generated/iparity_i2.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fiparity_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fiparity_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fiparity_i2.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ iparity_i2 (gfc_array_i2 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ miparity_i2 (gfc_array_i2 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ siparity_i2 (gfc_array_i2 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "20798423f5c8e012a9a1225ae2b555a3abc771cf", "filename": "libgfortran/generated/iparity_i4.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fiparity_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fiparity_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fiparity_i4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ iparity_i4 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ miparity_i4 (gfc_array_i4 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ siparity_i4 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "60e390e99b76883332ca1c96a665197cfaa27865", "filename": "libgfortran/generated/iparity_i8.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fiparity_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fiparity_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fiparity_i8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ iparity_i8 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ miparity_i8 (gfc_array_i8 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ siparity_i8 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "5fd888707a5c206c8dfa2479ee27693e9d2348cf", "filename": "libgfortran/generated/maxloc0_16_i1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_16_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_16_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_i1.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ maxloc0_16_i1 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mmaxloc0_16_i1 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "2a4d5d1c9a3e0cd1f58c96cfc23194e89977559b", "filename": "libgfortran/generated/maxloc0_16_i16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_16_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_16_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_i16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ maxloc0_16_i16 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mmaxloc0_16_i16 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "43e7065673131e72ef8f4e44fbd04ef7954b0411", "filename": "libgfortran/generated/maxloc0_16_i2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_16_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_16_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_i2.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ maxloc0_16_i2 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mmaxloc0_16_i2 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "d7e539db540b41f57d156bde400e31e9ca772158", "filename": "libgfortran/generated/maxloc0_16_i4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_16_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_16_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_i4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ maxloc0_16_i4 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mmaxloc0_16_i4 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "72afd48cb9f81321b5e7bbd4c67be064427e9325", "filename": "libgfortran/generated/maxloc0_16_i8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_16_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_16_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_i8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ maxloc0_16_i8 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mmaxloc0_16_i8 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "670239b57dbfec4b249170445308d930d966d6cc", "filename": "libgfortran/generated/maxloc0_16_r10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_16_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_16_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_r10.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ maxloc0_16_r10 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mmaxloc0_16_r10 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "aa98e7d85d26ae14215547560d7dc744fb729a51", "filename": "libgfortran/generated/maxloc0_16_r16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_16_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_16_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_r16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ maxloc0_16_r16 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mmaxloc0_16_r16 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "006d593c08b7f8eef44510d83d77823537c2a2bb", "filename": "libgfortran/generated/maxloc0_16_r4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_16_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_16_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_r4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ maxloc0_16_r4 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mmaxloc0_16_r4 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "a8d44d5cd8567dd567565ad04aa605e5e36ae280", "filename": "libgfortran/generated/maxloc0_16_r8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_16_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_16_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_r8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ maxloc0_16_r8 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mmaxloc0_16_r8 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "32caa2d0db7bd3e37cecafa17c486769a5af23ab", "filename": "libgfortran/generated/maxloc0_4_i1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_4_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_4_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_i1.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ maxloc0_4_i1 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mmaxloc0_4_i1 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "fb05f9c0b5467057c8c436fd4358258974f36fb4", "filename": "libgfortran/generated/maxloc0_4_i16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_4_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_4_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_i16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ maxloc0_4_i16 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mmaxloc0_4_i16 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "84520a99231c4af2db8a2cf1d98068f6319acfa2", "filename": "libgfortran/generated/maxloc0_4_i2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_4_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_4_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_i2.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ maxloc0_4_i2 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mmaxloc0_4_i2 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "9d2e007a8189bb24dd61a5868b13f1360fb11636", "filename": "libgfortran/generated/maxloc0_4_i4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_i4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ maxloc0_4_i4 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mmaxloc0_4_i4 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "a2366733fad16fb9ce0fb58018f662dbd450748f", "filename": "libgfortran/generated/maxloc0_4_i8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_i8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ maxloc0_4_i8 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mmaxloc0_4_i8 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "c1953ab1c0f2a99750696c7e5a6d6a2e7d39d1bb", "filename": "libgfortran/generated/maxloc0_4_r10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_4_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_4_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_r10.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ maxloc0_4_r10 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mmaxloc0_4_r10 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "d0221d7611e4c1b171d2eabc0888c94270ddffd4", "filename": "libgfortran/generated/maxloc0_4_r16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_4_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_4_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_r16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ maxloc0_4_r16 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mmaxloc0_4_r16 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "9f3931a1bf71c90954d413bd22ab8c76dbe2f2ee", "filename": "libgfortran/generated/maxloc0_4_r4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_r4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ maxloc0_4_r4 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mmaxloc0_4_r4 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "dff5190e5a36aac46143b60a1f157b0f69d7d176", "filename": "libgfortran/generated/maxloc0_4_r8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_r8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ maxloc0_4_r8 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mmaxloc0_4_r8 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "d5a66288f4825974af6ead53e4586778f196ae6f", "filename": "libgfortran/generated/maxloc0_8_i1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_8_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_8_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_i1.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ maxloc0_8_i1 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mmaxloc0_8_i1 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "ce2ad4910b602e8a81e480d6ffaee81e1e8aa50d", "filename": "libgfortran/generated/maxloc0_8_i16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_8_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_8_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_i16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ maxloc0_8_i16 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mmaxloc0_8_i16 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "f9c9732886f6840243a9a51f2e1892d190d72011", "filename": "libgfortran/generated/maxloc0_8_i2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_8_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_8_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_i2.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ maxloc0_8_i2 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mmaxloc0_8_i2 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "cc9d94cf3114a95f5691339902b7c7afa6a28b4d", "filename": "libgfortran/generated/maxloc0_8_i4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_i4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ maxloc0_8_i4 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mmaxloc0_8_i4 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "c61fbedb8e2f5dbf0810f12949adf4640eb5dc3e", "filename": "libgfortran/generated/maxloc0_8_i8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_i8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ maxloc0_8_i8 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mmaxloc0_8_i8 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "07acd2540581c0968758d41cef52adce183a8e7f", "filename": "libgfortran/generated/maxloc0_8_r10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_8_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_8_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_r10.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ maxloc0_8_r10 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mmaxloc0_8_r10 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "5b98163b048cd42a2d0c0ef50a7b34a9b58f092a", "filename": "libgfortran/generated/maxloc0_8_r16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_8_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_8_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_r16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ maxloc0_8_r16 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mmaxloc0_8_r16 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "0caccea262a100b2b3069abbb987248664de1975", "filename": "libgfortran/generated/maxloc0_8_r4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_r4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ maxloc0_8_r4 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mmaxloc0_8_r4 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "4e51b65e526d67520c5b5b5d4df6030d8ec962af", "filename": "libgfortran/generated/maxloc0_8_r8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc0_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_r8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ maxloc0_8_r8 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mmaxloc0_8_r8 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "48f2fc01e5981f2468f7b9954d806b3623db21a7", "filename": "libgfortran/generated/maxloc1_16_i1.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_16_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_16_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_i1.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ maxloc1_16_i1 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mmaxloc1_16_i1 (gfc_array_i16 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ smaxloc1_16_i1 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "6c154fb84e73257503eb1f760e51d9a8beb19bf1", "filename": "libgfortran/generated/maxloc1_16_i16.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_16_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_16_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_i16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ maxloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mmaxloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ smaxloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "029e061e43c69de36155c821464b70b91db1d660", "filename": "libgfortran/generated/maxloc1_16_i2.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_16_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_16_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_i2.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ maxloc1_16_i2 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mmaxloc1_16_i2 (gfc_array_i16 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ smaxloc1_16_i2 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "aceb7aeb69b3bd289c690db8e10fa3318b99f33a", "filename": "libgfortran/generated/maxloc1_16_i4.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_16_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_16_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_i4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ maxloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mmaxloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ smaxloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "000a0cf599ce71a6f5c0b61ad51457272ee9d7f7", "filename": "libgfortran/generated/maxloc1_16_i8.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_16_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_16_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_i8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ maxloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mmaxloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ smaxloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "53378d958e298496f5936ae2e2d01389ba6eab84", "filename": "libgfortran/generated/maxloc1_16_r10.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_16_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_16_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_r10.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ maxloc1_16_r10 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mmaxloc1_16_r10 (gfc_array_i16 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ smaxloc1_16_r10 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "4bdc4d66b893d2ae51c06c7ea743c47962091dda", "filename": "libgfortran/generated/maxloc1_16_r16.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_16_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_16_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_r16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ maxloc1_16_r16 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mmaxloc1_16_r16 (gfc_array_i16 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ smaxloc1_16_r16 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "36d79e23ce3a0a1e0093ab92b356effb8062a07a", "filename": "libgfortran/generated/maxloc1_16_r4.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_16_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_16_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_r4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ maxloc1_16_r4 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mmaxloc1_16_r4 (gfc_array_i16 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ smaxloc1_16_r4 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "3993f77619bd861947015f728d2a9d4e1c2f2afd", "filename": "libgfortran/generated/maxloc1_16_r8.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_16_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_16_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_r8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ maxloc1_16_r8 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mmaxloc1_16_r8 (gfc_array_i16 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ smaxloc1_16_r8 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "05d2af4be3e1184f16439f7a8f96217669617679", "filename": "libgfortran/generated/maxloc1_4_i1.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_4_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_4_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i1.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ maxloc1_4_i1 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mmaxloc1_4_i1 (gfc_array_i4 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ smaxloc1_4_i1 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "67e8a9ca2c7e5a8be83d45ba091e9ede5943aac5", "filename": "libgfortran/generated/maxloc1_4_i16.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_4_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_4_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ maxloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mmaxloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ smaxloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "60ceaa698f4ec1d0cf4f1c814ea982ffd59eb434", "filename": "libgfortran/generated/maxloc1_4_i2.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_4_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_4_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i2.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ maxloc1_4_i2 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mmaxloc1_4_i2 (gfc_array_i4 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ smaxloc1_4_i2 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "d2f30b7246a03342dcb7a57c3c9edbad4774b283", "filename": "libgfortran/generated/maxloc1_4_i4.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ maxloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mmaxloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ smaxloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "13a7dc6d34c7c371a51c7fb555b64c0a83adcd5b", "filename": "libgfortran/generated/maxloc1_4_i8.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ maxloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mmaxloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ smaxloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "204229293c4c96e18ba9eb1eae5dfe4117ea0415", "filename": "libgfortran/generated/maxloc1_4_r10.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_4_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_4_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_r10.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ maxloc1_4_r10 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mmaxloc1_4_r10 (gfc_array_i4 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ smaxloc1_4_r10 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "95076481c1041fd2b6c6560de8fc96a408ad3237", "filename": "libgfortran/generated/maxloc1_4_r16.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_4_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_4_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_r16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ maxloc1_4_r16 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mmaxloc1_4_r16 (gfc_array_i4 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ smaxloc1_4_r16 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "87c6ca5eb4024c887996a91c828587d3ab0a4f66", "filename": "libgfortran/generated/maxloc1_4_r4.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_r4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ maxloc1_4_r4 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mmaxloc1_4_r4 (gfc_array_i4 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ smaxloc1_4_r4 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "a13986a1fa859d2bb336a5df9a8cd5251f2b06b9", "filename": "libgfortran/generated/maxloc1_4_r8.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_r8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ maxloc1_4_r8 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mmaxloc1_4_r8 (gfc_array_i4 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ smaxloc1_4_r8 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "71a5d97efe4fd17da4a1e946d214a9d01d4cc3ba", "filename": "libgfortran/generated/maxloc1_8_i1.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_8_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_8_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i1.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ maxloc1_8_i1 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mmaxloc1_8_i1 (gfc_array_i8 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ smaxloc1_8_i1 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "92cf55c4e2ce8e56995add74fd8239eebe5d73df", "filename": "libgfortran/generated/maxloc1_8_i16.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_8_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_8_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ maxloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mmaxloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ smaxloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "fd1063c5df170025e9d6d2ae26e2441e0f62491a", "filename": "libgfortran/generated/maxloc1_8_i2.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_8_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_8_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i2.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ maxloc1_8_i2 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mmaxloc1_8_i2 (gfc_array_i8 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ smaxloc1_8_i2 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "db82ae894aec9c477a58d3335450a41080a48293", "filename": "libgfortran/generated/maxloc1_8_i4.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ maxloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mmaxloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ smaxloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "43b4af1479263cf79dd1dbc154c2b56c7d36cdd0", "filename": "libgfortran/generated/maxloc1_8_i8.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ maxloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mmaxloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ smaxloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "9ba6cb950e4109a739871ed1882e47b3784f9fd9", "filename": "libgfortran/generated/maxloc1_8_r10.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_8_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_8_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_r10.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ maxloc1_8_r10 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mmaxloc1_8_r10 (gfc_array_i8 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ smaxloc1_8_r10 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "f7eb1ebf9be14e81d8c15ce9f5aa2eb526ce8b07", "filename": "libgfortran/generated/maxloc1_8_r16.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_8_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_8_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_r16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ maxloc1_8_r16 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mmaxloc1_8_r16 (gfc_array_i8 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ smaxloc1_8_r16 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "67b455bb7356a3db6284dd1ba3b3a123f7ad9935", "filename": "libgfortran/generated/maxloc1_8_r4.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_r4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ maxloc1_8_r4 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mmaxloc1_8_r4 (gfc_array_i8 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ smaxloc1_8_r4 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "bd0913f4feafb78d8cf4a00d083d0ce5005c4c81", "filename": "libgfortran/generated/maxloc1_8_r8.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxloc1_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_r8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ maxloc1_8_r8 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mmaxloc1_8_r8 (gfc_array_i8 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ smaxloc1_8_r8 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "90ddf3503784b0153a954b170aebfe26ec29b92e", "filename": "libgfortran/generated/maxval_i1.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxval_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxval_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_i1.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -181,9 +181,9 @@ maxval_i1 (gfc_array_i1 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -386,9 +386,9 @@ mmaxval_i1 (gfc_array_i1 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -526,7 +526,7 @@ smaxval_i1 (gfc_array_i1 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "6a54739e2909473a9245fc93335c03d16e5933be", "filename": "libgfortran/generated/maxval_i16.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxval_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxval_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_i16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -181,9 +181,9 @@ maxval_i16 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -386,9 +386,9 @@ mmaxval_i16 (gfc_array_i16 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -526,7 +526,7 @@ smaxval_i16 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "3cdb5b9d3eded15291312d4d36d003a0d86badf3", "filename": "libgfortran/generated/maxval_i2.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxval_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxval_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_i2.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -181,9 +181,9 @@ maxval_i2 (gfc_array_i2 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -386,9 +386,9 @@ mmaxval_i2 (gfc_array_i2 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -526,7 +526,7 @@ smaxval_i2 (gfc_array_i2 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "d7ae9951a4ae63a41cd2ca20ab68eed2a619da9f", "filename": "libgfortran/generated/maxval_i4.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxval_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxval_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_i4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -181,9 +181,9 @@ maxval_i4 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -386,9 +386,9 @@ mmaxval_i4 (gfc_array_i4 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -526,7 +526,7 @@ smaxval_i4 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "d622da09b272906a4a1eea2c656b93eaa1c06bd9", "filename": "libgfortran/generated/maxval_i8.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxval_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxval_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_i8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -181,9 +181,9 @@ maxval_i8 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -386,9 +386,9 @@ mmaxval_i8 (gfc_array_i8 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -526,7 +526,7 @@ smaxval_i8 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "9c4c6fbb26cbda1c2b064c3ecb8c7efe2beea20e", "filename": "libgfortran/generated/maxval_r10.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxval_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxval_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_r10.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -181,9 +181,9 @@ maxval_r10 (gfc_array_r10 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -386,9 +386,9 @@ mmaxval_r10 (gfc_array_r10 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -526,7 +526,7 @@ smaxval_r10 (gfc_array_r10 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "f10573233e33bde75eceec70ab294023af9b5307", "filename": "libgfortran/generated/maxval_r16.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxval_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxval_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_r16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -181,9 +181,9 @@ maxval_r16 (gfc_array_r16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -386,9 +386,9 @@ mmaxval_r16 (gfc_array_r16 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -526,7 +526,7 @@ smaxval_r16 (gfc_array_r16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "94d4f335a199fea0ed2146771fd6f0e258242bd8", "filename": "libgfortran/generated/maxval_r4.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxval_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxval_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_r4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -181,9 +181,9 @@ maxval_r4 (gfc_array_r4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -386,9 +386,9 @@ mmaxval_r4 (gfc_array_r4 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -526,7 +526,7 @@ smaxval_r4 (gfc_array_r4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "5ba70b62edb6e9edc1f43d9efacf657caf8c3df3", "filename": "libgfortran/generated/maxval_r8.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxval_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fmaxval_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_r8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -181,9 +181,9 @@ maxval_r8 (gfc_array_r8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -386,9 +386,9 @@ mmaxval_r8 (gfc_array_r8 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -526,7 +526,7 @@ smaxval_r8 (gfc_array_r8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "e458174b2852e90d09df10faca6a6a14ace297e7", "filename": "libgfortran/generated/minloc0_16_i1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_16_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_16_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_i1.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ minloc0_16_i1 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mminloc0_16_i1 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "b15ec83670ed2fa3aa90367a54810bd6e6e1b48c", "filename": "libgfortran/generated/minloc0_16_i16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_16_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_16_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_i16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ minloc0_16_i16 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mminloc0_16_i16 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "b54495280ded2f7cb53f9b8fed3aadce8e3d13dc", "filename": "libgfortran/generated/minloc0_16_i2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_16_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_16_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_i2.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ minloc0_16_i2 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mminloc0_16_i2 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "5fa12c924e4a5b188ee570eb3677aa9af4369a48", "filename": "libgfortran/generated/minloc0_16_i4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_16_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_16_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_i4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ minloc0_16_i4 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mminloc0_16_i4 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "b8aefae9e61130e607a0e2c5d8b6d5b47152bb6c", "filename": "libgfortran/generated/minloc0_16_i8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_16_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_16_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_i8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ minloc0_16_i8 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mminloc0_16_i8 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "801b9e64131247b32d9a970cf7dc79dc66b227c2", "filename": "libgfortran/generated/minloc0_16_r10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_16_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_16_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_r10.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ minloc0_16_r10 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mminloc0_16_r10 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "499292fb213cdcb094604e5f2d80126a3ac14afb", "filename": "libgfortran/generated/minloc0_16_r16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_16_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_16_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_r16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ minloc0_16_r16 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mminloc0_16_r16 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "d4377d45e75092e058b66799c74d100f72b7e8f3", "filename": "libgfortran/generated/minloc0_16_r4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_16_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_16_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_r4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ minloc0_16_r4 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mminloc0_16_r4 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "43e2c7fc0a637509b294059239c8d77664427984", "filename": "libgfortran/generated/minloc0_16_r8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_16_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_16_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_r8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ minloc0_16_r8 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mminloc0_16_r8 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "756c2dc86d15da4a9d8d419ffc48d911b41acef0", "filename": "libgfortran/generated/minloc0_4_i1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_4_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_4_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_i1.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ minloc0_4_i1 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mminloc0_4_i1 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "3e38c724148c071ecad4eccadf2b84eb58681a29", "filename": "libgfortran/generated/minloc0_4_i16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_4_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_4_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_i16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ minloc0_4_i16 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mminloc0_4_i16 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "c8136b66f340645e0fc920d399ff0e2427182e61", "filename": "libgfortran/generated/minloc0_4_i2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_4_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_4_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_i2.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ minloc0_4_i2 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mminloc0_4_i2 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "a0afc1a8b3e5ec3334ca1325119867402a4b2e19", "filename": "libgfortran/generated/minloc0_4_i4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_i4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ minloc0_4_i4 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mminloc0_4_i4 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "21b818f169d8836ef1ba3a00dac809a035beae31", "filename": "libgfortran/generated/minloc0_4_i8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_i8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ minloc0_4_i8 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mminloc0_4_i8 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "6b86186cf040cefe142039e2768d557d4b5725df", "filename": "libgfortran/generated/minloc0_4_r10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_4_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_4_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_r10.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ minloc0_4_r10 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mminloc0_4_r10 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "ca3ca9d02dc4d6440869380f17075a70c70dd683", "filename": "libgfortran/generated/minloc0_4_r16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_4_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_4_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_r16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ minloc0_4_r16 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mminloc0_4_r16 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "f33c455a9a80d6303bb4a16b4ec6f61ba3005b47", "filename": "libgfortran/generated/minloc0_4_r4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_r4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ minloc0_4_r4 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mminloc0_4_r4 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "6658b01b3df95e986b3ba34ddd6f7404998e5c10", "filename": "libgfortran/generated/minloc0_4_r8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_r8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ minloc0_4_r8 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mminloc0_4_r8 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "8f0c48d08045e6c08fe7acec47d2b1dd45ff17f8", "filename": "libgfortran/generated/minloc0_8_i1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_8_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_8_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_i1.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ minloc0_8_i1 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mminloc0_8_i1 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "50f5f861581f0d3d8c348748f6ab5f8e918bb2cc", "filename": "libgfortran/generated/minloc0_8_i16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_8_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_8_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_i16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ minloc0_8_i16 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mminloc0_8_i16 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "936cdf5d8d7771feeca8fe57e1a9ef1f2dc17184", "filename": "libgfortran/generated/minloc0_8_i2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_8_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_8_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_i2.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ minloc0_8_i2 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mminloc0_8_i2 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "d6df3158b95cb42bd116a292f983d7b7553232d8", "filename": "libgfortran/generated/minloc0_8_i4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_i4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ minloc0_8_i4 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mminloc0_8_i4 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "df59e0933c27dba0a99954241385cb45cae5930b", "filename": "libgfortran/generated/minloc0_8_i8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_i8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ minloc0_8_i8 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mminloc0_8_i8 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "b57bc8d260b479c262d16006c6ee97a5b0d3ce47", "filename": "libgfortran/generated/minloc0_8_r10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_8_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_8_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_r10.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ minloc0_8_r10 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mminloc0_8_r10 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "d76b290f870e4f65cd4014b8f57664e6613480c0", "filename": "libgfortran/generated/minloc0_8_r16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_8_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_8_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_r16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ minloc0_8_r16 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mminloc0_8_r16 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "ff3f300f701aa931aa2d1547b1ec48e86cad3c81", "filename": "libgfortran/generated/minloc0_8_r4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_r4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ minloc0_8_r4 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mminloc0_8_r4 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "e13239037da5ac7e12404052ceadb0451df00202", "filename": "libgfortran/generated/minloc0_8_r8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc0_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_r8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -148,7 +148,7 @@ minloc0_8_r8 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -315,7 +315,7 @@ mminloc0_8_r8 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "bf6be092e8583fe8bba7a287999d9fe3eb996b23", "filename": "libgfortran/generated/minloc1_16_i1.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_16_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_16_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_i1.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ minloc1_16_i1 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mminloc1_16_i1 (gfc_array_i16 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ sminloc1_16_i1 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "e4d9dab0b7ff69b9025831fb9750abce0ab36a14", "filename": "libgfortran/generated/minloc1_16_i16.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_16_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_16_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_i16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ minloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mminloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ sminloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "450142f7a82d3918912181d771974fa50bad04a9", "filename": "libgfortran/generated/minloc1_16_i2.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_16_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_16_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_i2.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ minloc1_16_i2 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mminloc1_16_i2 (gfc_array_i16 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ sminloc1_16_i2 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "e1ca90f803b07485973b40e42b71a4f2ce3be98b", "filename": "libgfortran/generated/minloc1_16_i4.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_16_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_16_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_i4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ minloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mminloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ sminloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "b5212041d7305516ab03f29aca9da00bb3e3fb55", "filename": "libgfortran/generated/minloc1_16_i8.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_16_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_16_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_i8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ minloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mminloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ sminloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "880bb7e2986dcfc0955a0bb0c622ae751c51aadb", "filename": "libgfortran/generated/minloc1_16_r10.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_16_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_16_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_r10.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ minloc1_16_r10 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mminloc1_16_r10 (gfc_array_i16 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ sminloc1_16_r10 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "4343508d4a091d6ca34a8c59d8d640e587e3d7f4", "filename": "libgfortran/generated/minloc1_16_r16.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_16_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_16_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_r16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ minloc1_16_r16 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mminloc1_16_r16 (gfc_array_i16 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ sminloc1_16_r16 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "b2fb09c92e9d6bcf450d1df82ed85137846141cf", "filename": "libgfortran/generated/minloc1_16_r4.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_16_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_16_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_r4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ minloc1_16_r4 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mminloc1_16_r4 (gfc_array_i16 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ sminloc1_16_r4 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "f62cf33715309d575da94cb9ba1320bc252c840d", "filename": "libgfortran/generated/minloc1_16_r8.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_16_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_16_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_r8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ minloc1_16_r8 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mminloc1_16_r8 (gfc_array_i16 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ sminloc1_16_r8 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "5bf2dbacdc4c64210bae53531a8bfc08a955d8e6", "filename": "libgfortran/generated/minloc1_4_i1.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_4_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_4_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_i1.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ minloc1_4_i1 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mminloc1_4_i1 (gfc_array_i4 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ sminloc1_4_i1 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "c8925879e9c58ace4a2a1c1cecef53d3c3a69ea3", "filename": "libgfortran/generated/minloc1_4_i16.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_4_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_4_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_i16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ minloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mminloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ sminloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "42d5afaf3d2cc89416b46b78fe7c845c66e0d040", "filename": "libgfortran/generated/minloc1_4_i2.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_4_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_4_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_i2.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ minloc1_4_i2 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mminloc1_4_i2 (gfc_array_i4 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ sminloc1_4_i2 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "456ea792b3ff935129e6c8ab805b5a25ecb8ca58", "filename": "libgfortran/generated/minloc1_4_i4.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_i4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ minloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mminloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ sminloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "a65195dcc3f429547f1875da60da93eec6c2dd1f", "filename": "libgfortran/generated/minloc1_4_i8.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_i8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ minloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mminloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ sminloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "b106e97dde85552f1dad7579f2f72f36f3d93a57", "filename": "libgfortran/generated/minloc1_4_r10.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_4_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_4_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_r10.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ minloc1_4_r10 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mminloc1_4_r10 (gfc_array_i4 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ sminloc1_4_r10 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "b1ef3b3ee6220f009dced3a8fde076e9f2908fc5", "filename": "libgfortran/generated/minloc1_4_r16.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_4_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_4_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_r16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ minloc1_4_r16 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mminloc1_4_r16 (gfc_array_i4 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ sminloc1_4_r16 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "9ddf490d68bfe94ee847b145b5ba6162f09e6ce8", "filename": "libgfortran/generated/minloc1_4_r4.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_r4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ minloc1_4_r4 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mminloc1_4_r4 (gfc_array_i4 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ sminloc1_4_r4 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "0619ac6f0a78d7cd7ee29585a1a83c7997bdb734", "filename": "libgfortran/generated/minloc1_4_r8.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_r8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ minloc1_4_r8 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mminloc1_4_r8 (gfc_array_i4 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ sminloc1_4_r8 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "27c7fa9e350307c406b5725eb7e739c9998c4c8a", "filename": "libgfortran/generated/minloc1_8_i1.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_8_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_8_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_i1.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ minloc1_8_i1 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mminloc1_8_i1 (gfc_array_i8 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ sminloc1_8_i1 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "274b17e45f971761dbb2b4c023242d20dfc44ba6", "filename": "libgfortran/generated/minloc1_8_i16.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_8_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_8_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_i16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ minloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mminloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ sminloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "416622c36e72c8dce39c33ef0a451185b2857765", "filename": "libgfortran/generated/minloc1_8_i2.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_8_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_8_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_i2.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ minloc1_8_i2 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mminloc1_8_i2 (gfc_array_i8 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ sminloc1_8_i2 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "ff67899917c72159393ac60692424b2a4162f5a5", "filename": "libgfortran/generated/minloc1_8_i4.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_i4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ minloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mminloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ sminloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "c4247ac7f177a8a7cd68c8023e302aababf56181", "filename": "libgfortran/generated/minloc1_8_i8.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_i8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ minloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mminloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ sminloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "c57f72aabe6a87fb454dec91c6c3aa1dff910c6b", "filename": "libgfortran/generated/minloc1_8_r10.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_8_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_8_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_r10.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ minloc1_8_r10 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mminloc1_8_r10 (gfc_array_i8 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ sminloc1_8_r10 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "c1d2cd2a88e1a8a5edb0dd242e0b32c438c9fc41", "filename": "libgfortran/generated/minloc1_8_r16.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_8_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_8_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_r16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ minloc1_8_r16 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mminloc1_8_r16 (gfc_array_i8 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ sminloc1_8_r16 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "c1faa797d4cb5693b426367eb6c3cdcb4fe0a9fa", "filename": "libgfortran/generated/minloc1_8_r4.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_r4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ minloc1_8_r4 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mminloc1_8_r4 (gfc_array_i8 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ sminloc1_8_r4 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "e7c5ee19ad193debf6a162d3d363a122d4be5080", "filename": "libgfortran/generated/minloc1_8_r8.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminloc1_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_r8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -188,9 +188,9 @@ minloc1_8_r8 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -398,9 +398,9 @@ mminloc1_8_r8 (gfc_array_i8 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -538,7 +538,7 @@ sminloc1_8_r8 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "ccfdfa7670b2a0dc6c5bae0d9df3f202447bf500", "filename": "libgfortran/generated/minval_i1.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminval_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminval_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_i1.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -181,9 +181,9 @@ minval_i1 (gfc_array_i1 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -386,9 +386,9 @@ mminval_i1 (gfc_array_i1 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -526,7 +526,7 @@ sminval_i1 (gfc_array_i1 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "9d3a1502e98f900ed98c73f4f94cd94f06944fad", "filename": "libgfortran/generated/minval_i16.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminval_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminval_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_i16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -181,9 +181,9 @@ minval_i16 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -386,9 +386,9 @@ mminval_i16 (gfc_array_i16 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -526,7 +526,7 @@ sminval_i16 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "0c335a0689483fe7719db9f239dcfcf3f2a62b2c", "filename": "libgfortran/generated/minval_i2.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminval_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminval_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_i2.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -181,9 +181,9 @@ minval_i2 (gfc_array_i2 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -386,9 +386,9 @@ mminval_i2 (gfc_array_i2 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -526,7 +526,7 @@ sminval_i2 (gfc_array_i2 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "73de782ef0941ca938ee07fcad565d0edd218d09", "filename": "libgfortran/generated/minval_i4.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminval_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminval_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_i4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -181,9 +181,9 @@ minval_i4 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -386,9 +386,9 @@ mminval_i4 (gfc_array_i4 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -526,7 +526,7 @@ sminval_i4 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "4a2a71500842f1844fe8a0918ab07fc18bb89184", "filename": "libgfortran/generated/minval_i8.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminval_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminval_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_i8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -181,9 +181,9 @@ minval_i8 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -386,9 +386,9 @@ mminval_i8 (gfc_array_i8 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -526,7 +526,7 @@ sminval_i8 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "27966136955559e366f482466bf9a501afff0612", "filename": "libgfortran/generated/minval_r10.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminval_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminval_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_r10.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -181,9 +181,9 @@ minval_r10 (gfc_array_r10 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -386,9 +386,9 @@ mminval_r10 (gfc_array_r10 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -526,7 +526,7 @@ sminval_r10 (gfc_array_r10 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "8bc429b8d921aa388523e6af1bcad08227ab2ff7", "filename": "libgfortran/generated/minval_r16.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminval_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminval_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_r16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -181,9 +181,9 @@ minval_r16 (gfc_array_r16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -386,9 +386,9 @@ mminval_r16 (gfc_array_r16 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -526,7 +526,7 @@ sminval_r16 (gfc_array_r16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "a5ecce21dd92c4a1a0edf2bc18221423b9d09532", "filename": "libgfortran/generated/minval_r4.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminval_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminval_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_r4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -181,9 +181,9 @@ minval_r4 (gfc_array_r4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -386,9 +386,9 @@ mminval_r4 (gfc_array_r4 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -526,7 +526,7 @@ sminval_r4 (gfc_array_r4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "78c751ef6994cc1760607629c55d6d29ed88b444", "filename": "libgfortran/generated/minval_r8.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminval_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fminval_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_r8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -181,9 +181,9 @@ minval_r8 (gfc_array_r8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -386,9 +386,9 @@ mminval_r8 (gfc_array_r8 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -526,7 +526,7 @@ sminval_r8 (gfc_array_r8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "4c5a23062851f3b42d608ab445fea6a4dd4c4309", "filename": "libgfortran/generated/norm2_r10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fnorm2_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fnorm2_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fnorm2_r10.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -187,9 +187,9 @@ norm2_r10 (gfc_array_r10 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }"}, {"sha": "5eaefb8a92dbd12772061cf774ff36fa6155253e", "filename": "libgfortran/generated/norm2_r16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fnorm2_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fnorm2_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fnorm2_r16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -191,9 +191,9 @@ norm2_r16 (gfc_array_r16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }"}, {"sha": "0482b16ca2d1b7d88e64997dc8c769f0cfb38e16", "filename": "libgfortran/generated/norm2_r4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fnorm2_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fnorm2_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fnorm2_r4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -187,9 +187,9 @@ norm2_r4 (gfc_array_r4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }"}, {"sha": "173faa63eb20fec3ab8be8b6f08df3db6ae9c51f", "filename": "libgfortran/generated/norm2_r8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fnorm2_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fnorm2_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fnorm2_r8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -187,9 +187,9 @@ norm2_r8 (gfc_array_r8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }"}, {"sha": "4fe64dec7db6ee60d4c21aabda77ab725a48e13c", "filename": "libgfortran/generated/parity_l1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fparity_l1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fparity_l1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fparity_l1.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ parity_l1 (gfc_array_l1 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }"}, {"sha": "d9e0a8efcdcb89ee8d1a8b743a24283de1f8db29", "filename": "libgfortran/generated/parity_l16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fparity_l16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fparity_l16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fparity_l16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ parity_l16 (gfc_array_l16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }"}, {"sha": "3cf26312f02904ad10ec5eede5416e6b7b9f7315", "filename": "libgfortran/generated/parity_l2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fparity_l2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fparity_l2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fparity_l2.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ parity_l2 (gfc_array_l2 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }"}, {"sha": "70cdd18aef9a45e9b96bbfc30fb207463251717d", "filename": "libgfortran/generated/parity_l4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fparity_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fparity_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fparity_l4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ parity_l4 (gfc_array_l4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }"}, {"sha": "d22c9a5537110f2837990ce92cbcf68444f988cd", "filename": "libgfortran/generated/parity_l8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fparity_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fparity_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fparity_l8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ parity_l8 (gfc_array_l8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }"}, {"sha": "4e2f6f2b56689c6307f2e180cc45c57337aaadd3", "filename": "libgfortran/generated/product_c10.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fproduct_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fproduct_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_c10.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ product_c10 (gfc_array_c10 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ mproduct_c10 (gfc_array_c10 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ sproduct_c10 (gfc_array_c10 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "df73041f1701c5c768a2dab7fafdd45bb0209fb6", "filename": "libgfortran/generated/product_c16.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fproduct_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fproduct_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_c16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ product_c16 (gfc_array_c16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ mproduct_c16 (gfc_array_c16 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ sproduct_c16 (gfc_array_c16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "3d097a9a3ec1f6bad2126a5950e74db1f3e63b86", "filename": "libgfortran/generated/product_c4.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fproduct_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fproduct_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_c4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ product_c4 (gfc_array_c4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ mproduct_c4 (gfc_array_c4 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ sproduct_c4 (gfc_array_c4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "4bb1ddee0fedd42f965f2c32be7df0eb013b44de", "filename": "libgfortran/generated/product_c8.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fproduct_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fproduct_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_c8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ product_c8 (gfc_array_c8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ mproduct_c8 (gfc_array_c8 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ sproduct_c8 (gfc_array_c8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "fc03a48bc05d90bd98106bf988d4048b792f3dd5", "filename": "libgfortran/generated/product_i1.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fproduct_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fproduct_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_i1.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ product_i1 (gfc_array_i1 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ mproduct_i1 (gfc_array_i1 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ sproduct_i1 (gfc_array_i1 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "6a4e1aa29a394699f1d4343913b371320bab09db", "filename": "libgfortran/generated/product_i16.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fproduct_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fproduct_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_i16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ product_i16 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ mproduct_i16 (gfc_array_i16 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ sproduct_i16 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "82a650f6ec65cfaa014d1617aff89634fcb09488", "filename": "libgfortran/generated/product_i2.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fproduct_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fproduct_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_i2.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ product_i2 (gfc_array_i2 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ mproduct_i2 (gfc_array_i2 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ sproduct_i2 (gfc_array_i2 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "84f7c36e439dcd29debf6bed28ba6291f4858f7c", "filename": "libgfortran/generated/product_i4.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fproduct_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fproduct_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_i4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ product_i4 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ mproduct_i4 (gfc_array_i4 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ sproduct_i4 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "5ace17304e4f1f770ba4a29c7a23deff7858d48a", "filename": "libgfortran/generated/product_i8.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fproduct_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fproduct_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_i8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ product_i8 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ mproduct_i8 (gfc_array_i8 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ sproduct_i8 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "54e22915b88b0e10f5a214517a1626dbf949d14a", "filename": "libgfortran/generated/product_r10.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fproduct_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fproduct_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_r10.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ product_r10 (gfc_array_r10 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ mproduct_r10 (gfc_array_r10 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ sproduct_r10 (gfc_array_r10 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "d3a2afdbdadd9470f4e80cf426c8dc385e5b674d", "filename": "libgfortran/generated/product_r16.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fproduct_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fproduct_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_r16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ product_r16 (gfc_array_r16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ mproduct_r16 (gfc_array_r16 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ sproduct_r16 (gfc_array_r16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "94a2f1060385e5383d9470d1cf67f944fb566057", "filename": "libgfortran/generated/product_r4.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fproduct_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fproduct_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_r4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ product_r4 (gfc_array_r4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ mproduct_r4 (gfc_array_r4 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ sproduct_r4 (gfc_array_r4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "2daba7587bd3e08e43b0e002068a977a5d28a7f1", "filename": "libgfortran/generated/product_r8.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fproduct_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fproduct_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_r8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ product_r8 (gfc_array_r8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ mproduct_r8 (gfc_array_r8 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ sproduct_r8 (gfc_array_r8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "9d16db231b4843a9f5100a2a27fb732b36f9468c", "filename": "libgfortran/generated/sum_c10.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fsum_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fsum_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_c10.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ sum_c10 (gfc_array_c10 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ msum_c10 (gfc_array_c10 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ ssum_c10 (gfc_array_c10 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "581110141006296f9d73e5f36fd11feea652e318", "filename": "libgfortran/generated/sum_c16.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fsum_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fsum_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_c16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ sum_c16 (gfc_array_c16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ msum_c16 (gfc_array_c16 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ ssum_c16 (gfc_array_c16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "27438bf4bac609fb5f9657dc92f8454302907287", "filename": "libgfortran/generated/sum_c4.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fsum_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fsum_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_c4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ sum_c4 (gfc_array_c4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ msum_c4 (gfc_array_c4 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ ssum_c4 (gfc_array_c4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "cb58bbf5724b2ca71e89b2a41f1a06cc4649e67f", "filename": "libgfortran/generated/sum_c8.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fsum_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fsum_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_c8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ sum_c8 (gfc_array_c8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ msum_c8 (gfc_array_c8 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ ssum_c8 (gfc_array_c8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "1980383b5db1c353a062780ca1ae796fd0c15350", "filename": "libgfortran/generated/sum_i1.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fsum_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fsum_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_i1.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ sum_i1 (gfc_array_i1 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ msum_i1 (gfc_array_i1 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ ssum_i1 (gfc_array_i1 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "0abaff00adea7ea5ad4c16772a4728eea703e759", "filename": "libgfortran/generated/sum_i16.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fsum_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fsum_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_i16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ sum_i16 (gfc_array_i16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ msum_i16 (gfc_array_i16 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ ssum_i16 (gfc_array_i16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "6332b64774305ed6065ef6c9ba44c5642ffc89e5", "filename": "libgfortran/generated/sum_i2.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fsum_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fsum_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_i2.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ sum_i2 (gfc_array_i2 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ msum_i2 (gfc_array_i2 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ ssum_i2 (gfc_array_i2 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "27dd47ee8c516afede8031f3bafdb06d759cca80", "filename": "libgfortran/generated/sum_i4.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fsum_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fsum_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_i4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ sum_i4 (gfc_array_i4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ msum_i4 (gfc_array_i4 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ ssum_i4 (gfc_array_i4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "f7639db0ae7901586536f9d682e712ea95555908", "filename": "libgfortran/generated/sum_i8.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fsum_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fsum_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_i8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ sum_i8 (gfc_array_i8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ msum_i8 (gfc_array_i8 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ ssum_i8 (gfc_array_i8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "07caf2360342b76b39bedb259b8eee56dc5f087d", "filename": "libgfortran/generated/sum_r10.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fsum_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fsum_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_r10.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ sum_r10 (gfc_array_r10 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ msum_r10 (gfc_array_r10 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ ssum_r10 (gfc_array_r10 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "374c2b326f3815c55b2d8bf75a5bb8acaa6dbebe", "filename": "libgfortran/generated/sum_r16.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fsum_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fsum_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_r16.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ sum_r16 (gfc_array_r16 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ msum_r16 (gfc_array_r16 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ ssum_r16 (gfc_array_r16 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "4b5caeede98d4611b0c5babd573e0e301b4924c4", "filename": "libgfortran/generated/sum_r4.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fsum_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fsum_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_r4.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ sum_r4 (gfc_array_r4 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ msum_r4 (gfc_array_r4 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ ssum_r4 (gfc_array_r4 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "18872d7d53581ea92860ae4542da287d2f2e0bec", "filename": "libgfortran/generated/sum_r8.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fsum_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fgenerated%2Fsum_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_r8.c?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -167,9 +167,9 @@ sum_r8 (gfc_array_r8 * const restrict retarray,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -344,9 +344,9 @@ msum_r8 (gfc_array_r8 * const restrict retarray,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -484,7 +484,7 @@ ssum_r8 (gfc_array_r8 * const restrict retarray,\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "e7521e62537b83d11d97ab06ef9f0d4a266a1198", "filename": "libgfortran/m4/iforeach.m4", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fm4%2Fiforeach.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fm4%2Fiforeach.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fiforeach.m4?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -85,7 +85,7 @@ define(FINISH_FOREACH_FUNCTION,\n \t     frequently used path so probably not worth it.  */\n \t  base -= sstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;\n@@ -203,7 +203,7 @@ define(FINISH_MASKED_FOREACH_FUNCTION,\n \t  base -= sstride[n] * extent[n];\n \t  mbase -= mstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n \t      /* Break out of the loop.  */\n \t      base = NULL;"}, {"sha": "43d8775d04ceade93d69df70786742e511243755", "filename": "libgfortran/m4/ifunction.m4", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fm4%2Fifunction.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fm4%2Fifunction.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fifunction.m4?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -157,9 +157,9 @@ define(FINISH_ARRAY_FUNCTION,\n \t  base -= sstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      continue_loop = 0;\n \t      break;\n \t    }\n@@ -333,9 +333,9 @@ define(FINISH_MASKED_ARRAY_FUNCTION,\n \t  mbase -= mstride[n] * extent[n];\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    {\n-\t      /* Break out of the look.  */\n+\t      /* Break out of the loop.  */\n \t      base = NULL;\n \t      break;\n \t    }\n@@ -473,7 +473,7 @@ void\n \t     frequently used path so probably not worth it.  */\n \t  dest -= dstride[n] * extent[n];\n \t  n++;\n-\t  if (n == rank)\n+\t  if (n >= rank)\n \t    return;\n \t  else\n \t    {"}, {"sha": "fda8812cc51f3543aedeeafe09cb799b3232aa3a", "filename": "libgfortran/m4/ifunction_logical.m4", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fm4%2Fifunction_logical.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9/libgfortran%2Fm4%2Fifunction_logical.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fifunction_logical.m4?ref=80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "patch": "@@ -184,9 +184,9 @@ define(FINISH_ARRAY_FUNCTION,\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n-          if (n == rank)\n+          if (n >= rank)\n             {\n-              /* Break out of the look.  */\n+              /* Break out of the loop.  */\n               continue_loop = 0;\n               break;\n             }"}]}