{"sha": "854ef3909dcc16b363d5300d096823fa4c6afdc5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODU0ZWYzOTA5ZGNjMTZiMzYzZDUzMDBkMDk2ODIzZmE0YzZhZmRjNQ==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2002-10-02T19:17:30Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2002-10-02T19:17:30Z"}, "message": "vms.texi: Blow away false include file section.\n\n2002-10-02  Nathanael Nerode  <neroden@gcc.gnu.org>\n\n\t* doc/vms.texi: Blow away false include file section.\n\nFrom-SVN: r57747", "tree": {"sha": "74577e6344f487cd55db168841ae0d8927a0260c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74577e6344f487cd55db168841ae0d8927a0260c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/854ef3909dcc16b363d5300d096823fa4c6afdc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/854ef3909dcc16b363d5300d096823fa4c6afdc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/854ef3909dcc16b363d5300d096823fa4c6afdc5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/854ef3909dcc16b363d5300d096823fa4c6afdc5/comments", "author": null, "committer": null, "parents": [{"sha": "6a8a90589c4cee02eb47cd614928673c8a39b27f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a8a90589c4cee02eb47cd614928673c8a39b27f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a8a90589c4cee02eb47cd614928673c8a39b27f"}], "stats": {"total": 110, "additions": 4, "deletions": 106}, "files": [{"sha": "fc2b1455f6573d9a6ad46cd17acd6b9541f116aa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/854ef3909dcc16b363d5300d096823fa4c6afdc5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/854ef3909dcc16b363d5300d096823fa4c6afdc5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=854ef3909dcc16b363d5300d096823fa4c6afdc5", "patch": "@@ -1,3 +1,7 @@\n+2002-10-02  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* doc/vms.texi: Blow away false include file section.\n+\n 2002-10-02  Roger Sayle  <roger@eyesopen.com>\n \n \tPR optimization/6627"}, {"sha": "080d4522bedf8795fa78bbd2be000eb8b6495a6b", "filename": "gcc/doc/vms.texi", "status": "modified", "additions": 0, "deletions": 106, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/854ef3909dcc16b363d5300d096823fa4c6afdc5/gcc%2Fdoc%2Fvms.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/854ef3909dcc16b363d5300d096823fa4c6afdc5/gcc%2Fdoc%2Fvms.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fvms.texi?ref=854ef3909dcc16b363d5300d096823fa4c6afdc5", "patch": "@@ -10,117 +10,11 @@\n Here is how to use GCC on VMS@.\n \n @menu\n-* Include Files and VMS::  Where the preprocessor looks for the include files.\n * Global Declarations::    How to do globaldef, globalref and globalvalue with\n                            GCC.\n * VMS Misc::\t\t   Misc information.\n @end menu\n \n-@node Include Files and VMS\n-@section Include Files and VMS\n-\n-@cindex include files and VMS\n-@cindex VMS and include files\n-@cindex header files and VMS\n-Due to the differences between the filesystems of Unix and VMS, GCC\n-attempts to translate file names in @samp{#include} into names that VMS\n-will understand.  The basic strategy is to prepend a prefix to the\n-specification of the include file, convert the whole filename to a VMS\n-filename, and then try to open the file.  GCC tries various prefixes\n-one by one until one of them succeeds:\n-\n-@enumerate\n-@item\n-The first prefix is the @samp{GNU_CC_INCLUDE:} logical name: this is\n-where GNU C header files are traditionally stored.  If you wish to store\n-header files in non-standard locations, then you can assign the logical\n-@samp{GNU_CC_INCLUDE} to be a search list, where each element of the\n-list is suitable for use with a rooted logical.\n-\n-@item\n-The next prefix tried is @samp{SYS$SYSROOT:[SYSLIB.]}.  This is where\n-VAX-C header files are traditionally stored.\n-\n-@item\n-If the include file specification by itself is a valid VMS filename, the\n-preprocessor then uses this name with no prefix in an attempt to open\n-the include file.\n-\n-@item\n-If the file specification is not a valid VMS filename (i.e.@: does not\n-contain a device or a directory specifier, and contains a @samp{/}\n-character), the preprocessor tries to convert it from Unix syntax to\n-VMS syntax.\n-\n-Conversion works like this: the first directory name becomes a device,\n-and the rest of the directories are converted into VMS-format directory\n-names.  For example, the name @file{X11/foobar.h} is\n-translated to @file{X11:[000000]foobar.h} or @file{X11:foobar.h},\n-whichever one can be opened.  This strategy allows you to assign a\n-logical name to point to the actual location of the header files.\n-\n-@item\n-If none of these strategies succeeds, the @samp{#include} fails.\n-@end enumerate\n-\n-Include directives of the form:\n-\n-@example\n-#include foobar\n-@end example\n-\n-@noindent\n-are a common source of incompatibility between VAX-C and GCC@.  VAX-C\n-treats this much like a standard @code{#include <foobar.h>} directive.\n-That is incompatible with the ISO C behavior implemented by GCC: to\n-expand the name @code{foobar} as a macro.  Macro expansion should\n-eventually yield one of the two standard formats for @code{#include}:\n-\n-@example\n-#include \"@var{file}\"\n-#include <@var{file}>\n-@end example\n-\n-If you have this problem, the best solution is to modify the source to\n-convert the @code{#include} directives to one of the two standard forms.\n-That will work with either compiler.  If you want a quick and dirty fix,\n-define the file names as macros with the proper expansion, like this:\n-\n-@example\n-#define stdio <stdio.h>\n-@end example\n-\n-@noindent\n-This will work, as long as the name doesn't conflict with anything else\n-in the program.\n-\n-Another source of incompatibility is that VAX-C assumes that:\n-\n-@example\n-#include \"foobar\"\n-@end example\n-\n-@noindent\n-is actually asking for the file @file{foobar.h}.  GCC does not\n-make this assumption, and instead takes what you ask for literally;\n-it tries to read the file @file{foobar}.  The best way to avoid this\n-problem is to always specify the desired file extension in your include\n-directives.\n-\n-GCC for VMS is distributed with a set of include files that is\n-sufficient to compile most general purpose programs.  Even though the\n-GCC distribution does not contain header files to define constants\n-and structures for some VMS system-specific functions, there is no\n-reason why you cannot use GCC with any of these functions.  You first\n-may have to generate or create header files, either by using the public\n-domain utility @code{UNSDL} (which can be found on a DECUS tape), or by\n-extracting the relevant modules from one of the system macro libraries,\n-and using an editor to construct a C header file.\n-\n-A @code{#include} file name cannot contain a DECNET node name.  The\n-preprocessor reports an I/O error if you attempt to use a node name,\n-whether explicitly, or implicitly via a logical name.\n-\n @node Global Declarations\n @section Global Declarations and VMS\n "}]}