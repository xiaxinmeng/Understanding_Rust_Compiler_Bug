{"sha": "f7cdcbf1c569761c07a3f27bd25b831e56067f28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjdjZGNiZjFjNTY5NzYxYzA3YTNmMjdiZDI1YjgzMWU1NjA2N2YyOA==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "coudert@clipper.ens.fr", "date": "2005-04-03T17:46:07Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2005-04-03T17:46:07Z"}, "message": "intrinsic.texi: Document BESJ0, BESJ1, BESJN, BESY0, BESY1, BESYN, ATAN, COSH, ERF, ERC, SINH, TANH.\n\n\t* intrinsic.texi: Document BESJ0, BESJ1, BESJN, BESY0, BESY1,\n\tBESYN, ATAN, COSH, ERF, ERC, SINH, TANH.\n\nFrom-SVN: r97495", "tree": {"sha": "9232aa076e25cf382507c8da73019b42da823004", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9232aa076e25cf382507c8da73019b42da823004"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7cdcbf1c569761c07a3f27bd25b831e56067f28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7cdcbf1c569761c07a3f27bd25b831e56067f28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7cdcbf1c569761c07a3f27bd25b831e56067f28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7cdcbf1c569761c07a3f27bd25b831e56067f28/comments", "author": null, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ac3e311ac63e79bc0772f6c40c25a0d46f8d59f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ac3e311ac63e79bc0772f6c40c25a0d46f8d59f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ac3e311ac63e79bc0772f6c40c25a0d46f8d59f"}], "stats": {"total": 594, "additions": 555, "deletions": 39}, "files": [{"sha": "37d803fe945495a79d1270bc7b0e6d867ec4d381", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7cdcbf1c569761c07a3f27bd25b831e56067f28/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7cdcbf1c569761c07a3f27bd25b831e56067f28/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f7cdcbf1c569761c07a3f27bd25b831e56067f28", "patch": "@@ -1,3 +1,8 @@\n+2005-04-03  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\t* intrinsic.texi: Document BESJ0, BESJ1, BESJN, BESY0, BESY1,\n+\tBESYN, ATAN, COSH, ERF, ERC, SINH, TANH.\n+\n 2005-04-02  Steven G. Kargl  <kargls@comcast.net>\n \n \t* intrinsic.texi: Document ALLOCATED, ANINT, ANY, ASIN; fix typos"}, {"sha": "d37dc1e52e91e2bab1531f52bcf432124b608d5d", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 550, "deletions": 39, "changes": 589, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7cdcbf1c569761c07a3f27bd25b831e56067f28/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7cdcbf1c569761c07a3f27bd25b831e56067f28/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=f7cdcbf1c569761c07a3f27bd25b831e56067f28", "patch": "@@ -46,6 +46,18 @@ and editing.  All contributions and corrections are strongly encouraged.\n * @code{ANINT}:     ANINT,     Nearest whole number\n * @code{ANY}:       ANY,       Determine if any values are true\n * @code{ASIN}:      ASIN,      Arcsine function\n+* @code{ATAN}:      ATAN,      Arctangent function\n+* @code{BESJ0}:     BESJ0,     Bessel function of the first kind of order 0\n+* @code{BESJ1}:     BESJ1,     Bessel function of the first kind of order 1\n+* @code{BESJN}:     BESJN,     Bessel function of the first kind\n+* @code{BESY0}:     BESY0,     Bessel function of the first kind of order 0\n+* @code{BESY1}:     BESY1,     Bessel function of the first kind of order 1\n+* @code{BESYN}:     BESYN,     Bessel function of the first kind\n+* @code{COSH}:      COSH,      Hyperbolic cosine function\n+* @code{ERF}:       ERF,       Error function\n+* @code{ERFC}:      ERFC,      Complementary error function\n+* @code{SINH}:      SINH,      Hyperbolic sine function\n+* @code{TANH}:      TANH,      Hyperbolic tangent function\n @end menu\n \n @node Introduction\n@@ -722,35 +734,551 @@ end program test_asin\n @end table\n \n \n+@node ATAN\n+@section @code{ATAN} --- Arctangent function \n+@findex @code{ATAN} intrinsic\n+@findex @code{DATAN} intrinsic\n+@cindex arctangent\n+\n+@table @asis\n+@item @emph{Description}:\n+@code{ATAN(X)} computes the arctangent of @var{X}.\n+\n+@item @emph{Option}:\n+f95, gnu\n+\n+@item @emph{Type}:\n+elemental function\n+\n+@item @emph{Syntax}:\n+@code{X = ATAN(X)}\n+\n+@item @emph{Arguments}:\n+@multitable @columnfractions .15 .80\n+@item @var{X} @tab The type shall be an @code{REAL(*)}.\n+@end multitable\n+\n+@item @emph{Return value}:\n+The return value is of type @code{REAL(*)} and it lies in the\n+range @math{ - \\pi / 2 \\leq \\arcsin (x) \\leq \\pi / 2}.\n+\n+@item @emph{Example}:\n+@smallexample\n+program test_atan\n+  real(8) :: x = 2.866_8\n+  x = atan(x)\n+end program test_atan\n+@end smallexample\n+\n+@item @emph{Specific names}:\n+@multitable @columnfractions .24 .24 .24 .24\n+@item Name            @tab Argument          @tab Return type       @tab Option\n+@item @code{DATAN(X)} @tab @code{REAL(8) X}  @tab @code{REAL(8)}    @tab f95, gnu\n+@end multitable\n+@end table\n+\n+\n+\n+@node BESJ0\n+@section @code{BESJ0} --- Bessel function of the first kind of order 0\n+@findex @code{BESJ0} intrinsic\n+@findex @code{DBESJ0} intrinsic\n+@cindex Bessel\n+\n+@table @asis\n+@item @emph{Description}:\n+@code{BESJ0(X)} computes the Bessel function of the first kind of order 0\n+of @var{X}.\n+\n+@item @emph{Option}:\n+f95, gnu\n+\n+@item @emph{Type}:\n+elemental function\n+\n+@item @emph{Syntax}:\n+@code{X = BESJ0(X)}\n+\n+@item @emph{Arguments}:\n+@multitable @columnfractions .15 .80\n+@item @var{X} @tab The type shall be an @code{REAL(*)}.\n+@end multitable\n+\n+@item @emph{Return value}:\n+The return value is of type @code{REAL(*)} and it lies in the\n+range @math{ - 0.4027... \\leq Bessel (0,x) \\leq 1}.\n+\n+@item @emph{Example}:\n+@smallexample\n+program test_besj0\n+  real(8) :: x = 0.0_8\n+  x = besj0(x)\n+end program test_besj0\n+@end smallexample\n+\n+@item @emph{Specific names}:\n+@multitable @columnfractions .24 .24 .24 .24\n+@item Name            @tab Argument          @tab Return type       @tab Option\n+@item @code{DBESJ0(X)} @tab @code{REAL(8) X}  @tab @code{REAL(8)}    @tab f95, gnu\n+@end multitable\n+@end table\n+\n+\n+\n+@node BESJ1\n+@section @code{BESJ1} --- Bessel function of the first kind of order 1\n+@findex @code{BESJ1} intrinsic\n+@findex @code{DBESJ1} intrinsic\n+@cindex Bessel\n+\n+@table @asis\n+@item @emph{Description}:\n+@code{BESJ1(X)} computes the Bessel function of the first kind of order 1\n+of @var{X}.\n+\n+@item @emph{Option}:\n+f95, gnu\n+\n+@item @emph{Type}:\n+elemental function\n+\n+@item @emph{Syntax}:\n+@code{X = BESJ1(X)}\n+\n+@item @emph{Arguments}:\n+@multitable @columnfractions .15 .80\n+@item @var{X} @tab The type shall be an @code{REAL(*)}.\n+@end multitable\n+\n+@item @emph{Return value}:\n+The return value is of type @code{REAL(*)} and it lies in the\n+range @math{ - 0.5818... \\leq Bessel (0,x) \\leq 0.5818 }.\n+\n+@item @emph{Example}:\n+@smallexample\n+program test_besj1\n+  real(8) :: x = 1.0_8\n+  x = besj1(x)\n+end program test_besj1\n+@end smallexample\n+\n+@item @emph{Specific names}:\n+@multitable @columnfractions .24 .24 .24 .24\n+@item Name            @tab Argument          @tab Return type       @tab Option\n+@item @code{DBESJ1(X)} @tab @code{REAL(8) X}  @tab @code{REAL(8)}    @tab f95, gnu\n+@end multitable\n+@end table\n+\n+\n+\n+@node BESJN\n+@section @code{BESJN} --- Bessel function of the first kind\n+@findex @code{BESJN} intrinsic\n+@findex @code{DBESJN} intrinsic\n+@cindex Bessel\n+\n+@table @asis\n+@item @emph{Description}:\n+@code{BESJN(N, X)} computes the Bessel function of the first kind of order\n+@var{N} of @var{X}.\n+\n+@item @emph{Option}:\n+f95, gnu\n+\n+@item @emph{Type}:\n+elemental function\n+\n+@item @emph{Syntax}:\n+@code{Y = BESJN(N, X)}\n+\n+@item @emph{Arguments}:\n+@multitable @columnfractions .15 .80\n+@item @var{N} @tab The type shall be an @code{INTEGER(*)}.\n+@item @var{X} @tab The type shall be an @code{REAL(*)}.\n+@end multitable\n+\n+@item @emph{Return value}:\n+The return value is of type @code{REAL(*)}.\n+\n+@item @emph{Example}:\n+@smallexample\n+program test_besjn\n+  real(8) :: x = 1.0_8\n+  x = besjn(5,x)\n+end program test_besjn\n+@end smallexample\n+\n+@item @emph{Specific names}:\n+@multitable @columnfractions .24 .24 .24 .24\n+@item Name            @tab Argument          @tab Return type       @tab Option\n+@item @code{DBESJN(X)} @tab @code{REAL(8) X}  @tab @code{REAL(8)}    @tab f95, gnu\n+@end multitable\n+@end table\n+\n+\n+\n+@node BESY0\n+@section @code{BESY0} --- Bessel function of the second kind of order 0\n+@findex @code{BESY0} intrinsic\n+@findex @code{DBESY0} intrinsic\n+@cindex Bessel\n+\n+@table @asis\n+@item @emph{Description}:\n+@code{BESY0(X)} computes the Bessel function of the second kind of order 0\n+of @var{X}.\n+\n+@item @emph{Option}:\n+f95, gnu\n+\n+@item @emph{Type}:\n+elemental function\n+\n+@item @emph{Syntax}:\n+@code{X = BESY0(X)}\n+\n+@item @emph{Arguments}:\n+@multitable @columnfractions .15 .80\n+@item @var{X} @tab The type shall be an @code{REAL(*)}.\n+@end multitable\n+\n+@item @emph{Return value}:\n+The return value is of type @code{REAL(*)}.\n+\n+@item @emph{Example}:\n+@smallexample\n+program test_besy0\n+  real(8) :: x = 0.0_8\n+  x = besy0(x)\n+end program test_besy0\n+@end smallexample\n+\n+@item @emph{Specific names}:\n+@multitable @columnfractions .24 .24 .24 .24\n+@item Name            @tab Argument          @tab Return type       @tab Option\n+@item @code{DBESY0(X)} @tab @code{REAL(8) X}  @tab @code{REAL(8)}    @tab f95, gnu\n+@end multitable\n+@end table\n+\n+\n+\n+@node BESY1\n+@section @code{BESY1} --- Bessel function of the second kind of order 1\n+@findex @code{BESY1} intrinsic\n+@findex @code{DBESY1} intrinsic\n+@cindex Bessel\n+\n+@table @asis\n+@item @emph{Description}:\n+@code{BESY1(X)} computes the Bessel function of the second kind of order 1\n+of @var{X}.\n+\n+@item @emph{Option}:\n+f95, gnu\n+\n+@item @emph{Type}:\n+elemental function\n+\n+@item @emph{Syntax}:\n+@code{X = BESY1(X)}\n+\n+@item @emph{Arguments}:\n+@multitable @columnfractions .15 .80\n+@item @var{X} @tab The type shall be an @code{REAL(*)}.\n+@end multitable\n+\n+@item @emph{Return value}:\n+The return value is of type @code{REAL(*)}.\n+\n+@item @emph{Example}:\n+@smallexample\n+program test_besy1\n+  real(8) :: x = 1.0_8\n+  x = besy1(x)\n+end program test_besy1\n+@end smallexample\n+\n+@item @emph{Specific names}:\n+@multitable @columnfractions .24 .24 .24 .24\n+@item Name            @tab Argument          @tab Return type       @tab Option\n+@item @code{DBESY1(X)} @tab @code{REAL(8) X}  @tab @code{REAL(8)}    @tab f95, gnu\n+@end multitable\n+@end table\n+\n+\n+\n+@node BESYN\n+@section @code{BESYN} --- Bessel function of the second kind\n+@findex @code{BESYN} intrinsic\n+@findex @code{DBESYN} intrinsic\n+@cindex Bessel\n+\n+@table @asis\n+@item @emph{Description}:\n+@code{BESYN(N, X)} computes the Bessel function of the second kind of order\n+@var{N} of @var{X}.\n+\n+@item @emph{Option}:\n+f95, gnu\n+\n+@item @emph{Type}:\n+elemental function\n+\n+@item @emph{Syntax}:\n+@code{Y = BESYN(N, X)}\n+\n+@item @emph{Arguments}:\n+@multitable @columnfractions .15 .80\n+@item @var{N} @tab The type shall be an @code{INTEGER(*)}.\n+@item @var{X} @tab The type shall be an @code{REAL(*)}.\n+@end multitable\n+\n+@item @emph{Return value}:\n+The return value is of type @code{REAL(*)}.\n+\n+@item @emph{Example}:\n+@smallexample\n+program test_besyn\n+  real(8) :: x = 1.0_8\n+  x = besyn(5,x)\n+end program test_besyn\n+@end smallexample\n+\n+@item @emph{Specific names}:\n+@multitable @columnfractions .24 .24 .24 .24\n+@item Name            @tab Argument          @tab Return type       @tab Option\n+@item @code{DBESYN(X)} @tab @code{REAL(8) X}  @tab @code{REAL(8)}    @tab f95, gnu\n+@end multitable\n+@end table\n+\n+\n+\n+@node COSH\n+@section @code{COSH} --- Hyperbolic cosine function \n+@findex @code{COSH} intrinsic\n+@findex @code{DCOSH} intrinsic\n+@cindex hyperbolic cosine\n+\n+@table @asis\n+@item @emph{Description}:\n+@code{COSH(X)} computes the hyperbolic cosine of @var{X}.\n+\n+@item @emph{Option}:\n+f95, gnu\n+\n+@item @emph{Type}:\n+elemental function\n+\n+@item @emph{Syntax}:\n+@code{X = COSH(X)}\n+\n+@item @emph{Arguments}:\n+@multitable @columnfractions .15 .80\n+@item @var{X} @tab The type shall be an @code{REAL(*)}.\n+@end multitable\n+\n+@item @emph{Return value}:\n+The return value is of type @code{REAL(*)} and it is positive\n+(@math{ \\cosh (x) \\geq 0 }.\n+\n+@item @emph{Example}:\n+@smallexample\n+program test_cosh\n+  real(8) :: x = 1.0_8\n+  x = cosh(x)\n+end program test_cosh\n+@end smallexample\n+\n+@item @emph{Specific names}:\n+@multitable @columnfractions .24 .24 .24 .24\n+@item Name            @tab Argument          @tab Return type       @tab Option\n+@item @code{DCOSH(X)} @tab @code{REAL(8) X}  @tab @code{REAL(8)}    @tab f95, gnu\n+@end multitable\n+@end table\n+\n+\n+@node ERF\n+@section @code{ERF} --- Error function \n+@findex @code{ERF} intrinsic\n+@cindex error\n+\n+@table @asis\n+@item @emph{Description}:\n+@code{ERF(X)} computes the error function of @var{X}.\n+\n+@item @emph{Option}:\n+f95, gnu\n+\n+@item @emph{Type}:\n+elemental function\n+\n+@item @emph{Syntax}:\n+@code{X = ERF(X)}\n+\n+@item @emph{Arguments}:\n+@multitable @columnfractions .15 .80\n+@item @var{X} @tab The type shall be an @code{REAL(*)}.\n+@end multitable\n+\n+@item @emph{Return value}:\n+The return value is of type @code{REAL(*)} and it is positive\n+(@math{ - 1 \\leq erf (x) \\leq 1 }.\n+\n+@item @emph{Example}:\n+@smallexample\n+program test_erf\n+  real(8) :: x = 0.17_8\n+  x = erf(x)\n+end program test_erf\n+@end smallexample\n+\n+@item @emph{Specific names}:\n+@multitable @columnfractions .24 .24 .24 .24\n+@item Name            @tab Argument          @tab Return type       @tab Option\n+@item @code{DERF(X)} @tab @code{REAL(8) X}  @tab @code{REAL(8)}    @tab f95, gnu\n+@end multitable\n+@end table\n+\n+\n+\n+@node ERFC\n+@section @code{ERFC} --- Error function \n+@findex @code{ERFC} intrinsic\n+@cindex error\n+\n+@table @asis\n+@item @emph{Description}:\n+@code{ERFC(X)} computes the complementary error function of @var{X}.\n+\n+@item @emph{Option}:\n+f95, gnu\n+\n+@item @emph{Type}:\n+elemental function\n+\n+@item @emph{Syntax}:\n+@code{X = ERFC(X)}\n+\n+@item @emph{Arguments}:\n+@multitable @columnfractions .15 .80\n+@item @var{X} @tab The type shall be an @code{REAL(*)}.\n+@end multitable\n+\n+@item @emph{Return value}:\n+The return value is of type @code{REAL(*)} and it is positive\n+(@math{ 0 \\leq erfc (x) \\leq 2 }.\n+\n+@item @emph{Example}:\n+@smallexample\n+program test_erfc\n+  real(8) :: x = 0.17_8\n+  x = erfc(x)\n+end program test_erfc\n+@end smallexample\n+\n+@item @emph{Specific names}:\n+@multitable @columnfractions .24 .24 .24 .24\n+@item Name            @tab Argument          @tab Return type       @tab Option\n+@item @code{DERFC(X)} @tab @code{REAL(8) X}  @tab @code{REAL(8)}    @tab f95, gnu\n+@end multitable\n+@end table\n+\n+\n+\n+@node SINH\n+@section @code{SINH} --- Hyperbolic sine function \n+@findex @code{SINH} intrinsic\n+@findex @code{DSINH} intrinsic\n+@cindex hyperbolic sine\n+\n+@table @asis\n+@item @emph{Description}:\n+@code{SINH(X)} computes the hyperbolic sine of @var{X}.\n+\n+@item @emph{Option}:\n+f95, gnu\n+\n+@item @emph{Type}:\n+elemental function\n+\n+@item @emph{Syntax}:\n+@code{X = SINH(X)}\n+\n+@item @emph{Arguments}:\n+@multitable @columnfractions .15 .80\n+@item @var{X} @tab The type shall be an @code{REAL(*)}.\n+@end multitable\n+\n+@item @emph{Return value}:\n+The return value is of type @code{REAL(*)}.\n+\n+@item @emph{Example}:\n+@smallexample\n+program test_sinh\n+  real(8) :: x = - 1.0_8\n+  x = sinh(x)\n+end program test_sinh\n+@end smallexample\n+\n+@item @emph{Specific names}:\n+@multitable @columnfractions .24 .24 .24 .24\n+@item Name            @tab Argument          @tab Return type       @tab Option\n+@item @code{DSINH(X)} @tab @code{REAL(8) X}  @tab @code{REAL(8)}    @tab f95, gnu\n+@end multitable\n+@end table\n+\n+\n+\n+@node TANH\n+@section @code{TANH} --- Hyperbolic tangent function \n+@findex @code{TANH} intrinsic\n+@findex @code{DTANH} intrinsic\n+@cindex hyperbolic tangent\n+\n+@table @asis\n+@item @emph{Description}:\n+@code{TANH(X)} computes the hyperbolic tangent of @var{X}.\n+\n+@item @emph{Option}:\n+f95, gnu\n+\n+@item @emph{Type}:\n+elemental function\n+\n+@item @emph{Syntax}:\n+@code{X = TANH(X)}\n+\n+@item @emph{Arguments}:\n+@multitable @columnfractions .15 .80\n+@item @var{X} @tab The type shall be an @code{REAL(*)}.\n+@end multitable\n+\n+@item @emph{Return value}:\n+The return value is of type @code{REAL(*)} and lies in the range\n+@math{ - 1 \\leq tanh(x) \\leq 1 }.\n+\n+@item @emph{Example}:\n+@smallexample\n+program test_tanh\n+  real(8) :: x = 2.1_8\n+  x = tanh(x)\n+end program test_tanh\n+@end smallexample\n+\n+@item @emph{Specific names}:\n+@multitable @columnfractions .24 .24 .24 .24\n+@item Name            @tab Argument          @tab Return type       @tab Option\n+@item @code{DTANH(X)} @tab @code{REAL(8) X}  @tab @code{REAL(8)}    @tab f95, gnu\n+@end multitable\n+@end table\n \n \n \n @comment gen   associated\n @comment \n-@comment gen   atan\n-@comment       datan\n-@comment \n @comment gen   atan2\n @comment       datan2\n @comment \n-@comment gen   besj0\n-@comment       dbesj0 \n-@comment \n-@comment gen   besj1\n-@comment       dbesj1\n-@comment \n-@comment gen   besjn\n-@comment       dbesjn\n-@comment \n-@comment gen   besy0\n-@comment       dbesy0\n-@comment \n-@comment gen   besy1\n-@comment       dbesy1\n-@comment \n-@comment gen   besyn\n-@comment       dbesyn\n-@comment \n @comment gen   bit_size \n @comment \n @comment gen   btest\n@@ -771,9 +1299,6 @@ end program test_asin\n @comment       ccos\n @comment       zcos,cdcos\n @comment \n-@comment gen   cosh\n-@comment       dcosh\n-@comment \n @comment gen   count\n @comment \n @comment sub   cpu_time\n@@ -805,12 +1330,6 @@ end program test_asin\n @comment \n @comment gen   epsilon\n @comment \n-@comment gen   erf\n-@comment       derf\n-@comment \n-@comment gen   erfc\n-@comment       derfc\n-@comment \n @comment gen   etime\n @comment sub   etime\n @comment \n@@ -925,7 +1444,7 @@ end program test_asin\n @comment gen   maxexponent\n @comment \n @comment gen   maxloc\n-@comment\n+@comment \n @comment gen   maxval\n @comment \n @comment gen   merge\n@@ -1013,9 +1532,6 @@ end program test_asin\n @comment       csin\n @comment       zsin,cdsin\n @comment \n-@comment gen   sinh\n-@comment       dsinh\n-@comment \n @comment gen   size\n @comment \n @comment gen   spacing\n@@ -1042,9 +1558,6 @@ end program test_asin\n @comment gen   tan\n @comment       dtan\n @comment \n-@comment gen   tanh\n-@comment       dtanh\n-@comment \n @comment gen   tiny\n @comment \n @comment gen   transfer\n@@ -1065,5 +1578,3 @@ end program test_asin\n @comment \n @comment gen   verify\n \n- \n-"}]}