{"sha": "45fb78c9c456ace1d914c836d15af38ae345b902", "node_id": "C_kwDOANBUbNoAKDQ1ZmI3OGM5YzQ1NmFjZTFkOTE0YzgzNmQxNWFmMzhhZTM0NWI5MDI", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.ibm.com", "date": "2022-04-07T22:25:17Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@linux.ibm.com", "date": "2022-04-07T22:25:17Z"}, "message": "Disable float128 tests on VxWorks, PR target/104253.\n\nIn PR target/104253, it was pointed out the that test case added as part\nof fixing the PR does not work on VxWorks because float128 is not\nsupported on that system.  I have modified the three tests for float128 so\nthat they are manually excluded on VxWorks systems.  In looking at the\ncode, I also added checks in check_effective_target_ppc_ieee128_ok to\ndisable the systems that will never support VSX instructions which are\nrequired for float128 support (eabi, eabispe, darwin).\n\n2022-04-07   Michael Meissner  <meissner@linux.ibm.com>\n\ngcc/testsuite/\n\tPR target/104253\n\t* lib/target-supports.exp (check_ppc_float128_sw_available): Do\n\tnot run float128 tests on VxWorks.\n\t(check_ppc_float128_hw_available): Likewise.\n\t(check_effective_target_ppc_ieee128_ok): Likewise.", "tree": {"sha": "49c260471328fe2d05bc3ee281d52021a7b2449b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49c260471328fe2d05bc3ee281d52021a7b2449b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45fb78c9c456ace1d914c836d15af38ae345b902", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45fb78c9c456ace1d914c836d15af38ae345b902", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45fb78c9c456ace1d914c836d15af38ae345b902", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45fb78c9c456ace1d914c836d15af38ae345b902/comments", "author": null, "committer": null, "parents": [{"sha": "7e7a96f774ed892e5cef53fcb68297cd0d513820", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e7a96f774ed892e5cef53fcb68297cd0d513820", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e7a96f774ed892e5cef53fcb68297cd0d513820"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "90b9009568223afeb32652f7f1695be9e9f5be4f", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45fb78c9c456ace1d914c836d15af38ae345b902/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45fb78c9c456ace1d914c836d15af38ae345b902/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=45fb78c9c456ace1d914c836d15af38ae345b902", "patch": "@@ -2318,8 +2318,9 @@ proc check_ppc_mma_hw_available { } {\n proc check_ppc_float128_sw_available { } {\n     return [check_cached_effective_target ppc_float128_sw_available {\n \t# Some simulators are known to not support VSX/power8/power9\n-\t# instructions.\tFor now, disable on Darwin.\n-\tif { [istarget powerpc-*-eabi]\n+\t# instructions.\tFor now, disable on Darwin and VxWorks.\n+\tif { [istarget *-*-vxworks*]\n+\t     || [istarget powerpc-*-eabi]\n \t     || [istarget powerpc*-*-eabispe]\n \t     || [istarget *-*-darwin*]} {\n \t    expr 0\n@@ -2345,7 +2346,8 @@ proc check_ppc_float128_hw_available { } {\n     return [check_cached_effective_target ppc_float128_hw_available {\n \t# Some simulators are known to not support VSX/power8/power9\n \t# instructions.\tFor now, disable on Darwin.\n-\tif { [istarget powerpc-*-eabi]\n+\tif { [istarget *-*-vxworks*]\n+\t     || [istarget powerpc-*-eabi]\n \t     || [istarget powerpc*-*-eabispe]\n \t     || [istarget *-*-darwin*]} {\n \t    expr 0\n@@ -2370,8 +2372,9 @@ proc check_ppc_float128_hw_available { } {\n # See if the __ieee128 keyword is understood.\n proc check_effective_target_ppc_ieee128_ok { } {\n     return [check_cached_effective_target ppc_ieee128_ok {\n-\t# disable on AIX.\n-\tif { [istarget *-*-aix*] } {\n+\t# disable on AIX and VxWorks.\n+\tif { [istarget *-*-aix*]\n+\t     || [istarget *-*-vxworks*]} {\n \t    expr 0\n \t} else {\n \t    set options \"-mfloat128\""}]}