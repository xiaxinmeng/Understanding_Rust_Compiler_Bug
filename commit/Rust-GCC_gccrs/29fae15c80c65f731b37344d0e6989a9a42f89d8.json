{"sha": "29fae15c80c65f731b37344d0e6989a9a42f89d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjlmYWUxNWM4MGM2NWY3MzFiMzczNDRkMGU2OTg5YTlhNDJmODlkOA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2002-11-26T08:11:33Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2002-11-26T08:11:33Z"}, "message": "tree.c (cp_build_qualified_type_real): Correct handling of array types.\n\n\t* tree.c (cp_build_qualified_type_real): Correct handling of\n\tarray types.\n\nFrom-SVN: r59499", "tree": {"sha": "6c69b7279e8df5e99ab4f5362a4ae3bb520d94aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c69b7279e8df5e99ab4f5362a4ae3bb520d94aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29fae15c80c65f731b37344d0e6989a9a42f89d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29fae15c80c65f731b37344d0e6989a9a42f89d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29fae15c80c65f731b37344d0e6989a9a42f89d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29fae15c80c65f731b37344d0e6989a9a42f89d8/comments", "author": null, "committer": null, "parents": [{"sha": "020a7b12f8cbe9df5b803e68b1741fb620a404f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/020a7b12f8cbe9df5b803e68b1741fb620a404f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/020a7b12f8cbe9df5b803e68b1741fb620a404f8"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "6c313eba4d8fc4faaa68307419cd67ab133ee000", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29fae15c80c65f731b37344d0e6989a9a42f89d8/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29fae15c80c65f731b37344d0e6989a9a42f89d8/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=29fae15c80c65f731b37344d0e6989a9a42f89d8", "patch": "@@ -650,10 +650,20 @@ cp_build_qualified_type_real (type, type_quals, complain)\n       if (element_type == error_mark_node)\n \treturn error_mark_node;\n \n-      /* Make a new array type, just like the old one, but with the\n-\t appropriately qualified element type.  */\n-      t = build_type_copy (type);\n-      TREE_TYPE (t) = element_type;\n+      /* See if we already have an identically qualified type.  */\n+      for (t = TYPE_MAIN_VARIANT (type); t; t = TYPE_NEXT_VARIANT (t))\n+\tif (cp_type_quals (t) == type_quals \n+\t    && TYPE_NAME (t) == TYPE_NAME (type)\n+\t    && TYPE_CONTEXT (t) == TYPE_CONTEXT (type))\n+\t  break;\n+\t  \n+      if (!t)\n+\t{\n+\t  /* Make a new array type, just like the old one, but with the\n+\t     appropriately qualified element type.  */\n+\t  t = build_type_copy (type);\n+\t  TREE_TYPE (t) = element_type;\n+\t}\n \n       /* Even if we already had this variant, we update\n \t TYPE_NEEDS_CONSTRUCTING and TYPE_HAS_NONTRIVIAL_DESTRUCTOR in case"}]}