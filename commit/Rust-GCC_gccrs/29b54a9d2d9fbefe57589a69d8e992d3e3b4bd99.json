{"sha": "29b54a9d2d9fbefe57589a69d8e992d3e3b4bd99", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjliNTRhOWQyZDlmYmVmZTU3NTg5YTY5ZDhlOTkyZDNlM2I0YmQ5OQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2018-06-28T14:55:42Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2018-06-28T14:55:42Z"}, "message": "Hide alt_dump_file within dumpfile.c\n\nThis patch removes alt_dump_file from dumpfile.h, making it static\nwithin dumpfile.c.  This allows for changing how -fopt-info is\nimplemented, and potentially adding other kinds of dump target, such\nas remarks or optimization records.\n\nDoing so requires changing the implementation of dump_enabled_p, so\nthe patch changes this to a simple lookup of a boolean global, which\nis updated any time dump_file or alt_dump_file change.\n\ngcc/ChangeLog:\n\t* cgraph.c (cgraph_node::get_body): Replace assignments to\n\t\"dump_file\" with calls to set_dump_file.\n\t* dumpfile.c (alt_dump_file): Make static, and group with...\n\t(alt_flags): ...this definition.\n\t(dumps_are_enabled): New variable.\n\t(refresh_dumps_are_enabled): New function.\n\t(set_dump_file): New function.\n\t(set_alt_dump_file): New function.\n\t(gcc::dump_manager::dump_start): Replace assignments to\n\t\"dump_file\" and \"alt_dump_file\" with calls to set_dump_file and\n\tset_alt_dump_file.\n\t(gcc::dump_manager::dump_finish): Likewise.\n\t* dumpfile.h (alt_dump_file): Delete decl.\n\t(dumps_are_enabled): New variable decl.\n\t(set_dump_file): New function decl.\n\t(dump_enabled_p): Rewrite in terms of new \"dumps_are_enabled\"\n\tglobal.\n\t* tree-nested.c (lower_nested_functions): Replace assignments to\n\t\"dump_file\" with calls to set_dump_file.\n\nFrom-SVN: r262220", "tree": {"sha": "8ba0845992be0c8d1b9334cd9db5504de34f8a67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ba0845992be0c8d1b9334cd9db5504de34f8a67"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29b54a9d2d9fbefe57589a69d8e992d3e3b4bd99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29b54a9d2d9fbefe57589a69d8e992d3e3b4bd99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29b54a9d2d9fbefe57589a69d8e992d3e3b4bd99", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29b54a9d2d9fbefe57589a69d8e992d3e3b4bd99/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f601629c61e2361bab49eecbcf89703f8fb33e98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f601629c61e2361bab49eecbcf89703f8fb33e98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f601629c61e2361bab49eecbcf89703f8fb33e98"}], "stats": {"total": 83, "additions": 71, "deletions": 12}, "files": [{"sha": "92e31fcd6eef1caecd40d26f6d22b2e574ada0b9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29b54a9d2d9fbefe57589a69d8e992d3e3b4bd99/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29b54a9d2d9fbefe57589a69d8e992d3e3b4bd99/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=29b54a9d2d9fbefe57589a69d8e992d3e3b4bd99", "patch": "@@ -1,3 +1,25 @@\n+2018-06-28  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* cgraph.c (cgraph_node::get_body): Replace assignments to\n+\t\"dump_file\" with calls to set_dump_file.\n+\t* dumpfile.c (alt_dump_file): Make static, and group with...\n+\t(alt_flags): ...this definition.\n+\t(dumps_are_enabled): New variable.\n+\t(refresh_dumps_are_enabled): New function.\n+\t(set_dump_file): New function.\n+\t(set_alt_dump_file): New function.\n+\t(gcc::dump_manager::dump_start): Replace assignments to\n+\t\"dump_file\" and \"alt_dump_file\" with calls to set_dump_file and\n+\tset_alt_dump_file.\n+\t(gcc::dump_manager::dump_finish): Likewise.\n+\t* dumpfile.h (alt_dump_file): Delete decl.\n+\t(dumps_are_enabled): New variable decl.\n+\t(set_dump_file): New function decl.\n+\t(dump_enabled_p): Rewrite in terms of new \"dumps_are_enabled\"\n+\tglobal.\n+\t* tree-nested.c (lower_nested_functions): Replace assignments to\n+\t\"dump_file\" with calls to set_dump_file.\n+\n 2018-06-28  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* tree-cfg.c (verify_gimple_in_cfg): Call verify_location on the"}, {"sha": "d19f1aacab86e9610e103d9d28af6c6b8bfd9b96", "filename": "gcc/cgraph.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29b54a9d2d9fbefe57589a69d8e992d3e3b4bd99/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29b54a9d2d9fbefe57589a69d8e992d3e3b4bd99/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=29b54a9d2d9fbefe57589a69d8e992d3e3b4bd99", "patch": "@@ -3582,7 +3582,7 @@ cgraph_node::get_body (void)\n       const char *saved_dump_file_name = dump_file_name;\n       dump_flags_t saved_dump_flags = dump_flags;\n       dump_file_name = NULL;\n-      dump_file = NULL;\n+      set_dump_file (NULL);\n \n       push_cfun (DECL_STRUCT_FUNCTION (decl));\n       execute_all_ipa_transforms ();\n@@ -3593,7 +3593,7 @@ cgraph_node::get_body (void)\n       updated = true;\n \n       current_pass = saved_current_pass;\n-      dump_file = saved_dump_file;\n+      set_dump_file (saved_dump_file);\n       dump_file_name = saved_dump_file_name;\n       dump_flags = saved_dump_flags;\n     }"}, {"sha": "06a6673d6461d560b74d89bbc4bc5a8c50a10d18", "filename": "gcc/dumpfile.c", "status": "modified", "additions": 40, "deletions": 6, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29b54a9d2d9fbefe57589a69d8e992d3e3b4bd99/gcc%2Fdumpfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29b54a9d2d9fbefe57589a69d8e992d3e3b4bd99/gcc%2Fdumpfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdumpfile.c?ref=29b54a9d2d9fbefe57589a69d8e992d3e3b4bd99", "patch": "@@ -40,18 +40,52 @@ along with GCC; see the file COPYING3.  If not see\n    (strncmp (whole, part, strlen (part)) ? NULL : whole + strlen (part))\n \n static dump_flags_t pflags;\t\t      /* current dump_flags */\n-static dump_flags_t alt_flags;\t\t      /* current opt_info flags */\n \n static void dump_loc (dump_flags_t, FILE *, source_location);\n+\n+/* Current -fopt-info output stream, if any, and flags.  */\n+static FILE *alt_dump_file = NULL;\n+static dump_flags_t alt_flags;\n+\n static FILE *dump_open_alternate_stream (struct dump_file_info *);\n \n /* These are currently used for communicating between passes.\n    However, instead of accessing them directly, the passes can use\n    dump_printf () for dumps.  */\n FILE *dump_file = NULL;\n-FILE *alt_dump_file = NULL;\n const char *dump_file_name;\n dump_flags_t dump_flags;\n+bool dumps_are_enabled = false;\n+\n+\n+/* Update the \"dumps_are_enabled\" global; to be called whenever dump_file\n+   or alt_dump_file change.  */\n+\n+static void\n+refresh_dumps_are_enabled ()\n+{\n+  dumps_are_enabled = (dump_file || alt_dump_file);\n+}\n+\n+/* Set global \"dump_file\" to NEW_DUMP_FILE, refreshing the \"dumps_are_enabled\"\n+   global.  */\n+\n+void\n+set_dump_file (FILE *new_dump_file)\n+{\n+  dump_file = new_dump_file;\n+  refresh_dumps_are_enabled ();\n+}\n+\n+/* Set \"alt_dump_file\" to NEW_ALT_DUMP_FILE, refreshing the \"dumps_are_enabled\"\n+   global.  */\n+\n+static void\n+set_alt_dump_file (FILE *new_alt_dump_file)\n+{\n+  alt_dump_file = new_alt_dump_file;\n+  refresh_dumps_are_enabled ();\n+}\n \n #define DUMP_FILE_INFO(suffix, swtch, dkind, num) \\\n   {suffix, swtch, NULL, NULL, NULL, NULL, NULL, dkind, TDF_NONE, TDF_NONE, \\\n@@ -568,7 +602,7 @@ dump_start (int phase, dump_flags_t *flag_ptr)\n         }\n       free (name);\n       dfi->pstream = stream;\n-      dump_file = dfi->pstream;\n+      set_dump_file (dfi->pstream);\n       /* Initialize current dump flags. */\n       pflags = dfi->pflags;\n     }\n@@ -578,7 +612,7 @@ dump_start (int phase, dump_flags_t *flag_ptr)\n     {\n       dfi->alt_stream = stream;\n       count++;\n-      alt_dump_file = dfi->alt_stream;\n+      set_alt_dump_file (dfi->alt_stream);\n       /* Initialize current -fopt-info flags. */\n       alt_flags = dfi->alt_flags;\n     }\n@@ -609,8 +643,8 @@ dump_finish (int phase)\n \n   dfi->alt_stream = NULL;\n   dfi->pstream = NULL;\n-  dump_file = NULL;\n-  alt_dump_file = NULL;\n+  set_dump_file (NULL);\n+  set_alt_dump_file (NULL);\n   dump_flags = TDF_NONE;\n   alt_flags = TDF_NONE;\n   pflags = TDF_NONE;"}, {"sha": "489f92e6d1ae273d23b8a9bacf7d452ed5372f71", "filename": "gcc/dumpfile.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29b54a9d2d9fbefe57589a69d8e992d3e3b4bd99/gcc%2Fdumpfile.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29b54a9d2d9fbefe57589a69d8e992d3e3b4bd99/gcc%2Fdumpfile.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdumpfile.h?ref=29b54a9d2d9fbefe57589a69d8e992d3e3b4bd99", "patch": "@@ -445,15 +445,18 @@ extern void dump_bb (FILE *, basic_block, int, dump_flags_t);\n \n /* Global variables used to communicate with passes.  */\n extern FILE *dump_file;\n-extern FILE *alt_dump_file;\n extern dump_flags_t dump_flags;\n extern const char *dump_file_name;\n \n+extern bool dumps_are_enabled;\n+\n+extern void set_dump_file (FILE *new_dump_file);\n+\n /* Return true if any of the dumps is enabled, false otherwise. */\n static inline bool\n dump_enabled_p (void)\n {\n-  return (dump_file || alt_dump_file);\n+  return dumps_are_enabled;\n }\n \n namespace gcc {"}, {"sha": "4c8eda94f1452eb46973cc71b9b8fd7ab4aeaf5a", "filename": "gcc/tree-nested.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29b54a9d2d9fbefe57589a69d8e992d3e3b4bd99/gcc%2Ftree-nested.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29b54a9d2d9fbefe57589a69d8e992d3e3b4bd99/gcc%2Ftree-nested.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-nested.c?ref=29b54a9d2d9fbefe57589a69d8e992d3e3b4bd99", "patch": "@@ -3399,7 +3399,7 @@ lower_nested_functions (tree fndecl)\n \n   gimplify_all_functions (cgn);\n \n-  dump_file = dump_begin (TDI_nested, &dump_flags);\n+  set_dump_file (dump_begin (TDI_nested, &dump_flags));\n   if (dump_file)\n     fprintf (dump_file, \"\\n;; Function %s\\n\\n\",\n \t     lang_hooks.decl_printable_name (fndecl, 2));\n@@ -3426,7 +3426,7 @@ lower_nested_functions (tree fndecl)\n   if (dump_file)\n     {\n       dump_end (TDI_nested, dump_file);\n-      dump_file = NULL;\n+      set_dump_file (NULL);\n     }\n }\n "}]}