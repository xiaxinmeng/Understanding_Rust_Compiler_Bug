{"sha": "d134f39eeb50933428755e3c01779aa3991a6ef7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDEzNGYzOWVlYjUwOTMzNDI4NzU1ZTNjMDE3NzlhYTM5OTFhNmVmNw==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2004-11-15T22:10:16Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2004-11-15T22:10:16Z"}, "message": "re PR c/18498 (gcc allows non-integral bitfield types)\n\n\tPR c/18498\n\t* c-decl.c (grokdeclarator): Call check_bitfield_type_and_width\n\tafter processing the declarator.\n\ntestsuite:\n\t* gcc.dg/bitfld-13.c: New test.\n\nFrom-SVN: r90696", "tree": {"sha": "7a989365c25e771cb6f76f1099eaf88f7b22a0be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a989365c25e771cb6f76f1099eaf88f7b22a0be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d134f39eeb50933428755e3c01779aa3991a6ef7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d134f39eeb50933428755e3c01779aa3991a6ef7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d134f39eeb50933428755e3c01779aa3991a6ef7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d134f39eeb50933428755e3c01779aa3991a6ef7/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9cbee3faacdd44f6a9aae35aa4819a1c5c8305e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cbee3faacdd44f6a9aae35aa4819a1c5c8305e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cbee3faacdd44f6a9aae35aa4819a1c5c8305e4"}], "stats": {"total": 33, "additions": 29, "deletions": 4}, "files": [{"sha": "6fe91efe7701181c0d3e913aec93db6e75a15d0d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d134f39eeb50933428755e3c01779aa3991a6ef7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d134f39eeb50933428755e3c01779aa3991a6ef7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d134f39eeb50933428755e3c01779aa3991a6ef7", "patch": "@@ -1,3 +1,9 @@\n+2004-11-15  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\tPR c/18498\n+\t* c-decl.c (grokdeclarator): Call check_bitfield_type_and_width\n+\tafter processing the declarator.\n+\n 2004-11-15  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* config/rs6000/altivec.md (\"altivec_vsplth\"): Rewrite with"}, {"sha": "709abed0365e20310dc33d20139cdf6d56def42b", "filename": "gcc/c-decl.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d134f39eeb50933428755e3c01779aa3991a6ef7/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d134f39eeb50933428755e3c01779aa3991a6ef7/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=d134f39eeb50933428755e3c01779aa3991a6ef7", "patch": "@@ -3809,10 +3809,6 @@ grokdeclarator (const struct c_declarator *declarator,\n       && TREE_CODE (type) == INTEGER_TYPE)\n     type = c_common_unsigned_type (type);\n \n-  /* Check the type and width of a bit-field.  */\n-  if (bitfield)\n-    check_bitfield_type_and_width (&type, width, orig_name);\n-\n   /* Figure out the type qualifiers for the declaration.  There are\n      two ways a declaration can become qualified.  One is something\n      like `const int i' where the `const' is explicit.  Another is\n@@ -4252,6 +4248,10 @@ grokdeclarator (const struct c_declarator *declarator,\n \n   /* Now TYPE has the actual type.  */\n \n+  /* Check the type and width of a bit-field.  */\n+  if (bitfield)\n+    check_bitfield_type_and_width (&type, width, orig_name);\n+\n   /* Did array size calculations overflow?  */\n \n   if (TREE_CODE (type) == ARRAY_TYPE"}, {"sha": "4ea1f12bac57ddc4923ff074f159caa9c696c3ca", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d134f39eeb50933428755e3c01779aa3991a6ef7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d134f39eeb50933428755e3c01779aa3991a6ef7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d134f39eeb50933428755e3c01779aa3991a6ef7", "patch": "@@ -1,3 +1,8 @@\n+2004-11-15  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\tPR c/18498\n+\t* gcc.dg/bitfld-13.c: New test.\n+\n 2004-11-15  Janis Johnson  <janis187@us.ibm.com>\n \n \t* gcc.dg/vect/tree-vect.h: (check_vect): Test symbols defined for"}, {"sha": "012a3e55a300d503e7c2cb07eb79c8fc5f4bc8c5", "filename": "gcc/testsuite/gcc.dg/bitfld-13.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d134f39eeb50933428755e3c01779aa3991a6ef7/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d134f39eeb50933428755e3c01779aa3991a6ef7/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-13.c?ref=d134f39eeb50933428755e3c01779aa3991a6ef7", "patch": "@@ -0,0 +1,14 @@\n+/* Test invalid bit-field types: bug 18498.  */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+int\n+main(void)\n+{\n+  struct X {\n+    int s[20] : 1; /* { dg-error \"error: bit-field 's' has invalid type\" } */\n+    int *p : 2; /* { dg-error \"error: bit-field 'p' has invalid type\" } */\n+    int (*f)(float) : 3; /* { dg-error \"error: bit-field 'f' has invalid type\" } */\n+  } x;\n+  return 0;\n+}"}]}