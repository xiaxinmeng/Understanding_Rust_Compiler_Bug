{"sha": "bb04998ab783bff53eb995de3e7d38a4eba2f06e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmIwNDk5OGFiNzgzYmZmNTNlYjk5NWRlM2U3ZDM4YTRlYmEyZjA2ZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2004-11-24T20:19:36Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2004-11-24T20:19:36Z"}, "message": "tree-inline.c (copy_body_r): Explicitly copy a constant if the type will be remapped.\n\n\t* tree-inline.c (copy_body_r): Explicitly copy a constant if the\n\ttype will be remapped.\n\nFrom-SVN: r91192", "tree": {"sha": "89c073f6216329698dde15b2256c05fc2dccd7b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89c073f6216329698dde15b2256c05fc2dccd7b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb04998ab783bff53eb995de3e7d38a4eba2f06e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb04998ab783bff53eb995de3e7d38a4eba2f06e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb04998ab783bff53eb995de3e7d38a4eba2f06e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb04998ab783bff53eb995de3e7d38a4eba2f06e/comments", "author": null, "committer": null, "parents": [{"sha": "8adb21944ef60bd5371c3b3de031da69fe700cbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8adb21944ef60bd5371c3b3de031da69fe700cbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8adb21944ef60bd5371c3b3de031da69fe700cbc"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "91878f82d160b195b1d9bd73da6b15ccfa658d17", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb04998ab783bff53eb995de3e7d38a4eba2f06e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb04998ab783bff53eb995de3e7d38a4eba2f06e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bb04998ab783bff53eb995de3e7d38a4eba2f06e", "patch": "@@ -1,3 +1,8 @@\n+2004-11-24  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* tree-inline.c (copy_body_r): Explicitly copy a constant if the\n+\ttype will be remapped.\n+\n 2004-11-24  Steven Bosscher  <stevenb@suse.de>\n \n \t* c-opts.c (c_common_post_options): Don't clear"}, {"sha": "a6629895b43b305a2a168523bfacd216f4d23238", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb04998ab783bff53eb995de3e7d38a4eba2f06e/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb04998ab783bff53eb995de3e7d38a4eba2f06e/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=bb04998ab783bff53eb995de3e7d38a4eba2f06e", "patch": "@@ -516,6 +516,25 @@ copy_body_r (tree *tp, int *walk_subtrees, void *data)\n   else if (TYPE_P (*tp))\n     *tp = remap_type (*tp, id);\n \n+  /* If this is a constant, we have to copy the node iff the type will be\n+     remapped.  copy_tree_r will not copy a constant.  */\n+  else if (TREE_CODE_CLASS (TREE_CODE (*tp)) == tcc_constant)\n+    {\n+      tree new_type = remap_type (TREE_TYPE (*tp), id);\n+\n+      if (new_type == TREE_TYPE (*tp))\n+\t*walk_subtrees = 0;\n+\n+      else if (TREE_CODE (*tp) == INTEGER_CST)\n+\t*tp = build_int_cst_wide (new_type, TREE_INT_CST_LOW (*tp),\n+\t\t\t\t  TREE_INT_CST_HIGH (*tp));\n+      else\n+\t{\n+\t  *tp = copy_node (*tp);\n+\t  TREE_TYPE (*tp) = new_type;\n+\t}\n+    }\n+\n   /* Otherwise, just copy the node.  Note that copy_tree_r already\n      knows not to copy VAR_DECLs, etc., so this is safe.  */\n   else"}]}