{"sha": "67378cd63d62bf0c69e966d1d202a1e586550a68", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjczNzhjZDYzZDYyYmYwYzY5ZTk2NmQxZDIwMmExZTU4NjU1MGE2OA==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2021-04-20T06:30:07Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2021-04-20T06:30:45Z"}, "message": "Fortran: Fix host associated PDT entity initialization [PR99307].\n\n2021-04-20  Paul Thomas  <pault@gcc.gnu.org>\n\ngcc/fortran\n\tPR fortran/100110\n\t* trans-decl.c (gfc_get_symbol_decl): Replace test for host\n\tassociation with a check that the current and symbol namespaces\n\tare the same.\n\ngcc/testsuite/\n\tPR fortran/100110\n\t* gfortran.dg/pdt_31.f03: New test.\n\t* gfortran.dg/pdt_26.f03: Reduce 'builtin_malloc' count from 9\n\tto 8.", "tree": {"sha": "28e3fc924f7c7bb8db0a96db889e094a225c5f9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28e3fc924f7c7bb8db0a96db889e094a225c5f9d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67378cd63d62bf0c69e966d1d202a1e586550a68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67378cd63d62bf0c69e966d1d202a1e586550a68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67378cd63d62bf0c69e966d1d202a1e586550a68", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67378cd63d62bf0c69e966d1d202a1e586550a68/comments", "author": null, "committer": null, "parents": [{"sha": "30b11d8d1be9c683f1517472c47a3cb69df02c4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30b11d8d1be9c683f1517472c47a3cb69df02c4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30b11d8d1be9c683f1517472c47a3cb69df02c4f"}], "stats": {"total": 33, "additions": 30, "deletions": 3}, "files": [{"sha": "cc9d85543ca680db1780fc5f53b4b37e55fdd874", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67378cd63d62bf0c69e966d1d202a1e586550a68/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67378cd63d62bf0c69e966d1d202a1e586550a68/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=67378cd63d62bf0c69e966d1d202a1e586550a68", "patch": "@@ -1548,7 +1548,8 @@ gfc_get_symbol_decl (gfc_symbol * sym)\n      declaration of the entity and memory allocated/deallocated.  */\n   if ((sym->ts.type == BT_DERIVED || sym->ts.type == BT_CLASS)\n       && sym->param_list != NULL\n-      && !(sym->attr.host_assoc || sym->attr.use_assoc || sym->attr.dummy))\n+      && gfc_current_ns == sym->ns\n+      && !(sym->attr.use_assoc || sym->attr.dummy))\n     gfc_defer_symbol_init (sym);\n \n   /* Dummy PDT 'len' parameters should be checked when they are explicit.  */"}, {"sha": "59ddcfb6cc43988b2e7018238cd9521bc8fd724a", "filename": "gcc/testsuite/gfortran.dg/pdt_26.f03", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67378cd63d62bf0c69e966d1d202a1e586550a68/gcc%2Ftestsuite%2Fgfortran.dg%2Fpdt_26.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67378cd63d62bf0c69e966d1d202a1e586550a68/gcc%2Ftestsuite%2Fgfortran.dg%2Fpdt_26.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpdt_26.f03?ref=67378cd63d62bf0c69e966d1d202a1e586550a68", "patch": "@@ -2,7 +2,7 @@\n ! { dg-options \"-fdump-tree-original\" }\n !\n ! Test the fix for PR83567 in which the parameterized component 'foo' was\n-! being deallocated before return from 'addw', with consequent segfault in \n+! being deallocated before return from 'addw', with consequent segfault in\n ! the main program.\n !\n ! Contributed by Berke Durak  <berke.durak@gmail.com>\n@@ -43,4 +43,4 @@ program test_pdt\n   if (any (c(1)%foo .ne. [13,15,17])) STOP 2\n end program test_pdt\n ! { dg-final { scan-tree-dump-times \"__builtin_free\" 8 \"original\" } }\n-! { dg-final { scan-tree-dump-times \"__builtin_malloc\" 9 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"__builtin_malloc\" 8 \"original\" } }"}, {"sha": "708c94542179467ae8d26682b7eeec1e9a850e32", "filename": "gcc/testsuite/gfortran.dg/pdt_31.f03", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67378cd63d62bf0c69e966d1d202a1e586550a68/gcc%2Ftestsuite%2Fgfortran.dg%2Fpdt_31.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67378cd63d62bf0c69e966d1d202a1e586550a68/gcc%2Ftestsuite%2Fgfortran.dg%2Fpdt_31.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpdt_31.f03?ref=67378cd63d62bf0c69e966d1d202a1e586550a68", "patch": "@@ -0,0 +1,26 @@\n+! { dg-do run }\n+!\n+! Test the fix for PR100110, in which 'obj' was not being initialized.\n+!\n+! Contributed by Xiao Liu  <xiao.liu@compiler-dev.com>\n+!\n+program p\n+  implicit none\n+  type t(n)\n+    integer, len :: n\n+    integer :: arr(n, n)\n+  end type\n+\n+  type(t(2)) :: obj\n+\n+  obj%arr = reshape ([1,2,3,4],[2,2])\n+  if (obj%n .ne. 2) stop 1\n+  if (any (shape(obj%arr) .ne. [2,2])) stop 2\n+  call test()\n+contains\n+  subroutine test()\n+    if (obj%n .ne. 2) stop 3\n+    if (any (shape(obj%arr) .ne. [2,2])) stop 4\n+    if (any (reshape (obj%arr, [4]) .ne. [1,2,3,4])) stop 5\n+  end subroutine\n+end program"}]}