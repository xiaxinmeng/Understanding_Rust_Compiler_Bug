{"sha": "f7c8fb3f491c56f5b8b8fd04f9325149cd250ee8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjdjOGZiM2Y0OTFjNTZmNWI4YjhmZDA0ZjkzMjUxNDljZDI1MGVlOA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-12-30T11:09:58Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-12-30T11:09:58Z"}, "message": "(c_sizeof, c_sizeof_nowarn, c_size_in_bytes): Call force_fit_type with\nend result.\n\nFrom-SVN: r2996", "tree": {"sha": "180fe8d1d6fe29130bddb4c2d6578bda4e322bad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/180fe8d1d6fe29130bddb4c2d6578bda4e322bad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7c8fb3f491c56f5b8b8fd04f9325149cd250ee8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7c8fb3f491c56f5b8b8fd04f9325149cd250ee8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7c8fb3f491c56f5b8b8fd04f9325149cd250ee8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7c8fb3f491c56f5b8b8fd04f9325149cd250ee8/comments", "author": null, "committer": null, "parents": [{"sha": "91d33e36a03b16ef089e852a721a59b65bc8373d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91d33e36a03b16ef089e852a721a59b65bc8373d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91d33e36a03b16ef089e852a721a59b65bc8373d"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "ec149be22e45c449b0630cf8de773424096b29a0", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7c8fb3f491c56f5b8b8fd04f9325149cd250ee8/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7c8fb3f491c56f5b8b8fd04f9325149cd250ee8/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=f7c8fb3f491c56f5b8b8fd04f9325149cd250ee8", "patch": "@@ -702,6 +702,7 @@ c_sizeof (type)\n      tree type;\n {\n   enum tree_code code = TREE_CODE (type);\n+  tree t;\n \n   if (code == FUNCTION_TYPE)\n     {\n@@ -724,15 +725,18 @@ c_sizeof (type)\n     }\n \n   /* Convert in case a char is more than one unit.  */\n-  return size_binop (CEIL_DIV_EXPR, TYPE_SIZE (type), \n-\t\t     size_int (TYPE_PRECISION (char_type_node)));\n+  t = size_binop (CEIL_DIV_EXPR, TYPE_SIZE (type), \n+\t\t  size_int (TYPE_PRECISION (char_type_node)));\n+  force_fit_type (t);\n+  return t;\n }\n \n tree\n c_sizeof_nowarn (type)\n      tree type;\n {\n   enum tree_code code = TREE_CODE (type);\n+  tree t;\n \n   if (code == FUNCTION_TYPE\n       || code == VOID_TYPE\n@@ -742,8 +746,10 @@ c_sizeof_nowarn (type)\n     return size_int (0);\n \n   /* Convert in case a char is more than one unit.  */\n-  return size_binop (CEIL_DIV_EXPR, TYPE_SIZE (type), \n-\t\t     size_int (TYPE_PRECISION (char_type_node)));\n+  t = size_binop (CEIL_DIV_EXPR, TYPE_SIZE (type), \n+\t\t  size_int (TYPE_PRECISION (char_type_node)));\n+  force_fit_type (t);\n+  return t;\n }\n \n /* Compute the size to increment a pointer by.  */\n@@ -753,6 +759,7 @@ c_size_in_bytes (type)\n      tree type;\n {\n   enum tree_code code = TREE_CODE (type);\n+  tree t;\n \n   if (code == FUNCTION_TYPE)\n     return size_int (1);\n@@ -767,8 +774,10 @@ c_size_in_bytes (type)\n     }\n \n   /* Convert in case a char is more than one unit.  */\n-  return size_binop (CEIL_DIV_EXPR, TYPE_SIZE (type), \n+  t = size_binop (CEIL_DIV_EXPR, TYPE_SIZE (type), \n \t\t     size_int (BITS_PER_UNIT));\n+  force_fit_type (t);\n+  return t;\n }\n \n /* Implement the __alignof keyword: Return the minimum required"}]}