{"sha": "e237f9f31d463d7a4616b70519f5bc6eb38750e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTIzN2Y5ZjMxZDQ2M2Q3YTQ2MTZiNzA1MTlmNWJjNmViMzg3NTBlNQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2018-11-04T19:22:50Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2018-11-04T19:22:50Z"}, "message": "re PR c++/58372 (internal compiler error: ix86_compute_frame_layout)\n\n\tPR middle-end/58372\n\t* cfgexpand.c (pass_expand::execute): Move the call to\n\tfinish_eh_generation in front of the call to expand_stack_alignment.\n\ntestsuite/ChangeLog:\n\n\tPR middle-end/58372\n\t* g++.target/i386/pr58372.C: New test.\n\nFrom-SVN: r265776", "tree": {"sha": "5bfbe69edfd78aeea1ace410d65180a57f2ab3a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5bfbe69edfd78aeea1ace410d65180a57f2ab3a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e237f9f31d463d7a4616b70519f5bc6eb38750e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e237f9f31d463d7a4616b70519f5bc6eb38750e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e237f9f31d463d7a4616b70519f5bc6eb38750e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e237f9f31d463d7a4616b70519f5bc6eb38750e5/comments", "author": null, "committer": null, "parents": [{"sha": "2901f42f4bd75cf7f3fd00efc1b4f0719bc9b728", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2901f42f4bd75cf7f3fd00efc1b4f0719bc9b728", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2901f42f4bd75cf7f3fd00efc1b4f0719bc9b728"}], "stats": {"total": 39, "additions": 30, "deletions": 9}, "files": [{"sha": "4b9ce0fd2090c5cce9db7daa16b866bcf967c5b3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e237f9f31d463d7a4616b70519f5bc6eb38750e5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e237f9f31d463d7a4616b70519f5bc6eb38750e5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e237f9f31d463d7a4616b70519f5bc6eb38750e5", "patch": "@@ -1,3 +1,9 @@\n+2018-11-04  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR middle-end/58372\n+\t* cfgexpand.c (pass_expand::execute): Move the call to\n+\tfinish_eh_generation in front of the call to expand_stack_alignment.\n+\n 2018-11-04  Venkataramanan Kumar <venkataramanan.kumar@amd.com>\n \n \t* common/config/i386/i386-common.c (processor_alias_table): Add"}, {"sha": "672fc57687c871c6e86a18fc703bff24cb33399e", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e237f9f31d463d7a4616b70519f5bc6eb38750e5/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e237f9f31d463d7a4616b70519f5bc6eb38750e5/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=e237f9f31d463d7a4616b70519f5bc6eb38750e5", "patch": "@@ -6510,19 +6510,21 @@ pass_expand::execute (function *fun)\n   find_many_sub_basic_blocks (blocks);\n   purge_all_dead_edges ();\n \n+  /* After initial rtl generation, call back to finish generating\n+     exception support code.  We need to do this before cleaning up\n+     the CFG as the code does not expect dead landing pads.  */\n+  if (fun->eh->region_tree != NULL)\n+    finish_eh_generation ();\n+\n+  /* Call expand_stack_alignment after finishing all\n+     updates to crtl->preferred_stack_boundary.  */\n   expand_stack_alignment ();\n \n   /* Fixup REG_EQUIV notes in the prologue if there are tailcalls in this\n      function.  */\n   if (crtl->tail_call_emit)\n     fixup_tail_calls ();\n \n-  /* After initial rtl generation, call back to finish generating\n-     exception support code.  We need to do this before cleaning up\n-     the CFG as the code does not expect dead landing pads.  */\n-  if (fun->eh->region_tree != NULL)\n-    finish_eh_generation ();\n-\n   /* BB subdivision may have created basic blocks that are are only reachable\n      from unlikely bbs but not marked as such in the profile.  */\n   if (optimize)"}, {"sha": "9bb5eb012cb937a5c29e98f498056c4ef667a4c1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e237f9f31d463d7a4616b70519f5bc6eb38750e5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e237f9f31d463d7a4616b70519f5bc6eb38750e5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e237f9f31d463d7a4616b70519f5bc6eb38750e5", "patch": "@@ -1,9 +1,13 @@\n+2018-11-04  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR middle-end/58372\n+\t* g++.target/i386/pr58372.C: New test.\n+\n 2018-11-03  Sandra Loosemore  <sandra@codesourcery.com>\n \n \tPR target/87079\n-\n-\t* gcc.target/nios2/pr87079-1.c: New.\t\n-\t* gcc.target/nios2/pr87079-2.c: New.\t\n+\t* gcc.target/nios2/pr87079-1.c: New.\n+\t* gcc.target/nios2/pr87079-2.c: New.\n \n 2018-11-02  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n "}, {"sha": "82e1b7f0ec9999043a41c85c3c175eaaa609b87a", "filename": "gcc/testsuite/g++.target/i386/pr58372.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e237f9f31d463d7a4616b70519f5bc6eb38750e5/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Fpr58372.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e237f9f31d463d7a4616b70519f5bc6eb38750e5/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Fpr58372.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Fpr58372.C?ref=e237f9f31d463d7a4616b70519f5bc6eb38750e5", "patch": "@@ -0,0 +1,9 @@\n+/* PR target/58372 */\n+/* { dg-do compile { target c++14 } } */\n+/* { dg-options \"-O2\" } */\n+\n+__attribute__ ((__target__ (\"rdrnd\")))\n+void f (unsigned int *b) noexcept\n+{\n+  __builtin_ia32_rdrand32_step (b);\n+}"}]}