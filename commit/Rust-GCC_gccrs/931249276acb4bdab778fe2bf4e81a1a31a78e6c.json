{"sha": "931249276acb4bdab778fe2bf4e81a1a31a78e6c", "node_id": "C_kwDOANBUbNoAKDkzMTI0OTI3NmFjYjRiZGFiNzc4ZmUyYmY0ZTgxYTFhMzFhNzhlNmM", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-05-28T06:26:57Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-05-28T06:30:15Z"}, "message": "openmp: Adjust diagnostics about same variable in link and to/enter clauses\n\nOn Fri, May 27, 2022 at 04:52:17PM +0200, Tobias Burnus wrote:\n> The 'TO'/'ENTER' usage is first stored in a linked list \u2013 and\n> then as attribute to the symbol. I am not sure how to handle it best.\n\nThis reminds me I've left the C/C++ FE diagnostics about mixing link and\nto/enter on the same variable in separate directives as is, so it always\ntalked about mixing link and to clauses.\n\nThis patch adjusts it, so that if link is first, it talks about the\nclause actually used and if link is later, uses to or enter together\nin the wording.\n\n2022-05-28  Jakub Jelinek  <jakub@redhat.com>\n\ngcc/c/\n\t* c-parser.cc (c_parser_omp_declare_target): If OMP_CLAUSE_LINK was\n\tseen first, use \"%<to%>\" or \"%<enter%>\" depending on\n\tOMP_CLAUSE_ENTER_TO of the current clause, otherwise use\n\t\"%<to%> or %<enter%>\" wording.\ngcc/cp/\n\t* parser.cc (handle_omp_declare_target_clause): If OMP_CLAUSE_LINK was\n\tseen first, use \"%<to%>\" or \"%<enter%>\" depending on\n\tOMP_CLAUSE_ENTER_TO of the current clause, otherwise use\n\t\"%<to%> or %<enter%>\" wording.\ngcc/testsuite/\n\t* c-c++-common/gomp/declare-target-2.c: Add further tests for mixing of\n\tlink and to/enter clauses on separate directives.", "tree": {"sha": "86f20f2d4adb4dbb9986d43f1025092463c00105", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86f20f2d4adb4dbb9986d43f1025092463c00105"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/931249276acb4bdab778fe2bf4e81a1a31a78e6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/931249276acb4bdab778fe2bf4e81a1a31a78e6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/931249276acb4bdab778fe2bf4e81a1a31a78e6c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/931249276acb4bdab778fe2bf4e81a1a31a78e6c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "221acd67ca50f8f069037e034a3250f13d75a9f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/221acd67ca50f8f069037e034a3250f13d75a9f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/221acd67ca50f8f069037e034a3250f13d75a9f5"}], "stats": {"total": 39, "additions": 32, "deletions": 7}, "files": [{"sha": "7cc4d93cf87b3ce8db8e402eca266d6df228e83c", "filename": "gcc/c/c-parser.cc", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/931249276acb4bdab778fe2bf4e81a1a31a78e6c/gcc%2Fc%2Fc-parser.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/931249276acb4bdab778fe2bf4e81a1a31a78e6c/gcc%2Fc%2Fc-parser.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.cc?ref=931249276acb4bdab778fe2bf4e81a1a31a78e6c", "patch": "@@ -22067,9 +22067,14 @@ c_parser_omp_declare_target (c_parser *parser)\n \tid = get_identifier (\"omp declare target\");\n       if (at2)\n \t{\n-\t  error_at (OMP_CLAUSE_LOCATION (c),\n-\t\t    \"%qD specified both in declare target %<link%> and %<to%>\"\n-\t\t    \" clauses\", t);\n+\t  if (OMP_CLAUSE_CODE (c) == OMP_CLAUSE_ENTER)\n+\t    error_at (OMP_CLAUSE_LOCATION (c),\n+\t\t      \"%qD specified both in declare target %<link%> and %qs\"\n+\t\t      \" clauses\", t, OMP_CLAUSE_ENTER_TO (c) ? \"to\" : \"enter\");\n+\t  else\n+\t    error_at (OMP_CLAUSE_LOCATION (c),\n+\t\t      \"%qD specified both in declare target %<link%> and \"\n+\t\t      \"%<to%> or %<enter%> clauses\", t);\n \t  continue;\n \t}\n       if (!at1)"}, {"sha": "b3a6c9ab6e39289ef1ed2e5652997dd541294fe6", "filename": "gcc/cp/parser.cc", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/931249276acb4bdab778fe2bf4e81a1a31a78e6c/gcc%2Fcp%2Fparser.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/931249276acb4bdab778fe2bf4e81a1a31a78e6c/gcc%2Fcp%2Fparser.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.cc?ref=931249276acb4bdab778fe2bf4e81a1a31a78e6c", "patch": "@@ -45992,9 +45992,14 @@ handle_omp_declare_target_clause (tree c, tree t, int device_type)\n     id = get_identifier (\"omp declare target\");\n   if (at2)\n     {\n-      error_at (OMP_CLAUSE_LOCATION (c),\n-\t\t\"%qD specified both in declare target %<link%> and %<to%>\"\n-\t\t\" clauses\", t);\n+      if (OMP_CLAUSE_CODE (c) == OMP_CLAUSE_ENTER)\n+\terror_at (OMP_CLAUSE_LOCATION (c),\n+\t\t  \"%qD specified both in declare target %<link%> and %qs\"\n+\t\t  \" clauses\", t, OMP_CLAUSE_ENTER_TO (c) ? \"to\" : \"enter\");\n+      else\n+\terror_at (OMP_CLAUSE_LOCATION (c),\n+\t\t  \"%qD specified both in declare target %<link%> and \"\n+\t\t  \"%<to%> or %<enter%> clauses\", t);\n       return false;\n     }\n   if (!at1)"}, {"sha": "97602dc799240f8928675625efb22405b9e6689e", "filename": "gcc/testsuite/c-c++-common/gomp/declare-target-2.c", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/931249276acb4bdab778fe2bf4e81a1a31a78e6c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fdeclare-target-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/931249276acb4bdab778fe2bf4e81a1a31a78e6c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fdeclare-target-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fdeclare-target-2.c?ref=931249276acb4bdab778fe2bf4e81a1a31a78e6c", "patch": "@@ -10,7 +10,22 @@ int b;\n #pragma omp declare target enter (b) link (b)\t/* { dg-error \"appears more than once on the same .declare target. directive\" } */\n int c;\n #pragma omp declare target (c)\n-#pragma omp declare target link (c)\t\t/* { dg-error \"specified both in declare target\" } */\n+#pragma omp declare target link (c)\t\t/* { dg-error \"specified both in declare target 'link' and 'to' or 'enter' clauses\" } */\n+int c2;\n+#pragma omp declare target to (c2)\n+#pragma omp declare target link (c2)\t\t/* { dg-error \"specified both in declare target 'link' and 'to' or 'enter' clauses\" } */\n+int c3;\n+#pragma omp declare target enter (c3)\n+#pragma omp declare target link (c3)\t\t/* { dg-error \"specified both in declare target 'link' and 'to' or 'enter' clauses\" } */\n+int c4;\n+#pragma omp declare target link (c4)\n+#pragma omp declare target (c4)\t\t\t/* { dg-error \"specified both in declare target 'link' and 'enter' clauses\" } */\n+int c5;\n+#pragma omp declare target link (c5)\n+#pragma omp declare target to (c5)\t\t/* { dg-error \"specified both in declare target 'link' and 'to' clauses\" } */\n+int c6;\n+#pragma omp declare target link (c6)\n+#pragma omp declare target enter (c6)\t\t/* { dg-error \"specified both in declare target 'link' and 'enter' clauses\" } */\n int foo (void);\n #pragma omp declare target link (foo)\t\t/* { dg-error \"is not a variable in clause\" } */\n struct S;"}]}