{"sha": "510125d2272175f47b26227fbe9b8c8c5abfd988", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTEwMTI1ZDIyNzIxNzVmNDdiMjYyMjdmYmU5YjhjOGM1YWJmZDk4OA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-07-10T18:06:46Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-07-10T18:06:46Z"}, "message": "expr: Move reduce_bit_field target mode check [PR96151]\n\nIn some cases, expand_expr_real_2 prefers to use the mode of the\ncaller-suggested target instead of the mode of the expression when\npassing values to reduce_to_bit_field_precision.  E.g.:\n\n      else if (target == 0)\n        op0 = convert_to_mode (mode, op0,\n                               TYPE_UNSIGNED (TREE_TYPE\n                                              (treeop0)));\n      else\n        {\n          convert_move (target, op0,\n                        TYPE_UNSIGNED (TREE_TYPE (treeop0)));\n          op0 = target;\n        }\n\nwhere \u201cop0\u201d might not have \u201cmode\u201d for the \u201celse\u201d branch,\nbut does for all the others.\n\nreduce_to_bit_field_precision discards the suggested target if it\nhas the wrong mode.  This patch moves that to expand_expr_real_2\ninstead (conditional on reduce_bit_field).\n\ngcc/\n\tPR middle-end/96151\n\t* expr.c (expand_expr_real_2): When reducing bit fields,\n\tclear the target if it has a different mode from the expression.\n\t(reduce_to_bit_field_precision): Don't do that here.  Instead\n\tassert that the target already has the correct mode.", "tree": {"sha": "c728707640fde946dd6dc9c70d7b624799a1f2ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c728707640fde946dd6dc9c70d7b624799a1f2ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/510125d2272175f47b26227fbe9b8c8c5abfd988", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/510125d2272175f47b26227fbe9b8c8c5abfd988", "html_url": "https://github.com/Rust-GCC/gccrs/commit/510125d2272175f47b26227fbe9b8c8c5abfd988", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/510125d2272175f47b26227fbe9b8c8c5abfd988/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "efe99cca78215e339ba79f0a900a896b4c0a3d36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efe99cca78215e339ba79f0a900a896b4c0a3d36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efe99cca78215e339ba79f0a900a896b4c0a3d36"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "c7c3e9fd655064089c315d441da89b66d96263ec", "filename": "gcc/expr.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/510125d2272175f47b26227fbe9b8c8c5abfd988/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/510125d2272175f47b26227fbe9b8c8c5abfd988/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=510125d2272175f47b26227fbe9b8c8c5abfd988", "patch": "@@ -8664,7 +8664,9 @@ expand_expr_real_2 (sepops ops, rtx target, machine_mode tmode,\n   reduce_bit_field = (INTEGRAL_TYPE_P (type)\n \t\t      && !type_has_mode_precision_p (type));\n \n-  if (reduce_bit_field && modifier == EXPAND_STACK_PARM)\n+  if (reduce_bit_field\n+      && (modifier == EXPAND_STACK_PARM\n+\t  || (target && GET_MODE (target) != mode)))\n     target = 0;\n \n   /* Use subtarget as the target for operand 0 of a binary operation.  */\n@@ -11527,9 +11529,8 @@ reduce_to_bit_field_precision (rtx exp, rtx target, tree type)\n {\n   scalar_int_mode mode = SCALAR_INT_TYPE_MODE (type);\n   HOST_WIDE_INT prec = TYPE_PRECISION (type);\n-  gcc_assert (GET_MODE (exp) == VOIDmode || GET_MODE (exp) == mode);\n-  if (target && GET_MODE (target) != mode)\n-    target = 0;\n+  gcc_assert ((GET_MODE (exp) == VOIDmode || GET_MODE (exp) == mode)\n+\t      && (!target || GET_MODE (target) == mode));\n \n   /* For constant values, reduce using wide_int_to_tree. */\n   if (poly_int_rtx_p (exp))"}]}