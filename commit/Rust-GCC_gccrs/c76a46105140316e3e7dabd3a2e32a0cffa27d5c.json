{"sha": "c76a46105140316e3e7dabd3a2e32a0cffa27d5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzc2YTQ2MTA1MTQwMzE2ZTNlN2RhYmQzYTJlMzJhMGNmZmEyN2Q1Yw==", "commit": {"author": {"name": "Trevor Saunders", "email": "tbsaunde+gcc@tbsaunde.org", "date": "2015-05-24T00:32:43Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2015-05-24T00:32:43Z"}, "message": "always define HAVE_memory_barrier\n\ngcc/ChangeLog:\n\n2015-05-23  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* defaults.h (gen_memory_barrier): New function.\n\t(HAVE_memory_barrier): Add default value.\n\t* optabs.c: Adjust.\n\nFrom-SVN: r223621", "tree": {"sha": "8ccf3e5fd16e049367c8571fb4ac0aadef84ce3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ccf3e5fd16e049367c8571fb4ac0aadef84ce3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c76a46105140316e3e7dabd3a2e32a0cffa27d5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c76a46105140316e3e7dabd3a2e32a0cffa27d5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c76a46105140316e3e7dabd3a2e32a0cffa27d5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c76a46105140316e3e7dabd3a2e32a0cffa27d5c/comments", "author": null, "committer": null, "parents": [{"sha": "fcb922a9c6f3db27150de3a3998670fb3be4007f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcb922a9c6f3db27150de3a3998670fb3be4007f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcb922a9c6f3db27150de3a3998670fb3be4007f"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "cd0358a976ed3770e9b31c0f277d9ed7efa4bae9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c76a46105140316e3e7dabd3a2e32a0cffa27d5c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c76a46105140316e3e7dabd3a2e32a0cffa27d5c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c76a46105140316e3e7dabd3a2e32a0cffa27d5c", "patch": "@@ -1,3 +1,9 @@\n+2015-05-23  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* defaults.h (gen_memory_barrier): New function.\n+\t(HAVE_memory_barrier): Add default value.\n+\t* optabs.c: Adjust.\n+\n 2015-05-23  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* defaults.h (gen_mem_thread_fence): New function."}, {"sha": "a7455e59ec9bbe9067f4532a89c5cdccb039d096", "filename": "gcc/defaults.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c76a46105140316e3e7dabd3a2e32a0cffa27d5c/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c76a46105140316e3e7dabd3a2e32a0cffa27d5c/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=c76a46105140316e3e7dabd3a2e32a0cffa27d5c", "patch": "@@ -1454,6 +1454,16 @@ gen_mem_thread_fence (rtx)\n }\n #endif\n \n+#ifndef HAVE_memory_barrier\n+#define HAVE_memory_barrier 0\n+static inline rtx\n+gen_memory_barrier ()\n+{\n+  gcc_unreachable ();\n+  return NULL;\n+}\n+#endif\n+\n #endif /* GCC_INSN_FLAGS_H  */\n \n #endif  /* ! GCC_DEFAULTS_H */"}, {"sha": "d3c1d21d4454af491eb465a9097503c771f26d37", "filename": "gcc/optabs.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c76a46105140316e3e7dabd3a2e32a0cffa27d5c/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c76a46105140316e3e7dabd3a2e32a0cffa27d5c/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=c76a46105140316e3e7dabd3a2e32a0cffa27d5c", "patch": "@@ -7589,11 +7589,6 @@ expand_asm_memory_barrier (void)\n /* This routine will either emit the mem_thread_fence pattern or issue a \n    sync_synchronize to generate a fence for memory model MEMMODEL.  */\n \n-#ifndef HAVE_memory_barrier\n-# define HAVE_memory_barrier 0\n-# define gen_memory_barrier()  (gcc_unreachable (), NULL_RTX)\n-#endif\n-\n void\n expand_mem_thread_fence (enum memmodel model)\n {"}]}