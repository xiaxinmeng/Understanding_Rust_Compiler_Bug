{"sha": "41fd66597107279af9794ef7570c0fcca80e8348", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFmZDY2NTk3MTA3Mjc5YWY5Nzk0ZWY3NTcwYzBmY2NhODBlODM0OA==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2013-11-20T22:18:55Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2013-11-20T22:18:55Z"}, "message": "re PR libfortran/49024 (REAL*16 ERFC_SCALED inaccuracy)\n\n\tPR libfortran/49024\n\n\t* intrinsics/erfc_scaled.c (erfc_scaled_r16): New function.\n\t* intrinsics/erfc_scaled_inc.c: Do not provide quadruple\n\tprecision variant.\n\n\t* gfortran.dg/erf_3.F90: New file.\n\nFrom-SVN: r205151", "tree": {"sha": "9e450558efefb68f1ce323672b0891b1418ada2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e450558efefb68f1ce323672b0891b1418ada2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41fd66597107279af9794ef7570c0fcca80e8348", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41fd66597107279af9794ef7570c0fcca80e8348", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41fd66597107279af9794ef7570c0fcca80e8348", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41fd66597107279af9794ef7570c0fcca80e8348/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27b097f8d7c060abbbc76596725d96a069fca575", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27b097f8d7c060abbbc76596725d96a069fca575", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27b097f8d7c060abbbc76596725d96a069fca575"}], "stats": {"total": 114, "additions": 108, "deletions": 6}, "files": [{"sha": "694fb831fdaa8a1f98f60121c27fc5f8e4ff89d8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41fd66597107279af9794ef7570c0fcca80e8348/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41fd66597107279af9794ef7570c0fcca80e8348/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=41fd66597107279af9794ef7570c0fcca80e8348", "patch": "@@ -1,3 +1,8 @@\n+2013-11-20  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR libfortran/49024\n+\t* gfortran.dg/erf_3.F90: New file.\n+\n 2013-11-20  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* gcc.target/powerpc/pr48258-1.c: Skip for little endian."}, {"sha": "fcff41f38c2e8d57fe7960caffdaf9864b4feb4a", "filename": "gcc/testsuite/gfortran.dg/erf_3.F90", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41fd66597107279af9794ef7570c0fcca80e8348/gcc%2Ftestsuite%2Fgfortran.dg%2Ferf_3.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41fd66597107279af9794ef7570c0fcca80e8348/gcc%2Ftestsuite%2Fgfortran.dg%2Ferf_3.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ferf_3.F90?ref=41fd66597107279af9794ef7570c0fcca80e8348", "patch": "@@ -0,0 +1,44 @@\n+! { dg-do run }\n+! { dg-options \"-fno-range-check -ffree-line-length-none -O0\" }\n+! { dg-add-options ieee }\n+!\n+! Check that simplification functions and runtime library agree on ERF,\n+! ERFC and ERFC_SCALED, for quadruple-precision.\n+\n+program test\n+  implicit none\n+\n+  real(kind=16) :: x16\n+\n+#define CHECK(a) \\\n+  x16 = a ; \\\n+  call check(erf(real(a,kind=16)), erf(x16)) ; \\\n+  call check(erfc(real(a,kind=16)), erfc(x16)) ; \\\n+  call check(erfc_scaled(real(a,kind=16)), erfc_scaled(x16))\n+\n+  CHECK(0.0)\n+  CHECK(0.9)\n+  CHECK(1.9)\n+  CHECK(10.)\n+  CHECK(11.)\n+  CHECK(12.)\n+  CHECK(13.)\n+  CHECK(14.)\n+  CHECK(49.)\n+  CHECK(190.)\n+\n+  CHECK(-0.0)\n+  CHECK(-0.9)\n+  CHECK(-1.9)\n+  CHECK(-19.)\n+  CHECK(-190.)\n+\n+contains\n+\n+  subroutine check (a, b)\n+    real(kind=16), intent(in) :: a, b\n+    print *, abs(a-b) / spacing(a)\n+    if (abs(a - b) > 10 * spacing(a)) call abort\n+  end subroutine\n+\n+end program test"}, {"sha": "eeeaa04b3c3ca389e8ce39c7b5476f76ba444a6d", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41fd66597107279af9794ef7570c0fcca80e8348/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41fd66597107279af9794ef7570c0fcca80e8348/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=41fd66597107279af9794ef7570c0fcca80e8348", "patch": "@@ -1,3 +1,10 @@\n+2013-11-20  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR libfortran/49024\n+\t* intrinsics/erfc_scaled.c (erfc_scaled_r16): New function.\n+\t* intrinsics/erfc_scaled_inc.c: Do not provide quadruple\n+\tprecision variant.\n+\n 2013-11-18  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR libfortran/51828"}, {"sha": "1f8c778eb651b638f7b1a3b5614966537baca19c", "filename": "libgfortran/intrinsics/erfc_scaled.c", "status": "modified", "additions": 52, "deletions": 1, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41fd66597107279af9794ef7570c0fcca80e8348/libgfortran%2Fintrinsics%2Ferfc_scaled.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41fd66597107279af9794ef7570c0fcca80e8348/libgfortran%2Fintrinsics%2Ferfc_scaled.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Ferfc_scaled.c?ref=41fd66597107279af9794ef7570c0fcca80e8348", "patch": "@@ -45,8 +45,59 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"erfc_scaled_inc.c\"\n #endif\n \n-#ifdef HAVE_GFC_REAL_16\n+#if defined(HAVE_GFC_REAL_16) && defined(GFC_REAL_16_IS_LONG_DOUBLE)\n #undef KIND\n #define KIND 16\n #include \"erfc_scaled_inc.c\"\n #endif\n+\n+\n+/* For quadruple-precision (__float128), netlib's implementation is\n+   not accurate enough.  We provide another one.  */\n+\n+\n+extern GFC_REAL_16 erfc_scaled_r16 (GFC_REAL_16);\n+export_proto(erfc_scaled_r16);\n+\n+\n+GFC_REAL_16\n+erfc_scaled_r16 (GFC_REAL_16 x)\n+{\n+  if (x < -106.566990228185312813205074546585730Q)\n+    {\n+      return __builtin_infq();\n+    }\n+  if (x < 12)\n+    {\n+      /* Compute directly as ERFC_SCALED(x) = ERFC(x) * EXP(X**2).\n+\t This is not perfect, but much better than netlib.  */\n+      return erfcq(x) * expq(x * x);\n+    }\n+  else\n+    {\n+      /* Calculate ERFC_SCALED(x) using a power series in 1/x:\n+\t ERFC_SCALED(x) = 1 / (x * sqrt(pi))\n+\t\t\t * (1 + Sum_n (-1)**n * (1 * 3 * 5 * ... * (2n-1))\n+\t\t\t\t\t      / (2 * x**2)**n)\n+       */\n+      GFC_REAL_16 sum = 0, oldsum;\n+      GFC_REAL_16 inv2x2 = 1 / (2 * x * x);\n+      GFC_REAL_16 fac = 1;\n+      int n = 1;\n+\n+      while (n < 200)\n+\t{\n+\t  fac *= - (2*n - 1) * inv2x2;\n+\t  oldsum = sum;\n+\t  sum += fac;\n+\n+\t  if (sum == oldsum)\n+\t    break;\n+\n+\t  n++;\n+\t}\n+\n+      return (1 + sum) / x * (M_2_SQRTPIq / 2);\n+    }\n+}\n+"}, {"sha": "107d91a6c9db2c2c03cfcab637901ba349bcf3ae", "filename": "libgfortran/intrinsics/erfc_scaled_inc.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41fd66597107279af9794ef7570c0fcca80e8348/libgfortran%2Fintrinsics%2Ferfc_scaled_inc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41fd66597107279af9794ef7570c0fcca80e8348/libgfortran%2Fintrinsics%2Ferfc_scaled_inc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Ferfc_scaled_inc.c?ref=41fd66597107279af9794ef7570c0fcca80e8348", "patch": "@@ -48,11 +48,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #  define TRUNC(x) truncl(x)\n # endif\n \n-#elif (KIND == 16 && defined(GFC_REAL_16_IS_FLOAT128))\n-\n-#  define EXP(x) expq(x)\n-#  define TRUNC(x) truncq(x)\n-\n #else\n \n # error \"What exactly is it that you want me to do?\""}]}