{"sha": "8857a1e350cf34c4ac06429ec4cb97228489dd07", "node_id": "C_kwDOANBUbNoAKDg4NTdhMWUzNTBjZjM0YzRhYzA2NDI5ZWM0Y2I5NzIyODQ4OWRkMDc", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-11-07T21:18:24Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-11-09T08:00:36Z"}, "message": "sphinx: sync latest changes\n\ngcc/ChangeLog:\n\n\t* doc/gccint/target-macros/stack-layout-and-calling-conventions/passing-arguments-in-registers.rst:\n\tPort to RST.\n\t* doc/gccint/target-macros/storage-layout.rst: Likewise.\n\t* doc/gcc/gcc-command-options/machine-dependent-options/x86-options.rst: Sync with master.\n\t* doc/gcc/gcc-command-options/option-summary.rst: Likewise.", "tree": {"sha": "32b0ff0910906c7e709b1d2142cb656587469e51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32b0ff0910906c7e709b1d2142cb656587469e51"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8857a1e350cf34c4ac06429ec4cb97228489dd07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8857a1e350cf34c4ac06429ec4cb97228489dd07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8857a1e350cf34c4ac06429ec4cb97228489dd07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8857a1e350cf34c4ac06429ec4cb97228489dd07/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66f55038a4238ce5fb1f198feb552653eb472d61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66f55038a4238ce5fb1f198feb552653eb472d61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66f55038a4238ce5fb1f198feb552653eb472d61"}], "stats": {"total": 18, "additions": 7, "deletions": 11}, "files": [{"sha": "6f015e9e96a3eb510312c40efdf0259c9f539d8e", "filename": "gcc/doc/gcc/gcc-command-options/machine-dependent-options/x86-options.rst", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8857a1e350cf34c4ac06429ec4cb97228489dd07/gcc%2Fdoc%2Fgcc%2Fgcc-command-options%2Fmachine-dependent-options%2Fx86-options.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8857a1e350cf34c4ac06429ec4cb97228489dd07/gcc%2Fdoc%2Fgcc%2Fgcc-command-options%2Fmachine-dependent-options%2Fx86-options.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgcc%2Fgcc-command-options%2Fmachine-dependent-options%2Fx86-options.rst?ref=8857a1e350cf34c4ac06429ec4cb97228489dd07", "patch": "@@ -1457,10 +1457,6 @@ These :samp:`-m` options are defined for the x86 family of computers.\n   cachline bouncing when and works for all atomic logic fetch builtins\n   that generates compare and swap loop.\n \n-.. option:: -mprefer-remote-atomic\n-\n-  Prefer use remote atomic insn for atomic operations.\n-\n .. option:: -mindirect-branch={choice}\n \n   Convert indirect call and jump with :samp:`{choice}`.  The default is\n@@ -1617,4 +1613,4 @@ on x86-64 processors in 64-bit environments.\n \n .. option:: -mdirect-extern-access\n \n-  Default setting; overrides :option:`-mno-direct-extern-access`.\n\\ No newline at end of file\n+  Default setting; overrides :option:`-mno-direct-extern-access`."}, {"sha": "d068f98feac27d95f1402a530a78b553d623d2e9", "filename": "gcc/doc/gcc/gcc-command-options/option-summary.rst", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8857a1e350cf34c4ac06429ec4cb97228489dd07/gcc%2Fdoc%2Fgcc%2Fgcc-command-options%2Foption-summary.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8857a1e350cf34c4ac06429ec4cb97228489dd07/gcc%2Fdoc%2Fgcc%2Fgcc-command-options%2Foption-summary.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgcc%2Fgcc-command-options%2Foption-summary.rst?ref=8857a1e350cf34c4ac06429ec4cb97228489dd07", "patch": "@@ -1466,7 +1466,7 @@ in the following sections.\n   :option:`-mrdseed`  :option:`-msgx` :option:`-mavx512vp2intersect` :option:`-mserialize` :option:`-mtsxldtrk` |gol|\n   :option:`-mamx-tile`  :option:`-mamx-int8`  :option:`-mamx-bf16` :option:`-muintr` :option:`-mhreset` :option:`-mavxvnni` |gol|\n   :option:`-mavx512fp16` :option:`-mavxifma` :option:`-mavxvnniint8` :option:`-mavxneconvert` :option:`-mcmpccxadd` :option:`-mamx-fp16` |gol|\n-  :option:`-mprefetchi` :option:`-mraoint` :option:`-mprefer-remote-atomic`\n+  :option:`-mprefetchi` :option:`-mraoint` |gol|\n   :option:`-mcldemote`  :option:`-mms-bitfields`  :option:`-mno-align-stringops`  :option:`-minline-all-stringops` |gol|\n   :option:`-minline-stringops-dynamically`  :option:`-mstringop-strategy=alg` |gol|\n   :option:`-mkl` :option:`-mwidekl` |gol|\n@@ -1524,4 +1524,4 @@ in the following sections.\n \n   See :ref:`s-390-and-zseries-options`.\n \n-  .. program:: None\n\\ No newline at end of file\n+  .. program:: None"}, {"sha": "8fce5c3403a4cadce691a7d109bdb2ee5ba86a18", "filename": "gcc/doc/gccint/target-macros/stack-layout-and-calling-conventions/passing-arguments-in-registers.rst", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8857a1e350cf34c4ac06429ec4cb97228489dd07/gcc%2Fdoc%2Fgccint%2Ftarget-macros%2Fstack-layout-and-calling-conventions%2Fpassing-arguments-in-registers.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8857a1e350cf34c4ac06429ec4cb97228489dd07/gcc%2Fdoc%2Fgccint%2Ftarget-macros%2Fstack-layout-and-calling-conventions%2Fpassing-arguments-in-registers.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgccint%2Ftarget-macros%2Fstack-layout-and-calling-conventions%2Fpassing-arguments-in-registers.rst?ref=8857a1e350cf34c4ac06429ec4cb97228489dd07", "patch": "@@ -118,7 +118,7 @@ the stack.\n   argument :samp:`{libname}` exists for symmetry with\n   ``INIT_CUMULATIVE_ARGS``.\n \n-  .. could use \"this macro\" in place of @code{INIT_CUMULATIVE_ARGS}, maybe.\n+  .. could use \"this macro\" in place of ``INIT_CUMULATIVE_ARGS``, maybe.\n \n   .. -mew 5feb93   i switched the order of the sentences.  -mew 10feb93\n "}, {"sha": "7e6b1c978f6d164bf83d6d326d56b72015a634da", "filename": "gcc/doc/gccint/target-macros/storage-layout.rst", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8857a1e350cf34c4ac06429ec4cb97228489dd07/gcc%2Fdoc%2Fgccint%2Ftarget-macros%2Fstorage-layout.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8857a1e350cf34c4ac06429ec4cb97228489dd07/gcc%2Fdoc%2Fgccint%2Ftarget-macros%2Fstorage-layout.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgccint%2Ftarget-macros%2Fstorage-layout.rst?ref=8857a1e350cf34c4ac06429ec4cb97228489dd07", "patch": "@@ -217,10 +217,10 @@ See :ref:`run-time-target`.\n \n   If not defined, the default value is ``STACK_BOUNDARY``.\n \n-  .. todo:: The default should be @code{PREFERRED_STACK_BOUNDARY}.\n+  .. todo:: The default should be ``PREFERRED_STACK_BOUNDARY``.\n     But the fix for PR 32893 indicates that we can only guarantee\n-    maximum stack alignment on stack up to @code{STACK_BOUNDARY}, not\n-    @code{PREFERRED_STACK_BOUNDARY}, if stack alignment isn't supported.\n+    maximum stack alignment on stack up to ``STACK_BOUNDARY``, not\n+    ``PREFERRED_STACK_BOUNDARY``, if stack alignment isn't supported.\n \n .. c:macro:: MAX_OFILE_ALIGNMENT\n "}]}