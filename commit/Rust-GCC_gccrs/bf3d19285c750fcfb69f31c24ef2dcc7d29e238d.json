{"sha": "bf3d19285c750fcfb69f31c24ef2dcc7d29e238d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmYzZDE5Mjg1Yzc1MGZjZmI2OWYzMWMyNGVmMmRjYzdkMjllMjM4ZA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-09-24T14:14:18Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-09-24T14:14:18Z"}, "message": "re PR tree-optimization/54684 (bootstrap broken with --disable-checking)\n\n2012-09-24  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/54684\n\t* tree-ssa-ccp.c (optimize_unreachable): Properly update stmts.\n\n\t* g++.dg/torture/pr54684.C: New testcase.\n\nFrom-SVN: r191667", "tree": {"sha": "c20a1313111ed5f986d8e19344092dc061ea09d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c20a1313111ed5f986d8e19344092dc061ea09d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf3d19285c750fcfb69f31c24ef2dcc7d29e238d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf3d19285c750fcfb69f31c24ef2dcc7d29e238d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf3d19285c750fcfb69f31c24ef2dcc7d29e238d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf3d19285c750fcfb69f31c24ef2dcc7d29e238d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f2167d6813cb3cfb598d0bf95f83cc3ee6685ef5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2167d6813cb3cfb598d0bf95f83cc3ee6685ef5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2167d6813cb3cfb598d0bf95f83cc3ee6685ef5"}], "stats": {"total": 73, "additions": 73, "deletions": 0}, "files": [{"sha": "484df3673ad3b2390898dc1ce6a0a4a70dc4b396", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf3d19285c750fcfb69f31c24ef2dcc7d29e238d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf3d19285c750fcfb69f31c24ef2dcc7d29e238d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bf3d19285c750fcfb69f31c24ef2dcc7d29e238d", "patch": "@@ -1,3 +1,8 @@\n+2012-09-24  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/54684\n+\t* tree-ssa-ccp.c (optimize_unreachable): Properly update stmts.\n+\n 2012-09-24  Marc Glisse  <marc.glisse@inria.fr>\n \n \t* tree-ssa-forwprop.c: Include tree-ssa-propagate.h."}, {"sha": "a0b2bdf0ef6d12caa9e9fcba6a46257cd47e0ea8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf3d19285c750fcfb69f31c24ef2dcc7d29e238d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf3d19285c750fcfb69f31c24ef2dcc7d29e238d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bf3d19285c750fcfb69f31c24ef2dcc7d29e238d", "patch": "@@ -1,3 +1,8 @@\n+2012-09-24  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/54684\n+\t* g++.dg/torture/pr54684.C: New testcase.\n+\n 2012-09-24  Marc Glisse  <marc.glisse@inria.fr>\n \n \t* gcc.dg/tree-ssa/forwprop-23.c: New testcase."}, {"sha": "40c47f3fa2978bac4c80da45f743b23d346ee973", "filename": "gcc/testsuite/g++.dg/torture/pr54684.C", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf3d19285c750fcfb69f31c24ef2dcc7d29e238d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr54684.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf3d19285c750fcfb69f31c24ef2dcc7d29e238d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr54684.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr54684.C?ref=bf3d19285c750fcfb69f31c24ef2dcc7d29e238d", "patch": "@@ -0,0 +1,62 @@\n+// { dg-do compile }\n+\n+typedef union tree_node *tree;\n+typedef union gimple_statement_d *gimple;\n+struct vec_prefix { unsigned num_; };\n+template<typename T> struct vec_t {\n+    unsigned length (void) const;\n+    T &operator[] (unsigned);\n+    vec_prefix prefix_;\n+    T vec_[1];\n+};\n+template<typename T> inline unsigned vec_t<T>::length (void) const {\n+    return prefix_.num_;\n+}\n+template<typename T> T & vec_t<T>::operator[] (unsigned ix) {\n+    ((void)(__builtin_expect(!(ix < prefix_.num_), 0) ? __builtin_unreachable(), 0 : 0));\n+    return vec_[ix];\n+}\n+enum tree_code { PARM_DECL };\n+struct tree_base {\n+    enum tree_code code : 16;\n+    unsigned default_def_flag : 1;\n+};\n+union tree_node {\n+    struct tree_base base;\n+};\n+struct ipa_param_descriptor {\n+    tree decl;\n+    unsigned used : 1;\n+};\n+typedef struct ipa_param_descriptor ipa_param_descriptor_t;\n+struct ipa_node_params {\n+    vec_t<ipa_param_descriptor_t> *descriptors;\n+};\n+static inline int ipa_get_param_count (struct ipa_node_params *info) {\n+    return ((info->descriptors) ? (info->descriptors)->length () : 0);\n+}\n+static inline tree ipa_get_param (struct ipa_node_params *info, int i) {\n+    return ((*(info->descriptors))[i]).decl;\n+}\n+static inline void ipa_set_param_used (struct ipa_node_params *info, int i, bool val) {\n+    ((*(info->descriptors))[i]).used = val;\n+}\n+int ipa_get_param_decl_index (struct ipa_node_params *info, tree ptree)\n+{\n+  int i, count;\n+  count = ipa_get_param_count (info);\n+  for (i = 0; i < count; i++)\n+    if (ipa_get_param (info, i) == ptree)       return i;\n+  return -1;\n+}\n+bool visit_ref_for_mod_analysis (gimple stmt __attribute__ ((__unused__)),\n+\t\t\t\t tree op, void *data)\n+{\n+  struct ipa_node_params *info = (struct ipa_node_params *) data;\n+  if (op && ((enum tree_code) (op)->base.code) == PARM_DECL)\n+    {\n+      int index = ipa_get_param_decl_index (info, op);\n+      ((void)(__builtin_expect(!(index >= 0), 0) ? __builtin_unreachable(), 0 : 0));\n+      ipa_set_param_used (info, index, true);\n+    }\n+}"}, {"sha": "49a4c6fbe28318f715bc4117c61f87c1f6ab7f7f", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf3d19285c750fcfb69f31c24ef2dcc7d29e238d/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf3d19285c750fcfb69f31c24ef2dcc7d29e238d/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=bf3d19285c750fcfb69f31c24ef2dcc7d29e238d", "patch": "@@ -2355,6 +2355,7 @@ optimize_unreachable (gimple_stmt_iterator i)\n \t    gimple_cond_make_true (stmt);\n \t  else\n \t    gcc_unreachable ();\n+\t  update_stmt (stmt);\n \t}\n       else\n \t{"}]}