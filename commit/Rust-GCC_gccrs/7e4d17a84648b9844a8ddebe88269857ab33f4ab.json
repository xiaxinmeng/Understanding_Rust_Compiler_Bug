{"sha": "7e4d17a84648b9844a8ddebe88269857ab33f4ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2U0ZDE3YTg0NjQ4Yjk4NDRhOGRkZWJlODgyNjk4NTdhYjMzZjRhYg==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2019-01-10T21:02:50Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2019-01-10T21:02:50Z"}, "message": "re PR rtl-optimization/87305 (Segfault in end_hard_regno in setup_live_pseudos_and_spill_after_risky_transforms on aarch64 big-endian)\n\n2019-01-10  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/87305\n\t* lra-assigns.c\n\t(setup_live_pseudos_and_spill_after_risky_transforms): Check\n\tallocation for big endian pseudos used as paradoxical subregs and\n\tspill them if it is wrong.\n\t* lra-constraints.c (lra_constraints): Add a comment.\n\n2019-01-10  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/87305\n\t* gcc.target/aarch64/pr87305.c: New.\n\nFrom-SVN: r267823", "tree": {"sha": "47f1045bd356f4375b22344adfda3e7807680e26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47f1045bd356f4375b22344adfda3e7807680e26"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e4d17a84648b9844a8ddebe88269857ab33f4ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e4d17a84648b9844a8ddebe88269857ab33f4ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e4d17a84648b9844a8ddebe88269857ab33f4ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e4d17a84648b9844a8ddebe88269857ab33f4ab/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f25507d041de4df6fffabedbed57c07ecff0d9ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f25507d041de4df6fffabedbed57c07ecff0d9ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f25507d041de4df6fffabedbed57c07ecff0d9ab"}], "stats": {"total": 91, "additions": 82, "deletions": 9}, "files": [{"sha": "6bbcfa6aa87c2d6784fe8a61eea32bb1bac70737", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e4d17a84648b9844a8ddebe88269857ab33f4ab/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e4d17a84648b9844a8ddebe88269857ab33f4ab/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7e4d17a84648b9844a8ddebe88269857ab33f4ab", "patch": "@@ -1,3 +1,12 @@\n+2019-01-10  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/87305\n+\t* lra-assigns.c\n+\t(setup_live_pseudos_and_spill_after_risky_transforms): Check\n+\tallocation for big endian pseudos used as paradoxical subregs and\n+\tspill them if it is wrong.\n+\t* lra-constraints.c (lra_constraints): Add a comment.\n+\n 2019-01-10  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/88792"}, {"sha": "5a4e1eb93dc8f3c54b760ff462c13aa766d20b18", "filename": "gcc/lra-assigns.c", "status": "modified", "additions": 27, "deletions": 8, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e4d17a84648b9844a8ddebe88269857ab33f4ab/gcc%2Flra-assigns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e4d17a84648b9844a8ddebe88269857ab33f4ab/gcc%2Flra-assigns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-assigns.c?ref=7e4d17a84648b9844a8ddebe88269857ab33f4ab", "patch": "@@ -1146,12 +1146,12 @@ static void\n setup_live_pseudos_and_spill_after_risky_transforms (bitmap\n \t\t\t\t\t\t     spilled_pseudo_bitmap)\n {\n-  int p, i, j, n, regno, hard_regno;\n+  int p, i, j, n, regno, hard_regno, biggest_nregs, nregs_diff;\n   unsigned int k, conflict_regno;\n   poly_int64 offset;\n   int val;\n   HARD_REG_SET conflict_set;\n-  machine_mode mode;\n+  machine_mode mode, biggest_mode;\n   lra_live_range_t r;\n   bitmap_iterator bi;\n   int max_regno = max_reg_num ();\n@@ -1166,8 +1166,26 @@ setup_live_pseudos_and_spill_after_risky_transforms (bitmap\n   for (n = 0, i = FIRST_PSEUDO_REGISTER; i < max_regno; i++)\n     if ((pic_offset_table_rtx == NULL_RTX\n \t || i != (int) REGNO (pic_offset_table_rtx))\n-\t&& reg_renumber[i] >= 0 && lra_reg_info[i].nrefs > 0)\n-      sorted_pseudos[n++] = i;\n+\t&& (hard_regno = reg_renumber[i]) >= 0 && lra_reg_info[i].nrefs > 0)\n+      {\n+\tbiggest_mode = lra_reg_info[i].biggest_mode;\n+\tbiggest_nregs = hard_regno_nregs (hard_regno, biggest_mode);\n+\tnregs_diff = (biggest_nregs\n+\t\t      - hard_regno_nregs (hard_regno, PSEUDO_REGNO_MODE (i)));\n+\tenum reg_class rclass = lra_get_allocno_class (i);\n+\n+\tif (WORDS_BIG_ENDIAN\n+\t    && (hard_regno - nregs_diff < 0\n+\t\t|| !TEST_HARD_REG_BIT (reg_class_contents[rclass],\n+\t\t\t\t       hard_regno - nregs_diff)))\n+\t  {\n+\t    /* Hard registers of paradoxical sub-registers are out of\n+\t       range of pseudo register class.  Spill the pseudo.  */\n+\t    reg_renumber[i] = -1;\n+\t    continue;\n+\t  }\n+\tsorted_pseudos[n++] = i;\n+      }\n   qsort (sorted_pseudos, n, sizeof (int), pseudo_compare_func);\n   if (pic_offset_table_rtx != NULL_RTX\n       && (regno = REGNO (pic_offset_table_rtx)) >= FIRST_PSEUDO_REGISTER\n@@ -1206,10 +1224,11 @@ setup_live_pseudos_and_spill_after_risky_transforms (bitmap\n \t    || hard_regno != reg_renumber[conflict_regno])\n \t  {\n \t    int conflict_hard_regno = reg_renumber[conflict_regno];\n-\t    machine_mode biggest_mode = lra_reg_info[conflict_regno].biggest_mode;\n-\t    int biggest_nregs = hard_regno_nregs (conflict_hard_regno,\n-\t\t\t\t\t\t  biggest_mode);\n-\t    int nregs_diff\n+\t    \n+\t    biggest_mode = lra_reg_info[conflict_regno].biggest_mode;\n+\t    biggest_nregs = hard_regno_nregs (conflict_hard_regno,\n+\t\t\t\t\t      biggest_mode);\n+\t    nregs_diff\n \t      = (biggest_nregs\n \t\t - hard_regno_nregs (conflict_hard_regno,\n \t\t\t\t     PSEUDO_REGNO_MODE (conflict_regno)));"}, {"sha": "c08ad9a8964e880ae11ae196ab933b1d9ef4f20c", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e4d17a84648b9844a8ddebe88269857ab33f4ab/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e4d17a84648b9844a8ddebe88269857ab33f4ab/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=7e4d17a84648b9844a8ddebe88269857ab33f4ab", "patch": "@@ -4739,7 +4739,9 @@ lra_constraints (bool first_p)\n   else\n     /* On the first iteration we should check IRA assignment\n        correctness.  In rare cases, the assignments can be wrong as\n-       early clobbers operands are ignored in IRA.  */\n+       early clobbers operands are ignored in IRA or usages of\n+       paradoxical sub-registers are not taken into account by\n+       IRA.  */\n     lra_risky_transformations_p = first_p;\n   new_insn_uid_start = get_max_uid ();\n   new_regno_start = first_p ? lra_constraint_new_regno_start : max_reg_num ();"}, {"sha": "33dd6300d840da1db5fc691a2ce940cfd088d836", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e4d17a84648b9844a8ddebe88269857ab33f4ab/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e4d17a84648b9844a8ddebe88269857ab33f4ab/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7e4d17a84648b9844a8ddebe88269857ab33f4ab", "patch": "@@ -1,3 +1,8 @@\n+2019-01-10  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/87305\n+\t* gcc.target/aarch64/pr87305.c: New.\n+\n 2019-01-10  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/88792"}, {"sha": "8beaa9176e0cdae34b160270977a306d4a4b681d", "filename": "gcc/testsuite/gcc.target/aarch64/pr87305.c", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e4d17a84648b9844a8ddebe88269857ab33f4ab/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr87305.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e4d17a84648b9844a8ddebe88269857ab33f4ab/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr87305.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr87305.c?ref=7e4d17a84648b9844a8ddebe88269857ab33f4ab", "patch": "@@ -0,0 +1,38 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Ofast -mbig-endian -w\" } */\n+\n+int cc;\n+\n+void\n+rc (__int128 *oi)\n+{\n+  __int128 qz = (__int128)2 << cc;\n+\n+  if (qz != 0)\n+    {\n+      if (cc != 0)\n+        {\n+          __int128 zp = 1;\n+\n+          for (;;)\n+            {\n+              unsigned __int128 *ar = &cc;\n+              int y5;\n+\n+              if (oi != 0)\n+                {\n+ y3:\n+                  zp = *oi + *ar;\n+                }\n+\n+              y5 = (cc + 1) == ((*ar /= *oi) << ((zp >>= 128) / cc));\n+              qz += !!y5 ? 1 : qz == (*ar ^ zp + 1);\n+              ++*oi;\n+            }\n+        }\n+      else\n+        ++qz;\n+    }\n+\n+  goto y3;\n+}"}]}