{"sha": "1ed20a40b8d4d65764e15cba77f33647a1c81597", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWVkMjBhNDBiOGQ0ZDY1NzY0ZTE1Y2JhNzdmMzM2NDdhMWM4MTU5Nw==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2009-07-01T12:05:56Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2009-07-01T12:05:56Z"}, "message": "re PR bootstrap/40597 (Powerpc bootstrap is broken due to changes in expmed.c)\n\n2009-07-01  Paolo Bonzini  <bonzini@gnu.org>\n\n\tPR bootstrap/40597\n\t* expmed.c (emit_store_flag): Perform a conversion if necessary,\n\tafter reducing a DImode cstore to SImode.\n\nFrom-SVN: r149137", "tree": {"sha": "3cccf1dc8f8c8cbf2f3fa48998ad51dcb56a3e5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3cccf1dc8f8c8cbf2f3fa48998ad51dcb56a3e5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ed20a40b8d4d65764e15cba77f33647a1c81597", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ed20a40b8d4d65764e15cba77f33647a1c81597", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ed20a40b8d4d65764e15cba77f33647a1c81597", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ed20a40b8d4d65764e15cba77f33647a1c81597/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ce3aea3586776ef0f7a1cb4fd4db01ee472068c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce3aea3586776ef0f7a1cb4fd4db01ee472068c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce3aea3586776ef0f7a1cb4fd4db01ee472068c4"}], "stats": {"total": 38, "additions": 29, "deletions": 9}, "files": [{"sha": "68911788d790ef030a6f20b3b9739944a5b7efe2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ed20a40b8d4d65764e15cba77f33647a1c81597/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ed20a40b8d4d65764e15cba77f33647a1c81597/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1ed20a40b8d4d65764e15cba77f33647a1c81597", "patch": "@@ -1,3 +1,9 @@\n+2009-07-01  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\tPR bootstrap/40597\n+\t* expmed.c (emit_store_flag): Perform a conversion if necessary,\n+\tafter reducing a DImode cstore to SImode.\n+\n 2009-07-01  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* expr.c (expand_expr_real_1): Reinstate fallthrough to"}, {"sha": "3f94ac779b9f2c35225287a09d63c672b0549630", "filename": "gcc/expmed.c", "status": "modified", "additions": 23, "deletions": 9, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ed20a40b8d4d65764e15cba77f33647a1c81597/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ed20a40b8d4d65764e15cba77f33647a1c81597/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=1ed20a40b8d4d65764e15cba77f33647a1c81597", "patch": "@@ -5295,19 +5295,19 @@ emit_store_flag_1 (rtx target, enum rtx_code code, rtx op0, rtx op1,\n       if ((code == EQ || code == NE)\n \t  && (op1 == const0_rtx || op1 == constm1_rtx))\n \t{\n-\t  rtx op00, op01, op0both;\n+\t  rtx op00, op01;\n \n \t  /* Do a logical OR or AND of the two words and compare the\n \t     result.  */\n \t  op00 = simplify_gen_subreg (word_mode, op0, mode, 0);\n \t  op01 = simplify_gen_subreg (word_mode, op0, mode, UNITS_PER_WORD);\n-\t  op0both = expand_binop (word_mode,\n-\t\t\t\t  op1 == const0_rtx ? ior_optab : and_optab,\n-\t\t\t\t  op00, op01, NULL_RTX, unsignedp,\n-\t\t\t\t  OPTAB_DIRECT);\n+\t  tem = expand_binop (word_mode,\n+\t\t\t      op1 == const0_rtx ? ior_optab : and_optab,\n+\t\t\t      op00, op01, NULL_RTX, unsignedp,\n+\t\t\t      OPTAB_DIRECT);\n \n-\t  if (op0both != 0)\n-\t    return emit_store_flag (target, code, op0both, op1, word_mode,\n+\t  if (tem != 0)\n+\t    tem = emit_store_flag (NULL_RTX, code, tem, op1, word_mode,\n \t\t\t\t    unsignedp, normalizep);\n \t}\n       else if ((code == LT || code == GE) && op1 == const0_rtx)\n@@ -5318,8 +5318,22 @@ emit_store_flag_1 (rtx target, enum rtx_code code, rtx op0, rtx op1,\n \t  op0h = simplify_gen_subreg (word_mode, op0, mode,\n \t\t\t\t      subreg_highpart_offset (word_mode,\n \t\t\t\t\t\t\t      mode));\n-\t  return emit_store_flag (target, code, op0h, op1, word_mode,\n-\t\t\t\t  unsignedp, normalizep);\n+\t  tem = emit_store_flag (NULL_RTX, code, op0h, op1, word_mode,\n+\t\t\t\t unsignedp, normalizep);\n+\t}\n+      else\n+\ttem = NULL_RTX;\n+\n+      if (tem)\n+\t{\n+\t  if (target_mode == VOIDmode)\n+\t    return tem;\n+\n+\t  convert_move (target, tem,\n+\t\t\t0 == (STORE_FLAG_VALUE\n+\t\t\t      & ((HOST_WIDE_INT) 1\n+\t\t\t\t << (GET_MODE_BITSIZE (word_mode) -1))));\n+\t  return target;\n \t}\n     }\n "}]}