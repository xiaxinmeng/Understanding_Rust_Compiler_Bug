{"sha": "877bf1953af3383597ad4f76971539e5e05c6d31", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc3YmYxOTUzYWYzMzgzNTk3YWQ0Zjc2OTcxNTM5ZTVlMDVjNmQzMQ==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola.pero@meta-innovation.com", "date": "2010-12-24T15:32:25Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2010-12-24T15:32:25Z"}, "message": "In libobjc/: 2010-12-24 Nicola Pero <nicola.pero@meta-innovation.com>\n\nIn libobjc/:\n2010-12-24  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* objc/runtime.h (class_conformsToProtocol,\n\tclass_copyProtocolList): Updated documentation.\n\nIn gcc/testsuite/:\n2010-12-24  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* obj-c.dg/gnu-api-2-class.m: Test that class_conformsToProtocol()\n\tdoes not check the superclasses.\n\t* obj-c++.dg/gnu-api-2-class.mm: Same change.\n\nFrom-SVN: r168226", "tree": {"sha": "446ade8fb58c3ae9ed224c5430645dbb30deddb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/446ade8fb58c3ae9ed224c5430645dbb30deddb2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/877bf1953af3383597ad4f76971539e5e05c6d31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/877bf1953af3383597ad4f76971539e5e05c6d31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/877bf1953af3383597ad4f76971539e5e05c6d31", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/877bf1953af3383597ad4f76971539e5e05c6d31/comments", "author": {"login": "Nico-31415", "id": 94470564, "node_id": "U_kgDOBaGBpA", "avatar_url": "https://avatars.githubusercontent.com/u/94470564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nico-31415", "html_url": "https://github.com/Nico-31415", "followers_url": "https://api.github.com/users/Nico-31415/followers", "following_url": "https://api.github.com/users/Nico-31415/following{/other_user}", "gists_url": "https://api.github.com/users/Nico-31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nico-31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nico-31415/subscriptions", "organizations_url": "https://api.github.com/users/Nico-31415/orgs", "repos_url": "https://api.github.com/users/Nico-31415/repos", "events_url": "https://api.github.com/users/Nico-31415/events{/privacy}", "received_events_url": "https://api.github.com/users/Nico-31415/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eb277bf19cea73ab2ca031fdb650013d666529f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb277bf19cea73ab2ca031fdb650013d666529f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb277bf19cea73ab2ca031fdb650013d666529f6"}], "stats": {"total": 43, "additions": 41, "deletions": 2}, "files": [{"sha": "1324aeb83b80ea13c7bf881a983ea97a7710a4c9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/877bf1953af3383597ad4f76971539e5e05c6d31/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/877bf1953af3383597ad4f76971539e5e05c6d31/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=877bf1953af3383597ad4f76971539e5e05c6d31", "patch": "@@ -1,3 +1,9 @@\n+2010-12-24  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* obj-c.dg/gnu-api-2-class.m: Test that class_conformsToProtocol()\n+\tdoes not check the superclasses.\n+\t* obj-c++.dg/gnu-api-2-class.mm: Same change.\t\n+\n 2010-12-24  Alexander Monakov  <amonakov@ispras.ru>\n \n \tPR rtl-optimization/47036"}, {"sha": "b86396f2144aa35bb4d50651f5ee86210a54c9ec", "filename": "gcc/testsuite/obj-c++.dg/gnu-api-2-class.mm", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/877bf1953af3383597ad4f76971539e5e05c6d31/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fgnu-api-2-class.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/877bf1953af3383597ad4f76971539e5e05c6d31/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fgnu-api-2-class.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fgnu-api-2-class.mm?ref=877bf1953af3383597ad4f76971539e5e05c6d31", "patch": "@@ -42,6 +42,12 @@ - (void) setVariable: (id)value { variable_ivar = value; }\n - (id) variable { return variable_ivar; }\n @end\n \n+@interface MyOtherSubClass : MySubClass\n+@end\n+\n+@implementation MyOtherSubClass\n+@end\n+\n @interface DifferentClass : MyRootClass\n - (id) myClass;\n - (id) self;\n@@ -188,6 +194,11 @@ int main ()\n \n     if (!class_conformsToProtocol (objc_getClass (\"MySubClass\"), @protocol (MyProtocol)))\n       abort ();\n+\n+    /* Test that class_conformsToProtocol checks the class, but not\n+       superclasses.  */\n+    if (class_conformsToProtocol (objc_getClass (\"MyOtherSubClass\"), @protocol (MyProtocol)))\n+      abort ();\n   }\n \n   std::cout << \"Testing class_copyIvarList ()...\\n\";"}, {"sha": "ff0425966cdc5252e62ef58f49333855dbfc25c3", "filename": "gcc/testsuite/objc.dg/gnu-api-2-class.m", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/877bf1953af3383597ad4f76971539e5e05c6d31/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-class.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/877bf1953af3383597ad4f76971539e5e05c6d31/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-class.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-api-2-class.m?ref=877bf1953af3383597ad4f76971539e5e05c6d31", "patch": "@@ -42,6 +42,12 @@ - (void) setVariable: (id)value { variable_ivar = value; }\n - (id) variable { return variable_ivar; }\n @end\n \n+@interface MyOtherSubClass : MySubClass\n+@end\n+\n+@implementation MyOtherSubClass\n+@end\n+\n @interface DifferentClass : MyRootClass\n - (id) myClass;\n - (id) self;\n@@ -188,6 +194,11 @@ int main(int argc, void **args)\n \n     if (!class_conformsToProtocol (objc_getClass (\"MySubClass\"), @protocol (MyProtocol)))\n       abort ();\n+\n+    /* Test that class_conformsToProtocol checks the class, but not\n+       superclasses.  */\n+    if (class_conformsToProtocol (objc_getClass (\"MyOtherSubClass\"), @protocol (MyProtocol)))\n+      abort ();\n   }\n \n   printf (\"Testing class_copyIvarList ()...\\n\");"}, {"sha": "78112bdecfe145a076b46e535e55cd8265209a59", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/877bf1953af3383597ad4f76971539e5e05c6d31/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/877bf1953af3383597ad4f76971539e5e05c6d31/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=877bf1953af3383597ad4f76971539e5e05c6d31", "patch": "@@ -1,3 +1,8 @@\n+2010-12-24  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* objc/runtime.h (class_conformsToProtocol,\n+\tclass_copyProtocolList): Updated documentation.\n+\n 2010-12-23  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* init.c (create_tree_of_subclasses_inherited_from): Updated"}, {"sha": "7ad46dcc6fd073512e28aadf795307203fd23908", "filename": "libobjc/objc/runtime.h", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/877bf1953af3383597ad4f76971539e5e05c6d31/libobjc%2Fobjc%2Fruntime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/877bf1953af3383597ad4f76971539e5e05c6d31/libobjc%2Fobjc%2Fruntime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fruntime.h?ref=877bf1953af3383597ad4f76971539e5e05c6d31", "patch": "@@ -768,7 +768,11 @@ objc_EXPORT Protocol **objc_copyProtocolList (unsigned int *numberOfReturnedProt\n objc_EXPORT BOOL class_addProtocol (Class class_, Protocol *protocol);\n \n /* Return YES if the class 'class_' conforms to Protocol 'protocol',\n-   and NO if not.  */\n+   and NO if not.  This function does not check superclasses; if you\n+   want to check for superclasses (in the way that [NSObject\n+   +conformsToProtocol:] does) you need to iterate over the class\n+   hierarchy using class_getSuperclass(), and call\n+   class_conformsToProtocol() for each of them.  */\n objc_EXPORT BOOL class_conformsToProtocol (Class class_, Protocol *protocol);\n \n /* Return all the protocols that the class conforms to.  The return\n@@ -777,7 +781,9 @@ objc_EXPORT BOOL class_conformsToProtocol (Class class_, Protocol *protocol);\n    class.  It does not include protocols adopted by superclasses.  The\n    list is terminated by NULL.  Optionally, if you pass a non-NULL\n    'numberOfReturnedProtocols' pointer, the unsigned int that it\n-   points to will be filled with the number of protocols returned.  */\n+   points to will be filled with the number of protocols returned.\n+   This function does not return protocols that superclasses conform\n+   to.  */\n objc_EXPORT Protocol **class_copyProtocolList (Class class_, unsigned int *numberOfReturnedProtocols);\n \n /* Return YES if protocol 'protocol' conforms to protocol"}]}