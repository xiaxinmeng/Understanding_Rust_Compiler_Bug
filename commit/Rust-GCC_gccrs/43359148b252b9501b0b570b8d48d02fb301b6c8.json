{"sha": "43359148b252b9501b0b570b8d48d02fb301b6c8", "node_id": "C_kwDOANBUbNoAKDQzMzU5MTQ4YjI1MmI5NTAxYjBiNTcwYjhkNDhkMDJmYjMwMWI2Yzg", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-12-29T22:50:28Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-01-04T00:36:35Z"}, "message": "tree-pretty-print: still indent unhandled codes\n\nIt would be nice to handle language-specific codes in the tree\npretty-printer, but until then we can at least indent them appropriately.\n\ngcc/ChangeLog:\n\n\t* tree-pretty-print.c (do_niy): Add spc parameter.\n\t(NIY): Pass it.\n\t(print_call_name): Add spc local variable.", "tree": {"sha": "49a622fde63fbba4b35df487a8c16afdebd379bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49a622fde63fbba4b35df487a8c16afdebd379bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43359148b252b9501b0b570b8d48d02fb301b6c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43359148b252b9501b0b570b8d48d02fb301b6c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43359148b252b9501b0b570b8d48d02fb301b6c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43359148b252b9501b0b570b8d48d02fb301b6c8/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4ae8c370168bfba428ca9d475f37d19c957f4a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4ae8c370168bfba428ca9d475f37d19c957f4a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4ae8c370168bfba428ca9d475f37d19c957f4a2"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "352662567b4ef946e1a0342440290a2198d8066b", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43359148b252b9501b0b570b8d48d02fb301b6c8/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43359148b252b9501b0b570b8d48d02fb301b6c8/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=43359148b252b9501b0b570b8d48d02fb301b6c8", "patch": "@@ -53,19 +53,19 @@ static const char *op_symbol (const_tree);\n static void newline_and_indent (pretty_printer *, int);\n static void maybe_init_pretty_print (FILE *);\n static void print_struct_decl (pretty_printer *, const_tree, int, dump_flags_t);\n-static void do_niy (pretty_printer *, const_tree, dump_flags_t);\n+static void do_niy (pretty_printer *, const_tree, int, dump_flags_t);\n \n #define INDENT(SPACE) do { \\\n   int i; for (i = 0; i<SPACE; i++) pp_space (pp); } while (0)\n \n-#define NIY do_niy (pp, node, flags)\n+#define NIY do_niy (pp, node, spc, flags)\n \n static pretty_printer *tree_pp;\n \n /* Try to print something for an unknown tree code.  */\n \n static void\n-do_niy (pretty_printer *pp, const_tree node, dump_flags_t flags)\n+do_niy (pretty_printer *pp, const_tree node, int spc, dump_flags_t flags)\n {\n   int i, len;\n \n@@ -77,8 +77,8 @@ do_niy (pretty_printer *pp, const_tree node, dump_flags_t flags)\n       len = TREE_OPERAND_LENGTH (node);\n       for (i = 0; i < len; ++i)\n \t{\n-\t  newline_and_indent (pp, 2);\n-\t  dump_generic_node (pp, TREE_OPERAND (node, i), 2, flags, false);\n+\t  newline_and_indent (pp, spc+2);\n+\t  dump_generic_node (pp, TREE_OPERAND (node, i), spc+2, flags, false);\n \t}\n     }\n \n@@ -4397,6 +4397,7 @@ void\n print_call_name (pretty_printer *pp, tree node, dump_flags_t flags)\n {\n   tree op0 = node;\n+  int spc = 0;\n \n   if (TREE_CODE (op0) == NON_LVALUE_EXPR)\n     op0 = TREE_OPERAND (op0, 0);"}]}