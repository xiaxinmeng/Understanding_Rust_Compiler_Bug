{"sha": "21920fd14c2f98c8ecd0ce70eaa369793276c555", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjE5MjBmZDE0YzJmOThjOGVjZDBjZTcwZWFhMzY5NzkzMjc2YzU1NQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-12-04T22:51:12Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-12-04T22:51:12Z"}, "message": "re PR c++/42277 (decltype error in template)\n\n\tPR c++/42277\n\t* semantics.c (finish_decltype_type): Don't assume that op1 of a\n\tCOMPONENT_REF is always the field.\n\t* g++.dg/cpp0x/decltype20.C: New.\n\nFrom-SVN: r155002", "tree": {"sha": "8b367fd140436e6ad185482b528e43ae5bcc6d46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b367fd140436e6ad185482b528e43ae5bcc6d46"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21920fd14c2f98c8ecd0ce70eaa369793276c555", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21920fd14c2f98c8ecd0ce70eaa369793276c555", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21920fd14c2f98c8ecd0ce70eaa369793276c555", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21920fd14c2f98c8ecd0ce70eaa369793276c555/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2f2d73866bd4fd1e441234808ef3e98d8ae54b94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f2d73866bd4fd1e441234808ef3e98d8ae54b94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f2d73866bd4fd1e441234808ef3e98d8ae54b94"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "7ec27d402a1090db14e1166b5985b1190df2dcea", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21920fd14c2f98c8ecd0ce70eaa369793276c555/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21920fd14c2f98c8ecd0ce70eaa369793276c555/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=21920fd14c2f98c8ecd0ce70eaa369793276c555", "patch": "@@ -1,3 +1,9 @@\n+2009-12-04  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/42277\n+\t* semantics.c (finish_decltype_type): Defer handling of decltype\n+\tof a non-dependent COMPONENT_REF in a template.\n+\n 2009-12-04  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/42218"}, {"sha": "841efc8fafc6d8cd608dfcfaf403ddb8fb275fa0", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21920fd14c2f98c8ecd0ce70eaa369793276c555/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21920fd14c2f98c8ecd0ce70eaa369793276c555/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=21920fd14c2f98c8ecd0ce70eaa369793276c555", "patch": "@@ -4777,7 +4777,13 @@ finish_decltype_type (tree expr, bool id_expression_or_member_access_p)\n       return error_mark_node;\n     }\n \n-  if (type_dependent_expression_p (expr))\n+  if (type_dependent_expression_p (expr)\n+      /* In a template, a COMPONENT_REF has an IDENTIFIER_NODE for op1 even\n+\t if it isn't dependent, so that we can check access control at\n+\t instantiation time, so defer the decltype as well (PR 42277).  */\n+      || (id_expression_or_member_access_p\n+\t  && processing_template_decl\n+\t  && TREE_CODE (expr) == COMPONENT_REF))\n     {\n       if (id_expression_or_member_access_p)\n \t{"}, {"sha": "ed866cf019996a9979afd4bc22df75e757e79509", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21920fd14c2f98c8ecd0ce70eaa369793276c555/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21920fd14c2f98c8ecd0ce70eaa369793276c555/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=21920fd14c2f98c8ecd0ce70eaa369793276c555", "patch": "@@ -1,3 +1,8 @@\n+2009-12-04  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/42277\n+\t* g++.dg/cpp0x/decltype20.C: New.\n+\n 2009-12-04  David Daney  <ddaney@caviumnetworks.com>\n \n \tPR rtl-optimization/42164"}, {"sha": "3155cdcf86a4bf51b5b1eef9bd5a374d88cce1da", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype20.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21920fd14c2f98c8ecd0ce70eaa369793276c555/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21920fd14c2f98c8ecd0ce70eaa369793276c555/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype20.C?ref=21920fd14c2f98c8ecd0ce70eaa369793276c555", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/42277\n+// { dg-options -std=c++0x }\n+\n+struct S { int s; };\n+template <int N>\n+void foo ()\n+{\n+  S s;\n+  decltype (s.s) i;\n+}"}]}