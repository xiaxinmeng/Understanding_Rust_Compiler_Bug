{"sha": "982b8443e8886112b2e3743c6882e60ff0847785", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTgyYjg0NDNlODg4NjExMmIyZTM3NDNjNjg4MmU2MGZmMDg0Nzc4NQ==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@codesourcery.com", "date": "2000-11-10T17:34:49Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2000-11-10T17:34:49Z"}, "message": "localefwd.h (_Count_ones<>::_S_halfcount, [...]): Turn into enumerators.\n\n\t* include/bits/localefwd.h (_Count_ones<>::_S_halfcount,\n\t_Count_ones<>::_S_count): Turn into enumerators.\n\nFrom-SVN: r37372", "tree": {"sha": "6a1bff7eeac67be125ea0618bbf1048f758f2475", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a1bff7eeac67be125ea0618bbf1048f758f2475"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/982b8443e8886112b2e3743c6882e60ff0847785", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/982b8443e8886112b2e3743c6882e60ff0847785", "html_url": "https://github.com/Rust-GCC/gccrs/commit/982b8443e8886112b2e3743c6882e60ff0847785", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/982b8443e8886112b2e3743c6882e60ff0847785/comments", "author": null, "committer": null, "parents": [{"sha": "1e60838877bd590b4e960587a102c8c354d81048", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e60838877bd590b4e960587a102c8c354d81048", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e60838877bd590b4e960587a102c8c354d81048"}], "stats": {"total": 33, "additions": 19, "deletions": 14}, "files": [{"sha": "3558c0a892e56f4e96d45ca464c8d6a08c04555a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/982b8443e8886112b2e3743c6882e60ff0847785/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/982b8443e8886112b2e3743c6882e60ff0847785/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=982b8443e8886112b2e3743c6882e60ff0847785", "patch": "@@ -1,3 +1,8 @@\n+2000-11-10  Gabriel Dos Reis  <gdr@codesourcery.com>\n+\n+\t* include/bits/localefwd.h (_Count_ones<>::_S_halfcount,\n+\t_Count_ones<>::_S_count): Turn into enumerators.\n+\n 2000-11-08  Mark Mitchell  <mark@codesourcery.com>\n \n \t* include/bits/codecvt.h (codecvt::do_out): Make it const-correct."}, {"sha": "73dba99788dbdf49b8598c60436b63e97a32266b", "filename": "libstdc++-v3/include/bits/localefwd.h", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/982b8443e8886112b2e3743c6882e60ff0847785/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocalefwd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/982b8443e8886112b2e3743c6882e60ff0847785/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocalefwd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocalefwd.h?ref=982b8443e8886112b2e3743c6882e60ff0847785", "patch": "@@ -49,28 +49,28 @@ namespace std\n            unsigned int _Mask = (~0u >> _Shift) >\n     struct _Count_ones;\n \n+  // It is preferable to use enumerators instead of integral static data\n+  // members to avoid emission of superflous variables -- gdr.\n   template<unsigned int _Num, unsigned int _Mask>\n     struct _Count_ones<_Num, 0, _Mask> \n-    { static const unsigned int _S_count = _Num; };\n-\n-  template<unsigned int _Num, unsigned int _Mask>\n-    const unsigned int _Count_ones<_Num, 0, _Mask>::_S_count;\n+    {\n+      enum\n+      {\n+        _S_count = _Num\n+      };\n+    };\n \n   template<unsigned int _Num, int _Shift, unsigned int _Mask>\n     struct _Count_ones \n     {\n-      static const unsigned int _S_halfcount =\n-        _Count_ones<_Num, _Shift/2, (_Mask^((~_Mask)>>(_Shift/2))) >::_S_count;\n-      static const unsigned int _S_count\n-      = (_S_halfcount&_Mask) + ((_S_halfcount>>_Shift)&_Mask);\n+      enum\n+      {\n+        _S_halfcount = _Count_ones<_Num, _Shift/2,\n+                                   (_Mask^((~_Mask)>>(_Shift/2))) >::_S_count,\n+        _S_count = (_S_halfcount&_Mask) + ((_S_halfcount>>_Shift)&_Mask)\n+      };\n     };\n \n-  template<unsigned int _Num, int _Shift, unsigned int _Mask>\n-    const unsigned int _Count_ones<_Num, _Shift, _Mask>::_S_count;\n-\n-  template<unsigned int _Num, int _Shift, unsigned int _Mask>\n-    const unsigned int _Count_ones<_Num, _Shift, _Mask>::_S_halfcount;\n-\n   // 22.1.1 Locale\n   template<typename _Tp> class allocator;\n   template<typename _Tp, typename _Alloc> class vector;"}]}