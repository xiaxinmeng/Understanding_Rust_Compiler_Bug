{"sha": "2397d13c5948e5da5645a952fe444a0cd413e68f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjM5N2QxM2M1OTQ4ZTVkYTU2NDVhOTUyZmU0NDRhMGNkNDEzZTY4Zg==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2015-02-24T00:00:59Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2015-02-24T00:00:59Z"}, "message": "re PR middle-end/65182 (-Wuninitialized fails when pointer to variable later passed to function (fixed? add testcase?))\n\n\tPR target/65182\n\t* config/rs6000/rs6000.c (get_memref_parts): Only return true\n\twhen *base is a reg.  Handle nested plus addresses.  Simplify\n\tpre_modify test.\n\nFrom-SVN: r220924", "tree": {"sha": "3a58e050195a9cf608029a95f24e334d4fcd299a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a58e050195a9cf608029a95f24e334d4fcd299a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2397d13c5948e5da5645a952fe444a0cd413e68f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2397d13c5948e5da5645a952fe444a0cd413e68f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2397d13c5948e5da5645a952fe444a0cd413e68f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2397d13c5948e5da5645a952fe444a0cd413e68f/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "637ece3f9ee580884f8d84ed994fdb473c994ec7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/637ece3f9ee580884f8d84ed994fdb473c994ec7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/637ece3f9ee580884f8d84ed994fdb473c994ec7"}], "stats": {"total": 31, "additions": 17, "deletions": 14}, "files": [{"sha": "c1e46fb7286985c6f194e3e347051b1bde61084e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2397d13c5948e5da5645a952fe444a0cd413e68f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2397d13c5948e5da5645a952fe444a0cd413e68f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2397d13c5948e5da5645a952fe444a0cd413e68f", "patch": "@@ -1,3 +1,10 @@\n+2015-02-24  Alan Modra  <amodra@gmail.com>\n+\n+\tPR target/65182\n+\t* config/rs6000/rs6000.c (get_memref_parts): Only return true\n+\twhen *base is a reg.  Handle nested plus addresses.  Simplify\n+\tpre_modify test.\n+\n 2015-02-22  Max Filippov  <jcmvbkbc@gmail.com>\n \n \t* config/xtensa/xtensa.h (CONSTANT_ALIGNMENT, DATA_ALIGNMENT):"}, {"sha": "6cef0f5a93cc637ffa9c7de9f44ca3a82750b8e1", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 10, "deletions": 14, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2397d13c5948e5da5645a952fe444a0cd413e68f/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2397d13c5948e5da5645a952fe444a0cd413e68f/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=2397d13c5948e5da5645a952fe444a0cd413e68f", "patch": "@@ -27172,25 +27172,21 @@ get_memref_parts (rtx mem, rtx *base, HOST_WIDE_INT *offset,\n   else\n     return false;\n \n-  if (GET_CODE (XEXP (mem, 0)) == PRE_MODIFY)\n-    addr_rtx = XEXP (XEXP (mem, 0), 1);\n-  else\n-    addr_rtx = (XEXP (mem, 0));\n+  addr_rtx = (XEXP (mem, 0));\n+  if (GET_CODE (addr_rtx) == PRE_MODIFY)\n+    addr_rtx = XEXP (addr_rtx, 1);\n \n-  if (GET_CODE (addr_rtx) == REG)\n-    {\n-      *base = addr_rtx;\n-      *offset = 0;\n-    }\n-  else if (GET_CODE (addr_rtx) == PLUS\n-\t   && CONST_INT_P (XEXP (addr_rtx, 1)))\n+  *offset = 0;\n+  while (GET_CODE (addr_rtx) == PLUS\n+\t && CONST_INT_P (XEXP (addr_rtx, 1)))\n     {\n-      *base = XEXP (addr_rtx, 0);\n-      *offset = INTVAL (XEXP (addr_rtx, 1));\n+      *offset += INTVAL (XEXP (addr_rtx, 1));\n+      addr_rtx = XEXP (addr_rtx, 0);\n     }\n-  else\n+  if (!REG_P (addr_rtx))\n     return false;\n \n+  *base = addr_rtx;\n   return true;\n }\n "}]}