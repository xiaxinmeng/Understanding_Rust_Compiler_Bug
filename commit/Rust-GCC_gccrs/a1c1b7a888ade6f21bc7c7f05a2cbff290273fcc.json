{"sha": "a1c1b7a888ade6f21bc7c7f05a2cbff290273fcc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFjMWI3YTg4OGFkZTZmMjFiYzdjN2YwNWEyY2JmZjI5MDI3M2ZjYw==", "commit": {"author": {"name": "Ilya Leoshkevich", "email": "iii@linux.ibm.com", "date": "2021-06-17T12:18:17Z"}, "committer": {"name": "Ilya Leoshkevich", "email": "iii@linux.ibm.com", "date": "2021-06-24T09:53:21Z"}, "message": "IBM Z: Define NO_PROFILE_COUNTERS\n\ns390 glibc does not need counters in the .data section, since it stores\nedge hits in its own data structure.  Therefore counters only waste\nspace and confuse diffing tools (e.g. kpatch), so don't generate them.\n\ngcc/ChangeLog:\n\n\t* config/s390/s390.c (s390_function_profiler): Ignore labelno\n\tparameter.\n\t* config/s390/s390.h (NO_PROFILE_COUNTERS): Define.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/s390/mnop-mcount-m31-mzarch.c: Adapt to the new\n\tprologue size.\n\t* gcc.target/s390/mnop-mcount-m64.c: Likewise.", "tree": {"sha": "fa70429eb41636ccfd4dcc6ba42222d36dd32fb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa70429eb41636ccfd4dcc6ba42222d36dd32fb7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1c1b7a888ade6f21bc7c7f05a2cbff290273fcc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1c1b7a888ade6f21bc7c7f05a2cbff290273fcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1c1b7a888ade6f21bc7c7f05a2cbff290273fcc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1c1b7a888ade6f21bc7c7f05a2cbff290273fcc/comments", "author": {"login": "iii-i", "id": 45998171, "node_id": "MDQ6VXNlcjQ1OTk4MTcx", "avatar_url": "https://avatars.githubusercontent.com/u/45998171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iii-i", "html_url": "https://github.com/iii-i", "followers_url": "https://api.github.com/users/iii-i/followers", "following_url": "https://api.github.com/users/iii-i/following{/other_user}", "gists_url": "https://api.github.com/users/iii-i/gists{/gist_id}", "starred_url": "https://api.github.com/users/iii-i/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iii-i/subscriptions", "organizations_url": "https://api.github.com/users/iii-i/orgs", "repos_url": "https://api.github.com/users/iii-i/repos", "events_url": "https://api.github.com/users/iii-i/events{/privacy}", "received_events_url": "https://api.github.com/users/iii-i/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iii-i", "id": 45998171, "node_id": "MDQ6VXNlcjQ1OTk4MTcx", "avatar_url": "https://avatars.githubusercontent.com/u/45998171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iii-i", "html_url": "https://github.com/iii-i", "followers_url": "https://api.github.com/users/iii-i/followers", "following_url": "https://api.github.com/users/iii-i/following{/other_user}", "gists_url": "https://api.github.com/users/iii-i/gists{/gist_id}", "starred_url": "https://api.github.com/users/iii-i/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iii-i/subscriptions", "organizations_url": "https://api.github.com/users/iii-i/orgs", "repos_url": "https://api.github.com/users/iii-i/repos", "events_url": "https://api.github.com/users/iii-i/events{/privacy}", "received_events_url": "https://api.github.com/users/iii-i/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82ab14927651e0eaf0f6d6964396048bb5471f23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82ab14927651e0eaf0f6d6964396048bb5471f23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82ab14927651e0eaf0f6d6964396048bb5471f23"}], "stats": {"total": 48, "additions": 20, "deletions": 28}, "files": [{"sha": "590dd8f35bc2451092999bbf5daf13bd603d8ae6", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 16, "deletions": 26, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1c1b7a888ade6f21bc7c7f05a2cbff290273fcc/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1c1b7a888ade6f21bc7c7f05a2cbff290273fcc/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=a1c1b7a888ade6f21bc7c7f05a2cbff290273fcc", "patch": "@@ -13110,33 +13110,25 @@ output_asm_nops (const char *user, int hw)\n     }\n }\n \n-/* Output assembler code to FILE to increment profiler label # LABELNO\n-   for profiling a function entry.  */\n+/* Output assembler code to FILE to call a profiler hook.  */\n \n void\n-s390_function_profiler (FILE *file, int labelno)\n+s390_function_profiler (FILE *file, int labelno ATTRIBUTE_UNUSED)\n {\n-  rtx op[8];\n-\n-  char label[128];\n-  ASM_GENERATE_INTERNAL_LABEL (label, \"LP\", labelno);\n+  rtx op[4];\n \n   fprintf (file, \"# function profiler \\n\");\n \n   op[0] = gen_rtx_REG (Pmode, RETURN_REGNUM);\n   op[1] = gen_rtx_REG (Pmode, STACK_POINTER_REGNUM);\n   op[1] = gen_rtx_MEM (Pmode, plus_constant (Pmode, op[1], UNITS_PER_LONG));\n-  op[7] = GEN_INT (UNITS_PER_LONG);\n-\n-  op[2] = gen_rtx_REG (Pmode, 1);\n-  op[3] = gen_rtx_SYMBOL_REF (Pmode, label);\n-  SYMBOL_REF_FLAGS (op[3]) = SYMBOL_FLAG_LOCAL;\n+  op[3] = GEN_INT (UNITS_PER_LONG);\n \n-  op[4] = gen_rtx_SYMBOL_REF (Pmode, flag_fentry ? \"__fentry__\" : \"_mcount\");\n+  op[2] = gen_rtx_SYMBOL_REF (Pmode, flag_fentry ? \"__fentry__\" : \"_mcount\");\n   if (flag_pic)\n     {\n-      op[4] = gen_rtx_UNSPEC (Pmode, gen_rtvec (1, op[4]), UNSPEC_PLT);\n-      op[4] = gen_rtx_CONST (Pmode, op[4]);\n+      op[2] = gen_rtx_UNSPEC (Pmode, gen_rtvec (1, op[2]), UNSPEC_PLT);\n+      op[2] = gen_rtx_CONST (Pmode, op[2]);\n     }\n \n   if (flag_record_mcount)\n@@ -13150,20 +13142,19 @@ s390_function_profiler (FILE *file, int labelno)\n \twarning (OPT_Wcannot_profile, \"nested functions cannot be profiled \"\n \t\t \"with %<-mfentry%> on s390\");\n       else\n-\toutput_asm_insn (\"brasl\\t0,%4\", op);\n+\toutput_asm_insn (\"brasl\\t0,%2\", op);\n     }\n   else if (TARGET_64BIT)\n     {\n       if (flag_nop_mcount)\n-\toutput_asm_nops (\"-mnop-mcount\", /* stg */ 3 + /* larl */ 3 +\n-\t\t\t /* brasl */ 3 + /* lg */ 3);\n+\toutput_asm_nops (\"-mnop-mcount\", /* stg */ 3 + /* brasl */ 3 +\n+\t\t\t /* lg */ 3);\n       else\n \t{\n \t  output_asm_insn (\"stg\\t%0,%1\", op);\n \t  if (flag_dwarf2_cfi_asm)\n-\t    output_asm_insn (\".cfi_rel_offset\\t%0,%7\", op);\n-\t  output_asm_insn (\"larl\\t%2,%3\", op);\n-\t  output_asm_insn (\"brasl\\t%0,%4\", op);\n+\t    output_asm_insn (\".cfi_rel_offset\\t%0,%3\", op);\n+\t  output_asm_insn (\"brasl\\t%0,%2\", op);\n \t  output_asm_insn (\"lg\\t%0,%1\", op);\n \t  if (flag_dwarf2_cfi_asm)\n \t    output_asm_insn (\".cfi_restore\\t%0\", op);\n@@ -13172,15 +13163,14 @@ s390_function_profiler (FILE *file, int labelno)\n   else\n     {\n       if (flag_nop_mcount)\n-\toutput_asm_nops (\"-mnop-mcount\", /* st */ 2 + /* larl */ 3 +\n-\t\t\t /* brasl */ 3 + /* l */ 2);\n+\toutput_asm_nops (\"-mnop-mcount\", /* st */ 2 + /* brasl */ 3 +\n+\t\t\t /* l */ 2);\n       else\n \t{\n \t  output_asm_insn (\"st\\t%0,%1\", op);\n \t  if (flag_dwarf2_cfi_asm)\n-\t    output_asm_insn (\".cfi_rel_offset\\t%0,%7\", op);\n-\t  output_asm_insn (\"larl\\t%2,%3\", op);\n-\t  output_asm_insn (\"brasl\\t%0,%4\", op);\n+\t    output_asm_insn (\".cfi_rel_offset\\t%0,%3\", op);\n+\t  output_asm_insn (\"brasl\\t%0,%2\", op);\n \t  output_asm_insn (\"l\\t%0,%1\", op);\n \t  if (flag_dwarf2_cfi_asm)\n \t    output_asm_insn (\".cfi_restore\\t%0\", op);"}, {"sha": "fb16a455a035f1833839d339d625a8a5a2bfb675", "filename": "gcc/config/s390/s390.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1c1b7a888ade6f21bc7c7f05a2cbff290273fcc/gcc%2Fconfig%2Fs390%2Fs390.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1c1b7a888ade6f21bc7c7f05a2cbff290273fcc/gcc%2Fconfig%2Fs390%2Fs390.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.h?ref=a1c1b7a888ade6f21bc7c7f05a2cbff290273fcc", "patch": "@@ -787,6 +787,8 @@ CUMULATIVE_ARGS;\n \n #define PROFILE_BEFORE_PROLOGUE 1\n \n+#define NO_PROFILE_COUNTERS 1\n+\n \n /* Trampolines for nested functions.  */\n "}, {"sha": "874ceb96fe8af28f75fbb762cab0f78b67de228d", "filename": "gcc/testsuite/gcc.target/s390/mnop-mcount-m31-mzarch.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1c1b7a888ade6f21bc7c7f05a2cbff290273fcc/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fmnop-mcount-m31-mzarch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1c1b7a888ade6f21bc7c7f05a2cbff290273fcc/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fmnop-mcount-m31-mzarch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fmnop-mcount-m31-mzarch.c?ref=a1c1b7a888ade6f21bc7c7f05a2cbff290273fcc", "patch": "@@ -4,5 +4,5 @@\n void\n profileme (void)\n {\n-  /* { dg-final { scan-assembler \"NOPs for -mnop-mcount \\\\(10 halfwords\\\\)\\n.*brcl\\t0,0\\n.*brcl\\t0,0\\n.*brcl\\t0,0\\n.*bcr\\t0,0\" } } */\n+  /* { dg-final { scan-assembler \"NOPs for -mnop-mcount \\\\(7 halfwords\\\\)\\n.*brcl\\t0,0\\n.*brcl\\t0,0\\n.*bcr\\t0,0\" } } */\n }"}, {"sha": "0d45834abdd9e982f1edb739349fe25b8fb8c7e6", "filename": "gcc/testsuite/gcc.target/s390/mnop-mcount-m64.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1c1b7a888ade6f21bc7c7f05a2cbff290273fcc/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fmnop-mcount-m64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1c1b7a888ade6f21bc7c7f05a2cbff290273fcc/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fmnop-mcount-m64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fmnop-mcount-m64.c?ref=a1c1b7a888ade6f21bc7c7f05a2cbff290273fcc", "patch": "@@ -4,5 +4,5 @@\n void\n profileme (void)\n {\n-  /* { dg-final { scan-assembler \"NOPs for -mnop-mcount \\\\(12 halfwords\\\\)\\n.*brcl\\t0,0\\n.*brcl\\t0,0\\n.*brcl\\t0,0\\n.*brcl\\t0,0\" } } */\n+  /* { dg-final { scan-assembler \"NOPs for -mnop-mcount \\\\(9 halfwords\\\\)\\n.*brcl\\t0,0\\n.*brcl\\t0,0\\n.*brcl\\t0,0\" } } */\n }"}]}