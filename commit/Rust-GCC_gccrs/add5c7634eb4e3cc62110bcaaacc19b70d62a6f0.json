{"sha": "add5c7634eb4e3cc62110bcaaacc19b70d62a6f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWRkNWM3NjM0ZWI0ZTNjYzYyMTEwYmNhYWFjYzE5YjcwZDYyYTZmMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-02-05T15:34:25Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-02-05T15:34:25Z"}, "message": "re PR ipa/59947 (Segmentation fault with #pragma GCC optimize (\"O2\"), ICE in get_odr_type)\n\n\tPR ipa/59947\n\t* ipa-devirt.c (possible_polymorphic_call_targets): Fix\n\ta comment typo and formatting issue.  If odr_hash hasn't been\n\tcreated, return vNULL and set *completep to false.\n\n\t* g++.dg/opt/pr59947.C: New test.\n\nFrom-SVN: r207512", "tree": {"sha": "5dc90fd212c99fdb514aebbb39ddb9a13526b358", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5dc90fd212c99fdb514aebbb39ddb9a13526b358"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/add5c7634eb4e3cc62110bcaaacc19b70d62a6f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/add5c7634eb4e3cc62110bcaaacc19b70d62a6f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/add5c7634eb4e3cc62110bcaaacc19b70d62a6f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/add5c7634eb4e3cc62110bcaaacc19b70d62a6f0/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "54e19c00d9a901e0c55f812c2f7f98392976f5b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54e19c00d9a901e0c55f812c2f7f98392976f5b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54e19c00d9a901e0c55f812c2f7f98392976f5b2"}], "stats": {"total": 53, "additions": 51, "deletions": 2}, "files": [{"sha": "32a6a3e4cd927653c9c95b0e7c04e7c0f13c7017", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/add5c7634eb4e3cc62110bcaaacc19b70d62a6f0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/add5c7634eb4e3cc62110bcaaacc19b70d62a6f0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=add5c7634eb4e3cc62110bcaaacc19b70d62a6f0", "patch": "@@ -1,5 +1,10 @@\n 2014-02-05  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR ipa/59947\n+\t* ipa-devirt.c (possible_polymorphic_call_targets): Fix\n+\ta comment typo and formatting issue.  If odr_hash hasn't been\n+\tcreated, return vNULL and set *completep to false.\n+\n \tPR middle-end/57499\n \t* tree-eh.c (cleanup_empty_eh): Bail out on totally empty\n \tbb with no successors."}, {"sha": "c110a982209edc746b59e2798eacab13f5fe7a4b", "filename": "gcc/ipa-devirt.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/add5c7634eb4e3cc62110bcaaacc19b70d62a6f0/gcc%2Fipa-devirt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/add5c7634eb4e3cc62110bcaaacc19b70d62a6f0/gcc%2Fipa-devirt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-devirt.c?ref=add5c7634eb4e3cc62110bcaaacc19b70d62a6f0", "patch": "@@ -1359,7 +1359,7 @@ devirt_variable_node_removal_hook (varpool_node *n,\n    temporarily change to one of base types.  INCLUDE_DERIVER_TYPES make\n    us to walk the inheritance graph for all derivations.\n \n-   If COMPLETEP is non-NULL, store true if the list is complette. \n+   If COMPLETEP is non-NULL, store true if the list is complete. \n    CACHE_TOKEN (if non-NULL) will get stored to an unique ID of entry\n    in the target cache.  If user needs to visit every target list\n    just once, it can memoize them.\n@@ -1378,14 +1378,21 @@ possible_polymorphic_call_targets (tree otr_type,\n   static struct cgraph_node_hook_list *node_removal_hook_holder;\n   pointer_set_t *inserted;\n   pointer_set_t *matched_vtables;\n-  vec <cgraph_node *> nodes=vNULL;\n+  vec <cgraph_node *> nodes = vNULL;\n   odr_type type, outer_type;\n   polymorphic_call_target_d key;\n   polymorphic_call_target_d **slot;\n   unsigned int i;\n   tree binfo, target;\n   bool final;\n \n+  if (!odr_hash.is_created ())                                                                                                                    \n+    {                                                                                                                                             \n+      if (completep)                                                                                                                              \n+\t*completep = false;                                                                                                                        \n+      return nodes;                                                                                                                               \n+    }                                                                                                                                             \n+\n   type = get_odr_type (otr_type, true);\n \n   /* Lookup the outer class type we want to walk.  */"}, {"sha": "4ea7056a37beb9970da1ed44f3e2171947da8496", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/add5c7634eb4e3cc62110bcaaacc19b70d62a6f0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/add5c7634eb4e3cc62110bcaaacc19b70d62a6f0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=add5c7634eb4e3cc62110bcaaacc19b70d62a6f0", "patch": "@@ -1,5 +1,8 @@\n 2014-02-05  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR ipa/59947\n+\t* g++.dg/opt/pr59947.C: New test.\n+\n \tPR c++/58703\n \t* c-c++-common/gomp/pr58703.c: New test.\n "}, {"sha": "b9a9698975ef53c071ac5124abefb7a6739f4933", "filename": "gcc/testsuite/g++.dg/opt/pr59947.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/add5c7634eb4e3cc62110bcaaacc19b70d62a6f0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr59947.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/add5c7634eb4e3cc62110bcaaacc19b70d62a6f0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr59947.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr59947.C?ref=add5c7634eb4e3cc62110bcaaacc19b70d62a6f0", "patch": "@@ -0,0 +1,34 @@\n+// PR ipa/59947\n+// { dg-do compile }\n+// { dg-options \"-O0 -std=c++11\" }\n+\n+#pragma GCC optimize (\"O2\")\n+template <typename T>\n+inline void\n+foo (T & a) noexcept { T tmp = static_cast <T &&> (a); };\n+struct A\n+{\n+  A () noexcept : a (1), b (1) {}\n+  virtual void c () noexcept = 0;\n+  void d () noexcept { c (); }\n+  int a;\n+  int b;\n+};\n+struct B\n+{\n+  ~B () noexcept { e->d (); }\n+  A *e;\n+};\n+template <typename T>\n+struct C\n+{\n+  B f;\n+};\n+struct D {};\n+template <typename T>\n+struct E\n+{\n+  void bar () { foo (g); }\n+  C <D> g;\n+};\n+template class E <char>;"}]}