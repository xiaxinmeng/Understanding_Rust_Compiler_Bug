{"sha": "014d92e193f6ef3d06143984524b72ee020a7c04", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE0ZDkyZTE5M2Y2ZWYzZDA2MTQzOTg0NTI0YjcyZWUwMjBhN2MwNA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-11-11T22:54:53Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-11-11T22:54:53Z"}, "message": "invoke.texi (-fwhopr): Merge into -flto section.\n\n\n\t* doc/invoke.texi (-fwhopr): Merge into -flto section.\n\t(-flto-partition): Document none.\n\t* gcc.c (LINK_COMMAND_SPEC): Remove -fwhopr.\n\t* lto-wrapper.c: Update comment.\n\t(run_gcc): Update LTO option parsing.\n\t* opts.c (finish_options): add support -flto-partition=none\n\t(common_handle_option): Remove fwhopr.\n\t* common.opt: Turn fwhopr into flto.\n\t* collect2.c (main): Update option handling.\n\t* cgraphunit.c (cgraph_decide_is_function_needed): Remove flag_whopr.\n\t* ipa-split.c (execute_split_functions): Remove flag_whopr.\n\t* ipa.c (function_and_variable_visibility): Remove flag_whopr.\n\t* ipa-prop.c (ipa_compute_jump_functions): Remove flag_whopr.\n\t* varpool.c (decide_is_variable_needed): Remove flag_whopr.\n\t\n\t* gcc.dg/20081223-1.c: Update LTO options.\n\t* gcc.dg/lto/20090206-1_0.c: Update LTO options.\n\t* gcc.dg/lto/20081118_0.c: Update LTO options.\n\t* gcc.dg/lto/ipareference_0.c: Update LTO options.\n\t* gcc.dg/lto/20100423-2_0.c: Update LTO options.\n\t* gcc.dg/lto/20081201-1_0.c: Update LTO options.\n\t* gcc.dg/lto/ipacp_0.c: Update LTO options.\n\t* gcc.dg/lto/20090116_0.c: Update LTO options.\n\t* gcc.dg/lto/20091015-1_0.c: Update LTO options.\n\t* gcc.dg/lto/20090126-2_0.c: Update LTO options.\n\t* gcc.dg/lto/20081202-2_0.c: Update LTO options.\n\t* gcc.dg/lto/20081204-1_0.c: Update LTO options.\n\t* gcc.dg/lto/const-uniq_0.c: Update LTO options.\n\t* gcc.dg/lto/20081224_0.c: Update LTO options.\n\t* gcc.dg/lto/20090219_0.c: Update LTO options.\n\t* gcc.dg/lto/ipareference2_0.c: Update LTO options.\n\t* gcc.dg/lto/20090206-2_0.c: Update LTO options.\n\t* gcc.dg/lto/20081115_0.c: Update LTO options.\n\t* gcc.dg/lto/20081201-2_0.c: Update LTO options.\n\t* gcc.dg/lto/20081120-2_0.c: Update LTO options.\n\t* gcc.dg/lto/materialize-1_0.c: Update LTO options.\n\t* gcc.dg/lto/20090126-1_0.c: Update LTO options.\n\t* gcc.dg/lto/20081202-1_0.c: Update LTO options.\n\t* gcc.dg/lto/noreturn-1_0.c: Update LTO options.\n\t* g++.dg/20090107-1.C: Update LTO options.\n\t* g++.dg/lto/pr45679-2_0.C: Update LTO options.\n\t* g++.dg/lto/20081123_0.C: Update LTO options.\n\t* g++.dg/lto/20090313_0.C: Update LTO options.\n\t* g++.dg/lto/20081125_0.C: Update LTO options.\n\t* g++.dg/lto/20081109-1_0.C: Update LTO options.\n\t* g++.dg/lto/20081219_0.C: Update LTO options.\n\t* g++.dg/lto/20100724-1_0.C: Update LTO options.\n\t* g++.dg/lto/20081204-1_0.C: Update LTO options.\n\t* g++.dg/lto/20090303_0.C: Update LTO options.\n\t* g++.dg/lto/20100723-1_0.C: Update LTO options.\n\t* g++.dg/lto/pr45679-1_0.C: Update LTO options.\n\t* g++.dg/lto/20090128_0.C: Update LTO options.\n\t* g++.dg/lto/20081204-2_0.C: Update LTO options.\n\t* g++.dg/lto/20090302_0.C: Update LTO options.\n\t* g++.dg/lto/20081119-1_0.C: Update LTO options.\n\t* g++.dg/lto/20081118_0.C: Update LTO options.\n\t* g++.dg/20090121-1.C: Update LTO options.\n\t* objc.dg/lto/lto.exp: Update LTO options.\n\t* lib/lto.exp: Update LTO options.\n\t* lib/gcc-dg.exp: Update LTO options.\n\t* lib/c-torture.exp: Update LTO options.\n\t* obj-c++.dg/lto/lto.exp: Update LTO options.\n\nFrom-SVN: r166625", "tree": {"sha": "221f841982a24ff9937fc8b4ba3db8b7597a075e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/221f841982a24ff9937fc8b4ba3db8b7597a075e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/014d92e193f6ef3d06143984524b72ee020a7c04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/014d92e193f6ef3d06143984524b72ee020a7c04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/014d92e193f6ef3d06143984524b72ee020a7c04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/014d92e193f6ef3d06143984524b72ee020a7c04/comments", "author": null, "committer": null, "parents": [{"sha": "2503de8d44bdfaf97b1ba1efb9455af3d206f911", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2503de8d44bdfaf97b1ba1efb9455af3d206f911", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2503de8d44bdfaf97b1ba1efb9455af3d206f911"}], "stats": {"total": 335, "additions": 198, "deletions": 137}, "files": [{"sha": "d5e85a28186cadae44cef5ea3571e111a5f10425", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,3 +1,20 @@\n+2010-11-11  Jan Hubicka  <jh@suse.cz>\n+\n+\t* doc/invoke.texi (-fwhopr): Merge into -flto section.\n+\t(-flto-partition): Document none.\n+\t* gcc.c (LINK_COMMAND_SPEC): Remove -fwhopr.\n+\t* lto-wrapper.c: Update comment.\n+\t(run_gcc): Update LTO option parsing.\n+\t* opts.c (finish_options): add support -flto-partition=none\n+\t(common_handle_option): Remove fwhopr.\n+\t* common.opt: Turn fwhopr into flto.\n+\t* collect2.c (main): Update option handling.\n+\t* cgraphunit.c (cgraph_decide_is_function_needed): Remove flag_whopr.\n+\t* ipa-split.c (execute_split_functions): Remove flag_whopr.\n+\t* ipa.c (function_and_variable_visibility): Remove flag_whopr.\n+\t* ipa-prop.c (ipa_compute_jump_functions): Remove flag_whopr.\n+\t* varpool.c (decide_is_variable_needed): Remove flag_whopr.\n+\n 2010-11-11  Jan Hubicka  <jh@suse.cz>\n \n \tPR tree-optimize/40436"}, {"sha": "f98243955b777a04a05450f72e4129e03594644c", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -197,8 +197,7 @@ cgraph_decide_is_function_needed (struct cgraph_node *node, tree decl)\n \t    && !(DECL_CONTEXT (decl)\n \t\t && TREE_CODE (DECL_CONTEXT (decl)) == FUNCTION_DECL)))\n        && !flag_whole_program\n-       && !flag_lto\n-       && !flag_whopr)\n+       && !flag_lto)\n       && !DECL_COMDAT (decl) && !DECL_EXTERNAL (decl))\n     return true;\n "}, {"sha": "0d745ae0b8d8cfe05c6ca0a2c5a920a55c4f64ba", "filename": "gcc/collect2.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1196,21 +1196,20 @@ main (int argc, char **argv)\n \n   /* Parse command line early for instances of -debug.  This allows\n      the debug flag to be set before functions like find_a_file()\n-     are called.  We also look for the -flto or -fwhopr flag to know\n+     are called.  We also look for the -flto or -flto-partition=none flag to know\n      what LTO mode we are in.  */\n   {\n     int i;\n+    bool no_partition = false;\n \n     for (i = 1; argv[i] != NULL; i ++)\n       {\n \tif (! strcmp (argv[i], \"-debug\"))\n \t  debug = true;\n-        else if (! strcmp (argv[i], \"-flto\") && ! use_plugin)\n-\t  {\n-\t    use_verbose = true;\n-\t    lto_mode = LTO_MODE_LTO;\n-\t  }\n-        else if (! strncmp (argv[i], \"-fwhopr\", 7) && ! use_plugin)\n+        else if (! strcmp (argv[i], \"-flto-partition=none\"))\n+\t  no_partition = true;\n+        else if ((! strncmp (argv[i], \"-flto=\", 6)\n+\t\t  || ! strcmp (argv[i], \"-flto\")) && ! use_plugin)\n \t  {\n \t    use_verbose = true;\n \t    lto_mode = LTO_MODE_WHOPR;\n@@ -1239,6 +1238,8 @@ main (int argc, char **argv)\n #endif\n       }\n     vflag = debug;\n+    if (no_partition)\n+      lto_mode = LTO_MODE_LTO;\n   }\n \n #ifndef DEFAULT_A_OUT_NAME\n@@ -1485,8 +1486,7 @@ main (int argc, char **argv)\n \t      break;\n \n             case 'f':\n-\t      if (strcmp (arg, \"-flto\") == 0\n-\t\t  || strncmp (arg, \"-fwhopr\", 7) == 0)\n+\t      if (strncmp (arg, \"-flto\", 5) == 0)\n \t\t{\n #ifdef ENABLE_LTO\n \t\t  /* Do not pass LTO flag to the linker. */"}, {"sha": "85eaa37bff347d8136edcb4cad1b0e288790dc03", "filename": "gcc/common.opt", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1138,9 +1138,13 @@ Common Ignore\n Does nothing.  Preserved for backward compatibility.\n \n flto\n-Common Var(flag_lto)\n+Common\n Enable link-time optimization.\n \n+flto=\n+Common RejectNegative Joined Var(flag_lto)\n+Link-time optimization with number of parallel jobs or jobserver.\n+\n flto-partition=1to1\n Common Var(flag_lto_partition_1to1)\n Partition functions and vars at linktime based on object files they originate from\n@@ -1149,6 +1153,10 @@ flto-partition=balanced\n Common Var(flag_lto_partition_balanced)\n Partition functions and vars at linktime into approximately same sized buckets\n \n+flto-partition=none\n+Common Var(flag_lto_partition_none)\n+Disable partioning and streaming\n+\n ; The initial value of -1 comes from Z_DEFAULT_COMPRESSION in zlib.h.\n flto-compression-level=\n Common Joined RejectNegative UInteger Var(flag_lto_compression_level) Init(-1)\n@@ -1879,14 +1887,6 @@ fweb\n Common Report Var(flag_web) Init(2) Optimization\n Construct webs and split unrelated uses of single variable\n \n-fwhopr\n-Common\n-Enable partitioned link-time optimization\n-\n-fwhopr=\n-Common RejectNegative Joined Var(flag_whopr)\n-Partitioned link-time optimization with number of parallel jobs or jobserver.\n-\n ftree-builtin-call-dce\n Common Report Var(flag_tree_builtin_call_dce) Init(0) Optimization\n Enable conditional dead code elimination for builtin calls"}, {"sha": "f2deda3e21a774abc04574a4808e91e625a0b179", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 14, "deletions": 25, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -7429,14 +7429,14 @@ and those merged by attribute @code{externally_visible} become static functions\n and in effect are optimized more aggressively by interprocedural optimizers. If @command{gold} is used as the linker plugin, @code{externally_visible} attributes are automatically added to functions (not variable yet due to a current @command{gold} issue) that are accessed outside of LTO objects according to resolution file produced by @command{gold}.  For other linkers that cannot generate resolution file, explicit @code{externally_visible} attributes are still necessary.\n While this option is equivalent to proper use of the @code{static} keyword for\n programs consisting of a single file, in combination with option\n-@option{-flto} or @option{-fwhopr} this flag can be used to\n+@option{-flto} this flag can be used to\n compile many smaller scale programs since the functions and variables become\n local for the whole combined compilation unit, not for the single source file\n itself.\n \n This option implies @option{-fwhole-file} for Fortran programs.\n \n-@item -flto\n+@item -flto[=@var{n}]\n @opindex flto\n This option runs the standard link-time optimizer.  When invoked\n with source code, it generates GIMPLE (one of GCC's internal\n@@ -7575,12 +7575,13 @@ If you are not using @command{gold} and/or do not specify\n will be extracted and linked as usual, but they will not participate\n in the LTO optimization process.\n \n-Link time optimizations do not require the presence of the whole\n-program to operate.  If the program does not require any symbols to\n-be exported, it is possible to combine @option{-flto} and\n-@option{-fwhopr} with @option{-fwhole-program} to allow the\n-interprocedural optimizers to use more aggressive assumptions which\n-may lead to improved optimization opportunities.\n+Link time optimizations do not require the presence of the whole program to\n+operate.  If the program does not require any symbols to be exported, it is\n+possible to combine @option{-flto} and with @option{-fwhole-program} to allow\n+the interprocedural optimizers to use more aggressive assumptions which may\n+lead to improved optimization opportunities. \n+Use of @option{-fwhole-program} is not needed when linker plugin is\n+active (see @option{-fuse-linker-plugin}).\n \n Regarding portability: the current implementation of LTO makes no\n attempt at generating bytecode that can be ported between different\n@@ -7589,23 +7590,9 @@ strict version check, so bytecode files generated in one version of\n GCC will not work with an older/newer version of GCC.\n \n Link time optimization does not play well with generating debugging\n-information.  Combining @option{-flto} or @option{-fwhopr} with\n+information.  Combining @option{-flto} with\n @option{-g} is experimental.\n \n-This option is disabled by default.\n-\n-@item -fwhopr[=@var{n}]\n-@opindex fwhopr\n-This option is identical in functionality to @option{-flto} but it\n-differs in how the final link stage is executed.  Instead of loading\n-all the function bodies in memory, the callgraph is analyzed and\n-optimization decisions are made (whole program analysis or WPA). Once\n-optimization decisions are made, the callgraph is partitioned and the\n-different sections are compiled separately (local transformations or\n-LTRANS)@.  This process allows optimizations on very large programs\n-that otherwise would not fit in memory.  This option enables\n-@option{-fwpa} and @option{-fltrans} automatically.\n-\n If you specify the optional @var{n} the link stage is executed in\n parallel using @var{n} parallel jobs by utilizing an installed\n @command{make} program.  The environment variable @env{MAKE} may be\n@@ -7618,14 +7605,16 @@ The parent Makefile will need a @samp{+} prepended to the command recipe\n for this to work. This will likely only work if @env{MAKE} is \n GNU make.\n \n-Disabled by default.\n+This option is disabled by default.\n \n @item -flto-partition=@var{alg}\n @opindex flto-partition\n Specify partitioning algorithm used by @option{-fwhopr} mode.  The value is\n either @code{1to1} to specify partitioning corresponding to source files\n or @code{balanced} to specify partitioning into, if possible, equally sized\n-chunks.  The default value is @code{balanced}.\n+chunks.  Specifying @code{none} as an algorithm disables partitioning\n+and streaming completely.\n+The default value is @code{balanced}.\n \n @item -fwpa\n @opindex fwpa"}, {"sha": "fcb8a59f471a8b7fecfc7e80072bd557092a5aa4", "filename": "gcc/gcc.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -645,7 +645,7 @@ proper position among the other output files.  */\n /* We want %{T*} after %{L*} and %D so that it can be used to specify linker\n    scripts which exist in user specified directories, or in standard\n    directories.  */\n-/* We pass any -flto and -fwhopr flags on to the linker, which is expected\n+/* We pass any -flto flags on to the linker, which is expected\n    to understand them.  In practice, this means it had better be collect2.  */\n #ifndef LINK_COMMAND_SPEC\n #define LINK_COMMAND_SPEC \"\\\n@@ -658,8 +658,8 @@ proper position among the other output files.  */\n     %{static|static-libgcc:-plugin-opt=-pass-through=%(lto_libgcc)}\t\\\n     %{static:-plugin-opt=-pass-through=-lc}\t\\\n     } \\\n-    %{flto:%<fcompare-debug*} %{fwhopr*:%<fcompare-debug*} \\\n-    %{flto} %{fwhopr*} %l \" LINK_PIE_SPEC \\\n+    %{flto*:%<fcompare-debug*} \\\n+    %{flto*} %l \" LINK_PIE_SPEC \\\n    \"%X %{o*} %{A} %{d} %{e*} %{m} %{N} %{n} %{r}\\\n     %{s} %{t} %{u*} %{z} %{Z} %{!A:%{!nostdlib:%{!nostartfiles:%S}}}\\\n     %{static:} %{L*} %(mfwrap) %(link_libgcc) %o\\"}, {"sha": "473f483ad3dc38fc0d201071ab6900c0b4d7aecc", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -890,7 +890,7 @@ ipa_compute_jump_functions (struct cgraph_node *node,\n     {\n       /* We do not need to bother analyzing calls to unknown\n \t functions unless they may become known during lto/whopr.  */\n-      if (!cs->callee->analyzed && !flag_lto && !flag_whopr)\n+      if (!cs->callee->analyzed && !flag_lto)\n \tcontinue;\n       ipa_count_arguments (cs);\n       /* If the descriptor of the callee is not initialized yet, we have to do"}, {"sha": "1a5535221531a67e0ff6f1019ac196cc2d0f93af", "filename": "gcc/ipa-split.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Fipa-split.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Fipa-split.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-split.c?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1251,7 +1251,7 @@ execute_split_functions (void)\n      then inlining would still benefit.  */\n   if ((!node->callers || !node->callers->next_caller)\n       && !node->address_taken\n-      && ((!flag_lto && !flag_whopr) || !node->local.externally_visible))\n+      && (!flag_lto || !node->local.externally_visible))\n     {\n       if (dump_file)\n \tfprintf (dump_file, \"Not splitting: not called directly \""}, {"sha": "1dd85f80c36485f538307c424ec9ba99c6882188", "filename": "gcc/ipa.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Fipa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Fipa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa.c?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -938,7 +938,7 @@ function_and_variable_visibility (bool whole_program)\n static unsigned int\n local_function_and_variable_visibility (void)\n {\n-  return function_and_variable_visibility (flag_whole_program && !flag_lto && !flag_whopr);\n+  return function_and_variable_visibility (flag_whole_program && !flag_lto);\n }\n \n struct simple_ipa_opt_pass pass_ipa_function_and_variable_visibility ="}, {"sha": "dea51b07c7379fe8a0b96b2f8f5645a9f2d9efad", "filename": "gcc/lto-wrapper.c", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Flto-wrapper.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Flto-wrapper.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-wrapper.c?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -32,7 +32,7 @@ along with GCC; see the file COPYING3.  If not see\n    The above will print something like\n    /tmp/ccwbQ8B2.lto.o\n \n-   If -fwhopr is used instead, more than one file might be produced\n+   If WHOPR is used instead, more than one file might be produced\n    ./ccXj2DTk.lto.ltrans.o\n    ./ccCJuXGv.lto.ltrans.o\n */\n@@ -304,6 +304,7 @@ run_gcc (unsigned argc, char *argv[])\n   bool seen_o = false;\n   int parallel = 0;\n   int jobserver = 0;\n+  bool no_partition = false;\n \n   /* Get the driver and options.  */\n   collect_gcc = getenv (\"COLLECT_GCC\");\n@@ -366,15 +367,16 @@ run_gcc (unsigned argc, char *argv[])\n \tif (strcmp (option, \"-v\") == 0)\n \t  verbose = 1;\n \n+\tif (strcmp (option, \"-flto-partition=none\") == 0)\n+\t  no_partition = true;\n \t/* We've handled these LTO options, do not pass them on.  */\n-\tif (strcmp (option, \"-flto\") == 0)\n-\t  lto_mode = LTO_MODE_LTO;\n-\telse if (strncmp (option, \"-fwhopr\", 7) == 0)\n+\tif (strncmp (option, \"-flto=\", 6) == 0\n+\t    || !strcmp (option, \"-flto\"))\n \t  {\n \t    lto_mode = LTO_MODE_WHOPR;\n-\t    if (option[7] == '=')\n+\t    if (option[5] == '=')\n \t      {\n-\t\tif (!strcmp (option + 8, \"jobserver\"))\n+\t\tif (!strcmp (option + 6, \"jobserver\"))\n \t\t  {\n \t\t    jobserver = 1;\n \t\t    parallel = 1;\n@@ -390,6 +392,12 @@ run_gcc (unsigned argc, char *argv[])\n \telse\n \t  *argv_ptr++ = option;\n       }\n+  if (no_partition)\n+    {\n+      lto_mode = LTO_MODE_LTO;\n+      jobserver = 0;\n+      parallel = 0;\n+    }\n \n   if (linker_output)\n     {"}, {"sha": "085bc2502ff493beb82ea0d9b970c48545822a42", "filename": "gcc/opts.c", "status": "modified", "additions": 10, "deletions": 13, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1218,7 +1218,7 @@ finish_options (struct gcc_options *opts, struct gcc_options *opts_set)\n       opts->x_flag_ipa_struct_reorg = 0;\n     }\n \n-  if (opts->x_flag_lto || opts->x_flag_whopr)\n+  if (opts->x_flag_lto)\n     {\n #ifdef ENABLE_LTO\n       opts->x_flag_generate_lto = 1;\n@@ -1231,20 +1231,17 @@ finish_options (struct gcc_options *opts, struct gcc_options *opts_set)\n       error (\"LTO support has not been enabled in this configuration\");\n #endif\n     }\n-  if (opts->x_flag_lto_partition_balanced || opts->x_flag_lto_partition_1to1)\n+  if ((opts->x_flag_lto_partition_balanced != 0) + (opts->x_flag_lto_partition_1to1 != 0)\n+       + (opts->x_flag_lto_partition_none != 0) >= 1)\n     {\n-      if (opts->x_flag_lto_partition_balanced\n-\t  && opts->x_flag_lto_partition_1to1)\n+      if ((opts->x_flag_lto_partition_balanced != 0)\n+\t   + (opts->x_flag_lto_partition_1to1 != 0)\n+\t   + (opts->x_flag_lto_partition_none != 0) > 1)\n \terror (\"only one -flto-partition value can be specified\");\n-      if (!opts->x_flag_whopr && !opts->x_flag_wpa && !opts->x_flag_ltrans)\n-\terror (\"-flto-partition has no effect without -fwhopr\");\n+      if (!opts->x_flag_lto && !opts->x_flag_wpa && !opts->x_flag_ltrans)\n+\terror (\"-flto-partition has no effect without -flto\");\n     }\n \n-  /* Reconcile -flto and -fwhopr.  Set additional flags as appropriate and\n-     check option consistency.  */\n-  if (opts->x_flag_lto && opts->x_flag_whopr)\n-    error (\"-flto and -fwhopr are mutually exclusive\");\n-\n   /* We initialize opts->x_flag_split_stack to -1 so that targets can set a\n      default value if they choose based on other options.  */\n   if (opts->x_flag_split_stack == -1)\n@@ -2152,8 +2149,8 @@ common_handle_option (struct gcc_options *opts,\n       dc->pedantic_errors = 1;\n       break;\n \n-    case OPT_fwhopr:\n-      opts->x_flag_whopr = \"\";\n+    case OPT_flto:\n+      opts->x_flag_lto = \"\";\n       break;\n \n     case OPT_w:"}, {"sha": "e67254d107db4281dfff2279fceddd0cbfaf98c1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,3 +1,53 @@\n+2010-11-11  Jan Hubicka  <jh@suse.cz>\n+\n+\t* gcc.dg/20081223-1.c: Update LTO options.\n+\t* gcc.dg/lto/20090206-1_0.c: Update LTO options.\n+\t* gcc.dg/lto/20081118_0.c: Update LTO options.\n+\t* gcc.dg/lto/ipareference_0.c: Update LTO options.\n+\t* gcc.dg/lto/20100423-2_0.c: Update LTO options.\n+\t* gcc.dg/lto/20081201-1_0.c: Update LTO options.\n+\t* gcc.dg/lto/ipacp_0.c: Update LTO options.\n+\t* gcc.dg/lto/20090116_0.c: Update LTO options.\n+\t* gcc.dg/lto/20091015-1_0.c: Update LTO options.\n+\t* gcc.dg/lto/20090126-2_0.c: Update LTO options.\n+\t* gcc.dg/lto/20081202-2_0.c: Update LTO options.\n+\t* gcc.dg/lto/20081204-1_0.c: Update LTO options.\n+\t* gcc.dg/lto/const-uniq_0.c: Update LTO options.\n+\t* gcc.dg/lto/20081224_0.c: Update LTO options.\n+\t* gcc.dg/lto/20090219_0.c: Update LTO options.\n+\t* gcc.dg/lto/ipareference2_0.c: Update LTO options.\n+\t* gcc.dg/lto/20090206-2_0.c: Update LTO options.\n+\t* gcc.dg/lto/20081115_0.c: Update LTO options.\n+\t* gcc.dg/lto/20081201-2_0.c: Update LTO options.\n+\t* gcc.dg/lto/20081120-2_0.c: Update LTO options.\n+\t* gcc.dg/lto/materialize-1_0.c: Update LTO options.\n+\t* gcc.dg/lto/20090126-1_0.c: Update LTO options.\n+\t* gcc.dg/lto/20081202-1_0.c: Update LTO options.\n+\t* gcc.dg/lto/noreturn-1_0.c: Update LTO options.\n+\t* g++.dg/20090107-1.C: Update LTO options.\n+\t* g++.dg/lto/pr45679-2_0.C: Update LTO options.\n+\t* g++.dg/lto/20081123_0.C: Update LTO options.\n+\t* g++.dg/lto/20090313_0.C: Update LTO options.\n+\t* g++.dg/lto/20081125_0.C: Update LTO options.\n+\t* g++.dg/lto/20081109-1_0.C: Update LTO options.\n+\t* g++.dg/lto/20081219_0.C: Update LTO options.\n+\t* g++.dg/lto/20100724-1_0.C: Update LTO options.\n+\t* g++.dg/lto/20081204-1_0.C: Update LTO options.\n+\t* g++.dg/lto/20090303_0.C: Update LTO options.\n+\t* g++.dg/lto/20100723-1_0.C: Update LTO options.\n+\t* g++.dg/lto/pr45679-1_0.C: Update LTO options.\n+\t* g++.dg/lto/20090128_0.C: Update LTO options.\n+\t* g++.dg/lto/20081204-2_0.C: Update LTO options.\n+\t* g++.dg/lto/20090302_0.C: Update LTO options.\n+\t* g++.dg/lto/20081119-1_0.C: Update LTO options.\n+\t* g++.dg/lto/20081118_0.C: Update LTO options.\n+\t* g++.dg/20090121-1.C: Update LTO options.\n+\t* objc.dg/lto/lto.exp: Update LTO options.\n+\t* lib/lto.exp: Update LTO options.\n+\t* lib/gcc-dg.exp: Update LTO options.\n+\t* lib/c-torture.exp: Update LTO options.\n+\t* obj-c++.dg/lto/lto.exp: Update LTO options.\n+\n 2010-11-11  Jan Hubicka  <jh@suse.cz>\n \n \tPR tree-optimize/40436"}, {"sha": "ff586e8176743be18f5e7bbd1abf55133e4017e5", "filename": "gcc/testsuite/g++.dg/20090107-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2F20090107-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2F20090107-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2F20090107-1.C?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target lto } */\n-/* { dg-options \"-fwhopr -Wuninitialized -O1\" }  */\n+/* { dg-options \"-flto -Wuninitialized -O1\" }  */\n \n template <typename T> struct Q1 { typedef int x; };\n template <typename T> struct Q2 {"}, {"sha": "ddfa3ad057ffda4d4ca85ccc2d4dd64890325540", "filename": "gcc/testsuite/g++.dg/20090121-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2F20090121-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2F20090121-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2F20090121-1.C?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,6 +1,6 @@\n // { dg-do compile }\n // { dg-require-effective-target lto }\n-// { dg-options \"-fwhopr -Wuninitialized -O2\" }\n+// { dg-options \"-flto -Wuninitialized -O2\" }\n class A\n {\n private:"}, {"sha": "474ceba79c97ccaaa070e114993550a450bc13f3", "filename": "gcc/testsuite/g++.dg/lto/20081109-1_0.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081109-1_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081109-1_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081109-1_0.C?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,5 +1,5 @@\n // { dg-lto-do link }\n-// { dg-lto-options {{-fPIC -fwhopr}} }\n-// { dg-extra-ld-options \"-fPIC -fwhopr -r -nostdlib -fno-exceptions\" }\n+// { dg-lto-options {{-fPIC -flto -flto-partition=1to1}} }\n+// { dg-extra-ld-options \"-fPIC -flto -flto-partition=1to1 -r -nostdlib -fno-exceptions\" }\n void func(); class Foo { };\n void bar() { try { func(); } catch (Foo) { } };"}, {"sha": "f11c76b67f5b4c4e7eca142f18a98dcde1f442ba", "filename": "gcc/testsuite/g++.dg/lto/20081118_0.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081118_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081118_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081118_0.C?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,5 +1,5 @@\n /* { dg-lto-do link } */\n-/* { dg-lto-options {{-fPIC -fwhopr -r -nostdlib}} } */\n+/* { dg-lto-options {{-fPIC -flto -flto-partition=1to1 -r -nostdlib}} } */\n \n /* We used to ICE because of dangling pointers.  */\n "}, {"sha": "a2d5bd320a86750854ddabdff49726502e92e887", "filename": "gcc/testsuite/g++.dg/lto/20081119-1_0.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081119-1_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081119-1_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081119-1_0.C?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,5 +1,5 @@\n /* { dg-lto-do link } */\n-/* { dg-lto-options {{-fPIC -fwhopr -r -nostdlib}} } */\n+/* { dg-lto-options {{-fPIC -flto -flto-partition=1to1 -r -nostdlib}} } */\n \n #include \"20081119-1.h\"\n "}, {"sha": "8817be8f0a93617742be08388838435ba9436d2e", "filename": "gcc/testsuite/g++.dg/lto/20081123_0.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081123_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081123_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081123_0.C?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,5 +1,5 @@\n // { dg-lto-do link }\n-// { dg-lto-options {{-fwhopr -r -nostdlib -fPIC}} }\n+// { dg-lto-options {{-flto -flto-partition=1to1 -r -nostdlib -fPIC}} }\n \n int\n f(void)"}, {"sha": "629c2b3d9d0e3a83905f65989342dbb18cb3fe2a", "filename": "gcc/testsuite/g++.dg/lto/20081125_0.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081125_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081125_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081125_0.C?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,5 +1,5 @@\n // { dg-lto-do link }\n-// { dg-lto-options {{-fwhopr}} }\n+// { dg-lto-options {{-flto -flto-partition=1to1}} }\n #include \"20081125.h\"\n \n object::object (int x)"}, {"sha": "0d24878897f1f3f51b09abb93e1c263e318f7960", "filename": "gcc/testsuite/g++.dg/lto/20081204-1_0.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081204-1_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081204-1_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081204-1_0.C?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,5 +1,5 @@\n /* { dg-lto-do link } */\n-/* { dg-lto-options {{-fwhopr -fPIC -r -nostdlib}} } */\n+/* { dg-lto-options {{-flto -flto-partition=1to1 -fPIC -r -nostdlib}} } */\n \n /* Tests for the absence during linking of:\n    lto1: error: type of '_ZTVN10__cxxabiv120__si_class_type_infoE' does"}, {"sha": "81a42693c4f18daf93c2cb63baa60792e63ad31b", "filename": "gcc/testsuite/g++.dg/lto/20081204-2_0.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081204-2_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081204-2_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081204-2_0.C?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,5 +1,5 @@\n // { dg-lto-do link }\n-// { dg-lto-options {{-fwhopr -O3}} }\n+// { dg-lto-options {{-flto -flto-partition=1to1 -O3}} }\n extern void foo (void);\n \n int"}, {"sha": "432a60c45f2dc97979507cb71ce20f37e4d19398", "filename": "gcc/testsuite/g++.dg/lto/20081219_0.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081219_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081219_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081219_0.C?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,6 +1,6 @@\n // { dg-lto-do link }\n-// { dg-lto-options {{-fPIC -fwhopr -O2}} }\n-// { dg-extra-ld-options \"-O2 -fPIC -fwhopr -r -nostdlib\" }\n+// { dg-lto-options {{-fPIC -flto -flto-partition=1to1 -O2}} }\n+// { dg-extra-ld-options \"-O2 -fPIC -flto -flto-partition=1to1 -r -nostdlib\" }\n \n typedef long int ptrdiff_t;\n extern \"C\""}, {"sha": "d03cfc6a88ca8c9ea37bc4e134dc8922b6ec2569", "filename": "gcc/testsuite/g++.dg/lto/20090128_0.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20090128_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20090128_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20090128_0.C?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,5 +1,5 @@\n // { dg-lto-do assemble }\n-// { dg-lto-options {{-fpreprocessed -O2 -fwhopr -funsigned-char}} }\n+// { dg-lto-options {{-fpreprocessed -O2 -flto -flto-partition=1to1 -funsigned-char}} }\n typedef unsigned char uint8;\n extern const uint8 array[256];\n static inline bool"}, {"sha": "76de7baf0fa6231e0b9c700341a1bddb5ef5894d", "filename": "gcc/testsuite/g++.dg/lto/20090302_0.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20090302_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20090302_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20090302_0.C?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,5 +1,5 @@\n /* { dg-lto-do link } */\n-/* { dg-lto-options {{-fPIC -fwhopr -r -nostdlib}} } */\n+/* { dg-lto-options {{-fPIC -flto -flto-partition=1to1 -r -nostdlib}} } */\n struct Foo {\n   bool Mumble();\n   static void Bar() { if (foo_->Mumble()) foo_ = 0; }"}, {"sha": "f2d112feda0fd82c99368aa7946fb054247cde96", "filename": "gcc/testsuite/g++.dg/lto/20090303_0.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20090303_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20090303_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20090303_0.C?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,5 +1,5 @@\n /* { dg-lto-do run } */\n-/* { dg-lto-options {{-fwhopr -fPIC}} } */\n+/* { dg-lto-options {{-flto -flto-partition=1to1 -fPIC}} } */\n /* { dg-suppress-ld-options {-fPIC} }  */\n void foobar(int *, int* __x)    ;\n int test_ints[30];"}, {"sha": "70029e6510530d04da786e7813fd39c74447e012", "filename": "gcc/testsuite/g++.dg/lto/20090313_0.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20090313_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20090313_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20090313_0.C?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,5 +1,5 @@\n // { dg-lto-do link }\n-// { dg-lto-options {{-fwhopr -fPIC}} }\n-// { dg-extra-ld-options \"-fwhopr -r -nostdlib\" }\n+// { dg-lto-options {{-flto -flto-partition=1to1 -fPIC}} }\n+// { dg-extra-ld-options \"-flto -flto-partition=1to1 -r -nostdlib\" }\n \n int X;"}, {"sha": "d39963593774bc0644b5d6a1f617e6341fc060ef", "filename": "gcc/testsuite/g++.dg/lto/20100723-1_0.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20100723-1_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20100723-1_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20100723-1_0.C?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,5 +1,5 @@\n /* { dg-lto-do link } */\n-/* { dg-lto-options {{-fcompare-debug -flto} {-fcompare-debug -fwhopr}} } */\n+/* { dg-lto-options {{-fcompare-debug -flto -flto-partition=none} {-fcompare-debug -flto -flto-partition=1to1}} } */\n \n struct S {\n     virtual void f() { }"}, {"sha": "084c07f0814d26d70f53acdd621e3e3aa3bb534b", "filename": "gcc/testsuite/g++.dg/lto/20100724-1_0.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20100724-1_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20100724-1_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20100724-1_0.C?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,5 +1,5 @@\n /* { dg-lto-do link } */\n-/* { dg-lto-options {{-ftoplevel-reorder -flto} {-ftoplevel-reorder -fwhopr}} } */\n+/* { dg-lto-options {{-ftoplevel-reorder -flto -flto-partition=none} {-ftoplevel-reorder -flto -flto-partition=1to1}} } */\n /* { dg-extra-ld-options {-r -nostdlib} } */\n \n struct Foo { virtual ~Foo(); };"}, {"sha": "349f5c2c1ef77b564496b4157a406708fba42e1d", "filename": "gcc/testsuite/g++.dg/lto/pr45679-1_0.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr45679-1_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr45679-1_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr45679-1_0.C?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,6 +1,6 @@\n // { dg-lto-do link }\n // { dg-lto-options {{-O3 -Wno-multichar}} } \n-// { dg-extra-ld-options \"-fwhopr -r -nostdlib\" }\n+// { dg-extra-ld-options \"-flto -flto-partition=1to1 -r -nostdlib\" }\n \n      extern \"C\" {\n    typedef struct __locale_struct {"}, {"sha": "549741902baa78959798124ffa0a92f855628448", "filename": "gcc/testsuite/g++.dg/lto/pr45679-2_0.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr45679-2_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr45679-2_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr45679-2_0.C?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,6 +1,6 @@\n // { dg-lto-do link }\n // { dg-lto-options {{-O3 -Wno-multichar}} } \n-// { dg-extra-ld-options \"-fwhopr -r -nostdlib\" }\n+// { dg-extra-ld-options \"-flto -flto-partition=1to1 -r -nostdlib\" }\n     extern \"C\" {\n   typedef struct {\n     union   {"}, {"sha": "6bfbd17556f01a6a6491480680f28afe1e2f481d", "filename": "gcc/testsuite/gcc.dg/20081223-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2F20081223-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2F20081223-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20081223-1.c?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-fwhopr\" { target lto } }  */\n+/* { dg-options \"-flto\" { target lto } }  */\n \n typedef struct foo_ foo_t;\n foo_t bar;  /* { dg-error \"storage size of 'bar' isn't known\" }  */"}, {"sha": "c9f4c803f3a8c9784b381a6f0cb0c887b38af10e", "filename": "gcc/testsuite/gcc.dg/lto/20081115_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081115_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081115_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081115_0.c?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-lto-options {{-O2 -DOPTIMIZE -fwhopr} {-O0 -fwhopr}} } */\n+/* { dg-lto-options {{-O2 -DOPTIMIZE -flto -flto-partition=1to1} {-O0 -flto -flto-partition=1to1}} } */\n \n extern void abort (void);\n "}, {"sha": "b37eb31a46db1177e1bd2f45cde15f9803e7831c", "filename": "gcc/testsuite/gcc.dg/lto/20081118_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081118_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081118_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081118_0.c?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-lto-options {{-O2 -DOPTIMIZE -fwhopr} {-O0 -fwhopr}} } */\n+/* { dg-lto-options {{-O2 -DOPTIMIZE -flto -flto-partition=1to1} {-O0 -flto -flto-partition=1to1}} } */\n \n extern void abort (void);\n extern int f (void);"}, {"sha": "e2e11d64b6364a731a6ce825feec5c49f100d2ec", "filename": "gcc/testsuite/gcc.dg/lto/20081120-2_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081120-2_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081120-2_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081120-2_0.c?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,3 +1,3 @@\n /* { dg-lto-do link } */\n-/* { dg-lto-options {{-fwhopr -r -nostdlib}} } */\n+/* { dg-lto-options {{-flto -flto-partition=1to1 -r -nostdlib}} } */\n void bar(void) {}"}, {"sha": "b6896446d7b8f0cab72ca012b304f59dd4f60548", "filename": "gcc/testsuite/gcc.dg/lto/20081201-1_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081201-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081201-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081201-1_0.c?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-lto-options {{-O2 -DOPTIMIZE -fwhopr} {-O0 -fwhopr}} } */\n+/* { dg-lto-options {{-O2 -DOPTIMIZE -flto -flto-partition=1to1} {-O0 -flto -flto-partition=1to1}} } */\n \n extern void abort (void);\n "}, {"sha": "fd021eb1cd15cd9984e3f091dc2725c0278e9b8f", "filename": "gcc/testsuite/gcc.dg/lto/20081201-2_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081201-2_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081201-2_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081201-2_0.c?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-lto-options {{-O3 -fwhopr}} } */\n+/* { dg-lto-options {{-O3 -flto -flto-partition=1to1}} } */\n \n /* Test that cross-TU inlining works.  */\n "}, {"sha": "1bdb91f8104755ea5b07e1e018cb4680abd6ff59", "filename": "gcc/testsuite/gcc.dg/lto/20081202-1_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081202-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081202-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081202-1_0.c?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-lto-options {{-fwhopr -O3}} } */\n+/* { dg-lto-options {{-flto -flto-partition=1to1 -O3}} } */\n \n extern void exit (int);\n extern void foo (void);"}, {"sha": "9d34f740b362030640ced29fdaaefb210c98d179", "filename": "gcc/testsuite/gcc.dg/lto/20081202-2_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081202-2_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081202-2_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081202-2_0.c?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-lto-options {{-fwhopr -O3}} } */\n+/* { dg-lto-options {{-flto -flto-partition=1to1 -O3}} } */\n \n extern void exit (int);\n extern void *foo (void);"}, {"sha": "a4b25ff82fb623593c5f9310420395aaf15734b4", "filename": "gcc/testsuite/gcc.dg/lto/20081204-1_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081204-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081204-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081204-1_0.c?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,5 +1,5 @@\n /* { dg-lto-do link } */\n-/* { dg-lto-options {{-fwhopr -fPIC -r -nostdlib}} } */\n+/* { dg-lto-options {{-flto -flto-partition=1to1 -fPIC -r -nostdlib}} } */\n \n /* Tests for the absence during linking of:\n    lto1: error: type of 'i' does not match original declaration  */"}, {"sha": "d050e23123892634527120c0abc8dfbe5428f2c2", "filename": "gcc/testsuite/gcc.dg/lto/20081224_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081224_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081224_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081224_0.c?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,5 +1,5 @@\n /* { dg-lto-do link } */\n-/* { dg-lto-options {{-fwhopr -r -nostdlib -fPIC}} } */\n+/* { dg-lto-options {{-flto -flto-partition=1to1 -r -nostdlib -fPIC}} } */\n #include \"20081224_0.h\"\n \n extern struct foo x;"}, {"sha": "5bb3a919a599056a253a0aed7ace60fc55a4f77f", "filename": "gcc/testsuite/gcc.dg/lto/20090116_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090116_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090116_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090116_0.c?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,5 +1,5 @@\n /* { dg-lto-do link } */\n-/* { dg-lto-options {{-O1 -fwhopr -fPIC}} } */\n+/* { dg-lto-options {{-O1 -flto -flto-partition=1to1 -fPIC}} } */\n /* { dg-extra-ld-options {-r -nostdlib -O0} } */\n \n int foo(void) {"}, {"sha": "01a12994021836cb4b9ccc424f5a7a5d9ec85477", "filename": "gcc/testsuite/gcc.dg/lto/20090126-1_0.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090126-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090126-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090126-1_0.c?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,6 +1,6 @@\n /* { dg-lto-do link } */\n-/* { dg-lto-options {{-O0 -fwhopr}} } */\n-/* { dg-extra-ld-options {-r -nostdlib -O2 -fwhopr} } */\n+/* { dg-lto-options {{-O0 -flto -flto-partition=1to1}} } */\n+/* { dg-extra-ld-options {-r -nostdlib -O2 -flto -flto-partition=1to1} } */\n \n int main(int argc, char **argv) {\n   return 0;"}, {"sha": "2239412d1af028b44360c2f8d6d2fdeeb2cc6a17", "filename": "gcc/testsuite/gcc.dg/lto/20090126-2_0.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090126-2_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090126-2_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090126-2_0.c?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,6 +1,6 @@\n /* { dg-lto-do link } */\n-/* { dg-lto-options {{-fPIC -O2 -fwhopr}} } */\n-/* { dg-extra-ld-options {-fno-PIC -r -nostdlib -O2 -fwhopr} } */\n+/* { dg-lto-options {{-fPIC -O2 -flto -flto-partition=1to1}} } */\n+/* { dg-extra-ld-options {-fno-PIC -r -nostdlib -O2 -flto -flto-partition=1to1} } */\n \n int main(int argc, char **argv) {\n   return 0;"}, {"sha": "c9fc97334c758693ed15970c9112660febb286fa", "filename": "gcc/testsuite/gcc.dg/lto/20090206-1_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090206-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090206-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090206-1_0.c?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,6 +1,6 @@\n /* { dg-lto-do link } */\n /* { dg-skip-if \"\" { ! { i?86-*-linux* x86_64-*-linux* } } { \"*\" } { \"\" } } */\n-/* { dg-lto-options {{-fPIC -r -nostdlib -fwhopr -msse2}} } */\n+/* { dg-lto-options {{-fPIC -r -nostdlib -flto -flto-partition=1to1 -msse2}} } */\n /* { dg-require-effective-target sse2 } */\n /* { dg-suppress-ld-options {-fPIC -msse2} } */\n "}, {"sha": "4ca80ea4810913cafc91d05f19a2689a106d5d1b", "filename": "gcc/testsuite/gcc.dg/lto/20090206-2_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090206-2_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090206-2_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090206-2_0.c?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,6 +1,6 @@\n /* { dg-lto-do link } */\n /* { dg-skip-if \"\" { ! { i?86-*-linux* x86_64-*-linux* } } { \"*\" } { \"\" } } */\n-/* { dg-lto-options {{-fwhopr -fPIC}} } */\n+/* { dg-lto-options {{-flto -flto-partition=1to1 -fPIC}} } */\n /* { dg-suppress-ld-options {-fPIC} } */\n \n void func(int n) {"}, {"sha": "81a93e6da53ff23d1232ec09174518bd2d9ea337", "filename": "gcc/testsuite/gcc.dg/lto/20090219_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090219_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090219_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090219_0.c?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,5 +1,5 @@\n /* { dg-lto-do link } */\n-/* { dg-lto-options {{-O3 -fwhopr -fPIC -r -nostdlib}} } */\n+/* { dg-lto-options {{-O3 -flto -flto-partition=1to1 -fPIC -r -nostdlib}} } */\n \n struct Foo { int f1, f2, f3, f4, f5; };\n "}, {"sha": "1cc4b78b31b2305df7ae9c26f99f4b7e589ab03a", "filename": "gcc/testsuite/gcc.dg/lto/20091015-1_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091015-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091015-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091015-1_0.c?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,5 +1,5 @@\n /* { dg-lto-do link } */\n-/* { dg-lto-options {{-fPIC -r -nostdlib -O2 -flto} {-fPIC -r -nostdlib -O2 -fwhopr}} } */\n+/* { dg-lto-options {{-fPIC -r -nostdlib -O2 -flto} {-fPIC -r -nostdlib -O2 -flto -flto-partition=1to1}} } */\n \n #include \"20091015-1_b.h\"\n void diagnostic_initialize (FILE **stream) { *stream = stderr; }"}, {"sha": "eb9316515005fcca58d669da22bc9eb645a98346", "filename": "gcc/testsuite/gcc.dg/lto/20100423-1_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20100423-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20100423-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20100423-1_0.c?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,5 +1,5 @@\n /* { dg-lto-do run } */\n-/* { dg-lto-options {{-O2 -flto}} } */\n+/* { dg-lto-options {{-O2 -flto -flto-partition=none}} } */\n \n struct bar {int x;};\n extern struct bar foo(void);"}, {"sha": "f546757c2168e886bcc32f876c05c1e665d9f9e8", "filename": "gcc/testsuite/gcc.dg/lto/20100423-2_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20100423-2_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20100423-2_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20100423-2_0.c?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,5 +1,5 @@\n /* { dg-lto-do link } */\n-/* { dg-lto-options {{-O2 -flto} {-O2 -fwhopr} {-O3 -flto} {-O3 -fwhopr}} } */\n+/* { dg-lto-options {{-O2 -flto -flto-partition=none} {-O2 -flto -flto-partition=1to1} {-O3 -flto -flto-partition=none} {-O3 -flto -flto-partition=1to1}} } */\n \n #include <stdio.h>\n "}, {"sha": "1bbc7f45f8d42aef706a006c66132003745cb01b", "filename": "gcc/testsuite/gcc.dg/lto/const-uniq_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fconst-uniq_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fconst-uniq_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fconst-uniq_0.c?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,7 +1,7 @@\n /* The 3 constant initializers should be uniquized.  */\n \n /* { dg-lto-do run } */\n-/* { dg-lto-options {{-Os -flto} {-Os -fwhopr} } } */\n+/* { dg-lto-options {{-Os -flto -flto-partition=none} {-Os -flto -flto-partition=1to1} } } */\n \n int lookup1 (int i)\n {"}, {"sha": "097c1c2538f78506d83d927ae48a7c8409113cce", "filename": "gcc/testsuite/gcc.dg/lto/ipacp_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fipacp_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fipacp_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fipacp_0.c?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-lto-options {{ -O1 -fwhopr -fipa-cp -fipa-cp-clone}} } */\n+/* { dg-lto-options {{ -O1 -flto -flto-partition=1to1 -fipa-cp -fipa-cp-clone}} } */\n /* { dg-lto-do run } */\n \n /* Test that clonning happens and we unify declarations of a from both units.  */"}, {"sha": "f7ae0b4e3163848d5f79d1472c92703d1f971506", "filename": "gcc/testsuite/gcc.dg/lto/ipareference2_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fipareference2_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fipareference2_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fipareference2_0.c?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-lto-options {{ -O1 -fwhopr -fwhole-program}} } */\n+/* { dg-lto-options {{ -O1 -flto -flto-partition=1to1 -fwhole-program}} } */\n /* { dg-lto-do run } */\n \n /* Verify that ipa-reference marks A as constant and we fold references"}, {"sha": "f8970f0e9ece673a6a62265f720128f9661a6142", "filename": "gcc/testsuite/gcc.dg/lto/ipareference_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fipareference_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fipareference_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fipareference_0.c?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-lto-options {{ -O1 -fwhopr }} } */\n+/* { dg-lto-options {{ -O1 -flto -flto-partition=1to1 }} } */\n /* { dg-lto-do run } */\n \n /* Test that ipa-reference notice that get_val will not change since do_nothing does not"}, {"sha": "1751d65d293ce1123388a1e14d817e5c9681b909", "filename": "gcc/testsuite/gcc.dg/lto/materialize-1_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fmaterialize-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fmaterialize-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fmaterialize-1_0.c?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-lto-options {{ -O3 -fwhopr}} } */\n+/* { dg-lto-options {{ -O3 -flto -flto-partition=1to1}} } */\n /* { dg-lto-do run } */\n extern void clone_me (int, int);\n int a=15;"}, {"sha": "7f493cd9f9cce72ebb72167a29390adbae253819", "filename": "gcc/testsuite/gcc.dg/lto/noreturn-1_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fnoreturn-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fnoreturn-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fnoreturn-1_0.c?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -1,5 +1,5 @@\n /* { dg-lto-do run } */\n-/* { dg-lto-options {{-O2 -fwhopr} } } */\n+/* { dg-lto-options {{-O2 -flto -flto-partition=1to1} } } */\n \n void exit (int);\n __attribute__ ((noreturn))"}, {"sha": "551de7d3d7e146edcff84589fff91858158001a1", "filename": "gcc/testsuite/lib/c-torture.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Flib%2Fc-torture.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Flib%2Fc-torture.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fc-torture.exp?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -53,8 +53,8 @@ if [info exists ADDITIONAL_TORTURE_OPTIONS] {\n set LTO_TORTURE_OPTIONS \"\"\n if [check_effective_target_lto] {\n     set LTO_TORTURE_OPTIONS [list \\\n-\t{ -O2 -flto } \\\n-\t{ -O2 -fwhopr }\n+\t{ -O2 -flto -flto-partition=none } \\\n+\t{ -O2 -flto }\n     ]\n }\n "}, {"sha": "4cdfa3e0251f65accfe0a0fa20f6ed05e2a22c5d", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -70,8 +70,8 @@ if [info exists ADDITIONAL_TORTURE_OPTIONS] {\n set LTO_TORTURE_OPTIONS \"\"\n if [check_effective_target_lto] {\n     set LTO_TORTURE_OPTIONS [list \\\n-\t{ -O2 -flto } \\\n-\t{ -O2 -fwhopr }\n+\t{ -O2 -flto -flto-partition=none } \\\n+\t{ -O2 -flto }\n     ]\n }\n "}, {"sha": "f4469eefbab5d67af629ab1459ae03dbdb86daaf", "filename": "gcc/testsuite/lib/lto.exp", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Flib%2Flto.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Flib%2Flto.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Flto.exp?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -64,8 +64,10 @@ proc lto_init { args } {\n     # add it to site.exp directly.\n     if ![info exists LTO_OPTIONS] {\n \tset LTO_OPTIONS [list\t\\\n-\t    {-O0 -fwhopr}\t\\\n-\t    {-O2 -fwhopr}\t\\\n+\t    {-O0 -flto -flto-partition=none } \\\n+\t    {-O2 -flto -flto-partition=none } \\\n+\t    {-O0 -flto -flto-partition=1to1 } \\\n+\t    {-O2 -flto -flto-partition=1to1 } \\\n \t    {-O0 -flto}\t\t\\\n \t    {-O2 -flto}\t\t\\\n \t]"}, {"sha": "4ae08c17277834deefcc275787e13f54e029f837", "filename": "gcc/testsuite/obj-c++.dg/lto/lto.exp", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Flto%2Flto.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Flto%2Flto.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Flto%2Flto.exp?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -41,10 +41,10 @@ if { ![check_effective_target_lto] } {\n global LTO_OPTIONS\n \n set LTO_OPTIONS [list\t\\\n-  {-O0 -fwhopr -fgnu-runtime}\t\\\n-  {-O2 -fwhopr -fgnu-runtime}\t\\\n-  {-O0 -flto -fgnu-runtime} \t\\\n+  {-O0 -flto -fgnu-runtime}\t\\\n   {-O2 -flto -fgnu-runtime}\t\\\n+  {-O0 -flto -flto-partition=none -fgnu-runtime} \t\\\n+  {-O2 -flto -flto-partition=none -fgnu-runtime}\t\\\n ]\n \n obj-c++_init\n@@ -67,10 +67,10 @@ foreach src $tests {\n # darwin targets can also run code with the NeXT runtime.\n if [istarget \"*-*-darwin*\" ] {\n set LTO_OPTIONS [list\t\\\n-  {-O0 -fwhopr -fnext-runtime}\t\\\n-  {-O2 -fwhopr -fnext-runtime}\t\\\n-  {-O0 -flto -fnext-runtime} \t\\\n+  {-O0 -flto -fnext-runtime}\t\\\n   {-O2 -flto -fnext-runtime}\t\\\n+  {-O0 -flto -flto-partition=none -fnext-runtime} \t\\\n+  {-O2 -flto -flto-partition=none -fnext-runtime}\t\\\n ]\n   foreach src $tests {\n     # If we're only testing specific files and this isn't one of them, skip it."}, {"sha": "f567cd93e2b291557d2dded3a6ef74d32cab257c", "filename": "gcc/testsuite/objc.dg/lto/lto.exp", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fobjc.dg%2Flto%2Flto.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Ftestsuite%2Fobjc.dg%2Flto%2Flto.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Flto%2Flto.exp?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -41,10 +41,10 @@ if { ![check_effective_target_lto] } {\n global LTO_OPTIONS\n \n set LTO_OPTIONS [list\t\\\n-  {-O0 -fwhopr -fgnu-runtime}\t\\\n-  {-O2 -fwhopr -fgnu-runtime}\t\\\n-  {-O0 -flto -fgnu-runtime} \t\\\n+  {-O0 -flto -fgnu-runtime}\t\\\n   {-O2 -flto -fgnu-runtime}\t\\\n+  {-O0 -flto -flto-partition=none -fgnu-runtime} \t\\\n+  {-O2 -flto -flto-partition=none -fgnu-runtime}\t\\\n ]\n \n objc_init\n@@ -67,10 +67,10 @@ foreach src $tests {\n # darwin targets can also run code with the NeXT runtime.\n if [istarget \"*-*-darwin*\" ] {\n set LTO_OPTIONS [list\t\\\n-  {-O0 -fwhopr -fnext-runtime}\t\\\n-  {-O2 -fwhopr -fnext-runtime}\t\\\n-  {-O0 -flto -fnext-runtime} \t\\\n+  {-O0 -flto -fnext-runtime}\t\\\n   {-O2 -flto -fnext-runtime}\t\\\n+  {-O0 -flto -flto-partition=none -fnext-runtime} \t\\\n+  {-O2 -flto -flto-partition=none -fnext-runtime}\t\\\n ]\n   foreach src $tests {\n     # If we're only testing specific files and this isn't one of them, skip it."}, {"sha": "2a96d796b5e8e7eb0457c3458886ddb9c350ff01", "filename": "gcc/varpool.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Fvarpool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014d92e193f6ef3d06143984524b72ee020a7c04/gcc%2Fvarpool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarpool.c?ref=014d92e193f6ef3d06143984524b72ee020a7c04", "patch": "@@ -343,7 +343,6 @@ decide_is_variable_needed (struct varpool_node *node, tree decl)\n   if (TREE_PUBLIC (decl)\n       && !flag_whole_program\n       && !flag_lto\n-      && !flag_whopr\n       && !DECL_COMDAT (decl)\n       && !DECL_EXTERNAL (decl))\n     return true;"}]}