{"sha": "0e75523eb4e5b6de0ba5557122653ba6d1c7e2b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGU3NTUyM2ViNGU1YjZkZTBiYTU1NTcxMjI2NTNiYTZkMWM3ZTJiOQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2002-11-01T19:32:21Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-11-01T19:32:21Z"}, "message": "mauve.exp (find_mauve_sources): New proc.\n\n\t* libjava.mauve/mauve.exp (find_mauve_sources): New proc.\n\t(test_mauve): Use it.\n\t(test_mauve_sim): Likewise.\n\nFrom-SVN: r58725", "tree": {"sha": "5a53bd54e4084ff9f301fcc5f421e7659e2bc3b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a53bd54e4084ff9f301fcc5f421e7659e2bc3b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e75523eb4e5b6de0ba5557122653ba6d1c7e2b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e75523eb4e5b6de0ba5557122653ba6d1c7e2b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e75523eb4e5b6de0ba5557122653ba6d1c7e2b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e75523eb4e5b6de0ba5557122653ba6d1c7e2b9/comments", "author": null, "committer": null, "parents": [{"sha": "23ae3eb1f89fe1b75e9d4e2311d95d7bebba52fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23ae3eb1f89fe1b75e9d4e2311d95d7bebba52fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23ae3eb1f89fe1b75e9d4e2311d95d7bebba52fb"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "639117bfb6e628a6ff8af3661c9d7a3066588f50", "filename": "libjava/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e75523eb4e5b6de0ba5557122653ba6d1c7e2b9/libjava%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e75523eb4e5b6de0ba5557122653ba6d1c7e2b9/libjava%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FChangeLog?ref=0e75523eb4e5b6de0ba5557122653ba6d1c7e2b9", "patch": "@@ -1,3 +1,9 @@\n+2002-11-01  Tom Tromey  <tromey@redhat.com>\n+\n+\t* libjava.mauve/mauve.exp (find_mauve_sources): New proc.\n+\t(test_mauve): Use it.\n+\t(test_mauve_sim): Likewise.\n+\n 2002-10-24  Tom Tromey  <tromey@redhat.com>\n \n \t* libjava.lang/Primes.java: Removed."}, {"sha": "a9a1c98d6ac3ebf9d7e8062a8eb9076eb37bc6bb", "filename": "libjava/testsuite/libjava.mauve/mauve.exp", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e75523eb4e5b6de0ba5557122653ba6d1c7e2b9/libjava%2Ftestsuite%2Flibjava.mauve%2Fmauve.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e75523eb4e5b6de0ba5557122653ba6d1c7e2b9/libjava%2Ftestsuite%2Flibjava.mauve%2Fmauve.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.mauve%2Fmauve.exp?ref=0e75523eb4e5b6de0ba5557122653ba6d1c7e2b9", "patch": "@@ -52,12 +52,27 @@ proc mauve_compute_uses {aName} {\n   return [lsort [array names uses]]\n }\n \n+# Find Mauve sources.  At end, env(MAUVEDIR) points to sources.\n+# Returns 0 if sources not found, 1 otherwise.\n+proc find_mauve_sources {} {\n+  global env srcdir\n+\n+  if {[info exists env(MAUVEDIR)]} {\n+    return 1\n+  } elseif {[file isdirectory $srcdir/libjava.mauve/mauve]} {\n+    set env(MAUVEDIR) $srcdir/libjava.mauve/mauve\n+    return 1\n+  }\n+\n+  return 0\n+}\n+\n # Run all the Mauve tests.  Return 1 on success, 0 on any failure.  If\n # the tests are skipped, that is treated like success.\n proc test_mauve {} {\n   global srcdir objdir subdir env\n \n-  if {! [info exists env(MAUVEDIR)]} then {\n+  if {! [find_mauve_sources]} then {\n     verbose \"MAUVEDIR not set; not running Mauve tests\"\n     return 1\n   }\n@@ -220,7 +235,7 @@ proc test_mauve {} {\n proc test_mauve_sim {} {\n   global srcdir subdir env\n \n-  if {! [info exists env(MAUVEDIR)]} then {\n+  if {! [find_mauve_sources]} then {\n     verbose \"MAUVEDIR not set; not running Mauve tests\"\n     return 1\n   }"}]}