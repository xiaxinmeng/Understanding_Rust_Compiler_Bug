{"sha": "1daa567cf8e5d6c69e97021aac2a46281328d1ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWRhYTU2N2NmOGU1ZDZjNjllOTcwMjFhYWMyYTQ2MjgxMzI4ZDFlZQ==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2004-11-27T12:37:32Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2004-11-27T12:37:32Z"}, "message": "link.cc (ensure_class_linked): Conditionally compile _Jv_IsInterpretedClass on INTERPRETER.\n\n2004-11-27  Andrew Haley  <aph@redhat.com>\n\n\t* link.cc (ensure_class_linked): Conditionally compile\n\t_Jv_IsInterpretedClass on INTERPRETER.\n\t(print_class_loaded): Likewise.\n\t(wait_for_state): Likewise.\n\n\t* include/jvm.h (ROUND): Move to here from include/java-interp.h.\n\t* include/java-interp.h (ROUND): Remove.\n\nFrom-SVN: r91375", "tree": {"sha": "900597a6d50287ab3119dd427bda46b0a85dee9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/900597a6d50287ab3119dd427bda46b0a85dee9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1daa567cf8e5d6c69e97021aac2a46281328d1ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1daa567cf8e5d6c69e97021aac2a46281328d1ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1daa567cf8e5d6c69e97021aac2a46281328d1ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1daa567cf8e5d6c69e97021aac2a46281328d1ee/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "02a854f97056ad1905dbb531e179ef1b0a254497", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02a854f97056ad1905dbb531e179ef1b0a254497", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02a854f97056ad1905dbb531e179ef1b0a254497"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "529e2a25806740512dd48c6e6a20ae11d0a3adfd", "filename": "libjava/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1daa567cf8e5d6c69e97021aac2a46281328d1ee/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1daa567cf8e5d6c69e97021aac2a46281328d1ee/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=1daa567cf8e5d6c69e97021aac2a46281328d1ee", "patch": "@@ -1,3 +1,12 @@\n+2004-11-27  Andrew Haley  <aph@redhat.com>\n+\n+\t* link.cc (ensure_class_linked): Conditionally compile\n+\t_Jv_IsInterpretedClass on INTERPRETER.\n+\t(print_class_loaded): Likewise.\n+\t(wait_for_state): Likewise.\n+\t* include/jvm.h (ROUND): Move to here from include/java-interp.h.\n+\t* include/java-interp.h (ROUND): Remove.\n+\n 2004-11-25  Tom Tromey  <tromey@redhat.com>\n \n \t* gnu/gcj/util/natDebug.cc (getField): Don't qualify name."}, {"sha": "4126c2f44cd036bca23174a702aa107141bedcd4", "filename": "libjava/include/java-interp.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1daa567cf8e5d6c69e97021aac2a46281328d1ee/libjava%2Finclude%2Fjava-interp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1daa567cf8e5d6c69e97021aac2a46281328d1ee/libjava%2Finclude%2Fjava-interp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fjava-interp.h?ref=1daa567cf8e5d6c69e97021aac2a46281328d1ee", "patch": "@@ -45,9 +45,6 @@ int  _Jv_count_arguments (_Jv_Utf8Const *signature,\n \t\t\t  jboolean staticp = true);\n void _Jv_VerifyMethod (_Jv_InterpMethod *method);\n \n-/* FIXME: this should really be defined in some more generic place */\n-#define ROUND(V, A) (((((unsigned) (V))-1) | ((A)-1))+1)\n-\n /* the interpreter is written in C++, primarily because it makes it easy for\n  * the entire thing to be \"friend\" with class Class. */\n "}, {"sha": "ff2c9b1ec87ef10cb216e460d2b52711be020df4", "filename": "libjava/include/jvm.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1daa567cf8e5d6c69e97021aac2a46281328d1ee/libjava%2Finclude%2Fjvm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1daa567cf8e5d6c69e97021aac2a46281328d1ee/libjava%2Finclude%2Fjvm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fjvm.h?ref=1daa567cf8e5d6c69e97021aac2a46281328d1ee", "patch": "@@ -555,4 +555,7 @@ extern void (*_Jv_JVMPI_Notify_THREAD_START) (JVMPI_Event *event);\n extern void (*_Jv_JVMPI_Notify_THREAD_END) (JVMPI_Event *event);\n #endif\n \n+/* FIXME: this should really be defined in some more generic place */\n+#define ROUND(V, A) (((((unsigned) (V))-1) | ((A)-1))+1)\n+\n #endif /* __JAVA_JVM_H__ */"}, {"sha": "e611b766f24cd6323feb27ebfcc83e0263b1ea3f", "filename": "libjava/link.cc", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1daa567cf8e5d6c69e97021aac2a46281328d1ee/libjava%2Flink.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1daa567cf8e5d6c69e97021aac2a46281328d1ee/libjava%2Flink.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Flink.cc?ref=1daa567cf8e5d6c69e97021aac2a46281328d1ee", "patch": "@@ -1422,7 +1422,9 @@ _Jv_Linker::ensure_class_linked (jclass klass)\n       // a reference to a class we can't access.  This can validly\n       // occur in an obscure case involving the InnerClasses\n       // attribute.\n+#ifdef INTERPRETER\n       if (! _Jv_IsInterpretedClass (klass))\n+#endif\n \t{\n \t  // Resolve class constants first, since other constant pool\n \t  // entries may rely on these.\n@@ -1677,7 +1679,11 @@ _Jv_Linker::print_class_loaded (jclass klass)\n \n   // We use a somewhat bogus test for the ABI here.\n   char *abi;\n+#ifdef INTERPRETER\n   if (_Jv_IsInterpretedClass (klass))\n+#else\n+  if (false)\n+#endif\n     abi = \"bytecode\";\n   else if (klass->state == JV_STATE_PRELOADING)\n     abi = \"BC-compiled\";\n@@ -1714,7 +1720,10 @@ _Jv_Linker::wait_for_state (jclass klass, int state)\n   if (gcj::verbose_class_flag\n       && (klass->state == JV_STATE_COMPILED\n \t  || klass->state == JV_STATE_PRELOADING)\n-      && ! _Jv_IsInterpretedClass (klass))\n+#ifdef INTERPRETER\n+      && ! _Jv_IsInterpretedClass (klass)\n+#endif\n+      )\n     print_class_loaded (klass);\n \n   try"}]}