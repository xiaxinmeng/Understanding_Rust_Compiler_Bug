{"sha": "83310a08a2bc52b6e8c3a3e3216b4e723e58c961", "node_id": "C_kwDOANBUbNoAKDgzMzEwYTA4YTJiYzUyYjZlOGMzYTNlMzIxNmI0ZTcyM2U1OGM5NjE", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-11-12T13:50:57Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-11-12T14:06:12Z"}, "message": "libbacktrace: fix UBSAN issues\n\nFix issues mentioned in the PR.\n\n\tPR libbacktrace/103167\n\nlibbacktrace/ChangeLog:\n\n\t* elf.c (elf_uncompress_lzma_block): Cast to unsigned int.\n\t(elf_uncompress_lzma): Likewise.\n\t* xztest.c (test_samples): memcpy only if v > 0.", "tree": {"sha": "b870f31bb1632ac47151b99cc988f6aaf525a6ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b870f31bb1632ac47151b99cc988f6aaf525a6ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83310a08a2bc52b6e8c3a3e3216b4e723e58c961", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83310a08a2bc52b6e8c3a3e3216b4e723e58c961", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83310a08a2bc52b6e8c3a3e3216b4e723e58c961", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83310a08a2bc52b6e8c3a3e3216b4e723e58c961/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa1fd30df56d752e3d5a81af409875a1f1e3e327", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa1fd30df56d752e3d5a81af409875a1f1e3e327", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa1fd30df56d752e3d5a81af409875a1f1e3e327"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "8b87b2dd6b9069697eb43f5c1c940f37c68e062f", "filename": "libbacktrace/elf.c", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83310a08a2bc52b6e8c3a3e3216b4e723e58c961/libbacktrace%2Felf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83310a08a2bc52b6e8c3a3e3216b4e723e58c961/libbacktrace%2Felf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Felf.c?ref=83310a08a2bc52b6e8c3a3e3216b4e723e58c961", "patch": "@@ -3172,10 +3172,10 @@ elf_uncompress_lzma_block (const unsigned char *compressed,\n   /* Block header CRC.  */\n   computed_crc = elf_crc32 (0, compressed + block_header_offset,\n \t\t\t    block_header_size - 4);\n-  stream_crc = (compressed[off]\n-\t\t| (compressed[off + 1] << 8)\n-\t\t| (compressed[off + 2] << 16)\n-\t\t| (compressed[off + 3] << 24));\n+  stream_crc = ((uint32_t)compressed[off]\n+\t\t| ((uint32_t)compressed[off + 1] << 8)\n+\t\t| ((uint32_t)compressed[off + 2] << 16)\n+\t\t| ((uint32_t)compressed[off + 3] << 24));\n   if (unlikely (computed_crc != stream_crc))\n     {\n       elf_uncompress_failed ();\n@@ -3785,10 +3785,10 @@ elf_uncompress_lzma (struct backtrace_state *state,\n \n   /* Next comes a CRC of the stream flags.  */\n   computed_crc = elf_crc32 (0, compressed + 6, 2);\n-  stream_crc = (compressed[8]\n-\t\t| (compressed[9] << 8)\n-\t\t| (compressed[10] << 16)\n-\t\t| (compressed[11] << 24));\n+  stream_crc = ((uint32_t)compressed[8]\n+\t\t| ((uint32_t)compressed[9] << 8)\n+\t\t| ((uint32_t)compressed[10] << 16)\n+\t\t| ((uint32_t)compressed[11] << 24));\n   if (unlikely (computed_crc != stream_crc))\n     {\n       elf_uncompress_failed ();\n@@ -3829,10 +3829,10 @@ elf_uncompress_lzma (struct backtrace_state *state,\n \n   /* Before that is a footer CRC.  */\n   computed_crc = elf_crc32 (0, compressed + offset, 6);\n-  stream_crc = (compressed[offset - 4]\n-\t\t| (compressed[offset - 3] << 8)\n-\t\t| (compressed[offset - 2] << 16)\n-\t\t| (compressed[offset - 1] << 24));\n+  stream_crc = ((uint32_t)compressed[offset - 4]\n+\t\t| ((uint32_t)compressed[offset - 3] << 8)\n+\t\t| ((uint32_t)compressed[offset - 2] << 16)\n+\t\t| ((uint32_t)compressed[offset - 1] << 24));\n   if (unlikely (computed_crc != stream_crc))\n     {\n       elf_uncompress_failed ();\n@@ -3888,10 +3888,10 @@ elf_uncompress_lzma (struct backtrace_state *state,\n   /* Next is a CRC of the index.  */\n   computed_crc = elf_crc32 (0, compressed + index_offset,\n \t\t\t    offset - index_offset);\n-  stream_crc = (compressed[offset]\n-\t\t| (compressed[offset + 1] << 8)\n-\t\t| (compressed[offset + 2] << 16)\n-\t\t| (compressed[offset + 3] << 24));\n+  stream_crc = ((uint32_t)compressed[offset]\n+\t\t| ((uint32_t)compressed[offset + 1] << 8)\n+\t\t| ((uint32_t)compressed[offset + 2] << 16)\n+\t\t| ((uint32_t)compressed[offset + 3] << 24));\n   if (unlikely (computed_crc != stream_crc))\n     {\n       elf_uncompress_failed ();"}, {"sha": "6c60ff5015917c7df73b98519350f1d6ac651247", "filename": "libbacktrace/xztest.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83310a08a2bc52b6e8c3a3e3216b4e723e58c961/libbacktrace%2Fxztest.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83310a08a2bc52b6e8c3a3e3216b4e723e58c961/libbacktrace%2Fxztest.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fxztest.c?ref=83310a08a2bc52b6e8c3a3e3216b4e723e58c961", "patch": "@@ -172,7 +172,7 @@ test_samples (struct backtrace_state *state)\n \t\t       tests[i].name, uncompressed_len, v);\n \t      ++failures;\n \t    }\n-\t  else if (memcmp (tests[i].uncompressed, uncompressed, v) != 0)\n+\t  else if (v > 0 && memcmp (tests[i].uncompressed, uncompressed, v) != 0)\n \t    {\n \t      size_t j;\n "}]}