{"sha": "60e20b9079b630a17b18d19bffd01097454061de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBlMjBiOTA3OWI2MzBhMTdiMThkMTliZmZkMDEwOTc0NTQwNjFkZQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2004-07-06T18:27:35Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2004-07-06T18:27:35Z"}, "message": "re PR rtl-optimization/16380 (Use of uninitialised register after dbra conversion)\n\n\tPR rtl-optimization/16380\n\t* loop.c (check_dbra_loop): Sink comparison instructions if they\n\tdo something other than set cc0.\n\nFrom-SVN: r84161", "tree": {"sha": "1284532d79574aa97537f07b98681c409f9ae900", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1284532d79574aa97537f07b98681c409f9ae900"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60e20b9079b630a17b18d19bffd01097454061de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60e20b9079b630a17b18d19bffd01097454061de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60e20b9079b630a17b18d19bffd01097454061de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60e20b9079b630a17b18d19bffd01097454061de/comments", "author": null, "committer": null, "parents": [{"sha": "37bcf311cf08d695ad850647cc757e637e1e59c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37bcf311cf08d695ad850647cc757e637e1e59c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37bcf311cf08d695ad850647cc757e637e1e59c0"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "c9e02507f532920f0cd98c103ed44ce9f1ca3bb3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60e20b9079b630a17b18d19bffd01097454061de/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60e20b9079b630a17b18d19bffd01097454061de/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=60e20b9079b630a17b18d19bffd01097454061de", "patch": "@@ -1,3 +1,9 @@\n+2004-07-06  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\tPR rtl-optimization/16380\n+\t* loop.c (check_dbra_loop): Sink comparison instructions if they\n+\tdo something other than set cc0.\n+\n 2004-07-06  James E Wilson  <wilson@specifixinc.com>\n \n \t* doc/interface.texi (longjmp and automatic variables): Delete"}, {"sha": "e0af19dd45e47f079dd3ac1328610f793c23f0cd", "filename": "gcc/loop.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60e20b9079b630a17b18d19bffd01097454061de/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60e20b9079b630a17b18d19bffd01097454061de/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=60e20b9079b630a17b18d19bffd01097454061de", "patch": "@@ -8284,6 +8284,7 @@ check_dbra_loop (struct loop *loop, int insn_count)\n \t      enum rtx_code cmp_code;\n \t      int comparison_const_width;\n \t      unsigned HOST_WIDE_INT comparison_sign_mask;\n+\t      bool keep_first_compare;\n \n \t      add_val = INTVAL (bl->biv->add_val);\n \t      comparison_value = XEXP (comparison, 1);\n@@ -8476,13 +8477,26 @@ check_dbra_loop (struct loop *loop, int insn_count)\n \t\t not delete the label.  */\n \t      LABEL_NUSES (XEXP (jump_label, 0))++;\n \n+\t      /* If we have a separate comparison insn that does more\n+\t\t than just set cc0, the result of the comparison might\n+\t\t be used outside the loop.  */\n+\t      keep_first_compare = (compare_and_branch == 2\n+#ifdef HAVE_CC0\n+\t\t\t\t    && sets_cc0_p (first_compare) <= 0\n+#endif\n+\t\t\t\t    );\n+\n \t      /* Emit an insn after the end of the loop to set the biv's\n \t\t proper exit value if it is used anywhere outside the loop.  */\n-\t      if ((REGNO_LAST_UID (bl->regno) != INSN_UID (first_compare))\n+\t      if (keep_first_compare\n+\t\t  || (REGNO_LAST_UID (bl->regno) != INSN_UID (first_compare))\n \t\t  || ! bl->init_insn\n \t\t  || REGNO_FIRST_UID (bl->regno) != INSN_UID (bl->init_insn))\n \t\tloop_insn_sink (loop, gen_load_of_final_value (reg, final_value));\n \n+\t      if (keep_first_compare)\n+\t\tloop_insn_sink (loop, PATTERN (first_compare));\n+\n \t      /* Delete compare/branch at end of loop.  */\n \t      delete_related_insns (PREV_INSN (loop_end));\n \t      if (compare_and_branch == 2)"}, {"sha": "4168a683c5ad70e58ed6b79fba7986b3a8d77fe1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60e20b9079b630a17b18d19bffd01097454061de/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60e20b9079b630a17b18d19bffd01097454061de/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=60e20b9079b630a17b18d19bffd01097454061de", "patch": "@@ -1,3 +1,7 @@\n+2004-07-06  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* gcc.c-torture/execute/20040706-1.c: New test.\n+\n 2004-07-06  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\n \n \tPR c++/3671"}, {"sha": "6b0ab36ac6753f1e3e597fcae45304ca62cd7a87", "filename": "gcc/testsuite/gcc.c-torture/execute/20040706-1.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60e20b9079b630a17b18d19bffd01097454061de/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040706-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60e20b9079b630a17b18d19bffd01097454061de/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040706-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040706-1.c?ref=60e20b9079b630a17b18d19bffd01097454061de", "patch": "@@ -0,0 +1,9 @@\n+int main ()\n+{\n+  int i;\n+  for (i = 0; i < 10; i++)\n+    continue;\n+  if (i < 10)\n+    abort ();\n+  exit (0);\n+}"}]}