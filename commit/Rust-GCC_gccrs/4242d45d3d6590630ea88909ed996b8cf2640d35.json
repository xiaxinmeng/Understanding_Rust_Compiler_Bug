{"sha": "4242d45d3d6590630ea88909ed996b8cf2640d35", "node_id": "C_kwDOANBUbNoAKDQyNDJkNDVkM2Q2NTkwNjMwZWE4ODkwOWVkOTk2YjhjZjI2NDBkMzU", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-02-11T10:27:55Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-02-11T10:27:55Z"}, "message": "refactor named_constant_expression out of the backend class", "tree": {"sha": "d4059dbe453be902ebd68d4704160db6942bb1b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4059dbe453be902ebd68d4704160db6942bb1b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4242d45d3d6590630ea88909ed996b8cf2640d35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4242d45d3d6590630ea88909ed996b8cf2640d35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4242d45d3d6590630ea88909ed996b8cf2640d35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4242d45d3d6590630ea88909ed996b8cf2640d35/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5801e165b3902f3376387649c632933c05647274", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5801e165b3902f3376387649c632933c05647274", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5801e165b3902f3376387649c632933c05647274"}], "stats": {"total": 56, "additions": 24, "deletions": 32}, "files": [{"sha": "9f936d2ea5cc36eec76b1e155c1a24e9f5d05b67", "filename": "gcc/rust/backend/rust-compile-base.cc", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4242d45d3d6590630ea88909ed996b8cf2640d35/gcc%2Frust%2Fbackend%2Frust-compile-base.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4242d45d3d6590630ea88909ed996b8cf2640d35/gcc%2Frust%2Fbackend%2Frust-compile-base.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-base.cc?ref=4242d45d3d6590630ea88909ed996b8cf2640d35", "patch": "@@ -445,8 +445,26 @@ HIRCompileBase::compile_constant_item (\n       folded_expr = ConstCtx::fold (call);\n     }\n \n-  return ctx->get_backend ()->named_constant_expression (const_type, ident,\n-\t\t\t\t\t\t\t folded_expr, locus);\n+  return named_constant_expression (const_type, ident, folded_expr, locus);\n+}\n+\n+tree\n+HIRCompileBase::named_constant_expression (tree type_tree,\n+\t\t\t\t\t   const std::string &name,\n+\t\t\t\t\t   tree const_val, Location location)\n+{\n+  if (type_tree == error_mark_node || const_val == error_mark_node)\n+    return error_mark_node;\n+\n+  tree name_tree = get_identifier_with_length (name.data (), name.length ());\n+  tree decl\n+    = build_decl (location.gcc_location (), CONST_DECL, name_tree, type_tree);\n+  DECL_INITIAL (decl) = const_val;\n+  TREE_CONSTANT (decl) = 1;\n+  TREE_READONLY (decl) = 1;\n+\n+  rust_preserve_from_gc (decl);\n+  return decl;\n }\n \n } // namespace Compile"}, {"sha": "a52886c9676a2c56d05a1cc09bb1f81a3dc8ef69", "filename": "gcc/rust/backend/rust-compile-base.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4242d45d3d6590630ea88909ed996b8cf2640d35/gcc%2Frust%2Fbackend%2Frust-compile-base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4242d45d3d6590630ea88909ed996b8cf2640d35/gcc%2Frust%2Fbackend%2Frust-compile-base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-base.h?ref=4242d45d3d6590630ea88909ed996b8cf2640d35", "patch": "@@ -96,6 +96,10 @@ class HIRCompileBase : public HIR::HIRFullVisitorBase\n   compile_constant_item (Context *ctx, TyTy::BaseType *resolved_type,\n \t\t\t const Resolver::CanonicalPath *canonical_path,\n \t\t\t HIR::Expr *const_value_expr, Location locus);\n+\n+  static tree named_constant_expression (tree type_tree,\n+\t\t\t\t\t const std::string &name,\n+\t\t\t\t\t tree const_val, Location location);\n };\n \n } // namespace Compile"}, {"sha": "fe809c911e22e40866d9faca292bedc195e64b8c", "filename": "gcc/rust/rust-backend.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4242d45d3d6590630ea88909ed996b8cf2640d35/gcc%2Frust%2Frust-backend.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4242d45d3d6590630ea88909ed996b8cf2640d35/gcc%2Frust%2Frust-backend.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-backend.h?ref=4242d45d3d6590630ea88909ed996b8cf2640d35", "patch": "@@ -186,12 +186,6 @@ class Backend\n \t\t\t\t    Location)\n     = 0;\n \n-  // Return an expression that declares a constant named NAME with the\n-  // constant value VAL in BTYPE.\n-  virtual tree named_constant_expression (tree btype, const std::string &name,\n-\t\t\t\t\t  tree val, Location)\n-    = 0;\n-\n   // Return an expression for the multi-precision integer VAL in BTYPE.\n   virtual tree integer_constant_expression (tree btype, mpz_t val) = 0;\n "}, {"sha": "812fd55c61afe4a0c621e1dc4c293f8712dd235b", "filename": "gcc/rust/rust-gcc.cc", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4242d45d3d6590630ea88909ed996b8cf2640d35/gcc%2Frust%2Frust-gcc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4242d45d3d6590630ea88909ed996b8cf2640d35/gcc%2Frust%2Frust-gcc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-gcc.cc?ref=4242d45d3d6590630ea88909ed996b8cf2640d35", "patch": "@@ -195,9 +195,6 @@ class Gcc_backend : public Backend\n \n   tree indirect_expression (tree, tree expr, bool known_valid, Location);\n \n-  tree named_constant_expression (tree type, const std::string &name, tree val,\n-\t\t\t\t  Location);\n-\n   tree integer_constant_expression (tree type, mpz_t val);\n \n   tree float_constant_expression (tree type, mpfr_t val);\n@@ -1096,27 +1093,6 @@ Gcc_backend::indirect_expression (tree type_tree, tree expr_tree,\n   return ret;\n }\n \n-// Return an expression that declares a constant named NAME with the\n-// constant value VAL in BTYPE.\n-\n-tree\n-Gcc_backend::named_constant_expression (tree type_tree, const std::string &name,\n-\t\t\t\t\ttree const_val, Location location)\n-{\n-  if (type_tree == error_mark_node || const_val == error_mark_node)\n-    return error_mark_node;\n-\n-  tree name_tree = get_identifier_from_string (name);\n-  tree decl\n-    = build_decl (location.gcc_location (), CONST_DECL, name_tree, type_tree);\n-  DECL_INITIAL (decl) = const_val;\n-  TREE_CONSTANT (decl) = 1;\n-  TREE_READONLY (decl) = 1;\n-\n-  rust_preserve_from_gc (decl);\n-  return decl;\n-}\n-\n // Return a typed value as a constant integer.\n \n tree"}]}