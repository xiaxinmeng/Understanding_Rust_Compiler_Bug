{"sha": "80cf2facbbdafed159b326d83f7cf3999c3df8d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODBjZjJmYWNiYmRhZmVkMTU5YjMyNmQ4M2Y3Y2YzOTk5YzNkZjhkMA==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-03-05T09:43:11Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-03-05T09:43:11Z"}, "message": "Fortran: Follow fixes to -freal-{4,8}-real* handling [PR99355,PR57871]\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/99355\n\tPR fortran/57871\n\t* invoke.texi (-freal{4,8}-real-*): Extend description.\n\t* primary.c (match_real_constant): Also promote real literals\n\twith '_kind' number.\n\ngcc/testsuite/ChangeLog:\n\n\t* gfortran.dg/real4-10-real8-10.f90: Add check for real literals\n\twith '_kind' number.\n\t* gfortran.dg/real4-10-real8-16.f90: Likewise.\n\t* gfortran.dg/real4-10-real8-4.f90: Likewise.\n\t* gfortran.dg/real4-10.f90: Likewise.\n\t* gfortran.dg/real4-16-real8-10.f90: Likewise.\n\t* gfortran.dg/real4-16-real8-16.f90: Likewise.\n\t* gfortran.dg/real4-16-real8-4.f90: Likewise.\n\t* gfortran.dg/real4-16.f90: Likewise.\n\t* gfortran.dg/real4-8-real8-10.f90: Likewise.\n\t* gfortran.dg/real4-8-real8-16.f90: Likewise.\n\t* gfortran.dg/real4-8-real8-4.f90: Likewise.\n\t* gfortran.dg/real4-8.f90: Likewise.\n\t* gfortran.dg/real8-10.f90: Likewise.\n\t* gfortran.dg/real8-16.f90: Likewise.\n\t* gfortran.dg/real8-4.f90: Likewise.", "tree": {"sha": "ef2c2535f84a930cbb080bce833026efae41cb84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef2c2535f84a930cbb080bce833026efae41cb84"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80cf2facbbdafed159b326d83f7cf3999c3df8d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80cf2facbbdafed159b326d83f7cf3999c3df8d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80cf2facbbdafed159b326d83f7cf3999c3df8d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80cf2facbbdafed159b326d83f7cf3999c3df8d0/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d240b3f0615a890d8bdd9319842601a48292522", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d240b3f0615a890d8bdd9319842601a48292522", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d240b3f0615a890d8bdd9319842601a48292522"}], "stats": {"total": 128, "additions": 94, "deletions": 34}, "files": [{"sha": "0fb7e1add7e99e4cd9b86d03204237cf409ad358", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80cf2facbbdafed159b326d83f7cf3999c3df8d0/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80cf2facbbdafed159b326d83f7cf3999c3df8d0/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=80cf2facbbdafed159b326d83f7cf3999c3df8d0", "patch": "@@ -520,13 +520,24 @@ representation of the translated Fortran code, produced by\n @cindex options, real kind type promotion\n Promote all @code{REAL(KIND=M)} entities to @code{REAL(KIND=N)} entities.\n If @code{REAL(KIND=N)} is unavailable, then an error will be issued.\n-All other real kind types are unaffected by this option.\n+The @code{-freal-4-} flags also affect the default real kind and the\n+@code{-freal-8-} flags also the double-precision real kind.  All other\n+real-kind types are unaffected by this option.  The promotion is also\n+applied to real literal constants of default and double-precision kind\n+and a specified kind number of 4 or 8, respectively.\n+However, @code{-fdefault-real-8}, @code{-fdefault-real-10},\n+@code{-fdefault-real-10}, and @code{-fdefault-double-8} take precedence\n+for the default and double-precision real kinds, both for real literal\n+constants and for declarations without a kind number.\n+Note that for @code{REAL(KIND=KIND(1.0))} the literal may get promoted and\n+then the result may get promoted again.\n These options should be used with care and may not be suitable for your\n codes.  Areas of possible concern include calls to external procedures,\n alignment in @code{EQUIVALENCE} and/or @code{COMMON}, generic interfaces,\n-BOZ literal constant conversion, and I/O.  Inspection of the intermediate\n-representation of the translated Fortran code, produced by\n-@option{-fdump-tree-original}, is suggested.\n+BOZ literal constant conversion, and I/O and calls to intrinsic procedures\n+when passing a value to the @code{kind=} dummy argument.  Inspection of the\n+intermediate representation of the translated Fortran code, produced by\n+@option{-fdump-fortran-original} or @option{-fdump-tree-original}, is suggested.\n \n @item -std=@var{std}\n @opindex @code{std=}@var{std} option"}, {"sha": "a6df885c80c972f13dfd9591f1abe3edf2ac0068", "filename": "gcc/fortran/primary.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80cf2facbbdafed159b326d83f7cf3999c3df8d0/gcc%2Ffortran%2Fprimary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80cf2facbbdafed159b326d83f7cf3999c3df8d0/gcc%2Ffortran%2Fprimary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fprimary.c?ref=80cf2facbbdafed159b326d83f7cf3999c3df8d0", "patch": "@@ -666,6 +666,25 @@ match_real_constant (gfc_expr **result, int signflag)\n   if (kind == -1)\n     goto cleanup;\n \n+  if (kind == 4)\n+    {\n+      if (flag_real4_kind == 8)\n+\tkind = 8;\n+      if (flag_real4_kind == 10)\n+\tkind = 10;\n+      if (flag_real4_kind == 16)\n+\tkind = 16;\n+    }\n+  else if (kind == 8)\n+    {\n+      if (flag_real8_kind == 4)\n+\tkind = 4;\n+      if (flag_real8_kind == 10)\n+\tkind = 10;\n+      if (flag_real8_kind == 16)\n+\tkind = 16;\n+    }\n+\n   switch (exp_char)\n     {\n     case 'd':"}, {"sha": "1afd9ca5dca04cb5d01fb738d046f44537f2a0f7", "filename": "gcc/testsuite/gfortran.dg/real4-10-real8-10.f90", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80cf2facbbdafed159b326d83f7cf3999c3df8d0/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-10-real8-10.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80cf2facbbdafed159b326d83f7cf3999c3df8d0/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-10-real8-10.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-10-real8-10.f90?ref=80cf2facbbdafed159b326d83f7cf3999c3df8d0", "patch": "@@ -2,13 +2,15 @@\n ! { dg-additional-options \"-w -freal-4-real-10 -freal-8-real-10\" }\n !\n ! PR fortran/99355\n+! PR fortran/99355 comment 10 to 13 + PR fortran/57871\n !\n \n program test\n   real :: r1\n   real*4:: r2\n   real(4) :: r3\n   real(selected_real_kind(p=6)) :: r4\n+  integer, parameter :: k4 = 4, k8 = 8\n \n   double precision :: d1\n   real*8 :: d2\n@@ -18,6 +20,6 @@ program test\n \n   !print '(tr3,a10,10(tr1,i2))', 'single', kind(r1), kind(r2), kind(r3), kind(r4)\n   !print '(tr3,a10,10(tr1,i2))', 'double', kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)\n-  if (any ([kind(1.0), kind(r1), kind(r2), kind(r3), kind(r4)] /= 10)) stop 1\n-  if (any ([kind(1.d0), kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)] /= 10)) stop 2\n+  if (any ([kind(1.0), kind(1.0_4), kind(1.0_k4), kind(r1), kind(r2), kind(r3), kind(r4)] /= 10)) stop 1\n+  if (any ([kind(1.d0), kind(1.0_8), kind(1.0_k8), kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)] /= 10)) stop 2\n end program test"}, {"sha": "83c51193889ac21b6d7c6ea0fccc91d815e8c264", "filename": "gcc/testsuite/gfortran.dg/real4-10-real8-16.f90", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80cf2facbbdafed159b326d83f7cf3999c3df8d0/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-10-real8-16.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80cf2facbbdafed159b326d83f7cf3999c3df8d0/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-10-real8-16.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-10-real8-16.f90?ref=80cf2facbbdafed159b326d83f7cf3999c3df8d0", "patch": "@@ -3,13 +3,15 @@\n ! { dg-require-effective-target fortran_real_16 }\n !\n ! PR fortran/99355\n+! PR fortran/99355 comment 10 to 13 + PR fortran/57871\n !\n \n program test\n   real :: r1\n   real*4:: r2\n   real(4) :: r3\n   real(selected_real_kind(p=6)) :: r4\n+  integer, parameter :: k4 = 4, k8 = 8\n \n   double precision :: d1\n   real*8 :: d2\n@@ -19,6 +21,6 @@ program test\n \n   !print '(tr3,a10,10(tr1,i2))', 'single', kind(r1), kind(r2), kind(r3), kind(r4)\n   !print '(tr3,a10,10(tr1,i2))', 'double', kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)\n-  if (any ([kind(1.0), kind(r1), kind(r2), kind(r3), kind(r4)] /= 10)) stop 1\n-  if (any ([kind(1.d0), kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)] /= 16)) stop 2\n+  if (any ([kind(1.0), kind(1.0_4), kind(1.0_k4), kind(r1), kind(r2), kind(r3), kind(r4)] /= 10)) stop 1\n+  if (any ([kind(1.d0), kind(1.0_8), kind(1.0_k8), kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)] /= 16)) stop 2\n end program test"}, {"sha": "19b79e9ab6b7791611dbb1c82864db945285750d", "filename": "gcc/testsuite/gfortran.dg/real4-10-real8-4.f90", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80cf2facbbdafed159b326d83f7cf3999c3df8d0/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-10-real8-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80cf2facbbdafed159b326d83f7cf3999c3df8d0/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-10-real8-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-10-real8-4.f90?ref=80cf2facbbdafed159b326d83f7cf3999c3df8d0", "patch": "@@ -2,13 +2,15 @@\n ! { dg-additional-options \"-w -freal-4-real-10 -freal-8-real-4\" }\n !\n ! PR fortran/99355\n+! PR fortran/99355 comment 10 to 13 + PR fortran/57871\n !\n \n program test\n   real :: r1\n   real*4:: r2\n   real(4) :: r3\n   real(selected_real_kind(p=6)) :: r4\n+  integer, parameter :: k4 = 4, k8 = 8\n \n   double precision :: d1\n   real*8 :: d2\n@@ -18,6 +20,6 @@ program test\n \n   !print '(tr3,a10,10(tr1,i2))', 'single', kind(r1), kind(r2), kind(r3), kind(r4)\n   !print '(tr3,a10,10(tr1,i2))', 'double', kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)\n-  if (any ([kind(1.0), kind(r1), kind(r2), kind(r3), kind(r4)] /= 10)) stop 1\n-  if (any ([kind(1.d0), kind(d1), kind(d2), kind(d3), kind(d5)] /= 4)) stop 2\n+  if (any ([kind(1.0), kind(1.0_4), kind(1.0_k4), kind(r1), kind(r2), kind(r3), kind(r4)] /= 10)) stop 1\n+  if (any ([kind(1.d0), kind(1.0_8), kind(1.0_k8), kind(d1), kind(d2), kind(d3), kind(d5)] /= 4)) stop 2\n end program test"}, {"sha": "133af44373e4876588f78d9f9b35652df2eca9f6", "filename": "gcc/testsuite/gfortran.dg/real4-10.f90", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80cf2facbbdafed159b326d83f7cf3999c3df8d0/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-10.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80cf2facbbdafed159b326d83f7cf3999c3df8d0/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-10.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-10.f90?ref=80cf2facbbdafed159b326d83f7cf3999c3df8d0", "patch": "@@ -2,13 +2,15 @@\n ! { dg-additional-options \"-w -freal-4-real-10\" }\n !\n ! PR fortran/99355\n+! PR fortran/99355 comment 10 to 13 + PR fortran/57871\n !\n \n program test\n   real :: r1\n   real*4:: r2\n   real(4) :: r3\n   real(selected_real_kind(p=6)) :: r4\n+  integer, parameter :: k4 = 4, k8 = 8\n \n   double precision :: d1\n   real*8 :: d2\n@@ -18,6 +20,6 @@ program test\n \n   !print '(tr3,a10,10(tr1,i2))', 'single', kind(r1), kind(r2), kind(r3), kind(r4)\n   !print '(tr3,a10,10(tr1,i2))', 'double', kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)\n-  if (any ([kind(1.0), kind(r1), kind(r2), kind(r3), kind(r4)] /= 10)) stop 1\n-  if (any ([kind(1.d0), kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)] /= 8)) stop 2\n+  if (any ([kind(1.0), kind(1.0_4), kind(1.0_k4), kind(r1), kind(r2), kind(r3), kind(r4)] /= 10)) stop 1\n+  if (any ([kind(1.d0), kind(1.0_8), kind(1.0_k8), kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)] /= 8)) stop 2\n end program test"}, {"sha": "1ddefca36dd0d7b0529a4397889cb7c6d717c1bc", "filename": "gcc/testsuite/gfortran.dg/real4-16-real8-10.f90", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80cf2facbbdafed159b326d83f7cf3999c3df8d0/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-16-real8-10.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80cf2facbbdafed159b326d83f7cf3999c3df8d0/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-16-real8-10.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-16-real8-10.f90?ref=80cf2facbbdafed159b326d83f7cf3999c3df8d0", "patch": "@@ -3,13 +3,15 @@\n ! { dg-require-effective-target fortran_real_16 }\n !\n ! PR fortran/99355\n+! PR fortran/99355 comment 10 to 13 + PR fortran/57871\n !\n \n program test\n   real :: r1\n   real*4:: r2\n   real(4) :: r3\n   real(selected_real_kind(p=6)) :: r4\n+  integer, parameter :: k4 = 4, k8 = 8\n \n   double precision :: d1\n   real*8 :: d2\n@@ -19,6 +21,6 @@ program test\n \n   !print '(tr3,a10,10(tr1,i2))', 'single', kind(r1), kind(r2), kind(r3), kind(r4)\n   !print '(tr3,a10,10(tr1,i2))', 'double', kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)\n-  if (any ([kind(1.0), kind(r1), kind(r2), kind(r3), kind(r4)] /= 16)) stop 1\n-  if (any ([kind(1.d0), kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)] /= 10)) stop 2\n+  if (any ([kind(1.0), kind(1.0_4), kind(1.0_k4), kind(r1), kind(r2), kind(r3), kind(r4)] /= 16)) stop 1\n+  if (any ([kind(1.d0), kind(1.0_8), kind(1.0_k8), kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)] /= 10)) stop 2\n end program test"}, {"sha": "0e761933d9e2877f3dee9ce8246816e1241be215", "filename": "gcc/testsuite/gfortran.dg/real4-16-real8-16.f90", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80cf2facbbdafed159b326d83f7cf3999c3df8d0/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-16-real8-16.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80cf2facbbdafed159b326d83f7cf3999c3df8d0/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-16-real8-16.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-16-real8-16.f90?ref=80cf2facbbdafed159b326d83f7cf3999c3df8d0", "patch": "@@ -3,13 +3,15 @@\n ! { dg-require-effective-target fortran_real_16 }\n !\n ! PR fortran/99355\n+! PR fortran/99355 comment 10 to 13 + PR fortran/57871\n !\n \n program test\n   real :: r1\n   real*4:: r2\n   real(4) :: r3\n   real(selected_real_kind(p=6)) :: r4\n+  integer, parameter :: k4 = 4, k8 = 8\n \n   double precision :: d1\n   real*8 :: d2\n@@ -19,6 +21,6 @@ program test\n \n   !print '(tr3,a10,10(tr1,i2))', 'single', kind(r1), kind(r2), kind(r3), kind(r4)\n   !print '(tr3,a10,10(tr1,i2))', 'double', kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)\n-  if (any ([kind(1.0), kind(r1), kind(r2), kind(r3), kind(r4)] /= 16)) stop 1\n-  if (any ([kind(1.d0), kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)] /= 16)) stop 2\n+  if (any ([kind(1.0), kind(1.0_4), kind(1.0_k4), kind(r1), kind(r2), kind(r3), kind(r4)] /= 16)) stop 1\n+  if (any ([kind(1.d0), kind(1.0_8), kind(1.0_k8), kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)] /= 16)) stop 2\n end program test"}, {"sha": "3d2185b2e26ce4ee07dcfa121b662534110134b7", "filename": "gcc/testsuite/gfortran.dg/real4-16-real8-4.f90", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80cf2facbbdafed159b326d83f7cf3999c3df8d0/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-16-real8-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80cf2facbbdafed159b326d83f7cf3999c3df8d0/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-16-real8-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-16-real8-4.f90?ref=80cf2facbbdafed159b326d83f7cf3999c3df8d0", "patch": "@@ -3,13 +3,15 @@\n ! { dg-require-effective-target fortran_real_16 }\n !\n ! PR fortran/99355\n+! PR fortran/99355 comment 10 to 13 + PR fortran/57871\n !\n \n program test\n   real :: r1\n   real*4:: r2\n   real(4) :: r3\n   real(selected_real_kind(p=6)) :: r4\n+  integer, parameter :: k4 = 4, k8 = 8\n \n   double precision :: d1\n   real*8 :: d2\n@@ -19,6 +21,6 @@ program test\n \n   !print '(tr3,a10,10(tr1,i2))', 'single', kind(r1), kind(r2), kind(r3), kind(r4)\n   !print '(tr3,a10,10(tr1,i2))', 'double', kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)\n-  if (any ([kind(1.0), kind(r1), kind(r2), kind(r3), kind(r4)] /= 16)) stop 1\n-  if (any ([kind(1.d0), kind(d1), kind(d2), kind(d3), kind(d5)] /= 4)) stop 2\n+  if (any ([kind(1.0), kind(1.0_4), kind(1.0_k4), kind(r1), kind(r2), kind(r3), kind(r4)] /= 16)) stop 1\n+  if (any ([kind(1.d0), kind(1.0_8), kind(1.0_k8), kind(d1), kind(d2), kind(d3), kind(d5)] /= 4)) stop 2\n end program test"}, {"sha": "e07bcd4b23ef60df556e5966b51dda302de7d80e", "filename": "gcc/testsuite/gfortran.dg/real4-16.f90", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80cf2facbbdafed159b326d83f7cf3999c3df8d0/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-16.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80cf2facbbdafed159b326d83f7cf3999c3df8d0/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-16.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-16.f90?ref=80cf2facbbdafed159b326d83f7cf3999c3df8d0", "patch": "@@ -3,13 +3,15 @@\n ! { dg-require-effective-target fortran_real_16 }\n !\n ! PR fortran/99355\n+! PR fortran/99355 comment 10 to 13 + PR fortran/57871\n !\n \n program test\n   real :: r1\n   real*4:: r2\n   real(4) :: r3\n   real(selected_real_kind(p=6)) :: r4\n+  integer, parameter :: k4 = 4, k8 = 8\n \n   double precision :: d1\n   real*8 :: d2\n@@ -19,6 +21,6 @@ program test\n \n   !print '(tr3,a10,10(tr1,i2))', 'single', kind(r1), kind(r2), kind(r3), kind(r4)\n   !print '(tr3,a10,10(tr1,i2))', 'double', kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)\n-  if (any ([kind(1.0), kind(r1), kind(r2), kind(r3), kind(r4)] /= 16)) stop 1\n-  if (any ([kind(1.d0), kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)] /= 8)) stop 2\n+  if (any ([kind(1.0), kind(1.0_4), kind(1.0_k4), kind(r1), kind(r2), kind(r3), kind(r4)] /= 16)) stop 1\n+  if (any ([kind(1.d0), kind(1.0_8), kind(1.0_k8), kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)] /= 8)) stop 2\n end program test"}, {"sha": "2d48f572c6219c44047a46c85d89b752e60be3e2", "filename": "gcc/testsuite/gfortran.dg/real4-8-real8-10.f90", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80cf2facbbdafed159b326d83f7cf3999c3df8d0/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-8-real8-10.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80cf2facbbdafed159b326d83f7cf3999c3df8d0/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-8-real8-10.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-8-real8-10.f90?ref=80cf2facbbdafed159b326d83f7cf3999c3df8d0", "patch": "@@ -2,13 +2,15 @@\n ! { dg-additional-options \"-w -freal-4-real-8 -freal-8-real-10\" }\n !\n ! PR fortran/99355\n+! PR fortran/99355 comment 10 to 13 + PR fortran/57871\n !\n \n program test\n   real :: r1\n   real*4:: r2\n   real(4) :: r3\n   real(selected_real_kind(p=6)) :: r4\n+  integer, parameter :: k4 = 4, k8 = 8\n \n   double precision :: d1\n   real*8 :: d2\n@@ -18,6 +20,6 @@ program test\n \n   print '(tr3,a10,10(tr1,i2))', 'single', kind(r1), kind(r2), kind(r3), kind(r4)\n   print '(tr3,a10,10(tr1,i2))', 'double', kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)\n-  if (any ([kind(r1), kind(r2), kind(r3), kind(r4)] /= 8)) stop 1\n-  if (any ([kind(1.d0), kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)] /= 10)) stop 2\n+  if (any ([kind(r1), kind(1.0_4), kind(1.0_k4), kind(r2), kind(r3), kind(r4)] /= 8)) stop 1\n+  if (any ([kind(1.d0), kind(1.0_8), kind(1.0_k8), kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)] /= 10)) stop 2\n end program test"}, {"sha": "4d3e5af0eda66bf394c8d006dd75a28508558809", "filename": "gcc/testsuite/gfortran.dg/real4-8-real8-16.f90", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80cf2facbbdafed159b326d83f7cf3999c3df8d0/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-8-real8-16.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80cf2facbbdafed159b326d83f7cf3999c3df8d0/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-8-real8-16.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-8-real8-16.f90?ref=80cf2facbbdafed159b326d83f7cf3999c3df8d0", "patch": "@@ -3,13 +3,15 @@\n ! { dg-require-effective-target fortran_real_16 }\n !\n ! PR fortran/99355\n+! PR fortran/99355 comment 10 to 13 + PR fortran/57871\n !\n \n program test\n   real :: r1\n   real*4:: r2\n   real(4) :: r3\n   real(selected_real_kind(p=6)) :: r4\n+  integer, parameter :: k4 = 4, k8 = 8\n \n   double precision :: d1\n   real*8 :: d2\n@@ -19,6 +21,6 @@ program test\n \n   !print '(tr3,a10,10(tr1,i2))', 'single', kind(r1), kind(r2), kind(r3), kind(r4)\n   !print '(tr3,a10,10(tr1,i2))', 'double', kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)\n-  if (any ([kind(1.0), kind(r1), kind(r2), kind(r3), kind(r4)] /= 8)) stop 1\n-  if (any ([kind(1.d0), kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)] /= 16)) stop 2\n+  if (any ([kind(1.0), kind(1.0_4), kind(1.0_k4), kind(r1), kind(r2), kind(r3), kind(r4)] /= 8)) stop 1\n+  if (any ([kind(1.d0), kind(1.0_8), kind(1.0_k8), kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)] /= 16)) stop 2\n end program test"}, {"sha": "9f18d430c41e7ac85b65365a1bf2165f31e8fe03", "filename": "gcc/testsuite/gfortran.dg/real4-8-real8-4.f90", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80cf2facbbdafed159b326d83f7cf3999c3df8d0/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-8-real8-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80cf2facbbdafed159b326d83f7cf3999c3df8d0/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-8-real8-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-8-real8-4.f90?ref=80cf2facbbdafed159b326d83f7cf3999c3df8d0", "patch": "@@ -2,13 +2,15 @@\n ! { dg-additional-options \"-w -freal-4-real-8 -freal-8-real-4\" }\n !\n ! PR fortran/99355\n+! PR fortran/99355 comment 10 to 13 + PR fortran/57871\n !\n \n program test\n   real :: r1\n   real*4:: r2\n   real(4) :: r3\n   real(selected_real_kind(p=6)) :: r4\n+  integer, parameter :: k4 = 4, k8 = 8\n \n   double precision :: d1\n   real*8 :: d2\n@@ -18,6 +20,6 @@ program test\n \n   print '(tr3,a10,10(tr1,i2))', 'single', kind(r1), kind(r2), kind(r3), kind(r4)\n   print '(tr3,a10,10(tr1,i2))', 'double', kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)\n-  if (any ([kind(1.0), kind(r1), kind(r2), kind(r3), kind(r4)] /= 8)) stop 1\n-  if (any ([kind(1.d0), kind(d1), kind(d2), kind(d3), kind(d5)] /= 4)) stop 2\n+  if (any ([kind(1.0), kind(1.0_4), kind(1.0_k4), kind(r1), kind(r2), kind(r3), kind(r4)] /= 8)) stop 1\n+  if (any ([kind(1.d0), kind(1.0_8), kind(1.0_k8), kind(d1), kind(d2), kind(d3), kind(d5)] /= 4)) stop 2\n end program test"}, {"sha": "f436b3db61e6582af167e23e7f430b0796568603", "filename": "gcc/testsuite/gfortran.dg/real4-8.f90", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80cf2facbbdafed159b326d83f7cf3999c3df8d0/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80cf2facbbdafed159b326d83f7cf3999c3df8d0/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freal4-8.f90?ref=80cf2facbbdafed159b326d83f7cf3999c3df8d0", "patch": "@@ -2,13 +2,15 @@\n ! { dg-additional-options \"-w -freal-4-real-8\" }\n !\n ! PR fortran/99355\n+! PR fortran/99355 comment 10 to 13 + PR fortran/57871\n !\n \n program test\n   real :: r1\n   real*4:: r2\n   real(4) :: r3\n   real(selected_real_kind(p=6)) :: r4\n+  integer, parameter :: k4 = 4, k8 = 8\n \n   double precision :: d1\n   real*8 :: d2\n@@ -18,6 +20,6 @@ program test\n \n   !print '(tr3,a10,10(tr1,i2))', 'single', kind(r1), kind(r2), kind(r3), kind(r4)\n   !print '(tr3,a10,10(tr1,i2))', 'double', kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)\n-  if (any ([kind(1.0), kind(r1), kind(r2), kind(r3), kind(r4)] /= 8)) stop 1\n-  if (any ([kind(1.d0), kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)] /= 8)) stop 2\n+  if (any ([kind(1.0), kind(1.0_4), kind(1.0_k4), kind(r1), kind(r2), kind(r3), kind(r4)] /= 8)) stop 1\n+  if (any ([kind(1.d0), kind(1.0_8), kind(1.0_k8), kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)] /= 8)) stop 2\n end program test"}, {"sha": "ce85a781974b3c260a08ba2dafb9cfbb1705b672", "filename": "gcc/testsuite/gfortran.dg/real8-10.f90", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80cf2facbbdafed159b326d83f7cf3999c3df8d0/gcc%2Ftestsuite%2Fgfortran.dg%2Freal8-10.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80cf2facbbdafed159b326d83f7cf3999c3df8d0/gcc%2Ftestsuite%2Fgfortran.dg%2Freal8-10.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freal8-10.f90?ref=80cf2facbbdafed159b326d83f7cf3999c3df8d0", "patch": "@@ -2,13 +2,15 @@\n ! { dg-additional-options \"-w -freal-8-real-10\" }\n !\n ! PR fortran/99355\n+! PR fortran/99355 comment 10 to 13 + PR fortran/57871\n !\n \n program test\n   real :: r1\n   real*4:: r2\n   real(4) :: r3\n   real(selected_real_kind(p=6)) :: r4\n+  integer, parameter :: k4 = 4, k8 = 8\n \n   double precision :: d1\n   real*8 :: d2\n@@ -18,6 +20,6 @@ program test\n \n   !print '(tr3,a10,10(tr1,i2))', 'single', kind(r1), kind(r2), kind(r3), kind(r4)\n   !print '(tr3,a10,10(tr1,i2))', 'double', kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)\n-  if (any ([kind(1.0), kind(r1), kind(r2), kind(r3), kind(r4)] /= 4)) stop 1\n-  if (any ([kind(1.d0), kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)] /= 10)) stop 2\n+  if (any ([kind(1.0), kind(1.0_4), kind(1.0_k4), kind(r1), kind(r2), kind(r3), kind(r4)] /= 4)) stop 1\n+  if (any ([kind(1.d0), kind(1.0_8), kind(1.0_k8), kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)] /= 10)) stop 2\n end program test"}, {"sha": "b3b86c8b78a8a7d492e64830849ec7d54fe13be4", "filename": "gcc/testsuite/gfortran.dg/real8-16.f90", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80cf2facbbdafed159b326d83f7cf3999c3df8d0/gcc%2Ftestsuite%2Fgfortran.dg%2Freal8-16.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80cf2facbbdafed159b326d83f7cf3999c3df8d0/gcc%2Ftestsuite%2Fgfortran.dg%2Freal8-16.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freal8-16.f90?ref=80cf2facbbdafed159b326d83f7cf3999c3df8d0", "patch": "@@ -3,13 +3,15 @@\n ! { dg-require-effective-target fortran_real_16 }\n !\n ! PR fortran/99355\n+! PR fortran/99355 comment 10 to 13 + PR fortran/57871\n !\n \n program test\n   real :: r1\n   real*4:: r2\n   real(4) :: r3\n   real(selected_real_kind(p=6)) :: r4\n+  integer, parameter :: k4 = 4, k8 = 8\n \n   double precision :: d1\n   real*8 :: d2\n@@ -19,6 +21,6 @@ program test\n \n   !print '(tr3,a10,10(tr1,i2))', 'single', kind(r1), kind(r2), kind(r3), kind(r4)\n   !print '(tr3,a10,10(tr1,i2))', 'double', kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)\n-  if (any ([kind(1.0), kind(r1), kind(r2), kind(r3), kind(r4)] /= 4)) stop 1\n-  if (any ([kind(1.d0), kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)] /= 16)) stop 2\n+  if (any ([kind(1.0), kind(1.0_4), kind(1.0_k4), kind(r1), kind(r2), kind(r3), kind(r4)] /= 4)) stop 1\n+  if (any ([kind(1.d0), kind(1.0_8), kind(1.0_k8), kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)] /= 16)) stop 2\n end program test"}, {"sha": "c64c2973f04d4fa029562dad5f8fbd33c947e9fe", "filename": "gcc/testsuite/gfortran.dg/real8-4.f90", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80cf2facbbdafed159b326d83f7cf3999c3df8d0/gcc%2Ftestsuite%2Fgfortran.dg%2Freal8-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80cf2facbbdafed159b326d83f7cf3999c3df8d0/gcc%2Ftestsuite%2Fgfortran.dg%2Freal8-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freal8-4.f90?ref=80cf2facbbdafed159b326d83f7cf3999c3df8d0", "patch": "@@ -2,13 +2,15 @@\n ! { dg-additional-options \"-w -freal-8-real-4\" }\n !\n ! PR fortran/99355\n+! PR fortran/99355 comment 10 to 13 + PR fortran/57871\n !\n \n program test\n   real :: r1\n   real*4:: r2\n   real(4) :: r3\n   real(selected_real_kind(p=6)) :: r4\n+  integer, parameter :: k4 = 4, k8 = 8\n \n   double precision :: d1\n   real*8 :: d2\n@@ -18,6 +20,6 @@ program test\n \n   !print '(tr3,a10,10(tr1,i2))', 'single', kind(r1), kind(r2), kind(r3), kind(r4)\n   !print '(tr3,a10,10(tr1,i2))', 'double', kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)\n-  if (any ([kind(1.0), kind(r1), kind(r2), kind(r3), kind(r4)] /= 4)) stop 1\n-  if (any ([kind(1.d0), kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)] /= 4)) stop 2\n+  if (any ([kind(1.0), kind(1.0_4), kind(1.0_k4), kind(r1), kind(r2), kind(r3), kind(r4)] /= 4)) stop 1\n+  if (any ([kind(1.d0), kind(1.0_8), kind(1.0_k8), kind(d1), kind(d2), kind(d3), kind(d4), kind(d5)] /= 4)) stop 2\n end program test"}]}