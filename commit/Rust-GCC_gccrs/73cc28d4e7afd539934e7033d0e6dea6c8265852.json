{"sha": "73cc28d4e7afd539934e7033d0e6dea6c8265852", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNjYzI4ZDRlN2FmZDUzOTkzNGU3MDMzZDBlNmRlYTZjODI2NTg1Mg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-04-16T20:33:57Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-04-16T20:33:57Z"}, "message": "libgo: Remove Solaris 8 & 9 support.\n\nFrom Rainer Orth.\n\nFrom-SVN: r209448", "tree": {"sha": "e260111252f06f4287732263aeffb954aca02ee2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e260111252f06f4287732263aeffb954aca02ee2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73cc28d4e7afd539934e7033d0e6dea6c8265852", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73cc28d4e7afd539934e7033d0e6dea6c8265852", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73cc28d4e7afd539934e7033d0e6dea6c8265852", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73cc28d4e7afd539934e7033d0e6dea6c8265852/comments", "author": null, "committer": null, "parents": [{"sha": "1dbdb7561806589afa85316032156d988cb9a060", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dbdb7561806589afa85316032156d988cb9a060", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1dbdb7561806589afa85316032156d988cb9a060"}], "stats": {"total": 55, "additions": 0, "deletions": 55}, "files": [{"sha": "ca5dcb22587f8be34f4e0ea07c44fe5e2afc5d22", "filename": "libgo/config.h.in", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73cc28d4e7afd539934e7033d0e6dea6c8265852/libgo%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73cc28d4e7afd539934e7033d0e6dea6c8265852/libgo%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfig.h.in?ref=73cc28d4e7afd539934e7033d0e6dea6c8265852", "patch": "@@ -341,9 +341,6 @@\n    */\n #undef LT_OBJDIR\n \n-/* Define if makecontext expects top of stack in uc_stack. */\n-#undef MAKECONTEXT_STACK_TOP\n-\n /* Name of package */\n #undef PACKAGE\n "}, {"sha": "81936a8aa97553aea599b81dd9350b5184cbca0a", "filename": "libgo/configure", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73cc28d4e7afd539934e7033d0e6dea6c8265852/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73cc28d4e7afd539934e7033d0e6dea6c8265852/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=73cc28d4e7afd539934e7033d0e6dea6c8265852", "patch": "@@ -13889,11 +13889,6 @@ case \"$target\" in\n \t# msghdr in <sys/socket.h>.\n \tOSCFLAGS=\"$OSCFLAGS -D_XOPEN_SOURCE=500\"\n \t;;\n-    *-*-solaris2.[89])\n-\t# Solaris 8/9 need this so struct msghdr gets the msg_control\n-\t# etc. fields in <sys/socket.h> (_XPG4_2).\n-\tOSCFLAGS=\"$OSCFLAGS -D_XOPEN_SOURCE=500 -D_XOPEN_SOURCE_EXTENDED -D__EXTENSIONS__\"\n-\t;;\n     *-*-solaris2.1[01])\n \t# Solaris 10+ needs this so struct msghdr gets the msg_control\n \t# etc. fields in <sys/socket.h> (_XPG4_2).  _XOPEN_SOURCE=600 as\n@@ -15053,20 +15048,6 @@ $as_echo \"#define HAVE_STRUCT_EXCEPTION 1\" >>confdefs.h\n \n fi\n \n-case \"$target\" in\n-  sparc*-*-solaris2.[89]*)\n-    libgo_cv_lib_makecontext_stack_top=yes\n-    ;;\n-  *)\n-    libgo_cv_lib_makecontext_stack_top=no\n-    ;;\n-esac\n-if test \"$libgo_cv_lib_makecontext_stack_top\" = \"yes\"; then\n-\n-$as_echo \"#define MAKECONTEXT_STACK_TOP 1\" >>confdefs.h\n-\n-fi\n-\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether setcontext clobbers TLS variables\" >&5\n $as_echo_n \"checking whether setcontext clobbers TLS variables... \" >&6; }\n if test \"${libgo_cv_lib_setcontext_clobbers_tls+set}\" = set; then :"}, {"sha": "6f59c03f87613dba3d1d03726df57b1a03aa4de7", "filename": "libgo/configure.ac", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73cc28d4e7afd539934e7033d0e6dea6c8265852/libgo%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73cc28d4e7afd539934e7033d0e6dea6c8265852/libgo%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure.ac?ref=73cc28d4e7afd539934e7033d0e6dea6c8265852", "patch": "@@ -316,11 +316,6 @@ case \"$target\" in\n \t# msghdr in <sys/socket.h>.\n \tOSCFLAGS=\"$OSCFLAGS -D_XOPEN_SOURCE=500\"\n \t;;\n-    *-*-solaris2.[[89]])\n-\t# Solaris 8/9 need this so struct msghdr gets the msg_control\n-\t# etc. fields in <sys/socket.h> (_XPG4_2).\n-\tOSCFLAGS=\"$OSCFLAGS -D_XOPEN_SOURCE=500 -D_XOPEN_SOURCE_EXTENDED -D__EXTENSIONS__\"\n-\t;;\n     *-*-solaris2.1[[01]])\n \t# Solaris 10+ needs this so struct msghdr gets the msg_control\n \t# etc. fields in <sys/socket.h> (_XPG4_2).  _XOPEN_SOURCE=600 as\n@@ -662,21 +657,6 @@ if test \"$libgo_has_struct_exception\" = \"yes\"; then\n             [Define to 1 if <math.h> defines struct exception])\n fi\n \n-dnl Check if makecontext expects the uc_stack member of ucontext to point\n-dnl to the top of the stack.\n-case \"$target\" in\n-  sparc*-*-solaris2.[[89]]*)\n-    libgo_cv_lib_makecontext_stack_top=yes\n-    ;;\n-  *)\n-    libgo_cv_lib_makecontext_stack_top=no\n-    ;;\n-esac\n-if test \"$libgo_cv_lib_makecontext_stack_top\" = \"yes\"; then\n-  AC_DEFINE(MAKECONTEXT_STACK_TOP, 1,\n-\t    [Define if makecontext expects top of stack in uc_stack.])\n-fi\n-\n dnl See whether setcontext changes the value of TLS variables.\n AC_CACHE_CHECK([whether setcontext clobbers TLS variables],\n [libgo_cv_lib_setcontext_clobbers_tls],"}, {"sha": "2898f5dd49834c4a903178fdf96769410f0f026c", "filename": "libgo/go/math/ldexp.go", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73cc28d4e7afd539934e7033d0e6dea6c8265852/libgo%2Fgo%2Fmath%2Fldexp.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73cc28d4e7afd539934e7033d0e6dea6c8265852/libgo%2Fgo%2Fmath%2Fldexp.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fmath%2Fldexp.go?ref=73cc28d4e7afd539934e7033d0e6dea6c8265852", "patch": "@@ -17,16 +17,6 @@ func libc_ldexp(float64, int) float64\n \n func Ldexp(frac float64, exp int) float64 {\n \tr := libc_ldexp(frac, exp)\n-\n-\t// Work around a bug in the implementation of ldexp on Solaris\n-\t// 9.  If multiplying a negative number by 2 raised to a\n-\t// negative exponent underflows, we want to return negative\n-\t// zero, but the Solaris 9 implementation returns positive\n-\t// zero.  This workaround can be removed when and if we no\n-\t// longer care about Solaris 9.\n-\tif r == 0 && frac < 0 && exp < 0 {\n-\t\tr = Copysign(0, frac)\n-\t}\n \treturn r\n }\n "}, {"sha": "ed0c1a03ba635ed5286478f031ca56b3ba0f33d3", "filename": "libgo/runtime/proc.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73cc28d4e7afd539934e7033d0e6dea6c8265852/libgo%2Fruntime%2Fproc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73cc28d4e7afd539934e7033d0e6dea6c8265852/libgo%2Fruntime%2Fproc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fproc.c?ref=73cc28d4e7afd539934e7033d0e6dea6c8265852", "patch": "@@ -1212,9 +1212,6 @@ runtime_newextram(void)\n \t// here we need to set up the context for g0.\n \tgetcontext(&mp->g0->context);\n \tmp->g0->context.uc_stack.ss_sp = g0_sp;\n-#ifdef MAKECONTEXT_STACK_TOP\n-\tmp->g0->context.uc_stack.ss_sp += g0_spsize;\n-#endif\n \tmp->g0->context.uc_stack.ss_size = g0_spsize;\n \tmakecontext(&mp->g0->context, kickoff, 0);\n "}]}