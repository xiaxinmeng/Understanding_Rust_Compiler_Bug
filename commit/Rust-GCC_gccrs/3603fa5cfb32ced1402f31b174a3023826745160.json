{"sha": "3603fa5cfb32ced1402f31b174a3023826745160", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzYwM2ZhNWNmYjMyY2VkMTQwMmYzMWIxNzRhMzAyMzgyNjc0NTE2MA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-13T10:39:38Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-13T10:39:38Z"}, "message": "Code cleanups.\n\nFrom-SVN: r244412", "tree": {"sha": "e6760add6c9c6fce7091b39302201823702914ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6760add6c9c6fce7091b39302201823702914ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3603fa5cfb32ced1402f31b174a3023826745160", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3603fa5cfb32ced1402f31b174a3023826745160", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3603fa5cfb32ced1402f31b174a3023826745160", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3603fa5cfb32ced1402f31b174a3023826745160/comments", "author": null, "committer": null, "parents": [{"sha": "3abbc5c2409fae926307f5321debdf6191cd2152", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3abbc5c2409fae926307f5321debdf6191cd2152", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3abbc5c2409fae926307f5321debdf6191cd2152"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "862e85b7424c82d08a1f3f56108270030af7fda5", "filename": "gcc/ada/contracts.adb", "status": "modified", "additions": 27, "deletions": 2, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3603fa5cfb32ced1402f31b174a3023826745160/gcc%2Fada%2Fcontracts.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3603fa5cfb32ced1402f31b174a3023826745160/gcc%2Fada%2Fcontracts.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcontracts.adb?ref=3603fa5cfb32ced1402f31b174a3023826745160", "patch": "@@ -1085,8 +1085,10 @@ package body Contracts is\n    --------------------------------\n \n    procedure Analyze_Previous_Contracts (Body_Decl : Node_Id) is\n-      Body_Id : constant Entity_Id := Defining_Entity (Body_Decl);\n-      Par     : Node_Id;\n+      Body_Id   : constant Entity_Id := Defining_Entity (Body_Decl);\n+      Orig_Decl : constant Node_Id   := Original_Node (Body_Decl);\n+\n+      Par : Node_Id;\n \n    begin\n       --  A body that is in the process of being inlined appears from source,\n@@ -1109,6 +1111,29 @@ package body Contracts is\n                Freeze_Id => Defining_Entity (Body_Decl));\n \n             exit;\n+\n+         --  Do not look for an enclosing package body when the construct which\n+         --  causes freezing is a body generated for an expression function and\n+         --  it appears within a package spec. This ensures that the traversal\n+         --  will not reach too far up the parent chain and attempt to freeze a\n+         --  package body which should not be frozen.\n+\n+         --    package body Enclosing_Body\n+         --      with Refined_State => (State => Var)\n+         --    is\n+         --       package Nested is\n+         --          type Some_Type is ...;\n+         --          function Cause_Freezing return ...;\n+         --       private\n+         --          function Cause_Freezing is (...);\n+         --       end Nested;\n+         --\n+         --       Var : Nested.Some_Type;\n+\n+         elsif Nkind (Par) = N_Package_Declaration\n+           and then Nkind (Orig_Decl) = N_Expression_Function\n+         then\n+            exit;\n          end if;\n \n          Par := Parent (Par);"}, {"sha": "d40200e183dad2526690a1ab414249e91b9a83fc", "filename": "gcc/ada/contracts.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3603fa5cfb32ced1402f31b174a3023826745160/gcc%2Fada%2Fcontracts.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3603fa5cfb32ced1402f31b174a3023826745160/gcc%2Fada%2Fcontracts.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcontracts.ads?ref=3603fa5cfb32ced1402f31b174a3023826745160", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---            Copyright (C) 2015, Free Software Foundation, Inc.            --\n+--          Copyright (C) 2015-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -131,7 +131,8 @@ package Contracts is\n    procedure Analyze_Previous_Contracts (Body_Decl : Node_Id);\n    --  Analyze the contracts of all source constructs found in the declarative\n    --  list which contains entry, package, protected, subprogram, or task body\n-   --  denoted by Body_Decl. The analysis stops once Body_Decl is reached.\n+   --  denoted by Body_Decl. The analysis stops once Body_Decl is reached. In\n+   --  addition, analyze the contract of the nearest enclosing package body.\n \n    procedure Analyze_Protected_Contract (Prot_Id : Entity_Id);\n    --  Analyze all delayed pragmas chained on the contract of protected unit"}]}