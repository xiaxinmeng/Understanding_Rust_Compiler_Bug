{"sha": "0219237c53194d1820ab8b00c6af19f68c7862c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDIxOTIzN2M1MzE5NGQxODIwYWI4YjAwYzZhZjE5ZjY4Yzc4NjJjOA==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@act-europe.fr", "date": "2003-04-29T21:47:42Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2003-04-29T21:47:42Z"}, "message": "calls.c (expand_call): When modes of target and valreg match,\tforce sibcall failure when target is a MEM.\n\n\t* calls.c (expand_call): When modes of target and valreg match,\tforce\n\tsibcall failure when target is a MEM.\n\nFrom-SVN: r66260", "tree": {"sha": "e872788a30b861d8ac3ce91e7c009008c9a9ce8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e872788a30b861d8ac3ce91e7c009008c9a9ce8c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0219237c53194d1820ab8b00c6af19f68c7862c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0219237c53194d1820ab8b00c6af19f68c7862c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0219237c53194d1820ab8b00c6af19f68c7862c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0219237c53194d1820ab8b00c6af19f68c7862c8/comments", "author": null, "committer": null, "parents": [{"sha": "555456b175d649bfd04a906e4d32b9329f35db4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/555456b175d649bfd04a906e4d32b9329f35db4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/555456b175d649bfd04a906e4d32b9329f35db4c"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "589009a8285b55bbb6072b0c36ced3e5e1009a80", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0219237c53194d1820ab8b00c6af19f68c7862c8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0219237c53194d1820ab8b00c6af19f68c7862c8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0219237c53194d1820ab8b00c6af19f68c7862c8", "patch": "@@ -1,3 +1,8 @@\n+2003-04-29  Olivier Hainque <hainque@act-europe.fr>\n+\n+\t* calls.c (expand_call): When modes of target and valreg match,\tforce\n+\tsibcall failure when target is a MEM.\n+\n 2003-04-29  Geoffrey Keating  <geoffk@apple.com>\n \n \t* doc/invoke.texi (Overall Options): Mention -x objective-c-header."}, {"sha": "135f949028c4d9d0d27ce2c74768c5b7e99aac3f", "filename": "gcc/calls.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0219237c53194d1820ab8b00c6af19f68c7862c8/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0219237c53194d1820ab8b00c6af19f68c7862c8/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=0219237c53194d1820ab8b00c6af19f68c7862c8", "patch": "@@ -3279,6 +3279,12 @@ expand_call (exp, target, ignore)\n \t     If they refer to the same register, this move will be a no-op,\n \t     except when function inlining is being done.  */\n \t  emit_move_insn (target, valreg);\n+\n+\t  /* If we are setting a MEM, this code must be executed.  Since it is\n+\t     emitted after the call insn, sibcall optimization cannot be\n+\t     performed in that case.  */\n+\t  if (GET_CODE (target) == MEM)\n+\t    sibcall_failure = 1;\n \t}\n       else if (TYPE_MODE (TREE_TYPE (exp)) == BLKmode)\n \t{"}]}