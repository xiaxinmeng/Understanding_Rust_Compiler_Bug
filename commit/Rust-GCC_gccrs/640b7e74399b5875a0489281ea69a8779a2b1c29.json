{"sha": "640b7e74399b5875a0489281ea69a8779a2b1c29", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQwYjdlNzQzOTliNTg3NWEwNDg5MjgxZWE2OWE4Nzc5YTJiMWMyOQ==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2016-03-05T02:48:30Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2016-03-05T02:48:30Z"}, "message": "Handle oacc region in oacc routine\n\n2016-03-05  Tom de Vries  <tom@codesourcery.com>\n\n\t* omp-low.c (check_omp_nesting_restrictions): Check for non-oacc\n\tconstruct in oacc routine.  Check for oacc region in oacc routine.\n\n\t* c-c++-common/goacc/nesting-fail-1.c (f_acc_routine): New function.\n\t* c-c++-common/goacc-gomp/nesting-fail-1.c (f_acc_routine): New\n\tfunction.\n\nFrom-SVN: r233998", "tree": {"sha": "9f48fa07012dca044bd5f99b9621b318f19a7afb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f48fa07012dca044bd5f99b9621b318f19a7afb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/640b7e74399b5875a0489281ea69a8779a2b1c29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/640b7e74399b5875a0489281ea69a8779a2b1c29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/640b7e74399b5875a0489281ea69a8779a2b1c29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/640b7e74399b5875a0489281ea69a8779a2b1c29/comments", "author": null, "committer": null, "parents": [{"sha": "7a3a3fadb050d9e49b18d052cfc20191acdf4126", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a3a3fadb050d9e49b18d052cfc20191acdf4126", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a3a3fadb050d9e49b18d052cfc20191acdf4126"}], "stats": {"total": 68, "additions": 55, "deletions": 13}, "files": [{"sha": "5c238366354c90414fadf0d6ddbe6db5e98ea1dc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/640b7e74399b5875a0489281ea69a8779a2b1c29/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/640b7e74399b5875a0489281ea69a8779a2b1c29/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=640b7e74399b5875a0489281ea69a8779a2b1c29", "patch": "@@ -1,3 +1,8 @@\n+2016-03-05  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* omp-low.c (check_omp_nesting_restrictions): Check for non-oacc\n+\tconstruct in oacc routine.  Check for oacc region in oacc routine.\n+\n 2016-03-04  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/70062"}, {"sha": "c69fe448da62f320fc91e95ce171d80f437575ef", "filename": "gcc/omp-low.c", "status": "modified", "additions": 28, "deletions": 13, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/640b7e74399b5875a0489281ea69a8779a2b1c29/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/640b7e74399b5875a0489281ea69a8779a2b1c29/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=640b7e74399b5875a0489281ea69a8779a2b1c29", "patch": "@@ -3236,19 +3236,26 @@ check_omp_nesting_restrictions (gimple *stmt, omp_context *ctx)\n   /* No nesting of non-OpenACC STMT (that is, an OpenMP one, or a GOMP builtin)\n      inside an OpenACC CTX.  */\n   if (!(is_gimple_omp (stmt)\n-\t&& is_gimple_omp_oacc (stmt)))\n-    {\n-      for (omp_context *octx = ctx; octx != NULL; octx = octx->outer)\n-\tif (is_gimple_omp (octx->stmt)\n-\t    && is_gimple_omp_oacc (octx->stmt)\n-\t    /* Except for atomic codes that we share with OpenMP.  */\n-\t    && ! (gimple_code (stmt) == GIMPLE_OMP_ATOMIC_LOAD\n-\t\t  || gimple_code (stmt) == GIMPLE_OMP_ATOMIC_STORE))\n-\t  {\n-\t    error_at (gimple_location (stmt),\n-\t\t      \"non-OpenACC construct inside of OpenACC region\");\n-\t    return false;\n-\t  }\n+\t&& is_gimple_omp_oacc (stmt))\n+      /* Except for atomic codes that we share with OpenMP.  */\n+      && !(gimple_code (stmt) == GIMPLE_OMP_ATOMIC_LOAD\n+\t   || gimple_code (stmt) == GIMPLE_OMP_ATOMIC_STORE))\n+    {\n+      if (get_oacc_fn_attrib (cfun->decl) != NULL)\n+\t{\n+\t  error_at (gimple_location (stmt),\n+\t\t    \"non-OpenACC construct inside of OpenACC routine\");\n+\t  return false;\n+\t}\n+      else\n+\tfor (omp_context *octx = ctx; octx != NULL; octx = octx->outer)\n+\t  if (is_gimple_omp (octx->stmt)\n+\t      && is_gimple_omp_oacc (octx->stmt))\n+\t    {\n+\t      error_at (gimple_location (stmt),\n+\t\t\t\"non-OpenACC construct inside of OpenACC region\");\n+\t      return false;\n+\t    }\n     }\n \n   if (ctx != NULL)\n@@ -3715,6 +3722,14 @@ check_omp_nesting_restrictions (gimple *stmt, omp_context *ctx)\n \t\t      kind == OMP_CLAUSE_DEPEND_SOURCE ? \"source\" : \"sink\");\n \t    return false;\n \t  }\n+      if (is_gimple_omp_offloaded (stmt)\n+\t  && get_oacc_fn_attrib (cfun->decl) != NULL)\n+\t{\n+\t  error_at (gimple_location (stmt),\n+\t\t    \"OpenACC region inside of OpenACC routine, nested \"\n+\t\t    \"parallelism not supported yet\");\n+\t  return false;\n+\t}\n       for (; ctx != NULL; ctx = ctx->outer)\n \t{\n \t  if (gimple_code (ctx->stmt) != GIMPLE_OMP_TARGET)"}, {"sha": "51469eaee8111628f2254b23e324a5787a041c1a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/640b7e74399b5875a0489281ea69a8779a2b1c29/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/640b7e74399b5875a0489281ea69a8779a2b1c29/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=640b7e74399b5875a0489281ea69a8779a2b1c29", "patch": "@@ -1,3 +1,9 @@\n+2016-03-05  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* c-c++-common/goacc/nesting-fail-1.c (f_acc_routine): New function.\n+\t* c-c++-common/goacc-gomp/nesting-fail-1.c (f_acc_routine): New\n+\tfunction.\n+\n 2016-03-05  Patrick Palka  <ppalka@gcc.gnu.org>\n \n \tPR c++/66786"}, {"sha": "5e3f183998a3a42fee1867ffa811dd2548e1ae30", "filename": "gcc/testsuite/c-c++-common/goacc-gomp/nesting-fail-1.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/640b7e74399b5875a0489281ea69a8779a2b1c29/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc-gomp%2Fnesting-fail-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/640b7e74399b5875a0489281ea69a8779a2b1c29/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc-gomp%2Fnesting-fail-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc-gomp%2Fnesting-fail-1.c?ref=640b7e74399b5875a0489281ea69a8779a2b1c29", "patch": "@@ -439,3 +439,11 @@ f_acc_loop (void)\n #pragma omp target update to(i) /* { dg-error \"non-OpenACC construct inside of OpenACC region\" } */\n     }\n }\n+\n+#pragma acc routine\n+void\n+f_acc_routine (void)\n+{\n+#pragma omp target /* { dg-error \"non-OpenACC construct inside of OpenACC routine\" } */\n+  ;\n+}"}, {"sha": "506a1aeaa6a9391b54740fc4dfa4ad04292a8cb3", "filename": "gcc/testsuite/c-c++-common/goacc/nesting-fail-1.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/640b7e74399b5875a0489281ea69a8779a2b1c29/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fnesting-fail-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/640b7e74399b5875a0489281ea69a8779a2b1c29/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fnesting-fail-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fnesting-fail-1.c?ref=640b7e74399b5875a0489281ea69a8779a2b1c29", "patch": "@@ -37,3 +37,11 @@ f_acc_kernels (void)\n #pragma acc exit data delete(i) /* { dg-error \".enter/exit data. construct inside of .kernels. region\" } */\n   }\n }\n+\n+#pragma acc routine\n+void\n+f_acc_routine (void)\n+{\n+#pragma acc parallel /* { dg-error \"OpenACC region inside of OpenACC routine, nested parallelism not supported yet\" } */\n+  ;\n+}"}]}