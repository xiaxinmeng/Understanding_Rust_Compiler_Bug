{"sha": "b9193259853a2dcb515ba53a77836efa2b6ecc97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjkxOTMyNTk4NTNhMmRjYjUxNWJhNTNhNzc4MzZlZmEyYjZlY2M5Nw==", "commit": {"author": {"name": "Daniel Jacobowitz", "email": "dan@debian.org", "date": "2004-09-13T23:25:45Z"}, "committer": {"name": "Daniel Jacobowitz", "email": "drow@gcc.gnu.org", "date": "2004-09-13T23:25:45Z"}, "message": "fold-const.c (fold_checksum_tree): Ignore TYPE_CACHED_VALUES.\n\n\t* fold-const.c (fold_checksum_tree): Ignore TYPE_CACHED_VALUES.\n\tOnly use TYPE_BINFO for aggregates.\n\nFrom-SVN: r87457", "tree": {"sha": "3f600c729242679a35b1f93cb6c67d6bb0c48837", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f600c729242679a35b1f93cb6c67d6bb0c48837"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9193259853a2dcb515ba53a77836efa2b6ecc97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9193259853a2dcb515ba53a77836efa2b6ecc97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9193259853a2dcb515ba53a77836efa2b6ecc97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9193259853a2dcb515ba53a77836efa2b6ecc97/comments", "author": null, "committer": null, "parents": [{"sha": "3ab0f29005da8dbc7a51fd8a995559e1b40f88e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ab0f29005da8dbc7a51fd8a995559e1b40f88e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ab0f29005da8dbc7a51fd8a995559e1b40f88e7"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "cc493a4c5fff85091c1a29069f8ffaddb716adb6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9193259853a2dcb515ba53a77836efa2b6ecc97/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9193259853a2dcb515ba53a77836efa2b6ecc97/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b9193259853a2dcb515ba53a77836efa2b6ecc97", "patch": "@@ -1,3 +1,8 @@\n+2004-09-13  Daniel Jacobowitz  <dan@debian.org>\n+\n+\t* fold-const.c (fold_checksum_tree): Ignore TYPE_CACHED_VALUES.\n+\tOnly use TYPE_BINFO for aggregates.\n+\n 2004-09-13  Daniel Jacobowitz  <dan@debian.org>\n \n \t* expmed.c (synth_mult): Initialize latency.  Check cost before"}, {"sha": "4453f36423384af7fe197fbcd9330440aa170de4", "filename": "gcc/fold-const.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9193259853a2dcb515ba53a77836efa2b6ecc97/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9193259853a2dcb515ba53a77836efa2b6ecc97/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=b9193259853a2dcb515ba53a77836efa2b6ecc97", "patch": "@@ -9051,13 +9051,16 @@ fold_checksum_tree (tree expr, struct md5_ctx *ctx, htab_t ht)\n       SET_DECL_ASSEMBLER_NAME (expr, NULL);\n     }\n   else if (TREE_CODE_CLASS (code) == 't'\n-\t   && (TYPE_POINTER_TO (expr) || TYPE_REFERENCE_TO (expr)))\n+\t   && (TYPE_POINTER_TO (expr) || TYPE_REFERENCE_TO (expr)\n+\t       || TYPE_CACHED_VALUES_P (expr)))\n     {\n-      /* Allow TYPE_POINTER_TO and TYPE_REFERENCE_TO to be modified.  */\n+      /* Allow these fields to be modified.  */\n       memcpy (buf, expr, tree_size (expr));\n       expr = (tree) buf;\n       TYPE_POINTER_TO (expr) = NULL;\n       TYPE_REFERENCE_TO (expr) = NULL;\n+      TYPE_CACHED_VALUES_P (expr) = 0;\n+      TYPE_CACHED_VALUES (expr) = NULL;\n     }\n   md5_process_bytes (expr, tree_size (expr), ctx);\n   fold_checksum_tree (TREE_TYPE (expr), ctx, ht);\n@@ -9135,7 +9138,10 @@ fold_checksum_tree (tree expr, struct md5_ctx *ctx, htab_t ht)\n \t  fold_checksum_tree (TYPE_MAX_VALUE (expr), ctx, ht);\n \t}\n       fold_checksum_tree (TYPE_MAIN_VARIANT (expr), ctx, ht);\n-      fold_checksum_tree (TYPE_BINFO (expr), ctx, ht);\n+      if (TREE_CODE (expr) == RECORD_TYPE\n+\t  || TREE_CODE (expr) == UNION_TYPE\n+\t  || TREE_CODE (expr) == QUAL_UNION_TYPE)\n+\tfold_checksum_tree (TYPE_BINFO (expr), ctx, ht);\n       fold_checksum_tree (TYPE_CONTEXT (expr), ctx, ht);\n       break;\n     default:"}]}