{"sha": "8ad1aa564df9661c8544dcc6afc6d47ef9c583ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFkMWFhNTY0ZGY5NjYxYzg1NDRkY2M2YWZjNmQ0N2VmOWM1ODNlZg==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@bitmover.com", "date": "1999-11-12T19:48:14Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "1999-11-12T19:48:14Z"}, "message": "genextract.c (record_insn_name): New function.\n\n1999-11-12 11:47 -0800  Zack Weinberg  <zack@bitmover.com>\n\n\t* genextract.c (record_insn_name): New function.\n\t(get_insn_name): No longer a stub.\n\t(main): Call record_insn_name for each insn.  After each label\n\twritten, print the insn name in a comment.\n\nFrom-SVN: r30509", "tree": {"sha": "21cfbff182b6bbcc04015d55b39d8a4fcb6709da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21cfbff182b6bbcc04015d55b39d8a4fcb6709da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ad1aa564df9661c8544dcc6afc6d47ef9c583ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ad1aa564df9661c8544dcc6afc6d47ef9c583ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ad1aa564df9661c8544dcc6afc6d47ef9c583ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ad1aa564df9661c8544dcc6afc6d47ef9c583ef/comments", "author": null, "committer": null, "parents": [{"sha": "138e69050aade357e96dbe6e727ed43384316a87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/138e69050aade357e96dbe6e727ed43384316a87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/138e69050aade357e96dbe6e727ed43384316a87"}], "stats": {"total": 66, "additions": 62, "deletions": 4}, "files": [{"sha": "2e57cc65e966c2fdfa83da25450ba97ccd9c511f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ad1aa564df9661c8544dcc6afc6d47ef9c583ef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ad1aa564df9661c8544dcc6afc6d47ef9c583ef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8ad1aa564df9661c8544dcc6afc6d47ef9c583ef", "patch": "@@ -1,3 +1,10 @@\n+1999-11-12 11:47 -0800  Zack Weinberg  <zack@bitmover.com>\n+\n+\t* genextract.c (record_insn_name): New function.\n+\t(get_insn_name): No longer a stub.\n+\t(main): Call record_insn_name for each insn.  After each label\n+\twritten, print the insn name in a comment.\n+\n Fri Nov 12 13:45:02 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* output.h (const_section, init_section, fini_section): Add"}, {"sha": "52a615a69fbe0b756fd66f2814408f0be376616a", "filename": "gcc/genextract.c", "status": "modified", "additions": 55, "deletions": 4, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ad1aa564df9661c8544dcc6afc6d47ef9c583ef/gcc%2Fgenextract.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ad1aa564df9661c8544dcc6afc6d47ef9c583ef/gcc%2Fgenextract.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenextract.c?ref=8ad1aa564df9661c8544dcc6afc6d47ef9c583ef", "patch": "@@ -63,6 +63,10 @@ struct code_ptr\n \n static struct extraction *extractions;\n \n+/* Holds an array of names indexed by insn_code_number.  */\n+static char **insn_name_ptr = 0;\n+static int insn_name_ptr_size = 0;\n+\n /* Number instruction patterns handled, starting at 0 for first one.  */\n \n static int insn_code_number;\n@@ -96,6 +100,7 @@ static struct code_ptr *peepholes;\n static void gen_insn PROTO ((rtx));\n static void walk_rtx PROTO ((rtx, const char *));\n static void print_path PROTO ((const char *));\n+static void record_insn_name PROTO((int, const char *));\n \n static void\n gen_insn (insn)\n@@ -384,9 +389,10 @@ main (argc, argv)\n {\n   rtx desc;\n   FILE *infile;\n-  register int c, i;\n+  int c, i;\n   struct extraction *p;\n   struct code_ptr *link;\n+  const char *name;\n \n   progname = \"genextract\";\n   obstack_init (rtl_obstack);\n@@ -447,6 +453,7 @@ from the machine description file `md'.  */\\n\\n\");\n       desc = read_rtx (infile);\n       if (GET_CODE (desc) == DEFINE_INSN)\n \t{\n+\t  record_insn_name (insn_code_number, XSTR (desc, 0));\n \t  gen_insn (desc);\n \t  ++insn_code_number;\n \t}\n@@ -487,8 +494,15 @@ from the machine description file `md'.  */\\n\\n\");\n   for (p = extractions; p; p = p->next)\n     {\n       for (link = p->insns; link; link = link->next)\n-\tprintf (\"    case %d:\\n\", link->insn_code);\n-\n+\t{\n+\t  i = link->insn_code;\n+\t  name = get_insn_name (i);\n+\t  if (name)\n+\t    printf (\"    case %d:  /* %s */\\n\", i, name);\n+\t  else\n+\t    printf (\"    case %d:\\n\", i);\n+\t}\n+      \n       for (i = 0; i < p->op_count; i++)\n \t{\n \t  if (p->oplocs[i] == 0)\n@@ -531,5 +545,42 @@ const char *\n get_insn_name (code)\n      int code ATTRIBUTE_UNUSED;\n {\n-  return NULL;\n+  if (code < insn_name_ptr_size)\n+    return insn_name_ptr[code];\n+  else\n+    return NULL;\n }\n+\n+static void\n+record_insn_name (code, name)\n+     int code;\n+     const char *name;\n+{\n+  static const char *last_real_name = \"insn\";\n+  static int last_real_code = 0;\n+  char *new;\n+\n+  if (insn_name_ptr_size <= code)\n+    {\n+      int new_size;\n+      new_size = (insn_name_ptr_size ? insn_name_ptr_size * 2 : 512);\n+      insn_name_ptr =\n+\t(char **) xrealloc (insn_name_ptr, sizeof(char *) * new_size);\n+      memset (insn_name_ptr + insn_name_ptr_size, 0, \n+\t      sizeof(char *) * (new_size - insn_name_ptr_size));\n+      insn_name_ptr_size = new_size;\n+    }\n+\n+  if (!name || name[0] == '\\0')\n+    {\n+      new = xmalloc (strlen (last_real_name) + 10);\n+      sprintf (new, \"%s+%d\", last_real_name, code - last_real_code);\n+    }\n+  else\n+    {\n+      last_real_name = new = xstrdup (name);\n+      last_real_code = code;\n+    }\n+  \n+  insn_name_ptr[code] = new;\n+}  "}]}