{"sha": "49e57ab02f39f20afc898af80370242b1ae6e7f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDllNTdhYjAyZjM5ZjIwYWZjODk4YWY4MDM3MDI0MmIxYWU2ZTdmNQ==", "commit": {"author": {"name": "Bob Wilson", "email": "bwilson@gcc.gnu.org", "date": "2003-05-16T16:06:29Z"}, "committer": {"name": "Bob Wilson", "email": "bwilson@gcc.gnu.org", "date": "2003-05-16T16:06:29Z"}, "message": "Commit ChangeLog entry that I failed to commit for a previous change.\n\nFrom-SVN: r66867", "tree": {"sha": "1e654914a472fd6d6a1bca62952944e247245575", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e654914a472fd6d6a1bca62952944e247245575"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49e57ab02f39f20afc898af80370242b1ae6e7f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49e57ab02f39f20afc898af80370242b1ae6e7f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49e57ab02f39f20afc898af80370242b1ae6e7f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49e57ab02f39f20afc898af80370242b1ae6e7f5/comments", "author": null, "committer": null, "parents": [{"sha": "ba2f4247d62b1492d7758186bc7d93dea324259c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba2f4247d62b1492d7758186bc7d93dea324259c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba2f4247d62b1492d7758186bc7d93dea324259c"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "a68b4e24918510c04b3e1c78c64841b0ca105678", "filename": "gcc/ChangeLog", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49e57ab02f39f20afc898af80370242b1ae6e7f5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49e57ab02f39f20afc898af80370242b1ae6e7f5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=49e57ab02f39f20afc898af80370242b1ae6e7f5", "patch": "@@ -133,6 +133,61 @@\n \t(logsf2, logdf2, logxf2, logtf2): Update expander patterns to match\n \tthe corresponding *fyl2x_?fxf3 instructions.\n \n+2003-05-14  Bob Wilson  <bob.wilson@acm.org>\n+\n+\t* config/xtensa/lib2funcs.S (TRAMPOLINE_SIZE): Change from 49 to 59.\n+\t* config/xtensa/xtensa-config.h (XCHAL_HAVE_CONST16,\n+\tXCHAL_HAVE_L32R): New.\n+\t* config/xtensa/xtensa-protos.h (non_const_move_operand,\n+\txtensa_load_constant, xtensa_function_prologue,\n+\txtensa_function_epilogue): Delete prototypes.\n+\t(xtensa_expand_prologue): New.\n+\t* config/xtensa/xtensa.c (frame_size_const,\n+\tTARGET_ASM_FUNCTION_PROLOGUE, TARGET_MACHINE_DEPENDENT_REORG,\n+\tnon_const_move_operand, xtensa_load_constant, xtensa_reorg,\n+\txtensa_function_prologue): Delete.\n+\t(add_operand, xtensa_mem_offset): Formatting.\n+\t(move_operand): If the const16 option is available, allow any SFmode\n+\tand SImode constants.\n+\t(xtensa_emit_move_sequence): Inline the former contents of\n+\txtensa_load_constant with modifications to handle the const16 option.\n+\t(override_options): Add xtensa_char_to_class['W'] and set it to\n+\tthe general register class only if the const16 option is enabled.\n+\tFix formatting.  Disallow PIC when using the const16 option.\n+\t(print_operand): Reorganize to switch on \"letter\" instead of the\n+\tRTL code.  Add output_operand_lossage calls for invalid cases.\n+\tAdd support for 't' and 'b' letters.\n+\t(xtensa_expand_prologue): New function to replace\n+\txtensa_function_prologue and xtensa_reorg.\n+\t(xtensa_function_epilogue): Declare this as static.  Delete code\n+\tto print the retw.n or retw instruction.\n+\t(xtensa_return_addr): Use A0_REG instead of 0.\n+\t(xtensa_rtx_costs): Add costs for using the const16 option.\n+\t* config/xtensa/xtensa.h (MASK_CONST16, TARGET_CONST16): New.\n+\t(TARGET_DEFAULT): Add CONST16 if L32R instructions not available.\n+\t(TARGET_SWITCHES): Add \"const16\" and \"no-const16\".\n+\t(REG_CLASS_FROM_LETTER): Add comment about new 'W' letter.\n+\t(EXTRA_CONSTRAINT): Change 'T' constraint to only apply when not\n+\tusing the const16 option.\n+\t(TRAMPOLINE_TEMPLATE): Rewrite to avoid hardwired use of l32r insn.\n+\t(TRAMPOLINE_SIZE): Change from 49 to 59.\n+\t(INITIALIZE_TRAMPOLINE): Adjust offsets to match new trampoline.\n+\t(GO_IF_LEGITIMATE_ADDRESS): Do not allow constant pool addresses\n+\twhen using the const16 option.\n+\t(PREDICATE_CODES): Delete non_const_move_operand.\n+\t* config/xtensa/xtensa.md (define_constants): Add A1_REG, A8_REG, and\n+\tUNSPECV_ENTRY.\n+\t(movdi, movdf): If the source is a constant, always expand to a\n+\tsequence of movsi insns.\n+\t(movdi_internal, movdf_internal): Remove alternative using l32r insns.\n+\t(movsi_internal, movsf_internal): Add alternative using const16 insns.\n+\t(movsf): Add const16 support.\n+\t(entry, prologue, epilogue): New.\n+\t(set_frame_ptr): Add missing mode for unspec_volatile operation.\n+\tLikewise for subsequent split pattern.\n+\t* doc/invoke.texi (Option Summary, Xtensa Options): Document new\n+\t\"-mconst16\" and \"-mno-const16\" options.\n+\n 2003-05-14  Richard Henderson  <rth@redhat.com>\n \n \t* config/ia64/ia64.c (ia64_expand_load_address): Force destination"}]}