{"sha": "c98e7fe852a0a47e1a88ac68528491af7889b706", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk4ZTdmZTg1MmEwYTQ3ZTFhODhhYzY4NTI4NDkxYWY3ODg5YjcwNg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-12-16T00:11:48Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-12-16T00:11:48Z"}, "message": "system.h (DEFAULT_CALLER_SAVES): Poison.\n\n\t* system.h (DEFAULT_CALLER_SAVES): Poison.\n\t* toplev.c (flag_caller_saves): Always initialize with 0.\n\t* doc/tm.texi (DEFAULT_CALLER_SAVES): Remove.\n\nFrom-SVN: r74655", "tree": {"sha": "2b5556bfacb2c22de66a560c89b037ff53a18c3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b5556bfacb2c22de66a560c89b037ff53a18c3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c98e7fe852a0a47e1a88ac68528491af7889b706", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c98e7fe852a0a47e1a88ac68528491af7889b706", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c98e7fe852a0a47e1a88ac68528491af7889b706", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c98e7fe852a0a47e1a88ac68528491af7889b706/comments", "author": null, "committer": null, "parents": [{"sha": "9d05bbceb29f58b912b95cee1e43b0bcd8994e56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d05bbceb29f58b912b95cee1e43b0bcd8994e56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d05bbceb29f58b912b95cee1e43b0bcd8994e56"}], "stats": {"total": 20, "additions": 7, "deletions": 13}, "files": [{"sha": "cc3def4ec09f5ac502d3f90077260629a102e4c3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98e7fe852a0a47e1a88ac68528491af7889b706/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98e7fe852a0a47e1a88ac68528491af7889b706/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c98e7fe852a0a47e1a88ac68528491af7889b706", "patch": "@@ -1,3 +1,9 @@\n+2003-12-15  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* system.h (DEFAULT_CALLER_SAVES): Poison.\n+\t* toplev.c (flag_caller_saves): Always initialize with 0.\n+\t* doc/tm.texi (DEFAULT_CALLER_SAVES): Remove.\n+\n 2003-12-15  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* flow.c (EXIT_IGNORE_STACK): Move to ..."}, {"sha": "4a71779ea5e5fdb6faf8a38ab4fe87651267cf94", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98e7fe852a0a47e1a88ac68528491af7889b706/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98e7fe852a0a47e1a88ac68528491af7889b706/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=c98e7fe852a0a47e1a88ac68528491af7889b706", "patch": "@@ -4010,14 +4010,6 @@ If you enable it, GCC can save registers around function calls.  This\n makes it possible to use call-clobbered registers to hold variables that\n must live across calls.\n \n-@defmac DEFAULT_CALLER_SAVES\n-Define this macro if function calls on the target machine do not preserve\n-any registers; in other words, if @code{CALL_USED_REGISTERS} has 1\n-for all registers.  When defined, this macro enables @option{-fcaller-saves}\n-by default for all optimization levels.  It has no effect for optimization\n-levels 2 and higher, where @option{-fcaller-saves} is the default.\n-@end defmac\n-\n @defmac CALLER_SAVE_PROFITABLE (@var{refs}, @var{calls})\n A C expression to determine whether it is worthwhile to consider placing\n a pseudo-register in a call-clobbered hard register and saving and"}, {"sha": "ed0aaf9ebebb027c2e20bb14cf3b30fd54a7e69c", "filename": "gcc/system.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98e7fe852a0a47e1a88ac68528491af7889b706/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98e7fe852a0a47e1a88ac68528491af7889b706/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=c98e7fe852a0a47e1a88ac68528491af7889b706", "patch": "@@ -618,7 +618,7 @@ typedef char _Bool;\n \tDBX_WORKING_DIRECTORY INSN_CACHE_DEPTH INSN_CACHE_SIZE\t\t   \\\n \tINSN_CACHE_LINE_WIDTH INIT_SECTION_PREAMBLE NEED_ATEXIT ON_EXIT\t   \\\n \tEXIT_BODY OBJECT_FORMAT_ROSE MULTIBYTE_CHARS MAP_CHARACTER\t   \\\n-\tLIBGCC_NEEDS_DOUBLE FINAL_PRESCAN_LABEL\n+\tLIBGCC_NEEDS_DOUBLE FINAL_PRESCAN_LABEL DEFAULT_CALLER_SAVES\n \n /* Hooks that are no longer used.  */\n  #pragma GCC poison LANG_HOOKS_FUNCTION_MARK LANG_HOOKS_FUNCTION_FREE\t\\"}, {"sha": "f70946ce9f73f8964189827777dd4b40acc0608e", "filename": "gcc/toplev.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98e7fe852a0a47e1a88ac68528491af7889b706/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98e7fe852a0a47e1a88ac68528491af7889b706/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=c98e7fe852a0a47e1a88ac68528491af7889b706", "patch": "@@ -471,11 +471,7 @@ int flag_short_enums;\n    be saved across function calls, if that produces overall better code.\n    Optional now, so people can test it.  */\n \n-#ifdef DEFAULT_CALLER_SAVES\n-int flag_caller_saves = 1;\n-#else\n int flag_caller_saves = 0;\n-#endif\n \n /* Nonzero if structures and unions should be returned in memory.\n "}]}