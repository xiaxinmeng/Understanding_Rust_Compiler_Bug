{"sha": "537ddba3f059224ec929c0accaa8c3243a860c87", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTM3ZGRiYTNmMDU5MjI0ZWM5MjljMGFjY2FhOGMzMjQzYTg2MGM4Nw==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2014-08-12T07:28:15Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-08-12T07:28:15Z"}, "message": "i386.c (standard_sse_constant_opcode): Use vpxord/vpternlog if avx512 is availible.\n\ngcc/\n\t* config/i386/i386.c (standard_sse_constant_opcode): Use\n\tvpxord/vpternlog if avx512 is availible.\n\n\nCo-Authored-By: Andrey Turetskiy <andrey.turetskiy@intel.com>\nCo-Authored-By: Anna Tikhonova <anna.tikhonova@intel.com>\nCo-Authored-By: Ilya Tocar <ilya.tocar@intel.com>\nCo-Authored-By: Ilya Verbin <ilya.verbin@intel.com>\nCo-Authored-By: Kirill Yukhin <kirill.yukhin@intel.com>\nCo-Authored-By: Maxim Kuznetsov <maxim.kuznetsov@intel.com>\nCo-Authored-By: Michael Zolotukhin <michael.v.zolotukhin@intel.com>\n\nFrom-SVN: r213847", "tree": {"sha": "062f490f894d94312a294fbadf6a121505612f84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/062f490f894d94312a294fbadf6a121505612f84"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/537ddba3f059224ec929c0accaa8c3243a860c87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/537ddba3f059224ec929c0accaa8c3243a860c87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/537ddba3f059224ec929c0accaa8c3243a860c87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/537ddba3f059224ec929c0accaa8c3243a860c87/comments", "author": null, "committer": null, "parents": [{"sha": "3d8208ce68167eb84192ee9f81c5028db5beea43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d8208ce68167eb84192ee9f81c5028db5beea43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d8208ce68167eb84192ee9f81c5028db5beea43"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "afce14f86b25f7f72d74ae08dc96bb9158eae6b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/537ddba3f059224ec929c0accaa8c3243a860c87/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/537ddba3f059224ec929c0accaa8c3243a860c87/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=537ddba3f059224ec929c0accaa8c3243a860c87", "patch": "@@ -1,3 +1,15 @@\n+2014-08-12  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n+\t    Anna Tikhonova  <anna.tikhonova@intel.com>\n+\t    Ilya Tocar  <ilya.tocar@intel.com>\n+\t    Andrey Turetskiy  <andrey.turetskiy@intel.com>\n+\t    Ilya Verbin  <ilya.verbin@intel.com>\n+\t    Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+\t* config/i386/i386.c (standard_sse_constant_opcode): Use\n+\tvpxord/vpternlog if avx512 is availible.\n+\n 2014-08-12  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \tPR middle-end/62103"}, {"sha": "c77e8a61bdb9fa4bca0719f6b2160d5bd12042d3", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/537ddba3f059224ec929c0accaa8c3243a860c87/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/537ddba3f059224ec929c0accaa8c3243a860c87/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=537ddba3f059224ec929c0accaa8c3243a860c87", "patch": "@@ -8997,19 +8997,24 @@ standard_sse_constant_opcode (rtx insn, rtx x)\n       switch (get_attr_mode (insn))\n \t{\n \tcase MODE_XI:\n-\tcase MODE_V16SF:\n \t  return \"vpxord\\t%g0, %g0, %g0\";\n+\tcase MODE_V16SF:\n+\t  return TARGET_AVX512DQ ? \"vxorps\\t%g0, %g0, %g0\"\n+\t\t\t\t : \"vpxord\\t%g0, %g0, %g0\";\n \tcase MODE_V8DF:\n-\t  return \"vpxorq\\t%g0, %g0, %g0\";\n+\t  return TARGET_AVX512DQ ? \"vxorpd\\t%g0, %g0, %g0\"\n+\t\t\t\t : \"vpxorq\\t%g0, %g0, %g0\";\n \tcase MODE_TI:\n-\t  return \"%vpxor\\t%0, %d0\";\n+\t  return TARGET_AVX512VL ? \"vpxord\\t%t0, %t0, %t0\"\n+\t\t\t\t : \"%vpxor\\t%0, %d0\";\n \tcase MODE_V2DF:\n \t  return \"%vxorpd\\t%0, %d0\";\n \tcase MODE_V4SF:\n \t  return \"%vxorps\\t%0, %d0\";\n \n \tcase MODE_OI:\n-\t  return \"vpxor\\t%x0, %x0, %x0\";\n+\t  return TARGET_AVX512VL ? \"vpxord\\t%x0, %x0, %x0\"\n+\t\t\t\t : \"vpxor\\t%x0, %x0, %x0\";\n \tcase MODE_V4DF:\n \t  return \"vxorpd\\t%x0, %x0, %x0\";\n \tcase MODE_V8SF:\n@@ -9020,7 +9025,8 @@ standard_sse_constant_opcode (rtx insn, rtx x)\n \t}\n \n     case 2:\n-      if (get_attr_mode (insn) == MODE_XI\n+      if (TARGET_AVX512VL\n+\t  || get_attr_mode (insn) == MODE_XI\n \t  || get_attr_mode (insn) == MODE_V8DF\n \t  || get_attr_mode (insn) == MODE_V16SF)\n \treturn \"vpternlogd\\t{$0xFF, %g0, %g0, %g0|%g0, %g0, %g0, 0xFF}\";"}]}