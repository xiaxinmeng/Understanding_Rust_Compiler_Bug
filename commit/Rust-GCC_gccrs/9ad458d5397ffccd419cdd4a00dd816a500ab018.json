{"sha": "9ad458d5397ffccd419cdd4a00dd816a500ab018", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWFkNDU4ZDUzOTdmZmNjZDQxOWNkZDRhMDBkZDgxNmE1MDBhYjAxOA==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2019-01-17T00:07:43Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2019-01-17T00:07:43Z"}, "message": "[libbacktrace] Add altlink field to struct dwarf_data\n\nAdd an altlink field to struct dwarf_data, and initialize it with the pointer\nto the struct dwarf_data for the .gnu_debugaltlink.\n\n2019-01-17  Tom de Vries  <tdevries@suse.de>\n\n\t* dwarf.c (struct dwarf_data): Add altlink field.\n\t(backtrace_dwarf_add): Add and handle fileline_altlink parameter.\n\t* elf.c\t(elf_add): Add argument to backtrace_dwarf_add call.\n\t(phdr_callback, backtrace_initialize): Add argument to elf_add calls.\n\t* internal.h (backtrace_dwarf_add): Add fileline_altlink parameter.\n\t* pecoff.c (coff_add): Add argument to backtrace_dwarf_add call.\n\t* xcoff.c (xcoff_add): Same.\n\nFrom-SVN: r267994", "tree": {"sha": "53f7bad707d051b375f18d8d7d537787deace525", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53f7bad707d051b375f18d8d7d537787deace525"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ad458d5397ffccd419cdd4a00dd816a500ab018", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ad458d5397ffccd419cdd4a00dd816a500ab018", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ad458d5397ffccd419cdd4a00dd816a500ab018", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ad458d5397ffccd419cdd4a00dd816a500ab018/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e6f00c83f4478e7e9174edf39219a6e0c1043c6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6f00c83f4478e7e9174edf39219a6e0c1043c6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6f00c83f4478e7e9174edf39219a6e0c1043c6c"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "dfb17f5905ef4b74b97a4e5882ccb01fb775cc6d", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ad458d5397ffccd419cdd4a00dd816a500ab018/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ad458d5397ffccd419cdd4a00dd816a500ab018/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=9ad458d5397ffccd419cdd4a00dd816a500ab018", "patch": "@@ -1,3 +1,13 @@\n+2019-01-17  Tom de Vries  <tdevries@suse.de>\n+\n+\t* dwarf.c (struct dwarf_data): Add altlink field.\n+\t(backtrace_dwarf_add): Add and handle fileline_altlink parameter.\n+\t* elf.c\t(elf_add): Add argument to backtrace_dwarf_add call.\n+\t(phdr_callback, backtrace_initialize): Add argument to elf_add calls.\n+\t* internal.h (backtrace_dwarf_add): Add fileline_altlink parameter.\n+\t* pecoff.c (coff_add): Add argument to backtrace_dwarf_add call.\n+\t* xcoff.c (xcoff_add): Same.\n+\n 2019-01-17  Tom de Vries  <tdevries@suse.de>\n \n \t* internal.h (backtrace_dwarf_add): Add fileline_entry parameter."}, {"sha": "83cdb52ef2615917764d09506dbb47a4b686ee60", "filename": "libbacktrace/dwarf.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ad458d5397ffccd419cdd4a00dd816a500ab018/libbacktrace%2Fdwarf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ad458d5397ffccd419cdd4a00dd816a500ab018/libbacktrace%2Fdwarf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fdwarf.c?ref=9ad458d5397ffccd419cdd4a00dd816a500ab018", "patch": "@@ -343,6 +343,8 @@ struct dwarf_data\n {\n   /* The data for the next file we know about.  */\n   struct dwarf_data *next;\n+  /* The data for .gnu_debugaltlink.  */\n+  struct dwarf_data *altlink;\n   /* The base address for this file.  */\n   uintptr_t base_address;\n   /* A sorted list of address ranges.  */\n@@ -3000,6 +3002,7 @@ build_dwarf_data (struct backtrace_state *state,\n \t\t  const unsigned char *dwarf_str,\n \t\t  size_t dwarf_str_size,\n \t\t  int is_bigendian,\n+\t\t  struct dwarf_data *altlink,\n \t\t  backtrace_error_callback error_callback,\n \t\t  void *data)\n {\n@@ -3028,6 +3031,7 @@ build_dwarf_data (struct backtrace_state *state,\n     return NULL;\n \n   fdata->next = NULL;\n+  fdata->altlink = altlink;\n   fdata->base_address = base_address;\n   fdata->addrs = addrs;\n   fdata->addrs_count = addrs_count;\n@@ -3063,6 +3067,7 @@ backtrace_dwarf_add (struct backtrace_state *state,\n \t\t     const unsigned char *dwarf_str,\n \t\t     size_t dwarf_str_size,\n \t\t     int is_bigendian,\n+\t\t     struct dwarf_data *fileline_altlink,\n \t\t     backtrace_error_callback error_callback,\n \t\t     void *data, fileline *fileline_fn,\n \t\t     struct dwarf_data **fileline_entry)\n@@ -3073,7 +3078,7 @@ backtrace_dwarf_add (struct backtrace_state *state,\n \t\t\t    dwarf_line, dwarf_line_size, dwarf_abbrev,\n \t\t\t    dwarf_abbrev_size, dwarf_ranges, dwarf_ranges_size,\n \t\t\t    dwarf_str, dwarf_str_size, is_bigendian,\n-\t\t\t    error_callback, data);\n+\t\t\t    fileline_altlink, error_callback, data);\n   if (fdata == NULL)\n     return 0;\n "}, {"sha": "87e7b0d361d5414bfa68c1608178ee22cf5ed756", "filename": "libbacktrace/elf.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ad458d5397ffccd419cdd4a00dd816a500ab018/libbacktrace%2Felf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ad458d5397ffccd419cdd4a00dd816a500ab018/libbacktrace%2Felf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Felf.c?ref=9ad458d5397ffccd419cdd4a00dd816a500ab018", "patch": "@@ -3097,6 +3097,7 @@ elf_add (struct backtrace_state *state, const char *filename, int descriptor,\n       debuglink_view_valid = 0;\n     }\n \n+  struct dwarf_data *fileline_altlink = NULL;\n   if (debugaltlink_name != NULL)\n     {\n       int d;\n@@ -3108,7 +3109,7 @@ elf_add (struct backtrace_state *state, const char *filename, int descriptor,\n \t  int ret;\n \n \t  ret = elf_add (state, filename, d, base_address, error_callback, data,\n-\t\t\t fileline_fn, found_sym, found_dwarf, NULL,\n+\t\t\t fileline_fn, found_sym, found_dwarf, &fileline_altlink,\n \t\t\t 0, 1, debugaltlink_buildid_data,\n \t\t\t debugaltlink_buildid_size);\n \t  backtrace_release_view (state, &debugaltlink_view, error_callback,\n@@ -3265,6 +3266,7 @@ elf_add (struct backtrace_state *state, const char *filename, int descriptor,\n \t\t\t    sections[DEBUG_STR].data,\n \t\t\t    sections[DEBUG_STR].size,\n \t\t\t    ehdr.e_ident[EI_DATA] == ELFDATA2MSB,\n+\t\t\t    fileline_altlink,\n \t\t\t    error_callback, data, fileline_fn,\n \t\t\t    fileline_entry))\n     goto fail;"}, {"sha": "e8389779322bfcf0eb96dfcdd91762233def7df2", "filename": "libbacktrace/internal.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ad458d5397ffccd419cdd4a00dd816a500ab018/libbacktrace%2Finternal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ad458d5397ffccd419cdd4a00dd816a500ab018/libbacktrace%2Finternal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Finternal.h?ref=9ad458d5397ffccd419cdd4a00dd816a500ab018", "patch": "@@ -303,6 +303,7 @@ extern int backtrace_dwarf_add (struct backtrace_state *state,\n \t\t\t\tconst unsigned char *dwarf_str,\n \t\t\t\tsize_t dwarf_str_size,\n \t\t\t\tint is_bigendian,\n+\t\t\t\tstruct dwarf_data *fileline_altlink,\n \t\t\t\tbacktrace_error_callback error_callback,\n \t\t\t\tvoid *data, fileline *fileline_fn,\n \t\t\t\tstruct dwarf_data **fileline_entry);"}, {"sha": "da1982fd3ca7c1624d93d80ffd919822b2de4223", "filename": "libbacktrace/pecoff.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ad458d5397ffccd419cdd4a00dd816a500ab018/libbacktrace%2Fpecoff.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ad458d5397ffccd419cdd4a00dd816a500ab018/libbacktrace%2Fpecoff.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fpecoff.c?ref=9ad458d5397ffccd419cdd4a00dd816a500ab018", "patch": "@@ -867,6 +867,7 @@ coff_add (struct backtrace_state *state, int descriptor,\n \t\t\t    sections[DEBUG_STR].data,\n \t\t\t    sections[DEBUG_STR].size,\n \t\t\t    0, /* FIXME */\n+\t\t\t    NULL,\n \t\t\t    error_callback, data, fileline_fn,\n \t\t\t    NULL))\n     goto fail;"}, {"sha": "d50b5bc517e6ec836e2f8d84de5ff5161d1d5d5d", "filename": "libbacktrace/xcoff.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ad458d5397ffccd419cdd4a00dd816a500ab018/libbacktrace%2Fxcoff.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ad458d5397ffccd419cdd4a00dd816a500ab018/libbacktrace%2Fxcoff.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fxcoff.c?ref=9ad458d5397ffccd419cdd4a00dd816a500ab018", "patch": "@@ -1315,6 +1315,7 @@ xcoff_add (struct backtrace_state *state, int descriptor, off_t offset,\n \t\t\t\tdwsect[DWSECT_STR].data,\n \t\t\t\tdwsect[DWSECT_STR].size,\n \t\t\t\t1, /* big endian */\n+\t\t\t\tNULL,\n \t\t\t\terror_callback, data, fileline_fn,\n \t\t\t\tNULL))\n \tgoto fail;"}]}