{"sha": "7e89048d4af5e33dcb5036e98b698e7312eb460e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2U4OTA0OGQ0YWY1ZTMzZGNiNTAzNmU5OGI2OThlNzMxMmViNDYwZQ==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2016-09-01T21:17:42Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2016-09-01T21:17:42Z"}, "message": "re PR libfortran/77393 (Revision r237735 changed the behavior of F0.0)\n\n2016-09-01  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libgfortran/77393\n\t* gfortran.dg/fmt_f0_2.f90: Update tests for available kinds.\n\nFrom-SVN: r239945", "tree": {"sha": "1603cad23be95371a5f3d32115cb253fbc419147", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1603cad23be95371a5f3d32115cb253fbc419147"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e89048d4af5e33dcb5036e98b698e7312eb460e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e89048d4af5e33dcb5036e98b698e7312eb460e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e89048d4af5e33dcb5036e98b698e7312eb460e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e89048d4af5e33dcb5036e98b698e7312eb460e/comments", "author": null, "committer": null, "parents": [{"sha": "2f196155bcd16f592ba9366bf3ff1a160b5e560d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f196155bcd16f592ba9366bf3ff1a160b5e560d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f196155bcd16f592ba9366bf3ff1a160b5e560d"}], "stats": {"total": 33, "additions": 25, "deletions": 8}, "files": [{"sha": "f8640c0b1fac7c529678754a4b76f7b5834a1a04", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e89048d4af5e33dcb5036e98b698e7312eb460e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e89048d4af5e33dcb5036e98b698e7312eb460e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7e89048d4af5e33dcb5036e98b698e7312eb460e", "patch": "@@ -1,3 +1,8 @@\n+2016-09-01  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/77393\n+\t* gfortran.dg/fmt_f0_2.f90: Update tests for available kinds.\n+\n 2016-09-01  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.dg/torture/float128-builtin.c, gcc.dg/torture/float128-floath.c,"}, {"sha": "01788fab76eb7e65b27957a6f2b18d935030c319", "filename": "gcc/testsuite/gfortran.dg/fmt_f0_2.f90", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e89048d4af5e33dcb5036e98b698e7312eb460e/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_f0_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e89048d4af5e33dcb5036e98b698e7312eb460e/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_f0_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_f0_2.f90?ref=7e89048d4af5e33dcb5036e98b698e7312eb460e", "patch": "@@ -1,15 +1,27 @@\n ! { dg-do run }\n ! PR77393\n program testbigf0 ! Can enormous numbers be printed with F0.0 format?\n+  use ISO_FORTRAN_ENV\n   implicit none\n+  integer i\n+  integer, parameter :: j(size(real_kinds)+4)=[REAL_KINDS, [4, 4, 4, 4]]\n   character(10000) :: str\n-  write(str, \"(f0.0)\") -huge(1.0) \n-  if (len(trim(str)).lt.41) error stop \"FAILED AT LINE 7\"\n-  write(str, \"(f0.0)\") -huge(1.0_8)\n-  if (len(trim(str)).lt.311) error stop \"FAILED AT LINE 9\"\n-  write(str, \"(f0.0)\") -huge(1.0_10)\n-  if (len(trim(str)).lt.4935) error stop \"FAILED AT LINE 11\"\n-  write(str, \"(f0.10)\") -huge(1.0_16)\n-  if (len(trim(str)).lt.4945) error stop \"FAILED AT LINE 13\"\n+\n+  do i=1,size(real_kinds)\n+    select case (i)\n+    case (1)\n+      write(str, \"(f0.0)\") -huge(real(1.0,kind=j(1)))\n+      if (len(trim(str)).lt.41) error stop \"FAILED AT LINE 15\"\n+    case (2)\n+      write(str, \"(f0.0)\") -huge(real(1.0,kind=j(2)))\n+      if (len(trim(str)).lt.311) error stop \"FAILED AT LINE 19\"\n+    case (3)\n+      write(str, \"(f0.0)\") -huge(real(1.0,kind=j(3)))\n+      if (len(trim(str)).lt.4935) error stop \"FAILED AT LINE 23\"\n+    case (4)\n+      write(str, \"(f0.10)\") -huge(real(1.0,kind=j(4)))\n+      if (len(trim(str)).lt.4945) error stop \"FAILED AT LINE 27\"\n+    end select\n+  enddo\n end program testbigf0\n   "}]}