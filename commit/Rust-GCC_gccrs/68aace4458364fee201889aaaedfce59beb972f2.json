{"sha": "68aace4458364fee201889aaaedfce59beb972f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhhYWNlNDQ1ODM2NGZlZTIwMTg4OWFhYWVkZmNlNTliZWI5NzJmMg==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2021-09-18T01:08:17Z"}, "committer": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2021-09-19T17:29:36Z"}, "message": "Fix PR bootstrap/102389: --with-build-config=bootstrap-lto is broken\n\nSo the problem here is that now the lto-plugin requires NM that works\nwith LTO to work so we need to pass down NM just like we do for ranlib\nand ar.\n\nOK? Bootstrapped and tested with --with-build-config=bootstrap-lto on aarch64-linux-gnu.\nNote you need to use binutils 2.35 or later too due to ttps://sourceware.org/PR25355\n(I will submit another patch to improve the installation instructions too).\n\nconfig/ChangeLog:\n\n\tPR bootstrap/102389\n\t* bootstrap-lto-lean.mk: Handle NM like RANLIB AND AR.\n\t* bootstrap-lto.mk: Likewise.", "tree": {"sha": "b8443f16a9cb5371eb5621fa0af4b9e150ca6612", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8443f16a9cb5371eb5621fa0af4b9e150ca6612"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68aace4458364fee201889aaaedfce59beb972f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68aace4458364fee201889aaaedfce59beb972f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68aace4458364fee201889aaaedfce59beb972f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68aace4458364fee201889aaaedfce59beb972f2/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08900f28893b98b2ad0e0c284338d8555636067c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08900f28893b98b2ad0e0c284338d8555636067c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08900f28893b98b2ad0e0c284338d8555636067c"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "42cb3394c70be967eb102c63d74ad65f490ba4e6", "filename": "config/bootstrap-lto-lean.mk", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68aace4458364fee201889aaaedfce59beb972f2/config%2Fbootstrap-lto-lean.mk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68aace4458364fee201889aaaedfce59beb972f2/config%2Fbootstrap-lto-lean.mk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fbootstrap-lto-lean.mk?ref=68aace4458364fee201889aaaedfce59beb972f2", "patch": "@@ -9,9 +9,11 @@ STAGEfeedback_CFLAGS += -flto=jobserver\n # assumes the host supports the linker plugin\n LTO_AR = $$r/$(HOST_SUBDIR)/prev-gcc/gcc-ar$(exeext) -B$$r/$(HOST_SUBDIR)/prev-gcc/\n LTO_RANLIB = $$r/$(HOST_SUBDIR)/prev-gcc/gcc-ranlib$(exeext) -B$$r/$(HOST_SUBDIR)/prev-gcc/\n+LTO_NM = $$r/$(HOST_SUBDIR)/prev-gcc/gcc-nm$(exeext) -B$$r/$(HOST_SUBDIR)/prev-gcc/\n \n LTO_EXPORTS = AR=\"$(LTO_AR)\"; export AR; \\\n-\t      RANLIB=\"$(LTO_RANLIB)\"; export RANLIB;\n-LTO_FLAGS_TO_PASS = AR=\"$(LTO_AR)\" RANLIB=\"$(LTO_RANLIB)\"\n+\t      RANLIB=\"$(LTO_RANLIB)\"; export RANLIB; \\\n+\t      NM=\"$(LTO_NM)\"; export NM;\n+LTO_FLAGS_TO_PASS = AR=\"$(LTO_AR)\" RANLIB=\"$(LTO_RANLIB)\" NM=\"$(LTO_NM)\"\n \n do-compare = /bin/true"}, {"sha": "1ddb1d870bab42bd3f7cfa1031995978d195fc4d", "filename": "config/bootstrap-lto.mk", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68aace4458364fee201889aaaedfce59beb972f2/config%2Fbootstrap-lto.mk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68aace4458364fee201889aaaedfce59beb972f2/config%2Fbootstrap-lto.mk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fbootstrap-lto.mk?ref=68aace4458364fee201889aaaedfce59beb972f2", "patch": "@@ -9,10 +9,12 @@ STAGEfeedback_CFLAGS += -flto=jobserver -frandom-seed=1\n # assumes the host supports the linker plugin\n LTO_AR = $$r/$(HOST_SUBDIR)/prev-gcc/gcc-ar$(exeext) -B$$r/$(HOST_SUBDIR)/prev-gcc/\n LTO_RANLIB = $$r/$(HOST_SUBDIR)/prev-gcc/gcc-ranlib$(exeext) -B$$r/$(HOST_SUBDIR)/prev-gcc/\n+LTO_NM = $$r/$(HOST_SUBDIR)/prev-gcc/gcc-nm$(exeext) -B$$r/$(HOST_SUBDIR)/prev-gcc/\n \n LTO_EXPORTS = AR=\"$(LTO_AR)\"; export AR; \\\n-\t      RANLIB=\"$(LTO_RANLIB)\"; export RANLIB;\n-LTO_FLAGS_TO_PASS = AR=\"$(LTO_AR)\" RANLIB=\"$(LTO_RANLIB)\"\n+\t      RANLIB=\"$(LTO_RANLIB)\"; export RANLIB; \\\n+\t      NM=\"$(LTO_NM)\"; export NM;\n+LTO_FLAGS_TO_PASS = AR=\"$(LTO_AR)\" RANLIB=\"$(LTO_RANLIB)\" NM=\"$(LTO_NM)\"\n \n do-compare = $(SHELL) $(srcdir)/contrib/compare-lto $$f1 $$f2\n extra-compare = gcc/lto1$(exeext)"}]}