{"sha": "b85449adb9120b984916eb9bc0a88a466ec0744e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg1NDQ5YWRiOTEyMGI5ODQ5MTZlYjliYzBhODhhNDY2ZWMwNzQ0ZQ==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2015-01-08T21:57:49Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2015-01-08T21:57:49Z"}, "message": "re PR testsuite/62250 (FAIL: gfortran.dg/coarray/alloc_comp_1.f90 -fcoarray=lib  -O2  -lcaf_single)\n\n\tPR testsuite/62250\n\t* lib/target-supports.exp (check_effective_target_libatomic_available):\n\tNew.\n\t* gfortran.dg/coarray/caf.exp: Only add -latomic for\n\ttargets that match effective-target libatomic_available.\n\t* gfortran.dg/coarray_lib_comm_1.f90: Similar.\n\nFrom-SVN: r219364", "tree": {"sha": "0e3a51a28ca95cb81adce87c1991ba90f30797c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e3a51a28ca95cb81adce87c1991ba90f30797c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b85449adb9120b984916eb9bc0a88a466ec0744e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b85449adb9120b984916eb9bc0a88a466ec0744e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b85449adb9120b984916eb9bc0a88a466ec0744e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b85449adb9120b984916eb9bc0a88a466ec0744e/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "303e1d56c6214940a633c2b8ea7da2d81c15bd4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/303e1d56c6214940a633c2b8ea7da2d81c15bd4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/303e1d56c6214940a633c2b8ea7da2d81c15bd4d"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "d7d9ac8c7f662bc6f00032d5e248db2f4e0759a2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b85449adb9120b984916eb9bc0a88a466ec0744e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b85449adb9120b984916eb9bc0a88a466ec0744e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b85449adb9120b984916eb9bc0a88a466ec0744e", "patch": "@@ -1,3 +1,12 @@\n+2015-01-08  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\tPR testsuite/62250\n+\t* lib/target-supports.exp (check_effective_target_libatomic_available):\n+\tNew.\n+\t* gfortran.dg/coarray/caf.exp: Only add -latomic for\n+\ttargets that match effective-target libatomic_available.\n+\t* gfortran.dg/coarray_lib_comm_1.f90: Similar.\n+\n 2015-01-08  David Malcolm  <dmalcolm@redhat.com>\n \n \t* jit.dg/test-error-block-in-wrong-function.c (verify_code):"}, {"sha": "47529d3b960dcecbf2813cc8dd47f7dd8c3e12e6", "filename": "gcc/testsuite/gfortran.dg/coarray/caf.exp", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b85449adb9120b984916eb9bc0a88a466ec0744e/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Fcaf.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b85449adb9120b984916eb9bc0a88a466ec0744e/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Fcaf.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Fcaf.exp?ref=b85449adb9120b984916eb9bc0a88a466ec0744e", "patch": "@@ -58,6 +58,12 @@ proc dg-compile-aux-modules { args } {\n     # cleanup-modules isn't intentionally invoked here.\n }\n \n+# Add -latomic only where supported.  Assume built-in support elsewhere.\n+set maybe_atomic_lib \"\"\n+if [check_effective_target_libatomic_available] {\n+    set maybe_atomic_lib \"-latomic\"\n+}\n+\n # Main loop.\n foreach test [lsort [glob -nocomplain $srcdir/$subdir/*.\\[fF\\]{,90,95,03,08} ]] {\n     # If we're only testing specific files and this isn't one of them, skip it.\n@@ -81,14 +87,14 @@ foreach test [lsort [glob -nocomplain $srcdir/$subdir/*.\\[fF\\]{,90,95,03,08} ]]\n     foreach flags $option_list {\n \tverbose \"Testing $nshort (single), $flags\" 1\n         set gfortran_aux_module_flags \"-fcoarray=single $flags\"\n-\tdg-test $test \"-fcoarray=single $flags -latomic\" \"\" \n+\tdg-test $test \"-fcoarray=single $flags $maybe_atomic_lib\" \"\" \n \tcleanup-modules \"\"\n     }\n \n     foreach flags $option_list {\n \tverbose \"Testing $nshort (libcaf_single), $flags\" 1\n         set gfortran_aux_module_flags \"-fcoarray=lib $flags -lcaf_single\"\n-\tdg-test $test \"-fcoarray=lib $flags -lcaf_single -latomic\" \"\"\n+\tdg-test $test \"-fcoarray=lib $flags -lcaf_single $maybe_atomic_lib\" \"\"\n \tcleanup-modules \"\"\n     }\n }"}, {"sha": "f5c6db851fc92a9bfd6e314d84c921cc7223f7f4", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b85449adb9120b984916eb9bc0a88a466ec0744e/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b85449adb9120b984916eb9bc0a88a466ec0744e/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=b85449adb9120b984916eb9bc0a88a466ec0744e", "patch": "@@ -1128,6 +1128,13 @@ proc check_libcilkrts_available { } {\n \t} \"-fcilkplus -lcilkrts\" ]\n }\n \n+# Return true if the atomic library is supported on the target.\n+proc check_effective_target_libatomic_available { } {\n+    return [check_no_compiler_messages libatomic_available executable {\n+\tint main (void) { return 0; }\n+    } \"-latomic\"]\n+}\n+\n # Return 1 if an ASCII locale is supported on this host, 0 otherwise.\n \n proc check_ascii_locale_available { } {"}]}