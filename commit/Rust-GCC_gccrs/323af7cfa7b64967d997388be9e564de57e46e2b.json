{"sha": "323af7cfa7b64967d997388be9e564de57e46e2b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzIzYWY3Y2ZhN2I2NDk2N2Q5OTczODhiZTllNTY0ZGU1N2U0NmUyYg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2016-04-20T15:30:47Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2016-04-20T15:30:47Z"}, "message": "semantics.c (finish_compound_lteral): Don't wrap VECTOR_TYPEs in a TARGET_EXPR.\n\n\t* semantics.c (finish_compound_lteral): Don't wrap VECTOR_TYPEs in a\n\tTARGET_EXPR.\n\nFrom-SVN: r235288", "tree": {"sha": "2de7320e1082ee8b23d4a56a54cdefe31c759a55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2de7320e1082ee8b23d4a56a54cdefe31c759a55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/323af7cfa7b64967d997388be9e564de57e46e2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/323af7cfa7b64967d997388be9e564de57e46e2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/323af7cfa7b64967d997388be9e564de57e46e2b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/323af7cfa7b64967d997388be9e564de57e46e2b/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9023fd9ea0fb53c88e1fd7279b31e3be53cd4aab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9023fd9ea0fb53c88e1fd7279b31e3be53cd4aab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9023fd9ea0fb53c88e1fd7279b31e3be53cd4aab"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "008bc355b03b2fcdc752a1e9b96f3f698799e5cb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/323af7cfa7b64967d997388be9e564de57e46e2b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/323af7cfa7b64967d997388be9e564de57e46e2b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=323af7cfa7b64967d997388be9e564de57e46e2b", "patch": "@@ -1,3 +1,8 @@\n+2016-04-20  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* semantics.c (finish_compound_lteral): Don't wrap VECTOR_TYPEs in a\n+\tTARGET_EXPR.\n+\n 2016-04-19  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/66543"}, {"sha": "1dff08e29d912690c3c95b5a309e4a219b144874", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/323af7cfa7b64967d997388be9e564de57e46e2b/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/323af7cfa7b64967d997388be9e564de57e46e2b/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=323af7cfa7b64967d997388be9e564de57e46e2b", "patch": "@@ -2732,8 +2732,8 @@ finish_compound_literal (tree type, tree compound_literal,\n   compound_literal = digest_init (type, compound_literal, complain);\n   if (TREE_CODE (compound_literal) == CONSTRUCTOR)\n     TREE_HAS_CONSTRUCTOR (compound_literal) = true;\n-  /* Put static/constant array temporaries in static variables, but always\n-     represent class temporaries with TARGET_EXPR so we elide copies.  */\n+\n+  /* Put static/constant array temporaries in static variables.  */\n   if ((!at_function_scope_p () || CP_TYPE_CONST_P (type))\n       && TREE_CODE (type) == ARRAY_TYPE\n       && !TYPE_HAS_NONTRIVIAL_DESTRUCTOR (type)\n@@ -2763,8 +2763,13 @@ finish_compound_literal (tree type, tree compound_literal,\n \treturn error_mark_node;\n       return decl;\n     }\n-  else\n-    return get_target_expr_sfinae (compound_literal, complain);\n+\n+  /* Represent other compound literals with TARGET_EXPR so we produce\n+     an lvalue, but can elide copies.  */\n+  if (!VECTOR_TYPE_P (type))\n+    compound_literal = get_target_expr_sfinae (compound_literal, complain);\n+\n+  return compound_literal;\n }\n \n /* Return the declaration for the function-name variable indicated by"}]}