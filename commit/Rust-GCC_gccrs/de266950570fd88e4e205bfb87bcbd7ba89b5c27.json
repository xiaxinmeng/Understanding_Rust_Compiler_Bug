{"sha": "de266950570fd88e4e205bfb87bcbd7ba89b5c27", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGUyNjY5NTA1NzBmZDg4ZTRlMjA1YmZiODdiY2JkN2JhODliNWMyNw==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2007-11-09T13:02:25Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-11-09T13:02:25Z"}, "message": "re PR rtl-optimization/34012 (Pessimization caused by fwprop)\n\n\tPR rtl-optimization/34012\n\t* fwprop.c (try_fwprop_subst): Do not replace if the new\n\tSET_SRC has a higher cost than the old one.\n\n\t* gcc.target/i386/pr34012.c: New test.\n\nCo-Authored-By: Jakub Jelinek <jakub@redhat.com>\n\nFrom-SVN: r130043", "tree": {"sha": "2787d0ea1d32fb11d9a9124a3793a190bc159486", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2787d0ea1d32fb11d9a9124a3793a190bc159486"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de266950570fd88e4e205bfb87bcbd7ba89b5c27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de266950570fd88e4e205bfb87bcbd7ba89b5c27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de266950570fd88e4e205bfb87bcbd7ba89b5c27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de266950570fd88e4e205bfb87bcbd7ba89b5c27/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "96cdfb52ff5c5ff9c7b73ef81b23fc1e637b925b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96cdfb52ff5c5ff9c7b73ef81b23fc1e637b925b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96cdfb52ff5c5ff9c7b73ef81b23fc1e637b925b"}], "stats": {"total": 77, "additions": 69, "deletions": 8}, "files": [{"sha": "3fac0800a104a4c4852f4fe696e9814686b87d1b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de266950570fd88e4e205bfb87bcbd7ba89b5c27/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de266950570fd88e4e205bfb87bcbd7ba89b5c27/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=de266950570fd88e4e205bfb87bcbd7ba89b5c27", "patch": "@@ -1,3 +1,10 @@\n+2007-11-09  Paolo Bonzini  <bonzini@gnu.org>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/34012\n+\t* fwprop.c (try_fwprop_subst): Do not replace if the new\n+\tSET_SRC has a higher cost than the old one.\n+\n 2007-11-09  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \tPR rtl-optimization/33732"}, {"sha": "eecd0a0a5dea34936a34ed879bf1aaf87d0c3850", "filename": "gcc/fwprop.c", "status": "modified", "additions": 31, "deletions": 8, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de266950570fd88e4e205bfb87bcbd7ba89b5c27/gcc%2Ffwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de266950570fd88e4e205bfb87bcbd7ba89b5c27/gcc%2Ffwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffwprop.c?ref=de266950570fd88e4e205bfb87bcbd7ba89b5c27", "patch": "@@ -675,6 +675,9 @@ try_fwprop_subst (struct df_ref *use, rtx *loc, rtx new, rtx def_insn, bool set_\n   rtx insn = DF_REF_INSN (use);\n   enum df_ref_type type = DF_REF_TYPE (use);\n   int flags = DF_REF_FLAGS (use);\n+  rtx set = single_set (insn);\n+  int old_cost = rtx_cost (SET_SRC (set), SET);\n+  bool ok;\n \n   if (dump_file)\n     {\n@@ -685,25 +688,45 @@ try_fwprop_subst (struct df_ref *use, rtx *loc, rtx new, rtx def_insn, bool set_\n       fprintf (dump_file, \"\\n\");\n     }\n \n-  if (validate_unshare_change (insn, loc, new, false))\n+  validate_unshare_change (insn, loc, new, true);\n+  if (!verify_changes (0))\n+    {\n+      if (dump_file)\n+\tfprintf (dump_file, \"Changes to insn %d not recognized\\n\",\n+\t\t INSN_UID (insn));\n+      ok = false;\n+    }\n+\n+  else if (rtx_cost (SET_SRC (set), SET) > old_cost)\n+    {\n+      if (dump_file)\n+\tfprintf (dump_file, \"Changes to insn %d not profitable\\n\",\n+\t\t INSN_UID (insn));\n+      ok = false;\n+    }\n+\n+  else\n     {\n-      num_changes++;\n       if (dump_file)\n \tfprintf (dump_file, \"Changed insn %d\\n\", INSN_UID (insn));\n+      ok = true;\n+    }\n+\n+  if (ok)\n+    {\n+      confirm_change_group ();\n+      num_changes++;\n \n       df_ref_remove (use);\n       if (!CONSTANT_P (new))\n \t{\n \t  update_df (insn, loc, DF_INSN_USES (def_insn), type, flags);\n \t  update_df (insn, loc, DF_INSN_EQ_USES (def_insn), type, flags);\n \t}\n-      return true;\n     }\n   else\n     {\n-      if (dump_file)\n-\tfprintf (dump_file, \"Changes to insn %d not recognized\\n\",\n-\t\t INSN_UID (insn));\n+      cancel_changes (0);\n \n       /* Can also record a simplified value in a REG_EQUAL note, making a\n \t new one if one does not already exist.  */\n@@ -724,9 +747,9 @@ try_fwprop_subst (struct df_ref *use, rtx *loc, rtx new, rtx def_insn, bool set_\n \t\t\t type, DF_REF_IN_NOTE);\n \t    }\n \t}\n-\n-      return false;\n     }\n+\n+  return ok;\n }\n \n "}, {"sha": "40c3dc07528ec5c20f42ec71dd83e2fda400ed38", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de266950570fd88e4e205bfb87bcbd7ba89b5c27/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de266950570fd88e4e205bfb87bcbd7ba89b5c27/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=de266950570fd88e4e205bfb87bcbd7ba89b5c27", "patch": "@@ -1,3 +1,9 @@\n+2007-11-09  Paolo Bonzini  <bonzini@gnu.org>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/34012\n+\t* gcc.target/i386/pr34012.c: New test.\n+\n 2007-11-09  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/33604"}, {"sha": "00b1240d1b9fb96fa558459bd4f357ad13a3881d", "filename": "gcc/testsuite/gcc.target/i386/pr34012.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de266950570fd88e4e205bfb87bcbd7ba89b5c27/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr34012.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de266950570fd88e4e205bfb87bcbd7ba89b5c27/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr34012.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr34012.c?ref=de266950570fd88e4e205bfb87bcbd7ba89b5c27", "patch": "@@ -0,0 +1,25 @@\n+/* PR rtl-optimization/34012 */\n+/* { dg-do compile } */\n+/* { dg-require-effective-target lp64 } */\n+/* { dg-options \"-O2\" } */\n+\n+void bar (long int *);\n+void\n+foo (void)\n+{\n+  long int buf[10];\n+  buf[0] = 0x0808080808080808;\n+  buf[1] = 0x0808080808080808;\n+  buf[2] = 0x0808080808080808;\n+  buf[3] = 0x0808080808080808;\n+  buf[4] = 0x0808080808080808;\n+  buf[5] = 0x0808080808080808;\n+  buf[6] = 0x0808080808080808;\n+  buf[7] = 0x0808080808080808;\n+  buf[8] = 0x0808080808080808;\n+  buf[9] = 0x0808080808080808;\n+  bar (buf);\n+}\n+\n+/* Check that CSE did its job and fwprop hasn't undone it.  */\n+/* { dg-final { scan-assembler-times \"578721382704613384|0808080808080808\" 1 } } */"}]}