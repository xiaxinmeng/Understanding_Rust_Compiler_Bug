{"sha": "fabf71ba2cdb1f682b370a1c7e74b1e330faa7d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFiZjcxYmEyY2RiMWY2ODJiMzcwYTFjN2U3NGIxZTMzMGZhYTdkMw==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2014-07-24T16:41:01Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2014-07-24T16:41:01Z"}, "message": "cygming-crtbegin.c (deregister_frame_fn): Newly public.\n\n* config/i386/cygming-crtbegin.c (deregister_frame_fn): Newly public.\n(__gcc_deregister_frame): Move logic to detect deregister function to...\n(__gcc_register_frame): here, so it's consistent with the register logic.\n\nFrom-SVN: r213009", "tree": {"sha": "fb7a6fc0a705116ca7acd65510e9fe8c9deec343", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb7a6fc0a705116ca7acd65510e9fe8c9deec343"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fabf71ba2cdb1f682b370a1c7e74b1e330faa7d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fabf71ba2cdb1f682b370a1c7e74b1e330faa7d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fabf71ba2cdb1f682b370a1c7e74b1e330faa7d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fabf71ba2cdb1f682b370a1c7e74b1e330faa7d3/comments", "author": null, "committer": null, "parents": [{"sha": "037e55737efb95c6068fbcc740fc8f16a0cf7939", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/037e55737efb95c6068fbcc740fc8f16a0cf7939", "html_url": "https://github.com/Rust-GCC/gccrs/commit/037e55737efb95c6068fbcc740fc8f16a0cf7939"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "f74aeb43a955a36fe302933b5517348a3375d5e3", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fabf71ba2cdb1f682b370a1c7e74b1e330faa7d3/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fabf71ba2cdb1f682b370a1c7e74b1e330faa7d3/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=fabf71ba2cdb1f682b370a1c7e74b1e330faa7d3", "patch": "@@ -1,3 +1,9 @@\n+2014-07-24  DJ Delorie  <dj@redhat.com>\n+\n+\t* config/i386/cygming-crtbegin.c (deregister_frame_fn): Newly public.\n+\t(__gcc_deregister_frame): Move logic to detect deregister function to...\n+\t(__gcc_register_frame): here, so it's consistent with the register logic.\n+\n 2014-07-23  Nathan Sidwell  <nathan@acm.org>\n \n \t* libgcov-driver.c (set_gcov_list): Remove."}, {"sha": "b27cd0c0a9f26b2ade560edbfda142ed1987d259", "filename": "libgcc/config/i386/cygming-crtbegin.c", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fabf71ba2cdb1f682b370a1c7e74b1e330faa7d3/libgcc%2Fconfig%2Fi386%2Fcygming-crtbegin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fabf71ba2cdb1f682b370a1c7e74b1e330faa7d3/libgcc%2Fconfig%2Fi386%2Fcygming-crtbegin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Fcygming-crtbegin.c?ref=fabf71ba2cdb1f682b370a1c7e74b1e330faa7d3", "patch": "@@ -102,6 +102,7 @@ static struct object obj;\n \n /* Handle of libgcc's DLL reference.  */\n HANDLE hmod_libgcc;\n+static void *  (*deregister_frame_fn) (const void *) == NULL;\n #endif\n \n #if TARGET_USE_JCR_SECTION\n@@ -133,9 +134,14 @@ __gcc_register_frame (void)\n       hmod_libgcc = LoadLibrary (LIBGCC_SONAME);\n       register_frame_fn = (void (*) (const void *, struct object *))\n \t\t\t  GetProcAddress (h, \"__register_frame_info\");\n+      deregister_frame_fn = (void* (*) (const void *))\n+\t                    GetProcAddress (h, \"__deregister_frame_info\");\n+    }\n+  else\n+    {\n+      register_frame_fn = __register_frame_info;\n+      deregister_frame_fn = __deregister_frame_info;\n     }\n-  else \n-    register_frame_fn = __register_frame_info;\n   if (register_frame_fn)\n      register_frame_fn (__EH_FRAME_BEGIN__, &obj);\n #endif\n@@ -161,13 +167,6 @@ void\n __gcc_deregister_frame (void)\n {\n #if DWARF2_UNWIND_INFO\n-  void *  (*deregister_frame_fn) (const void *);\n-  HANDLE h = GetModuleHandle (LIBGCC_SONAME);\n-  if (h)\n-    deregister_frame_fn = (void* (*) (const void *))\n-\t\t\t  GetProcAddress (h, \"__deregister_frame_info\");\n-  else \n-    deregister_frame_fn = __deregister_frame_info;\n   if (deregister_frame_fn)\n      deregister_frame_fn (__EH_FRAME_BEGIN__);\n   if (hmod_libgcc)"}]}