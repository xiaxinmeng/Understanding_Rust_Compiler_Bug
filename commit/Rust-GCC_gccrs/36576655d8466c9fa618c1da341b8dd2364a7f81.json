{"sha": "36576655d8466c9fa618c1da341b8dd2364a7f81", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzY1NzY2NTVkODQ2NmM5ZmE2MThjMWRhMzQxYjhkZDIzNjRhN2Y4MQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-05-17T23:12:14Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-05-17T23:12:14Z"}, "message": "cgraph.c (cgraph_create_virtual_clone): Only check versionable_function_p when not in wpa and checking is enabled.\n\n\n\t* cgraph.c (cgraph_create_virtual_clone): Only check\n\tversionable_function_p when not in wpa and checking is enabled.\n\t* cgrpahunit.c (cgraph_materialize_all_clones): Stabilize after\n\tthere are no more functions to materialize.\n\t\n\t* lto/lto.c (lto_1_to_1_map): Partition non-inline clones.\n\t(lto_promote_cross_file_statics): Deal with non-inline clones.\n\nFrom-SVN: r159518", "tree": {"sha": "0f2fbe98708e13805e97bc7b12c5a0033f23ce51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f2fbe98708e13805e97bc7b12c5a0033f23ce51"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36576655d8466c9fa618c1da341b8dd2364a7f81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36576655d8466c9fa618c1da341b8dd2364a7f81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36576655d8466c9fa618c1da341b8dd2364a7f81", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36576655d8466c9fa618c1da341b8dd2364a7f81/comments", "author": null, "committer": null, "parents": [{"sha": "922f15c273e96e7bff9fecb9c0cbd90a5709f839", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/922f15c273e96e7bff9fecb9c0cbd90a5709f839", "html_url": "https://github.com/Rust-GCC/gccrs/commit/922f15c273e96e7bff9fecb9c0cbd90a5709f839"}], "stats": {"total": 27, "additions": 20, "deletions": 7}, "files": [{"sha": "e677aeb94f578956737764f44b8c7458d2876c11", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36576655d8466c9fa618c1da341b8dd2364a7f81/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36576655d8466c9fa618c1da341b8dd2364a7f81/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=36576655d8466c9fa618c1da341b8dd2364a7f81", "patch": "@@ -1,3 +1,10 @@\n+2010-05-17  Jan Hubicka  <jh@suse.cz>\n+\n+\t* cgraph.c (cgraph_create_virtual_clone): Only check\n+\tversionable_function_p when not in wpa and checking is enabled.\n+\t* cgraphunit.c (cgraph_materialize_all_clones): Stabilize after\n+\tthere are no more functions to materialize.\n+\n 2010-05-17  Jan Hubicka  <jh@suse.cz>\n \n \t* cgraph.h (struct ipa_replace_map): Add parm_num parameter."}, {"sha": "9433301cf7761263d1c22bd2e5808d6ba7e2010e", "filename": "gcc/cgraph.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36576655d8466c9fa618c1da341b8dd2364a7f81/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36576655d8466c9fa618c1da341b8dd2364a7f81/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=36576655d8466c9fa618c1da341b8dd2364a7f81", "patch": "@@ -2184,7 +2184,10 @@ cgraph_create_virtual_clone (struct cgraph_node *old_node,\n   size_t i;\n   struct ipa_replace_map *map;\n \n-  gcc_assert  (tree_versionable_function_p (old_decl));\n+#ifdef ENABLE_CHECKING\n+  if (!flag_wpa)\n+    gcc_assert  (tree_versionable_function_p (old_decl));\n+#endif\n \n   /* Make a new FUNCTION_DECL tree node */\n   if (!args_to_skip)"}, {"sha": "c811d497afd8a62d6000fad48742b59e2fc42c21", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36576655d8466c9fa618c1da341b8dd2364a7f81/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36576655d8466c9fa618c1da341b8dd2364a7f81/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=36576655d8466c9fa618c1da341b8dd2364a7f81", "patch": "@@ -2425,9 +2425,8 @@ cgraph_materialize_all_clones (void)\n \t\t\t}\n \t\t    }\n \t\t  cgraph_materialize_clone (node);\n+\t\t  stabilized = false;\n \t        }\n-\t      else\n-\t\tstabilized = false;\n \t    }\n \t}\n     }"}, {"sha": "b26268a3a96f19dd3ddc8ff4942993e57e035234", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36576655d8466c9fa618c1da341b8dd2364a7f81/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36576655d8466c9fa618c1da341b8dd2364a7f81/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=36576655d8466c9fa618c1da341b8dd2364a7f81", "patch": "@@ -1,3 +1,8 @@\n+2010-05-18  Jan Hubicka  <jh@suse.cz>\n+\n+\t* lto/lto.c (lto_1_to_1_map): Partition non-inline clones.\n+\t(lto_promote_cross_file_statics): Deal with non-inline clones.\n+\n 2010-05-18  Jan Hubicka  <jh@suse.cz>\n \n \t* lto.c (lto_materialize_function): Announce function when"}, {"sha": "adfeae95ce8811fcd335d457f903f0a26da188ce", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36576655d8466c9fa618c1da341b8dd2364a7f81/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36576655d8466c9fa618c1da341b8dd2364a7f81/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=36576655d8466c9fa618c1da341b8dd2364a7f81", "patch": "@@ -537,9 +537,8 @@ lto_1_to_1_map (void)\n \n   for (node = cgraph_nodes; node; node = node->next)\n     {\n-      /* We will get proper partition based on function they are inlined to or\n-\t cloned from.  */\n-      if (node->global.inlined_to || node->clone_of)\n+      /* We will get proper partition based on function they are inlined to.  */\n+      if (node->global.inlined_to)\n \tcontinue;\n       /* Nodes without a body do not need partitioning.  */\n       if (!node->analyzed)\n@@ -721,7 +720,7 @@ lto_promote_cross_file_statics (void)\n \t  struct cgraph_node *node = csi_node (csi);\n \t  if (node->local.externally_visible)\n \t    continue;\n-\t  if (node->clone_of || node->global.inlined_to)\n+\t  if (node->global.inlined_to)\n \t    continue;\n \t  if (!DECL_EXTERNAL (node->decl)\n \t      && (referenced_from_other_partition_p (&node->ref_list, set, vset)"}]}