{"sha": "7b668f9ed038456ca0c0cc048978bd4241f4c311", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2I2NjhmOWVkMDM4NDU2Y2EwYzBjYzA0ODk3OGJkNDI0MWY0YzMxMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-06-10T22:07:45Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-06-10T22:07:45Z"}, "message": "re PR rtl-optimization/6759 (ice when compiling 32 bit sparc code)\n\n\tPR optimization/6759\n\t* cse.c (cse_insn): Fold src_eqv just once, store it folded back into\n\tthe REQ_EQUAL note.\n\n\t* g++.dg/opt/cse1.C: New test.\n\nFrom-SVN: r54469", "tree": {"sha": "1b4bc9c9cb931afa6b95c9587f431f9506d34657", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b4bc9c9cb931afa6b95c9587f431f9506d34657"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b668f9ed038456ca0c0cc048978bd4241f4c311", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b668f9ed038456ca0c0cc048978bd4241f4c311", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b668f9ed038456ca0c0cc048978bd4241f4c311", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b668f9ed038456ca0c0cc048978bd4241f4c311/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "85d490584b173dd86e67af37a277a6b5fe823422", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85d490584b173dd86e67af37a277a6b5fe823422", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85d490584b173dd86e67af37a277a6b5fe823422"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "8b6464a33200733c2f3aedb00fa57ed68b37ddc6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b668f9ed038456ca0c0cc048978bd4241f4c311/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b668f9ed038456ca0c0cc048978bd4241f4c311/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7b668f9ed038456ca0c0cc048978bd4241f4c311", "patch": "@@ -1,3 +1,9 @@\n+2002-06-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR optimization/6759\n+\t* cse.c (cse_insn): Fold src_eqv just once, store it folded back into\n+\tthe REQ_EQUAL note.\n+\n 2002-06-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/6660"}, {"sha": "01a79d5c978bb50d9a62a7aefd1f9a7d543ab048", "filename": "gcc/cse.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b668f9ed038456ca0c0cc048978bd4241f4c311/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b668f9ed038456ca0c0cc048978bd4241f4c311/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=7b668f9ed038456ca0c0cc048978bd4241f4c311", "patch": "@@ -4915,7 +4915,10 @@ cse_insn (insn, libcall_insn)\n       && (tem = find_reg_note (insn, REG_EQUAL, NULL_RTX)) != 0\n       && (! rtx_equal_p (XEXP (tem, 0), SET_SRC (sets[0].rtl))\n \t  || GET_CODE (SET_DEST (sets[0].rtl)) == STRICT_LOW_PART))\n-    src_eqv = canon_reg (XEXP (tem, 0), NULL_RTX);\n+    {\n+      src_eqv = fold_rtx (canon_reg (XEXP (tem, 0), NULL_RTX), insn);\n+      XEXP (tem, 0) = src_eqv;\n+    }\n \n   /* Canonicalize sources and addresses of destinations.\n      We do this in a separate pass to avoid problems when a MATCH_DUP is\n@@ -5019,7 +5022,6 @@ cse_insn (insn, libcall_insn)\n \t    eqvmode = GET_MODE (SUBREG_REG (XEXP (dest, 0)));\n \t  do_not_record = 0;\n \t  hash_arg_in_memory = 0;\n-\t  src_eqv = fold_rtx (src_eqv, insn);\n \t  src_eqv_hash = HASH (src_eqv, eqvmode);\n \n \t  /* Find the equivalence class for the equivalent expression.  */"}, {"sha": "d2c3fbd9f54efcf4ab304cff16d4da306fe10eb2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b668f9ed038456ca0c0cc048978bd4241f4c311/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b668f9ed038456ca0c0cc048978bd4241f4c311/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7b668f9ed038456ca0c0cc048978bd4241f4c311", "patch": "@@ -10,6 +10,8 @@\n \n \t* gcc.dg/20020527-1.c: New test.\n \n+\t* g++.dg/opt/cse1.C: New test.\n+\n 2002-06-07  Roger Sayle  <roger@eyesopen.com>\n \n \t* gcc.dg/20020607-2.c: New test case."}, {"sha": "be1ad5a1143d476e1e5c8a13e293a1de658970ec", "filename": "gcc/testsuite/g++.dg/opt/cse1.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b668f9ed038456ca0c0cc048978bd4241f4c311/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fcse1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b668f9ed038456ca0c0cc048978bd4241f4c311/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fcse1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fcse1.C?ref=7b668f9ed038456ca0c0cc048978bd4241f4c311", "patch": "@@ -0,0 +1,12 @@\n+// PR optimization/6759\n+// This testcase ICEd on SPARC because folded REG_EQUAL\n+// note was note stored back and fold_rtx left invalid rtx\n+// in it.\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+\n+struct A\n+{\n+  long long a;\n+  A (unsigned short d) : a (d) {}\n+} x (65535);"}]}