{"sha": "713225d41db4603c3b42a96b7017190088f05623", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzEzMjI1ZDQxZGI0NjAzYzNiNDJhOTZiNzAxNzE5MDA4OGYwNTYyMw==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1994-10-04T20:47:05Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1994-10-04T20:47:05Z"}, "message": "Fix return complex doubles with -fpic clobbering %ebx\n\nFrom-SVN: r8212", "tree": {"sha": "65021030fe50f1e6c5c7afdb3371e27ca32d10ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65021030fe50f1e6c5c7afdb3371e27ca32d10ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/713225d41db4603c3b42a96b7017190088f05623", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/713225d41db4603c3b42a96b7017190088f05623", "html_url": "https://github.com/Rust-GCC/gccrs/commit/713225d41db4603c3b42a96b7017190088f05623", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/713225d41db4603c3b42a96b7017190088f05623/comments", "author": null, "committer": null, "parents": [{"sha": "80dd7630623737fe903af295e80646e5cfeade2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80dd7630623737fe903af295e80646e5cfeade2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80dd7630623737fe903af295e80646e5cfeade2b"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "831ce91724f1ca6f183bf0e9013d6c385abf8b7e", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/713225d41db4603c3b42a96b7017190088f05623/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/713225d41db4603c3b42a96b7017190088f05623/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=713225d41db4603c3b42a96b7017190088f05623", "patch": "@@ -462,6 +462,27 @@ extern int target_flags;\n /* Place in which caller passes the structure value address.\n    0 means push the value on the stack like an argument.  */\n #define STRUCT_VALUE 0\n+\n+/* A C expression which can inhibit the returning of certain function\n+   values in registers, based on the type of value.  A nonzero value\n+   says to return the function value in memory, just as large\n+   structures are always returned.  Here TYPE will be a C expression\n+   of type `tree', representing the data type of the value.\n+\n+   Note that values of mode `BLKmode' must be explicitly handled by\n+   this macro.  Also, the option `-fpcc-struct-return' takes effect\n+   regardless of this macro.  On most systems, it is possible to\n+   leave the macro undefined; this causes a default definition to be\n+   used, whose value is the constant 1 for `BLKmode' values, and 0\n+   otherwise.\n+\n+   Do not use this macro to indicate that structures and unions\n+   should always be returned in memory.  You should instead use\n+   `DEFAULT_PCC_STRUCT_RETURN' to indicate this.  */\n+\n+#define RETURN_IN_MEMORY(TYPE) \\\n+  ((TYPE_MODE (TYPE) == BLKmode) || int_size_in_bytes (TYPE) > 12)\n+\n \f\n /* Define the classes of registers for register constraints in the\n    machine description.  Also define ranges of constants."}]}