{"sha": "b0d1023d5f5f52a21d00f6e7eb5d46898c052171", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjBkMTAyM2Q1ZjVmNTJhMjFkMDBmNmU3ZWI1ZDQ2ODk4YzA1MjE3MQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2017-06-26T18:49:18Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2017-06-26T18:49:18Z"}, "message": "PR c++/81215 - deduction failure with variadic TTP.\n\n\t* pt.c (unify_bound_ttp_args): Restore old logic for C++14 and down.\n\nFrom-SVN: r249664", "tree": {"sha": "01a0fa1caf9c2a4b4451bb0286f009e35ae389a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01a0fa1caf9c2a4b4451bb0286f009e35ae389a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0d1023d5f5f52a21d00f6e7eb5d46898c052171", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0d1023d5f5f52a21d00f6e7eb5d46898c052171", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0d1023d5f5f52a21d00f6e7eb5d46898c052171", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0d1023d5f5f52a21d00f6e7eb5d46898c052171/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b5df99f74107846d3ac8034d29f4e8b67271efe1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5df99f74107846d3ac8034d29f4e8b67271efe1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5df99f74107846d3ac8034d29f4e8b67271efe1"}], "stats": {"total": 87, "additions": 75, "deletions": 12}, "files": [{"sha": "c067d23eb8a2f14a62d6f82cf71fc370db24956f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0d1023d5f5f52a21d00f6e7eb5d46898c052171/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0d1023d5f5f52a21d00f6e7eb5d46898c052171/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b0d1023d5f5f52a21d00f6e7eb5d46898c052171", "patch": "@@ -1,3 +1,8 @@\n+2017-06-26  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/81215 - deduction failure with variadic TTP.\n+\t* pt.c (unify_bound_ttp_args): Restore old logic for C++14 and down.\n+\n 2017-06-26  Martin Sebor  <msebor@redhat.com>\n \n \tPR c++/81169"}, {"sha": "43f9ca8b39e6b9ab4aab69bf27e3028814c78370", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 54, "deletions": 12, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0d1023d5f5f52a21d00f6e7eb5d46898c052171/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0d1023d5f5f52a21d00f6e7eb5d46898c052171/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=b0d1023d5f5f52a21d00f6e7eb5d46898c052171", "patch": "@@ -7170,26 +7170,68 @@ unify_bound_ttp_args (tree tparms, tree targs, tree parm, tree& arg,\n   parmvec = expand_template_argument_pack (parmvec);\n   argvec = expand_template_argument_pack (argvec);\n \n-  tree nparmvec = parmvec;\n   if (flag_new_ttp)\n     {\n       /* In keeping with P0522R0, adjust P's template arguments\n \t to apply to A's template; then flatten it again.  */\n+      tree nparmvec = parmvec;\n       nparmvec = coerce_ttp_args_for_tta (arg, parmvec, tf_none);\n       nparmvec = expand_template_argument_pack (nparmvec);\n-    }\n \n-  if (unify (tparms, targs, nparmvec, argvec,\n-\t     UNIFY_ALLOW_NONE, explain_p))\n-    return 1;\n+      if (unify (tparms, targs, nparmvec, argvec,\n+\t\t UNIFY_ALLOW_NONE, explain_p))\n+\treturn 1;\n \n-  /* If the P0522 adjustment eliminated a pack expansion, deduce\n-     empty packs.  */\n-  if (flag_new_ttp\n-      && TREE_VEC_LENGTH (nparmvec) < TREE_VEC_LENGTH (parmvec)\n-      && unify_pack_expansion (tparms, targs, parmvec, argvec,\n-\t\t\t       DEDUCE_EXACT, /*sub*/true, explain_p))\n-    return 1;\n+      /* If the P0522 adjustment eliminated a pack expansion, deduce\n+\t empty packs.  */\n+      if (flag_new_ttp\n+\t  && TREE_VEC_LENGTH (nparmvec) < TREE_VEC_LENGTH (parmvec)\n+\t  && unify_pack_expansion (tparms, targs, parmvec, argvec,\n+\t\t\t\t   DEDUCE_EXACT, /*sub*/true, explain_p))\n+\treturn 1;\n+    }\n+  else\n+    {\n+      /* Deduce arguments T, i from TT<T> or TT<i>.\n+\t We check each element of PARMVEC and ARGVEC individually\n+\t rather than the whole TREE_VEC since they can have\n+\t different number of elements, which is allowed under N2555.  */\n+\n+      int len = TREE_VEC_LENGTH (parmvec);\n+\n+      /* Check if the parameters end in a pack, making them\n+\t variadic.  */\n+      int parm_variadic_p = 0;\n+      if (len > 0\n+\t  && PACK_EXPANSION_P (TREE_VEC_ELT (parmvec, len - 1)))\n+\tparm_variadic_p = 1;\n+\n+      for (int i = 0; i < len - parm_variadic_p; ++i)\n+\t/* If the template argument list of P contains a pack\n+\t   expansion that is not the last template argument, the\n+\t   entire template argument list is a non-deduced\n+\t   context.  */\n+\tif (PACK_EXPANSION_P (TREE_VEC_ELT (parmvec, i)))\n+\t  return unify_success (explain_p);\n+\n+      if (TREE_VEC_LENGTH (argvec) < len - parm_variadic_p)\n+\treturn unify_too_few_arguments (explain_p,\n+\t\t\t\t\tTREE_VEC_LENGTH (argvec), len);\n+\n+      for (int i = 0; i < len - parm_variadic_p; ++i)\n+\tif (unify (tparms, targs,\n+\t\t   TREE_VEC_ELT (parmvec, i),\n+\t\t   TREE_VEC_ELT (argvec, i),\n+\t\t   UNIFY_ALLOW_NONE, explain_p))\n+\t  return 1;\n+\n+      if (parm_variadic_p\n+\t  && unify_pack_expansion (tparms, targs,\n+\t\t\t\t   parmvec, argvec,\n+\t\t\t\t   DEDUCE_EXACT,\n+\t\t\t\t   /*subr=*/true, explain_p))\n+\treturn 1;\n+    }\n \n   return 0;\n }"}, {"sha": "0dbe904601dac805fca305323d8eb43a90eaa717", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic-ttp7.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0d1023d5f5f52a21d00f6e7eb5d46898c052171/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-ttp7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0d1023d5f5f52a21d00f6e7eb5d46898c052171/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-ttp7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-ttp7.C?ref=b0d1023d5f5f52a21d00f6e7eb5d46898c052171", "patch": "@@ -0,0 +1,16 @@\n+// PR c++/81215\n+// { dg-do compile { target c++11 } }\n+\n+template<typename U> struct X { };\n+template<typename T, typename U = void> struct set { };\n+\n+template <typename V, template <typename...> class C>\n+void bar (const X<C<V>>&)\n+{\n+}\n+\n+void\n+foo (X<set<int>>& x)\n+{\n+  bar (x);\n+}"}]}