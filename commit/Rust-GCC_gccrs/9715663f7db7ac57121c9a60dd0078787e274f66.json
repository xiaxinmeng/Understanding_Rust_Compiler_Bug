{"sha": "9715663f7db7ac57121c9a60dd0078787e274f66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTcxNTY2M2Y3ZGI3YWM1NzEyMWM5YTYwZGQwMDc4Nzg3ZTI3NGY2Ng==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-12-04T07:08:39Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-12-04T07:08:39Z"}, "message": "c++: Change __builtin_source_location to use __PRETTY_FUNCTION__ instead of __FUNCTION__ [PR80780]\n\nOn Tue, Dec 01, 2020 at 01:03:52PM +0000, Jonathan Wakely via Gcc-patches wrote:\n> I mentioned in PR 80780 that a __builtin__PRETTY_FUNCTION would have\n> been nice, because __FUNCTION__ isn't very useful for C++, because of\n> overloading and namespace/class scopes. There are an unlimited number\n> of functions that have __FUNCTION__ == \"s\", e.g. \"ns::s(int)\" and\n> \"ns::s()\" and \"another_scope::s::s<T...>(T...)\" etc.\n>\n> Since __builtin_source_location() can do whatever it wants (without\n> needing to add __builtin__PRETTY_FUNCTION) it might be nice to use the\n> __PRETTY_FUNCTION__ string. JeanHeyd's tests would still need changes,\n> because the name would be \"s::s(void*)\" not \"s::s\" but that still\n> seems better for users.\n\nWhen I've added template tests for the previous patch, I have noticed that\nthe current __builtin_source_location behavior is not really __FUNCTION__,\njust close, because e.g. in function template __FUNCTION__ is still\n\"bar\" but __builtin_source_location gave \"bar<0>\".\n\nAnyway, this patch implements above request to follow __PRETTY_FUNCTION__\n(on top of the earlier posted patch).\n\n2020-12-04  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/80780\n\t* cp-gimplify.c (fold_builtin_source_location): Use 2 instead of 0\n\tas last argument to cxx_printable_name.\n\n\t* g++.dg/cpp2a/srcloc1.C (quux): Use __PRETTY_FUNCTION__ instead of\n\tfunction.\n\t* g++.dg/cpp2a/srcloc2.C (quux): Likewise.\n\t* g++.dg/cpp2a/srcloc15.C (S::S): Likewise.\n\t(bar): Likewise.  Adjust expected column.\n\t* g++.dg/cpp2a/srcloc17.C (S::S): Likewise.\n\t(bar): Likewise.  Adjust expected column.\n\n\t* testsuite/18_support/source_location/1.cc (main): Adjust for\n\t__builtin_source_location using __PRETTY_FUNCTION__-like names instead\n\t__FUNCTION__-like.\n\t* testsuite/18_support/source_location/consteval.cc (main): Likewise.", "tree": {"sha": "6f51f472f041ac4178e04e91980900ff0a49a806", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f51f472f041ac4178e04e91980900ff0a49a806"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9715663f7db7ac57121c9a60dd0078787e274f66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9715663f7db7ac57121c9a60dd0078787e274f66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9715663f7db7ac57121c9a60dd0078787e274f66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9715663f7db7ac57121c9a60dd0078787e274f66/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8dd0ef74dd799a0a6d35e912239f0819912890f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8dd0ef74dd799a0a6d35e912239f0819912890f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8dd0ef74dd799a0a6d35e912239f0819912890f"}], "stats": {"total": 58, "additions": 27, "deletions": 31}, "files": [{"sha": "8bbcf01736982f062c2b7457e2b776d10b85a594", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9715663f7db7ac57121c9a60dd0078787e274f66/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9715663f7db7ac57121c9a60dd0078787e274f66/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=9715663f7db7ac57121c9a60dd0078787e274f66", "patch": "@@ -3005,7 +3005,7 @@ fold_builtin_source_location (location_t loc)\n \t      const char *name = \"\";\n \n \t      if (current_function_decl)\n-\t\tname = cxx_printable_name (current_function_decl, 0);\n+\t\tname = cxx_printable_name (current_function_decl, 2);\n \n \t      val = build_string_literal (strlen (name) + 1, name);\n \t    }"}, {"sha": "029a0370f3c5f7eea4274d47262de0f2bf4aeb7a", "filename": "gcc/testsuite/g++.dg/cpp2a/srcloc1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9715663f7db7ac57121c9a60dd0078787e274f66/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fsrcloc1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9715663f7db7ac57121c9a60dd0078787e274f66/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fsrcloc1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fsrcloc1.C?ref=9715663f7db7ac57121c9a60dd0078787e274f66", "patch": "@@ -88,7 +88,7 @@ quux ()\n   const char *file1 = source_location::current ().file_name ();\n   const char *file2 = __FILE__;\n   const char *function1 = source_location::current ().function_name ();\n-  const char *function2 = __FUNCTION__;\n+  const char *function2 = __PRETTY_FUNCTION__;\n   int line1 = source_location::current ().line ();\n   int line2 = __LINE__ - 1;\n   int column"}, {"sha": "d02617e11eea06b5ba580d51d859e1cd05f6bcaf", "filename": "gcc/testsuite/g++.dg/cpp2a/srcloc15.C", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9715663f7db7ac57121c9a60dd0078787e274f66/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fsrcloc15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9715663f7db7ac57121c9a60dd0078787e274f66/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fsrcloc15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fsrcloc15.C?ref=9715663f7db7ac57121c9a60dd0078787e274f66", "patch": "@@ -44,12 +44,12 @@ struct S {\n   source_location loc = source_location::current ();\n \n   constexpr S (int l, source_location loc = source_location::current ())\n-  : func(__FUNCTION__), line(l), loc(loc)\n+  : func(__PRETTY_FUNCTION__), line(l), loc(loc)\n   {}\n \n   constexpr S (double)\n-  : func(__FUNCTION__), line(__LINE__)\n-  //                                 ^ column 38\n+  : func(__PRETTY_FUNCTION__), line(__LINE__)\n+  //                                        ^ column 45\n   {}\n };\n \n@@ -73,7 +73,7 @@ bar ()\n   //                                            ^ column 49\n   const source_location *d[3] = { &a, &b, &c };\n   const char *file1 = __FILE__;\n-  const char *function1 = __FUNCTION__;\n+  const char *function1 = __PRETTY_FUNCTION__;\n   for (int j = 0; j < 3; j++)\n     {\n       int i= 0;\n@@ -104,7 +104,7 @@ bar ()\n     return false;\n   if (e.loc.column () != 9)\n     return false;\n-  if (f.loc.column () != 38)\n+  if (f.loc.column () != 45)\n     return false;\n   return true;\n }"}, {"sha": "a02ea487eef8310451bb83aa63d1b8b97568a1dc", "filename": "gcc/testsuite/g++.dg/cpp2a/srcloc17.C", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9715663f7db7ac57121c9a60dd0078787e274f66/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fsrcloc17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9715663f7db7ac57121c9a60dd0078787e274f66/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fsrcloc17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fsrcloc17.C?ref=9715663f7db7ac57121c9a60dd0078787e274f66", "patch": "@@ -46,12 +46,12 @@ struct S {\n   source_location loc = source_location::current ();\n \n   constexpr S (int l, source_location loc = source_location::current ())\n-  : func(__FUNCTION__), line(l), loc(loc)\n+  : func(__PRETTY_FUNCTION__), line(l), loc(loc)\n   {}\n \n   constexpr S (double)\n-  : func(__FUNCTION__), line(__LINE__)\n-  //                                 ^ column 38\n+  : func(__PRETTY_FUNCTION__), line(__LINE__)\n+  //                                        ^ column 45\n   {}\n };\n \n@@ -76,7 +76,7 @@ bar ()\n   //                                           ^ column 48\n   const source_location *d[3] = { &a, &b, &c };\n   const char *file1 = __FILE__;\n-  const char *function1 = b.function_name ();\n+  const char *function1 = __PRETTY_FUNCTION__;\n   for (int j = 0; j < 3; j++)\n     {\n       int i= 0;\n@@ -107,7 +107,7 @@ bar ()\n     return false;\n   if (e.loc.column () != 8)\n     return false;\n-  if (f.loc.column () != 38)\n+  if (f.loc.column () != 45)\n     return false;\n   return true;\n }"}, {"sha": "4e0b960bf83b511e85d7d5271ba33c4dd93fb544", "filename": "gcc/testsuite/g++.dg/cpp2a/srcloc2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9715663f7db7ac57121c9a60dd0078787e274f66/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fsrcloc2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9715663f7db7ac57121c9a60dd0078787e274f66/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fsrcloc2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fsrcloc2.C?ref=9715663f7db7ac57121c9a60dd0078787e274f66", "patch": "@@ -92,7 +92,7 @@ quux ()\n   const char *file1 = source_location::current ().file_name ();\n   const char *file2 = __FILE__;\n   const char *function1 = source_location::current ().function_name ();\n-  const char *function2 = __FUNCTION__;\n+  const char *function2 = __PRETTY_FUNCTION__;\n   int line1 = source_location::current ().line ();\n   int line2 = __LINE__ - 1;\n   int column"}, {"sha": "c9cb7434dc595bb6a87dcea8d6715832eaf73e39", "filename": "libstdc++-v3/testsuite/18_support/source_location/1.cc", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9715663f7db7ac57121c9a60dd0078787e274f66/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fsource_location%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9715663f7db7ac57121c9a60dd0078787e274f66/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fsource_location%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fsource_location%2F1.cc?ref=9715663f7db7ac57121c9a60dd0078787e274f66", "patch": "@@ -89,36 +89,36 @@ int main ()\n   VERIFY(main_sl.line() == main_sl_line);\n   // closing paren of call\n   VERIFY(main_sl.column() == 64);\n-  VERIFY(main_sl_fn_name.ends_with(\"main\"sv));\n+  VERIFY(main_sl_fn_name.ends_with(\"main()\"sv));\n   VERIFY(main_sl_fi_name.ends_with(\"1.cc\"sv));\n \n   std::string_view f_arg_sl_fn_name(f_arg_sl.function_name());\n   std::string_view f_arg_sl_fi_name(f_arg_sl.file_name());\n   VERIFY(f_arg_sl.line() == f_arg_sl_line);\n   // closing paren of call\n   VERIFY(f_arg_sl.column() == 64);\n-  VERIFY(f_arg_sl_fn_name.ends_with(\"main\"sv));\n+  VERIFY(f_arg_sl_fn_name.ends_with(\"main()\"sv));\n   VERIFY(f_arg_sl_fi_name.ends_with(\"1.cc\"sv));\n \n   std::string_view g_sl_fn_name(g_sl.function_name());\n   std::string_view g_sl_fi_name(g_sl.file_name());\n   VERIFY(g_sl.line() == g_sl_line);\n   VERIFY(g_sl.column() == 58); // closing paren of call\n-  VERIFY(g_sl_fn_name.ends_with(\"g\"sv));\n+  VERIFY(g_sl_fn_name.ends_with(\"g()\"sv));\n   VERIFY(g_sl_fi_name.ends_with(\"1.cc\"sv));\n \n   std::string_view h_sl_fn_name(h_sl.function_name());\n   std::string_view h_sl_fi_name(h_sl.file_name());\n   VERIFY(h_sl.line() == 23);\n   VERIFY(h_sl.column() == 58); // closing paren of call\n-  VERIFY(h_sl_fn_name.ends_with(\"h\"sv));\n+  VERIFY(h_sl_fn_name.ends_with(\"h()\"sv));\n   VERIFY(h_sl_fi_name.ends_with(\"srcloc.h\"sv));\n \n   std::string_view member_main_sl_fn_name(member_main_sl.member.function_name());\n   std::string_view member_main_sl_fi_name(member_main_sl.member.file_name());\n   VERIFY(member_main_sl.member.line() == main_sl_line);\n   VERIFY(member_main_sl.member.column() == 64);\n-  VERIFY(member_main_sl_fn_name.ends_with(\"main\"sv));\n+  VERIFY(member_main_sl_fn_name.ends_with(\"main()\"sv));\n   VERIFY(member_main_sl_fi_name.ends_with(\"1.cc\"sv));\n \n   std::string_view member_defaulted_sl_fi_name(\n@@ -128,9 +128,7 @@ int main ()\n   VERIFY(member_defaulted_sl.member.line() == 46);\n   // closing paren of constructor declaration\n   VERIFY(member_defaulted_sl.member.column() == 25);\n-#if 0\n   VERIFY(member_defaulted_sl_fn_name.starts_with(\"s::s(int)\"sv));\n-#endif\n   VERIFY(member_defaulted_sl_fi_name.ends_with(\"1.cc\"sv));\n \n   std::string_view member_sl_fi_name(\n@@ -140,15 +138,15 @@ int main ()\n   VERIFY(member_sl.member.line() == member_sl_line);\n   // closing brace/paren of constructor\n   VERIFY(member_sl.member.column() == 19);\n-  VERIFY(member_sl_fn_name.starts_with(\"main\"sv));\n+  VERIFY(member_sl_fn_name.starts_with(\"int main()\"sv));\n   VERIFY(member_sl_fi_name.ends_with(\"1.cc\"sv));\n \n   std::string_view f_sl_fi_name(f_sl.file_name());\n   std::string_view f_sl_fn_name(f_sl.function_name());\n   VERIFY(f_sl.line() == f_sl_line);\n   // closing paren of call\n   VERIFY(f_sl.column() == 33);\n-  VERIFY(f_sl_fn_name.ends_with(\"main\"sv));\n+  VERIFY(f_sl_fn_name.ends_with(\"main()\"sv));\n   VERIFY(f_sl_fi_name.ends_with(\"1.cc\"sv));\n \n   return 0;"}, {"sha": "51c8fb265c15f65a8f92c3d33e96464953f68768", "filename": "libstdc++-v3/testsuite/18_support/source_location/consteval.cc", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9715663f7db7ac57121c9a60dd0078787e274f66/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fsource_location%2Fconsteval.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9715663f7db7ac57121c9a60dd0078787e274f66/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fsource_location%2Fconsteval.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fsource_location%2Fconsteval.cc?ref=9715663f7db7ac57121c9a60dd0078787e274f66", "patch": "@@ -83,36 +83,36 @@ int main ()\n   static_assert(main_sl.line() == main_sl_line);\n   // closing paren of call\n   static_assert(main_sl.column() == 74);\n-  static_assert(main_sl_fn_name.ends_with(\"main\"sv));\n+  static_assert(main_sl_fn_name.ends_with(\"main()\"sv));\n   static_assert(main_sl_fi_name.ends_with(\"consteval.cc\"sv));\n \n   constexpr std::string_view f_arg_sl_fn_name(f_arg_sl.function_name());\n   constexpr std::string_view f_arg_sl_fi_name(f_arg_sl.file_name());\n   static_assert(f_arg_sl.line() == f_arg_sl_line);\n   // closing paren of call\n   static_assert(f_arg_sl.column() == 74);\n-  static_assert(f_arg_sl_fn_name.ends_with(\"main\"sv));\n+  static_assert(f_arg_sl_fn_name.ends_with(\"main()\"sv));\n   static_assert(f_arg_sl_fi_name.ends_with(\"consteval.cc\"sv));\n \n   constexpr std::string_view g_sl_fn_name(g_sl.function_name());\n   constexpr std::string_view g_sl_fi_name(g_sl.file_name());\n   static_assert(g_sl.line() == g_sl_line);\n   static_assert(g_sl.column() == 58); // closing paren of call\n-  static_assert(g_sl_fn_name.ends_with(\"g\"sv));\n+  static_assert(g_sl_fn_name.ends_with(\"g()\"sv));\n   static_assert(g_sl_fi_name.ends_with(\"consteval.cc\"sv));\n \n   constexpr std::string_view h_sl_fn_name(h_sl.function_name());\n   constexpr std::string_view h_sl_fi_name(h_sl.file_name());\n   static_assert(h_sl.line() == 23);\n   static_assert(h_sl.column() == 58); // closing paren of call\n-  static_assert(h_sl_fn_name.ends_with(\"h\"sv));\n+  static_assert(h_sl_fn_name.ends_with(\"h()\"sv));\n   static_assert(h_sl_fi_name.ends_with(\"srcloc.h\"sv));\n \n   constexpr std::string_view member_main_sl_fn_name(member_main_sl.member.function_name());\n   constexpr std::string_view member_main_sl_fi_name(member_main_sl.member.file_name());\n   static_assert(member_main_sl.member.line() == main_sl_line);\n   static_assert(member_main_sl.member.column() == 74);\n-  static_assert(member_main_sl_fn_name.ends_with(\"main\"sv));\n+  static_assert(member_main_sl_fn_name.ends_with(\"main()\"sv));\n   static_assert(member_main_sl_fi_name.ends_with(\"consteval.cc\"sv));\n \n   constexpr std::string_view member_defaulted_sl_fi_name(\n@@ -122,9 +122,7 @@ int main ()\n   static_assert(member_defaulted_sl.member.line() == 36);\n   // closing paren of constructor declaration\n   static_assert(member_defaulted_sl.member.column() == 25);\n-#if 0\n   static_assert(member_defaulted_sl_fn_name.ends_with(\"s::s(int)\"sv));\n-#endif\n   static_assert(member_defaulted_sl_fi_name.ends_with(\"consteval.cc\"sv));\n \n   constexpr std::string_view member_sl_fi_name(\n@@ -134,15 +132,15 @@ int main ()\n   static_assert(member_sl.member.line() == member_sl_line);\n   // closing brace/paren of constructor\n   static_assert(member_sl.member.column() == 29);\n-  static_assert(member_sl_fn_name.starts_with(\"main\"sv));\n+  static_assert(member_sl_fn_name.starts_with(\"int main()\"sv));\n   static_assert(member_sl_fi_name.ends_with(\"consteval.cc\"sv));\n \n   constexpr std::string_view f_sl_fi_name(f_sl.file_name());\n   constexpr std::string_view f_sl_fn_name(f_sl.function_name());\n   static_assert(f_sl.line() == f_sl_line);\n   // closing paren of call\n   static_assert(f_sl.column() == 43);\n-  static_assert(f_sl_fn_name.ends_with(\"main\"sv));\n+  static_assert(f_sl_fn_name.ends_with(\"main()\"sv));\n   static_assert(f_sl_fi_name.ends_with(\"consteval.cc\"sv));\n \n   return 0;"}]}