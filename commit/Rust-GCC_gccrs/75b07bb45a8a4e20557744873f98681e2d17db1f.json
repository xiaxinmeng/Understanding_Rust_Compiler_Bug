{"sha": "75b07bb45a8a4e20557744873f98681e2d17db1f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzViMDdiYjQ1YThhNGUyMDU1Nzc0NDg3M2Y5ODY4MWUyZDE3ZGIxZg==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2016-12-19T22:29:43Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2016-12-19T22:29:43Z"}, "message": "trans-decl.c (create_main_function): Remove unused elements to the set_options call.\n\n\t* trans-decl.c (create_main_function): Remove unused elements to\n\tthe set_options call.\n\n\t* runtime/compile_options.c (set_options): Remove unused elements.\n\nFrom-SVN: r243814", "tree": {"sha": "d20bd66d44e63418a7efc78ea891d3383d0a2b62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d20bd66d44e63418a7efc78ea891d3383d0a2b62"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75b07bb45a8a4e20557744873f98681e2d17db1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75b07bb45a8a4e20557744873f98681e2d17db1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75b07bb45a8a4e20557744873f98681e2d17db1f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75b07bb45a8a4e20557744873f98681e2d17db1f/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9c2033eff925ac2577ac6f30578bc6a8498c2e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9c2033eff925ac2577ac6f30578bc6a8498c2e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9c2033eff925ac2577ac6f30578bc6a8498c2e9"}], "stats": {"total": 55, "additions": 21, "deletions": 34}, "files": [{"sha": "06c2f52ed4243bf51babe4e6a77b77e37045a27d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75b07bb45a8a4e20557744873f98681e2d17db1f/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75b07bb45a8a4e20557744873f98681e2d17db1f/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=75b07bb45a8a4e20557744873f98681e2d17db1f", "patch": "@@ -1,3 +1,8 @@\n+2016-12-19  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\t* trans-decl.c (create_main_function): Remove unused elements to\n+\tthe set_options call.\n+\n 2016-12-19  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \t* trans.h: Remove gfor_fndecl_stop_numeric_f08."}, {"sha": "9d62d514ff3fbe7a64dc39fc7dad7968646717fe", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 7, "deletions": 22, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75b07bb45a8a4e20557744873f98681e2d17db1f/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75b07bb45a8a4e20557744873f98681e2d17db1f/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=75b07bb45a8a4e20557744873f98681e2d17db1f", "patch": "@@ -5790,12 +5790,11 @@ create_main_function (tree fndecl)\n   {\n     tree array_type, array, var;\n     vec<constructor_elt, va_gc> *v = NULL;\n+    static const int noptions = 7;\n \n-    /* Passing a new option to the library requires four modifications:\n-     + add it to the tree_cons list below\n-          + change the array size in the call to build_array_type\n-          + change the first argument to the library call\n-            gfor_fndecl_set_options\n+    /* Passing a new option to the library requires three modifications:\n+          + add it to the tree_cons list below\n+          + change the noptions variable above\n           + modify the library (runtime/compile_options.c)!  */\n \n     CONSTRUCTOR_APPEND_ELT (v, NULL_TREE,\n@@ -5806,12 +5805,6 @@ create_main_function (tree fndecl)\n                                            gfc_option.allow_std));\n     CONSTRUCTOR_APPEND_ELT (v, NULL_TREE,\n                             build_int_cst (integer_type_node, pedantic));\n-    /* TODO: This is the old -fdump-core option, which is unused but\n-       passed due to ABI compatibility; remove when bumping the\n-       library ABI.  */\n-    CONSTRUCTOR_APPEND_ELT (v, NULL_TREE,\n-                            build_int_cst (integer_type_node,\n-                                           0));\n     CONSTRUCTOR_APPEND_ELT (v, NULL_TREE,\n                             build_int_cst (integer_type_node, flag_backtrace));\n     CONSTRUCTOR_APPEND_ELT (v, NULL_TREE,\n@@ -5820,26 +5813,18 @@ create_main_function (tree fndecl)\n                             build_int_cst (integer_type_node,\n                                            (gfc_option.rtcheck\n                                             & GFC_RTCHECK_BOUNDS)));\n-    /* TODO: This is the -frange-check option, which no longer affects\n-       library behavior; when bumping the library ABI this slot can be\n-       reused for something else. As it is the last element in the\n-       array, we can instead leave it out altogether.  */\n-    CONSTRUCTOR_APPEND_ELT (v, NULL_TREE,\n-                            build_int_cst (integer_type_node, 0));\n     CONSTRUCTOR_APPEND_ELT (v, NULL_TREE,\n                             build_int_cst (integer_type_node,\n                                            gfc_option.fpe_summary));\n \n-    array_type = build_array_type (integer_type_node,\n-\t\t\t\t   build_index_type (size_int (8)));\n+    array_type = build_array_type_nelts (integer_type_node, noptions);\n     array = build_constructor (array_type, v);\n     TREE_CONSTANT (array) = 1;\n     TREE_STATIC (array) = 1;\n \n     /* Create a static variable to hold the jump table.  */\n     var = build_decl (input_location, VAR_DECL,\n-\t\t      create_tmp_var_name (\"options\"),\n-\t\t      array_type);\n+\t\t      create_tmp_var_name (\"options\"), array_type);\n     DECL_ARTIFICIAL (var) = 1;\n     DECL_IGNORED_P (var) = 1;\n     TREE_CONSTANT (var) = 1;\n@@ -5851,7 +5836,7 @@ create_main_function (tree fndecl)\n \n     tmp = build_call_expr_loc (input_location,\n \t\t\t   gfor_fndecl_set_options, 2,\n-\t\t\t   build_int_cst (integer_type_node, 9), var);\n+\t\t\t   build_int_cst (integer_type_node, noptions), var);\n     gfc_add_expr_to_block (&body, tmp);\n   }\n "}, {"sha": "2837e2e559f672d7f735539a091e6f348d858632", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75b07bb45a8a4e20557744873f98681e2d17db1f/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75b07bb45a8a4e20557744873f98681e2d17db1f/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=75b07bb45a8a4e20557744873f98681e2d17db1f", "patch": "@@ -1,3 +1,7 @@\n+2016-12-19  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\t* runtime/compile_options.c (set_options): Remove unused elements.\n+\n 2016-12-19  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \t* Actually remove files that should have been removed by r243799."}, {"sha": "9355e370f0873694b9d6b995e48be00c5af12bb3", "filename": "libgfortran/runtime/compile_options.c", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75b07bb45a8a4e20557744873f98681e2d17db1f/libgfortran%2Fruntime%2Fcompile_options.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75b07bb45a8a4e20557744873f98681e2d17db1f/libgfortran%2Fruntime%2Fcompile_options.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Fcompile_options.c?ref=75b07bb45a8a4e20557744873f98681e2d17db1f", "patch": "@@ -151,21 +151,14 @@ set_options (int num, int options[])\n     compile_options.allow_std = options[1];\n   if (num >= 3)\n     compile_options.pedantic = options[2];\n-  /* options[3] is the removed -fdump-core option. Its place in the\n-     options array is retained due to ABI compatibility. Remove when\n-     bumping the library ABI.  */\n+  if (num >= 4)\n+    compile_options.backtrace = options[3];\n   if (num >= 5)\n-    compile_options.backtrace = options[4];\n+    compile_options.sign_zero = options[4];\n   if (num >= 6)\n-    compile_options.sign_zero = options[5];\n+    compile_options.bounds_check = options[5];\n   if (num >= 7)\n-    compile_options.bounds_check = options[6];\n-  /* options[7] is the -frange-check option, which no longer affects\n-     the library behavior; range checking is now always done when\n-     parsing integers. Its place in the options array is retained due\n-     to ABI compatibility. Remove when bumping the library ABI.  */\n-  if (num >= 9)\n-    compile_options.fpe_summary = options[8];\n+    compile_options.fpe_summary = options[6];\n \n #ifndef LIBGFOR_MINIMAL\n   /* If backtrace is required, we set signal handlers on the POSIX"}]}