{"sha": "1c432a0c34a7f3ac56afca802e1dce1058be2db5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWM0MzJhMGMzNGE3ZjNhYzU2YWZjYTgwMmUxZGNlMTA1OGJlMmRiNQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@kss-loka.si", "date": "2005-04-15T05:43:56Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2005-04-15T05:43:56Z"}, "message": "re PR tree-optimization/21004 (gcc.dg/builtins-53.c fails)\n\n\tPR tree-optimization/21004\n\t* convert.c (convert_to_integer): Convert ceilf, ceill, floorf\n\tand floorl in c99 mode only.\n\t* builtins.c (expand_builtin_int_roundingfn): Assert that\n\tfallback_fndecl is not NULL_TREE.\n\ntestsuite:\n\n\tPR tree-optimization/21004\n\t* gcc.dg/builtins-53.c: Include builtins-config.h.\n\tCheck floorf, ceilf, floorl and ceill transformations\n\tonly when HAVE_C99_RUNTIME is defined.\n\nFrom-SVN: r98174", "tree": {"sha": "6cece628e71c04ff9e27b7ef90ee01ffb2ef5922", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6cece628e71c04ff9e27b7ef90ee01ffb2ef5922"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c432a0c34a7f3ac56afca802e1dce1058be2db5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c432a0c34a7f3ac56afca802e1dce1058be2db5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c432a0c34a7f3ac56afca802e1dce1058be2db5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c432a0c34a7f3ac56afca802e1dce1058be2db5/comments", "author": null, "committer": null, "parents": [{"sha": "57b11c96547894d67972735a5df66fb9c7fdacdb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57b11c96547894d67972735a5df66fb9c7fdacdb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57b11c96547894d67972735a5df66fb9c7fdacdb"}], "stats": {"total": 40, "additions": 38, "deletions": 2}, "files": [{"sha": "e30430bd9fd3ce525bbffbcf6310d921a7127c64", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c432a0c34a7f3ac56afca802e1dce1058be2db5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c432a0c34a7f3ac56afca802e1dce1058be2db5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1c432a0c34a7f3ac56afca802e1dce1058be2db5", "patch": "@@ -1,3 +1,11 @@\n+2005-04-15  Uros Bizjak  <uros@kss-loka.si>\n+\n+\tPR tree-optimization/21004\n+\t* convert.c (convert_to_integer): Convert ceilf, ceill, floorf\n+\tand floorl in c99 mode only.\n+\t* builtins.c (expand_builtin_int_roundingfn): Assert that\n+\tfallback_fndecl is not NULL_TREE.\n+\n 2005-04-15  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* cfgrtl.c (purge_all_dead_edge): Remove an unused argument."}, {"sha": "78a577f53fe83711649bb33e836c092cabc1e78d", "filename": "gcc/builtins.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c432a0c34a7f3ac56afca802e1dce1058be2db5/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c432a0c34a7f3ac56afca802e1dce1058be2db5/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=1c432a0c34a7f3ac56afca802e1dce1058be2db5", "patch": "@@ -2220,6 +2220,9 @@ expand_builtin_int_roundingfn (tree exp, rtx target, rtx subtarget)\n \n   /* Fall back to floating point rounding optab.  */\n   fallback_fndecl = mathfn_built_in (TREE_TYPE (arg), fallback_fn);\n+  /* We shouldn't get here on targets without TARGET_C99_FUNCTIONS.\n+     ??? Perhaps convert (int)floorf(x) into (int)floor((double)x).  */\n+  gcc_assert (fallback_fndecl != NULL_TREE);\n   exp = build_function_call_expr (fallback_fndecl, arglist);\n \n   tmp = expand_builtin_mathfn (exp, NULL_RTX, NULL_RTX);"}, {"sha": "c6c2620ab11a6cf28f7effb202ca592a63148831", "filename": "gcc/convert.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c432a0c34a7f3ac56afca802e1dce1058be2db5/gcc%2Fconvert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c432a0c34a7f3ac56afca802e1dce1058be2db5/gcc%2Fconvert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconvert.c?ref=1c432a0c34a7f3ac56afca802e1dce1058be2db5", "patch": "@@ -349,14 +349,26 @@ convert_to_integer (tree type, tree expr)\n       \n       switch (fcode)\n         {\n-\tcase BUILT_IN_CEIL: case BUILT_IN_CEILF: case BUILT_IN_CEILL:\n+\tcase BUILT_IN_CEILF:\n+\tcase BUILT_IN_CEILL:\n+\t  /* Only convert in ISO C99 mode.  */\n+\t  if (!TARGET_C99_FUNCTIONS)\n+\t    break;\n+\t  /* ... Fall through ...  */\n+\tcase BUILT_IN_CEIL:\n \t  if (TYPE_MAIN_VARIANT (type) == TYPE_MAIN_VARIANT (long_long_integer_type_node))\n \t    fn = mathfn_built_in (s_intype, BUILT_IN_LLCEIL);\n \t  else\n \t    fn = mathfn_built_in (s_intype, BUILT_IN_LCEIL);\n \t  break;\n \n-\tcase BUILT_IN_FLOOR: case BUILT_IN_FLOORF: case BUILT_IN_FLOORL:\n+\tcase BUILT_IN_FLOORF:\n+\tcase BUILT_IN_FLOORL:\n+\t  /* Only convert in ISO C99 mode.  */\n+\t  if (!TARGET_C99_FUNCTIONS)\n+\t    break;\n+\t  /* ... Fall through ...  */\n+\tcase BUILT_IN_FLOOR:\n \t  if (TYPE_MAIN_VARIANT (type) == TYPE_MAIN_VARIANT (long_long_integer_type_node))\n \t    fn = mathfn_built_in (s_intype, BUILT_IN_LLFLOOR);\n \t  else"}, {"sha": "b2b8e9798e1da9a3673927330980896d6310e0b8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c432a0c34a7f3ac56afca802e1dce1058be2db5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c432a0c34a7f3ac56afca802e1dce1058be2db5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1c432a0c34a7f3ac56afca802e1dce1058be2db5", "patch": "@@ -1,3 +1,10 @@\n+2005-04-15  Uros Bizjak  <uros@kss-loka.si>\n+\n+\tPR tree-optimization/21004\n+\t* gcc.dg/builtins-53.c: Include builtins-config.h.\n+\tCheck floorf, ceilf, floorl and ceill transformations\n+\tonly when HAVE_C99_RUNTIME is defined.\n+\t\n 2005-04-15  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR middle-end/20739"}, {"sha": "e01908c26a7d87648acfec740f5bc27a422824bb", "filename": "gcc/testsuite/gcc.dg/builtins-53.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c432a0c34a7f3ac56afca802e1dce1058be2db5/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-53.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c432a0c34a7f3ac56afca802e1dce1058be2db5/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-53.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-53.c?ref=1c432a0c34a7f3ac56afca802e1dce1058be2db5", "patch": "@@ -11,6 +11,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -ffast-math\" } */\n \n+#include \"builtins-config.h\"\n+\n extern double floor(double);\n extern double ceil(double);\n extern double trunc(double);\n@@ -54,6 +56,7 @@ long long int test6(double x)\n   return trunc(x);\n }\n \n+#ifdef HAVE_C99_RUNTIME\n long int test1f(float x)\n {\n   return floorf(x);\n@@ -73,6 +76,7 @@ long long int test4f(float x)\n {\n   return ceilf(x);\n }\n+#endif\n \n long int test5f(float x)\n {\n@@ -84,6 +88,7 @@ long long int test6f(float x)\n   return truncf(x);\n }\n \n+#ifdef HAVE_C99_RUNTIME\n long int test1l(long double x)\n {\n   return floorl(x);\n@@ -103,6 +108,7 @@ long long int test4l(long double x)\n {\n   return ceill(x);\n }\n+#endif\n \n long int test5l(long double x)\n {"}]}