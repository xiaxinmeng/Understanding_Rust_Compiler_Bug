{"sha": "bf8e3b779b1b243380234ae11f1be99b83ee1178", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY4ZTNiNzc5YjFiMjQzMzgwMjM0YWUxMWYxYmU5OWI4M2VlMTE3OA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-02-03T11:13:17Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-02-03T11:13:17Z"}, "message": "re PR tree-optimization/42927 (type mismatch in shift expression produces ice with -O3)\n\n2010-02-03  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/42927\n\t* tree-cfg.c (verify_gimple_assign_binary): Fix shift verification.\n\n\t* gcc.c-torture/compile/pr42927.c: New testcase.\n\nFrom-SVN: r156464", "tree": {"sha": "b08b53403968aea320bed98029aab502cbe235c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b08b53403968aea320bed98029aab502cbe235c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf8e3b779b1b243380234ae11f1be99b83ee1178", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf8e3b779b1b243380234ae11f1be99b83ee1178", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf8e3b779b1b243380234ae11f1be99b83ee1178", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf8e3b779b1b243380234ae11f1be99b83ee1178/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bde17fdc4d567a35701b35f26ac511ae42b8ec91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bde17fdc4d567a35701b35f26ac511ae42b8ec91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bde17fdc4d567a35701b35f26ac511ae42b8ec91"}], "stats": {"total": 48, "additions": 45, "deletions": 3}, "files": [{"sha": "0119d35c48c61225325dabf01e0d76d0343dcd48", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf8e3b779b1b243380234ae11f1be99b83ee1178/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf8e3b779b1b243380234ae11f1be99b83ee1178/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bf8e3b779b1b243380234ae11f1be99b83ee1178", "patch": "@@ -1,3 +1,8 @@\n+2010-02-03  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/42927\n+\t* tree-cfg.c (verify_gimple_assign_binary): Fix shift verification.\n+\n 2010-02-03  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* config.gcc: Reenable check for obsolete targets."}, {"sha": "ccfdb6b88b273aaf8ef162e671f60f05d695f619", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf8e3b779b1b243380234ae11f1be99b83ee1178/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf8e3b779b1b243380234ae11f1be99b83ee1178/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bf8e3b779b1b243380234ae11f1be99b83ee1178", "patch": "@@ -1,3 +1,8 @@\n+2010-02-03  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/42927\n+\t* gcc.c-torture/compile/pr42927.c: New testcase.\n+\n 2010-02-03  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/42936"}, {"sha": "ada919f7055e2f3b11c8a05eadcddee89a95f4ec", "filename": "gcc/testsuite/gcc.c-torture/compile/pr42927.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf8e3b779b1b243380234ae11f1be99b83ee1178/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr42927.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf8e3b779b1b243380234ae11f1be99b83ee1178/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr42927.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr42927.c?ref=bf8e3b779b1b243380234ae11f1be99b83ee1178", "patch": "@@ -0,0 +1,32 @@\n+typedef unsigned int u_int8_t __attribute__ ((__mode__ (__QI__)));\n+typedef unsigned int u_int32_t __attribute__ ((__mode__ (__SI__)));\n+typedef enum { READ_SHARED = 0, WRITE_EXCLUSIVE = 1,\n+    READ_EXCLUSIVE = 2, EXCLUSIVE_ACCESS = 3 } scsires_access_mode;\n+struct scsires_extent_elem {\n+    scsires_access_mode mode;\n+    unsigned relative_address;\n+    u_int32_t first_block;\n+    u_int32_t length;\n+};\n+typedef struct scsires_extent_elem scsires_extent_elem_t;\n+struct scsires_extent {\n+    u_int8_t num_elements;\n+    scsires_extent_elem_t *elements;\n+};\n+typedef struct scsires_extent scsires_extent_t;\n+unsigned char buf[512];\n+void scsires_issue_reservation(scsires_extent_t * new_extent)\n+{\n+  int i;\n+  for (i = 0; i < new_extent->num_elements; i++)\n+    {\n+      buf[(i * 8)] = new_extent->elements[i].mode;\n+      buf[(i * 8) + 1] = ((new_extent->elements[i].length >> 16) & 0xff); \n+      buf[(i * 8) + 2] = ((new_extent->elements[i].length >> 8) & 0xff);\n+      buf[(i * 8) + 3] = (new_extent->elements[i].length & 0xff);\n+      buf[(i * 8) + 4] = ((new_extent->elements[i].first_block >> 24) & 0xff); \n+      buf[(i * 8) + 5] = ((new_extent->elements[i].first_block >> 16) & 0xff);\n+      buf[(i * 8) + 6] = ((new_extent->elements[i].first_block >> 8) & 0xff);\n+      buf[(i * 8) + 7] = (new_extent->elements[i].first_block & 0xff);\n+    }\n+}"}, {"sha": "e5ed9ec7006a0b1ab7b52e8a9256ddf39f62d62e", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf8e3b779b1b243380234ae11f1be99b83ee1178/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf8e3b779b1b243380234ae11f1be99b83ee1178/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=bf8e3b779b1b243380234ae11f1be99b83ee1178", "patch": "@@ -3287,13 +3287,13 @@ verify_gimple_assign_binary (gimple stmt)\n \tif ((!INTEGRAL_TYPE_P (rhs1_type)\n \t     && !FIXED_POINT_TYPE_P (rhs1_type)\n \t     && !(TREE_CODE (rhs1_type) == VECTOR_TYPE\n-\t\t  && TREE_CODE (TREE_TYPE (rhs1_type)) == INTEGER_TYPE))\n+\t\t  && INTEGRAL_TYPE_P (TREE_TYPE (rhs1_type))))\n \t    || (!INTEGRAL_TYPE_P (rhs2_type)\n \t\t/* Vector shifts of vectors are also ok.  */\n \t\t&& !(TREE_CODE (rhs1_type) == VECTOR_TYPE\n-\t\t     && TREE_CODE (TREE_TYPE (rhs1_type)) == INTEGER_TYPE\n+\t\t     && INTEGRAL_TYPE_P (TREE_TYPE (rhs1_type))\n \t\t     && TREE_CODE (rhs2_type) == VECTOR_TYPE\n-\t\t     && TREE_CODE (TREE_TYPE (rhs2_type)) == INTEGER_TYPE))\n+\t\t     && INTEGRAL_TYPE_P (TREE_TYPE (rhs2_type))))\n \t    || !useless_type_conversion_p (lhs_type, rhs1_type))\n \t  {\n \t    error (\"type mismatch in shift expression\");"}]}