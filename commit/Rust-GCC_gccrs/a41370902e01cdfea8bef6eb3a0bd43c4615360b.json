{"sha": "a41370902e01cdfea8bef6eb3a0bd43c4615360b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQxMzcwOTAyZTAxY2RmZWE4YmVmNmViM2EwYmQ0M2M0NjE1MzYwYg==", "commit": {"author": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2014-07-17T23:18:50Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2014-07-17T23:18:50Z"}, "message": "linux-atomic.c (__sync_lock_release_4): New.\n\n\t* config/pa/linux-atomic.c (__sync_lock_release_4): New.\n\t(SYNC_LOCK_RELEASE): Update to use __kernel_cmpxchg for release.\n\tDon't use SYNC_LOCK_RELEASE for int type.\n\nFrom-SVN: r212767", "tree": {"sha": "aeb2c0104eb090d64ecc8cbb04774512793af98c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aeb2c0104eb090d64ecc8cbb04774512793af98c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a41370902e01cdfea8bef6eb3a0bd43c4615360b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a41370902e01cdfea8bef6eb3a0bd43c4615360b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a41370902e01cdfea8bef6eb3a0bd43c4615360b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a41370902e01cdfea8bef6eb3a0bd43c4615360b/comments", "author": null, "committer": null, "parents": [{"sha": "1435fa485eead5afc5f4385601f3e8098d599872", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1435fa485eead5afc5f4385601f3e8098d599872", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1435fa485eead5afc5f4385601f3e8098d599872"}], "stats": {"total": 31, "additions": 29, "deletions": 2}, "files": [{"sha": "b659f803a8e751f84b1ea65ca95ab26b3496a90b", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a41370902e01cdfea8bef6eb3a0bd43c4615360b/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a41370902e01cdfea8bef6eb3a0bd43c4615360b/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=a41370902e01cdfea8bef6eb3a0bd43c4615360b", "patch": "@@ -1,3 +1,9 @@\n+2014-07-17  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\t* config/pa/linux-atomic.c (__sync_lock_release_4): New.\n+\t(SYNC_LOCK_RELEASE): Update to use __kernel_cmpxchg for release.\n+\tDon't use SYNC_LOCK_RELEASE for int type.\n+\n 2014-07-14  Richard Biener  <rguenther@suse.de>\n \n \t* libgcov.h (struct gcov_fn_info): Make ctrs size 1."}, {"sha": "e70d7d7a1f7822dc681bb67470d17a84119096cb", "filename": "libgcc/config/pa/linux-atomic.c", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a41370902e01cdfea8bef6eb3a0bd43c4615360b/libgcc%2Fconfig%2Fpa%2Flinux-atomic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a41370902e01cdfea8bef6eb3a0bd43c4615360b/libgcc%2Fconfig%2Fpa%2Flinux-atomic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpa%2Flinux-atomic.c?ref=a41370902e01cdfea8bef6eb3a0bd43c4615360b", "patch": "@@ -293,13 +293,34 @@ __sync_lock_test_and_set_4 (int *ptr, int val)\n SUBWORD_TEST_AND_SET (unsigned short, 2)\n SUBWORD_TEST_AND_SET (unsigned char,  1)\n \n+void HIDDEN\n+__sync_lock_release_4 (int *ptr)\n+{\n+  int failure, oldval;\n+\n+  do {\n+    oldval = *ptr;\n+    failure = __kernel_cmpxchg (oldval, 0, ptr);\n+  } while (failure != 0);\n+}\n+\n #define SYNC_LOCK_RELEASE(TYPE, WIDTH)\t\t\t\t\t\\\n   void HIDDEN\t\t\t\t\t\t\t\t\\\n   __sync_lock_release_##WIDTH (TYPE *ptr)\t\t\t\t\\\n   {\t\t\t\t\t\t\t\t\t\\\n-    *ptr = 0;\t\t\t\t\t\t\t\t\\\n+    int failure;\t\t\t\t\t\t\t\\\n+    unsigned int oldval, newval, shift, mask;\t\t\t\t\\\n+    int *wordptr = (int *) ((unsigned long) ptr & ~3);\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+    shift = (((unsigned long) ptr & 3) << 3) ^ INVERT_MASK_##WIDTH;\t\\\n+    mask = MASK_##WIDTH << shift;\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+    do {\t\t\t\t\t\t\t\t\\\n+      oldval = *wordptr;\t\t\t\t\t\t\\\n+      newval = oldval & ~mask;\t\t\t\t\t\t\\\n+      failure = __kernel_cmpxchg (oldval, newval, wordptr);\t\t\\\n+    } while (failure != 0);\t\t\t\t\t\t\\\n   }\n \n-SYNC_LOCK_RELEASE (int,   4)\n SYNC_LOCK_RELEASE (short, 2)\n SYNC_LOCK_RELEASE (char,  1)"}]}