{"sha": "b7175f36812b32d3de242f15c065b9cb68e957a9", "node_id": "C_kwDOANBUbNoAKGI3MTc1ZjM2ODEyYjMyZDNkZTI0MmYxNWMwNjViOWNiNjhlOTU3YTk", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-03-08T19:16:48Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-03-08T19:16:48Z"}, "message": "analyzer: more test coverage of leak detection [PR99771]\n\ngcc/testsuite/ChangeLog:\n\tPR analyzer/99771\n\t* gcc.dg/analyzer/leak-4.c: New test.\n\nSigned-off-by: David Malcolm <dmalcolm@redhat.com>", "tree": {"sha": "d799b13b6754aa22fb11180ad2158f360ff95849", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d799b13b6754aa22fb11180ad2158f360ff95849"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7175f36812b32d3de242f15c065b9cb68e957a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7175f36812b32d3de242f15c065b9cb68e957a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7175f36812b32d3de242f15c065b9cb68e957a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7175f36812b32d3de242f15c065b9cb68e957a9/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1133c0205a7e2a65834a1af780b8da15eead2a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1133c0205a7e2a65834a1af780b8da15eead2a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1133c0205a7e2a65834a1af780b8da15eead2a9"}], "stats": {"total": 103, "additions": 103, "deletions": 0}, "files": [{"sha": "75090e6be83b19002b5b913ff3657a7ca800572b", "filename": "gcc/testsuite/gcc.dg/analyzer/leak-4.c", "status": "added", "additions": 103, "deletions": 0, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7175f36812b32d3de242f15c065b9cb68e957a9/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fleak-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7175f36812b32d3de242f15c065b9cb68e957a9/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fleak-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fleak-4.c?ref=b7175f36812b32d3de242f15c065b9cb68e957a9", "patch": "@@ -0,0 +1,103 @@\n+/* Various tests of memory leak detection.  */\n+\n+#include <stdlib.h>\n+\n+/* Example of an leak due to incomplete cleanup when freeing a struct.  */\n+\n+struct s1\n+{\n+  void *ptr;\n+};\n+\n+void test_1 (void)\n+{\n+  struct s1 *a = malloc (sizeof (struct s1));\n+  if (!a)\n+    return;\n+  a->ptr = malloc (1024); /* { dg-message \"allocated here\" } */\n+  free (a); /* { dg-warning \"leak of '<unknown>'\" } */\n+  /* TODO: we should print \"a->ptr' here, rather than '<unknown>'\n+     (PR analyzer/99771).  */\n+}\n+\n+\n+/* Examples involving arrays.  */\n+\n+struct s2\n+{\n+  void *m_arr[10];\n+};\n+\n+void test_2a (void)\n+{\n+  struct s2 arr[5];\n+  arr[3].m_arr[4] = malloc (1024); /* { dg-message \"allocated here\" } */\n+} /* { dg-warning \"leak of 'arr\\\\\\[3\\\\\\].m_arr\\\\\\[4\\\\\\]'\" } */\n+\n+void test_2b (int i)\n+{\n+  struct s2 arr[5];\n+  arr[3].m_arr[i] = malloc (1024); /* { dg-message \"allocated here\" } */\n+} /* { dg-warning \"leak of 'arr\\\\\\[3\\\\\\].m_arr\\\\\\[i\\\\\\]'\" } */\n+\n+void test_2c (int i)\n+{\n+  struct s2 arr[5];\n+  arr[i].m_arr[4] = malloc (1024); /* { dg-message \"allocated here\" } */\n+} /* { dg-warning \"leak of 'arr\\\\\\[i\\\\\\].m_arr\\\\\\[4\\\\\\]'\" } */\n+\n+void test_2d (int i, int j)\n+{\n+  struct s2 arr[5];\n+  arr[i].m_arr[j] = malloc (1024); /* { dg-message \"allocated here\" } */\n+} /* { dg-warning \"leak of 'arr\\\\\\[i\\\\\\].m_arr\\\\\\[j\\\\\\]'\" } */\n+\n+\n+/* Example involving fields.  */\n+\n+struct s3\n+{\n+  struct s3 *m_left;\n+  struct s3 *m_right;  \n+};\n+\n+void test_3 (void)\n+{\n+  struct s3 *a = malloc (sizeof (struct s3));\n+  a->m_right = malloc (sizeof (struct s3)); /* { dg-warning \"dereference of possibly-NULL 'a'\" } */\n+  a->m_right->m_left = malloc (sizeof (struct s3)); /* { dg-warning \"dereference of possibly-NULL '\\\\*a.m_right'\" } */\n+} /* { dg-warning \"leak of 'a'\" \"leak of a\" } */\n+/* { dg-warning \"leak of '<unknown>'\" \"leak of unknown\" { target *-*-* } .-1 } */\n+/* TODO: rather than '<unknown>', we should print 'a->m_right'\n+   and 'a->m_right->m_left' (PR analyzer/99771).  */\n+\n+\n+/* Example involving faking inheritance via casts.  */\n+\n+struct s4_base\n+{\n+  int m_placeholder;\n+};\n+\n+struct s4_sub\n+{\n+  void *m_buffer;\n+};\n+\n+static struct s4_sub *\n+make_s4_sub (void)\n+{\n+  struct s4_sub *sub = malloc (sizeof (struct s4_sub)); /* { dg-message \"allocated here\" } */\n+  if (!sub)\n+    return NULL;\n+  sub->m_buffer = malloc (1024); /* { dg-message \"allocated here\" } */\n+  return sub;\n+}\n+\n+void test_4 (void)\n+{\n+  struct s4_base *base = (struct s4_base *)make_s4_sub ();\n+} /* { dg-warning \"leak of 'base'\" \"leak of base\" } */\n+/* { dg-warning \"leak of '<unknown>'\" \"leak of sub buffer\" { target *-*-* } .-1 } */\n+/* TODO: rather than 'unknown', we should print something\n+   like '((struct s4_sub *)base)->m_buffer' (PR analyzer/99771).  */"}]}