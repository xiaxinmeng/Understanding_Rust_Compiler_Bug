{"sha": "601d5a25b201fe771545c2ff06a29c63b5b25cab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjAxZDVhMjViMjAxZmU3NzE1NDVjMmZmMDZhMjljNjNiNWIyNWNhYg==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2010-09-03T14:57:57Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2010-09-03T14:57:57Z"}, "message": "abi-avx.exp: Link with gcc.target/i386/clearcap.map if supported.\n\n\t* gcc.target/x86_64/abi/avx/abi-avx.exp: Link with\n\tgcc.target/i386/clearcap.map if supported.\n\nFrom-SVN: r163827", "tree": {"sha": "f2396cb3f9e6c1cce9fda96ee3f0569d7e49a545", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2396cb3f9e6c1cce9fda96ee3f0569d7e49a545"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/601d5a25b201fe771545c2ff06a29c63b5b25cab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/601d5a25b201fe771545c2ff06a29c63b5b25cab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/601d5a25b201fe771545c2ff06a29c63b5b25cab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/601d5a25b201fe771545c2ff06a29c63b5b25cab/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "87df9ea5a056a88a4fd1f28236155b30bac08ced", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87df9ea5a056a88a4fd1f28236155b30bac08ced", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87df9ea5a056a88a4fd1f28236155b30bac08ced"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "213d02cb7991517f9968ee65f60979e15e761f70", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/601d5a25b201fe771545c2ff06a29c63b5b25cab/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/601d5a25b201fe771545c2ff06a29c63b5b25cab/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=601d5a25b201fe771545c2ff06a29c63b5b25cab", "patch": "@@ -1,3 +1,8 @@\n+2010-09-03  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* gcc.target/x86_64/abi/avx/abi-avx.exp: Link with\n+\tgcc.target/i386/clearcap.map if supported.\n+\n 2010-09-03  Michael Matz  <matz@suse.de>\n \n \tPR middle-end/45415"}, {"sha": "8733d4e0af73ed26b7aa746fbb733ecadbe96438", "filename": "gcc/testsuite/gcc.target/x86_64/abi/avx/abi-avx.exp", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/601d5a25b201fe771545c2ff06a29c63b5b25cab/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Favx%2Fabi-avx.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/601d5a25b201fe771545c2ff06a29c63b5b25cab/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Favx%2Fabi-avx.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Favx%2Fabi-avx.exp?ref=601d5a25b201fe771545c2ff06a29c63b5b25cab", "patch": "@@ -28,9 +28,20 @@ if { (![istarget x86_64-*-*] && ![istarget i?86-*-*])\n }\n \n \n+# If the linker used understands -M <mapfile>, pass it to clear hardware\n+# capabilities set by the Sun assembler.\n+set flags \"\"\n+set clearcap_ldflags \"-Wl,-M,$srcdir/gcc.target/i386/clearcap.map\"\n+\n+if [check_no_compiler_messages mapfile executable {\n+\tint main (void) { return 0; }\n+  } $clearcap_ldflags ] {\n+  set flags $clearcap_ldflags\n+}\n+\n torture-init\n set-torture-options $C_TORTURE_OPTIONS\n-set additional_flags \"-W -Wall -mavx\"\n+set additional_flags \"-W -Wall -mavx $flags\"\n \n foreach src [lsort [glob -nocomplain $srcdir/$subdir/test_*.c]] {\n     if {[runtest_file_p $runtests $src]} {"}]}