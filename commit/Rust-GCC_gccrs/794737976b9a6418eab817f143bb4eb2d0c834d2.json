{"sha": "794737976b9a6418eab817f143bb4eb2d0c834d2", "node_id": "C_kwDOANBUbNoAKDc5NDczNzk3NmI5YTY0MThlYWI4MTdmMTQzYmI0ZWIyZDBjODM0ZDI", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2022-05-29T15:14:32Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2022-05-29T18:27:14Z"}, "message": "Darwin: Fix empty g++ command lines [PR105599].\n\nAn empty g++ command line should produce a diagnostic that there are no\ninputs.  The PR is that currently Darwin produces a dignostic about missing\nlink items instead - this is because (errnoeously), for this driver, we are\ncreating a link job for empty command lines.\n\nThe problem occurs in four stages:\n\n The g++ driver appends -shared-libgcc to the command line.\n\n The Darwin driver_init code in the backend does not see this (it sees an\n empty command line).\n\n When the back end driver code driver sees an empty command line, it does not\n add any supplementary flags (e.g. asm-macosx-version-min) - precisely to\n avoid anything being claimed as an input_file and therefore triggering a link\n line.\n\n Since we do not have a value for asm-macosx-version-min when processing the\n driver specs, we unconditionally inject 'multiply_defined suppress' which is\n used with shared libgcc (but only intended on very old Darwin).  This then\n causes the generation of a link job.\n\nThe solution, for the present, is to move version-specific link params to the\nLINK_SPEC so that they are only processed when a link job has already been\ndecided.\n\nSigned-off-by: Iain Sandoe <iain@sandoe.co.uk>\n\n\tPR target/105599\n\ngcc/ChangeLog:\n\n\t* config/darwin.h: Move versions-specific handling of multiply_defined\n\tfrom SUBTARGET_DRIVER_SELF_SPECS to LINK_SPEC.", "tree": {"sha": "82565991d5cfc82ce23dfadc396059001be12f7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82565991d5cfc82ce23dfadc396059001be12f7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/794737976b9a6418eab817f143bb4eb2d0c834d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/794737976b9a6418eab817f143bb4eb2d0c834d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/794737976b9a6418eab817f143bb4eb2d0c834d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/794737976b9a6418eab817f143bb4eb2d0c834d2/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da5f0cc2f51a791a397fd1b3cef662763897a826", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da5f0cc2f51a791a397fd1b3cef662763897a826", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da5f0cc2f51a791a397fd1b3cef662763897a826"}], "stats": {"total": 17, "additions": 6, "deletions": 11}, "files": [{"sha": "f82ec62cf2092ec99a0d8c68ba18374ca5160b86", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/794737976b9a6418eab817f143bb4eb2d0c834d2/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/794737976b9a6418eab817f143bb4eb2d0c834d2/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=794737976b9a6418eab817f143bb4eb2d0c834d2", "patch": "@@ -143,10 +143,7 @@ extern GTY(()) int darwin_ms_struct;\n    Right now there's no mechanism to split up the \"variable portion\" (%*) of\n    the matched spec string, so where we have some driver specs that take 2\n    or 3 arguments, these cannot be processed here, but are deferred until the\n-   LINK_SPEC, where they are copied verbatim.\n-   We have a \"safe\" version of the MacOS version string, that's been sanity-\n-   checked and truncated to minor version.  If the 'tiny' (3rd) portion of the\n-   value is not significant, it's better to use this in version-compare().  */\n+   LINK_SPEC, where they are copied verbatim.  */\n \n #undef SUBTARGET_DRIVER_SELF_SPECS\n #define SUBTARGET_DRIVER_SELF_SPECS\t\t\t\t\t\\\n@@ -220,13 +217,8 @@ extern GTY(()) int darwin_ms_struct;\n   \"%{image_base*:-Xlinker -image_base -Xlinker %*} %<image_base*\",\t\\\n   \"%{init*:-Xlinker -init -Xlinker %*} %<init*\",\t\t\t\\\n   \"%{multi_module:-Xlinker -multi_module} %<multi_module\",\t\t\\\n-  \"%{multiply_defined*:-Xlinker -multiply_defined -Xlinker %*; \\\n-     :%{shared-libgcc: \\\n-       %:version-compare(< 10.5 asm_macosx_version_min= -Xlinker) \\\n-       %:version-compare(< 10.5 asm_macosx_version_min= -multiply_defined) \\\n-       %:version-compare(< 10.5 asm_macosx_version_min= -Xlinker) \\\n-       %:version-compare(< 10.5 asm_macosx_version_min= suppress)}} \\\n-     %<multiply_defined*\",\t\t\t\t\t\t\\\n+  \"%{multiply_defined*:-Xlinker -multiply_defined -Xlinker %*} \\\n+     %<multiply_defined* \",\t\t\t\t\t\t\\\n   \"%{multiplydefinedunused*:\\\n      -Xlinker -multiply_defined_unused -Xlinker %*} \\\n      %<multiplydefinedunused* \",\t\t\t\t\t\\\n@@ -458,6 +450,9 @@ extern GTY(()) int darwin_ms_struct;\n    %{!force_cpusubtype_ALL:-arch %(darwin_subarch)} \"\\\n    LINK_SYSROOT_SPEC \\\n   \"%{mmacosx-version-min=*:-macosx_version_min %*} \\\n+   %{!multiply_defined*:%{shared-libgcc: \\\n+     %:version-compare(< 10.5 mmacosx-version-min= -multiply_defined) \\\n+     %:version-compare(< 10.5 mmacosx-version-min= suppress) }} \\\n    %{sectalign*} %{sectcreate*} %{sectobjectsymbols*}  %{sectorder*} \\\n    %{segaddr*} %{segcreate*} %{segprot*} \"\n "}]}