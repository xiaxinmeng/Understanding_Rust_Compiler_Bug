{"sha": "53be78f0715b8b34ebdf4fa507f30fcd622de0a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTNiZTc4ZjA3MTViOGIzNGViZGY0ZmE1MDdmMzBmY2Q2MjJkZTBhNw==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-01-01T00:16:20Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-01-01T00:16:20Z"}, "message": "Daily bump.", "tree": {"sha": "8e052d303484797c138724739db58b8270c73ecb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e052d303484797c138724739db58b8270c73ecb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53be78f0715b8b34ebdf4fa507f30fcd622de0a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53be78f0715b8b34ebdf4fa507f30fcd622de0a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53be78f0715b8b34ebdf4fa507f30fcd622de0a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53be78f0715b8b34ebdf4fa507f30fcd622de0a7/comments", "author": null, "committer": null, "parents": [{"sha": "3ab7a91f36c898b9da665e5e36318a1d9ff12946", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ab7a91f36c898b9da665e5e36318a1d9ff12946", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ab7a91f36c898b9da665e5e36318a1d9ff12946"}], "stats": {"total": 107, "additions": 106, "deletions": 1}, "files": [{"sha": "6553720acad21d4388bb22afbda9a8d488307e3d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53be78f0715b8b34ebdf4fa507f30fcd622de0a7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53be78f0715b8b34ebdf4fa507f30fcd622de0a7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=53be78f0715b8b34ebdf4fa507f30fcd622de0a7", "patch": "@@ -1,3 +1,57 @@\n+2020-12-31  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/98302\n+\t* tree-vect-patterns.c (vect_determine_precisions_from_users): Make\n+\tsure that the precision remains greater than the shift count.\n+\n+2020-12-31  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/94994\n+\t* tree-vect-data-refs.c (vect_vfa_align): Use dr_alignment.\n+\n+2020-12-31  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR rtl-optimization/98214\n+\t* genmodes.c (emit_insn_modes_h): Emit a definition of CONST_MODE_MASK.\n+\t(emit_mode_mask): Treat mode_mask_array as non-constant if adj_nunits.\n+\t(emit_mode_adjustments): Update GET_MODE_MASK when updating\n+\tGET_MODE_NUNITS.\n+\t* machmode.h (mode_mask_array): Use CONST_MODE_MASK.\n+\n+2020-12-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/94802\n+\t* match.pd (clz(X) == 0 -> (int)X < 0): New simplification.\n+\t(clz(X) == (prec-1) -> X == 1): Likewise.\n+\n+2020-12-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/94785\n+\t* match.pd ((-(X < 0) | 1) * X -> abs (X)): New simplification.\n+\t((-(X < 0) | 1U) * X -> absu (X)): Likewise.\n+\n+2020-12-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/98474\n+\t* wide-int.cc (wi::to_mpz): If wide_int has MSB set, but type\n+\tis unsigned and excess negative, append set bits after len until\n+\tprecision.\n+\n+2020-12-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/98206\n+\t* fold-const.c: Include asan.h.\n+\t(fold_unary_loc): Don't optimize (ptr_type) (((ptr_type2) x) p+ y)\n+\tinto ((ptr_type) x) p+ y if sanitizing alignment in GENERIC and\n+\tptr_type points to type with higher alignment than ptr_type2.\n+\n+2020-12-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/56719\n+\t* tree-ssa-reassoc.c (optimize_range_tests_cmp_bitwise): Also optimize\n+\tx < C && y < C && z < C when C is a power of two constant into\n+\t(x | y | z) < C.\n+\n 2020-12-30  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md: Remove unnecessary clobbers"}, {"sha": "71bc3f42d47375fd3e5010e6f203d6a1e3d61328", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53be78f0715b8b34ebdf4fa507f30fcd622de0a7/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53be78f0715b8b34ebdf4fa507f30fcd622de0a7/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=53be78f0715b8b34ebdf4fa507f30fcd622de0a7", "patch": "@@ -1 +1 @@\n-20201231\n+20210101"}, {"sha": "bb82727355a93c6c55a37077c27ed82396b990ba", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53be78f0715b8b34ebdf4fa507f30fcd622de0a7/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53be78f0715b8b34ebdf4fa507f30fcd622de0a7/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=53be78f0715b8b34ebdf4fa507f30fcd622de0a7", "patch": "@@ -1,3 +1,7 @@\n+2020-12-31  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* dmd/MERGE: Merge upstream dmd 2bd4fc3fe.\n+\n 2020-12-30  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* d-lang.cc (deps_add_target): Handle quoting ':' character."}, {"sha": "31879d2e998d9e2a876c1f7b52973a92e7510bde", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53be78f0715b8b34ebdf4fa507f30fcd622de0a7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53be78f0715b8b34ebdf4fa507f30fcd622de0a7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=53be78f0715b8b34ebdf4fa507f30fcd622de0a7", "patch": "@@ -1,3 +1,50 @@\n+2020-12-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR testsuite/98489\n+\tPR tree-optimization/56719\n+\t* gcc.dg/tree-ssa/pr56719.c: Remove semicolon from\n+\tscan-tree-dump-times regexps.\n+\n+2020-12-31  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/98302\n+\t* gcc.dg/vect/pr98302.c: New test.\n+\n+2020-12-31  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/94994\n+\t* gcc.dg/vect/pr94994.c: New test.\n+\n+2020-12-31  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR rtl-optimization/98214\n+\t* gcc.target/aarch64/sve/pr98214.c: New file.\n+\n+2020-12-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/94802\n+\t* gcc.dg/tree-ssa/pr94802-1.c: New test.\n+\n+2020-12-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/94785\n+\t* gcc.dg/tree-ssa/pr94785.c: New test.\n+\n+2020-12-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/98474\n+\t* gcc.c-torture/execute/pr98474.c: New test.\n+\n+2020-12-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/98206\n+\t* g++.dg/ubsan/align-4.C: New test.\n+\n+2020-12-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/56719\n+\t* gcc.dg/tree-ssa/pr56719.c: New test.\n+\n 2020-12-30  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/98461"}]}