{"sha": "1cd69e2bed74053a58529b14e13373a474baecd4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWNkNjllMmJlZDc0MDUzYTU4NTI5YjE0ZTEzMzczYTQ3NGJhZWNkNA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2003-05-20T20:24:08Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2003-05-20T20:24:08Z"}, "message": "tree.c (expr_last): New fn.\n\n        * tree.c (expr_last): New fn.\n        * tree.h: Declare it.\n        * objc/objc-act (expr_last): Rename to objc_expr_last.\n\nFrom-SVN: r67035", "tree": {"sha": "47fe4e814049329aebee13405098f61ed66bd1d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47fe4e814049329aebee13405098f61ed66bd1d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1cd69e2bed74053a58529b14e13373a474baecd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cd69e2bed74053a58529b14e13373a474baecd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cd69e2bed74053a58529b14e13373a474baecd4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cd69e2bed74053a58529b14e13373a474baecd4/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a60a9553a1193112da334f4acb4b705c3f4745a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a60a9553a1193112da334f4acb4b705c3f4745a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a60a9553a1193112da334f4acb4b705c3f4745a5"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "4ec04bfffd41e4bae875e306cdb7853792068c88", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cd69e2bed74053a58529b14e13373a474baecd4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cd69e2bed74053a58529b14e13373a474baecd4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1cd69e2bed74053a58529b14e13373a474baecd4", "patch": "@@ -1,3 +1,9 @@\n+2003-05-20  Jason Merrill  <jason@redhat.com>\n+\n+\t* tree.c (expr_last): New fn.\n+\t* tree.h: Declare it.\n+\t* objc/objc-act (expr_last): Rename to objc_expr_last.\n+\n 2003-05-20  J\"orn Rennecke <joern.rennecke@superh.com>\n \n \t* sh.c (sh_register_move_cost): Add clase for moving between"}, {"sha": "e0670e58a19bc2ac1370e73bce6d55b87121b427", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cd69e2bed74053a58529b14e13373a474baecd4/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cd69e2bed74053a58529b14e13373a474baecd4/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=1cd69e2bed74053a58529b14e13373a474baecd4", "patch": "@@ -217,7 +217,7 @@ static void really_start_method\t\t\tPARAMS ((tree, tree));\n static int comp_method_with_proto\t\tPARAMS ((tree, tree));\n static int comp_proto_with_proto\t\tPARAMS ((tree, tree));\n static tree get_arg_type_list\t\t\tPARAMS ((tree, int, int));\n-static tree expr_last\t\t\t\tPARAMS ((tree));\n+static tree objc_expr_last\t\t\tPARAMS ((tree));\n \n /* Utilities for debugging and error diagnostics.  */\n \n@@ -6998,7 +6998,7 @@ encode_field_decl (field_decl, curtype, format)\n }\n \n static tree\n-expr_last (complex_expr)\n+objc_expr_last (complex_expr)\n      tree complex_expr;\n {\n   tree next;\n@@ -7059,7 +7059,7 @@ start_method_def (method)\n \n \t  if (arg_decl)\n \t    {\n-\t      tree last_expr = expr_last (arg_decl);\n+\t      tree last_expr = objc_expr_last (arg_decl);\n \n \t      /* Unite the abstract decl with its name.  */\n \t      TREE_OPERAND (last_expr, 0) = KEYWORD_ARG_NAME (arglist);\n@@ -7195,7 +7195,7 @@ really_start_method (method, parmlist)\n     {\n       /* Unite the complex decl (specified in the abstract decl) with the\n \t function decl just synthesized..(int *), (int (*)()), (int (*)[]).  */\n-      tree save_expr = expr_last (ret_decl);\n+      tree save_expr = objc_expr_last (ret_decl);\n \n       TREE_OPERAND (save_expr, 0) = method_decl;\n       method_decl = ret_decl;"}, {"sha": "efb4e222d20f7f386d81ac48b736a50008d896a6", "filename": "gcc/tree.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cd69e2bed74053a58529b14e13373a474baecd4/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cd69e2bed74053a58529b14e13373a474baecd4/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=1cd69e2bed74053a58529b14e13373a474baecd4", "patch": "@@ -1123,6 +1123,18 @@ tree_cons (purpose, value, chain)\n   return node;\n }\n \n+/* Return the last expression in a sequence of COMPOUND_EXPRs.  */\n+\n+tree\n+expr_last (expr)\n+     tree expr;\n+{\n+  if (expr == NULL_TREE)\n+    return expr;\n+  while (TREE_CODE (expr) == COMPOUND_EXPR)\n+    expr = TREE_OPERAND (expr, 1);\n+  return expr;\n+}\n \f\n /* Return the size nominally occupied by an object of type TYPE\n    when it resides in memory.  The value is measured in units of bytes,"}, {"sha": "47562b284ab6dddb60b7d9590513b4366a1e73e3", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cd69e2bed74053a58529b14e13373a474baecd4/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cd69e2bed74053a58529b14e13373a474baecd4/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=1cd69e2bed74053a58529b14e13373a474baecd4", "patch": "@@ -2532,6 +2532,7 @@ extern tree pedantic_non_lvalue\t\tPARAMS ((tree));\n \n extern tree convert\t\t\tPARAMS ((tree, tree));\n extern unsigned int expr_align\t\tPARAMS ((tree));\n+extern tree expr_last\t\t\tPARAMS ((tree));\n extern tree size_in_bytes\t\tPARAMS ((tree));\n extern HOST_WIDE_INT int_size_in_bytes\tPARAMS ((tree));\n extern tree bit_position\t\tPARAMS ((tree));"}]}