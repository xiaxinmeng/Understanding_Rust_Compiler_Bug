{"sha": "7083621fad0baad1dfcbb6ab42bea360879c2081", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA4MzYyMWZhZDBiYWFkMWRmY2JiNmFiNDJiZWEzNjA4NzljMjA4MQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2015-06-22T07:02:50Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2015-06-22T07:02:50Z"}, "message": "re PR rtl-optimization/66351 (r223883 miscompiles stage2 compiler on ia64)\n\n\n\tPR ipa/66351\n\t* ipa-polymorphic-call.c\n\t(ipa_polymorphic_call_context::get_dynamic_type): Fix thinko when\n\tinitializing alias oracle; fix formating; set base_alias_set if it\n\tis known.\n\nFrom-SVN: r224719", "tree": {"sha": "c9c42892cd8505eef05d676c623dc168fecd67ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9c42892cd8505eef05d676c623dc168fecd67ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7083621fad0baad1dfcbb6ab42bea360879c2081", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7083621fad0baad1dfcbb6ab42bea360879c2081", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7083621fad0baad1dfcbb6ab42bea360879c2081", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7083621fad0baad1dfcbb6ab42bea360879c2081/comments", "author": null, "committer": null, "parents": [{"sha": "6b4db50158952b893df977aff9eb1b470edbc65a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b4db50158952b893df977aff9eb1b470edbc65a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b4db50158952b893df977aff9eb1b470edbc65a"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "60f835ea69854060b9ab61de2f65a6a0b1abd7ab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7083621fad0baad1dfcbb6ab42bea360879c2081/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7083621fad0baad1dfcbb6ab42bea360879c2081/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7083621fad0baad1dfcbb6ab42bea360879c2081", "patch": "@@ -1,3 +1,11 @@\n+2015-06-22  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR ipa/66351\n+\t* ipa-polymorphic-call.c\n+\t(ipa_polymorphic_call_context::get_dynamic_type): Fix thinko when\n+\tinitializing alias oracle; fix formating; set base_alias_set if it\n+\tis known.\n+\n 2015-06-22  Mikhail Maltsev  <maltsevm@gmail.com>\n \n \t* auto-inc-dec.c (reverse_mem, reverse_inc): Remove."}, {"sha": "ac8c78ea8f1d37c38450ca563e825b07820880f4", "filename": "gcc/ipa-polymorphic-call.c", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7083621fad0baad1dfcbb6ab42bea360879c2081/gcc%2Fipa-polymorphic-call.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7083621fad0baad1dfcbb6ab42bea360879c2081/gcc%2Fipa-polymorphic-call.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-polymorphic-call.c?ref=7083621fad0baad1dfcbb6ab42bea360879c2081", "patch": "@@ -1574,13 +1574,15 @@ ipa_polymorphic_call_context::get_dynamic_type (tree instance,\n \t\t  tree base_ref = get_ref_base_and_extent\n \t\t\t\t   (ref_exp, &offset2, &size, &max_size);\n \n-\t\t  /* Finally verify that what we found looks like read from OTR_OBJECT\n-\t\t     or from INSTANCE with offset OFFSET.  */\n+\t\t  /* Finally verify that what we found looks like read from\n+\t\t     OTR_OBJECT or from INSTANCE with offset OFFSET.  */\n \t\t  if (base_ref\n \t\t      && ((TREE_CODE (base_ref) == MEM_REF\n \t\t           && ((offset2 == instance_offset\n \t\t                && TREE_OPERAND (base_ref, 0) == instance)\n-\t\t\t       || (!offset2 && TREE_OPERAND (base_ref, 0) == otr_object)))\n+\t\t\t       || (!offset2\n+\t\t\t\t   && TREE_OPERAND (base_ref, 0)\n+\t\t\t\t      == otr_object)))\n \t\t\t  || (DECL_P (instance) && base_ref == instance\n \t\t\t      && offset2 == instance_offset)))\n \t\t    {\n@@ -1608,9 +1610,17 @@ ipa_polymorphic_call_context::get_dynamic_type (tree instance,\n   /* We look for vtbl pointer read.  */\n   ao.size = POINTER_SIZE;\n   ao.max_size = ao.size;\n+  /* We are looking for stores to vptr pointer within the instance of\n+     outer type.\n+     TODO: The vptr pointer type is globally known, we probably should\n+     keep it and do that even when otr_type is unknown.  */\n   if (otr_type)\n-    ao.ref_alias_set\n-      = get_deref_alias_set (TREE_TYPE (BINFO_VTABLE (TYPE_BINFO (otr_type))));\n+    {\n+      ao.base_alias_set\n+\t= get_alias_set (outer_type ? outer_type : otr_type);\n+      ao.ref_alias_set\n+        = get_alias_set (TREE_TYPE (BINFO_VTABLE (TYPE_BINFO (otr_type))));\n+    }\n \n   if (dump_file)\n     {"}]}