{"sha": "6c7c47081ac481c28f31c30e8845d0337556e8a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM3YzQ3MDgxYWM0ODFjMjhmMzFjMzBlODg0NWQwMzM3NTU2ZThhMg==", "commit": {"author": {"name": "Cesar Philippidis", "email": "cesar@codesourcery.com", "date": "2018-01-19T14:21:08Z"}, "committer": {"name": "Cesar Philippidis", "email": "cesar@gcc.gnu.org", "date": "2018-01-19T14:21:08Z"}, "message": "[nvptx] Add support for CUDA 9\n\n\tPR target/83790\n\n\tgcc/\n\t* config/nvptx/nvptx.c (output_init_frag): Don't use generic address\n\tspaces for function labels.\n\n\tgcc/testsuite/\n\t* gcc.target/nvptx/indirect_call.c: New test.\n\nFrom-SVN: r256891", "tree": {"sha": "413cc10ea07f1fa612d6450dff0cacdf804a7ea4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/413cc10ea07f1fa612d6450dff0cacdf804a7ea4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c7c47081ac481c28f31c30e8845d0337556e8a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c7c47081ac481c28f31c30e8845d0337556e8a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c7c47081ac481c28f31c30e8845d0337556e8a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c7c47081ac481c28f31c30e8845d0337556e8a2/comments", "author": {"login": "cesarjp", "id": 4576177, "node_id": "MDQ6VXNlcjQ1NzYxNzc=", "avatar_url": "https://avatars.githubusercontent.com/u/4576177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cesarjp", "html_url": "https://github.com/cesarjp", "followers_url": "https://api.github.com/users/cesarjp/followers", "following_url": "https://api.github.com/users/cesarjp/following{/other_user}", "gists_url": "https://api.github.com/users/cesarjp/gists{/gist_id}", "starred_url": "https://api.github.com/users/cesarjp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cesarjp/subscriptions", "organizations_url": "https://api.github.com/users/cesarjp/orgs", "repos_url": "https://api.github.com/users/cesarjp/repos", "events_url": "https://api.github.com/users/cesarjp/events{/privacy}", "received_events_url": "https://api.github.com/users/cesarjp/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b8d090dbdce90374353fbc57efdb7875e811671f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8d090dbdce90374353fbc57efdb7875e811671f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8d090dbdce90374353fbc57efdb7875e811671f"}], "stats": {"total": 40, "additions": 38, "deletions": 2}, "files": [{"sha": "7aa2919f0cf5dc5a7fcddf96ec206d4257867afb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c7c47081ac481c28f31c30e8845d0337556e8a2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c7c47081ac481c28f31c30e8845d0337556e8a2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6c7c47081ac481c28f31c30e8845d0337556e8a2", "patch": "@@ -1,3 +1,9 @@\n+2018-01-19  Cesar Philippidis  <cesar@codesourcery.com>\n+\n+\tPR target/83790\n+\t* config/nvptx/nvptx.c (output_init_frag): Don't use generic address\n+\tspaces for function labels.\n+\n 2018-01-19  Martin Liska  <mliska@suse.cz>\n \n \t* predict.def (PRED_LOOP_EXIT): Change from 85 to 89."}, {"sha": "4cb87c8ad072c663d763d93f8fef88308dfdfb1a", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c7c47081ac481c28f31c30e8845d0337556e8a2/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c7c47081ac481c28f31c30e8845d0337556e8a2/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=6c7c47081ac481c28f31c30e8845d0337556e8a2", "patch": "@@ -1899,9 +1899,15 @@ output_init_frag (rtx sym)\n   \n   if (sym)\n     {\n-      fprintf (asm_out_file, \"generic(\");\n+      bool function = (SYMBOL_REF_DECL (sym)\n+\t\t       && (TREE_CODE (SYMBOL_REF_DECL (sym)) == FUNCTION_DECL));\n+      if (!function)\n+\tfprintf (asm_out_file, \"generic(\");\n       output_address (VOIDmode, sym);\n-      fprintf (asm_out_file, val ? \") + \" : \")\");\n+      if (!function)\n+\tfprintf (asm_out_file, \")\");\n+      if (val)\n+\tfprintf (asm_out_file, \" + \");\n     }\n \n   if (!sym || val)"}, {"sha": "f4462485475444273f2b4103cbdfb6fa985aadfd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c7c47081ac481c28f31c30e8845d0337556e8a2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c7c47081ac481c28f31c30e8845d0337556e8a2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6c7c47081ac481c28f31c30e8845d0337556e8a2", "patch": "@@ -1,3 +1,8 @@\n+2018-01-19  Cesar Philippidis  <cesar@codesourcery.com>\n+\n+\tPR target/83790\n+\t* gcc.target/nvptx/indirect_call.c: New test.\n+\n 2018-01-19  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* g++.dg/torture/pr83619.C: Remove dg-message."}, {"sha": "39992a7137b4529e9fa91f7836d18ed9b00f7ac4", "filename": "gcc/testsuite/gcc.target/nvptx/indirect_call.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c7c47081ac481c28f31c30e8845d0337556e8a2/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Findirect_call.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c7c47081ac481c28f31c30e8845d0337556e8a2/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Findirect_call.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Findirect_call.c?ref=6c7c47081ac481c28f31c30e8845d0337556e8a2", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-options \"-O2 -msoft-stack\" } */\n+/* { dg-do run } */\n+\n+int\n+f1 (int a)\n+{\n+  return a + 1;\n+}\n+  \n+int (*f2)(int) = f1;\n+\n+int\n+main ()\n+{\n+  if (f2 (100) != 101)\n+    __builtin_abort();\n+\n+  return 0;\n+}"}]}