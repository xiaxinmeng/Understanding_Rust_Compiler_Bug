{"sha": "c40d5de46804dfbd9f673121b5ea804d3956e84e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQwZDVkZTQ2ODA0ZGZiZDlmNjczMTIxYjVlYTgwNGQzOTU2ZTg0ZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-05-14T14:36:25Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-05-14T14:36:25Z"}, "message": "(lang_{specs,options}_files): New variables.\n\n(gcc.o): Depends on $(lang_specs_files).\n(toplev.o): Depends on $(lang_options_file); merge two dep lists.\n(distclean): Remove spes.h and options.\n\nFrom-SVN: r9680", "tree": {"sha": "b525cb436885733d3d518e14654ea8a16a3c745a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b525cb436885733d3d518e14654ea8a16a3c745a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c40d5de46804dfbd9f673121b5ea804d3956e84e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c40d5de46804dfbd9f673121b5ea804d3956e84e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c40d5de46804dfbd9f673121b5ea804d3956e84e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c40d5de46804dfbd9f673121b5ea804d3956e84e/comments", "author": null, "committer": null, "parents": [{"sha": "7ab7b00662e1827a441101baedcb9037b1fa1de6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ab7b00662e1827a441101baedcb9037b1fa1de6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ab7b00662e1827a441101baedcb9037b1fa1de6"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "04eaaa4751a2ad23a14ac70eb5f795badba0c0fd", "filename": "gcc/Makefile.in", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c40d5de46804dfbd9f673121b5ea804d3956e84e/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c40d5de46804dfbd9f673121b5ea804d3956e84e/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=c40d5de46804dfbd9f673121b5ea804d3956e84e", "patch": "@@ -155,6 +155,8 @@ md_file= ... `configure' substitutes actual md file name here.\n tm_file= ... `configure' substitutes actual tm file name here.\n build_xm_file= ... `configure' substitutes actual build xm- file name here.\n host_xm_file= ... `configure' substitutes actual host xm- file name here.\n+lang_specs_files= ... `configure' substitutes actual lang spec file names here.\n+lang_options_files= ... `configure' puts actual lang options file names here.\n version=`sed -e 's/.*\\\"\\([^ \\\"]*\\)[ \\\"].*/\\1/' < $(srcdir)/version.c`\n mainversion=`sed -e 's/.*\\\"\\([0-9]*\\.[0-9]*\\).*/\\1/' < $(srcdir)/version.c`\n \n@@ -1087,7 +1089,7 @@ c-common.o : c-common.c $(CONFIG_H) $(TREE_H) c-tree.h c-lex.h flags.h\n \n # Language-independent files.\n \n-gcc.o: gcc.c $(CONFIG_H) multilib.h config.status\n+gcc.o: gcc.c $(CONFIG_H) multilib.h config.status $(lang_specs_files)\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n   -DSTANDARD_STARTFILE_PREFIX=\\\"$(libdir)/\\\" \\\n   -DSTANDARD_EXEC_PREFIX=\\\"$(libdir)/gcc-lib/\\\" \\\n@@ -1108,8 +1110,9 @@ tree.o : tree.c $(CONFIG_H) $(TREE_H) flags.h function.h\n print-tree.o : print-tree.c $(CONFIG_H) $(TREE_H)\n stor-layout.o : stor-layout.c $(CONFIG_H) $(TREE_H) flags.h function.h\n fold-const.o : fold-const.c $(CONFIG_H) $(TREE_H) flags.h \n-toplev.o : toplev.c $(CONFIG_H) $(TREE_H) $(RTL_H) flags.h input.h \\\n-   insn-attr.h xcoffout.h defaults.h output.h\n+toplev.o : toplev.c $(CONFIG_H) $(TREE_H) $(RTL_H) bytecode.h bc-emit.h \\\n+   flags.h input.h insn-attr.h xcoffout.h defaults.h output.h \\\n+   $(lang_options_files)\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t  $(MAYBE_TARGET_DEFAULT) $(MAYBE_USE_COLLECT2) \\\n \t  -c `echo $(srcdir)/toplev.c | sed 's,^\\./,,'`\n@@ -1119,7 +1122,6 @@ rtl.o : rtl.c $(CONFIG_H) $(RTL_H)\n print-rtl.o : print-rtl.c $(CONFIG_H) $(RTL_H)\n rtlanal.o : rtlanal.c $(CONFIG_H) $(RTL_H)\n \n-toplev.o: bytecode.h bc-emit.h\n varasm.o : varasm.c $(CONFIG_H) $(TREE_H) $(RTL_H) flags.h function.h \\\n    defaults.h insn-codes.h expr.h hard-reg-set.h regs.h xcoffout.h \\\n    output.h bytecode.h c-pragma.h\n@@ -1926,10 +1928,9 @@ clean: mostlyclean bytecode.clean lang.clean\n # Delete all files that users would normally create\n # while building and installing GCC.\n distclean: clean bytecode.distclean lang.distclean\n-\t-rm -f tm.h config.h tconfig.h hconfig.h\n+\t-rm -f tm.h config.h tconfig.h hconfig.h md\n \t-rm -f config.status config.run\n-\t-rm -f md\n-\t-rm -f Makefile *.oaux\n+\t-rm -f Makefile specs.h options.h *.oaux\n \t-rm -fr stage1 stage2 stage3 stage4\n \t-rm -f */stage1 */stage2 */stage3 */stage4 */include\n \t-rm -f objc-parse.output"}]}