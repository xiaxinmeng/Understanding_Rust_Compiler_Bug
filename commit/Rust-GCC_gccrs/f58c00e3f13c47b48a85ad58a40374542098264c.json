{"sha": "f58c00e3f13c47b48a85ad58a40374542098264c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjU4YzAwZTNmMTNjNDdiNDhhODVhZDU4YTQwMzc0NTQyMDk4MjY0Yw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2004-11-12T06:59:47Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-11-12T06:59:47Z"}, "message": "expr.c (emit_group_load): Use extract_bit_field to load from the stack.\n\n\t* expr.c (emit_group_load) <CONCAT>: Use extract_bit_field\n\tto load from the stack.\n\nFrom-SVN: r90521", "tree": {"sha": "b84d6a18ed5d205a123313fe0851a7999005e4d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b84d6a18ed5d205a123313fe0851a7999005e4d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f58c00e3f13c47b48a85ad58a40374542098264c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f58c00e3f13c47b48a85ad58a40374542098264c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f58c00e3f13c47b48a85ad58a40374542098264c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f58c00e3f13c47b48a85ad58a40374542098264c/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "765d98c70c0b9533e0a9b0b0a310dcc488b0fb9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/765d98c70c0b9533e0a9b0b0a310dcc488b0fb9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/765d98c70c0b9533e0a9b0b0a310dcc488b0fb9d"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "3696bd12c4c4686a33de98d9265bf3a80c8fa277", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f58c00e3f13c47b48a85ad58a40374542098264c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f58c00e3f13c47b48a85ad58a40374542098264c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f58c00e3f13c47b48a85ad58a40374542098264c", "patch": "@@ -1,3 +1,8 @@\n+2004-11-12  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* expr.c (emit_group_load) <CONCAT>: Use extract_bit_field\n+\tto load from the stack.\n+\n 2004-11-12  Richard Henderson  <rth@redhat.com>\n \n \t* toplev.c (floor_log2): Rename from floor_log2_wide, use CLZ_HWI."}, {"sha": "6037fd12a1018adf4ac9cb22f6634556f2fb8c45", "filename": "gcc/expr.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f58c00e3f13c47b48a85ad58a40374542098264c/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f58c00e3f13c47b48a85ad58a40374542098264c/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=f58c00e3f13c47b48a85ad58a40374542098264c", "patch": "@@ -1673,11 +1673,12 @@ emit_group_load (rtx dst, rtx orig_src, tree type ATTRIBUTE_UNUSED, int ssize)\n \t  else\n \t    {\n \t      rtx mem;\n-\t      \n+\n \t      gcc_assert (!bytepos);\n \t      mem = assign_stack_temp (GET_MODE (src), slen, 0);\n \t      emit_move_insn (mem, src);\n-\t      tmps[i] = adjust_address (mem, mode, 0);\n+\t      tmps[i] = extract_bit_field (mem, bytelen * BITS_PER_UNIT,\n+\t\t\t\t\t   0, 1, NULL_RTX, mode, mode);\n \t    }\n \t}\n       /* FIXME: A SIMD parallel will eventually lead to a subreg of a"}]}