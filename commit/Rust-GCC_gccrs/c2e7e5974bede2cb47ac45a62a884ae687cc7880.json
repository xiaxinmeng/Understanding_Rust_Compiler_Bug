{"sha": "c2e7e5974bede2cb47ac45a62a884ae687cc7880", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzJlN2U1OTc0YmVkZTJjYjQ3YWM0NWE2MmE4ODRhZTY4N2NjNzg4MA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-03-10T18:31:20Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-03-10T18:31:20Z"}, "message": "re PR libgcc/60472 (Warning: array subscript is above array bounds when compiling crtstuff.c)\n\n\tPR libgcc/60472\n\t* crtstuff.c (frame_dummy): Use void **jcr_list temporary\n\tvariable to avoid array subscript is above array bounds warnings.\n\tUse __builtin_expect when checking *jcr_list for NULL.\n\nFrom-SVN: r208457", "tree": {"sha": "90f1b9e9325b3b0a1324bcdba5c53610fabfd936", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90f1b9e9325b3b0a1324bcdba5c53610fabfd936"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2e7e5974bede2cb47ac45a62a884ae687cc7880", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2e7e5974bede2cb47ac45a62a884ae687cc7880", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2e7e5974bede2cb47ac45a62a884ae687cc7880", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2e7e5974bede2cb47ac45a62a884ae687cc7880/comments", "author": null, "committer": null, "parents": [{"sha": "4d3f2fa687ec4c8cf6aa668f4c2eab4f298c3f8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d3f2fa687ec4c8cf6aa668f4c2eab4f298c3f8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d3f2fa687ec4c8cf6aa668f4c2eab4f298c3f8e"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "686c29e80236d0954d255e5f0b8cc53cff50fa19", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2e7e5974bede2cb47ac45a62a884ae687cc7880/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2e7e5974bede2cb47ac45a62a884ae687cc7880/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=c2e7e5974bede2cb47ac45a62a884ae687cc7880", "patch": "@@ -1,3 +1,10 @@\n+2014-03-10  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR libgcc/60472\n+\t* crtstuff.c (frame_dummy): Use void **jcr_list temporary\n+\tvariable to avoid array subscript is above array bounds warnings.\n+\tUse __builtin_expect when checking *jcr_list for NULL.\n+\n 2014-03-06  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR libgcc/59339\n@@ -420,7 +427,7 @@\n \n 2013-12-26  Ganesh Gopalasubramanian  <Ganesh.Gopalasubramanian@amd.com>\n \n-        * config/i386/cpuinfo.c (processor_types): Rename AMD cpu names\n+\t* config/i386/cpuinfo.c (processor_types): Rename AMD cpu names\n \tAMD_BOBCAT to AMD_BTVER1 and AMD_JAGUAR to AMD_BTVER2.\n \t(get_amd_cpu): Likewise.\n "}, {"sha": "12bed4b351d1b37caf087d5a81b2816164ab40c0", "filename": "libgcc/crtstuff.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2e7e5974bede2cb47ac45a62a884ae687cc7880/libgcc%2Fcrtstuff.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2e7e5974bede2cb47ac45a62a884ae687cc7880/libgcc%2Fcrtstuff.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fcrtstuff.c?ref=c2e7e5974bede2cb47ac45a62a884ae687cc7880", "patch": "@@ -460,12 +460,14 @@ frame_dummy (void)\n #endif /* USE_EH_FRAME_REGISTRY */\n \n #ifdef JCR_SECTION_NAME\n-  if (__JCR_LIST__[0])\n+  void **jcr_list;\n+  __asm (\"\" : \"=g\" (jcr_list) : \"0\" (__JCR_LIST__));\n+  if (__builtin_expect (*jcr_list != NULL, 0))\n     {\n       void (*register_classes) (void *) = _Jv_RegisterClasses;\n       __asm (\"\" : \"+r\" (register_classes));\n       if (register_classes)\n-\tregister_classes (__JCR_LIST__);\n+\tregister_classes (jcr_list);\n     }\n #endif /* JCR_SECTION_NAME */\n \n@@ -565,12 +567,14 @@ __do_global_ctors_1(void)\n #endif\n \n #ifdef JCR_SECTION_NAME\n-  if (__JCR_LIST__[0])\n+  void **jcr_list\n+  __asm (\"\" : \"=g\" (jcr_list) : \"0\" (__JCR_LIST__));\n+  if (__builtin_expect (*jcr_list != NULL, 0))\n     {\n       void (*register_classes) (void *) = _Jv_RegisterClasses;\n       __asm (\"\" : \"+r\" (register_classes));\n       if (register_classes)\n-\tregister_classes (__JCR_LIST__);\n+\tregister_classes (jcr_list);\n     }\n #endif\n "}]}