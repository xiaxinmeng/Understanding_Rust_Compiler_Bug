{"sha": "8fa6fa79177806a38422c7c13a29a8fc12e38bf3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZhNmZhNzkxNzc4MDZhMzg0MjJjN2MxM2EyOWE4ZmMxMmUzOGJmMw==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2009-05-17T16:09:02Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2009-05-17T16:09:02Z"}, "message": "tree.c (cxx_printable_name_internal): Allow consecutive translated and untranslated cached copies of the name of the...\n\ncp:\n\t* tree.c (cxx_printable_name_internal): Allow consecutive\n\ttranslated and untranslated cached copies of the name of the\n\tcurrent function.\n\ntestsuite:\n\t* g++.dg/warn/translate-ice-1.C: New test.\n\nFrom-SVN: r147636", "tree": {"sha": "da819afeb90729a922ba304170d19bdb52a8fc0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da819afeb90729a922ba304170d19bdb52a8fc0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8fa6fa79177806a38422c7c13a29a8fc12e38bf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fa6fa79177806a38422c7c13a29a8fc12e38bf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fa6fa79177806a38422c7c13a29a8fc12e38bf3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fa6fa79177806a38422c7c13a29a8fc12e38bf3/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0a6661b792947c0f09d6bdb3b9ee98723b2993f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0a6661b792947c0f09d6bdb3b9ee98723b2993f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0a6661b792947c0f09d6bdb3b9ee98723b2993f"}], "stats": {"total": 68, "additions": 64, "deletions": 4}, "files": [{"sha": "bffec90178c0ac8da857195e12569e3dccb08feb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fa6fa79177806a38422c7c13a29a8fc12e38bf3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fa6fa79177806a38422c7c13a29a8fc12e38bf3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8fa6fa79177806a38422c7c13a29a8fc12e38bf3", "patch": "@@ -1,3 +1,9 @@\n+2009-05-17  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* tree.c (cxx_printable_name_internal): Allow consecutive\n+\ttranslated and untranslated cached copies of the name of the\n+\tcurrent function.\n+\n 2009-05-15  Ian Lance Taylor  <iant@google.com>\n \n \t* cp-tree.h (enum cp_lvalue_kind_flags): Rename from"}, {"sha": "219cb399f9c8dae2487df2614f8a74859dc44827", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fa6fa79177806a38422c7c13a29a8fc12e38bf3/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fa6fa79177806a38422c7c13a29a8fc12e38bf3/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=8fa6fa79177806a38422c7c13a29a8fc12e38bf3", "patch": "@@ -1264,10 +1264,15 @@ cxx_printable_name_internal (tree decl, int v, bool translate)\n \n   if (current_function_decl != NULL_TREE)\n     {\n-      if (uid_ring[ring_counter] == DECL_UID (current_function_decl))\n-\tring_counter += 1;\n-      if (ring_counter == PRINT_RING_SIZE)\n-\tring_counter = 0;\n+      /* There may be both translated and untranslated versions of the\n+\t name cached.  */\n+      for (i = 0; i < 2; i++)\n+\t{\n+\t  if (uid_ring[ring_counter] == DECL_UID (current_function_decl))\n+\t    ring_counter += 1;\n+\t  if (ring_counter == PRINT_RING_SIZE)\n+\t    ring_counter = 0;\n+\t}\n       gcc_assert (uid_ring[ring_counter] != DECL_UID (current_function_decl));\n     }\n "}, {"sha": "2f0e185267c4a26c33e48009917053296293b7b1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fa6fa79177806a38422c7c13a29a8fc12e38bf3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fa6fa79177806a38422c7c13a29a8fc12e38bf3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8fa6fa79177806a38422c7c13a29a8fc12e38bf3", "patch": "@@ -1,3 +1,7 @@\n+2009-05-17  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* g++.dg/warn/translate-ice-1.C: New test.\n+\n 2009-05-17  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \t* gfortran.dg/c_kind_int128_test1.f03: Also test C_INT_FAST128_T."}, {"sha": "22e103c2980a20a1fb14e68825cfa0e8b383a588", "filename": "gcc/testsuite/g++.dg/warn/translate-ice-1.C", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fa6fa79177806a38422c7c13a29a8fc12e38bf3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Ftranslate-ice-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fa6fa79177806a38422c7c13a29a8fc12e38bf3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Ftranslate-ice-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Ftranslate-ice-1.C?ref=8fa6fa79177806a38422c7c13a29a8fc12e38bf3", "patch": "@@ -0,0 +1,45 @@\n+// Test ICE in caching printable names for a function.\n+// { dg-options \"-std=c++98 -pedantic -O2\" }\n+\n+void g (int a) __attribute__((warning(\"g\")));\n+void g2 (int a, int *p);\n+static inline __attribute__((__always_inline__)) void\n+gg (int a)\n+{\n+  if (a == 0)\n+    return g(a); // { dg-warning \"attribute\" }\n+  __extension__ int v[a];\n+  return g2(a, v);\n+}\n+\n+void h (int a) __attribute__((warning(\"h\")));\n+void h2 (int a, int *p);\n+static inline __attribute__((__always_inline__)) void\n+hh (int a)\n+{\n+  if (a == 0)\n+    return h(a); // { dg-warning \"attribute\" }\n+  __extension__ int v[a];\n+  return h2(a, v);\n+}\n+\n+void i (int a) __attribute__((warning(\"i\")));\n+void i2 (int a, int *p);\n+static inline __attribute__((__always_inline__)) void\n+ii (int a)\n+{\n+  if (a == 0)\n+    return i(a); // { dg-warning \"attribute\" }\n+  __extension__ int v[a];\n+  return i2(a, v);\n+}\n+\n+void\n+f (void)\n+{\n+  long long l; // { dg-warning \"long long\" }\n+  const char *p = __PRETTY_FUNCTION__;\n+  gg(0);\n+  hh(0);\n+  ii(0);\n+}"}]}