{"sha": "29c64a0f6d13bf413cf338da23580e8a94ead23c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjljNjRhMGY2ZDEzYmY0MTNjZjMzOGRhMjM1ODBlOGE5NGVhZDIzYw==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2019-07-11T08:02:03Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-11T08:02:03Z"}, "message": "[Ada] Minor reformatting\n\n2019-07-11  Hristian Kirtchev  <kirtchev@adacore.com>\n\ngcc/ada/\n\n\t* checks.adb, exp_ch6.adb, gnat1drv.adb, sem_aux.adb,\n\tsem_ch2.adb, sem_ch8.adb, sem_res.adb: Minor reformatting.\n\nFrom-SVN: r273388", "tree": {"sha": "2d47c3d14a4bdfaf9484ead9543d20c175552d6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d47c3d14a4bdfaf9484ead9543d20c175552d6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29c64a0f6d13bf413cf338da23580e8a94ead23c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29c64a0f6d13bf413cf338da23580e8a94ead23c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29c64a0f6d13bf413cf338da23580e8a94ead23c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29c64a0f6d13bf413cf338da23580e8a94ead23c/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bce6accb664712f2d046bad9566fee810b43fed6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bce6accb664712f2d046bad9566fee810b43fed6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bce6accb664712f2d046bad9566fee810b43fed6"}], "stats": {"total": 82, "additions": 49, "deletions": 33}, "files": [{"sha": "a17ab7e25fd205969a7ffa1dcaf048783165a890", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29c64a0f6d13bf413cf338da23580e8a94ead23c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29c64a0f6d13bf413cf338da23580e8a94ead23c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=29c64a0f6d13bf413cf338da23580e8a94ead23c", "patch": "@@ -1,3 +1,8 @@\n+2019-07-11  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* checks.adb, exp_ch6.adb, gnat1drv.adb, sem_aux.adb,\n+\tsem_ch2.adb, sem_ch8.adb, sem_res.adb: Minor reformatting.\n+\n 2019-07-11  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_ch8.adb (Analyze_Object_Renaming): Obtain the object being"}, {"sha": "984bb159f814bd47eecdd238fe7f58b5d8f2682b", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29c64a0f6d13bf413cf338da23580e8a94ead23c/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29c64a0f6d13bf413cf338da23580e8a94ead23c/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=29c64a0f6d13bf413cf338da23580e8a94ead23c", "patch": "@@ -577,9 +577,10 @@ package body Checks is\n       Typ         : Entity_Id;\n       Insert_Node : Node_Id)\n    is\n+      Loc : constant Source_Ptr := Sloc (N);\n+\n       Check_Cond  : Node_Id;\n-      Loc         : constant Source_Ptr := Sloc (N);\n-      Param_Ent   : Entity_Id           := Param_Entity (N);\n+      Param_Ent   : Entity_Id := Param_Entity (N);\n       Param_Level : Node_Id;\n       Type_Level  : Node_Id;\n \n@@ -639,9 +640,10 @@ package body Checks is\n          --  Raise Program_Error if the accessibility level of the access\n          --  parameter is deeper than the level of the target access type.\n \n-         Check_Cond := Make_Op_Gt (Loc,\n-                         Left_Opnd  => Param_Level,\n-                         Right_Opnd => Type_Level);\n+         Check_Cond :=\n+           Make_Op_Gt (Loc,\n+             Left_Opnd  => Param_Level,\n+             Right_Opnd => Type_Level);\n \n          Insert_Action (Insert_Node,\n            Make_Raise_Program_Error (Loc,\n@@ -657,10 +659,8 @@ package body Checks is\n            and then Entity (Check_Cond) = Standard_True\n          then\n             Error_Msg_Warn := SPARK_Mode /= On;\n-            Error_Msg_N\n-              (\"accessibility check fails<<\", N);\n-            Error_Msg_N\n-              (\"\\Program_Error [<<\", N);\n+            Error_Msg_N (\"accessibility check fails<<\", N);\n+            Error_Msg_N (\"\\Program_Error [<<\", N);\n          end if;\n       end if;\n    end Apply_Accessibility_Check;"}, {"sha": "c23e9eede69a76e980f081b56dc447522cd7a4b3", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 22, "deletions": 9, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29c64a0f6d13bf413cf338da23580e8a94ead23c/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29c64a0f6d13bf413cf338da23580e8a94ead23c/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=29c64a0f6d13bf413cf338da23580e8a94ead23c", "patch": "@@ -2481,8 +2481,6 @@ package body Exp_Ch6 is\n       function Can_Fold_Predicate_Call (P : Entity_Id) return Boolean is\n          Actual : constant Node_Id :=\n                     First (Parameter_Associations (Call_Node));\n-         Subt : constant Entity_Id := Etype (First_Entity (P));\n-         Pred : Node_Id;\n \n          function May_Fold (N : Node_Id) return Traverse_Result;\n          --  The predicate expression is foldable if it only contains operators\n@@ -2491,13 +2489,21 @@ package body Exp_Ch6 is\n          --  value of the actual. This is done on a copy of the analyzed\n          --  expression for the predicate.\n \n+         --------------\n+         -- May_Fold --\n+         --------------\n+\n          function May_Fold (N : Node_Id) return Traverse_Result is\n          begin\n             case Nkind (N) is\n-               when N_Binary_Op | N_Unary_Op  =>\n+               when N_Binary_Op\n+                  | N_Unary_Op\n+               =>\n                   return OK;\n \n-               when N_Identifier | N_Expanded_Name =>\n+               when N_Expanded_Name\n+                  | N_Identifier\n+               =>\n                   if Ekind (Entity (N)) = E_In_Parameter\n                     and then Entity (N) = First_Entity (P)\n                   then\n@@ -2512,7 +2518,9 @@ package body Exp_Ch6 is\n                      return Abandon;\n                   end if;\n \n-               when N_If_Expression | N_Case_Expression =>\n+               when N_Case_Expression\n+                  | N_If_Expression\n+               =>\n                   return OK;\n \n                when N_Integer_Literal =>\n@@ -2525,6 +2533,11 @@ package body Exp_Ch6 is\n \n          function Try_Fold is new Traverse_Func (May_Fold);\n \n+         --  Local variables\n+\n+         Subt : constant Entity_Id := Etype (First_Entity (P));\n+         Pred : Node_Id;\n+\n       --  Start of processing for Can_Fold_Predicate_Call\n \n       begin\n@@ -2542,17 +2555,17 @@ package body Exp_Ch6 is\n          --  Retrieve the analyzed expression for the predicate\n \n          Pred :=\n-            New_Copy_Tree\n-              (Expression (Find_Aspect (Subt, Aspect_Dynamic_Predicate)));\n+           New_Copy_Tree\n+             (Expression (Find_Aspect (Subt, Aspect_Dynamic_Predicate)));\n \n          if Try_Fold (Pred) = OK then\n             Rewrite (Call_Node, Pred);\n             Analyze_And_Resolve (Call_Node, Standard_Boolean);\n             return True;\n \n-         else\n-            --  Continue expansion of function call\n+         --  Otherwise continue the expansion of the function call\n \n+         else\n             return False;\n          end if;\n       end Can_Fold_Predicate_Call;"}, {"sha": "55a57ddc7e8c641f35a5611ceeb335fa518feaea", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29c64a0f6d13bf413cf338da23580e8a94ead23c/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29c64a0f6d13bf413cf338da23580e8a94ead23c/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=29c64a0f6d13bf413cf338da23580e8a94ead23c", "patch": "@@ -1056,9 +1056,10 @@ procedure Gnat1drv is\n       for U in Main_Unit .. Last_Unit loop\n          if In_Extended_Main_Source_Unit (Cunit_Entity (U)) then\n             declare\n-               Nam : constant String :=\n-                     Get_Name_String (File_Name (Source_Index (U))) & \".json\";\n-               Namid : constant File_Name_Type := Name_Enter (Nam);\n+               Nam   : constant String :=\n+                         Get_Name_String\n+                           (File_Name (Source_Index (U))) & \".json\";\n+               Namid : constant File_Name_Type    := Name_Enter (Nam);\n                Index : constant Source_File_Index := Load_Config_File (Namid);\n \n             begin"}, {"sha": "71a38732763d008cd73dbd745a768b3bcebe03ea", "filename": "gcc/ada/sem_aux.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29c64a0f6d13bf413cf338da23580e8a94ead23c/gcc%2Fada%2Fsem_aux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29c64a0f6d13bf413cf338da23580e8a94ead23c/gcc%2Fada%2Fsem_aux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.adb?ref=29c64a0f6d13bf413cf338da23580e8a94ead23c", "patch": "@@ -1330,10 +1330,11 @@ package body Sem_Aux is\n \n    function Is_Protected_Operation (E : Entity_Id) return Boolean is\n    begin\n-      return Is_Entry (E)\n-        or else (Is_Subprogram (E)\n-                 and then Nkind (Parent (Unit_Declaration_Node (E))) =\n-                            N_Protected_Definition);\n+      return\n+        Is_Entry (E)\n+          or else (Is_Subprogram (E)\n+                    and then Nkind (Parent (Unit_Declaration_Node (E))) =\n+                               N_Protected_Definition);\n    end Is_Protected_Operation;\n \n    ----------------------"}, {"sha": "378269ffca580d55a7a8ce95444a26377ffe992e", "filename": "gcc/ada/sem_ch2.adb", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29c64a0f6d13bf413cf338da23580e8a94ead23c/gcc%2Fada%2Fsem_ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29c64a0f6d13bf413cf338da23580e8a94ead23c/gcc%2Fada%2Fsem_ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch2.adb?ref=29c64a0f6d13bf413cf338da23580e8a94ead23c", "patch": "@@ -31,7 +31,6 @@ with Restrict; use Restrict;\n with Rident;   use Rident;\n with Sem_Ch8;  use Sem_Ch8;\n with Sem_Dim;  use Sem_Dim;\n---  with Sem_Util; use Sem_Util;\n with Sinfo;    use Sinfo;\n with Stand;    use Stand;\n with Uintp;    use Uintp;\n@@ -97,9 +96,7 @@ package body Sem_Ch2 is\n       --  prior analysis (or construction) of the literal, and after type\n       --  checking and resolution.\n \n-      if No (Etype (N))\n-        or else not Is_Modular_Integer_Type (Etype (N))\n-      then\n+      if No (Etype (N)) or else not Is_Modular_Integer_Type (Etype (N)) then\n          Set_Etype (N, Universal_Integer);\n       end if;\n "}, {"sha": "c9d61511af3410ff1c12b6ca0d2941f7ff6ad2ac", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29c64a0f6d13bf413cf338da23580e8a94ead23c/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29c64a0f6d13bf413cf338da23580e8a94ead23c/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=29c64a0f6d13bf413cf338da23580e8a94ead23c", "patch": "@@ -815,8 +815,7 @@ package body Sem_Ch8 is\n             --  it does not apply to records with limited components, for which\n             --  this syntactic flag is not set, but whose size is also fixed.\n \n-            elsif (Is_Record_Type (Typ)\n-                and then Is_Limited_Type (Typ))\n+            elsif (Is_Record_Type (Typ) and then Is_Limited_Type (Typ))\n               or else\n                 (Ekind (Typ) = E_Limited_Private_Type\n                   and then Has_Discriminants (Typ)"}, {"sha": "730f17304d6f7a34aef7888ffa097085268915e0", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29c64a0f6d13bf413cf338da23580e8a94ead23c/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29c64a0f6d13bf413cf338da23580e8a94ead23c/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=29c64a0f6d13bf413cf338da23580e8a94ead23c", "patch": "@@ -3467,8 +3467,8 @@ package body Sem_Res is\n            or else Nkind (Original_Node (N)) not in N_Subprogram_Call\n            or else (Nkind (Name (N)) = N_Identifier\n                      and then Present (Entity (Name (N)))\n-                     and then Nkind (Entity (Name (N)))\n-                       = N_Defining_Operator_Symbol)\n+                     and then Nkind (Entity (Name (N))) =\n+                                N_Defining_Operator_Symbol)\n            or else not Comes_From_Source (N)\n          then\n             return;"}]}