{"sha": "1e3ed0fc933a9c77ddc14f7097dd601d824c2b35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWUzZWQwZmM5MzNhOWM3N2RkYzE0ZjcwOTdkZDYwMWQ4MjRjMmIzNQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-10-10T12:18:17Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-10T12:18:17Z"}, "message": "exp_util.ads, [...]: Minor code reorganization.\n\n2014-10-10  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_util.ads, sem_ch12.adb, exp_util.adb, i-fortra.ads: Minor code\n\treorganization.\n\nFrom-SVN: r216073", "tree": {"sha": "51ca6b6e4956f9ee53091449b5541d825864b432", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51ca6b6e4956f9ee53091449b5541d825864b432"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e3ed0fc933a9c77ddc14f7097dd601d824c2b35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e3ed0fc933a9c77ddc14f7097dd601d824c2b35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e3ed0fc933a9c77ddc14f7097dd601d824c2b35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e3ed0fc933a9c77ddc14f7097dd601d824c2b35/comments", "author": null, "committer": null, "parents": [{"sha": "aa79a1e1c8bc73e1b5efcfa9de532f8c6b2e3151", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa79a1e1c8bc73e1b5efcfa9de532f8c6b2e3151", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa79a1e1c8bc73e1b5efcfa9de532f8c6b2e3151"}], "stats": {"total": 200, "additions": 94, "deletions": 106}, "files": [{"sha": "5d50356a7f40d1a8c0d3a0d773dbb3ca45602d10", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e3ed0fc933a9c77ddc14f7097dd601d824c2b35/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e3ed0fc933a9c77ddc14f7097dd601d824c2b35/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1e3ed0fc933a9c77ddc14f7097dd601d824c2b35", "patch": "@@ -1,3 +1,8 @@\n+2014-10-10  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_util.ads, sem_ch12.adb, exp_util.adb, i-fortra.ads: Minor code\n+\treorganization.\n+\n 2014-09-22  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (gnat_to_gnu_entity): Adjust comment."}, {"sha": "d7f200f3b07538d19f24478e56019f5da721b9de", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 73, "deletions": 74, "changes": 147, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e3ed0fc933a9c77ddc14f7097dd601d824c2b35/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e3ed0fc933a9c77ddc14f7097dd601d824c2b35/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=1e3ed0fc933a9c77ddc14f7097dd601d824c2b35", "patch": "@@ -1742,6 +1742,79 @@ package body Exp_Util is\n       end if;\n    end Component_May_Be_Bit_Aligned;\n \n+   ----------------------------------------\n+   -- Containing_Package_With_Ext_Axioms --\n+   ----------------------------------------\n+\n+   function Containing_Package_With_Ext_Axioms\n+     (E : Entity_Id) return Entity_Id\n+   is\n+      Decl : Node_Id;\n+\n+   begin\n+      if Ekind (E) = E_Package then\n+         if Nkind (Parent (E)) = N_Defining_Program_Unit_Name then\n+            Decl := Parent (Parent (E));\n+         else\n+            Decl := Parent (E);\n+         end if;\n+      end if;\n+\n+      --  E is the package or generic package which is externally axiomatized\n+\n+      if Ekind_In (E, E_Package, E_Generic_Package)\n+        and then Has_Annotate_Pragma_For_External_Axiomatization (E)\n+      then\n+         return E;\n+      end if;\n+\n+      --  If E's scope is axiomatized, E is axiomatized.\n+\n+      declare\n+         First_Ax_Parent_Scope : Entity_Id := Empty;\n+\n+      begin\n+         if Present (Scope (E)) then\n+            First_Ax_Parent_Scope :=\n+              Containing_Package_With_Ext_Axioms (Scope (E));\n+         end if;\n+\n+         if Present (First_Ax_Parent_Scope) then\n+            return First_Ax_Parent_Scope;\n+         end if;\n+\n+         --  otherwise, if E is a package instance, it is axiomatized if the\n+         --  corresponding generic package is axiomatized.\n+\n+         if Ekind (E) = E_Package\n+           and then Present (Generic_Parent (Decl))\n+         then\n+            return\n+              Containing_Package_With_Ext_Axioms (Generic_Parent (Decl));\n+         else\n+            return Empty;\n+         end if;\n+      end;\n+   end Containing_Package_With_Ext_Axioms;\n+\n+   -------------------------------\n+   -- Convert_To_Actual_Subtype --\n+   -------------------------------\n+\n+   procedure Convert_To_Actual_Subtype (Exp : Entity_Id) is\n+      Act_ST : Entity_Id;\n+\n+   begin\n+      Act_ST := Get_Actual_Subtype (Exp);\n+\n+      if Act_ST = Etype (Exp) then\n+         return;\n+      else\n+         Rewrite (Exp, Convert_To (Act_ST, Relocate_Node (Exp)));\n+         Analyze_And_Resolve (Exp, Act_ST);\n+      end if;\n+   end Convert_To_Actual_Subtype;\n+\n    -----------------------------------\n    -- Corresponding_Runtime_Package --\n    -----------------------------------\n@@ -1793,24 +1866,6 @@ package body Exp_Util is\n       return Pkg_Id;\n    end Corresponding_Runtime_Package;\n \n-   -------------------------------\n-   -- Convert_To_Actual_Subtype --\n-   -------------------------------\n-\n-   procedure Convert_To_Actual_Subtype (Exp : Entity_Id) is\n-      Act_ST : Entity_Id;\n-\n-   begin\n-      Act_ST := Get_Actual_Subtype (Exp);\n-\n-      if Act_ST = Etype (Exp) then\n-         return;\n-      else\n-         Rewrite (Exp, Convert_To (Act_ST, Relocate_Node (Exp)));\n-         Analyze_And_Resolve (Exp, Act_ST);\n-      end if;\n-   end Convert_To_Actual_Subtype;\n-\n    -----------------------------------\n    -- Current_Sem_Unit_Declarations --\n    -----------------------------------\n@@ -3295,62 +3350,6 @@ package body Exp_Util is\n       end;\n    end Get_Current_Value_Condition;\n \n-   -------------------------------------------------\n-   -- Get_First_Parent_With_Ext_Axioms_For_Entity --\n-   -------------------------------------------------\n-\n-   function Get_First_Parent_With_Ext_Axioms_For_Entity\n-     (E : Entity_Id) return Entity_Id\n-   is\n-      Decl : Node_Id;\n-\n-   begin\n-      if Ekind (E) = E_Package then\n-         if Nkind (Parent (E)) = N_Defining_Program_Unit_Name then\n-            Decl := Parent (Parent (E));\n-         else\n-            Decl := Parent (E);\n-         end if;\n-      end if;\n-\n-      --  E is the package or generic package which is externally axiomatized\n-\n-      if Ekind_In (E, E_Package, E_Generic_Package)\n-        and then Has_Annotate_Pragma_For_External_Axiomatization (E)\n-      then\n-         return E;\n-      end if;\n-\n-      --  If E's scope is axiomatized, E is axiomatized.\n-\n-      declare\n-         First_Ax_Parent_Scope : Entity_Id := Empty;\n-\n-      begin\n-         if Present (Scope (E)) then\n-            First_Ax_Parent_Scope :=\n-              Get_First_Parent_With_Ext_Axioms_For_Entity (Scope (E));\n-         end if;\n-\n-         if Present (First_Ax_Parent_Scope) then\n-            return First_Ax_Parent_Scope;\n-         end if;\n-\n-         --  otherwise, if E is a package instance, it is axiomatized if the\n-         --  corresponding generic package is axiomatized.\n-\n-         if Ekind (E) = E_Package\n-           and then Present (Generic_Parent (Decl))\n-         then\n-            return\n-              Get_First_Parent_With_Ext_Axioms_For_Entity\n-                (Generic_Parent (Decl));\n-         else\n-            return Empty;\n-         end if;\n-      end;\n-   end Get_First_Parent_With_Ext_Axioms_For_Entity;\n-\n    ---------------------\n    -- Get_Stream_Size --\n    ---------------------"}, {"sha": "871a5ba5744c7302899e3bd97c199dc364891d57", "filename": "gcc/ada/exp_util.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e3ed0fc933a9c77ddc14f7097dd601d824c2b35/gcc%2Fada%2Fexp_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e3ed0fc933a9c77ddc14f7097dd601d824c2b35/gcc%2Fada%2Fexp_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.ads?ref=1e3ed0fc933a9c77ddc14f7097dd601d824c2b35", "patch": "@@ -311,6 +311,11 @@ package Exp_Util is\n    --  it is harmless, so it is easier to do it in all cases, rather than\n    --  conditionalize it in GNAT 5 or beyond.\n \n+   function Containing_Package_With_Ext_Axioms\n+     (E : Entity_Id) return Entity_Id;\n+   --  Returns the package entity with an external axiomatization containing E,\n+   --  if any, or Empty if none.\n+\n    procedure Convert_To_Actual_Subtype (Exp : Node_Id);\n    --  The Etype of an expression is the nominal type of the expression,\n    --  not the actual subtype. Often these are the same, but not always.\n@@ -542,11 +547,6 @@ package Exp_Util is\n    --  N_Op_Eq), or to determine the result of some other test in other cases\n    --  (e.g. no access check required if N_Op_Ne Null).\n \n-   function Get_First_Parent_With_Ext_Axioms_For_Entity\n-     (E : Entity_Id) return Entity_Id;\n-   --  Returns the package entity with an external axiomatization containing E,\n-   --  if any, or Empty if none.\n-\n    function Get_Stream_Size (E : Entity_Id) return Uint;\n    --  Return the stream size value of the subtype E\n "}, {"sha": "5ac91133e62974a63d22a6181ceb32544ca7ca18", "filename": "gcc/ada/i-fortra.ads", "status": "modified", "additions": 10, "deletions": 26, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e3ed0fc933a9c77ddc14f7097dd601d824c2b35/gcc%2Fada%2Fi-fortra.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e3ed0fc933a9c77ddc14f7097dd601d824c2b35/gcc%2Fada%2Fi-fortra.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-fortra.ads?ref=1e3ed0fc933a9c77ddc14f7097dd601d824c2b35", "patch": "@@ -65,42 +65,26 @@ package Interfaces.Fortran is\n    type Integer_Star_8  is new Integer_64;\n    type Integer_Kind_8  is new Integer_64;\n \n-   type Logical_Star_1  is new Boolean;\n-   type Logical_Star_2  is new Boolean;\n-   type Logical_Star_4  is new Boolean;\n-   type Logical_Star_8  is new Boolean;\n-   type Logical_Kind_1  is new Boolean;\n-   type Logical_Kind_2  is new Boolean;\n-   type Logical_Kind_4  is new Boolean;\n-   type Logical_Kind_8  is new Boolean;\n-   for Logical_Star_1'Size use Integer_8'Size;\n-   for Logical_Star_2'Size use Integer_16'Size;\n-   for Logical_Star_4'Size use Integer_32'Size;\n-   for Logical_Star_8'Size use Integer_64'Size;\n-   for Logical_Kind_1'Size use Integer_8'Size;\n-   for Logical_Kind_2'Size use Integer_16'Size;\n-   for Logical_Kind_4'Size use Integer_32'Size;\n-   for Logical_Kind_8'Size use Integer_64'Size;\n-   pragma Convention (Fortran, Logical_Star_1);\n-   pragma Convention (Fortran, Logical_Star_2);\n-   pragma Convention (Fortran, Logical_Star_4);\n-   pragma Convention (Fortran, Logical_Star_8);\n-   pragma Convention (Fortran, Logical_Kind_1);\n-   pragma Convention (Fortran, Logical_Kind_2);\n-   pragma Convention (Fortran, Logical_Kind_4);\n-   pragma Convention (Fortran, Logical_Kind_8);\n+   type Logical_Star_1  is new Boolean with Convention => Fortran, Size =>  8;\n+   type Logical_Star_2  is new Boolean with Convention => Fortran, Size => 16;\n+   type Logical_Star_4  is new Boolean with Convention => Fortran, Size => 32;\n+   type Logical_Star_8  is new Boolean with Convention => Fortran, Size => 64;\n+   type Logical_Kind_1  is new Boolean with Convention => Fortran, Size =>  8;\n+   type Logical_Kind_2  is new Boolean with Convention => Fortran, Size => 16;\n+   type Logical_Kind_4  is new Boolean with Convention => Fortran, Size => 32;\n+   type Logical_Kind_8  is new Boolean with Convention => Fortran, Size => 64;\n \n    type Real_Star_4  is new Float;\n    type Real_Kind_4  is new Float;\n    type Real_Star_8  is new Long_Float;\n    type Real_Kind_8  is new Long_Float;\n+   --  In the kind syntax, n is the same as the associated real kind\n \n-   --  In the kind syntax, n is the same as the associated real kind.\n-   --  In the star syntax, n is twice as large (real+imaginary size)\n    type Complex_Star_8  is new Complex;\n    type Complex_Kind_4  is new Complex;\n    type Complex_Star_16 is new Double_Complex;\n    type Complex_Kind_8  is new Double_Complex;\n+   --  In the star syntax, n is twice as large (real+imaginary size)\n \n    type Character_Kind_n is new Fortran_Character;\n "}, {"sha": "ed96e8929f43b916a144a75965a4be612f06ba89", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e3ed0fc933a9c77ddc14f7097dd601d824c2b35/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e3ed0fc933a9c77ddc14f7097dd601d824c2b35/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=1e3ed0fc933a9c77ddc14f7097dd601d824c2b35", "patch": "@@ -1672,7 +1672,7 @@ package body Sem_Ch12 is\n                      if GNATprove_Mode\n                        and then\n                          Present\n-                           (Get_First_Parent_With_Ext_Axioms_For_Entity\n+                           (Containing_Package_With_Ext_Axioms\n                               (Defining_Entity (Analyzed_Formal)))\n                        and then Ekind (Defining_Entity (Analyzed_Formal)) =\n                                                                     E_Function"}]}