{"sha": "16c35a1fdc507fed4ae66a12c618c916375dc59a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTZjMzVhMWZkYzUwN2ZlZDRhZTY2YTEyYzYxOGM5MTYzNzVkYzU5YQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2005-04-16T02:07:33Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-04-16T02:07:33Z"}, "message": "re PR middle-end/14311 (builtins for atomic operations needed)\n\n        PR middle-end/14311\n        * semantics.c (finish_call_expr): Call resolve_overloaded_builtin.\n\nFrom-SVN: r98221", "tree": {"sha": "ce0de1f13cb59f59c4397ecabcabe40de0180f95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce0de1f13cb59f59c4397ecabcabe40de0180f95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16c35a1fdc507fed4ae66a12c618c916375dc59a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16c35a1fdc507fed4ae66a12c618c916375dc59a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16c35a1fdc507fed4ae66a12c618c916375dc59a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16c35a1fdc507fed4ae66a12c618c916375dc59a/comments", "author": null, "committer": null, "parents": [{"sha": "054632e8ab08921f7da62bdd84ec5270f0da8191", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/054632e8ab08921f7da62bdd84ec5270f0da8191", "html_url": "https://github.com/Rust-GCC/gccrs/commit/054632e8ab08921f7da62bdd84ec5270f0da8191"}], "stats": {"total": 116, "additions": 114, "deletions": 2}, "files": [{"sha": "8f42b1f76b6233d93c390ca1eae7b2e291e0438e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16c35a1fdc507fed4ae66a12c618c916375dc59a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16c35a1fdc507fed4ae66a12c618c916375dc59a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=16c35a1fdc507fed4ae66a12c618c916375dc59a", "patch": "@@ -1,3 +1,8 @@\n+2005-04-15  Richard Henderson  <rth@redhat.com>\n+\n+\tPR middle-end/14311\n+\t* semantics.c (finish_call_expr): Call resolve_overloaded_builtin.\n+\n 2005-04-15  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* cp-tree.h (lang_type_class): Remove redefined.  Move"}, {"sha": "ac678d5cdd5f116ad50ea1e32b5b7de7032f69fa", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16c35a1fdc507fed4ae66a12c618c916375dc59a/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16c35a1fdc507fed4ae66a12c618c916375dc59a/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=16c35a1fdc507fed4ae66a12c618c916375dc59a", "patch": "@@ -1833,8 +1833,16 @@ finish_call_expr (tree fn, tree args, bool disallow_virtual, bool koenig_p)\n \t\t\t\t       ? LOOKUP_NONVIRTUAL : 0));\n     }\n   else if (is_overloaded_fn (fn))\n-    /* A call to a namespace-scope function.  */\n-    result = build_new_function_call (fn, args);\n+    {\n+      /* If the function is an overloaded builtin, resolve it.  */\n+      if (TREE_CODE (fn) == FUNCTION_DECL\n+\t  && DECL_BUILT_IN_CLASS (fn) == BUILT_IN_NORMAL)\n+        result = resolve_overloaded_builtin (fn, args);\n+\n+      if (!result)\n+\t/* A call to a namespace-scope function.  */\n+\tresult = build_new_function_call (fn, args);\n+    }\n   else if (TREE_CODE (fn) == PSEUDO_DTOR_EXPR)\n     {\n       if (args)\n@@ -1851,6 +1859,7 @@ finish_call_expr (tree fn, tree args, bool disallow_virtual, bool koenig_p)\n        have an overloaded `operator ()'.  */\n     result = build_new_op (CALL_EXPR, LOOKUP_NORMAL, fn, args, NULL_TREE,\n \t\t\t   /*overloaded_p=*/NULL);\n+\n   if (!result)\n     /* A call where the function is unknown.  */\n     result = build_function_call (fn, args);"}, {"sha": "e4d6dff61456fa0b531b1867e18558d996fe2d66", "filename": "gcc/testsuite/g++.dg/ext/sync-1.C", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16c35a1fdc507fed4ae66a12c618c916375dc59a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fsync-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16c35a1fdc507fed4ae66a12c618c916375dc59a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fsync-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fsync-1.C?ref=16c35a1fdc507fed4ae66a12c618c916375dc59a", "patch": "@@ -0,0 +1,40 @@\n+// Validate that the __sync builtins are overloaded properly.\n+// { dg-do compile }\n+// { dg-options \"-Werror\" }\n+\n+#define TEST1(TYPE, BUILTIN)\t\t\\\n+void t_##TYPE##BUILTIN(TYPE *p)\t\t\\\n+{\t\t\t\t\t\\\n+  __typeof(BUILTIN(p, 1)) *pp;\t\t\\\n+  pp = p;\t\t\t\t\\\n+}\n+\n+#define TEST2(BUILTIN)\t\t\\\n+  TEST1(int, BUILTIN)\t\t\\\n+  TEST1(long, BUILTIN)\n+\n+TEST2(__sync_fetch_and_add)\n+TEST2(__sync_fetch_and_sub)\n+TEST2(__sync_fetch_and_or)\n+TEST2(__sync_fetch_and_and)\n+TEST2(__sync_fetch_and_xor)\n+TEST2(__sync_fetch_and_nand)\n+\n+TEST2(__sync_add_and_fetch)\n+TEST2(__sync_sub_and_fetch)\n+TEST2(__sync_or_and_fetch)\n+TEST2(__sync_and_and_fetch)\n+TEST2(__sync_xor_and_fetch)\n+TEST2(__sync_nand_and_fetch)\n+\n+TEST2(__sync_lock_test_and_set)\n+\n+#define TEST3(TYPE)\t\t\t\t\t\\\n+void t_##TYPE##__sync_val_compare_and_swap(TYPE *p)\t\\\n+{\t\t\t\t\t\t\t\\\n+  __typeof(__sync_val_compare_and_swap(p, 1, 2)) *pp;\t\\\n+  pp = p;\t\t\t\t\t\t\\\n+}\n+\n+TEST3(int)\n+TEST3(long)"}, {"sha": "5695684c3e71ec94077a26bbcf3b0f657c1926ee", "filename": "gcc/testsuite/g++.dg/ext/sync-2.C", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16c35a1fdc507fed4ae66a12c618c916375dc59a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fsync-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16c35a1fdc507fed4ae66a12c618c916375dc59a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fsync-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fsync-2.C?ref=16c35a1fdc507fed4ae66a12c618c916375dc59a", "patch": "@@ -0,0 +1,58 @@\n+// Validate that the __sync builtins are overloaded properly in templates.\n+// { dg-do compile }\n+// { dg-options \"-Werror\" }\n+\n+\n+#define TEST1(BUILTIN)\t\t\t\\\n+template<typename T>\t\t\t\\\n+void f##BUILTIN(T *p)\t\t\t\\\n+{\t\t\t\t\t\\\n+  __typeof(BUILTIN(p, 1)) *pp;\t\t\\\n+  pp = p;\t\t\t\t\\\n+}\n+\n+TEST1(__sync_fetch_and_add)\n+TEST1(__sync_fetch_and_sub)\n+TEST1(__sync_fetch_and_or)\n+TEST1(__sync_fetch_and_and)\n+TEST1(__sync_fetch_and_xor)\n+TEST1(__sync_fetch_and_nand)\n+\n+TEST1(__sync_add_and_fetch)\n+TEST1(__sync_sub_and_fetch)\n+TEST1(__sync_or_and_fetch)\n+TEST1(__sync_and_and_fetch)\n+TEST1(__sync_xor_and_fetch)\n+TEST1(__sync_nand_and_fetch)\n+\n+TEST1(__sync_lock_test_and_set)\n+\n+template<typename T>\n+void f__sync_val_compare_and_swap(T *p)\n+{\n+  __typeof(__sync_val_compare_and_swap(p, 1, 2)) *pp;\n+  pp = p;\n+}\n+\n+#define TEST2(TYPE)\t\t\t\\\n+void h_##TYPE ()\t\t\t\\\n+{\t\t\t\t\t\\\n+  TYPE x;\t\t\t\t\\\n+  f__sync_fetch_and_add (&x);\t\t\\\n+  f__sync_fetch_and_sub (&x);\t\t\\\n+  f__sync_fetch_and_or (&x);\t\t\\\n+  f__sync_fetch_and_and (&x);\t\t\\\n+  f__sync_fetch_and_xor (&x);\t\t\\\n+  f__sync_fetch_and_nand (&x);\t\t\\\n+  f__sync_add_and_fetch (&x);\t\t\\\n+  f__sync_sub_and_fetch (&x);\t\t\\\n+  f__sync_or_and_fetch (&x);\t\t\\\n+  f__sync_and_and_fetch (&x);\t\t\\\n+  f__sync_xor_and_fetch (&x);\t\t\\\n+  f__sync_nand_and_fetch (&x);\t\t\\\n+  f__sync_lock_test_and_set (&x);\t\\\n+  f__sync_val_compare_and_swap (&x);\t\\\n+}\n+\n+TEST2(int)\n+TEST2(long)"}]}