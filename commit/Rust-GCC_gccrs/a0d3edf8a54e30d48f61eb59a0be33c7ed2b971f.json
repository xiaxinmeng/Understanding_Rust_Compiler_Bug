{"sha": "a0d3edf8a54e30d48f61eb59a0be33c7ed2b971f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTBkM2VkZjhhNTRlMzBkNDhmNjFlYjU5YTBiZTMzYzdlZDJiOTcxZg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-11-07T08:05:08Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-11-07T08:05:08Z"}, "message": "re PR tree-optimization/78189 (movaps generated for unaligned store in aligned struct, when struct is referenced via unaligned member.)\n\n2016-11-07  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/78189\n\t* tree-vect-data-refs.c (vect_compute_data_ref_alignment): Fix\n\talignment computation.\n\n\t* g++.dg/torture/pr78189.C: New testcase.\n\nFrom-SVN: r241892", "tree": {"sha": "ef5f5054bbe0f2fc255f9f42ab020ae3580c96fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef5f5054bbe0f2fc255f9f42ab020ae3580c96fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0d3edf8a54e30d48f61eb59a0be33c7ed2b971f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0d3edf8a54e30d48f61eb59a0be33c7ed2b971f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0d3edf8a54e30d48f61eb59a0be33c7ed2b971f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0d3edf8a54e30d48f61eb59a0be33c7ed2b971f/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e34b855ed55fc5bb99aeaf013c64db98eb333ca0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e34b855ed55fc5bb99aeaf013c64db98eb333ca0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e34b855ed55fc5bb99aeaf013c64db98eb333ca0"}], "stats": {"total": 73, "additions": 70, "deletions": 3}, "files": [{"sha": "960ea67b0bc3c3ece1c3910d2bdcb9e1bef2aa82", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d3edf8a54e30d48f61eb59a0be33c7ed2b971f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d3edf8a54e30d48f61eb59a0be33c7ed2b971f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a0d3edf8a54e30d48f61eb59a0be33c7ed2b971f", "patch": "@@ -1,3 +1,9 @@\n+2016-11-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/78189\n+\t* tree-vect-data-refs.c (vect_compute_data_ref_alignment): Fix\n+\talignment computation.\n+\n 2016-11-06  Kugan Vivekanandarajah  <kuganv@linaro.org>\n \n \t* ipa-cp.c (ipcp_bits_lattice::meet_with): Remove unreachable code."}, {"sha": "e0a1c8e77a57c70de90917e92261cb6978a6667c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d3edf8a54e30d48f61eb59a0be33c7ed2b971f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d3edf8a54e30d48f61eb59a0be33c7ed2b971f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a0d3edf8a54e30d48f61eb59a0be33c7ed2b971f", "patch": "@@ -1,3 +1,8 @@\n+2016-11-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/78189\n+\t* g++.dg/torture/pr78189.C: New testcase.\n+\n 2016-11-06  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* gcc.dg/Wtrampolines.c: XFAIL AIX."}, {"sha": "9b65d2b5a6366af5c2674f488df8bd737364b6c0", "filename": "gcc/testsuite/g++.dg/torture/pr78189.C", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d3edf8a54e30d48f61eb59a0be33c7ed2b971f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr78189.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d3edf8a54e30d48f61eb59a0be33c7ed2b971f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr78189.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr78189.C?ref=a0d3edf8a54e30d48f61eb59a0be33c7ed2b971f", "patch": "@@ -0,0 +1,41 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-ftree-slp-vectorize -fno-vect-cost-model\" } */\n+\n+#include <cstddef>\n+\n+struct A\n+{\n+  void * a;\n+  void * b;\n+};\n+\n+struct alignas(16) B\n+{\n+  void * pad;\n+  void * misaligned;\n+  void * pad2;\n+\n+  A a;\n+\n+  void Null();\n+};\n+\n+void B::Null()\n+{\n+  a.a = nullptr;\n+  a.b = nullptr;\n+}\n+\n+void __attribute__((noinline,noclone))\n+NullB(void * misalignedPtr)\n+{\n+  B* b = reinterpret_cast<B*>(reinterpret_cast<char *>(misalignedPtr) - offsetof(B, misaligned));\n+  b->Null();\n+}\n+\n+int main()\n+{\n+  B b;\n+  NullB(&b.misaligned);\n+  return 0;\n+}"}, {"sha": "b03cb1ec637c427f215cd6408707d7e46b6e0764", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d3edf8a54e30d48f61eb59a0be33c7ed2b971f/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d3edf8a54e30d48f61eb59a0be33c7ed2b971f/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=a0d3edf8a54e30d48f61eb59a0be33c7ed2b971f", "patch": "@@ -773,10 +773,25 @@ vect_compute_data_ref_alignment (struct data_reference *dr)\n   base = ref;\n   while (handled_component_p (base))\n     base = TREE_OPERAND (base, 0);\n+  unsigned int base_alignment;\n+  unsigned HOST_WIDE_INT base_bitpos;\n+  get_object_alignment_1 (base, &base_alignment, &base_bitpos);\n+  /* As data-ref analysis strips the MEM_REF down to its base operand\n+     to form DR_BASE_ADDRESS and adds the offset to DR_INIT we have to\n+     adjust things to make base_alignment valid as the alignment of\n+     DR_BASE_ADDRESS.  */\n   if (TREE_CODE (base) == MEM_REF)\n-    base = build2 (MEM_REF, TREE_TYPE (base), base_addr,\n-\t\t   build_int_cst (TREE_TYPE (TREE_OPERAND (base, 1)), 0));\n-  unsigned int base_alignment = get_object_alignment (base);\n+    {\n+      base_bitpos -= mem_ref_offset (base).to_short_addr () * BITS_PER_UNIT;\n+      base_bitpos &= (base_alignment - 1);\n+    }\n+  if (base_bitpos != 0)\n+    base_alignment = base_bitpos & -base_bitpos;\n+  /* Also look at the alignment of the base address DR analysis\n+     computed.  */\n+  unsigned int base_addr_alignment = get_pointer_alignment (base_addr);\n+  if (base_addr_alignment > base_alignment)\n+    base_alignment = base_addr_alignment;\n \n   if (base_alignment >= TYPE_ALIGN (TREE_TYPE (vectype)))\n     DR_VECT_AUX (dr)->base_element_aligned = true;"}]}