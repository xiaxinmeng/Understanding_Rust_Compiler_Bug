{"sha": "e8d791dd5551e3b3458286ab23c8b2d280afc560", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThkNzkxZGQ1NTUxZTNiMzQ1ODI4NmFiMjNjOGIyZDI4MGFmYzU2MA==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "1996-02-14T18:45:05Z"}, "committer": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "1996-02-14T18:45:05Z"}, "message": "fix_truncdfsi2 SUBREG and movdi HOST_BITS_PER_WIDE_INT test\n\nFrom-SVN: r11274", "tree": {"sha": "38529f3d9488abe29b5e60440952a85617ef2f39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38529f3d9488abe29b5e60440952a85617ef2f39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8d791dd5551e3b3458286ab23c8b2d280afc560", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8d791dd5551e3b3458286ab23c8b2d280afc560", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8d791dd5551e3b3458286ab23c8b2d280afc560", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8d791dd5551e3b3458286ab23c8b2d280afc560/comments", "author": null, "committer": null, "parents": [{"sha": "f4558646ab00394c87c5a86713acfd9911108e26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4558646ab00394c87c5a86713acfd9911108e26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4558646ab00394c87c5a86713acfd9911108e26"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "f3476bd54899e648787144004b45f9865a6bab78", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8d791dd5551e3b3458286ab23c8b2d280afc560/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8d791dd5551e3b3458286ab23c8b2d280afc560/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=e8d791dd5551e3b3458286ab23c8b2d280afc560", "patch": "@@ -3527,14 +3527,13 @@\n {\n   if (TARGET_POWER2 || TARGET_POWERPC)\n     {\n-      int endian = (WORDS_BIG_ENDIAN == 0);\n       rtx stack_slot = rs6000_stack_temp (DImode, 8, 1);\n       rtx temp = gen_reg_rtx (DImode);\n \n       emit_insn (gen_fpcvtsi (temp, operands[1]));\n       emit_move_insn (stack_slot, temp);\n       emit_move_insn (operands[0],\n-\t\t      operand_subword (stack_slot, 1 - endian, 0, DImode));\n+\t\t      gen_rtx (SUBREG, SImode, stack_slot, WORDS_BIG_ENDIAN));\n       DONE;\n     }\n   else\n@@ -5322,16 +5321,18 @@\n \t  low = CONST_DOUBLE_LOW (operands[1]);\n \t  high = CONST_DOUBLE_HIGH (operands[1]);\n \t}\n-      else if (HOST_BITS_PER_WIDE_INT <= 32)\n+      else\n+#if HOST_BITS_PER_WIDE_INT == 32\n \t{\n \t  low = INTVAL (operands[1]);\n \t  high = (low < 0) ? ~0 : 0;\n \t}\n-      else\n+#else\n \t{\n           low = INTVAL (operands[1]) & 0xffffffff;\n           high = (HOST_WIDE_INT) INTVAL (operands[1]) >> 32;\n \t}\n+#endif\n \n       if (! TARGET_POWERPC64)\n \t{\n@@ -5479,16 +5480,18 @@\n       low = CONST_DOUBLE_LOW (operands[1]);\n       high = CONST_DOUBLE_HIGH (operands[1]);\n     }\n-  else if (HOST_BITS_PER_WIDE_INT <= 32)\n+  else\n+#if HOST_BITS_PER_WIDE_INT == 32\n     {\n       low = INTVAL (operands[1]);\n       high = (low < 0) ? ~0 : 0;\n     }\n-  else\n+#else\n     {\n       low = INTVAL (operands[1]) & 0xffffffff;\n       high = (HOST_WIDE_INT) INTVAL (operands[1]) >> 32;\n     }\n+#endif\n \n   if ((high + 0x8000) < 0x10000\n       && ((low & 0xffff) == 0 || (low & (~ (HOST_WIDE_INT) 0xffff)) == 0))"}]}