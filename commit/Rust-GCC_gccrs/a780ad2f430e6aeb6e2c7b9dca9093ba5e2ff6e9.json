{"sha": "a780ad2f430e6aeb6e2c7b9dca9093ba5e2ff6e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTc4MGFkMmY0MzBlNmFlYjZlMmM3YjlkY2E5MDkzYmE1ZTJmZjZlOQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-10-10T17:55:23Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-10-10T17:55:23Z"}, "message": "monetary_members.cc (_S_construct_pattern): Give __ret a default value, thus avoiding spurious warnings.\n\n2004-10-10  Paolo Carlini  <pcarlini@suse.de>\n\n\t* config/locale/gnu/monetary_members.cc (_S_construct_pattern):\n\tGive __ret a default value, thus avoiding spurious warnings.\n\n\t* testsuite/performance/27_io/filebuf_sgetn_unbuf.cc: Open either\n\twords or linux.words, otherwise exit.\n\t* testsuite/performance/27_io/ifstream_getline.cc: Slighlty tweak.\n\nFrom-SVN: r88848", "tree": {"sha": "0c896c6c52dbc1d62fd55da7e576c7cbb9a4db73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c896c6c52dbc1d62fd55da7e576c7cbb9a4db73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a780ad2f430e6aeb6e2c7b9dca9093ba5e2ff6e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a780ad2f430e6aeb6e2c7b9dca9093ba5e2ff6e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a780ad2f430e6aeb6e2c7b9dca9093ba5e2ff6e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a780ad2f430e6aeb6e2c7b9dca9093ba5e2ff6e9/comments", "author": null, "committer": null, "parents": [{"sha": "0ba09d8fc65f306909c11b68c67030a3c6ca13c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ba09d8fc65f306909c11b68c67030a3c6ca13c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ba09d8fc65f306909c11b68c67030a3c6ca13c2"}], "stats": {"total": 32, "additions": 24, "deletions": 8}, "files": [{"sha": "38b332cd19d5136a2e3f6f0a7e7f5aa03c02301c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a780ad2f430e6aeb6e2c7b9dca9093ba5e2ff6e9/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a780ad2f430e6aeb6e2c7b9dca9093ba5e2ff6e9/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a780ad2f430e6aeb6e2c7b9dca9093ba5e2ff6e9", "patch": "@@ -1,3 +1,12 @@\n+2004-10-10  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* config/locale/gnu/monetary_members.cc (_S_construct_pattern):\n+\tGive __ret a default value, thus avoiding spurious warnings.\n+\n+\t* testsuite/performance/27_io/filebuf_sgetn_unbuf.cc: Open either\n+\twords or linux.words, otherwise exit.\n+\t* testsuite/performance/27_io/ifstream_getline.cc: Slighlty tweak.\n+\n 2004-10-09  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/std/std_memory.h (__get_temporary_buffer): Don't use"}, {"sha": "20d96420192c86b1035f57d17db18942928de362", "filename": "libstdc++-v3/config/locale/gnu/monetary_members.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a780ad2f430e6aeb6e2c7b9dca9093ba5e2ff6e9/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fmonetary_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a780ad2f430e6aeb6e2c7b9dca9093ba5e2ff6e9/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fmonetary_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fmonetary_members.cc?ref=a780ad2f430e6aeb6e2c7b9dca9093ba5e2ff6e9", "patch": "@@ -199,7 +199,7 @@ namespace std\n \t  }\n \tbreak;\n       default:\n-\t;\n+\t__ret = pattern();\n       }\n     return __ret;\n   }"}, {"sha": "1eddf10ad0268e859bd88ac2d058d118d952cd80", "filename": "libstdc++-v3/testsuite/performance/27_io/filebuf_sgetn_unbuf.cc", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a780ad2f430e6aeb6e2c7b9dca9093ba5e2ff6e9/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2F27_io%2Ffilebuf_sgetn_unbuf.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a780ad2f430e6aeb6e2c7b9dca9093ba5e2ff6e9/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2F27_io%2Ffilebuf_sgetn_unbuf.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2F27_io%2Ffilebuf_sgetn_unbuf.cc?ref=a780ad2f430e6aeb6e2c7b9dca9093ba5e2ff6e9", "patch": "@@ -42,10 +42,18 @@ int main()\n   const int chunksize = 100;\n \n   char* chunk = new char[chunksize];\n-  const char* name = \"/usr/share/dict/linux.words\";\n+  const char* name1 = \"/usr/share/dict/words\";\n+  const char* name2 = \"/usr/share/dict/linux.words\";\n+  const char* name = name1;\n \n   // C\n-  FILE* file = fopen(name, \"r\");\n+  FILE* file;\n+  if (!(file = fopen(name, \"r\")))\n+    {\n+      name = name2;\n+      if (!(file = fopen(name, \"r\")))\n+\texit(1);\n+    }\n   setvbuf(file, 0, _IONBF, 0);\n   start_counters(time, resource);\n   for (int i = 0; i < iterations; ++i)"}, {"sha": "feb9c8f8603f373dcd52fc5290064d05b5530a74", "filename": "libstdc++-v3/testsuite/performance/27_io/ifstream_getline.cc", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a780ad2f430e6aeb6e2c7b9dca9093ba5e2ff6e9/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2F27_io%2Fifstream_getline.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a780ad2f430e6aeb6e2c7b9dca9093ba5e2ff6e9/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2F27_io%2Fifstream_getline.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2F27_io%2Fifstream_getline.cc?ref=a780ad2f430e6aeb6e2c7b9dca9093ba5e2ff6e9", "patch": "@@ -46,14 +46,13 @@ int main ()\n       in.clear();\n       in.open(name2);\n     }\n+  if (!in.is_open())\n+    exit(1);\n \n   char buffer[BUFSIZ];\n   start_counters(time, resource);\n-  if (in.is_open())\n-    {\n-      while (in.good()) \n-\tin.getline(buffer, BUFSIZ);\n-    }\n+  while (in.good()) \n+    in.getline(buffer, BUFSIZ);\n   stop_counters(time, resource);\n   report_performance(__FILE__, \"\", time, resource);\n "}]}