{"sha": "65a5559bdf97989997b12c372ef4c77dd4740b19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjVhNTU1OWJkZjk3OTg5OTk3YjEyYzM3MmVmNGM3N2RkNDc0MGIxOQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2003-01-23T00:17:32Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-01-23T00:17:32Z"}, "message": "re PR c++/9328 (ICE with templates and namespace std members)\n\n\tPR c++/9328\n\t* g++.dg/ext/typeof3.C: New test.\n\n\tPR c++/9328\n\t* error.c (dump_decl): For an OVERLOAD, just print the name of the\n\tfunction; it doesn't make sense to try to print its type.\n\t* semantics.c (finish_typeof): Issue errors about invalid uses.\n\nFrom-SVN: r61631", "tree": {"sha": "d5c3c68f7468b575405a5936763f83526baefb9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5c3c68f7468b575405a5936763f83526baefb9f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65a5559bdf97989997b12c372ef4c77dd4740b19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65a5559bdf97989997b12c372ef4c77dd4740b19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65a5559bdf97989997b12c372ef4c77dd4740b19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65a5559bdf97989997b12c372ef4c77dd4740b19/comments", "author": null, "committer": null, "parents": [{"sha": "68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68aab9ee3e6ba21b48b5f2e24e61705472b7f7ed"}], "stats": {"total": 53, "additions": 47, "deletions": 6}, "files": [{"sha": "9be5f7660f1a100f0a480e7b10aa1ef158ae30c9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65a5559bdf97989997b12c372ef4c77dd4740b19/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65a5559bdf97989997b12c372ef4c77dd4740b19/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=65a5559bdf97989997b12c372ef4c77dd4740b19", "patch": "@@ -1,5 +1,10 @@\n 2003-01-22  Mark Mitchell  <mark@codesourcery.com>\n \n+\tPR c++/9328\n+\t* error.c (dump_decl): For an OVERLOAD, just print the name of the\n+\tfunction; it doesn't make sense to try to print its type.\n+\t* semantics.c (finish_typeof): Issue errors about invalid uses.\n+\n \tPR c++/9298\n \t* parser.c (cp_parser_consume_semicolon_at_end_of_statement): New\n \tfunction."}, {"sha": "d53943f37151d43590d81078e9a32d08d865f0aa", "filename": "gcc/cp/error.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65a5559bdf97989997b12c372ef4c77dd4740b19/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65a5559bdf97989997b12c372ef4c77dd4740b19/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=65a5559bdf97989997b12c372ef4c77dd4740b19", "patch": "@@ -929,6 +929,25 @@ dump_decl (t, flags)\n       break;\n \n     case OVERLOAD:\n+      if (OVL_CHAIN (t))\n+\t{\n+\t  t = OVL_CURRENT (t);\n+\t  if (DECL_CLASS_SCOPE_P (t))\n+\t    {\n+\t      dump_type (DECL_CONTEXT (t), flags);\n+\t      output_add_string (scratch_buffer, \"::\");\n+\t    }\n+\t  else if (DECL_CONTEXT (t))\n+\t    {\n+\t      dump_decl (DECL_CONTEXT (t), flags);\n+\t      output_add_string (scratch_buffer, \"::\");\n+\t    }\n+\t  dump_decl (DECL_NAME (t), flags);\n+\t  break;\n+\t}\n+      \n+      /* If there's only one function, just treat it like an ordinary\n+\t FUNCTION_DECL.  */\n       t = OVL_CURRENT (t);\n       /* Fall through.  */\n "}, {"sha": "19808e68583adf3808dfd4e5e996fc2f3c050178", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65a5559bdf97989997b12c372ef4c77dd4740b19/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65a5559bdf97989997b12c372ef4c77dd4740b19/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=65a5559bdf97989997b12c372ef4c77dd4740b19", "patch": "@@ -2136,20 +2136,28 @@ tree\n finish_typeof (expr)\n      tree expr;\n {\n+  tree type;\n+\n   if (processing_template_decl)\n     {\n-      tree t;\n+      type = make_aggr_type (TYPEOF_TYPE);\n+      TYPE_FIELDS (type) = expr;\n \n-      t = make_aggr_type (TYPEOF_TYPE);\n-      TYPE_FIELDS (t) = expr;\n-\n-      return t;\n+      return type;\n     }\n \n   if (TREE_CODE (expr) == OFFSET_REF)\n     expr = resolve_offset_ref (expr);\n \n-  return TREE_TYPE (expr);\n+  type = TREE_TYPE (expr);\n+\n+  if (!type || type == unknown_type_node)\n+    {\n+      error (\"type of `%E' is unknown\", expr);\n+      return error_mark_node;\n+    }\n+\n+  return type;\n }\n \n /* Compute the value of the `sizeof' operator.  */"}, {"sha": "fb0a778d25ebe0331bda3a2bc35f90228a273d89", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65a5559bdf97989997b12c372ef4c77dd4740b19/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65a5559bdf97989997b12c372ef4c77dd4740b19/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=65a5559bdf97989997b12c372ef4c77dd4740b19", "patch": "@@ -1,3 +1,8 @@\n+2003-01-22  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/9328\n+\t* g++.dg/ext/typeof3.C: New test.\n+\n 2003-01-22  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n \n \tPR c++/2738"}, {"sha": "cf78c7c6196654ad7684a5770ac653569c81c4e5", "filename": "gcc/testsuite/g++.dg/ext/typeof3.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65a5559bdf97989997b12c372ef4c77dd4740b19/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Ftypeof3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65a5559bdf97989997b12c372ef4c77dd4740b19/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Ftypeof3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Ftypeof3.C?ref=65a5559bdf97989997b12c372ef4c77dd4740b19", "patch": "@@ -0,0 +1,4 @@\n+double f(double);\n+float f(float);\n+void h(typeof(f) g) {} // { dg-error \"\" }\n+ "}]}