{"sha": "6339f93279b24b5a61eeed2a5040b8b2a0d3ab42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjMzOWY5MzI3OWIyNGI1YTYxZWVlZDJhNTA0MGI4YjJhMGQzYWI0Mg==", "commit": {"author": {"name": "Kwok Cheung Yeung", "email": "kcy@codesourcery.com", "date": "2020-08-06T11:52:52Z"}, "committer": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2020-08-07T05:59:28Z"}, "message": "[testsuite] Add gcc.dg/ia64-sync-5.c\n\nThere currently is no sync_char_short-enabled run test that tests\n__sync_val_compare_and_swap.\n\nFix this by copying ia64-sync-3.c and modifying it for char/short.\n\nTested on x86_64.\n\n2020-08-06  Kwok Cheung Yeung  <kcy@codesourcery.com>\n\t    Tom de Vries  <tdevries@suse.de>\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/ia64-sync-5.c: New test.", "tree": {"sha": "19944d872e48f40c5b214e75188b5bd0415c222d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/19944d872e48f40c5b214e75188b5bd0415c222d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6339f93279b24b5a61eeed2a5040b8b2a0d3ab42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6339f93279b24b5a61eeed2a5040b8b2a0d3ab42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6339f93279b24b5a61eeed2a5040b8b2a0d3ab42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6339f93279b24b5a61eeed2a5040b8b2a0d3ab42/comments", "author": {"login": "k-yeung", "id": 16960193, "node_id": "MDQ6VXNlcjE2OTYwMTkz", "avatar_url": "https://avatars.githubusercontent.com/u/16960193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/k-yeung", "html_url": "https://github.com/k-yeung", "followers_url": "https://api.github.com/users/k-yeung/followers", "following_url": "https://api.github.com/users/k-yeung/following{/other_user}", "gists_url": "https://api.github.com/users/k-yeung/gists{/gist_id}", "starred_url": "https://api.github.com/users/k-yeung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/k-yeung/subscriptions", "organizations_url": "https://api.github.com/users/k-yeung/orgs", "repos_url": "https://api.github.com/users/k-yeung/repos", "events_url": "https://api.github.com/users/k-yeung/events{/privacy}", "received_events_url": "https://api.github.com/users/k-yeung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb5f081c16bde273f0b3c24b5929c822ae502a4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb5f081c16bde273f0b3c24b5929c822ae502a4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb5f081c16bde273f0b3c24b5929c822ae502a4f"}], "stats": {"total": 83, "additions": 83, "deletions": 0}, "files": [{"sha": "8b16b29b20eadbe94e509a905d5ea4391fd7eff2", "filename": "gcc/testsuite/gcc.dg/ia64-sync-5.c", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6339f93279b24b5a61eeed2a5040b8b2a0d3ab42/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6339f93279b24b5a61eeed2a5040b8b2a0d3ab42/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-5.c?ref=6339f93279b24b5a61eeed2a5040b8b2a0d3ab42", "patch": "@@ -0,0 +1,83 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target sync_char_short } */\n+/* { dg-options } */\n+/* { dg-options \"-march=i486\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n+/* { dg-options \"-mcpu=v9\" { target sparc*-*-* } } */\n+\n+/* Test basic functionality of the intrinsics.  */\n+\n+/* This is a copy of gcc.dg/ia64-sync-3.c, for 8-bit and 16-bit.  */\n+\n+__extension__ typedef __SIZE_TYPE__ size_t;\n+\n+extern void abort (void);\n+extern void *memcpy (void *, const void *, size_t);\n+extern int memcmp (const void *, const void *, size_t);\n+\n+static char AC[4];\n+static char init_qi[4] = { -30,-30,-50,-50 };\n+static char test_qi[4] = { -115,-115,25,25 };\n+\n+static void\n+do_qi (void)\n+{\n+  if (__sync_val_compare_and_swap(AC+0, -30, -115) != -30)\n+    abort ();\n+  if (__sync_val_compare_and_swap(AC+0, -30, -115) != -115)\n+    abort ();\n+  if (__sync_bool_compare_and_swap(AC+1, -30, -115) != 1)\n+    abort ();\n+  if (__sync_bool_compare_and_swap(AC+1, -30, -115) != 0)\n+    abort ();\n+\n+  if (__sync_val_compare_and_swap(AC+2, AC[2], 25) != -50)\n+    abort ();\n+  if (__sync_val_compare_and_swap(AC+2, AC[2], 25) != 25)\n+    abort ();\n+  if (__sync_bool_compare_and_swap(AC+3, AC[3], 25) != 1)\n+    abort ();\n+  if (__sync_bool_compare_and_swap(AC+3, AC[3], 25) != 1)\n+    abort ();\n+}\n+\n+static short AS[4];\n+static short init_hi[4] = { -30,-30,-50,-50 };\n+static short test_hi[4] = { -115,-115,25,25 };\n+\n+static void\n+do_hi (void)\n+{\n+  if (__sync_val_compare_and_swap(AS+0, -30, -115) != -30)\n+    abort ();\n+  if (__sync_val_compare_and_swap(AS+0, -30, -115) != -115)\n+    abort ();\n+  if (__sync_bool_compare_and_swap(AS+1, -30, -115) != 1)\n+    abort ();\n+  if (__sync_bool_compare_and_swap(AS+1, -30, -115) != 0)\n+    abort ();\n+\n+  if (__sync_val_compare_and_swap(AS+2, AS[2], 25) != -50)\n+    abort ();\n+  if (__sync_val_compare_and_swap(AS+2, AS[2], 25) != 25)\n+    abort ();\n+  if (__sync_bool_compare_and_swap(AS+3, AS[3], 25) != 1)\n+    abort ();\n+  if (__sync_bool_compare_and_swap(AS+3, AS[3], 25) != 1)\n+    abort ();\n+}\n+\n+int main()\n+{\n+  memcpy(AC, init_qi, sizeof(init_qi));\n+  memcpy(AS, init_hi, sizeof(init_hi));\n+\n+  do_qi ();\n+  do_hi ();\n+\n+  if (memcmp (AC, test_qi, sizeof(test_qi)))\n+    abort ();\n+  if (memcmp (AS, test_hi, sizeof(test_hi)))\n+    abort ();\n+\n+  return 0;\n+}"}]}