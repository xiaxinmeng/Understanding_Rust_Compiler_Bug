{"sha": "fff34d356a721134207d6545fc134a412af8f885", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmZmMzRkMzU2YTcyMTEzNDIwN2Q2NTQ1ZmMxMzRhNDEyYWY4Zjg4NQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2004-06-25T03:46:30Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2004-06-25T03:46:30Z"}, "message": "c-gimplify.c (gimplify_for_stmt): Use gimplify_and_add.\n\n\t* c-gimplify.c (gimplify_for_stmt): Use gimplify_and_add.\n\t* gimplify.c (internal_get_tmp_var, gimplify_return_expr): Likewise.\n\t(gimplify_loop_expr, gimplify_init_constructor): Likewise.\n\t(gimplify_self_mod_expr, gimplify_cond_expr): Likewise.\n\nFrom-SVN: r83634", "tree": {"sha": "0ced8c74747bef5dcab5eaebad0dd4ca71da5d12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ced8c74747bef5dcab5eaebad0dd4ca71da5d12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fff34d356a721134207d6545fc134a412af8f885", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fff34d356a721134207d6545fc134a412af8f885", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fff34d356a721134207d6545fc134a412af8f885", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fff34d356a721134207d6545fc134a412af8f885/comments", "author": null, "committer": null, "parents": [{"sha": "77db1f411d9b7d9cf865b119ea09aadc92238a81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77db1f411d9b7d9cf865b119ea09aadc92238a81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77db1f411d9b7d9cf865b119ea09aadc92238a81"}], "stats": {"total": 33, "additions": 16, "deletions": 17}, "files": [{"sha": "2b7060922381ff1befe7bcd84ed47bf8a3236dc0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fff34d356a721134207d6545fc134a412af8f885/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fff34d356a721134207d6545fc134a412af8f885/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fff34d356a721134207d6545fc134a412af8f885", "patch": "@@ -1,5 +1,10 @@\n 2004-06-24  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n+\t* c-gimplify.c (gimplify_for_stmt): Use gimplify_and_add.\n+\t* gimplify.c (internal_get_tmp_var, gimplify_return_expr): Likewise.\n+\t(gimplify_loop_expr, gimplify_init_constructor): Likewise.\n+\t(gimplify_self_mod_expr, gimplify_cond_expr): Likewise.\n+\t\n \tPR/16131\n \t* gimplify.c (voidify_wrapper_expr): Allow TARGET_EXPR.\n "}, {"sha": "811365e274678d68998adb837bd2d0d68b8cd084", "filename": "gcc/c-gimplify.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fff34d356a721134207d6545fc134a412af8f885/gcc%2Fc-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fff34d356a721134207d6545fc134a412af8f885/gcc%2Fc-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-gimplify.c?ref=fff34d356a721134207d6545fc134a412af8f885", "patch": "@@ -411,10 +411,8 @@ gimplify_for_stmt (tree *stmt_p, tree *pre_p)\n   tree stmt = *stmt_p;\n \n   if (FOR_INIT_STMT (stmt))\n-    {\n-      gimplify_stmt (&FOR_INIT_STMT (stmt));\n-      append_to_statement_list (FOR_INIT_STMT (stmt), pre_p);\n-    }\n+    gimplify_and_add (FOR_INIT_STMT (stmt), pre_p);\n+\n   *stmt_p = gimplify_c_loop (FOR_COND (stmt), FOR_BODY (stmt),\n \t\t\t     FOR_EXPR (stmt), 1);\n "}, {"sha": "a7960fde376733c7105ce4aa0c62c847739a71e7", "filename": "gcc/gimplify.c", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fff34d356a721134207d6545fc134a412af8f885/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fff34d356a721134207d6545fc134a412af8f885/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=fff34d356a721134207d6545fc134a412af8f885", "patch": "@@ -456,10 +456,9 @@ internal_get_tmp_var (tree val, tree *pre_p, tree *post_p, bool is_formal)\n     SET_EXPR_LOCUS (mod, EXPR_LOCUS (val));\n   else\n     annotate_with_locus (mod, input_location);\n-  /* gimplify_modify_expr might want to reduce this further.  */\n-  gimplify_stmt (&mod);\n-  append_to_statement_list (mod, pre_p);\n \n+  /* gimplify_modify_expr might want to reduce this further.  */\n+  gimplify_and_add (mod, pre_p);\n   return t;\n }\n \n@@ -990,8 +989,8 @@ gimplify_return_expr (tree stmt, tree *pre_p)\n      Then gimplify the whole thing.  */\n   if (result != result_decl)\n     TREE_OPERAND (ret_expr, 0) = result;\n-  gimplify_stmt (&TREE_OPERAND (stmt, 0));\n-  append_to_statement_list (TREE_OPERAND (stmt, 0), pre_p);\n+\n+  gimplify_and_add (TREE_OPERAND (stmt, 0), pre_p);\n \n   /* If we didn't use a temporary, then the result is just the result_decl.\n      Otherwise we need a simple copy.  This should already be gimple.  */\n@@ -1019,8 +1018,7 @@ gimplify_loop_expr (tree *expr_p, tree *pre_p)\n \n   gimplify_ctxp->exit_label = NULL_TREE;\n \n-  gimplify_stmt (&LOOP_EXPR_BODY (*expr_p));\n-  append_to_statement_list (LOOP_EXPR_BODY (*expr_p), pre_p);\n+  gimplify_and_add (LOOP_EXPR_BODY (*expr_p), pre_p);\n \n   if (gimplify_ctxp->exit_label)\n     {\n@@ -1447,9 +1445,9 @@ gimplify_init_constructor (tree *expr_p, tree *pre_p,\n \t\t\t    purpose, NULL_TREE);\n \n \t    init = build (MODIFY_EXPR, TREE_TYPE (purpose), cref, value);\n+\n \t    /* Each member initialization is a full-expression.  */\n-\t    gimplify_stmt (&init);\n-\t    append_to_statement_list (init, pre_p);\n+\t    gimplify_and_add (init, pre_p);\n \t  }\n \n \t*expr_p = NULL_TREE;\n@@ -2022,8 +2020,7 @@ gimplify_self_mod_expr (tree *expr_p, tree *pre_p, tree *post_p,\n \n   if (postfix)\n     {\n-      gimplify_stmt (&t1);\n-      append_to_statement_list (t1, post_p);\n+      gimplify_and_add (t1, post_p);\n       *expr_p = lhs;\n       return GS_ALL_DONE;\n     }\n@@ -2475,8 +2472,7 @@ gimplify_cond_expr (tree *expr_p, tree *pre_p, tree target)\n       recalculate_side_effects (expr);\n \n       /* Move the COND_EXPR to the prequeue and use the temp in its place.  */\n-      gimplify_stmt (&expr);\n-      append_to_statement_list (expr, pre_p);\n+      gimplify_and_add (expr, pre_p);\n       *expr_p = tmp;\n \n       return ret;"}]}