{"sha": "09ed8520b912f4455741528556e62cd3cfa8a53d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDllZDg1MjBiOTEyZjQ0NTU3NDE1Mjg1NTZlNjJjZDNjZmE4YTUzZA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2015-01-02T13:36:38Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2015-01-02T13:36:38Z"}, "message": "caf.exp (dg-compile-aux-modules): Add.\n\n2015-01-02  Tobias Burnus  <burnus@net-b.de>\n\n        * gfortran.dg/coarray/caf.exp (dg-compile-aux-modules): Add.\n\nFrom-SVN: r219143", "tree": {"sha": "68543981dd02bcaeda5b1598ce5b1ea49fa25160", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68543981dd02bcaeda5b1598ce5b1ea49fa25160"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09ed8520b912f4455741528556e62cd3cfa8a53d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09ed8520b912f4455741528556e62cd3cfa8a53d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09ed8520b912f4455741528556e62cd3cfa8a53d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09ed8520b912f4455741528556e62cd3cfa8a53d/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "213ab0a6c49f10069615b98d38bb794f844cf433", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/213ab0a6c49f10069615b98d38bb794f844cf433", "html_url": "https://github.com/Rust-GCC/gccrs/commit/213ab0a6c49f10069615b98d38bb794f844cf433"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "095b09d80e37c9f284773c714ff797cf0cd5fb94", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09ed8520b912f4455741528556e62cd3cfa8a53d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09ed8520b912f4455741528556e62cd3cfa8a53d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=09ed8520b912f4455741528556e62cd3cfa8a53d", "patch": "@@ -1,3 +1,7 @@\n+2015-01-02  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* gfortran.dg/coarray/caf.exp (dg-compile-aux-modules): Add.\n+\n 2015-01-02  Tobias Burnus  <burnus@net-b.de>\n \n \t* gfortran.dg/coarray/codimension_2.f90: New."}, {"sha": "e4e37983fda3b82c196d823fd09bfd232e93f7b8", "filename": "gcc/testsuite/gfortran.dg/coarray/caf.exp", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09ed8520b912f4455741528556e62cd3cfa8a53d/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Fcaf.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09ed8520b912f4455741528556e62cd3cfa8a53d/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Fcaf.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Fcaf.exp?ref=09ed8520b912f4455741528556e62cd3cfa8a53d", "patch": "@@ -43,6 +43,21 @@ global DG_TORTURE_OPTIONS torture_with_loops\n torture-init\n set-torture-options $DG_TORTURE_OPTIONS\n \n+global gfortran_test_path\n+global gfortran_aux_module_flags\n+set gfortran_test_path $srcdir/$subdir\n+set gfortran_aux_module_flags $DEFAULT_FFLAGS\n+proc dg-compile-aux-modules { args } {\n+    global gfortran_test_path\n+    global gfortran_aux_module_flags\n+    if { [llength $args] != 2 } {\n+\terror \"dg-set-target-env-var: needs one argument\"\n+\treturn\n+    }\n+    dg-test $gfortran_test_path/[lindex $args 1] \"\" $gfortran_aux_module_flags\n+    # cleanup-modules isn't intentionally invoked here.\n+}\n+\n # Main loop.\n foreach test [lsort [glob -nocomplain $srcdir/$subdir/*.\\[fF\\]{,90,95,03,08} ]] {\n     # If we're only testing specific files and this isn't one of them, skip it.\n@@ -65,12 +80,14 @@ foreach test [lsort [glob -nocomplain $srcdir/$subdir/*.\\[fF\\]{,90,95,03,08} ]]\n \n     foreach flags $option_list {\n \tverbose \"Testing $nshort (single), $flags\" 1\n+        set gfortran_aux_module_flags \"-fcoarray=single $flags\"\n \tdg-test $test \"-fcoarray=single $flags\" \"\" \n \tcleanup-modules \"\"\n     }\n \n     foreach flags $option_list {\n \tverbose \"Testing $nshort (libcaf_single), $flags\" 1\n+        set gfortran_aux_module_flags \"-fcoarray=lib $flags -lcaf_single\"\n \tdg-test $test \"-fcoarray=lib $flags -lcaf_single\" \"\"\n \tcleanup-modules \"\"\n     }"}]}