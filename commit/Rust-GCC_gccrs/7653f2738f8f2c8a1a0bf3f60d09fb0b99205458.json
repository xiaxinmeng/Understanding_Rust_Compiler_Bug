{"sha": "7653f2738f8f2c8a1a0bf3f60d09fb0b99205458", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzY1M2YyNzM4ZjhmMmM4YTFhMGJmM2Y2MGQwOWZiMGI5OTIwNTQ1OA==", "commit": {"author": {"name": "Dodji Seketeli", "email": "dodji@redhat.com", "date": "2009-09-25T23:23:18Z"}, "committer": {"name": "Dodji Seketeli", "email": "dodji@gcc.gnu.org", "date": "2009-09-25T23:23:18Z"}, "message": "DWARF for Template parm pack is a gnu extension.\n\ninclude/ChangeLog:\n\t* dwarf2.h (enum dwarf_tag): Rename DW_TAG_template_parameter_pack and\n\tDW_TAG_formal_parameter_pack into DW_TAG_GNU_template_parameter_pack\n\tand DW_TAG_formal_parameter_pack until DWARF 5 is out.\n\ngcc/ChangeLog:\n\t* dwarf2out.c (dwarf_tag_name, gen_generic_params_dies,\n\tgeneric_parameter_die, template_parameter_pack_die,\n\tgen_formal_parameter_die, gen_subprogram_die): Adjust after renaming\n\tDW_TAG_formal_parameter_pack and DW_TAG_template_parameter_pack into\n\tDW_TAG_GNU_formal_parameter_pack and DW_TAG_GNU_template_parameter_pack.\n\ngcc/testsuite/ChangeLog:\n\t* g++.dg/debug/dwarf2/template-func-params-4.C: Adjust after renaming\n\tDW_TAG_template_parameter_pack and DW_TAG_formal_parameter_pack\n\tinto DW_TAG_GNU_template_parameter_pack and\n\tDW_TAG_GNU_formal_parameter_pack.\n\t* g++.dg/debug/dwarf2/template-params-4.C: Likewise.\n\t* g++.dg/debug/dwarf2/template-func-params-7.C: Likewise.\n\nFrom-SVN: r152188", "tree": {"sha": "084ee79e8cbb51630db1074e49f86cafb7826925", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/084ee79e8cbb51630db1074e49f86cafb7826925"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7653f2738f8f2c8a1a0bf3f60d09fb0b99205458", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7653f2738f8f2c8a1a0bf3f60d09fb0b99205458", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7653f2738f8f2c8a1a0bf3f60d09fb0b99205458", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7653f2738f8f2c8a1a0bf3f60d09fb0b99205458/comments", "author": null, "committer": null, "parents": [{"sha": "072c87d17058df5073c7cb7e9e46809b7c5c0515", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/072c87d17058df5073c7cb7e9e46809b7c5c0515", "html_url": "https://github.com/Rust-GCC/gccrs/commit/072c87d17058df5073c7cb7e9e46809b7c5c0515"}], "stats": {"total": 82, "additions": 48, "deletions": 34}, "files": [{"sha": "733d2f5ad6773ddf8836270e08ee5ecf649d9f9f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7653f2738f8f2c8a1a0bf3f60d09fb0b99205458/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7653f2738f8f2c8a1a0bf3f60d09fb0b99205458/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7653f2738f8f2c8a1a0bf3f60d09fb0b99205458", "patch": "@@ -1,10 +1,10 @@\n-2009-09-25  Richard Henderson  <rth@redhat.com>\n+2009-09-25  Dodji Seketeli  <dodji@redhat.com>\n \n-\tPR middle-end/41469\n-\t* tree-eh.c (lower_resx): Resolve RESX with no source region to\n-\t__builtin_trap.\n-\t(gate_lower_resx): New.\n-\t(gate_lower_eh_dispatch): Rename from gate_lower_ehcontrol.\n+\t* dwarf2out.c (dwarf_tag_name, gen_generic_params_dies,\n+\tgeneric_parameter_die, template_parameter_pack_die,\n+\tgen_formal_parameter_die, gen_subprogram_die): Adjust after renaming\n+\tDW_TAG_formal_parameter_pack and DW_TAG_template_parameter_pack into\n+\tDW_TAG_GNU_formal_parameter_pack and DW_TAG_GNU_template_parameter_pack.\n \n 2009-09-25  Anatoly Sokolov  <aesok@post.ru>\n "}, {"sha": "bbb21b01d308d1f222c3019929d2aec5858bd797", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7653f2738f8f2c8a1a0bf3f60d09fb0b99205458/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7653f2738f8f2c8a1a0bf3f60d09fb0b99205458/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=7653f2738f8f2c8a1a0bf3f60d09fb0b99205458", "patch": "@@ -6340,10 +6340,10 @@ dwarf_tag_name (unsigned int tag)\n       return \"DW_TAG_condition\";\n     case DW_TAG_shared_type:\n       return \"DW_TAG_shared_type\";\n-    case DW_TAG_template_parameter_pack:\n-      return \"DW_TAG_template_parameter_pack\";\n-    case DW_TAG_formal_parameter_pack:\n-      return \"DW_TAG_formal_parameter_pack\";\n+    case DW_TAG_GNU_template_parameter_pack:\n+      return \"DW_TAG_GNU_template_parameter_pack\";\n+    case DW_TAG_GNU_formal_parameter_pack:\n+      return \"DW_TAG_GNU_formal_parameter_pack\";\n     case DW_TAG_MIPS_loop:\n       return \"DW_TAG_MIPS_loop\";\n     case DW_TAG_format_label:\n@@ -10560,7 +10560,7 @@ gen_generic_params_dies (tree t)\n       if (parm && TREE_VALUE (parm) && arg)\n \t{\n \t  /* If PARM represents a template parameter pack,\n-\t     emit a DW_TAG_template_parameter_pack DIE, followed\n+\t     emit a DW_TAG_GNU_template_parameter_pack DIE, followed\n \t     by DW_TAG_template_*_parameter DIEs for the argument\n \t     pack elements of ARG. Note that ARG would then be\n \t     an argument pack.  */\n@@ -10675,7 +10675,7 @@ generic_parameter_die (tree parm, tree arg,\n   return tmpl_die;\n }\n \n-/* Generate and return a  DW_TAG_template_parameter_pack DIE representing.\n+/* Generate and return a  DW_TAG_GNU_template_parameter_pack DIE representing.\n    PARM_PACK must be a template parameter pack. The returned DIE\n    will be child DIE of PARENT_DIE.  */\n \n@@ -10691,7 +10691,7 @@ template_parameter_pack_die (tree parm_pack,\n \t      && parm_pack\n \t      && DECL_NAME (parm_pack));\n \n-  die = new_die (DW_TAG_template_parameter_pack, parent_die, parm_pack);\n+  die = new_die (DW_TAG_GNU_template_parameter_pack, parent_die, parm_pack);\n   add_AT_string (die, DW_AT_name, IDENTIFIER_POINTER (DECL_NAME (parm_pack)));\n \n   for (j = 0; j < TREE_VEC_LENGTH (parm_pack_args); j++)\n@@ -15425,7 +15425,7 @@ gen_formal_parameter_die (tree node, tree origin, bool emit_name_p,\n   return parm_die;\n }\n \n-/* Generate and return a DW_TAG_formal_parameter_pack. Also generate\n+/* Generate and return a DW_TAG_GNU_formal_parameter_pack. Also generate\n    children DW_TAG_formal_parameter DIEs representing the arguments of the\n    parameter pack.\n \n@@ -15450,7 +15450,7 @@ gen_formal_parameter_pack_die  (tree parm_pack,\n \t      && DECL_NAME (parm_pack)\n \t      && subr_die);\n \n-  parm_pack_die = new_die (DW_TAG_formal_parameter_pack, subr_die, parm_pack);\n+  parm_pack_die = new_die (DW_TAG_GNU_formal_parameter_pack, subr_die, parm_pack);\n   add_AT_string (parm_pack_die, DW_AT_name,\n \t\t IDENTIFIER_POINTER (DECL_NAME (parm_pack)));\n \n@@ -15988,10 +15988,10 @@ gen_subprogram_die (tree decl, dw_die_ref context_die)\n \t DECL itself. This is useful because we want to emit specific DIEs for\n \t function parameter packs and those are declared as part of the\n \t generic function declaration. In that particular case,\n-\t the parameter pack yields a DW_TAG_formal_parameter_pack DIE.\n+\t the parameter pack yields a DW_TAG_GNU_formal_parameter_pack DIE.\n \t That DIE has children DIEs representing the set of arguments\n \t of the pack. Note that the set of pack arguments can be empty.\n-\t In that case, the DW_TAG_formal_parameter_pack DIE will not have any\n+\t In that case, the DW_TAG_GNU_formal_parameter_pack DIE will not have any\n \t children DIE.\n \t\n \t Otherwise, we just consider the parameters of DECL.  */"}, {"sha": "3157ff9c00fc9ae6a704f82953d23b5a6f5fddcd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7653f2738f8f2c8a1a0bf3f60d09fb0b99205458/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7653f2738f8f2c8a1a0bf3f60d09fb0b99205458/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7653f2738f8f2c8a1a0bf3f60d09fb0b99205458", "patch": "@@ -1,3 +1,12 @@\n+2009-09-25  Dodji Seketeli  <dodji@redhat.com>\n+\n+\t* g++.dg/debug/dwarf2/template-func-params-4.C: Adjust after renaming\n+\tDW_TAG_template_parameter_pack and DW_TAG_formal_parameter_pack\n+\tinto DW_TAG_GNU_template_parameter_pack and\n+\tDW_TAG_GNU_formal_parameter_pack.\n+\t* g++.dg/debug/dwarf2/template-params-4.C: Likewise.\n+\t* g++.dg/debug/dwarf2/template-func-params-7.C: Likewise.\n+\n 2009-09-25  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* gcc.dg/vect/vect.exp: Append extra parameters as separate"}, {"sha": "45b0cf89a38006f154302372503263b6aff0d519", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/template-func-params-4.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7653f2738f8f2c8a1a0bf3f60d09fb0b99205458/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftemplate-func-params-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7653f2738f8f2c8a1a0bf3f60d09fb0b99205458/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftemplate-func-params-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftemplate-func-params-4.C?ref=7653f2738f8f2c8a1a0bf3f60d09fb0b99205458", "patch": "@@ -6,10 +6,10 @@\n // count<char, long> and count<long>. In practice, only\n // count<int, char, long> is emitted, thanks to constant folding.\n // So in theory, each of the 3 instances of count yields a\n-// DW_TAG_tempalate_parameter_pack DIE, but in practise, there is only one\n-// DW_TAG_template_parameter_pack as there is only count<int, char, long>\n+// DW_TAG_GNU_template_parameter_pack DIE, but in practise, there is only one\n+// DW_TAG_GNU_template_parameter_pack as there is only count<int, char, long>\n // is emitted.\n-// { dg-final { scan-assembler-times \"DIE \\\\(0x.*?\\\\) DW_TAG_template_parameter_pack\" 1} }\n+// { dg-final { scan-assembler-times \"DIE \\\\(0x.*?\\\\) DW_TAG_GNU_template_parameter_pack\" 1} }\n // { dg-final { scan-assembler-times \"DIE \\\\(0x.*?\\\\) DW_TAG_template_type_param\" 3} }\n \n "}, {"sha": "a19217c3bb01e610723cec29e5f77c23a0ee7861", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/template-func-params-7.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7653f2738f8f2c8a1a0bf3f60d09fb0b99205458/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftemplate-func-params-7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7653f2738f8f2c8a1a0bf3f60d09fb0b99205458/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftemplate-func-params-7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftemplate-func-params-7.C?ref=7653f2738f8f2c8a1a0bf3f60d09fb0b99205458", "patch": "@@ -17,9 +17,9 @@\n \n // printf<int, char, int> and printf<char, int> have a pack expansion as\n // function parameters. There should then be 3\n-// DW_TAG_template_parameter_pack and 3 DW_TAG_formal_parameter_pack DIEs\n-// { dg-final {scan-assembler-times \"DIE \\\\(0x.*?\\\\) DW_TAG_template_parameter_pack\" 3 } }\n-// { dg-final {scan-assembler-times \"DIE \\\\(0x.*?\\\\) DW_TAG_formal_parameter_pack\" 3 } }\n+// DW_TAG_GNU_template_parameter_pack and 3 DW_TAG_GNU_formal_parameter_pack DIEs\n+// { dg-final {scan-assembler-times \"DIE \\\\(0x.*?\\\\) DW_TAG_GNU_template_parameter_pack\" 3 } }\n+// { dg-final {scan-assembler-times \"DIE \\\\(0x.*?\\\\) DW_TAG_GNU_formal_parameter_pack\" 3 } }\n // These 3 function template instantiations has a total of 3 template\n // parameters named T.\n // { dg_final {scan-assembler-times \"\\.ascii \\\"T.0\\\"\\[\\t \\]+.*?DW_AT_name\" 3 } }"}, {"sha": "09e85cb8ea238354baae9fd8c9aa0d0db53e2a2d", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/template-params-4.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7653f2738f8f2c8a1a0bf3f60d09fb0b99205458/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftemplate-params-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7653f2738f8f2c8a1a0bf3f60d09fb0b99205458/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftemplate-params-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftemplate-params-4.C?ref=7653f2738f8f2c8a1a0bf3f60d09fb0b99205458", "patch": "@@ -6,10 +6,10 @@\n // count<char, long> and count<long>. In practice, only\n // count<int, char, long> is emitted, thanks to constant folding.\n // So in theory, each of the 3 instances of count yields a\n-// DW_TAG_tempalate_parameter_pack DIE, but in practise, there is only one\n-// DW_TAG_template_parameter_pack as there is only count<int, char, long>\n+// DW_TAG_GNU_template_parameter_pack DIE, but in practise, there is only one\n+// DW_TAG_GNU_template_parameter_pack as there is only count<int, char, long>\n // is emitted.\n-// { dg-final { scan-assembler-times \"DIE \\\\(0x.*?\\\\) DW_TAG_template_parameter_pack\" 1} }\n+// { dg-final { scan-assembler-times \"DIE \\\\(0x.*?\\\\) DW_TAG_GNU_template_parameter_pack\" 1} }\n // { dg-final { scan-assembler-times \"DIE \\\\(0x.*?\\\\) DW_TAG_template_type_param\" 3} }\n \n template <typename... Args> struct count;"}, {"sha": "f99325ec351b5ad65e0a26155d3f82cadd0e3f61", "filename": "include/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7653f2738f8f2c8a1a0bf3f60d09fb0b99205458/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7653f2738f8f2c8a1a0bf3f60d09fb0b99205458/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=7653f2738f8f2c8a1a0bf3f60d09fb0b99205458", "patch": "@@ -1,3 +1,9 @@\n+2009-09-25  Dodji Seketeli  <dodji@redhat.com>\n+\n+\t* dwarf2.h (enum dwarf_tag): Rename DW_TAG_template_parameter_pack and\n+\tDW_TAG_formal_parameter_pack into DW_TAG_GNU_template_parameter_pack\n+\tand DW_TAG_formal_parameter_pack until DWARF 5 is out.\n+\n 2009-09-25  Cary Coutant  <ccoutant@google.com>\n \n \tAdd rest of new values from DWARF Version 4."}, {"sha": "385ab2256fabb0a983371c7b6b03e292bb418671", "filename": "include/dwarf2.h", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7653f2738f8f2c8a1a0bf3f60d09fb0b99205458/include%2Fdwarf2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7653f2738f8f2c8a1a0bf3f60d09fb0b99205458/include%2Fdwarf2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fdwarf2.h?ref=7653f2738f8f2c8a1a0bf3f60d09fb0b99205458", "patch": "@@ -202,14 +202,6 @@ enum dwarf_tag\n     DW_TAG_lo_user = 0x4080,\n     DW_TAG_hi_user = 0xffff,\n \n-    /* DWARF 5?  */\n-\n-    /* Template parameter pack extension, specified at\n-       http://wiki.dwarfstd.org/index.php?title=C%2B%2B0x:_Variadic_templates\n-       .  */\n-    DW_TAG_template_parameter_pack = 0x43,\n-    DW_TAG_formal_parameter_pack = 0x44,\n-\n     /* SGI/MIPS Extensions.  */\n     DW_TAG_MIPS_loop = 0x4081,\n     /* HP extensions.  See: ftp://ftp.hp.com/pub/lang/tools/WDB/wdb-4.0.tar.gz .  */\n@@ -223,6 +215,13 @@ enum dwarf_tag\n     /* Template template parameter.\n        See http://gcc.gnu.org/wiki/TemplateParmsDwarf .  */\n     DW_TAG_GNU_template_template_param = 0x4106,\n+\n+    /* Template parameter pack extension, specified at\n+       http://wiki.dwarfstd.org/index.php?title=C%2B%2B0x:_Variadic_templates\n+       The values of these two TAGS are in the DW_TAG_GNU_* space until the tags\n+       are properly part of DWARF 5.  */\n+    DW_TAG_GNU_template_parameter_pack = 0x4107,\n+    DW_TAG_GNU_formal_parameter_pack = 0x4108,\n     /* Extensions for UPC.  See: http://upc.gwu.edu/~upc.  */\n     DW_TAG_upc_shared_type = 0x8765,\n     DW_TAG_upc_strict_type = 0x8766,"}]}