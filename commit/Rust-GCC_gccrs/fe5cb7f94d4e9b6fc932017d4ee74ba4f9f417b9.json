{"sha": "fe5cb7f94d4e9b6fc932017d4ee74ba4f9f417b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU1Y2I3Zjk0ZDRlOWI2ZmM5MzIwMTdkNGVlNzRiYTRmOWY0MTdiOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-01-25T13:20:05Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-01-25T13:20:05Z"}, "message": "configure: Add workaround for buggy binutils 2.35 [PR98811]\n\nbinutils since https://sourceware.org/bugzilla/show_bug.cgi?id=25612\nchanges from March last year until the\nhttps://sourceware.org/pipermail/binutils/2020-August/112684.html\nfix in early August emits incorrect .debug_info when assembling files\nwith --gdwarf-5.  Instead of emitting proper DWARF 5 .debug_info header,\nit emits DWARF 4 .debug_info header with 5 as the dwarf version instead of\n4.  This results e.g. in libgcc.a (morestack.o) having garbage in its\n.debug_info sections and e.g. libbacktrace during pretty much all libgo\ntests fails miserably.\n\nThe following patch adds a workaround for that, don't set\nHAVE_AS_GDWARF_5_DEBUG_FLAG if readelf can't read the .debug_info back.\n\nBuilt tested on x86_64-linux against both binutils 2.35 (buggy ones) and\nlatest binutils trunk, the former with the patch now has DWARF 3\n.debug_line and DWARF 2 .debug_info in morestack.o, while the latter\nas before correct DWARF 5 .debug_line and .debug_info.\n\n2021-01-25  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR debug/98811\n\t* configure.ac (HAVE_AS_GDWARF_5_DEBUG_FLAG): Only define if\n\treadelf -wi is able to read the emitted .debug_info back.\n\t* configure: Regenerated.", "tree": {"sha": "d5a4cf979e695a871d4693dd9c8387100f93d0bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5a4cf979e695a871d4693dd9c8387100f93d0bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe5cb7f94d4e9b6fc932017d4ee74ba4f9f417b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe5cb7f94d4e9b6fc932017d4ee74ba4f9f417b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe5cb7f94d4e9b6fc932017d4ee74ba4f9f417b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe5cb7f94d4e9b6fc932017d4ee74ba4f9f417b9/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e05a117dc4b98f3ac60851608f532ba7cee7343a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e05a117dc4b98f3ac60851608f532ba7cee7343a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e05a117dc4b98f3ac60851608f532ba7cee7343a"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "9bb436ce7bd5c986c0b5f999229108c765481acf", "filename": "gcc/configure", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe5cb7f94d4e9b6fc932017d4ee74ba4f9f417b9/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe5cb7f94d4e9b6fc932017d4ee74ba4f9f417b9/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=fe5cb7f94d4e9b6fc932017d4ee74ba4f9f417b9", "patch": "@@ -29075,7 +29075,11 @@ fi\n   $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n   test $ac_status = 0; }; }\n     then\n-\tgcc_cv_as_gdwarf_5_flag=yes\n+\tif test x$gcc_cv_readelf != x \\\n+      && $gcc_cv_readelf -wi conftest.o 2>&1 \\\n+\t | grep DW_TAG_compile_unit > /dev/null 2>&1; then\n+     gcc_cv_as_gdwarf_5_flag=yes;\n+   fi\n     else\n       echo \"configure: failed program was\" >&5\n       cat conftest.s >&5"}, {"sha": "caa611933dfbb4c5ebefb5dab1ec1cce44888d8c", "filename": "gcc/configure.ac", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe5cb7f94d4e9b6fc932017d4ee74ba4f9f417b9/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe5cb7f94d4e9b6fc932017d4ee74ba4f9f417b9/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=fe5cb7f94d4e9b6fc932017d4ee74ba4f9f417b9", "patch": "@@ -5416,8 +5416,12 @@ if test x\"$insn\" != x; then\n \n  gcc_GAS_CHECK_FEATURE([--gdwarf-5 option],\n   gcc_cv_as_gdwarf_5_flag,\n-  [elf,2,36,0], [--gdwarf-5], [$insn],,\n-  [AC_DEFINE(HAVE_AS_GDWARF_5_DEBUG_FLAG, 1,\n+  [elf,2,36,0], [--gdwarf-5], [$insn],\n+  [if test x$gcc_cv_readelf != x \\\n+      && $gcc_cv_readelf -wi conftest.o 2>&1 \\\n+\t | grep DW_TAG_compile_unit > /dev/null 2>&1; then\n+     gcc_cv_as_gdwarf_5_flag=yes;\n+   fi],[AC_DEFINE(HAVE_AS_GDWARF_5_DEBUG_FLAG, 1,\n [Define if your assembler supports the --gdwarf-5 option.])])\n \n  dwarf4_debug_info_size=0x46"}]}