{"sha": "200c9e865f49255ea32d4891b746d394d156a16f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjAwYzllODY1ZjQ5MjU1ZWEzMmQ0ODkxYjc0NmQzOTRkMTU2YTE2Zg==", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2020-11-17T10:14:53Z"}, "committer": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2020-11-17T10:15:30Z"}, "message": "MingW: Don't add suffix for nul device\n\nThis patch fixes an issue where on systems that are\nHAVE_TARGET_EXECUTABLE_SUFFIX the driver calls convert_filename in order to\nadd the suffix to the filename.  However while it excludes `-` it doesn't\nexclude the null device.  This patches changes the check to exclude anything\nthat is not a file by calling not_actual_file_p instead.\n\nThis also fixes a bug in not_actual_file_p which was accidentally testing\na the global variable output_file instead of the supplied argument.  This\nhasn't been an issue so far because because not_actual_file_p was only used\non output_file till now.\n\nThis fixes the adding of an extension to the nul device which is against\nthe recommendations on msdn[0] and makes it harder for the next tool in line\nto detect it.\n\nBootstrapped Regtested on x86_64-w64-mingw32 and no issues.\nDid do a bootstrap on x86_64-pc-linux-gnu but no regtest as it's not a\nHAVE_TARGET_EXECUTABLE_SUFFIX system.\n\n[0] https://docs.microsoft.com/en-us/windows/win32/fileio/naming-a-file\n\ngcc/ChangeLog:\n\n\tPR driver/97574\n\t* gcc.c (convert_filename): Don't add suffix to things that are\n\tnot files.\n\t(not_actual_file_p): Use supplied argument.", "tree": {"sha": "b861e307d1b7ffc7baeb15318026d8bf3d7e71a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b861e307d1b7ffc7baeb15318026d8bf3d7e71a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/200c9e865f49255ea32d4891b746d394d156a16f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/200c9e865f49255ea32d4891b746d394d156a16f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/200c9e865f49255ea32d4891b746d394d156a16f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/200c9e865f49255ea32d4891b746d394d156a16f/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d8b144a2a61b007f59286731275773f6e167be1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d8b144a2a61b007f59286731275773f6e167be1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d8b144a2a61b007f59286731275773f6e167be1"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "d78b5f582b5fc934b6a2467280d7df70991320df", "filename": "gcc/gcc.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/200c9e865f49255ea32d4891b746d394d156a16f/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/200c9e865f49255ea32d4891b746d394d156a16f/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=200c9e865f49255ea32d4891b746d394d156a16f", "patch": "@@ -3659,7 +3659,7 @@ convert_filename (const char *name, int do_exe ATTRIBUTE_UNUSED,\n #if defined(HAVE_TARGET_EXECUTABLE_SUFFIX)\n   /* If there is no filetype, make it the executable suffix (which includes\n      the \".\").  But don't get confused if we have just \"-o\".  */\n-  if (! do_exe || TARGET_EXECUTABLE_SUFFIX[0] == 0 || (len == 2 && name[0] == '-'))\n+  if (! do_exe || TARGET_EXECUTABLE_SUFFIX[0] == 0 || not_actual_file_p (name))\n     return name;\n \n   for (i = len - 1; i >= 0; i--)\n@@ -10550,7 +10550,7 @@ static bool\n not_actual_file_p (const char *name)\n {\n   return (strcmp (name, \"-\") == 0\n-\t  || strcmp (output_file, HOST_BIT_BUCKET) == 0);\n+\t  || strcmp (name, HOST_BIT_BUCKET) == 0);\n }\n \n /* %:dumps spec function.  Take an optional argument that overrides"}]}