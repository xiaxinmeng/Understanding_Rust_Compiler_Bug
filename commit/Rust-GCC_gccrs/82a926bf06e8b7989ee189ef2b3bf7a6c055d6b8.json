{"sha": "82a926bf06e8b7989ee189ef2b3bf7a6c055d6b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODJhOTI2YmYwNmU4Yjc5ODllZTE4OWVmMmIzYmY3YTZjMDU1ZDZiOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-04-02T18:20:04Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-04-02T18:20:04Z"}, "message": "PR c++/64095 - auto... parameter pack.\n\n\t* parser.c (cp_parser_parameter_declaration): Handle turning autos\n\tinto packs here.\n\t(cp_parser_parameter_declaration_list): Not here.\n\nFrom-SVN: r259015", "tree": {"sha": "2315159f618963a9946fe3e5887d2ac62313f5ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2315159f618963a9946fe3e5887d2ac62313f5ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82a926bf06e8b7989ee189ef2b3bf7a6c055d6b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82a926bf06e8b7989ee189ef2b3bf7a6c055d6b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82a926bf06e8b7989ee189ef2b3bf7a6c055d6b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82a926bf06e8b7989ee189ef2b3bf7a6c055d6b8/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "078c5aff5ed83e9c237f3090e947860314838e00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/078c5aff5ed83e9c237f3090e947860314838e00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/078c5aff5ed83e9c237f3090e947860314838e00"}], "stats": {"total": 57, "additions": 37, "deletions": 20}, "files": [{"sha": "e97442a5bea78d422e133c8861a5b031e7455c83", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82a926bf06e8b7989ee189ef2b3bf7a6c055d6b8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82a926bf06e8b7989ee189ef2b3bf7a6c055d6b8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=82a926bf06e8b7989ee189ef2b3bf7a6c055d6b8", "patch": "@@ -1,3 +1,10 @@\n+2018-04-02  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/64095 - auto... parameter pack.\n+\t* parser.c (cp_parser_parameter_declaration): Handle turning autos\n+\tinto packs here.\n+\t(cp_parser_parameter_declaration_list): Not here.\n+\n 2018-03-31  Alexandre Oliva <aoliva@redhat.com>\n \n \tPR c++/85027"}, {"sha": "d526a4eb3652e9e3e399c69bea0b8728bf3fa17d", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 21, "deletions": 19, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82a926bf06e8b7989ee189ef2b3bf7a6c055d6b8/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82a926bf06e8b7989ee189ef2b3bf7a6c055d6b8/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=82a926bf06e8b7989ee189ef2b3bf7a6c055d6b8", "patch": "@@ -21320,9 +21320,6 @@ cp_parser_parameter_declaration_list (cp_parser* parser, bool *is_error)\n       cp_parameter_declarator *parameter;\n       tree decl = error_mark_node;\n       bool parenthesized_p = false;\n-      int template_parm_idx = (function_being_declared_is_template_p (parser)?\n-\t\t\t       TREE_VEC_LENGTH (INNERMOST_TEMPLATE_PARMS\n-\t\t\t\t\t\t(current_template_parms)) : 0);\n \n       /* Parse the parameter.  */\n       parameter\n@@ -21336,22 +21333,6 @@ cp_parser_parameter_declaration_list (cp_parser* parser, bool *is_error)\n \n       if (parameter)\n \t{\n-\t  /* If a function parameter pack was specified and an implicit template\n-\t     parameter was introduced during cp_parser_parameter_declaration,\n-\t     change any implicit parameters introduced into packs.  */\n-\t  if (parser->implicit_template_parms\n-\t      && parameter->declarator\n-\t      && parameter->declarator->parameter_pack_p)\n-\t    {\n-\t      int latest_template_parm_idx = TREE_VEC_LENGTH\n-\t\t(INNERMOST_TEMPLATE_PARMS (current_template_parms));\n-\n-\t      if (latest_template_parm_idx != template_parm_idx)\n-\t\tparameter->decl_specifiers.type = convert_generic_types_to_packs\n-\t\t  (parameter->decl_specifiers.type,\n-\t\t   template_parm_idx, latest_template_parm_idx);\n-\t    }\n-\n \t  decl = grokdeclarator (parameter->declarator,\n \t\t\t\t &parameter->decl_specifiers,\n \t\t\t\t PARM,\n@@ -21511,6 +21492,10 @@ cp_parser_parameter_declaration (cp_parser *parser,\n   parser->type_definition_forbidden_message\n     = G_(\"types may not be defined in parameter types\");\n \n+  int template_parm_idx = (function_being_declared_is_template_p (parser) ?\n+\t\t\t   TREE_VEC_LENGTH (INNERMOST_TEMPLATE_PARMS\n+\t\t\t\t\t    (current_template_parms)) : 0);\n+\n   /* Parse the declaration-specifiers.  */\n   cp_token *decl_spec_token_start = cp_lexer_peek_token (parser->lexer);\n   cp_parser_decl_specifier_seq (parser,\n@@ -21600,6 +21585,23 @@ cp_parser_parameter_declaration (cp_parser *parser,\n      parameter pack expansion expression. Otherwise, leave the ellipsis\n      for a C-style variadic function. */\n   token = cp_lexer_peek_token (parser->lexer);\n+\n+  /* If a function parameter pack was specified and an implicit template\n+     parameter was introduced during cp_parser_parameter_declaration,\n+     change any implicit parameters introduced into packs.  */\n+  if (parser->implicit_template_parms\n+      && (token->type == CPP_ELLIPSIS\n+\t  || (declarator && declarator->parameter_pack_p)))\n+    {\n+      int latest_template_parm_idx = TREE_VEC_LENGTH\n+\t(INNERMOST_TEMPLATE_PARMS (current_template_parms));\n+\n+      if (latest_template_parm_idx != template_parm_idx)\n+\tdecl_specifiers.type = convert_generic_types_to_packs\n+\t  (decl_specifiers.type,\n+\t   template_parm_idx, latest_template_parm_idx);\n+    }\n+\n   if (cp_lexer_next_token_is (parser->lexer, CPP_ELLIPSIS))\n     {\n       tree type = decl_specifiers.type;"}, {"sha": "a92922534539212a17213354bc89bc717a03aaa9", "filename": "gcc/testsuite/g++.dg/cpp1y/lambda-generic-variadic16.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82a926bf06e8b7989ee189ef2b3bf7a6c055d6b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-variadic16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82a926bf06e8b7989ee189ef2b3bf7a6c055d6b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-variadic16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-variadic16.C?ref=82a926bf06e8b7989ee189ef2b3bf7a6c055d6b8", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/64095\n+// { dg-do compile { target c++14 } }\n+\n+void f()\n+{\n+  [](auto...){}();\n+  [](auto&&...){}();\n+}"}, {"sha": "8f135358465beb97eb76b55384b26aa6e8b4a869", "filename": "gcc/testsuite/g++.dg/cpp1y/lambda-mangle-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82a926bf06e8b7989ee189ef2b3bf7a6c055d6b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-mangle-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82a926bf06e8b7989ee189ef2b3bf7a6c055d6b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-mangle-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-mangle-1.C?ref=82a926bf06e8b7989ee189ef2b3bf7a6c055d6b8", "patch": "@@ -85,4 +85,4 @@ void Baz ()\n // { dg-final { scan-assembler \"_Z3eatIZ3FoovEUlPT_PT0_E4_Z3FoovEUlS1_S3_E5_EvRS0_RS2_:\" } }\n // { dg-final { scan-assembler \"_Z3eatIPiZ3BarIsEvvEUlPsPfS3_E_EvRT_RT0_:\" } }\n // { dg-final { scan-assembler \"_Z3eatIPiZ3BarIsEvvEUlPsPT_PT0_E0_EvRS3_RS5_:\" } }\n-// { dg-final { scan-assembler \"_Z3eatIPiZ3BarIsEvvEUlPsPT_zE1_EvRS3_RT0_:\" } }\n+// { dg-final { scan-assembler \"_Z3eatIPiZ3BarIsEvvEUlPsDpPT_E1_EvRT_RT0_:\" } }"}]}