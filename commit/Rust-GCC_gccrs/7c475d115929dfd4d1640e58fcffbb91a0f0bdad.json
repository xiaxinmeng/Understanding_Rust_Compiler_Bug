{"sha": "7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2M0NzVkMTE1OTI5ZGZkNGQxNjQwZTU4ZmNmZmJiOTFhMGYwYmRhZA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2010-11-30T11:41:24Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2010-11-30T11:41:24Z"}, "message": "diagnostic-core.h: Include bversion.h.\n\n\t* diagnostic-core.h: Include bversion.h.\n\t* toplev.h: Don't include input.h or bversion.h.\n\t(parse_optimize_options): Don't declare here.\n\t* alias.c, auto-inc-dec.c, c-aux-info.c, c-convert.c, c-parser.c,\n\tcaller-save.c, cfg.c, cfganal.c, cfgbuild.c, cfgcleanup.c,\n\tcombine-stack-adj.c, config/arm/pe.c, config/darwin-c.c,\n\tconfig/host-darwin.c, config/i386/host-cygwin.c,\n\tconfig/i386/host-mingw32.c, config/i386/msformat-c.c,\n\tconfig/i386/netware.c, config/i386/nwld.c,\n\tconfig/i386/winnt-cxx.c, config/i386/winnt-stubs.c,\n\tconfig/ia64/ia64-c.c, config/m32c/m32c-pragma.c,\n\tconfig/mep/mep-pragma.c, config/microblaze/microblaze-c.c,\n\tconfig/rs6000/host-darwin.c, config/rs6000/rs6000-c.c,\n\tconfig/score/score3.c, config/score/score7.c,\n\tconfig/sh/symbian-base.c, config/sh/symbian-c.c,\n\tconfig/sh/symbian-cxx.c, config/sol2-c.c, config/sol2.c,\n\tconfig/v850/v850-c.c, config/vxworks.c, convert.c, cppbuiltin.c,\n\tcselib.c, dbgcnt.c, ddg.c, dfp.c, dominance.c, emit-rtl.c,\n\tfixed-value.c, fwprop.c, ggc-common.c, gimple.c, gimplify.c,\n\tgraphite-blocking.c, graphite-clast-to-gimple.c,\n\tgraphite-dependences.c, graphite-flattening.c,\n\tgraphite-interchange.c, graphite-poly.c,\n\tgraphite-scop-detection.c, graphite.c, haifa-sched.c,\n\timplicit-zee.c, integrate.c, ipa-pure-const.c, ipa-reference.c,\n\tira-build.c, ira-conflicts.c, ira-costs.c, ira-lives.c, jump.c,\n\tlists.c, loop-doloop.c, loop-iv.c, lto-cgraph.c, lto-compress.c,\n\tlto-opts.c, lto-section-in.c, lto-section-out.c,\n\tlto-streamer-out.c, lto-symtab.c, modulo-sched.c, optabs.c,\n\tparams.c, postreload-gcse.c, postreload.c, predict.c, profile.c,\n\tregcprop.c, reginfo.c, regmove.c, reorg.c, resource.c,\n\tsched-deps.c, sched-ebb.c, sched-rgn.c, sdbout.c,\n\tsel-sched-dump.c, sel-sched-ir.c, sese.c, stmt.c, targhooks.c,\n\ttree-cfgcleanup.c, tree-mudflap.c, tree-nomudflap.c,\n\ttree-object-size.c, tree-outof-ssa.c, tree-phinodes.c,\n\ttree-profile.c, tree-sra.c, tree-ssa-ccp.c, tree-ssa-coalesce.c,\n\ttree-ssa-live.c, tree-ssa-loop-prefetch.c, tree-ssa-loop.c,\n\ttree-ssa-operands.c, tree-ssa-structalias.c, tree-ssa-uninit.c,\n\ttree-vect-patterns.c, value-prof.c, var-tracking.c, web.c: Don't\n\tinclude toplev.h.\n\t* Makefile.in (TOPLEV_H): Remove.  All uses changed to use\n\ttoplev.h.  Dependencies for above files and c-family files changed\n\tto remove $(TOPLEV_H) or toplev.h.\n\t(C_TREE_H): Don't include $(TOPLEV_H).\n\t(DIAGNOSTIC_CORE_H): Use $(INPUT_H) instead of input.h.  Add\n\tbversion.h.\n\t* config/arm/t-pe, config/arm/t-wince-pe, config/i386/t-cygming,\n\tconfig/ia64/t-ia64, config/mep/t-mep, config/score/t-score-elf,\n\tconfig/t-darwin, config/t-sol2,\n\tconfig/t-vxworks, config/v850/t-v850, config/v850/t-v850e:\n\tDependencies for above files changed to remove $(TOPLEV_H) or\n\ttoplev.h.\n\nc-family:\n\t* c-common.h (parse_optimize_options): Declare.\n\t* c-cppbuiltin.c, c-format.c, c-gimplify.c, c-lex.c, c-omp.c,\n\tc-pch.c, c-pragma.c, c-semantics.c: Don't include toplev.h.\n\ncp:\n\t* cp-gimplify.c, cp-lang.c, cvt.c, cxx-pretty-print.c, error.c,\n\texcept.c, expr.c, friend.c, init.c, mangle.c, name-lookup.c,\n\toptimize.c, parser.c, rtti.c, tree.c, typeck2.c: Don't include\n\ttoplev.h.\n\t* Make-lang.in: Dependencies for above files changed to remove\n\ttoplev.h.\n\njava:\n\t* expr.c, lang.c, mangle.c, mangle_name.c, typeck.c,\n\tverify-glue.c: Don't include toplev.h.\n\t* Make-lang.in: Dependencies for above files changed to remove\n\ttoplev.h.\n\nlto:\n\t* Make-lang.in (lto/lto-object.o): Depend on toplev.h instead of\n\t$(TOPLEV_H).\n\nFrom-SVN: r167293", "tree": {"sha": "c8d70eb4a3eba10f4ab7d705cc7eab3409ba7fc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8d70eb4a3eba10f4ab7d705cc7eab3409ba7fc7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42113d6b9d662597e5e1569d2744d3ae373609eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42113d6b9d662597e5e1569d2744d3ae373609eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42113d6b9d662597e5e1569d2744d3ae373609eb"}], "stats": {"total": 803, "additions": 369, "deletions": 434}, "files": [{"sha": "a6099b82c73841972cf305c8ffa26ada28c1c388", "filename": "gcc/ChangeLog", "status": "modified", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,3 +1,57 @@\n+2010-11-30  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* diagnostic-core.h: Include bversion.h.\n+\t* toplev.h: Don't include input.h or bversion.h.\n+\t(parse_optimize_options): Don't declare here.\n+\t* alias.c, auto-inc-dec.c, c-aux-info.c, c-convert.c, c-parser.c,\n+\tcaller-save.c, cfg.c, cfganal.c, cfgbuild.c, cfgcleanup.c,\n+\tcombine-stack-adj.c, config/arm/pe.c, config/darwin-c.c,\n+\tconfig/host-darwin.c, config/i386/host-cygwin.c,\n+\tconfig/i386/host-mingw32.c, config/i386/msformat-c.c,\n+\tconfig/i386/netware.c, config/i386/nwld.c,\n+\tconfig/i386/winnt-cxx.c, config/i386/winnt-stubs.c,\n+\tconfig/ia64/ia64-c.c, config/m32c/m32c-pragma.c,\n+\tconfig/mep/mep-pragma.c, config/microblaze/microblaze-c.c,\n+\tconfig/rs6000/host-darwin.c, config/rs6000/rs6000-c.c,\n+\tconfig/score/score3.c, config/score/score7.c,\n+\tconfig/sh/symbian-base.c, config/sh/symbian-c.c,\n+\tconfig/sh/symbian-cxx.c, config/sol2-c.c, config/sol2.c,\n+\tconfig/v850/v850-c.c, config/vxworks.c, convert.c, cppbuiltin.c,\n+\tcselib.c, dbgcnt.c, ddg.c, dfp.c, dominance.c, emit-rtl.c,\n+\tfixed-value.c, fwprop.c, ggc-common.c, gimple.c, gimplify.c,\n+\tgraphite-blocking.c, graphite-clast-to-gimple.c,\n+\tgraphite-dependences.c, graphite-flattening.c,\n+\tgraphite-interchange.c, graphite-poly.c,\n+\tgraphite-scop-detection.c, graphite.c, haifa-sched.c,\n+\timplicit-zee.c, integrate.c, ipa-pure-const.c, ipa-reference.c,\n+\tira-build.c, ira-conflicts.c, ira-costs.c, ira-lives.c, jump.c,\n+\tlists.c, loop-doloop.c, loop-iv.c, lto-cgraph.c, lto-compress.c,\n+\tlto-opts.c, lto-section-in.c, lto-section-out.c,\n+\tlto-streamer-out.c, lto-symtab.c, modulo-sched.c, optabs.c,\n+\tparams.c, postreload-gcse.c, postreload.c, predict.c, profile.c,\n+\tregcprop.c, reginfo.c, regmove.c, reorg.c, resource.c,\n+\tsched-deps.c, sched-ebb.c, sched-rgn.c, sdbout.c,\n+\tsel-sched-dump.c, sel-sched-ir.c, sese.c, stmt.c, targhooks.c,\n+\ttree-cfgcleanup.c, tree-mudflap.c, tree-nomudflap.c,\n+\ttree-object-size.c, tree-outof-ssa.c, tree-phinodes.c,\n+\ttree-profile.c, tree-sra.c, tree-ssa-ccp.c, tree-ssa-coalesce.c,\n+\ttree-ssa-live.c, tree-ssa-loop-prefetch.c, tree-ssa-loop.c,\n+\ttree-ssa-operands.c, tree-ssa-structalias.c, tree-ssa-uninit.c,\n+\ttree-vect-patterns.c, value-prof.c, var-tracking.c, web.c: Don't\n+\tinclude toplev.h.\n+\t* Makefile.in (TOPLEV_H): Remove.  All uses changed to use\n+\ttoplev.h.  Dependencies for above files and c-family files changed\n+\tto remove $(TOPLEV_H) or toplev.h.\n+\t(C_TREE_H): Don't include $(TOPLEV_H).\n+\t(DIAGNOSTIC_CORE_H): Use $(INPUT_H) instead of input.h.  Add\n+\tbversion.h.\n+\t* config/arm/t-pe, config/arm/t-wince-pe, config/i386/t-cygming,\n+\tconfig/ia64/t-ia64, config/mep/t-mep, config/score/t-score-elf,\n+\tconfig/t-darwin, config/t-sol2,\n+\tconfig/t-vxworks, config/v850/t-v850, config/v850/t-v850e:\n+\tDependencies for above files changed to remove $(TOPLEV_H) or\n+\ttoplev.h.\n+\n 2010-11-30  Richard Guenther  <rguenther@suse.de>\n \n \tPR lto/44986"}, {"sha": "b2f2dac3372b9b09acc4869ab74ddc75e80bd398", "filename": "gcc/Makefile.in", "status": "modified", "additions": 189, "deletions": 190, "changes": 379, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -873,7 +873,6 @@ endif\n # Shorthand variables for dependency lists.\n VEC_H = vec.h statistics.h\n EXCEPT_H = except.h $(HASHTAB_H) vecprim.h vecir.h\n-TOPLEV_H = toplev.h $(INPUT_H) bversion.h $(DIAGNOSTIC_CORE_H)\n TARGET_H = $(TM_H) target.h target.def insn-modes.h\n MACHMODE_H = machmode.h mode-classes.def insn-modes.h\n HOOKS_H = hooks.h $(MACHMODE_H)\n@@ -938,7 +937,7 @@ INSN_ADDR_H = $(srcdir)/insn-addr.h vecprim.h\n C_COMMON_H = c-family/c-common.h c-family/c-common.def \\\n \t$(SPLAY_TREE_H) $(CPPLIB_H) $(GGC_H) $(DIAGNOSTIC_CORE_H)\n C_PRAGMA_H = c-family/c-pragma.h $(CPPLIB_H)\n-C_TREE_H = c-tree.h $(C_COMMON_H) $(TOPLEV_H) $(DIAGNOSTIC_H)\n+C_TREE_H = c-tree.h $(C_COMMON_H) $(DIAGNOSTIC_H)\n SYSTEM_H = system.h hwint.h $(srcdir)/../include/libiberty.h \\\n \t$(srcdir)/../include/safe-ctype.h $(srcdir)/../include/filenames.h\n PREDICT_H = predict.h predict.def\n@@ -963,7 +962,7 @@ TREE_SSA_LIVE_H = tree-ssa-live.h $(PARTITION_H) vecprim.h\n TREE_VECTORIZER_H = tree-vectorizer.h $(TREE_DATA_REF_H)\n SSAEXPAND_H = ssaexpand.h $(TREE_SSA_LIVE_H)\n PRETTY_PRINT_H = pretty-print.h $(INPUT_H) $(OBSTACK_H)\n-DIAGNOSTIC_CORE_H = diagnostic-core.h input.h diagnostic.def\n+DIAGNOSTIC_CORE_H = diagnostic-core.h $(INPUT_H) bversion.h diagnostic.def\n DIAGNOSTIC_H = diagnostic.h $(DIAGNOSTIC_CORE_H) $(PRETTY_PRINT_H)\n C_PRETTY_PRINT_H = c-family/c-pretty-print.h $(PRETTY_PRINT_H) \\\n \t$(C_COMMON_H) $(TREE_H)\n@@ -2012,15 +2011,15 @@ gcc.srcextra: gengtype-lex.c\n \n # C language specific files.\n c-aux-info.o : c-aux-info.c  $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-\t$(C_TREE_H) $(TREE_H) $(FLAGS_H) $(TOPLEV_H)\n+\t$(C_TREE_H) $(TREE_H) $(FLAGS_H)\n \n c-convert.o : c-convert.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-\t$(TREE_H) $(C_TREE_H) $(FLAGS_H) $(TOPLEV_H) $(C_COMMON_H) convert.h \\\n+\t$(TREE_H) $(C_TREE_H) $(FLAGS_H) $(C_COMMON_H) convert.h \\\n \tlanghooks.h $(TARGET_H)\n \n c-decl.o : c-decl.c c-lang.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n \t$(TREE_H) $(C_TREE_H) $(GGC_H) $(TARGET_H) $(FLAGS_H) $(FUNCTION_H) \\\n-\toutput.h debug.h $(TOPLEV_H) intl.h $(TM_P_H) $(TREE_INLINE_H) \\\n+\toutput.h debug.h toplev.h intl.h $(TM_P_H) $(TREE_INLINE_H) \\\n \t$(TIMEVAR_H) $(OPTS_H) $(C_PRAGMA_H) gt-c-decl.h $(CGRAPH_H) \\\n \t$(HASHTAB_H) $(LIBFUNCS_H) $(EXCEPT_H) $(LANGHOOKS_DEF_H) \\\n \t$(TREE_DUMP_H) $(C_COMMON_H) $(CPPLIB_H) $(DIAGNOSTIC_CORE_H) \\\n@@ -2044,17 +2043,17 @@ c-objc-common.o : c-objc-common.c c-objc-common.h \\\n \n c-parser.o : c-parser.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n \t$(TM_H) $(TREE_H) $(C_TREE_H) $(C_COMMON_H) $(C_PRAGMA_H) $(CPPLIB_H) \\\n-\t$(GGC_H) $(TIMEVAR_H) $(INPUT_H) $(FLAGS_H) $(TOPLEV_H) output.h \\\n+\t$(GGC_H) $(TIMEVAR_H) $(INPUT_H) $(FLAGS_H) output.h \\\n \tgt-c-parser.h langhooks.h \\\n \t$(VEC_H) $(TARGET_H) $(CGRAPH_H) $(PLUGIN_H)\n \n c-typeck.o : c-typeck.c c-lang.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n \t$(TREE_H) $(C_TREE_H) $(TARGET_H) $(FLAGS_H) intl.h output.h $(EXPR_H) \\\n-\t$(TOPLEV_H) langhooks.h tree-iterator.h $(BITMAP_H) $(GIMPLE_H)\n+\ttoplev.h langhooks.h tree-iterator.h $(BITMAP_H) $(GIMPLE_H)\n \n \n \n-graph.o: graph.c $(SYSTEM_H) coretypes.h $(TM_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(FLAGS_H) output.h \\\n+graph.o: graph.c $(SYSTEM_H) coretypes.h $(TM_H) toplev.h $(DIAGNOSTIC_CORE_H) $(FLAGS_H) output.h \\\n     $(RTL_H) $(FUNCTION_H) hard-reg-set.h $(BASIC_BLOCK_H) graph.h $(OBSTACK_H) \\\n     $(CONFIG_H) $(EMIT_RTL_H)\n \n@@ -2092,7 +2091,7 @@ lto-wrapper.o: lto-wrapper.c $(CONFIG_H) $(SYSTEM_H) coretypes.h intl.h \\\n # Files used by all variants of C.\n c-family/c-common.o : c-family/c-common.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n \t$(TM_H) $(TREE_H) \\\n-\t$(OBSTACK_H) $(C_COMMON_H) $(FLAGS_H) $(TOPLEV_H) output.h $(C_PRAGMA_H) \\\n+\t$(OBSTACK_H) $(C_COMMON_H) $(FLAGS_H) toplev.h output.h $(C_PRAGMA_H) \\\n \t$(GGC_H) builtin-types.def builtin-attrs.def \\\n \t$(DIAGNOSTIC_H) langhooks.h \\\n \t$(TARGET_H) tree-iterator.h langhooks.h tree-mudflap.h \\\n@@ -2103,7 +2102,7 @@ c-family/c-common.o : c-family/c-common.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n \n c-family/c-cppbuiltin.o : c-family/c-cppbuiltin.c $(CONFIG_H) $(SYSTEM_H) \\\n \tcoretypes.h $(TM_H) $(TREE_H) version.h $(C_COMMON_H) $(C_PRAGMA_H) \\\n-\t$(FLAGS_H) $(TOPLEV_H) output.h $(TREE_H) $(TARGET_H) \\\n+\t$(FLAGS_H) output.h $(TREE_H) $(TARGET_H) \\\n \t$(TM_P_H) debug.h $(CPP_ID_DATA_H) cppbuiltin.h\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n \t\t$< $(OUTPUT_OPTION)\n@@ -2113,32 +2112,32 @@ c-family/c-dump.o : c-family/c-dump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n \n c-family/c-format.o : c-family/c-format.c c-family/c-format.h \\\n \t$(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) langhooks.h \\\n-\t$(C_COMMON_H) $(FLAGS_H) $(TOPLEV_H) intl.h \\\n+\t$(C_COMMON_H) $(FLAGS_H) intl.h \\\n \t$(DIAGNOSTIC_CORE_H) alloc-pool.h\n \n c-family/c-gimplify.o : c-family/c-gimplify.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n \t$(C_COMMON_H) $(DIAGNOSTIC_CORE_H) $(GIMPLE_H) \\\n-\t$(FLAGS_H) langhooks.h $(TOPLEV_H) $(LANGHOOKS_DEF_H) \\\n+\t$(FLAGS_H) langhooks.h $(LANGHOOKS_DEF_H) \\\n \t$(TM_H) coretypes.h $(C_PRETTY_PRINT_H) $(CGRAPH_H) $(BASIC_BLOCK_H) \\\n \thard-reg-set.h $(TREE_DUMP_H) $(TREE_INLINE_H)\n \n c-family/c-lex.o : c-family/c-lex.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n \t$(TM_H) $(TREE_H) $(FIXED_VALUE_H) debug.h $(C_COMMON_H) $(SPLAY_TREE_H) \\\n-\t$(C_PRAGMA_H) $(INPUT_H) intl.h $(FLAGS_H) $(TOPLEV_H) output.h \\\n+\t$(C_PRAGMA_H) $(INPUT_H) intl.h $(FLAGS_H) output.h \\\n \t$(CPPLIB_H) $(TARGET_H) $(TIMEVAR_H)\n \n c-family/c-omp.o : c-family/c-omp.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-\t$(TREE_H) $(C_COMMON_H) $(TOPLEV_H) $(GIMPLE_H) langhooks.h\n+\t$(TREE_H) $(C_COMMON_H) $(GIMPLE_H) langhooks.h\n \n c-family/c-opts.o : c-family/c-opts.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-        $(TREE_H) $(C_PRAGMA_H) $(FLAGS_H) $(TOPLEV_H) langhooks.h \\\n+        $(TREE_H) $(C_PRAGMA_H) $(FLAGS_H) toplev.h langhooks.h \\\n         $(DIAGNOSTIC_H) intl.h debug.h $(C_COMMON_H)\t\\\n         $(OPTS_H) $(OPTIONS_H) $(MKDEPS_H) incpath.h cppdefault.h\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n \t\t$< $(OUTPUT_OPTION) @TARGET_SYSTEM_ROOT_DEFINE@\n \n c-family/c-pch.o : c-family/c-pch.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-\t$(CPPLIB_H) $(TREE_H) $(C_COMMON_H) output.h $(TOPLEV_H) $(C_PRAGMA_H) \\\n+\t$(CPPLIB_H) $(TREE_H) $(C_COMMON_H) output.h $(C_PRAGMA_H) \\\n \t$(GGC_H) debug.h langhooks.h $(FLAGS_H) hosthooks.h version.h \\\n \t$(TARGET_H) $(OPTS_H) $(TIMEVAR_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n@@ -2150,7 +2149,7 @@ c-family/c-ppoutput.o : c-family/c-ppoutput.c $(CONFIG_H) $(SYSTEM_H) \\\n \t$(C_PRAGMA_H)\n \n c-family/c-pragma.o: c-family/c-pragma.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-\t$(TM_H) $(TREE_H) $(FUNCTION_H) $(C_PRAGMA_H) $(TOPLEV_H) output.h \\\n+\t$(TM_H) $(TREE_H) $(FUNCTION_H) $(C_PRAGMA_H) output.h \\\n \t$(TM_P_H) $(C_COMMON_H) $(TARGET_H) $(CPPLIB_H) $(FLAGS_H) \\\n \t$(DIAGNOSTIC_H) $(OPTS_H) $(PLUGINS_H) \\\n \tgt-c-family-c-pragma.h\n@@ -2160,7 +2159,7 @@ c-family/c-pretty-print.o : c-family/c-pretty-print.c $(C_PRETTY_PRINT_H) \\\n \t$(DIAGNOSTIC_H) tree-iterator.h intl.h tree-pretty-print.h\n \n c-family/c-semantics.o : c-family/c-semantics.c $(CONFIG_H) $(SYSTEM_H) \\\n-\tcoretypes.h $(TM_H) $(TREE_H) $(FLAGS_H) $(TOPLEV_H) output.h \\\n+\tcoretypes.h $(TM_H) $(TREE_H) $(FLAGS_H) output.h \\\n \t$(C_COMMON_H) $(FUNCTION_H) langhooks.h $(SPLAY_TREE_H) $(TIMEVAR_H) \\\n \ttree-iterator.h\n \n@@ -2175,7 +2174,7 @@ c-family/stub-objc.o : c-family/stub-objc.c $(CONFIG_H) $(SYSTEM_H) \\\n # Files used by all variants of C and some other languages.\n \n attribs.o : attribs.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-\t$(FLAGS_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) output.h $(GGC_H) $(TM_P_H) \\\n+\t$(FLAGS_H) toplev.h $(DIAGNOSTIC_CORE_H) output.h $(GGC_H) $(TM_P_H) \\\n \t$(TARGET_H) langhooks.h $(CPPLIB_H) $(PLUGIN_H)\n \n incpath.o: incpath.c incpath.h $(CONFIG_H) $(SYSTEM_H) $(CPPLIB_H) \\\n@@ -2273,15 +2272,15 @@ gtype-desc.o: gtype-desc.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n \ttarget-globals.h\n \n ggc-common.o: ggc-common.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t\t\\\n-\t$(GGC_H) $(HASHTAB_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(PARAMS_H) hosthooks.h\t\\\n+\t$(GGC_H) $(HASHTAB_H) $(DIAGNOSTIC_CORE_H) $(PARAMS_H) hosthooks.h\t\\\n \t$(HOSTHOOKS_DEF_H) $(VEC_H) $(PLUGIN_H) $(GGC_INTERNAL_H) $(TIMEVAR_H)\n \n ggc-page.o: ggc-page.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n-\t$(FLAGS_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(GGC_H) $(TIMEVAR_H) $(TM_P_H) $(PARAMS_H) \\\n+\t$(FLAGS_H) toplev.h $(DIAGNOSTIC_CORE_H) $(GGC_H) $(TIMEVAR_H) $(TM_P_H) $(PARAMS_H) \\\n \t$(TREE_FLOW_H) $(PLUGIN_H) $(GGC_INTERNAL_H)\n \n ggc-zone.o: ggc-zone.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-\t$(TREE_H) $(FLAGS_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(GGC_H) $(TIMEVAR_H) $(TM_P_H) \\\n+\t$(TREE_H) $(FLAGS_H) toplev.h $(DIAGNOSTIC_CORE_H) $(GGC_H) $(TIMEVAR_H) $(TM_P_H) \\\n \t$(PARAMS_H) $(BITMAP_H) $(PLUGIN_H) $(GGC_INTERNAL_H)\n \n ggc-none.o: ggc-none.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(GGC_H) \\\n@@ -2291,68 +2290,68 @@ stringpool.o: stringpool.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n \t$(TREE_H) $(GGC_H) $(GGC_INTERNAL_H) gt-stringpool.h $(CPPLIB_H) $(SYMTAB_H)\n \n convert.o: convert.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-   $(FLAGS_H) convert.h $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) langhooks.h\n+   $(FLAGS_H) convert.h $(DIAGNOSTIC_CORE_H) langhooks.h\n \n double-int.o: double-int.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-\t$(TOPLEV_H) $(TREE_H)\n+\ttoplev.h $(TREE_H)\n \n # lto-compress.o needs $(ZLIBINC) added to the include flags.\n lto-compress.o: lto-compress.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n \t$(TREE_H) langhooks.h $(LTO_HEADER_H) $(LTO_SECTION_H) \\\n-\tlto-compress.h $(DIAGNOSTIC_CORE_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H)\n+\tlto-compress.h $(DIAGNOSTIC_CORE_H) $(DIAGNOSTIC_CORE_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(ZLIBINC) $< $(OUTPUT_OPTION)\n \n lto-cgraph.o: lto-cgraph.c $(CONFIG_H) $(SYSTEM_H) coretypes.h   \\\n-   $(TM_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(EXPR_H) $(FLAGS_H) $(PARAMS_H) input.h \\\n+   $(TM_H) $(DIAGNOSTIC_CORE_H) $(EXPR_H) $(FLAGS_H) $(PARAMS_H) input.h \\\n    $(HASHTAB_H) langhooks.h $(BASIC_BLOCK_H) \\\n    $(TREE_FLOW_H) $(CGRAPH_H) $(FUNCTION_H) $(GGC_H) $(DIAGNOSTIC_CORE_H) \\\n    $(EXCEPT_H) $(TIMEVAR_H) output.h pointer-set.h $(LTO_STREAMER_H) $(GCOV_IO_H)\n lto-streamer-in.o: lto-streamer-in.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(EXPR_H) $(FLAGS_H) $(PARAMS_H) input.h \\\n+   $(TM_H) toplev.h $(DIAGNOSTIC_CORE_H) $(EXPR_H) $(FLAGS_H) $(PARAMS_H) input.h \\\n    $(HASHTAB_H) $(BASIC_BLOCK_H) $(TREE_FLOW_H) $(TREE_PASS_H) $(CGRAPH_H) \\\n    $(FUNCTION_H) $(GGC_H) $(DIAGNOSTIC_H) $(LIBFUNCS_H) $(EXCEPT_H) debug.h \\\n    $(TIMEVAR_H) output.h $(IPA_UTILS_H) $(LTO_STREAMER_H) toplev.h\n lto-streamer-out.o : lto-streamer-out.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(TREE_H) $(EXPR_H) $(FLAGS_H) $(PARAMS_H) input.h \\\n+   $(TM_H) $(DIAGNOSTIC_CORE_H) $(TREE_H) $(EXPR_H) $(FLAGS_H) $(PARAMS_H) input.h \\\n    $(HASHTAB_H) $(BASIC_BLOCK_H) tree-iterator.h \\\n    $(TREE_FLOW_H) $(TREE_PASS_H) $(CGRAPH_H) $(FUNCTION_H) $(GGC_H) \\\n-   $(DIAGNOSTIC_CORE_H) $(EXCEPT_H) $(LTO_STREAMER_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H)\n+   $(DIAGNOSTIC_CORE_H) $(EXCEPT_H) $(LTO_STREAMER_H) $(DIAGNOSTIC_CORE_H)\n lto-section-in.o: lto-section-in.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(EXPR_H) $(FLAGS_H) $(PARAMS_H) input.h \\\n+   $(DIAGNOSTIC_CORE_H) $(EXPR_H) $(FLAGS_H) $(PARAMS_H) input.h \\\n    $(HASHTAB_H) $(BASIC_BLOCK_H) $(TREE_FLOW_H) $(CGRAPH_H) $(FUNCTION_H) \\\n    $(GGC_H) $(DIAGNOSTIC_CORE_H) $(EXCEPT_H) $(TIMEVAR_H) output.h \\\n    $(LTO_STREAMER_H) lto-compress.h\n lto-section-out.o : lto-section-out.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(TREE_H) $(EXPR_H) $(PARAMS_H) input.h \\\n+   $(TM_H) $(DIAGNOSTIC_CORE_H) $(TREE_H) $(EXPR_H) $(PARAMS_H) input.h \\\n    $(HASHTAB_H) $(BASIC_BLOCK_H) $(TREE_FLOW_H) $(TREE_PASS_H) \\\n    $(CGRAPH_H) $(FUNCTION_H) $(GGC_H) $(EXCEPT_H) pointer-set.h \\\n    $(BITMAP_H) langhooks.h $(LTO_STREAMER_H) lto-compress.h\n lto-symtab.o: lto-symtab.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   toplev.h $(TREE_H) $(GIMPLE_H) $(GGC_H) $(LAMBDA_H) $(HASHTAB_H) \\\n+   $(TREE_H) $(GIMPLE_H) $(GGC_H) $(LAMBDA_H) $(HASHTAB_H) \\\n    $(LTO_STREAMER_H) $(LINKER_PLUGIN_API_H) gt-lto-symtab.h\n lto-opts.o: lto-opts.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TREE_H) \\\n    $(HASHTAB_H) $(GGC_H) $(BITMAP_H) $(FLAGS_H) $(OPTS_H) $(OPTIONS_H) \\\n-   $(TARGET_H) $(TOPLEV_H) $(DIAGNOSTIC_H) $(LTO_STREAMER_H)\n+   $(TARGET_H) $(DIAGNOSTIC_H) $(LTO_STREAMER_H)\n lto-streamer.o: lto-streamer.c $(CONFIG_H) $(SYSTEM_H) coretypes.h   \\\n    $(TM_H) $(TREE_H) $(GIMPLE_H) $(BITMAP_H) $(LTO_STREAMER_H) $(FLAGS_H) \\\n-   $(TREE_FLOW_H) $(DIAGNOSTIC_CORE_H) $(LTO_SYMTAB_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H)\n+   $(TREE_FLOW_H) $(DIAGNOSTIC_CORE_H) $(LTO_SYMTAB_H) toplev.h $(DIAGNOSTIC_CORE_H)\n langhooks.o : langhooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(TREE_INLINE_H) $(RTL_H) insn-config.h $(INTEGRATE_H) \\\n+   $(TREE_H) toplev.h $(DIAGNOSTIC_CORE_H) $(TREE_INLINE_H) $(RTL_H) insn-config.h $(INTEGRATE_H) \\\n    langhooks.h $(TARGET_H) $(LANGHOOKS_DEF_H) $(FLAGS_H) $(GGC_H) $(DIAGNOSTIC_H) \\\n    intl.h $(GIMPLE_H) $(CGRAPH_H) output.h tree-diagnostic.h\n tree.o: tree.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    all-tree.def $(FLAGS_H) $(FUNCTION_H) $(PARAMS_H) \\\n-   $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(GGC_H) $(HASHTAB_H) $(TARGET_H) output.h $(TM_P_H) \\\n+   toplev.h $(DIAGNOSTIC_CORE_H) $(GGC_H) $(HASHTAB_H) $(TARGET_H) output.h $(TM_P_H) \\\n    langhooks.h gt-tree.h $(TREE_INLINE_H) tree-iterator.h \\\n    $(BASIC_BLOCK_H) $(TREE_FLOW_H) $(OBSTACK_H) pointer-set.h \\\n    tree-pass.h $(LANGHOOKS_DEF_H) $(DIAGNOSTIC_H) $(CGRAPH_H) $(TIMEVAR_H) \\\n    $(EXCEPT_H) debug.h intl.h tree-diagnostic.h tree-pretty-print.h\n tree-dump.o: tree-dump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) langhooks.h $(TOPLEV_H) $(SPLAY_TREE_H) $(TREE_DUMP_H) \\\n+   $(TREE_H) langhooks.h toplev.h $(SPLAY_TREE_H) $(TREE_DUMP_H) \\\n    tree-iterator.h $(TREE_PASS_H) $(DIAGNOSTIC_H)\n tree-inline.o : tree-inline.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(RTL_H) $(EXPR_H) $(FLAGS_H) $(PARAMS_H) $(INPUT_H) insn-config.h \\\n-   $(HASHTAB_H) $(TOPLEV_H) langhooks.h $(TREE_INLINE_H) $(CGRAPH_H) \\\n+   $(HASHTAB_H) toplev.h langhooks.h $(TREE_INLINE_H) $(CGRAPH_H) \\\n    intl.h $(FUNCTION_H) $(GIMPLE_H) \\\n    debug.h $(DIAGNOSTIC_H) $(EXCEPT_H) $(TREE_FLOW_H) tree-iterator.h tree-mudflap.h \\\n    $(IPA_PROP_H) value-prof.h $(TREE_PASS_H) $(TARGET_H) $(INTEGRATE_H) \\\n@@ -2363,23 +2362,23 @@ print-tree.o : print-tree.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H\n stor-layout.o : stor-layout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(PARAMS_H) $(FLAGS_H) $(FUNCTION_H) $(EXPR_H) output.h $(RTL_H) \\\n    $(GGC_H) $(TM_P_H) $(TARGET_H) langhooks.h $(REGS_H) gt-stor-layout.h \\\n-   $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(CGRAPH_H) $(TREE_INLINE_H) $(TREE_DUMP_H) $(GIMPLE_H)\n+   toplev.h $(DIAGNOSTIC_CORE_H) $(CGRAPH_H) $(TREE_INLINE_H) $(TREE_DUMP_H) $(GIMPLE_H)\n tree-ssa-structalias.o: tree-ssa-structalias.c \\\n    $(SYSTEM_H) $(CONFIG_H) coretypes.h $(TM_H) $(GGC_H) $(OBSTACK_H) $(BITMAP_H) \\\n    $(FLAGS_H) $(TM_P_H) $(BASIC_BLOCK_H) output.h \\\n-   $(DIAGNOSTIC_H) $(TOPLEV_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_INLINE_H) \\\n+   $(DIAGNOSTIC_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_INLINE_H) \\\n    $(GIMPLE_H) $(HASHTAB_H) $(FUNCTION_H) $(CGRAPH_H) \\\n    $(TREE_PASS_H) $(TIMEVAR_H) alloc-pool.h $(SPLAY_TREE_H) $(PARAMS_H) \\\n    gt-tree-ssa-structalias.h $(CGRAPH_H) $(ALIAS_H) pointer-set.h\n tree-ssa-uninit.o : tree-ssa-uninit.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TM_P_H) $(EXPR_H) output.h $(DIAGNOSTIC_H) \\\n-   $(TOPLEV_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n+   $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) langhooks.h tree-pass.h $(BASIC_BLOCK_H) $(BITMAP_H) \\\n    $(FLAGS_H) $(HASHTAB_H) pointer-set.h \\\n    $(GIMPLE_H) $(TREE_INLINE_H) gimple-pretty-print.h\n tree-ssa.o : tree-ssa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TM_P_H) $(EXPR_H) output.h $(DIAGNOSTIC_H) \\\n-   $(TOPLEV_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n+   toplev.h $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) langhooks.h $(TREE_PASS_H) $(BASIC_BLOCK_H) $(BITMAP_H) \\\n    $(FLAGS_H) $(GGC_H) $(HASHTAB_H) pointer-set.h \\\n    $(GIMPLE_H) $(TREE_INLINE_H) $(TARGET_H) tree-pretty-print.h \\\n@@ -2397,12 +2396,12 @@ tree-ssa-ter.o : tree-ssa-ter.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    gimple-pretty-print.h\n tree-ssa-coalesce.o : tree-ssa-coalesce.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(DIAGNOSTIC_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   $(TREE_SSA_LIVE_H) $(BITMAP_H) $(FLAGS_H) $(HASHTAB_H) $(TOPLEV_H) \\\n+   $(TREE_SSA_LIVE_H) $(BITMAP_H) $(FLAGS_H) $(HASHTAB_H) \\\n    tree-pretty-print.h\n tree-outof-ssa.o : tree-outof-ssa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    $(TREE_PASS_H) $(TREE_SSA_LIVE_H) $(BASIC_BLOCK_H) $(BITMAP_H) $(GGC_H) \\\n-   $(TOPLEV_H) $(EXPR_H) $(SSAEXPAND_H) tree-pretty-print.h \\\n+   $(EXPR_H) $(SSAEXPAND_H) tree-pretty-print.h \\\n    gimple-pretty-print.h\n tree-ssa-dse.o : tree-ssa-dse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(GGC_H) $(TREE_H) $(RTL_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n@@ -2464,12 +2463,12 @@ tree-ssanames.o : tree-ssanames.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_PASS_H)\n tree-phinodes.o : tree-phinodes.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(TREE_H) $(GGC_H) $(BASIC_BLOCK_H) $(TREE_FLOW_H) \\\n-   gt-tree-phinodes.h $(RTL_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H)  $(GIMPLE_H)\n+   gt-tree-phinodes.h $(RTL_H) $(DIAGNOSTIC_CORE_H)  $(GIMPLE_H)\n domwalk.o : domwalk.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(BASIC_BLOCK_H) domwalk.h sbitmap.h\n tree-ssa-live.o : tree-ssa-live.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(DIAGNOSTIC_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   $(TREE_SSA_LIVE_H) $(BITMAP_H) $(TOPLEV_H) debug.h $(FLAGS_H) \\\n+   $(TREE_SSA_LIVE_H) $(BITMAP_H) debug.h $(FLAGS_H) \\\n    tree-pretty-print.h gimple-pretty-print.h $(GIMPLE_H)\n tree-ssa-copyrename.o : tree-ssa-copyrename.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) \\\n@@ -2492,18 +2491,18 @@ tree-ssa-sccvn.o : tree-ssa-sccvn.c $(TREE_FLOW_H) $(CONFIG_H) \\\n tree-vrp.o : tree-vrp.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(TREE_FLOW_H) $(TREE_PASS_H) $(TREE_DUMP_H) $(DIAGNOSTIC_H) $(GGC_H) \\\n    $(BASIC_BLOCK_H) tree-ssa-propagate.h $(FLAGS_H) $(TREE_DUMP_H) \\\n-   $(CFGLOOP_H) $(SCEV_H) $(TIMEVAR_H) $(TOPLEV_H) intl.h tree-pretty-print.h \\\n+   $(CFGLOOP_H) $(SCEV_H) $(TIMEVAR_H) toplev.h intl.h tree-pretty-print.h \\\n    gimple-pretty-print.h\n tree-cfg.o : tree-cfg.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) $(FLAGS_H) output.h \\\n    $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) $(EXCEPT_H) langhooks.h $(CFGLOOP_H) $(TREE_PASS_H) \\\n-   $(CFGLAYOUT_H) $(BASIC_BLOCK_H) $(TOPLEV_H) \\\n+   $(CFGLAYOUT_H) $(BASIC_BLOCK_H) toplev.h \\\n    value-prof.h tree-ssa-propagate.h $(TREE_INLINE_H) tree-pretty-print.h \\\n    gimple-pretty-print.h\n tree-cfgcleanup.o : tree-cfgcleanup.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) $(FLAGS_H) output.h \\\n-   $(DIAGNOSTIC_H) $(TOPLEV_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n+   $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) $(EXCEPT_H) langhooks.h $(CFGLOOP_H) $(TREE_PASS_H) \\\n    $(CFGLAYOUT_H) $(BASIC_BLOCK_H) $(HASHTAB_H)  \\\n    tree-ssa-propagate.h $(SCEV_H)\n@@ -2532,20 +2531,20 @@ tree-dfa.o : tree-dfa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_INLINE_H) $(HASHTAB_H) pointer-set.h $(FLAGS_H) $(FUNCTION_H) \\\n    $(TIMEVAR_H) convert.h $(TM_H) coretypes.h langhooks.h $(TREE_DUMP_H) \\\n    $(TREE_PASS_H) $(PARAMS_H) $(CGRAPH_H) $(BASIC_BLOCK_H) $(GIMPLE_H) \\\n-   tree-pretty-print.h $(TOPLEV_H)\n+   tree-pretty-print.h toplev.h\n tree-ssa-operands.o : tree-ssa-operands.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(GGC_H) $(DIAGNOSTIC_H) $(TREE_INLINE_H) \\\n-   $(FLAGS_H) $(FUNCTION_H) $(TM_H) $(TIMEVAR_H) $(TREE_PASS_H) $(TOPLEV_H) \\\n+   $(FLAGS_H) $(FUNCTION_H) $(TM_H) $(TIMEVAR_H) $(TREE_PASS_H) \\\n    coretypes.h langhooks.h $(IPA_REFERENCE_H) tree-pretty-print.h \\\n    gimple-pretty-print.h\n tree-eh.o : tree-eh.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TM_H) $(FLAGS_H) $(FUNCTION_H) $(EXCEPT_H) langhooks.h \\\n    $(GGC_H) $(TREE_PASS_H) coretypes.h $(TIMEVAR_H) pointer-set.h \\\n-   $(TREE_DUMP_H) $(TREE_INLINE_H) tree-iterator.h $(TOPLEV_H) $(DIAGNOSTIC_CORE_H)\n+   $(TREE_DUMP_H) $(TREE_INLINE_H) tree-iterator.h toplev.h $(DIAGNOSTIC_CORE_H)\n tree-ssa-loop.o : tree-ssa-loop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(TM_P_H) $(BASIC_BLOCK_H) output.h \\\n    $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(TREE_PASS_H) $(TIMEVAR_H) \\\n-   $(CFGLOOP_H) $(FLAGS_H) $(TREE_INLINE_H) $(SCEV_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(TREE_VECTORIZER_H)\n+   $(CFGLOOP_H) $(FLAGS_H) $(TREE_INLINE_H) $(SCEV_H) $(DIAGNOSTIC_CORE_H) $(TREE_VECTORIZER_H)\n tree-ssa-loop-unswitch.o : tree-ssa-loop-unswitch.c $(TREE_FLOW_H) \\\n    $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) \\\n    $(PARAMS_H) output.h $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) \\\n@@ -2560,7 +2559,7 @@ tree-ssa-address.o : tree-ssa-address.c $(TREE_FLOW_H) $(CONFIG_H) \\\n tree-ssa-loop-niter.o : tree-ssa-loop-niter.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(PARAMS_H) \\\n    $(TREE_INLINE_H) output.h $(DIAGNOSTIC_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(FLAGS_H) $(TREE_PASS_H) $(TREE_DATA_REF_H) \\\n+   toplev.h $(DIAGNOSTIC_CORE_H) $(FLAGS_H) $(TREE_PASS_H) $(TREE_DATA_REF_H) \\\n    $(BASIC_BLOCK_H) $(GGC_H) intl.h tree-pretty-print.h gimple-pretty-print.h\n tree-ssa-loop-ivcanon.o : tree-ssa-loop-ivcanon.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(PARAMS_H) \\\n@@ -2576,7 +2575,7 @@ tree-ssa-loop-prefetch.o: tree-ssa-loop-prefetch.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    output.h $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    $(TREE_PASS_H) $(RECOG_H) insn-config.h $(HASHTAB_H) \\\n    $(CFGLOOP_H) $(PARAMS_H) langhooks.h $(BASIC_BLOCK_H) \\\n-   $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) langhooks.h $(TREE_INLINE_H) $(TREE_DATA_REF_H) \\\n+   $(DIAGNOSTIC_CORE_H) langhooks.h $(TREE_INLINE_H) $(TREE_DATA_REF_H) \\\n    $(OPTABS_H) tree-pretty-print.h\n tree-predcom.o: tree-predcom.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(TM_P_H) \\\n    $(CFGLOOP_H) $(TREE_FLOW_H) $(GGC_H) $(TREE_DATA_REF_H) \\\n@@ -2614,7 +2613,7 @@ tree-ssa-alias.o : tree-ssa-alias.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_DUMP_H) $(TREE_PASS_H) $(PARAMS_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) \\\n    $(GIMPLE_H) $(VEC_H) \\\n    $(IPA_TYPE_ESCAPE_H) vecprim.h pointer-set.h alloc-pool.h \\\n-   tree-pretty-print.h $(TOPLEV_H)\n+   tree-pretty-print.h toplev.h\n tree-ssa-reassoc.o : tree-ssa-reassoc.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n    $(TM_H) coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) \\\n@@ -2624,7 +2623,7 @@ tree-ssa-reassoc.o : tree-ssa-reassoc.c $(TREE_FLOW_H) $(CONFIG_H) \\\n tree-optimize.o : tree-optimize.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TM_P_H) $(GGC_H) output.h \\\n    $(DIAGNOSTIC_H) $(BASIC_BLOCK_H) $(FLAGS_H) $(TIMEVAR_H) $(TM_H) \\\n-   coretypes.h $(TREE_DUMP_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(FUNCTION_H) langhooks.h \\\n+   coretypes.h $(TREE_DUMP_H) toplev.h $(DIAGNOSTIC_CORE_H) $(FUNCTION_H) langhooks.h \\\n    $(FLAGS_H) $(CGRAPH_H) $(PLUGIN_H) \\\n    $(TREE_INLINE_H) tree-mudflap.h $(GGC_H) graph.h $(CGRAPH_H) \\\n    $(TREE_PASS_H) $(CFGLOOP_H) $(EXCEPT_H) $(REGSET_H)\n@@ -2633,7 +2632,7 @@ gimplify.o : gimplify.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(GIMPLE_H) \\\n    $(DIAGNOSTIC_H) $(GIMPLE_H) $(TREE_INLINE_H) langhooks.h \\\n    $(LANGHOOKS_DEF_H) $(TREE_FLOW_H) $(CGRAPH_H) $(TIMEVAR_H) $(TM_H) \\\n    coretypes.h $(EXCEPT_H) $(FLAGS_H) $(RTL_H) $(FUNCTION_H) $(EXPR_H) output.h \\\n-   $(GGC_H) gt-gimplify.h $(HASHTAB_H) $(TARGET_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(OPTABS_H) \\\n+   $(GGC_H) gt-gimplify.h $(HASHTAB_H) $(TARGET_H) $(DIAGNOSTIC_CORE_H) $(OPTABS_H) \\\n    $(SPLAY_TREE_H) $(VEC_H) tree-iterator.h tree-pass.h tree-pretty-print.h\n gimple-iterator.o : gimple-iterator.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TREE_H) $(GIMPLE_H) $(TREE_FLOW_H) value-prof.h\n@@ -2646,10 +2645,10 @@ gimple-low.o : gimple-low.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n    $(DIAGNOSTIC_H) $(GIMPLE_H) $(TREE_INLINE_H) langhooks.h \\\n    $(LANGHOOKS_DEF_H) $(TREE_FLOW_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(EXCEPT_H) $(FLAGS_H) $(RTL_H) $(FUNCTION_H) $(EXPR_H) $(TREE_PASS_H) \\\n-   $(HASHTAB_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) tree-iterator.h\n+   $(HASHTAB_H) toplev.h $(DIAGNOSTIC_CORE_H) tree-iterator.h\n omp-low.o : omp-low.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(RTL_H) $(GIMPLE_H) $(TREE_INLINE_H) langhooks.h $(DIAGNOSTIC_CORE_H) \\\n-   $(TREE_FLOW_H) $(TIMEVAR_H) $(FLAGS_H) $(EXPR_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) \\\n+   $(TREE_FLOW_H) $(TIMEVAR_H) $(FLAGS_H) $(EXPR_H) toplev.h $(DIAGNOSTIC_CORE_H) \\\n    $(TREE_PASS_H) $(GGC_H) $(EXCEPT_H) $(SPLAY_TREE_H) $(OPTABS_H) \\\n    $(CFGLOOP_H) tree-iterator.h gt-omp-low.h\n tree-browser.o : tree-browser.c tree-browser.def $(CONFIG_H) $(SYSTEM_H) \\\n@@ -2671,12 +2670,12 @@ tree-data-ref.o: tree-data-ref.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_DATA_REF_H) $(TREE_PASS_H) langhooks.h tree-pretty-print.h \\\n    gimple-pretty-print.h\n sese.o: sese.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(GGC_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) \\\n+   $(GGC_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(DIAGNOSTIC_CORE_H) \\\n    $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) tree-chrec.h \\\n    $(TREE_DATA_REF_H) tree-scalar-evolution.h tree-pass.h domwalk.h value-prof.h \\\n    pointer-set.h $(GIMPLE_H) sese.h tree-pretty-print.h\n graphite.o: graphite.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(GGC_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) \\\n+   $(GGC_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(DIAGNOSTIC_CORE_H) \\\n    $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) $(GIMPLE_H) $(DBGCNT_H) \\\n    $(PREDICT_H) $(TREE_DATA_REF_H) tree-pass.h graphite.h \\\n    pointer-set.h value-prof.h graphite-ppl.h sese.h \\\n@@ -2685,12 +2684,12 @@ graphite.o: graphite.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n graphite-blocking.o: graphite-blocking.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h \\\n    $(TM_H) $(GGC_H) $(TREE_H) $(RTL_H) output.h $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) \\\n-   $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) \\\n+   $(DIAGNOSTIC_CORE_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) \\\n    $(GIMPLE_H) $(TREE_DATA_REF_H) tree-pass.h domwalk.h value-prof.h \\\n    graphite.h graphite-poly.h graphite-ppl.h\n graphite-clast-to-gimple.o: graphite-clast-to-gimple.c $(CONFIG_H) \\\n    $(SYSTEM_H) coretypes.h $(TM_H) langhooks.h \\\n-   $(GGC_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) \\\n+   $(GGC_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(DIAGNOSTIC_CORE_H) \\\n    $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) $(GIMPLE_H) \\\n    $(TREE_DATA_REF_H) tree-pass.h domwalk.h graphite.h \\\n    pointer-set.h value-prof.h graphite-cloog-util.h graphite-ppl.h sese.h \\\n@@ -2701,38 +2700,38 @@ graphite-cloog-util.o: graphite-cloog-util.c $(CONFIG_H) $(SYSTEM_H) \\\n graphite-dependences.o: graphite-dependences.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h \\\n    $(TM_H) $(GGC_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) \\\n-   $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) \\\n+   $(DIAGNOSTIC_CORE_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) \\\n    $(GIMPLE_H) $(TREE_DATA_REF_H) tree-pass.h domwalk.h \\\n    graphite.h graphite-poly.h graphite-ppl.h graphite-dependences.h\n graphite-flattening.o: graphite-flattening.c $(CONFIG_H) $(SYSTEM_H)\t\\\n    coretypes.h $(TM_H) $(GGC_H) $(TREE_H) $(RTL_H) output.h\t\t\\\n-   $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(TOPLEV_H) $(TREE_FLOW_H)\t\t\\\n+   $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H)\t\t\\\n    $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) $(GIMPLE_H)\t\t\t\\\n    $(TREE_DATA_REF_H) tree-pass.h domwalk.h value-prof.h graphite.h\t\\\n    graphite-poly.h graphite-ppl.h\n graphite-interchange.o: graphite-interchange.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h \\\n    $(TM_H) $(GGC_H) $(TREE_H) $(RTL_H) output.h $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) \\\n-   $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) \\\n+   $(DIAGNOSTIC_CORE_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) \\\n    $(GIMPLE_H) $(TREE_DATA_REF_H) tree-pass.h domwalk.h value-prof.h \\\n    graphite.h graphite-poly.h graphite-ppl.h\n graphite-poly.o: graphite-poly.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(GGC_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) \\\n+   $(GGC_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(DIAGNOSTIC_CORE_H) \\\n    $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) $(GIMPLE_H) \\\n    $(TREE_DATA_REF_H) tree-pass.h domwalk.h graphite.h graphite-dependences.h \\\n    pointer-set.h value-prof.h graphite-ppl.h sese.h output.h graphite-poly.h \\\n    tree-pretty-print.h gimple-pretty-print.h\n graphite-ppl.o: graphite-ppl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(GGC_H) graphite-ppl.h graphite-cloog-util.h\n graphite-scop-detection.o: graphite-scop-detection.c $(CONFIG_H) $(SYSTEM_H) \\\n-   $(GGC_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) \\\n+   $(GGC_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(DIAGNOSTIC_CORE_H) \\\n    $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) $(GIMPLE_H) \\\n    $(TREE_DATA_REF_H) tree-pass.h domwalk.h graphite.h $(TM_H) \\\n    value-prof.h graphite-ppl.h sese.h pointer-set.h coretypes.h \\\n    graphite-scop-detection.h graphite-poly.h\n graphite-sese-to-poly.o: graphite-sese-to-poly.c $(CONFIG_H) \\\n    $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(GGC_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) \\\n+   $(GGC_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) toplev.h $(DIAGNOSTIC_CORE_H) \\\n    $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) $(GIMPLE_H) \\\n    $(TREE_DATA_REF_H) tree-pass.h domwalk.h graphite.h \\\n    pointer-set.h value-prof.h graphite-ppl.h sese.h \\\n@@ -2741,17 +2740,17 @@ graphite-sese-to-poly.o: graphite-sese-to-poly.c $(CONFIG_H) \\\n tree-vect-loop.o: tree-vect-loop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(GGC_H) $(TREE_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) \\\n    $(TREE_DUMP_H) $(CFGLOOP_H) $(CFGLAYOUT_H) $(EXPR_H) $(RECOG_H) $(OPTABS_H) \\\n-   $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(SCEV_H) $(TREE_VECTORIZER_H) tree-pretty-print.h \\\n+   toplev.h $(DIAGNOSTIC_CORE_H) $(SCEV_H) $(TREE_VECTORIZER_H) tree-pretty-print.h \\\n    gimple-pretty-print.h $(TARGET_H)\n tree-vect-loop-manip.o: tree-vect-loop-manip.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(GGC_H) $(TREE_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) \\\n-   $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) $(CFGLAYOUT_H) $(EXPR_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) \\\n+   $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) $(CFGLAYOUT_H) $(EXPR_H) toplev.h $(DIAGNOSTIC_CORE_H) \\\n    $(SCEV_H) $(TREE_VECTORIZER_H) langhooks.h tree-pretty-print.h \\\n    gimple-pretty-print.h\n tree-vect-patterns.o: tree-vect-patterns.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(GGC_H) $(TREE_H) $(TARGET_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) \\\n    $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) $(EXPR_H) $(OPTABS_H) $(PARAMS_H) \\\n-   $(TREE_DATA_REF_H) $(TREE_VECTORIZER_H) $(RECOG_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) \\\n+   $(TREE_DATA_REF_H) $(TREE_VECTORIZER_H) $(RECOG_H) $(DIAGNOSTIC_CORE_H) \\\n    gimple-pretty-print.h\n tree-vect-slp.o: tree-vect-slp.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(GGC_H) $(TREE_H) $(TARGET_H) $(BASIC_BLOCK_H) \\\n@@ -2761,12 +2760,12 @@ tree-vect-slp.o: tree-vect-slp.c $(CONFIG_H) $(SYSTEM_H) \\\n tree-vect-stmts.o: tree-vect-stmts.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(GGC_H) $(TREE_H) $(TARGET_H) $(BASIC_BLOCK_H) \\\n    $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) $(CFGLAYOUT_H) \\\n-   $(EXPR_H) $(RECOG_H) $(OPTABS_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(TREE_VECTORIZER_H) \\\n+   $(EXPR_H) $(RECOG_H) $(OPTABS_H) toplev.h $(DIAGNOSTIC_CORE_H) $(TREE_VECTORIZER_H) \\\n    langhooks.h tree-pretty-print.h gimple-pretty-print.h\n tree-vect-data-refs.o: tree-vect-data-refs.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(GGC_H) $(TREE_H) $(TARGET_H) $(BASIC_BLOCK_H) \\\n    $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) \\\n-   $(EXPR_H) $(OPTABS_H) $(SCEV_H) $(TREE_VECTORIZER_H) $(TOPLEV_H) \\\n+   $(EXPR_H) $(OPTABS_H) $(SCEV_H) $(TREE_VECTORIZER_H) toplev.h \\\n    $(DIAGNOSTIC_CORE_H) $(TM_P_H) \\\n    tree-pretty-print.h gimple-pretty-print.h\n tree-vectorizer.o: tree-vectorizer.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n@@ -2791,11 +2790,11 @@ tree-stdarg.o: tree-stdarg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(FUNCTION_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_PASS_H) \\\n    tree-stdarg.h $(TARGET_H) langhooks.h gimple-pretty-print.h\n tree-object-size.o: tree-object-size.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(TREE_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) \\\n+   $(TM_H) $(TREE_H) $(DIAGNOSTIC_CORE_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) \\\n    $(TREE_PASS_H) tree-ssa-propagate.h tree-pretty-print.h \\\n    gimple-pretty-print.h\n gimple.o : gimple.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TREE_H) \\\n-   $(GGC_H) $(GIMPLE_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(DIAGNOSTIC_H) gt-gimple.h \\\n+   $(GGC_H) $(GIMPLE_H) $(DIAGNOSTIC_CORE_H) $(DIAGNOSTIC_H) gt-gimple.h \\\n    $(TREE_FLOW_H) value-prof.h $(FLAGS_H) $(DEMANGLE_H) \\\n    $(TARGET_H) $(ALIAS_H)\n gimple-pretty-print.o : gimple-pretty-print.c $(CONFIG_H) $(SYSTEM_H) \\\n@@ -2806,19 +2805,19 @@ tree-mudflap.o : $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(TREE_INLINE_H) \\\n    $(GIMPLE_H) $(DIAGNOSTIC_H) $(DEMANGLE_H) $(HASHTAB_H) langhooks.h tree-mudflap.h \\\n    $(TM_H) coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(CGRAPH_H) $(GGC_H) \\\n    gt-tree-mudflap.h $(BASIC_BLOCK_H) $(FLAGS_H) $(FUNCTION_H) \\\n-   $(TM_P_H) $(TREE_FLOW_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(GIMPLE_H) tree-iterator.h\n+   $(TM_P_H) $(TREE_FLOW_H) $(DIAGNOSTIC_CORE_H) $(GIMPLE_H) tree-iterator.h\n tree-nomudflap.o : $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(TREE_INLINE_H) \\\n    $(C_TREE_H) $(C_COMMON_H) $(GIMPLE_H) $(DIAGNOSTIC_H) $(HASHTAB_H) \\\n    output.h langhooks.h tree-mudflap.h $(TM_H) coretypes.h \\\n-   $(GGC_H) gt-tree-mudflap.h $(TREE_PASS_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H)\n+   $(GGC_H) gt-tree-mudflap.h $(TREE_PASS_H) $(DIAGNOSTIC_CORE_H)\n tree-pretty-print.o : tree-pretty-print.c $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(DIAGNOSTIC_H) $(HASHTAB_H) $(TREE_FLOW_H) \\\n    $(TM_H) coretypes.h tree-iterator.h $(SCEV_H) langhooks.h \\\n    $(TREE_PASS_H) value-prof.h output.h tree-pretty-print.h\n tree-diagnostic.o : tree-diagnostic.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TREE_H) $(DIAGNOSTIC_H) tree-diagnostic.h langhooks.h $(LANGHOOKS_DEF_H)\n fold-const.o : fold-const.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) $(FLAGS_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(HASHTAB_H) $(EXPR_H) $(RTL_H) \\\n+   $(TREE_H) $(FLAGS_H) toplev.h $(DIAGNOSTIC_CORE_H) $(HASHTAB_H) $(EXPR_H) $(RTL_H) \\\n    $(GGC_H) $(TM_P_H) langhooks.h $(MD5_H) intl.h $(TARGET_H) \\\n    $(GIMPLE_H) realmpfr.h $(TREE_FLOW_H)\n diagnostic.o : diagnostic.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n@@ -2830,11 +2829,11 @@ opts.o : opts.c $(OPTS_H) $(OPTIONS_H) $(DIAGNOSTIC_CORE_H) $(CONFIG_H) $(SYSTEM\n opts-global.o : opts-global.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(DIAGNOSTIC_H) $(OPTS_H) $(FLAGS_H) $(GGC_H) $(TREE_H) langhooks.h \\\n    $(TM_H) $(RTL_H) $(DBGCNT_H) debug.h $(LTO_STREAMER_H) output.h \\\n-   $(PLUGIN_H) $(TOPLEV_H) $(TREE_PASS_H)\n+   $(PLUGIN_H) toplev.h $(TREE_PASS_H)\n opts-common.o : opts-common.c $(OPTS_H) $(FLAGS_H) $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h intl.h $(DIAGNOSTIC_H) $(TM_H)\n targhooks.o : targhooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TREE_H) \\\n-   $(EXPR_H) $(TM_H) $(RTL_H) $(TM_P_H) $(FUNCTION_H) output.h $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) \\\n+   $(EXPR_H) $(TM_H) $(RTL_H) $(TM_P_H) $(FUNCTION_H) output.h $(DIAGNOSTIC_CORE_H) \\\n    $(MACHMODE_H) $(TARGET_DEF_H) $(TARGET_H) $(GGC_H) gt-targhooks.h \\\n    $(OPTABS_H) $(RECOG_H) reload.h hard-reg-set.h\n \n@@ -2851,7 +2850,7 @@ input.o : input.c $(CONFIG_H) $(SYSTEM_H) coretypes.h intl.h $(INPUT_H)\n toplev.o : toplev.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    version.h $(RTL_H) $(FUNCTION_H) $(FLAGS_H) xcoffout.h $(INPUT_H) \\\n    $(INSN_ATTR_H) output.h $(DIAGNOSTIC_H) debug.h insn-config.h intl.h \\\n-   $(RECOG_H) Makefile $(TOPLEV_H) dwarf2out.h sdbout.h dbxout.h $(EXPR_H) \\\n+   $(RECOG_H) Makefile toplev.h dwarf2out.h sdbout.h dbxout.h $(EXPR_H) \\\n    hard-reg-set.h $(BASIC_BLOCK_H) graph.h $(EXCEPT_H) $(REGS_H) $(TIMEVAR_H) \\\n    value-prof.h $(PARAMS_H) $(TM_P_H) reload.h ira.h dwarf2asm.h $(TARGET_H) \\\n    langhooks.h insn-flags.h $(CFGLAYOUT_H) $(CFGLOOP_H) hosthooks.h \\\n@@ -2865,7 +2864,7 @@ toplev.o : toplev.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n \n passes.o : passes.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(RTL_H) $(FUNCTION_H) $(FLAGS_H) xcoffout.h $(INPUT_H) $(INSN_ATTR_H) output.h \\\n-   $(DIAGNOSTIC_CORE_H) debug.h insn-config.h intl.h $(RECOG_H) $(TOPLEV_H) \\\n+   $(DIAGNOSTIC_CORE_H) debug.h insn-config.h intl.h $(RECOG_H) toplev.h \\\n    dwarf2out.h sdbout.h dbxout.h $(EXPR_H) hard-reg-set.h $(BASIC_BLOCK_H) \\\n    graph.h $(EXCEPT_H) $(REGS_H) $(TIMEVAR_H) value-prof.h \\\n    $(PARAMS_H) $(TM_P_H) reload.h dwarf2asm.h $(TARGET_H) \\\n@@ -2876,9 +2875,9 @@ passes.o : passes.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(PLUGIN_H)\n \n plugin.o : plugin.c $(PLUGIN_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(TREE_H) $(TREE_PASS_H) intl.h $(PLUGIN_VERSION_H) $(GGC_H)\n+   toplev.h $(DIAGNOSTIC_CORE_H) $(TREE_H) $(TREE_PASS_H) intl.h $(PLUGIN_VERSION_H) $(GGC_H)\n \n-main.o : main.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H)\n+main.o : main.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) toplev.h $(DIAGNOSTIC_CORE_H)\n \n host-default.o : host-default.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    hosthooks.h $(HOSTHOOKS_DEF_H)\n@@ -2888,19 +2887,19 @@ rtl-error.o: rtl-error.c $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_H) \\\n    $(CONFIG_H)\n \n rtl.o : rtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-  $(GGC_H) $(BCONFIG_H) insn-notes.def reg-notes.def $(TOPLEV_H) $(DIAGNOSTIC_CORE_H)\n+  $(GGC_H) $(BCONFIG_H) insn-notes.def reg-notes.def toplev.h $(DIAGNOSTIC_CORE_H)\n \n print-rtl.o : print-rtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n     $(RTL_H) $(TREE_H) hard-reg-set.h $(BASIC_BLOCK_H) $(FLAGS_H) \\\n     $(BCONFIG_H) $(DIAGNOSTIC_H) cselib.h $(TREE_PASS_H) tree-pretty-print.h\n-rtlanal.o : rtlanal.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) \\\n+rtlanal.o : rtlanal.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) toplev.h $(DIAGNOSTIC_CORE_H) \\\n    $(RTL_H) hard-reg-set.h $(TM_P_H) insn-config.h $(RECOG_H) \\\n    $(FLAGS_H) $(REGS_H) output.h $(TARGET_H) $(FUNCTION_H) $(TREE_H) \\\n    $(DF_H) $(EMIT_RTL_H)\n \n varasm.o : varasm.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(RTL_H) $(FLAGS_H) $(FUNCTION_H) $(EXPR_H) hard-reg-set.h $(REGS_H) \\\n-   output.h $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) xcoffout.h debug.h $(GGC_H) $(TM_P_H) \\\n+   output.h toplev.h $(DIAGNOSTIC_CORE_H) xcoffout.h debug.h $(GGC_H) $(TM_P_H) \\\n    $(HASHTAB_H) $(TARGET_H) langhooks.h gt-varasm.h $(BASIC_BLOCK_H) \\\n    $(CFGLAYOUT_H) $(CGRAPH_H) targhooks.h tree-mudflap.h \\\n    tree-iterator.h pointer-set.h\n@@ -2914,21 +2913,21 @@ statistics.o : statistics.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TREE_PASS_H) $(TREE_DUMP_H) $(HASHTAB_H) statistics.h $(FUNCTION_H)\n stmt.o : stmt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(FLAGS_H) $(FUNCTION_H) insn-config.h hard-reg-set.h $(EXPR_H) \\\n-   $(LIBFUNCS_H) $(EXCEPT_H) $(RECOG_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) \\\n+   $(LIBFUNCS_H) $(EXCEPT_H) $(RECOG_H) $(DIAGNOSTIC_CORE_H) \\\n    output.h $(GGC_H) $(TM_P_H) langhooks.h $(PREDICT_H) $(OPTABS_H) \\\n    $(TARGET_H) $(GIMPLE_H) $(MACHMODE_H) $(REGS_H) alloc-pool.h \\\n    $(PRETTY_PRINT_H) $(BITMAP_H)\n except.o : except.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(FLAGS_H) $(EXCEPT_H) $(FUNCTION_H) $(EXPR_H) $(LIBFUNCS_H) \\\n    langhooks.h insn-config.h hard-reg-set.h $(BASIC_BLOCK_H) output.h \\\n-   dwarf2asm.h dwarf2out.h $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(HASHTAB_H) intl.h $(GGC_H) \\\n+   dwarf2asm.h dwarf2out.h toplev.h $(DIAGNOSTIC_CORE_H) $(HASHTAB_H) intl.h $(GGC_H) \\\n    gt-except.h $(CGRAPH_H) $(INTEGRATE_H) $(DIAGNOSTIC_H) $(DWARF2_H) \\\n    $(TARGET_H) $(TM_P_H) $(TREE_PASS_H) $(TIMEVAR_H) $(TREE_FLOW_H) \\\n    tree-pretty-print.h sbitmap.h\n expr.o : expr.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(FLAGS_H) $(FUNCTION_H) $(REGS_H) $(EXPR_H) $(OPTABS_H) \\\n    $(LIBFUNCS_H) $(INSN_ATTR_H) insn-config.h $(RECOG_H) output.h \\\n-   typeclass.h hard-reg-set.h $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) hard-reg-set.h $(EXCEPT_H) \\\n+   typeclass.h hard-reg-set.h toplev.h $(DIAGNOSTIC_CORE_H) hard-reg-set.h $(EXCEPT_H) \\\n    reload.h langhooks.h intl.h $(TM_P_H) $(TARGET_H) \\\n    tree-iterator.h gt-expr.h $(MACHMODE_H) $(TIMEVAR_H) $(TREE_FLOW_H) \\\n    $(TREE_PASS_H) $(DF_H) $(DIAGNOSTIC_H) vecprim.h $(SSAEXPAND_H)\n@@ -2938,40 +2937,40 @@ dojump.o : dojump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_\n builtins.o : builtins.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(GIMPLE_H) $(FLAGS_H) $(TARGET_H) $(FUNCTION_H) $(REGS_H) \\\n    $(EXPR_H) $(OPTABS_H) insn-config.h $(RECOG_H) output.h typeclass.h \\\n-   hard-reg-set.h $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) hard-reg-set.h $(EXCEPT_H) \\\n+   hard-reg-set.h toplev.h $(DIAGNOSTIC_CORE_H) hard-reg-set.h $(EXCEPT_H) \\\n    $(TM_P_H) $(PREDICT_H) $(LIBFUNCS_H) langhooks.h $(BASIC_BLOCK_H) \\\n    tree-mudflap.h realmpfr.h $(BUILTINS_DEF) $(MACHMODE_H) \\\n    $(DIAGNOSTIC_CORE_H) $(TREE_FLOW_H) value-prof.h\n calls.o : calls.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(FLAGS_H) $(EXPR_H) $(OPTABS_H) langhooks.h $(TARGET_H) \\\n-   $(LIBFUNCS_H) $(REGS_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) output.h \\\n+   $(LIBFUNCS_H) $(REGS_H) toplev.h $(DIAGNOSTIC_CORE_H) output.h \\\n    $(FUNCTION_H) $(TIMEVAR_H) $(TM_P_H) $(CGRAPH_H) $(EXCEPT_H) sbitmap.h \\\n    $(DBGCNT_H) $(TREE_FLOW_H)\n expmed.o : expmed.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n    $(FLAGS_H) insn-config.h $(EXPR_H) $(OPTABS_H) $(RECOG_H) \\\n-   $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(TM_P_H) langhooks.h $(DF_H) $(TARGET_H) \\\n+   toplev.h $(DIAGNOSTIC_CORE_H) $(TM_P_H) langhooks.h $(DF_H) $(TARGET_H) \\\n    expmed.h\n explow.o : explow.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n    $(FLAGS_H) hard-reg-set.h insn-config.h $(EXPR_H) $(OPTABS_H) $(RECOG_H) \\\n-   $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(EXCEPT_H) $(FUNCTION_H) $(GGC_H) $(TM_P_H) langhooks.h gt-explow.h \\\n+   toplev.h $(DIAGNOSTIC_CORE_H) $(EXCEPT_H) $(FUNCTION_H) $(GGC_H) $(TM_P_H) langhooks.h gt-explow.h \\\n    $(TARGET_H) output.h\n optabs.o : optabs.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(FLAGS_H) insn-config.h $(EXPR_H) $(OPTABS_H) $(LIBFUNCS_H) \\\n-   $(RECOG_H) reload.h $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(GGC_H) $(TM_P_H) \\\n+   $(RECOG_H) reload.h $(DIAGNOSTIC_CORE_H) $(GGC_H) $(TM_P_H) \\\n    $(EXCEPT_H) gt-optabs.h $(BASIC_BLOCK_H) $(TARGET_H) $(FUNCTION_H)\n dbxout.o : dbxout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(RTL_H) $(FLAGS_H) $(REGS_H) debug.h $(TM_P_H) $(TARGET_H) $(FUNCTION_H) \\\n    langhooks.h insn-config.h reload.h $(GSTAB_H) xcoffout.h output.h dbxout.h \\\n-   $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(GGC_H) $(OBSTACK_H) $(EXPR_H) gt-dbxout.h\n+   toplev.h $(DIAGNOSTIC_CORE_H) $(GGC_H) $(OBSTACK_H) $(EXPR_H) gt-dbxout.h\n debug.o : debug.c debug.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H)\n sdbout.o : sdbout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) debug.h \\\n    $(TREE_H) $(GGC_H) $(RTL_H) $(REGS_H) $(FLAGS_H) insn-config.h \\\n-   output.h $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(TM_P_H) gsyms.h langhooks.h $(TARGET_H) sdbout.h \\\n+   output.h $(DIAGNOSTIC_CORE_H) $(TM_P_H) gsyms.h langhooks.h $(TARGET_H) sdbout.h \\\n    gt-sdbout.h reload.h\n dwarf2out.o : dwarf2out.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) version.h $(RTL_H) $(DWARF2_H) debug.h $(FLAGS_H) insn-config.h \\\n    output.h $(DIAGNOSTIC_H) hard-reg-set.h $(REGS_H) $(EXPR_H) \\\n-   $(LIBFUNCS_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) dwarf2out.h reload.h \\\n+   $(LIBFUNCS_H) toplev.h $(DIAGNOSTIC_CORE_H) dwarf2out.h reload.h \\\n    $(GGC_H) $(EXCEPT_H) dwarf2asm.h $(TM_P_H) langhooks.h $(HASHTAB_H) \\\n    gt-dwarf2out.h $(TARGET_H) $(CGRAPH_H) $(MD5_H) $(INPUT_H) $(FUNCTION_H) \\\n    $(GIMPLE_H) $(TREE_PASS_H) $(TREE_FLOW_H) tree-pretty-print.h\n@@ -2981,43 +2980,43 @@ dwarf2asm.o : dwarf2asm.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n vmsdbgout.o : vmsdbgout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) version.h \\\n    $(FLAGS_H) $(RTL_H) output.h vmsdbg.h debug.h langhooks.h $(FUNCTION_H) $(TARGET_H)\n xcoffout.o : xcoffout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) $(RTL_H) xcoffout.h $(FLAGS_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) output.h dbxout.h \\\n+   $(TREE_H) $(RTL_H) xcoffout.h $(FLAGS_H) toplev.h $(DIAGNOSTIC_CORE_H) output.h dbxout.h \\\n    $(GGC_H) $(TARGET_H) debug.h $(GSTAB_H) xcoff.h\n godump.o : godump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(DIAGNOSTIC_CORE_H) \\\n    $(TREE_H) $(GGC_H) pointer-set.h $(OBSTACK_H) debug.h\n emit-rtl.o : emit-rtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(FLAGS_H) $(FUNCTION_H) $(REGS_H) insn-config.h $(RECOG_H) \\\n-   $(GGC_H) $(EXPR_H) hard-reg-set.h $(BITMAP_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(BASIC_BLOCK_H) \\\n+   $(GGC_H) $(EXPR_H) hard-reg-set.h $(BITMAP_H) $(DIAGNOSTIC_CORE_H) $(BASIC_BLOCK_H) \\\n    $(HASHTAB_H) $(TM_P_H) debug.h langhooks.h $(TREE_PASS_H) gt-emit-rtl.h \\\n    $(DF_H) $(PARAMS_H) $(TARGET_H)\n real.o : real.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-   $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(TM_P_H) $(REAL_H) dfp.h realmpfr.h\n+   toplev.h $(DIAGNOSTIC_CORE_H) $(TM_P_H) $(REAL_H) dfp.h realmpfr.h\n realmpfr.o : realmpfr.c realmpfr.h $(CONFIG_H) $(SYSTEM_H) $(REAL_H)\n dfp.o : dfp.c dfp.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H)\t$(TREE_H) \\\n-   $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(TM_P_H) $(REAL_H) $(DECNUM_H)\n+   $(DIAGNOSTIC_CORE_H) $(TM_P_H) $(REAL_H) $(DECNUM_H)\n fixed-value.o: fixed-value.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) $(REAL_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H)\n+   $(TREE_H) $(REAL_H) $(DIAGNOSTIC_CORE_H)\n integrate.o : integrate.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(TREE_H) $(FLAGS_H) debug.h $(INTEGRATE_H) insn-config.h \\\n    $(EXPR_H) $(REGS_H) intl.h $(FUNCTION_H) output.h $(RECOG_H) \\\n-   $(EXCEPT_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(PARAMS_H) $(TM_P_H) $(TARGET_H) langhooks.h \\\n+   $(EXCEPT_H) $(DIAGNOSTIC_CORE_H) $(PARAMS_H) $(TM_P_H) $(TARGET_H) langhooks.h \\\n    gt-integrate.h $(GGC_H) $(TREE_PASS_H) $(DF_H)\n jump.o : jump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(FLAGS_H) hard-reg-set.h $(REGS_H) insn-config.h $(RECOG_H) $(EXPR_H) \\\n    $(EXCEPT_H) $(FUNCTION_H) $(BASIC_BLOCK_H) $(TREE_PASS_H) \\\n-   $(DIAGNOSTIC_CORE_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(INSN_ATTR_H) $(TM_P_H) reload.h \\\n+   $(DIAGNOSTIC_CORE_H) $(DIAGNOSTIC_CORE_H) $(INSN_ATTR_H) $(TM_P_H) reload.h \\\n    $(PREDICT_H) $(TIMEVAR_H) $(TARGET_H)\n simplify-rtx.o : simplify-rtx.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n-   $(RECOG_H) $(EXPR_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) output.h $(FUNCTION_H) $(GGC_H) $(TM_P_H) \\\n+   $(RECOG_H) $(EXPR_H) toplev.h $(DIAGNOSTIC_CORE_H) output.h $(FUNCTION_H) $(GGC_H) $(TM_P_H) \\\n    $(TREE_H) $(TARGET_H)\n cgraph.o : cgraph.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-   langhooks.h $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(FLAGS_H) $(GGC_H) $(TARGET_H) $(CGRAPH_H) \\\n+   langhooks.h toplev.h $(DIAGNOSTIC_CORE_H) $(FLAGS_H) $(GGC_H) $(TARGET_H) $(CGRAPH_H) \\\n    gt-cgraph.h output.h intl.h $(BASIC_BLOCK_H) debug.h $(HASHTAB_H) \\\n    $(TREE_INLINE_H) $(TREE_DUMP_H) $(TREE_FLOW_H) cif-code.def \\\n    value-prof.h $(EXCEPT_H) $(IPA_UTILS_H) $(DIAGNOSTIC_CORE_H)\n cgraphunit.o : cgraphunit.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) langhooks.h $(TREE_INLINE_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(FLAGS_H) $(GGC_H) \\\n+   $(TREE_H) langhooks.h $(TREE_INLINE_H) toplev.h $(DIAGNOSTIC_CORE_H) $(FLAGS_H) $(GGC_H) \\\n    $(TARGET_H) $(CGRAPH_H) intl.h pointer-set.h $(FUNCTION_H) $(GIMPLE_H) \\\n    $(TREE_FLOW_H) $(TREE_PASS_H) debug.h $(DIAGNOSTIC_H) \\\n    $(FIBHEAP_H) output.h $(PARAMS_H) $(RTL_H) $(TIMEVAR_H) $(IPA_PROP_H) \\\n@@ -3050,7 +3049,7 @@ ipa-split.o : ipa-split.c $(CONFIG_H) $(SYSTEM_H) coretypes.h  \\\n    $(TREE_INLINE_H) $(FIBHEAP_H) $(PARAMS_H)\n matrix-reorg.o : matrix-reorg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h  \\\n    $(TM_H) $(TREE_H) $(RTL_H) $(TREE_INLINE_H) $(TREE_FLOW_H) \\\n-   tree-flow-inline.h langhooks.h $(HASHTAB_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(FLAGS_H) $(GGC_H) \\\n+   tree-flow-inline.h langhooks.h $(HASHTAB_H) toplev.h $(DIAGNOSTIC_CORE_H) $(FLAGS_H) $(GGC_H) \\\n    debug.h $(TARGET_H) $(CGRAPH_H) $(DIAGNOSTIC_CORE_H) $(TIMEVAR_H) \\\n    $(PARAMS_H) $(FIBHEAP_H) intl.h $(FUNCTION_H) $(BASIC_BLOCK_H) \\\n    $(CFGLOOP_H) tree-iterator.h $(TREE_PASS_H) $(OPTS_H) $(TREE_DATA_REF_H) \\\n@@ -3068,7 +3067,7 @@ ipa-reference.o : ipa-reference.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_INLINE_H) langhooks.h \\\n    pointer-set.h $(GGC_H) $(IPA_REFERENCE_H) $(IPA_UTILS_H) $(SPLAY_TREE_H) \\\n    $(GIMPLE_H) $(CGRAPH_H) output.h $(FLAGS_H) $(TREE_PASS_H) \\\n-   $(TIMEVAR_H) $(DIAGNOSTIC_H) $(FUNCTION_H) $(LTO_STREAMER_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H)\n+   $(TIMEVAR_H) $(DIAGNOSTIC_H) $(FUNCTION_H) $(LTO_STREAMER_H) $(DIAGNOSTIC_CORE_H)\n ipa-pure-const.o : ipa-pure-const.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_INLINE_H) langhooks.h \\\n    pointer-set.h $(GGC_H) $(IPA_UTILS_H) $(TARGET_H) \\\n@@ -3082,24 +3081,24 @@ ipa-type-escape.o : ipa-type-escape.c $(CONFIG_H) $(SYSTEM_H) \\\n    $(TIMEVAR_H) $(DIAGNOSTIC_H) $(FUNCTION_H) tree-pretty-print.h\n ipa-struct-reorg.o: ipa-struct-reorg.c ipa-struct-reorg.h $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(GGC_H) $(TREE_H) $(RTL_H) $(GIMPLE_H) tree-inline.h \\\n-   $(TREE_FLOW_H) langhooks.h pointer-set.h $(HASHTAB_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) \\\n+   $(TREE_FLOW_H) langhooks.h pointer-set.h $(HASHTAB_H) toplev.h $(DIAGNOSTIC_CORE_H) \\\n    $(FLAGS_H) debug.h $(TARGET_H) $(CGRAPH_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n    $(PARAMS_H) $(FIBHEAP_H) intl.h $(FUNCTION_H) $(BASIC_BLOCK_H) tree-iterator.h \\\n    $(TREE_PASS_H) $(OPTS_H) $(IPA_TYPE_ESCAPE_H) $(TREE_DUMP_H) \\\n    $(GIMPLE_H) tree-pretty-print.h gimple-pretty-print.h\n \n coverage.o : coverage.c $(GCOV_IO_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(RTL_H) $(TREE_H) $(FLAGS_H) output.h $(REGS_H) $(EXPR_H) \\\n-   $(FUNCTION_H) $(BASIC_BLOCK_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(GGC_H) langhooks.h $(COVERAGE_H) \\\n+   $(FUNCTION_H) $(BASIC_BLOCK_H) toplev.h $(DIAGNOSTIC_CORE_H) $(GGC_H) langhooks.h $(COVERAGE_H) \\\n    $(HASHTAB_H) tree-iterator.h $(CGRAPH_H) $(TREE_PASS_H) gcov-io.c $(TM_P_H) \\\n    $(DIAGNOSTIC_CORE_H) intl.h gt-coverage.h\n cselib.o : cselib.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h $(RECOG_H) \\\n-   $(EMIT_RTL_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) output.h $(FUNCTION_H) $(TREE_PASS_H) \\\n+   $(EMIT_RTL_H) $(DIAGNOSTIC_CORE_H) output.h $(FUNCTION_H) $(TREE_PASS_H) \\\n    cselib.h gt-cselib.h $(GGC_H) $(TM_P_H) $(PARAMS_H) alloc-pool.h \\\n    $(HASHTAB_H) $(TARGET_H) $(BITMAP_H)\n cse.o : cse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(REGS_H) \\\n-   hard-reg-set.h $(FLAGS_H) insn-config.h $(RECOG_H) $(EXPR_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) \\\n+   hard-reg-set.h $(FLAGS_H) insn-config.h $(RECOG_H) $(EXPR_H) toplev.h $(DIAGNOSTIC_CORE_H) \\\n    output.h $(FUNCTION_H) $(BASIC_BLOCK_H) $(GGC_H) $(TM_P_H) $(TIMEVAR_H) \\\n    $(EXCEPT_H) $(TARGET_H) $(PARAMS_H) rtlhooks-def.h $(TREE_PASS_H) \\\n    $(DF_H) $(DBGCNT_H)\n@@ -3113,31 +3112,31 @@ dse.o : dse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_PASS_H) alloc-pool.h $(ALIAS_H) dse.h $(OPTABS_H) $(TARGET_H) \\\n    $(BITMAP_H)\n fwprop.o : fwprop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) insn-config.h $(RECOG_H) $(FLAGS_H) $(OBSTACK_H) $(BASIC_BLOCK_H) \\\n+   $(DIAGNOSTIC_CORE_H) insn-config.h $(RECOG_H) $(FLAGS_H) $(OBSTACK_H) $(BASIC_BLOCK_H) \\\n    output.h $(DF_H) alloc-pool.h $(TIMEVAR_H) $(TREE_PASS_H) $(TARGET_H) \\\n    $(TM_P_H) $(CFGLOOP_H) $(EMIT_RTL_H) domwalk.h sparseset.h\n web.o : web.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   hard-reg-set.h $(FLAGS_H) $(BASIC_BLOCK_H) $(FUNCTION_H) output.h $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) \\\n+   hard-reg-set.h $(FLAGS_H) $(BASIC_BLOCK_H) $(FUNCTION_H) output.h $(DIAGNOSTIC_CORE_H) \\\n    insn-config.h $(RECOG_H) $(DF_H) $(OBSTACK_H) $(TIMEVAR_H) $(TREE_PASS_H)\n implicit-zee.o : implicit-zee.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    hard-reg-set.h $(FLAGS_H) $(BASIC_BLOCK_H) $(FUNCTION_H) output.h \\\n    $(DF_H) $(TIMEVAR_H) tree-pass.h $(RECOG_H) $(EXPR_H) \\\n-   $(REGS_H) $(TREE_H) $(TM_P_H) insn-config.h $(INSN_ATTR_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) \\\n+   $(REGS_H) $(TREE_H) $(TM_P_H) insn-config.h $(INSN_ATTR_H) $(DIAGNOSTIC_CORE_H) \\\n    $(TARGET_H) $(OPTABS_H) insn-codes.h rtlhooks-def.h $(PARAMS_H) $(CGRAPH_H)\n gcse.o : gcse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h $(GGC_H) \\\n-   $(RECOG_H) $(EXPR_H) $(BASIC_BLOCK_H) $(FUNCTION_H) output.h $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) \\\n+   $(RECOG_H) $(EXPR_H) $(BASIC_BLOCK_H) $(FUNCTION_H) output.h toplev.h $(DIAGNOSTIC_CORE_H) \\\n    $(TM_P_H) $(PARAMS_H) cselib.h $(EXCEPT_H) gt-gcse.h $(TREE_H) $(TIMEVAR_H) \\\n    intl.h $(OBSTACK_H) $(TREE_PASS_H) $(DF_H) $(DBGCNT_H) $(TARGET_H) \\\n    $(DF_H) gcse.h\n store-motion.o : store-motion.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h $(GGC_H) \\\n-   $(RECOG_H) $(EXPR_H) $(BASIC_BLOCK_H) $(FUNCTION_H) output.h $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) \\\n+   $(RECOG_H) $(EXPR_H) $(BASIC_BLOCK_H) $(FUNCTION_H) output.h toplev.h $(DIAGNOSTIC_CORE_H) \\\n    $(TM_P_H) $(EXCEPT_H) $(TREE_H) $(TIMEVAR_H) \\\n    intl.h $(OBSTACK_H) $(TREE_PASS_H) $(DF_H) $(DBGCNT_H)\n resource.o : resource.c $(CONFIG_H) $(RTL_H) hard-reg-set.h $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(REGS_H) $(FLAGS_H) output.h $(RESOURCE_H) $(DF_H) \\\n-   $(FUNCTION_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(INSN_ATTR_H) $(EXCEPT_H) $(PARAMS_H) $(TM_P_H)\n+   $(FUNCTION_H) $(DIAGNOSTIC_CORE_H) $(INSN_ATTR_H) $(EXCEPT_H) $(PARAMS_H) $(TM_P_H)\n lcm.o : lcm.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(REGS_H) \\\n    hard-reg-set.h $(FLAGS_H) insn-config.h $(INSN_ATTR_H) $(RECOG_H) \\\n    $(BASIC_BLOCK_H) $(TM_P_H) $(FUNCTION_H) output.h sbitmap.h\n@@ -3158,10 +3157,10 @@ tree-ssa-ccp.o : tree-ssa-ccp.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(EXPR_H) output.h \\\n    $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) $(BASIC_BLOCK_H) $(TREE_PASS_H) langhooks.h \\\n-   tree-ssa-propagate.h value-prof.h $(FLAGS_H) $(TARGET_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) \\\n+   tree-ssa-propagate.h value-prof.h $(FLAGS_H) $(TARGET_H) $(DIAGNOSTIC_CORE_H) \\\n    $(DBGCNT_H) tree-pretty-print.h gimple-pretty-print.h\n tree-sra.o : tree-sra.c $(CONFIG_H) $(SYSTEM_H) coretypes.h alloc-pool.h \\\n-   $(TM_H) $(TOPLEV_H) $(TREE_H) $(GIMPLE_H) $(CGRAPH_H) $(TREE_FLOW_H) \\\n+   $(TM_H) $(TREE_H) $(GIMPLE_H) $(CGRAPH_H) $(TREE_FLOW_H) \\\n    $(IPA_PROP_H) $(DIAGNOSTIC_H) statistics.h $(TREE_DUMP_H) $(TIMEVAR_H) \\\n    $(PARAMS_H) $(TARGET_H) $(FLAGS_H) $(EXPR_H) tree-pretty-print.h \\\n    $(DBGCNT_H) $(TREE_INLINE_H) gimple-pretty-print.h\n@@ -3202,42 +3201,42 @@ var-tracking.o : var-tracking.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(TREE_H) hard-reg-set.h insn-config.h reload.h $(FLAGS_H) \\\n    $(BASIC_BLOCK_H) output.h sbitmap.h alloc-pool.h $(FIBHEAP_H) $(HASHTAB_H) \\\n    $(REGS_H) $(EXPR_H) $(TIMEVAR_H) $(TREE_PASS_H) $(TREE_FLOW_H) \\\n-   cselib.h $(TARGET_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(PARAMS_H) $(DIAGNOSTIC_H) pointer-set.h \\\n+   cselib.h $(TARGET_H) $(DIAGNOSTIC_CORE_H) $(PARAMS_H) $(DIAGNOSTIC_H) pointer-set.h \\\n    $(RECOG_H) tree-pretty-print.h\n profile.o : profile.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(FLAGS_H) output.h $(REGS_H) $(EXPR_H) $(FUNCTION_H) $(BASIC_BLOCK_H) \\\n-   $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(COVERAGE_H) $(TREE_FLOW_H) value-prof.h cfghooks.h \\\n+   $(DIAGNOSTIC_CORE_H) $(COVERAGE_H) $(TREE_FLOW_H) value-prof.h cfghooks.h \\\n    $(CFGLOOP_H) $(TIMEVAR_H) $(TREE_PASS_H) profile.h\n mcf.o : mcf.c profile.h $(CONFIG_H) $(SYSTEM_H) $(TM_H) coretypes.h \\\n    $(BASIC_BLOCK_H) output.h langhooks.h $(GCOV_IO_H) $(TREE_H) \n tree-profile.o : tree-profile.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(TREE_H) $(FLAGS_H) $(REGS_H) $(EXPR_H) $(FUNCTION_H) \\\n-   $(BASIC_BLOCK_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(COVERAGE_H) $(TREE_H) value-prof.h $(TREE_DUMP_H) \\\n+   $(BASIC_BLOCK_H) $(DIAGNOSTIC_CORE_H) $(COVERAGE_H) $(TREE_H) value-prof.h $(TREE_DUMP_H) \\\n    $(TREE_PASS_H) $(TREE_FLOW_H) $(TIMEVAR_H) gt-tree-profile.h $(CGRAPH_H)\n value-prof.o : value-prof.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(BASIC_BLOCK_H) hard-reg-set.h value-prof.h $(EXPR_H) output.h $(FLAGS_H) \\\n    $(RECOG_H) insn-config.h $(OPTABS_H) $(REGS_H) $(GGC_H) $(DIAGNOSTIC_H) \\\n    $(TREE_H) $(COVERAGE_H) $(RTL_H) $(GCOV_IO_H) $(TREE_FLOW_H) \\\n-   tree-flow-inline.h $(TIMEVAR_H) $(TREE_PASS_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) pointer-set.h \\\n+   tree-flow-inline.h $(TIMEVAR_H) $(TREE_PASS_H) $(DIAGNOSTIC_CORE_H) pointer-set.h \\\n    tree-pretty-print.h gimple-pretty-print.h\n loop-doloop.o : loop-doloop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(FLAGS_H) $(EXPR_H) hard-reg-set.h $(BASIC_BLOCK_H) $(TM_P_H) \\\n-   $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(CFGLOOP_H) output.h $(PARAMS_H) $(TARGET_H)\n+   $(DIAGNOSTIC_CORE_H) $(CFGLOOP_H) output.h $(PARAMS_H) $(TARGET_H)\n alloc-pool.o : alloc-pool.c $(CONFIG_H) $(SYSTEM_H) alloc-pool.h $(HASHTAB_H)\n auto-inc-dec.o : auto-inc-dec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(RTL_H) $(TM_P_H) hard-reg-set.h $(BASIC_BLOCK_H) insn-config.h \\\n-   $(REGS_H) $(FLAGS_H) output.h $(FUNCTION_H) $(EXCEPT_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(RECOG_H) \\\n+   $(REGS_H) $(FLAGS_H) output.h $(FUNCTION_H) $(EXCEPT_H) $(DIAGNOSTIC_CORE_H) $(RECOG_H) \\\n    $(EXPR_H) $(TIMEVAR_H) $(TREE_PASS_H) $(DF_H) $(DBGCNT_H) $(TARGET_H)\n cfg.o : cfg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(FLAGS_H) \\\n-   $(REGS_H) hard-reg-set.h output.h $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(FUNCTION_H) $(EXCEPT_H) $(GGC_H) \\\n+   $(REGS_H) hard-reg-set.h output.h $(DIAGNOSTIC_CORE_H) $(FUNCTION_H) $(EXCEPT_H) $(GGC_H) \\\n    $(TM_P_H) $(TIMEVAR_H) $(OBSTACK_H) $(TREE_H) alloc-pool.h \\\n    $(HASHTAB_H) $(DF_H) $(CFGLOOP_H) $(TREE_FLOW_H) $(TREE_PASS_H)\n cfghooks.o: cfghooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(TREE_H) $(BASIC_BLOCK_H) $(TREE_FLOW_H) $(TIMEVAR_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(CFGLOOP_H)\n+   $(TREE_H) $(BASIC_BLOCK_H) $(TREE_FLOW_H) $(TIMEVAR_H) toplev.h $(DIAGNOSTIC_CORE_H) $(CFGLOOP_H)\n cfgexpand.o : cfgexpand.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) \\\n    coretypes.h $(TREE_DUMP_H) $(EXCEPT_H) langhooks.h $(TREE_PASS_H) $(RTL_H) \\\n-   $(DIAGNOSTIC_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(BASIC_BLOCK_H) $(FLAGS_H) debug.h $(PARAMS_H) \\\n+   $(DIAGNOSTIC_H) toplev.h $(DIAGNOSTIC_CORE_H) $(BASIC_BLOCK_H) $(FLAGS_H) debug.h $(PARAMS_H) \\\n    value-prof.h $(TREE_INLINE_H) $(TARGET_H) $(SSAEXPAND_H) \\\n    tree-pretty-print.h gimple-pretty-print.h $(BITMAP_H) sbitmap.h $(INSN_ATTR_H)\n cfgrtl.o : cfgrtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_H) \\\n@@ -3248,18 +3247,18 @@ cfgrtl.o : cfgrtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_H) \\\n    $(TREE_PASS_H) $(DF_H) $(GGC_H)\n cfganal.o : cfganal.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(BASIC_BLOCK_H) hard-reg-set.h insn-config.h $(RECOG_H) $(TM_P_H) \\\n-   $(TIMEVAR_H) $(OBSTACK_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) vecprim.h sbitmap.h $(BITMAP_H)\n+   $(TIMEVAR_H) $(OBSTACK_H) $(DIAGNOSTIC_CORE_H) vecprim.h sbitmap.h $(BITMAP_H)\n cfgbuild.o : cfgbuild.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(FLAGS_H) $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h output.h $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) \\\n+   $(FLAGS_H) $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h output.h $(DIAGNOSTIC_CORE_H) \\\n    $(FUNCTION_H) $(EXCEPT_H) $(TIMEVAR_H) $(TREE_H) $(EXPR_H) sbitmap.h\n cfgcleanup.o : cfgcleanup.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(TIMEVAR_H) hard-reg-set.h output.h $(FLAGS_H) $(RECOG_H) \\\n-   $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) insn-config.h cselib.h $(TARGET_H) $(TM_P_H) $(PARAMS_H) \\\n+   $(DIAGNOSTIC_CORE_H) insn-config.h cselib.h $(TARGET_H) $(TM_P_H) $(PARAMS_H) \\\n    $(REGS_H) $(EMIT_RTL_H) $(CFGLAYOUT_H) $(TREE_PASS_H) $(CFGLOOP_H) $(EXPR_H) \\\n    $(DF_H) $(DBGCNT_H) dce.h\n cfgloop.o : cfgloop.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) coretypes.h $(TM_H) \\\n    $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(FLAGS_H) $(FUNCTION_H) \\\n-   $(OBSTACK_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(TREE_FLOW_H) $(TREE_H) pointer-set.h output.h \\\n+   $(OBSTACK_H) toplev.h $(DIAGNOSTIC_CORE_H) $(TREE_FLOW_H) $(TREE_H) pointer-set.h output.h \\\n    $(GGC_H)\n cfgloopanal.o : cfgloopanal.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) \\\n    $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(EXPR_H) coretypes.h $(TM_H) \\\n@@ -3268,7 +3267,7 @@ graphds.o : graphds.c graphds.h $(CONFIG_H) $(SYSTEM_H) $(BITMAP_H) $(OBSTACK_H)\n    coretypes.h $(VEC_H) vecprim.h\n loop-iv.o : loop-iv.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(BASIC_BLOCK_H) \\\n    hard-reg-set.h $(CFGLOOP_H) $(EXPR_H) coretypes.h $(TM_H) $(OBSTACK_H) \\\n-   output.h intl.h $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(DF_H) $(HASHTAB_H)\n+   output.h intl.h $(DIAGNOSTIC_CORE_H) $(DF_H) $(HASHTAB_H)\n loop-invariant.o : loop-invariant.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) \\\n    $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(EXPR_H) $(RECOG_H) \\\n    coretypes.h $(TM_H) $(TM_P_H) $(FUNCTION_H) $(FLAGS_H) $(DF_H) \\\n@@ -3288,28 +3287,28 @@ loop-unroll.o: loop-unroll.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TM_H) \\\n    output.h $(EXPR_H) coretypes.h $(TM_H) $(HASHTAB_H) $(RECOG_H) \\\n    $(OBSTACK_H)\n dominance.o : dominance.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   hard-reg-set.h $(BASIC_BLOCK_H) et-forest.h $(OBSTACK_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) \\\n+   hard-reg-set.h $(BASIC_BLOCK_H) et-forest.h $(OBSTACK_H) $(DIAGNOSTIC_CORE_H) \\\n    $(TIMEVAR_H) graphds.h vecprim.h pointer-set.h $(BITMAP_H)\n et-forest.o : et-forest.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    et-forest.h alloc-pool.h $(BASIC_BLOCK_H)\n combine.o : combine.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(FLAGS_H) $(FUNCTION_H) insn-config.h $(INSN_ATTR_H) $(REGS_H) $(EXPR_H) \\\n    rtlhooks-def.h $(BASIC_BLOCK_H) $(RECOG_H) hard-reg-set.h \\\n-   $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(TM_P_H) $(TREE_H) $(TARGET_H) output.h $(PARAMS_H) $(OPTABS_H) \\\n+   toplev.h $(DIAGNOSTIC_CORE_H) $(TM_P_H) $(TREE_H) $(TARGET_H) output.h $(PARAMS_H) $(OPTABS_H) \\\n    insn-codes.h $(TIMEVAR_H) $(TREE_PASS_H) $(DF_H) vecprim.h $(CGRAPH_H)\n reginfo.o : reginfo.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    hard-reg-set.h $(FLAGS_H) $(BASIC_BLOCK_H) addresses.h $(REGS_H) \\\n-   insn-config.h $(RECOG_H) reload.h $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) \\\n+   insn-config.h $(RECOG_H) reload.h $(DIAGNOSTIC_CORE_H) \\\n    $(FUNCTION_H) output.h $(TM_P_H) $(EXPR_H) $(TIMEVAR_H) $(HASHTAB_H) \\\n    $(TARGET_H) $(TREE_PASS_H) $(DF_H) ira.h\n bitmap.o : bitmap.c $(CONFIG_H) $(SYSTEM_H)  coretypes.h \\\n    $(GGC_H) gt-bitmap.h $(BITMAP_H) $(OBSTACK_H) $(HASHTAB_H)\n vec.o : vec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(VEC_H) $(GGC_H) \\\n-   $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(HASHTAB_H)\n+   toplev.h $(DIAGNOSTIC_CORE_H) $(HASHTAB_H)\n reload.o : reload.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_H) \\\n    $(FLAGS_H) output.h $(EXPR_H) $(OPTABS_H) reload.h $(RECOG_H) \\\n    hard-reg-set.h insn-config.h $(REGS_H) $(FUNCTION_H) real.h \\\n-   addresses.h $(TM_P_H) $(PARAMS_H) $(TARGET_H) $(DF_H) ira.h $(TOPLEV_H) $(DIAGNOSTIC_CORE_H)\n+   addresses.h $(TM_P_H) $(PARAMS_H) $(TARGET_H) $(DF_H) ira.h toplev.h $(DIAGNOSTIC_CORE_H)\n reload1.o : reload1.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_H) \\\n    $(EXPR_H) $(OPTABS_H) reload.h $(REGS_H) hard-reg-set.h insn-config.h \\\n    $(BASIC_BLOCK_H) $(RECOG_H) output.h $(FUNCTION_H)  $(TM_P_H) \\\n@@ -3320,28 +3319,28 @@ rtlhooks.o :  rtlhooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n postreload.o : postreload.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(FLAGS_H) $(EXPR_H) $(OPTABS_H) reload.h $(REGS_H) \\\n    hard-reg-set.h insn-config.h $(BASIC_BLOCK_H) $(RECOG_H) output.h \\\n-   $(FUNCTION_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) cselib.h $(TM_P_H) $(EXCEPT_H) $(TREE_H) $(MACHMODE_H) \\\n+   $(FUNCTION_H) $(DIAGNOSTIC_CORE_H) cselib.h $(TM_P_H) $(EXCEPT_H) $(TREE_H) $(MACHMODE_H) \\\n    $(OBSTACK_H) $(TARGET_H) $(TIMEVAR_H) $(TREE_PASS_H) $(DF_H) $(DBGCNT_H)\n postreload-gcse.o : postreload-gcse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(RTL_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n-   $(RECOG_H) $(EXPR_H) $(BASIC_BLOCK_H) $(FUNCTION_H) output.h $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) \\\n+   $(RECOG_H) $(EXPR_H) $(BASIC_BLOCK_H) $(FUNCTION_H) output.h $(DIAGNOSTIC_CORE_H) \\\n    $(TM_P_H) $(EXCEPT_H) $(TREE_H) $(TARGET_H) $(HASHTAB_H) intl.h $(OBSTACK_H) \\\n    $(PARAMS_H) $(TIMEVAR_H) $(TREE_PASS_H) $(DBGCNT_H)\n caller-save.o : caller-save.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(FLAGS_H) $(REGS_H) hard-reg-set.h insn-config.h $(BASIC_BLOCK_H) $(FUNCTION_H) \\\n-   addresses.h $(RECOG_H) reload.h $(EXPR_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(TM_P_H) $(DF_H) \\\n+   addresses.h $(RECOG_H) reload.h $(EXPR_H) $(DIAGNOSTIC_CORE_H) $(TM_P_H) $(DF_H) \\\n    output.h gt-caller-save.h $(GGC_H)\n bt-load.o : bt-load.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(EXCEPT_H) \\\n    $(RTL_H) hard-reg-set.h $(REGS_H) $(TM_P_H) $(FIBHEAP_H) output.h $(EXPR_H) \\\n    $(TARGET_H) $(FLAGS_H) $(INSN_ATTR_H) $(FUNCTION_H) $(TREE_PASS_H) \\\n-   $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(DF_H) vecprim.h $(RECOG_H)\n+   toplev.h $(DIAGNOSTIC_CORE_H) $(DF_H) vecprim.h $(RECOG_H)\n reorg.o : reorg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    conditions.h hard-reg-set.h $(BASIC_BLOCK_H) $(REGS_H) insn-config.h \\\n    $(INSN_ATTR_H) $(EXCEPT_H) $(RECOG_H) $(FUNCTION_H) $(FLAGS_H) output.h \\\n-   $(EXPR_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(PARAMS_H) $(TM_P_H) $(OBSTACK_H) $(RESOURCE_H) \\\n+   $(EXPR_H) $(DIAGNOSTIC_CORE_H) $(PARAMS_H) $(TM_P_H) $(OBSTACK_H) $(RESOURCE_H) \\\n    $(TIMEVAR_H) $(TARGET_H) $(TREE_PASS_H)\n alias.o : alias.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(FLAGS_H) hard-reg-set.h $(BASIC_BLOCK_H) $(REGS_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) output.h \\\n+   $(FLAGS_H) hard-reg-set.h $(BASIC_BLOCK_H) $(REGS_H) $(DIAGNOSTIC_CORE_H) output.h \\\n    $(ALIAS_H) $(EMIT_RTL_H) $(GGC_H) $(FUNCTION_H) cselib.h $(TREE_H) $(TM_P_H) \\\n    langhooks.h $(TARGET_H) gt-alias.h $(TIMEVAR_H) $(CGRAPH_H) \\\n    $(SPLAY_TREE_H) $(IPA_TYPE_ESCAPE_H) $(DF_H) $(TREE_PASS_H) \\\n@@ -3354,69 +3353,69 @@ init-regs.o : init-regs.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(BASIC_BLOCK_H) $(FLAGS_H) $(DF_H)\n ira-build.o: ira-build.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TARGET_H) $(RTL_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) \\\n-   insn-config.h $(RECOG_H) $(BASIC_BLOCK_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(TM_P_H) \\\n+   insn-config.h $(RECOG_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_CORE_H) $(TM_P_H) \\\n    $(PARAMS_H) $(DF_H) sparseset.h $(IRA_INT_H) output.h reload.h\n ira-costs.o: ira-costs.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    hard-reg-set.h $(RTL_H) $(EXPR_H) $(TM_P_H) $(FLAGS_H) $(BASIC_BLOCK_H) \\\n-   $(REGS_H) addresses.h insn-config.h $(RECOG_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(TARGET_H) \\\n+   $(REGS_H) addresses.h insn-config.h $(RECOG_H) $(DIAGNOSTIC_CORE_H) $(TARGET_H) \\\n    $(PARAMS_H) $(IRA_INT_H) reload.h\n ira-conflicts.o: ira-conflicts.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TARGET_H) $(RTL_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) \\\n-   insn-config.h $(RECOG_H) $(BASIC_BLOCK_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(TM_P_H) $(PARAMS_H) \\\n+   insn-config.h $(RECOG_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_CORE_H) $(TM_P_H) $(PARAMS_H) \\\n    $(DF_H) sparseset.h addresses.h $(IRA_INT_H)\n ira-color.o: ira-color.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TARGET_H) $(RTL_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) \\\n-   $(EXPR_H) $(BASIC_BLOCK_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(TM_P_H) reload.h $(PARAMS_H) \\\n+   $(EXPR_H) $(BASIC_BLOCK_H) toplev.h $(DIAGNOSTIC_CORE_H) $(TM_P_H) reload.h $(PARAMS_H) \\\n    $(DF_H) $(SPLAY_TREE_H) $(IRA_INT_H)\n ira-emit.o: ira-emit.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(REGS_H) $(RTL_H) $(TM_P_H) $(TARGET_H) $(FLAGS_H) hard-reg-set.h \\\n    $(BASIC_BLOCK_H) $(EXPR_H) $(RECOG_H) $(PARAMS_H) $(TIMEVAR_H) \\\n    $(TREE_PASS_H) output.h reload.h $(DF_H) $(IRA_INT_H)\n ira-lives.o: ira-lives.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TARGET_H) $(RTL_H) $(REGS_H) $(EXCEPT_H) hard-reg-set.h $(FLAGS_H) \\\n-   insn-config.h $(RECOG_H) $(BASIC_BLOCK_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(TM_P_H) $(PARAMS_H) \\\n+   insn-config.h $(RECOG_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_CORE_H) $(TM_P_H) $(PARAMS_H) \\\n    $(DF_H) sparseset.h $(IRA_INT_H)\n ira.o: ira.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(REGS_H) $(RTL_H) $(TM_P_H) $(TARGET_H) $(FLAGS_H) $(OBSTACK_H) \\\n    $(BITMAP_H) hard-reg-set.h $(BASIC_BLOCK_H) \\\n    $(EXPR_H) $(RECOG_H) $(PARAMS_H) $(TIMEVAR_H) $(TREE_PASS_H) output.h \\\n-   $(EXCEPT_H) reload.h $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(INTEGRATE_H) $(DF_H) $(GGC_H) $(IRA_INT_H)\n+   $(EXCEPT_H) reload.h toplev.h $(DIAGNOSTIC_CORE_H) $(INTEGRATE_H) $(DF_H) $(GGC_H) $(IRA_INT_H)\n regmove.o : regmove.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    insn-config.h $(TIMEVAR_H) $(TREE_PASS_H) $(DF_H) \\\n    $(RECOG_H) output.h $(REGS_H) hard-reg-set.h $(FLAGS_H) $(FUNCTION_H) \\\n-   $(EXPR_H) $(BASIC_BLOCK_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(TM_P_H) \\\n+   $(EXPR_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_CORE_H) $(TM_P_H) \\\n    $(EXCEPT_H) ira.h reload.h $(TARGET_H)\n combine-stack-adj.o : combine-stack-adj.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(RTL_H) insn-config.h $(TIMEVAR_H) $(TREE_PASS_H) \\\n    $(RECOG_H) output.h $(REGS_H) hard-reg-set.h $(FLAGS_H) $(FUNCTION_H) \\\n-   $(EXPR_H) $(BASIC_BLOCK_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(TM_P_H) $(DF_H) $(EXCEPT_H) reload.h\n+   $(EXPR_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_CORE_H) $(TM_P_H) $(DF_H) $(EXCEPT_H) reload.h\n ddg.o : ddg.c $(DDG_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TARGET_H) \\\n-   $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(RTL_H) $(TM_P_H) $(REGS_H) $(FUNCTION_H) \\\n+   $(DIAGNOSTIC_CORE_H) $(RTL_H) $(TM_P_H) $(REGS_H) $(FUNCTION_H) \\\n    $(FLAGS_H) insn-config.h $(INSN_ATTR_H) $(EXCEPT_H) $(RECOG_H) \\\n    $(SCHED_INT_H) $(CFGLAYOUT_H) $(CFGLOOP_H) $(EXPR_H) $(BITMAP_H) \\\n    hard-reg-set.h sbitmap.h $(TM_H)\n modulo-sched.o : modulo-sched.c $(DDG_H) $(CONFIG_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   coretypes.h $(TARGET_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(RTL_H) $(TM_P_H) $(REGS_H) $(FUNCTION_H) \\\n+   coretypes.h $(TARGET_H) $(DIAGNOSTIC_CORE_H) $(RTL_H) $(TM_P_H) $(REGS_H) $(FUNCTION_H) \\\n    $(FLAGS_H) insn-config.h $(INSN_ATTR_H) $(EXCEPT_H) $(RECOG_H) \\\n    $(SCHED_INT_H) $(CFGLAYOUT_H) $(CFGLOOP_H) $(EXPR_H) $(PARAMS_H) \\\n    cfghooks.h $(GCOV_IO_H) hard-reg-set.h $(TM_H) $(TIMEVAR_H) $(TREE_PASS_H) \\\n    $(DF_H) $(DBGCNT_H)\n haifa-sched.o : haifa-sched.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(SCHED_INT_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h $(FUNCTION_H) \\\n-   $(INSN_ATTR_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(RECOG_H) $(EXCEPT_H) $(TM_P_H) $(TARGET_H) output.h \\\n+   $(INSN_ATTR_H) $(DIAGNOSTIC_CORE_H) $(RECOG_H) $(EXCEPT_H) $(TM_P_H) $(TARGET_H) output.h \\\n    $(PARAMS_H) $(DBGCNT_H) $(CFGLOOP_H) ira.h $(EMIT_RTL_H)\n sched-deps.o : sched-deps.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(SCHED_INT_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n-   $(FUNCTION_H) $(INSN_ATTR_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(RECOG_H) $(EXCEPT_H) cselib.h \\\n+   $(FUNCTION_H) $(INSN_ATTR_H) $(DIAGNOSTIC_CORE_H) $(RECOG_H) $(EXCEPT_H) cselib.h \\\n    ira.h $(PARAMS_H) $(TM_P_H) ira.h $(TARGET_H)\n sched-rgn.o : sched-rgn.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(SCHED_INT_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n-   $(FUNCTION_H) $(INSN_ATTR_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(RECOG_H) $(EXCEPT_H) $(PARAMS_H) \\\n+   $(FUNCTION_H) $(INSN_ATTR_H) $(DIAGNOSTIC_CORE_H) $(RECOG_H) $(EXCEPT_H) $(PARAMS_H) \\\n    $(TM_P_H) sel-sched.h $(TARGET_H) $(CFGLAYOUT_H) $(TIMEVAR_H) $(TREE_PASS_H)  \\\n    $(DBGCNT_H)\n sched-ebb.o : sched-ebb.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(SCHED_INT_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n-   $(FUNCTION_H) $(INSN_ATTR_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(RECOG_H) $(EXCEPT_H) $(TM_P_H) \\\n+   $(FUNCTION_H) $(INSN_ATTR_H) $(DIAGNOSTIC_CORE_H) $(RECOG_H) $(EXCEPT_H) $(TM_P_H) \\\n    $(PARAMS_H) $(CFGLAYOUT_H) $(TARGET_H) output.h\n sched-vis.o : sched-vis.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(SCHED_INT_H) hard-reg-set.h $(BASIC_BLOCK_H) $(OBSTACK_H) \\\n@@ -3429,28 +3428,28 @@ sel-sched.o : sel-sched.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(SEL_SCHED_IR_H) $(SEL_SCHED_DUMP_H) sel-sched.h $(DBGCNT_H) $(EMIT_RTL_H)\n sel-sched-dump.o : sel-sched-dump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n-   $(FUNCTION_H) $(INSN_ATTR_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(RECOG_H) $(EXCEPT_H) $(PARAMS_H) \\\n+   $(FUNCTION_H) $(INSN_ATTR_H) $(DIAGNOSTIC_CORE_H) $(RECOG_H) $(EXCEPT_H) $(PARAMS_H) \\\n    $(TM_P_H) $(TARGET_H) $(CFGLAYOUT_H) $(TIMEVAR_H) $(TREE_PASS_H) \\\n    $(SEL_SCHED_DUMP_H) $(GGC_H) $(TREE_H) $(LANGHOOKS_DEF_H) $(SEL_SCHED_IR_H) \\\n    output.h $(BASIC_BLOCK_H) cselib.h\n sel-sched-ir.o : sel-sched-ir.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n-   $(FUNCTION_H) $(INSN_ATTR_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(RECOG_H) $(EXCEPT_H) $(PARAMS_H) \\\n+   $(FUNCTION_H) $(INSN_ATTR_H) $(DIAGNOSTIC_CORE_H) $(RECOG_H) $(EXCEPT_H) $(PARAMS_H) \\\n    $(TM_P_H) $(TARGET_H) $(TIMEVAR_H) $(TREE_PASS_H) $(SCHED_INT_H) $(GGC_H) \\\n    $(TREE_H) langhooks.h rtlhooks-def.h $(SEL_SCHED_IR_H) $(SEL_SCHED_DUMP_H) \\\n    $(EMIT_RTL_H)\n final.o : final.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_H) \\\n    $(TREE_H) $(FLAGS_H) intl.h $(REGS_H) $(RECOG_H) conditions.h \\\n    insn-config.h $(INSN_ATTR_H) $(FUNCTION_H) output.h hard-reg-set.h \\\n-   $(EXCEPT_H) debug.h xcoffout.h $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) reload.h dwarf2out.h \\\n+   $(EXCEPT_H) debug.h xcoffout.h toplev.h $(DIAGNOSTIC_CORE_H) reload.h dwarf2out.h \\\n    $(TREE_PASS_H) $(BASIC_BLOCK_H) $(TM_P_H) $(TARGET_H) $(EXPR_H) \\\n    $(CFGLAYOUT_H) dbxout.h $(TIMEVAR_H) $(CGRAPH_H) $(COVERAGE_H) \\\n    $(DF_H) vecprim.h $(GGC_H) $(CFGLOOP_H) $(PARAMS_H) $(TREE_FLOW_H)\n recog.o : recog.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_H) \\\n    $(FUNCTION_H) $(BASIC_BLOCK_H) $(REGS_H) $(RECOG_H) $(EXPR_H) \\\n    $(FLAGS_H) insn-config.h $(INSN_ATTR_H) output.h reload.h \\\n    addresses.h $(TM_P_H) $(TIMEVAR_H) $(TREE_PASS_H) hard-reg-set.h \\\n-   $(DF_H) $(DBGCNT_H) $(TARGET_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H)\n+   $(DF_H) $(DBGCNT_H) $(TARGET_H) toplev.h $(DIAGNOSTIC_CORE_H)\n reg-stack.o : reg-stack.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_ERROR_H) $(TREE_H) $(RECOG_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) \\\n    insn-config.h reload.h $(FUNCTION_H) $(TM_P_H) $(GGC_H) \\\n@@ -3459,16 +3458,16 @@ reg-stack.o : reg-stack.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n sreal.o: sreal.c $(CONFIG_H) $(SYSTEM_H) coretypes.h sreal.h\n predict.o: predict.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(FLAGS_H) insn-config.h $(BASIC_BLOCK_H) $(REGS_H) \\\n-   hard-reg-set.h output.h $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(RECOG_H) $(FUNCTION_H) $(EXCEPT_H) \\\n+   hard-reg-set.h output.h $(DIAGNOSTIC_CORE_H) $(RECOG_H) $(FUNCTION_H) $(EXCEPT_H) \\\n    $(TM_P_H) $(PREDICT_H) sreal.h $(PARAMS_H) $(TARGET_H) $(CFGLOOP_H) \\\n    $(COVERAGE_H) $(SCEV_H) $(GGC_H) predict.def $(TIMEVAR_H) $(TREE_DUMP_H) \\\n    $(TREE_FLOW_H) $(TREE_PASS_H) $(EXPR_H) pointer-set.h\n-lists.o: lists.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) \\\n+lists.o: lists.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(DIAGNOSTIC_CORE_H) \\\n    $(RTL_H) $(GGC_H) gt-lists.h\n bb-reorder.o : bb-reorder.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(FLAGS_H) $(TIMEVAR_H) output.h $(CFGLAYOUT_H) $(FIBHEAP_H) \\\n    $(TARGET_H) $(FUNCTION_H) $(TM_P_H) $(OBSTACK_H) $(EXPR_H) $(REGS_H) \\\n-   $(PARAMS_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(TREE_PASS_H) $(DF_H) \\\n+   $(PARAMS_H) toplev.h $(DIAGNOSTIC_CORE_H) $(TREE_PASS_H) $(DF_H) \\\n    bb-reorder.h\n tracer.o : tracer.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(BASIC_BLOCK_H) hard-reg-set.h output.h $(CFGLAYOUT_H) \\\n@@ -3480,17 +3479,17 @@ cfglayout.o : cfglayout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(GGC_H) alloc-pool.h $(FLAGS_H) $(OBSTACK_H) $(TREE_PASS_H) vecprim.h \\\n    $(DF_H) $(EMIT_RTL_H)\n timevar.o : timevar.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TIMEVAR_H) $(FLAGS_H) intl.h $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(RTL_H) timevar.def\n+   $(TIMEVAR_H) $(FLAGS_H) intl.h toplev.h $(DIAGNOSTIC_CORE_H) $(RTL_H) timevar.def\n regcprop.o : regcprop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) insn-config.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h \\\n    output.h $(RECOG_H) $(FUNCTION_H) $(OBSTACK_H) $(FLAGS_H) $(TM_P_H) \\\n-   addresses.h reload.h $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(TIMEVAR_H) $(TREE_PASS_H) $(DF_H)\n+   addresses.h reload.h $(DIAGNOSTIC_CORE_H) $(TIMEVAR_H) $(TREE_PASS_H) $(DF_H)\n regrename.o : regrename.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_ERROR_H) insn-config.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h \\\n    output.h $(RECOG_H) $(FUNCTION_H) $(OBSTACK_H) $(FLAGS_H) $(TM_P_H) \\\n    addresses.h reload.h $(TIMEVAR_H) $(TREE_PASS_H) $(DF_H)\n ifcvt.o : ifcvt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(REGS_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(FLAGS_H) insn-config.h $(FUNCTION_H) $(RECOG_H) \\\n+   $(REGS_H) toplev.h $(DIAGNOSTIC_CORE_H) $(FLAGS_H) insn-config.h $(FUNCTION_H) $(RECOG_H) \\\n    $(TARGET_H) $(BASIC_BLOCK_H) $(EXPR_H) output.h $(EXCEPT_H) $(TM_P_H) \\\n    $(OPTABS_H) $(CFGLOOP_H) hard-reg-set.h $(TIMEVAR_H) \\\n    $(TREE_PASS_H) $(DF_H) $(DBGCNT_H)\n@@ -3504,25 +3503,25 @@ lambda-code.o: lambda-code.c $(LAMBDA_H) $(GGC_H) $(SYSTEM_H) $(CONFIG_H) \\\n    $(CFGLOOP_H) $(TREE_DATA_REF_H) $(EXPR_H) coretypes.h $(TARGET_H) \\\n    $(TREE_PASS_H) $(VEC_H) vecprim.h $(OBSTACK_H) pointer-set.h\n params.o : params.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(PARAMS_H) \\\n-   $(TOPLEV_H) $(DIAGNOSTIC_CORE_H)\n+   $(DIAGNOSTIC_CORE_H)\n pointer-set.o: pointer-set.c pointer-set.h $(CONFIG_H) $(SYSTEM_H)\n hooks.o: hooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(HOOKS_H)\n pretty-print.o: $(CONFIG_H) $(SYSTEM_H) coretypes.h intl.h $(PRETTY_PRINT_H)\n errors.o : errors.c $(CONFIG_H) $(SYSTEM_H) errors.h $(BCONFIG_H)\n-dbgcnt.o: dbgcnt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(DBGCNT_H) \\\n+dbgcnt.o: dbgcnt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(DIAGNOSTIC_CORE_H) $(DBGCNT_H) \\\n    $(TM_H) $(RTL_H) output.h\n lower-subreg.o : lower-subreg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(MACHMODE_H) $(TM_H) $(RTL_H) $(TM_P_H) $(TIMEVAR_H) $(FLAGS_H) \\\n    insn-config.h $(BASIC_BLOCK_H) $(RECOG_H) $(OBSTACK_H) $(BITMAP_H) \\\n    $(EXPR_H) $(EXCEPT_H) $(REGS_H) $(TREE_PASS_H) $(DF_H) dce.h\n target-globals.o : target-globals.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) insn-config.h $(MACHMODE_H) $(GGC_H) $(TOPLEV_H) target-globals.h \\\n+   $(TM_H) insn-config.h $(MACHMODE_H) $(GGC_H) toplev.h target-globals.h \\\n    $(FLAGS_H) $(REGS_H) $(RTL_H) reload.h expmed.h $(EXPR_H) $(OPTABS_H) \\\n    $(LIBFUNCS_H) $(CFGLOOP_H) $(IRA_INT_H) builtins.h gcse.h bb-reorder.h\n \n $(out_object_file): $(out_file) $(CONFIG_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(RTL_H) $(REGS_H) hard-reg-set.h insn-config.h conditions.h \\\n-   output.h $(INSN_ATTR_H) $(SYSTEM_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) \\\n+   output.h $(INSN_ATTR_H) $(SYSTEM_H) toplev.h $(DIAGNOSTIC_CORE_H) \\\n    $(TARGET_H) $(LIBFUNCS_H) $(TARGET_DEF_H) $(FUNCTION_H) $(SCHED_INT_H) \\\n    $(TM_P_H) $(EXPR_H) langhooks.h $(GGC_H) $(OPTABS_H) $(REAL_H) \\\n    tm-constrs.h $(GIMPLE_H) $(DF_H) cselib.h\n@@ -3566,18 +3565,18 @@ s-mddeps: $(md_file) $(MD_INCLUDES) build/genmddeps$(build_exeext)\n # Header dependencies for generated source files.\n insn-attrtab.o : insn-attrtab.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t\\\n   $(TM_H) $(RTL_H) $(REGS_H) output.h $(INSN_ATTR_H)\t\t\t\\\n-  insn-config.h $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(RECOG_H) $(TM_P_H) $(FLAGS_H)\n+  insn-config.h toplev.h $(DIAGNOSTIC_CORE_H) $(RECOG_H) $(TM_P_H) $(FLAGS_H)\n insn-automata.o : insn-automata.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t\\\n   $(TM_H) $(RTL_H) $(REGS_H) output.h $(INSN_ATTR_H)\t\t\t\\\n-  insn-config.h $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(RECOG_H) $(TM_P_H) $(FLAGS_H) $(EMIT_RTL_H)\n+  insn-config.h toplev.h $(DIAGNOSTIC_CORE_H) $(RECOG_H) $(TM_P_H) $(FLAGS_H) $(EMIT_RTL_H)\n insn-emit.o : insn-emit.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H)\t\\\n   $(RTL_H) $(TM_P_H) $(FUNCTION_H) $(EXPR_H) $(OPTABS_H) \t\t\\\n   dfp.h $(FLAGS_H) output.h insn-config.h hard-reg-set.h $(RECOG_H)\t\\\n-  $(RESOURCE_H) reload.h $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(REGS_H) tm-constrs.h $(GGC_H)\t\\\n+  $(RESOURCE_H) reload.h toplev.h $(DIAGNOSTIC_CORE_H) $(REGS_H) tm-constrs.h $(GGC_H)\t\\\n   $(BASIC_BLOCK_H) $(INTEGRATE_H)\n insn-enums.o : insn-enums.c $(CONFIG_H) $(SYSTEM_H) insn-constants.h\n insn-extract.o : insn-extract.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t\\\n-  $(TM_H) $(RTL_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) insn-config.h $(RECOG_H)\n+  $(TM_H) $(RTL_H) toplev.h $(DIAGNOSTIC_CORE_H) insn-config.h $(RECOG_H)\n insn-modes.o : insn-modes.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t$(TM_H) \\\n   $(MACHMODE_H)\n insn-opinit.o : insn-opinit.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t\\\n@@ -3586,18 +3585,18 @@ insn-opinit.o : insn-opinit.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t\\\n insn-output.o : insn-output.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t\\\n   $(TM_H) $(RTL_H) $(GGC_H) $(REGS_H) conditions.h\t\t\t\\\n   hard-reg-set.h insn-config.h $(INSN_ATTR_H) $(EXPR_H) output.h\t\\\n-  $(RECOG_H) $(FUNCTION_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(FLAGS_H) insn-codes.h $(TM_P_H)\\\n+  $(RECOG_H) $(FUNCTION_H) toplev.h $(DIAGNOSTIC_CORE_H) $(FLAGS_H) insn-codes.h $(TM_P_H)\\\n   $(TARGET_H) tm-constrs.h\n insn-peep.o : insn-peep.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H)\t\\\n   insn-config.h $(RTL_H) $(TM_P_H) $(REGS_H) output.h \t\t\t\\\n-  $(RECOG_H) $(EXCEPT_H) $(FUNCTION_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(FLAGS_H) tm-constrs.h\n+  $(RECOG_H) $(EXCEPT_H) $(FUNCTION_H) toplev.h $(DIAGNOSTIC_CORE_H) $(FLAGS_H) tm-constrs.h\n insn-preds.o : insn-preds.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t\t\\\n   $(TM_H) $(RTL_H) $(TREE_H) insn-config.h $(RECOG_H) output.h\t\t\\\n   $(FLAGS_H) $(FUNCTION_H) hard-reg-set.h $(RESOURCE_H) $(TM_P_H)\t\\\n-  $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) reload.h $(REGS_H) tm-constrs.h\n+  toplev.h $(DIAGNOSTIC_CORE_H) reload.h $(REGS_H) tm-constrs.h\n insn-recog.o : insn-recog.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t\t\\\n   $(TM_H) $(RTL_H) insn-config.h $(RECOG_H) output.h $(FLAGS_H)\t\t\\\n-  $(FUNCTION_H) hard-reg-set.h $(RESOURCE_H) $(TM_P_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H)\t\\\n+  $(FUNCTION_H) hard-reg-set.h $(RESOURCE_H) $(TM_P_H) toplev.h $(DIAGNOSTIC_CORE_H)\t\\\n   reload.h $(REGS_H) tm-constrs.h\n \n # For each of the files generated by running a generator program over\n@@ -3886,11 +3885,11 @@ build/read-rtl.o: read-rtl.c $(BCONFIG_H) $(SYSTEM_H) coretypes.h\t\\\n build/rtl.o: rtl.c $(BCONFIG_H) coretypes.h $(GTM_H) $(SYSTEM_H)\t\\\n   $(RTL_H) $(GGC_H) errors.h\n build/vec.o : vec.c $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(VEC_H)\t\\\n-   $(GGC_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H)\n+   $(GGC_H) toplev.h $(DIAGNOSTIC_CORE_H)\n build/gencondmd.o : build/gencondmd.c $(BCONFIG_H) $(SYSTEM_H)\t\t\\\n   coretypes.h $(GTM_H) insn-constants.h\t\t\t\t\t\\\n   $(filter-out insn-flags.h, $(RTL_H) $(TM_P_H) $(FUNCTION_H) $(REGS_H) \\\n-  $(RECOG_H) output.h $(FLAGS_H) $(RESOURCE_H) $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) reload.h \t\\\n+  $(RECOG_H) output.h $(FLAGS_H) $(RESOURCE_H) toplev.h $(DIAGNOSTIC_CORE_H) reload.h \t\\\n   $(EXCEPT_H) tm-constrs.h)\n # This pulls in tm-pred.h which contains inline functions wrapping up\n # predicates from the back-end so those functions must be discarded.\n@@ -3946,7 +3945,7 @@ build/genopinit.o : genopinit.c $(RTL_BASE_H) $(BCONFIG_H) $(SYSTEM_H)\t\\\n build/genoutput.o : genoutput.c $(RTL_BASE_H) $(BCONFIG_H) $(SYSTEM_H)\t\\\n   coretypes.h $(GTM_H) errors.h $(READ_MD_H) gensupport.h\n build/genpeep.o : genpeep.c $(RTL_BASE_H) $(BCONFIG_H) $(SYSTEM_H)\t\\\n-  coretypes.h $(GTM_H) errors.h gensupport.h $(TOPLEV_H) $(DIAGNOSTIC_CORE_H)\n+  coretypes.h $(GTM_H) errors.h gensupport.h toplev.h $(DIAGNOSTIC_CORE_H)\n build/genpreds.o : genpreds.c $(RTL_BASE_H) $(BCONFIG_H) $(SYSTEM_H)\t\\\n   coretypes.h $(GTM_H) errors.h $(READ_MD_H) gensupport.h $(OBSTACK_H)\n build/genrecog.o : genrecog.c $(RTL_BASE_H) $(BCONFIG_H) $(SYSTEM_H)\t\\\n@@ -4556,7 +4555,7 @@ installdirs:\n \t$(mkinstalldirs) $(DESTDIR)$(man7dir)\n \n PLUGIN_HEADERS = $(TREE_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-  $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) $(BASIC_BLOCK_H) $(GIMPLE_H) $(TREE_PASS_H) $(GCC_PLUGIN_H) \\\n+  toplev.h $(DIAGNOSTIC_CORE_H) $(BASIC_BLOCK_H) $(GIMPLE_H) $(TREE_PASS_H) $(GCC_PLUGIN_H) \\\n   $(GGC_H) $(TREE_DUMP_H) $(PRETTY_PRINT_H) $(OPTS_H) $(PARAMS_H) plugin.def \\\n   $(tm_file_list) $(tm_include_list) $(tm_p_file_list) $(tm_p_include_list) \\\n   $(host_xm_file_list) $(host_xm_include_list) $(xm_include_list) \\"}, {"sha": "c5ff664874a32bf8f996d7cce229a92f21369bc4", "filename": "gcc/alias.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -35,7 +35,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"output.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"cselib.h\"\n #include \"splay-tree.h\"\n #include \"ggc.h\""}, {"sha": "cb905428d92bdd5707219ccff1315edffdc20fa0", "filename": "gcc/auto-inc-dec.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fauto-inc-dec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fauto-inc-dec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fauto-inc-dec.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -34,7 +34,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"function.h\"\n #include \"except.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"recog.h\"\n #include \"expr.h\"\n #include \"timevar.h\""}, {"sha": "346901ff7151c90caa84251e76c3b94a5ac0b0f3", "filename": "gcc/c-aux-info.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fc-aux-info.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fc-aux-info.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-aux-info.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -2,7 +2,7 @@\n    on information stored in GCC's tree structure.  This code implements the\n    -aux-info option.\n    Copyright (C) 1989, 1991, 1994, 1995, 1997, 1998,\n-   1999, 2000, 2003, 2004, 2007 Free Software Foundation, Inc.\n+   1999, 2000, 2003, 2004, 2007, 2010 Free Software Foundation, Inc.\n    Contributed by Ron Guilmette (rfg@segfault.us.com).\n \n This file is part of GCC.\n@@ -28,7 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"tree.h\"\n #include \"c-tree.h\"\n-#include \"toplev.h\"\n \n enum formals_style_enum {\n   ansi,"}, {"sha": "f67aecf64ba49ba90a5c34a5b0ff5906fbbd7496", "filename": "gcc/c-convert.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fc-convert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fc-convert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-convert.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,6 +1,6 @@\n /* Language-level data type conversion for GNU C.\n    Copyright (C) 1987, 1988, 1991, 1998, 2002, 2003, 2004, 2005, 2007, 2008,\n-   2009 Free Software Foundation, Inc.\n+   2009, 2010 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -34,7 +34,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"c-family/c-common.h\"\n #include \"c-tree.h\"\n #include \"langhooks.h\"\n-#include \"toplev.h\"\n #include \"target.h\"\n \n /* Change of width--truncation and extension of integers or reals--"}, {"sha": "7593aa0da3099bc26811be25c86c3c664078dfcb", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,3 +1,9 @@\n+2010-11-30  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* c-common.h (parse_optimize_options): Declare.\n+\t* c-cppbuiltin.c, c-format.c, c-gimplify.c, c-lex.c, c-omp.c,\n+\tc-pch.c, c-pragma.c, c-semantics.c: Don't include toplev.h.\n+\n 2010-11-29  Joseph Myers  <joseph@codesourcery.com>\n \n \t* c-opts.c (check_deps_environment_vars): Use getenv instead of"}, {"sha": "620836fef2b0170c6843baea5c2c32c11568d587", "filename": "gcc/c-family/c-common.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fc-family%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fc-family%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.h?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -894,6 +894,8 @@ extern bool c_cpp_error (cpp_reader *, int, int, location_t, unsigned int,\n \t\t\t const char *, va_list *)\n      ATTRIBUTE_GCC_DIAG(6,0);\n \n+extern bool parse_optimize_options (tree, bool);\n+\n /* Positive if an implicit `extern \"C\"' scope has just been entered;\n    negative if such a scope has just been exited.  */\n extern GTY(()) int pending_lang_change;"}, {"sha": "576074c7a0d721e07ea75863f96c6d8c7f0a5974", "filename": "gcc/c-family/c-cppbuiltin.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fc-family%2Fc-cppbuiltin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fc-family%2Fc-cppbuiltin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-cppbuiltin.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -29,7 +29,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"c-pragma.h\"\n #include \"output.h\"\n #include \"debug.h\"\t\t/* For dwarf2out_do_cfi_asm.  */\n-#include \"toplev.h\"\n #include \"tm_p.h\"\t\t/* For TARGET_CPU_CPP_BUILTINS & friends.  */\n #include \"target.h\"\n #include \"cpp-id-data.h\""}, {"sha": "f5fc9d7ddb1b3754ccbff62852d31a6de3427dbd", "filename": "gcc/c-family/c-format.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fc-family%2Fc-format.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fc-family%2Fc-format.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-format.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -26,7 +26,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"flags.h\"\n #include \"c-common.h\"\n-#include \"toplev.h\"\n #include \"intl.h\"\n #include \"diagnostic-core.h\"\n #include \"langhooks.h\""}, {"sha": "769df7cd2004dd87aa92a328f0fbdee98e14aa54", "filename": "gcc/c-family/c-gimplify.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fc-family%2Fc-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fc-family%2Fc-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-gimplify.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -37,7 +37,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"langhooks.h\"\n #include \"langhooks-def.h\"\n #include \"flags.h\"\n-#include \"toplev.h\"\n #include \"tree-dump.h\"\n #include \"c-pretty-print.h\"\n #include \"cgraph.h\""}, {"sha": "778e4246749b523f0d223eef6c606df4e369b1e7", "filename": "gcc/c-family/c-lex.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fc-family%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fc-family%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-lex.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -32,7 +32,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"timevar.h\"\n #include \"cpplib.h\"\n #include \"c-pragma.h\"\n-#include \"toplev.h\"\n #include \"intl.h\"\n #include \"splay-tree.h\"\n #include \"debug.h\""}, {"sha": "b9b144896da54324b496bec185e12bc758113b58", "filename": "gcc/c-family/c-omp.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fc-family%2Fc-omp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fc-family%2Fc-omp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-omp.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -26,7 +26,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tree.h\"\n #include \"c-common.h\"\n-#include \"toplev.h\"\n #include \"gimple.h\"\t\t/* For create_tmp_var_raw.  */\n #include \"langhooks.h\"\n "}, {"sha": "b429d9d7713bd0e86afcdbb90a66021580e3c8a9", "filename": "gcc/c-family/c-pch.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fc-family%2Fc-pch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fc-family%2Fc-pch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pch.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -27,7 +27,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"c-common.h\"\n #include \"output.h\"\n-#include \"toplev.h\"\n #include \"debug.h\"\n #include \"c-pragma.h\"\n #include \"ggc.h\""}, {"sha": "fa8771ec09fda7e333ba33e857d753d9b4c1dbb7", "filename": "gcc/c-family/c-pragma.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fc-family%2Fc-pragma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fc-family%2Fc-pragma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pragma.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -29,7 +29,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cpplib.h\"\n #include \"c-pragma.h\"\n #include \"flags.h\"\n-#include \"toplev.h\"\n #include \"c-common.h\"\n #include \"output.h\"\n #include \"tm_p.h\"\t\t/* For REGISTER_TARGET_PRAGMAS (why is"}, {"sha": "0f9f51e061de9bd9b9c42c806566849576bc8e14", "filename": "gcc/c-family/c-semantics.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fc-family%2Fc-semantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fc-family%2Fc-semantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-semantics.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,5 +1,5 @@\n /* This file contains subroutine used by the C front-end to construct GENERIC.\n-   Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008\n+   Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n    Written by Benjamin Chelf (chelf@codesourcery.com).\n \n@@ -27,7 +27,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"function.h\"\n #include \"splay-tree.h\"\n #include \"c-common.h\"\n-#include \"toplev.h\"\n #include \"flags.h\"\n #include \"output.h\"\n #include \"tree-iterator.h\""}, {"sha": "d12d90e6b3be0aadeac006fcba15c31938a23f8f", "filename": "gcc/c-parser.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parser.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -50,7 +50,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"c-tree.h\"\n #include \"flags.h\"\n #include \"output.h\"\n-#include \"toplev.h\"\n #include \"ggc.h\"\n #include \"c-family/c-common.h\"\n #include \"vec.h\""}, {"sha": "6e42a27c771e21216670e5a99f28f94c05f841db", "filename": "gcc/caller-save.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcaller-save.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcaller-save.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcaller-save.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -35,7 +35,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"function.h\"\n #include \"expr.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"tm_p.h\"\n #include \"addresses.h\"\n #include \"output.h\""}, {"sha": "c8ef799148e8c48050767198cd5d26d7b9e3c0ad", "filename": "gcc/cfg.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfg.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -58,7 +58,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"function.h\"\n #include \"except.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"tm_p.h\"\n #include \"obstack.h\"\n #include \"timevar.h\""}, {"sha": "138ae29d211fcb1007283307123172650ee43030", "filename": "gcc/cfganal.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcfganal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcfganal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfganal.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,6 +1,6 @@\n /* Control flow graph analysis code for GNU compiler.\n    Copyright (C) 1987, 1988, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2001, 2003, 2004, 2005, 2006, 2007, 2008\n+   1999, 2000, 2001, 2003, 2004, 2005, 2006, 2007, 2008, 2010\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -31,7 +31,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-config.h\"\n #include \"recog.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"tm_p.h\"\n #include \"vec.h\"\n #include \"vecprim.h\""}, {"sha": "6f0d69e452311f710271413d3ce2a14b15cf8433", "filename": "gcc/cfgbuild.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcfgbuild.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcfgbuild.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgbuild.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,6 +1,6 @@\n /* Control flow graph building code for GNU compiler.\n    Copyright (C) 1987, 1988, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008\n+   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -35,7 +35,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"except.h\"\n #include \"expr.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"timevar.h\"\n #include \"sbitmap.h\"\n "}, {"sha": "c365b5e8a2dff30aadf916401703a8954ac570ae", "filename": "gcc/cfgcleanup.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgcleanup.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -44,7 +44,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"recog.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"cselib.h\"\n #include \"params.h\"\n #include \"tm_p.h\""}, {"sha": "76c175cd552900d68c9bb95f6fc9db63ff076936", "filename": "gcc/combine-stack-adj.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcombine-stack-adj.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcombine-stack-adj.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine-stack-adj.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,7 +1,7 @@\n /* Combine stack adjustments.\n    Copyright (C) 1987, 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997,\n-   1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n-   Free Software Foundation, Inc.\n+   1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,\n+   2010 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -57,7 +57,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"df.h\"\n #include \"except.h\"\n-#include \"toplev.h\"\n #include \"reload.h\"\n #include \"timevar.h\"\n #include \"tree-pass.h\""}, {"sha": "3d9efd57841466f3385965d4a4ace0d1c71ce203", "filename": "gcc/config/arm/pe.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Farm%2Fpe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Farm%2Fpe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fpe.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,5 +1,5 @@\n /* Routines for GCC for ARM/pe.\n-   Copyright (C) 1995, 1996, 2000, 2001, 2002, 2004, 2005, 2007, 2008\n+   Copyright (C) 1995, 1996, 2000, 2001, 2002, 2004, 2005, 2007, 2008, 2010\n    Free Software Foundation, Inc.\n    Contributed by Doug Evans (dje@cygnus.com).\n \n@@ -29,7 +29,6 @@\n #include \"tree.h\"\n #include \"expr.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"tm_p.h\"\n \n extern int current_function_anonymous_args;"}, {"sha": "626b1d29a1250187a62f90fca0b3853857ac2b13", "filename": "gcc/config/arm/t-pe", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Farm%2Ft-pe", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Farm%2Ft-pe", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-pe?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,4 +1,5 @@\n-# Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2006, 2008, 2009\n+# Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2006, 2008, 2009,\n+# 2010\n # Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n@@ -39,7 +40,7 @@ dp-bit.c: $(srcdir)/config/fp-bit.c\n \tcat $(srcdir)/config/fp-bit.c >> dp-bit.c\n \n pe.o: $(srcdir)/config/arm/pe.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-  $(RTL_H) output.h flags.h $(TREE_H) expr.h toplev.h $(TM_P_H)\n+  $(RTL_H) output.h flags.h $(TREE_H) expr.h $(TM_P_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/arm/pe.c\n "}, {"sha": "165bef200e8f0c30747e2c89d3dafb50be90f659", "filename": "gcc/config/arm/t-wince-pe", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Farm%2Ft-wince-pe", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Farm%2Ft-wince-pe", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-wince-pe?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,4 +1,5 @@\n-# Copyright (C) 2003, 2004, 2006, 2008, 2009 Free Software Foundation, Inc.\n+# Copyright (C) 2003, 2004, 2006, 2008, 2009, 2010\n+# Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -38,7 +39,7 @@ dp-bit.c: $(srcdir)/config/fp-bit.c\n \tcat $(srcdir)/config/fp-bit.c >> dp-bit.c\n \n pe.o: $(srcdir)/config/arm/pe.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-  $(RTL_H) output.h flags.h $(TREE_H) expr.h toplev.h $(TM_P_H)\n+  $(RTL_H) output.h flags.h $(TREE_H) expr.h $(TM_P_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/arm/pe.c\n "}, {"sha": "c246f70daa4a89b4430d1e568925ed33ca7fe3ee", "filename": "gcc/config/darwin-c.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fdarwin-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fdarwin-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin-c.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -30,7 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"c-family/c-pragma.h\"\n #include \"c-family/c-format.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"flags.h\"\n #include \"tm_p.h\"\n #include \"cppdefault.h\""}, {"sha": "4d5a5512e9fde9c1b124a899796de2ae134fbaec", "filename": "gcc/config/host-darwin.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fhost-darwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fhost-darwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fhost-darwin.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -21,7 +21,6 @@\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"config/host-darwin.h\"\n \n /* Yes, this is really supposed to work.  */"}, {"sha": "7d975af435caf666089a6a1c3476953ff23b2691", "filename": "gcc/config/i386/host-cygwin.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fi386%2Fhost-cygwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fi386%2Fhost-cygwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fhost-cygwin.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -22,7 +22,6 @@\n #include \"coretypes.h\"\n #include \"hosthooks.h\"\n #include \"hosthooks-def.h\"\n-#include \"toplev.h\"\n #include \"diagnostic.h\"\n \n static void * cygwin_gt_pch_get_address (size_t, int fd);"}, {"sha": "c224b2807b8846f1925be7e120d8e1dd881df862", "filename": "gcc/config/i386/host-mingw32.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fi386%2Fhost-mingw32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fi386%2Fhost-mingw32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fhost-mingw32.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,5 +1,5 @@\n /* mingw32 host-specific hook definitions.\n-   Copyright (C) 2004, 2007, 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2007, 2009, 2010 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n \n@@ -22,7 +22,6 @@\n #include \"coretypes.h\"\n #include \"hosthooks.h\"\n #include \"hosthooks-def.h\"\n-#include \"toplev.h\"\n #include \"diagnostic.h\"\n \n "}, {"sha": "513952e862ab00ab1684a290f74084ce1ba8b67a", "filename": "gcc/config/i386/msformat-c.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fi386%2Fmsformat-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fi386%2Fmsformat-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmsformat-c.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -26,7 +26,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"flags.h\"\n #include \"c-family/c-common.h\"\n-#include \"toplev.h\"\n #include \"intl.h\"\n #include \"diagnostic.h\"\n #include \"langhooks.h\""}, {"sha": "2232dbf6e51170285dd9ca19194a736b0ae59cbf", "filename": "gcc/config/i386/netware.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fi386%2Fnetware.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fi386%2Fnetware.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fnetware.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,6 +1,7 @@\n /* Subroutines for insn-output.c for NetWare.\n    Contributed by Jan Beulich (jbeulich@novell.com)\n-   Copyright (C) 2004, 2005, 2007, 2008 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005, 2007, 2008, 2009, 2010\n+   Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -30,7 +31,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"tm_p.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"langhooks.h\"\n #include \"ggc.h\"\n "}, {"sha": "05d1a92d1d7b521f18775a924c2114ce93a8d378", "filename": "gcc/config/i386/nwld.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fi386%2Fnwld.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fi386%2Fnwld.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fnwld.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,6 +1,6 @@\n /* Subroutines for insn-output.c for NetWare.\n    Contributed by Jan Beulich (jbeulich@novell.com)\n-   Copyright (C) 2004, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2007, 2010 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -30,7 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"tm_p.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n \n void\n nwld_named_section_asm_out_constructor (rtx symbol, int priority)"}, {"sha": "eb4b9daa321b63f1a3a78d33b2ec3d7621a085a9", "filename": "gcc/config/i386/t-cygming", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fi386%2Ft-cygming", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fi386%2Ft-cygming", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-cygming?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 2003, 2005, 2008, 2009 Free Software Foundation, Inc.\n+# Copyright (C) 2003, 2005, 2008, 2009, 2010 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -36,20 +36,20 @@ winnt.o: $(srcdir)/config/i386/winnt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n \n winnt-cxx.o: $(srcdir)/config/i386/winnt-cxx.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n   $(TM_H) $(TREE_H) flags.h \\\n-  $(TM_P_H) toplev.h $(HASHTAB_H) $(GGC_H)\n+  $(TM_P_H) $(HASHTAB_H) $(GGC_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t$(srcdir)/config/i386/winnt-cxx.c\n \n \n winnt-stubs.o: $(srcdir)/config/i386/winnt-stubs.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n   $(TM_H) $(RTL_H) $(REGS_H) hard-reg-set.h output.h $(TREE_H) flags.h \\\n-  $(TM_P_H) toplev.h $(HASHTAB_H) $(GGC_H)\n+  $(TM_P_H) $(HASHTAB_H) $(GGC_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t$(srcdir)/config/i386/winnt-stubs.c\n \n msformat-c.o: $(srcdir)/config/i386/msformat-c.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n   $(TM_H) $(RTL_H) $(REGS_H) hard-reg-set.h output.h $(TREE_H) flags.h \\\n-  $(TM_P_H) toplev.h $(HASHTAB_H) $(GGC_H)\n+  $(TM_P_H) $(HASHTAB_H) $(GGC_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t$(srcdir)/config/i386/msformat-c.c\n "}, {"sha": "9c55230069947ce4b2751492b6d066ea3bbc183f", "filename": "gcc/config/i386/winnt-cxx.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fi386%2Fwinnt-cxx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fi386%2Fwinnt-cxx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwinnt-cxx.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,6 +1,6 @@\n /* Target support for C++ classes on Windows.\n    Contributed by Danny Smith (dannysmith@users.sourceforge.net)\n-   Copyright (C) 2005, 2007, 2009  Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2007, 2009, 2010  Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -27,7 +27,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"tm_p.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"hashtab.h\"\n \n bool"}, {"sha": "eb4f124bb0e1cf86a116799432f31b270e39d01f", "filename": "gcc/config/i386/winnt-stubs.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fi386%2Fwinnt-stubs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fi386%2Fwinnt-stubs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwinnt-stubs.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,6 +1,6 @@\n /* Dummy subroutines for language-specific support on Windows.\n    Contributed by Danny Smith (dannysmith@users.sourceforge.net)\n-   Copyright (C) 2005, 2007\n+   Copyright (C) 2005, 2007, 2010\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -31,7 +31,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"tm_p.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"hashtab.h\"\n \n bool"}, {"sha": "e56e6d4e4e93d7e2bcea2576e0a78363aff2f6f4", "filename": "gcc/config/ia64/ia64-c.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fia64%2Fia64-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fia64%2Fia64-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64-c.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,5 +1,6 @@\n /* Definitions of C specific functions for GNU compiler.\n-   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003, 2004, 2005, 2007, 2010\n+   Free Software Foundation, Inc.\n    Contributed by Steve Ellcey <sje@cup.hp.com>\n \n This file is part of GCC.\n@@ -27,7 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"c-family/c-common.h\"\n #include \"c-family/c-pragma.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"tm_p.h\"\n \n static void ia64_hpux_add_pragma_builtin (tree func);"}, {"sha": "3e82d71e39daf33941e535f228bbeb5baef08a32", "filename": "gcc/config/ia64/t-ia64", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fia64%2Ft-ia64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fia64%2Ft-ia64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Ft-ia64?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -47,7 +47,7 @@ LIB2ADDEH = $(srcdir)/config/ia64/unwind-ia64.c $(srcdir)/unwind-sjlj.c \\\n   $(srcdir)/unwind-c.c\n \n ia64-c.o: $(srcdir)/config/ia64/ia64-c.c $(CONFIG_H) $(SYSTEM_H) \\\n-    coretypes.h $(TM_H) $(TREE_H) $(CPPLIB_H) $(C_COMMON_H) $(C_PRAGMA_H) toplev.h\n+    coretypes.h $(TM_H) $(TREE_H) $(CPPLIB_H) $(C_COMMON_H) $(C_PRAGMA_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/ia64/ia64-c.c\n "}, {"sha": "df976574bdb4e52efa77380abea7640e7ee1e452", "filename": "gcc/config/m32c/m32c-pragma.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fm32c%2Fm32c-pragma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fm32c%2Fm32c-pragma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Fm32c-pragma.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -26,7 +26,6 @@\n #include \"c-family/c-pragma.h\"\n #include \"c-family/c-common.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"cpplib.h\"\n #include \"hard-reg-set.h\"\n #include \"output.h\""}, {"sha": "d9457ed6cd94f511341e344e157b11fe2517223e", "filename": "gcc/config/mep/mep-pragma.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fmep%2Fmep-pragma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fmep%2Fmep-pragma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Fmep-pragma.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -24,7 +24,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"c-family/c-pragma.h\"\n #include \"cpplib.h\"\n #include \"hard-reg-set.h\""}, {"sha": "fac6dad423900ccab37b411d2f1d5ae1140a580b", "filename": "gcc/config/mep/t-mep", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fmep%2Ft-mep", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fmep%2Ft-mep", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Ft-mep?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -33,7 +33,7 @@ CRTSTUFF_CFLAGS = -O0 $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) -g0 \\\n TCFLAGS = -mlibrary\n \n mep-pragma.o: $(srcdir)/config/mep/mep-pragma.c $(CONFIG_H) $(SYSTEM_H) \\\n-\tcoretypes.h $(TM_H) $(TREE_H) $(RTL_H) toplev.h $(C_PRAGMA_H) \\\n+\tcoretypes.h $(TM_H) $(TREE_H) $(RTL_H) $(C_PRAGMA_H) \\\n \t$(CPPLIB_H) hard-reg-set.h output.h $(srcdir)/config/mep/mep-protos.h \\\n \tfunction.h insn-config.h reload.h $(TARGET_H)\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<"}, {"sha": "32c38da311b12b07cc1ed9fbf13f7946291f2857", "filename": "gcc/config/microblaze/microblaze-c.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze-c.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -26,7 +26,6 @@\n #include \"cpplib.h\"\n #include \"tree.h\"\n #include \"c-family/c-common.h\"\n-#include \"toplev.h\"\n #include \"tm_p.h\"\n #include \"target.h\"\n "}, {"sha": "48afa46e1d25f265158feb1c0cf0dc7eac5acd2a", "filename": "gcc/config/rs6000/host-darwin.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Frs6000%2Fhost-darwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Frs6000%2Fhost-darwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fhost-darwin.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -24,7 +24,6 @@\n #include <sys/ucontext.h>\n #include \"hosthooks.h\"\n #include \"hosthooks-def.h\"\n-#include \"toplev.h\"\n #include \"diagnostic.h\"\n #include \"config/host-darwin.h\"\n "}, {"sha": "b2e0d60db5f893b823a1c895a20b7a022d66f4e9", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -30,7 +30,6 @@\n #include \"c-family/c-common.h\"\n #include \"c-family/c-pragma.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"tm_p.h\"\n #include \"target.h\"\n #include \"langhooks.h\""}, {"sha": "5403adf1a44b1f15189082bd0f1a3e59f8d2cb3c", "filename": "gcc/config/score/score3.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fscore%2Fscore3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fscore%2Fscore3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fscore%2Fscore3.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -30,7 +30,6 @@\n #include \"insn-attr.h\"\n #include \"recog.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"output.h\"\n #include \"tree.h\"\n #include \"function.h\""}, {"sha": "5bc315df75283d028afc062e78330a3f9648c5c7", "filename": "gcc/config/score/score7.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fscore%2Fscore7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fscore%2Fscore7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fscore%2Fscore7.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -30,7 +30,6 @@\n #include \"insn-attr.h\"\n #include \"recog.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"output.h\"\n #include \"tree.h\"\n #include \"function.h\""}, {"sha": "a550660d56e010841cd1ab017b1a686e6cd65c3f", "filename": "gcc/config/score/t-score-elf", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fscore%2Ft-score-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fscore%2Ft-score-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fscore%2Ft-score-elf?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 2006, 2007, 2008, 2009 Free Software Foundation, Inc.\n+# Copyright (C) 2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -19,13 +19,13 @@\n # Additional Backend Files\n score7.o: $(srcdir)/config/score/score7.c $(CONFIG_H) $(SYSTEM_H) \\\n   coretypes.h $(TM_H) $(RTL_H) output.h flags.h $(TREE_H) \\\n-  expr.h toplev.h $(TM_P_H)\n+  expr.h $(TM_P_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t$(srcdir)/config/score/score7.c\n \n score3.o: $(srcdir)/config/score/score3.c $(CONFIG_H) $(SYSTEM_H) \\\n   coretypes.h $(TM_H) $(RTL_H) output.h flags.h $(TREE_H) \\\n-  expr.h toplev.h $(TM_P_H)\n+  expr.h $(TM_P_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t$(srcdir)/config/score/score3.c\n "}, {"sha": "f8e678be3d2401465f5f62c50844b124df73cdfa", "filename": "gcc/config/sh/symbian-base.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fsh%2Fsymbian-base.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fsh%2Fsymbian-base.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsymbian-base.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -31,7 +31,6 @@\n #include \"expr.h\"\n #include \"tm_p.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"sh-symbian.h\"\n \n /* Return nonzero if SYMBOL is marked as being dllexport'd.  */"}, {"sha": "c93922a39110d7084a9f923d74ae1a18bc6f0cb4", "filename": "gcc/config/sh/symbian-c.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fsh%2Fsymbian-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fsh%2Fsymbian-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsymbian-c.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -30,7 +30,6 @@\n #include \"expr.h\"\n #include \"tm_p.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"sh-symbian.h\"\n \n \f"}, {"sha": "c0f8b71f6266c3b5a847605b506eef83d8c0ed8f", "filename": "gcc/config/sh/symbian-cxx.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fsh%2Fsymbian-cxx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fsh%2Fsymbian-cxx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsymbian-cxx.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -31,7 +31,6 @@\n #include \"tm_p.h\"\n #include \"cp/cp-tree.h\"\t/* We need access to the OVL_... macros.  */\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"sh-symbian.h\"\n \n \f"}, {"sha": "ff42c38952df67f67ab71c1a1e31baae1c481a01", "filename": "gcc/config/sol2-c.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fsol2-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fsol2-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2-c.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -24,7 +24,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"tm.h\"\n #include \"tm_p.h\"\n-#include \"toplev.h\"\n \n #include \"c-family/c-format.h\"\n #include \"intl.h\""}, {"sha": "7b4c3d6a9e0d7c8d1bf52a5edf9ccc0700bca37d", "filename": "gcc/config/sol2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fsol2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fsol2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -27,7 +27,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"rtl.h\"\n #include \"tm_p.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"ggc.h\"\n \n tree solaris_pending_aligns, solaris_pending_inits, solaris_pending_finis;"}, {"sha": "41f930e1061f5dfd38ae7ac2e2db68f659e4f28b", "filename": "gcc/config/t-darwin", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Ft-darwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Ft-darwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-darwin?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -26,7 +26,7 @@ darwin.o: $(srcdir)/config/darwin.c $(CONFIG_H) $(SYSTEM_H) coretypes.h     \\\n \t\t$(srcdir)/config/darwin.c\n \n darwin-c.o: $(srcdir)/config/darwin-c.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-  $(TM_H) $(CPPLIB_H) $(TREE_H) $(C_PRAGMA_H) toplev.h $(TM_P_H) \\\n+  $(TM_H) $(CPPLIB_H) $(TREE_H) $(C_PRAGMA_H) $(TM_P_H) \\\n   incpath.h flags.h $(C_COMMON_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/darwin-c.c $(PREPROCESSOR_DEFINES)"}, {"sha": "ce8840618462de412c07b048a1de232b17de8958", "filename": "gcc/config/t-sol2", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Ft-sol2", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Ft-sol2", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-sol2?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -19,12 +19,12 @@\n # Solaris-specific format checking and pragmas\n sol2-c.o: $(srcdir)/config/sol2-c.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n   tree.h c-family/c-format.h $(C_PRAGMA_H) $(C_COMMON_H) $(CPPLIB_H) \\\n-  intl.h $(TM_H) $(TM_P_H) toplev.h\n+  intl.h $(TM_H) $(TM_P_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t  $(srcdir)/config/sol2-c.c\n \n # Solaris-specific attributes\n sol2.o: $(srcdir)/config/sol2.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-  tree.h output.h $(TM_H) $(TM_P_H) toplev.h $(GGC_H)\n+  tree.h output.h $(TM_H) $(TM_P_H) $(GGC_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t  $(srcdir)/config/sol2.c"}, {"sha": "2e090616d954cf0a5e556539064cc50c755cb2fa", "filename": "gcc/config/t-vxworks", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Ft-vxworks", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Ft-vxworks", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-vxworks?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -49,5 +49,5 @@ LIMITS_H_TEST = true\n EXTRA_MULTILIB_PARTS = \n \n vxworks.o: $(srcdir)/config/vxworks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-\t$(TARGET_H) toplev.h output.h $(TM_H)\n+\t$(TARGET_H) output.h $(TM_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<"}, {"sha": "076b00d60ff0ef50dc7a7234684209a759a0415e", "filename": "gcc/config/v850/t-v850", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fv850%2Ft-v850", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fv850%2Ft-v850", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Ft-v850?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2008, 2009\n+# Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2008, 2009, 2010\n # Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n@@ -105,7 +105,7 @@ MULTILIB_MATCHES  = mv850e=mv850e1\n TCFLAGS = -mno-app-regs -msmall-sld -Wa,-mwarn-signed-overflow -Wa,-mwarn-unsigned-overflow\n \n v850-c.o: $(srcdir)/config/v850/v850-c.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-  $(TM_H) $(CPPLIB_H) $(TREE_H) $(C_PRAGMA_H) toplev.h $(GGC_H) $(TM_P_H)\n+  $(TM_H) $(CPPLIB_H) $(TREE_H) $(C_PRAGMA_H) $(GGC_H) $(TM_P_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/v850/v850-c.c \n "}, {"sha": "1eb7685208156c2c4137f10baf4c5ea2f2ff22a6", "filename": "gcc/config/v850/t-v850e", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fv850%2Ft-v850e", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fv850%2Ft-v850e", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Ft-v850e?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 2003, 2008 Free Software Foundation, Inc.\n+# Copyright (C) 2003, 2008, 2009, 2010 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -103,7 +103,7 @@ INSTALL_LIBGCC    = install-multilib\n TCFLAGS = -mno-app-regs -msmall-sld -Wa,-mwarn-signed-overflow -Wa,-mwarn-unsigned-overflow\n \n v850-c.o: $(srcdir)/config/v850/v850-c.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-  $(TM_H) $(CPPLIB_H) $(TREE_H) $(C_PRAGMA_H) toplev.h $(GGC_H) $(TM_P_H)\n+  $(TM_H) $(CPPLIB_H) $(TREE_H) $(C_PRAGMA_H) $(GGC_H) $(TM_P_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/v850/v850-c.c \n "}, {"sha": "db881cf4d9f106a0a0fd152f39056e83b5ee2830", "filename": "gcc/config/v850/v850-c.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fv850%2Fv850-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fv850%2Fv850-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850-c.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,5 +1,5 @@\n /* v850 specific, C compiler specific functions.\n-   Copyright (C) 2000, 2001, 2002, 2003, 2005, 2007, 2009\n+   Copyright (C) 2000, 2001, 2002, 2003, 2005, 2007, 2009, 2010\n    Free Software Foundation, Inc.\n    Contributed by Jeff Law (law@cygnus.com).\n \n@@ -27,7 +27,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"c-family/c-pragma.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"ggc.h\"\n #include \"tm_p.h\"\n "}, {"sha": "2445c8b5a35dc1b206d348f0774a897a3ff39c44", "filename": "gcc/config/vxworks.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fvxworks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconfig%2Fvxworks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvxworks.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -24,7 +24,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"target.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"output.h\"\n #include \"tm.h\"\n #include \"tree.h\""}, {"sha": "459d5337e35450bd24a6678dfc50ed9f632c7aee", "filename": "gcc/convert.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconvert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fconvert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconvert.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -31,7 +31,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"convert.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"langhooks.h\"\n \n /* Convert EXPR to some pointer or reference type TYPE."}, {"sha": "7c0d7bff6da7e6fe964ff9b45c323cfca85d29ec", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,3 +1,12 @@\n+2010-11-30  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* cp-gimplify.c, cp-lang.c, cvt.c, cxx-pretty-print.c, error.c,\n+\texcept.c, expr.c, friend.c, init.c, mangle.c, name-lookup.c,\n+\toptimize.c, parser.c, rtti.c, tree.c, typeck2.c: Don't include\n+\ttoplev.h.\n+\t* Make-lang.in: Dependencies for above files changed to remove\n+\ttoplev.h.\n+\n 2010-11-29  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/42260"}, {"sha": "e34a1ab72deac6ffff6f0df24ed25e307a766e61", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -248,7 +248,7 @@ CXX_PRETTY_PRINT_H = cp/cxx-pretty-print.h $(C_PRETTY_PRINT_H)\n \n cp/lex.o: cp/lex.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) \\\n   $(C_PRAGMA_H) toplev.h output.h input.h cp/operators.def $(TM_P_H)\n-cp/cp-lang.o: cp/cp-lang.c $(CXX_TREE_H) $(TM_H) toplev.h debug.h langhooks.h \\\n+cp/cp-lang.o: cp/cp-lang.c $(CXX_TREE_H) $(TM_H) debug.h langhooks.h \\\n   $(LANGHOOKS_DEF_H) $(C_COMMON_H) gtype-cp.h gt-cp-cp-lang.h \\\n   cp/cp-objcp-common.h $(EXPR_H) $(TARGET_H)\n cp/decl.o: cp/decl.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) cp/decl.h \\\n@@ -264,7 +264,7 @@ cp/cp-objcp-common.o : cp/cp-objcp-common.c $(CONFIG_H) $(SYSTEM_H) \\\n   coretypes.h $(TM_H) $(TREE_H) $(CXX_TREE_H) $(C_COMMON_H) toplev.h \\\n   langhooks.h $(LANGHOOKS_DEF_H) $(DIAGNOSTIC_H) debug.h \\\n   $(CXX_PRETTY_PRINT_H) cp/cp-objcp-common.h gt-cp-cp-objcp-common.h\n-cp/typeck2.o: cp/typeck2.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) toplev.h output.h \\\n+cp/typeck2.o: cp/typeck2.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) output.h \\\n   $(TM_P_H) $(DIAGNOSTIC_CORE_H) gt-cp-typeck2.h $(REAL_H) intl.h\n cp/typeck.o: cp/typeck.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) \\\n   toplev.h $(DIAGNOSTIC_H) convert.h $(C_COMMON_H) $(TARGET_H) \\\n@@ -274,27 +274,27 @@ cp/class.o: cp/class.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) toplev.h \\\n   $(SPLAY_TREE_H)\n cp/call.o: cp/call.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) toplev.h \\\n   $(DIAGNOSTIC_CORE_H) intl.h gt-cp-call.h convert.h $(TARGET_H) langhooks.h\n-cp/friend.o: cp/friend.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) toplev.h\n+cp/friend.o: cp/friend.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H)\n cp/init.o: cp/init.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) \\\n-  toplev.h $(EXCEPT_H) $(TARGET_H)\n+  $(EXCEPT_H) $(TARGET_H)\n cp/method.o: cp/method.c $(CXX_TREE_H) $(TM_H) toplev.h \\\n   $(TM_P_H) $(TARGET_H) $(DIAGNOSTIC_H) gt-cp-method.h $(GIMPLE_H)\n-cp/cvt.o: cp/cvt.c $(CXX_TREE_H) $(TM_H) cp/decl.h $(FLAGS_H) toplev.h \\\n+cp/cvt.o: cp/cvt.c $(CXX_TREE_H) $(TM_H) cp/decl.h $(FLAGS_H) \\\n   convert.h $(TARGET_H) intl.h\n cp/search.o: cp/search.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) toplev.h \\\n   intl.h\n-cp/tree.o: cp/tree.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) toplev.h \\\n+cp/tree.o: cp/tree.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) \\\n   $(TREE_INLINE_H) $(REAL_H) gt-cp-tree.h \\\n   $(TARGET_H) debug.h $(CGRAPH_H) $(SPLAY_TREE_H) $(GIMPLE_H)\n cp/ptree.o: cp/ptree.c $(CXX_TREE_H) $(TM_H)\n-cp/rtti.o: cp/rtti.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) toplev.h convert.h \\\n+cp/rtti.o: cp/rtti.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) convert.h \\\n   $(TARGET_H) $(C_PRAGMA_H) gt-cp-rtti.h intl.h\n cp/except.o: cp/except.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) \\\n-  toplev.h cp/cfns.h $(TREE_INLINE_H) $(TARGET_H)\n-cp/expr.o: cp/expr.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) toplev.h $(TM_P_H)\n+  cp/cfns.h $(TREE_INLINE_H) $(TARGET_H)\n+cp/expr.o: cp/expr.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) $(TM_P_H)\n cp/pt.o: cp/pt.c $(CXX_TREE_H) $(TM_H) cp/decl.h cp/cp-objcp-common.h \\\n   toplev.h $(TREE_INLINE_H) pointer-set.h gt-cp-pt.h vecprim.h intl.h\n-cp/error.o: cp/error.c $(CXX_TREE_H) $(TM_H) toplev.h $(DIAGNOSTIC_H) \\\n+cp/error.o: cp/error.c $(CXX_TREE_H) $(TM_H) $(DIAGNOSTIC_H) \\\n   $(FLAGS_H) $(REAL_H) $(LANGHOOKS_DEF_H) $(CXX_PRETTY_PRINT_H) \\\n   tree-diagnostic.h tree-pretty-print.h\n cp/repo.o: cp/repo.c $(CXX_TREE_H) $(TM_H) toplev.h $(DIAGNOSTIC_CORE_H) \\\n@@ -307,15 +307,15 @@ cp/dump.o: cp/dump.c $(CXX_TREE_H) $(TM_H) $(TREE_DUMP_H)\n cp/optimize.o: cp/optimize.c $(CXX_TREE_H) $(TM_H) \\\n   input.h $(PARAMS_H) debug.h $(TREE_INLINE_H) $(GIMPLE_H) \\\n   $(TARGET_H) tree-iterator.h $(CGRAPH_H) $(DIAGNOSTIC_CORE_H)\n-cp/mangle.o: cp/mangle.c $(CXX_TREE_H) $(TM_H) toplev.h $(REAL_H) \\\n+cp/mangle.o: cp/mangle.c $(CXX_TREE_H) $(TM_H) $(REAL_H) \\\n   gt-cp-mangle.h $(TARGET_H) $(TM_P_H) $(CGRAPH_H)\n cp/parser.o: cp/parser.c $(CXX_TREE_H) $(TM_H) $(DIAGNOSTIC_CORE_H) \\\n   gt-cp-parser.h output.h $(TARGET_H) $(PLUGIN_H) intl.h\n-cp/cp-gimplify.o: cp/cp-gimplify.c $(CXX_TREE_H) toplev.h $(C_COMMON_H) \\\n+cp/cp-gimplify.o: cp/cp-gimplify.c $(CXX_TREE_H) $(C_COMMON_H) \\\n \t$(TM_H) coretypes.h pointer-set.h tree-iterator.h\n \n cp/name-lookup.o: cp/name-lookup.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-\t$(TM_H) $(CXX_TREE_H) $(TIMEVAR_H) gt-cp-name-lookup.h toplev.h \\\n+\t$(TM_H) $(CXX_TREE_H) $(TIMEVAR_H) gt-cp-name-lookup.h \\\n \t$(DIAGNOSTIC_CORE_H) $(FLAGS_H) debug.h\n \n cp/cxx-pretty-print.o: cp/cxx-pretty-print.c $(CXX_PRETTY_PRINT_H) \\"}, {"sha": "42d7d58da370ffbbd0e8749a7b89000b482f8193", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,6 +1,6 @@\n /* C++-specific tree lowering bits; see also c-gimplify.c and tree-gimple.c.\n \n-   Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+   Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n    Contributed by Jason Merrill <jason@redhat.com>\n \n@@ -27,7 +27,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"cp-tree.h\"\n #include \"c-family/c-common.h\"\n-#include \"toplev.h\"\n #include \"tree-iterator.h\"\n #include \"gimple.h\"\n #include \"hashtab.h\""}, {"sha": "ff92666e4d4a2a6f9ea7660f23e18dc88bba9857", "filename": "gcc/cp/cp-lang.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcp%2Fcp-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcp%2Fcp-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-lang.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -26,7 +26,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"cp-tree.h\"\n #include \"c-family/c-common.h\"\n-#include \"toplev.h\"\n #include \"langhooks.h\"\n #include \"langhooks-def.h\"\n #include \"debug.h\""}, {"sha": "029aec3da8163d4a0430e91f30b1dc374418a404", "filename": "gcc/cp/cvt.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcp%2Fcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcp%2Fcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcvt.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -35,7 +35,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cp-tree.h\"\n #include \"intl.h\"\n #include \"convert.h\"\n-#include \"toplev.h\"\n #include \"decl.h\"\n #include \"target.h\"\n "}, {"sha": "a3e91462d06ebdc090b07c7d8fae671eb41155db", "filename": "gcc/cp/cxx-pretty-print.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcp%2Fcxx-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcp%2Fcxx-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcxx-pretty-print.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -27,7 +27,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cp-tree.h\"\n #include \"cxx-pretty-print.h\"\n #include \"tree-pretty-print.h\"\n-#include \"toplev.h\"\n \n /* Translate if being used for diagnostics, but not for dump files or\n    __PRETTY_FUNCTION.  */"}, {"sha": "2676966e09c2291eddec54c17bdf8a063411e84f", "filename": "gcc/cp/error.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -24,7 +24,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"cp-tree.h\"\n-#include \"toplev.h\"\n #include \"flags.h\"\n #include \"diagnostic.h\"\n #include \"tree-diagnostic.h\""}, {"sha": "c05e507574ce2c40197afce3013d579fcc4a5691", "filename": "gcc/cp/except.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcp%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcp%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexcept.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -31,7 +31,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cp-tree.h\"\n #include \"flags.h\"\n #include \"output.h\"\n-#include \"toplev.h\"\n #include \"tree-inline.h\"\n #include \"tree-iterator.h\"\n #include \"target.h\""}, {"sha": "ede4725da2ffbb79664ae913d11be942ec5cd88a", "filename": "gcc/cp/expr.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcp%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcp%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexpr.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -27,7 +27,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"flags.h\"\n #include \"cp-tree.h\"\n-#include \"toplev.h\"\n #include \"tm_p.h\"\n \n /* Expand C++-specific constants.  Currently, this means PTRMEM_CST.  */"}, {"sha": "b61611ad1ad8308f104616ae9308bbd9e9a897d3", "filename": "gcc/cp/friend.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcp%2Ffriend.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcp%2Ffriend.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ffriend.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,6 +1,6 @@\n /* Help friends in C++.\n    Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n-   2007, 2008  Free Software Foundation, Inc.\n+   2007, 2008, 2010  Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -26,7 +26,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cp-tree.h\"\n #include \"flags.h\"\n #include \"output.h\"\n-#include \"toplev.h\"\n \n /* Friend data structures are described in cp-tree.h.  */\n "}, {"sha": "9de8c9f61c3e6e168ae48f8b873f780da789894c", "filename": "gcc/cp/init.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -30,7 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cp-tree.h\"\n #include \"flags.h\"\n #include \"output.h\"\n-#include \"toplev.h\"\n #include \"target.h\"\n \n static bool begin_init_stmts (tree *, tree *);"}, {"sha": "4d2ace632bcee858f947d3630bda29fa0479620d", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,5 +1,5 @@\n /* Name mangling for the 3.0 C++ ABI.\n-   Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009\n+   Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n    Written by Alex Samuel <samuel@codesourcery.com>\n \n@@ -53,7 +53,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"cp-tree.h\"\n #include \"obstack.h\"\n-#include \"toplev.h\"\n #include \"flags.h\"\n #include \"target.h\"\n #include \"cgraph.h\""}, {"sha": "3d19c08f1859ebae3ca1e0592b5e60f0e9a92dfa", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -28,7 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cp-tree.h\"\n #include \"name-lookup.h\"\n #include \"timevar.h\"\n-#include \"toplev.h\"\n #include \"diagnostic-core.h\"\n #include \"debug.h\"\n #include \"c-family/c-pragma.h\""}, {"sha": "b00bc28f030b3f7c9741a01efc3c44357310d9b3", "filename": "gcc/cp/optimize.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcp%2Foptimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcp%2Foptimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Foptimize.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -26,7 +26,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"cp-tree.h\"\n #include \"input.h\"\n-#include \"toplev.h\"\n #include \"params.h\"\n #include \"hashtab.h\"\n #include \"target.h\""}, {"sha": "826de0c4106e8811bd479e082c0d3b9b564f56d7", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -31,7 +31,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"decl.h\"\n #include \"flags.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"output.h\"\n #include \"target.h\"\n #include \"cgraph.h\""}, {"sha": "16b0db956cd3f59a4c9f5ecba2fd5dee39c0e6d3", "filename": "gcc/cp/rtti.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcp%2Frtti.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcp%2Frtti.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Frtti.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,6 +1,6 @@\n /* RunTime Type Identification\n    Copyright (C) 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,\n-   2005, 2006, 2007, 2008, 2009\n+   2005, 2006, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n    Mostly written by Jason Merrill (jason@cygnus.com).\n \n@@ -30,7 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"output.h\"\n #include \"assert.h\"\n-#include \"toplev.h\"\n #include \"convert.h\"\n #include \"target.h\"\n #include \"c-family/c-pragma.h\""}, {"sha": "5538eea2e861611acfe8d903a77a83a84be75deb", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,6 +1,6 @@\n /* Language-dependent node constructors for parse phase of GNU compiler.\n    Copyright (C) 1987, 1988, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009\n+   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n    Hacked by Michael Tiemann (tiemann@cygnus.com)\n \n@@ -27,7 +27,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"cp-tree.h\"\n #include \"flags.h\"\n-#include \"toplev.h\"\n #include \"tree-inline.h\"\n #include \"debug.h\"\n #include \"convert.h\""}, {"sha": "1c0531415ab13b3c04f8da6a72d3a0e1089d0420", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -35,7 +35,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"intl.h\"\n #include \"cp-tree.h\"\n #include \"flags.h\"\n-#include \"toplev.h\"\n #include \"output.h\"\n #include \"diagnostic-core.h\"\n "}, {"sha": "cf7d2ff12fd13335a920cf59f465db021436033a", "filename": "gcc/cppbuiltin.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcppbuiltin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcppbuiltin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppbuiltin.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -25,7 +25,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"version.h\"\n #include \"flags.h\"\n-#include \"toplev.h\"\n #include \"cpp-id-data.h\"\n #include \"cppbuiltin.h\"\n #include \"target.h\""}, {"sha": "600930159fcfc00ee5db8ef104c64dd6494d8cc0", "filename": "gcc/cselib.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcselib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fcselib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcselib.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -34,7 +34,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"function.h\"\n #include \"emit-rtl.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"output.h\"\n #include \"ggc.h\"\n #include \"hashtab.h\""}, {"sha": "fa46ed8a60d7c6667f1ff60c103506a9fce87584", "filename": "gcc/dbgcnt.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fdbgcnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fdbgcnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbgcnt.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -23,7 +23,6 @@ See dbgcnt.def for usage information.  */\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"tm.h\"\n #include \"rtl.h\"\n #include \"output.h\""}, {"sha": "07dcde02d261e8aa87177ea6620a264d4007b9c7", "filename": "gcc/ddg.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fddg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fddg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fddg.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,5 +1,5 @@\n /* DDG - Data Dependence Graph implementation.\n-   Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009\n+   Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n    Contributed by Ayal Zaks and Mustafa Hagog <zaks,mustafa@il.ibm.com>\n \n@@ -25,7 +25,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"rtl.h\"\n #include \"tm_p.h\"\n #include \"hard-reg-set.h\""}, {"sha": "5a18db9f52fb5b1da93a1fdbb0dd6a1c4995daf9", "filename": "gcc/dfp.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fdfp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fdfp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdfp.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,5 +1,5 @@\n /* Decimal floating point support.\n-   Copyright (C) 2005, 2006, 2007, 2008, 2009 Free Software\n+   Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010 Free Software\n    Foundation, Inc.\n \n This file is part of GCC.\n@@ -23,7 +23,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"toplev.h\"\n #include \"tm_p.h\"\n #include \"dfp.h\"\n "}, {"sha": "a9edb0d421d2ceb8941cfb43068767713b8e3553", "filename": "gcc/diagnostic-core.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fdiagnostic-core.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fdiagnostic-core.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic-core.h?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -25,6 +25,7 @@ along with GCC; see the file COPYING3.  If not see\n #define GCC_DIAGNOSTIC_CORE_H\n \n #include \"input.h\"\n+#include \"bversion.h\"\n \n /* Constants used to discriminate diagnostics.  */\n typedef enum"}, {"sha": "03511e2393c772ca40800d4683f0ee0cad3da0a9", "filename": "gcc/dominance.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fdominance.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fdominance.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdominance.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -42,7 +42,6 @@\n #include \"obstack.h\"\n #include \"basic-block.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"et-forest.h\"\n #include \"timevar.h\"\n #include \"vecprim.h\""}, {"sha": "4a5b2908fdd744b0906bf2e1a33c3aa85f06f4d5", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -39,7 +39,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n #include \"tm_p.h\""}, {"sha": "022f60ed8365171bf7bc53ad81d46cf2a6b7752e", "filename": "gcc/fixed-value.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ffixed-value.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ffixed-value.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixed-value.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,5 +1,5 @@\n /* Fixed-point arithmetic support.\n-   Copyright (C) 2006, 2007, 2008, 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -23,7 +23,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n \n /* Compare two fixed objects for bitwise identity.  */\n "}, {"sha": "7ff5135dbb04804599f850fa8715286e13fb43f6", "filename": "gcc/fwprop.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ffwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ffwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffwprop.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -24,7 +24,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n \n #include \"sparseset.h\"\n #include \"timevar.h\""}, {"sha": "3ff64ffdd7dc1a1b31a29ba8342580fb41335dfd", "filename": "gcc/ggc-common.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fggc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fggc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-common.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -28,7 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ggc.h\"\n #include \"ggc-internal.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"params.h\"\n #include \"hosthooks.h\"\n #include \"hosthooks-def.h\""}, {"sha": "f9c0c546da433a6a3d076f0ed663b1adc1791b7a", "filename": "gcc/gimple.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fgimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fgimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -29,7 +29,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"gimple.h\"\n-#include \"toplev.h\"\n #include \"diagnostic.h\"\n #include \"tree-flow.h\"\n #include \"value-prof.h\""}, {"sha": "59e4248114dbb58e344071848826470760a12676", "filename": "gcc/gimplify.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -40,7 +40,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"output.h\"\n #include \"ggc.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"target.h\"\n #include \"pointer-set.h\"\n #include \"splay-tree.h\""}, {"sha": "5322cd4cb5c9dfc79d686784a073079cf05c1dc4", "filename": "gcc/graphite-blocking.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fgraphite-blocking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fgraphite-blocking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-blocking.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,7 +1,7 @@\n /* Heuristics and transform for loop blocking and strip mining on\n    polyhedral representation.\n \n-   Copyright (C) 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2009, 2010 Free Software Foundation, Inc.\n    Contributed by Sebastian Pop <sebastian.pop@amd.com> and\n    Pranav Garg  <pranav.garg2107@gmail.com>.\n \n@@ -31,7 +31,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"diagnostic.h\"\n #include \"tree-flow.h\"\n-#include \"toplev.h\"\n #include \"tree-dump.h\"\n #include \"timevar.h\"\n #include \"cfgloop.h\""}, {"sha": "4894b522e9311f7bbdae1cd9ba6dec5f8028195c", "filename": "gcc/graphite-clast-to-gimple.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fgraphite-clast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fgraphite-clast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-clast-to-gimple.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -28,7 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"diagnostic.h\"\n #include \"tree-flow.h\"\n-#include \"toplev.h\"\n #include \"tree-dump.h\"\n #include \"timevar.h\"\n #include \"cfgloop.h\""}, {"sha": "445195cf421bfbb04e73259a01b3be1f71996765", "filename": "gcc/graphite-dependences.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fgraphite-dependences.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fgraphite-dependences.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-dependences.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -29,7 +29,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"diagnostic.h\"\n #include \"tree-flow.h\"\n-#include \"toplev.h\"\n #include \"tree-dump.h\"\n #include \"timevar.h\"\n #include \"cfgloop.h\""}, {"sha": "6e341f4f3f81188d19d78c2fba2c1cae2080a9f5", "filename": "gcc/graphite-flattening.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fgraphite-flattening.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fgraphite-flattening.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-flattening.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -29,7 +29,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"diagnostic.h\"\n #include \"tree-flow.h\"\n-#include \"toplev.h\"\n #include \"tree-dump.h\"\n #include \"timevar.h\"\n #include \"cfgloop.h\""}, {"sha": "aafb94ae151fee4873faa05d2b990080533192b9", "filename": "gcc/graphite-interchange.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fgraphite-interchange.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fgraphite-interchange.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-interchange.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,7 +1,7 @@\n /* Interchange heuristics and transform for loop interchange on\n    polyhedral representation.\n \n-   Copyright (C) 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2009, 2010 Free Software Foundation, Inc.\n    Contributed by Sebastian Pop <sebastian.pop@amd.com> and\n    Harsha Jagasia <harsha.jagasia@amd.com>.\n \n@@ -31,7 +31,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"diagnostic.h\"\n #include \"tree-flow.h\"\n-#include \"toplev.h\"\n #include \"tree-dump.h\"\n #include \"timevar.h\"\n #include \"cfgloop.h\""}, {"sha": "9604e389cfda1531aa2b7a057c08166a3dfa53fb", "filename": "gcc/graphite-poly.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fgraphite-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fgraphite-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -31,7 +31,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n-#include \"toplev.h\"\n #include \"tree-dump.h\"\n #include \"timevar.h\"\n #include \"cfgloop.h\""}, {"sha": "6beddc361b029568d0012c76f0a6fe7349e34716", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -29,7 +29,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"diagnostic.h\"\n #include \"tree-flow.h\"\n-#include \"toplev.h\"\n #include \"tree-dump.h\"\n #include \"timevar.h\"\n #include \"cfgloop.h\""}, {"sha": "74b671d1279ca61cd66eab0475c9cf72f875a1ec", "filename": "gcc/graphite.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fgraphite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fgraphite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -42,7 +42,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"diagnostic.h\"\n #include \"tree-flow.h\"\n-#include \"toplev.h\"\n #include \"tree-dump.h\"\n #include \"timevar.h\"\n #include \"cfgloop.h\""}, {"sha": "a22baf9309793649caa613e9bc3a56aa85f2e9b9", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -129,7 +129,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"rtl.h\"\n #include \"tm_p.h\"\n #include \"hard-reg-set.h\""}, {"sha": "2e4b58b4e481dda437dc2d5158eb580362da8391", "filename": "gcc/implicit-zee.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fimplicit-zee.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fimplicit-zee.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fimplicit-zee.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -191,7 +191,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-attr.h\"\n #include \"recog.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"target.h\"\n #include \"timevar.h\"\n #include \"optabs.h\""}, {"sha": "7072a755b14fa6a4a8e5166608bc170c1868db95", "filename": "gcc/integrate.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,6 +1,6 @@\n /* Procedure integration for GCC.\n    Copyright (C) 1988, 1991, 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n-   2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+   2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@cygnus.com)\n \n@@ -39,7 +39,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"except.h\"\n #include \"function.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"intl.h\"\n #include \"params.h\"\n #include \"ggc.h\""}, {"sha": "101e8c90b12a306b7e43282341e05be9cccbb59e", "filename": "gcc/ipa-pure-const.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fipa-pure-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fipa-pure-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-pure-const.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -49,7 +49,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"output.h\"\n #include \"flags.h\"\n #include \"timevar.h\"\n-#include \"toplev.h\"\n #include \"diagnostic.h\"\n #include \"gimple-pretty-print.h\"\n #include \"langhooks.h\""}, {"sha": "a2a8517c78a45ed28cfe499bcaa06fb9c213dda4", "filename": "gcc/ipa-reference.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fipa-reference.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fipa-reference.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-reference.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -59,7 +59,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic.h\"\n #include \"langhooks.h\"\n #include \"lto-streamer.h\"\n-#include \"toplev.h\"\n \n static void remove_node_data (struct cgraph_node *node,\n \t\t\t      void *data ATTRIBUTE_UNUSED);"}, {"sha": "b3c1e14f8f756ca1b04a4d9859f15219479cfbca", "filename": "gcc/ira-build.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fira-build.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fira-build.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-build.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -33,7 +33,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-config.h\"\n #include \"recog.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"params.h\"\n #include \"df.h\"\n #include \"output.h\""}, {"sha": "498b38b3bd6a9c60fa315a1fc3903d2c259ee47f", "filename": "gcc/ira-conflicts.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fira-conflicts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fira-conflicts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-conflicts.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -33,7 +33,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-config.h\"\n #include \"recog.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"params.h\"\n #include \"df.h\"\n #include \"sparseset.h\""}, {"sha": "2a7a9a8c41880364257bfc7f4bfa1ccd310f19e6", "filename": "gcc/ira-costs.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fira-costs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fira-costs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-costs.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,5 +1,5 @@\n /* IRA hard register and memory cost calculation for allocnos or pseudos.\n-   Copyright (C) 2006, 2007, 2008, 2009\n+   Copyright (C) 2006, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n    Contributed by Vladimir Makarov <vmakarov@redhat.com>.\n \n@@ -35,7 +35,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"recog.h\"\n #include \"reload.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"target.h\"\n #include \"params.h\"\n #include \"ira-int.h\""}, {"sha": "5c5c41581dec62e0d38198259af3358e458b0f5e", "filename": "gcc/ira-lives.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fira-lives.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fira-lives.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-lives.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -34,7 +34,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-config.h\"\n #include \"recog.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"params.h\"\n #include \"df.h\"\n #include \"sbitmap.h\""}, {"sha": "c30c99496aa010359797f11ff7b0b6d3ad7068c4", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,3 +1,10 @@\n+2010-11-30  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* expr.c, lang.c, mangle.c, mangle_name.c, typeck.c,\n+\tverify-glue.c: Don't include toplev.h.\n+\t* Make-lang.in: Dependencies for above files changed to remove\n+\ttoplev.h.\n+\n 2010-11-29  Joseph Myers  <joseph@codesourcery.com>\n \n \t* boehm.c: Include \"config.h\" instead of <config.h>."}, {"sha": "b9741e23f41d9c5211511468e3d052d74eb62da1", "filename": "gcc/java/Make-lang.in", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fjava%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fjava%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMake-lang.in?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -289,7 +289,7 @@ java/except.o: java/except.c $(CONFIG_H) $(JAVA_TREE_H) java/jcf.h $(REAL_H) \\\n   toplev.h $(SYSTEM_H) coretypes.h\n java/expr.o: java/expr.c $(CONFIG_H) $(JAVA_TREE_H) java/jcf.h $(REAL_H) \\\n   java/javaop.h java/java-opcodes.h \\\n-  java/java-except.h java/java-except.h java/parse.h toplev.h \\\n+  java/java-except.h java/java-except.h java/parse.h \\\n   $(SYSTEM_H) coretypes.h $(TM_H) $(GGC_H) gt-java-expr.h $(TARGET_H) \\\n   tree-iterator.h\n java/jcf-depend.o: java/jcf-depend.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n@@ -301,21 +301,21 @@ java/jcf-parse.o: java/jcf-parse.c $(CONFIG_H) $(JAVA_TREE_H) $(FLAGS_H) \\\n java/jvgenmain.o: java/jvgenmain.c $(CONFIG_H) $(JAVA_TREE_H) $(SYSTEM_H) \\\n   coretypes.h $(TM_H) intl.h\n java/lang.o: java/lang.c $(CONFIG_H) $(JAVA_TREE_H) java/jcf.h input.h \\\n-  toplev.h $(SYSTEM_H) coretypes.h $(TM_H) $(DIAGNOSTIC_H) \\\n+  $(SYSTEM_H) coretypes.h $(TM_H) $(DIAGNOSTIC_H) \\\n   langhooks.h $(LANGHOOKS_DEF_H) gt-java-lang.h $(OPTS_H) $(OPTIONS_H) \\\n   $(TARGET_H)\n java/mangle.o: java/mangle.c $(CONFIG_H) java/jcf.h $(JAVA_TREE_H) $(SYSTEM_H) \\\n-  coretypes.h $(TM_H) toplev.h $(GGC_H) gt-java-mangle.h $(LANGHOOKS_DEF_H)\n+  coretypes.h $(TM_H) $(GGC_H) gt-java-mangle.h $(LANGHOOKS_DEF_H)\n java/mangle_name.o: java/mangle_name.c $(CONFIG_H) java/jcf.h $(JAVA_TREE_H) \\\n-  $(SYSTEM_H) coretypes.h toplev.h $(GGC_H)\n+  $(SYSTEM_H) coretypes.h $(GGC_H)\n java/resource.o: java/resource.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n   $(JAVA_TREE_H) java/jcf.h java/parse.h toplev.h output.h $(GGC_H) \\\n   $(TARGET_H) $(FUNCTION_H) gt-java-resource.h\n java/typeck.o: java/typeck.c $(CONFIG_H) $(JAVA_TREE_H) java/jcf.h \\\n-  toplev.h $(SYSTEM_H) coretypes.h $(GGC_H) $(REAL_H)\n+  $(SYSTEM_H) coretypes.h $(GGC_H) $(REAL_H)\n java/win32-host.o: java/win32-host.c $(CONFIG_H) $(SYSTEM_H) coretypes.h java/jcf.h\n java/verify-glue.o: java/verify-glue.c $(CONFIG_H) $(SYSTEM_H) $(JAVA_TREE_H) \\\n-  coretypes.h java/verify.h toplev.h\n+  coretypes.h java/verify.h\n java/verify-impl.o: java/verify-impl.c $(CONFIG_H) java/verify.h $(SYSTEM_H) \\\n   coretypes.h  java/jcf.h $(JAVA_TREE_H)\n java/zextract.o: java/zextract.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\"}, {"sha": "53feab5ced3f3da969d922bcededc3374fd25c28", "filename": "gcc/java/expr.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -36,7 +36,6 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"java-except.h\"\n #include \"parse.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"ggc.h\"\n #include \"tree-iterator.h\"\n #include \"target.h\""}, {"sha": "5501294ad36226aeb7311583eee74ef71498ae93", "filename": "gcc/java/lang.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fjava%2Flang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fjava%2Flang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -32,7 +32,6 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"input.h\"\n #include \"java-tree.h\"\n #include \"jcf.h\"\n-#include \"toplev.h\"\n #include \"langhooks.h\"\n #include \"langhooks-def.h\"\n #include \"flags.h\""}, {"sha": "48caf113e0fb93a59737f2c71f84d96ad4749262", "filename": "gcc/java/mangle.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fjava%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fjava%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fmangle.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,6 +1,6 @@\n /* Functions related to mangling class names for the GNU compiler\n    for the Java(TM) language.\n-   Copyright (C) 1998, 1999, 2001, 2002, 2003, 2006, 2007, 2008\n+   Copyright (C) 1998, 1999, 2001, 2002, 2003, 2006, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -33,7 +33,6 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"java-tree.h\"\n #include \"obstack.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"ggc.h\"\n #include \"langhooks-def.h\"\n #include \"tm.h\"         /* FIXME: For gcc_obstack_init from defaults.h.  */"}, {"sha": "658bb2bc4ba6403e9bfca39a6a46b9e252a906e4", "filename": "gcc/java/mangle_name.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fjava%2Fmangle_name.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fjava%2Fmangle_name.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fmangle_name.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,6 +1,7 @@\n /* Shared functions related to mangling names for the GNU compiler\n    for the Java(TM) language.\n-   Copyright (C) 2001, 2002, 2003, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2001, 2002, 2003, 2007, 2009, 2010\n+   Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -32,7 +33,6 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"java-tree.h\"\n #include \"obstack.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n \n static void append_unicode_mangled_name (const char *, int);\n #ifndef HAVE_AS_UTF8"}, {"sha": "67552176bf52e7a50ce8e727f528af320700fcae", "filename": "gcc/java/typeck.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fjava%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fjava%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Ftypeck.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,5 +1,6 @@\n /* Handle types for the GNU compiler for the Java(TM) language.\n-   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005, 2007, 2008\n+   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005, 2007,\n+   2008, 2009, 2010\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -34,7 +35,6 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"jcf.h\"\n #include \"convert.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"ggc.h\"\n \n static tree convert_ieee_real_to_integer (tree, tree);"}, {"sha": "c9eee07ff7e30b1a77b8534253fc7a9cabcb428f", "filename": "gcc/java/verify-glue.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fjava%2Fverify-glue.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fjava%2Fverify-glue.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fverify-glue.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,5 +1,6 @@\n /* Glue to interface gcj with bytecode verifier.\n-   Copyright (C) 2003, 2004, 2005, 2006, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2010\n+   Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -34,7 +35,6 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"java-tree.h\"\n #include \"java-except.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n \n void *\n vfy_alloc (size_t bytes)"}, {"sha": "928bb810ab9e4b72a1e2c2889c29f8713b90c5e6", "filename": "gcc/jump.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,6 +1,6 @@\n /* Optimize jump instructions, for GNU compiler.\n    Copyright (C) 1987, 1988, 1989, 1991, 1992, 1993, 1994, 1995, 1996, 1997\n-   1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009\n+   1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -51,7 +51,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"expr.h\"\n #include \"except.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"reload.h\"\n #include \"predict.h\"\n #include \"timevar.h\""}, {"sha": "4628e68b9fefaeaf14dcc18e8c382fe86b820f95", "filename": "gcc/lists.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Flists.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Flists.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flists.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,6 +1,6 @@\n /* List management for the GCC expander.\n    Copyright (C) 1987, 1988, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+   1999, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -24,7 +24,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"rtl.h\"\n #include \"ggc.h\"\n "}, {"sha": "1833954595f2f506369ec99d480d4cd7b1760c8c", "filename": "gcc/loop-doloop.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Floop-doloop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Floop-doloop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-doloop.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -29,7 +29,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"tm_p.h\"\n #include \"cfgloop.h\"\n #include \"output.h\""}, {"sha": "83d25015976875746ef0fc71fe793ba1b2b7577c", "filename": "gcc/loop-iv.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Floop-iv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Floop-iv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-iv.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,5 +1,5 @@\n /* Rtl-level induction variable analysis.\n-   Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009\n+   Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -61,7 +61,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"intl.h\"\n #include \"output.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"df.h\"\n #include \"hashtab.h\"\n "}, {"sha": "1c7290ed0f7620c52dcb3dec20f77912de95454c", "filename": "gcc/lto-cgraph.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Flto-cgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Flto-cgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-cgraph.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -24,7 +24,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"toplev.h\"\n #include \"tree.h\"\n #include \"expr.h\"\n #include \"flags.h\""}, {"sha": "39592433cff197376bcf1342558ea31ecad7a5e0", "filename": "gcc/lto-compress.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Flto-compress.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Flto-compress.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-compress.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -29,7 +29,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tree.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"langhooks.h\"\n #include \"lto-streamer.h\"\n #include \"lto-compress.h\""}, {"sha": "40a5db0f8a8a9b690ca695db3c273eb591d4efff", "filename": "gcc/lto-opts.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Flto-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Flto-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-opts.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -32,7 +32,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"options.h\"\n #include \"target.h\"\n #include \"diagnostic.h\"\n-#include \"toplev.h\"\n #include \"lto-streamer.h\"\n \n /* When a file is initially compiled, the options used when generating"}, {"sha": "bfa9c37b68ba0c8d795bd0f47e24333f9c5dcf51", "filename": "gcc/lto-section-in.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Flto-section-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Flto-section-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-section-in.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -23,7 +23,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"toplev.h\"\n #include \"tree.h\"\n #include \"expr.h\"\n #include \"flags.h\""}, {"sha": "0e8949a272a5f8ccc82c436d154b15e75253d1e5", "filename": "gcc/lto-section-out.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Flto-section-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Flto-section-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-section-out.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,6 +1,6 @@\n /* Functions for writing LTO sections.\n \n-   Copyright (C) 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2009, 2010 Free Software Foundation, Inc.\n    Contributed by Kenneth Zadeck <zadeck@naturalbridge.com>\n \n This file is part of GCC.\n@@ -23,7 +23,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"toplev.h\"\n #include \"tree.h\"\n #include \"expr.h\"\n #include \"params.h\""}, {"sha": "a3f7b1cc0195322bb5d3f657e8ad84632bb0cdef", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -24,7 +24,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"toplev.h\"\n #include \"tree.h\"\n #include \"expr.h\"\n #include \"flags.h\""}, {"sha": "dbdbcb2996e25cbf087da360dc07039fbe9f6868", "filename": "gcc/lto-symtab.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Flto-symtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Flto-symtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-symtab.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,5 +1,5 @@\n /* LTO symbol table.\n-   Copyright 2009 Free Software Foundation, Inc.\n+   Copyright 2009, 2010 Free Software Foundation, Inc.\n    Contributed by CodeSourcery, Inc.\n \n This file is part of GCC.\n@@ -22,7 +22,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"tree.h\"\n #include \"gimple.h\"\n #include \"ggc.h\""}, {"sha": "2bf8e81c74d7f18233dff260a12cd321c38998ee", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,3 +1,8 @@\n+2010-11-30  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* Make-lang.in (lto/lto-object.o): Depend on toplev.h instead of\n+\t$(TOPLEV_H).\n+\n 2010-11-29  Joseph Myers  <joseph@codesourcery.com>\n \n \t* lto-endian.h: Delete."}, {"sha": "3aea1fced3dc4ba18d1a03f21ca77690ba320696", "filename": "gcc/lto/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Flto%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Flto%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FMake-lang.in?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -87,7 +87,7 @@ lto/lto.o: lto/lto.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(OPTS_H) \\\n \t$(COMMON_H) debug.h $(TIMEVAR_H) $(GIMPLE_H) $(LTO_H) $(LTO_TREE_H) \\\n \t$(LTO_TAGS_H) $(LTO_STREAMER_H) $(SPLAY_TREE_H) gt-lto-lto.h $(PARAMS_H)\n lto/lto-object.o: lto/lto-object.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-\t$(DIAGNOSTIC_CORE_H) $(TOPLEV_H) $(LTO_H) $(TM_H) $(LTO_STREAMER_H) \\\n+\t$(DIAGNOSTIC_CORE_H) toplev.h $(LTO_H) $(TM_H) $(LTO_STREAMER_H) \\\n \t../include/simple-object.h\n \n # LTO testing is done as part of C/C++/Fortran etc. testing."}, {"sha": "9179de504aa7d220849fad0c9280b43932883644", "filename": "gcc/modulo-sched.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fmodulo-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fmodulo-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmodulo-sched.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,5 +1,5 @@\n /* Swing Modulo Scheduling implementation.\n-   Copyright (C) 2004, 2005, 2006, 2007, 2008\n+   Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n    Contributed by Ayal Zaks and Mustafa Hagog <zaks,mustafa@il.ibm.com>\n \n@@ -25,7 +25,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"rtl.h\"\n #include \"tm_p.h\"\n #include \"hard-reg-set.h\"\n@@ -35,7 +34,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-config.h\"\n #include \"insn-attr.h\"\n #include \"except.h\"\n-#include \"toplev.h\"\n #include \"recog.h\"\n #include \"sched-int.h\"\n #include \"target.h\""}, {"sha": "26735dd2ae1a9a472dce4a6d4825edf379cb97d8", "filename": "gcc/optabs.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -25,7 +25,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n \n /* Include insn-config.h before expr.h so that HAVE_conditional_move\n    is properly defined.  */"}, {"sha": "95af6cec0ed73105566947137c8980d30ed6c34b", "filename": "gcc/params.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fparams.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fparams.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -25,7 +25,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"params.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n \n /* An array containing the compiler parameters and their current\n    values.  */"}, {"sha": "7eeecf42920aee9d260761df38e3334174d7e08a", "filename": "gcc/postreload-gcse.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fpostreload-gcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fpostreload-gcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpostreload-gcse.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -23,7 +23,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n \n #include \"rtl.h\"\n #include \"tree.h\""}, {"sha": "97e8b4a7ed0fef59eca6d1e55ff8a5cc5c34a816", "filename": "gcc/postreload.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fpostreload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fpostreload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpostreload.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -41,7 +41,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"output.h\"\n #include \"cselib.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"except.h\"\n #include \"tree.h\"\n #include \"target.h\""}, {"sha": "dbef3595c45060d8902ad09e2c11289c5d07eef2", "filename": "gcc/predict.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,5 +1,5 @@\n /* Branch prediction routines for the GNU compiler.\n-   Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009\n+   Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -44,7 +44,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"function.h\"\n #include \"except.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"recog.h\"\n #include \"expr.h\"\n #include \"predict.h\""}, {"sha": "9e8c2036ca1dbf94fc1c1befbaf092f6cbf04ca0", "filename": "gcc/profile.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fprofile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fprofile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,6 +1,6 @@\n /* Calculate branch probabilities, and basic block execution counts.\n    Copyright (C) 1990, 1991, 1992, 1993, 1994, 1996, 1997, 1998, 1999,\n-   2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009\n+   2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n    Contributed by James E. Wilson, UC Berkeley/Cygnus Support;\n    based on some ideas from Dain Samples of UC Berkeley.\n@@ -61,7 +61,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"function.h\"\n #include \"basic-block.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"coverage.h\"\n #include \"value-prof.h\"\n #include \"tree.h\""}, {"sha": "88f9226bb278191f138fe41cbcdf109dbf91f7ea", "filename": "gcc/regcprop.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fregcprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fregcprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregcprop.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -34,7 +34,6 @@\n #include \"function.h\"\n #include \"recog.h\"\n #include \"flags.h\"\n-#include \"toplev.h\"\n #include \"diagnostic-core.h\"\n #include \"obstack.h\"\n #include \"timevar.h\""}, {"sha": "aaf062ed135cbb3702e592daf1a8100cdc24f4c0", "filename": "gcc/reginfo.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Freginfo.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Freginfo.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freginfo.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -43,7 +43,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-config.h\"\n #include \"recog.h\"\n #include \"reload.h\"\n-#include \"toplev.h\"\n #include \"diagnostic-core.h\"\n #include \"output.h\"\n #include \"timevar.h\""}, {"sha": "d3c733e38bb112ea7a3e339d37e9d33b86a5a965", "filename": "gcc/regmove.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fregmove.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fregmove.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregmove.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,6 +1,6 @@\n /* Move registers around to reduce number of move instructions needed.\n-   Copyright (C) 1987, 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997,\n-   1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+   Copyright (C) 1987, 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n+   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -41,7 +41,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"except.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"reload.h\"\n #include \"timevar.h\"\n #include \"tree-pass.h\""}, {"sha": "443917df5688adca891cb183e4f34eb2bee985ca", "filename": "gcc/reorg.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,6 +1,6 @@\n /* Perform instruction reorganizations for delay slot filling.\n    Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,\n-   2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+   2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n    Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu).\n    Hacked by Michael Tiemann (tiemann@cygnus.com).\n@@ -116,7 +116,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"rtl.h\"\n #include \"tm_p.h\"\n #include \"expr.h\""}, {"sha": "1ee87c017afe7754d2b42b139d64ff1a3464b332", "filename": "gcc/resource.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fresource.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fresource.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fresource.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -23,7 +23,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"rtl.h\"\n #include \"tm_p.h\"\n #include \"hard-reg-set.h\""}, {"sha": "817d8f966f983efaac4023c7e703f0ea78a8d3b3", "filename": "gcc/sched-deps.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fsched-deps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fsched-deps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-deps.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -27,7 +27,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"rtl.h\"\n #include \"tm_p.h\"\n #include \"hard-reg-set.h\"\n@@ -37,7 +36,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-config.h\"\n #include \"insn-attr.h\"\n #include \"except.h\"\n-#include \"toplev.h\"\n #include \"recog.h\"\n #include \"sched-int.h\"\n #include \"params.h\""}, {"sha": "59b804249d992d54e8b2c91fe6d23789731ce83f", "filename": "gcc/sched-ebb.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fsched-ebb.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fsched-ebb.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-ebb.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,6 +1,6 @@\n /* Instruction scheduling pass.\n    Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n+   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@cygnus.com) Enhanced by,\n    and currently maintained by, Jim Wilson (wilson@cygnus.com)\n@@ -26,7 +26,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"rtl.h\"\n #include \"tm_p.h\"\n #include \"hard-reg-set.h\"\n@@ -36,7 +35,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-config.h\"\n #include \"insn-attr.h\"\n #include \"except.h\"\n-#include \"toplev.h\"\n #include \"recog.h\"\n #include \"cfglayout.h\"\n #include \"params.h\""}, {"sha": "6ed4675e5506e91ba781ed47df8d96bc8e85b5d7", "filename": "gcc/sched-rgn.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fsched-rgn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fsched-rgn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-rgn.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -50,7 +50,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"rtl.h\"\n #include \"tm_p.h\"\n #include \"hard-reg-set.h\"\n@@ -60,7 +59,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-config.h\"\n #include \"insn-attr.h\"\n #include \"except.h\"\n-#include \"toplev.h\"\n #include \"recog.h\"\n #include \"cfglayout.h\"\n #include \"params.h\""}, {"sha": "c08ac283573a0630a702b3f6588e4b8f33ea9be8", "filename": "gcc/sdbout.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fsdbout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fsdbout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsdbout.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -76,7 +76,6 @@ static GTY(()) bool sdbout_initialized;\n #include \"reload.h\"\n #include \"output.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"tm_p.h\"\n #include \"gsyms.h\"\n #include \"langhooks.h\""}, {"sha": "782dcaac3c2681420f7bdd67c207551f2ed499c9", "filename": "gcc/sel-sched-dump.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fsel-sched-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fsel-sched-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched-dump.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -22,7 +22,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"rtl.h\"\n #include \"tm_p.h\"\n #include \"hard-reg-set.h\""}, {"sha": "684eda0aba44d6052fc34c951d56ae6c8e00680e", "filename": "gcc/sel-sched-ir.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fsel-sched-ir.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fsel-sched-ir.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched-ir.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -22,7 +22,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"rtl.h\"\n #include \"tm_p.h\"\n #include \"hard-reg-set.h\"\n@@ -32,7 +31,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-config.h\"\n #include \"insn-attr.h\"\n #include \"except.h\"\n-#include \"toplev.h\"\n #include \"recog.h\"\n #include \"params.h\"\n #include \"target.h\""}, {"sha": "078df67b79561bc4a1dd4bfbf38738c2a834c260", "filename": "gcc/sese.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fsese.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fsese.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsese.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -31,7 +31,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic.h\"\n #include \"tree-pretty-print.h\"\n #include \"tree-flow.h\"\n-#include \"toplev.h\"\n #include \"tree-dump.h\"\n #include \"timevar.h\"\n #include \"cfgloop.h\""}, {"sha": "7d4cbb0cb4c4fccee6b7f29cb4d5d7d0c7e9c8f7", "filename": "gcc/stmt.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -42,7 +42,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"recog.h\"\n #include \"machmode.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"output.h\"\n #include \"ggc.h\"\n #include \"langhooks.h\""}, {"sha": "233a16f3ca3f23711bc23407248463eeff7b4304", "filename": "gcc/targhooks.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftarghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftarghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -57,7 +57,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"expr.h\"\n #include \"output.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"function.h\"\n #include \"target.h\"\n #include \"tm_p.h\""}, {"sha": "08cbbc104e7537e99574c3873d1855eae13baede", "filename": "gcc/toplev.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftoplev.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftoplev.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.h?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -21,8 +21,6 @@ along with GCC; see the file COPYING3.  If not see\n \n #ifndef GCC_TOPLEV_H\n #define GCC_TOPLEV_H\n-#include \"input.h\"\n-#include \"bversion.h\"\n \n /* If non-NULL, return one past-the-end of the matching SUBPART of\n    the WHOLE string.  */\n@@ -49,7 +47,6 @@ extern void init_eh (void);\n extern void announce_function (tree);\n \n extern void warn_deprecated_use (tree, tree);\n-extern bool parse_optimize_options (tree, bool);\n \n #ifdef BUFSIZ\n extern void output_quoted_string\t(FILE *, const char *);"}, {"sha": "fe073f35529f18c9105666ddecd35186dce7f395", "filename": "gcc/tree-cfgcleanup.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftree-cfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftree-cfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfgcleanup.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -27,7 +27,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"output.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"flags.h\"\n #include \"function.h\"\n #include \"ggc.h\"\n@@ -36,7 +35,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"timevar.h\"\n #include \"tree-dump.h\"\n #include \"tree-pass.h\"\n-#include \"toplev.h\"\n #include \"except.h\"\n #include \"cfgloop.h\"\n #include \"cfglayout.h\""}, {"sha": "109150f7e73a5fe719ee167dbd402ac11b793576", "filename": "gcc/tree-mudflap.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftree-mudflap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftree-mudflap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-mudflap.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -43,7 +43,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"langhooks.h\"\n #include \"ggc.h\"\n #include \"cgraph.h\"\n-#include \"toplev.h\"\n #include \"gimple.h\"\n \n /* Internal function decls */"}, {"sha": "44e2989138659f92ba664ce670e554adc0175e20", "filename": "gcc/tree-nomudflap.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftree-nomudflap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftree-nomudflap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-nomudflap.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,5 +1,5 @@\n /* Mudflap: narrow-pointer bounds-checking by tree rewriting.\n-   Copyright (C) 2001, 2002, 2003, 2007, 2008, 2009\n+   Copyright (C) 2001, 2002, 2003, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n    Contributed by Frank Ch. Eigler <fche@redhat.com>\n \n@@ -34,7 +34,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-pass.h\"\n #include \"ggc.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n \n \n "}, {"sha": "23abcfe12c1b6a109e586da574627ceb59cfd1c2", "filename": "gcc/tree-object-size.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftree-object-size.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftree-object-size.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-object-size.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -25,7 +25,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\""}, {"sha": "4de45001e67359b16022ae1242562e0a44f30b8a", "filename": "gcc/tree-outof-ssa.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftree-outof-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftree-outof-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-outof-ssa.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -33,7 +33,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"timevar.h\"\n #include \"tree-dump.h\"\n #include \"tree-pass.h\"\n-#include \"toplev.h\"\n #include \"diagnostic-core.h\"\n #include \"ssaexpand.h\"\n "}, {"sha": "1d7e5c26dcdceed3576886bcb13af31244de0cc1", "filename": "gcc/tree-phinodes.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftree-phinodes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftree-phinodes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-phinodes.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,5 +1,6 @@\n /* Generic routines for manipulating PHIs\n-   Copyright (C) 2003, 2005, 2007, 2008 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2005, 2007, 2008, 2009, 2010\n+   Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -27,7 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"tree-flow.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"gimple.h\"\n \n /* Rewriting a function into SSA form can create a huge number of PHIs"}, {"sha": "c5cfa422f0bef55672fb88f513decebf3ac4a749", "filename": "gcc/tree-profile.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftree-profile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftree-profile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-profile.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -35,7 +35,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"function.h\"\n #include \"basic-block.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"coverage.h\"\n #include \"tree.h\"\n #include \"tree-flow.h\""}, {"sha": "c06ca8eb2a4c0a902953e07bd713a53e4153f259", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -76,7 +76,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"alloc-pool.h\"\n #include \"tm.h\"\n-#include \"toplev.h\"\n #include \"tree.h\"\n #include \"gimple.h\"\n #include \"cgraph.h\""}, {"sha": "30a0e14b6fcf48675c8d8024e9423111230574d6", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -131,7 +131,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"langhooks.h\"\n #include \"target.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"dbgcnt.h\"\n \n "}, {"sha": "e7490e6813c53515532b486c5395b43f0f1955aa", "filename": "gcc/tree-ssa-coalesce.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftree-ssa-coalesce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftree-ssa-coalesce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-coalesce.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -32,7 +32,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-dump.h\"\n #include \"tree-ssa-live.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n \n \n /* This set of routines implements a coalesce_list.  This is an object which"}, {"sha": "7a6cafa0d28d8e1905732b8a183d559c1e2ba5e8", "filename": "gcc/tree-ssa-live.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftree-ssa-live.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftree-ssa-live.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-live.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -31,7 +31,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-dump.h\"\n #include \"tree-ssa-live.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"debug.h\"\n #include \"flags.h\"\n #include \"gimple.h\""}, {"sha": "59c65d3aa2e0c2b79ee9dd60deff66d5b5d05577", "filename": "gcc/tree-ssa-loop-prefetch.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftree-ssa-loop-prefetch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftree-ssa-loop-prefetch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-prefetch.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -37,7 +37,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-chrec.h\"\n #include \"tree-scalar-evolution.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"params.h\"\n #include \"langhooks.h\"\n #include \"tree-inline.h\""}, {"sha": "4b51f403c497febec3c8cb1480373ab4771160c4", "filename": "gcc/tree-ssa-loop.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftree-ssa-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftree-ssa-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -1,5 +1,6 @@\n /* Loop optimizations over tree-ssa.\n-   Copyright (C) 2003, 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2005, 2006, 2007, 2008, 2009, 2010\n+   Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -34,7 +35,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-inline.h\"\n #include \"tree-scalar-evolution.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"tree-vectorizer.h\"\n \n /* The loop superpass.  */"}, {"sha": "d05f814917021d1be44874d6f3feeb91cb25bd39", "filename": "gcc/tree-ssa-operands.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftree-ssa-operands.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftree-ssa-operands.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -32,7 +32,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-pass.h\"\n #include \"ggc.h\"\n #include \"timevar.h\"\n-#include \"toplev.h\"\n #include \"langhooks.h\"\n #include \"ipa-reference.h\"\n "}, {"sha": "a31b953a4282e58deb4a4cc05dfac9658a0d32c1", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -33,7 +33,6 @@\n #include \"tree-flow.h\"\n #include \"tree-inline.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"gimple.h\"\n #include \"hashtab.h\"\n #include \"function.h\""}, {"sha": "39785d4b588e214b717db3aef47bac3d674fb125", "filename": "gcc/tree-ssa-uninit.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftree-ssa-uninit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftree-ssa-uninit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-uninit.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -41,7 +41,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-dump.h\"\n #include \"tree-pass.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n #include \"timevar.h\"\n \n /* This implements the pass that does predicate aware warning on uses of"}, {"sha": "b55bacb7ec7961cdde4f7638f9643d07c60a150e", "filename": "gcc/tree-vect-patterns.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftree-vect-patterns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Ftree-vect-patterns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-patterns.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -37,7 +37,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-vectorizer.h\"\n #include \"recog.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n \n /* Function prototypes */\n static void vect_pattern_recog_1"}, {"sha": "ea70e2a15e7b51c2d5001eae922101c45ffb7382", "filename": "gcc/value-prof.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fvalue-prof.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fvalue-prof.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-prof.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -45,7 +45,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cgraph.h\"\n #include \"timevar.h\"\n #include \"tree-pass.h\"\n-#include \"toplev.h\"\n #include \"pointer-set.h\"\n \n static struct value_prof_hooks *value_prof_hooks;"}, {"sha": "35ca1cb35fc05c78fe1fdd034f6e92a9794d12b1", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -110,7 +110,6 @@\n #include \"tree-flow.h\"\n #include \"cselib.h\"\n #include \"target.h\"\n-#include \"toplev.h\"\n #include \"params.h\"\n #include \"diagnostic.h\"\n #include \"tree-pretty-print.h\""}, {"sha": "9b849249b0d0634067aaaac687c024f18051e428", "filename": "gcc/web.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fweb.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c475d115929dfd4d1640e58fcffbb91a0f0bdad/gcc%2Fweb.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fweb.c?ref=7c475d115929dfd4d1640e58fcffbb91a0f0bdad", "patch": "@@ -39,7 +39,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"diagnostic-core.h\"\n-#include \"toplev.h\"\n \n #include \"rtl.h\"\n #include \"hard-reg-set.h\""}]}