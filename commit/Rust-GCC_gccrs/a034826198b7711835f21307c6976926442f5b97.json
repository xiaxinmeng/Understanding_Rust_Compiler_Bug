{"sha": "a034826198b7711835f21307c6976926442f5b97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTAzNDgyNjE5OGI3NzExODM1ZjIxMzA3YzY5NzY5MjY0NDJmNWI5Nw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-08-05T19:12:09Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-08-05T19:12:09Z"}, "message": "init.c (perform_member_init): Always build_aggr_init for a class member with an explicit mem-initializer.\n\n\t* init.c (perform_member_init): Always build_aggr_init\n\tfor a class member with an explicit mem-initializer.\n\nFrom-SVN: r177477", "tree": {"sha": "2b84dae0671d517bec48d530b545feaf35663cb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b84dae0671d517bec48d530b545feaf35663cb5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a034826198b7711835f21307c6976926442f5b97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a034826198b7711835f21307c6976926442f5b97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a034826198b7711835f21307c6976926442f5b97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a034826198b7711835f21307c6976926442f5b97/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3bed46f67f40e6c3feaa5f02beebf4d52b3ffab5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bed46f67f40e6c3feaa5f02beebf4d52b3ffab5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bed46f67f40e6c3feaa5f02beebf4d52b3ffab5"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "8eb6b74c3ce0ed51cf773c2e54988462cef61630", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a034826198b7711835f21307c6976926442f5b97/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a034826198b7711835f21307c6976926442f5b97/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a034826198b7711835f21307c6976926442f5b97", "patch": "@@ -1,5 +1,8 @@\n 2011-08-05  Jason Merrill  <jason@redhat.com>\n \n+\t* init.c (perform_member_init): Always build_aggr_init\n+\tfor a class member with an explicit mem-initializer.\n+\n \t* pt.c (unify) [TEMPLATE_TYPE_PARM]: Allow VLA for C++0x 'auto'.\n \n 2011-08-04  Jakub Jelinek  <jakub@redhat.com>"}, {"sha": "d9e475e79de579486b33337c086d84c148f7f689", "filename": "gcc/cp/init.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a034826198b7711835f21307c6976926442f5b97/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a034826198b7711835f21307c6976926442f5b97/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=a034826198b7711835f21307c6976926442f5b97", "patch": "@@ -547,7 +547,8 @@ perform_member_init (tree member, tree init)\n \t  finish_expr_stmt (init);\n \t}\n     }\n-  else if (type_build_ctor_call (type))\n+  else if (type_build_ctor_call (type)\n+\t   || (init && CLASS_TYPE_P (strip_array_types (type))))\n     {\n       if (TREE_CODE (type) == ARRAY_TYPE)\n \t{"}]}