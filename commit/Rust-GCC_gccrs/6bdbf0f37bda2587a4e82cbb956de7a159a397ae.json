{"sha": "6bdbf0f37bda2587a4e82cbb956de7a159a397ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJkYmYwZjM3YmRhMjU4N2E0ZTgyY2JiOTU2ZGU3YTE1OWEzOTdhZQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-09-02T12:27:57Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-09-02T12:56:32Z"}, "message": "libstdc++: Break header cycle between <new> and <exception>\n\nThe <new> and <exception> headers each include each other, which makes\nbuilding them as header-units \"exciting\". The <new> header only needs\nthe definition of std::exception (in order to derive from it) which is\nalready in its own header, so just include that.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/stl_iterator.h: Include <bits/exception_defines.h>\n\tfor definitions of __try, __catch and __throw_exception_again.\n\t(counted_iterator::operator++(int)): Use __throw_exception_again\n\tinstead of throw.\n\t* libsupc++/new: Include <bits/exception.h> not <exception>.\n\t* libsupc++/new_opvnt.cc: Include <bits/exception_defines.h>.\n\t* testsuite/18_support/destroying_delete.cc: Include\n\t<type_traits> for std::is_same_v definition.\n\t* testsuite/20_util/variant/index_type.cc: Qualify size_t.", "tree": {"sha": "513869983ddbdd3c4ac03fba5373904073259963", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/513869983ddbdd3c4ac03fba5373904073259963"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6bdbf0f37bda2587a4e82cbb956de7a159a397ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bdbf0f37bda2587a4e82cbb956de7a159a397ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bdbf0f37bda2587a4e82cbb956de7a159a397ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bdbf0f37bda2587a4e82cbb956de7a159a397ae/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b567d3bd302933adb253aba9069fd8120c485441", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b567d3bd302933adb253aba9069fd8120c485441", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b567d3bd302933adb253aba9069fd8120c485441"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "da740e3732e235f553b7193b693f0b97b28ab4d1", "filename": "libstdc++-v3/include/bits/stl_iterator.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdbf0f37bda2587a4e82cbb956de7a159a397ae/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdbf0f37bda2587a4e82cbb956de7a159a397ae/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h?ref=6bdbf0f37bda2587a4e82cbb956de7a159a397ae", "patch": "@@ -79,6 +79,7 @@\n #if __cplusplus > 201703L\n # include <compare>\n # include <new>\n+# include <bits/exception_defines.h>\n # include <bits/iterator_concepts.h>\n #endif\n \n@@ -2062,7 +2063,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t    return _M_current++;\n \t  } __catch(...) {\n \t    ++_M_length;\n-\t    throw;\n+\t    __throw_exception_again;\n \t  }\n \n       }"}, {"sha": "21848a573d1c7165c327d92551a4402301c1538c", "filename": "libstdc++-v3/libsupc++/new", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdbf0f37bda2587a4e82cbb956de7a159a397ae/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdbf0f37bda2587a4e82cbb956de7a159a397ae/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew?ref=6bdbf0f37bda2587a4e82cbb956de7a159a397ae", "patch": "@@ -38,7 +38,7 @@\n #pragma GCC system_header\n \n #include <bits/c++config.h>\n-#include <exception>\n+#include <bits/exception.h>\n \n #pragma GCC visibility push(default)\n \n@@ -52,7 +52,7 @@ namespace std\n    *\n    *  @c bad_alloc (or classes derived from it) is used to report allocation\n    *  errors from the throwing forms of @c new.  */\n-  class bad_alloc : public exception \n+  class bad_alloc : public exception\n   {\n   public:\n     bad_alloc() throw() { }"}, {"sha": "771696d4ba60b2c974cdb821cf77403e6c49144d", "filename": "libstdc++-v3/libsupc++/new_opvnt.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdbf0f37bda2587a4e82cbb956de7a159a397ae/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew_opvnt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdbf0f37bda2587a4e82cbb956de7a159a397ae/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew_opvnt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew_opvnt.cc?ref=6bdbf0f37bda2587a4e82cbb956de7a159a397ae", "patch": "@@ -25,7 +25,8 @@\n \n #include <bits/c++config.h>\n #include \"new\"\n- \n+#include \"exception_defines.h\"\n+\n _GLIBCXX_WEAK_DEFINITION void*\n operator new[] (std::size_t sz, const std::nothrow_t&) noexcept\n {"}, {"sha": "f0c9bb9fa2532f2b47bcd8639e221c31b9ccf264", "filename": "libstdc++-v3/testsuite/18_support/destroying_delete.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdbf0f37bda2587a4e82cbb956de7a159a397ae/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fdestroying_delete.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdbf0f37bda2587a4e82cbb956de7a159a397ae/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fdestroying_delete.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fdestroying_delete.cc?ref=6bdbf0f37bda2587a4e82cbb956de7a159a397ae", "patch": "@@ -19,6 +19,7 @@\n // { dg-do run { target c++2a } }\n \n #include <new>\n+#include <type_traits>\n #include <testsuite_hooks.h>\n \n #ifndef __cpp_lib_destroying_delete"}, {"sha": "1c44758363cf0a015f2580e44d35f65b33878648", "filename": "libstdc++-v3/testsuite/20_util/variant/index_type.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdbf0f37bda2587a4e82cbb956de7a159a397ae/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fvariant%2Findex_type.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdbf0f37bda2587a4e82cbb956de7a159a397ae/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fvariant%2Findex_type.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fvariant%2Findex_type.cc?ref=6bdbf0f37bda2587a4e82cbb956de7a159a397ae", "patch": "@@ -22,4 +22,4 @@\n #include <variant>\n \n static_assert(sizeof(std::variant<signed char, unsigned char>)\n-\t      < sizeof(size_t));\n+\t      < sizeof(std::size_t));"}]}