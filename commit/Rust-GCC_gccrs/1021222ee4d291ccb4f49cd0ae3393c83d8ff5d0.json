{"sha": "1021222ee4d291ccb4f49cd0ae3393c83d8ff5d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTAyMTIyMmVlNGQyOTFjY2I0ZjQ5Y2QwYWUzMzkzYzgzZDhmZjVkMA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2021-02-18T15:33:12Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2021-02-18T20:39:42Z"}, "message": "c++: Remove obsolete dg-module-headers [PR 99023]\n\nPR99023's testcase is highlighting some missing functionality of the\nmodules test harness.  I did have some partial support, but it's only\nuse in one place for a now-obsolete test.  This patch expunges that\nsupport so I can add better functionality now I understand better what\nis necessary.\n\n\tPR c++/99023\n\tgcc/testsuite/\n\t* g++.dg/modules/modules.exp: Remove dg-module-headers support\n\t* g++.dg/modules/alias-2_a.H: Delete.\n\t* g++.dg/modules/sys/alias-2_a.H: Delete.", "tree": {"sha": "8e742cb93523f4f3dce2181afb4047ebdbb604fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e742cb93523f4f3dce2181afb4047ebdbb604fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1021222ee4d291ccb4f49cd0ae3393c83d8ff5d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1021222ee4d291ccb4f49cd0ae3393c83d8ff5d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1021222ee4d291ccb4f49cd0ae3393c83d8ff5d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1021222ee4d291ccb4f49cd0ae3393c83d8ff5d0/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a796f8a43a45e04d395a599924bdad77c9809e8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a796f8a43a45e04d395a599924bdad77c9809e8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a796f8a43a45e04d395a599924bdad77c9809e8f"}], "stats": {"total": 62, "additions": 0, "deletions": 62}, "files": [{"sha": "1befe85cf4970a219f55a3f1921f83cc863c8f3c", "filename": "gcc/testsuite/g++.dg/modules/alias-2_a.H", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a796f8a43a45e04d395a599924bdad77c9809e8f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Falias-2_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a796f8a43a45e04d395a599924bdad77c9809e8f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Falias-2_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Falias-2_a.H?ref=a796f8a43a45e04d395a599924bdad77c9809e8f", "patch": "@@ -1,9 +0,0 @@\n-// { dg-additional-options \"-fmodule-header -isystem [srcdir]/sys\" }\n-// { dg-module-cmi {} }\n-// { dg-module-headers test sys/alias-2_a.H }\n-#ifndef ALIAS_2_A\n-#define ALIAS_2_A\n-\n-int frob ();\n-\n-#endif"}, {"sha": "c17120f2c006a8eec42016ab96382513c5ddb0b4", "filename": "gcc/testsuite/g++.dg/modules/modules.exp", "status": "modified", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1021222ee4d291ccb4f49cd0ae3393c83d8ff5d0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fmodules.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1021222ee4d291ccb4f49cd0ae3393c83d8ff5d0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fmodules.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fmodules.exp?ref=1021222ee4d291ccb4f49cd0ae3393c83d8ff5d0", "patch": "@@ -41,7 +41,6 @@ dg-init\n \n global module_do\n global module_cmis\n-global module_headers\n \n set DEFAULT_REPO \"gcm.cache\"\n \n@@ -132,39 +131,6 @@ proc module_cmi_p { src ifs } {\n     return $res\n }\n \n-# Append required header unit names to module_headers var\n-proc dg-module-headers { args } {\n-    if { [llength $args] != 3 } {\n-\terror \"[lindex $args 0]: wrong number of arguments\"\n-\treturn\n-    }\n-}\n-\n-proc do_module_headers { srcdir subdir std flags} {\n-    global module_headers\n-    foreach header $module_headers {\n-\tset kind [lindex $header 0]\n-\tset hdr [lindex $header 1]\n-\tverbose \"Header $hdr $std\" 1\n-\tswitch $kind {\n-\t    test {\n-\t\tglobal module_cmis\n-\t\tset module_cmis {}\n-\t\tdg-test -keep-output $srcdir/$subdir/$hdr \"$std\" $flags\n-\t\tglobal mod_files\n-\t\tlappend mod_files [module_cmi_p $subdir/$hdr $module_cmis]\n-\t    }\n-\t    system -\n-\t    user {\n-\t\t# FIXME\n-\t    }\n-\t    default {\n-\t\terror \"$kind unknown header\"\n-\t    }\n-\t}\n-    }\n-}\n-\n # link and maybe run a set of object files\n # dg-module-do WHAT WHEN\n proc dg-module-do { args } {\n@@ -277,8 +243,6 @@ proc srcdir {} {\n proc module-init { src } {\n     set tmp [dg-get-options $src]\n     set option_list {}\n-    global module_headers\n-    set module_headers {}\n     set have_std 0\n     set std_prefix \"-std=c++\"\n \n@@ -295,12 +259,6 @@ proc module-init { src } {\n \t\t    set have_std 1\n \t\t}\n \t    }\n-\t    \"dg-module-headers\" {\n-\t\tset kind [lindex $op 2]\n-\t\tforeach header [lindex $op 3] {\n-\t\t    lappend module_headers [list $kind $header]\n-\t\t}\n-\t    }\n \t}\n     }\n \n@@ -324,7 +282,6 @@ foreach test [prune [lsort [find $srcdir/$subdir {*.[CH]}]] \\\n \n \tset std_list [module-init $test]\n \tforeach std $std_list {\n-\t    do_module_headers $srcdir $subdir $std $DEFAULT_MODFLAGS\n \t    set module_cmis {}\n \t    verbose \"Testing $nshort $std\" 1\n \t    dg-test $test \"$std\" $DEFAULT_MODFLAGS\n@@ -347,7 +304,6 @@ foreach src [lsort [find $srcdir/$subdir {*_a.[CH}]] {\n \t    global module_do\n \t    set module_do {\"compile\" \"P\"}\n \t    set asm_list {}\n-\t    do_module_headers $srcdir $subdir $std $DEFAULT_MODFLAGS\n \t    foreach test $tests {\n \t\tif { [lindex $module_do 1] != \"N\" } {\n \t\t    set module_cmis {}"}, {"sha": "5a05808972549855e93a6baaedf32360dd6b69d8", "filename": "gcc/testsuite/g++.dg/modules/sys/alias-2_a.H", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a796f8a43a45e04d395a599924bdad77c9809e8f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fsys%2Falias-2_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a796f8a43a45e04d395a599924bdad77c9809e8f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fsys%2Falias-2_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fsys%2Falias-2_a.H?ref=a796f8a43a45e04d395a599924bdad77c9809e8f", "patch": "@@ -1,9 +0,0 @@\n-// { dg-additional-options \"-fmodule-header -isystem [srcdir]/sys\" }\n-// { dg-module-cmi {} }\n-\n-#ifndef ALIAS_2_A_SYS\n-#define ALIAS_2_A_SYS\n-\n-int frob (int);\n-\n-#endif"}]}