{"sha": "ddd2bec582698a9a2ad20030278f0137d3b242c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRkMmJlYzU4MjY5OGE5YTJhZDIwMDMwMjc4ZjAxMzdkM2IyNDJjNQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-19T10:44:33Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-19T10:44:33Z"}, "message": "[multiple changes]\n\n2014-02-19  Yannick Moy  <moy@adacore.com>\n\n\t* sem_ch10.adb (Analyze_Proper_Body): Issue error on missing\n\tsubunit in GNATprove_Mode.\n\t* sinfo.ads (GNATprove_Mode): Document error issued in GNATprove_Mode.\n\n2014-02-19  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* lib-xref.ads Alphabetize the contents of table\n\tXref_Entity_Letters. Add an entry in table Xref_Entity_Letters\n\tfor E_Abstract_State. List all letters and symbols in use.\n\t* sem_prag.adb (Analyze_Abstract_State): Update all calls\n\tto Create_Abstract_State to reflect the new signature.\n\t(Create_Abstract_State): Change subprogram profile and update\n\tthe comment on usage. Use the proper location of the state\n\tdeclaration when creating a new abstract state entity. Do not\n\tgenerate an external name, but simply reuse the name coming from\n\tthe state declaration.\n\nFrom-SVN: r207884", "tree": {"sha": "bfb39750177e255b93af29f9988aecd59737fa4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bfb39750177e255b93af29f9988aecd59737fa4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddd2bec582698a9a2ad20030278f0137d3b242c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddd2bec582698a9a2ad20030278f0137d3b242c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddd2bec582698a9a2ad20030278f0137d3b242c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddd2bec582698a9a2ad20030278f0137d3b242c5/comments", "author": null, "committer": null, "parents": [{"sha": "3a845e077b5cafd292efa58e859c10546e399603", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a845e077b5cafd292efa58e859c10546e399603", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a845e077b5cafd292efa58e859c10546e399603"}], "stats": {"total": 238, "additions": 128, "deletions": 110}, "files": [{"sha": "588729f7f9b66f9a281f340459af253aafee9b59", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddd2bec582698a9a2ad20030278f0137d3b242c5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddd2bec582698a9a2ad20030278f0137d3b242c5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ddd2bec582698a9a2ad20030278f0137d3b242c5", "patch": "@@ -1,3 +1,22 @@\n+2014-02-19  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_ch10.adb (Analyze_Proper_Body): Issue error on missing\n+\tsubunit in GNATprove_Mode.\n+\t* sinfo.ads (GNATprove_Mode): Document error issued in GNATprove_Mode.\n+\n+2014-02-19  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* lib-xref.ads Alphabetize the contents of table\n+\tXref_Entity_Letters. Add an entry in table Xref_Entity_Letters\n+\tfor E_Abstract_State. List all letters and symbols in use.\n+\t* sem_prag.adb (Analyze_Abstract_State): Update all calls\n+\tto Create_Abstract_State to reflect the new signature.\n+\t(Create_Abstract_State): Change subprogram profile and update\n+\tthe comment on usage. Use the proper location of the state\n+\tdeclaration when creating a new abstract state entity. Do not\n+\tgenerate an external name, but simply reuse the name coming from\n+\tthe state declaration.\n+\n 2014-02-19  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_ch4.adb (Expand_N_Expression_With_Actions): Make sure"}, {"sha": "3f1a301ba1fb9720511c607b6640a9bbfbbd9141", "filename": "gcc/ada/lib-xref.ads", "status": "modified", "additions": 66, "deletions": 79, "changes": 145, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddd2bec582698a9a2ad20030278f0137d3b242c5/gcc%2Fada%2Flib-xref.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddd2bec582698a9a2ad20030278f0137d3b242c5/gcc%2Fada%2Flib-xref.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.ads?ref=ddd2bec582698a9a2ad20030278f0137d3b242c5", "patch": "@@ -433,111 +433,98 @@ package Lib.Xref is\n    --  indicating procedures and functions. If the operation is abstract,\n    --  these letters are replaced in the xref by 'x' and 'y' respectively.\n \n-   Xref_Entity_Letters : array (Entity_Kind) of Character :=\n-     (E_Void                                       => ' ',\n-      E_Variable                                   => '*',\n-      E_Component                                  => '*',\n-      E_Constant                                   => '*',\n-      E_Discriminant                               => '*',\n-\n-      E_Loop_Parameter                             => '*',\n-      E_In_Parameter                               => '*',\n-      E_Out_Parameter                              => '*',\n-      E_In_Out_Parameter                           => '*',\n-      E_Generic_In_Out_Parameter                   => '*',\n-\n-      E_Generic_In_Parameter                       => '*',\n-      E_Named_Integer                              => 'N',\n-      E_Named_Real                                 => 'N',\n-      E_Enumeration_Type                           => 'E',  -- B for boolean\n-      E_Enumeration_Subtype                        => 'E',  -- B for boolean\n+   --  The following letters and symbols are currently in use:\n+   --    A B C D E F I K L M N O P   R S T U V W X Y\n+   --    a b c d e f i k l m n o p q r s t u v w x y\n+   --    @ * + space\n \n-      E_Signed_Integer_Type                        => 'I',\n-      E_Signed_Integer_Subtype                     => 'I',\n-      E_Modular_Integer_Type                       => 'M',\n-      E_Modular_Integer_Subtype                    => 'M',\n-      E_Ordinary_Fixed_Point_Type                  => 'O',\n-\n-      E_Ordinary_Fixed_Point_Subtype               => 'O',\n-      E_Decimal_Fixed_Point_Type                   => 'D',\n-      E_Decimal_Fixed_Point_Subtype                => 'D',\n-      E_Floating_Point_Type                        => 'F',\n-      E_Floating_Point_Subtype                     => 'F',\n-\n-      E_Access_Type                                => 'P',\n-      E_Access_Subtype                             => 'P',\n+   Xref_Entity_Letters : array (Entity_Kind) of Character :=\n+     (E_Abstract_State                             => '@',\n       E_Access_Attribute_Type                      => 'P',\n-      E_Allocator_Type                             => ' ',\n-      E_General_Access_Type                        => 'P',\n-\n-      E_Access_Subprogram_Type                     => 'P',\n       E_Access_Protected_Subprogram_Type           => 'P',\n-      E_Anonymous_Access_Subprogram_Type           => ' ',\n+      E_Access_Subprogram_Type                     => 'P',\n+      E_Access_Subtype                             => 'P',\n+      E_Access_Type                                => 'P',\n+      E_Allocator_Type                             => ' ',\n       E_Anonymous_Access_Protected_Subprogram_Type => ' ',\n+      E_Anonymous_Access_Subprogram_Type           => ' ',\n       E_Anonymous_Access_Type                      => ' ',\n-\n-      E_Array_Type                                 => 'A',\n       E_Array_Subtype                              => 'A',\n-      E_String_Type                                => 'S',\n-      E_String_Subtype                             => 'S',\n-      E_String_Literal_Subtype                     => ' ',\n-\n-      E_Class_Wide_Type                            => 'C',\n+      E_Array_Type                                 => 'A',\n+      E_Block                                      => 'q',\n       E_Class_Wide_Subtype                         => 'C',\n-      E_Record_Type                                => 'R',\n-      E_Record_Subtype                             => 'R',\n-      E_Record_Type_With_Private                   => 'R',\n-\n-      E_Record_Subtype_With_Private                => 'R',\n-      E_Private_Type                               => '+',\n-      E_Private_Subtype                            => '+',\n-      E_Limited_Private_Type                       => '+',\n-      E_Limited_Private_Subtype                    => '+',\n-\n-      E_Incomplete_Type                            => '+',\n-      E_Incomplete_Subtype                         => '+',\n-      E_Task_Type                                  => 'T',\n-      E_Task_Subtype                               => 'T',\n-      E_Protected_Type                             => 'W',\n-\n-      E_Protected_Subtype                          => 'W',\n-      E_Exception_Type                             => ' ',\n-      E_Subprogram_Type                            => ' ',\n-      E_Enumeration_Literal                        => 'n',\n-      E_Function                                   => 'V',\n-\n-      E_Operator                                   => 'V',\n-      E_Procedure                                  => 'U',\n+      E_Class_Wide_Type                            => 'C',\n+      E_Component                                  => '*',\n+      E_Constant                                   => '*',\n+      E_Decimal_Fixed_Point_Subtype                => 'D',\n+      E_Decimal_Fixed_Point_Type                   => 'D',\n+      E_Discriminant                               => '*',\n       E_Entry                                      => 'Y',\n       E_Entry_Family                               => 'Y',\n-      E_Block                                      => 'q',\n-\n       E_Entry_Index_Parameter                      => '*',\n+      E_Enumeration_Literal                        => 'n',\n+      E_Enumeration_Subtype                        => 'E',  -- B for boolean\n+      E_Enumeration_Type                           => 'E',  -- B for boolean\n       E_Exception                                  => 'X',\n+      E_Exception_Type                             => ' ',\n+      E_Floating_Point_Subtype                     => 'F',\n+      E_Floating_Point_Type                        => 'F',\n+      E_Function                                   => 'V',\n+      E_General_Access_Type                        => 'P',\n       E_Generic_Function                           => 'v',\n+      E_Generic_In_Out_Parameter                   => '*',\n+      E_Generic_In_Parameter                       => '*',\n       E_Generic_Package                            => 'k',\n       E_Generic_Procedure                          => 'u',\n-\n       E_Label                                      => 'L',\n+      E_Limited_Private_Subtype                    => '+',\n+      E_Limited_Private_Type                       => '+',\n       E_Loop                                       => 'l',\n-      E_Return_Statement                           => ' ',\n+      E_Loop_Parameter                             => '*',\n+      E_In_Out_Parameter                           => '*',\n+      E_In_Parameter                               => '*',\n+      E_Incomplete_Subtype                         => '+',\n+      E_Incomplete_Type                            => '+',\n+      E_Modular_Integer_Subtype                    => 'M',\n+      E_Modular_Integer_Type                       => 'M',\n+      E_Named_Integer                              => 'N',\n+      E_Named_Real                                 => 'N',\n+      E_Operator                                   => 'V',\n+      E_Ordinary_Fixed_Point_Subtype               => 'O',\n+      E_Ordinary_Fixed_Point_Type                  => 'O',\n+      E_Out_Parameter                              => '*',\n       E_Package                                    => 'K',\n+      E_Private_Subtype                            => '+',\n+      E_Private_Type                               => '+',\n+      E_Procedure                                  => 'U',\n+      E_Protected_Subtype                          => 'W',\n+      E_Protected_Type                             => 'W',\n+      E_Record_Subtype                             => 'R',\n+      E_Record_Subtype_With_Private                => 'R',\n+      E_Record_Type                                => 'R',\n+      E_Record_Type_With_Private                   => 'R',\n+      E_Return_Statement                           => ' ',\n+      E_Signed_Integer_Subtype                     => 'I',\n+      E_Signed_Integer_Type                        => 'I',\n+      E_String_Literal_Subtype                     => ' ',\n+      E_String_Subtype                             => 'S',\n+      E_String_Type                                => 'S',\n+      E_Subprogram_Type                            => ' ',\n+      E_Task_Subtype                               => 'T',\n+      E_Task_Type                                  => 'T',\n+      E_Variable                                   => '*',\n+      E_Void                                       => ' ',\n \n       --  The following entities are not ones to which we gather the cross-\n       --  references, since it does not make sense to do so (e.g. references to\n       --  a package are to the spec, not the body) Indeed the occurrence of the\n       --  body entity is considered to be a reference to the spec entity.\n \n       E_Package_Body                               => ' ',\n-      E_Protected_Object                           => ' ',\n       E_Protected_Body                             => ' ',\n-      E_Task_Body                                  => ' ',\n+      E_Protected_Object                           => ' ',\n       E_Subprogram_Body                            => ' ',\n-\n-      --  ??? The following letter is added for completion, proper design and\n-      --  implementation of abstract state cross-referencing to follow.\n-\n-      E_Abstract_State                             => ' ');\n+      E_Task_Body                                  => ' ');\n \n    --  The following table is for information purposes. It shows the use of\n    --  each character appearing as an entity type."}, {"sha": "1b35930266bd507f06b809d1763f1b9de700eb4f", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddd2bec582698a9a2ad20030278f0137d3b242c5/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddd2bec582698a9a2ad20030278f0137d3b242c5/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=ddd2bec582698a9a2ad20030278f0137d3b242c5", "patch": "@@ -1563,8 +1563,9 @@ package body Sem_Ch10 is\n       procedure Optional_Subunit;\n       --  This procedure is called when the main unit is a stub, or when we\n       --  are not generating code. In such a case, we analyze the subunit if\n-      --  present, which is user-friendly and in fact required for ASIS, but\n-      --  we don't complain if the subunit is missing.\n+      --  present, which is user-friendly and in fact required for ASIS, but we\n+      --  don't complain if the subunit is missing. In GNATprove_Mode, we issue\n+      --  an error to avoid formal verification of a partial unit.\n \n       ----------------------\n       -- Optional_Subunit --\n@@ -1579,18 +1580,18 @@ package body Sem_Ch10 is\n          --  ignore all errors. Note that Fatal_Error will still be set, so we\n          --  will be able to check for this case below.\n \n-         if not ASIS_Mode then\n+         if not (ASIS_Mode or GNATprove_Mode) then\n             Ignore_Errors_Enable := Ignore_Errors_Enable + 1;\n          end if;\n \n          Unum :=\n            Load_Unit\n              (Load_Name  => Subunit_Name,\n-              Required   => False,\n+              Required   => GNATprove_Mode,\n               Subunit    => True,\n               Error_Node => N);\n \n-         if not ASIS_Mode then\n+         if not (ASIS_Mode or GNATprove_Mode) then\n             Ignore_Errors_Enable := Ignore_Errors_Enable - 1;\n          end if;\n "}, {"sha": "5357230e7d634929ae7f3d1acbdc4c5fc8ae2e04", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 33, "deletions": 26, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddd2bec582698a9a2ad20030278f0137d3b242c5/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddd2bec582698a9a2ad20030278f0137d3b242c5/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=ddd2bec582698a9a2ad20030278f0137d3b242c5", "patch": "@@ -9986,14 +9986,16 @@ package body Sem_Prag is\n                --  Opt is not a duplicate property and sets the flag Status.\n \n                procedure Create_Abstract_State\n-                 (State_Nam  : Name_Id;\n-                  State_Decl : Node_Id;\n-                  Is_Null    : Boolean := False);\n-               --  Generate an abstract state entity with name State_Nam and\n-               --  enter it into visibility. State_Decl is the \"declaration\"\n-               --  of the state as it appears in pragma Abstract_State. Flag\n-               --  Is_Null should be set when the associated Abstract_State\n-               --  pragma defines a null state.\n+                 (Nam     : Name_Id;\n+                  Decl    : Node_Id;\n+                  Loc     : Source_Ptr;\n+                  Is_Null : Boolean);\n+               --  Generate an abstract state entity with name Nam and enter it\n+               --  into visibility. Decl is the \"declaration\" of the state as\n+               --  it appears in pragma Abstract_State. Loc is the location of\n+               --  the related state \"declaration\". Flag Is_Null should be set\n+               --  when the associated Abstract_State pragma defines a null\n+               --  state.\n \n                -----------------------------\n                -- Analyze_External_Option --\n@@ -10243,17 +10245,16 @@ package body Sem_Prag is\n                ---------------------------\n \n                procedure Create_Abstract_State\n-                 (State_Nam  : Name_Id;\n-                  State_Decl : Node_Id;\n-                  Is_Null    : Boolean := False)\n+                 (Nam     : Name_Id;\n+                  Decl    : Node_Id;\n+                  Loc     : Source_Ptr;\n+                  Is_Null : Boolean)\n                is\n                begin\n                   --  The generated state abstraction reuses the same chars\n                   --  from the original state declaration. Decorate the entity.\n \n-                  State_Id :=\n-                    Make_Defining_Identifier (Sloc (State),\n-                      Chars => New_External_Name (State_Nam));\n+                  State_Id := Make_Defining_Identifier (Loc, Nam);\n \n                   --  Null states never come from source\n \n@@ -10270,15 +10271,16 @@ package body Sem_Prag is\n                   --  N_Null and does not carry any linkages.\n \n                   if not Is_Null then\n-                     if Present (State_Decl) then\n-                        Set_Entity (State_Decl, State_Id);\n-                        Set_Etype  (State_Decl, Standard_Void_Type);\n+                     if Present (Decl) then\n+                        Set_Entity (Decl, State_Id);\n+                        Set_Etype  (Decl, Standard_Void_Type);\n                      end if;\n \n-                     --  Every non-null state must be nameable and resolvable\n-                     --  the same way a constant is.\n+                     --  Every non-null state must be defined, nameable and\n+                     --  resolvable.\n \n                      Push_Scope (Pack_Id);\n+                     Generate_Definition (State_Id);\n                      Enter_Name (State_Id);\n                      Pop_Scope;\n                   end if;\n@@ -10303,9 +10305,10 @@ package body Sem_Prag is\n \n                elsif Nkind (State) = N_Null then\n                   Create_Abstract_State\n-                    (State_Nam  => New_Internal_Name ('S'),\n-                     State_Decl => Empty,\n-                     Is_Null    => True);\n+                    (Nam     => New_Internal_Name ('S'),\n+                     Decl    => Empty,\n+                     Loc     => Sloc (State),\n+                     Is_Null => True);\n                   Null_Seen := True;\n \n                   --  Catch a case where a null state appears in a list of\n@@ -10321,8 +10324,10 @@ package body Sem_Prag is\n \n                elsif Nkind (State) = N_Identifier then\n                   Create_Abstract_State\n-                    (State_Nam  => Chars (State),\n-                     State_Decl => State);\n+                    (Nam     => Chars (State),\n+                     Decl    => State,\n+                     Loc     => Sloc (State),\n+                     Is_Null => False);\n                   Non_Null_Seen := True;\n \n                --  State declaration with various options. This construct\n@@ -10331,8 +10336,10 @@ package body Sem_Prag is\n                elsif Nkind (State) = N_Extension_Aggregate then\n                   if Nkind (Ancestor_Part (State)) = N_Identifier then\n                      Create_Abstract_State\n-                       (State_Nam  => Chars (Ancestor_Part (State)),\n-                        State_Decl => Ancestor_Part (State));\n+                       (Nam     => Chars (Ancestor_Part (State)),\n+                        Decl    => Ancestor_Part (State),\n+                        Loc     => Sloc (Ancestor_Part (State)),\n+                        Is_Null => False);\n                      Non_Null_Seen := True;\n                   else\n                      Error_Msg_N"}, {"sha": "b5769f8a42587a7969c1b8c16324957ef1db0b7d", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddd2bec582698a9a2ad20030278f0137d3b242c5/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddd2bec582698a9a2ad20030278f0137d3b242c5/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=ddd2bec582698a9a2ad20030278f0137d3b242c5", "patch": "@@ -552,6 +552,10 @@ package Sinfo is\n    --  In addition pragma Debug statements are removed from the tree (rewritten\n    --  to NULL stmt), since they should be taken into account in flow analysis.\n \n+   --  An error is also issued for missing subunits, similar to the warning\n+   --  issued when generating code, to avoid formal verification of a partial\n+   --  unit.\n+\n    -----------------------\n    -- Check Flag Fields --\n    -----------------------"}]}