{"sha": "ded8909b241d9fd6e60981085c0fd9246392472f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGVkODkwOWIyNDFkOWZkNmU2MDk4MTA4NWMwZmQ5MjQ2MzkyNDcyZg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T13:10:33Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T13:10:33Z"}, "message": "[multiple changes]\n\n2011-08-02  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch3.adb, sem_ch5.adb, sem_type.adb, switch-c.adb, switch-c.ads,\n\tsem_prag.adb, sem_util.adb, sem_util.ads, sem_res.adb, warnsw.ads,\n\tprepcomp.ads, cstand.adb, stand.ads, a-calfor.adb, s-stusta.adb:\n\tMinor reformatting.\n\n2011-08-02  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_attr.adb: handle properly 'Result when it is a prefix of an\n\tindexed component.\n\n2011-08-02  Javier Miranda  <miranda@adacore.com>\n\n\t* einfo.ads, einfo.adb\n\t(Original_Access_Type): Move this attribute to Node26 since there was\n\tan undocumented use of Node21 in E_Access_Subprogram_Type entities\n\twhich causes conflicts and breaks the generation of the .NET compiler.\n\t(Interface_Name): Add missing documentation on JGNAT only uses of\n\tthis attribute.\n\nFrom-SVN: r177145", "tree": {"sha": "31260f5efb109439c9337953245e792f3b84b436", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31260f5efb109439c9337953245e792f3b84b436"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ded8909b241d9fd6e60981085c0fd9246392472f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ded8909b241d9fd6e60981085c0fd9246392472f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ded8909b241d9fd6e60981085c0fd9246392472f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ded8909b241d9fd6e60981085c0fd9246392472f/comments", "author": null, "committer": null, "parents": [{"sha": "70c34e1c94f276d6f306ed92b892cbe7340acd65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70c34e1c94f276d6f306ed92b892cbe7340acd65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70c34e1c94f276d6f306ed92b892cbe7340acd65"}], "stats": {"total": 224, "additions": 137, "deletions": 87}, "files": [{"sha": "83ff0830e2eff9352117e51f933fb066c5a7619d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ded8909b241d9fd6e60981085c0fd9246392472f", "patch": "@@ -1,3 +1,24 @@\n+2011-08-02  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch3.adb, sem_ch5.adb, sem_type.adb, switch-c.adb, switch-c.ads,\n+\tsem_prag.adb, sem_util.adb, sem_util.ads, sem_res.adb, warnsw.ads,\n+\tprepcomp.ads, cstand.adb, stand.ads, a-calfor.adb, s-stusta.adb:\n+\tMinor reformatting.\n+\n+2011-08-02  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_attr.adb: handle properly 'Result when it is a prefix of an\n+\tindexed component.\n+\n+2011-08-02  Javier Miranda  <miranda@adacore.com>\n+\n+\t* einfo.ads, einfo.adb\n+\t(Original_Access_Type): Move this attribute to Node26 since there was\n+\tan undocumented use of Node21 in E_Access_Subprogram_Type entities\n+\twhich causes conflicts and breaks the generation of the .NET compiler.\n+\t(Interface_Name): Add missing documentation on JGNAT only uses of\n+\tthis attribute.\n+\n 2011-08-02  Javier Miranda  <miranda@adacore.com>\n \n \t* exp_pakd.adb (Expand_Packed_Element_Reference): Disable this routine"}, {"sha": "e683e3c389bff1c734a6c851363edc49e0a21c5f", "filename": "gcc/ada/a-calfor.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2Fa-calfor.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2Fa-calfor.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-calfor.adb?ref=ded8909b241d9fd6e60981085c0fd9246392472f", "patch": "@@ -197,7 +197,7 @@ package body Ada.Calendar.Formatting is\n       Include_Time_Fraction : Boolean := False;\n       Time_Zone             : Time_Zones.Time_Offset := 0) return String\n    is\n-      To_Char    : constant array (0 .. 9) of Character := \"0123456789\";\n+      To_Char : constant array (0 .. 9) of Character := \"0123456789\";\n \n       Year        : Year_Number;\n       Month       : Month_Number;\n@@ -212,8 +212,8 @@ package body Ada.Calendar.Formatting is\n       --  The result length depends on whether fractions are requested.\n \n       Result : String := \"0000-00-00 00:00:00.00\";\n-      Last   : constant Positive\n-                 := Result'Last - (if Include_Time_Fraction then 0 else 3);\n+      Last   : constant Positive :=\n+                 Result'Last - (if Include_Time_Fraction then 0 else 3);\n \n    begin\n       Split (Date, Year, Month, Day,\n@@ -347,7 +347,7 @@ package body Ada.Calendar.Formatting is\n    begin\n       --  Validity checks\n \n-      if not Hour'Valid\n+      if        not Hour'Valid\n         or else not Minute'Valid\n         or else not Second'Valid\n         or else not Sub_Second'Valid"}, {"sha": "2df2a407574bf3a89ab532fdb8c9cd62b9e5e592", "filename": "gcc/ada/cstand.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2Fcstand.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2Fcstand.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstand.adb?ref=ded8909b241d9fd6e60981085c0fd9246392472f", "patch": "@@ -196,14 +196,15 @@ package body CStand is\n       Set_Size_Known_At_Compile_Time (E);\n    end Build_Float_Type;\n \n-   ------------------------\n+   ------------------------------\n    -- Find_Back_End_Float_Type --\n-   ------------------------\n+   ------------------------------\n \n    function Find_Back_End_Float_Type (Name : String) return Entity_Id is\n-      N : Elmt_Id := First_Elmt (Back_End_Float_Types);\n+      N : Elmt_Id;\n \n    begin\n+      N := First_Elmt (Back_End_Float_Types);\n       while Present (N) and then Get_Name_String (Chars (Node (N))) /= Name\n       loop\n          Next_Elmt (N);"}, {"sha": "c050776911b39e6db604a27ff90a87123aa8cf44", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=ded8909b241d9fd6e60981085c0fd9246392472f", "patch": "@@ -181,7 +181,6 @@ package body Einfo is\n    --    Default_Expr_Function           Node21\n    --    Discriminant_Constraint         Elist21\n    --    Interface_Name                  Node21\n-   --    Original_Access_Type            Node21\n    --    Original_Array_Type             Node21\n    --    Small_Value                     Ureal21\n \n@@ -221,6 +220,7 @@ package body Einfo is\n \n    --    Dispatch_Table_Wrappers         Elist26\n    --    Last_Assignment                 Node26\n+   --    Original_Access_Type            Node26\n    --    Overridden_Operation            Node26\n    --    Package_Instantiation           Node26\n    --    Relative_Deadline_Variable      Node26\n@@ -2357,7 +2357,7 @@ package body Einfo is\n    function Original_Access_Type (Id : E) return E is\n    begin\n       pragma Assert (Ekind (Id) = E_Access_Subprogram_Type);\n-      return Node21 (Id);\n+      return Node26 (Id);\n    end Original_Access_Type;\n \n    function Original_Array_Type (Id : E) return E is\n@@ -4862,7 +4862,7 @@ package body Einfo is\n    procedure Set_Original_Access_Type (Id : E; V : E) is\n    begin\n       pragma Assert (Ekind (Id) = E_Access_Subprogram_Type);\n-      Set_Node21 (Id, V);\n+      Set_Node26 (Id, V);\n    end Set_Original_Access_Type;\n \n    procedure Set_Original_Array_Type (Id : E; V : E) is\n@@ -8345,9 +8345,6 @@ package body Einfo is\n          when Fixed_Point_Kind                             =>\n             Write_Str (\"Small_Value\");\n \n-         when E_Access_Subprogram_Type                     =>\n-            Write_Str (\"Original_Access_Type\");\n-\n          when E_In_Parameter                               =>\n             Write_Str (\"Default_Expr_Function\");\n \n@@ -8550,6 +8547,9 @@ package body Einfo is\n    procedure Write_Field26_Name (Id : Entity_Id) is\n    begin\n       case Ekind (Id) is\n+         when E_Access_Subprogram_Type                     =>\n+            Write_Str (\"Original_Access_Type\");\n+\n          when E_Generic_Package                            |\n               E_Package                                    =>\n             Write_Str (\"Package_Instantiation\");"}, {"sha": "45dd3b4778f4d626caf6832d3f946901f7f56e49", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=ded8909b241d9fd6e60981085c0fd9246392472f", "patch": "@@ -1911,12 +1911,13 @@ package Einfo is\n --       instantiations.\n \n --    Interface_Name (Node21)\n---       Present in exceptions, functions, procedures, variables, constants,\n---       and packages. Set to Empty unless an export, import, or interface\n---       name pragma has explicitly specified an external name, in which\n---       case it references an N_String_Literal node for the specified\n---       external name. In the case of exceptions, the field is set by\n---       Import_Exception/Export_Exception (which can be used in OpenVMS\n+--       Present in constants, variables, exceptions, functions, procedures,\n+--       packages, components (JGNAT only), discriminants (JGNAT only), and\n+--       access to subprograms (JGNAT only). Set to Empty unless an export,\n+--       import, or interface name pragma has explicitly specified an external\n+--       name, in which case it references an N_String_Literal node for the\n+--       specified external name. In the case of exceptions, the field is set\n+--       by Import_Exception/Export_Exception (which can be used in OpenVMS\n --       versions only). Note that if this field is Empty, and Is_Imported\n --       or Is_Exported is set, then the default interface name is the name\n --       of the entity, cased in a manner that is appropriate to the system\n@@ -3206,7 +3207,7 @@ package Einfo is\n --       Optimize_Alignment (Off) mode applies to the type/object, then neither\n --       of the flags Optimize_Alignment_Space/Optimize_Alignment_Time is set.\n \n---    Original_Access_Type (Node21)\n+--    Original_Access_Type (Node26)\n --       Present in E_Access_Subprogram_Type entities. Set only if the access\n --       type was generated by the expander as part of processing an access\n --       to protected subprogram type. Points to the access to protected\n@@ -4882,8 +4883,9 @@ package Einfo is\n    --  E_Access_Subprogram_Type\n    --    Equivalent_Type                     (Node18)   (remote types only)\n    --    Directly_Designated_Type            (Node20)\n-   --    Original_Access_Type                (Node21)\n+   --    Interface_Name                      (Node21)   (JGNAT usage only)\n    --    Needs_No_Actuals                    (Flag22)\n+   --    Original_Access_Type                (Node26)\n    --    Can_Use_Internal_Rep                (Flag229)\n    --    (plus type attributes)\n \n@@ -5004,7 +5006,7 @@ package Einfo is\n    --    Renamed_Object                      (Node18)\n    --    Size_Check_Code                     (Node19)   (constants only)\n    --    Prival_Link                         (Node20)   (privals only)\n-   --    Interface_Name                      (Node21)\n+   --    Interface_Name                      (Node21)   (constants only)\n    --    Related_Type                        (Node27)   (constants only)\n    --    Has_Alignment_Clause                (Flag46)\n    --    Has_Atomic_Components               (Flag86)"}, {"sha": "2f16fa79d0b0bf8c2d3a422107df3c2f9fc3eb83", "filename": "gcc/ada/prepcomp.ads", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2Fprepcomp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2Fprepcomp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprepcomp.ads?ref=ded8909b241d9fd6e60981085c0fd9246392472f", "patch": "@@ -30,26 +30,26 @@ with Namet; use Namet;\n package Prepcomp is\n \n    procedure Add_Dependencies;\n-   --  Add dependencies on the preprocessing data file and the\n-   --  preprocessing definition files, if any.\n+   --  Add dependencies on the preprocessing data file and the preprocessing\n+   --  definition files, if any.\n \n    procedure Check_Symbols;\n-   --  Check if there are preprocessing symbols on the command line and\n-   --  set preprocessing if there are some: all files are preprocessed with\n-   --  these symbols. This procedure should not be called if there is a\n-   --  preprocessing data file specified on the command line. Procedure\n-   --  Parse_Preprocessing_Data_File should be called instead.\n+   --  Check if there are preprocessing symbols on the command line and set\n+   --  preprocessing if there are some: all files are preprocessed with these\n+   --  symbols. This procedure should not be called if there is a preprocessing\n+   --  data file specified on the command line. Instead a call should be made\n+   --  to Parse_Preprocessing_Data_File.\n \n    procedure Parse_Preprocessing_Data_File (N : File_Name_Type);\n    --  Parse a preprocessing data file, specified with a -gnatep= switch\n \n    procedure Prepare_To_Preprocess\n      (Source               : File_Name_Type;\n       Preprocessing_Needed : out Boolean);\n-   --  Prepare, if necessary, the preprocessor for a source file.\n-   --  If the source file needs to be preprocessed, Preprocessing_Needed\n-   --  is set to True. Otherwise, Preprocessing_Needed is set to False\n-   --  and no preprocessing needs to be done.\n+   --  Prepare, if necessary, the preprocessor for a source file. If the source\n+   --  file needs to be preprocessed, Preprocessing_Needed is set to True.\n+   --  Otherwise, Preprocessing_Needed is set to False and no preprocessing\n+   --  needs to be done.\n \n    procedure Process_Command_Line_Symbol_Definitions;\n    --  Check symbol definitions that have been added by calls to procedure"}, {"sha": "da925a788d3ca68a47107922e999b449a2674272", "filename": "gcc/ada/s-stusta.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2Fs-stusta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2Fs-stusta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stusta.adb?ref=ded8909b241d9fd6e60981085c0fd9246392472f", "patch": "@@ -234,8 +234,8 @@ package body System.Stack_Usage.Tasking is\n \n    procedure Print (Obj : Stack_Usage_Result) is\n       Pos : Positive := Obj.Task_Name'Last;\n-   begin\n \n+   begin\n       --  Simply trim the string containing the task name\n \n       for S in Obj.Task_Name'Range loop\n@@ -246,8 +246,8 @@ package body System.Stack_Usage.Tasking is\n       end loop;\n \n       declare\n-         T_Name : constant String := Obj.Task_Name\n-                                       (Obj.Task_Name'First .. Pos);\n+         T_Name : constant String :=\n+                    Obj.Task_Name (Obj.Task_Name'First .. Pos);\n       begin\n          Put_Line\n            (\"| \" & T_Name & \" | \" & Natural'Image (Obj.Max_Size) &"}, {"sha": "f75f36e8e9535c5f48235faf248063f0b3c9e426", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=ded8909b241d9fd6e60981085c0fd9246392472f", "patch": "@@ -4046,6 +4046,22 @@ package body Sem_Attr is\n                Error_Attr;\n             end if;\n \n+            --  The attribute reference is a primary. If expressions follow,\n+            --  the attribute reference is really an indexable object, so\n+            --  rewrite and analyze as an indexed component.\n+\n+            if Present (E1) then\n+               Rewrite (N,\n+                 Make_Indexed_Component (Loc,\n+                   Prefix      =>\n+                     Make_Attribute_Reference (Loc,\n+                       Prefix         => Relocate_Node (Prefix (N)),\n+                       Attribute_Name => Name_Result),\n+                   Expressions => Expressions (N)));\n+               Analyze (N);\n+               return;\n+            end if;\n+\n             Set_Etype (N, Etype (CS));\n \n             --  If several functions with that name are visible,"}, {"sha": "0001ddcef0ef9da4726a7ec29c6ab6b39697d6d9", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=ded8909b241d9fd6e60981085c0fd9246392472f", "patch": "@@ -15156,7 +15156,10 @@ package body Sem_Ch3 is\n \n          declare\n             Max_Base_Digits : constant Uint :=\n-               Expr_Value (Expression (Parent (RTE (RE_Max_Base_Digits))));\n+                                Expr_Value\n+                                  (Expression\n+                                     (Parent (RTE (RE_Max_Base_Digits))));\n+\n          begin\n             if Digs_Val > Max_Base_Digits then\n                Error_Msg_Uint_1 := Max_Base_Digits;\n@@ -17366,15 +17369,15 @@ package body Sem_Ch3 is\n                                   Is_Constrained (Priv_Parent)\n                                     or else\n                                       Nkind (Priv_Indic) = N_Subtype_Indication\n-                                        or else\n-                                          Is_Constrained (Entity (Priv_Indic));\n+                                    or else\n+                                      Is_Constrained (Entity (Priv_Indic));\n \n                   Full_Constr : constant Boolean :=\n                                   Is_Constrained (Full_Parent)\n                                     or else\n                                       Nkind (Full_Indic) = N_Subtype_Indication\n-                                        or else\n-                                          Is_Constrained (Entity (Full_Indic));\n+                                    or else\n+                                      Is_Constrained (Entity (Full_Indic));\n \n                   Priv_Discr : Entity_Id;\n                   Full_Discr : Entity_Id;\n@@ -17384,7 +17387,7 @@ package body Sem_Ch3 is\n                   Full_Discr := First_Discriminant (Full_Parent);\n                   while Present (Priv_Discr) and then Present (Full_Discr) loop\n                      if Original_Record_Component (Priv_Discr) =\n-                       Original_Record_Component (Full_Discr)\n+                        Original_Record_Component (Full_Discr)\n                        or else\n                          Corresponding_Discriminant (Priv_Discr) =\n                          Corresponding_Discriminant (Full_Discr)"}, {"sha": "1a5bdd40db2a2e3441652f5c78931ff659973671", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=ded8909b241d9fd6e60981085c0fd9246392472f", "patch": "@@ -2008,11 +2008,10 @@ package body Sem_Ch5 is\n                         return;\n                      end;\n \n-                  else\n-\n-                     --  Domain of iteration is not a function call, and is\n-                     --  side-effect free.\n+                  --  Domain of iteration is not a function call, and is\n+                  --  side-effect free.\n \n+                  else\n                      Analyze (DS);\n                   end if;\n                end if;\n@@ -2210,6 +2209,7 @@ package body Sem_Ch5 is\n       then\n          declare\n             Id : constant Entity_Id := Make_Temporary (Loc, 'R', Container);\n+\n             Decl   : Node_Id;\n             Assign : Node_Id;\n \n@@ -2223,8 +2223,8 @@ package body Sem_Ch5 is\n \n             Assign :=\n               Make_Assignment_Statement (Loc,\n-                 Name        => New_Occurrence_Of (Id, Loc),\n-                 Expression  => Relocate_Node (Container));\n+                Name        => New_Occurrence_Of (Id, Loc),\n+                Expression  => Relocate_Node (Container));\n \n             Insert_Actions (Parent (N), New_List (Decl, Assign));\n          end;"}, {"sha": "c2cb3d4cc69212ae625d05aec8547d768f181de4", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=ded8909b241d9fd6e60981085c0fd9246392472f", "patch": "@@ -3865,22 +3865,25 @@ package body Sem_Prag is\n \n       procedure Process_Import_Predefined_Type is\n          Loc  : constant Source_Ptr := Sloc (N);\n-         Elmt : Elmt_Id := First_Elmt (Predefined_Float_Types);\n+         Elmt : Elmt_Id;\n          Ftyp : Node_Id := Empty;\n          Decl : Node_Id;\n          Def  : Node_Id;\n          Nam  : Name_Id;\n+\n       begin\n          String_To_Name_Buffer (Strval (Expression (Arg3)));\n          Nam := Name_Find;\n \n+         Elmt := First_Elmt (Predefined_Float_Types);\n          while Present (Elmt) and then Chars (Node (Elmt)) /= Nam loop\n             Next_Elmt (Elmt);\n          end loop;\n \n          Ftyp := Node (Elmt);\n \n          if Present (Ftyp) then\n+\n             --  Don't build a derived type declaration, because predefined C\n             --  types have no declaration anywhere, so cannot really be named.\n             --  Instead build a full type declaration, starting with an\n@@ -3893,8 +3896,9 @@ package body Sem_Prag is\n                    Make_Real_Literal (Loc, Realval (Type_Low_Bound (Ftyp))),\n                    Make_Real_Literal (Loc, Realval (Type_High_Bound (Ftyp)))));\n \n+            --  Should never have a predefined type we cannot handle\n+\n             else\n-               --  Should never have a predefined type we cannot handle\n                raise Program_Error;\n             end if;\n "}, {"sha": "f32e05274516e0e281d956586fb7459de4911da5", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=ded8909b241d9fd6e60981085c0fd9246392472f", "patch": "@@ -5739,13 +5739,14 @@ package body Sem_Res is\n \n       --  Commented out as the call to Is_Inherited_Operation_For_Type may\n       --  cause an error because the type entity of the parent node of\n-      --  Entity (Name (N) may not be set.\n+      --  Entity (Name (N) may not be set. ???\n+      --  So why not just add a guard ???\n \n --      if Nkind (N) = N_Function_Call\n --        and then Is_Tagged_Type (Etype (N))\n --        and then Is_Entity_Name (Name (N))\n --        and then Is_Inherited_Operation_For_Type\n---         (Entity (Name (N)), Etype (N))\n+--                   (Entity (Name (N)), Etype (N))\n --      then\n --         Check_Formal_Restriction (\"function not inherited\", N);\n --      end if;"}, {"sha": "dc98cc168f3356e5fea723b9b5d6d17ec4be5704", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=ded8909b241d9fd6e60981085c0fd9246392472f", "patch": "@@ -832,13 +832,12 @@ package body Sem_Type is\n         and then Is_Interface (Etype (T1))\n         and then Is_Concurrent_Type (T2)\n         and then Interface_Present_In_Ancestor\n-                   (Typ   => BT2,\n-                    Iface => Etype (T1))\n+                   (Typ => BT2, Iface => Etype (T1))\n       then\n          return True;\n \n       --  Ada 2005 (AI-251): A class-wide abstract interface type T1 covers an\n-      --  object T2 implementing T1\n+      --  object T2 implementing T1.\n \n       elsif Ada_Version >= Ada_2005\n         and then Is_Class_Wide_Type (T1)"}, {"sha": "bddd50f3dc7582128cfd4813c98f80ec6710b936", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=ded8909b241d9fd6e60981085c0fd9246392472f", "patch": "@@ -6750,7 +6750,7 @@ package body Sem_Util is\n    -------------------------------------\n \n    function Is_Inherited_Operation_For_Type\n-     (E, Typ : Entity_Id) return Boolean\n+     (E : Entity_Id; Typ : Entity_Id) return Boolean\n    is\n    begin\n       return Is_Inherited_Operation (E)\n@@ -7373,9 +7373,11 @@ package body Sem_Util is\n    ----------------------------------\n \n    function Is_SPARK_Initialization_Expr (N : Node_Id) return Boolean is\n-      Is_Ok : Boolean;\n+      Is_Ok     : Boolean;\n+      Expr      : Node_Id;\n+      Comp_Assn : Node_Id;\n+      Choice    : Node_Id;\n \n-      Expr, Comp_Assn, Choice : Node_Id;\n    begin\n       Is_Ok := True;\n \n@@ -7476,7 +7478,7 @@ package body Sem_Util is\n             Is_Ok := False;\n       end case;\n \n-      <<Done>>\n+   <<Done>>\n       return Is_Ok;\n    end Is_SPARK_Initialization_Expr;\n "}, {"sha": "471c4a879ccb92b7526b8acc730b2574920b4fea", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=ded8909b241d9fd6e60981085c0fd9246392472f", "patch": "@@ -734,8 +734,8 @@ package Sem_Util is\n    --  if it is False (i.e. zero).\n \n    function Is_Fixed_Model_Number (U : Ureal; T : Entity_Id) return Boolean;\n-   --  Returns True iff the number U is a model number of the fixed-\n-   --  point type T, i.e. if it is an exact multiple of Small.\n+   --  Returns True iff the number U is a model number of the fixed-point type\n+   --  T, i.e. if it is an exact multiple of Small.\n \n    function Is_Fully_Initialized_Type (Typ : Entity_Id) return Boolean;\n    --  Typ is a type entity. This function returns true if this type is fully\n@@ -751,7 +751,7 @@ package Sem_Util is\n    --  by a derived type declaration.\n \n    function Is_Inherited_Operation_For_Type\n-     (E, Typ : Entity_Id) return Boolean;\n+     (E : Entity_Id; Typ : Entity_Id) return Boolean;\n    --  E is a subprogram. Return True is E is an implicit operation inherited\n    --  by the derived type declaration for type Typ.\n "}, {"sha": "dd5e9a795cc46209b6e22f92eb93bf3576450876", "filename": "gcc/ada/stand.ads", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2Fstand.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2Fstand.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstand.ads?ref=ded8909b241d9fd6e60981085c0fd9246392472f", "patch": "@@ -229,8 +229,8 @@ package Stand is\n    type Standard_Entity_Array_Type is array (Standard_Entity_Type) of Node_Id;\n \n    Standard_Entity : Standard_Entity_Array_Type;\n-   --  This array contains pointers to the Defining Identifier nodes for\n-   --  each of the visible entities defined in Standard_Entities_Type. It is\n+   --  This array contains pointers to the Defining Identifier nodes for each\n+   --  of the visible entities defined in Standard_Entities_Type. The array is\n    --  initialized by the Create_Standard procedure.\n \n    Standard_Package_Node : Node_Id;\n@@ -336,12 +336,12 @@ package Stand is\n    --  carrying the enumeration literal names.\n \n    Standard_A_Char : Entity_Id;\n-   --  Access to character, used as a component of the exception type to\n-   --  denote a thin pointer component.\n+   --  Access to character, used as a component of the exception type to denote\n+   --  a thin pointer component.\n \n    Standard_Debug_Renaming_Type : Entity_Id;\n-   --  A zero-size subtype of Integer, used as the type of variables used\n-   --  to provide the debugger with name encodings for renaming declarations.\n+   --  A zero-size subtype of Integer, used as the type of variables used to\n+   --  provide the debugger with name encodings for renaming declarations.\n \n    Predefined_Float_Types : Elist_Id;\n    --  Entities for predefined floating point types. These are used by\n@@ -395,9 +395,9 @@ package Stand is\n    --  Used to represent some unknown integer type\n \n    Any_Modular : Entity_Id;\n-   --  Used to represent the result type of a boolean operation on an\n-   --  integer literal. The result is not Universal_Integer, because it is\n-   --  only legal in a modular context.\n+   --  Used to represent the result type of a boolean operation on an integer\n+   --  literal. The result is not Universal_Integer, because it is only legal\n+   --  in a modular context.\n \n    Any_Numeric : Entity_Id;\n    --  Used to represent some unknown numeric type\n@@ -409,10 +409,10 @@ package Stand is\n    --  Used to represent some unknown scalar type\n \n    Any_String : Entity_Id;\n-   --  The type Any_String is used for string literals before type\n-   --  resolution. It corresponds to array (Positive range <>) of character\n-   --  where the component type is compatible with any character type,\n-   --  not just Standard_Character.\n+   --  The type Any_String is used for string literals before type resolution.\n+   --  It corresponds to array (Positive range <>) of character where the\n+   --  component type is compatible with any character type, not just\n+   --  Standard_Character.\n \n    Universal_Integer : Entity_Id;\n    --  Entity for universal integer type. The bounds of this type correspond\n@@ -438,9 +438,9 @@ package Stand is\n    Standard_Integer_16 : Entity_Id;\n    Standard_Integer_32 : Entity_Id;\n    Standard_Integer_64 : Entity_Id;\n-   --  These are signed integer types with the indicated sizes, They are\n-   --  used for the underlying implementation types for fixed-point and\n-   --  enumeration types.\n+   --  These are signed integer types with the indicated sizes, They are used\n+   --  for the underlying implementation types for fixed-point and enumeration\n+   --  types.\n \n    Standard_Unsigned : Entity_Id;\n    --  An unsigned type of the same size as Standard_Integer\n@@ -465,7 +465,7 @@ package Stand is\n    --  initialization that is carried out by Create_Standard.\n \n    procedure Tree_Write;\n-   --  Writes out the entity values in this package to the current\n-   --  tree file using Osint.Tree_Write.\n+   --  Writes out the entity values in this package to the current tree file\n+   --  using Osint.Tree_Write.\n \n end Stand;"}, {"sha": "a5528810654b002338bbf11f5789a1e6e5da34a5", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=ded8909b241d9fd6e60981085c0fd9246392472f", "patch": "@@ -82,8 +82,8 @@ package body Switch.C is\n       end if;\n \n       Preprocessing_Symbol_Last := Preprocessing_Symbol_Last + 1;\n-      Preprocessing_Symbol_Defs (Preprocessing_Symbol_Last)\n-         := new String'(Def);\n+      Preprocessing_Symbol_Defs (Preprocessing_Symbol_Last) :=\n+        new String'(Def);\n    end Add_Symbol_Definition;\n \n    -----------------------------"}, {"sha": "2586d60493a2c3bf27c7be33f245e66d84a2ca06", "filename": "gcc/ada/switch-c.ads", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2Fswitch-c.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2Fswitch-c.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.ads?ref=ded8909b241d9fd6e60981085c0fd9246392472f", "patch": "@@ -24,10 +24,11 @@\n ------------------------------------------------------------------------------\n \n --  This package scans front end switches. Note that the body of Usage must be\n---  coordinated with the switches that are recognized by this package.\n---  The Usage package also acts as the official documentation for the\n---  switches that are recognized. In addition, package Debug documents\n---  the otherwise undocumented debug switches that are also recognized.\n+--  be coordinated with the switches that are recognized by this package.\n+\n+--  The Usage package also acts as the official documentation for the switches\n+--  that are recognized. In addition, package Debug documents the otherwise\n+--  undocumented debug switches that are also recognized.\n \n with System.Strings; use System.Strings;\n "}, {"sha": "f1449f8ef3fb217c758c9af36f0a47b9b3b5e865", "filename": "gcc/ada/warnsw.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2Fwarnsw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ded8909b241d9fd6e60981085c0fd9246392472f/gcc%2Fada%2Fwarnsw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fwarnsw.ads?ref=ded8909b241d9fd6e60981085c0fd9246392472f", "patch": "@@ -23,7 +23,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This unit contains the routines used to handle setting of warning options.\n+--  This unit contains the routines used to handle setting of warning options\n \n package Warnsw is\n "}]}