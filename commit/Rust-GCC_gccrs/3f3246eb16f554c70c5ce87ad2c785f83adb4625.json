{"sha": "3f3246eb16f554c70c5ce87ad2c785f83adb4625", "node_id": "C_kwDOANBUbNoAKDNmMzI0NmViMTZmNTU0YzcwYzVjZTg3YWQyYzc4NWY4M2FkYjQ2MjU", "commit": {"author": {"name": "Qing Zhao", "email": "qing.zhao@oracle.com", "date": "2022-02-28T15:58:43Z"}, "committer": {"name": "Qing Zhao", "email": "qing.zhao@oracle.com", "date": "2022-02-28T15:58:43Z"}, "message": "Suppress uninitialized warnings for new created uses from __builtin_clear_padding folding [PR104550]\n\n__builtin_clear_padding(&object) will clear all the padding bits of the object.\nactually, it doesn't involve any use of an user variable. Therefore, users do\nnot expect any uninitialized warning from it. It's reasonable to suppress\nuninitialized warnings for all new created uses from __builtin_clear_padding\nfolding.\n\n\tPR middle-end/104550\n\ngcc/ChangeLog:\n\n\t* gimple-fold.cc (clear_padding_flush): Suppress warnings for new\n\tcreated uses.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/auto-init-pr104550-1.c: New test.\n\t* gcc.dg/auto-init-pr104550-2.c: New test.\n\t* gcc.dg/auto-init-pr104550-3.c: New test.", "tree": {"sha": "a062d29bb8293c9752e89a20e059d0472321b846", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a062d29bb8293c9752e89a20e059d0472321b846"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f3246eb16f554c70c5ce87ad2c785f83adb4625", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f3246eb16f554c70c5ce87ad2c785f83adb4625", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f3246eb16f554c70c5ce87ad2c785f83adb4625", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f3246eb16f554c70c5ce87ad2c785f83adb4625/comments", "author": {"login": "qingzhao69", "id": 89154636, "node_id": "MDQ6VXNlcjg5MTU0NjM2", "avatar_url": "https://avatars.githubusercontent.com/u/89154636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qingzhao69", "html_url": "https://github.com/qingzhao69", "followers_url": "https://api.github.com/users/qingzhao69/followers", "following_url": "https://api.github.com/users/qingzhao69/following{/other_user}", "gists_url": "https://api.github.com/users/qingzhao69/gists{/gist_id}", "starred_url": "https://api.github.com/users/qingzhao69/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qingzhao69/subscriptions", "organizations_url": "https://api.github.com/users/qingzhao69/orgs", "repos_url": "https://api.github.com/users/qingzhao69/repos", "events_url": "https://api.github.com/users/qingzhao69/events{/privacy}", "received_events_url": "https://api.github.com/users/qingzhao69/received_events", "type": "User", "site_admin": false}, "committer": {"login": "qingzhao69", "id": 89154636, "node_id": "MDQ6VXNlcjg5MTU0NjM2", "avatar_url": "https://avatars.githubusercontent.com/u/89154636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qingzhao69", "html_url": "https://github.com/qingzhao69", "followers_url": "https://api.github.com/users/qingzhao69/followers", "following_url": "https://api.github.com/users/qingzhao69/following{/other_user}", "gists_url": "https://api.github.com/users/qingzhao69/gists{/gist_id}", "starred_url": "https://api.github.com/users/qingzhao69/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qingzhao69/subscriptions", "organizations_url": "https://api.github.com/users/qingzhao69/orgs", "repos_url": "https://api.github.com/users/qingzhao69/repos", "events_url": "https://api.github.com/users/qingzhao69/events{/privacy}", "received_events_url": "https://api.github.com/users/qingzhao69/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1060d06b4df8836135ed15d020afbd3637dc625b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1060d06b4df8836135ed15d020afbd3637dc625b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1060d06b4df8836135ed15d020afbd3637dc625b"}], "stats": {"total": 44, "additions": 43, "deletions": 1}, "files": [{"sha": "c9179abb27ed1e632f41fa145e2765ae89ea994a", "filename": "gcc/gimple-fold.cc", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f3246eb16f554c70c5ce87ad2c785f83adb4625/gcc%2Fgimple-fold.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f3246eb16f554c70c5ce87ad2c785f83adb4625/gcc%2Fgimple-fold.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.cc?ref=3f3246eb16f554c70c5ce87ad2c785f83adb4625", "patch": "@@ -4379,7 +4379,17 @@ clear_padding_flush (clear_padding_struct *buf, bool full)\n \t      else\n \t\t{\n \t\t  src = make_ssa_name (type);\n-\t\t  g = gimple_build_assign (src, unshare_expr (dst));\n+\t\t  tree tmp_dst = unshare_expr (dst);\n+\t\t  /* The folding introduces a read from the tmp_dst, we should\n+\t\t     prevent uninitialized warning analysis from issuing warning\n+\t\t     for such fake read.  In order to suppress warning only for\n+\t\t     this expr, we should set the location of tmp_dst to\n+\t\t     UNKNOWN_LOCATION first, then suppress_warning will call\n+\t\t     set_no_warning_bit to set the no_warning flag only for\n+\t\t     tmp_dst.  */\n+\t\t  SET_EXPR_LOCATION (tmp_dst, UNKNOWN_LOCATION);\n+\t\t  suppress_warning (tmp_dst, OPT_Wuninitialized);\n+\t\t  g = gimple_build_assign (src, tmp_dst);\n \t\t  gimple_set_location (g, buf->loc);\n \t\t  gsi_insert_before (buf->gsi, g, GSI_SAME_STMT);\n \t\t  tree mask = native_interpret_expr (type,"}, {"sha": "a08110c3a170b6284f6f9b6679d69f2be79ec0fb", "filename": "gcc/testsuite/gcc.dg/auto-init-pr104550-1.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f3246eb16f554c70c5ce87ad2c785f83adb4625/gcc%2Ftestsuite%2Fgcc.dg%2Fauto-init-pr104550-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f3246eb16f554c70c5ce87ad2c785f83adb4625/gcc%2Ftestsuite%2Fgcc.dg%2Fauto-init-pr104550-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fauto-init-pr104550-1.c?ref=3f3246eb16f554c70c5ce87ad2c785f83adb4625", "patch": "@@ -0,0 +1,10 @@\n+/* PR 104550*/\n+/* { dg-do compile } */\n+/* { dg-options \"-O -Wuninitialized -ftrivial-auto-var-init=pattern\" } */\n+struct vx_audio_level {\n+ int has_monitor_level : 1;\n+};\n+\n+void vx_set_monitor_level() {\n+ struct vx_audio_level info; /* { dg-bogus \"info\" \"is used uninitialized\" } */\n+}"}, {"sha": "2c395b32d322b0e010aead53f294787ea6967584", "filename": "gcc/testsuite/gcc.dg/auto-init-pr104550-2.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f3246eb16f554c70c5ce87ad2c785f83adb4625/gcc%2Ftestsuite%2Fgcc.dg%2Fauto-init-pr104550-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f3246eb16f554c70c5ce87ad2c785f83adb4625/gcc%2Ftestsuite%2Fgcc.dg%2Fauto-init-pr104550-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fauto-init-pr104550-2.c?ref=3f3246eb16f554c70c5ce87ad2c785f83adb4625", "patch": "@@ -0,0 +1,11 @@\n+/* PR 104550 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O -Wuninitialized -ftrivial-auto-var-init=zero\" } */\n+struct vx_audio_level {\n+ int has_monitor_level : 1;\n+};\n+\n+void vx_set_monitor_level() {\n+ struct vx_audio_level info; \n+ __builtin_clear_padding (&info);  /* { dg-bogus \"info\" \"is used uninitialized\" } */ \n+}"}, {"sha": "9893e37f12d82f03b8dc3014d8be6af97ed99941", "filename": "gcc/testsuite/gcc.dg/auto-init-pr104550-3.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f3246eb16f554c70c5ce87ad2c785f83adb4625/gcc%2Ftestsuite%2Fgcc.dg%2Fauto-init-pr104550-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f3246eb16f554c70c5ce87ad2c785f83adb4625/gcc%2Ftestsuite%2Fgcc.dg%2Fauto-init-pr104550-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fauto-init-pr104550-3.c?ref=3f3246eb16f554c70c5ce87ad2c785f83adb4625", "patch": "@@ -0,0 +1,11 @@\n+/* PR 104550 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O -Wuninitialized -ftrivial-auto-var-init=pattern\" } */\n+struct vx_audio_level {\n+ int has_monitor_level : 1;\n+};\n+\n+void vx_set_monitor_level() {\n+ struct vx_audio_level info;   /* { dg-bogus \"info\" \"is used uninitialized\" } */\n+ __builtin_clear_padding (&info);  /* { dg-bogus \"info\" \"is used uninitialized\" } */ \n+}"}]}