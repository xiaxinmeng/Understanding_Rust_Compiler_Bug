{"sha": "848f2ce8d5c3c0d124ece9955122418bba9e5d55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ4ZjJjZThkNWMzYzBkMTI0ZWNlOTk1NTEyMjQxOGJiYTllNWQ1NQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2003-02-10T19:56:12Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2003-02-10T19:56:12Z"}, "message": "Timestamp.java (compareTo(Object)): New method.\n\n\t* java/sql/Timestamp.java (compareTo(Object)): New method.\n\t(compareTo(Timestamp)): Likewise.\n\t(serialVersionUID): Updated.\n\nFrom-SVN: r62648", "tree": {"sha": "a4125fe7fb419c85e29a2ed76bc35d14fd1e2886", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4125fe7fb419c85e29a2ed76bc35d14fd1e2886"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/848f2ce8d5c3c0d124ece9955122418bba9e5d55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/848f2ce8d5c3c0d124ece9955122418bba9e5d55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/848f2ce8d5c3c0d124ece9955122418bba9e5d55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/848f2ce8d5c3c0d124ece9955122418bba9e5d55/comments", "author": null, "committer": null, "parents": [{"sha": "aa634f11e65d7630b96742a4f3d187d920e0c87e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa634f11e65d7630b96742a4f3d187d920e0c87e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa634f11e65d7630b96742a4f3d187d920e0c87e"}], "stats": {"total": 40, "additions": 32, "deletions": 8}, "files": [{"sha": "0635ac1663a70af3287b6a9bb095d5ce7747c4b6", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/848f2ce8d5c3c0d124ece9955122418bba9e5d55/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/848f2ce8d5c3c0d124ece9955122418bba9e5d55/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=848f2ce8d5c3c0d124ece9955122418bba9e5d55", "patch": "@@ -1,3 +1,9 @@\n+2003-02-10  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/sql/Timestamp.java (compareTo(Object)): New method.\n+\t(compareTo(Timestamp)): Likewise.\n+\t(serialVersionUID): Updated.\n+\n 2003-02-07  Mark Wielaard  <mark@klomp.org>\n \n \t* java/util/jar/JarFile.java (JarFile(String, boolean)): Read manifest"}, {"sha": "0f8b44c43a60852387af8c4e186cd68c2d219a37", "filename": "libjava/java/sql/Timestamp.java", "status": "modified", "additions": 26, "deletions": 8, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/848f2ce8d5c3c0d124ece9955122418bba9e5d55/libjava%2Fjava%2Fsql%2FTimestamp.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/848f2ce8d5c3c0d124ece9955122418bba9e5d55/libjava%2Fjava%2Fsql%2FTimestamp.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsql%2FTimestamp.java?ref=848f2ce8d5c3c0d124ece9955122418bba9e5d55", "patch": "@@ -1,5 +1,5 @@\n /* Time.java -- Wrapper around java.util.Date\n-   Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2003 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -52,7 +52,7 @@\n  */\n public class Timestamp extends java.util.Date\n {\n-  static final long serialVersionUID = 3581463369166924961L;\n+  static final long serialVersionUID = 2745179027874758501L;\n \n   /**\n    * Used for parsing and formatting this date.\n@@ -237,19 +237,37 @@ public boolean equals(Timestamp ts)\n   }\n \n   /**\n+   * Compare two Timestamp\n+   * @param when the other Timestamp.\n+   * @return 0, if the date represented\n+   * by obj is exactly the same as the time represented by this\n+   * object, a negative if this Timestamp is before the other Timestamp, and\n+   * a positive value otherwise.  \n    * @since 1.2\n    */\n-   /*\n   public int compareTo(Timestamp ts)\n   {\n-    \n-  }*/\n-  \n+    int s = super.compareTo((java.util.Date) ts);\n+    if (s != 0)\n+      return s;\n+    // If Date components were equal, then we check the nanoseconds.\n+    return nanos - ts.nanos;\n+  }\n+\n   /**\n+   * Compares this Timestamp to another.  This behaves like\n+   * <code>compareTo(Timestamp)</code>, but it may throw a\n+   * <code>ClassCastException</code>\n+   * @param obj the other Timestamp.\n+   * @return 0, if the Timestamp represented\n+   * by obj is exactly the same as the time represented by this\n+   * object, a negative if this Timestamp is before the other Timestamp, and\n+   * a positive value otherwise.  \n+   * @exception ClassCastException if obj is not of type Timestamp.\n    * @since 1.2\n-   *//*\n+   */\n   public int compareTo(Object obj)\n   {\n     return compareTo((Timestamp) obj);\n-  }*/\n+  }\n }"}]}