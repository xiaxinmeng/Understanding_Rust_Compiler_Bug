{"sha": "b5f79f4d3808294192ec7438718aa54cf8982128", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjVmNzlmNGQzODA4Mjk0MTkyZWM3NDM4NzE4YWE1NGNmODk4MjEyOA==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2021-04-22T18:52:22Z"}, "committer": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2021-04-22T23:38:36Z"}, "message": "aix: delete AIX pre-PowerPC version of atomicity.h\n\nThe AIX-specific version of atomicity.h that provides compatibility\nfor the origina POWER architecture without atomic instructions no longer\nis referenced.  This patch deletes the file.\n\nlibstdc++-v3/ChangeLog:\n\n\t* config/os/aix/atomicity.h: Delete.", "tree": {"sha": "f1afb48a5d40df817c9458614b6b8a60455e5d92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1afb48a5d40df817c9458614b6b8a60455e5d92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5f79f4d3808294192ec7438718aa54cf8982128", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5f79f4d3808294192ec7438718aa54cf8982128", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5f79f4d3808294192ec7438718aa54cf8982128", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5f79f4d3808294192ec7438718aa54cf8982128/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e1aaf32ddf13cc79fcf146d6b62a6e0feb82be0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e1aaf32ddf13cc79fcf146d6b62a6e0feb82be0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e1aaf32ddf13cc79fcf146d6b62a6e0feb82be0"}], "stats": {"total": 56, "additions": 0, "deletions": 56}, "files": [{"sha": "13a51daa68b28184bab9d57fca7fbd569870b0cd", "filename": "libstdc++-v3/config/os/aix/atomicity.h", "status": "removed", "additions": 0, "deletions": 56, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e1aaf32ddf13cc79fcf146d6b62a6e0feb82be0/libstdc%2B%2B-v3%2Fconfig%2Fos%2Faix%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e1aaf32ddf13cc79fcf146d6b62a6e0feb82be0/libstdc%2B%2B-v3%2Fconfig%2Fos%2Faix%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Faix%2Fatomicity.h?ref=4e1aaf32ddf13cc79fcf146d6b62a6e0feb82be0", "patch": "@@ -1,56 +0,0 @@\n-// Low-level functions for atomic operations: AIX version  -*- C++ -*-\n-\n-// Copyright (C) 2000-2021 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License and\n-// a copy of the GCC Runtime Library Exception along with this program;\n-// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-// <http://www.gnu.org/licenses/>.\n-\n-#include <ext/atomicity.h>\n-\n-/* We cannot use the cpu/powerpc/bits/atomicity.h inline assembly\n-   definitions for these operations since they depend on operations\n-   that are not available on the original POWER architecture.  AIX\n-   still runs on the POWER architecture, so it would be incorrect to\n-   assume the existence of these instructions.\n-\n-   The definition of _Atomic_word must match the type pointed to by\n-   atomic_p in <sys/atomic_op.h>.  */\n-\n-extern \"C\"\n-{\n-#include <sys/atomic_op.h>\n-}\n-\n-namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)\n-{\n-_GLIBCXX_BEGIN_NAMESPACE_VERSION\n-\n-  _Atomic_word\n-  __attribute__ ((__unused__))\n-  __exchange_and_add (volatile _Atomic_word* __mem, int __val) throw ()\n-  { return ::fetch_and_add(const_cast<atomic_p>(__mem), __val); }\n-\n-  void\n-  __attribute__ ((__unused__))\n-  __atomic_add (volatile _Atomic_word* __mem, int __val) throw ()\n-  { (void) ::fetch_and_add(const_cast<atomic_p>(__mem), __val); }\n-\n-_GLIBCXX_END_NAMESPACE_VERSION\n-} // namespace"}]}