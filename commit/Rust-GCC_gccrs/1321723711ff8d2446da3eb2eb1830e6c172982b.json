{"sha": "1321723711ff8d2446da3eb2eb1830e6c172982b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTMyMTcyMzcxMWZmOGQyNDQ2ZGEzZWIyZWIxODMwZTZjMTcyOTgyYg==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@gcc.gnu.org", "date": "2016-08-22T15:13:16Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@gcc.gnu.org", "date": "2016-08-22T15:13:16Z"}, "message": "Improve readability of debug_tree() dumps for SSA_NAME and VECTOR_CST\n\ngcc/ChangeLog:\n\n\t* print-tree.c (print_node) [VECTOR_CST]: Coalesce the output of\n\tidentical consecutive elements.\n\t[SSA_NAME]: Print the name's def stmt on its own line.  When printing\n\tthe node's def stmt, avoid printing an unwanted trailing newline by\n\treplacing the call to print_gimple_stmt() with its inlined body and\n\tadjusting it to not set pp_needs_newline and to call pp_flush()\n\tinstead of pp_newline_and_flush().\n\nFrom-SVN: r239661", "tree": {"sha": "e2384c92d1ec0bed6e70276c4ca04e35c2ca8675", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2384c92d1ec0bed6e70276c4ca04e35c2ca8675"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1321723711ff8d2446da3eb2eb1830e6c172982b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1321723711ff8d2446da3eb2eb1830e6c172982b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1321723711ff8d2446da3eb2eb1830e6c172982b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1321723711ff8d2446da3eb2eb1830e6c172982b/comments", "author": null, "committer": null, "parents": [{"sha": "6dc198e3a58a7acc5874f8912180f0a8ec8554c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dc198e3a58a7acc5874f8912180f0a8ec8554c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6dc198e3a58a7acc5874f8912180f0a8ec8554c6"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "e62f3313d927294c1e1a2790f352ff2dbd84c468", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1321723711ff8d2446da3eb2eb1830e6c172982b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1321723711ff8d2446da3eb2eb1830e6c172982b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1321723711ff8d2446da3eb2eb1830e6c172982b", "patch": "@@ -1,3 +1,13 @@\n+2016-08-22  Patrick Palka  <ppalka@gcc.gnu.org>\n+\n+\t* print-tree.c (print_node) [VECTOR_CST]: Coalesce the output of\n+\tidentical consecutive elements.\n+\t[SSA_NAME]: Print the name's def stmt on its own line.  When printing\n+\tthe node's def stmt, avoid printing an unwanted trailing newline by\n+\treplacing the call to print_gimple_stmt() with its inlined body and\n+\tadjusting it to not set pp_needs_newline and to call pp_flush()\n+\tinstead of pp_newline_and_flush().\n+\n 2016-08-22  Joseph Myers  <joseph@codesourcery.com>\n \n \t* tree.h (CASE_FLT_FN_FLOATN_NX, float16_type_node)"}, {"sha": "7546f19e33e96df03d29aa6c63e09135bf7b7e25", "filename": "gcc/print-tree.c", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1321723711ff8d2446da3eb2eb1830e6c172982b/gcc%2Fprint-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1321723711ff8d2446da3eb2eb1830e6c172982b/gcc%2Fprint-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-tree.c?ref=1321723711ff8d2446da3eb2eb1830e6c172982b", "patch": "@@ -770,8 +770,18 @@ print_node (FILE *file, const char *prefix, tree node, int indent)\n \n \t    for (i = 0; i < VECTOR_CST_NELTS (node); ++i)\n \t      {\n-\t\tsprintf (buf, \"elt%u: \", i);\n+\t\tunsigned j;\n+\t\t/* Coalesce the output of identical consecutive elements.  */\n+\t\tfor (j = i + 1; j < VECTOR_CST_NELTS (node); j++)\n+\t\t  if (VECTOR_CST_ELT (node, j) != VECTOR_CST_ELT (node, i))\n+\t\t    break;\n+\t\tj--;\n+\t\tif (i == j)\n+\t\t  sprintf (buf, \"elt%u: \", i);\n+\t\telse\n+\t\t  sprintf (buf, \"elt%u...elt%u: \", i, j);\n \t\tprint_node (file, buf, VECTOR_CST_ELT (node, i), indent + 4);\n+\t\ti = j;\n \t      }\n \t  }\n \t  break;\n@@ -869,8 +879,14 @@ print_node (FILE *file, const char *prefix, tree node, int indent)\n \n \tcase SSA_NAME:\n \t  print_node_brief (file, \"var\", SSA_NAME_VAR (node), indent + 4);\n+\t  indent_to (file, indent + 4);\n \t  fprintf (file, \"def_stmt \");\n-\t  print_gimple_stmt (file, SSA_NAME_DEF_STMT (node), indent + 4, 0);\n+\t  {\n+\t    pretty_printer buffer;\n+\t    buffer.buffer->stream = file;\n+\t    pp_gimple_stmt_1 (&buffer, SSA_NAME_DEF_STMT (node), indent + 4, 0);\n+\t    pp_flush (&buffer);\n+\t  }\n \n \t  indent_to (file, indent + 4);\n \t  fprintf (file, \"version %u\", SSA_NAME_VERSION (node));"}]}