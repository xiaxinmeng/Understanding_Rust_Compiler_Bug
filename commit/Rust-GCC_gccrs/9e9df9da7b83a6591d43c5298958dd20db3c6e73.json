{"sha": "9e9df9da7b83a6591d43c5298958dd20db3c6e73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU5ZGY5ZGE3YjgzYTY1OTFkNDNjNTI5ODk1OGRkMjBkYjNjNmU3Mw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-22T13:26:32Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-22T13:26:32Z"}, "message": "[multiple changes]\n\n2010-06-22  Arnaud Charlet  <charlet@adacore.com>\n\n\t* fmap.adb, opt.ads, osint.adb, osint.ads, output.ads, scng.adb,\n\tsinput-c.adb, switch-m.ads, tree_io.ads: Use simpler form of\n\tWarnings Off/On.\n\n2010-06-22  Thomas Quinot  <quinot@adacore.com>\n\n\t* einfo.ads: Minor reformatting.\n\n2010-06-22  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_disp.adb (Expand_Interface_Thunk): Do not generate thunk of\n\teliminated primitives.\n\t(Make_DT): Avoid referencing eliminated primitives.\n\t(Register_Primitive): Do not register eliminated primitives in the\n\tdispatch table. Required to add this functionality when the program is\n\tcompiled without static dispatch tables (-gnatd.t)\n\nFrom-SVN: r161183", "tree": {"sha": "ca47323ccb53d850a727cc7979b3e8dece6d51fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca47323ccb53d850a727cc7979b3e8dece6d51fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e9df9da7b83a6591d43c5298958dd20db3c6e73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e9df9da7b83a6591d43c5298958dd20db3c6e73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e9df9da7b83a6591d43c5298958dd20db3c6e73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e9df9da7b83a6591d43c5298958dd20db3c6e73/comments", "author": null, "committer": null, "parents": [{"sha": "fa5aa8353877421229443a04c4d9711fb2dd4aa5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa5aa8353877421229443a04c4d9711fb2dd4aa5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa5aa8353877421229443a04c4d9711fb2dd4aa5"}], "stats": {"total": 147, "additions": 89, "deletions": 58}, "files": [{"sha": "cf49abfa38e6ff34351288095d9d4f60d00b3183", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9df9da7b83a6591d43c5298958dd20db3c6e73/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9df9da7b83a6591d43c5298958dd20db3c6e73/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9e9df9da7b83a6591d43c5298958dd20db3c6e73", "patch": "@@ -1,3 +1,22 @@\n+2010-06-22  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* fmap.adb, opt.ads, osint.adb, osint.ads, output.ads, scng.adb,\n+\tsinput-c.adb, switch-m.ads, tree_io.ads: Use simpler form of\n+\tWarnings Off/On.\n+\n+2010-06-22  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* einfo.ads: Minor reformatting.\n+\n+2010-06-22  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_disp.adb (Expand_Interface_Thunk): Do not generate thunk of\n+\teliminated primitives.\n+\t(Make_DT): Avoid referencing eliminated primitives.\n+\t(Register_Primitive): Do not register eliminated primitives in the\n+\tdispatch table. Required to add this functionality when the program is\n+\tcompiled without static dispatch tables (-gnatd.t)\n+\n 2010-06-22  Emmanuel Briot  <briot@adacore.com>\n \n \t* fmap.adb, scng.adb, switch-m.ads, sinput-c.adb, opt.ads, output.ads,"}, {"sha": "4912644575b6fd92382309384569810be7d15b09", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9df9da7b83a6591d43c5298958dd20db3c6e73/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9df9da7b83a6591d43c5298958dd20db3c6e73/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=9e9df9da7b83a6591d43c5298958dd20db3c6e73", "patch": "@@ -2477,7 +2477,7 @@ package Einfo is\n --       Applicable to all entities, true if the entity denotes a private\n --       component of a protected type.\n \n---    Is_Protected_Interface (Synthesized)\n+--    Is_Protected_Interface (synthesized)\n --       Present in types that are interfaces. True if interface is declared\n --       protected, or is derived from protected interfaces.\n \n@@ -2598,7 +2598,7 @@ package Einfo is\n --    Is_Tagged_Type (Flag55)\n --       Present in all entities. Set for an entity for a tagged type.\n \n---    Is_Task_Interface (Synthesized)\n+--    Is_Task_Interface (synthesized)\n --       Present in types that are interfaces. True if interface is declared as\n --       a task interface, or if it is derived from task interfaces.\n "}, {"sha": "e6dc68c5207eace2c1c06e6e2b76e0f32e3ecac8", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 37, "deletions": 17, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9df9da7b83a6591d43c5298958dd20db3c6e73/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9df9da7b83a6591d43c5298958dd20db3c6e73/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=9e9df9da7b83a6591d43c5298958dd20db3c6e73", "patch": "@@ -1474,10 +1474,15 @@ package body Exp_Disp is\n       Thunk_Id   := Empty;\n       Thunk_Code := Empty;\n \n+      --  No thunk needed if the primitive has been eliminated\n+\n+      if Is_Eliminated (Ultimate_Alias (Prim)) then\n+         return;\n+\n       --  In case of primitives that are functions without formals and a\n       --  controlling result there is no need to build the thunk.\n \n-      if not Present (First_Formal (Target)) then\n+      elsif not Present (First_Formal (Target)) then\n          pragma Assert (Ekind (Target) = E_Function\n            and then Has_Controlling_Result (Target));\n          return;\n@@ -3689,6 +3694,7 @@ package body Exp_Disp is\n \n                   if Is_Predefined_Dispatching_Operation (Prim)\n                     and then not Is_Abstract_Subprogram (Prim)\n+                    and then not Is_Eliminated (Prim)\n                     and then not Present (Prim_Table\n                                            (UI_To_Int (DT_Position (Prim))))\n                   then\n@@ -3979,10 +3985,17 @@ package body Exp_Disp is\n                while Present (Prim_Elmt) loop\n                   Prim := Node (Prim_Elmt);\n \n+                  --  Do not reference predefined primitives because they\n+                  --  are located in a separate dispatch table; skip also\n+                  --  abstract and eliminated primitives.\n+\n+                  --  Why do we skip imported primitives???\n+\n                   if not Is_Predefined_Dispatching_Operation (Prim)\n                     and then Present (Interface_Alias (Prim))\n                     and then not Is_Abstract_Subprogram (Alias (Prim))\n                     and then not Is_Imported (Alias (Prim))\n+                    and then not Is_Eliminated (Alias (Prim))\n                     and then Find_Dispatching_Type\n                                (Interface_Alias (Prim)) = Iface\n \n@@ -5379,6 +5392,7 @@ package body Exp_Disp is\n \n                      if Is_Predefined_Dispatching_Operation (Prim)\n                        and then not Is_Abstract_Subprogram (Prim)\n+                       and then not Is_Eliminated (Prim)\n                        and then not Present (Prim_Table\n                                               (UI_To_Int (DT_Position (Prim))))\n                      then\n@@ -5525,23 +5539,25 @@ package body Exp_Disp is\n \n                   E := Ultimate_Alias (Prim);\n \n-                  if Is_Imported (Prim)\n-                    or else Present (Interface_Alias (Prim))\n-                    or else Is_Predefined_Dispatching_Operation (Prim)\n-                    or else Is_Eliminated (E)\n-                  then\n-                     null;\n+                  --  Do not reference predefined primitives because they are\n+                  --  located in a separate dispatch table; skip entities with\n+                  --  attribute Interface_Alias because they are only required\n+                  --  to build secondary dispatch tables; skip also abstract\n+                  --  and eliminated primitives.\n \n-                  else\n-                     if not Is_Predefined_Dispatching_Operation (E)\n-                       and then not Is_Abstract_Subprogram (E)\n-                       and then not Present (Interface_Alias (E))\n-                     then\n-                        pragma Assert\n-                          (UI_To_Int (DT_Position (Prim)) <= Nb_Prim);\n+                  --  Why do we skip imported primitives???\n \n-                        Prim_Table (UI_To_Int (DT_Position (Prim))) := E;\n-                     end if;\n+                  if not Is_Predefined_Dispatching_Operation (Prim)\n+                    and then not Is_Predefined_Dispatching_Operation (E)\n+                    and then not Present (Interface_Alias (Prim))\n+                    and then not Is_Abstract_Subprogram (E)\n+                    and then not Is_Imported (E)\n+                    and then not Is_Eliminated (E)\n+                  then\n+                     pragma Assert\n+                       (UI_To_Int (DT_Position (Prim)) <= Nb_Prim);\n+\n+                     Prim_Table (UI_To_Int (DT_Position (Prim))) := E;\n                   end if;\n \n                   Next_Elmt (Prim_Elmt);\n@@ -6741,7 +6757,11 @@ package body Exp_Disp is\n    begin\n       pragma Assert (not Restriction_Active (No_Dispatching_Calls));\n \n-      if not RTE_Available (RE_Tag) then\n+      --  Do not register in the dispatch table eliminated primitives\n+\n+      if not RTE_Available (RE_Tag)\n+        or else Is_Eliminated (Ultimate_Alias (Prim))\n+      then\n          return L;\n       end if;\n "}, {"sha": "171f7a18e7d1eb5e1eadf1b7ffbbf59ec2b76ba8", "filename": "gcc/ada/fmap.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9df9da7b83a6591d43c5298958dd20db3c6e73/gcc%2Fada%2Ffmap.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9df9da7b83a6591d43c5298958dd20db3c6e73/gcc%2Fada%2Ffmap.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffmap.adb?ref=9e9df9da7b83a6591d43c5298958dd20db3c6e73", "patch": "@@ -23,17 +23,16 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This unit is used by gnatcoll\n-pragma Warnings (Off, \"*is an internal GNAT unit\");\n-pragma Warnings (Off, \"*use * instead\");\n-\n with Opt;    use Opt;\n with Osint;  use Osint;\n with Output; use Output;\n with Table;\n with Types;  use Types;\n \n+pragma Warnings (Off);\n+--  This package is used also by gnatcoll\n with System.OS_Lib; use System.OS_Lib;\n+pragma Warnings (On);\n \n with Unchecked_Conversion;\n "}, {"sha": "66af7cd425d430b90385645a7266a4dda9b3ad06", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9df9da7b83a6591d43c5298958dd20db3c6e73/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9df9da7b83a6591d43c5298958dd20db3c6e73/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=9e9df9da7b83a6591d43c5298958dd20db3c6e73", "patch": "@@ -38,15 +38,14 @@\n --  use the Project Manager. These tools include gnatmake, gnatname, the gnat\n --  driver, gnatclean, gprbuild and gprclean.\n \n---  This unit is used by gnatcoll\n-pragma Warnings (Off, \"*is an internal GNAT unit\");\n-pragma Warnings (Off, \"*use * instead\");\n-\n with Hostparm; use Hostparm;\n with Types;    use Types;\n \n+pragma Warnings (Off);\n+--  This package is used also by gnatcoll\n with System.Strings; use System.Strings;\n with System.WCh_Con; use System.WCh_Con;\n+pragma Warnings (On);\n \n package Opt is\n "}, {"sha": "75995e3fca407a44b8e7d71c67bbfcbe19935535", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9df9da7b83a6591d43c5298958dd20db3c6e73/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9df9da7b83a6591d43c5298958dd20db3c6e73/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=9e9df9da7b83a6591d43c5298958dd20db3c6e73", "patch": "@@ -23,10 +23,6 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This unit is used by gnatcoll\n-pragma Warnings (Off, \"*is an internal GNAT unit\");\n-pragma Warnings (Off, \"*use * instead\");\n-\n with Alloc;\n with Debug;\n with Fmap;     use Fmap;\n@@ -40,7 +36,10 @@ with Targparm; use Targparm;\n \n with Unchecked_Conversion;\n \n+pragma Warnings (Off);\n+--  This package is used also by gnatcoll\n with System.Case_Util; use System.Case_Util;\n+pragma Warnings (On);\n \n with GNAT.HTable;\n "}, {"sha": "4c55a3b5a7cb5a5f5c59a93fbd667396467da049", "filename": "gcc/ada/osint.ads", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9df9da7b83a6591d43c5298958dd20db3c6e73/gcc%2Fada%2Fosint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9df9da7b83a6591d43c5298958dd20db3c6e73/gcc%2Fada%2Fosint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.ads?ref=9e9df9da7b83a6591d43c5298958dd20db3c6e73", "patch": "@@ -26,15 +26,16 @@\n --  This package contains the low level, operating system routines used in the\n --  compiler and binder for command line processing and file input output.\n \n---  This unit is used by gnatcoll\n-pragma Warnings (Off, \"*is an internal GNAT unit\");\n-pragma Warnings (Off, \"*use * instead\");\n-\n with Namet; use Namet;\n with Types; use Types;\n \n with System;                  use System;\n+\n+pragma Warnings (Off);\n+--  This package is used also by gnatcoll\n with System.OS_Lib;           use System.OS_Lib;\n+pragma Warnings (On);\n+\n with System.Storage_Elements;\n \n pragma Elaborate_All (System.OS_Lib);"}, {"sha": "ddc395448d38030929990b45c93b28419573e77b", "filename": "gcc/ada/output.ads", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9df9da7b83a6591d43c5298958dd20db3c6e73/gcc%2Fada%2Foutput.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9df9da7b83a6591d43c5298958dd20db3c6e73/gcc%2Fada%2Foutput.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Foutput.ads?ref=9e9df9da7b83a6591d43c5298958dd20db3c6e73", "patch": "@@ -33,14 +33,13 @@\n --  writing error messages and informational output. It is also used by the\n --  debug source file output routines (see Sprint.Print_Debug_Line).\n \n---  This unit is used by gnatcoll\n-pragma Warnings (Off, \"*is an internal GNAT unit\");\n-pragma Warnings (Off, \"*use * instead\");\n-\n with Hostparm; use Hostparm;\n with Types;    use Types;\n \n+pragma Warnings (Off);\n+--  This package is used also by gnatcoll\n with System.OS_Lib; use System.OS_Lib;\n+pragma Warnings (On);\n \n package Output is\n    pragma Elaborate_Body;"}, {"sha": "d4005b479892b65918ec7127fd109241e8fce26d", "filename": "gcc/ada/scng.adb", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9df9da7b83a6591d43c5298958dd20db3c6e73/gcc%2Fada%2Fscng.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9df9da7b83a6591d43c5298958dd20db3c6e73/gcc%2Fada%2Fscng.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscng.adb?ref=9e9df9da7b83a6591d43c5298958dd20db3c6e73", "patch": "@@ -23,11 +23,6 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This unit is used by gnatcoll\n-pragma Warnings (Off, \"*is an internal GNAT unit\");\n-pragma Warnings (Off, \"*use of this unit is non-portable*\");\n-pragma Warnings (Off, \"*use * instead\");\n-\n with Csets;    use Csets;\n with Err_Vars; use Err_Vars;\n with Hostparm; use Hostparm;\n@@ -42,9 +37,12 @@ with Uintp;    use Uintp;\n with Urealp;   use Urealp;\n with Widechar; use Widechar;\n \n+pragma Warnings (Off);\n+--  This package is used also by gnatcoll\n with System.CRC32;\n with System.UTF_32;  use System.UTF_32;\n with System.WCh_Con; use System.WCh_Con;\n+pragma Warnings (On);\n \n package body Scng is\n "}, {"sha": "aebdcacdd12576ad0964f162873701c7ddff0671", "filename": "gcc/ada/sinput-c.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9df9da7b83a6591d43c5298958dd20db3c6e73/gcc%2Fada%2Fsinput-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9df9da7b83a6591d43c5298958dd20db3c6e73/gcc%2Fada%2Fsinput-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-c.adb?ref=9e9df9da7b83a6591d43c5298958dd20db3c6e73", "patch": "@@ -23,16 +23,15 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This unit is used by gnatcoll\n-pragma Warnings (Off, \"*is an internal GNAT unit\");\n-pragma Warnings (Off, \"*use * instead\");\n-\n with Opt;    use Opt;\n with System; use System;\n \n with Ada.Unchecked_Conversion;\n \n+pragma Warnings (Off);\n+--  This package is used also by gnatcoll\n with System.OS_Lib; use System.OS_Lib;\n+pragma Warnings (On);\n \n package body Sinput.C is\n "}, {"sha": "de7ccaf5d5dd8a8d4532acafe4af612f3a68d441", "filename": "gcc/ada/switch-m.ads", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9df9da7b83a6591d43c5298958dd20db3c6e73/gcc%2Fada%2Fswitch-m.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9df9da7b83a6591d43c5298958dd20db3c6e73/gcc%2Fada%2Fswitch-m.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-m.ads?ref=9e9df9da7b83a6591d43c5298958dd20db3c6e73", "patch": "@@ -29,11 +29,10 @@\n --  switches that are recognized. In addition, package Debug documents\n --  the otherwise undocumented debug switches that are also recognized.\n \n---  This unit is used by gnatcoll\n-pragma Warnings (Off, \"*is an internal GNAT unit\");\n-pragma Warnings (Off, \"*use * instead\");\n-\n+pragma Warnings (Off);\n+--  This package is used also by gnatcoll\n with System.OS_Lib; use System.OS_Lib;\n+pragma Warnings (On);\n \n with Prj.Tree;\n "}, {"sha": "0cb17fed26fbcd7b6fdc6e3d152f4fb87c7a0d32", "filename": "gcc/ada/tree_io.ads", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9df9da7b83a6591d43c5298958dd20db3c6e73/gcc%2Fada%2Ftree_io.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9df9da7b83a6591d43c5298958dd20db3c6e73/gcc%2Fada%2Ftree_io.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftree_io.ads?ref=9e9df9da7b83a6591d43c5298958dd20db3c6e73", "patch": "@@ -34,14 +34,13 @@\n --  create and close routines are elsewhere (in Osint in the compiler, and in\n --  the tree read driver for the tree read interface).\n \n---  This unit is used by gnatcoll\n-pragma Warnings (Off, \"*is an internal GNAT unit\");\n-pragma Warnings (Off, \"*use * instead\");\n+with Types;  use Types;\n+with System; use System;\n \n-with Types; use Types;\n-\n-with System;        use System;\n+pragma Warnings (Off);\n+--  This package is used also by gnatcoll\n with System.OS_Lib; use System.OS_Lib;\n+pragma Warnings (On);\n \n package Tree_IO is\n "}]}