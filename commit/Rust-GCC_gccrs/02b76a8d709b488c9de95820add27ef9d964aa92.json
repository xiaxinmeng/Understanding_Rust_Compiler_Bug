{"sha": "02b76a8d709b488c9de95820add27ef9d964aa92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDJiNzZhOGQ3MDliNDg4YzlkZTk1ODIwYWRkMjdlZjlkOTY0YWE5Mg==", "commit": {"author": {"name": "Ira Rosen", "email": "ira.rosen@linaro.org", "date": "2011-10-24T09:16:53Z"}, "committer": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2011-10-24T09:16:53Z"}, "message": "re PR tree-optimization/50730 (SLP vectorization confused by unrelated DRs)\n\n\n        PR tree-optimization/50730\n        * tree-vect-data-refs.c (vect_analyze_data_refs): Stop basic\n        block analysis if encountered unsupported data-ref.\n\nFrom-SVN: r180367", "tree": {"sha": "0cb2c94dcbc36d14a7444ef23c75dc48f0891eb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0cb2c94dcbc36d14a7444ef23c75dc48f0891eb6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02b76a8d709b488c9de95820add27ef9d964aa92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02b76a8d709b488c9de95820add27ef9d964aa92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02b76a8d709b488c9de95820add27ef9d964aa92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02b76a8d709b488c9de95820add27ef9d964aa92/comments", "author": null, "committer": null, "parents": [{"sha": "a1ee0aafc7f7f3f9dcba3378b951905e19aa1ac7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1ee0aafc7f7f3f9dcba3378b951905e19aa1ac7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1ee0aafc7f7f3f9dcba3378b951905e19aa1ac7"}], "stats": {"total": 88, "additions": 86, "deletions": 2}, "files": [{"sha": "c15c47d24a473fe9756b873d1afff63a0ce90b9f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02b76a8d709b488c9de95820add27ef9d964aa92/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02b76a8d709b488c9de95820add27ef9d964aa92/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=02b76a8d709b488c9de95820add27ef9d964aa92", "patch": "@@ -1,3 +1,9 @@\n+2011-10-24  Ira Rosen  <ira.rosen@linaro.org>\n+\n+\tPR tree-optimization/50730\n+\t* tree-vect-data-refs.c (vect_analyze_data_refs): Stop basic block\n+\tanalysis if encountered unsupported data-ref.\n+\n 2011-10-23  David S. Miller  <davem@davemloft.net>\n \n \t* config/sparc/sparc.c (sparc_option_override): Remove -mv8plus"}, {"sha": "af103980d365f5bbe0cb4bc379204eb53d0e1715", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02b76a8d709b488c9de95820add27ef9d964aa92/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02b76a8d709b488c9de95820add27ef9d964aa92/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=02b76a8d709b488c9de95820add27ef9d964aa92", "patch": "@@ -1,3 +1,10 @@\n+2011-10-24  Ira Rosen  <ira.rosen@linaro.org>\n+\n+\tPR tree-optimization/50730\n+\t* gcc.dg/vect/no-tree-sra-bb-slp-pr50730.c: New test.\n+\t* gcc.dg/vect/vect.exp: Run no-tree-sra-bb-slp* tests with\n+\t-fno-tree-sra and SLP flags.\n+\n 2011-10-23  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/50841"}, {"sha": "90dcd8443349bbba7a0373c67d9f7b2391735965", "filename": "gcc/testsuite/gcc.dg/vect/no-tree-sra-bb-slp-pr50730.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02b76a8d709b488c9de95820add27ef9d964aa92/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-tree-sra-bb-slp-pr50730.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02b76a8d709b488c9de95820add27ef9d964aa92/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-tree-sra-bb-slp-pr50730.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-tree-sra-bb-slp-pr50730.c?ref=02b76a8d709b488c9de95820add27ef9d964aa92", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target vect_float } */\n+\n+typedef __complex__ float Value;\n+typedef struct {\n+  Value a[16 / sizeof (Value)];\n+} A;\n+\n+A sum(A a,A b)\n+{\n+  a.a[0]+=b.a[0];\n+  a.a[1]+=b.a[1];\n+  return a;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"not vectorized: more than one data ref in stmt\" 0 \"slp\" } } */\n+/* { dg-final { cleanup-tree-dump \"slp\" } } */"}, {"sha": "65d74d62823a0d7b2cca50849a477990a8e4aee8", "filename": "gcc/testsuite/gcc.dg/vect/vect.exp", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02b76a8d709b488c9de95820add27ef9d964aa92/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02b76a8d709b488c9de95820add27ef9d964aa92/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp?ref=02b76a8d709b488c9de95820add27ef9d964aa92", "patch": "@@ -269,6 +269,13 @@ lappend DEFAULT_VECTCFLAGS \"-fno-tree-fre\" \"-fno-tree-pre\"\n dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/no-fre-pre*.\\[cS\\]]]  \\\n         \"\" $DEFAULT_VECTCFLAGS\n \n+# -fno-tree-sra\n+set VECT_SLP_CFLAGS $SAVED_VECT_SLP_CFLAGS\n+lappend VECT_SLP_CFLAGS \"-fno-tree-sra\"\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/no-tree-sra-bb-slp-*.\\[cS\\]]]  \\\n+        \"\" $VECT_SLP_CFLAGS\n+\n+\n # Clean up.\n set dg-do-what-default ${save-dg-do-what-default}\n "}, {"sha": "4b6164a095a723ea295dea885e023176f1bb099d", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 49, "deletions": 2, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02b76a8d709b488c9de95820add27ef9d964aa92/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02b76a8d709b488c9de95820add27ef9d964aa92/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=02b76a8d709b488c9de95820add27ef9d964aa92", "patch": "@@ -2524,7 +2524,7 @@ vect_analyze_data_refs (loop_vec_info loop_vinfo,\n   VEC (data_reference_p, heap) *datarefs;\n   struct data_reference *dr;\n   tree scalar_type;\n-  bool res;\n+  bool res, stop_bb_analysis = false;\n \n   if (vect_print_dump_info (REPORT_DETAILS))\n     fprintf (vect_dump, \"=== vect_analyze_data_refs ===\\n\");\n@@ -2579,12 +2579,19 @@ vect_analyze_data_refs (loop_vec_info loop_vinfo,\n         {\n           if (vect_print_dump_info (REPORT_UNVECTORIZED_LOCATIONS))\n \t    fprintf (vect_dump, \"not vectorized: unhandled data-ref \");\n+\n           return false;\n         }\n \n       stmt = DR_STMT (dr);\n       stmt_info = vinfo_for_stmt (stmt);\n \n+      if (stop_bb_analysis)\n+        {\n+          STMT_VINFO_VECTORIZABLE (stmt_info) = false;\n+          continue;\n+        }\n+\n       /* Check that analysis of the data-ref succeeded.  */\n       if (!DR_BASE_ADDRESS (dr) || !DR_OFFSET (dr) || !DR_INIT (dr)\n           || !DR_STEP (dr))\n@@ -2595,6 +2602,13 @@ vect_analyze_data_refs (loop_vec_info loop_vinfo,\n               print_gimple_stmt (vect_dump, stmt, 0, TDF_SLIM);\n             }\n \n+          if (bb_vinfo)\n+            {\n+              STMT_VINFO_VECTORIZABLE (stmt_info) = false;\n+              stop_bb_analysis = true;\n+              continue;\n+            }\n+\n           return false;\n         }\n \n@@ -2603,7 +2617,15 @@ vect_analyze_data_refs (loop_vec_info loop_vinfo,\n           if (vect_print_dump_info (REPORT_UNVECTORIZED_LOCATIONS))\n             fprintf (vect_dump, \"not vectorized: base addr of dr is a \"\n                      \"constant\");\n-          return false;\n+\n+          if (bb_vinfo)\n+            {\n+              STMT_VINFO_VECTORIZABLE (stmt_info) = false;\n+              stop_bb_analysis = true;\n+              continue;\n+            }\n+\n+           return false;\n         }\n \n       if (TREE_THIS_VOLATILE (DR_REF (dr)))\n@@ -2613,6 +2635,14 @@ vect_analyze_data_refs (loop_vec_info loop_vinfo,\n               fprintf (vect_dump, \"not vectorized: volatile type \");\n               print_gimple_stmt (vect_dump, stmt, 0, TDF_SLIM);\n             }\n+\n+          if (bb_vinfo)\n+            {\n+              STMT_VINFO_VECTORIZABLE (stmt_info) = false;\n+              stop_bb_analysis = true;\n+              continue;\n+            }\n+\n           return false;\n         }\n \n@@ -2628,6 +2658,14 @@ vect_analyze_data_refs (loop_vec_info loop_vinfo,\n                        \"exception \");\n               print_gimple_stmt (vect_dump, stmt, 0, TDF_SLIM);\n             }\n+\n+          if (bb_vinfo)\n+            {\n+              STMT_VINFO_VECTORIZABLE (stmt_info) = false;\n+              stop_bb_analysis = true;\n+              continue;\n+            }\n+\n           return false;\n         }\n \n@@ -2745,6 +2783,14 @@ vect_analyze_data_refs (loop_vec_info loop_vinfo,\n                        \"not vectorized: more than one data ref in stmt: \");\n               print_gimple_stmt (vect_dump, stmt, 0, TDF_SLIM);\n             }\n+\n+          if (bb_vinfo)\n+            {\n+              STMT_VINFO_VECTORIZABLE (stmt_info) = false;\n+              stop_bb_analysis = true;\n+              continue;\n+            }\n+\n           return false;\n         }\n \n@@ -2769,6 +2815,7 @@ vect_analyze_data_refs (loop_vec_info loop_vinfo,\n             {\n               /* Mark the statement as not vectorizable.  */\n               STMT_VINFO_VECTORIZABLE (stmt_info) = false;\n+              stop_bb_analysis = true;\n               continue;\n             }\n           else"}]}