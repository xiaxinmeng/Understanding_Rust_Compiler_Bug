{"sha": "b076a285a49898add7a3549c16b1bba2bb875060", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjA3NmEyODVhNDk4OThhZGQ3YTM1NDljMTZiMWJiYTJiYjg3NTA2MA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-08T21:12:58Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-08T21:12:58Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1183", "tree": {"sha": "21e6490717a162645e050e15baf822932c9f48e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21e6490717a162645e050e15baf822932c9f48e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b076a285a49898add7a3549c16b1bba2bb875060", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b076a285a49898add7a3549c16b1bba2bb875060", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b076a285a49898add7a3549c16b1bba2bb875060", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b076a285a49898add7a3549c16b1bba2bb875060/comments", "author": null, "committer": null, "parents": [{"sha": "6196c52839cafe3db7d503401283abf379eb2f88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6196c52839cafe3db7d503401283abf379eb2f88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6196c52839cafe3db7d503401283abf379eb2f88"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "c7c91833786a29c952003223656adc8f9b5cebb3", "filename": "gcc/assert.h", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b076a285a49898add7a3549c16b1bba2bb875060/gcc%2Fassert.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b076a285a49898add7a3549c16b1bba2bb875060/gcc%2Fassert.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fassert.h?ref=b076a285a49898add7a3549c16b1bba2bb875060", "patch": "@@ -18,10 +18,16 @@\n \n #else\n \n-#ifdef __STDC__\n+#if defined(__STDC__) || defined (__cplusplus)\n \n /* Defined in libgcc.a */\n+#ifdef __cplusplus\n+extern \"C\" {\n extern void __eprintf (const char *, const char *, int, const char *);\n+}\n+#else\n+extern void __eprintf (const char *, const char *, int, const char *);\n+#endif\n \n #define assert(expression)  \\\n   ((void) ((expression) ? 0 : __assert (#expression, __FILE__, __LINE__)))\n@@ -30,7 +36,7 @@ extern void __eprintf (const char *, const char *, int, const char *);\n   (__eprintf (\"%s:%u: failed assertion `%s'\\n\",\t\t\\\n \t      file, line, expression), 0)\n \n-#else /* no __STDC__; i.e. -traditional.  */\n+#else /* no __STDC__ and not C++; i.e. -traditional.  */\n \n extern void __eprintf (); /* Defined in libgcc.a */\n \n@@ -41,6 +47,6 @@ extern void __eprintf (); /* Defined in libgcc.a */\n   (__eprintf (\"%s:%u: failed assertion `%s'\\n\",\t\t\\\n \t      file, lineno, \"expression\"), 0)\n \n-#endif /* no __STDC__; i.e. -traditional.  */\n+#endif /* no __STDC__ and not C++; i.e. -traditional.  */\n #endif /* no __GNU__; i.e., /bin/cc.  */\n #endif"}]}