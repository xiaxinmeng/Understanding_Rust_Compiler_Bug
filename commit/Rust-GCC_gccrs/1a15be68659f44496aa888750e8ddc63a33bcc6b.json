{"sha": "1a15be68659f44496aa888750e8ddc63a33bcc6b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWExNWJlNjg2NTlmNDQ0OTZhYTg4ODc1MGU4ZGRjNjNhMzNiY2M2Yg==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2017-01-14T06:16:23Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2017-01-14T06:16:23Z"}, "message": "re PR tree-optimization/33562 (aggregate DSE disabled)\n\n\tPR tree-optimization/33562\n\tPR tree-optimization/61912\n\tPR tree-optimization/77485\n\t* tree-ssa-dse.c (delete_dead_call): Accept gsi rather than\n\ta statement.\n\t(delete_dead_assignment): Likewise.\n\t(dse_dom_walker::dse_optimize_stmt): Pass in the gsi rather than\n\tstatement to delete_dead_call and delete_dead_assignment.\n\nFrom-SVN: r244461", "tree": {"sha": "cd388f346ea42ba4b840110e734845abec5f4b89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd388f346ea42ba4b840110e734845abec5f4b89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a15be68659f44496aa888750e8ddc63a33bcc6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a15be68659f44496aa888750e8ddc63a33bcc6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a15be68659f44496aa888750e8ddc63a33bcc6b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a15be68659f44496aa888750e8ddc63a33bcc6b/comments", "author": null, "committer": null, "parents": [{"sha": "a2bd02aecff5ebb73ff3ab6db5a1db8b375205ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2bd02aecff5ebb73ff3ab6db5a1db8b375205ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2bd02aecff5ebb73ff3ab6db5a1db8b375205ac"}], "stats": {"total": 29, "additions": 20, "deletions": 9}, "files": [{"sha": "d07b1f5ef42a0a4bc8159691c4690b83a2956bf6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a15be68659f44496aa888750e8ddc63a33bcc6b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a15be68659f44496aa888750e8ddc63a33bcc6b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1a15be68659f44496aa888750e8ddc63a33bcc6b", "patch": "@@ -1,3 +1,14 @@\n+2017-01-13  Jeff Law  <law@redhat.com>\n+\n+\tPR tree-optimization/33562\n+\tPR tree-optimization/61912\n+\tPR tree-optimization/77485\n+\t* tree-ssa-dse.c (delete_dead_call): Accept gsi rather than\n+\ta statement.\n+\t(delete_dead_assignment): Likewise.\n+\t(dse_dom_walker::dse_optimize_stmt): Pass in the gsi rather than\n+\tstatement to delete_dead_call and delete_dead_assignment.\n+\n 2017-01-13  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR c/78304"}, {"sha": "3ed1596c1f0ac24256b60658a75ecfb630dec6a6", "filename": "gcc/tree-ssa-dse.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a15be68659f44496aa888750e8ddc63a33bcc6b/gcc%2Ftree-ssa-dse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a15be68659f44496aa888750e8ddc63a33bcc6b/gcc%2Ftree-ssa-dse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dse.c?ref=1a15be68659f44496aa888750e8ddc63a33bcc6b", "patch": "@@ -602,8 +602,9 @@ class dse_dom_walker : public dom_walker\n \n /* Delete a dead call STMT, which is mem* call of some kind.  */\n static void\n-delete_dead_call (gimple *stmt)\n+delete_dead_call (gimple_stmt_iterator *gsi)\n {\n+  gimple *stmt = gsi_stmt (*gsi);\n   if (dump_file && (dump_flags & TDF_DETAILS))\n     {\n       fprintf (dump_file, \"  Deleted dead call: \");\n@@ -612,13 +613,12 @@ delete_dead_call (gimple *stmt)\n     }\n \n   tree lhs = gimple_call_lhs (stmt);\n-  gimple_stmt_iterator gsi = gsi_for_stmt (stmt);\n   if (lhs)\n     {\n       tree ptr = gimple_call_arg (stmt, 0);\n       gimple *new_stmt = gimple_build_assign (lhs, ptr);\n       unlink_stmt_vdef (stmt);\n-      if (gsi_replace (&gsi, new_stmt, true))\n+      if (gsi_replace (gsi, new_stmt, true))\n         bitmap_set_bit (need_eh_cleanup, gimple_bb (stmt)->index);\n     }\n   else\n@@ -627,7 +627,7 @@ delete_dead_call (gimple *stmt)\n       unlink_stmt_vdef (stmt);\n \n       /* Remove the dead store.  */\n-      if (gsi_remove (&gsi, true))\n+      if (gsi_remove (gsi, true))\n \tbitmap_set_bit (need_eh_cleanup, gimple_bb (stmt)->index);\n       release_defs (stmt);\n     }\n@@ -636,8 +636,9 @@ delete_dead_call (gimple *stmt)\n /* Delete a dead store STMT, which is a gimple assignment. */\n \n static void\n-delete_dead_assignment (gimple *stmt)\n+delete_dead_assignment (gimple_stmt_iterator *gsi)\n {\n+  gimple *stmt = gsi_stmt (*gsi);\n   if (dump_file && (dump_flags & TDF_DETAILS))\n     {\n       fprintf (dump_file, \"  Deleted dead store: \");\n@@ -649,9 +650,8 @@ delete_dead_assignment (gimple *stmt)\n   unlink_stmt_vdef (stmt);\n \n   /* Remove the dead store.  */\n-  gimple_stmt_iterator gsi = gsi_for_stmt (stmt);\n   basic_block bb = gimple_bb (stmt);\n-  if (gsi_remove (&gsi, true))\n+  if (gsi_remove (gsi, true))\n     bitmap_set_bit (need_eh_cleanup, bb->index);\n \n   /* And release any SSA_NAMEs set in this statement back to the\n@@ -717,7 +717,7 @@ dse_dom_walker::dse_optimize_stmt (gimple_stmt_iterator *gsi)\n \t\t}\n \n \t      if (store_status == DSE_STORE_DEAD)\n-\t\tdelete_dead_call (stmt);\n+\t\tdelete_dead_call (gsi);\n \t      return;\n \t    }\n \n@@ -760,7 +760,7 @@ dse_dom_walker::dse_optimize_stmt (gimple_stmt_iterator *gsi)\n \t  && !gimple_clobber_p (use_stmt))\n \treturn;\n \n-      delete_dead_assignment (stmt);\n+      delete_dead_assignment (gsi);\n     }\n }\n "}]}