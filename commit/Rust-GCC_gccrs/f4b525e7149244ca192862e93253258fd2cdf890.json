{"sha": "f4b525e7149244ca192862e93253258fd2cdf890", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRiNTI1ZTcxNDkyNDRjYTE5Mjg2MmU5MzI1MzI1OGZkMmNkZjg5MA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-09-18T21:53:44Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-09-18T21:53:44Z"}, "message": "compiler: Correctly handle identical unnamed structs with methods.\n\nFrom-SVN: r202723", "tree": {"sha": "7d70c1bcdccfab6efcf01ddcba289deec3251b38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d70c1bcdccfab6efcf01ddcba289deec3251b38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4b525e7149244ca192862e93253258fd2cdf890", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4b525e7149244ca192862e93253258fd2cdf890", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4b525e7149244ca192862e93253258fd2cdf890", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4b525e7149244ca192862e93253258fd2cdf890/comments", "author": null, "committer": null, "parents": [{"sha": "e3816ac91f7210c5fd11fe6c9a53048075332886", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3816ac91f7210c5fd11fe6c9a53048075332886", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3816ac91f7210c5fd11fe6c9a53048075332886"}], "stats": {"total": 44, "additions": 33, "deletions": 11}, "files": [{"sha": "0e8f479db706e23c09e53e57e3d6db7ce2cbe6f4", "filename": "gcc/go/gofrontend/types.cc", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4b525e7149244ca192862e93253258fd2cdf890/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4b525e7149244ca192862e93253258fd2cdf890/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.cc?ref=f4b525e7149244ca192862e93253258fd2cdf890", "patch": "@@ -4229,6 +4229,11 @@ Struct_field::is_embedded_builtin(Gogo* gogo) const\n \n Struct_type::Identical_structs Struct_type::identical_structs;\n \n+// A hash table used to merge method sets for identical unnamed\n+// structs.\n+\n+Struct_type::Struct_method_tables Struct_type::struct_method_tables;\n+\n // Traversal.\n \n int\n@@ -4693,9 +4698,24 @@ Struct_type::interface_method_table(Gogo* gogo,\n \t\t\t\t    const Interface_type* interface,\n \t\t\t\t    bool is_pointer)\n {\n+  std::pair<Struct_type*, Struct_type::Struct_method_table_pair*>\n+    val(this, NULL);\n+  std::pair<Struct_type::Struct_method_tables::iterator, bool> ins =\n+    Struct_type::struct_method_tables.insert(val);\n+\n+  Struct_method_table_pair* smtp;\n+  if (!ins.second)\n+    smtp = ins.first->second;\n+  else\n+    {\n+      smtp = new Struct_method_table_pair();\n+      smtp->first = NULL;\n+      smtp->second = NULL;\n+      ins.first->second = smtp;\n+    }\n+\n   return Type::interface_method_table(gogo, this, interface, is_pointer,\n-\t\t\t\t      &this->interface_method_tables_,\n-\t\t\t\t      &this->pointer_interface_method_tables_);\n+\t\t\t\t      &smtp->first, &smtp->second);\n }\n \n // Convert struct fields to the backend representation.  This is not"}, {"sha": "d8a3080f58686c474b14bb63d67af9afe93fbf8e", "filename": "gcc/go/gofrontend/types.h", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4b525e7149244ca192862e93253258fd2cdf890/gcc%2Fgo%2Fgofrontend%2Ftypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4b525e7149244ca192862e93253258fd2cdf890/gcc%2Fgo%2Fgofrontend%2Ftypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.h?ref=f4b525e7149244ca192862e93253258fd2cdf890", "patch": "@@ -2041,8 +2041,7 @@ class Struct_type : public Type\n  public:\n   Struct_type(Struct_field_list* fields, Location location)\n     : Type(TYPE_STRUCT),\n-      fields_(fields), location_(location), all_methods_(NULL),\n-      interface_method_tables_(NULL), pointer_interface_method_tables_(NULL)\n+      fields_(fields), location_(location), all_methods_(NULL)\n   { }\n \n   // Return the field NAME.  This only looks at local fields, not at\n@@ -2200,6 +2199,16 @@ class Struct_type : public Type\n \n   static Identical_structs identical_structs;\n \n+  // Used to manage method tables for identical unnamed structs.\n+  typedef std::pair<Interface_method_tables*, Interface_method_tables*>\n+    Struct_method_table_pair;\n+\n+  typedef Unordered_map_hash(Struct_type*, Struct_method_table_pair*,\n+\t\t\t     Type_hash_identical, Type_identical)\n+    Struct_method_tables;\n+\n+  static Struct_method_tables struct_method_tables;\n+\n   // Used to avoid infinite loops in field_reference_depth.\n   struct Saw_named_type\n   {\n@@ -2218,13 +2227,6 @@ class Struct_type : public Type\n   Location location_;\n   // If this struct is unnamed, a list of methods.\n   Methods* all_methods_;\n-  // A mapping from interfaces to the associated interface method\n-  // tables for this type.  Only used if this struct is unnamed.\n-  Interface_method_tables* interface_method_tables_;\n-  // A mapping from interfaces to the associated interface method\n-  // tables for pointers to this type.  Only used if this struct is\n-  // unnamed.\n-  Interface_method_tables* pointer_interface_method_tables_;\n };\n \n // The type of an array."}]}