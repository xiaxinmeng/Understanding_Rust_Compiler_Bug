{"sha": "158cdc7bd97d7ccca5bc8adaaf80fe51eacdc038", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU4Y2RjN2JkOTdkN2NjY2E1YmM4YWRhYWY4MGZlNTFlYWNkYzAzOA==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-05-04T19:46:37Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-05-04T19:50:58Z"}, "message": "PR middle-end/100307 - spurious -Wplacement-new with negative pointer offset\n\ngcc/ChangeLog:\n\n\tPR middle-end/100307\n\t* builtins.c (compute_objsize_r): Clear base0 for pointers.\n\ngcc/testsuite/ChangeLog:\n\n\tPR middle-end/100307\n\t* g++.dg/warn/Wplacement-new-size-9.C: New test.\n\t* gcc.dg/tree-ssa/builtin-sprintf-warn-26.c: New test.", "tree": {"sha": "a47616b5de90c7a93c87bd887bad1e1f301e8679", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a47616b5de90c7a93c87bd887bad1e1f301e8679"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/158cdc7bd97d7ccca5bc8adaaf80fe51eacdc038", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/158cdc7bd97d7ccca5bc8adaaf80fe51eacdc038", "html_url": "https://github.com/Rust-GCC/gccrs/commit/158cdc7bd97d7ccca5bc8adaaf80fe51eacdc038", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/158cdc7bd97d7ccca5bc8adaaf80fe51eacdc038/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78624756f7cfa3870c4b8c4c383bca1c9cbb6918", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78624756f7cfa3870c4b8c4c383bca1c9cbb6918", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78624756f7cfa3870c4b8c4c383bca1c9cbb6918"}], "stats": {"total": 81, "additions": 80, "deletions": 1}, "files": [{"sha": "6f67eb7eeb5588e99d1a149ccc8e5b8cf6e767a3", "filename": "gcc/builtins.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158cdc7bd97d7ccca5bc8adaaf80fe51eacdc038/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158cdc7bd97d7ccca5bc8adaaf80fe51eacdc038/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=158cdc7bd97d7ccca5bc8adaaf80fe51eacdc038", "patch": "@@ -5447,8 +5447,10 @@ compute_objsize_r (tree ptr, int ostype, access_ref *pref,\n       if (!addr && POINTER_TYPE_P (TREE_TYPE (ptr)))\n \t{\n \t  /* Set the maximum size if the reference is to the pointer\n-\t     itself (as opposed to what it points to).  */\n+\t     itself (as opposed to what it points to), and clear\n+\t     BASE0 since the offset isn't necessarily zero-based.  */\n \t  pref->set_max_size_range ();\n+\t  pref->base0 = false;\n \t  return true;\n \t}\n "}, {"sha": "a6b5870be64514c720c5c25c4a79f7867a721cef", "filename": "gcc/testsuite/g++.dg/warn/Wplacement-new-size-9.C", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158cdc7bd97d7ccca5bc8adaaf80fe51eacdc038/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWplacement-new-size-9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158cdc7bd97d7ccca5bc8adaaf80fe51eacdc038/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWplacement-new-size-9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWplacement-new-size-9.C?ref=158cdc7bd97d7ccca5bc8adaaf80fe51eacdc038", "patch": "@@ -0,0 +1,39 @@\n+/* PR middle-end/100307 - spurious -Wplacement-new with negative pointer\n+   offset\n+   { dg-do compile }\n+   { dg-options \"-O0 -Wall\" } */\n+\n+void* operator new (__SIZE_TYPE__, void *p) { return p; }\n+void* operator new[] (__SIZE_TYPE__, void *p) { return p; }\n+\n+static char a[2];\n+\n+void* nowarn_scalar ()\n+{\n+  char* p = a + 1;\n+  char *q = new (p - 1) char ();    // { dg-bogus \"-Wplacement-new\" }\n+  return q;\n+}\n+\n+\n+void* nowarn_array ()\n+{\n+  char* p = a + 1;\n+  char *q = new (p - 1) char[2];    // { dg-bogus \"-Wplacement-new\" }\n+  return q;\n+}\n+\n+void* warn_scalar ()\n+{\n+  char* p = a + 1;\n+  char *q = new (p - 2) char ();    // { dg-warning \"-Wplacement-new\" \"pr100325\" { xfail *-*-* } }\n+  return q;\n+}\n+\n+\n+void* warn_array ()\n+{\n+  char* p = a + 1;\n+  char *q = new (p - 1) char[2];    // { dg-warning \"-Wplacement-new\" \"pr100325\" { xfail *-*-* } }\n+  return q;\n+}"}, {"sha": "16a551d9c8da00ab3ce83af6417fa5146dab8a5c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/builtin-sprintf-warn-26.c", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158cdc7bd97d7ccca5bc8adaaf80fe51eacdc038/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf-warn-26.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158cdc7bd97d7ccca5bc8adaaf80fe51eacdc038/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf-warn-26.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf-warn-26.c?ref=158cdc7bd97d7ccca5bc8adaaf80fe51eacdc038", "patch": "@@ -0,0 +1,38 @@\n+/* PR middle-end/100307 - spurious -Wplacement-new with negative pointer\n+   offset\n+   { dg-do compile }\n+   { dg-options \"-O0 -Wall\" } */\n+\n+extern int sprintf (char*, const char*, ...);\n+\n+char a[4];\n+\n+void nowarn_1m1 ()\n+{\n+  char *p = a + 1;\n+  sprintf (p - 1, \"%i\", 123);   // { dg-bogus \"-Wformat-overflow\" }\n+}\n+\n+void nowarn_4m3 ()\n+{\n+  char *p = a + 4;\n+  sprintf (p - 3, \"%i\", 12);    // { dg-bogus \"-Wformat-overflow\" }\n+}\n+\n+void warn_2m1 ()\n+{\n+  char *p = a + 2;\n+  sprintf (p - 1, \"%i\", 123);   // { dg-warning \"-Wformat-overflow\" \"pr100325\" { xfail *-*-* } }\n+}\n+\n+void warn_3m1 ()\n+{\n+  char *p = a + 3;\n+  sprintf (p - 1, \"%i\", 12);    // { dg-warning \"-Wformat-overflow\" \"pr100325\" { xfail *-*-* } }\n+}\n+\n+void warn_4m1 ()\n+{\n+  char *p = a + 4;\n+  sprintf (p - 1, \"%i\", 1);     // { dg-warning \"-Wformat-overflow\" \"pr100325\" { xfail *-*-* } }\n+}"}]}