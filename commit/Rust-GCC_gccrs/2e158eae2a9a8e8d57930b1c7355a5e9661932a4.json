{"sha": "2e158eae2a9a8e8d57930b1c7355a5e9661932a4", "node_id": "C_kwDOANBUbNoAKDJlMTU4ZWFlMmE5YThlOGQ1NzkzMGIxYzczNTVhNWU5NjYxOTMyYTQ", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-19T15:06:41Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-20T19:39:47Z"}, "message": "Add op[12]_range for UNORDERED_LT entries in range-op.\n\ngcc/ChangeLog:\n\n\t* range-op-float.cc (foperator_unordered_lt::op1_range): New.\n\t(foperator_unordered_lt::op2_range): New.", "tree": {"sha": "40735b119c79170e0e12cd095755f8907e670bf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40735b119c79170e0e12cd095755f8907e670bf1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e158eae2a9a8e8d57930b1c7355a5e9661932a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e158eae2a9a8e8d57930b1c7355a5e9661932a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e158eae2a9a8e8d57930b1c7355a5e9661932a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e158eae2a9a8e8d57930b1c7355a5e9661932a4/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecaa9ca6a8bce7d3aec8b7486f5252f82735bdb0"}], "stats": {"total": 64, "additions": 64, "deletions": 0}, "files": [{"sha": "8777bc70d71251ef2431dfb678d51f7105034454", "filename": "gcc/range-op-float.cc", "status": "modified", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e158eae2a9a8e8d57930b1c7355a5e9661932a4/gcc%2Frange-op-float.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e158eae2a9a8e8d57930b1c7355a5e9661932a4/gcc%2Frange-op-float.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frange-op-float.cc?ref=2e158eae2a9a8e8d57930b1c7355a5e9661932a4", "patch": "@@ -1280,6 +1280,8 @@ foperator_abs::op1_range (frange &r, tree type,\n class foperator_unordered_lt : public range_operator_float\n {\n   using range_operator_float::fold_range;\n+  using range_operator_float::op1_range;\n+  using range_operator_float::op2_range;\n public:\n   bool fold_range (irange &r, tree type,\n \t\t   const frange &op1, const frange &op2,\n@@ -1302,8 +1304,70 @@ class foperator_unordered_lt : public range_operator_float\n \treturn true;\n       }\n   }\n+  bool op1_range (frange &r, tree type,\n+\t\t  const irange &lhs,\n+\t\t  const frange &op2,\n+\t\t  relation_trio trio) const final override;\n+  bool op2_range (frange &r, tree type,\n+\t\t  const irange &lhs,\n+\t\t  const frange &op1,\n+\t\t  relation_trio trio) const final override;\n } fop_unordered_lt;\n \n+bool\n+foperator_unordered_lt::op1_range (frange &r, tree type,\n+\t\t\t\t   const irange &lhs,\n+\t\t\t\t   const frange &op2,\n+\t\t\t\t   relation_trio) const\n+{\n+  switch (get_bool_state (r, lhs, type))\n+    {\n+    case BRS_TRUE:\n+      build_lt (r, type, op2);\n+      break;\n+\n+    case BRS_FALSE:\n+      // A false UNORDERED_LT means both operands are !NAN, so it's\n+      // impossible for op2 to be a NAN.\n+      if (op2.known_isnan ())\n+\tr.set_undefined ();\n+      else if (build_ge (r, type, op2))\n+\tr.clear_nan ();\n+      break;\n+\n+    default:\n+      break;\n+    }\n+  return true;\n+}\n+\n+bool\n+foperator_unordered_lt::op2_range (frange &r, tree type,\n+\t\t\t\t   const irange &lhs,\n+\t\t\t\t   const frange &op1,\n+\t\t\t\t   relation_trio) const\n+{\n+  switch (get_bool_state (r, lhs, type))\n+    {\n+    case BRS_TRUE:\n+      build_gt (r, type, op1);\n+      break;\n+\n+    case BRS_FALSE:\n+      // A false UNORDERED_LT means both operands are !NAN, so it's\n+      // impossible for op1 to be a NAN.\n+      if (op1.known_isnan ())\n+\tr.set_undefined ();\n+      else if (build_le (r, type, op1))\n+\tr.clear_nan ();\n+      break;\n+\n+    default:\n+      break;\n+    }\n+  return true;\n+}\n+\n class foperator_unordered_le : public range_operator_float\n {\n   using range_operator_float::fold_range;"}]}