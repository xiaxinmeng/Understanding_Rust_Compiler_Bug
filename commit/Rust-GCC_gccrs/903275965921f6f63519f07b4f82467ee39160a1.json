{"sha": "903275965921f6f63519f07b4f82467ee39160a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTAzMjc1OTY1OTIxZjZmNjM1MTlmMDdiNGY4MjQ2N2VlMzkxNjBhMQ==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-08-11T20:08:10Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-22T12:11:22Z"}, "message": "[Ada] Reduce scope of local variables for detecting extra WITH clauses\n\ngcc/ada/\n\n\t* sem_warn.adb (Check_Unused_Withs): Move local variables from\n\tto a nested procedure; Lunit is passed as a parameter to\n\tCheck_System_Aux and its type is refined from Node_Id to\n\tEntity_Id; Cnode is now a constant.", "tree": {"sha": "4a05260fb5a9e052d00a1535604e7ec3832042d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a05260fb5a9e052d00a1535604e7ec3832042d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/903275965921f6f63519f07b4f82467ee39160a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/903275965921f6f63519f07b4f82467ee39160a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/903275965921f6f63519f07b4f82467ee39160a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/903275965921f6f63519f07b4f82467ee39160a1/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61d832dee4e62fce2376138f8ab3a05c069237b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61d832dee4e62fce2376138f8ab3a05c069237b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61d832dee4e62fce2376138f8ab3a05c069237b0"}], "stats": {"total": 22, "additions": 12, "deletions": 10}, "files": [{"sha": "d1acf2f23127829dda6f27422fbf511298ba0b56", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/903275965921f6f63519f07b4f82467ee39160a1/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/903275965921f6f63519f07b4f82467ee39160a1/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=903275965921f6f63519f07b4f82467ee39160a1", "patch": "@@ -2254,10 +2254,6 @@ package body Sem_Warn is\n    ------------------------\n \n    procedure Check_Unused_Withs (Spec_Unit : Unit_Number_Type := No_Unit) is\n-      Cnode : Node_Id;\n-      Item  : Node_Id;\n-      Lunit : Node_Id;\n-      Ent   : Entity_Id;\n \n       Munite : constant Entity_Id := Cunit_Entity (Main_Unit);\n       --  This is needed for checking the special renaming case\n@@ -2270,16 +2266,17 @@ package body Sem_Warn is\n       --------------------\n \n       procedure Check_One_Unit (Unit : Unit_Number_Type) is\n+         Cnode : constant Node_Id := Cunit (Unit);\n+\n          Is_Visible_Renaming : Boolean := False;\n-         Pack                : Entity_Id;\n \n          procedure Check_Inner_Package (Pack : Entity_Id);\n          --  Pack is a package local to a unit in a with_clause. Both the unit\n          --  and Pack are referenced. If none of the entities in Pack are\n          --  referenced, then the only occurrence of Pack is in a USE clause\n          --  or a pragma, and a warning is worthwhile as well.\n \n-         function Check_System_Aux return Boolean;\n+         function Check_System_Aux (Lunit : Entity_Id) return Boolean;\n          --  Before giving a warning on a with_clause for System, check whether\n          --  a system extension is present.\n \n@@ -2358,7 +2355,7 @@ package body Sem_Warn is\n          -- Check_System_Aux --\n          ----------------------\n \n-         function Check_System_Aux return Boolean is\n+         function Check_System_Aux (Lunit : Entity_Id) return Boolean is\n             Ent : Entity_Id;\n \n          begin\n@@ -2453,11 +2450,16 @@ package body Sem_Warn is\n             return False;\n          end Has_Visible_Entities;\n \n+         --  Local variables\n+\n+         Ent   : Entity_Id;\n+         Item  : Node_Id;\n+         Lunit : Entity_Id;\n+         Pack  : Entity_Id;\n+\n       --  Start of processing for Check_One_Unit\n \n       begin\n-         Cnode := Cunit (Unit);\n-\n          --  Only do check in units that are part of the extended main unit.\n          --  This is actually a necessary restriction, because in the case of\n          --  subprogram acting as its own specification, there can be with's in\n@@ -2576,7 +2578,7 @@ package body Sem_Warn is\n                            if Unit = Spec_Unit then\n                               Set_No_Entities_Ref_In_Spec (Item);\n \n-                           elsif Check_System_Aux then\n+                           elsif Check_System_Aux (Lunit) then\n                               null;\n \n                            --  Else the warning may be needed"}]}