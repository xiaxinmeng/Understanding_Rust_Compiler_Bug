{"sha": "743460ea821f749dd56e31a9925d33ae3240566a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQzNDYwZWE4MjFmNzQ5ZGQ1NmUzMWE5OTI1ZDMzYWUzMjQwNTY2YQ==", "commit": {"author": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2009-05-07T21:42:22Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2009-05-07T21:42:22Z"}, "message": "re PR libfortran/22423 (Warnings when building libgfortran)\n\n\tPR fortran/22423\n\n\t* io/transfer.c (read_block_direct): Avoid warning.\n\t* runtime/string.c (compare0): Avoid warning.\n\nFrom-SVN: r147254", "tree": {"sha": "1a4bd302a8099d71d2fea0822a85d6d1fb4356c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a4bd302a8099d71d2fea0822a85d6d1fb4356c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/743460ea821f749dd56e31a9925d33ae3240566a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/743460ea821f749dd56e31a9925d33ae3240566a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/743460ea821f749dd56e31a9925d33ae3240566a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/743460ea821f749dd56e31a9925d33ae3240566a/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45b9b2e927e2f72760f040eb1054a779b17cea63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45b9b2e927e2f72760f040eb1054a779b17cea63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45b9b2e927e2f72760f040eb1054a779b17cea63"}], "stats": {"total": 103, "additions": 56, "deletions": 47}, "files": [{"sha": "383527990dd345159a4f5dc1276d7fd3c2a40c87", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 51, "deletions": 45, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/743460ea821f749dd56e31a9925d33ae3240566a/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/743460ea821f749dd56e31a9925d33ae3240566a/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=743460ea821f749dd56e31a9925d33ae3240566a", "patch": "@@ -1,3 +1,9 @@\n+2009-05-07  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/22423\n+\t* io/transfer.c (read_block_direct): Avoid warning.\n+\t* runtime/string.c (compare0): Avoid warning.\n+\n 2009-04-30  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \tPR libfortran/39667\n@@ -32,25 +38,25 @@\n \n 2009-04-15 Danny Smith  <dannysmith@clear.net.nz>\n \n-       * io/write.c (itoa) : Rename back to gfc_itoa.\n-       (write_i): Adjust call to write_decimal.\n-       (write_integer):  Use gfc_itoa.\n+\t* io/write.c (itoa) : Rename back to gfc_itoa.\n+\t(write_i): Adjust call to write_decimal.\n+\t(write_integer):  Use gfc_itoa.\n \n 2009-04-10  Janne Blomqvist  <jb@gcc.gnu.org>\n \n-        * io/io.h (move_pos_offset): Remove prototype.\n-        * io/transfer.c (formatted_transfer_scalar_read): Use sseek\n-        instead of move_pos_offset.\n-        * io/unix.c (move_pos_offset): Remove.\n+\t* io/io.h (move_pos_offset): Remove prototype.\n+\t* io/transfer.c (formatted_transfer_scalar_read): Use sseek\n+\tinstead of move_pos_offset.\n+\t* io/unix.c (move_pos_offset): Remove.\n \n 2009-04-10  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \tPR libfortran/39665 libfortran/39702 libfortran/39709\n \t* io/io.h (st_parameter_dt): Revert aligned attribute from u.p.value.\n-        * io/list_read.c (read_complex): Read directly into user pointer.\n-        (read_real): Likewise.\n-        (list_formatted_read_scalar): Update read_complex and read_real calls.\n-        (nml_read_obj): Read directly into user pointer.\n+\t* io/list_read.c (read_complex): Read directly into user pointer.\n+\t(read_real): Likewise.\n+\t(list_formatted_read_scalar): Update read_complex and read_real calls.\n+\t(nml_read_obj): Read directly into user pointer.\n \n 2009-04-09  Janne Blomqvist  <jb@gcc.gnu.org>\n \n@@ -686,43 +692,43 @@\n \n 2009-04-08  Janne Blomqvist  <jb@gcc.gnu.org>\n \n-        * io/open.c (already_open): Test for POSIX close return value.\n-        * io/unit.c (close_unit_1): Likewise.\n-        * io/unix.c (raw_close): Return 0 for success for preconnected units.\n+\t* io/open.c (already_open): Test for POSIX close return value.\n+\t* io/unit.c (close_unit_1): Likewise.\n+\t* io/unix.c (raw_close): Return 0 for success for preconnected units.\n \n 2009-04-08  Janne Blomqvist  <jb@gcc.gnu.org>\n \n-        * runtime/string.c (compare0): Use gfc_charlen_type.\n-        * runtime/error.c (gfc_itoa): Move to io/write.c\n-        (xtoa): Rename to gfc_xtoa.\n-        * runtime/backtrace.c (show_backtrace): Call gfc_xtoa.\n-        * intrinsics/cshift0.c (cshift0): Use index_type for shift arg.\n-        * intrinsics/date_and_time.c (date_and_time): Use index_type.\n-        (itime_i4): Likewise.\n-        (itime_i8): Likewise.\n-        (idate_i4): Likewise.\n-        (idate_i8): Likewise.\n-        (gmtime_i4): Likewise.\n-        (gmtime_i8): Likewise.\n-        (ltime_i4): Likewise.\n-        (ltime_i8): Likewise.\n-        * libgfortran.h (gfc_itoa): Remove prototype.\n-        (xtoa): Rename prototype to gfc_xtoa.\n-        * io/list_read.c (nml_read_obj): Use size_t for string length.\n-        * io/transfer.c (read_block_direct): Change nbytes arg from\n-        pointer to value.\n-        (unformatted_read): Minor cleanup, call read_block_directly properly.\n-        (skip_record): Use ssize_t.\n-        (next_record_w_unf): Avoid stell() call by calling sseek with SEEK_CUR.\n-        (iolength_transfer): Make sure to multiply before cast.\n-        * io/intrinsics.c (fgetc): Remove unnecessary variable.\n-        * io/format.c (format_hash): Use gfc_charlen_type.\n-        * io/write.c (itoa): Move from runtime/error.c:gfc_itoa, rename,\n-        make static.\n-        (write_i): Call with pointer to itoa.\n-        (write_z): Call with pointer to gfc_xtoa.\n-        (write_integer): Pointer to itoa.\n-        (nml_write_obj): Type cleanup, don't call strlen in loop.\n+\t* runtime/string.c (compare0): Use gfc_charlen_type.\n+\t* runtime/error.c (gfc_itoa): Move to io/write.c\n+\t(xtoa): Rename to gfc_xtoa.\n+\t* runtime/backtrace.c (show_backtrace): Call gfc_xtoa.\n+\t* intrinsics/cshift0.c (cshift0): Use index_type for shift arg.\n+\t* intrinsics/date_and_time.c (date_and_time): Use index_type.\n+\t(itime_i4): Likewise.\n+\t(itime_i8): Likewise.\n+\t(idate_i4): Likewise.\n+\t(idate_i8): Likewise.\n+\t(gmtime_i4): Likewise.\n+\t(gmtime_i8): Likewise.\n+\t(ltime_i4): Likewise.\n+\t(ltime_i8): Likewise.\n+\t* libgfortran.h (gfc_itoa): Remove prototype.\n+\t(xtoa): Rename prototype to gfc_xtoa.\n+\t* io/list_read.c (nml_read_obj): Use size_t for string length.\n+\t* io/transfer.c (read_block_direct): Change nbytes arg from\n+\tpointer to value.\n+\t(unformatted_read): Minor cleanup, call read_block_directly properly.\n+\t(skip_record): Use ssize_t.\n+\t(next_record_w_unf): Avoid stell() call by calling sseek with SEEK_CUR.\n+\t(iolength_transfer): Make sure to multiply before cast.\n+\t* io/intrinsics.c (fgetc): Remove unnecessary variable.\n+\t* io/format.c (format_hash): Use gfc_charlen_type.\n+\t* io/write.c (itoa): Move from runtime/error.c:gfc_itoa, rename,\n+\tmake static.\n+\t(write_i): Call with pointer to itoa.\n+\t(write_z): Call with pointer to gfc_xtoa.\n+\t(write_integer): Pointer to itoa.\n+\t(nml_write_obj): Type cleanup, don't call strlen in loop.\n \t\n 2009-04-06  H.J. Lu  <hongjiu.lu@intel.com>\n "}, {"sha": "ea1ef7a44bf6ab169db7f9e43bbe8b4d79c27a38", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/743460ea821f749dd56e31a9925d33ae3240566a/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/743460ea821f749dd56e31a9925d33ae3240566a/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=743460ea821f749dd56e31a9925d33ae3240566a", "patch": "@@ -465,7 +465,7 @@ read_block_direct (st_parameter_dt *dtp, void *buf, size_t nbytes)\n   /* Check whether we exceed the total record length.  */\n \n   if (dtp->u.p.current_unit->flags.has_recl\n-      && (nbytes > dtp->u.p.current_unit->bytes_left))\n+      && ((gfc_offset) nbytes > dtp->u.p.current_unit->bytes_left))\n     {\n       to_read_record = dtp->u.p.current_unit->bytes_left;\n       short_record = 1;"}, {"sha": "a102c3bd49af74b22f61e6623ce74f95d6b9d414", "filename": "libgfortran/runtime/string.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/743460ea821f749dd56e31a9925d33ae3240566a/libgfortran%2Fruntime%2Fstring.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/743460ea821f749dd56e31a9925d33ae3240566a/libgfortran%2Fruntime%2Fstring.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Fstring.c?ref=743460ea821f749dd56e31a9925d33ae3240566a", "patch": "@@ -36,7 +36,10 @@ compare0 (const char *s1, gfc_charlen_type s1_len, const char *s2)\n \n   /* Strip trailing blanks from the Fortran string.  */\n   len = fstrlen (s1, s1_len);\n-  if (len != strlen(s2)) return 0; /* don't match */\n+\n+  if ((size_t) len != strlen(s2))\n+    return 0; /* don't match */\n+\n   return strncasecmp (s1, s2, len) == 0;\n }\n "}]}