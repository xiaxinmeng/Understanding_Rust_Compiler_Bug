{"sha": "ef2ec9d9a2c2d7380d2cf992db20cf8599fc0e3d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWYyZWM5ZDlhMmMyZDczODBkMmNmOTkyZGIyMGNmODU5OWZjMGUzZA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2016-05-24T16:22:31Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2016-05-24T16:22:31Z"}, "message": "re PR middle-end/71249 (-Wswitch-unreachable false positive for a compound statement containing a used label)\n\n\tPR c/71249\n\t* gimplify.c (gimplify_switch_expr): Look into the innermost lexical\n\tscope.\n\n\t* c-c++-common/Wswitch-unreachable-2.c: New test.\n\nFrom-SVN: r236649", "tree": {"sha": "69010c074301aa33926d1fa5c77ab513c99595c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69010c074301aa33926d1fa5c77ab513c99595c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef2ec9d9a2c2d7380d2cf992db20cf8599fc0e3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef2ec9d9a2c2d7380d2cf992db20cf8599fc0e3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef2ec9d9a2c2d7380d2cf992db20cf8599fc0e3d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef2ec9d9a2c2d7380d2cf992db20cf8599fc0e3d/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7adb26f20259aadcd6e2df6ece474eca615af978", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7adb26f20259aadcd6e2df6ece474eca615af978", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7adb26f20259aadcd6e2df6ece474eca615af978"}], "stats": {"total": 34, "additions": 32, "deletions": 2}, "files": [{"sha": "2b20cc81559344bdc4f7566a5ccccbcd75b129f8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef2ec9d9a2c2d7380d2cf992db20cf8599fc0e3d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef2ec9d9a2c2d7380d2cf992db20cf8599fc0e3d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ef2ec9d9a2c2d7380d2cf992db20cf8599fc0e3d", "patch": "@@ -1,3 +1,9 @@\n+2016-05-24  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/71249\n+\t* gimplify.c (gimplify_switch_expr): Look into the innermost lexical\n+\tscope.\n+\n 2016-05-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/71257"}, {"sha": "67394e36407c29e237ac0225ba181879cbea5479", "filename": "gcc/gimplify.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef2ec9d9a2c2d7380d2cf992db20cf8599fc0e3d/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef2ec9d9a2c2d7380d2cf992db20cf8599fc0e3d/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=ef2ec9d9a2c2d7380d2cf992db20cf8599fc0e3d", "patch": "@@ -1605,8 +1605,9 @@ gimplify_switch_expr (tree *expr_p, gimple_seq *pre_p)\n \t  && switch_body_seq != NULL)\n \t{\n \t  gimple_seq seq = switch_body_seq;\n-\t  if (gimple_code (switch_body_seq) == GIMPLE_BIND)\n-\t    seq = gimple_bind_body (as_a <gbind *> (switch_body_seq));\n+\t  /* Look into the innermost lexical scope.  */\n+\t  while (gimple_code (seq) == GIMPLE_BIND)\n+\t    seq = gimple_bind_body (as_a <gbind *> (seq));\n \t  gimple *stmt = gimple_seq_first_stmt (seq);\n \t  enum gimple_code code = gimple_code (stmt);\n \t  if (code != GIMPLE_LABEL && code != GIMPLE_TRY)"}, {"sha": "e2b2466903c8b50d39964a2360aad9ff69e5c4af", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef2ec9d9a2c2d7380d2cf992db20cf8599fc0e3d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef2ec9d9a2c2d7380d2cf992db20cf8599fc0e3d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ef2ec9d9a2c2d7380d2cf992db20cf8599fc0e3d", "patch": "@@ -1,3 +1,8 @@\n+2016-05-24  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/71249\n+\t* c-c++-common/Wswitch-unreachable-2.c: New test.\n+\n 2016-05-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/71257"}, {"sha": "8f57392d842357d3d2dcba92908df21a5c1b8961", "filename": "gcc/testsuite/c-c++-common/Wswitch-unreachable-2.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef2ec9d9a2c2d7380d2cf992db20cf8599fc0e3d/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWswitch-unreachable-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef2ec9d9a2c2d7380d2cf992db20cf8599fc0e3d/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWswitch-unreachable-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWswitch-unreachable-2.c?ref=ef2ec9d9a2c2d7380d2cf992db20cf8599fc0e3d", "patch": "@@ -0,0 +1,18 @@\n+/* PR c/71249 */\n+/* { dg-do compile } */\n+\n+int\n+f (int i)\n+{\n+  switch (i)\n+    {\n+      {\n+\tint j;\n+      foo:\n+\treturn i; /* { dg-bogus \"statement will never be executed\" } */\n+      };\n+    case 3:\n+      goto foo;\n+    }\n+  return i;\n+}"}]}