{"sha": "498ee10c6a1a15f8b06cafa63ef925b6f81e12c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk4ZWUxMGM2YTFhMTVmOGIwNmNhZmE2M2VmOTI1YjZmODFlMTJjMw==", "commit": {"author": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1992-09-01T15:38:03Z"}, "committer": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1992-09-01T15:38:03Z"}, "message": "(output_move_double): Use `ldo' for immediate adds (instead of `addi' with bad syntax).\n\n(output_move_double): Use `ldo' for immediate adds (instead of\n`addi' with bad syntax).\n(output_load_address): Likewise.\n\nFrom-SVN: r2013", "tree": {"sha": "4a25268a743cef08a6611315fe4db43a98077997", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a25268a743cef08a6611315fe4db43a98077997"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/498ee10c6a1a15f8b06cafa63ef925b6f81e12c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/498ee10c6a1a15f8b06cafa63ef925b6f81e12c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/498ee10c6a1a15f8b06cafa63ef925b6f81e12c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/498ee10c6a1a15f8b06cafa63ef925b6f81e12c3/comments", "author": null, "committer": null, "parents": [{"sha": "663216865f55ee324407cb57d2959d500111a5de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/663216865f55ee324407cb57d2959d500111a5de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/663216865f55ee324407cb57d2959d500111a5de"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "aff943c156f45de64d3d947a92d7e50d500e1789", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/498ee10c6a1a15f8b06cafa63ef925b6f81e12c3/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/498ee10c6a1a15f8b06cafa63ef925b6f81e12c3/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=498ee10c6a1a15f8b06cafa63ef925b6f81e12c3", "patch": "@@ -905,10 +905,10 @@ output_move_double (operands)\n       /* XXX THIS PROBABLY DOESN'T WORK.  */\n       /* Do the late half first.  */\n       if (addreg1)\n-\toutput_asm_insn (\"addi 4,%0\", &addreg1);\n+\toutput_asm_insn (\"ldo 4(%0),%0\", &addreg1);\n       output_asm_insn (singlemove_string (latehalf), latehalf);\n       if (addreg1)\n-\toutput_asm_insn (\"addi -4,%0\", &addreg1);\n+\toutput_asm_insn (\"ldo -4(%0),%0\", &addreg1);\n       /* Then clobber.  */\n       return singlemove_string (operands);\n     }\n@@ -926,18 +926,18 @@ output_move_double (operands)\n \n   /* Make any unoffsettable addresses point at high-numbered word.  */\n   if (addreg0)\n-    output_asm_insn (\"addi 4,%0\", &addreg0);\n+    output_asm_insn (\"ldo 4(%0),%0\", &addreg0);\n   if (addreg1)\n-    output_asm_insn (\"addi 4,%0\", &addreg1);\n+    output_asm_insn (\"ldo 4(%0),%0\", &addreg1);\n \n   /* Do that word.  */\n   output_asm_insn (singlemove_string (latehalf), latehalf);\n \n   /* Undo the adds we just did.  */\n   if (addreg0)\n-    output_asm_insn (\"addi -4,%0\", &addreg0);\n+    output_asm_insn (\"ldo -4(%0),%0\", &addreg0);\n   if (addreg1)\n-    output_asm_insn (\"addi -4,%0\", &addreg1);\n+    output_asm_insn (\"ldo -4(%0),%0\", &addreg1);\n \n   return \"\";\n }\n@@ -1078,7 +1078,7 @@ output_load_address (operands)\n       if (offset == const0_rtx)\n \toutput_asm_insn (\"add %6,%7,%0\", operands);\n       else if (INT_14_BITS (offset))\n-\toutput_asm_insn (\"add %6,%7,%0\\n\\taddi %8,%0\", operands);\n+\toutput_asm_insn (\"add %6,%7,%0\\n\\tldo %8(%0),%0\", operands);\n       else\n \toutput_asm_insn (\"addil L'%8,%6\\n\\tldo R'%8(1),%0\\n\\tadd %0,%7,%0\", operands);\n     }"}]}