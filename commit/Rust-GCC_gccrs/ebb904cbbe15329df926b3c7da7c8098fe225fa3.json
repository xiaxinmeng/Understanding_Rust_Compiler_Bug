{"sha": "ebb904cbbe15329df926b3c7da7c8098fe225fa3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWJiOTA0Y2JiZTE1MzI5ZGY5MjZiM2M3ZGE3YzgwOThmZTIyNWZhMw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-07-14T12:03:09Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-07-14T12:03:09Z"}, "message": "(current_function_stdarg): New global variable.\n\n(push_function_context_to): Save it.\n(pop_function_context_from): Restore it.\n(assign_parms): Set it.\n(init_function_start): Clear it.\n\nFrom-SVN: r10123", "tree": {"sha": "72a6e6dc9e780ac0652cf0ba42bc5850bb163c8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72a6e6dc9e780ac0652cf0ba42bc5850bb163c8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ebb904cbbe15329df926b3c7da7c8098fe225fa3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebb904cbbe15329df926b3c7da7c8098fe225fa3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebb904cbbe15329df926b3c7da7c8098fe225fa3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebb904cbbe15329df926b3c7da7c8098fe225fa3/comments", "author": null, "committer": null, "parents": [{"sha": "7da7e611099b29c3586647a3e72cf863eb26e1a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7da7e611099b29c3586647a3e72cf863eb26e1a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7da7e611099b29c3586647a3e72cf863eb26e1a9"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "a7279bec6068b280ad9b9d2dba4f17e9e9782fba", "filename": "gcc/function.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebb904cbbe15329df926b3c7da7c8098fe225fa3/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebb904cbbe15329df926b3c7da7c8098fe225fa3/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=ebb904cbbe15329df926b3c7da7c8098fe225fa3", "patch": "@@ -168,6 +168,11 @@ rtx current_function_arg_offset_rtx;\n \n int current_function_varargs;\n \n+/* Nonzero if current function uses stdarg.h or equivalent.\n+   Zero for functions that use varargs.h.  */\n+\n+int current_function_stdarg;\n+\n /* Quantities of various kinds of registers\n    used for the current function's args.  */\n \n@@ -487,6 +492,7 @@ push_function_context_to (context)\n   p->pretend_args_size = current_function_pretend_args_size;\n   p->arg_offset_rtx = current_function_arg_offset_rtx;\n   p->varargs = current_function_varargs;\n+  p->stdarg = current_function_stdarg;\n   p->uses_const_pool = current_function_uses_const_pool;\n   p->uses_pic_offset_table = current_function_uses_pic_offset_table;\n   p->internal_arg_pointer = current_function_internal_arg_pointer;\n@@ -563,6 +569,7 @@ pop_function_context_from (context)\n   current_function_pretend_args_size = p->pretend_args_size;\n   current_function_arg_offset_rtx = p->arg_offset_rtx;\n   current_function_varargs = p->varargs;\n+  current_function_stdarg = p->stdarg;\n   current_function_uses_const_pool = p->uses_const_pool;\n   current_function_uses_pic_offset_table = p->uses_pic_offset_table;\n   current_function_internal_arg_pointer = p->internal_arg_pointer;\n@@ -3169,6 +3176,8 @@ assign_parms (fndecl, second_time)\n        && (TREE_VALUE (tree_last (TYPE_ARG_TYPES (fntype)))\n \t   != void_type_node));\n \n+  current_function_stdarg = stdarg;\n+\n   /* If the reg that the virtual arg pointer will be translated into is\n      not a fixed reg or is the stack pointer, make a copy of the virtual\n      arg pointer, and address parms via the copy.  The frame pointer is\n@@ -4834,8 +4843,9 @@ init_function_start (subr, filename, line)\n   /* Indicate we have no need of a frame pointer yet.  */\n   frame_pointer_needed = 0;\n \n-  /* By default assume not varargs.  */\n+  /* By default assume not varargs or stdarg.  */\n   current_function_varargs = 0;\n+  current_function_stdarg = 0;\n }\n \n /* Indicate that the current function uses extra args"}]}