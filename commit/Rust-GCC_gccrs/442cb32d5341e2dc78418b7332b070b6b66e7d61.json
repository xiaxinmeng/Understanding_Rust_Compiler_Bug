{"sha": "442cb32d5341e2dc78418b7332b070b6b66e7d61", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQyY2IzMmQ1MzQxZTJkYzc4NDE4YjczMzJiMDcwYjZiNjZlN2Q2MQ==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1993-03-03T06:46:43Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1993-03-03T06:46:43Z"}, "message": "Clarify comment on INTEGER_TYPE.\n\nFrom-SVN: r3618", "tree": {"sha": "81950c9d83b4450cbf91f7bf3de002fb1e73aecb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81950c9d83b4450cbf91f7bf3de002fb1e73aecb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/442cb32d5341e2dc78418b7332b070b6b66e7d61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/442cb32d5341e2dc78418b7332b070b6b66e7d61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/442cb32d5341e2dc78418b7332b070b6b66e7d61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/442cb32d5341e2dc78418b7332b070b6b66e7d61/comments", "author": null, "committer": null, "parents": [{"sha": "bd814d9779c22fb6b47d8e4435636e9df8290e64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd814d9779c22fb6b47d8e4435636e9df8290e64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd814d9779c22fb6b47d8e4435636e9df8290e64"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "c249354ae23f55a35edda0abeab12e64a15c885a", "filename": "gcc/tree.def", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442cb32d5341e2dc78418b7332b070b6b66e7d61/gcc%2Ftree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442cb32d5341e2dc78418b7332b070b6b66e7d61/gcc%2Ftree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.def?ref=442cb32d5341e2dc78418b7332b070b6b66e7d61", "patch": "@@ -121,11 +121,13 @@ DEFTREECODE (BLOCK, \"block\", \"b\", 0)\n \n DEFTREECODE (VOID_TYPE, \"void_type\", \"t\", 0)\t/* The void type in C */\n \n-/* Integer types in all languages, including char in C.  */\n-/* Has components TYPE_MIN_VALUE, TYPE_MAX_VALUE (expressions, inclusive)\n+/* Integer types in all languages, including char in C.\n+   Also used for sub-ranges of other discrete types.\n+   Has components TYPE_MIN_VALUE, TYPE_MAX_VALUE (expressions, inclusive)\n    and TYPE_PRECISION (number of bits used by this type).\n    In the case of a subrange type in Pascal, the TREE_TYPE\n-   of this will point at the supertype (another INTEGER_TYPE).\n+   of this will point at the supertype (another INTEGER_TYPE,\n+   or an ENUMERAL_TYPE, CHAR_TYPE, or BOOLEAN_TYPE).\n    Otherwise, the TREE_TYPE is zero.  */\n DEFTREECODE (INTEGER_TYPE, \"integer_type\", \"t\", 0)\n "}]}