{"sha": "0f68f06bf4d93a68339490f45921d895a21e6d07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGY2OGYwNmJmNGQ5M2E2ODMzOTQ5MGY0NTkyMWQ4OTVhMjFlNmQwNw==", "commit": {"author": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "1996-10-28T14:06:28Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "1996-10-28T14:06:28Z"}, "message": "(SECONDARY_INPUT_RELOAD_CLASS): Define.\n\nFrom-SVN: r13047", "tree": {"sha": "177c8c78394bf7bfcb140c9db48f49bc4933369e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/177c8c78394bf7bfcb140c9db48f49bc4933369e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f68f06bf4d93a68339490f45921d895a21e6d07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f68f06bf4d93a68339490f45921d895a21e6d07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f68f06bf4d93a68339490f45921d895a21e6d07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f68f06bf4d93a68339490f45921d895a21e6d07/comments", "author": null, "committer": null, "parents": [{"sha": "7f74cc8d2062ae68efbf5be2130c8474fc039260", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f74cc8d2062ae68efbf5be2130c8474fc039260", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f74cc8d2062ae68efbf5be2130c8474fc039260"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "217ce5ad9392457b3f1f0d139ec245e7e7d0f9a8", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f68f06bf4d93a68339490f45921d895a21e6d07/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f68f06bf4d93a68339490f45921d895a21e6d07/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=0f68f06bf4d93a68339490f45921d895a21e6d07", "patch": "@@ -585,6 +585,21 @@ extern enum reg_class reg_class_from_letter[];\n \n #define PREFERRED_RELOAD_CLASS(X, CLASS) CLASS\n \n+/* ??? Should make FPUL register a nn-fixed register and make it's\n+   use explicit in the rtl; then change this definition here to\n+   ...  ? FPUL_REGS : NO_REGS) .  */\n+#define SECONDARY_OUTPUT_RELOAD_CLASS(CLASS,MODE,X) \\\n+  ((((CLASS == FP_REGS || CLASS == FP0_REGS)\t\t\t\t\\\n+     && GET_CODE (X) == REG && REGNO (X) <= AP_REG)\t\t\t\\\n+    || (CLASS == GENERAL_REGS && GET_CODE (X) == REG\t\t\t\\\n+\t&& REGNO (X) <= FIRST_FP_REG && REGNO (X) >= LAST_FP_REG))\t\\\n+   ? /* FPUL_REGS */ NO_REGS : NO_REGS)\n+\n+#define SECONDARY_INPUT_RELOAD_CLASS(CLASS,MODE,X)  \\\n+  (((CLASS == FP_REGS || CLASS == FP0_REGS) && immediate_operand (X, MODE)\\\n+    && ! (fp_one_operand (X) || fp_one_operand (X)))\t\t\t\\\n+   ? R0_REGS : SECONDARY_OUTPUT_RELOAD_CLASS(CLASS,MODE,X))\n+\n /* Return the maximum number of consecutive registers\n    needed to represent mode MODE in a register of class CLASS.\n "}]}