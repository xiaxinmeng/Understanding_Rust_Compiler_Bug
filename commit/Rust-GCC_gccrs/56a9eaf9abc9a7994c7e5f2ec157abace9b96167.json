{"sha": "56a9eaf9abc9a7994c7e5f2ec157abace9b96167", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTZhOWVhZjlhYmM5YTc5OTRjN2U1ZjJlYzE1N2FiYWNlOWI5NjE2Nw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-01-15T12:01:12Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-01-15T12:01:12Z"}, "message": "Fix missing or incorrect feature test macros\n\n\t* doc/xml/manual/status_cxx2017.xml: Document P0032R3 and P0307R2\n\tstatus.\n\t* include/bits/stl_uninitialized.h (__cpp_lib_raw_memory_algorithms):\n\tDefine.\n\t* include/std/any (__cpp_lib_any): Define as 201606L, because P0032R3\n\tchanges are supported.\n\t* include/std/optional (__cpp_lib_optional): Likewise.\n\t* include/std/variant (__cpp_lib_variant): Likewise.\n\t* include/std/version [!__STRICT_ANSI__]\n\t(__cpp_lib_uncaught_exceptions): Define as long integer.\n\t[__cplusplus >= 201703L] (__cpp_lib_any)\n\t(__cpp_lib_raw_memory_algorithms, __cpp_lib_uncaught_exceptions)\n\t(__cpp_lib_variant): Define for C++17.\n\t[__cplusplus >= 201703L] (__cpp_lib_optional): Update value and define\n\tas long integer.\n\t* libsupc++/exception (__cpp_lib_uncaught_exceptions): Define as long\n\tinteger.\n\nFrom-SVN: r267936", "tree": {"sha": "fe976a899f0c5d90d9756a0fabc4404ca56b2ad2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe976a899f0c5d90d9756a0fabc4404ca56b2ad2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56a9eaf9abc9a7994c7e5f2ec157abace9b96167", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56a9eaf9abc9a7994c7e5f2ec157abace9b96167", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56a9eaf9abc9a7994c7e5f2ec157abace9b96167", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56a9eaf9abc9a7994c7e5f2ec157abace9b96167/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04fdd1fdec04e23a19450e4cd0e08d88fa0198ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04fdd1fdec04e23a19450e4cd0e08d88fa0198ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04fdd1fdec04e23a19450e4cd0e08d88fa0198ac"}], "stats": {"total": 67, "additions": 58, "deletions": 9}, "files": [{"sha": "dbb7d8e4b549dcad1efbde5d51e0c342834d087c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56a9eaf9abc9a7994c7e5f2ec157abace9b96167/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56a9eaf9abc9a7994c7e5f2ec157abace9b96167/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=56a9eaf9abc9a7994c7e5f2ec157abace9b96167", "patch": "@@ -1,5 +1,23 @@\n 2019-01-15  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* doc/xml/manual/status_cxx2017.xml: Document P0032R3 and P0307R2\n+\tstatus.\n+\t* include/bits/stl_uninitialized.h (__cpp_lib_raw_memory_algorithms):\n+\tDefine.\n+\t* include/std/any (__cpp_lib_any): Define as 201606L, because P0032R3\n+\tchanges are supported.\n+\t* include/std/optional (__cpp_lib_optional): Likewise.\n+\t* include/std/variant (__cpp_lib_variant): Likewise.\n+\t* include/std/version [!__STRICT_ANSI__]\n+\t(__cpp_lib_uncaught_exceptions): Define as long integer.\n+\t[__cplusplus >= 201703L] (__cpp_lib_any)\n+\t(__cpp_lib_raw_memory_algorithms, __cpp_lib_uncaught_exceptions)\n+\t(__cpp_lib_variant): Define for C++17.\n+\t[__cplusplus >= 201703L] (__cpp_lib_optional): Update value and define\n+\tas long integer.\n+\t* libsupc++/exception (__cpp_lib_uncaught_exceptions): Define as long\n+\tinteger.\n+\n \t* doc/xml/manual/status_cxx2020.xml: Update P1123R0 status.\n \n 2019-01-12  Jonathan Wakely  <jwakely@redhat.com>"}, {"sha": "c9913a9e3a72a399b1f92b5c5afb025d14a43edb", "filename": "libstdc++-v3/doc/xml/manual/status_cxx2017.xml", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56a9eaf9abc9a7994c7e5f2ec157abace9b96167/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2017.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56a9eaf9abc9a7994c7e5f2ec157abace9b96167/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2017.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2017.xml?ref=56a9eaf9abc9a7994c7e5f2ec157abace9b96167", "patch": "@@ -787,6 +787,31 @@ Feature-testing recommendations for C++</link>.\n              <code> __cpp_lib_to_chars >= 201611 </code></entry>\n     </row>\n \n+    <row>\n+      <entry> Homogeneous interface for variant, any and optional </entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0032r3.pdf\">\n+\tP0032R3\n+\t</link>\n+      </entry>\n+      <entry align=\"center\"> 7.1  </entry>\n+      <entry>\n+             <code> __cpp_lib_any >= 201606 </code>,\n+             <code> __cpp_lib_optional >= 201606 </code>,\n+             <code> __cpp_lib_variant >= 201606 </code>\n+      </entry>\n+    </row>\n+\n+    <row>\n+      <entry> Making Optional Greater Equal Again </entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0307r2.pdf\">\n+\tP0307R2\n+\t</link>\n+      </entry>\n+      <entry align=\"center\"> 7.1  </entry>\n+      <entry> <code> __cpp_lib_optional >= 201606 </code> </entry>\n+    </row>\n \n   </tbody>\n </tgroup>"}, {"sha": "664e4ad8f002d45f92339bdb83a3ac9cf83967d6", "filename": "libstdc++-v3/include/bits/stl_uninitialized.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56a9eaf9abc9a7994c7e5f2ec157abace9b96167/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_uninitialized.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56a9eaf9abc9a7994c7e5f2ec157abace9b96167/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_uninitialized.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_uninitialized.h?ref=56a9eaf9abc9a7994c7e5f2ec157abace9b96167", "patch": "@@ -826,7 +826,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n #endif\n \n-#if __cplusplus > 201402L\n+#if __cplusplus >= 201703L\n+# define __cpp_lib_raw_memory_algorithms 201606L\n+\n   template <typename _ForwardIterator>\n     inline void\n     uninitialized_default_construct(_ForwardIterator __first,\n@@ -877,7 +879,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t __count, __result);\n       return {__res.first.base(), __res.second};\n     }\n-#endif\n+#endif // C++17\n \n #if __cplusplus >= 201103L\n   template<typename _Tp, typename _Up, typename _Allocator>"}, {"sha": "385a99ce7441e28c645122610a40dc0e446a2945", "filename": "libstdc++-v3/include/std/any", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56a9eaf9abc9a7994c7e5f2ec157abace9b96167/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fany", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56a9eaf9abc9a7994c7e5f2ec157abace9b96167/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fany", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fany?ref=56a9eaf9abc9a7994c7e5f2ec157abace9b96167", "patch": "@@ -66,7 +66,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #endif\n   }\n \n-#define __cpp_lib_any 201603\n+#define __cpp_lib_any 201606L\n \n   /**\n    *  @brief A type-safe container of any type."}, {"sha": "d243930fed4906285a68b5c640e75f00da57ff07", "filename": "libstdc++-v3/include/std/optional", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56a9eaf9abc9a7994c7e5f2ec157abace9b96167/libstdc%2B%2B-v3%2Finclude%2Fstd%2Foptional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56a9eaf9abc9a7994c7e5f2ec157abace9b96167/libstdc%2B%2B-v3%2Finclude%2Fstd%2Foptional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Foptional?ref=56a9eaf9abc9a7994c7e5f2ec157abace9b96167", "patch": "@@ -51,7 +51,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  @{\n    */\n \n-#define __cpp_lib_optional 201603\n+#define __cpp_lib_optional 201606L\n \n   template<typename _Tp>\n     class optional;"}, {"sha": "89deb143097dfa66a33559b8025051f9846e33a6", "filename": "libstdc++-v3/include/std/variant", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56a9eaf9abc9a7994c7e5f2ec157abace9b96167/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56a9eaf9abc9a7994c7e5f2ec157abace9b96167/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant?ref=56a9eaf9abc9a7994c7e5f2ec157abace9b96167", "patch": "@@ -68,7 +68,7 @@ namespace __variant\n } // namespace __variant\n } // namespace __detail\n \n-#define __cpp_lib_variant 201603\n+#define __cpp_lib_variant 201606L\n \n   template<typename... _Types> class tuple;\n   template<typename... _Types> class variant;"}, {"sha": "f49a45940f93b7d582e3c8ebdf732e8960398e8b", "filename": "libstdc++-v3/include/std/version", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56a9eaf9abc9a7994c7e5f2ec157abace9b96167/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56a9eaf9abc9a7994c7e5f2ec157abace9b96167/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion?ref=56a9eaf9abc9a7994c7e5f2ec157abace9b96167", "patch": "@@ -39,7 +39,7 @@\n \n #if !defined(__STRICT_ANSI__)\n // gnu++03\n-# define __cpp_lib_uncaught_exceptions 201411\n+# define __cpp_lib_uncaught_exceptions 201411L\n #endif\n \n #if __cplusplus >= 201103L\n@@ -85,6 +85,7 @@\n #if __cplusplus >= 201703L\n // c++17\n #define __cpp_lib_addressof_constexpr 201603\n+#define __cpp_lib_any 201606L\n #define __cpp_lib_apply 201603\n #define __cpp_lib_array_constexpr 201603\n #define __cpp_lib_as_const 201510\n@@ -126,7 +127,8 @@\n #define __cpp_lib_node_extract 201606\n #define __cpp_lib_nonmember_container_access 201411\n #define __cpp_lib_not_fn 201603\n-#define __cpp_lib_optional 201603\n+#define __cpp_lib_optional 201606L\n+#define __cpp_lib_raw_memory_algorithms 201606L\n #define __cpp_lib_sample 201603\n #ifdef _GLIBCXX_HAS_GTHREADS\n # define __cpp_lib_scoped_lock 201703\n@@ -135,8 +137,10 @@\n #define __cpp_lib_shared_ptr_weak_type 201606\n #define __cpp_lib_string_view 201603\n #define __cpp_lib_type_trait_variable_templates 201510L\n+#define __cpp_lib_uncaught_exceptions 201411L\n #define __cpp_lib_unordered_map_insertion 201411\n #define __cpp_lib_unordered_map_try_emplace 201411\n+#define __cpp_lib_variant 201606L\n #define __cpp_lib_void_t 201411\n \n #if __cplusplus > 201703L"}, {"sha": "073bfdda42d324213f61d52d5c80a194efa9a1e7", "filename": "libstdc++-v3/libsupc++/exception", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56a9eaf9abc9a7994c7e5f2ec157abace9b96167/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fexception", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56a9eaf9abc9a7994c7e5f2ec157abace9b96167/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fexception", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fexception?ref=56a9eaf9abc9a7994c7e5f2ec157abace9b96167", "patch": "@@ -101,8 +101,8 @@ namespace std\n   _GLIBCXX17_DEPRECATED\n   bool uncaught_exception() _GLIBCXX_USE_NOEXCEPT __attribute__ ((__pure__));\n \n-#if __cplusplus > 201402L || !defined(__STRICT_ANSI__) // c++17 or gnu++98\n-#define __cpp_lib_uncaught_exceptions 201411\n+#if __cplusplus >= 201703L || !defined(__STRICT_ANSI__) // c++17 or gnu++98\n+#define __cpp_lib_uncaught_exceptions 201411L\n   /// The number of uncaught exceptions.\n   int uncaught_exceptions() _GLIBCXX_USE_NOEXCEPT __attribute__ ((__pure__));\n #endif"}]}