{"sha": "d6c7ed5017ae925f18acde16f02f9a0ed2f1b960", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDZjN2VkNTAxN2FlOTI1ZjE4YWNkZTE2ZjAyZjlhMGVkMmYxYjk2MA==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@act-europe.fr", "date": "2004-10-04T14:49:35Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-10-04T14:49:35Z"}, "message": "g-socket.ads, [...]: Add new sockets constant MSG_NOSIGNAL (Linux-specific).\n\n2004-10-04  Thomas Quinot  <quinot@act-europe.fr>\n\n\t* g-socket.ads, g-socket.adb, g-socthi.adb, socket.c,\n\tg-soccon-aix.ads, g-soccon-irix.ads, g-soccon-hpux.ads,\n\tg-soccon-interix.ads, g-soccon-solaris.ads, g-soccon-vms.adb,\n\tg-soccon-mingw.ads, g-soccon-vxworks.ads, g-soccon-freebsd.ads,\n\tg-soccon.ads, g-soccon-unixware.ads, g-soccon-tru64.ads:  Add new\n\tsockets constant MSG_NOSIGNAL (Linux-specific).\n\tAdd new sockets constant MSG_Forced_Flags, list of flags to be set on\n\tall Send operations.\n\tFor Linux, set MSG_NOSIGNAL on all send operations to prevent them\n\tfrom trigerring SIGPIPE.\n\tRename components to avoid clash with Ada 2005 possible reserved\n\tword 'interface'.\n\t(Check_Selector): When the select system call returns with an error\n\tcondition, propagate Socket_Error to the caller.\n\nFrom-SVN: r88485", "tree": {"sha": "7d917cde2a4fa0a26ee9117ad99650660d705a3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d917cde2a4fa0a26ee9117ad99650660d705a3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960/comments", "author": null, "committer": null, "parents": [{"sha": "fded8de7d64cf357aaeb7ccb51b6e850d9557e4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fded8de7d64cf357aaeb7ccb51b6e850d9557e4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fded8de7d64cf357aaeb7ccb51b6e850d9557e4a"}], "stats": {"total": 352, "additions": 207, "deletions": 145}, "files": [{"sha": "6620e371c47cec6f2284109e9bd502e15ccbce07", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d6c7ed5017ae925f18acde16f02f9a0ed2f1b960", "patch": "@@ -1,3 +1,20 @@\n+2004-10-04  Thomas Quinot  <quinot@act-europe.fr>\n+\n+\t* g-socket.ads, g-socket.adb, g-socthi.adb, socket.c,\n+\tg-soccon-aix.ads, g-soccon-irix.ads, g-soccon-hpux.ads, \n+\tg-soccon-interix.ads, g-soccon-solaris.ads, g-soccon-vms.adb, \n+\tg-soccon-mingw.ads, g-soccon-vxworks.ads, g-soccon-freebsd.ads, \n+\tg-soccon.ads, g-soccon-unixware.ads, g-soccon-tru64.ads:  Add new\n+\tsockets constant MSG_NOSIGNAL (Linux-specific).\n+\tAdd new sockets constant MSG_Forced_Flags, list of flags to be set on\n+\tall Send operations.\n+\tFor Linux, set MSG_NOSIGNAL on all send operations to prevent them\n+\tfrom trigerring SIGPIPE.\n+\tRename components to avoid clash with Ada 2005 possible reserved\n+\tword 'interface'.\n+\t(Check_Selector): When the select system call returns with an error\n+\tcondition, propagate Socket_Error to the caller.\n+\n 2004-10-01  Jan Hubicka  <jh@suse.cz>\n \n \t* misc.c (gnat_expand_body): Update call of tree_rest_of_compilation."}, {"sha": "4361f0940e64b96da5f985cacee813a70ba241fc", "filename": "gcc/ada/g-soccon-aix.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960/gcc%2Fada%2Fg-soccon-aix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960/gcc%2Fada%2Fg-soccon-aix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-aix.ads?ref=d6c7ed5017ae925f18acde16f02f9a0ed2f1b960", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -137,6 +137,8 @@ package GNAT.Sockets.Constants is\n    MSG_PEEK           : constant :=            2; --  Peek at incoming data\n    MSG_EOR            : constant :=            8; --  Send end of record\n    MSG_WAITALL        : constant :=           64; --  Wait for full reception\n+   MSG_NOSIGNAL       : constant :=           -1; --  No SIGPIPE on send\n+   MSG_Forced_Flags   : constant :=            0;\n \n    --------------------\n    -- Socket options --"}, {"sha": "ca1da41bbd52796932ba61d125467c12c3944fe7", "filename": "gcc/ada/g-soccon-freebsd.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960/gcc%2Fada%2Fg-soccon-freebsd.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960/gcc%2Fada%2Fg-soccon-freebsd.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-freebsd.ads?ref=d6c7ed5017ae925f18acde16f02f9a0ed2f1b960", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -137,6 +137,8 @@ package GNAT.Sockets.Constants is\n    MSG_PEEK           : constant :=            2; --  Peek at incoming data\n    MSG_EOR            : constant :=            8; --  Send end of record\n    MSG_WAITALL        : constant :=           64; --  Wait for full reception\n+   MSG_NOSIGNAL       : constant :=           -1; --  No SIGPIPE on send\n+   MSG_Forced_Flags   : constant :=            0;\n \n    --------------------\n    -- Socket options --"}, {"sha": "56e0d5f594ea5591f31f94b6df8e435c712c49f9", "filename": "gcc/ada/g-soccon-hpux.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960/gcc%2Fada%2Fg-soccon-hpux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960/gcc%2Fada%2Fg-soccon-hpux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-hpux.ads?ref=d6c7ed5017ae925f18acde16f02f9a0ed2f1b960", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -137,6 +137,8 @@ package GNAT.Sockets.Constants is\n    MSG_PEEK           : constant :=            2; --  Peek at incoming data\n    MSG_EOR            : constant :=            8; --  Send end of record\n    MSG_WAITALL        : constant :=           64; --  Wait for full reception\n+   MSG_NOSIGNAL       : constant :=           -1; --  No SIGPIPE on send\n+   MSG_Forced_Flags   : constant :=            0;\n \n    --------------------\n    -- Socket options --"}, {"sha": "aa6ab5b05562e33fb7c853c7f98b909553071e3b", "filename": "gcc/ada/g-soccon-interix.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960/gcc%2Fada%2Fg-soccon-interix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960/gcc%2Fada%2Fg-soccon-interix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-interix.ads?ref=d6c7ed5017ae925f18acde16f02f9a0ed2f1b960", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -137,6 +137,8 @@ package GNAT.Sockets.Constants is\n    MSG_PEEK           : constant :=            2; --  Peek at incoming data\n    MSG_EOR            : constant :=            8; --  Send end of record\n    MSG_WAITALL        : constant :=           64; --  Wait for full reception\n+   MSG_NOSIGNAL       : constant :=           -1; --  No SIGPIPE on send\n+   MSG_Forced_Flags   : constant :=            0;\n \n    --------------------\n    -- Socket options --"}, {"sha": "b1201f69aa72822adbe005d3f7953ddfb4a9d74f", "filename": "gcc/ada/g-soccon-irix.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960/gcc%2Fada%2Fg-soccon-irix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960/gcc%2Fada%2Fg-soccon-irix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-irix.ads?ref=d6c7ed5017ae925f18acde16f02f9a0ed2f1b960", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -137,6 +137,8 @@ package GNAT.Sockets.Constants is\n    MSG_PEEK           : constant :=            2; --  Peek at incoming data\n    MSG_EOR            : constant :=            8; --  Send end of record\n    MSG_WAITALL        : constant :=           64; --  Wait for full reception\n+   MSG_NOSIGNAL       : constant :=           -1; --  No SIGPIPE on send\n+   MSG_Forced_Flags   : constant :=            0;\n \n    --------------------\n    -- Socket options --"}, {"sha": "b963ca6474a7dc1bde77c193a1e3fb2c59362832", "filename": "gcc/ada/g-soccon-mingw.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960/gcc%2Fada%2Fg-soccon-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960/gcc%2Fada%2Fg-soccon-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-mingw.ads?ref=d6c7ed5017ae925f18acde16f02f9a0ed2f1b960", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -137,6 +137,8 @@ package GNAT.Sockets.Constants is\n    MSG_PEEK           : constant :=            2; --  Peek at incoming data\n    MSG_EOR            : constant :=           -1; --  Send end of record\n    MSG_WAITALL        : constant :=           -1; --  Wait for full reception\n+   MSG_NOSIGNAL       : constant :=           -1; --  No SIGPIPE on send\n+   MSG_Forced_Flags   : constant :=            0;\n \n    --------------------\n    -- Socket options --"}, {"sha": "21dbac5d29a0dcb3992c584d8765df69216fbb46", "filename": "gcc/ada/g-soccon-solaris.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960/gcc%2Fada%2Fg-soccon-solaris.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960/gcc%2Fada%2Fg-soccon-solaris.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-solaris.ads?ref=d6c7ed5017ae925f18acde16f02f9a0ed2f1b960", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -137,6 +137,8 @@ package GNAT.Sockets.Constants is\n    MSG_PEEK           : constant :=            2; --  Peek at incoming data\n    MSG_EOR            : constant :=            8; --  Send end of record\n    MSG_WAITALL        : constant :=           64; --  Wait for full reception\n+   MSG_NOSIGNAL       : constant :=           -1; --  No SIGPIPE on send\n+   MSG_Forced_Flags   : constant :=            0;\n \n    --------------------\n    -- Socket options --"}, {"sha": "a0927e2bcfe95514519524286509ddd834a4d42b", "filename": "gcc/ada/g-soccon-tru64.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960/gcc%2Fada%2Fg-soccon-tru64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960/gcc%2Fada%2Fg-soccon-tru64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-tru64.ads?ref=d6c7ed5017ae925f18acde16f02f9a0ed2f1b960", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -137,6 +137,8 @@ package GNAT.Sockets.Constants is\n    MSG_PEEK           : constant :=            2; --  Peek at incoming data\n    MSG_EOR            : constant :=            8; --  Send end of record\n    MSG_WAITALL        : constant :=           64; --  Wait for full reception\n+   MSG_NOSIGNAL       : constant :=           -1; --  No SIGPIPE on send\n+   MSG_Forced_Flags   : constant :=            0;\n \n    --------------------\n    -- Socket options --"}, {"sha": "d53931116d9d20edebadd1b19fc64f9773c96f1a", "filename": "gcc/ada/g-soccon-unixware.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960/gcc%2Fada%2Fg-soccon-unixware.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960/gcc%2Fada%2Fg-soccon-unixware.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-unixware.ads?ref=d6c7ed5017ae925f18acde16f02f9a0ed2f1b960", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -137,6 +137,8 @@ package GNAT.Sockets.Constants is\n    MSG_PEEK           : constant :=            2; --  Peek at incoming data\n    MSG_EOR            : constant :=            8; --  Send end of record\n    MSG_WAITALL        : constant :=           64; --  Wait for full reception\n+   MSG_NOSIGNAL       : constant :=           -1; --  No SIGPIPE on send\n+   MSG_Forced_Flags   : constant :=            0;\n \n    --------------------\n    -- Socket options --"}, {"sha": "ebd394c54a3508c518ef8f0fd44cfd9db44d01d0", "filename": "gcc/ada/g-soccon-vms.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960/gcc%2Fada%2Fg-soccon-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960/gcc%2Fada%2Fg-soccon-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-vms.adb?ref=d6c7ed5017ae925f18acde16f02f9a0ed2f1b960", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -137,6 +137,8 @@ package GNAT.Sockets.Constants is\n    MSG_PEEK           : constant :=            2; --  Peek at incoming data\n    MSG_EOR            : constant :=            8; --  Send end of record\n    MSG_WAITALL        : constant :=           64; --  Wait for full reception\n+   MSG_NOSIGNAL       : constant :=           -1; --  No SIGPIPE on send\n+   MSG_Forced_Flags   : constant :=            0;\n \n    --------------------\n    -- Socket options --"}, {"sha": "0e4004f4481362afa129d450bdf2da5dcf6614a0", "filename": "gcc/ada/g-soccon-vxworks.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960/gcc%2Fada%2Fg-soccon-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960/gcc%2Fada%2Fg-soccon-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-vxworks.ads?ref=d6c7ed5017ae925f18acde16f02f9a0ed2f1b960", "patch": "@@ -137,6 +137,8 @@ package GNAT.Sockets.Constants is\n    MSG_PEEK           : constant :=            2; --  Peek at incoming data\n    MSG_EOR            : constant :=            8; --  Send end of record\n    MSG_WAITALL        : constant :=           64; --  Wait for full reception\n+   MSG_NOSIGNAL       : constant :=           -1; --  No SIGPIPE on send\n+   MSG_Forced_Flags   : constant :=            0;\n \n    --------------------\n    -- Socket options --"}, {"sha": "54c931a04b37ba41daad6de2cdbcde21287a93aa", "filename": "gcc/ada/g-soccon.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960/gcc%2Fada%2Fg-soccon.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960/gcc%2Fada%2Fg-soccon.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon.ads?ref=d6c7ed5017ae925f18acde16f02f9a0ed2f1b960", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -137,6 +137,8 @@ package GNAT.Sockets.Constants is\n    MSG_PEEK           : constant :=            2; --  Peek at incoming data\n    MSG_EOR            : constant :=          128; --  Send end of record\n    MSG_WAITALL        : constant :=          256; --  Wait for full reception\n+   MSG_NOSIGNAL       : constant :=        16384; --  No SIGPIPE on send\n+   MSG_Forced_Flags   : constant := MSG_NOSIGNAL;\n \n    --------------------\n    -- Socket options --"}, {"sha": "01f9d19bb936a4868f296837775d2341b8c13be2", "filename": "gcc/ada/g-socket.adb", "status": "modified", "additions": 88, "deletions": 71, "changes": 159, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960/gcc%2Fada%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960/gcc%2Fada%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.adb?ref=d6c7ed5017ae925f18acde16f02f9a0ed2f1b960", "patch": "@@ -117,8 +117,7 @@ package body GNAT.Sockets is\n \n    function Resolve_Error\n      (Error_Value : Integer;\n-      From_Errno  : Boolean := True)\n-      return        Error_Type;\n+      From_Errno  : Boolean := True) return Error_Type;\n    --  Associate an enumeration value (error_type) to en error value\n    --  (errno). From_Errno prevents from mixing h_errno with errno.\n \n@@ -127,23 +126,24 @@ package body GNAT.Sockets is\n    --  Conversion functions\n \n    function To_Int (F : Request_Flag_Type) return C.int;\n+   --  Return the int value corresponding to the specified flags combination\n+\n+   function Set_Forced_Flags (F : C.int) return C.int;\n+   --  Return F with the bits from Constants.MSG_Forced_Flags forced set\n \n    function Short_To_Network\n-     (S : C.unsigned_short)\n-      return C.unsigned_short;\n+     (S : C.unsigned_short) return C.unsigned_short;\n    pragma Inline (Short_To_Network);\n    --  Convert a port number into a network port number\n \n    function Network_To_Short\n-     (S : C.unsigned_short)\n-      return C.unsigned_short\n+     (S : C.unsigned_short) return C.unsigned_short\n    renames Short_To_Network;\n    --  Symetric operation\n \n    function Image\n      (Val :  Inet_Addr_VN_Type;\n-      Hex :  Boolean := False)\n-      return String;\n+      Hex :  Boolean := False) return String;\n    --  Output an array of inet address components either in\n    --  hexadecimal or in decimal mode.\n \n@@ -172,7 +172,7 @@ package body GNAT.Sockets is\n    --  (note hstrerror seems to be obsolete).\n \n    procedure Narrow (Item : in out Socket_Set_Type);\n-   --  Update Last as it may be greater than the real last socket.\n+   --  Update Last as it may be greater than the real last socket\n \n    --  Types needed for Datagram_Socket_Stream_Type\n \n@@ -267,9 +267,8 @@ package body GNAT.Sockets is\n    ---------------\n \n    function Addresses\n-     (E    : Host_Entry_Type;\n-      N    : Positive := 1)\n-      return Inet_Addr_Type\n+     (E : Host_Entry_Type;\n+      N : Positive := 1) return Inet_Addr_Type\n    is\n    begin\n       return E.Addresses (N);\n@@ -289,9 +288,8 @@ package body GNAT.Sockets is\n    -------------\n \n    function Aliases\n-     (E    : Host_Entry_Type;\n-      N    : Positive := 1)\n-      return String\n+     (E : Host_Entry_Type;\n+      N : Positive := 1) return String\n    is\n    begin\n       return To_String (E.Aliases (N));\n@@ -302,9 +300,8 @@ package body GNAT.Sockets is\n    -------------\n \n    function Aliases\n-     (S    : Service_Entry_Type;\n-      N    : Positive := 1)\n-      return String\n+     (S : Service_Entry_Type;\n+      N : Positive := 1) return String\n    is\n    begin\n       return To_String (S.Aliases (N));\n@@ -431,6 +428,10 @@ package body GNAT.Sockets is\n           ESet.Set,\n           TPtr);\n \n+      if Res = Failure then\n+         Raise_Socket_Error (Socket_Errno);\n+      end if;\n+\n       --  If Select was resumed because of read signalling socket,\n       --  read this data and remove socket from set.\n \n@@ -456,7 +457,7 @@ package body GNAT.Sockets is\n       Narrow (WSet);\n       Narrow (ESet);\n \n-      --  Reset RSet as it should be if R_Sig_Socket was not added.\n+      --  Reset RSet as it should be if R_Sig_Socket was not added\n \n       if Is_Empty (RSet) then\n          Empty (RSet);\n@@ -470,7 +471,7 @@ package body GNAT.Sockets is\n          Empty (ESet);\n       end if;\n \n-      --  Deliver RSet, WSet and ESet.\n+      --  Deliver RSet, WSet and ESet\n \n       Empty (R_Socket_Set);\n       R_Socket_Set := RSet;\n@@ -822,8 +823,7 @@ package body GNAT.Sockets is\n \n    function Get_Host_By_Address\n      (Address : Inet_Addr_Type;\n-      Family  : Family_Type := Family_Inet)\n-      return    Host_Entry_Type\n+      Family  : Family_Type := Family_Inet) return Host_Entry_Type\n    is\n       pragma Unreferenced (Family);\n \n@@ -865,7 +865,7 @@ package body GNAT.Sockets is\n       Err : Integer;\n \n    begin\n-      --  Detect IP address name and redirect to Inet_Addr.\n+      --  Detect IP address name and redirect to Inet_Addr\n \n       if Is_IP_Address (Name) then\n          return Get_Host_By_Address (Inet_Addr (Name));\n@@ -920,8 +920,7 @@ package body GNAT.Sockets is\n \n    function Get_Service_By_Name\n      (Name     : String;\n-      Protocol : String)\n-      return     Service_Entry_Type\n+      Protocol : String) return Service_Entry_Type\n    is\n       SN  : constant C.char_array := C.To_C (Name);\n       SP  : constant C.char_array := C.To_C (Protocol);\n@@ -957,8 +956,7 @@ package body GNAT.Sockets is\n \n    function Get_Service_By_Port\n      (Port     : Port_Type;\n-      Protocol : String)\n-      return     Service_Entry_Type\n+      Protocol : String) return Service_Entry_Type\n    is\n       SP  : constant C.char_array := C.To_C (Protocol);\n       Res : Servent_Access;\n@@ -993,8 +991,7 @@ package body GNAT.Sockets is\n    ---------------------\n \n    function Get_Socket_Name\n-     (Socket : Socket_Type)\n-      return   Sock_Addr_Type\n+     (Socket : Socket_Type) return Sock_Addr_Type\n    is\n       Sin  : aliased Sockaddr_In;\n       Len  : aliased C.int := Sin'Size / 8;\n@@ -1018,8 +1015,7 @@ package body GNAT.Sockets is\n    function Get_Socket_Option\n      (Socket : Socket_Type;\n       Level  : Level_Type := Socket_Level;\n-      Name   : Option_Name)\n-      return   Option_Type\n+      Name   : Option_Name) return Option_Type\n    is\n       use type C.unsigned_char;\n \n@@ -1087,8 +1083,8 @@ package body GNAT.Sockets is\n \n          when Add_Membership  |\n               Drop_Membership =>\n-            Opt.Multiaddr := To_Inet_Addr (To_In_Addr (V8 (V8'First)));\n-            Opt.Interface := To_Inet_Addr (To_In_Addr (V8 (V8'Last)));\n+            Opt.Multicast_Address := To_Inet_Addr (To_In_Addr (V8 (V8'First)));\n+            Opt.Local_Interface   := To_Inet_Addr (To_In_Addr (V8 (V8'Last)));\n \n          when Multicast_TTL   =>\n             Opt.Time_To_Live := Integer (V1);\n@@ -1124,9 +1120,8 @@ package body GNAT.Sockets is\n    -----------\n \n    function Image\n-     (Val  : Inet_Addr_VN_Type;\n-      Hex  : Boolean := False)\n-      return String\n+     (Val : Inet_Addr_VN_Type;\n+      Hex : Boolean := False) return String\n    is\n       --  The largest Inet_Addr_Comp_Type image occurs with IPv4. It\n       --  has at most a length of 3 plus one '.' character.\n@@ -1141,6 +1136,10 @@ package body GNAT.Sockets is\n       procedure Img16 (V : Inet_Addr_Comp_Type);\n       --  Append to Buffer image of V in hexadecimal format\n \n+      -----------\n+      -- Img10 --\n+      -----------\n+\n       procedure Img10 (V : Inet_Addr_Comp_Type) is\n          Img : constant String := V'Img;\n          Len : constant Natural := Img'Length - 1;\n@@ -1150,6 +1149,10 @@ package body GNAT.Sockets is\n          Length := Length + Len;\n       end Img10;\n \n+      -----------\n+      -- Img16 --\n+      -----------\n+\n       procedure Img16 (V : Inet_Addr_Comp_Type) is\n       begin\n          Buffer (Length)     := Hex_To_Char (Natural (V / 16) + 1);\n@@ -1201,7 +1204,6 @@ package body GNAT.Sockets is\n \n    function Image (Value : Sock_Addr_Type) return String is\n       Port : constant String := Value.Port'Img;\n-\n    begin\n       return Image (Value.Addr) & ':' & Port (2 .. Port'Last);\n    end Image;\n@@ -1282,8 +1284,7 @@ package body GNAT.Sockets is\n \n    function Is_Set\n      (Item   : Socket_Set_Type;\n-      Socket : Socket_Type)\n-      return   Boolean\n+      Socket : Socket_Type) return Boolean\n    is\n    begin\n       return Item.Last /= No_Socket\n@@ -1299,10 +1300,8 @@ package body GNAT.Sockets is\n      (Socket : Socket_Type;\n       Length : Positive := 15)\n    is\n-      Res : C.int;\n-\n+      Res : constant C.int := C_Listen (C.int (Socket), C.int (Length));\n    begin\n-      Res := C_Listen (C.int (Socket), C.int (Length));\n       if Res = Failure then\n          Raise_Socket_Error (Socket_Errno);\n       end if;\n@@ -1314,7 +1313,6 @@ package body GNAT.Sockets is\n \n    procedure Narrow (Item : in out Socket_Set_Type) is\n       Last : aliased C.int := C.int (Item.Last);\n-\n    begin\n       if Item.Set /= No_Socket_Set then\n          Last_Socket_In_Set (Item.Set, Last'Unchecked_Access);\n@@ -1364,12 +1362,16 @@ package body GNAT.Sockets is\n \n    procedure Raise_Host_Error (Error : Integer) is\n \n-      function Error_Message return String;\n+      function Host_Error_Message return String;\n       --  We do not use a C function like strerror because hstrerror\n       --  that would correspond seems to be obsolete. Return\n       --  appropriate string for error value.\n \n-      function Error_Message return String is\n+      ------------------------\n+      -- Host_Error_Message --\n+      ------------------------\n+\n+      function Host_Error_Message return String is\n       begin\n          case Error is\n             when Constants.HOST_NOT_FOUND => return \"Host not found\";\n@@ -1378,12 +1380,12 @@ package body GNAT.Sockets is\n             when Constants.NO_DATA        => return \"No address\";\n             when others                   => return \"Unknown error\";\n          end case;\n-      end Error_Message;\n+      end Host_Error_Message;\n \n    --  Start of processing for Raise_Host_Error\n \n    begin\n-      Ada.Exceptions.Raise_Exception (Host_Error'Identity, Error_Message);\n+      Ada.Exceptions.Raise_Exception (Host_Error'Identity, Host_Error_Message);\n    end Raise_Host_Error;\n \n    ------------------------\n@@ -1394,13 +1396,20 @@ package body GNAT.Sockets is\n       use type C.Strings.chars_ptr;\n \n       function Image (E : Integer) return String;\n+\n+      -----------\n+      -- Image --\n+      -----------\n+\n       function Image (E : Integer) return String is\n          Msg : String := E'Img & \"] \";\n       begin\n          Msg (Msg'First) := '[';\n          return Msg;\n       end Image;\n \n+   --  Start of processing for Raise_Socket_Error\n+\n    begin\n       Ada.Exceptions.Raise_Exception\n         (Socket_Error'Identity,\n@@ -1507,9 +1516,9 @@ package body GNAT.Sockets is\n    is\n       use type Ada.Streams.Stream_Element_Offset;\n \n-      Res  : C.int;\n-      Sin  : aliased Sockaddr_In;\n-      Len  : aliased C.int := Sin'Size / 8;\n+      Res : C.int;\n+      Sin : aliased Sockaddr_In;\n+      Len : aliased C.int := Sin'Size / 8;\n \n    begin\n       Res :=\n@@ -1537,8 +1546,7 @@ package body GNAT.Sockets is\n \n    function Resolve_Error\n      (Error_Value : Integer;\n-      From_Errno  : Boolean := True)\n-      return        Error_Type\n+      From_Errno  : Boolean := True) return Error_Type\n    is\n       use GNAT.Sockets.Constants;\n \n@@ -1608,8 +1616,7 @@ package body GNAT.Sockets is\n    -----------------------\n \n    function Resolve_Exception\n-     (Occurrence : Exception_Occurrence)\n-      return       Error_Type\n+     (Occurrence : Exception_Occurrence) return Error_Type\n    is\n       Id    : constant Exception_Id := Exception_Identity (Occurrence);\n       Msg   : constant String       := Exception_Message (Occurrence);\n@@ -1640,10 +1647,8 @@ package body GNAT.Sockets is\n \n       if Id = Socket_Error_Id then\n          return Resolve_Error (Val);\n-\n       elsif Id = Host_Error_Id then\n          return Resolve_Error (Val, False);\n-\n       else\n          return Cannot_Resolve_Error;\n       end if;\n@@ -1694,7 +1699,7 @@ package body GNAT.Sockets is\n           (C.int (Socket),\n            Item (Item'First)'Address,\n            Item'Length,\n-           To_Int (Flags));\n+           Set_Forced_Flags (To_Int (Flags)));\n \n       if Res = Failure then\n          Raise_Socket_Error (Socket_Errno);\n@@ -1732,7 +1737,7 @@ package body GNAT.Sockets is\n         (C.int (Socket),\n          Item (Item'First)'Address,\n          Item'Length,\n-         To_Int (Flags),\n+         Set_Forced_Flags (To_Int (Flags)),\n          Sin'Unchecked_Access,\n          Len);\n \n@@ -1753,6 +1758,7 @@ package body GNAT.Sockets is\n       Count  : out Ada.Streams.Stream_Element_Count)\n    is\n       Res : C.int;\n+\n    begin\n       Res :=\n         C_Writev\n@@ -1784,6 +1790,20 @@ package body GNAT.Sockets is\n       Insert_Socket_In_Set (Item.Set, C.int (Socket));\n    end Set;\n \n+   ----------------------\n+   -- Set_Forced_Flags --\n+   ----------------------\n+\n+   function Set_Forced_Flags (F : C.int) return C.int is\n+      use type C.unsigned;\n+      function To_unsigned is\n+        new Ada.Unchecked_Conversion (C.int, C.unsigned);\n+      function To_int is\n+        new Ada.Unchecked_Conversion (C.unsigned, C.int);\n+   begin\n+      return To_int (To_unsigned (F) or Constants.MSG_Forced_Flags);\n+   end Set_Forced_Flags;\n+\n    -----------------------\n    -- Set_Socket_Option --\n    -----------------------\n@@ -1829,8 +1849,8 @@ package body GNAT.Sockets is\n \n          when Add_Membership  |\n               Drop_Membership =>\n-            V8 (V8'First) := To_Int (To_In_Addr (Option.Multiaddr));\n-            V8 (V8'Last)  := To_Int (To_In_Addr (Option.Interface));\n+            V8 (V8'First) := To_Int (To_In_Addr (Option.Multicast_Address));\n+            V8 (V8'Last)  := To_Int (To_In_Addr (Option.Local_Interface));\n             Len := V8'Size / 8;\n             Add := V8'Address;\n \n@@ -1908,8 +1928,7 @@ package body GNAT.Sockets is\n \n    function Stream\n      (Socket  : Socket_Type;\n-      Send_To : Sock_Addr_Type)\n-      return    Stream_Access\n+      Send_To : Sock_Addr_Type) return Stream_Access\n    is\n       S : Datagram_Socket_Stream_Access;\n \n@@ -1966,10 +1985,10 @@ package body GNAT.Sockets is\n       --  H_Length is not used because it is currently only set to 4.\n       --  H_Addrtype is always AF_INET\n \n-      Result    : Host_Entry_Type\n-        (Aliases_Length   => Aliases'Length - 1,\n-         Addresses_Length => Addresses'Length - 1);\n-      --  The last element is a null pointer.\n+      Result : Host_Entry_Type\n+                 (Aliases_Length   => Aliases'Length - 1,\n+                  Addresses_Length => Addresses'Length - 1);\n+      --  The last element is a null pointer\n \n       Source : C.size_t;\n       Target : Natural;\n@@ -2019,17 +2038,14 @@ package body GNAT.Sockets is\n    ------------------\n \n    function To_Inet_Addr\n-     (Addr : In_Addr)\n-      return Inet_Addr_Type\n+     (Addr : In_Addr) return Inet_Addr_Type\n    is\n       Result : Inet_Addr_Type;\n-\n    begin\n       Result.Sin_V4 (1) := Inet_Addr_Comp_Type (Addr.S_B1);\n       Result.Sin_V4 (2) := Inet_Addr_Comp_Type (Addr.S_B2);\n       Result.Sin_V4 (3) := Inet_Addr_Comp_Type (Addr.S_B3);\n       Result.Sin_V4 (4) := Inet_Addr_Comp_Type (Addr.S_B4);\n-\n       return Result;\n    end To_Inet_Addr;\n \n@@ -2088,7 +2104,7 @@ package body GNAT.Sockets is\n \n       Result   : Service_Entry_Type\n         (Aliases_Length   => Aliases'Length - 1);\n-      --  The last element is a null pointer.\n+      --  The last element is a null pointer\n \n       Source : C.size_t;\n       Target : Natural;\n@@ -2138,6 +2154,7 @@ package body GNAT.Sockets is\n          MS := 0;\n \n       --  Normal case where we do round down\n+\n       else\n          S  := Timeval_Unit (Val - 0.5);\n          MS := Timeval_Unit (1_000_000 * (Val - Selector_Duration (S)));"}, {"sha": "c2c447992ac0a4bc21ea2bc2464f7bfe81559a05", "filename": "gcc/ada/g-socket.ads", "status": "modified", "additions": 44, "deletions": 62, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960/gcc%2Fada%2Fg-socket.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960/gcc%2Fada%2Fg-socket.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.ads?ref=d6c7ed5017ae925f18acde16f02f9a0ed2f1b960", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---              Copyright (C) 2001-2003 Ada Core Technologies, Inc.         --\n+--              Copyright (C) 2001-2004 Ada Core Technologies, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -399,35 +399,32 @@ package GNAT.Sockets is\n    No_Socket : constant Socket_Type;\n \n    Socket_Error : exception;\n-   --  There is only one exception in this package to deal with an\n-   --  error during a socket routine. Once raised, its message\n-   --  contains a string describing the error code.\n+   --  There is only one exception in this package to deal with an error during\n+   --  a socket routine. Once raised, its message contains a string describing\n+   --  the error code.\n \n    function Image (Socket : Socket_Type) return String;\n    --  Return a printable string for Socket\n \n    function To_C (Socket : Socket_Type) return Integer;\n-   --  Return a file descriptor to be used by external subprograms\n-   --  especially the C functions that are not yet interfaced in this\n-   --  package.\n+   --  Return a file descriptor to be used by external subprograms. This is\n+   --  useful for C functions that are not yet interfaced in this package.\n \n    type Family_Type is (Family_Inet, Family_Inet6);\n-   --  Address family (or protocol family) identifies the\n-   --  communication domain and groups protocols with similar address\n-   --  formats. IPv6 will soon be supported.\n+   --  Address family (or protocol family) identifies the communication domain\n+   --  and groups protocols with similar address formats. IPv6 will soon be\n+   --  supported.\n \n    type Mode_Type is (Socket_Stream, Socket_Datagram);\n-   --  Stream sockets provide connection-oriented byte\n-   --  streams. Datagram sockets support unreliable connectionless\n-   --  message based communication.\n+   --  Stream sockets provide connection-oriented byte streams. Datagram\n+   --  sockets support unreliable connectionless message based communication.\n \n    type Shutmode_Type is (Shut_Read, Shut_Write, Shut_Read_Write);\n-   --  When a process closes a socket, the policy is to retain any\n-   --  data queued until either a delivery or a timeout expiration (in\n-   --  this case, the data are discarded). A finer control is\n-   --  available through shutdown. With Shut_Read, no more data can be\n-   --  received from the socket. With_Write, no more data can be\n-   --  transmitted. Neither transmission nor reception can be\n+   --  When a process closes a socket, the policy is to retain any data queued\n+   --  until either a delivery or a timeout expiration (in this case, the data\n+   --  are discarded). A finer control is available through shutdown. With\n+   --  Shut_Read, no more data can be received from the socket. With_Write, no\n+   --  more data can be transmitted. Neither transmission nor reception can be\n    --  performed with Shut_Read_Write.\n \n    type Port_Type is new Natural;\n@@ -440,8 +437,8 @@ package GNAT.Sockets is\n \n    type Inet_Addr_Type (Family : Family_Type := Family_Inet) is private;\n    --  An Internet address depends on an address family (IPv4 contains\n-   --  4 octets and Ipv6 contains 16 octets). Any_Inet_Address is a\n-   --  special value treated like a wildcard enabling all addresses.\n+   --  4 octets and Ipv6 contains 16 octets). Any_Inet_Addr is a special\n+   --  value treated like a wildcard enabling all addresses.\n    --  No_Inet_Addr provides a special value to denote uninitialized\n    --  inet addresses.\n \n@@ -488,15 +485,13 @@ package GNAT.Sockets is\n    --  Return number of addresses in host entry\n \n    function Aliases\n-     (E    : Host_Entry_Type;\n-      N    : Positive := 1)\n-      return String;\n+     (E : Host_Entry_Type;\n+      N : Positive := 1) return String;\n    --  Return N'th aliases in host entry. The first index is 1.\n \n    function Addresses\n-     (E    : Host_Entry_Type;\n-      N    : Positive := 1)\n-      return Inet_Addr_Type;\n+     (E : Host_Entry_Type;\n+      N : Positive := 1) return Inet_Addr_Type;\n    --  Return N'th addresses in host entry. The first index is 1.\n \n    Host_Error : exception;\n@@ -506,25 +501,22 @@ package GNAT.Sockets is\n \n    function Get_Host_By_Address\n      (Address : Inet_Addr_Type;\n-      Family  : Family_Type := Family_Inet)\n-      return    Host_Entry_Type;\n+      Family  : Family_Type := Family_Inet) return Host_Entry_Type;\n    --  Return host entry structure for the given inet address\n \n    function Get_Host_By_Name\n-     (Name : String)\n-      return Host_Entry_Type;\n+     (Name : String) return Host_Entry_Type;\n    --  Return host entry structure for the given host name. Here name\n    --  is either a host name, or an IP address.\n \n    function Host_Name return String;\n    --  Return the name of the current host\n \n+   type Service_Entry_Type (Aliases_Length : Natural) is private;\n    --  Service entries provide complete information on a given\n    --  service: the official name, an array of alternative names or\n    --  aliases and the port number.\n \n-   type Service_Entry_Type (Aliases_Length : Natural) is private;\n-\n    function Official_Name (S : Service_Entry_Type) return String;\n    --  Return official name in service entry\n \n@@ -538,31 +530,29 @@ package GNAT.Sockets is\n    --  Return number of aliases in service entry\n \n    function Aliases\n-     (S    : Service_Entry_Type;\n-      N    : Positive := 1)\n-      return String;\n+     (S : Service_Entry_Type;\n+      N : Positive := 1) return String;\n    --  Return N'th aliases in service entry. The first index is 1.\n \n    function Get_Service_By_Name\n      (Name     : String;\n-      Protocol : String)\n-      return     Service_Entry_Type;\n+      Protocol : String) return Service_Entry_Type;\n    --  Return service entry structure for the given service name\n \n    function Get_Service_By_Port\n      (Port     : Port_Type;\n-      Protocol : String)\n-      return     Service_Entry_Type;\n+      Protocol : String) return Service_Entry_Type;\n    --  Return service entry structure for the given service port number\n \n    Service_Error : exception;\n+   --  Comment required ???\n \n    --  Errors are described by an enumeration type. There is only one\n    --  exception Socket_Error in this package to deal with an error\n    --  during a socket routine. Once raised, its message contains the\n    --  error code between brackets and a string describing the error code.\n \n-   --  The name of the enumeration constant documents the error condition.\n+   --  The name of the enumeration constant documents the error condition\n \n    type Error_Type is\n      (Success,\n@@ -665,8 +655,8 @@ package GNAT.Sockets is\n \n          when Add_Membership  |\n               Drop_Membership =>\n-            Multiaddr : Inet_Addr_Type;\n-            Interface : Inet_Addr_Type;\n+            Multicast_Address : Inet_Addr_Type;\n+            Local_Interface   : Inet_Addr_Type;\n \n          when Multicast_TTL   =>\n             Time_To_Live : Natural;\n@@ -786,8 +776,7 @@ package GNAT.Sockets is\n    function Get_Socket_Option\n      (Socket : Socket_Type;\n       Level  : Level_Type := Socket_Level;\n-      Name   : Option_Name)\n-      return   Option_Type;\n+      Name   : Option_Name) return Option_Type;\n    --  Get the options associated with a socket. Raises Socket_Error\n    --  on error.\n \n@@ -830,8 +819,7 @@ package GNAT.Sockets is\n    --  elements Vector. Count is set to the count of received stream elements.\n \n    function Resolve_Exception\n-     (Occurrence : Ada.Exceptions.Exception_Occurrence)\n-      return       Error_Type;\n+     (Occurrence : Ada.Exceptions.Exception_Occurrence) return Error_Type;\n    --  When Socket_Error or Host_Error are raised, the exception\n    --  message contains the error code between brackets and a string\n    --  describing the error code. Resolve_Error extracts the error\n@@ -884,24 +872,20 @@ package GNAT.Sockets is\n    --  Same interface as Ada.Streams.Stream_IO\n \n    function Stream\n-     (Socket : Socket_Type)\n-      return   Stream_Access;\n+     (Socket : Socket_Type) return Stream_Access;\n    --  Create a stream associated with a stream-based socket that is\n    --  already connected.\n \n    function Stream\n      (Socket  : Socket_Type;\n-      Send_To : Sock_Addr_Type)\n-      return    Stream_Access;\n+      Send_To : Sock_Addr_Type) return Stream_Access;\n    --  Create a stream associated with a datagram-based socket that is\n    --  already bound. Send_To is the socket address to which messages are\n    --  being sent.\n \n    function Get_Address\n-     (Stream : Stream_Access)\n-      return   Sock_Addr_Type;\n-   --  Return the socket address from which the last message was\n-   --  received.\n+     (Stream : Stream_Access) return Sock_Addr_Type;\n+   --  Return the socket address from which the last message was received.\n \n    procedure Free is new Ada.Unchecked_Deallocation\n      (Ada.Streams.Root_Stream_Type'Class, Stream_Access);\n@@ -930,17 +914,15 @@ package GNAT.Sockets is\n    --  No_Socket when the set is empty.\n \n    function Is_Empty\n-     (Item  : Socket_Set_Type)\n-      return  Boolean;\n-   --  Return True if Item is empty\n+     (Item : Socket_Set_Type) return Boolean;\n+   --  Return True iff Item is empty\n \n    function Is_Set\n      (Item   : Socket_Set_Type;\n-      Socket : Socket_Type)\n-      return   Boolean;\n-   --  Return True if Socket is present in Item\n+      Socket : Socket_Type) return Boolean;\n+   --  Return True iff Socket is present in Item\n \n-   procedure Set   (Item : in out Socket_Set_Type; Socket : Socket_Type);\n+   procedure Set (Item : in out Socket_Set_Type; Socket : Socket_Type);\n    --  Insert Socket into Item\n \n    --  C select() waits for a number of file descriptors to change"}, {"sha": "26c5e627491640922951f9c5a1c6003802649ee8", "filename": "gcc/ada/g-socthi.adb", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960/gcc%2Fada%2Fg-socthi.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960/gcc%2Fada%2Fg-socthi.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi.adb?ref=d6c7ed5017ae925f18acde16f02f9a0ed2f1b960", "patch": "@@ -61,10 +61,13 @@ package body GNAT.Sockets.Thin is\n    --  two attempts on a blocking operation.\n \n    Thread_Blocking_IO : Boolean := True;\n+   --  Comment required for this ???\n \n    Unknown_System_Error : constant C.Strings.chars_ptr :=\n                             C.Strings.New_String (\"Unknown system error\");\n \n+   --  Comments required for following functions ???\n+\n    function Syscall_Accept\n      (S       : C.int;\n       Addr    : System.Address;\n@@ -121,6 +124,9 @@ package body GNAT.Sockets.Thin is\n       Protocol : C.int) return C.int;\n    pragma Import (C, Syscall_Socket, \"socket\");\n \n+   procedure Disable_SIGPIPE (S : C.int);\n+   pragma Import (C, Disable_SIGPIPE, \"__gnat_disable_sigpipe\");\n+\n    function  Non_Blocking_Socket (S : C.int) return Boolean;\n    procedure Set_Non_Blocking_Socket (S : C.int; V : Boolean);\n \n@@ -160,6 +166,7 @@ package body GNAT.Sockets.Thin is\n          Discard := Syscall_Ioctl (R, Constants.FIONBIO, Val'Unchecked_Access);\n       end if;\n \n+      Disable_SIGPIPE (R);\n       return R;\n    end C_Accept;\n \n@@ -377,7 +384,7 @@ package body GNAT.Sockets.Thin is\n          Discard := Syscall_Ioctl (R, Constants.FIONBIO, Val'Unchecked_Access);\n          Set_Non_Blocking_Socket (R, False);\n       end if;\n-\n+      Disable_SIGPIPE (R);\n       return R;\n    end C_Socket;\n "}, {"sha": "6f5067fcabecf69848b4960e55fe887152c55000", "filename": "gcc/ada/socket.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960/gcc%2Fada%2Fsocket.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c7ed5017ae925f18acde16f02f9a0ed2f1b960/gcc%2Fada%2Fsocket.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsocket.c?ref=d6c7ed5017ae925f18acde16f02f9a0ed2f1b960", "patch": "@@ -64,8 +64,13 @@\n #include \"system.h\"\n #endif\n \n+#if !(defined (VMS) || defined (__MINGW32__))\n+# include <sys/socket.h>\n+#endif\n+\n #include \"raise.h\"\n \n+extern void __gnat_disable_sigpipe (int fd);\n extern void __gnat_free_socket_set (fd_set *);\n extern void __gnat_last_socket_in_set (fd_set *, int *);\n extern void __gnat_get_socket_from_set (fd_set *, int *, int *);\n@@ -74,6 +79,16 @@ extern int __gnat_is_socket_in_set (fd_set *, int);\n extern fd_set *__gnat_new_socket_set (fd_set *);\n extern void __gnat_remove_socket_from_set (fd_set *, int);\n \f\n+/* Disable the sending of SIGPIPE for writes on a broken stream */\n+void\n+__gnat_disable_sigpipe (int fd)\n+{\n+#ifdef SO_NOSIGPIPE\n+  int val = 1;\n+  (void) setsockopt (fd, SOL_SOCKET, SO_NOSIGPIPE, &val, sizeof val);\n+#endif\n+}\n+\n /* Free socket set. */\n \n void"}]}