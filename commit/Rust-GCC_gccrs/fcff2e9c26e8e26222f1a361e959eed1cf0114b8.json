{"sha": "fcff2e9c26e8e26222f1a361e959eed1cf0114b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmNmZjJlOWMyNmU4ZTI2MjIyZjFhMzYxZTk1OWVlZDFjZjAxMTRiOA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-12-04T12:47:25Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-12-04T12:47:25Z"}, "message": "re PR target/51393 (Wrong parameter type for _mm256_insert_epi64 in avxintrin.h)\n\n\tPR target/51393\n\t* config/i386/avxintrin.h (_mm256_insert_epi64): Declare second\n\tparameter as long long.\n\ntestsuite/ChangeLog:\n\n2011-12-04  Uros Bizjak  <ubizjak@gmail.com>\n\t    J\u00e9r\u00e9mie Detrey  <Jeremie.Detrey@loria.fr>\n\n\tPR target/51393\n\t* gcc.target/i386/pr51393.c: New test.\n\nFrom-SVN: r181986", "tree": {"sha": "d3d0d5c87d9f7ad5d2543b05f5db8e32eb2db3ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3d0d5c87d9f7ad5d2543b05f5db8e32eb2db3ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fcff2e9c26e8e26222f1a361e959eed1cf0114b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcff2e9c26e8e26222f1a361e959eed1cf0114b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcff2e9c26e8e26222f1a361e959eed1cf0114b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcff2e9c26e8e26222f1a361e959eed1cf0114b8/comments", "author": null, "committer": null, "parents": [{"sha": "ff47a1512483ffaa73e4473de245fa4c308b0d2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff47a1512483ffaa73e4473de245fa4c308b0d2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff47a1512483ffaa73e4473de245fa4c308b0d2d"}], "stats": {"total": 104, "additions": 67, "deletions": 37}, "files": [{"sha": "222ff20d546cfa9abcb8bf0ed51555614b7aa9a4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 38, "deletions": 35, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcff2e9c26e8e26222f1a361e959eed1cf0114b8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcff2e9c26e8e26222f1a361e959eed1cf0114b8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fcff2e9c26e8e26222f1a361e959eed1cf0114b8", "patch": "@@ -1,3 +1,9 @@\n+2011-12-04  J\u00e9r\u00e9mie Detrey  <Jeremie.Detrey@loria.fr>\n+\n+\tPR target/51393\n+\t* config/i386/avxintrin.h (_mm256_insert_epi64): Declare second\n+\tparameter as long long.\n+\n 2011-12-04  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \tPR middle-end/51351\n@@ -6,12 +12,12 @@\n \n 2011-12-03  Jack Howarth <howarth@bromo.med.uc.edu>\n \n-\t* config/darwin10.h (LINK_GCC_C_SEQUENCE_SPEC):\n-\t  Pass -no_pie for non-PIC code when targeting 10.7 or later.\n+\t* config/darwin10.h (LINK_GCC_C_SEQUENCE_SPEC): Pass -no_pie for\n+\tnon-PIC code when targeting 10.7 or later.\n \n 2011-12-03  Iain Sandoe  <iains@gcc.gnu.org>\n \n-\t* config/darwin.h (STARTFILE_SPEC): Do not use -lbundle1.o when \n+\t* config/darwin.h (STARTFILE_SPEC): Do not use -lbundle1.o when\n \tDarwin >= 10.\n \t(DARWIN_DYLIB1_SPEC): Do not use -ldylib1.10.5.o when Darwin >= 10.\n \t(DARWIN_CRT1_SPEC): Use -lcrt1.10.6.o when Darwin >= 10.\n@@ -129,33 +135,31 @@\n \tTARGET_SH3.\n \t(shl_sext_kind): Likewise.\n \t* config/sh/sh.h (SH_DYNAMIC_SHIFT_COST): Likewise.\n-\t* config/sh/sh.md (ashlsi3_sh2a, ashrsi3_sh2a, lshrsi3_sh2a):\n-\tRemove.\n+\t* config/sh/sh.md (ashlsi3_sh2a, ashrsi3_sh2a, lshrsi3_sh2a): Remove.\n \t(ashlsi3_std): Handle TARGET_SH2A same as TARGET_SH3.\n \t(ashlsi3): Likewise.\n \t(ashrsi3_d): Likewise.\n \t(lshrsi3_d): Likewise.\n \t(lshrsi3): Likewise.\n \n-2011-12-01   Diego Novillo  <dnovillo@google.com>\n+2011-12-01  Diego Novillo  <dnovillo@google.com>\n \n \tPR bootstrap/51346\n-\t* ipa-inline.c (can_inline_edge_p): If the edge E has a\n-\tstatement, use the statement's inline indicator instead\n-\tof E's.\n+\t* ipa-inline.c (can_inline_edge_p): If the edge E has a statement,\n+\tuse the statement's inline indicator instead of E's.\n \tRemove consistency check.\n \n-2011-12-01   Diego Novillo  <dnovillo@google.com>\n+2011-12-01  Diego Novillo  <dnovillo@google.com>\n \n \tPR bootstrap/51346\n \tRevert\n \n-\t2011-11-29   Diego Novillo  <dnovillo@google.com>\n+\t2011-11-29  Diego Novillo  <dnovillo@google.com>\n \n-\t\t* gimple.c (gimple_call_set_cannot_inline): Move from gimple.h.\n-\t\tUpdate field call_stmt_cannot_inline_p from call\n-\t\tgraph edge, if needed.\n-\t\t* gimple.h (gimple_call_set_cannot_inline): Move to gimple.c.\n+\t* gimple.c (gimple_call_set_cannot_inline): Move from gimple.h.\n+\tUpdate field call_stmt_cannot_inline_p from call\n+\tgraph edge, if needed.\n+\t* gimple.h (gimple_call_set_cannot_inline): Move to gimple.c.\n \n 2011-12-01  Nathan Sidwell  <nathan@acm.org>\n \n@@ -180,7 +184,7 @@\n \n \tPR middle-end/51273\n \t* cgraph.h (cgraph_call_node_duplication_hooks): Declare.\n-\t* cgraph.c (cgraph_call_node_duplication_hooks): Make global. \n+\t* cgraph.c (cgraph_call_node_duplication_hooks): Make global.\n \t* cgraphunit.c (cgraph_copy_node_for_versioning): Call it.\n \n 2011-12-01  Andrew Pinski  <apinski@cavium.com>\n@@ -192,8 +196,7 @@\n 2011-12-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/51246\n-\t* tree-predcom.c (replace_ref_with): Handle also clobber on the\n-\trhs.\n+\t* tree-predcom.c (replace_ref_with): Handle also clobber on the rhs.\n \n \tPR rtl-optimization/51014\n \t* loop-unroll.c (apply_opt_in_copies): Ignore label DEBUG_INSNs\n@@ -478,7 +481,7 @@\n \tcode checking for a clobber of a condition register when deciding\n \twhether to predicate.\n \n-2011-11-29   Diego Novillo  <dnovillo@google.com>\n+2011-11-29  Diego Novillo  <dnovillo@google.com>\n \n \t* gimple.c (gimple_call_set_cannot_inline): Move from gimple.h.\n \tUpdate field call_stmt_cannot_inline_p from call graph edge, if needed.\n@@ -7410,7 +7413,7 @@\n \t(duplicate_insns_of_cycles): Use register indices directly,\n \trather than finding instructions using PREV_INSN.  Use ps_reg_move.\n \t(sms_schedule): Call schedule_reg_moves before committing to\n-\ta partial schedule.   Try the next ii if the schedule fails.\n+\ta partial schedule.  Try the next ii if the schedule fails.\n \tUse apply_reg_moves instead of generate_reg_moves.  Adjust\n \tcall to print_node_sched_params.  Free node_sched_param_vec\n \tinstead of node_sched_params.\n@@ -8566,18 +8569,18 @@\n \t(remove_duplicate_close_phi): Detect and repair creation of\n \tduplicate close-phis for a containing loop.\n \n-2011-09-27   Andi Kleen <ak@linux.intel.com>\n+2011-09-27  Andi Kleen  <ak@linux.intel.com>\n \n \t* gcc.c (get_local_tick). Rename to get_random_number.  Read from\n \t/dev/urandom.  Add getpid call.\n \t(compare_debug_dump_opt_spec_function): Drop getpid call.\n \n-2011-09-26   Andi Kleen <ak@linux.intel.com>\n+2011-09-26  Andi Kleen  <ak@linux.intel.com>\n \n \t* toplev.c (init_local_tick): Try reading random seed\n \tfrom /dev/urandom.\n \n-2011-09-26   Andi Kleen <ak@linux.intel.com>\n+2011-09-26  Andi Kleen  <ak@linux.intel.com>\n \n \t* hwint.h (HOST_WIDE_INT_PRINT_HEX_PURE): Add.\n \t* lto-streamer.c (lto_get_section_name): Remove crc32_string.\n@@ -9685,13 +9688,13 @@\n \tHImode by 1 in the case of multiplying with a CONST_INT.\n \tRecord cost of *ashiftqihi2.signx.1 in case ASHIFT:QI.\n \n-2011-09-15   Jan Hubicka  <jh@suse.cz>\n+2011-09-15  Jan Hubicka  <jh@suse.cz>\n \n \tPR lto/50430\n \t* gimple-fold.c (gimple_get_virt_method_for_binfo): Do not ICE on\n \terror_mark_node in the DECL_INITIAL of vtable.\n \n-2011-09-15   Diego Novillo  <dnovillo@google.com>\n+2011-09-15  Diego Novillo  <dnovillo@google.com>\n \n \t* Makefile.in (SYSROOT_CFLAGS_FOR_TARGET): Define from\n \t@SYSROOT_CFLAGS_FOR_TARGET@.\n@@ -12906,15 +12909,15 @@\n \tseparately.\n \t* tree-ssa-uninit.c (warn_uninitialized_phi): Adjust.\n \n-2011-08-11   Kazuhiro Inaoka  <kazuhiro.inaoka.ud@renesas.com>\n+2011-08-11  Kazuhiro Inaoka  <kazuhiro.inaoka.ud@renesas.com>\n \n \t* config/rx/rx.md (movsicc): Allow register to register transfers.\n \t(*movsicc): Likewise.\n \t(*stcc): Restrict this pattern to EQ and NE compares.\n \t(*stcc_reg): New pattern.  Works for any comparison but only for\n \tregister transfers.\n \n-2011-08-11   Diego Novillo  <dnovillo@google.com>\n+2011-08-11  Diego Novillo  <dnovillo@google.com>\n \n \t* tree-streamer-out.c (lto_output_ts_decl_with_vis_tree_pointers):\n \tCall stream_write_tree instead of output_record_start.\n@@ -13252,7 +13255,7 @@\n \t* tree-sra.c (access_precludes_ipa_sra_p): Also check access\n \tmemory alignment.\n \n-2011-08-08   Diego Novillo  <dnovillo@google.com>\n+2011-08-08  Diego Novillo  <dnovillo@google.com>\n \n \t* Makefile.in (LTO_STREAMER_H): Add DIAGNOSTIC_H.\n \t(DATA_STREAMER_H): New.\n@@ -13579,7 +13582,7 @@\n \t(TARGET_INSTANTIATE_DECLS): New define.\n \n 2011-08-06  Paolo Bonzini  <bonzini@gnu.org>\n-\t    Mikael Morin   <mikael.morin@sfr.fr>\n+\t    Mikael Morin  <mikael.morin@sfr.fr>\n \n \t* Makefile.in (INCLUDES_FOR_TARGET): New.\n \t(LIBGCC2_CFLAGS): Use it.\n@@ -14013,12 +14016,12 @@\n \t* config/arm/arm.c (arm_set_fixed_optab_libfunc): Constify\n \tmaybe_suffix.\n \n-2011-08-03   David Li  <davidxl@google.com>\n+2011-08-03  David Li  <davidxl@google.com>\n \n \t* tree-optimize.c (execute_fixup_cfg): Fix up entry\n \toutgoing edge counts after inlining.\n \n-2011-08-03   David Li  <davidxl@google.com>\n+2011-08-03  David Li  <davidxl@google.com>\n \n \t* profile.c (compute_branch_probabilities): Compute\n \tfunction frequency after profile annotation.\n@@ -20559,8 +20562,8 @@\n \t* config/arm/neon.md (vec_pack_trunc): Set the lengths\n \tcorrectly for the case with Quad vectors.\n \n-2011-06-13 Jakub Jelinek  <jakub@redhat.com>\n-\t   Ira Rosen  <ira.rosen@linaro.org>\n+2011-06-13  Jakub Jelinek  <jakub@redhat.com>\n+\t    Ira Rosen  <ira.rosen@linaro.org>\n \n \tPR tree-optimization/49352\n \t* tree-vect-loop.c (vect_is_slp_reduction): Don't count debug uses at\n@@ -21532,7 +21535,7 @@\n \t* calls.c (emit_call_1): Prefer the __builtin declaration of\n \tbuiltin functions.\n \n-2011-06-03   Diego Novillo  <dnovillo@google.com>\n+2011-06-03  Diego Novillo  <dnovillo@google.com>\n \n \t* lto-streamer-in.c (unpack_value_fields): Remove unneeded asserts.\n \t(lto_input_tree_pointers): Likewise.\n@@ -25530,7 +25533,7 @@\n \t* config/m68k/m68k.c (m68k_expand_prologue): Set\n \tcurrent_function_static_stack_size.\n \n-2011-05-02   Jan Hubicka  <jh@suse.cz>\n+2011-05-02  Jan Hubicka  <jh@suse.cz>\n \n \t* lto-streamer.c (lto_streamer_cache_insert_1,\n \tlto_streamer_cache_lookup, lto_streamer_cache_create,"}, {"sha": "6d4213dc8bd5e13068c2efb806d36bdb27167bae", "filename": "gcc/config/i386/avxintrin.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcff2e9c26e8e26222f1a361e959eed1cf0114b8/gcc%2Fconfig%2Fi386%2Favxintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcff2e9c26e8e26222f1a361e959eed1cf0114b8/gcc%2Fconfig%2Fi386%2Favxintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favxintrin.h?ref=fcff2e9c26e8e26222f1a361e959eed1cf0114b8", "patch": "@@ -759,7 +759,7 @@ _mm256_insert_epi8 (__m256i __X, int __D, int const __N)\n \n #ifdef __x86_64__\n extern __inline __m256i __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n-_mm256_insert_epi64 (__m256i __X, int __D, int const __N)\n+_mm256_insert_epi64 (__m256i __X, long long __D, int const __N)\n {\n   __m128i __Y = _mm256_extractf128_si256 (__X, __N >> 1);\n   __Y = _mm_insert_epi64 (__Y, __D, __N % 2);"}, {"sha": "7b048bf0615403724eb41e43080813ade6a894f9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcff2e9c26e8e26222f1a361e959eed1cf0114b8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcff2e9c26e8e26222f1a361e959eed1cf0114b8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fcff2e9c26e8e26222f1a361e959eed1cf0114b8", "patch": "@@ -1,3 +1,9 @@\n+2011-12-04  Uros Bizjak  <ubizjak@gmail.com>\n+\t    J\u00e9r\u00e9mie Detrey  <Jeremie.Detrey@loria.fr>\n+\n+\tPR target/51393\n+\t* gcc.target/i386/pr51393.c: New test.\n+\n 2011-12-03  Dominique d'Humieres  <dominiq@lps.ens.fr>\n \n \tPR obj-c++/51349\n@@ -3652,7 +3658,7 @@\n \n \t* gcc.dg/tree-ssa/foldconst-3.c: Don't use short enums.\n \n-2011-09-15   Diego Novillo  <dnovillo@google.com>\n+2011-09-15  Diego Novillo  <dnovillo@google.com>\n \n \t* lib/g++.exp (g++_init): Add $TEST_ALWAYS_FLAGS to\n \tALWAYS_CXXFLAGS, if defined."}, {"sha": "51175c87a1e52cd4ae4446f9b2c9a2ff050d635b", "filename": "gcc/testsuite/gcc.target/i386/pr51393.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcff2e9c26e8e26222f1a361e959eed1cf0114b8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr51393.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcff2e9c26e8e26222f1a361e959eed1cf0114b8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr51393.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr51393.c?ref=fcff2e9c26e8e26222f1a361e959eed1cf0114b8", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do run { target { ! { ia32 } } } } */\n+/* { dg-require-effective-target avx } */\n+/* { dg-options \"-O -mavx\" } */\n+\n+#include \"avx-check.h\"\n+#include <immintrin.h>\n+\n+static void\n+__attribute__((noinline))\n+avx_test (void)\n+{\n+  long long in = 0x800000000ll;\n+  long long out;\n+\n+  __m256i zero = _mm256_setzero_si256();\n+  __m256i tmp  = _mm256_insert_epi64 (zero, in, 0);\n+  out = _mm256_extract_epi64(tmp, 0);\n+\n+  if (in != out)\n+    abort ();\n+}"}]}