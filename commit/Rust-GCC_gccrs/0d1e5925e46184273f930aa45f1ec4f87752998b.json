{"sha": "0d1e5925e46184273f930aa45f1ec4f87752998b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQxZTU5MjVlNDYxODQyNzNmOTMwYWE0NWYxZWM0Zjg3NzUyOTk4Yg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-07-31T08:22:14Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-07-31T08:22:14Z"}, "message": "re PR tree-optimization/81603 (Various compiler UB on very large constant offsets)\n\n\tPR tree-optimization/81603\n\t* ipa-polymorphic-call.c\n\t(ipa_polymorphic_call_context::ipa_polymorphic_call_context): Perform\n\toffset arithmetic in offset_int, bail out if the resulting bit offset\n\tdoesn't fit into shwi.\n\nFrom-SVN: r250727", "tree": {"sha": "7be87901463f1ef62952085845540f55e078c437", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7be87901463f1ef62952085845540f55e078c437"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d1e5925e46184273f930aa45f1ec4f87752998b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d1e5925e46184273f930aa45f1ec4f87752998b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d1e5925e46184273f930aa45f1ec4f87752998b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d1e5925e46184273f930aa45f1ec4f87752998b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3dd9302511e2f2d01a14d5d7faa682c10a5c4d5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dd9302511e2f2d01a14d5d7faa682c10a5c4d5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3dd9302511e2f2d01a14d5d7faa682c10a5c4d5b"}], "stats": {"total": 27, "additions": 22, "deletions": 5}, "files": [{"sha": "318a98593518a1601d30d4b965a75348b02903bc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d1e5925e46184273f930aa45f1ec4f87752998b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d1e5925e46184273f930aa45f1ec4f87752998b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0d1e5925e46184273f930aa45f1ec4f87752998b", "patch": "@@ -1,3 +1,11 @@\n+2017-07-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/81603\n+\t* ipa-polymorphic-call.c\n+\t(ipa_polymorphic_call_context::ipa_polymorphic_call_context): Perform\n+\toffset arithmetic in offset_int, bail out if the resulting bit offset\n+\tdoesn't fit into shwi.\n+\n 2017-07-31  Martin Liska  <mliska@suse.cz>\n \n \t* gimplify.c (mostly_copy_tree_r): Remove Java specific hunk."}, {"sha": "9ac5153bf6716d5ed4a40ca885d74ae315153493", "filename": "gcc/ipa-polymorphic-call.c", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d1e5925e46184273f930aa45f1ec4f87752998b/gcc%2Fipa-polymorphic-call.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d1e5925e46184273f930aa45f1ec4f87752998b/gcc%2Fipa-polymorphic-call.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-polymorphic-call.c?ref=0d1e5925e46184273f930aa45f1ec4f87752998b", "patch": "@@ -921,9 +921,13 @@ ipa_polymorphic_call_context::ipa_polymorphic_call_context (tree fndecl,\n \t\t and MEM_REF is meaningless, but we can look futher.  */\n \t      if (TREE_CODE (base) == MEM_REF)\n \t\t{\n+\t\t  offset_int o = mem_ref_offset (base) * BITS_PER_UNIT;\n+\t\t  o += offset;\n+\t\t  o += offset2;\n+\t\t  if (!wi::fits_shwi_p (o))\n+\t\t    break;\n \t\t  base_pointer = TREE_OPERAND (base, 0);\n-\t\t  offset\n-\t\t    += offset2 + mem_ref_offset (base).to_short_addr () * BITS_PER_UNIT;\n+\t\t  offset = o.to_shwi ();\n \t\t  outer_type = NULL;\n \t\t}\n \t      /* We found base object.  In this case the outer_type\n@@ -961,10 +965,15 @@ ipa_polymorphic_call_context::ipa_polymorphic_call_context (tree fndecl,\n \t    break;\n \t}\n       else if (TREE_CODE (base_pointer) == POINTER_PLUS_EXPR\n-\t       && tree_fits_uhwi_p (TREE_OPERAND (base_pointer, 1)))\n+\t       && TREE_CODE (TREE_OPERAND (base_pointer, 1)) == INTEGER_CST)\n \t{\n-\t  offset += tree_to_shwi (TREE_OPERAND (base_pointer, 1))\n-\t\t    * BITS_PER_UNIT;\n+\t  offset_int o = offset_int::from (TREE_OPERAND (base_pointer, 1),\n+\t\t\t\t\t   SIGNED);\n+\t  o *= BITS_PER_UNIT;\n+\t  o += offset;\n+\t  if (!wi::fits_shwi_p (o))\n+\t    break;\n+\t  offset = o.to_shwi ();\n \t  base_pointer = TREE_OPERAND (base_pointer, 0);\n \t}\n       else"}]}