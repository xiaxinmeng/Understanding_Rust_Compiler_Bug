{"sha": "c19066a7694429e1d322295800e79dbbdf1c8320", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzE5MDY2YTc2OTQ0MjllMWQzMjIyOTU4MDBlNzlkYmJkZjFjODMyMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-10-28T08:11:57Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-10-28T08:11:57Z"}, "message": "re PR rtl-optimization/77919 (ICE converting DC to V2DF mode)\n\n\tPR rtl-optimization/77919\n\t* expr.c (expand_expr_real_1) <normal_inner_ref>: Force CONCAT into\n\tMEM if mode1 is not a complex mode.\n\n\t* g++.dg/torture/pr77919.C: New test.\n\nFrom-SVN: r241642", "tree": {"sha": "3e06ded62d22bf97b2e562e19f2c28c0942e365a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e06ded62d22bf97b2e562e19f2c28c0942e365a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c19066a7694429e1d322295800e79dbbdf1c8320", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c19066a7694429e1d322295800e79dbbdf1c8320", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c19066a7694429e1d322295800e79dbbdf1c8320", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c19066a7694429e1d322295800e79dbbdf1c8320/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0d9e143c62c7a68474a39de40e5d6104074eee96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d9e143c62c7a68474a39de40e5d6104074eee96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d9e143c62c7a68474a39de40e5d6104074eee96"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "95da0d1abf17fe6f5dea7169fb2ceed780c8ea34", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c19066a7694429e1d322295800e79dbbdf1c8320/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c19066a7694429e1d322295800e79dbbdf1c8320/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c19066a7694429e1d322295800e79dbbdf1c8320", "patch": "@@ -1,5 +1,9 @@\n 2016-10-28  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR rtl-optimization/77919\n+\t* expr.c (expand_expr_real_1) <normal_inner_ref>: Force CONCAT into\n+\tMEM if mode1 is not a complex mode.\n+\n \tPR rtl-optimization/78132\n \t* ree.c (combine_reaching_defs): Give up if copy_needed and\n \t!HARD_REGNO_MODE_OK (REGNO (src_reg), dst_mode)."}, {"sha": "6420e278f3d198e2ef1b122e832b87c0f816b1d5", "filename": "gcc/expr.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c19066a7694429e1d322295800e79dbbdf1c8320/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c19066a7694429e1d322295800e79dbbdf1c8320/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=c19066a7694429e1d322295800e79dbbdf1c8320", "patch": "@@ -10421,7 +10421,8 @@ expand_expr_real_1 (tree exp, rtx target, machine_mode tmode,\n \tif (GET_CODE (op0) == CONCAT && !must_force_mem)\n \t  {\n \t    if (bitpos == 0\n-\t\t&& bitsize == GET_MODE_BITSIZE (GET_MODE (op0)))\n+\t\t&& bitsize == GET_MODE_BITSIZE (GET_MODE (op0))\n+\t\t&& COMPLEX_MODE_P (mode1))\n \t      {\n \t\tif (reversep)\n \t\t  op0 = flip_storage_order (GET_MODE (op0), op0);"}, {"sha": "f13b2bdbba5d18582c69b1d5f67174a08b3fdfd3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c19066a7694429e1d322295800e79dbbdf1c8320/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c19066a7694429e1d322295800e79dbbdf1c8320/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c19066a7694429e1d322295800e79dbbdf1c8320", "patch": "@@ -1,5 +1,8 @@\n 2016-10-28  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR rtl-optimization/77919\n+\t* g++.dg/torture/pr77919.C: New test.\n+\n \tPR rtl-optimization/78132\n \t* gcc.target/i386/pr78132.c: New test.\n "}, {"sha": "cab6e909d36eef016438f7551a5ae05392e461a7", "filename": "gcc/testsuite/g++.dg/torture/pr77919.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c19066a7694429e1d322295800e79dbbdf1c8320/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr77919.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c19066a7694429e1d322295800e79dbbdf1c8320/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr77919.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr77919.C?ref=c19066a7694429e1d322295800e79dbbdf1c8320", "patch": "@@ -0,0 +1,11 @@\n+// PR rtl-optimization/77919\n+// { dg-do compile }\n+// { dg-additional-options \"-Wno-psabi\" }\n+\n+struct A { A (double) {} _Complex double i; };\n+typedef int __attribute__ ((vector_size (16))) B;\n+typedef struct { B b; } C;\n+struct D { D (const B &x) : b (x) {} B b; };\n+static inline B foo (const double *x) { C *a; a = (C *) x; return a->b; }\n+static inline D baz (const A &x) { return foo ((double *) &x); }\n+D b = baz (0);"}]}