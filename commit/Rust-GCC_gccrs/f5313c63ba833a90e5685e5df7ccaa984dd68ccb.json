{"sha": "f5313c63ba833a90e5685e5df7ccaa984dd68ccb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjUzMTNjNjNiYTgzM2E5MGU1Njg1ZTVkZjdjY2FhOTg0ZGQ2OGNjYg==", "commit": {"author": {"name": "Ian Bolton", "email": "ian.bolton@arm.com", "date": "2012-11-12T19:35:24Z"}, "committer": {"name": "Ian Bolton", "email": "ibolton@gcc.gnu.org", "date": "2012-11-12T19:35:24Z"}, "message": "Optimise comparison where intermediate result not used (AArch64)\n\nFrom-SVN: r193450", "tree": {"sha": "fa688a0a32bf3865d9ba2a0dfa6e080347990c73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa688a0a32bf3865d9ba2a0dfa6e080347990c73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5313c63ba833a90e5685e5df7ccaa984dd68ccb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5313c63ba833a90e5685e5df7ccaa984dd68ccb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5313c63ba833a90e5685e5df7ccaa984dd68ccb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5313c63ba833a90e5685e5df7ccaa984dd68ccb/comments", "author": null, "committer": null, "parents": [{"sha": "86f2731e6362430da0ff5761ee6e30dc8151c62b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86f2731e6362430da0ff5761ee6e30dc8151c62b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86f2731e6362430da0ff5761ee6e30dc8151c62b"}], "stats": {"total": 105, "additions": 105, "deletions": 0}, "files": [{"sha": "c03a235315a202bf13c34d49fba94e125920fc72", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5313c63ba833a90e5685e5df7ccaa984dd68ccb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5313c63ba833a90e5685e5df7ccaa984dd68ccb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f5313c63ba833a90e5685e5df7ccaa984dd68ccb", "patch": "@@ -1,3 +1,7 @@\n+2012-11-12  Ian Bolton  <ian.bolton@arm.com>\n+\n+\t* config/aarch64/aarch64.md (*compare_neg<mode>): New pattern.\n+\n 2012-11-12  Tobias Burnus  <burnus@net-b.de>\n \n \t* doc/invoke.texi: Move -faddress-sanitizer from Optimization"}, {"sha": "077a89e8d3ed4f5ab7cc9a65531e01435146d32f", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5313c63ba833a90e5685e5df7ccaa984dd68ccb/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5313c63ba833a90e5685e5df7ccaa984dd68ccb/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=f5313c63ba833a90e5685e5df7ccaa984dd68ccb", "patch": "@@ -1318,6 +1318,17 @@\n    (set_attr \"mode\" \"<MODE>\")]\n )\n \n+(define_insn \"*compare_neg<mode>\"\n+  [(set (reg:CC CC_REGNUM)\n+\t(compare:CC\n+\t (match_operand:GPI 0 \"register_operand\" \"r\")\n+\t (neg:GPI (match_operand:GPI 1 \"register_operand\" \"r\"))))]\n+  \"\"\n+  \"cmn\\\\t%<w>0, %<w>1\"\n+  [(set_attr \"v8type\" \"alus\")\n+   (set_attr \"mode\" \"<MODE>\")]\n+)\n+\n (define_insn \"*add_<shift>_<mode>\"\n   [(set (match_operand:GPI 0 \"register_operand\" \"=rk\")\n \t(plus:GPI (ASHIFT:GPI (match_operand:GPI 1 \"register_operand\" \"r\")"}, {"sha": "3cda5b6acaaeaaa37c6cc3d65c7d5acb6e947820", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5313c63ba833a90e5685e5df7ccaa984dd68ccb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5313c63ba833a90e5685e5df7ccaa984dd68ccb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f5313c63ba833a90e5685e5df7ccaa984dd68ccb", "patch": "@@ -1,3 +1,9 @@\n+2012-11-12  Ian Bolton  <ian.bolton@arm.com>\n+\n+\t* gcc.target/aarch64/cmn.c: New test.\n+\t* gcc.target/aarch64/adds.c: New test.\n+\t* gcc.target/aarch64/subs.c: New test.\n+\n 2012-11-12  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/55272"}, {"sha": "aa423210dec504fa0a2d77237b74b02951bf6dc2", "filename": "gcc/testsuite/gcc.target/aarch64/adds.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5313c63ba833a90e5685e5df7ccaa984dd68ccb/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadds.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5313c63ba833a90e5685e5df7ccaa984dd68ccb/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadds.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadds.c?ref=f5313c63ba833a90e5685e5df7ccaa984dd68ccb", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+int z;\n+int\n+foo (int x, int y)\n+{\n+  int l = x + y;\n+  if (l == 0)\n+    return 5;\n+\n+  /* { dg-final { scan-assembler \"adds\\tw\\[0-9\\]\" } } */\n+  z = l ;\n+  return 25;\n+}\n+\n+typedef long long s64;\n+\n+s64 zz;\n+s64\n+foo2 (s64 x, s64 y)\n+{\n+  s64 l = x + y;\n+  if (l < 0)\n+    return 5;\n+\n+  /* { dg-final { scan-assembler \"adds\\tx\\[0-9\\]\" } } */\n+  zz = l ;\n+  return 25;\n+}"}, {"sha": "1f06f57ad32b330da2a32494490b643a0b65ca99", "filename": "gcc/testsuite/gcc.target/aarch64/cmn.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5313c63ba833a90e5685e5df7ccaa984dd68ccb/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcmn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5313c63ba833a90e5685e5df7ccaa984dd68ccb/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcmn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcmn.c?ref=f5313c63ba833a90e5685e5df7ccaa984dd68ccb", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+int\n+foo (int a, int b)\n+{\n+  if (a + b)\n+    return 5;\n+  else\n+    return 2;\n+  /* { dg-final { scan-assembler \"cmn\\tw\\[0-9\\]\" } } */\n+}\n+\n+typedef long long s64;\n+\n+s64\n+foo2 (s64 a, s64 b)\n+{\n+  if (a + b)\n+    return 5;\n+  else\n+    return 2;\n+  /* { dg-final { scan-assembler \"cmn\\tx\\[0-9\\]\" } } */\n+}  "}, {"sha": "2bf197585dd5fffdeeee8f281b1798d77154afb5", "filename": "gcc/testsuite/gcc.target/aarch64/subs.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5313c63ba833a90e5685e5df7ccaa984dd68ccb/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsubs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5313c63ba833a90e5685e5df7ccaa984dd68ccb/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsubs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsubs.c?ref=f5313c63ba833a90e5685e5df7ccaa984dd68ccb", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+int z;\n+int\n+foo (int x, int y)\n+{\n+  int l = x - y;\n+  if (l == 0)\n+    return 5;\n+\n+  /* { dg-final { scan-assembler \"subs\\tw\\[0-9\\]\" } } */\n+  z = l ;\n+  return 25;\n+}\n+\n+typedef long long s64;\n+\n+s64 zz;\n+s64\n+foo2 (s64 x, s64 y)\n+{\n+  s64 l = x - y;\n+  if (l < 0)\n+    return 5;\n+\n+  /* { dg-final { scan-assembler \"subs\\tx\\[0-9\\]\" } } */\n+  zz = l ;\n+  return 25;\n+}"}]}