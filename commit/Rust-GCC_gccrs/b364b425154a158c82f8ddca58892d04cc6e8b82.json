{"sha": "b364b425154a158c82f8ddca58892d04cc6e8b82", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjM2NGI0MjUxNTRhMTU4YzgyZjhkZGNhNTg4OTJkMDRjYzZlOGI4Mg==", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2012-03-10T03:53:35Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@gcc.gnu.org", "date": "2012-03-10T03:53:35Z"}, "message": "invoke.texi: Use correct names/markup for \"GCC\", \"GDB\", \"ld\", and related program names.\n\n2012-03-09  Sandra Loosemore  <sandra@codesourcery.com>\n\n\tgcc/\n\t* doc/invoke.texi: Use correct names/markup for \"GCC\", \"GDB\", \"ld\",\n\tand related program names.\n\nFrom-SVN: r185168", "tree": {"sha": "ebf67839fe7fcb5d295f29da55ab351055724e74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebf67839fe7fcb5d295f29da55ab351055724e74"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b364b425154a158c82f8ddca58892d04cc6e8b82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b364b425154a158c82f8ddca58892d04cc6e8b82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b364b425154a158c82f8ddca58892d04cc6e8b82", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b364b425154a158c82f8ddca58892d04cc6e8b82/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7bd11aba5fe5b9fdbc23119b3f326234eea8a00b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bd11aba5fe5b9fdbc23119b3f326234eea8a00b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bd11aba5fe5b9fdbc23119b3f326234eea8a00b"}], "stats": {"total": 94, "additions": 54, "deletions": 40}, "files": [{"sha": "06d562bff0238450511ad227e9989ceee746232c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b364b425154a158c82f8ddca58892d04cc6e8b82/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b364b425154a158c82f8ddca58892d04cc6e8b82/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b364b425154a158c82f8ddca58892d04cc6e8b82", "patch": "@@ -1,3 +1,8 @@\n+2012-03-09  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* doc/invoke.texi: Use correct names/markup for \"GCC\", \"GDB\", \"ld\",\n+\tand related program names.\n+\n 2012-03-09  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* doc/invoke.texi: Use correct names for \"DWARF\", \"stabs\", and \"ELF\"."}, {"sha": "308d46e635d692bbdd61cc11b6e318e4162177db", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 49, "deletions": 40, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b364b425154a158c82f8ddca58892d04cc6e8b82/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b364b425154a158c82f8ddca58892d04cc6e8b82/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=b364b425154a158c82f8ddca58892d04cc6e8b82", "patch": "@@ -1303,7 +1303,7 @@ option.\n @item @var{language}\n This will display the options supported for @var{language}, where\n @var{language} is the name of one of the languages supported in this\n-version of GCC.\n+version of GCC@.\n \n @item @samp{common}\n This will display the options that are common to all languages.\n@@ -2746,7 +2746,7 @@ which is controlled by the separate C/C++ dialect option flags.  When\n this option is used with the Objective-C or Objective-C++ compiler,\n any Objective-C syntax that is not recognized by GCC 4.0 is rejected.\n This is useful if you need to make sure that your Objective-C code can\n-be compiled with older versions of GCC.\n+be compiled with older versions of GCC@.\n \n @item -freplace-objc-classes\n @opindex freplace-objc-classes\n@@ -2898,7 +2898,7 @@ are not inherently erroneous but that are risky or suggest there\n may have been an error.\n \n The following language-independent options do not enable specific\n-warnings but control the kinds of diagnostics produced by GCC.\n+warnings but control the kinds of diagnostics produced by GCC@.\n \n @table @gcctabopt\n @cindex syntax checking\n@@ -4415,7 +4415,7 @@ when applied ensure that two sequences that look the same are turned into\n the same sequence.  GCC can warn you if you are using identifiers that\n have not been normalized; this option controls that warning.\n \n-There are four levels of warning supported by GCC.  The default is\n+There are four levels of warning supported by GCC@.  The default is\n @option{-Wnormalized=nfc}, which warns about any identifier that is\n not in the ISO 10646 ``C'' normalized form, @dfn{NFC}.  NFC is the\n recommended form for most uses.\n@@ -7936,7 +7936,7 @@ The current implementation of LTO makes no\n attempt to generate bytecode that is portable between different\n types of hosts.  The bytecode files are versioned and there is a\n strict version check, so bytecode files generated in one version of\n-GCC will not work with an older/newer version of GCC.\n+GCC will not work with an older/newer version of GCC@.\n \n Link-time optimization does not work well with generation of debugging\n information.  Combining @option{-flto} with\n@@ -8010,7 +8010,8 @@ and is ignored at link time.\n \n @option{-fno-fat-lto-objects} improves compilation time over plain LTO, but\n requires the complete toolchain to be aware of LTO. It requires a linker with\n-linker plugin support for basic functionality.  Additionally, nm, ar and ranlib\n+linker plugin support for basic functionality.  Additionally,\n+@command{nm}, @command{ar} and @command{ranlib}\n need to support linker plugins to allow a full-featured build environment\n (capable of building static libraries etc).\n \n@@ -8584,7 +8585,7 @@ when modulo scheduling a loop.  Larger values can exponentially increase\n compilation time.\n \n @item max-inline-insns-single\n-Several parameters control the tree inliner used in gcc.\n+Several parameters control the tree inliner used in GCC@.\n This number sets the maximum number of instructions (counted in GCC's\n internal representation) in a single function that the tree inliner\n will consider for inlining.  This only affects functions declared\n@@ -9631,7 +9632,7 @@ This option specifies where to find the executables, libraries,\n include files, and data files of the compiler itself.\n \n The compiler driver program runs one or more of the subprograms\n-@file{cpp}, @file{cc1}, @file{as} and @file{ld}.  It tries\n+@command{cpp}, @command{cc1}, @command{as} and @command{ld}.  It tries\n @var{prefix} as a prefix for each program it tries to run, both with and\n without @samp{@var{machine}/@var{version}/} (@pxref{Target Options}).\n \n@@ -9671,9 +9672,9 @@ with boot-strapping the compiler.\n @item -specs=@var{file}\n @opindex specs\n Process @var{file} after the compiler reads in the standard @file{specs}\n-file, in order to override the defaults which the @file{gcc} driver\n-program uses when determining what switches to pass to @file{cc1},\n-@file{cc1plus}, @file{as}, @file{ld}, etc.  More than one\n+file, in order to override the defaults which the @command{gcc} driver\n+program uses when determining what switches to pass to @command{cc1},\n+@command{cc1plus}, @command{as}, @command{ld}, etc.  More than one\n @option{-specs=@var{file}} can be specified on the command line, and they\n are processed in order, from left to right.\n \n@@ -10932,12 +10933,12 @@ These options are defined for AVR implementations:\n @opindex mmcu\n Specify Atmel AVR instruction set architectures (ISA) or MCU type.\n \n-For a complete list of @var{mcu} values that are supported by avr-gcc,\n+For a complete list of @var{mcu} values that are supported by @command{avr-gcc},\n see the compiler output when called with the @code{--help=target}\n command line option.\n The default for this option is@tie{}@code{avr2}.\n \n-avr-gcc supports the following AVR devices and ISAs:\n+GCC supports the following AVR devices and ISAs:\n \n @table @code\n \n@@ -11270,7 +11271,7 @@ prologue/epilogue will save/restore that SFR and initialize it with\n zero in case the ISR code might (implicitly) use it.\n \n @item\n-RAM larger than 64@tie{KiB} is not supported by avr-gcc.\n+RAM larger than 64@tie{KiB} is not supported by GCC for AVR targets.\n If you use inline assembler to read from locations outside the\n 16-bit address range and change one of the @code{RAMP} registers,\n you must reset it to zero after the access.\n@@ -11279,8 +11280,8 @@ you must reset it to zero after the access.\n \n @subsubsection AVR Built-in Macros\n \n-avr-gcc defines several built-in macros so that the user code can test\n-for presence of absence of features.  Almost any of the following\n+GCC defines several built-in macros so that the user code can test\n+for the presence or absence of features.  Almost any of the following\n built-in macros are deduced from device capabilities and thus\n triggered by the @code{-mmcu=} command-line option.\n \n@@ -11809,7 +11810,7 @@ The linker for shared libraries, @file{/usr/bin/libtool}, will fail\n and print an error if asked to create a shared library with a less\n restrictive subtype than its input files (for instance, trying to put\n a @samp{ppc970} object file in a @samp{ppc7400} library).  The linker\n-for executables, @file{ld}, will quietly give the executable the most\n+for executables, @command{ld}, will quietly give the executable the most\n restrictive subtype of any of its input files.\n \n @table @gcctabopt\n@@ -11899,7 +11900,7 @@ switch to conform to a non-default data model.\n @opindex ffix-and-continue\n @opindex findirect-data\n Generate code suitable for fast turn around development.  Needed to\n-enable gdb to dynamically load @code{.o} files into already running\n+enable GDB to dynamically load @code{.o} files into already running\n programs.  @option{-findirect-data} and @option{-ffix-and-continue}\n are provided for backwards compatibility.\n \n@@ -12954,24 +12955,28 @@ options are available under HP-UX and HI-UX@.\n \n @item -mgnu-ld\n @opindex mgnu-ld\n-Use GNU ld specific options.  This passes @option{-shared} to ld when\n+Use options specific to GNU @command{ld}.\n+This passes @option{-shared} to @command{ld} when\n building a shared library.  It is the default when GCC is configured,\n explicitly or implicitly, with the GNU linker.  This option does not\n-have any affect on which ld is called, it only changes what parameters\n-are passed to that ld.  The ld that is called is determined by the\n+affect which @command{ld} is called; it only changes what parameters\n+are passed to that @command{ld}.\n+The @command{ld} that is called is determined by the\n @option{--with-ld} configure option, GCC's program search path, and\n finally by the user's @env{PATH}.  The linker used by GCC can be printed\n using @samp{which `gcc -print-prog-name=ld`}.  This option is only available\n on the 64-bit HP-UX GCC, i.e.@: configured with @samp{hppa*64*-*-hpux*}.\n \n @item -mhp-ld\n @opindex mhp-ld\n-Use HP ld specific options.  This passes @option{-b} to ld when building\n-a shared library and passes @option{+Accept TypeMismatch} to ld on all\n+Use options specific to HP @command{ld}.\n+This passes @option{-b} to @command{ld} when building\n+a shared library and passes @option{+Accept TypeMismatch} to @command{ld} on all\n links.  It is the default when GCC is configured, explicitly or\n-implicitly, with the HP linker.  This option does not have any affect on\n-which ld is called, it only changes what parameters are passed to that\n-ld.  The ld that is called is determined by the @option{--with-ld}\n+implicitly, with the HP linker.  This option does not affect\n+which @command{ld} is called; it only changes what parameters are passed to that\n+@command{ld}.\n+The @command{ld} that is called is determined by the @option{--with-ld}\n configure option, GCC's program search path, and finally by the user's\n @env{PATH}.  The linker used by GCC can be printed using @samp{which\n `gcc -print-prog-name=ld`}.  This option is only available on the 64-bit\n@@ -14542,7 +14547,7 @@ architectures are selected according to Freescale's ISA classification\n and the permissible values are: @samp{isaa}, @samp{isaaplus},\n @samp{isab} and @samp{isac}.\n \n-gcc defines a macro @samp{__mcf@var{arch}__} whenever it is generating\n+GCC defines a macro @samp{__mcf@var{arch}__} whenever it is generating\n code for a ColdFire target.  The @var{arch} in this macro is one of the\n @option{-march} arguments given above.\n \n@@ -14589,7 +14594,7 @@ below, which also classifies the CPUs into families:\n @var{arch} is compatible with @var{cpu}.  Other combinations of\n @option{-mcpu} and @option{-march} are rejected.\n \n-gcc defines the macro @samp{__mcf_cpu_@var{cpu}} when ColdFire target\n+GCC defines the macro @samp{__mcf_cpu_@var{cpu}} when ColdFire target\n @var{cpu} is selected.  It also defines @samp{__mcf_family_@var{family}},\n where the value of @var{family} is given by the table above.\n \n@@ -14608,14 +14613,14 @@ to run relatively well on 68020, 68030 and 68040 targets.\n as well.  These two options select the same tuning decisions as\n @option{-m68020-40} and @option{-m68020-60} respectively.\n \n-gcc defines the macros @samp{__mc@var{arch}} and @samp{__mc@var{arch}__}\n+GCC defines the macros @samp{__mc@var{arch}} and @samp{__mc@var{arch}__}\n when tuning for 680x0 architecture @var{arch}.  It also defines\n @samp{mc@var{arch}} unless either @option{-ansi} or a non-GNU @option{-std}\n-option is used.  If gcc is tuning for a range of architectures,\n+option is used.  If GCC is tuning for a range of architectures,\n as selected by @option{-mtune=68020-40} or @option{-mtune=68020-60},\n it defines the macros for every architecture in the range.\n \n-gcc also defines the macro @samp{__m@var{uarch}__} when tuning for\n+GCC also defines the macro @samp{__m@var{uarch}__} when tuning for\n ColdFire microarchitecture @var{uarch}, where @var{uarch} is one\n of the arguments given above.\n \n@@ -14763,7 +14768,7 @@ architectures.  Otherwise, the default is taken from the target CPU\n example, the default is ``off'' for @option{-mcpu=5206} and ``on'' for\n @option{-mcpu=5206e}.\n \n-gcc defines the macro @samp{__mcfhwdiv__} when this option is enabled.\n+GCC defines the macro @samp{__mcfhwdiv__} when this option is enabled.\n \n @item -mshort\n @opindex mshort\n@@ -15836,7 +15841,7 @@ assembler files (with a @samp{.s} suffix) when assembling them.\n @opindex mfix-24k\n @opindex mno-fix-24k\n Work around the 24K E48 (lost data on stores during refill) errata.\n-The workarounds are implemented by the assembler rather than by GCC.\n+The workarounds are implemented by the assembler rather than by GCC@.\n \n @item -mfix-r4000\n @itemx -mno-fix-r4000\n@@ -16687,14 +16692,18 @@ of a Cell microcode instruction is a variable shift.\n \n @item -msecure-plt\n @opindex msecure-plt\n-Generate code that allows ld and ld.so to build executables and shared\n-libraries with non-exec .plt and .got sections.  This is a PowerPC\n+Generate code that allows @command{ld} and @command{ld.so}\n+to build executables and shared\n+libraries with non-executable @code{.plt} and @code{.got} sections.\n+This is a PowerPC\n 32-bit SYSV ABI option.\n \n @item -mbss-plt\n @opindex mbss-plt\n-Generate code that uses a BSS .plt section that ld.so fills in, and\n-requires .plt and .got sections that are both writable and executable.\n+Generate code that uses a BSS @code{.plt} section that @command{ld.so}\n+fills in, and\n+requires @code{.plt} and @code{.got}\n+sections that are both writable and executable.\n This is a PowerPC 32-bit SYSV ABI option.\n \n @item -misel\n@@ -17322,9 +17331,9 @@ when the linker is known to generate glue.\n @opindex mtls-markers\n @opindex mno-tls-markers\n Mark (do not mark) calls to @code{__tls_get_addr} with a relocation\n-specifying the function argument.  The relocation allows ld to\n+specifying the function argument.  The relocation allows the linker to\n reliably associate function call with argument setup instructions for\n-TLS optimization, which in turn allows gcc to better schedule the\n+TLS optimization, which in turn allows GCC to better schedule the\n sequence.\n \n @item -pthread\n@@ -18123,7 +18132,7 @@ specified separated by a comma.\n @item -madjust-unroll\n @opindex madjust-unroll\n Throttle unrolling to avoid thrashing target registers.\n-This option only has an effect if the gcc code base supports the\n+This option only has an effect if the GCC code base supports the\n TARGET_ADJUST_UNROLL_MAX target hook.\n \n @item -mindexed-addressing"}]}