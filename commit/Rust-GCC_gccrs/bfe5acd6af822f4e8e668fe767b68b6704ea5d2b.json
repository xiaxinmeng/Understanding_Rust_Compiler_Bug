{"sha": "bfe5acd6af822f4e8e668fe767b68b6704ea5d2b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmZlNWFjZDZhZjgyMmY0ZThlNjY4ZmU3NjdiNjhiNjcwNGVhNWQyYg==", "commit": {"author": {"name": "Dorit Naishlos", "email": "dorit@il.ibm.com", "date": "2004-12-02T14:00:30Z"}, "committer": {"name": "Dorit Nuzman", "email": "dorit@gcc.gnu.org", "date": "2004-12-02T14:00:30Z"}, "message": "re PR tree-optimization/18716 ([ICE] verify_flow_info failed (loop))\n\n        PR tree-opt/18716\n        * tree-vectorizer.c (slpeel_make_loop_iterate_ntimes): Properly set\n        then and else labels.\n\nFrom-SVN: r91637", "tree": {"sha": "9ef3f3215c72833063ba0dc27f3bc61dede69dc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ef3f3215c72833063ba0dc27f3bc61dede69dc1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bfe5acd6af822f4e8e668fe767b68b6704ea5d2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfe5acd6af822f4e8e668fe767b68b6704ea5d2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfe5acd6af822f4e8e668fe767b68b6704ea5d2b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfe5acd6af822f4e8e668fe767b68b6704ea5d2b/comments", "author": null, "committer": null, "parents": [{"sha": "55dcbc1297c0c6212c99412ca30de1c204964f02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55dcbc1297c0c6212c99412ca30de1c204964f02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55dcbc1297c0c6212c99412ca30de1c204964f02"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "6b4ce0d9796004c74efc809991f29b7639dba000", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfe5acd6af822f4e8e668fe767b68b6704ea5d2b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfe5acd6af822f4e8e668fe767b68b6704ea5d2b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bfe5acd6af822f4e8e668fe767b68b6704ea5d2b", "patch": "@@ -1,3 +1,9 @@\n+2004-12-02  Dorit Naishlos  <dorit@il.ibm.com>\n+\n+\tPR tree-opt/18716\n+\t* tree-vectorizer.c (slpeel_make_loop_iterate_ntimes): Properly set\n+\tthen and else labels.\n+\n 2004-12-02  Andreas Schwab  <schwab@suse.de>\n \n \t* Makefile.in (WERROR_FLAGS): Renamed from WERROR."}, {"sha": "96ae3e2e5d50ac748c0bf3c09a11d354d0c09572", "filename": "gcc/tree-vectorizer.c", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfe5acd6af822f4e8e668fe767b68b6704ea5d2b/gcc%2Ftree-vectorizer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfe5acd6af822f4e8e668fe767b68b6704ea5d2b/gcc%2Ftree-vectorizer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.c?ref=bfe5acd6af822f4e8e668fe767b68b6704ea5d2b", "patch": "@@ -665,6 +665,8 @@ slpeel_make_loop_iterate_ntimes (struct loop *loop, tree niters)\n   tree exit_label = tree_block_label (loop->single_exit->dest);\n   tree init = build_int_cst (TREE_TYPE (niters), 0);\n   tree step = build_int_cst (TREE_TYPE (niters), 1);\n+  tree then_label;\n+  tree else_label;\n \n   orig_cond = get_loop_exit_condition (loop);\n   gcc_assert (orig_cond);\n@@ -677,14 +679,20 @@ slpeel_make_loop_iterate_ntimes (struct loop *loop, tree niters)\n   gcc_assert (bsi_stmt (loop_exit_bsi) == orig_cond);\n \n   if (exit_edge->flags & EDGE_TRUE_VALUE) /* 'then' edge exits the loop.  */\n-    cond = build2 (GE_EXPR, boolean_type_node, indx_after_incr, niters);\n+    {\n+      cond = build2 (GE_EXPR, boolean_type_node, indx_after_incr, niters);\n+      then_label = build1 (GOTO_EXPR, void_type_node, exit_label);\n+      else_label = build1 (GOTO_EXPR, void_type_node, begin_label);\n+    }\n   else /* 'then' edge loops back.  */\n-    cond = build2 (LT_EXPR, boolean_type_node, indx_after_incr, niters);\n+    {\n+      cond = build2 (LT_EXPR, boolean_type_node, indx_after_incr, niters);\n+      then_label = build1 (GOTO_EXPR, void_type_node, begin_label);\n+      else_label = build1 (GOTO_EXPR, void_type_node, exit_label);\n+    }\n \n-  begin_label = build1 (GOTO_EXPR, void_type_node, begin_label);\n-  exit_label = build1 (GOTO_EXPR, void_type_node, exit_label);\n   cond_stmt = build3 (COND_EXPR, TREE_TYPE (orig_cond), cond,\n-\t\t     begin_label, exit_label);\n+\t\t     then_label, else_label);\n   bsi_insert_before (&loop_exit_bsi, cond_stmt, BSI_SAME_STMT);\n \n   /* Remove old loop exit test:  */"}]}