{"sha": "82b5e52a9e41fbc4893f2dd0d2ba99bb2db70f4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODJiNWU1MmE5ZTQxZmJjNDg5M2YyZGQwZDJiYTk5YmIyZGI3MGY0Yw==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm@polyomino.org.uk", "date": "2004-07-06T22:42:45Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2004-07-06T22:42:45Z"}, "message": "toplev.h (NO_FRONT_END_DIAG, [...]): Define.\n\n\t* toplev.h (NO_FRONT_END_DIAG, ATTRIBUTE_GCC_FE_DIAG): Define.\n\t(warning, error, pedwarn, sorry): Use ATTRIBUTE_GCC_FE_DIAG.\n\ncp:\n\t* decl.c (check_tag_decl): Name redeclared type in diagnostic.\n\nFrom-SVN: r84174", "tree": {"sha": "dfa11bc5308fed458a1f6489e263f02721dcce69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dfa11bc5308fed458a1f6489e263f02721dcce69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82b5e52a9e41fbc4893f2dd0d2ba99bb2db70f4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82b5e52a9e41fbc4893f2dd0d2ba99bb2db70f4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82b5e52a9e41fbc4893f2dd0d2ba99bb2db70f4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82b5e52a9e41fbc4893f2dd0d2ba99bb2db70f4c/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b39edae36eba74d4e0bdf5049544bb5f86dbe8bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b39edae36eba74d4e0bdf5049544bb5f86dbe8bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b39edae36eba74d4e0bdf5049544bb5f86dbe8bd"}], "stats": {"total": 30, "additions": 24, "deletions": 6}, "files": [{"sha": "68ae8edabf6b9b86610d7d089d341a1fb994a6ab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82b5e52a9e41fbc4893f2dd0d2ba99bb2db70f4c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82b5e52a9e41fbc4893f2dd0d2ba99bb2db70f4c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=82b5e52a9e41fbc4893f2dd0d2ba99bb2db70f4c", "patch": "@@ -1,3 +1,8 @@\n+2004-07-06  Joseph S. Myers  <jsm@polyomino.org.uk>\n+\n+\t* toplev.h (NO_FRONT_END_DIAG, ATTRIBUTE_GCC_FE_DIAG): Define.\n+\t(warning, error, pedwarn, sorry): Use ATTRIBUTE_GCC_FE_DIAG.\n+\n 2004-07-06  Richard Henderson  <rth@redhat.com>\n \n \t* config/i386/i386.c (legitimize_pic_address): Make static."}, {"sha": "bde9ccf81e5a2879a48466542edc2cfe14f08268", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82b5e52a9e41fbc4893f2dd0d2ba99bb2db70f4c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82b5e52a9e41fbc4893f2dd0d2ba99bb2db70f4c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=82b5e52a9e41fbc4893f2dd0d2ba99bb2db70f4c", "patch": "@@ -1,3 +1,7 @@\n+2004-07-06  Joseph S. Myers  <jsm@polyomino.org.uk>\n+\n+\t* decl.c (check_tag_decl): Name redeclared type in diagnostic.\n+\n 2004-07-06  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\n \n \tPR c++/3671"}, {"sha": "5f3b901a0086d5e90903909d8e7f6075de676c86", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82b5e52a9e41fbc4893f2dd0d2ba99bb2db70f4c/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82b5e52a9e41fbc4893f2dd0d2ba99bb2db70f4c/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=82b5e52a9e41fbc4893f2dd0d2ba99bb2db70f4c", "patch": "@@ -3424,7 +3424,7 @@ check_tag_decl (cp_decl_specifier_seq *declspecs)\n   else if (declspecs->redefined_builtin_type)\n     {\n       if (!in_system_header)\n-\tpedwarn (\"redeclaration of C++ built-in type\",\n+\tpedwarn (\"redeclaration of C++ built-in type %qT\",\n \t\t declspecs->redefined_builtin_type);\n       return NULL_TREE;\n     }"}, {"sha": "6f6cad32a7c464db4258ace69932b7cad6aaf230", "filename": "gcc/toplev.h", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82b5e52a9e41fbc4893f2dd0d2ba99bb2db70f4c/gcc%2Ftoplev.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82b5e52a9e41fbc4893f2dd0d2ba99bb2db70f4c/gcc%2Ftoplev.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.h?ref=82b5e52a9e41fbc4893f2dd0d2ba99bb2db70f4c", "patch": "@@ -45,23 +45,32 @@ extern void _fatal_insn (const char *, rtx, const char *, int, const char *)\n    style, use the generic one.  */\n #ifndef GCC_DIAG_STYLE\n #define GCC_DIAG_STYLE __gcc_diag__\n+#define NO_FRONT_END_DIAG\n #endif\n /* None of these functions are suitable for ATTRIBUTE_PRINTF, because\n    each language front end can extend them with its own set of format\n-   specifiers.  We must use custom format checks.  */\n+   specifiers.  We must use custom format checks.  Note that at present\n+   the front-end %D specifier is used in non-front-end code with some\n+   functions, and those formats can only be checked in front-end code.  */\n #if GCC_VERSION >= 3005\n #define ATTRIBUTE_GCC_DIAG(m, n) __attribute__ ((__format__ (GCC_DIAG_STYLE, m, n))) ATTRIBUTE_NONNULL(m)\n+#ifdef NO_FRONT_END_DIAG\n+#define ATTRIBUTE_GCC_FE_DIAG(m, n) ATTRIBUTE_NONNULL(m)\n+#else\n+#define ATTRIBUTE_GCC_FE_DIAG(m, n) __attribute__ ((__format__ (GCC_DIAG_STYLE, m, n))) ATTRIBUTE_NONNULL(m)\n+#endif\n #else\n #define ATTRIBUTE_GCC_DIAG(m, n) ATTRIBUTE_NONNULL(m)\n+#define ATTRIBUTE_GCC_FE_DIAG(m, n) ATTRIBUTE_NONNULL(m)\n #endif\n extern void internal_error (const char *, ...) ATTRIBUTE_GCC_DIAG(1,2)\n      ATTRIBUTE_NORETURN;\n-extern void warning (const char *, ...);\n-extern void error (const char *, ...);\n+extern void warning (const char *, ...) ATTRIBUTE_GCC_FE_DIAG(1,2);\n+extern void error (const char *, ...) ATTRIBUTE_GCC_FE_DIAG(1,2);\n extern void fatal_error (const char *, ...) ATTRIBUTE_GCC_DIAG(1,2)\n      ATTRIBUTE_NORETURN;\n-extern void pedwarn (const char *, ...);\n-extern void sorry (const char *, ...);\n+extern void pedwarn (const char *, ...) ATTRIBUTE_GCC_FE_DIAG(1,2);\n+extern void sorry (const char *, ...) ATTRIBUTE_GCC_FE_DIAG(1,2);\n extern void inform (const char *, ...) ATTRIBUTE_GCC_DIAG(1,2);\n \n extern void rest_of_decl_compilation (tree, const char *, int, int);"}]}