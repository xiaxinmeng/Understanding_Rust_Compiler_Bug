{"sha": "ae53cf85a0674d2dee066e6104defd9ec817f89e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU1M2NmODVhMDY3NGQyZGVlMDY2ZTYxMDRkZWZkOWVjODE3Zjg5ZQ==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2015-11-18T00:43:59Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2015-11-18T00:43:59Z"}, "message": "* g++.dg/cpp1y/pr58708.C: Define wfoo based on sizeof wchar_t.\n\nFrom-SVN: r230516", "tree": {"sha": "b4a2153fcb4c974a9194615a0676d98b4764c8be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4a2153fcb4c974a9194615a0676d98b4764c8be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae53cf85a0674d2dee066e6104defd9ec817f89e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae53cf85a0674d2dee066e6104defd9ec817f89e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae53cf85a0674d2dee066e6104defd9ec817f89e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae53cf85a0674d2dee066e6104defd9ec817f89e/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cceac13fa11c630e674fca0601ea599d8da93045", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cceac13fa11c630e674fca0601ea599d8da93045", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cceac13fa11c630e674fca0601ea599d8da93045"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "0c7900e3cffb4f0a2ca79fff25ac1b870a276d2a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae53cf85a0674d2dee066e6104defd9ec817f89e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae53cf85a0674d2dee066e6104defd9ec817f89e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ae53cf85a0674d2dee066e6104defd9ec817f89e", "patch": "@@ -1,3 +1,7 @@\n+2015-11-17  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* g++.dg/cpp1y/pr58708.C: Define wfoo based on sizeof wchar_t.\n+\n 2015-11-17  David Malcolm  <dmalcolm@redhat.com>\n \n \t* gcc.dg/plugin/diagnostic-test-expressions-1.c (vector): New"}, {"sha": "3f39db8cfd48f10790e1ee1188d11360b748e34e", "filename": "gcc/testsuite/g++.dg/cpp1y/pr58708.C", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae53cf85a0674d2dee066e6104defd9ec817f89e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr58708.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae53cf85a0674d2dee066e6104defd9ec817f89e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr58708.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr58708.C?ref=ae53cf85a0674d2dee066e6104defd9ec817f89e", "patch": "@@ -43,7 +43,11 @@ main()\n   if (foo.chars[1] != 98) __builtin_abort();\n   if (foo.chars[2] != 99) __builtin_abort();\n \n-  auto wfoo = L\"\\x01020304\\x05060708\"_foo;\n+#if __SIZEOF_WCHAR_T__ == 2\n+    auto wfoo = L\"\\x0102\\x0304\"_foo;\n+#else\n+    auto wfoo = L\"\\x01020304\\x05060708\"_foo;\n+#endif\n   if (is_same<decltype(wfoo)::char_type, wchar_t>::value != true) __builtin_abort();\n   if (sizeof(wfoo.chars)/sizeof(wchar_t) != 2) __builtin_abort();\n   if (wfoo.chars[0] != 16909060) __builtin_abort();"}]}