{"sha": "aaa4d13052fc2d708f3c164e28624058ffad5616", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWFhNGQxMzA1MmZjMmQ3MDhmM2MxNjRlMjg2MjQwNThmZmFkNTYxNg==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@TechFak.Uni-Bielefeld.DE", "date": "2002-03-21T01:11:48Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2002-03-21T01:11:48Z"}, "message": "inclhack.def (alpha_assert): Fix assert macro in Tru64 UNIX assert.h.\n\n\t* fixinc/inclhack.def (alpha_assert): Fix assert macro in Tru64\n\tUNIX assert.h.\n\t* fixinc/fixincl.x: Regenerate.\n\nFrom-SVN: r51106", "tree": {"sha": "1f4e1f84938e3cdd48f6c1e33a8c0ebbbb33d076", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f4e1f84938e3cdd48f6c1e33a8c0ebbbb33d076"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aaa4d13052fc2d708f3c164e28624058ffad5616", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaa4d13052fc2d708f3c164e28624058ffad5616", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aaa4d13052fc2d708f3c164e28624058ffad5616", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaa4d13052fc2d708f3c164e28624058ffad5616/comments", "author": null, "committer": null, "parents": [{"sha": "617d988c057ee8dea59a796717596e7604a6e05f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/617d988c057ee8dea59a796717596e7604a6e05f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/617d988c057ee8dea59a796717596e7604a6e05f"}], "stats": {"total": 67, "additions": 64, "deletions": 3}, "files": [{"sha": "688fbbf3ba2a88c97e72c0947a85b68359f68070", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aaa4d13052fc2d708f3c164e28624058ffad5616/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aaa4d13052fc2d708f3c164e28624058ffad5616/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aaa4d13052fc2d708f3c164e28624058ffad5616", "patch": "@@ -1,3 +1,9 @@\n+2002-03-21  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n+\n+\t* fixinc/inclhack.def (alpha_assert): Fix assert macro in Tru64\n+\tUNIX assert.h.\n+\t* fixinc/fixincl.x: Regenerate.\n+\n 2002-03-20  Jason Merrill  <jason@redhat.com>\n \n \t* config/i386/cygwin.h (DWARF2_UNWIND_INFO): Define to 0."}, {"sha": "280948df5588aa6697c3ac80d4429eb30b6b8fe9", "filename": "gcc/fixinc/fixincl.x", "status": "modified", "additions": 44, "deletions": 3, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aaa4d13052fc2d708f3c164e28624058ffad5616/gcc%2Ffixinc%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aaa4d13052fc2d708f3c164e28624058ffad5616/gcc%2Ffixinc%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.x?ref=aaa4d13052fc2d708f3c164e28624058ffad5616", "patch": "@@ -5,7 +5,7 @@\n  * files which are fixed to work correctly with ANSI C and placed in a\n  * directory that GNU C will search.\n  *\n- * This file contains 138 fixup descriptions.\n+ * This file contains 139 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -742,6 +742,41 @@ static const char* apzAlpha___AssertPatch[] = {\n     \"__assert(const char *, const char *, int)\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Alpha_Assert fix\n+ */\n+tSCC zAlpha_AssertName[] =\n+     \"alpha_assert\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zAlpha_AssertList[] =\n+  \"|assert.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzAlpha_AssertMachs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zAlpha_AssertSelect0[] =\n+       \"(#define assert\\\\(EX\\\\).*)\\\\(\\\\(int\\\\) \\\\(EX\\\\)\\\\)\";\n+\n+#define    ALPHA_ASSERT_TEST_CT  1\n+static tTestDesc aAlpha_AssertTests[] = {\n+  { TT_EGREP,    zAlpha_AssertSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Alpha_Assert\n+ */\n+static const char* apzAlpha_AssertPatch[] = {\n+    \"format\",\n+    \"%1(EX)\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Alpha_Getopt fix\n@@ -5435,9 +5470,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          147\n+#define REGEX_COUNT          148\n #define MACH_LIST_SIZE_LIMIT 279\n-#define FIX_COUNT            138\n+#define FIX_COUNT            139\n \n /*\n  *  Enumerate the fixes\n@@ -5458,6 +5493,7 @@ typedef enum {\n     AIX_SYSWAIT_FIXIDX,\n     AIX_VOLATILE_FIXIDX,\n     ALPHA___ASSERT_FIXIDX,\n+    ALPHA_ASSERT_FIXIDX,\n     ALPHA_GETOPT_FIXIDX,\n     ALPHA_PARENS_FIXIDX,\n     ALPHA_SBRK_FIXIDX,\n@@ -5659,6 +5695,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      ALPHA___ASSERT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aAlpha___AssertTests,   apzAlpha___AssertPatch, 0 },\n \n+  {  zAlpha_AssertName,    zAlpha_AssertList,\n+     apzAlpha_AssertMachs,\n+     ALPHA_ASSERT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aAlpha_AssertTests,   apzAlpha_AssertPatch, 0 },\n+\n   {  zAlpha_GetoptName,    zAlpha_GetoptList,\n      apzAlpha_GetoptMachs,\n      ALPHA_GETOPT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "874f58495d079dde15dc2971e6d4e05152a5a633", "filename": "gcc/fixinc/inclhack.def", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aaa4d13052fc2d708f3c164e28624058ffad5616/gcc%2Ffixinc%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aaa4d13052fc2d708f3c164e28624058ffad5616/gcc%2Ffixinc%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.def?ref=aaa4d13052fc2d708f3c164e28624058ffad5616", "patch": "@@ -585,6 +585,20 @@ fix = {\n };\n \n \n+/*\n+ *  Fix assert macro in assert.h on Alpha OSF/1.\n+ *  The superfluous int cast breaks C++.\n+ */\n+fix = {\n+    hackname  = alpha_assert;\n+    files     = \"assert.h\";\n+    select    = '(#define assert\\(EX\\).*)\\(\\(int\\) \\(EX\\)\\)';\n+    c_fix     = format;\n+    c_fix_arg = \"%1(EX)\";\n+    test_text = '#define assert(EX) (((int) (EX)) ? (void)0 : __assert(#EX, __FILE__, __LINE__))';\n+};\n+\n+\n /*\n  *  Fix getopt declarations in stdio.h and stdlib.h on Alpha OSF/1 and AIX.\n  */"}]}