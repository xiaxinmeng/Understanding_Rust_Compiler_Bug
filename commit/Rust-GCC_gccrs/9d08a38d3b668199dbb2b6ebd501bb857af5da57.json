{"sha": "9d08a38d3b668199dbb2b6ebd501bb857af5da57", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQwOGEzOGQzYjY2ODE5OWRiYjJiNmViZDUwMWJiODU3YWY1ZGE1Nw==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2012-07-16T13:03:26Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-07-16T13:03:26Z"}, "message": "exp_ch9.adb (Ensure_Statement_Present): New subprogram.\n\n2012-07-16  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_ch9.adb (Ensure_Statement_Present): New subprogram.\n\t(Expand_N_Asynchronous_Select,\n\tExpand_N_Selective_Accept.Process_Accept_Alternative,\n\tExpand_N_Selective_Accept.Process_Delay_Alternative,\n\tExpand_N_Timed_Entry_Call): For an alternative with no trailing\n\tstatements, introduce a null statement to carry the sloc of\n\tthe initial special statement (accept, delay, or entry call)\n\tin the alternative, for coverage analysis purposes.\n\n2012-07-16  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_eval.adb (In_Subrange_Of): Fix typo in test for scalar\n\targuments.\n\nFrom-SVN: r189535", "tree": {"sha": "23e7cb26c9189555eb78e2c0030c6b790877262d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23e7cb26c9189555eb78e2c0030c6b790877262d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d08a38d3b668199dbb2b6ebd501bb857af5da57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d08a38d3b668199dbb2b6ebd501bb857af5da57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d08a38d3b668199dbb2b6ebd501bb857af5da57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d08a38d3b668199dbb2b6ebd501bb857af5da57/comments", "author": null, "committer": null, "parents": [{"sha": "70805b8834c831e0df8241ee883b6d14c923f58e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70805b8834c831e0df8241ee883b6d14c923f58e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70805b8834c831e0df8241ee883b6d14c923f58e"}], "stats": {"total": 58, "additions": 53, "deletions": 5}, "files": [{"sha": "15797a1b65a5fb0a1c491312c283f40c250617f2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d08a38d3b668199dbb2b6ebd501bb857af5da57/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d08a38d3b668199dbb2b6ebd501bb857af5da57/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9d08a38d3b668199dbb2b6ebd501bb857af5da57", "patch": "@@ -1,3 +1,19 @@\n+2012-07-16  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_ch9.adb (Ensure_Statement_Present): New subprogram.\n+\t(Expand_N_Asynchronous_Select,\n+\tExpand_N_Selective_Accept.Process_Accept_Alternative,\n+\tExpand_N_Selective_Accept.Process_Delay_Alternative,\n+\tExpand_N_Timed_Entry_Call): For an alternative with no trailing\n+\tstatements, introduce a null statement to carry the sloc of\n+\tthe initial special statement (accept, delay, or entry call)\n+\tin the alternative, for coverage analysis purposes.\n+\n+2012-07-16  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_eval.adb (In_Subrange_Of): Fix typo in test for scalar\n+\targuments.\n+\n 2012-07-16  Robert Dewar  <dewar@adacore.com>\n \n \t* a-exexpr.adb, freeze.adb, a-exexpr-gcc.adb, a-except-2005.adb,"}, {"sha": "612aebdd29aca45571e9303ad8cc7bb0daf3c93b", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 36, "deletions": 4, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d08a38d3b668199dbb2b6ebd501bb857af5da57/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d08a38d3b668199dbb2b6ebd501bb857af5da57/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=9d08a38d3b668199dbb2b6ebd501bb857af5da57", "patch": "@@ -339,6 +339,17 @@ package body Exp_Ch9 is\n    --  step of the expansion must to be done after private data has been moved\n    --  to its final resting scope to ensure proper visibility of debug objects.\n \n+   procedure Ensure_Statement_Present (Loc : Source_Ptr; Alt : Node_Id);\n+   --  If control flow optimizations are suppressed, and Alt is an accept,\n+   --  delay, or entry call alternative with no trailing statements, insert a\n+   --  null trailing statement with the given Loc (which is the sloc of the\n+   --  accept, delay, or entry call statement). There might not be any\n+   --  generated code for the accept, delay, or entry call itself (the\n+   --  effect of these statements is part of the general processsing done\n+   --  for the enclosing selective accept, timed entry call, or asynchronous\n+   --  select), and the null statement is there to carry the sloc of that\n+   --  statement to the back-end for trace-based coverage analysis purposes.\n+\n    procedure Extract_Dispatching_Call\n      (N        : Node_Id;\n       Call_Ent : out Entity_Id;\n@@ -5468,6 +5479,19 @@ package body Exp_Ch9 is\n       end loop;\n    end Debug_Private_Data_Declarations;\n \n+   ------------------------------\n+   -- Ensure_Statement_Present --\n+   ------------------------------\n+\n+   procedure Ensure_Statement_Present (Loc : Source_Ptr; Alt : Node_Id) is\n+   begin\n+      if Opt.Suppress_Control_Flow_Optimizations\n+           and then Is_Empty_List (Statements (Alt))\n+      then\n+         Set_Statements (Alt, New_List (Make_Null_Statement (Loc)));\n+      end if;\n+   end Ensure_Statement_Present;\n+\n    ----------------------------\n    -- Entry_Index_Expression --\n    ----------------------------\n@@ -6587,7 +6611,7 @@ package body Exp_Ch9 is\n       Abortable_Block   : Node_Id;\n       Actuals           : List_Id;\n       Astats            : List_Id;\n-      Blk_Ent           : Entity_Id;\n+      Blk_Ent           : constant Entity_Id := Make_Temporary (Loc, 'A');\n       Blk_Typ           : Entity_Id;\n       Call              : Node_Id;\n       Call_Ent          : Entity_Id;\n@@ -6632,15 +6656,16 @@ package body Exp_Ch9 is\n       Process_Statements_For_Controlled_Objects (Trig);\n       Process_Statements_For_Controlled_Objects (Abrt);\n \n+      Ecall := Triggering_Statement (Trig);\n+\n+      Ensure_Statement_Present (Sloc (Ecall), Trig);\n+\n       --  Retrieve Astats and Tstats now because the finalization machinery may\n       --  wrap them in blocks.\n \n       Astats := Statements (Abrt);\n       Tstats := Statements (Trig);\n \n-      Blk_Ent := Make_Temporary (Loc, 'A');\n-      Ecall   := Triggering_Statement (Trig);\n-\n       --  The arguments in the call may require dynamic allocation, and the\n       --  call statement may have been transformed into a block. The block\n       --  may contain additional declarations for internal entities, and the\n@@ -10301,6 +10326,8 @@ package body Exp_Ch9 is\n             Alt_Stats := New_List;\n          end if;\n \n+         Ensure_Statement_Present (Sloc (Astmt), Alt);\n+\n          --  After the call, if any, branch to trailing statements, if any.\n          --  We create a label for each, as well as the corresponding label\n          --  declaration.\n@@ -10330,6 +10357,7 @@ package body Exp_Ch9 is\n       -------------------------------\n \n       procedure Process_Delay_Alternative (Alt : Node_Id; Index : Int) is\n+         Dloc      : constant Source_Ptr := Sloc (Delay_Statement (Alt));\n          Choices   : List_Id;\n          Cond      : Node_Id;\n          Delay_Alt : List_Id;\n@@ -10433,6 +10461,8 @@ package body Exp_Ch9 is\n \n          Append_List (Delay_Alt, Delay_List);\n \n+         Ensure_Statement_Present (Dloc, Alt);\n+\n          --  If the delay alternative has a statement part, add choice to the\n          --  case statements for delays.\n \n@@ -11884,6 +11914,8 @@ package body Exp_Ch9 is\n       Process_Statements_For_Controlled_Objects (E_Alt);\n       Process_Statements_For_Controlled_Objects (D_Alt);\n \n+      Ensure_Statement_Present (Sloc (D_Stat), D_Alt);\n+\n       --  Retrieve E_Stats and D_Stats now because the finalization machinery\n       --  may wrap them in blocks.\n "}, {"sha": "8553ce6287513acc0fe266a705e8eefe6c364866", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d08a38d3b668199dbb2b6ebd501bb857af5da57/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d08a38d3b668199dbb2b6ebd501bb857af5da57/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=9d08a38d3b668199dbb2b6ebd501bb857af5da57", "patch": "@@ -4154,7 +4154,7 @@ package body Sem_Eval is\n       --  Never in range if both types are not scalar. Don't know if this can\n       --  actually happen, but just in case.\n \n-      elsif not Is_Scalar_Type (T1) or else not Is_Scalar_Type (T1) then\n+      elsif not Is_Scalar_Type (T1) or else not Is_Scalar_Type (T2) then\n          return False;\n \n       --  If T1 has infinities but T2 doesn't have infinities, then T1 is"}]}