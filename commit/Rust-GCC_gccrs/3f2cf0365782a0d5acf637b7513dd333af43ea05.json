{"sha": "3f2cf0365782a0d5acf637b7513dd333af43ea05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2YyY2YwMzY1NzgyYTBkNWFjZjYzN2I3NTEzZGQzMzNhZjQzZWEwNQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-06-11T07:55:19Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-06-11T07:55:19Z"}, "message": "Disable htable sanitization in pt.c (PR c++/87847).\n\n2019-06-11  Martin Liska  <mliska@suse.cz>\n\n\tPR c++/87847\n\t* hash-table.h: Extend create_gcc, add one parameter\n\tthat is passed into hash_table::hash_table.\n2019-06-11  Martin Liska  <mliska@suse.cz>\n\n\tPR c++/87847\n\t* pt.c (init_template_processing): Disable hash table\n\tsanitization for decl_specializations and type_specializations.\n\nFrom-SVN: r272144", "tree": {"sha": "848186978482b7c239f7e021806f8e461cdbdfdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/848186978482b7c239f7e021806f8e461cdbdfdd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f2cf0365782a0d5acf637b7513dd333af43ea05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f2cf0365782a0d5acf637b7513dd333af43ea05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f2cf0365782a0d5acf637b7513dd333af43ea05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f2cf0365782a0d5acf637b7513dd333af43ea05/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0d7b3e477bd705a9ff301dccd6abb729918a4551", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d7b3e477bd705a9ff301dccd6abb729918a4551", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d7b3e477bd705a9ff301dccd6abb729918a4551"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "8350a6fc16354f10a48ac682261d0bf3c8a771ac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f2cf0365782a0d5acf637b7513dd333af43ea05/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f2cf0365782a0d5acf637b7513dd333af43ea05/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3f2cf0365782a0d5acf637b7513dd333af43ea05", "patch": "@@ -1,3 +1,9 @@\n+2019-06-11  Martin Liska  <mliska@suse.cz>\n+\n+\tPR c++/87847\n+\t* hash-table.h: Extend create_gcc, add one parameter\n+\tthat is passed into hash_table::hash_table.\n+\n 2019-06-10  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386-protos.h (ix86_split_fp_absneg_operator):"}, {"sha": "f279c7cdd282ae4ba92f60e59dc15fd6eea1b9d3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f2cf0365782a0d5acf637b7513dd333af43ea05/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f2cf0365782a0d5acf637b7513dd333af43ea05/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3f2cf0365782a0d5acf637b7513dd333af43ea05", "patch": "@@ -1,3 +1,9 @@\n+2019-06-11  Martin Liska  <mliska@suse.cz>\n+\n+\tPR c++/87847\n+\t* pt.c (init_template_processing): Disable hash table\n+\tsanitization for decl_specializations and type_specializations.\n+\n 2019-06-10  Jason Merrill  <jason@redhat.com>\n \n \t* constexpr.c (free_constructor): New."}, {"sha": "2a626526c6f8dda56d17d8eb9c9c8899bf71c9f0", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f2cf0365782a0d5acf637b7513dd333af43ea05/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f2cf0365782a0d5acf637b7513dd333af43ea05/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=3f2cf0365782a0d5acf637b7513dd333af43ea05", "patch": "@@ -28316,8 +28316,9 @@ declare_integer_pack (void)\n void\n init_template_processing (void)\n {\n-  decl_specializations = hash_table<spec_hasher>::create_ggc (37);\n-  type_specializations = hash_table<spec_hasher>::create_ggc (37);\n+  /* FIXME: enable sanitization (PR87847) */\n+  decl_specializations = hash_table<spec_hasher>::create_ggc (37, false);\n+  type_specializations = hash_table<spec_hasher>::create_ggc (37, false);\n \n   if (cxx_dialect >= cxx11)\n     declare_integer_pack ();"}, {"sha": "4f5e150a0ac68d0b3f39ff6bd04d641fffa78bf1", "filename": "gcc/hash-table.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f2cf0365782a0d5acf637b7513dd333af43ea05/gcc%2Fhash-table.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f2cf0365782a0d5acf637b7513dd333af43ea05/gcc%2Fhash-table.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhash-table.h?ref=3f2cf0365782a0d5acf637b7513dd333af43ea05", "patch": "@@ -386,10 +386,10 @@ class hash_table\n \n   /* Create a hash_table in gc memory.  */\n   static hash_table *\n-  create_ggc (size_t n CXX_MEM_STAT_INFO)\n+  create_ggc (size_t n, bool sanitize_eq_and_hash = true CXX_MEM_STAT_INFO)\n   {\n     hash_table *table = ggc_alloc<hash_table> ();\n-    new (table) hash_table (n, true, true, GATHER_STATISTICS,\n+    new (table) hash_table (n, true, sanitize_eq_and_hash, GATHER_STATISTICS,\n \t\t\t    HASH_TABLE_ORIGIN PASS_MEM_STAT);\n     return table;\n   }"}]}