{"sha": "0a2695dba70df002f4ed8c0bad2a7c3403dd43df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGEyNjk1ZGJhNzBkZjAwMmY0ZWQ4YzBiYWQyYTdjMzQwM2RkNDNkZg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2004-11-12T16:37:52Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2004-11-12T16:37:52Z"}, "message": "re PR c++/18416 (ICE in import_export_decl)\n\n\tPR c++/18416\n\t* passes.c (rest_of_decl_compilation): Do not look at DECL_RTL\n\twhen deciding whether to pass a variable to\n\tcgraph_varpool_finalize_decl or assemble_variable.\n\t* toplev.c (check_global_declarations): Do not clear DECL_RTL.\n\n\tPR c++/18416\n\t* g++.dg/init/global1.C: New test.\n\nFrom-SVN: r90532", "tree": {"sha": "517e3e9fda4562c722cfb2ed96466fb15762390e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/517e3e9fda4562c722cfb2ed96466fb15762390e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a2695dba70df002f4ed8c0bad2a7c3403dd43df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a2695dba70df002f4ed8c0bad2a7c3403dd43df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a2695dba70df002f4ed8c0bad2a7c3403dd43df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a2695dba70df002f4ed8c0bad2a7c3403dd43df/comments", "author": null, "committer": null, "parents": [{"sha": "896b242cc52cc8bdeca781ba5b783b701e090020", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/896b242cc52cc8bdeca781ba5b783b701e090020", "html_url": "https://github.com/Rust-GCC/gccrs/commit/896b242cc52cc8bdeca781ba5b783b701e090020"}], "stats": {"total": 45, "additions": 30, "deletions": 15}, "files": [{"sha": "371046337db59b828de1e9c7d8dfc348883187b4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a2695dba70df002f4ed8c0bad2a7c3403dd43df/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a2695dba70df002f4ed8c0bad2a7c3403dd43df/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0a2695dba70df002f4ed8c0bad2a7c3403dd43df", "patch": "@@ -1,3 +1,11 @@\n+2004-11-12  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/18416\n+\t* passes.c (rest_of_decl_compilation): Do not look at DECL_RTL\n+\twhen deciding whether to pass a variable to\n+\tcgraph_varpool_finalize_decl or assemble_variable.\n+\t* toplev.c (check_global_declarations): Do not clear DECL_RTL. \n+\n 2004-11-12  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* tree-vectorizer.c: Fix a comment typo."}, {"sha": "e634372580492e8a7406dccb283e808f1ca37ee4", "filename": "gcc/passes.c", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a2695dba70df002f4ed8c0bad2a7c3403dd43df/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a2695dba70df002f4ed8c0bad2a7c3403dd43df/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=0a2695dba70df002f4ed8c0bad2a7c3403dd43df", "patch": "@@ -229,14 +229,7 @@ rest_of_decl_compilation (tree decl,\n \t  && !DECL_EXTERNAL (decl))\n \t{\n \t  if (flag_unit_at_a_time && !cgraph_global_info_ready\n-\t      && TREE_CODE (decl) != FUNCTION_DECL && top_level\n-\t      /* If we defer processing of decls that have had their\n-\t\t DECL_RTL set above (say, in make_decl_rtl),\n-\t\t check_global_declarations() will clear it before\n-\t\t assemble_variable has a chance to act on it.  This\n-\t\t would remove all traces of the register name in a\n-\t\t global register variable, for example.  */\n-\t      && !DECL_RTL_SET_P (decl))\n+\t      && TREE_CODE (decl) != FUNCTION_DECL && top_level)\n \t    cgraph_varpool_finalize_decl (decl);\n \t  else\n \t    assemble_variable (decl, top_level, at_end, 0);"}, {"sha": "d24479bf672f79947c0bb20568171f5d3925c339", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a2695dba70df002f4ed8c0bad2a7c3403dd43df/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a2695dba70df002f4ed8c0bad2a7c3403dd43df/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0a2695dba70df002f4ed8c0bad2a7c3403dd43df", "patch": "@@ -1,3 +1,8 @@\n+2004-11-12  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/18416\n+\t* g++.dg/init/global1.C: New test.\n+\n 2004-11-12  Eric Botcazou  <ebotcazou@act-europe.fr>\n \n \t* gcc.c-torture/execute/20041112-1.c: New test."}, {"sha": "21f1cac06638b6e80df95d9f13c594942a27e7a4", "filename": "gcc/testsuite/g++.dg/init/global1.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a2695dba70df002f4ed8c0bad2a7c3403dd43df/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fglobal1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a2695dba70df002f4ed8c0bad2a7c3403dd43df/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fglobal1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fglobal1.C?ref=0a2695dba70df002f4ed8c0bad2a7c3403dd43df", "patch": "@@ -0,0 +1,16 @@\n+// PR c++/18416\n+\n+class errarg { \n+  enum { EMPTY } type; \n+public: \n+  errarg(); \n+}; \n+extern errarg empty_errarg; \n+extern void errprint(const char *, \n+\t\t     const errarg &arg1 = empty_errarg, \n+\t\t     const errarg &arg2 = empty_errarg, \n+\t\t     const errarg &arg3 = empty_errarg); \n+errarg::errarg() : type(EMPTY) \n+{ \n+} \n+errarg empty_errarg; "}, {"sha": "29ae0651426b8a0379023ea790316554c8204856", "filename": "gcc/toplev.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a2695dba70df002f4ed8c0bad2a7c3403dd43df/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a2695dba70df002f4ed8c0bad2a7c3403dd43df/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=0a2695dba70df002f4ed8c0bad2a7c3403dd43df", "patch": "@@ -819,13 +819,6 @@ check_global_declarations (tree *vec, int len)\n     {\n       decl = vec[i];\n \n-      if (TREE_CODE (decl) == VAR_DECL && TREE_STATIC (decl)\n-\t  && ! TREE_ASM_WRITTEN (decl))\n-\t/* Cancel the RTL for this decl so that, if debugging info\n-\t   output for global variables is still to come,\n-\t   this one will be omitted.  */\n-\tSET_DECL_RTL (decl, NULL_RTX);\n-\n       /* Warn about any function\n \t declared static but not defined.\n \t We don't warn about variables,"}]}