{"sha": "c0ab1970b9dd6e652eda830294f18d6456a3117e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzBhYjE5NzBiOWRkNmU2NTJlZGE4MzAyOTRmMThkNjQ1NmEzMTE3ZQ==", "commit": {"author": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2015-11-11T11:04:32Z"}, "committer": {"name": "Claudiu Zissulescu", "email": "claziss@gcc.gnu.org", "date": "2015-11-11T11:04:32Z"}, "message": "dp-hack.h: Add support for ARCHS.\n\n2015-11-11  Claudiu Zissulescu  <claziss@synopsys.com>\n\n\t* config/arc/dp-hack.h: Add support for ARCHS.\n\t* config/arc/ieee-754/divdf3.S: Likewise.\n\t* config/arc/ieee-754/divsf3-stdmul.S: Likewise.\n\t* config/arc/ieee-754/muldf3.S: Likewise.\n\t* config/arc/ieee-754/mulsf3.S: Likewise\n\t* config/arc/lib1funcs.S: Likewise\n\t* config/arc/gmon/dcache_linesz.S: Don't read the build register\n\tfor ARCv2 cores.\n\t* config/arc/gmon/profil.S (__profil, __profil_irq): Don't profile\n\tfor ARCv2 cores.\n\t* config/arc/ieee-754/arc-ieee-754.h (MPYHU, MPYH): Define.\n\t* config/arc/t-arc700-uClibc: Remove hard selection for ARC 700\n\tcores.\n\nFrom-SVN: r230151", "tree": {"sha": "10a41398d6acd6f955bba60781c570af2dcba8cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10a41398d6acd6f955bba60781c570af2dcba8cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0ab1970b9dd6e652eda830294f18d6456a3117e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0ab1970b9dd6e652eda830294f18d6456a3117e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0ab1970b9dd6e652eda830294f18d6456a3117e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0ab1970b9dd6e652eda830294f18d6456a3117e/comments", "author": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "35e2b6e1622210481b6c3118f55fc99a049d504b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35e2b6e1622210481b6c3118f55fc99a049d504b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35e2b6e1622210481b6c3118f55fc99a049d504b"}], "stats": {"total": 122, "additions": 91, "deletions": 31}, "files": [{"sha": "549d0ac39901324ebf4a94e60f910984b2194a38", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0ab1970b9dd6e652eda830294f18d6456a3117e/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0ab1970b9dd6e652eda830294f18d6456a3117e/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=c0ab1970b9dd6e652eda830294f18d6456a3117e", "patch": "@@ -1,3 +1,19 @@\n+2015-11-11  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* config/arc/dp-hack.h: Add support for ARCHS.\n+\t* config/arc/ieee-754/divdf3.S: Likewise.\n+\t* config/arc/ieee-754/divsf3-stdmul.S: Likewise.\n+\t* config/arc/ieee-754/muldf3.S: Likewise.\n+\t* config/arc/ieee-754/mulsf3.S: Likewise\n+\t* config/arc/lib1funcs.S: Likewise\n+\t* config/arc/gmon/dcache_linesz.S: Don't read the build register\n+\tfor ARCv2 cores.\n+\t* config/arc/gmon/profil.S (__profil, __profil_irq): Don't profile\n+\tfor ARCv2 cores.\n+\t* config/arc/ieee-754/arc-ieee-754.h (MPYHU, MPYH): Define.\n+\t* config/arc/t-arc700-uClibc: Remove hard selection for ARC 700\n+\tcores.\n+\n 2015-11-09  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* config/ia64/crtbegin.S: Check HAVE_INITFINI_ARRAY_SUPPORT"}, {"sha": "a212e3b8b60ed4ad3a3bfba8f395f52336badef5", "filename": "libgcc/config/arc/dp-hack.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0ab1970b9dd6e652eda830294f18d6456a3117e/libgcc%2Fconfig%2Farc%2Fdp-hack.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0ab1970b9dd6e652eda830294f18d6456a3117e/libgcc%2Fconfig%2Farc%2Fdp-hack.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farc%2Fdp-hack.h?ref=c0ab1970b9dd6e652eda830294f18d6456a3117e", "patch": "@@ -48,7 +48,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define L_mul_df\n #define L_div_df\n #elif (!defined (__ARC700__) && !defined (__ARC_MUL64__) \\\n-       && !defined(__ARC_MUL32BY16__))\n+       && !defined (__ARC_MUL32BY16__) && !defined (__HS__))\n #define L_mul_df\n #define L_div_df\n #undef QUIET_NAN"}, {"sha": "972a5879fed9c9119c8552995ed1885b65cc0968", "filename": "libgcc/config/arc/gmon/dcache_linesz.S", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0ab1970b9dd6e652eda830294f18d6456a3117e/libgcc%2Fconfig%2Farc%2Fgmon%2Fdcache_linesz.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0ab1970b9dd6e652eda830294f18d6456a3117e/libgcc%2Fconfig%2Farc%2Fgmon%2Fdcache_linesz.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farc%2Fgmon%2Fdcache_linesz.S?ref=c0ab1970b9dd6e652eda830294f18d6456a3117e", "patch": "@@ -38,6 +38,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \t.global\t__dcache_linesz\n \t.balign\t4\n __dcache_linesz:\n+#if !defined (__EM__) && !defined (__HS__)\n \tlr\tr12,[D_CACHE_BUILD]\n \textb_s\tr0,r12\n \tbreq_s\tr0,0,.Lsz_nocache\n@@ -51,5 +52,6 @@ __dcache_linesz:\n \tasl_s\tr0,r0,r12\n \tj_s\t[blink]\n .Lsz_nocache:\n+#endif /* !__EM__  && !__HS__ */\n \tmov_s\tr0,1\n \tj_s\t[blink]"}, {"sha": "df10dbd6af73f09d3212eea0bf61195369f90fe4", "filename": "libgcc/config/arc/gmon/profil.S", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0ab1970b9dd6e652eda830294f18d6456a3117e/libgcc%2Fconfig%2Farc%2Fgmon%2Fprofil.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0ab1970b9dd6e652eda830294f18d6456a3117e/libgcc%2Fconfig%2Farc%2Fgmon%2Fprofil.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farc%2Fgmon%2Fprofil.S?ref=c0ab1970b9dd6e652eda830294f18d6456a3117e", "patch": "@@ -45,6 +45,7 @@ __profil_offset:\n \t.global\t__dcache_linesz\n \t.global __profil\n \tFUNC(__profil)\n+#if !defined (__EM__) && !defined (__HS__)\n .Lstop_profiling:\n \tsr\tr0,[CONTROL0]\n \tj_s\t[blink]\n@@ -107,13 +108,20 @@ nocache:\n \tj_s\t[blink]\n \t.balign\t4\n 1:\tj\t__profil_irq\n+#else\n+__profil:\n+\t.balign\t4\n+\tmov_s\tr0,-1\n+\tj_s\t[blink]\n+#endif /* !__EM__ && !__HS__ */\n \tENDFUNC(__profil)\n \n \tFUNC(__profil_irq)\n \t.balign 4\t; make final jump unaligned to avoid delay penalty\n \t.balign 32,0,12\t; make sure the code spans no more that two cache lines\n \tnop_s\n __profil_irq:\n+#if !defined (__EM__) && !defined (__HS__)\n \tpush_s\tr0\n \tld\tr0,[__profil_offset]\n \tpush_s\tr1\n@@ -128,6 +136,9 @@ __profil_irq:\n nostore:ld.ab\tr2,[sp,8]\n \tpop_s\tr0\n \tj.f\t[ilink1]\n+#else\n+\trtie\n+#endif /* !__EM__  && !__HS__ */\n \tENDFUNC(__profil_irq)\n \n ; could save one cycle if the counters were allocated at link time and"}, {"sha": "f1ac98e4278ce983a2dbcee60f8a05d1dc7d8a50", "filename": "libgcc/config/arc/ieee-754/arc-ieee-754.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0ab1970b9dd6e652eda830294f18d6456a3117e/libgcc%2Fconfig%2Farc%2Fieee-754%2Farc-ieee-754.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0ab1970b9dd6e652eda830294f18d6456a3117e/libgcc%2Fconfig%2Farc%2Fieee-754%2Farc-ieee-754.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farc%2Fieee-754%2Farc-ieee-754.h?ref=c0ab1970b9dd6e652eda830294f18d6456a3117e", "patch": "@@ -54,3 +54,10 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define bmsk_l bmsk\n #define bxor_l bxor\n #define bcs_s blo_s\n+#if defined (__HS__) || defined (__EM__)\n+#define MPYHU   mpymu\n+#define MPYH    mpym\n+#else\n+#define MPYHU   mpyhu\n+#define MPYH    mpyh\n+#endif"}, {"sha": "27705ed5909910c799c60aa3ca2c0f1344a9df04", "filename": "libgcc/config/arc/ieee-754/divdf3.S", "status": "modified", "additions": 28, "deletions": 9, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0ab1970b9dd6e652eda830294f18d6456a3117e/libgcc%2Fconfig%2Farc%2Fieee-754%2Fdivdf3.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0ab1970b9dd6e652eda830294f18d6456a3117e/libgcc%2Fconfig%2Farc%2Fieee-754%2Fdivdf3.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farc%2Fieee-754%2Fdivdf3.S?ref=c0ab1970b9dd6e652eda830294f18d6456a3117e", "patch": "@@ -118,7 +118,7 @@ __divdf3_support: /* This label makes debugger output saner.  */\n \tsub r11,r11,11\n \tasl DBL1L,DBL1L,r11\n \tsub r11,r11,1\n-\tmpyhu r5,r4,r8\n+\tMPYHU r5,r4,r8\n \tsub r7,r7,r11\n \tasl r4,r4,12\n \tb.d .Lpast_denorm_dbl1\n@@ -189,33 +189,41 @@ __divdf3:\n \tasl r8,DBL1H,12\n \tlsr r12,DBL1L,20\n \tlsr r4,r8,26\n+#ifdef __HS__\n+\tadd3 r10,pcl,60 ; (.Ldivtab-.) >> 3\n+#else\n \tadd3 r10,pcl,59 ; (.Ldivtab-.) >> 3\n+#endif\n \tld.as r4,[r10,r4]\n+#ifdef __HS__\n+\tld.as r9,[pcl,182]; [pcl,(-((.-.L7ff00000) >> 2))] ; 0x7ff00000\n+#else\n \tld.as r9,[pcl,180]; [pcl,(-((.-.L7ff00000) >> 2))] ; 0x7ff00000\n+#endif\n \tor r8,r8,r12\n-\tmpyhu r5,r4,r8\n+\tMPYHU r5,r4,r8\n \tand.f r7,DBL1H,r9\n \tasl r4,r4,12 ; having the asl here is a concession to the XMAC pipeline.\n \tbeq.d .Ldenorm_dbl1\n \tand r6,DBL0H,r9\n .Lpast_denorm_dbl1: ; wb stall\n \tsub r4,r4,r5\n-\tmpyhu r5,r4,r4\n+\tMPYHU r5,r4,r4\n \tbreq.d r6,0,.Ldenorm_dbl0\n \tlsr r8,r8,1\n \tasl r12,DBL0H,11\n \tlsr r10,DBL0L,21\n .Lpast_denorm_dbl0: ; wb stall\n \tbset r8,r8,31\n-\tmpyhu r11,r5,r8\n+\tMPYHU r11,r5,r8\n \tadd_s r12,r12,r10\n \tbset r5,r12,31\n \tcmp r5,r8\n \tcmp.eq DBL0L,DBL1L\n \t; wb stall\n \tlsr.cc r5,r5,1\n \tsub r4,r4,r11 ; u1.31 inverse, about 30 bit\n-\tmpyhu r11,r5,r4 ; result fraction highpart\n+\tMPYHU r11,r5,r4 ; result fraction highpart\n \tbreq r7,r9,.Linf_nan_dbl1\n \tlsr r8,r8,2 ; u3.29\n \tadd r5,r6, /* wait for immediate /  XMAC wb stall */ \\\n@@ -226,15 +234,15 @@ __divdf3:\n \tasl_s DBL1L,DBL1L,9 ; u-29.23:9\n \tsbc r6,r5,r7\n \t; resource conflict (not for XMAC)\n-\tmpyhu r5,r11,DBL1L ; u-28.23:9\n+\tMPYHU r5,r11,DBL1L ; u-28.23:9\n \tadd.cs DBL0L,DBL0L,DBL0L\n \tasl_s DBL0L,DBL0L,6 ; u-26.25:7\n \tasl r10,r11,23\n \tsub_l DBL0L,DBL0L,r12\n \t; wb stall (before 'and' for XMAC)\n \tlsr r7,r11,9\n \tsub r5,DBL0L,r5 ; rest msw ; u-26.31:0\n-\tmpyh r12,r5,r4 ; result fraction lowpart\n+\tMPYH r12,r5,r4 ; result fraction lowpart\n \txor.f 0,DBL0H,DBL1H\n \tand DBL0H,r6,r9\n \tadd_s DBL0H,DBL0H,r7 ; (XMAC wb stall)\n@@ -261,7 +269,7 @@ __divdf3:\n \tsub.cs DBL0H,DBL0H,1\n \tsub.f r12,r12,2\n \t; resource conflict (not for XMAC)\n-\tmpyhu r7,r12,DBL1L ; u-51.32\n+\tMPYHU r7,r12,DBL1L ; u-51.32\n \tasl r5,r5,25 ; s-51.7:25\n \tlsr r10,r10,7 ; u-51.30:2\n \t; resource conflict (not for XMAC)\n@@ -291,10 +299,21 @@ __divdf3:\n \trsub r7,r6,5\n \tasr r10,r12,28\n \tbmsk r4,r12,27\n+#ifdef __HS__\n+\tmin  r7, r7, 31\n+\tasr  DBL0L, r4, r7\n+#else\n \tasrs DBL0L,r4,r7\n+#endif\n \tadd DBL1H,r11,r10\n+#ifdef __HS__\n+\tabs.f r10, r4\n+\tsub.mi r10, r10, 1\n+#endif\n \tadd.f r7,r6,32-5\n+#ifdef __ARC700__\n \tabss r10,r4\n+#endif\n \tasl r4,r4,r7\n \tmov.mi r4,r10\n \tadd.f r10,r6,23\n@@ -319,7 +338,7 @@ __divdf3:\n \tand r9,DBL0L,1 ; tie-breaker: round to even\n \tlsr r11,r11,7 ; u-51.30:2\n \t; resource conflict (not for XMAC)\n-\tmpyhu r8,r12,DBL1L ; u-51.32\n+\tMPYHU r8,r12,DBL1L ; u-51.32\n \tsub.mi r11,r11,DBL1L ; signed multiply adjust for r12*DBL1L\n \tadd_s DBL1H,DBL1H,r11\n \t; resource conflict (not for XMAC)"}, {"sha": "f13944ae11a4b8ed67a29e9ead3f28a4595009e4", "filename": "libgcc/config/arc/ieee-754/divsf3-stdmul.S", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0ab1970b9dd6e652eda830294f18d6456a3117e/libgcc%2Fconfig%2Farc%2Fieee-754%2Fdivsf3-stdmul.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0ab1970b9dd6e652eda830294f18d6456a3117e/libgcc%2Fconfig%2Farc%2Fieee-754%2Fdivsf3-stdmul.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farc%2Fieee-754%2Fdivsf3-stdmul.S?ref=c0ab1970b9dd6e652eda830294f18d6456a3117e", "patch": "@@ -144,23 +144,23 @@ __divsf3_support: /* This label makes debugger output saner.  */\n \tld.as r5,[r3,r5]\n \tadd r4,r6,r6\n \t; load latency\n-\tmpyhu r7,r5,r4\n+\tMPYHU r7,r5,r4\n \tbic.ne.f 0, \\\n \t\t0x60000000,r0 ; large number / denorm -> Inf\n \tbeq_s .Linf_NaN\n \tasl r5,r5,13\n \t; wb stall\n \t; slow track\n \tsub r7,r5,r7\n-\tmpyhu r8,r7,r6\n+\tMPYHU r8,r7,r6\n \tasl_s r12,r12,23\n \tand.f r2,r0,r9\n \tadd r2,r2,r12\n \tasl r12,r0,8\n \t; wb stall\n \tbne.d .Lpast_denorm_fp1\n .Ldenorm_fp0:\n-\tmpyhu r8,r8,r7\n+\tMPYHU r8,r8,r7\n \tbclr r12,r12,31\n \tnorm.f r3,r12 ; flag for 0/x -> 0 check\n \tbic.ne.f 0,0x60000000,r1 ; denorm/large number -> 0\n@@ -209,22 +209,22 @@ __divsf3:\n \tld.as r5,[r3,r2]\n \tasl r4,r1,9\n \tld.as r9,[pcl,-114]; [pcl,(-((.-.L7f800000) >> 2))] ; 0x7f800000\n-\tmpyhu r7,r5,r4\n+\tMPYHU r7,r5,r4\n \tasl r6,r1,8\n \tand.f r11,r1,r9\n \tbset r6,r6,31\n \tasl r5,r5,13\n \t; wb stall\n \tbeq .Ldenorm_fp1\n \tsub r7,r5,r7\n-\tmpyhu r8,r7,r6\n+\tMPYHU r8,r7,r6\n \tbreq.d r11,r9,.Linf_nan_fp1\n \tand.f r2,r0,r9\n \tbeq.d .Ldenorm_fp0\n \tasl r12,r0,8\n \t; wb stall\n \tbreq r2,r9,.Linf_nan_fp0\n-\tmpyhu r8,r8,r7\n+\tMPYHU r8,r8,r7\n .Lpast_denorm_fp1:\n \tbset r3,r12,31\n .Lpast_denorm_fp0:\n@@ -234,7 +234,7 @@ __divsf3:\n \t/* wb stall */ \\\n \t\t0x3f000000\n \tsub r7,r7,r8 ; u1.31 inverse, about 30 bit\n-\tmpyhu r3,r3,r7\n+\tMPYHU r3,r3,r7\n \tsbc r2,r2,r11\n \txor.f 0,r0,r1\n \tand r0,r2,r9"}, {"sha": "5f562e2335443d2243dc03433b229ad621cdaf76", "filename": "libgcc/config/arc/ieee-754/muldf3.S", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0ab1970b9dd6e652eda830294f18d6456a3117e/libgcc%2Fconfig%2Farc%2Fieee-754%2Fmuldf3.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0ab1970b9dd6e652eda830294f18d6456a3117e/libgcc%2Fconfig%2Farc%2Fieee-754%2Fmuldf3.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farc%2Fieee-754%2Fmuldf3.S?ref=c0ab1970b9dd6e652eda830294f18d6456a3117e", "patch": "@@ -132,19 +132,19 @@ __muldf3_support: /* This label makes debugger output saner.  */\n \t.balign 4\n __muldf3:\n \tld.as r9,[pcl,0x4b] ; ((.L7ff00000-.+2)/4)]\n-\tmpyhu r4,DBL0L,DBL1L\n+\tMPYHU r4,DBL0L,DBL1L\n \tbmsk r6,DBL0H,19\n \tbset r6,r6,20\n \tmpyu r7,r6,DBL1L\n \tand r11,DBL0H,r9\n \tbreq r11,0,.Ldenorm_dbl0\n-\tmpyhu r8,r6,DBL1L\n+\tMPYHU r8,r6,DBL1L\n \tbmsk r10,DBL1H,19\n \tbset r10,r10,20\n-\tmpyhu r5,r10,DBL0L\n+\tMPYHU r5,r10,DBL0L\n \tadd.f r4,r4,r7\n \tand r12,DBL1H,r9\n-\tmpyhu r7,r6,r10\n+\tMPYHU r7,r6,r10\n \tbreq r12,0,.Ldenorm_dbl1\n \tadc.f r5,r5,r8\n \tmpyu r8,r10,DBL0L"}, {"sha": "df2660a210230f8122e743bbb2198e90006daa0a", "filename": "libgcc/config/arc/ieee-754/mulsf3.S", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0ab1970b9dd6e652eda830294f18d6456a3117e/libgcc%2Fconfig%2Farc%2Fieee-754%2Fmulsf3.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0ab1970b9dd6e652eda830294f18d6456a3117e/libgcc%2Fconfig%2Farc%2Fieee-754%2Fmulsf3.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farc%2Fieee-754%2Fmulsf3.S?ref=c0ab1970b9dd6e652eda830294f18d6456a3117e", "patch": "@@ -64,7 +64,7 @@ __mulsf3:\n \tbset\tr2,r0,23\n \tasl_s\tr2,r2,8\n \tbset\tr3,r4,23\n-\tmpyhu\tr6,r2,r3\n+\tMPYHU\tr6,r2,r3\n \tand\tr11,r0,r9\n \tbreq\tr11,0,.Ldenorm_dbl0\n \tmpyu\tr7,r2,r3\n@@ -144,7 +144,7 @@ __mulsf3:\n \tadd_s\tr2,r2,r2\n \tasl\tr2,r2,r4\n \tasl\tr4,r4,23\n-\tmpyhu\tr6,r2,r3\n+\tMPYHU\tr6,r2,r3\n \tbreq\tr12,r9,.Ldenorm_dbl0_inf_nan_dbl1\n \tsub.ne.f r12,r12,r4\n \tmpyu\tr7,r2,r3\n@@ -163,7 +163,7 @@ __mulsf3:\n \tasl\tr4,r4,r3\n \tsub_s\tr3,r3,1\n \tasl_s\tr3,r3,23\n-\tmpyhu\tr6,r2,r4\n+\tMPYHU\tr6,r2,r4\n \tsub.ne.f r11,r11,r3\n \tbmsk\tr8,r0,30\n \tmpyu\tr7,r2,r4"}, {"sha": "022a2ea0cbe0ad3f174c2c32c1bd62a70939d959", "filename": "libgcc/config/arc/lib1funcs.S", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0ab1970b9dd6e652eda830294f18d6456a3117e/libgcc%2Fconfig%2Farc%2Flib1funcs.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0ab1970b9dd6e652eda830294f18d6456a3117e/libgcc%2Fconfig%2Farc%2Flib1funcs.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farc%2Flib1funcs.S?ref=c0ab1970b9dd6e652eda830294f18d6456a3117e", "patch": "@@ -79,7 +79,7 @@ SYM(__mulsi3):\n \tj_s.d [blink]\n \tmov_s r0,mlo\n \tENDFUNC(__mulsi3)\n-#elif defined (__ARC700__)\n+#elif defined (__ARC700__) || defined (__HS__)\n \tHIDDEN_FUNC(__mulsi3)\n \tmpyu\tr0,r0,r1\n \tnop_s\n@@ -393,7 +393,12 @@ SYM(__udivmodsi4):\n \tlsr_s r1,r1\n \tcmp_s r0,r1\n \txor.f r2,lp_count,31\n+#if !defined (__EM__)\n \tmov_s lp_count,r2\n+#else\n+\tmov lp_count,r2\n+\tnop_s\n+#endif /* !__EM__ */\n #endif /* !__ARC_NORM__ */\n \tsub.cc r0,r0,r1\n \tmov_s r3,3\n@@ -1260,7 +1265,7 @@ SYM(__ld_r13_to_r14_ret):\n #endif\n \n #ifdef  L_muldf3\n-#ifdef __ARC700__\n+#if defined (__ARC700__) || defined (__HS__)\n #include \"ieee-754/muldf3.S\"\n #elif defined (__ARC_NORM__) && defined(__ARC_MUL64__)\n #include \"ieee-754/arc600-mul64/muldf3.S\"\n@@ -1276,7 +1281,7 @@ SYM(__ld_r13_to_r14_ret):\n #endif\n \n #ifdef  L_mulsf3\n-#ifdef __ARC700__\n+#if defined (__ARC700__) || defined (__HS__)\n #include \"ieee-754/mulsf3.S\"\n #elif defined (__ARC_NORM__) && defined(__ARC_MUL64__)\n #include \"ieee-754/arc600-mul64/mulsf3.S\"\n@@ -1288,7 +1293,7 @@ SYM(__ld_r13_to_r14_ret):\n #endif\n \n #ifdef  L_divdf3\n-#ifdef __ARC700__\n+#if defined (__ARC700__) || defined (__HS__)\n #include \"ieee-754/divdf3.S\"\n #elif defined (__ARC_NORM__) && defined(__ARC_MUL64__)\n #include \"ieee-754/arc600-mul64/divdf3.S\"\n@@ -1298,7 +1303,7 @@ SYM(__ld_r13_to_r14_ret):\n #endif\n \n #ifdef  L_divsf3\n-#ifdef __ARC700__\n+#if defined (__ARC700__) || defined (__HS__)\n #include \"ieee-754/divsf3-stdmul.S\"\n #elif defined (__ARC_NORM__) && defined(__ARC_MUL64__)\n #include \"ieee-754/arc600-mul64/divsf3.S\""}, {"sha": "ff570398d906a375a829634ab5254f305405f38e", "filename": "libgcc/config/arc/t-arc700-uClibc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0ab1970b9dd6e652eda830294f18d6456a3117e/libgcc%2Fconfig%2Farc%2Ft-arc700-uClibc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0ab1970b9dd6e652eda830294f18d6456a3117e/libgcc%2Fconfig%2Farc%2Ft-arc700-uClibc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farc%2Ft-arc700-uClibc?ref=c0ab1970b9dd6e652eda830294f18d6456a3117e", "patch": "@@ -28,10 +28,10 @@\n CRTSTUFF_T_CFLAGS += -mno-sdata\n \n # Compile crtbeginS.o and crtendS.o with pic.\n-CRTSTUFF_T_CFLAGS_S = $(CRTSTUFF_T_CFLAGS) -mA7 -fPIC\n+CRTSTUFF_T_CFLAGS_S = $(CRTSTUFF_T_CFLAGS) -fPIC\n \n # Compile libgcc2.a with pic.\n-TARGET_LIBGCC2_CFLAGS = -mA7 -fPIC\n+TARGET_LIBGCC2_CFLAGS = -fPIC\n \n PROFILE_OSDEP = prof-freq.o\n "}]}