{"sha": "b26941b46a82ddb2915de92469ce4d2126fb0ef9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjI2OTQxYjQ2YTgyZGRiMjkxNWRlOTI0NjljZTRkMjEyNmZiMGVmOQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2007-05-01T17:41:48Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2007-05-01T17:41:48Z"}, "message": "darwin-ldouble.c (__gcc_qunord): Define if __NO_FPRS__, not just if _SOFT_DOUBLE.\n\n\t* config/rs6000/darwin-ldouble.c (__gcc_qunord): Define if\n\t__NO_FPRS__, not just if _SOFT_DOUBLE.\n\t* config/rs6000/libgcc-ppc-glibc.ver (__gcc_qunord): Likewise.\n\t* config/rs6000/rs6000.c (rs6000_init_libfuncs): Use __gcc_qunord\n\talso for E500 double.\n\t* config/rs6000/rs6000.md (buneq, bunge, bungt, bunle, bunlt,\n\tsuneq, sunge, sungt, sunle, sunlt): Disable for (TARGET_HARD_FLOAT\n\t&& !TARGET_FPRS).\n\nFrom-SVN: r124332", "tree": {"sha": "2bbb6a134219c043387671e593e46f7d7eb25c08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2bbb6a134219c043387671e593e46f7d7eb25c08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b26941b46a82ddb2915de92469ce4d2126fb0ef9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b26941b46a82ddb2915de92469ce4d2126fb0ef9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b26941b46a82ddb2915de92469ce4d2126fb0ef9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b26941b46a82ddb2915de92469ce4d2126fb0ef9/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0dd7ebb3fc0495d4d4bd6132b0d40f15dd9b36bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0dd7ebb3fc0495d4d4bd6132b0d40f15dd9b36bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0dd7ebb3fc0495d4d4bd6132b0d40f15dd9b36bc"}], "stats": {"total": 65, "additions": 42, "deletions": 23}, "files": [{"sha": "f7a05f8f20a78fdd68a6ba04fccf4d3caee721a7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b26941b46a82ddb2915de92469ce4d2126fb0ef9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b26941b46a82ddb2915de92469ce4d2126fb0ef9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b26941b46a82ddb2915de92469ce4d2126fb0ef9", "patch": "@@ -1,3 +1,14 @@\n+2007-05-01  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/rs6000/darwin-ldouble.c (__gcc_qunord): Define if\n+\t__NO_FPRS__, not just if _SOFT_DOUBLE.\n+\t* config/rs6000/libgcc-ppc-glibc.ver (__gcc_qunord): Likewise.\n+\t* config/rs6000/rs6000.c (rs6000_init_libfuncs): Use __gcc_qunord\n+\talso for E500 double.\n+\t* config/rs6000/rs6000.md (buneq, bunge, bungt, bunle, bunlt,\n+\tsuneq, sunge, sungt, sunle, sunlt): Disable for (TARGET_HARD_FLOAT\n+\t&& !TARGET_FPRS).\n+\n 2007-05-01  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-loop-manip.c (ip_normal_pos): Check if last stmt"}, {"sha": "7aa15b6d0199df5ac46be3c497aa2872cd6ea532", "filename": "gcc/config/rs6000/darwin-ldouble.c", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b26941b46a82ddb2915de92469ce4d2126fb0ef9/gcc%2Fconfig%2Frs6000%2Fdarwin-ldouble.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b26941b46a82ddb2915de92469ce4d2126fb0ef9/gcc%2Fconfig%2Frs6000%2Fdarwin-ldouble.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin-ldouble.c?ref=b26941b46a82ddb2915de92469ce4d2126fb0ef9", "patch": "@@ -225,7 +225,6 @@ int __gcc_qeq (double, double, double, double);\n int __gcc_qne (double, double, double, double);\n int __gcc_qge (double, double, double, double);\n int __gcc_qle (double, double, double, double);\n-int __gcc_qunord (double, double, double, double);\n long double __gcc_stoq (float);\n long double __gcc_dtoq (double);\n float __gcc_qtos (double, double);\n@@ -238,7 +237,6 @@ long double __gcc_utoq (unsigned int);\n extern int __eqdf2 (double, double);\n extern int __ledf2 (double, double);\n extern int __gedf2 (double, double);\n-extern int __unorddf2 (double, double);\n \n /* Negate 'long double' value and return the result.\t*/\n long double\n@@ -284,15 +282,6 @@ __gcc_qge (double a, double aa, double c, double cc)\n \n strong_alias (__gcc_qge, __gcc_qgt);\n \n-/* Compare two 'long double' values for unordered.  */\n-int\n-__gcc_qunord (double a, double aa, double c, double cc)\n-{\n-  if (__eqdf2 (a, c) == 0)\n-    return __unorddf2 (aa, cc);\n-  return __unorddf2 (a, c);\n-}\n-\n /* Convert single to long double.  */\n long double\n __gcc_stoq (float a)\n@@ -365,6 +354,20 @@ __gcc_utoq (unsigned int a)\n \n #ifdef __NO_FPRS__\n \n+int __gcc_qunord (double, double, double, double);\n+\n+extern int __eqdf2 (double, double);\n+extern int __unorddf2 (double, double);\n+\n+/* Compare two 'long double' values for unordered.  */\n+int\n+__gcc_qunord (double a, double aa, double c, double cc)\n+{\n+  if (__eqdf2 (a, c) == 0)\n+    return __unorddf2 (aa, cc);\n+  return __unorddf2 (a, c);\n+}\n+\n #include \"config/soft-fp/soft-fp.h\"\n #include \"config/soft-fp/double.h\"\n #include \"config/soft-fp/quad.h\""}, {"sha": "c74d732e572924feed3c9508a7a1f7a5a8c5d2c7", "filename": "gcc/config/rs6000/libgcc-ppc-glibc.ver", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b26941b46a82ddb2915de92469ce4d2126fb0ef9/gcc%2Fconfig%2Frs6000%2Flibgcc-ppc-glibc.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b26941b46a82ddb2915de92469ce4d2126fb0ef9/gcc%2Fconfig%2Frs6000%2Flibgcc-ppc-glibc.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flibgcc-ppc-glibc.ver?ref=b26941b46a82ddb2915de92469ce4d2126fb0ef9", "patch": "@@ -39,7 +39,6 @@ GCC_4.2.0 {\n   __gcc_qge\n   __gcc_qlt\n   __gcc_qle\n-  __gcc_qunord\n   __gcc_stoq\n   __gcc_dtoq\n   __gcc_qtos\n@@ -49,4 +48,8 @@ GCC_4.2.0 {\n   __gcc_itoq\n   __gcc_utoq\n %endif\n+\n+%ifdef __NO_FPRS__\n+  __gcc_qunord\n+%endif\n }"}, {"sha": "f89175a0d95b1fe702012396a2d9c6cae9d64ce7", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b26941b46a82ddb2915de92469ce4d2126fb0ef9/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b26941b46a82ddb2915de92469ce4d2126fb0ef9/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=b26941b46a82ddb2915de92469ce4d2126fb0ef9", "patch": "@@ -9587,7 +9587,6 @@ rs6000_init_libfuncs (void)\n \t    set_optab_libfunc (ge_optab, TFmode, \"__gcc_qge\");\n \t    set_optab_libfunc (lt_optab, TFmode, \"__gcc_qlt\");\n \t    set_optab_libfunc (le_optab, TFmode, \"__gcc_qle\");\n-\t    set_optab_libfunc (unord_optab, TFmode, \"__gcc_qunord\");\n \n \t    set_conv_libfunc (sext_optab, TFmode, SFmode, \"__gcc_stoq\");\n \t    set_conv_libfunc (sext_optab, TFmode, DFmode, \"__gcc_dtoq\");\n@@ -9598,6 +9597,9 @@ rs6000_init_libfuncs (void)\n \t    set_conv_libfunc (sfloat_optab, TFmode, SImode, \"__gcc_itoq\");\n \t    set_conv_libfunc (ufloat_optab, TFmode, SImode, \"__gcc_utoq\");\n \t  }\n+\n+\tif (!(TARGET_HARD_FLOAT && TARGET_FPRS))\n+\t  set_optab_libfunc (unord_optab, TFmode, \"__gcc_qunord\");\n       }\n     else\n       {"}, {"sha": "477f12e429b95b145bfebfeec5b1fd9da10b8957", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b26941b46a82ddb2915de92469ce4d2126fb0ef9/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b26941b46a82ddb2915de92469ce4d2126fb0ef9/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=b26941b46a82ddb2915de92469ce4d2126fb0ef9", "patch": "@@ -11530,27 +11530,27 @@\n \n (define_expand \"buneq\"\n   [(use (match_operand 0 \"\" \"\"))]\n-  \"\"\n+  \"! (TARGET_HARD_FLOAT && !TARGET_FPRS)\"\n   \"{ rs6000_emit_cbranch (UNEQ, operands[0]); DONE; }\")\n \n (define_expand \"bunge\"\n   [(use (match_operand 0 \"\" \"\"))]\n-  \"\"\n+  \"! (TARGET_HARD_FLOAT && !TARGET_FPRS)\"\n   \"{ rs6000_emit_cbranch (UNGE, operands[0]); DONE; }\")\n \n (define_expand \"bungt\"\n   [(use (match_operand 0 \"\" \"\"))]\n-  \"\"\n+  \"! (TARGET_HARD_FLOAT && !TARGET_FPRS)\"\n   \"{ rs6000_emit_cbranch (UNGT, operands[0]); DONE; }\")\n \n (define_expand \"bunle\"\n   [(use (match_operand 0 \"\" \"\"))]\n-  \"\"\n+  \"! (TARGET_HARD_FLOAT && !TARGET_FPRS)\"\n   \"{ rs6000_emit_cbranch (UNLE, operands[0]); DONE; }\")\n \n (define_expand \"bunlt\"\n   [(use (match_operand 0 \"\" \"\"))]\n-  \"\"\n+  \"! (TARGET_HARD_FLOAT && !TARGET_FPRS)\"\n   \"{ rs6000_emit_cbranch (UNLT, operands[0]); DONE; }\")\n \n (define_expand \"bltgt\"\n@@ -11664,27 +11664,27 @@\n \n (define_expand \"suneq\"\n   [(clobber (match_operand:SI 0 \"gpc_reg_operand\" \"\"))]\n-  \"\"\n+  \"! (TARGET_HARD_FLOAT && !TARGET_FPRS)\"\n   \"{ rs6000_emit_sCOND (UNEQ, operands[0]); DONE; }\")\n \n (define_expand \"sunge\"\n   [(clobber (match_operand:SI 0 \"gpc_reg_operand\" \"\"))]\n-  \"\"\n+  \"! (TARGET_HARD_FLOAT && !TARGET_FPRS)\"\n   \"{ rs6000_emit_sCOND (UNGE, operands[0]); DONE; }\")\n \n (define_expand \"sungt\"\n   [(clobber (match_operand:SI 0 \"gpc_reg_operand\" \"\"))]\n-  \"\"\n+  \"! (TARGET_HARD_FLOAT && !TARGET_FPRS)\"\n   \"{ rs6000_emit_sCOND (UNGT, operands[0]); DONE; }\")\n \n (define_expand \"sunle\"\n   [(clobber (match_operand:SI 0 \"gpc_reg_operand\" \"\"))]\n-  \"\"\n+  \"! (TARGET_HARD_FLOAT && !TARGET_FPRS)\"\n   \"{ rs6000_emit_sCOND (UNLE, operands[0]); DONE; }\")\n \n (define_expand \"sunlt\"\n   [(clobber (match_operand:SI 0 \"gpc_reg_operand\" \"\"))]\n-  \"\"\n+  \"! (TARGET_HARD_FLOAT && !TARGET_FPRS)\"\n   \"{ rs6000_emit_sCOND (UNLT, operands[0]); DONE; }\")\n \n (define_expand \"sltgt\""}]}