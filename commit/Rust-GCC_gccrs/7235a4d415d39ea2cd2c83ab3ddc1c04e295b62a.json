{"sha": "7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzIzNWE0ZDQxNWQzOWVhMmNkMmM4M2FiM2RkYzFjMDRlMjk1YjYyYQ==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@integrable-solutions.net", "date": "2006-02-05T09:21:29Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2006-02-05T09:21:29Z"}, "message": "extern2.cc (foo): Declare as of type cost char*.\n\n\t* g++.dg/charset/extern2.cc (foo): Declare as of type cost char*.\n\t* g++.dg/charset/string.c (foo): Likewise.\n\t* g++.dg/ext/builtin1.C (printf): Change first parameter type to\n\tconst char*\n\t* g++.dg/ext/builtin2.C (printf): Likewise.\n\t* g++.dg/init/new15.C (printf): Likewise.\n\t* g++.dg/opt/pr17697-1.C (foo): Likewise.\n\t* g++.dg/opt/pr17697-2.C (foo): Likewise.\n\t* g++.dg/opt/pr17697-3.C (foo): Likewise.\n\t* g++.dg/template/non-dependent4.C (temp): Likewise.\n\t* g++.dg/opt/strength-reduce.C (C::a): Change type to const char*.\n\t* g++.old-deja/g++.brendan/crash66.C (getopt): Change last\n\tparameter type to const char*.\n\t* g++.old-deja/g++.brendan/ptolemy1.C (InterpTableEntry::name):\n\tChange type to const char*.\n\t* g++.old-deja/g++.brendan/ptolemy2.C (InterpTableEntry::name):\n\tLikewise. \n\t* g++.old-deja/g++.jason/default2.C (bar::memberfunction): Change\n\tsecond parameter type to const char*.\n\t* g++.old-deja/g++.jason/opeq.C (X::X): Likewise.\n\t(Y::Y): Change parameter type to const char*.\n\t* g++.old-deja/g++.jason/ref12.C (f): Likewise.\n\t* g++.old-deja/g++.jason/report.C: Apply const correctness.\n\t* g++.old-deja/g++.jason/rfg6.C (single, array): Likewise.\n\t* g++.old-deja/g++.jason/rvalue1.C (main): Cast string literal to\n\t(char*).\n\t* g++.old-deja/g++.jason/scoping4.C (A::Ptr): Make a typedef to\n\tconst char*.\n\t* g++.old-deja/g++.law/ctors17.C (X::X): Change last parameter\n\ttype to const char*.\n\t* g++.old-deja/g++.law/ctors7.C (base_t::name, d1_t, d2_t): Change\n\treturn type to const char*.\n\t* g++.old-deja/g++.law/dtors2.C (bla::bla): Change parameter type\n\tto const char*.\n\t* g++.old-deja/g++.law/operators3.C: Adjust for const correctness.\n\t* g++.old-deja/g++.law/refs1.C: Likewise.\n\t* g++.old-deja/g++.law/visibility1.C: Likewise.\n\t* g++.old-deja/g++.law/visibility2.C: Likewise.\n\t* g++.old-deja/g++.law/union1.C (op_to_charp::s): Change type to\n\tconst char*.\n\t* g++.old-deja/g++.mike/bool2.C: Adjust for const correctness..\n\t* g++.old-deja/g++.mike/net48.C: Likewise.\n\t* g++.old-deja/g++.mike/p646.C: Likewise.\n\t* g++.old-deja/g++.mike/p6746.C: Likewise.\n\t* g++.old-deja/g++.mike/p700.C (mystrcpy): Change last parameter\n\ttype to const char*.\n\t* g++.old-deja/g++.mike/p811.C (X::stringify): Match for\n\tdeprecated conversion warning.\n\t* g++.old-deja/g++.other/init15.C (A::name): Change type to const\n\tchar*. \n\t* g++.old-deja/g++.other/inline12.C: Adjust for const correctness.\n\t* g++.old-deja/g++.other/sibcall1.C (foo): Likewise.\n\t* g++.old-deja/g++.pt/explicit8.C: Likewise.\n\t* g++.old-deja/g++.pt/m6.C (xx): Likewise.\n\t* g++.old-deja/g++.pt/m7.C (xx): Likewise.\n\t* g++.old-deja/g++.pt/nontype3.C: Likewise.\n\t* g++.old-deja/g++.pt/t39.C: Likewise.\n\t* g++.old-deja/g++.robertl/eb106.C: Likewise.\n\t* g++.old-deja/g++.robertl/ice990323-2.C: Likewise.\n\nFrom-SVN: r110608", "tree": {"sha": "d247e2b4e0c03bedefbb99cf991a25eddfc8ec25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d247e2b4e0c03bedefbb99cf991a25eddfc8ec25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/comments", "author": {"login": "cxx-undef", "id": 5528103, "node_id": "MDQ6VXNlcjU1MjgxMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/5528103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cxx-undef", "html_url": "https://github.com/cxx-undef", "followers_url": "https://api.github.com/users/cxx-undef/followers", "following_url": "https://api.github.com/users/cxx-undef/following{/other_user}", "gists_url": "https://api.github.com/users/cxx-undef/gists{/gist_id}", "starred_url": "https://api.github.com/users/cxx-undef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cxx-undef/subscriptions", "organizations_url": "https://api.github.com/users/cxx-undef/orgs", "repos_url": "https://api.github.com/users/cxx-undef/repos", "events_url": "https://api.github.com/users/cxx-undef/events{/privacy}", "received_events_url": "https://api.github.com/users/cxx-undef/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9bf820df85dad265b4e8cf14f1edf2c88d968f12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bf820df85dad265b4e8cf14f1edf2c88d968f12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9bf820df85dad265b4e8cf14f1edf2c88d968f12"}], "stats": {"total": 210, "additions": 136, "deletions": 74}, "files": [{"sha": "2408c335e28f49d825daca78f1bfe9f36a26fcea", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -1,3 +1,65 @@\n+2006-02-05  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n+\n+\t* g++.dg/charset/extern2.cc (foo): Declare as of type cost char*.\n+\t* g++.dg/charset/string.c (foo): Likewise.\n+\t* g++.dg/ext/builtin1.C (printf): Change first parameter type to\n+\tconst char*\n+\t* g++.dg/ext/builtin2.C (printf): Likewise.\n+\t* g++.dg/init/new15.C (printf): Likewise.\n+\t* g++.dg/opt/pr17697-1.C (foo): Likewise.\n+\t* g++.dg/opt/pr17697-2.C (foo): Likewise.\n+\t* g++.dg/opt/pr17697-3.C (foo): Likewise.\n+\t* g++.dg/template/non-dependent4.C (temp): Likewise.\n+\t* g++.dg/opt/strength-reduce.C (C::a): Change type to const char*.\n+\t* g++.old-deja/g++.brendan/crash66.C (getopt): Change last\n+\tparameter type to const char*.\n+\t* g++.old-deja/g++.brendan/ptolemy1.C (InterpTableEntry::name):\n+\tChange type to const char*.\n+\t* g++.old-deja/g++.brendan/ptolemy2.C (InterpTableEntry::name):\n+\tLikewise. \n+\t* g++.old-deja/g++.jason/default2.C (bar::memberfunction): Change\n+\tsecond parameter type to const char*.\n+\t* g++.old-deja/g++.jason/opeq.C (X::X): Likewise.\n+\t(Y::Y): Change parameter type to const char*.\n+\t* g++.old-deja/g++.jason/ref12.C (f): Likewise.\n+\t* g++.old-deja/g++.jason/report.C: Apply const correctness.\n+\t* g++.old-deja/g++.jason/rfg6.C (single, array): Likewise.\n+\t* g++.old-deja/g++.jason/rvalue1.C (main): Cast string literal to\n+\t(char*).\n+\t* g++.old-deja/g++.jason/scoping4.C (A::Ptr): Make a typedef to\n+\tconst char*.\n+\t* g++.old-deja/g++.law/ctors17.C (X::X): Change last parameter\n+\ttype to const char*.\n+\t* g++.old-deja/g++.law/ctors7.C (base_t::name, d1_t, d2_t): Change\n+\treturn type to const char*.\n+\t* g++.old-deja/g++.law/dtors2.C (bla::bla): Change parameter type\n+\tto const char*.\n+\t* g++.old-deja/g++.law/operators3.C: Adjust for const correctness.\n+\t* g++.old-deja/g++.law/refs1.C: Likewise.\n+\t* g++.old-deja/g++.law/visibility1.C: Likewise.\n+\t* g++.old-deja/g++.law/visibility2.C: Likewise.\n+\t* g++.old-deja/g++.law/union1.C (op_to_charp::s): Change type to\n+\tconst char*.\n+\t* g++.old-deja/g++.mike/bool2.C: Adjust for const correctness..\n+\t* g++.old-deja/g++.mike/net48.C: Likewise.\n+\t* g++.old-deja/g++.mike/p646.C: Likewise.\n+\t* g++.old-deja/g++.mike/p6746.C: Likewise.\n+\t* g++.old-deja/g++.mike/p700.C (mystrcpy): Change last parameter\n+\ttype to const char*.\n+\t* g++.old-deja/g++.mike/p811.C (X::stringify): Match for\n+\tdeprecated conversion warning.\n+\t* g++.old-deja/g++.other/init15.C (A::name): Change type to const\n+\tchar*. \n+\t* g++.old-deja/g++.other/inline12.C: Adjust for const correctness.\n+\t* g++.old-deja/g++.other/sibcall1.C (foo): Likewise.\n+\t* g++.old-deja/g++.pt/explicit8.C: Likewise.\n+\t* g++.old-deja/g++.pt/m6.C (xx): Likewise.\n+\t* g++.old-deja/g++.pt/m7.C (xx): Likewise.\n+\t* g++.old-deja/g++.pt/nontype3.C: Likewise.\n+\t* g++.old-deja/g++.pt/t39.C: Likewise.\n+\t* g++.old-deja/g++.robertl/eb106.C: Likewise.\n+\t* g++.old-deja/g++.robertl/ice990323-2.C: Likewise.\n+\n 2006-02-04  Thomas Koenig  <Thomas.Koenig@online.de>\n \n \tPR fortran/25075"}, {"sha": "9a0c85039560a9914c39704d78cbf9c13b493ea9", "filename": "gcc/testsuite/g++.dg/charset/extern2.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcharset%2Fextern2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcharset%2Fextern2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcharset%2Fextern2.cc?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -2,4 +2,4 @@\n /* { dg-do compile }\n    { dg-require-iconv \"IBM1047\" }\n    { dg-final { scan-assembler-not \"foobar\" } } */\n-extern \"C\" { char *foo = \"foobar\"; }\n+extern \"C\" { const char* foo = \"foobar\"; }"}, {"sha": "a09d39a2055c32e794df76dc9b1d28ffacdd6324", "filename": "gcc/testsuite/g++.dg/charset/string.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcharset%2Fstring.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcharset%2Fstring.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcharset%2Fstring.c?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -2,4 +2,4 @@\n /* { dg-do compile }\n    { dg-require-iconv \"IBM1047\" }\n    { dg-final { scan-assembler-not \"string foobar\" } } */\n-char *foo = \"string foobar\";\n+const char* foo = \"string foobar\";"}, {"sha": "9947c85bf799b2ea5b51ebda5ff1c964db6dc62f", "filename": "gcc/testsuite/g++.dg/ext/builtin1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin1.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -5,6 +5,6 @@\n // { dg-options \"\" }\n // { dg-final { scan-assembler \"fancy_printf\" } }\n \n-extern \"C\" int printf(char*, ...) __asm(\"_fancy_printf\");\n+extern \"C\" int printf(const char*, ...) __asm(\"_fancy_printf\");\n \n void foo() { printf(\"abc\"); }"}, {"sha": "ffa25285b59c5a5721555a64c01adbec0d4724bf", "filename": "gcc/testsuite/g++.dg/ext/builtin2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin2.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -6,7 +6,7 @@\n // { dg-options \"\" }\n // { dg-final { scan-assembler \"fancy_printf\" } }\n \n-extern \"C\" int printf(char*, ...) __asm(\"_fancy_printf\");\n+extern \"C\" int printf(const char*, ...) __asm(\"_fancy_printf\");\n \n namespace std { using ::printf; }\n "}, {"sha": "b93b43c833f49f13323ebc3bb7a71988377423b5", "filename": "gcc/testsuite/g++.dg/init/new15.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fnew15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fnew15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fnew15.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -1,6 +1,6 @@\n // PR c++/9782\n \n-extern \"C\" void printf(char *, ...);\n+extern \"C\" void printf(const char*, ...);\n \n template <int>\n struct A {"}, {"sha": "50a75b8453056413d845dbc2c12238a74a9f2d3c", "filename": "gcc/testsuite/g++.dg/opt/pr17697-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr17697-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr17697-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr17697-1.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -20,7 +20,7 @@ A::strcmp (const char *s, const char *t)\n }\n \n int\n-foo (char *x) throw ()\n+foo (const char *x) throw ()\n {\n   return A::strcmp (\"\", x);\n }"}, {"sha": "4a746be3d01e82e7df123887de0398592009d709", "filename": "gcc/testsuite/g++.dg/opt/pr17697-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr17697-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr17697-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr17697-2.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -20,7 +20,7 @@ A::strcmp (const char *s, const char *t) throw ()\n }\n \n int\n-foo (char *x) throw ()\n+foo (const char *x) throw ()\n {\n   return A::strcmp (\"\", x);\n }"}, {"sha": "fa7cff0a49fdf9a03649b2aca8e8ea78e9d462be", "filename": "gcc/testsuite/g++.dg/opt/pr17697-3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr17697-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr17697-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr17697-3.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -16,7 +16,7 @@ A::strcmp (const char *s, const char *t)\n }\n \n int\n-foo (char *x)\n+foo (const char *x)\n {\n   return A::strcmp (\"\", x);\n }"}, {"sha": "3fee937f1c15dafd96170218a60f3b16cc2ab9d4", "filename": "gcc/testsuite/g++.dg/opt/strength-reduce.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fstrength-reduce.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fstrength-reduce.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fstrength-reduce.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -10,7 +10,7 @@ struct C\n {\n   int foo (char ch, int offset = __INT_MAX__) const;\n   int bar (int offset, char c) const;\n-  char *a;\n+   const char *a;\n };\n \n int C::bar (int offset, char c) const"}, {"sha": "ff3a6eb2c90980a0435eadd6bade9dae61f1c4f6", "filename": "gcc/testsuite/g++.dg/template/non-dependent4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnon-dependent4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnon-dependent4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnon-dependent4.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -1,4 +1,4 @@\n-int temp(char *temp);\n+int temp(const char *temp);\n \n template <int> int g() { return temp(\"Hi\"); }\n int g1() { return temp(\"Hi\"); }"}, {"sha": "321c55130aab050e42ed3656cae2097563e9f154", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash66.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash66.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash66.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash66.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -93,7 +93,7 @@ ulong memsize;\n ulong compression_quality;\t\t \n char *compressfile;\t\t\t \n int debug_level;\t\t\t \n-extern \"C\" int getopt (int, char**, char*);\n+extern \"C\" int getopt (int, char**, const char*);\n int\n main(int argc, char** argv)\n {"}, {"sha": "c5987fce03caee9ca6cae02808f468e9b7f75ef3", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/ptolemy1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fptolemy1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fptolemy1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fptolemy1.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -12,7 +12,7 @@ public:\n typedef int (PTcl::*InterpFuncP)(int,char**);\n \n struct InterpTableEntry {\n-\tchar* name;\n+\tconst char* name;\n \tInterpFuncP func;\n };\n "}, {"sha": "669bd7914218abdb3d144a23e3004b9011e42364", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/ptolemy2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fptolemy2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fptolemy2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fptolemy2.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -17,7 +17,7 @@ public:\n typedef int (PTcl::*InterpFuncP)(int,char**);\n \n struct InterpTableEntry {\n-\tchar* name;\n+\tconst char* name;\n \tInterpFuncP func;\n };\n "}, {"sha": "167ac635dbfac43091ac525d3edd8486f2c74ee9", "filename": "gcc/testsuite/g++.old-deja/g++.jason/default2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fdefault2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fdefault2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fdefault2.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -15,7 +15,7 @@ class bar\n {\n  public:\n   bar();\n-  int memberfunction(int i, char *j, double k, foo foo1 = foo(0));\n+  int memberfunction(int i, const char *j, double k, foo foo1 = foo(0));\n };\n \n int"}, {"sha": "60fc5c1ae269503ecc77ad053f7fef44782e361b", "filename": "gcc/testsuite/g++.old-deja/g++.jason/opeq.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fopeq.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fopeq.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fopeq.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -8,15 +8,15 @@ extern \"C\" int printf (const char *, ...);\n class Y \n {\n public:\n-    Y(char*) {}\n+    Y(const char*) {}\n     Y& operator = (const Y&) { return *this; }\n };\n     \n \n class X\n {\n public:\n-    X(int v, char* m) : _v(v), _m (m) {}\n+    X(int v, const char* m) : _v(v), _m (m) {}\n     X () : _v(0), _m(\"Unknown\") {}\n     // Defining our own op= here makes things work correctly.\n "}, {"sha": "a604055fc5f613e789ccd53878d6066daee2d1c3", "filename": "gcc/testsuite/g++.old-deja/g++.jason/ref12.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fref12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fref12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fref12.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -1,5 +1,5 @@\n // { dg-do run  }\n-void f (char *const &) { }\n+void f (const char *const &) { }\n int main ()\n {\n   f (\"hi\");"}, {"sha": "77fd7c32d8c47848c905d84b7b21ae78bf3c6ee4", "filename": "gcc/testsuite/g++.old-deja/g++.jason/report.C", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Freport.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Freport.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Freport.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -21,14 +21,14 @@ struct A\n   operator int () { return a; }\n };\n \n-extern \"C\" int atoi (char *);\n+extern \"C\" int atoi (const char *);\n \n-int (*fee)(char *) = atoi;\n-int (**bar)(char *) = &fee;\n+int (*fee)(const char *) = atoi;\n+int (**bar)(const char *) = &fee;\n \n-char *s = \"4\";\n-char **sp = &s;\n-char ***spp = &sp;\n+const char* s = \"4\";\n+const char** sp = &s;\n+const char*** spp = &sp;\n \n int foo (int a = (**bar) (s))\n {"}, {"sha": "c2bca4554fa9465c4863edb18bd18da2ca3e3dc1", "filename": "gcc/testsuite/g++.old-deja/g++.jason/rfg6.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Frfg6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Frfg6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Frfg6.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -1,4 +1,4 @@\n // { dg-do assemble  }\n \n-wchar_t *single  =   L\"xyz\"  ;\n-wchar_t *(array[]) = { L\"xyz\" };\n+const wchar_t *single  =   L\"xyz\"  ;\n+const wchar_t *(array[]) = { L\"xyz\" };"}, {"sha": "277d594b818fa40ccd8d389316ba99da76484bed", "filename": "gcc/testsuite/g++.old-deja/g++.jason/rvalue1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Frvalue1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Frvalue1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Frvalue1.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -48,5 +48,5 @@ Class1 :: Class1 (const String & constStringRef)\n \n int main(void)\n {\n-  Class1 *class1 = new Class1(\"Hi!\");\n+  Class1 *class1 = new Class1((char*) \"Hi!\");\n }"}, {"sha": "c32b4a66022fa519f844bf2c492ea2918a0045ea", "filename": "gcc/testsuite/g++.old-deja/g++.jason/scoping4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fscoping4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fscoping4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fscoping4.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -4,7 +4,7 @@\n \n class A {\n public:\n-  typedef char * Ptr;\n+  typedef const char * Ptr;\n   Ptr s;\n   Ptr get_string();\n   A(Ptr string); // { s = string; };"}, {"sha": "1cee3082595932784d12b70a952365b31ec9972b", "filename": "gcc/testsuite/g++.old-deja/g++.law/ctors17.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors17.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -11,7 +11,7 @@\n \n class X : public std::ifstream { // { dg-error \"\" } candidate\n     public:\n-      X(int a, char *b) {} // { dg-error \"\" } candidate\n+      X(int a, const char *b) {} // { dg-error \"\" } candidate\n };\n int main()\n {"}, {"sha": "d2e0ef309995f425074a31e79a455770e1183255", "filename": "gcc/testsuite/g++.old-deja/g++.law/ctors7.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors7.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -8,15 +8,15 @@\n \n class base_t {\n public:\n-   virtual char *name () { return \"base_t\"; }\n+   virtual const char* name () { return \"base_t\"; }\n \n    base_t ();\n    virtual ~base_t ();\n };\n \n class d1_t : public base_t {\n public:\n-   virtual char *name () { return \"d1_t\"; }\n+   virtual const char* name () { return \"d1_t\"; }\n \n    //   The const keyword on this constructor is an error,  but  it shouldn't\n    // cause the compiler to crash.\n@@ -27,7 +27,7 @@ public:\n \n class d2_t : public base_t {\n public:\n-   virtual char *name () { return \"d2_t\"; }\n+   virtual const char* name () { return \"d2_t\"; }\n \n    d2_t (int);\n    virtual ~d2_t ();"}, {"sha": "a630f9db4aa3a04c7cf023f91c90bad135b5b3b5", "filename": "gcc/testsuite/g++.old-deja/g++.law/dtors2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fdtors2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fdtors2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fdtors2.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -8,7 +8,7 @@ class bla {\n \n public:\n \n-        inline bla(char * jim) { ; };\n+        inline bla(const char * jim) { ; };\n \n         inline ~bla() { destruct++; if (destruct == 2) printf (\"PASS\\n\");};\n };"}, {"sha": "38c75b6634150cb77c4da294517d1dba8ffe9c77", "filename": "gcc/testsuite/g++.old-deja/g++.law/operators3.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Foperators3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Foperators3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Foperators3.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -10,13 +10,13 @@ class BUG1\n {\n   public:\n \n-    operator char*() const { return myData; }\n-    char* myData;\n+    operator const char*() const { return myData; }\n+    const char* myData;\n };\n \n void bug1()\n {\n   BUG1 bug1;\n   bug1.myData = \"0123456789\";\n-  char* s = bug1 + 1;\n+  const char* s = bug1 + 1;\n }"}, {"sha": "d6dd21c272451b36130c68472fafaf9db0aaf5cf", "filename": "gcc/testsuite/g++.old-deja/g++.law/refs1.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Frefs1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Frefs1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Frefs1.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -10,13 +10,13 @@\n \n class C {\n private:\n-   char** list;\n+   const char** list;\n public:\n-   C(char** );\n+   C(const char** );\n    void count (int&);\n };\n \n-C::C (char** l) {\n+C::C (const char** l) {\n    list = l;\n }\n \n@@ -29,7 +29,7 @@ void C::count (int& total) {\n    }\n }\n \n-char * foo[] = {\n+const char * foo[] = {\n    \"one\", \"two\", \"three\", NULL};\n \n int main() {"}, {"sha": "9d700499daeffa42fdee9e87d3875bdb31a99970", "filename": "gcc/testsuite/g++.old-deja/g++.law/union1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Funion1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Funion1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Funion1.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -10,7 +10,7 @@ typedef enum { BADBINOP = 0, PLUS, MINUS, MULT, DIV, POWR } binoptype;\n typedef enum { BADUNOP = 0, NEG = POWR+1, SIN, COS, TAN } unoptype;\n \n typedef struct {\n-  char *s;\n+  const char *s;\n   union {\n     binoptype bop;\n     unoptype uop;"}, {"sha": "02bfb2e5dfe375ea76da342c17d320c195c14ec0", "filename": "gcc/testsuite/g++.old-deja/g++.law/visibility1.C", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility1.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -7,20 +7,20 @@\n class base {\n //==========\n \n-    void base_priv(char * n) \t\t\n+    void base_priv(const char * n) \t\t\n \t{ std::cout << \"base_priv called from: \" << n << \"\\n\";  };\n \n protected:\n \n-    void base_prot(char * n) \n+    void base_prot(const char * n) \n \t{ std::cout << \"base_prot called from: \" << n << \"\\n\"; };\n \n public:\n \n-    void base_publ(char * n) \n+    void base_publ(const char * n) \n \t{ std::cout << \"base_publ called from: \" << n << \"\\n\"; };\n \n-    void test(char * n) { base_publ(n); base_prot(n); base_priv(n); }\n+    void test(const char * n) { base_publ(n); base_prot(n); base_priv(n); }\n \n }; // class base\n  \n@@ -33,7 +33,7 @@ friend void derived_friend();\n \n public :\n \n-    void test(char * n) { base_publ(n); base_prot(n);}\n+    void test(const char * n) { base_publ(n); base_prot(n);}\n \n }; // class derived\n "}, {"sha": "42d267368ce5dc324a977b547f0c51405f34dac1", "filename": "gcc/testsuite/g++.old-deja/g++.law/visibility2.C", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility2.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -7,20 +7,20 @@\n class base {\n //==========\n \n-    void base_priv(char * n) \t\t\n+    void base_priv(const char * n) \t\t\n \t{ std::cout << \"base_priv called from: \" << n << \"\\n\";  };\n \n protected:\n \n-    void base_prot(char * n) \n+    void base_prot(const char * n) \n \t{ std::cout << \"base_prot called from: \" << n << \"\\n\"; };\n \n public:\n \n-    void base_publ(char * n) \n+    void base_publ(const char * n) \n \t{ std::cout << \"base_publ called from: \" << n << \"\\n\"; };\n \n-    void test(char * n) { base_publ(n); base_prot(n); base_priv(n); }\n+    void test(const char * n) { base_publ(n); base_prot(n); base_priv(n); }\n \n }; // class base\n  \n@@ -33,7 +33,7 @@ friend void derived_friend();\n \n public :\n \n-    void test(char * n) { base_publ(n); base_prot(n);}\n+    void test(const char * n) { base_publ(n); base_prot(n);}\n \n }; // class derived\n "}, {"sha": "3d8bc3c03ebd382c9fa58cdec56613d28fbdf585", "filename": "gcc/testsuite/g++.old-deja/g++.mike/bool2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fbool2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fbool2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fbool2.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -14,7 +14,7 @@ public:\n } a1;\n class A2 {\n public:\n-  operator char * () {\n+  operator const char * () {\n     return \"\";\n   }\n } a2;\n@@ -26,7 +26,7 @@ public:\n } a3;\n class A4 {\n public:\n-  operator char * () {\n+  operator const char * () {\n     return \"\";\n   }\n   operator unsigned long long int () {"}, {"sha": "2553fab1dfc915f46b618223703724227cf5ecde", "filename": "gcc/testsuite/g++.old-deja/g++.mike/net48.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet48.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet48.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet48.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -1,14 +1,14 @@\n // { dg-do assemble  }\n \n-char *a=\"a\ufffd\";\n+const char *a=\"a\ufffd\";\n \n class A\n {\n public:\n \tA()\n \t{\n-\t\tchar *b=\"a\ufffd\";\n+\t\tconst char *b=\"a\ufffd\";\n \t}\n };\n \n-char *c=\"a\ufffd\";\n+const char *c=\"a\ufffd\";"}, {"sha": "4f7807d11604acbb6b49257efb63274f996b8d86", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p646.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp646.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp646.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp646.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -90,7 +90,7 @@ foo_parm_returns_foo (foo f)\n }\n \n void\n-abort_because (char *str)\n+abort_because (const char *str)\n {\n   printf (\"aborting because %s\\n\", str);\n   abort ();"}, {"sha": "09809a8017c27f78f9318cf69f0eb38d9957bdca", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p6746.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp6746.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp6746.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp6746.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -3,15 +3,15 @@\n \n class call_trace {\n public:\n-  call_trace(char* fcn_name);\n+  call_trace(const char* fcn_name);\n   ~call_trace();\n };\n \n static char * last_tree;\n extern \"C\" void prt();\n \n char * smt_mark_stree() {\n-  char* _my_name = \"smt_mark_stree\" ; \n+  const char* _my_name = \"smt_mark_stree\" ; \n   call_trace _t(_my_name);\n \n   return last_tree = 0 ? (char*)0 : (prt(), (char*)0);"}, {"sha": "5541bec08d1c143c4ceb87a84df5846bf30d394c", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p700.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp700.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp700.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp700.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -2097,7 +2097,7 @@ Enumeration Func1(CapitalLetter\tCharPar1, CapitalLetter\tCharPar2);\n boolean Func2(String30\tStrParI1, String30\tStrParI2);\n boolean Func3(Enumeration\tEnumParIn);\n \n-void mystrcpy(String30 s, char* t)\n+void mystrcpy(String30 s, const char* t)\n {\n   for (; *t != '\\0'; ++s, ++t) *s = *t;\n   *s = '\\0';"}, {"sha": "7097eeec03e640969df0b5e151c71195df091c8b", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p811.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp811.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp811.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp811.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -525,7 +525,7 @@ public:\n char *\n X::stringify() const  // { dg-error \"does not match\" }\n {\n-    return \"stringify\";\n+    return \"stringify\";         // { dg-warning \"deprecated\" }\n }\n \n const char *"}, {"sha": "022f2ef98079f03c03b9191de7291e1d2791e2d4", "filename": "gcc/testsuite/g++.old-deja/g++.other/init15.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finit15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finit15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finit15.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -7,7 +7,7 @@\n // to fall over.\n \n struct A {\n-  char *name;\n+  const char *name;\n   int reserved;\n   int a;\n   int b;"}, {"sha": "c91845c411ee3cad0fa6bc2abed76812048e94ee", "filename": "gcc/testsuite/g++.old-deja/g++.other/inline12.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finline12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finline12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finline12.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -62,10 +62,10 @@ class ShBop\n  public:\n   inline ShBop(const ShBe* theBe);\n   void            shWw(bool,\n-                                char* a1 = \"\",\n-                                char* a2 = \"\",\n+                                const char* a1 = \"\",\n+                                const char* a2 = \"\",\n                                 int   a3 = -1,\n-                                char* a4 = \"foo\");\n+                                const char* a4 = \"foo\");\n   typedef enum { shOk,\n                  shFailed,\n                  shDone,"}, {"sha": "fa9e37b378c7ed8e2e78e1df4d5373064fc22d36", "filename": "gcc/testsuite/g++.old-deja/g++.other/sibcall1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fsibcall1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fsibcall1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fsibcall1.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -3,7 +3,7 @@\n \n #include <iostream>\n \n-std::ostream& foo (char *x, std::ostream &y)\n+std::ostream& foo (const char *x, std::ostream &y)\n {\n   return y << \"\" << x;\n }"}, {"sha": "3a75aa0dbb56c72d843801765cf9c2b8eb208e41", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit8.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit8.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -8,6 +8,6 @@ void foo(double, U) {}\n \n void baz()\n {\n-  foo<char*>(3.0, \"abc\");\n-  foo<char*, double>(\"abc\", 3.0);\n+  foo<const char*>(3.0, \"abc\");\n+  foo<const char*, double>(\"abc\", 3.0);\n }"}, {"sha": "24c65b22a4e1566a48c507987461fa9d561a1089", "filename": "gcc/testsuite/g++.old-deja/g++.pt/m6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fm6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fm6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fm6.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -2,7 +2,7 @@\n \n struct B { struct A { A(); int a; } aa; };\n B::A::A () { a = 37; }\n-char* xx[] = {\n+const char* xx[] = {\n \"../tests/m6.cc:1: warning: return type specification for constructor invalid\",\n \"../tests/m6.cc:2: semicolon missing after declaration of `A'\",\n \"../tests/m6.cc:2: warning: empty declaration\","}, {"sha": "4c7fdd5e947d4057b166632566f78380b445e5b6", "filename": "gcc/testsuite/g++.old-deja/g++.pt/m7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fm7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fm7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fm7.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -2,7 +2,7 @@\n \n struct B { struct A { A(); int a; }; A aa; };\n B::A::A () { a = 37; }\n-char *xx[]= {\"/*\",\n+const char *xx[]= {\"/*\",\n \"../tests/m7.cc:1: warning: return type specification for constructor invalid\",\n \"../tests/m7.cc: In function struct A A ():\",\n \"../tests/m7.cc:2: `a' undeclared (first use this function)\","}, {"sha": "f48d00010f46c29f583a4e0073e4f035cd473802", "filename": "gcc/testsuite/g++.old-deja/g++.pt/nontype3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fnontype3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fnontype3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fnontype3.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -5,7 +5,7 @@ enum E { e };\n template <const E* ep>\n struct S1\n {\n-  static char* s;\n+  static const char* s;\n };\n \n template <int D>\n@@ -25,4 +25,4 @@ struct S3\n E S2<1>::es[1] = {e};\n \n template <>\n-char* S1<S2<1>::es>::s = \"abc\";\n+const char* S1<S2<1>::es>::s = \"abc\";"}, {"sha": "8f9bead3a715082bbb44c92123b295759f875616", "filename": "gcc/testsuite/g++.old-deja/g++.pt/t39.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ft39.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ft39.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ft39.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -16,7 +16,7 @@ void frob<T>::print () {\n }\n \n   static int x[10];\n-  frob<char> fc (\"hello\");\n+  frob<const char> fc (\"hello\");\n   frob<int> fi (x);\n \n int main () {"}, {"sha": "b341cff5502301a61730b81504ede0a04e7b914a", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb106.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb106.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb106.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb106.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -2,7 +2,7 @@\n // { dg-options \"-O2 -fPIC \" }\n struct T\n {\n-\tchar*\tf1;\n+\tconst char*\tf1;\n \tint\tf2;\n };\n "}, {"sha": "cefef775062aedb2648179bfd294cf026a47ee33", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/ice990323-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Fice990323-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Fice990323-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Fice990323-2.C?ref=7235a4d415d39ea2cd2c83ab3ddc1c04e295b62a", "patch": "@@ -5,7 +5,7 @@ extern \"C\" void exit (int);\n \n template <class T, int n, class U> struct A {\n \tA() {}\n-\tA(char*) {}\n+\tA(const char*) {}\n };\n \n void f1()"}]}