{"sha": "40ff1a2d1dd5ab23649e2df91a11534f3e654ace", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDBmZjFhMmQxZGQ1YWIyMzY0OWUyZGY5MWExMTUzNGYzZTY1NGFjZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-02-07T08:29:58Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-02-07T08:29:58Z"}, "message": "re PR tree-optimization/84235 (Miscompilation of floating point code by dom2)\n\n\tPR tree-optimization/84235\n\t* tree-ssa-scopedtables.c\n\t(avail_exprs_stack::simplify_binary_operation): Fir MINUS_EXPR, punt\n\tif the subtraction is performed in floating point type where NaNs are\n\thonored.  For *DIV_EXPR, punt for ALL_FRACT_MODE_Ps where we can't\n\tbuild 1.  Formatting fix.\n\n\t* gcc.c-torture/execute/ieee/pr84235.c: New test.\n\nFrom-SVN: r257437", "tree": {"sha": "4fc1f3a5020d94acba63a9414fcc4d840a1178d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fc1f3a5020d94acba63a9414fcc4d840a1178d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40ff1a2d1dd5ab23649e2df91a11534f3e654ace", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40ff1a2d1dd5ab23649e2df91a11534f3e654ace", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40ff1a2d1dd5ab23649e2df91a11534f3e654ace", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40ff1a2d1dd5ab23649e2df91a11534f3e654ace/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "84c71bb8ecc84f6ca5cbc56786b9ba74eb05057e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84c71bb8ecc84f6ca5cbc56786b9ba74eb05057e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84c71bb8ecc84f6ca5cbc56786b9ba74eb05057e"}], "stats": {"total": 41, "additions": 38, "deletions": 3}, "files": [{"sha": "088aa47757457b4f91ca395d8203faa3175b2583", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40ff1a2d1dd5ab23649e2df91a11534f3e654ace/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40ff1a2d1dd5ab23649e2df91a11534f3e654ace/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=40ff1a2d1dd5ab23649e2df91a11534f3e654ace", "patch": "@@ -1,3 +1,12 @@\n+2018-02-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/84235\n+\t* tree-ssa-scopedtables.c\n+\t(avail_exprs_stack::simplify_binary_operation): Fir MINUS_EXPR, punt\n+\tif the subtraction is performed in floating point type where NaNs are\n+\thonored.  For *DIV_EXPR, punt for ALL_FRACT_MODE_Ps where we can't\n+\tbuild 1.  Formatting fix.\n+\n 2018-02-06  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/84146"}, {"sha": "ac3949a3b023a6844eff74dfa143ecc2436a9e48", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40ff1a2d1dd5ab23649e2df91a11534f3e654ace/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40ff1a2d1dd5ab23649e2df91a11534f3e654ace/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=40ff1a2d1dd5ab23649e2df91a11534f3e654ace", "patch": "@@ -1,3 +1,8 @@\n+2018-02-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/84235\n+\t* gcc.c-torture/execute/ieee/pr84235.c: New test.\n+\n 2018-02-07  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR testsuite/84243"}, {"sha": "479b2b0f6ab188427bdabdf26d98a2c062bea5c4", "filename": "gcc/testsuite/gcc.c-torture/execute/ieee/pr84235.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40ff1a2d1dd5ab23649e2df91a11534f3e654ace/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Fpr84235.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40ff1a2d1dd5ab23649e2df91a11534f3e654ace/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Fpr84235.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Fpr84235.c?ref=40ff1a2d1dd5ab23649e2df91a11534f3e654ace", "patch": "@@ -0,0 +1,11 @@\n+/* PR tree-optimization/84235 */\n+\n+int\n+main ()\n+{\n+  double d = 1.0 / 0.0;\n+  _Bool b = d == d && (d - d) != (d - d);\n+  if (!b)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "2a40fdae0a27b78d84e9f989ef181bb5a89022b5", "filename": "gcc/tree-ssa-scopedtables.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40ff1a2d1dd5ab23649e2df91a11534f3e654ace/gcc%2Ftree-ssa-scopedtables.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40ff1a2d1dd5ab23649e2df91a11534f3e654ace/gcc%2Ftree-ssa-scopedtables.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-scopedtables.c?ref=40ff1a2d1dd5ab23649e2df91a11534f3e654ace", "patch": "@@ -182,8 +182,15 @@ avail_exprs_stack::simplify_binary_operation (gimple *stmt,\n \t\t      case BIT_AND_EXPR:\n \t\t\treturn gimple_assign_rhs1 (stmt);\n \n-\t\t      case BIT_XOR_EXPR:\n \t\t      case MINUS_EXPR:\n+\t\t\t/* This is unsafe for certain floats even in non-IEEE\n+\t\t\t   formats.  In IEEE, it is unsafe because it does\n+\t\t\t   wrong for NaNs.  */\n+\t\t\tif (FLOAT_TYPE_P (result_type)\n+\t\t\t    && HONOR_NANS (result_type))\n+\t\t\t  break;\n+\t\t\t/* FALLTHRU */\n+\t\t      case BIT_XOR_EXPR:\n \t\t      case TRUNC_MOD_EXPR:\n \t\t      case CEIL_MOD_EXPR:\n \t\t      case FLOOR_MOD_EXPR:\n@@ -195,6 +202,9 @@ avail_exprs_stack::simplify_binary_operation (gimple *stmt,\n \t\t      case FLOOR_DIV_EXPR:\n \t\t      case ROUND_DIV_EXPR:\n \t\t      case EXACT_DIV_EXPR:\n+\t\t\t/* Avoid _Fract types where we can't build 1.  */\n+\t\t\tif (ALL_FRACT_MODE_P (TYPE_MODE (result_type)))\n+\t\t\t  break;\n \t\t\treturn build_one_cst (result_type);\n \n \t\t      default:\n@@ -204,8 +214,8 @@ avail_exprs_stack::simplify_binary_operation (gimple *stmt,\n \t\tbreak;\n \t      }\n \n-\t      default:\n-\t\tbreak;\n+\t    default:\n+\t      break;\n \t    }\n \t}\n     }"}]}