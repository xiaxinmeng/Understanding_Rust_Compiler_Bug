{"sha": "31d87dd2368e1ecc527829f0da7c99a46cd16542", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzFkODdkZDIzNjhlMWVjYzUyNzgyOWYwZGE3Yzk5YTQ2Y2QxNjU0Mg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2018-07-31T20:51:06Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-07-31T20:51:06Z"}, "message": "targhooks.c (default_have_speculation_safe_value): Add ATTRIBUTE_UNUSED.\n\n\t* targhooks.c (default_have_speculation_safe_value): Add\n\tATTRIBUTE_UNUSED.\n\nFrom-SVN: r263180", "tree": {"sha": "5238c69e8b5701860fcc601ce4af068f113640e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5238c69e8b5701860fcc601ce4af068f113640e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31d87dd2368e1ecc527829f0da7c99a46cd16542", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31d87dd2368e1ecc527829f0da7c99a46cd16542", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31d87dd2368e1ecc527829f0da7c99a46cd16542", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31d87dd2368e1ecc527829f0da7c99a46cd16542/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b84e3bde926ea3a8824120108a0184fe32743bec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b84e3bde926ea3a8824120108a0184fe32743bec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b84e3bde926ea3a8824120108a0184fe32743bec"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "4d0efad289ddbf3de214cf57103cb6447c44a786", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31d87dd2368e1ecc527829f0da7c99a46cd16542/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31d87dd2368e1ecc527829f0da7c99a46cd16542/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=31d87dd2368e1ecc527829f0da7c99a46cd16542", "patch": "@@ -1,3 +1,8 @@\n+2018-07-31  Ian Lance Taylor  <iant@golang.org>\n+\n+\t* targhooks.c (default_have_speculation_safe_value): Add\n+\tATTRIBUTE_UNUSED.\n+\n 2018-07-31  David Malcolm  <dmalcolm@redhat.com>\n \n \t* dump-context.h: Include \"pretty-print.h\"."}, {"sha": "32b4993a1b16d2e3994ca02739ab3105be0797ad", "filename": "gcc/targhooks.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31d87dd2368e1ecc527829f0da7c99a46cd16542/gcc%2Ftarghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31d87dd2368e1ecc527829f0da7c99a46cd16542/gcc%2Ftarghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.c?ref=31d87dd2368e1ecc527829f0da7c99a46cd16542", "patch": "@@ -2316,7 +2316,7 @@ default_preferred_else_value (unsigned, tree type, unsigned, tree *)\n \n /* Default implementation of TARGET_HAVE_SPECULATION_SAFE_VALUE.  */\n bool\n-default_have_speculation_safe_value (bool active)\n+default_have_speculation_safe_value (bool active ATTRIBUTE_UNUSED)\n {\n #ifdef HAVE_speculation_barrier\n   return active ? HAVE_speculation_barrier : true;"}]}