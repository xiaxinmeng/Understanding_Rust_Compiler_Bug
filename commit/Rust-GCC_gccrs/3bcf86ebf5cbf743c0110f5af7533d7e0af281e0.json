{"sha": "3bcf86ebf5cbf743c0110f5af7533d7e0af281e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JjZjg2ZWJmNWNiZjc0M2MwMTEwZjVhZjc1MzNkN2UwYWYyODFlMA==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1997-02-07T20:09:10Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1997-02-07T20:09:10Z"}, "message": "Initial revision\n\nFrom-SVN: r13620", "tree": {"sha": "6bc78eaf7317a4bbc9e44f1e0976cd2c8c2070e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6bc78eaf7317a4bbc9e44f1e0976cd2c8c2070e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3bcf86ebf5cbf743c0110f5af7533d7e0af281e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bcf86ebf5cbf743c0110f5af7533d7e0af281e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bcf86ebf5cbf743c0110f5af7533d7e0af281e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bcf86ebf5cbf743c0110f5af7533d7e0af281e0/comments", "author": null, "committer": null, "parents": [{"sha": "d14834f1f8519e3e4fc0e0e1cda128ec15699e2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d14834f1f8519e3e4fc0e0e1cda128ec15699e2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d14834f1f8519e3e4fc0e0e1cda128ec15699e2c"}], "stats": {"total": 85, "additions": 85, "deletions": 0}, "files": [{"sha": "a0377e1c5758598311db685aa6d3b2ae885ea1a4", "filename": "gcc/cp/new1.cc", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bcf86ebf5cbf743c0110f5af7533d7e0af281e0/gcc%2Fcp%2Fnew1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bcf86ebf5cbf743c0110f5af7533d7e0af281e0/gcc%2Fcp%2Fnew1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fnew1.cc?ref=3bcf86ebf5cbf743c0110f5af7533d7e0af281e0", "patch": "@@ -0,0 +1,52 @@\n+// Support routine for the -*- C++ -*- dynamic memory management.\n+// Copyright (C) 1997 Free Software Foundation\n+\n+// This file is part of GNU CC.\n+\n+// GNU CC is free software; you can redistribute it and/or modify\n+// it under the terms of the GNU General Public License as published by\n+// the Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// GNU CC is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License\n+// along with GNU CC; see the file COPYING.  If not, write to\n+// the Free Software Foundation, 59 Temple Place - Suite 330,\n+// Boston, MA 02111-1307, USA. \n+\n+// As a special exception, if you link this library with other files,\n+// some of which are compiled with GCC, to produce an executable,\n+// this library does not by itself cause the resulting executable\n+// to be covered by the GNU General Public License.\n+// This exception does not however invalidate any other reasons why\n+// the executable file might be covered by the GNU General Public License.\n+\n+#include \"new\"\n+\n+typedef void (*vfp)(void);\n+extern vfp __new_handler;\n+extern void __default_new_handler (void);\n+\n+void *operator new (size_t sz, const nothrow_t&) throw()\n+{\n+  void *p;\n+  vfp handler = __new_handler;\n+\n+  /* malloc (0) is unpredictable; avoid it.  */\n+  if (sz == 0)\n+    sz = 1;\n+  p = (void *) malloc (sz);\n+  while (p == 0)\n+    {\n+      if (! handler)\n+\treturn 0;\n+      (*handler) ();\n+      p = (void *) malloc (sz);\n+    }\n+  \n+  return p;\n+}"}, {"sha": "5aca49d21d1160c16808faf531eafff683299bd5", "filename": "gcc/cp/new2.cc", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bcf86ebf5cbf743c0110f5af7533d7e0af281e0/gcc%2Fcp%2Fnew2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bcf86ebf5cbf743c0110f5af7533d7e0af281e0/gcc%2Fcp%2Fnew2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fnew2.cc?ref=3bcf86ebf5cbf743c0110f5af7533d7e0af281e0", "patch": "@@ -0,0 +1,33 @@\n+// Support routine for the -*- C++ -*- dynamic memory management.\n+// Copyright (C) 1997 Free Software Foundation\n+\n+// This file is part of GNU CC.\n+\n+// GNU CC is free software; you can redistribute it and/or modify\n+// it under the terms of the GNU General Public License as published by\n+// the Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// GNU CC is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License\n+// along with GNU CC; see the file COPYING.  If not, write to\n+// the Free Software Foundation, 59 Temple Place - Suite 330,\n+// Boston, MA 02111-1307, USA. \n+\n+// As a special exception, if you link this library with other files,\n+// some of which are compiled with GCC, to produce an executable,\n+// this library does not by itself cause the resulting executable\n+// to be covered by the GNU General Public License.\n+// This exception does not however invalidate any other reasons why\n+// the executable file might be covered by the GNU General Public License.\n+\n+#include \"new\"\n+\n+void *operator new[] (size_t sz, const nothrow_t& nothrow) throw()\n+{\n+  return ::operator new(sz, nothrow);\n+}"}]}