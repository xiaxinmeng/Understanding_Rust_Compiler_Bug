{"sha": "0323000245b73d7cd6e0935e71b3348963569ac1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDMyMzAwMDI0NWI3M2Q3Y2Q2ZTA5MzVlNzFiMzM0ODk2MzU2OWFjMQ==", "commit": {"author": {"name": "Wei Guozhi", "email": "carrot@google.com", "date": "2011-09-20T00:57:39Z"}, "committer": {"name": "Wei Guozhi", "email": "carrot@gcc.gnu.org", "date": "2011-09-20T00:57:39Z"}, "message": "re PR rtl-optimization/49452 (comp-goto-2.c regresses in testing)\n\n\tPR rtl-optimization/49452\n\t* postreload.c (reload_combine): Invalidate use information when across\n\tvolatile insn.\n\nFrom-SVN: r178995", "tree": {"sha": "21b7fbaa80d5949dc07beda56cbbe7ef812c4ea6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21b7fbaa80d5949dc07beda56cbbe7ef812c4ea6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0323000245b73d7cd6e0935e71b3348963569ac1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0323000245b73d7cd6e0935e71b3348963569ac1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0323000245b73d7cd6e0935e71b3348963569ac1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0323000245b73d7cd6e0935e71b3348963569ac1/comments", "author": {"login": "weiguozhi", "id": 57237827, "node_id": "MDQ6VXNlcjU3MjM3ODI3", "avatar_url": "https://avatars.githubusercontent.com/u/57237827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiguozhi", "html_url": "https://github.com/weiguozhi", "followers_url": "https://api.github.com/users/weiguozhi/followers", "following_url": "https://api.github.com/users/weiguozhi/following{/other_user}", "gists_url": "https://api.github.com/users/weiguozhi/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiguozhi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiguozhi/subscriptions", "organizations_url": "https://api.github.com/users/weiguozhi/orgs", "repos_url": "https://api.github.com/users/weiguozhi/repos", "events_url": "https://api.github.com/users/weiguozhi/events{/privacy}", "received_events_url": "https://api.github.com/users/weiguozhi/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e31f8881c864e39c97de9522c12c74be80fac087", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e31f8881c864e39c97de9522c12c74be80fac087", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e31f8881c864e39c97de9522c12c74be80fac087"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "1f2a714c4e3763643ac93bbc0dab58d660d4b299", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0323000245b73d7cd6e0935e71b3348963569ac1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0323000245b73d7cd6e0935e71b3348963569ac1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0323000245b73d7cd6e0935e71b3348963569ac1", "patch": "@@ -1,3 +1,9 @@\n+2011-09-20  Wei Guozhi  <carrot@google.com>\n+\n+\tPR rtl-optimization/49452\n+\t* postreload.c (reload_combine): Invalidate use information when across\n+\tvolatile insn.\n+\n 2011-09-19  Maxim Kuvyrkov  <maxim@codesourcery.com>\n \n \t* haifa-sched.c (has_edge_p, prev_non_location_insn, check_cfg):"}, {"sha": "8994366d922f8ddfac4df8498f636f3bd88a1605", "filename": "gcc/postreload.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0323000245b73d7cd6e0935e71b3348963569ac1/gcc%2Fpostreload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0323000245b73d7cd6e0935e71b3348963569ac1/gcc%2Fpostreload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpostreload.c?ref=0323000245b73d7cd6e0935e71b3348963569ac1", "patch": "@@ -1312,7 +1312,8 @@ reload_combine (void)\n \t is and then later disable any optimization that would cross it.  */\n       if (LABEL_P (insn))\n \tlast_label_ruid = reload_combine_ruid;\n-      else if (BARRIER_P (insn))\n+      else if (BARRIER_P (insn)\n+\t       || (INSN_P (insn) && volatile_insn_p (PATTERN (insn))))\n \tfor (r = 0; r < FIRST_PSEUDO_REGISTER; r++)\n \t  if (! fixed_regs[r])\n \t      reg_state[r].use_index = RELOAD_COMBINE_MAX_USES;"}]}