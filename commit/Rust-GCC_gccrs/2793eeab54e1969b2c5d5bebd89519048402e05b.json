{"sha": "2793eeab54e1969b2c5d5bebd89519048402e05b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjc5M2VlYWI1NGUxOTY5YjJjNWQ1YmViZDg5NTE5MDQ4NDAyZTA1Yg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2014-05-08T18:19:09Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2014-05-08T18:19:09Z"}, "message": "re PR c/61053 (_Alignas(long long) reduces alignment of long long)\n\n\tPR c/61053\nc-family/\n\t* c-common.c (min_align_of_type): New function factored out from...\n\t(c_sizeof_or_alignof_type): ...here.\n\t* c-common.h (min_align_of_type): Declare.\nc/\n\t* c-decl.c (grokdeclarator): Use min_align_of_type instead of\n\tTYPE_ALIGN_UNIT.\ntestsuite/\n\t* gcc.dg/pr61053.c: New test.\n\nFrom-SVN: r210230", "tree": {"sha": "91105210787a491bfe8736eb9fa6b7e58c1e68c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91105210787a491bfe8736eb9fa6b7e58c1e68c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2793eeab54e1969b2c5d5bebd89519048402e05b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2793eeab54e1969b2c5d5bebd89519048402e05b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2793eeab54e1969b2c5d5bebd89519048402e05b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2793eeab54e1969b2c5d5bebd89519048402e05b/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f827930ae282f8ae4bedf0a38dbc2fa99d2b3d08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f827930ae282f8ae4bedf0a38dbc2fa99d2b3d08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f827930ae282f8ae4bedf0a38dbc2fa99d2b3d08"}], "stats": {"total": 132, "additions": 116, "deletions": 16}, "files": [{"sha": "fc84f31e4821155378194699d3f7e2dc21e025fd", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2793eeab54e1969b2c5d5bebd89519048402e05b/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2793eeab54e1969b2c5d5bebd89519048402e05b/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=2793eeab54e1969b2c5d5bebd89519048402e05b", "patch": "@@ -1,3 +1,10 @@\n+2014-05-08  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/61053\n+\t* c-common.c (min_align_of_type): New function factored out from...\n+\t(c_sizeof_or_alignof_type): ...here.\n+\t* c-common.h (min_align_of_type): Declare.\n+\n 2014-05-08  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/61077"}, {"sha": "d7c85fcaf7f33742e83715171e3e0ae573fe8ea1", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 21, "deletions": 15, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2793eeab54e1969b2c5d5bebd89519048402e05b/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2793eeab54e1969b2c5d5bebd89519048402e05b/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=2793eeab54e1969b2c5d5bebd89519048402e05b", "patch": "@@ -4938,6 +4938,26 @@ c_common_get_alias_set (tree t)\n   return -1;\n }\n \f\n+/* Return the least alignment required for type TYPE.  */\n+\n+unsigned int\n+min_align_of_type (tree type)\n+{\n+  unsigned int align = TYPE_ALIGN (type);\n+  align = MIN (align, BIGGEST_ALIGNMENT);\n+#ifdef BIGGEST_FIELD_ALIGNMENT\n+  align = MIN (align, BIGGEST_FIELD_ALIGNMENT);\n+#endif\n+  unsigned int field_align = align;\n+#ifdef ADJUST_FIELD_ALIGN\n+  tree field = build_decl (UNKNOWN_LOCATION, FIELD_DECL, NULL_TREE,\n+\t\t\t   type);\n+  field_align = ADJUST_FIELD_ALIGN (field, field_align);\n+#endif\n+  align = MIN (align, field_align);\n+  return align / BITS_PER_UNIT;\n+}\n+\n /* Compute the value of 'sizeof (TYPE)' or '__alignof__ (TYPE)', where\n    the IS_SIZEOF parameter indicates which operator is being applied.\n    The COMPLAIN flag controls whether we should diagnose possibly\n@@ -5016,21 +5036,7 @@ c_sizeof_or_alignof_type (location_t loc,\n \t\t\t\tsize_int (TYPE_PRECISION (char_type_node)\n \t\t\t\t\t  / BITS_PER_UNIT));\n       else if (min_alignof)\n-\t{\n-\t  unsigned int align = TYPE_ALIGN (type);\n-\t  align = MIN (align, BIGGEST_ALIGNMENT);\n-#ifdef BIGGEST_FIELD_ALIGNMENT\n-\t  align = MIN (align, BIGGEST_FIELD_ALIGNMENT);\n-#endif\n-\t  unsigned int field_align = align;\n-#ifdef ADJUST_FIELD_ALIGN\n-\t  tree field = build_decl (UNKNOWN_LOCATION, FIELD_DECL, NULL_TREE,\n-\t\t\t\t   type);\n-\t  field_align = ADJUST_FIELD_ALIGN (field, field_align);\n-#endif\n-\t  align = MIN (align, field_align);\n-\t  value = size_int (align / BITS_PER_UNIT);\n-\t}\n+\tvalue = size_int (min_align_of_type (type));\n       else\n \tvalue = size_int (TYPE_ALIGN_UNIT (type));\n     }"}, {"sha": "d34d2bb2eb99cd07d97d8450aa092773724c2985", "filename": "gcc/c-family/c-common.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2793eeab54e1969b2c5d5bebd89519048402e05b/gcc%2Fc-family%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2793eeab54e1969b2c5d5bebd89519048402e05b/gcc%2Fc-family%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.h?ref=2793eeab54e1969b2c5d5bebd89519048402e05b", "patch": "@@ -758,6 +758,7 @@ extern tree c_wrap_maybe_const (tree, bool);\n extern tree c_save_expr (tree);\n extern tree c_common_truthvalue_conversion (location_t, tree);\n extern void c_apply_type_quals_to_decl (int, tree);\n+extern unsigned int min_align_of_type (tree);\n extern tree c_sizeof_or_alignof_type (location_t, tree, bool, bool, int);\n extern tree c_alignof_expr (location_t, tree);\n /* Print an error message for invalid operands to arith operation CODE."}, {"sha": "1c8c435f06186fd965fc01518bed669da6cdc423", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2793eeab54e1969b2c5d5bebd89519048402e05b/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2793eeab54e1969b2c5d5bebd89519048402e05b/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=2793eeab54e1969b2c5d5bebd89519048402e05b", "patch": "@@ -1,3 +1,9 @@\n+2014-05-08  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/61053\n+\t* c-decl.c (grokdeclarator): Use min_align_of_type instead of\n+\tTYPE_ALIGN_UNIT.\n+\n 2014-05-08  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/61077"}, {"sha": "d52dcc9b25ba47d3c9279268b7b32b6d4d9620db", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2793eeab54e1969b2c5d5bebd89519048402e05b/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2793eeab54e1969b2c5d5bebd89519048402e05b/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=2793eeab54e1969b2c5d5bebd89519048402e05b", "patch": "@@ -5931,7 +5931,7 @@ grokdeclarator (const struct c_declarator *declarator,\n       else if (declspecs->align_log != -1)\n \t{\n \t  alignas_align = 1U << declspecs->align_log;\n-\t  if (alignas_align < TYPE_ALIGN_UNIT (type))\n+\t  if (alignas_align < min_align_of_type (type))\n \t    {\n \t      if (name)\n \t\terror_at (loc, \"%<_Alignas%> specifiers cannot reduce \""}, {"sha": "bbfb333b90d6e42e0efd0d905a881f591fbb1322", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2793eeab54e1969b2c5d5bebd89519048402e05b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2793eeab54e1969b2c5d5bebd89519048402e05b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2793eeab54e1969b2c5d5bebd89519048402e05b", "patch": "@@ -1,3 +1,8 @@\n+2014-05-08  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/61053\n+\t* gcc.dg/pr61053.c: New test.\n+\n 2014-05-08  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/61077"}, {"sha": "4fd531974f70d7a91502cbe16b121385de76b155", "filename": "gcc/testsuite/gcc.dg/pr61053.c", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2793eeab54e1969b2c5d5bebd89519048402e05b/gcc%2Ftestsuite%2Fgcc.dg%2Fpr61053.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2793eeab54e1969b2c5d5bebd89519048402e05b/gcc%2Ftestsuite%2Fgcc.dg%2Fpr61053.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr61053.c?ref=2793eeab54e1969b2c5d5bebd89519048402e05b", "patch": "@@ -0,0 +1,75 @@\n+/* PR c/61053 */\n+/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n+/* { dg-options \"-std=c11 -pedantic-errors\" } */\n+\n+_Alignas (char) char cc;\n+_Alignas (short int) char cs;\n+_Alignas (int) char ci;\n+_Alignas (long int) char cl;\n+_Alignas (long long int) char cll;\n+_Alignas (float) char cf;\n+_Alignas (double) char cd;\n+_Alignas (long double) char cld;\n+\n+_Alignas (char) short int sc; /* { dg-error \"cannot reduce alignment\" } */\n+_Alignas (short int) short int ss;\n+_Alignas (int) short int si;\n+_Alignas (long int) short int sl;\n+_Alignas (long long int) short int sll;\n+_Alignas (float) short int sf;\n+_Alignas (double) short int sd;\n+_Alignas (long double) short int sld;\n+\n+_Alignas (char) int ic; /* { dg-error \"cannot reduce alignment\" } */\n+_Alignas (short int) int is; /* { dg-error \"cannot reduce alignment\" } */\n+_Alignas (int) int ii;\n+_Alignas (long int) int il;\n+_Alignas (long long int) int ill;\n+_Alignas (float) int if_;\n+_Alignas (double) int id;\n+_Alignas (long double) int ild;\n+\n+_Alignas (char) long int lic; /* { dg-error \"cannot reduce alignment\" } */\n+_Alignas (short int) long int lis; /* { dg-error \"cannot reduce alignment\" } */\n+_Alignas (int) long int lii; /* { dg-error \"cannot reduce alignment\" \"\" { target { ! { ia32 } } } } */\n+_Alignas (long int) long int lil;\n+_Alignas (long long int) long int lill;\n+_Alignas (float) long int lif; /* { dg-error \"cannot reduce alignment\" \"\" { target { ! { ia32 } } } } */\n+_Alignas (double) long int lid;\n+_Alignas (long double) long int lild;\n+\n+_Alignas (char) long long int llic; /* { dg-error \"cannot reduce alignment\" } */\n+_Alignas (short int) long long int llis; /* { dg-error \"cannot reduce alignment\" } */\n+_Alignas (int) long long int llii; /* { dg-error \"cannot reduce alignment\" \"\" { target { ! { ia32 } } } } */\n+_Alignas (long int) long long int llil;\n+_Alignas (long long int) long long int llill;\n+_Alignas (float) long long int llif; /* { dg-error \"cannot reduce alignment\" \"\" { target { ! { ia32 } } } } */\n+_Alignas (double) long long int llid;\n+_Alignas (long double) long long int llild;\n+\n+_Alignas (char) float fc; /* { dg-error \"cannot reduce alignment\" } */\n+_Alignas (short int) float fs; /* { dg-error \"cannot reduce alignment\" } */\n+_Alignas (int) float fi;\n+_Alignas (long int) float fl;\n+_Alignas (long long int) float fll;\n+_Alignas (float) float ff;\n+_Alignas (double) float fd;\n+_Alignas (long double) float fld;\n+\n+_Alignas (char) double dc; /* { dg-error \"cannot reduce alignment\" } */\n+_Alignas (short int) double ds; /* { dg-error \"cannot reduce alignment\" } */\n+_Alignas (int) double di; /* { dg-error \"cannot reduce alignment\" \"\" { target { ! { ia32 } } } } */\n+_Alignas (long int) double dl;\n+_Alignas (long long int) double dll;\n+_Alignas (float) double df; /* { dg-error \"cannot reduce alignment\" \"\" { target { ! { ia32 } } } } */\n+_Alignas (double) double dd;\n+_Alignas (long double) double dld;\n+\n+_Alignas (char) long double ldc; /* { dg-error \"cannot reduce alignment\" } */\n+_Alignas (short int) long double lds; /* { dg-error \"cannot reduce alignment\" } */\n+_Alignas (int) long double ldi; /* { dg-error \"cannot reduce alignment\" \"\" { target { ! { ia32 } } } } */\n+_Alignas (long int) long double ldl; /* { dg-error \"cannot reduce alignment\" \"\" { target { ! { ia32 } } } } */\n+_Alignas (long long int) long double ldll; /* { dg-error \"cannot reduce alignment\" \"\" { target { ! { ia32 } } } } */\n+_Alignas (float) long double ldf; /* { dg-error \"cannot reduce alignment\" \"\" { target { ! { ia32 } } } } */\n+_Alignas (double) long double ldd; /* { dg-error \"cannot reduce alignment\" \"\" { target { ! { ia32 } } } } */\n+_Alignas (long double) long double ldld;"}]}