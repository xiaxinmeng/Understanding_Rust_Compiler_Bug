{"sha": "49adc4618014f627ea2420de215899c038c976ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDlhZGM0NjE4MDE0ZjYyN2VhMjQyMGRlMjE1ODk5YzAzOGM5NzZlYw==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.ibm.com", "date": "2019-04-02T11:08:54Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2019-04-02T11:08:54Z"}, "message": "S/390: arch13: vector string search builtins\n\ngcc/ChangeLog:\n\n2019-04-02  Andreas Krebbel  <krebbel@linux.ibm.com>\n\n\t* config/s390/s390-builtin-types.def: New builtin function type\n\tdefinitions.\n\t* config/s390/s390-builtins.def (s390_vec_search_string_cc)\n\t(s390_vec_search_string_until_zero_cc): New overloaded builtins.\n\t(s390_vstrsb, s390_vstrsh, s390_vstrsf, s390_vstrszb)\n\t(s390_vstrszh, s390_vstrszf): New low-level builtins.\n\t* config/s390/s390.md (UNSPEC_VEC_VSTRS, UNSPEC_VEC_VSTRSCC): New\n\tconstant definitions.\n\t* config/s390/vecintrin.h (vec_search_string_cc)\n\t(vec_search_string_until_zero_cc): New builtin name definitions.\n\t* config/s390/vx-builtins.md (\"vstrs<mode>\", \"vstrsz<mode>\"): New\n\texpanders.\n\t(\"vec_vstrs<mode>\"): New insn definition.\n\ngcc/testsuite/ChangeLog:\n\n2019-04-02  Andreas Krebbel  <krebbel@linux.ibm.com>\n\n\t* gcc.target/s390/zvector/vec-search-string-cc-1.c: New test.\n\t* gcc.target/s390/zvector/vec-search-string-cc-compile.c: New test.\n\t* gcc.target/s390/zvector/vec-search-string-until-zero-cc-1.c: New test.\n\t* gcc.target/s390/zvector/vec-search-string-until-zero-cc-compile.c: New test.\n\nFrom-SVN: r270090", "tree": {"sha": "8ffc7b4c9ea6a658c15ebd0c846e9c2153e07a8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ffc7b4c9ea6a658c15ebd0c846e9c2153e07a8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49adc4618014f627ea2420de215899c038c976ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49adc4618014f627ea2420de215899c038c976ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49adc4618014f627ea2420de215899c038c976ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49adc4618014f627ea2420de215899c038c976ec/comments", "author": {"login": "Andreas-Krebbel", "id": 38103320, "node_id": "MDQ6VXNlcjM4MTAzMzIw", "avatar_url": "https://avatars.githubusercontent.com/u/38103320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andreas-Krebbel", "html_url": "https://github.com/Andreas-Krebbel", "followers_url": "https://api.github.com/users/Andreas-Krebbel/followers", "following_url": "https://api.github.com/users/Andreas-Krebbel/following{/other_user}", "gists_url": "https://api.github.com/users/Andreas-Krebbel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andreas-Krebbel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andreas-Krebbel/subscriptions", "organizations_url": "https://api.github.com/users/Andreas-Krebbel/orgs", "repos_url": "https://api.github.com/users/Andreas-Krebbel/repos", "events_url": "https://api.github.com/users/Andreas-Krebbel/events{/privacy}", "received_events_url": "https://api.github.com/users/Andreas-Krebbel/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ad7a3e3997ec96cdb8b0e7bd3fe3b7d74061700b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad7a3e3997ec96cdb8b0e7bd3fe3b7d74061700b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad7a3e3997ec96cdb8b0e7bd3fe3b7d74061700b"}], "stats": {"total": 304, "additions": 304, "deletions": 0}, "files": [{"sha": "149570703aff6b0932a185afc81a1326bf8aced5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49adc4618014f627ea2420de215899c038c976ec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49adc4618014f627ea2420de215899c038c976ec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=49adc4618014f627ea2420de215899c038c976ec", "patch": "@@ -1,3 +1,19 @@\n+2019-04-02  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\t* config/s390/s390-builtin-types.def: New builtin function type\n+\tdefinitions.\n+\t* config/s390/s390-builtins.def (s390_vec_search_string_cc)\n+\t(s390_vec_search_string_until_zero_cc): New overloaded builtins.\n+\t(s390_vstrsb, s390_vstrsh, s390_vstrsf, s390_vstrszb)\n+\t(s390_vstrszh, s390_vstrszf): New low-level builtins.\n+\t* config/s390/s390.md (UNSPEC_VEC_VSTRS, UNSPEC_VEC_VSTRSCC): New\n+\tconstant definitions.\n+\t* config/s390/vecintrin.h (vec_search_string_cc)\n+\t(vec_search_string_until_zero_cc): New builtin name definitions.\n+\t* config/s390/vx-builtins.md (\"vstrs<mode>\", \"vstrsz<mode>\"): New\n+\texpanders.\n+\t(\"vec_vstrs<mode>\"): New insn definition.\n+\n 2019-04-02  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n \t* config/s390/s390-builtin-types.def: Add new builtin function"}, {"sha": "fc73d1f673164d121b4bbcf7700792623dc0f0c6", "filename": "gcc/config/s390/s390-builtin-types.def", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49adc4618014f627ea2420de215899c038c976ec/gcc%2Fconfig%2Fs390%2Fs390-builtin-types.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49adc4618014f627ea2420de215899c038c976ec/gcc%2Fconfig%2Fs390%2Fs390-builtin-types.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390-builtin-types.def?ref=49adc4618014f627ea2420de215899c038c976ec", "patch": "@@ -351,14 +351,17 @@ DEF_FN_TYPE_4 (BT_FN_OV4SI_OV4SI_OUV4SI_INTCONSTPTR_UCHAR, BT_OV4SI, BT_OV4SI, B\n DEF_FN_TYPE_4 (BT_FN_OV4SI_OV4SI_OV4SI_OV4SI_INTPTR, BT_OV4SI, BT_OV4SI, BT_OV4SI, BT_OV4SI, BT_INTPTR)\n DEF_FN_TYPE_4 (BT_FN_UV16QI_UV16QI_UV16QI_INT_INTPTR, BT_UV16QI, BT_UV16QI, BT_UV16QI, BT_INT, BT_INTPTR)\n DEF_FN_TYPE_4 (BT_FN_UV16QI_UV16QI_UV16QI_UV16QI_INT, BT_UV16QI, BT_UV16QI, BT_UV16QI, BT_UV16QI, BT_INT)\n+DEF_FN_TYPE_4 (BT_FN_UV16QI_UV16QI_UV16QI_UV16QI_INTPTR, BT_UV16QI, BT_UV16QI, BT_UV16QI, BT_UV16QI, BT_INTPTR)\n DEF_FN_TYPE_4 (BT_FN_UV16QI_UV2DI_UV2DI_UV16QI_INT, BT_UV16QI, BT_UV2DI, BT_UV2DI, BT_UV16QI, BT_INT)\n DEF_FN_TYPE_4 (BT_FN_UV2DI_UV2DI_UV2DI_ULONGLONGCONSTPTR_UCHAR, BT_UV2DI, BT_UV2DI, BT_UV2DI, BT_ULONGLONGCONSTPTR, BT_UCHAR)\n DEF_FN_TYPE_4 (BT_FN_UV2DI_UV2DI_UV2DI_UV2DI_INT, BT_UV2DI, BT_UV2DI, BT_UV2DI, BT_UV2DI, BT_INT)\n DEF_FN_TYPE_4 (BT_FN_UV4SI_UV4SI_UV4SI_INT_INTPTR, BT_UV4SI, BT_UV4SI, BT_UV4SI, BT_INT, BT_INTPTR)\n DEF_FN_TYPE_4 (BT_FN_UV4SI_UV4SI_UV4SI_UINTCONSTPTR_UCHAR, BT_UV4SI, BT_UV4SI, BT_UV4SI, BT_UINTCONSTPTR, BT_UCHAR)\n DEF_FN_TYPE_4 (BT_FN_UV4SI_UV4SI_UV4SI_UV4SI_INT, BT_UV4SI, BT_UV4SI, BT_UV4SI, BT_UV4SI, BT_INT)\n+DEF_FN_TYPE_4 (BT_FN_UV4SI_UV4SI_UV4SI_UV8HI_INTPTR, BT_UV4SI, BT_UV4SI, BT_UV4SI, BT_UV8HI, BT_INTPTR)\n DEF_FN_TYPE_4 (BT_FN_UV8HI_UV8HI_UV8HI_INT_INTPTR, BT_UV8HI, BT_UV8HI, BT_UV8HI, BT_INT, BT_INTPTR)\n DEF_FN_TYPE_4 (BT_FN_UV8HI_UV8HI_UV8HI_UV8HI_INT, BT_UV8HI, BT_UV8HI, BT_UV8HI, BT_UV8HI, BT_INT)\n+DEF_FN_TYPE_4 (BT_FN_UV8HI_UV8HI_UV8HI_UV8HI_INTPTR, BT_UV8HI, BT_UV8HI, BT_UV8HI, BT_UV8HI, BT_INTPTR)\n DEF_FN_TYPE_4 (BT_FN_VOID_UV2DI_UV2DI_ULONGLONGPTR_ULONGLONG, BT_VOID, BT_UV2DI, BT_UV2DI, BT_ULONGLONGPTR, BT_ULONGLONG)\n DEF_FN_TYPE_4 (BT_FN_VOID_UV4SI_UV4SI_UINTPTR_ULONGLONG, BT_VOID, BT_UV4SI, BT_UV4SI, BT_UINTPTR, BT_ULONGLONG)\n DEF_FN_TYPE_4 (BT_FN_VOID_V4SI_V4SI_INTPTR_ULONGLONG, BT_VOID, BT_V4SI, BT_V4SI, BT_INTPTR, BT_ULONGLONG)\n@@ -495,7 +498,10 @@ DEF_OV_TYPE (BT_OV_USHORT_BV8HI_INT, BT_USHORT, BT_BV8HI, BT_INT)\n DEF_OV_TYPE (BT_OV_USHORT_UV8HI_INT, BT_USHORT, BT_UV8HI, BT_INT)\n DEF_OV_TYPE (BT_OV_UV16QI_BV16QI_BV16QI, BT_UV16QI, BT_BV16QI, BT_BV16QI)\n DEF_OV_TYPE (BT_OV_UV16QI_BV16QI_BV16QI_INTPTR, BT_UV16QI, BT_BV16QI, BT_BV16QI, BT_INTPTR)\n+DEF_OV_TYPE (BT_OV_UV16QI_BV16QI_BV16QI_UV16QI_INTPTR, BT_UV16QI, BT_BV16QI, BT_BV16QI, BT_UV16QI, BT_INTPTR)\n DEF_OV_TYPE (BT_OV_UV16QI_BV16QI_UV16QI, BT_UV16QI, BT_BV16QI, BT_UV16QI)\n+DEF_OV_TYPE (BT_OV_UV16QI_BV4SI_BV4SI_UV16QI_INTPTR, BT_UV16QI, BT_BV4SI, BT_BV4SI, BT_UV16QI, BT_INTPTR)\n+DEF_OV_TYPE (BT_OV_UV16QI_BV8HI_BV8HI_UV16QI_INTPTR, BT_UV16QI, BT_BV8HI, BT_BV8HI, BT_UV16QI, BT_INTPTR)\n DEF_OV_TYPE (BT_OV_UV16QI_LONG_UCHARCONSTPTR, BT_UV16QI, BT_LONG, BT_UCHARCONSTPTR)\n DEF_OV_TYPE (BT_OV_UV16QI_UCHAR, BT_UV16QI, BT_UCHAR)\n DEF_OV_TYPE (BT_OV_UV16QI_UCHARCONSTPTR, BT_UV16QI, BT_UCHARCONSTPTR)\n@@ -523,10 +529,15 @@ DEF_OV_TYPE (BT_OV_UV16QI_UV16QI_UV8HI, BT_UV16QI, BT_UV16QI, BT_UV8HI)\n DEF_OV_TYPE (BT_OV_UV16QI_UV16QI_V16QI, BT_UV16QI, BT_UV16QI, BT_V16QI)\n DEF_OV_TYPE (BT_OV_UV16QI_UV2DI_UV2DI, BT_UV16QI, BT_UV2DI, BT_UV2DI)\n DEF_OV_TYPE (BT_OV_UV16QI_UV4SI_UV4SI, BT_UV16QI, BT_UV4SI, BT_UV4SI)\n+DEF_OV_TYPE (BT_OV_UV16QI_UV4SI_UV4SI_UV16QI_INTPTR, BT_UV16QI, BT_UV4SI, BT_UV4SI, BT_UV16QI, BT_INTPTR)\n DEF_OV_TYPE (BT_OV_UV16QI_UV8HI_UV8HI, BT_UV16QI, BT_UV8HI, BT_UV8HI)\n DEF_OV_TYPE (BT_OV_UV16QI_UV8HI_UV8HI_INTPTR, BT_UV16QI, BT_UV8HI, BT_UV8HI, BT_INTPTR)\n+DEF_OV_TYPE (BT_OV_UV16QI_UV8HI_UV8HI_UV16QI_INTPTR, BT_UV16QI, BT_UV8HI, BT_UV8HI, BT_UV16QI, BT_INTPTR)\n DEF_OV_TYPE (BT_OV_UV16QI_V16QI, BT_UV16QI, BT_V16QI)\n+DEF_OV_TYPE (BT_OV_UV16QI_V16QI_V16QI_UV16QI_INTPTR, BT_UV16QI, BT_V16QI, BT_V16QI, BT_UV16QI, BT_INTPTR)\n+DEF_OV_TYPE (BT_OV_UV16QI_V4SI_V4SI_UV16QI_INTPTR, BT_UV16QI, BT_V4SI, BT_V4SI, BT_UV16QI, BT_INTPTR)\n DEF_OV_TYPE (BT_OV_UV16QI_V8HI_V8HI, BT_UV16QI, BT_V8HI, BT_V8HI)\n+DEF_OV_TYPE (BT_OV_UV16QI_V8HI_V8HI_UV16QI_INTPTR, BT_UV16QI, BT_V8HI, BT_V8HI, BT_UV16QI, BT_INTPTR)\n DEF_OV_TYPE (BT_OV_UV2DI_BV2DI_UV2DI, BT_UV2DI, BT_BV2DI, BT_UV2DI)\n DEF_OV_TYPE (BT_OV_UV2DI_LONG_ULONGLONGCONSTPTR, BT_UV2DI, BT_LONG, BT_ULONGLONGCONSTPTR)\n DEF_OV_TYPE (BT_OV_UV2DI_ULONGLONG, BT_UV2DI, BT_ULONGLONG)"}, {"sha": "108f997720c6528ec9625fb48e1dbf0efdf052b5", "filename": "gcc/config/s390/s390-builtins.def", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49adc4618014f627ea2420de215899c038c976ec/gcc%2Fconfig%2Fs390%2Fs390-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49adc4618014f627ea2420de215899c038c976ec/gcc%2Fconfig%2Fs390%2Fs390-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390-builtins.def?ref=49adc4618014f627ea2420de215899c038c976ec", "patch": "@@ -2951,3 +2951,33 @@ OB_DEF_VAR (s390_vec_srdb_flt,          s390_vsrd,          0,\n OB_DEF_VAR (s390_vec_srdb_dbl,          s390_vsrd,          0,                  O3_U3,              BT_OV_V2DF_V2DF_V2DF_UINT)\n \n B_DEF      (s390_vsrd,                  vec_srdbv16qi,      0,                  B_VXE2,             O3_U3,              BT_FN_UV16QI_UV16QI_UV16QI_INT)\n+\n+OB_DEF     (s390_vec_search_string_cc,  s390_vstrs_s8,      s390_vstrs_u32,     B_VXE2,             BT_FN_OV4SI_OV4SI_OV4SI_OV4SI_INTPTR)\n+OB_DEF_VAR (s390_vstrs_s8,              s390_vstrsb,        0,                  0,                  BT_OV_UV16QI_V16QI_V16QI_UV16QI_INTPTR)\n+OB_DEF_VAR (s390_vstrs_b8,              s390_vstrsb,        0,                  0,                  BT_OV_UV16QI_BV16QI_BV16QI_UV16QI_INTPTR)\n+OB_DEF_VAR (s390_vstrs_u8,              s390_vstrsb,        0,                  0,                  BT_OV_UV16QI_UV16QI_UV16QI_UV16QI_INTPTR)\n+OB_DEF_VAR (s390_vstrs_s16,             s390_vstrsh,        0,                  0,                  BT_OV_UV16QI_V8HI_V8HI_UV16QI_INTPTR)\n+OB_DEF_VAR (s390_vstrs_b16,             s390_vstrsh,        0,                  0,                  BT_OV_UV16QI_BV8HI_BV8HI_UV16QI_INTPTR)\n+OB_DEF_VAR (s390_vstrs_u16,             s390_vstrsh,        0,                  0,                  BT_OV_UV16QI_UV8HI_UV8HI_UV16QI_INTPTR)\n+OB_DEF_VAR (s390_vstrs_s32,             s390_vstrsf,        0,                  0,                  BT_OV_UV16QI_V4SI_V4SI_UV16QI_INTPTR)\n+OB_DEF_VAR (s390_vstrs_b32,             s390_vstrsf,        0,                  0,                  BT_OV_UV16QI_BV4SI_BV4SI_UV16QI_INTPTR)\n+OB_DEF_VAR (s390_vstrs_u32,             s390_vstrsf,        0,                  0,                  BT_OV_UV16QI_UV4SI_UV4SI_UV16QI_INTPTR)\n+\n+B_DEF      (s390_vstrsb,                vstrsv16qi,         0,                  B_VXE2,             0,                  BT_FN_UV16QI_UV16QI_UV16QI_UV16QI_INTPTR)\n+B_DEF      (s390_vstrsh,                vstrsv8hi,          0,                  B_VXE2,             0,                  BT_FN_UV8HI_UV8HI_UV8HI_UV8HI_INTPTR)\n+B_DEF      (s390_vstrsf,                vstrsv4si,          0,                  B_VXE2,             0,                  BT_FN_UV4SI_UV4SI_UV4SI_UV8HI_INTPTR)\n+\n+OB_DEF     (s390_vec_search_string_until_zero_cc,  s390_vstrsz_s8,  s390_vstrsz_u32, B_VXE2,        BT_FN_OV4SI_OV4SI_OV4SI_OV4SI_INTPTR)\n+OB_DEF_VAR (s390_vstrsz_s8,              s390_vstrszb,      0,                  0,                  BT_OV_UV16QI_V16QI_V16QI_UV16QI_INTPTR)\n+OB_DEF_VAR (s390_vstrsz_b8,              s390_vstrszb,      0,                  0,                  BT_OV_UV16QI_BV16QI_BV16QI_UV16QI_INTPTR)\n+OB_DEF_VAR (s390_vstrsz_u8,              s390_vstrszb,      0,                  0,                  BT_OV_UV16QI_UV16QI_UV16QI_UV16QI_INTPTR)\n+OB_DEF_VAR (s390_vstrsz_s16,             s390_vstrszh,      0,                  0,                  BT_OV_UV16QI_V8HI_V8HI_UV16QI_INTPTR)\n+OB_DEF_VAR (s390_vstrsz_b16,             s390_vstrszh,      0,                  0,                  BT_OV_UV16QI_BV8HI_BV8HI_UV16QI_INTPTR)\n+OB_DEF_VAR (s390_vstrsz_u16,             s390_vstrszh,      0,                  0,                  BT_OV_UV16QI_UV8HI_UV8HI_UV16QI_INTPTR)\n+OB_DEF_VAR (s390_vstrsz_s32,             s390_vstrszf,      0,                  0,                  BT_OV_UV16QI_V4SI_V4SI_UV16QI_INTPTR)\n+OB_DEF_VAR (s390_vstrsz_b32,             s390_vstrszf,      0,                  0,                  BT_OV_UV16QI_BV4SI_BV4SI_UV16QI_INTPTR)\n+OB_DEF_VAR (s390_vstrsz_u32,             s390_vstrszf,      0,                  0,                  BT_OV_UV16QI_UV4SI_UV4SI_UV16QI_INTPTR)\n+\n+B_DEF      (s390_vstrszb,                vstrszv16qi,       0,                  B_VXE2,             0,                  BT_FN_UV16QI_UV16QI_UV16QI_UV16QI_INTPTR)\n+B_DEF      (s390_vstrszh,                vstrszv8hi,        0,                  B_VXE2,             0,                  BT_FN_UV8HI_UV8HI_UV8HI_UV8HI_INTPTR)\n+B_DEF      (s390_vstrszf,                vstrszv4si,        0,                  B_VXE2,             0,                  BT_FN_UV4SI_UV4SI_UV4SI_UV8HI_INTPTR)"}, {"sha": "45eff845161d0fa640b56139d063218b8216fe2a", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49adc4618014f627ea2420de215899c038c976ec/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49adc4618014f627ea2420de215899c038c976ec/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=49adc4618014f627ea2420de215899c038c976ec", "patch": "@@ -222,6 +222,9 @@\n    UNSPEC_VEC_VSTRC\n    UNSPEC_VEC_VSTRCCC\n \n+   UNSPEC_VEC_VSTRS\n+   UNSPEC_VEC_VSTRSCC\n+\n    UNSPEC_VEC_VCDGB\n    UNSPEC_VEC_VCDLGB\n "}, {"sha": "b2d1c6eab9c4a3310b5279707ddc8f2f219b9166", "filename": "gcc/config/s390/vecintrin.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49adc4618014f627ea2420de215899c038c976ec/gcc%2Fconfig%2Fs390%2Fvecintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49adc4618014f627ea2420de215899c038c976ec/gcc%2Fconfig%2Fs390%2Fvecintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fvecintrin.h?ref=49adc4618014f627ea2420de215899c038c976ec", "patch": "@@ -329,4 +329,6 @@ __lcbb(const void *ptr, int bndry)\n #define vec_reve __builtin_s390_vec_reve\n #define vec_sldb __builtin_s390_vec_sldb\n #define vec_srdb __builtin_s390_vec_srdb\n+#define vec_search_string_cc __builtin_s390_vec_search_string_cc\n+#define vec_search_string_until_zero_cc __builtin_s390_vec_search_string_until_zero_cc\n #endif /* _VECINTRIN_H */"}, {"sha": "97fd47fdc20eb0e7a36e90f677e509d3b1020a45", "filename": "gcc/config/s390/vx-builtins.md", "status": "modified", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49adc4618014f627ea2420de215899c038c976ec/gcc%2Fconfig%2Fs390%2Fvx-builtins.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49adc4618014f627ea2420de215899c038c976ec/gcc%2Fconfig%2Fs390%2Fvx-builtins.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fvx-builtins.md?ref=49adc4618014f627ea2420de215899c038c976ec", "patch": "@@ -1626,6 +1626,74 @@\n   operands[4] = GEN_INT (INTVAL (operands[4]) | VSTRING_FLAG_CS | VSTRING_FLAG_ZS);\n })\n \n+; Vector string search\n+\n+(define_expand \"vstrs<mode>\"\n+  [(parallel\n+    [(set (match_operand:V16QI                    0 \"register_operand\" \"\")\n+\t  (unspec:V16QI [(match_operand:VI_HW_QHS 1 \"register_operand\" \"\")\n+\t\t\t (match_operand:VI_HW_QHS 2 \"register_operand\" \"\")\n+\t\t\t (match_operand:V16QI     3 \"register_operand\" \"\")\n+\t\t\t (const_int 0)]\n+\t\t\tUNSPEC_VEC_VSTRS))\n+     (set (reg:CCRAW CC_REGNUM)\n+\t  (unspec:CCRAW [(match_dup 1)\n+\t\t\t (match_dup 2)\n+\t\t\t (match_dup 3)\n+\t\t\t (const_int 0)]\n+\t\t\tUNSPEC_VEC_VSTRSCC))])\n+   (set (match_operand:SI 4 \"memory_operand\" \"\")\n+\t(unspec:SI [(reg:CCRAW CC_REGNUM)] UNSPEC_CC_TO_INT))]\n+  \"TARGET_VXE2\")\n+\n+(define_expand \"vstrsz<mode>\"\n+  [(parallel\n+    [(set (match_operand:V16QI                    0 \"register_operand\" \"\")\n+\t  (unspec:V16QI [(match_operand:VI_HW_QHS 1 \"register_operand\" \"\")\n+\t\t\t (match_operand:VI_HW_QHS 2 \"register_operand\" \"\")\n+\t\t\t (match_operand:V16QI     3 \"register_operand\" \"\")\n+\t\t\t (const_int VSTRING_FLAG_ZS)]\n+\t\t\tUNSPEC_VEC_VSTRS))\n+     (set (reg:CCRAW CC_REGNUM)\n+\t  (unspec:CCRAW [(match_dup 1)\n+\t\t\t (match_dup 2)\n+\t\t\t (match_dup 3)\n+\t\t\t (const_int VSTRING_FLAG_ZS)]\n+\t\t\tUNSPEC_VEC_VSTRSCC))])\n+   (set (match_operand:SI 4 \"memory_operand\" \"\")\n+\t(unspec:SI [(reg:CCRAW CC_REGNUM)] UNSPEC_CC_TO_INT))]\n+  \"TARGET_VXE2\")\n+\n+; vstrsb, vstrsh, vstrsf\n+; vstrszb, vstrszh, vstrszf\n+(define_insn \"vec_vstrs<mode>\"\n+  [(set (match_operand:V16QI                    0 \"register_operand\" \"=v\")\n+\t(unspec:V16QI [(match_operand:VI_HW_QHS 1 \"register_operand\" \"v\")\n+\t\t       (match_operand:VI_HW_QHS 2 \"register_operand\" \"v\")\n+\t\t       (match_operand:V16QI     3 \"register_operand\" \"v\")\n+\t\t       (match_operand:QI        4 \"const_mask_operand\" \"C\")]\n+\t\t      UNSPEC_VEC_VSTRS))\n+   (set (reg:CCRAW CC_REGNUM)\n+\t(unspec:CCRAW [(match_dup 1)\n+\t\t       (match_dup 2)\n+\t\t       (match_dup 3)\n+\t\t       (match_dup 4)]\n+\t\t      UNSPEC_VEC_VSTRSCC))]\n+  \"TARGET_VXE2\"\n+{\n+  unsigned HOST_WIDE_INT flags = UINTVAL (operands[4]);\n+\n+  gcc_assert (!(flags & ~VSTRING_FLAG_ZS));\n+\n+  if (flags == VSTRING_FLAG_ZS)\n+    return \"vstrsz<bhfgq>\\t%v0,%v1,%v2,%v3\";\n+  return \"vstrs<bhfgq>\\t%v0,%v1,%v2,%v3\";\n+}\n+  [(set_attr \"op_type\" \"VRR\")])\n+\n+\n+; Vector convert int<->float\n+\n (define_insn \"vcdgb\"\n   [(set (match_operand:V2DF 0 \"register_operand\"                \"=v\")\n \t(unspec:V2DF [(match_operand:V2DI 1 \"register_operand\"   \"v\")"}, {"sha": "0f76782da34c2ed89b1bc35077cb4a54993f06fe", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49adc4618014f627ea2420de215899c038c976ec/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49adc4618014f627ea2420de215899c038c976ec/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=49adc4618014f627ea2420de215899c038c976ec", "patch": "@@ -1,3 +1,10 @@\n+2019-04-02  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\t* gcc.target/s390/zvector/vec-search-string-cc-1.c: New test.\n+\t* gcc.target/s390/zvector/vec-search-string-cc-compile.c: New test.\n+\t* gcc.target/s390/zvector/vec-search-string-until-zero-cc-1.c: New test.\n+\t* gcc.target/s390/zvector/vec-search-string-until-zero-cc-compile.c: New test.\n+\n 2019-04-02  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n \t* gcc.target/s390/zvector/vec-shift-left-double-by-bit-1.c: New test."}, {"sha": "57039f2103cf05f3145f4646494824c6b7bdf736", "filename": "gcc/testsuite/gcc.target/s390/zvector/vec-search-string-cc-1.c", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49adc4618014f627ea2420de215899c038c976ec/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-search-string-cc-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49adc4618014f627ea2420de215899c038c976ec/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-search-string-cc-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-search-string-cc-1.c?ref=49adc4618014f627ea2420de215899c038c976ec", "patch": "@@ -0,0 +1,36 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target s390_vxe2 } */\n+/* { dg-options \"-O3 -mzarch -march=arch13 -mzvector --save-temps\" } */\n+\n+#include <vecintrin.h>\n+\n+void __attribute__((noinline,noclone))\n+vstrs1 ()\n+{\n+  int cc;\n+  vector signed char haystack = { 'h', 'o', 'l', 'a', 'h', 'i', 'h', 'o',\n+\t\t\t\t  'h', 'i', 'h', 'o' };\n+  vector signed char needle = { 'h', 'i', 'h', 'o' };\n+  vector unsigned char length = { 0 };\n+  length[7] = 4;\n+\n+  vector unsigned char result = vec_search_string_cc (haystack, needle,\n+\t\t\t\t\t\t      length, &cc);\n+\n+  if (result[7] != 4)\n+    __builtin_abort ();\n+\n+  /* CC2 indicates a full match.  */\n+  if (cc != 2)\n+    __builtin_abort ();\n+}\n+\n+int\n+main ()\n+{\n+  vstrs1 ();\n+\n+  return 0;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vstrsb\\t\" 1 } } */"}, {"sha": "f802f92d18908e00241b88776ef51780aceaddc6", "filename": "gcc/testsuite/gcc.target/s390/zvector/vec-search-string-cc-compile.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49adc4618014f627ea2420de215899c038c976ec/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-search-string-cc-compile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49adc4618014f627ea2420de215899c038c976ec/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-search-string-cc-compile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-search-string-cc-compile.c?ref=49adc4618014f627ea2420de215899c038c976ec", "patch": "@@ -0,0 +1,47 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mzarch -march=arch13 -mzvector\" } */\n+\n+#include <vecintrin.h>\n+\n+unsigned char\n+vstrsb ()\n+{\n+  int cc;\n+  vector signed char haystack = { 'h', 'o', 'l', 'a', 'h', 'i', 'h', 'o',\n+\t\t\t\t  'h', 'i', 'h', 'o' };\n+  vector signed char needle = { 'h', 'i', 'h', 'o' };\n+  vector unsigned char length = { 0 };\n+  vector unsigned char result = vec_search_string_cc (haystack, needle,\n+\t\t\t\t\t\t      length, &cc);\n+  return result[7];\n+}\n+\n+/* { dg-final { scan-assembler-times \"vstrsb\\t\" 1 } } */\n+\n+unsigned char\n+vstrsh ()\n+{\n+  int cc;\n+  vector signed short haystack = { 'h', 'o', 'l', 'a', 'h', 'i', 'h', 'o' };\n+  vector signed short needle = { 'h', 'i', 'h', 'o' };\n+  vector unsigned char length = { 0 };\n+  vector unsigned char result = vec_search_string_cc (haystack, needle,\n+\t\t\t\t\t\t      length, &cc);\n+  return result[7];\n+}\n+\n+/* { dg-final { scan-assembler-times \"vstrsh\\t\" 1 } } */\n+\n+unsigned char\n+vstrsf ()\n+{\n+  int cc;\n+  vector signed int haystack = { 'h', 'i', 'h', 'o' };\n+  vector signed int needle = { 'h', 'o' };\n+  vector unsigned char length = { 0 };\n+  vector unsigned char result = vec_search_string_cc (haystack, needle,\n+\t\t\t\t\t\t      length, &cc);\n+  return result[7];\n+}\n+\n+/* { dg-final { scan-assembler-times \"vstrsf\\t\" 1 } } */"}, {"sha": "6ceb764cc49e43dfc23a6e5ac4f5ab30bef13caf", "filename": "gcc/testsuite/gcc.target/s390/zvector/vec-search-string-until-zero-cc-1.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49adc4618014f627ea2420de215899c038c976ec/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-search-string-until-zero-cc-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49adc4618014f627ea2420de215899c038c976ec/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-search-string-until-zero-cc-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-search-string-until-zero-cc-1.c?ref=49adc4618014f627ea2420de215899c038c976ec", "patch": "@@ -0,0 +1,37 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target s390_vxe2 } */\n+/* { dg-options \"-O3 -mzarch -march=arch13 -mzvector --save-temps\" } */\n+\n+#include <vecintrin.h>\n+\n+void __attribute__((noinline,noclone))\n+vstrs1 ()\n+{\n+  int cc;\n+  vector signed char haystack = { 'h', 'o', 'l', 'a', 'h', 'i', 'h', 'o',\n+\t\t\t\t  'h', 'i', 'h', 'o' };\n+  vector signed char needle = { 'h', 'i', 'h', 'o', 0 };\n+  vector unsigned char length = { 0 };\n+  length[7] = 16;\n+\n+  vector unsigned char result\n+    = vec_search_string_until_zero_cc (haystack, needle,\n+\t\t\t\t       length, &cc);\n+\n+  if (result[7] != 4)\n+    __builtin_abort ();\n+\n+  /* CC2 indicates a full match.  */\n+  if (cc != 2)\n+    __builtin_abort ();\n+}\n+\n+int\n+main ()\n+{\n+  vstrs1 ();\n+\n+  return 0;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vstrszb\\t\" 1 } } */"}, {"sha": "317035ee002e95772caa745ba43ed9634c42c20a", "filename": "gcc/testsuite/gcc.target/s390/zvector/vec-search-string-until-zero-cc-compile.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49adc4618014f627ea2420de215899c038c976ec/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-search-string-until-zero-cc-compile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49adc4618014f627ea2420de215899c038c976ec/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-search-string-until-zero-cc-compile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-search-string-until-zero-cc-compile.c?ref=49adc4618014f627ea2420de215899c038c976ec", "patch": "@@ -0,0 +1,47 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mzarch -march=arch13 -mzvector\" } */\n+\n+#include <vecintrin.h>\n+\n+unsigned char\n+vstrszb ()\n+{\n+  int cc;\n+  vector signed char haystack = { 'h', 'o', 'l', 'a', 'h', 'i', 'h', 'o',\n+\t\t\t\t  'h', 'i', 'h', 'o' };\n+  vector signed char needle = { 'h', 'i', 'h', 'o' };\n+  vector unsigned char length = { 0 };\n+  vector unsigned char result\n+    = vec_search_string_until_zero_cc (haystack, needle, length, &cc);\n+  return result[7];\n+}\n+\n+/* { dg-final { scan-assembler-times \"vstrszb\\t\" 1 } } */\n+\n+unsigned char\n+vstrszh ()\n+{\n+  int cc;\n+  vector signed short haystack = { 'h', 'o', 'l', 'a', 'h', 'i', 'h', 'o' };\n+  vector signed short needle = { 'h', 'i', 'h', 'o' };\n+  vector unsigned char length = { 0 };\n+  vector unsigned char result\n+    = vec_search_string_until_zero_cc (haystack, needle, length, &cc);\n+  return result[7];\n+}\n+\n+/* { dg-final { scan-assembler-times \"vstrszh\\t\" 1 } } */\n+\n+unsigned char\n+vstrszf ()\n+{\n+  int cc;\n+  vector signed int haystack = { 'h', 'i', 'h', 'o' };\n+  vector signed int needle = { 'h', 'o' };\n+  vector unsigned char length = { 0 };\n+  vector unsigned char result\n+    = vec_search_string_until_zero_cc (haystack, needle, length, &cc);\n+  return result[7];\n+}\n+\n+/* { dg-final { scan-assembler-times \"vstrszf\\t\" 1 } } */"}]}