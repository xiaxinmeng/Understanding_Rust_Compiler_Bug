{"sha": "a89f917b6714d53e3fb4ba6ae67f71e75d20b907", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTg5ZjkxN2I2NzE0ZDUzZTNmYjRiYTZhZTY3ZjcxZTc1ZDIwYjkwNw==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2016-05-06T17:02:01Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2016-05-06T17:02:01Z"}, "message": "Add OVERRIDE and FINAL macros to coretypes.h\n\ngcc/ChangeLog:\n\t* coretypes.h (OVERRIDE): New macro.\n\t(FINAL): New macro.\n\nFrom-SVN: r235981", "tree": {"sha": "b587b515a1ec11b0bafdc810722b776451253aae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b587b515a1ec11b0bafdc810722b776451253aae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a89f917b6714d53e3fb4ba6ae67f71e75d20b907", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a89f917b6714d53e3fb4ba6ae67f71e75d20b907", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a89f917b6714d53e3fb4ba6ae67f71e75d20b907", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a89f917b6714d53e3fb4ba6ae67f71e75d20b907/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0e19f3b3348baf1a0be7ce81df2613c3a5b3e934", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e19f3b3348baf1a0be7ce81df2613c3a5b3e934", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e19f3b3348baf1a0be7ce81df2613c3a5b3e934"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "9b03ac34b155dcde172ad6c81af8f197d5cdf63c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a89f917b6714d53e3fb4ba6ae67f71e75d20b907/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a89f917b6714d53e3fb4ba6ae67f71e75d20b907/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a89f917b6714d53e3fb4ba6ae67f71e75d20b907", "patch": "@@ -1,3 +1,8 @@\n+2016-05-06  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* coretypes.h (OVERRIDE): New macro.\n+\t(FINAL): New macro.\n+\n 2016-05-06  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* tree-ssa-coalesce.c (gimple_can_coalesce_p): In the optimized case,"}, {"sha": "b3a91a6d5c5c2c1e62a4f65497461150cdf1bc7c", "filename": "gcc/coretypes.h", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a89f917b6714d53e3fb4ba6ae67f71e75d20b907/gcc%2Fcoretypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a89f917b6714d53e3fb4ba6ae67f71e75d20b907/gcc%2Fcoretypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcoretypes.h?ref=a89f917b6714d53e3fb4ba6ae67f71e75d20b907", "patch": "@@ -361,6 +361,31 @@ typedef void (*gt_pointer_operator) (void *, void *);\n typedef unsigned char uchar;\n #endif\n \n+/* C++11 adds the ability to add \"override\" after an implementation of a\n+   virtual function in a subclass, to:\n+     (A) document that this is an override of a virtual function\n+     (B) allow the compiler to issue a warning if it isn't (e.g. a mismatch\n+         of the type signature).\n+\n+   Similarly, it allows us to add a \"final\" to indicate that no subclass\n+   may subsequently override the vfunc.\n+\n+   Provide OVERRIDE and FINAL as macros, allowing us to get these benefits\n+   when compiling with C++11 support, but without requiring C++11.\n+\n+   For gcc, use \"-std=c++11\" to enable C++11 support; gcc 6 onwards enables\n+   this by default (actually GNU++14).  */\n+\n+#if __cplusplus >= 201103\n+/* C++11 claims to be available: use it: */\n+#define OVERRIDE override\n+#define FINAL final\n+#else\n+/* No C++11 support; leave the macros empty: */\n+#define OVERRIDE\n+#define FINAL\n+#endif\n+\n /* Most host source files will require the following headers.  */\n #if !defined (GENERATOR_FILE) && !defined (USED_FOR_TARGET)\n #include \"machmode.h\""}]}