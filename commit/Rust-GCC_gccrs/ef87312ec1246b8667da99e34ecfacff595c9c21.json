{"sha": "ef87312ec1246b8667da99e34ecfacff595c9c21", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWY4NzMxMmVjMTI0NmI4NjY3ZGE5OWUzNGVjZmFjZmY1OTVjOWMyMQ==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2015-06-30T17:40:55Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2015-06-30T17:40:55Z"}, "message": "re PR debug/66691 (ICE on valid code at -O3 with -g enabled in simplify_subreg, at simplify-rtx.c:5744)\n\n2015-06-30  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR debug/66691\n\t* lra-int.h (lra_substitute_pseudo): Add a parameter.\n\t(lra_substitute_pseudo_within_insn): Ditto.\n\t* lra.c (lra_substitute_pseudo): Add a parameter.  Simplify subreg\n\tof constant.\n\t(lra_substitute_pseudo_within_insn): Add a parameter.  Transfer it\n\tto lra_substitute_pseudo.\n\t* lra-lives.c (process_bb_lives): Add an argument to\n\tlra_substitute_pseudo_within_insn call.\n\t* lra-constraints.c (inherit_reload_reg, split_reg): Add an\n\targument to lra_substitute_pseudo and\n\tlra_substitute_pseudo_within_insn calls.\n\t(remove_inheritance_pseudos, undo_optional_reloads): Ditto.\n\n2015-06-30  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR debug/66691\n\t* gcc.target/i386/pr66691.c: New.\n\nFrom-SVN: r225200", "tree": {"sha": "84122957f4d1831b0346a506e4c3aa47b486b0d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84122957f4d1831b0346a506e4c3aa47b486b0d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef87312ec1246b8667da99e34ecfacff595c9c21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef87312ec1246b8667da99e34ecfacff595c9c21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef87312ec1246b8667da99e34ecfacff595c9c21", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef87312ec1246b8667da99e34ecfacff595c9c21/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8b970b6e69aeddad690f7b1465d8aeeeb07c7536", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b970b6e69aeddad690f7b1465d8aeeeb07c7536", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b970b6e69aeddad690f7b1465d8aeeeb07c7536"}], "stats": {"total": 85, "additions": 64, "deletions": 21}, "files": [{"sha": "83f598676f013112e4d7ac16d12caf7a3e0ba95a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef87312ec1246b8667da99e34ecfacff595c9c21/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef87312ec1246b8667da99e34ecfacff595c9c21/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ef87312ec1246b8667da99e34ecfacff595c9c21", "patch": "@@ -1,3 +1,19 @@\n+2015-06-30  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR debug/66691\n+\t* lra-int.h (lra_substitute_pseudo): Add a parameter.\n+\t(lra_substitute_pseudo_within_insn): Ditto.\n+\t* lra.c (lra_substitute_pseudo): Add a parameter.  Simplify subreg\n+\tof constant.\n+\t(lra_substitute_pseudo_within_insn): Add a parameter.  Transfer it\n+\tto lra_substitute_pseudo.\n+\t* lra-lives.c (process_bb_lives): Add an argument to\n+\tlra_substitute_pseudo_within_insn call.\n+\t* lra-constraints.c (inherit_reload_reg, split_reg): Add an\n+\targument to lra_substitute_pseudo and\n+\tlra_substitute_pseudo_within_insn calls.\n+\t(remove_inheritance_pseudos, undo_optional_reloads): Ditto.\n+\n 2015-06-30  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* configure: Regenerated."}, {"sha": "75c2a77b3dca76700b5c08ea94863ed39ba04ec2", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef87312ec1246b8667da99e34ecfacff595c9c21/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef87312ec1246b8667da99e34ecfacff595c9c21/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=ef87312ec1246b8667da99e34ecfacff595c9c21", "patch": "@@ -4711,7 +4711,7 @@ inherit_reload_reg (bool def_p, int original_regno,\n \t}\n       return false;\n     }\n-  lra_substitute_pseudo_within_insn (insn, original_regno, new_reg);\n+  lra_substitute_pseudo_within_insn (insn, original_regno, new_reg, false);\n   lra_update_insn_regno_info (insn);\n   if (! def_p)\n     /* We now have a new usage insn for original regno.  */\n@@ -4743,7 +4743,7 @@ inherit_reload_reg (bool def_p, int original_regno,\n \t  lra_assert (DEBUG_INSN_P (usage_insn));\n \t  next_usage_insns = XEXP (next_usage_insns, 1);\n \t}\n-      lra_substitute_pseudo (&usage_insn, original_regno, new_reg);\n+      lra_substitute_pseudo (&usage_insn, original_regno, new_reg, false);\n       lra_update_insn_regno_info (as_a <rtx_insn *> (usage_insn));\n       if (lra_dump_file != NULL)\n \t{\n@@ -5005,7 +5005,7 @@ split_reg (bool before_p, int original_regno, rtx_insn *insn,\n       usage_insn = XEXP (next_usage_insns, 0);\n       lra_assert (DEBUG_INSN_P (usage_insn));\n       next_usage_insns = XEXP (next_usage_insns, 1);\n-      lra_substitute_pseudo (&usage_insn, original_regno, new_reg);\n+      lra_substitute_pseudo (&usage_insn, original_regno, new_reg, false);\n       lra_update_insn_regno_info (as_a <rtx_insn *> (usage_insn));\n       if (lra_dump_file != NULL)\n \t{\n@@ -5925,8 +5925,9 @@ remove_inheritance_pseudos (bitmap remove_pseudos)\n \t\t    {\n \t\t      if (change_p && bitmap_bit_p (remove_pseudos, regno))\n \t\t\t{\n-\t\t\t  lra_substitute_pseudo_within_insn (\n-\t\t\t    curr_insn, regno, regno_reg_rtx[restore_regno]);\n+\t\t\t  lra_substitute_pseudo_within_insn\n+\t\t\t    (curr_insn, regno, regno_reg_rtx[restore_regno],\n+\t\t\t     false);\n \t\t\t  restored_regs_p = true;\n \t\t\t}\n \t\t      else\n@@ -6049,9 +6050,9 @@ undo_optional_reloads (void)\n \t\t we remove the inheritance pseudo and the optional\n \t\t reload.  */\n \t    }\n-\t  lra_substitute_pseudo_within_insn (\n-\t    insn, regno,\n-\t    regno_reg_rtx[lra_reg_info[regno].restore_regno]);\n+\t  lra_substitute_pseudo_within_insn\n+\t    (insn, regno, regno_reg_rtx[lra_reg_info[regno].restore_regno],\n+\t     false);\n \t  lra_update_insn_regno_info (insn);\n \t  if (lra_dump_file != NULL)\n \t    {"}, {"sha": "e1d5ef2c9180d9e589a317ba91dbfc25798ebb04", "filename": "gcc/lra-int.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef87312ec1246b8667da99e34ecfacff595c9c21/gcc%2Flra-int.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef87312ec1246b8667da99e34ecfacff595c9c21/gcc%2Flra-int.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-int.h?ref=ef87312ec1246b8667da99e34ecfacff595c9c21", "patch": "@@ -358,8 +358,8 @@ extern void lra_update_dups (lra_insn_recog_data_t, signed char *);\n extern void lra_process_new_insns (rtx_insn *, rtx_insn *, rtx_insn *,\n \t\t\t\t   const char *);\n \n-extern bool lra_substitute_pseudo (rtx *, int, rtx);\n-extern bool lra_substitute_pseudo_within_insn (rtx_insn *, int, rtx);\n+extern bool lra_substitute_pseudo (rtx *, int, rtx, bool);\n+extern bool lra_substitute_pseudo_within_insn (rtx_insn *, int, rtx, bool);\n \n extern lra_insn_recog_data_t lra_set_insn_recog_data (rtx_insn *);\n extern lra_insn_recog_data_t lra_update_insn_recog_data (rtx_insn *);"}, {"sha": "88c0ef671b4e806c520078f38c40f6dfb214abd2", "filename": "gcc/lra-lives.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef87312ec1246b8667da99e34ecfacff595c9c21/gcc%2Flra-lives.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef87312ec1246b8667da99e34ecfacff595c9c21/gcc%2Flra-lives.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-lives.c?ref=ef87312ec1246b8667da99e34ecfacff595c9c21", "patch": "@@ -726,7 +726,7 @@ process_bb_lives (basic_block bb, int &curr_point, bool dead_insn_p)\n \t\t    {\n \t\t      insn = lra_insn_recog_data[uid]->insn;\n \t\t      lra_substitute_pseudo_within_insn (insn, dst_regno,\n-\t\t\t\t\t\t\t SET_SRC (set));\n+\t\t\t\t\t\t\t SET_SRC (set), true);\n \t\t      lra_update_insn_regno_info (insn);\n \t\t    }\n \t\t}"}, {"sha": "bdd8e3ca3dfd0410735fac9ca2826e2d952ec9d9", "filename": "gcc/lra.c", "status": "modified", "additions": 31, "deletions": 10, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef87312ec1246b8667da99e34ecfacff595c9c21/gcc%2Flra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef87312ec1246b8667da99e34ecfacff595c9c21/gcc%2Flra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra.c?ref=ef87312ec1246b8667da99e34ecfacff595c9c21", "patch": "@@ -1777,9 +1777,10 @@ lra_process_new_insns (rtx_insn *insn, rtx_insn *before, rtx_insn *after,\n \f\n \n /* Replace all references to register OLD_REGNO in *LOC with pseudo\n-   register NEW_REG.  Return true if any change was made.  */\n+   register NEW_REG.  Try to simplify subreg of constant if SUBREG_P.\n+   Return true if any change was made.  */\n bool\n-lra_substitute_pseudo (rtx *loc, int old_regno, rtx new_reg)\n+lra_substitute_pseudo (rtx *loc, int old_regno, rtx new_reg, bool subreg_p)\n {\n   rtx x = *loc;\n   bool result = false;\n@@ -1791,9 +1792,25 @@ lra_substitute_pseudo (rtx *loc, int old_regno, rtx new_reg)\n     return false;\n \n   code = GET_CODE (x);\n-  if (code == REG && (int) REGNO (x) == old_regno)\n+  if (code == SUBREG && subreg_p)\n     {\n-      machine_mode mode = GET_MODE (*loc);\n+      rtx subst, inner = SUBREG_REG (x);\n+      /* Transform subreg of constant while we still have inner mode\n+\t of the subreg.  The subreg internal should not be an insn\n+\t operand.  */\n+      if (REG_P (inner) && (int) REGNO (inner) == old_regno\n+\t  && CONSTANT_P (new_reg)\n+\t  && (subst = simplify_subreg (GET_MODE (x), new_reg, GET_MODE (inner),\n+\t\t\t\t       SUBREG_BYTE (x))) != NULL_RTX)\n+\t{\n+\t  *loc = subst;\n+\t  return true;\n+\t}\n+      \n+    }\n+  else if (code == REG && (int) REGNO (x) == old_regno)\n+    {\n+      machine_mode mode = GET_MODE (x);\n       machine_mode inner_mode = GET_MODE (new_reg);\n \n       if (mode != inner_mode\n@@ -1815,26 +1832,30 @@ lra_substitute_pseudo (rtx *loc, int old_regno, rtx new_reg)\n     {\n       if (fmt[i] == 'e')\n \t{\n-\t  if (lra_substitute_pseudo (&XEXP (x, i), old_regno, new_reg))\n+\t  if (lra_substitute_pseudo (&XEXP (x, i), old_regno,\n+\t\t\t\t     new_reg, subreg_p))\n \t    result = true;\n \t}\n       else if (fmt[i] == 'E')\n \t{\n \t  for (j = XVECLEN (x, i) - 1; j >= 0; j--)\n-\t    if (lra_substitute_pseudo (&XVECEXP (x, i, j), old_regno, new_reg))\n+\t    if (lra_substitute_pseudo (&XVECEXP (x, i, j), old_regno,\n+\t\t\t\t       new_reg, subreg_p))\n \t      result = true;\n \t}\n     }\n   return result;\n }\n \n-/* Call lra_substitute_pseudo within an insn.  This won't update the insn ptr,\n-   just the contents of the insn.  */\n+/* Call lra_substitute_pseudo within an insn.  Try to simplify subreg\n+   of constant if SUBREG_P.  This won't update the insn ptr, just the\n+   contents of the insn.  */\n bool\n-lra_substitute_pseudo_within_insn (rtx_insn *insn, int old_regno, rtx new_reg)\n+lra_substitute_pseudo_within_insn (rtx_insn *insn, int old_regno,\n+\t\t\t\t   rtx new_reg, bool subreg_p)\n {\n   rtx loc = insn;\n-  return lra_substitute_pseudo (&loc, old_regno, new_reg);\n+  return lra_substitute_pseudo (&loc, old_regno, new_reg, subreg_p);\n }\n \n \f"}, {"sha": "4f0915419662f422a08a6db12c9c3405e09eb835", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef87312ec1246b8667da99e34ecfacff595c9c21/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef87312ec1246b8667da99e34ecfacff595c9c21/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ef87312ec1246b8667da99e34ecfacff595c9c21", "patch": "@@ -1,3 +1,8 @@\n+2015-06-30  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR debug/66691\n+\t* gcc.target/i386/pr66691.c: New.\n+\n 2015-06-30  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* gcc.target/i386/iamcu/abi-iamcu.exp: New file."}]}