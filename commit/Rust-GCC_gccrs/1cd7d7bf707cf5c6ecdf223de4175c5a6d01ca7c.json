{"sha": "1cd7d7bf707cf5c6ecdf223de4175c5a6d01ca7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWNkN2Q3YmY3MDdjZjVjNmVjZGYyMjNkZTQxNzVjNWE2ZDAxY2E3Yw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2006-10-04T06:53:55Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2006-10-04T06:53:55Z"}, "message": "re PR c++/29020 (ICE using A<N>::A instead of A<N> in friend declaration)\n\n\tPR c++/29020\n\t* friend.c (do_friend): Improve comments; add assertion.\n\t* parser.c (cp_parser_nested_name_specifier_opt): Resolve\n\ttypenames for qualified names used in declarations, even when\n\tcaching qualified name lookup.\n\tPR c++/29020\n\t* g++.dg/template/friend48.C: New test.\n\nFrom-SVN: r117425", "tree": {"sha": "aab97d8fb322605f13a935c7e6e41f7e908c9be8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aab97d8fb322605f13a935c7e6e41f7e908c9be8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1cd7d7bf707cf5c6ecdf223de4175c5a6d01ca7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cd7d7bf707cf5c6ecdf223de4175c5a6d01ca7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cd7d7bf707cf5c6ecdf223de4175c5a6d01ca7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cd7d7bf707cf5c6ecdf223de4175c5a6d01ca7c/comments", "author": null, "committer": null, "parents": [{"sha": "404d84017e5ff32987ec19d70e57fd20d15beea5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/404d84017e5ff32987ec19d70e57fd20d15beea5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/404d84017e5ff32987ec19d70e57fd20d15beea5"}], "stats": {"total": 54, "additions": 41, "deletions": 13}, "files": [{"sha": "3d7ccc0d82dda175d84d5d4012bdeb5689748148", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cd7d7bf707cf5c6ecdf223de4175c5a6d01ca7c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cd7d7bf707cf5c6ecdf223de4175c5a6d01ca7c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1cd7d7bf707cf5c6ecdf223de4175c5a6d01ca7c", "patch": "@@ -1,5 +1,11 @@\n 2006-10-03  Mark Mitchell  <mark@codesourcery.com>\n \n+\tPR c++/29020\n+\t* friend.c (do_friend): Improve comments; add assertion.\n+\t* parser.c (cp_parser_nested_name_specifier_opt): Resolve\n+\ttypenames for qualified names used in declarations, even when\n+\tcaching qualified name lookup.\n+\n \tPR c++/29138\n \t* decl2.c (grokfield): Don't handle access declarations here.\n \t* parser.c (cp_parser_using_declaration): Handle access"}, {"sha": "d92df5f6eba3df85ad1519eba905cbcd3a777c61", "filename": "gcc/cp/friend.c", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cd7d7bf707cf5c6ecdf223de4175c5a6d01ca7c/gcc%2Fcp%2Ffriend.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cd7d7bf707cf5c6ecdf223de4175c5a6d01ca7c/gcc%2Fcp%2Ffriend.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ffriend.c?ref=1cd7d7bf707cf5c6ecdf223de4175c5a6d01ca7c", "patch": "@@ -396,21 +396,21 @@ make_friend_class (tree type, tree friend_type, bool complain)\n     }\n }\n \n-/* Main friend processor.\n-\n-   CTYPE is the class this friend belongs to.\n-\n-   DECLARATOR is the name of the friend.\n-\n-   DECL is the FUNCTION_DECL that the friend is.\n-\n-   FLAGS is just used for `grokclassfn'.  */\n+/* Record DECL (a FUNCTION_DECL) as a friend of the\n+   CURRENT_CLASS_TYPE.  If DECL is a member function, CTYPE is the\n+   class of which it is a member, as named in the friend declaration.\n+   DECLARATOR is the name of the friend.  FUNCDEF_FLAG is true if the\n+   friend declaration is a definition of the function.  FLAGS is as\n+   for grokclass fn.  */\n \n tree\n do_friend (tree ctype, tree declarator, tree decl,\n \t   tree attrlist, enum overload_flags flags,\n \t   bool funcdef_flag)\n {\n+  gcc_assert (TREE_CODE (decl) == FUNCTION_DECL);\n+  gcc_assert (!ctype || IS_AGGR_TYPE (ctype));\n+\n   /* Every decl that gets here is a friend of something.  */\n   DECL_FRIEND_P (decl) = 1;\n \n@@ -421,8 +421,6 @@ do_friend (tree ctype, tree declarator, tree decl,\n \tdeclarator = DECL_NAME (get_first_fn (declarator));\n     }\n \n-  gcc_assert (TREE_CODE (decl) == FUNCTION_DECL);\n-\n   if (ctype)\n     {\n       /* CLASS_TEMPLATE_DEPTH counts the number of template headers for"}, {"sha": "2672f15afba7609839506e26d522377de22d7532", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cd7d7bf707cf5c6ecdf223de4175c5a6d01ca7c/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cd7d7bf707cf5c6ecdf223de4175c5a6d01ca7c/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=1cd7d7bf707cf5c6ecdf223de4175c5a6d01ca7c", "patch": "@@ -3632,10 +3632,17 @@ cp_parser_nested_name_specifier_opt (cp_parser *parser,\n \t{\n \t  /* Grab the nested-name-specifier and continue the loop.  */\n \t  cp_parser_pre_parsed_nested_name_specifier (parser);\n+\t  /* If we originally encountered this nested-name-specifier\n+\t     with IS_DECLARATION set to false, we will not have\n+\t     resolved TYPENAME_TYPEs, so we must do so here.  */\n \t  if (is_declaration\n \t      && TREE_CODE (parser->scope) == TYPENAME_TYPE)\n-\t    parser->scope = resolve_typename_type (parser->scope,\n-\t\t\t\t\t\t   /*only_current_p=*/false);\n+\t    {\n+\t      new_scope = resolve_typename_type (parser->scope,\n+\t\t\t\t\t\t /*only_current_p=*/false);\n+\t      if (new_scope != error_mark_node)\n+\t\tparser->scope = new_scope;\n+\t    }\n \t  success = true;\n \t  continue;\n \t}"}, {"sha": "d819ac34178f4f7e5460903838f0a9b60027a7a9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cd7d7bf707cf5c6ecdf223de4175c5a6d01ca7c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cd7d7bf707cf5c6ecdf223de4175c5a6d01ca7c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1cd7d7bf707cf5c6ecdf223de4175c5a6d01ca7c", "patch": "@@ -1,3 +1,8 @@\n+2006-10-03  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/29020\n+\t* g++.dg/template/friend48.C: New test.\n+\n 2006-10-04  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/29098"}, {"sha": "604697dae7a1fc26e0af1062425d54d8d907322e", "filename": "gcc/testsuite/g++.dg/template/friend48.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cd7d7bf707cf5c6ecdf223de4175c5a6d01ca7c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend48.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cd7d7bf707cf5c6ecdf223de4175c5a6d01ca7c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend48.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend48.C?ref=1cd7d7bf707cf5c6ecdf223de4175c5a6d01ca7c", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/29020\n+\n+template<int> struct A\n+{\n+  void foo();\n+};\n+\n+struct B\n+{\n+  template<int N> friend void A<N>::A::foo();\n+};\n+"}]}