{"sha": "fc02bcca0124e5678f3f820d26e614cdfb231fd7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmMwMmJjY2EwMTI0ZTU2NzhmM2Y4MjBkMjZlNjE0Y2RmYjIzMWZkNw==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2014-04-04T13:13:20Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2014-04-04T13:13:20Z"}, "message": "re PR target/60657 (ICE: error: insn does not satisfy its constraints)\n\n        PR target/60657\n\t* config/arm/predicates.md (const_int_I_operand): New predicate.\n\t(const_int_M_operand): Similarly.\n\t* config/arm/arm.md (insv_zero): Use const_int_M_operand instead of\n\tconst_int_operand.\n\t(insv_t2, extv_reg, extzv_t2): Likewise.\n\t(load_multiple_with_writeback): Similarly for const_int_I_operand.\n\t(pop_multiple_with_writeback_and_return): Likewise.\n\t(vfp_pop_multiple_with_writeback): Likewise\n\n\tPR target/60657\n\t* gcc.target/arm/pr60657.c: New test.\n\nFrom-SVN: r209085", "tree": {"sha": "f45dceb88e46544cd9cd6663618a9d1d09acba4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f45dceb88e46544cd9cd6663618a9d1d09acba4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc02bcca0124e5678f3f820d26e614cdfb231fd7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc02bcca0124e5678f3f820d26e614cdfb231fd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc02bcca0124e5678f3f820d26e614cdfb231fd7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc02bcca0124e5678f3f820d26e614cdfb231fd7/comments", "author": null, "committer": null, "parents": [{"sha": "45b6259486e4a1201c630186338e0845ffeab2f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45b6259486e4a1201c630186338e0845ffeab2f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45b6259486e4a1201c630186338e0845ffeab2f5"}], "stats": {"total": 60, "additions": 49, "deletions": 11}, "files": [{"sha": "33c1669d09dc8278636035c9b1e7d9935b2db833", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc02bcca0124e5678f3f820d26e614cdfb231fd7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc02bcca0124e5678f3f820d26e614cdfb231fd7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fc02bcca0124e5678f3f820d26e614cdfb231fd7", "patch": "@@ -1,3 +1,15 @@\n+2014-04-04  Jeff Law  <law@redhat.com>\n+\n+        PR target/60657\n+\t* config/arm/predicates.md (const_int_I_operand): New predicate.\n+\t(const_int_M_operand): Similarly.\n+\t* config/arm/arm.md (insv_zero): Use const_int_M_operand instead of\n+\tconst_int_operand.\n+\t(insv_t2, extv_reg, extzv_t2): Likewise.\n+\t(load_multiple_with_writeback): Similarly for const_int_I_operand.\n+\t(pop_multiple_with_writeback_and_return): Likewise.\n+\t(vfp_pop_multiple_with_writeback): Likewise\n+\n 2014-04-04  Richard Biener  <rguenther@suse.de>\n \n \tPR ipa/60746"}, {"sha": "4b81ee272115990af754a2157c113d800e125706", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc02bcca0124e5678f3f820d26e614cdfb231fd7/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc02bcca0124e5678f3f820d26e614cdfb231fd7/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=fc02bcca0124e5678f3f820d26e614cdfb231fd7", "patch": "@@ -2784,8 +2784,8 @@\n \n (define_insn \"insv_zero\"\n   [(set (zero_extract:SI (match_operand:SI 0 \"s_register_operand\" \"+r\")\n-                         (match_operand:SI 1 \"const_int_operand\" \"M\")\n-                         (match_operand:SI 2 \"const_int_operand\" \"M\"))\n+                         (match_operand:SI 1 \"const_int_M_operand\" \"M\")\n+                         (match_operand:SI 2 \"const_int_M_operand\" \"M\"))\n         (const_int 0))]\n   \"arm_arch_thumb2\"\n   \"bfc%?\\t%0, %2, %1\"\n@@ -2797,8 +2797,8 @@\n \n (define_insn \"insv_t2\"\n   [(set (zero_extract:SI (match_operand:SI 0 \"s_register_operand\" \"+r\")\n-                         (match_operand:SI 1 \"const_int_operand\" \"M\")\n-                         (match_operand:SI 2 \"const_int_operand\" \"M\"))\n+                         (match_operand:SI 1 \"const_int_M_operand\" \"M\")\n+                         (match_operand:SI 2 \"const_int_M_operand\" \"M\"))\n         (match_operand:SI 3 \"s_register_operand\" \"r\"))]\n   \"arm_arch_thumb2\"\n   \"bfi%?\\t%0, %3, %2, %1\"\n@@ -4480,8 +4480,8 @@\n (define_insn \"*extv_reg\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n \t(sign_extract:SI (match_operand:SI 1 \"s_register_operand\" \"r\")\n-                         (match_operand:SI 2 \"const_int_operand\" \"M\")\n-                         (match_operand:SI 3 \"const_int_operand\" \"M\")))]\n+                         (match_operand:SI 2 \"const_int_M_operand\" \"M\")\n+                         (match_operand:SI 3 \"const_int_M_operand\" \"M\")))]\n   \"arm_arch_thumb2\"\n   \"sbfx%?\\t%0, %1, %3, %2\"\n   [(set_attr \"length\" \"4\")\n@@ -4493,8 +4493,8 @@\n (define_insn \"extzv_t2\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n \t(zero_extract:SI (match_operand:SI 1 \"s_register_operand\" \"r\")\n-                         (match_operand:SI 2 \"const_int_operand\" \"M\")\n-                         (match_operand:SI 3 \"const_int_operand\" \"M\")))]\n+                         (match_operand:SI 2 \"const_int_M_operand\" \"M\")\n+                         (match_operand:SI 3 \"const_int_M_operand\" \"M\")))]\n   \"arm_arch_thumb2\"\n   \"ubfx%?\\t%0, %1, %3, %2\"\n   [(set_attr \"length\" \"4\")\n@@ -12073,7 +12073,7 @@\n   [(match_parallel 0 \"load_multiple_operation\"\n     [(set (match_operand:SI 1 \"s_register_operand\" \"+rk\")\n           (plus:SI (match_dup 1)\n-                   (match_operand:SI 2 \"const_int_operand\" \"I\")))\n+                   (match_operand:SI 2 \"const_int_I_operand\" \"I\")))\n      (set (match_operand:SI 3 \"s_register_operand\" \"=rk\")\n           (mem:SI (match_dup 1)))\n         ])]\n@@ -12102,7 +12102,7 @@\n     [(return)\n      (set (match_operand:SI 1 \"s_register_operand\" \"+rk\")\n           (plus:SI (match_dup 1)\n-                   (match_operand:SI 2 \"const_int_operand\" \"I\")))\n+                   (match_operand:SI 2 \"const_int_I_operand\" \"I\")))\n      (set (match_operand:SI 3 \"s_register_operand\" \"=rk\")\n           (mem:SI (match_dup 1)))\n         ])]\n@@ -12155,7 +12155,7 @@\n   [(match_parallel 0 \"pop_multiple_fp\"\n     [(set (match_operand:SI 1 \"s_register_operand\" \"+rk\")\n           (plus:SI (match_dup 1)\n-                   (match_operand:SI 2 \"const_int_operand\" \"I\")))\n+                   (match_operand:SI 2 \"const_int_I_operand\" \"I\")))\n      (set (match_operand:DF 3 \"vfp_hard_register_operand\" \"\")\n           (mem:DF (match_dup 1)))])]\n   \"TARGET_32BIT && TARGET_HARD_FLOAT && TARGET_VFP\""}, {"sha": "6273e8820c6b71c1b5846125b2e265f89a66ce2d", "filename": "gcc/config/arm/predicates.md", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc02bcca0124e5678f3f820d26e614cdfb231fd7/gcc%2Fconfig%2Farm%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc02bcca0124e5678f3f820d26e614cdfb231fd7/gcc%2Fconfig%2Farm%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fpredicates.md?ref=fc02bcca0124e5678f3f820d26e614cdfb231fd7", "patch": "@@ -153,6 +153,14 @@\n   (ior (match_operand 0 \"arm_rhs_operand\")\n        (match_operand 0 \"memory_operand\")))\n \n+(define_predicate \"const_int_I_operand\"\n+  (and (match_operand 0 \"const_int_operand\")\n+       (match_test \"satisfies_constraint_I (op)\")))\n+\n+(define_predicate \"const_int_M_operand\"\n+  (and (match_operand 0 \"const_int_operand\")\n+       (match_test \"satisfies_constraint_M (op)\")))\n+\n ;; This doesn't have to do much because the constant is already checked\n ;; in the shift_operator predicate.\n (define_predicate \"shift_amount_operand\""}, {"sha": "528cf7a4c12dbe09ddd78d91f17feffcf4f7a2b6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc02bcca0124e5678f3f820d26e614cdfb231fd7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc02bcca0124e5678f3f820d26e614cdfb231fd7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fc02bcca0124e5678f3f820d26e614cdfb231fd7", "patch": "@@ -1,3 +1,8 @@\n+2014-04-04  Jeff Law  <law@redhat.com>\n+\n+\tPR target/60657\n+\t* gcc.target/arm/pr60657.c: New test.\n+\n 2014-04-04  Richard Biener  <rguenther@suse.de>\n \n \tPR ipa/60746"}, {"sha": "d70e58c73d09a0dc326309b1b2a20ab46d8032f6", "filename": "gcc/testsuite/gcc.target/arm/pr60657.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc02bcca0124e5678f3f820d26e614cdfb231fd7/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr60657.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc02bcca0124e5678f3f820d26e614cdfb231fd7/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr60657.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr60657.c?ref=fc02bcca0124e5678f3f820d26e614cdfb231fd7", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=armv7-a\" } */\n+\n+\n+void foo (void);\n+\n+void\n+bar (int x, int y)\n+{\n+  y = 9999;\n+  if (x & (1 << y))\n+    foo ();\n+"}]}