{"sha": "f7cf1c7492401e498f9e35b6b047a43b1989ce7b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjdjZjFjNzQ5MjQwMWU0OThmOWUzNWI2YjA0N2E0M2IxOTg5Y2U3Yg==", "commit": {"author": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2002-10-27T17:02:29Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2002-10-27T17:02:29Z"}, "message": "Resorted the entries\n\nFrom-SVN: r58584", "tree": {"sha": "fce9fbe0ff07622607fcb9b3f2cbca2873de9226", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fce9fbe0ff07622607fcb9b3f2cbca2873de9226"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7cf1c7492401e498f9e35b6b047a43b1989ce7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7cf1c7492401e498f9e35b6b047a43b1989ce7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7cf1c7492401e498f9e35b6b047a43b1989ce7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7cf1c7492401e498f9e35b6b047a43b1989ce7b/comments", "author": null, "committer": null, "parents": [{"sha": "3eae4643be652fff3b1756f4462e1941da58973d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3eae4643be652fff3b1756f4462e1941da58973d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3eae4643be652fff3b1756f4462e1941da58973d"}], "stats": {"total": 65, "additions": 31, "deletions": 34}, "files": [{"sha": "677b3cc147ae590ea36fae87999fd6933fd2e223", "filename": "gcc/fixinc/inclhack.def", "status": "modified", "additions": 31, "deletions": 34, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7cf1c7492401e498f9e35b6b047a43b1989ce7b/gcc%2Ffixinc%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7cf1c7492401e498f9e35b6b047a43b1989ce7b/gcc%2Ffixinc%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.def?ref=f7cf1c7492401e498f9e35b6b047a43b1989ce7b", "patch": "@@ -7,9 +7,8 @@ autogen definitions fixincl;\n \n    This is the sort command:\n \n-   blocksort output=XXX \\\n+   blocksort output=inclhack.sorted \\\n           pattern='^/\\*$' \\\n-          start='== REPLACEMENT FIXES ==' \\\n           trailer='^/\\*EOF\\*[/]' \\\n           input=inclhack.def \\\n           key='hackname[ \t]*=[ \t]*(.*);'\n@@ -21,8 +20,6 @@ autogen definitions fixincl;\n FIXINC_DEBUG = yes;\n #endif\n \n-/* == REPLACEMENT FIXES == */\n-\n /*\n  *  Completely replace <_int_varargs.h> with a file that includes gcc's\n  *  stdarg.h or varargs.h files as appropriate on DG/UX\n@@ -1144,6 +1141,21 @@ fix = {\n };\n \n \n+/*\n+ *  Make sure hpux defines abs in header.\n+ */\n+fix = {\n+    hackname  = hpux11_abs;\n+    mach      = ia64-hp-hpux11*;\n+    files     = stdlib.h;\n+    select    = \"ifndef _MATH_INCLUDED\";\n+    c_fix     = format;\n+    c_fix_arg = \"if !defined(_MATH_INCLUDED) || defined(__GNUG__)\";\n+//  sed       = \"s/ifndef _MATH_INCLUDED/if !defined(_MATH_INCLUDED) || defined(__GNUG__)/\";\n+    test_text = \"#ifndef _MATH_INCLUDED\";\n+};\n+\n+\n /*\n  *  Keep HP-UX 11 from stomping on C++ math namespace\n  *  with defines for fabsf.\n@@ -1164,21 +1176,6 @@ fix = {\n };\n \n \n-/*\n- *  Make sure hpux defines abs in header.\n- */\n-fix = {\n-    hackname  = hpux11_abs;\n-    mach      = ia64-hp-hpux11*;\n-    files     = stdlib.h;\n-    select    = \"ifndef _MATH_INCLUDED\";\n-    c_fix     = format;\n-    c_fix_arg = \"if !defined(_MATH_INCLUDED) || defined(__GNUG__)\";\n-//  sed       = \"s/ifndef _MATH_INCLUDED/if !defined(_MATH_INCLUDED) || defined(__GNUG__)/\";\n-    test_text = \"#ifndef _MATH_INCLUDED\";\n-};\n-\n-\n /*\n  * Prevent HP-UX 11 from defining __size_t and preventing size_t from\n  * being defined by having it define _hpux_size_t instead.\n@@ -1483,6 +1480,21 @@ fix = {\n };\n \n \n+/*\n+ *  Fix libc1 _G_va_list definition, used in declarations of several\n+ *  more-or-less standard functions, for example vasprintf.\n+ */\n+fix = {\n+    hackname = libc1_G_va_list;\n+    files    = _G_config.h;\n+    mach     = '*-*-linux*libc1';\n+    select   = 'typedef void \\* _G_va_list;';\n+    c_fix     = format;\n+    c_fix_arg = \"typedef __builtin_va_list _G_va_list;\";\n+    test_text = 'typedef __builtin_va_list _G_va_list;';\n+};\n+\n+\n /*\n  *  GNU libc1 string.h does not prototype memcpy and memcmp for gcc\n  *  versions > 1.  This fix will open up the declaration for all\n@@ -1518,21 +1530,6 @@ fix = {\n };\n \n \n-/*\n- *  Fix libc1 _G_va_list definition, used in declarations of several\n- *  more-or-less standard functions, for example vasprintf.\n- */\n-fix = {\n-    hackname = libc1_G_va_list;\n-    files    = _G_config.h;\n-    mach     = '*-*-linux*libc1';\n-    select   = 'typedef void \\* _G_va_list;';\n-    c_fix     = format;\n-    c_fix_arg = \"typedef __builtin_va_list _G_va_list;\";\n-    test_text = 'typedef __builtin_va_list _G_va_list;';\n-};\n-\n-\n /*\n  *  In limits.h, put #ifndefs around things that are supposed to be defined\n  *  in float.h to avoid redefinition errors if float.h is included first."}]}