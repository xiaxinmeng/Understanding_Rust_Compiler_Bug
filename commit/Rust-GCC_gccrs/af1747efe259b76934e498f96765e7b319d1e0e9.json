{"sha": "af1747efe259b76934e498f96765e7b319d1e0e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWYxNzQ3ZWZlMjU5Yjc2OTM0ZTQ5OGY5Njc2NWU3YjMxOWQxZTBlOQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2000-04-14T11:37:24Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2000-04-14T11:37:24Z"}, "message": "dbxout.c (dbxout_type, [...]): Don't call print_int_cst_octal with something that's not an INTEGER_CST.\n\n\t* dbxout.c (dbxout_type, case INTEGER_TYPE): Don't call\n\tprint_int_cst_octal with something that's not an INTEGER_CST.\n\nFrom-SVN: r33147", "tree": {"sha": "020556f9b62d21e10c9cd2f244460fbd782dd71a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/020556f9b62d21e10c9cd2f244460fbd782dd71a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af1747efe259b76934e498f96765e7b319d1e0e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af1747efe259b76934e498f96765e7b319d1e0e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af1747efe259b76934e498f96765e7b319d1e0e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af1747efe259b76934e498f96765e7b319d1e0e9/comments", "author": null, "committer": null, "parents": [{"sha": "57014cb94ab4ef7964bd013e5faab735c8173001", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57014cb94ab4ef7964bd013e5faab735c8173001", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57014cb94ab4ef7964bd013e5faab735c8173001"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "cc5919eea09402973cd328e06eb6e4753525d570", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af1747efe259b76934e498f96765e7b319d1e0e9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af1747efe259b76934e498f96765e7b319d1e0e9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=af1747efe259b76934e498f96765e7b319d1e0e9", "patch": "@@ -1,5 +1,8 @@\n Fri Apr 14 07:40:32 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n+\t* dbxout.c (dbxout_type, case INTEGER_TYPE): Don't call\n+\tprint_int_cst_octal with something that's not an INTEGER_CST.\n+\n \t* config/alpha/alpha.c (alpha_emit_floatuns): Ensure we pass a REG\n \tand not a SUBREG to a FLOAT rtl.\n "}, {"sha": "c34d1a1d541be78a551db744c7578214e37a6e90", "filename": "gcc/dbxout.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af1747efe259b76934e498f96765e7b319d1e0e9/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af1747efe259b76934e498f96765e7b319d1e0e9/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=af1747efe259b76934e498f96765e7b319d1e0e9", "patch": "@@ -1176,6 +1176,10 @@ dbxout_type (type, full, show_arg_types)\n \t     and hence they can't span same size unsigned types.  */\n \n  \t  if (use_gnu_debug_info_extensions\n+\t      && TYPE_MIN_VALUE (type) != 0\n+\t      && TREE_CODE (TYPE_MIN_VALUE (type)) == INTEGER_CST\n+\t      && TYPE_MAX_VALUE (type) != 0\n+\t      && TREE_CODE (TYPE_MAX_VALUE (type)) == INTEGER_CST\n \t      && (TYPE_PRECISION (type) > TYPE_PRECISION (integer_type_node)\n \t\t  || (TYPE_PRECISION (type) == TYPE_PRECISION (integer_type_node)\n \t\t      && TREE_UNSIGNED (type))\n@@ -1650,7 +1654,7 @@ print_int_cst_octal (c)\n \t\t  << (HOST_BITS_PER_WIDE_INT / 3 * 3))\n \t\t - 1);\n \n-      fprintf (asmfile, \"%o%01o\", (int)beg, (int)middle);\n+      fprintf (asmfile, \"%o%01o\", (int) beg, (int) middle);\n       print_octal (end, HOST_BITS_PER_WIDE_INT / 3);\n     }\n }\n@@ -1663,7 +1667,7 @@ print_octal (value, digits)\n   int i;\n \n   for (i = digits - 1; i >= 0; i--)\n-    fprintf (asmfile, \"%01o\", (int)((value >> (3 * i)) & 7));\n+    fprintf (asmfile, \"%01o\", (int) ((value >> (3 * i)) & 7));\n }\n \n /* Output the name of type TYPE, with no punctuation."}]}