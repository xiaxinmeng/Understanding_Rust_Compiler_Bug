{"sha": "79d38dd46e6b07e5a90ab25df1438eb0918eb475", "node_id": "C_kwDOANBUbNoAKDc5ZDM4ZGQ0NmU2YjA3ZTVhOTBhYjI1ZGYxNDM4ZWIwOTE4ZWI0NzU", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-10-19T16:55:46Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-10-19T17:09:17Z"}, "message": "testsuite: Default make check-g++ vs. tests for newest C++ standard\n\nWhen adding tests for upcoming C++ version, one always has a dilemma\nwhether to use explicit // { dg-options \"-std=c++2b\" }\nor -std=gnu++2b and similar, then the test works in all modes, but it might\nbe forgotten later on to be converted into // { dg-do whatever { target c++23 } }\ntest so that when 23 is tested by default and say 26 or 29 appears too,\nwe test it also in those modes, or just go with\n// { dg-do whatever { target c++23 } }\nwhich has the disadvantage that it is skipped when testing by default and\none only tests it if he asks for the newer version.\n\nThe following patch changes it, such that it is safe to add\n// { dg-do whatever { target c++23 } }\nstyle tests and make those tested even in the default testing mode\n(when GXX_TESTSUITE_STDS or check-c++-all etc. aren't used).\nThis is by searching for such dg-do lines and if there is an effective\ntarget newer than the latest by default tested language version, it will\njust use that language version instead of the default list.\nWithout this change, the test would be UNSUPPORTED in currently\nall of 98 14 17 20 versions, with the patch it will be tested with a single\n23 version.\n\n2022-10-19  Jakub Jelinek  <jakub@redhat.com>\n\n\t* lib/g++-dg.exp (g++-dg-runtest): When using defaulted\n\tstd_list, if test has { dg-do * { target c++23 } } directive,\n\tuse { 23 } with which the test will run instead of { 98 14 17 20 }\n\twhich would make it UNSUPPORTED in all cases.", "tree": {"sha": "188d0f1647a0c6407048b7e286e976c5f32eabca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/188d0f1647a0c6407048b7e286e976c5f32eabca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79d38dd46e6b07e5a90ab25df1438eb0918eb475", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79d38dd46e6b07e5a90ab25df1438eb0918eb475", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79d38dd46e6b07e5a90ab25df1438eb0918eb475", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79d38dd46e6b07e5a90ab25df1438eb0918eb475/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a10d6b5eb999a74fd4b12c00e8fb379cd3460e93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a10d6b5eb999a74fd4b12c00e8fb379cd3460e93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a10d6b5eb999a74fd4b12c00e8fb379cd3460e93"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "9bf63a1392a12957605f26a5f3be1560d05b9416", "filename": "gcc/testsuite/lib/g++-dg.exp", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79d38dd46e6b07e5a90ab25df1438eb0918eb475/gcc%2Ftestsuite%2Flib%2Fg%2B%2B-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79d38dd46e6b07e5a90ab25df1438eb0918eb475/gcc%2Ftestsuite%2Flib%2Fg%2B%2B-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fg%2B%2B-dg.exp?ref=79d38dd46e6b07e5a90ab25df1438eb0918eb475", "patch": "@@ -53,7 +53,16 @@ proc g++-dg-runtest { testcases flags default-extra-flags } {\n \t    if { [llength $gpp_std_list] > 0 } {\n \t\tset std_list $gpp_std_list\n \t    } else {\n-\t\tset std_list { 98 14 17 20 }\n+\t\t# If the test requires a newer C++ version than which\n+\t\t# is tested by default, use that C++ version for that\n+\t\t# single test.  This should be updated or commented\n+\t\t# out whenever the default std_list is updated or newer\n+\t\t# C++ effective target is added.\n+\t\tif [search_for $test \"{ dg-do * { target c++23 } }\"] {\n+\t\t    set std_list { 23 }\n+\t\t} else {\n+\t\t    set std_list { 98 14 17 20 }\n+\t\t}\n \t    }\n \t    set option_list { }\n \t    foreach x $std_list {"}]}