{"sha": "3757e8d71794cece4a5c9d08245b7ad111044853", "node_id": "C_kwDOANBUbNoAKDM3NTdlOGQ3MTc5NGNlY2U0YTVjOWQwODI0NWI3YWQxMTEwNDQ4NTM", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2023-04-10T08:59:48Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2023-04-10T08:59:48Z"}, "message": "Merge commit '6baa95c9c5b3fea96fd22d03d961db4e4cf48d88' into HEAD [#2112]", "tree": {"sha": "778c6eb8324fa714713ce30a0897e44cf276508b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/778c6eb8324fa714713ce30a0897e44cf276508b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3757e8d71794cece4a5c9d08245b7ad111044853", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3757e8d71794cece4a5c9d08245b7ad111044853", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3757e8d71794cece4a5c9d08245b7ad111044853", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3757e8d71794cece4a5c9d08245b7ad111044853/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e44f127cdb12a28536fe21983dfad20570bceda0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e44f127cdb12a28536fe21983dfad20570bceda0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e44f127cdb12a28536fe21983dfad20570bceda0"}, {"sha": "6baa95c9c5b3fea96fd22d03d961db4e4cf48d88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6baa95c9c5b3fea96fd22d03d961db4e4cf48d88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6baa95c9c5b3fea96fd22d03d961db4e4cf48d88"}], "stats": {"total": 2212367, "additions": 553834, "deletions": 1658533}, "files": [{"sha": "e59f55f0c9b281fbbeb827c50a4dffa3f31b787d", "filename": ".github/bors_log_expected_warnings", "status": "modified", "additions": 18, "deletions": 20, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/.github%2Fbors_log_expected_warnings", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/.github%2Fbors_log_expected_warnings", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/.github%2Fbors_log_expected_warnings?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -1,4 +1,3 @@\n-../../../../libffi/src/x86/ffi.c:612:1: warning: label \u2018out\u2019 defined but not used [-Wunused-label]\n ../../../../libgcc/generic-morestack.c:397:16: warning: comparison of integer expressions of different signedness: \u2018unsigned int\u2019 and \u2018long int\u2019 [-Wsign-compare]\n ../../../libcpp/expr.cc:821:35: warning: format not a string literal and no format arguments [-Wformat-security]\n ../../../libcpp/expr.cc:824:38: warning: format not a string literal and no format arguments [-Wformat-security]\n@@ -8,12 +7,6 @@\n ../../../libcpp/macro.cc:214:34: warning: format not a string literal and no format arguments [-Wformat-security]\n ../../../libcpp/macro.cc:3704:25: warning: format not a string literal and no format arguments [-Wformat-security]\n ../../../libcpp/macro.cc:3719:25: warning: format not a string literal and no format arguments [-Wformat-security]\n-../../../libffi/src/java_raw_api.c:317:3: warning: \u2018ffi_java_raw_to_ptrarray\u2019 is deprecated [-Wdeprecated-declarations]\n-../../../libffi/src/java_raw_api.c:328:3: warning: \u2018ffi_java_raw_size\u2019 is deprecated [-Wdeprecated-declarations]\n-../../../libffi/src/java_raw_api.c:331:3: warning: \u2018ffi_java_ptrarray_to_raw\u2019 is deprecated [-Wdeprecated-declarations]\n-../../../libffi/src/java_raw_api.c:369:3: warning: \u2018ffi_prep_java_raw_closure_loc\u2019 is deprecated [-Wdeprecated-declarations]\n-../../../libffi/src/x86/ffi64.c:783:1: warning: label \u2018out\u2019 defined but not used [-Wunused-label]\n-../../../libffi/src/x86/ffiw64.c:250:1: warning: label \u2018out\u2019 defined but not used [-Wunused-label]\n ../../c++tools/server.cc:490:11: warning: ignoring return value of \u2018ssize_t write(int, const void*, size_t)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n ../../c++tools/server.cc:620:10: warning: ignoring return value of \u2018int pipe(int*)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n ../../gcc/../libgcc/libgcov-util.c:455:9: warning: ignoring return value of \u2018int chdir(const char*)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n@@ -28,24 +21,28 @@\n ../../gcc/analyzer/call-summary.cc:99:40: warning: unknown conversion type character \u2018E\u2019 in format [-Wformat=]\n ../../gcc/analyzer/diagnostic-manager.cc:802:20: warning: too many arguments for format [-Wformat-extra-args]\n ../../gcc/analyzer/diagnostic-manager.cc:802:28: warning: unknown conversion type character \u2018E\u2019 in format [-Wformat=]\n-../../gcc/analyzer/program-state.cc:1398:15: warning: format not a string literal and no format arguments [-Wformat-security]\n-../../gcc/c-family/c-common.cc:6596:14: warning: format not a string literal and no format arguments [-Wformat-security]\n-../../gcc/c-family/c-common.cc:6600:16: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../gcc/analyzer/program-state.cc:1422:15: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../gcc/analyzer/sm-malloc.cc:1627:22: warning: too many arguments for format [-Wformat-extra-args]\n+../../gcc/analyzer/sm-malloc.cc:1627:25: warning: unknown conversion type character \u2018E\u2019 in format [-Wformat=]\n+../../gcc/analyzer/sm-malloc.cc:1628:22: warning: too many arguments for format [-Wformat-extra-args]\n+../../gcc/analyzer/sm-malloc.cc:1628:25: warning: unknown conversion type character \u2018E\u2019 in format [-Wformat=]\n+../../gcc/c-family/c-common.cc:6611:14: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../gcc/c-family/c-common.cc:6615:16: warning: format not a string literal and no format arguments [-Wformat-security]\n ../../gcc/c/c-convert.cc:84:13: warning: format not a string literal and no format arguments [-Wformat-security]\n ../../gcc/c/c-typeck.cc:12265:16: warning: format not a string literal and no format arguments [-Wformat-security]\n ../../gcc/c/c-typeck.cc:3798:17: warning: format not a string literal and no format arguments [-Wformat-security]\n ../../gcc/c/c-typeck.cc:4568:16: warning: format not a string literal and no format arguments [-Wformat-security]\n ../../gcc/c/c-typeck.cc:6755:23: warning: format not a string literal and no format arguments [-Wformat-security]\n ../../gcc/collect-utils.cc:237:21: warning: format not a string literal and no format arguments [-Wformat-security]\n ../../gcc/collect2.cc:2397:21: warning: format not a string literal and no format arguments [-Wformat-security]\n-../../gcc/diagnostic.cc:2237:15: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../gcc/diagnostic.cc:2250:15: warning: format not a string literal and no format arguments [-Wformat-security]\n ../../gcc/expmed.cc:1838:45: warning: \u2018*(unsigned int*)((char*)&imode + offsetof(scalar_int_mode, scalar_int_mode::m_mode))\u2019 may be used uninitialized in this function [-Wmaybe-uninitialized]\n ../../gcc/fold-const.cc:313:13: warning: format not a string literal and no format arguments [-Wformat-security]\n-../../gcc/gcc.cc:10519:12: warning: ignoring return value of \u2018ssize_t read(int, void*, size_t)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n-../../gcc/gcc.cc:7749:9: warning: ignoring return value of \u2018ssize_t write(int, const void*, size_t)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n-../../gcc/gcc.cc:7752:13: warning: ignoring return value of \u2018ssize_t write(int, const void*, size_t)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n-../../gcc/gcc.cc:7753:13: warning: ignoring return value of \u2018ssize_t write(int, const void*, size_t)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n-../../gcc/gcc.cc:7755:9: warning: ignoring return value of \u2018ssize_t write(int, const void*, size_t)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n+../../gcc/gcc.cc:10523:12: warning: ignoring return value of \u2018ssize_t read(int, void*, size_t)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n+../../gcc/gcc.cc:7753:9: warning: ignoring return value of \u2018ssize_t write(int, const void*, size_t)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n+../../gcc/gcc.cc:7756:13: warning: ignoring return value of \u2018ssize_t write(int, const void*, size_t)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n+../../gcc/gcc.cc:7757:13: warning: ignoring return value of \u2018ssize_t write(int, const void*, size_t)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n+../../gcc/gcc.cc:7759:9: warning: ignoring return value of \u2018ssize_t write(int, const void*, size_t)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n ../../gcc/genhooks.cc:112:17: warning: ignoring return value of \u2018int fscanf(FILE*, const char*, ...)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n ../../gcc/genhooks.cc:121:14: warning: ignoring return value of \u2018int fscanf(FILE*, const char*, ...)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n ../../gcc/genhooks.cc:174:14: warning: ignoring return value of \u2018int fscanf(FILE*, const char*, ...)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n@@ -54,11 +51,12 @@\n ../../gcc/ipa-devirt.cc:965:10: warning: format not a string literal and no format arguments [-Wformat-security]\n ../../gcc/lto-wrapper.cc:1151:8: warning: ignoring return value of \u2018ssize_t read(int, void*, size_t)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n ../../gcc/lto-wrapper.cc:1369:10: warning: format not a string literal and no format arguments [-Wformat-security]\n-../../gcc/lto-wrapper.cc:1961:23: warning: format not a string literal and no format arguments [-Wformat-security]\n-../../gcc/lto/lto-common.cc:2077:10: warning: ignoring return value of \u2018int fscanf(FILE*, const char*, ...)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n-../../gcc/lto/lto-common.cc:2079:9: warning: ignoring return value of \u2018size_t fread(void*, size_t, size_t, FILE*)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n-../../gcc/lto/lto-common.cc:2099:10: warning: ignoring return value of \u2018int fscanf(FILE*, const char*, ...)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n+../../gcc/lto-wrapper.cc:1971:23: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../gcc/lto/lto-common.cc:2081:10: warning: ignoring return value of \u2018int fscanf(FILE*, const char*, ...)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n+../../gcc/lto/lto-common.cc:2083:9: warning: ignoring return value of \u2018size_t fread(void*, size_t, size_t, FILE*)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n+../../gcc/lto/lto-common.cc:2103:10: warning: ignoring return value of \u2018int fscanf(FILE*, const char*, ...)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n ../../gcc/tree-ssa-sccvn.cc:280:21: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../gcc/vec.h:316:10: warning: \u2018void free(void*)\u2019 called on unallocated object \u2018dest_bbs\u2019 [-Wfree-nonheap-object]\n ../../libcpp/expr.cc:821:35: warning: format not a string literal and no format arguments [-Wformat-security]\n ../../libcpp/expr.cc:824:38: warning: format not a string literal and no format arguments [-Wformat-security]\n ../../libcpp/expr.cc:834:33: warning: format not a string literal and no format arguments [-Wformat-security]"}, {"sha": "5653a565bd9d0955ec01075b6b0dde83ddee7d83", "filename": "ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -1,3 +1,11 @@\n+2023-03-22  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* MAINTAINERS: Add myself as OpenMP and libgomp maintainer.\n+\n+2023-03-10  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\t* MAINTAINERS (Write After Approval): Add myself.\n+\n 2023-02-16  Martin Liska  <mliska@suse.cz>\n \n \t* MAINTAINERS: I'm stepping down from my positions."}, {"sha": "cebf45d49e56c3c060bca07b236d853658435563", "filename": "MAINTAINERS", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/MAINTAINERS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/MAINTAINERS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/MAINTAINERS?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -179,6 +179,7 @@ fp-bit\t\t\tIan Lance Taylor\t<ian@airs.com>\n libgcc\t\t\tIan Lance Taylor\t<ian@airs.com>\n libgo\t\t\tIan Lance Taylor\t<ian@airs.com>\n libgomp\t\t\tJakub Jelinek\t\t<jakub@redhat.com>\n+libgomp\t\t\tTobias Burnus\t\t<tobias@codesourcery.com>\n libgomp (OpenACC)\tThomas Schwinge\t\t<thomas@codesourcery.com>\n libiberty\t\tIan Lance Taylor\t<ian@airs.com>\n libitm\t\t\tTorvald Riegel\t\t<triegel@redhat.com>\n@@ -253,6 +254,7 @@ loop optimizer\t\tBin Cheng\t\t<bin.cheng@linux.alibaba.com>\n OpenACC\t\t\tThomas Schwinge\t\t<thomas@codesourcery.com>\n OpenACC\t\t\tTobias Burnus\t\t<tobias@codesourcery.com>\n OpenMP\t\t\tJakub Jelinek\t\t<jakub@redhat.com>\n+OpenMP\t\t\tTobias Burnus\t\t<tobias@codesourcery.com>\n testsuite\t\tRainer Orth\t\t<ro@CeBiTec.Uni-Bielefeld.DE>\n testsuite\t\tMike Stump\t\t<mikestump@comcast.net>\n register allocation\tVladimir Makarov\t<vmakarov@redhat.com>\n@@ -269,6 +271,7 @@ check in changes outside of the parts of the compiler they maintain.\n arc port\t\tClaudiu Zissulescu\t<claziss@synopsys.com>\n callgraph\t\tMartin Jambor\t\t<mjambor@suse.cz>\n C front end\t\tMarek Polacek\t\t<polacek@redhat.com>\n+CTF, BTF\t\tIndu Bhagat\t\t<indu.bhagat@oracle.com>\n CTF, BTF\t\tDavid Faust\t\t<david.faust@oracle.com>\n dataflow\t\tPaolo Bonzini\t\t<bonzini@gnu.org>\n dataflow\t\tSeongbae Park\t\t<seongbae.park@gmail.com>\n@@ -318,6 +321,7 @@ from other maintainers or reviewers.\n Mark G. Adams\t\t\t\t\t<mark.g.adams@sympatico.ca>\n Pedro Alves\t\t\t\t\t<palves@redhat.com>\n Paul-Antoine Arras\t\t\t\t<pa@codesourcery.com>\n+Arsen Arsenovi\u0107\t\t      \t    \t\t<arsen@aarsen.me>\n Raksit Ashok\t\t\t\t\t<raksit@google.com>\n Matt Austern\t\t\t\t\t<austern@google.com>\n David Ayers\t\t\t\t\t<ayers@fsfe.org>\n@@ -337,7 +341,6 @@ Andrew Benson\t\t\t\t\t<abensonca@gmail.com>\n Daniel Berlin\t\t\t\t\t<dberlin@dberlin.org>\n Pat Bernardi\t\t\t\t\t<bernardi@adacore.com>\n Jan Beulich\t\t\t\t\t<jbeulich@novell.com>\n-Indu Bhagat\t\t\t\t\t<indu.bhagat@oracle.com>\n David Billinghurst\t\t\t\t<David.Billinghurst@riotinto.com>\n Tomas Bily\t\t\t\t\t<tbily@suse.cz>\n Laurynas Biveinis\t\t\t\t<laurynas.biveinis@gmail.com>"}, {"sha": "6a6ff51cd0de81668a95837d4ae02f8a76b4dd9d", "filename": "c++tools/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/c%2B%2Btools%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/c%2B%2Btools%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2FChangeLog?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -1,3 +1,12 @@\n+2023-03-31  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR bootstrap/101834\n+\t* Makefile.in (INSTALL): Set variable.\n+\t(mostlyclean): Mark as a phony target.\n+\t(clean): Add mostlyclean as a prerequisite.\n+\t(distclean): Add clean as a prerequisite and remove more files.\n+\t(maintainer-clean): Add distclean as a prerequisite.\n+\n 2023-01-09  John David Anglin  <danglin@gcc.gnu.org>\n \n \tPR other/107616"}, {"sha": "77bda3d56dc16af82eef7c718b223c945c5c13c1", "filename": "c++tools/Makefile.in", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/c%2B%2Btools%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/c%2B%2Btools%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2FMakefile.in?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -22,6 +22,7 @@ libexecdir := @libexecdir@\n target_noncanonical := @target_noncanonical@\n gcc_version := $(shell @get_gcc_base_ver@ $(srcdir)/../gcc/BASE-VER)\n libexecsubdir := $(libexecdir)/gcc/$(target_noncanonical)/$(gcc_version)\n+INSTALL := @INSTALL@\n INSTALL_PROGRAM := @INSTALL_PROGRAM@\n INSTALL_STRIP_PROGRAM := $(srcdir)/../install-sh -c -s\n AUTOCONF := @AUTOCONF@\n@@ -41,13 +42,14 @@ all::\n mostlyclean::\n \trm -f $(MAPPER.O)\n \n-clean::\n+clean:: mostlyclean\n \trm -f g++-mapper-server$(exeext)\n \n-distclean::\n-\trm -f config.log config.status config.h\n+distclean:: clean\n+\trm -f config.log config.status config.h config.cache Makefile\n+\trm -f $(MAPPER.O:%.o=%.d)\n \n-maintainer-clean::\n+maintainer-clean:: distclean\n \n install::\n \n@@ -132,6 +134,6 @@ config.h: config.status config.h.in\n config.status: $(srcdir)/configure $(srcdir)/config.h.in\n \tif test -x $@; then ./$@ -recheck; else $< @configure_args@; fi\n \n-.PHONY: all check clean distclean maintainer-clean\n+.PHONY: all check mostlyclean clean distclean maintainer-clean\n \n -include $(MAPPER.O:.o=.d)"}, {"sha": "169ba9ae38dc1c3266a1913b856e84fe9e86d7b9", "filename": "contrib/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -1,3 +1,21 @@\n+2023-03-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* unicode/README: Update to mention also makeuname2c.\n+\t* unicode/NameAliases.txt: New file.\n+\n+2023-03-13  Lewis Hyatt  <lhyatt@gmail.com>\n+\n+\t* unicode/DerivedCoreProperties.txt: Update to Unicode 15.\n+\t* unicode/DerivedNormalizationProps.txt: Likewise.\n+\t* unicode/EastAsianWidth.txt: Likwise.\n+\t* unicode/PropList.txt: Likewise.\n+\t* unicode/README: Likewise.\n+\t* unicode/UnicodeData.txt: Likewise.\n+\n+2023-02-22  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* config-list.mk (LIST): Clarify i686-symbolics-gnu to i686-gnu.\n+\n 2023-02-17  Petr Sumbera  <petr.sumbera@oracle.com>\n \n \t* make_sunver.pl: Escape brace."}, {"sha": "e570b13c71b8bc087ca48251de4883ad8e50d34b", "filename": "contrib/config-list.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/contrib%2Fconfig-list.mk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/contrib%2Fconfig-list.mk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fconfig-list.mk?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -50,7 +50,7 @@ LIST = aarch64-elf aarch64-freebsd13 aarch64-linux-gnu aarch64-rtems \\\n   i686-pc-linux-gnu i686-apple-darwin i686-apple-darwin9 i686-apple-darwin10 \\\n   i686-freebsd13 i686-kfreebsd-gnu \\\n   i686-netbsdelf9 \\\n-  i686-openbsd i686-elf i686-kopensolaris-gnu i686-symbolics-gnu \\\n+  i686-openbsd i686-elf i686-kopensolaris-gnu i686-gnu \\\n   i686-pc-msdosdjgpp i686-lynxos i686-nto-qnx \\\n   i686-rtems i686-solaris2.11 i686-wrs-vxworks \\\n   i686-wrs-vxworksae \\"}, {"sha": "8b482b5c10ae424f9f2cbb0847c5614f1976a019", "filename": "contrib/unicode/DerivedCoreProperties.txt", "status": "modified", "additions": 206, "deletions": 47, "changes": 253, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/contrib%2Funicode%2FDerivedCoreProperties.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/contrib%2Funicode%2FDerivedCoreProperties.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Funicode%2FDerivedCoreProperties.txt?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -1,11 +1,11 @@\n-# DerivedCoreProperties-14.0.0.txt\n-# Date: 2021-08-12, 23:12:53 GMT\n-# \u00a9 2021 Unicode\u00ae, Inc.\n+# DerivedCoreProperties-15.0.0.txt\n+# Date: 2022-08-05, 22:17:05 GMT\n+# \u00a9 2022 Unicode\u00ae, Inc.\n # Unicode and the Unicode Logo are registered trademarks of Unicode, Inc. in the U.S. and other countries.\n-# For terms of use, see http://www.unicode.org/terms_of_use.html\n+# For terms of use, see https://www.unicode.org/terms_of_use.html\n #\n # Unicode Character Database\n-#   For documentation, see http://www.unicode.org/reports/tr44/\n+#   For documentation, see https://www.unicode.org/reports/tr44/\n \n # ================================================\n \n@@ -462,6 +462,7 @@ FFE9..FFEC    ; Math # Sm   [4] HALFWIDTH LEFTWARDS ARROW..HALFWIDTH DOWNWARDS A\n 0BD7          ; Alphabetic # Mc       TAMIL AU LENGTH MARK\n 0C00          ; Alphabetic # Mn       TELUGU SIGN COMBINING CANDRABINDU ABOVE\n 0C01..0C03    ; Alphabetic # Mc   [3] TELUGU SIGN CANDRABINDU..TELUGU SIGN VISARGA\n+0C04          ; Alphabetic # Mn       TELUGU SIGN COMBINING ANUSVARA ABOVE\n 0C05..0C0C    ; Alphabetic # Lo   [8] TELUGU LETTER A..TELUGU LETTER VOCALIC L\n 0C0E..0C10    ; Alphabetic # Lo   [3] TELUGU LETTER E..TELUGU LETTER AI\n 0C12..0C28    ; Alphabetic # Lo  [23] TELUGU LETTER O..TELUGU LETTER NA\n@@ -497,6 +498,7 @@ FFE9..FFEC    ; Math # Sm   [4] HALFWIDTH LEFTWARDS ARROW..HALFWIDTH DOWNWARDS A\n 0CE0..0CE1    ; Alphabetic # Lo   [2] KANNADA LETTER VOCALIC RR..KANNADA LETTER VOCALIC LL\n 0CE2..0CE3    ; Alphabetic # Mn   [2] KANNADA VOWEL SIGN VOCALIC L..KANNADA VOWEL SIGN VOCALIC LL\n 0CF1..0CF2    ; Alphabetic # Lo   [2] KANNADA SIGN JIHVAMULIYA..KANNADA SIGN UPADHMANIYA\n+0CF3          ; Alphabetic # Mc       KANNADA SIGN COMBINING ANUSVARA ABOVE RIGHT\n 0D00..0D01    ; Alphabetic # Mn   [2] MALAYALAM SIGN COMBINING ANUSVARA ABOVE..MALAYALAM SIGN CANDRABINDU\n 0D02..0D03    ; Alphabetic # Mc   [2] MALAYALAM SIGN ANUSVARA..MALAYALAM SIGN VISARGA\n 0D04..0D0C    ; Alphabetic # Lo   [9] MALAYALAM LETTER VEDIC ANUSVARA..MALAYALAM LETTER VOCALIC L\n@@ -552,7 +554,7 @@ FFE9..FFEC    ; Math # Sm   [4] HALFWIDTH LEFTWARDS ARROW..HALFWIDTH DOWNWARDS A\n 0F49..0F6C    ; Alphabetic # Lo  [36] TIBETAN LETTER NYA..TIBETAN LETTER RRA\n 0F71..0F7E    ; Alphabetic # Mn  [14] TIBETAN VOWEL SIGN AA..TIBETAN SIGN RJES SU NGA RO\n 0F7F          ; Alphabetic # Mc       TIBETAN SIGN RNAM BCAD\n-0F80..0F81    ; Alphabetic # Mn   [2] TIBETAN VOWEL SIGN REVERSED I..TIBETAN VOWEL SIGN REVERSED II\n+0F80..0F83    ; Alphabetic # Mn   [4] TIBETAN VOWEL SIGN REVERSED I..TIBETAN SIGN SNA LDAN\n 0F88..0F8C    ; Alphabetic # Lo   [5] TIBETAN SIGN LCE TSA CAN..TIBETAN SIGN INVERTED MCHU CAN\n 0F8D..0F97    ; Alphabetic # Mn  [11] TIBETAN SUBJOINED SIGN LCE TSA CAN..TIBETAN SUBJOINED LETTER JA\n 0F99..0FBC    ; Alphabetic # Mn  [36] TIBETAN SUBJOINED LETTER NYA..TIBETAN SUBJOINED LETTER FIXED-FORM RA\n@@ -1053,6 +1055,7 @@ FFDA..FFDC    ; Alphabetic # Lo   [3] HALFWIDTH HANGUL LETTER EU..HALFWIDTH HANG\n 11071..11072  ; Alphabetic # Lo   [2] BRAHMI LETTER OLD TAMIL SHORT E..BRAHMI LETTER OLD TAMIL SHORT O\n 11073..11074  ; Alphabetic # Mn   [2] BRAHMI VOWEL SIGN OLD TAMIL SHORT E..BRAHMI VOWEL SIGN OLD TAMIL SHORT O\n 11075         ; Alphabetic # Lo       BRAHMI LETTER OLD TAMIL LLA\n+11080..11081  ; Alphabetic # Mn   [2] KAITHI SIGN CANDRABINDU..KAITHI SIGN ANUSVARA\n 11082         ; Alphabetic # Mc       KAITHI SIGN VISARGA\n 11083..110AF  ; Alphabetic # Lo  [45] KAITHI LETTER A..KAITHI LETTER HA\n 110B0..110B2  ; Alphabetic # Mc   [3] KAITHI VOWEL SIGN AA..KAITHI VOWEL SIGN II\n@@ -1089,6 +1092,8 @@ FFDA..FFDC    ; Alphabetic # Lo   [3] HALFWIDTH HANGUL LETTER EU..HALFWIDTH HANG\n 11234         ; Alphabetic # Mn       KHOJKI SIGN ANUSVARA\n 11237         ; Alphabetic # Mn       KHOJKI SIGN SHADDA\n 1123E         ; Alphabetic # Mn       KHOJKI SIGN SUKUN\n+1123F..11240  ; Alphabetic # Lo   [2] KHOJKI LETTER QA..KHOJKI LETTER SHORT I\n+11241         ; Alphabetic # Mn       KHOJKI VOWEL SIGN VOCALIC R\n 11280..11286  ; Alphabetic # Lo   [7] MULTANI LETTER A..MULTANI LETTER GA\n 11288         ; Alphabetic # Lo       MULTANI LETTER GHA\n 1128A..1128D  ; Alphabetic # Lo   [4] MULTANI LETTER CA..MULTANI LETTER JJA\n@@ -1243,12 +1248,22 @@ FFDA..FFDC    ; Alphabetic # Lo   [3] HALFWIDTH HANGUL LETTER EU..HALFWIDTH HANG\n 11EE0..11EF2  ; Alphabetic # Lo  [19] MAKASAR LETTER KA..MAKASAR ANGKA\n 11EF3..11EF4  ; Alphabetic # Mn   [2] MAKASAR VOWEL SIGN I..MAKASAR VOWEL SIGN U\n 11EF5..11EF6  ; Alphabetic # Mc   [2] MAKASAR VOWEL SIGN E..MAKASAR VOWEL SIGN O\n+11F00..11F01  ; Alphabetic # Mn   [2] KAWI SIGN CANDRABINDU..KAWI SIGN ANUSVARA\n+11F02         ; Alphabetic # Lo       KAWI SIGN REPHA\n+11F03         ; Alphabetic # Mc       KAWI SIGN VISARGA\n+11F04..11F10  ; Alphabetic # Lo  [13] KAWI LETTER A..KAWI LETTER O\n+11F12..11F33  ; Alphabetic # Lo  [34] KAWI LETTER KA..KAWI LETTER JNYA\n+11F34..11F35  ; Alphabetic # Mc   [2] KAWI VOWEL SIGN AA..KAWI VOWEL SIGN ALTERNATE AA\n+11F36..11F3A  ; Alphabetic # Mn   [5] KAWI VOWEL SIGN I..KAWI VOWEL SIGN VOCALIC R\n+11F3E..11F3F  ; Alphabetic # Mc   [2] KAWI VOWEL SIGN E..KAWI VOWEL SIGN AI\n+11F40         ; Alphabetic # Mn       KAWI VOWEL SIGN EU\n 11FB0         ; Alphabetic # Lo       LISU LETTER YHA\n 12000..12399  ; Alphabetic # Lo [922] CUNEIFORM SIGN A..CUNEIFORM SIGN U U\n 12400..1246E  ; Alphabetic # Nl [111] CUNEIFORM NUMERIC SIGN TWO ASH..CUNEIFORM NUMERIC SIGN NINE U VARIANT FORM\n 12480..12543  ; Alphabetic # Lo [196] CUNEIFORM SIGN AB TIMES NUN TENU..CUNEIFORM SIGN ZU5 TIMES THREE DISH TENU\n 12F90..12FF0  ; Alphabetic # Lo  [97] CYPRO-MINOAN SIGN CM001..CYPRO-MINOAN SIGN CM114\n-13000..1342E  ; Alphabetic # Lo [1071] EGYPTIAN HIEROGLYPH A001..EGYPTIAN HIEROGLYPH AA032\n+13000..1342F  ; Alphabetic # Lo [1072] EGYPTIAN HIEROGLYPH A001..EGYPTIAN HIEROGLYPH V011D\n+13441..13446  ; Alphabetic # Lo   [6] EGYPTIAN HIEROGLYPH FULL BLANK..EGYPTIAN HIEROGLYPH WIDE LOST SIGN\n 14400..14646  ; Alphabetic # Lo [583] ANATOLIAN HIEROGLYPH A001..ANATOLIAN HIEROGLYPH A530\n 16800..16A38  ; Alphabetic # Lo [569] BAMUM LETTER PHASE-A NGKUE MFON..BAMUM LETTER PHASE-F VUEQ\n 16A40..16A5E  ; Alphabetic # Lo  [31] MRO LETTER TA..MRO LETTER TEK\n@@ -1275,7 +1290,9 @@ FFDA..FFDC    ; Alphabetic # Lo   [3] HALFWIDTH HANGUL LETTER EU..HALFWIDTH HANG\n 1AFF5..1AFFB  ; Alphabetic # Lm   [7] KATAKANA LETTER MINNAN TONE-7..KATAKANA LETTER MINNAN NASALIZED TONE-5\n 1AFFD..1AFFE  ; Alphabetic # Lm   [2] KATAKANA LETTER MINNAN NASALIZED TONE-7..KATAKANA LETTER MINNAN NASALIZED TONE-8\n 1B000..1B122  ; Alphabetic # Lo [291] KATAKANA LETTER ARCHAIC E..KATAKANA LETTER ARCHAIC WU\n+1B132         ; Alphabetic # Lo       HIRAGANA LETTER SMALL KO\n 1B150..1B152  ; Alphabetic # Lo   [3] HIRAGANA LETTER SMALL WI..HIRAGANA LETTER SMALL WO\n+1B155         ; Alphabetic # Lo       KATAKANA LETTER SMALL KO\n 1B164..1B167  ; Alphabetic # Lo   [4] KATAKANA LETTER SMALL WI..KATAKANA LETTER SMALL N\n 1B170..1B2FB  ; Alphabetic # Lo [396] NUSHU CHARACTER-1B170..NUSHU CHARACTER-1B2FB\n 1BC00..1BC6A  ; Alphabetic # Lo [107] DUPLOYAN LETTER H..DUPLOYAN LETTER VOCALIC M\n@@ -1316,16 +1333,21 @@ FFDA..FFDC    ; Alphabetic # Lo   [3] HALFWIDTH HANGUL LETTER EU..HALFWIDTH HANG\n 1DF00..1DF09  ; Alphabetic # L&  [10] LATIN SMALL LETTER FENG DIGRAPH WITH TRILL..LATIN SMALL LETTER T WITH HOOK AND RETROFLEX HOOK\n 1DF0A         ; Alphabetic # Lo       LATIN LETTER RETROFLEX CLICK WITH RETROFLEX HOOK\n 1DF0B..1DF1E  ; Alphabetic # L&  [20] LATIN SMALL LETTER ESH WITH DOUBLE BAR..LATIN SMALL LETTER S WITH CURL\n+1DF25..1DF2A  ; Alphabetic # L&   [6] LATIN SMALL LETTER D WITH MID-HEIGHT LEFT HOOK..LATIN SMALL LETTER T WITH MID-HEIGHT LEFT HOOK\n 1E000..1E006  ; Alphabetic # Mn   [7] COMBINING GLAGOLITIC LETTER AZU..COMBINING GLAGOLITIC LETTER ZHIVETE\n 1E008..1E018  ; Alphabetic # Mn  [17] COMBINING GLAGOLITIC LETTER ZEMLJA..COMBINING GLAGOLITIC LETTER HERU\n 1E01B..1E021  ; Alphabetic # Mn   [7] COMBINING GLAGOLITIC LETTER SHTA..COMBINING GLAGOLITIC LETTER YATI\n 1E023..1E024  ; Alphabetic # Mn   [2] COMBINING GLAGOLITIC LETTER YU..COMBINING GLAGOLITIC LETTER SMALL YUS\n 1E026..1E02A  ; Alphabetic # Mn   [5] COMBINING GLAGOLITIC LETTER YO..COMBINING GLAGOLITIC LETTER FITA\n+1E030..1E06D  ; Alphabetic # Lm  [62] MODIFIER LETTER CYRILLIC SMALL A..MODIFIER LETTER CYRILLIC SMALL STRAIGHT U WITH STROKE\n+1E08F         ; Alphabetic # Mn       COMBINING CYRILLIC SMALL LETTER BYELORUSSIAN-UKRAINIAN I\n 1E100..1E12C  ; Alphabetic # Lo  [45] NYIAKENG PUACHUE HMONG LETTER MA..NYIAKENG PUACHUE HMONG LETTER W\n 1E137..1E13D  ; Alphabetic # Lm   [7] NYIAKENG PUACHUE HMONG SIGN FOR PERSON..NYIAKENG PUACHUE HMONG SYLLABLE LENGTHENER\n 1E14E         ; Alphabetic # Lo       NYIAKENG PUACHUE HMONG LOGOGRAM NYAJ\n 1E290..1E2AD  ; Alphabetic # Lo  [30] TOTO LETTER PA..TOTO LETTER A\n 1E2C0..1E2EB  ; Alphabetic # Lo  [44] WANCHO LETTER AA..WANCHO LETTER YIH\n+1E4D0..1E4EA  ; Alphabetic # Lo  [27] NAG MUNDARI LETTER O..NAG MUNDARI LETTER ELL\n+1E4EB         ; Alphabetic # Lm       NAG MUNDARI SIGN OJOD\n 1E7E0..1E7E6  ; Alphabetic # Lo   [7] ETHIOPIC SYLLABLE HHYA..ETHIOPIC SYLLABLE HHYO\n 1E7E8..1E7EB  ; Alphabetic # Lo   [4] ETHIOPIC SYLLABLE GURAGE HHWA..ETHIOPIC SYLLABLE HHWE\n 1E7ED..1E7EE  ; Alphabetic # Lo   [2] ETHIOPIC SYLLABLE GURAGE MWI..ETHIOPIC SYLLABLE GURAGE MWEE\n@@ -1371,14 +1393,15 @@ FFDA..FFDC    ; Alphabetic # Lo   [3] HALFWIDTH HANGUL LETTER EU..HALFWIDTH HANG\n 1F150..1F169  ; Alphabetic # So  [26] NEGATIVE CIRCLED LATIN CAPITAL LETTER A..NEGATIVE CIRCLED LATIN CAPITAL LETTER Z\n 1F170..1F189  ; Alphabetic # So  [26] NEGATIVE SQUARED LATIN CAPITAL LETTER A..NEGATIVE SQUARED LATIN CAPITAL LETTER Z\n 20000..2A6DF  ; Alphabetic # Lo [42720] CJK UNIFIED IDEOGRAPH-20000..CJK UNIFIED IDEOGRAPH-2A6DF\n-2A700..2B738  ; Alphabetic # Lo [4153] CJK UNIFIED IDEOGRAPH-2A700..CJK UNIFIED IDEOGRAPH-2B738\n+2A700..2B739  ; Alphabetic # Lo [4154] CJK UNIFIED IDEOGRAPH-2A700..CJK UNIFIED IDEOGRAPH-2B739\n 2B740..2B81D  ; Alphabetic # Lo [222] CJK UNIFIED IDEOGRAPH-2B740..CJK UNIFIED IDEOGRAPH-2B81D\n 2B820..2CEA1  ; Alphabetic # Lo [5762] CJK UNIFIED IDEOGRAPH-2B820..CJK UNIFIED IDEOGRAPH-2CEA1\n 2CEB0..2EBE0  ; Alphabetic # Lo [7473] CJK UNIFIED IDEOGRAPH-2CEB0..CJK UNIFIED IDEOGRAPH-2EBE0\n 2F800..2FA1D  ; Alphabetic # Lo [542] CJK COMPATIBILITY IDEOGRAPH-2F800..CJK COMPATIBILITY IDEOGRAPH-2FA1D\n 30000..3134A  ; Alphabetic # Lo [4939] CJK UNIFIED IDEOGRAPH-30000..CJK UNIFIED IDEOGRAPH-3134A\n+31350..323AF  ; Alphabetic # Lo [4192] CJK UNIFIED IDEOGRAPH-31350..CJK UNIFIED IDEOGRAPH-323AF\n \n-# Total code points: 133396\n+# Total code points: 137765\n \n # ================================================\n \n@@ -1663,6 +1686,7 @@ FFDA..FFDC    ; Alphabetic # Lo   [3] HALFWIDTH HANGUL LETTER EU..HALFWIDTH HANG\n 052F          ; Lowercase # L&       CYRILLIC SMALL LETTER EL WITH DESCENDER\n 0560..0588    ; Lowercase # L&  [41] ARMENIAN SMALL LETTER TURNED AYB..ARMENIAN SMALL LETTER YI WITH STROKE\n 10D0..10FA    ; Lowercase # L&  [43] GEORGIAN LETTER AN..GEORGIAN LETTER AIN\n+10FC          ; Lowercase # Lm       MODIFIER LETTER GEORGIAN NAR\n 10FD..10FF    ; Lowercase # L&   [3] GEORGIAN LETTER AEN..GEORGIAN LETTER LABIAL SIGN\n 13F8..13FD    ; Lowercase # L&   [6] CHEROKEE SMALL LETTER YE..CHEROKEE SMALL LETTER MV\n 1C80..1C88    ; Lowercase # L&   [9] CYRILLIC SMALL LETTER ROUNDED VE..CYRILLIC SMALL LETTER UNBLENDED UK\n@@ -2012,12 +2036,14 @@ A7D3          ; Lowercase # L&       LATIN SMALL LETTER DOUBLE THORN\n A7D5          ; Lowercase # L&       LATIN SMALL LETTER DOUBLE WYNN\n A7D7          ; Lowercase # L&       LATIN SMALL LETTER MIDDLE SCOTS S\n A7D9          ; Lowercase # L&       LATIN SMALL LETTER SIGMOID S\n+A7F2..A7F4    ; Lowercase # Lm   [3] MODIFIER LETTER CAPITAL C..MODIFIER LETTER CAPITAL Q\n A7F6          ; Lowercase # L&       LATIN SMALL LETTER REVERSED HALF H\n A7F8..A7F9    ; Lowercase # Lm   [2] MODIFIER LETTER CAPITAL H WITH STROKE..MODIFIER LETTER SMALL LIGATURE OE\n A7FA          ; Lowercase # L&       LATIN LETTER SMALL CAPITAL TURNED M\n AB30..AB5A    ; Lowercase # L&  [43] LATIN SMALL LETTER BARRED ALPHA..LATIN SMALL LETTER Y WITH SHORT RIGHT LEG\n AB5C..AB5F    ; Lowercase # Lm   [4] MODIFIER LETTER SMALL HENG..MODIFIER LETTER SMALL U WITH LEFT HOOK\n AB60..AB68    ; Lowercase # L&   [9] LATIN SMALL LETTER SAKHA YAT..LATIN SMALL LETTER TURNED R WITH MIDDLE TILDE\n+AB69          ; Lowercase # Lm       MODIFIER LETTER SMALL TURNED W\n AB70..ABBF    ; Lowercase # L&  [80] CHEROKEE SMALL LETTER A..CHEROKEE SMALL LETTER YA\n FB00..FB06    ; Lowercase # L&   [7] LATIN SMALL LIGATURE FF..LATIN SMALL LIGATURE ST\n FB13..FB17    ; Lowercase # L&   [5] ARMENIAN SMALL LIGATURE MEN NOW..ARMENIAN SMALL LIGATURE MEN XEH\n@@ -2065,9 +2091,11 @@ FF41..FF5A    ; Lowercase # L&  [26] FULLWIDTH LATIN SMALL LETTER A..FULLWIDTH L\n 1D7CB         ; Lowercase # L&       MATHEMATICAL BOLD SMALL DIGAMMA\n 1DF00..1DF09  ; Lowercase # L&  [10] LATIN SMALL LETTER FENG DIGRAPH WITH TRILL..LATIN SMALL LETTER T WITH HOOK AND RETROFLEX HOOK\n 1DF0B..1DF1E  ; Lowercase # L&  [20] LATIN SMALL LETTER ESH WITH DOUBLE BAR..LATIN SMALL LETTER S WITH CURL\n+1DF25..1DF2A  ; Lowercase # L&   [6] LATIN SMALL LETTER D WITH MID-HEIGHT LEFT HOOK..LATIN SMALL LETTER T WITH MID-HEIGHT LEFT HOOK\n+1E030..1E06D  ; Lowercase # Lm  [62] MODIFIER LETTER CYRILLIC SMALL A..MODIFIER LETTER CYRILLIC SMALL STRAIGHT U WITH STROKE\n 1E922..1E943  ; Lowercase # L&  [34] ADLAM SMALL LETTER ALIF..ADLAM SMALL LETTER SHA\n \n-# Total code points: 2471\n+# Total code points: 2544\n \n # ================================================\n \n@@ -2767,6 +2795,7 @@ FF21..FF3A    ; Uppercase # L&  [26] FULLWIDTH LATIN CAPITAL LETTER A..FULLWIDTH\n 10C7          ; Cased # L&       GEORGIAN CAPITAL LETTER YN\n 10CD          ; Cased # L&       GEORGIAN CAPITAL LETTER AEN\n 10D0..10FA    ; Cased # L&  [43] GEORGIAN LETTER AN..GEORGIAN LETTER AIN\n+10FC          ; Cased # Lm       MODIFIER LETTER GEORGIAN NAR\n 10FD..10FF    ; Cased # L&   [3] GEORGIAN LETTER AEN..GEORGIAN LETTER LABIAL SIGN\n 13A0..13F5    ; Cased # L&  [86] CHEROKEE LETTER A..CHEROKEE LETTER MV\n 13F8..13FD    ; Cased # L&   [6] CHEROKEE SMALL LETTER YE..CHEROKEE SMALL LETTER MV\n@@ -2837,12 +2866,14 @@ A790..A7CA    ; Cased # L&  [59] LATIN CAPITAL LETTER N WITH DESCENDER..LATIN SM\n A7D0..A7D1    ; Cased # L&   [2] LATIN CAPITAL LETTER CLOSED INSULAR G..LATIN SMALL LETTER CLOSED INSULAR G\n A7D3          ; Cased # L&       LATIN SMALL LETTER DOUBLE THORN\n A7D5..A7D9    ; Cased # L&   [5] LATIN SMALL LETTER DOUBLE WYNN..LATIN SMALL LETTER SIGMOID S\n+A7F2..A7F4    ; Cased # Lm   [3] MODIFIER LETTER CAPITAL C..MODIFIER LETTER CAPITAL Q\n A7F5..A7F6    ; Cased # L&   [2] LATIN CAPITAL LETTER REVERSED HALF H..LATIN SMALL LETTER REVERSED HALF H\n A7F8..A7F9    ; Cased # Lm   [2] MODIFIER LETTER CAPITAL H WITH STROKE..MODIFIER LETTER SMALL LIGATURE OE\n A7FA          ; Cased # L&       LATIN LETTER SMALL CAPITAL TURNED M\n AB30..AB5A    ; Cased # L&  [43] LATIN SMALL LETTER BARRED ALPHA..LATIN SMALL LETTER Y WITH SHORT RIGHT LEG\n AB5C..AB5F    ; Cased # Lm   [4] MODIFIER LETTER SMALL HENG..MODIFIER LETTER SMALL U WITH LEFT HOOK\n AB60..AB68    ; Cased # L&   [9] LATIN SMALL LETTER SAKHA YAT..LATIN SMALL LETTER TURNED R WITH MIDDLE TILDE\n+AB69          ; Cased # Lm       MODIFIER LETTER SMALL TURNED W\n AB70..ABBF    ; Cased # L&  [80] CHEROKEE SMALL LETTER A..CHEROKEE SMALL LETTER YA\n FB00..FB06    ; Cased # L&   [7] LATIN SMALL LIGATURE FF..LATIN SMALL LIGATURE ST\n FB13..FB17    ; Cased # L&   [5] ARMENIAN SMALL LIGATURE MEN NOW..ARMENIAN SMALL LIGATURE MEN XEH\n@@ -2899,12 +2930,14 @@ FF41..FF5A    ; Cased # L&  [26] FULLWIDTH LATIN SMALL LETTER A..FULLWIDTH LATIN\n 1D7C4..1D7CB  ; Cased # L&   [8] MATHEMATICAL SANS-SERIF BOLD ITALIC EPSILON SYMBOL..MATHEMATICAL BOLD SMALL DIGAMMA\n 1DF00..1DF09  ; Cased # L&  [10] LATIN SMALL LETTER FENG DIGRAPH WITH TRILL..LATIN SMALL LETTER T WITH HOOK AND RETROFLEX HOOK\n 1DF0B..1DF1E  ; Cased # L&  [20] LATIN SMALL LETTER ESH WITH DOUBLE BAR..LATIN SMALL LETTER S WITH CURL\n+1DF25..1DF2A  ; Cased # L&   [6] LATIN SMALL LETTER D WITH MID-HEIGHT LEFT HOOK..LATIN SMALL LETTER T WITH MID-HEIGHT LEFT HOOK\n+1E030..1E06D  ; Cased # Lm  [62] MODIFIER LETTER CYRILLIC SMALL A..MODIFIER LETTER CYRILLIC SMALL STRAIGHT U WITH STROKE\n 1E900..1E943  ; Cased # L&  [68] ADLAM CAPITAL LETTER ALIF..ADLAM SMALL LETTER SHA\n 1F130..1F149  ; Cased # So  [26] SQUARED LATIN CAPITAL LETTER A..SQUARED LATIN CAPITAL LETTER Z\n 1F150..1F169  ; Cased # So  [26] NEGATIVE CIRCLED LATIN CAPITAL LETTER A..NEGATIVE CIRCLED LATIN CAPITAL LETTER Z\n 1F170..1F189  ; Cased # So  [26] NEGATIVE SQUARED LATIN CAPITAL LETTER A..NEGATIVE SQUARED LATIN CAPITAL LETTER Z\n \n-# Total code points: 4453\n+# Total code points: 4526\n \n # ================================================\n \n@@ -3054,7 +3087,7 @@ FF41..FF5A    ; Cased # L&  [26] FULLWIDTH LATIN SMALL LETTER A..FULLWIDTH LATIN\n 0EB1          ; Case_Ignorable # Mn       LAO VOWEL SIGN MAI KAN\n 0EB4..0EBC    ; Case_Ignorable # Mn   [9] LAO VOWEL SIGN I..LAO SEMIVOWEL SIGN LO\n 0EC6          ; Case_Ignorable # Lm       LAO KO LA\n-0EC8..0ECD    ; Case_Ignorable # Mn   [6] LAO TONE MAI EK..LAO NIGGAHITA\n+0EC8..0ECE    ; Case_Ignorable # Mn   [7] LAO TONE MAI EK..LAO YAMAKKAN\n 0F18..0F19    ; Case_Ignorable # Mn   [2] TIBETAN ASTROLOGICAL SIGN -KHYUD PA..TIBETAN ASTROLOGICAL SIGN SDONG TSHUGS\n 0F35          ; Case_Ignorable # Mn       TIBETAN MARK NGAS BZUNG NYI ZLA\n 0F37          ; Case_Ignorable # Mn       TIBETAN MARK NGAS BZUNG SGOR RTAGS\n@@ -3263,6 +3296,7 @@ FFF9..FFFB    ; Case_Ignorable # Cf   [3] INTERLINEAR ANNOTATION ANCHOR..INTERLI\n 10AE5..10AE6  ; Case_Ignorable # Mn   [2] MANICHAEAN ABBREVIATION MARK ABOVE..MANICHAEAN ABBREVIATION MARK BELOW\n 10D24..10D27  ; Case_Ignorable # Mn   [4] HANIFI ROHINGYA SIGN HARBAHAY..HANIFI ROHINGYA SIGN TASSI\n 10EAB..10EAC  ; Case_Ignorable # Mn   [2] YEZIDI COMBINING HAMZA MARK..YEZIDI COMBINING MADDA MARK\n+10EFD..10EFF  ; Case_Ignorable # Mn   [3] ARABIC SMALL LOW WORD SAKTA..ARABIC SMALL LOW WORD MADDA\n 10F46..10F50  ; Case_Ignorable # Mn  [11] SOGDIAN COMBINING DOT BELOW..SOGDIAN COMBINING STROKE BELOW\n 10F82..10F85  ; Case_Ignorable # Mn   [4] OLD UYGHUR COMBINING DOT ABOVE..OLD UYGHUR COMBINING TWO DOTS BELOW\n 11001         ; Case_Ignorable # Mn       BRAHMI SIGN ANUSVARA\n@@ -3287,6 +3321,7 @@ FFF9..FFFB    ; Case_Ignorable # Cf   [3] INTERLINEAR ANNOTATION ANCHOR..INTERLI\n 11234         ; Case_Ignorable # Mn       KHOJKI SIGN ANUSVARA\n 11236..11237  ; Case_Ignorable # Mn   [2] KHOJKI SIGN NUKTA..KHOJKI SIGN SHADDA\n 1123E         ; Case_Ignorable # Mn       KHOJKI SIGN SUKUN\n+11241         ; Case_Ignorable # Mn       KHOJKI VOWEL SIGN VOCALIC R\n 112DF         ; Case_Ignorable # Mn       KHUDAWADI SIGN ANUSVARA\n 112E3..112EA  ; Case_Ignorable # Mn   [8] KHUDAWADI VOWEL SIGN U..KHUDAWADI SIGN VIRAMA\n 11300..11301  ; Case_Ignorable # Mn   [2] GRANTHA SIGN COMBINING ANUSVARA ABOVE..GRANTHA SIGN CANDRABINDU\n@@ -3348,7 +3383,13 @@ FFF9..FFFB    ; Case_Ignorable # Cf   [3] INTERLINEAR ANNOTATION ANCHOR..INTERLI\n 11D95         ; Case_Ignorable # Mn       GUNJALA GONDI SIGN ANUSVARA\n 11D97         ; Case_Ignorable # Mn       GUNJALA GONDI VIRAMA\n 11EF3..11EF4  ; Case_Ignorable # Mn   [2] MAKASAR VOWEL SIGN I..MAKASAR VOWEL SIGN U\n-13430..13438  ; Case_Ignorable # Cf   [9] EGYPTIAN HIEROGLYPH VERTICAL JOINER..EGYPTIAN HIEROGLYPH END SEGMENT\n+11F00..11F01  ; Case_Ignorable # Mn   [2] KAWI SIGN CANDRABINDU..KAWI SIGN ANUSVARA\n+11F36..11F3A  ; Case_Ignorable # Mn   [5] KAWI VOWEL SIGN I..KAWI VOWEL SIGN VOCALIC R\n+11F40         ; Case_Ignorable # Mn       KAWI VOWEL SIGN EU\n+11F42         ; Case_Ignorable # Mn       KAWI CONJOINER\n+13430..1343F  ; Case_Ignorable # Cf  [16] EGYPTIAN HIEROGLYPH VERTICAL JOINER..EGYPTIAN HIEROGLYPH END WALLED ENCLOSURE\n+13440         ; Case_Ignorable # Mn       EGYPTIAN HIEROGLYPH MIRROR HORIZONTALLY\n+13447..13455  ; Case_Ignorable # Mn  [15] EGYPTIAN HIEROGLYPH MODIFIER DAMAGED AT TOP START..EGYPTIAN HIEROGLYPH MODIFIER DAMAGED\n 16AF0..16AF4  ; Case_Ignorable # Mn   [5] BASSA VAH COMBINING HIGH TONE..BASSA VAH COMBINING HIGH-LOW TONE\n 16B30..16B36  ; Case_Ignorable # Mn   [7] PAHAWH HMONG MARK CIM TUB..PAHAWH HMONG MARK CIM TAUM\n 16B40..16B43  ; Case_Ignorable # Lm   [4] PAHAWH HMONG SIGN VOS SEEV..PAHAWH HMONG SIGN IB YAM\n@@ -3382,10 +3423,14 @@ FFF9..FFFB    ; Case_Ignorable # Cf   [3] INTERLINEAR ANNOTATION ANCHOR..INTERLI\n 1E01B..1E021  ; Case_Ignorable # Mn   [7] COMBINING GLAGOLITIC LETTER SHTA..COMBINING GLAGOLITIC LETTER YATI\n 1E023..1E024  ; Case_Ignorable # Mn   [2] COMBINING GLAGOLITIC LETTER YU..COMBINING GLAGOLITIC LETTER SMALL YUS\n 1E026..1E02A  ; Case_Ignorable # Mn   [5] COMBINING GLAGOLITIC LETTER YO..COMBINING GLAGOLITIC LETTER FITA\n+1E030..1E06D  ; Case_Ignorable # Lm  [62] MODIFIER LETTER CYRILLIC SMALL A..MODIFIER LETTER CYRILLIC SMALL STRAIGHT U WITH STROKE\n+1E08F         ; Case_Ignorable # Mn       COMBINING CYRILLIC SMALL LETTER BYELORUSSIAN-UKRAINIAN I\n 1E130..1E136  ; Case_Ignorable # Mn   [7] NYIAKENG PUACHUE HMONG TONE-B..NYIAKENG PUACHUE HMONG TONE-D\n 1E137..1E13D  ; Case_Ignorable # Lm   [7] NYIAKENG PUACHUE HMONG SIGN FOR PERSON..NYIAKENG PUACHUE HMONG SYLLABLE LENGTHENER\n 1E2AE         ; Case_Ignorable # Mn       TOTO SIGN RISING TONE\n 1E2EC..1E2EF  ; Case_Ignorable # Mn   [4] WANCHO TONE TUP..WANCHO TONE KOINI\n+1E4EB         ; Case_Ignorable # Lm       NAG MUNDARI SIGN OJOD\n+1E4EC..1E4EF  ; Case_Ignorable # Mn   [4] NAG MUNDARI SIGN MUHOR..NAG MUNDARI SIGN SUTUH\n 1E8D0..1E8D6  ; Case_Ignorable # Mn   [7] MENDE KIKAKUI COMBINING NUMBER TEENS..MENDE KIKAKUI COMBINING NUMBER MILLIONS\n 1E944..1E94A  ; Case_Ignorable # Mn   [7] ADLAM ALIF LENGTHENER..ADLAM NUKTA\n 1E94B         ; Case_Ignorable # Lm       ADLAM NASALIZATION MARK\n@@ -3394,7 +3439,7 @@ E0001         ; Case_Ignorable # Cf       LANGUAGE TAG\n E0020..E007F  ; Case_Ignorable # Cf  [96] TAG SPACE..CANCEL TAG\n E0100..E01EF  ; Case_Ignorable # Mn [240] VARIATION SELECTOR-17..VARIATION SELECTOR-256\n \n-# Total code points: 2602\n+# Total code points: 2707\n \n # ================================================\n \n@@ -6617,6 +6662,7 @@ FFDA..FFDC    ; ID_Start # Lo   [3] HALFWIDTH HANGUL LETTER EU..HALFWIDTH HANGUL\n 111DC         ; ID_Start # Lo       SHARADA HEADSTROKE\n 11200..11211  ; ID_Start # Lo  [18] KHOJKI LETTER A..KHOJKI LETTER JJA\n 11213..1122B  ; ID_Start # Lo  [25] KHOJKI LETTER NYA..KHOJKI LETTER LLA\n+1123F..11240  ; ID_Start # Lo   [2] KHOJKI LETTER QA..KHOJKI LETTER SHORT I\n 11280..11286  ; ID_Start # Lo   [7] MULTANI LETTER A..MULTANI LETTER GA\n 11288         ; ID_Start # Lo       MULTANI LETTER GHA\n 1128A..1128D  ; ID_Start # Lo   [4] MULTANI LETTER CA..MULTANI LETTER JJA\n@@ -6679,12 +6725,16 @@ FFDA..FFDC    ; ID_Start # Lo   [3] HALFWIDTH HANGUL LETTER EU..HALFWIDTH HANGUL\n 11D6A..11D89  ; ID_Start # Lo  [32] GUNJALA GONDI LETTER OO..GUNJALA GONDI LETTER SA\n 11D98         ; ID_Start # Lo       GUNJALA GONDI OM\n 11EE0..11EF2  ; ID_Start # Lo  [19] MAKASAR LETTER KA..MAKASAR ANGKA\n+11F02         ; ID_Start # Lo       KAWI SIGN REPHA\n+11F04..11F10  ; ID_Start # Lo  [13] KAWI LETTER A..KAWI LETTER O\n+11F12..11F33  ; ID_Start # Lo  [34] KAWI LETTER KA..KAWI LETTER JNYA\n 11FB0         ; ID_Start # Lo       LISU LETTER YHA\n 12000..12399  ; ID_Start # Lo [922] CUNEIFORM SIGN A..CUNEIFORM SIGN U U\n 12400..1246E  ; ID_Start # Nl [111] CUNEIFORM NUMERIC SIGN TWO ASH..CUNEIFORM NUMERIC SIGN NINE U VARIANT FORM\n 12480..12543  ; ID_Start # Lo [196] CUNEIFORM SIGN AB TIMES NUN TENU..CUNEIFORM SIGN ZU5 TIMES THREE DISH TENU\n 12F90..12FF0  ; ID_Start # Lo  [97] CYPRO-MINOAN SIGN CM001..CYPRO-MINOAN SIGN CM114\n-13000..1342E  ; ID_Start # Lo [1071] EGYPTIAN HIEROGLYPH A001..EGYPTIAN HIEROGLYPH AA032\n+13000..1342F  ; ID_Start # Lo [1072] EGYPTIAN HIEROGLYPH A001..EGYPTIAN HIEROGLYPH V011D\n+13441..13446  ; ID_Start # Lo   [6] EGYPTIAN HIEROGLYPH FULL BLANK..EGYPTIAN HIEROGLYPH WIDE LOST SIGN\n 14400..14646  ; ID_Start # Lo [583] ANATOLIAN HIEROGLYPH A001..ANATOLIAN HIEROGLYPH A530\n 16800..16A38  ; ID_Start # Lo [569] BAMUM LETTER PHASE-A NGKUE MFON..BAMUM LETTER PHASE-F VUEQ\n 16A40..16A5E  ; ID_Start # Lo  [31] MRO LETTER TA..MRO LETTER TEK\n@@ -6707,7 +6757,9 @@ FFDA..FFDC    ; ID_Start # Lo   [3] HALFWIDTH HANGUL LETTER EU..HALFWIDTH HANGUL\n 1AFF5..1AFFB  ; ID_Start # Lm   [7] KATAKANA LETTER MINNAN TONE-7..KATAKANA LETTER MINNAN NASALIZED TONE-5\n 1AFFD..1AFFE  ; ID_Start # Lm   [2] KATAKANA LETTER MINNAN NASALIZED TONE-7..KATAKANA LETTER MINNAN NASALIZED TONE-8\n 1B000..1B122  ; ID_Start # Lo [291] KATAKANA LETTER ARCHAIC E..KATAKANA LETTER ARCHAIC WU\n+1B132         ; ID_Start # Lo       HIRAGANA LETTER SMALL KO\n 1B150..1B152  ; ID_Start # Lo   [3] HIRAGANA LETTER SMALL WI..HIRAGANA LETTER SMALL WO\n+1B155         ; ID_Start # Lo       KATAKANA LETTER SMALL KO\n 1B164..1B167  ; ID_Start # Lo   [4] KATAKANA LETTER SMALL WI..KATAKANA LETTER SMALL N\n 1B170..1B2FB  ; ID_Start # Lo [396] NUSHU CHARACTER-1B170..NUSHU CHARACTER-1B2FB\n 1BC00..1BC6A  ; ID_Start # Lo [107] DUPLOYAN LETTER H..DUPLOYAN LETTER VOCALIC M\n@@ -6747,11 +6799,15 @@ FFDA..FFDC    ; ID_Start # Lo   [3] HALFWIDTH HANGUL LETTER EU..HALFWIDTH HANGUL\n 1DF00..1DF09  ; ID_Start # L&  [10] LATIN SMALL LETTER FENG DIGRAPH WITH TRILL..LATIN SMALL LETTER T WITH HOOK AND RETROFLEX HOOK\n 1DF0A         ; ID_Start # Lo       LATIN LETTER RETROFLEX CLICK WITH RETROFLEX HOOK\n 1DF0B..1DF1E  ; ID_Start # L&  [20] LATIN SMALL LETTER ESH WITH DOUBLE BAR..LATIN SMALL LETTER S WITH CURL\n+1DF25..1DF2A  ; ID_Start # L&   [6] LATIN SMALL LETTER D WITH MID-HEIGHT LEFT HOOK..LATIN SMALL LETTER T WITH MID-HEIGHT LEFT HOOK\n+1E030..1E06D  ; ID_Start # Lm  [62] MODIFIER LETTER CYRILLIC SMALL A..MODIFIER LETTER CYRILLIC SMALL STRAIGHT U WITH STROKE\n 1E100..1E12C  ; ID_Start # Lo  [45] NYIAKENG PUACHUE HMONG LETTER MA..NYIAKENG PUACHUE HMONG LETTER W\n 1E137..1E13D  ; ID_Start # Lm   [7] NYIAKENG PUACHUE HMONG SIGN FOR PERSON..NYIAKENG PUACHUE HMONG SYLLABLE LENGTHENER\n 1E14E         ; ID_Start # Lo       NYIAKENG PUACHUE HMONG LOGOGRAM NYAJ\n 1E290..1E2AD  ; ID_Start # Lo  [30] TOTO LETTER PA..TOTO LETTER A\n 1E2C0..1E2EB  ; ID_Start # Lo  [44] WANCHO LETTER AA..WANCHO LETTER YIH\n+1E4D0..1E4EA  ; ID_Start # Lo  [27] NAG MUNDARI LETTER O..NAG MUNDARI LETTER ELL\n+1E4EB         ; ID_Start # Lm       NAG MUNDARI SIGN OJOD\n 1E7E0..1E7E6  ; ID_Start # Lo   [7] ETHIOPIC SYLLABLE HHYA..ETHIOPIC SYLLABLE HHYO\n 1E7E8..1E7EB  ; ID_Start # Lo   [4] ETHIOPIC SYLLABLE GURAGE HHWA..ETHIOPIC SYLLABLE HHWE\n 1E7ED..1E7EE  ; ID_Start # Lo   [2] ETHIOPIC SYLLABLE GURAGE MWI..ETHIOPIC SYLLABLE GURAGE MWEE\n@@ -6793,14 +6849,15 @@ FFDA..FFDC    ; ID_Start # Lo   [3] HALFWIDTH HANGUL LETTER EU..HALFWIDTH HANGUL\n 1EEA5..1EEA9  ; ID_Start # Lo   [5] ARABIC MATHEMATICAL DOUBLE-STRUCK WAW..ARABIC MATHEMATICAL DOUBLE-STRUCK YEH\n 1EEAB..1EEBB  ; ID_Start # Lo  [17] ARABIC MATHEMATICAL DOUBLE-STRUCK LAM..ARABIC MATHEMATICAL DOUBLE-STRUCK GHAIN\n 20000..2A6DF  ; ID_Start # Lo [42720] CJK UNIFIED IDEOGRAPH-20000..CJK UNIFIED IDEOGRAPH-2A6DF\n-2A700..2B738  ; ID_Start # Lo [4153] CJK UNIFIED IDEOGRAPH-2A700..CJK UNIFIED IDEOGRAPH-2B738\n+2A700..2B739  ; ID_Start # Lo [4154] CJK UNIFIED IDEOGRAPH-2A700..CJK UNIFIED IDEOGRAPH-2B739\n 2B740..2B81D  ; ID_Start # Lo [222] CJK UNIFIED IDEOGRAPH-2B740..CJK UNIFIED IDEOGRAPH-2B81D\n 2B820..2CEA1  ; ID_Start # Lo [5762] CJK UNIFIED IDEOGRAPH-2B820..CJK UNIFIED IDEOGRAPH-2CEA1\n 2CEB0..2EBE0  ; ID_Start # Lo [7473] CJK UNIFIED IDEOGRAPH-2CEB0..CJK UNIFIED IDEOGRAPH-2EBE0\n 2F800..2FA1D  ; ID_Start # Lo [542] CJK COMPATIBILITY IDEOGRAPH-2F800..CJK COMPATIBILITY IDEOGRAPH-2FA1D\n 30000..3134A  ; ID_Start # Lo [4939] CJK UNIFIED IDEOGRAPH-30000..CJK UNIFIED IDEOGRAPH-3134A\n+31350..323AF  ; ID_Start # Lo [4192] CJK UNIFIED IDEOGRAPH-31350..CJK UNIFIED IDEOGRAPH-323AF\n \n-# Total code points: 131997\n+# Total code points: 136345\n \n # ================================================\n \n@@ -7083,6 +7140,7 @@ FFDA..FFDC    ; ID_Start # Lo   [3] HALFWIDTH HANGUL LETTER EU..HALFWIDTH HANGUL\n 0CE2..0CE3    ; ID_Continue # Mn   [2] KANNADA VOWEL SIGN VOCALIC L..KANNADA VOWEL SIGN VOCALIC LL\n 0CE6..0CEF    ; ID_Continue # Nd  [10] KANNADA DIGIT ZERO..KANNADA DIGIT NINE\n 0CF1..0CF2    ; ID_Continue # Lo   [2] KANNADA SIGN JIHVAMULIYA..KANNADA SIGN UPADHMANIYA\n+0CF3          ; ID_Continue # Mc       KANNADA SIGN COMBINING ANUSVARA ABOVE RIGHT\n 0D00..0D01    ; ID_Continue # Mn   [2] MALAYALAM SIGN COMBINING ANUSVARA ABOVE..MALAYALAM SIGN CANDRABINDU\n 0D02..0D03    ; ID_Continue # Mc   [2] MALAYALAM SIGN ANUSVARA..MALAYALAM SIGN VISARGA\n 0D04..0D0C    ; ID_Continue # Lo   [9] MALAYALAM LETTER VEDIC ANUSVARA..MALAYALAM LETTER VOCALIC L\n@@ -7136,7 +7194,7 @@ FFDA..FFDC    ; ID_Start # Lo   [3] HALFWIDTH HANGUL LETTER EU..HALFWIDTH HANGUL\n 0EBD          ; ID_Continue # Lo       LAO SEMIVOWEL SIGN NYO\n 0EC0..0EC4    ; ID_Continue # Lo   [5] LAO VOWEL SIGN E..LAO VOWEL SIGN AI\n 0EC6          ; ID_Continue # Lm       LAO KO LA\n-0EC8..0ECD    ; ID_Continue # Mn   [6] LAO TONE MAI EK..LAO NIGGAHITA\n+0EC8..0ECE    ; ID_Continue # Mn   [7] LAO TONE MAI EK..LAO YAMAKKAN\n 0ED0..0ED9    ; ID_Continue # Nd  [10] LAO DIGIT ZERO..LAO DIGIT NINE\n 0EDC..0EDF    ; ID_Continue # Lo   [4] LAO HO NO..LAO LETTER KHMU NYO\n 0F00          ; ID_Continue # Lo       TIBETAN SYLLABLE OM\n@@ -7719,6 +7777,7 @@ FFDA..FFDC    ; ID_Continue # Lo   [3] HALFWIDTH HANGUL LETTER EU..HALFWIDTH HAN\n 10E80..10EA9  ; ID_Continue # Lo  [42] YEZIDI LETTER ELIF..YEZIDI LETTER ET\n 10EAB..10EAC  ; ID_Continue # Mn   [2] YEZIDI COMBINING HAMZA MARK..YEZIDI COMBINING MADDA MARK\n 10EB0..10EB1  ; ID_Continue # Lo   [2] YEZIDI LETTER LAM WITH DOT ABOVE..YEZIDI LETTER YOT WITH CIRCUMFLEX ABOVE\n+10EFD..10EFF  ; ID_Continue # Mn   [3] ARABIC SMALL LOW WORD SAKTA..ARABIC SMALL LOW WORD MADDA\n 10F00..10F1C  ; ID_Continue # Lo  [29] OLD SOGDIAN LETTER ALEPH..OLD SOGDIAN LETTER FINAL TAW WITH VERTICAL TAIL\n 10F27         ; ID_Continue # Lo       OLD SOGDIAN LIGATURE AYIN-DALETH\n 10F30..10F45  ; ID_Continue # Lo  [22] SOGDIAN LETTER ALEPH..SOGDIAN INDEPENDENT SHIN\n@@ -7781,6 +7840,8 @@ FFDA..FFDC    ; ID_Continue # Lo   [3] HALFWIDTH HANGUL LETTER EU..HALFWIDTH HAN\n 11235         ; ID_Continue # Mc       KHOJKI SIGN VIRAMA\n 11236..11237  ; ID_Continue # Mn   [2] KHOJKI SIGN NUKTA..KHOJKI SIGN SHADDA\n 1123E         ; ID_Continue # Mn       KHOJKI SIGN SUKUN\n+1123F..11240  ; ID_Continue # Lo   [2] KHOJKI LETTER QA..KHOJKI LETTER SHORT I\n+11241         ; ID_Continue # Mn       KHOJKI VOWEL SIGN VOCALIC R\n 11280..11286  ; ID_Continue # Lo   [7] MULTANI LETTER A..MULTANI LETTER GA\n 11288         ; ID_Continue # Lo       MULTANI LETTER GHA\n 1128A..1128D  ; ID_Continue # Lo   [4] MULTANI LETTER CA..MULTANI LETTER JJA\n@@ -7963,12 +8024,27 @@ FFDA..FFDC    ; ID_Continue # Lo   [3] HALFWIDTH HANGUL LETTER EU..HALFWIDTH HAN\n 11EE0..11EF2  ; ID_Continue # Lo  [19] MAKASAR LETTER KA..MAKASAR ANGKA\n 11EF3..11EF4  ; ID_Continue # Mn   [2] MAKASAR VOWEL SIGN I..MAKASAR VOWEL SIGN U\n 11EF5..11EF6  ; ID_Continue # Mc   [2] MAKASAR VOWEL SIGN E..MAKASAR VOWEL SIGN O\n+11F00..11F01  ; ID_Continue # Mn   [2] KAWI SIGN CANDRABINDU..KAWI SIGN ANUSVARA\n+11F02         ; ID_Continue # Lo       KAWI SIGN REPHA\n+11F03         ; ID_Continue # Mc       KAWI SIGN VISARGA\n+11F04..11F10  ; ID_Continue # Lo  [13] KAWI LETTER A..KAWI LETTER O\n+11F12..11F33  ; ID_Continue # Lo  [34] KAWI LETTER KA..KAWI LETTER JNYA\n+11F34..11F35  ; ID_Continue # Mc   [2] KAWI VOWEL SIGN AA..KAWI VOWEL SIGN ALTERNATE AA\n+11F36..11F3A  ; ID_Continue # Mn   [5] KAWI VOWEL SIGN I..KAWI VOWEL SIGN VOCALIC R\n+11F3E..11F3F  ; ID_Continue # Mc   [2] KAWI VOWEL SIGN E..KAWI VOWEL SIGN AI\n+11F40         ; ID_Continue # Mn       KAWI VOWEL SIGN EU\n+11F41         ; ID_Continue # Mc       KAWI SIGN KILLER\n+11F42         ; ID_Continue # Mn       KAWI CONJOINER\n+11F50..11F59  ; ID_Continue # Nd  [10] KAWI DIGIT ZERO..KAWI DIGIT NINE\n 11FB0         ; ID_Continue # Lo       LISU LETTER YHA\n 12000..12399  ; ID_Continue # Lo [922] CUNEIFORM SIGN A..CUNEIFORM SIGN U U\n 12400..1246E  ; ID_Continue # Nl [111] CUNEIFORM NUMERIC SIGN TWO ASH..CUNEIFORM NUMERIC SIGN NINE U VARIANT FORM\n 12480..12543  ; ID_Continue # Lo [196] CUNEIFORM SIGN AB TIMES NUN TENU..CUNEIFORM SIGN ZU5 TIMES THREE DISH TENU\n 12F90..12FF0  ; ID_Continue # Lo  [97] CYPRO-MINOAN SIGN CM001..CYPRO-MINOAN SIGN CM114\n-13000..1342E  ; ID_Continue # Lo [1071] EGYPTIAN HIEROGLYPH A001..EGYPTIAN HIEROGLYPH AA032\n+13000..1342F  ; ID_Continue # Lo [1072] EGYPTIAN HIEROGLYPH A001..EGYPTIAN HIEROGLYPH V011D\n+13440         ; ID_Continue # Mn       EGYPTIAN HIEROGLYPH MIRROR HORIZONTALLY\n+13441..13446  ; ID_Continue # Lo   [6] EGYPTIAN HIEROGLYPH FULL BLANK..EGYPTIAN HIEROGLYPH WIDE LOST SIGN\n+13447..13455  ; ID_Continue # Mn  [15] EGYPTIAN HIEROGLYPH MODIFIER DAMAGED AT TOP START..EGYPTIAN HIEROGLYPH MODIFIER DAMAGED\n 14400..14646  ; ID_Continue # Lo [583] ANATOLIAN HIEROGLYPH A001..ANATOLIAN HIEROGLYPH A530\n 16800..16A38  ; ID_Continue # Lo [569] BAMUM LETTER PHASE-A NGKUE MFON..BAMUM LETTER PHASE-F VUEQ\n 16A40..16A5E  ; ID_Continue # Lo  [31] MRO LETTER TA..MRO LETTER TEK\n@@ -8001,7 +8077,9 @@ FFDA..FFDC    ; ID_Continue # Lo   [3] HALFWIDTH HANGUL LETTER EU..HALFWIDTH HAN\n 1AFF5..1AFFB  ; ID_Continue # Lm   [7] KATAKANA LETTER MINNAN TONE-7..KATAKANA LETTER MINNAN NASALIZED TONE-5\n 1AFFD..1AFFE  ; ID_Continue # Lm   [2] KATAKANA LETTER MINNAN NASALIZED TONE-7..KATAKANA LETTER MINNAN NASALIZED TONE-8\n 1B000..1B122  ; ID_Continue # Lo [291] KATAKANA LETTER ARCHAIC E..KATAKANA LETTER ARCHAIC WU\n+1B132         ; ID_Continue # Lo       HIRAGANA LETTER SMALL KO\n 1B150..1B152  ; ID_Continue # Lo   [3] HIRAGANA LETTER SMALL WI..HIRAGANA LETTER SMALL WO\n+1B155         ; ID_Continue # Lo       KATAKANA LETTER SMALL KO\n 1B164..1B167  ; ID_Continue # Lo   [4] KATAKANA LETTER SMALL WI..KATAKANA LETTER SMALL N\n 1B170..1B2FB  ; ID_Continue # Lo [396] NUSHU CHARACTER-1B170..NUSHU CHARACTER-1B2FB\n 1BC00..1BC6A  ; ID_Continue # Lo [107] DUPLOYAN LETTER H..DUPLOYAN LETTER VOCALIC M\n@@ -8058,11 +8136,14 @@ FFDA..FFDC    ; ID_Continue # Lo   [3] HALFWIDTH HANGUL LETTER EU..HALFWIDTH HAN\n 1DF00..1DF09  ; ID_Continue # L&  [10] LATIN SMALL LETTER FENG DIGRAPH WITH TRILL..LATIN SMALL LETTER T WITH HOOK AND RETROFLEX HOOK\n 1DF0A         ; ID_Continue # Lo       LATIN LETTER RETROFLEX CLICK WITH RETROFLEX HOOK\n 1DF0B..1DF1E  ; ID_Continue # L&  [20] LATIN SMALL LETTER ESH WITH DOUBLE BAR..LATIN SMALL LETTER S WITH CURL\n+1DF25..1DF2A  ; ID_Continue # L&   [6] LATIN SMALL LETTER D WITH MID-HEIGHT LEFT HOOK..LATIN SMALL LETTER T WITH MID-HEIGHT LEFT HOOK\n 1E000..1E006  ; ID_Continue # Mn   [7] COMBINING GLAGOLITIC LETTER AZU..COMBINING GLAGOLITIC LETTER ZHIVETE\n 1E008..1E018  ; ID_Continue # Mn  [17] COMBINING GLAGOLITIC LETTER ZEMLJA..COMBINING GLAGOLITIC LETTER HERU\n 1E01B..1E021  ; ID_Continue # Mn   [7] COMBINING GLAGOLITIC LETTER SHTA..COMBINING GLAGOLITIC LETTER YATI\n 1E023..1E024  ; ID_Continue # Mn   [2] COMBINING GLAGOLITIC LETTER YU..COMBINING GLAGOLITIC LETTER SMALL YUS\n 1E026..1E02A  ; ID_Continue # Mn   [5] COMBINING GLAGOLITIC LETTER YO..COMBINING GLAGOLITIC LETTER FITA\n+1E030..1E06D  ; ID_Continue # Lm  [62] MODIFIER LETTER CYRILLIC SMALL A..MODIFIER LETTER CYRILLIC SMALL STRAIGHT U WITH STROKE\n+1E08F         ; ID_Continue # Mn       COMBINING CYRILLIC SMALL LETTER BYELORUSSIAN-UKRAINIAN I\n 1E100..1E12C  ; ID_Continue # Lo  [45] NYIAKENG PUACHUE HMONG LETTER MA..NYIAKENG PUACHUE HMONG LETTER W\n 1E130..1E136  ; ID_Continue # Mn   [7] NYIAKENG PUACHUE HMONG TONE-B..NYIAKENG PUACHUE HMONG TONE-D\n 1E137..1E13D  ; ID_Continue # Lm   [7] NYIAKENG PUACHUE HMONG SIGN FOR PERSON..NYIAKENG PUACHUE HMONG SYLLABLE LENGTHENER\n@@ -8073,6 +8154,10 @@ FFDA..FFDC    ; ID_Continue # Lo   [3] HALFWIDTH HANGUL LETTER EU..HALFWIDTH HAN\n 1E2C0..1E2EB  ; ID_Continue # Lo  [44] WANCHO LETTER AA..WANCHO LETTER YIH\n 1E2EC..1E2EF  ; ID_Continue # Mn   [4] WANCHO TONE TUP..WANCHO TONE KOINI\n 1E2F0..1E2F9  ; ID_Continue # Nd  [10] WANCHO DIGIT ZERO..WANCHO DIGIT NINE\n+1E4D0..1E4EA  ; ID_Continue # Lo  [27] NAG MUNDARI LETTER O..NAG MUNDARI LETTER ELL\n+1E4EB         ; ID_Continue # Lm       NAG MUNDARI SIGN OJOD\n+1E4EC..1E4EF  ; ID_Continue # Mn   [4] NAG MUNDARI SIGN MUHOR..NAG MUNDARI SIGN SUTUH\n+1E4F0..1E4F9  ; ID_Continue # Nd  [10] NAG MUNDARI DIGIT ZERO..NAG MUNDARI DIGIT NINE\n 1E7E0..1E7E6  ; ID_Continue # Lo   [7] ETHIOPIC SYLLABLE HHYA..ETHIOPIC SYLLABLE HHYO\n 1E7E8..1E7EB  ; ID_Continue # Lo   [4] ETHIOPIC SYLLABLE GURAGE HHWA..ETHIOPIC SYLLABLE HHWE\n 1E7ED..1E7EE  ; ID_Continue # Lo   [2] ETHIOPIC SYLLABLE GURAGE MWI..ETHIOPIC SYLLABLE GURAGE MWEE\n@@ -8118,15 +8203,16 @@ FFDA..FFDC    ; ID_Continue # Lo   [3] HALFWIDTH HANGUL LETTER EU..HALFWIDTH HAN\n 1EEAB..1EEBB  ; ID_Continue # Lo  [17] ARABIC MATHEMATICAL DOUBLE-STRUCK LAM..ARABIC MATHEMATICAL DOUBLE-STRUCK GHAIN\n 1FBF0..1FBF9  ; ID_Continue # Nd  [10] SEGMENTED DIGIT ZERO..SEGMENTED DIGIT NINE\n 20000..2A6DF  ; ID_Continue # Lo [42720] CJK UNIFIED IDEOGRAPH-20000..CJK UNIFIED IDEOGRAPH-2A6DF\n-2A700..2B738  ; ID_Continue # Lo [4153] CJK UNIFIED IDEOGRAPH-2A700..CJK UNIFIED IDEOGRAPH-2B738\n+2A700..2B739  ; ID_Continue # Lo [4154] CJK UNIFIED IDEOGRAPH-2A700..CJK UNIFIED IDEOGRAPH-2B739\n 2B740..2B81D  ; ID_Continue # Lo [222] CJK UNIFIED IDEOGRAPH-2B740..CJK UNIFIED IDEOGRAPH-2B81D\n 2B820..2CEA1  ; ID_Continue # Lo [5762] CJK UNIFIED IDEOGRAPH-2B820..CJK UNIFIED IDEOGRAPH-2CEA1\n 2CEB0..2EBE0  ; ID_Continue # Lo [7473] CJK UNIFIED IDEOGRAPH-2CEB0..CJK UNIFIED IDEOGRAPH-2EBE0\n 2F800..2FA1D  ; ID_Continue # Lo [542] CJK COMPATIBILITY IDEOGRAPH-2F800..CJK COMPATIBILITY IDEOGRAPH-2FA1D\n 30000..3134A  ; ID_Continue # Lo [4939] CJK UNIFIED IDEOGRAPH-30000..CJK UNIFIED IDEOGRAPH-3134A\n+31350..323AF  ; ID_Continue # Lo [4192] CJK UNIFIED IDEOGRAPH-31350..CJK UNIFIED IDEOGRAPH-323AF\n E0100..E01EF  ; ID_Continue # Mn [240] VARIATION SELECTOR-17..VARIATION SELECTOR-256\n \n-# Total code points: 135072\n+# Total code points: 139482\n \n # ================================================\n \n@@ -8685,6 +8771,7 @@ FFDA..FFDC    ; XID_Start # Lo   [3] HALFWIDTH HANGUL LETTER EU..HALFWIDTH HANGU\n 111DC         ; XID_Start # Lo       SHARADA HEADSTROKE\n 11200..11211  ; XID_Start # Lo  [18] KHOJKI LETTER A..KHOJKI LETTER JJA\n 11213..1122B  ; XID_Start # Lo  [25] KHOJKI LETTER NYA..KHOJKI LETTER LLA\n+1123F..11240  ; XID_Start # Lo   [2] KHOJKI LETTER QA..KHOJKI LETTER SHORT I\n 11280..11286  ; XID_Start # Lo   [7] MULTANI LETTER A..MULTANI LETTER GA\n 11288         ; XID_Start # Lo       MULTANI LETTER GHA\n 1128A..1128D  ; XID_Start # Lo   [4] MULTANI LETTER CA..MULTANI LETTER JJA\n@@ -8747,12 +8834,16 @@ FFDA..FFDC    ; XID_Start # Lo   [3] HALFWIDTH HANGUL LETTER EU..HALFWIDTH HANGU\n 11D6A..11D89  ; XID_Start # Lo  [32] GUNJALA GONDI LETTER OO..GUNJALA GONDI LETTER SA\n 11D98         ; XID_Start # Lo       GUNJALA GONDI OM\n 11EE0..11EF2  ; XID_Start # Lo  [19] MAKASAR LETTER KA..MAKASAR ANGKA\n+11F02         ; XID_Start # Lo       KAWI SIGN REPHA\n+11F04..11F10  ; XID_Start # Lo  [13] KAWI LETTER A..KAWI LETTER O\n+11F12..11F33  ; XID_Start # Lo  [34] KAWI LETTER KA..KAWI LETTER JNYA\n 11FB0         ; XID_Start # Lo       LISU LETTER YHA\n 12000..12399  ; XID_Start # Lo [922] CUNEIFORM SIGN A..CUNEIFORM SIGN U U\n 12400..1246E  ; XID_Start # Nl [111] CUNEIFORM NUMERIC SIGN TWO ASH..CUNEIFORM NUMERIC SIGN NINE U VARIANT FORM\n 12480..12543  ; XID_Start # Lo [196] CUNEIFORM SIGN AB TIMES NUN TENU..CUNEIFORM SIGN ZU5 TIMES THREE DISH TENU\n 12F90..12FF0  ; XID_Start # Lo  [97] CYPRO-MINOAN SIGN CM001..CYPRO-MINOAN SIGN CM114\n-13000..1342E  ; XID_Start # Lo [1071] EGYPTIAN HIEROGLYPH A001..EGYPTIAN HIEROGLYPH AA032\n+13000..1342F  ; XID_Start # Lo [1072] EGYPTIAN HIEROGLYPH A001..EGYPTIAN HIEROGLYPH V011D\n+13441..13446  ; XID_Start # Lo   [6] EGYPTIAN HIEROGLYPH FULL BLANK..EGYPTIAN HIEROGLYPH WIDE LOST SIGN\n 14400..14646  ; XID_Start # Lo [583] ANATOLIAN HIEROGLYPH A001..ANATOLIAN HIEROGLYPH A530\n 16800..16A38  ; XID_Start # Lo [569] BAMUM LETTER PHASE-A NGKUE MFON..BAMUM LETTER PHASE-F VUEQ\n 16A40..16A5E  ; XID_Start # Lo  [31] MRO LETTER TA..MRO LETTER TEK\n@@ -8775,7 +8866,9 @@ FFDA..FFDC    ; XID_Start # Lo   [3] HALFWIDTH HANGUL LETTER EU..HALFWIDTH HANGU\n 1AFF5..1AFFB  ; XID_Start # Lm   [7] KATAKANA LETTER MINNAN TONE-7..KATAKANA LETTER MINNAN NASALIZED TONE-5\n 1AFFD..1AFFE  ; XID_Start # Lm   [2] KATAKANA LETTER MINNAN NASALIZED TONE-7..KATAKANA LETTER MINNAN NASALIZED TONE-8\n 1B000..1B122  ; XID_Start # Lo [291] KATAKANA LETTER ARCHAIC E..KATAKANA LETTER ARCHAIC WU\n+1B132         ; XID_Start # Lo       HIRAGANA LETTER SMALL KO\n 1B150..1B152  ; XID_Start # Lo   [3] HIRAGANA LETTER SMALL WI..HIRAGANA LETTER SMALL WO\n+1B155         ; XID_Start # Lo       KATAKANA LETTER SMALL KO\n 1B164..1B167  ; XID_Start # Lo   [4] KATAKANA LETTER SMALL WI..KATAKANA LETTER SMALL N\n 1B170..1B2FB  ; XID_Start # Lo [396] NUSHU CHARACTER-1B170..NUSHU CHARACTER-1B2FB\n 1BC00..1BC6A  ; XID_Start # Lo [107] DUPLOYAN LETTER H..DUPLOYAN LETTER VOCALIC M\n@@ -8815,11 +8908,15 @@ FFDA..FFDC    ; XID_Start # Lo   [3] HALFWIDTH HANGUL LETTER EU..HALFWIDTH HANGU\n 1DF00..1DF09  ; XID_Start # L&  [10] LATIN SMALL LETTER FENG DIGRAPH WITH TRILL..LATIN SMALL LETTER T WITH HOOK AND RETROFLEX HOOK\n 1DF0A         ; XID_Start # Lo       LATIN LETTER RETROFLEX CLICK WITH RETROFLEX HOOK\n 1DF0B..1DF1E  ; XID_Start # L&  [20] LATIN SMALL LETTER ESH WITH DOUBLE BAR..LATIN SMALL LETTER S WITH CURL\n+1DF25..1DF2A  ; XID_Start # L&   [6] LATIN SMALL LETTER D WITH MID-HEIGHT LEFT HOOK..LATIN SMALL LETTER T WITH MID-HEIGHT LEFT HOOK\n+1E030..1E06D  ; XID_Start # Lm  [62] MODIFIER LETTER CYRILLIC SMALL A..MODIFIER LETTER CYRILLIC SMALL STRAIGHT U WITH STROKE\n 1E100..1E12C  ; XID_Start # Lo  [45] NYIAKENG PUACHUE HMONG LETTER MA..NYIAKENG PUACHUE HMONG LETTER W\n 1E137..1E13D  ; XID_Start # Lm   [7] NYIAKENG PUACHUE HMONG SIGN FOR PERSON..NYIAKENG PUACHUE HMONG SYLLABLE LENGTHENER\n 1E14E         ; XID_Start # Lo       NYIAKENG PUACHUE HMONG LOGOGRAM NYAJ\n 1E290..1E2AD  ; XID_Start # Lo  [30] TOTO LETTER PA..TOTO LETTER A\n 1E2C0..1E2EB  ; XID_Start # Lo  [44] WANCHO LETTER AA..WANCHO LETTER YIH\n+1E4D0..1E4EA  ; XID_Start # Lo  [27] NAG MUNDARI LETTER O..NAG MUNDARI LETTER ELL\n+1E4EB         ; XID_Start # Lm       NAG MUNDARI SIGN OJOD\n 1E7E0..1E7E6  ; XID_Start # Lo   [7] ETHIOPIC SYLLABLE HHYA..ETHIOPIC SYLLABLE HHYO\n 1E7E8..1E7EB  ; XID_Start # Lo   [4] ETHIOPIC SYLLABLE GURAGE HHWA..ETHIOPIC SYLLABLE HHWE\n 1E7ED..1E7EE  ; XID_Start # Lo   [2] ETHIOPIC SYLLABLE GURAGE MWI..ETHIOPIC SYLLABLE GURAGE MWEE\n@@ -8861,14 +8958,15 @@ FFDA..FFDC    ; XID_Start # Lo   [3] HALFWIDTH HANGUL LETTER EU..HALFWIDTH HANGU\n 1EEA5..1EEA9  ; XID_Start # Lo   [5] ARABIC MATHEMATICAL DOUBLE-STRUCK WAW..ARABIC MATHEMATICAL DOUBLE-STRUCK YEH\n 1EEAB..1EEBB  ; XID_Start # Lo  [17] ARABIC MATHEMATICAL DOUBLE-STRUCK LAM..ARABIC MATHEMATICAL DOUBLE-STRUCK GHAIN\n 20000..2A6DF  ; XID_Start # Lo [42720] CJK UNIFIED IDEOGRAPH-20000..CJK UNIFIED IDEOGRAPH-2A6DF\n-2A700..2B738  ; XID_Start # Lo [4153] CJK UNIFIED IDEOGRAPH-2A700..CJK UNIFIED IDEOGRAPH-2B738\n+2A700..2B739  ; XID_Start # Lo [4154] CJK UNIFIED IDEOGRAPH-2A700..CJK UNIFIED IDEOGRAPH-2B739\n 2B740..2B81D  ; XID_Start # Lo [222] CJK UNIFIED IDEOGRAPH-2B740..CJK UNIFIED IDEOGRAPH-2B81D\n 2B820..2CEA1  ; XID_Start # Lo [5762] CJK UNIFIED IDEOGRAPH-2B820..CJK UNIFIED IDEOGRAPH-2CEA1\n 2CEB0..2EBE0  ; XID_Start # Lo [7473] CJK UNIFIED IDEOGRAPH-2CEB0..CJK UNIFIED IDEOGRAPH-2EBE0\n 2F800..2FA1D  ; XID_Start # Lo [542] CJK COMPATIBILITY IDEOGRAPH-2F800..CJK COMPATIBILITY IDEOGRAPH-2FA1D\n 30000..3134A  ; XID_Start # Lo [4939] CJK UNIFIED IDEOGRAPH-30000..CJK UNIFIED IDEOGRAPH-3134A\n+31350..323AF  ; XID_Start # Lo [4192] CJK UNIFIED IDEOGRAPH-31350..CJK UNIFIED IDEOGRAPH-323AF\n \n-# Total code points: 131974\n+# Total code points: 136322\n \n # ================================================\n \n@@ -9147,6 +9245,7 @@ FFDA..FFDC    ; XID_Start # Lo   [3] HALFWIDTH HANGUL LETTER EU..HALFWIDTH HANGU\n 0CE2..0CE3    ; XID_Continue # Mn   [2] KANNADA VOWEL SIGN VOCALIC L..KANNADA VOWEL SIGN VOCALIC LL\n 0CE6..0CEF    ; XID_Continue # Nd  [10] KANNADA DIGIT ZERO..KANNADA DIGIT NINE\n 0CF1..0CF2    ; XID_Continue # Lo   [2] KANNADA SIGN JIHVAMULIYA..KANNADA SIGN UPADHMANIYA\n+0CF3          ; XID_Continue # Mc       KANNADA SIGN COMBINING ANUSVARA ABOVE RIGHT\n 0D00..0D01    ; XID_Continue # Mn   [2] MALAYALAM SIGN COMBINING ANUSVARA ABOVE..MALAYALAM SIGN CANDRABINDU\n 0D02..0D03    ; XID_Continue # Mc   [2] MALAYALAM SIGN ANUSVARA..MALAYALAM SIGN VISARGA\n 0D04..0D0C    ; XID_Continue # Lo   [9] MALAYALAM LETTER VEDIC ANUSVARA..MALAYALAM LETTER VOCALIC L\n@@ -9200,7 +9299,7 @@ FFDA..FFDC    ; XID_Start # Lo   [3] HALFWIDTH HANGUL LETTER EU..HALFWIDTH HANGU\n 0EBD          ; XID_Continue # Lo       LAO SEMIVOWEL SIGN NYO\n 0EC0..0EC4    ; XID_Continue # Lo   [5] LAO VOWEL SIGN E..LAO VOWEL SIGN AI\n 0EC6          ; XID_Continue # Lm       LAO KO LA\n-0EC8..0ECD    ; XID_Continue # Mn   [6] LAO TONE MAI EK..LAO NIGGAHITA\n+0EC8..0ECE    ; XID_Continue # Mn   [7] LAO TONE MAI EK..LAO YAMAKKAN\n 0ED0..0ED9    ; XID_Continue # Nd  [10] LAO DIGIT ZERO..LAO DIGIT NINE\n 0EDC..0EDF    ; XID_Continue # Lo   [4] LAO HO NO..LAO LETTER KHMU NYO\n 0F00          ; XID_Continue # Lo       TIBETAN SYLLABLE OM\n@@ -9788,6 +9887,7 @@ FFDA..FFDC    ; XID_Continue # Lo   [3] HALFWIDTH HANGUL LETTER EU..HALFWIDTH HA\n 10E80..10EA9  ; XID_Continue # Lo  [42] YEZIDI LETTER ELIF..YEZIDI LETTER ET\n 10EAB..10EAC  ; XID_Continue # Mn   [2] YEZIDI COMBINING HAMZA MARK..YEZIDI COMBINING MADDA MARK\n 10EB0..10EB1  ; XID_Continue # Lo   [2] YEZIDI LETTER LAM WITH DOT ABOVE..YEZIDI LETTER YOT WITH CIRCUMFLEX ABOVE\n+10EFD..10EFF  ; XID_Continue # Mn   [3] ARABIC SMALL LOW WORD SAKTA..ARABIC SMALL LOW WORD MADDA\n 10F00..10F1C  ; XID_Continue # Lo  [29] OLD SOGDIAN LETTER ALEPH..OLD SOGDIAN LETTER FINAL TAW WITH VERTICAL TAIL\n 10F27         ; XID_Continue # Lo       OLD SOGDIAN LIGATURE AYIN-DALETH\n 10F30..10F45  ; XID_Continue # Lo  [22] SOGDIAN LETTER ALEPH..SOGDIAN INDEPENDENT SHIN\n@@ -9850,6 +9950,8 @@ FFDA..FFDC    ; XID_Continue # Lo   [3] HALFWIDTH HANGUL LETTER EU..HALFWIDTH HA\n 11235         ; XID_Continue # Mc       KHOJKI SIGN VIRAMA\n 11236..11237  ; XID_Continue # Mn   [2] KHOJKI SIGN NUKTA..KHOJKI SIGN SHADDA\n 1123E         ; XID_Continue # Mn       KHOJKI SIGN SUKUN\n+1123F..11240  ; XID_Continue # Lo   [2] KHOJKI LETTER QA..KHOJKI LETTER SHORT I\n+11241         ; XID_Continue # Mn       KHOJKI VOWEL SIGN VOCALIC R\n 11280..11286  ; XID_Continue # Lo   [7] MULTANI LETTER A..MULTANI LETTER GA\n 11288         ; XID_Continue # Lo       MULTANI LETTER GHA\n 1128A..1128D  ; XID_Continue # Lo   [4] MULTANI LETTER CA..MULTANI LETTER JJA\n@@ -10032,12 +10134,27 @@ FFDA..FFDC    ; XID_Continue # Lo   [3] HALFWIDTH HANGUL LETTER EU..HALFWIDTH HA\n 11EE0..11EF2  ; XID_Continue # Lo  [19] MAKASAR LETTER KA..MAKASAR ANGKA\n 11EF3..11EF4  ; XID_Continue # Mn   [2] MAKASAR VOWEL SIGN I..MAKASAR VOWEL SIGN U\n 11EF5..11EF6  ; XID_Continue # Mc   [2] MAKASAR VOWEL SIGN E..MAKASAR VOWEL SIGN O\n+11F00..11F01  ; XID_Continue # Mn   [2] KAWI SIGN CANDRABINDU..KAWI SIGN ANUSVARA\n+11F02         ; XID_Continue # Lo       KAWI SIGN REPHA\n+11F03         ; XID_Continue # Mc       KAWI SIGN VISARGA\n+11F04..11F10  ; XID_Continue # Lo  [13] KAWI LETTER A..KAWI LETTER O\n+11F12..11F33  ; XID_Continue # Lo  [34] KAWI LETTER KA..KAWI LETTER JNYA\n+11F34..11F35  ; XID_Continue # Mc   [2] KAWI VOWEL SIGN AA..KAWI VOWEL SIGN ALTERNATE AA\n+11F36..11F3A  ; XID_Continue # Mn   [5] KAWI VOWEL SIGN I..KAWI VOWEL SIGN VOCALIC R\n+11F3E..11F3F  ; XID_Continue # Mc   [2] KAWI VOWEL SIGN E..KAWI VOWEL SIGN AI\n+11F40         ; XID_Continue # Mn       KAWI VOWEL SIGN EU\n+11F41         ; XID_Continue # Mc       KAWI SIGN KILLER\n+11F42         ; XID_Continue # Mn       KAWI CONJOINER\n+11F50..11F59  ; XID_Continue # Nd  [10] KAWI DIGIT ZERO..KAWI DIGIT NINE\n 11FB0         ; XID_Continue # Lo       LISU LETTER YHA\n 12000..12399  ; XID_Continue # Lo [922] CUNEIFORM SIGN A..CUNEIFORM SIGN U U\n 12400..1246E  ; XID_Continue # Nl [111] CUNEIFORM NUMERIC SIGN TWO ASH..CUNEIFORM NUMERIC SIGN NINE U VARIANT FORM\n 12480..12543  ; XID_Continue # Lo [196] CUNEIFORM SIGN AB TIMES NUN TENU..CUNEIFORM SIGN ZU5 TIMES THREE DISH TENU\n 12F90..12FF0  ; XID_Continue # Lo  [97] CYPRO-MINOAN SIGN CM001..CYPRO-MINOAN SIGN CM114\n-13000..1342E  ; XID_Continue # Lo [1071] EGYPTIAN HIEROGLYPH A001..EGYPTIAN HIEROGLYPH AA032\n+13000..1342F  ; XID_Continue # Lo [1072] EGYPTIAN HIEROGLYPH A001..EGYPTIAN HIEROGLYPH V011D\n+13440         ; XID_Continue # Mn       EGYPTIAN HIEROGLYPH MIRROR HORIZONTALLY\n+13441..13446  ; XID_Continue # Lo   [6] EGYPTIAN HIEROGLYPH FULL BLANK..EGYPTIAN HIEROGLYPH WIDE LOST SIGN\n+13447..13455  ; XID_Continue # Mn  [15] EGYPTIAN HIEROGLYPH MODIFIER DAMAGED AT TOP START..EGYPTIAN HIEROGLYPH MODIFIER DAMAGED\n 14400..14646  ; XID_Continue # Lo [583] ANATOLIAN HIEROGLYPH A001..ANATOLIAN HIEROGLYPH A530\n 16800..16A38  ; XID_Continue # Lo [569] BAMUM LETTER PHASE-A NGKUE MFON..BAMUM LETTER PHASE-F VUEQ\n 16A40..16A5E  ; XID_Continue # Lo  [31] MRO LETTER TA..MRO LETTER TEK\n@@ -10070,7 +10187,9 @@ FFDA..FFDC    ; XID_Continue # Lo   [3] HALFWIDTH HANGUL LETTER EU..HALFWIDTH HA\n 1AFF5..1AFFB  ; XID_Continue # Lm   [7] KATAKANA LETTER MINNAN TONE-7..KATAKANA LETTER MINNAN NASALIZED TONE-5\n 1AFFD..1AFFE  ; XID_Continue # Lm   [2] KATAKANA LETTER MINNAN NASALIZED TONE-7..KATAKANA LETTER MINNAN NASALIZED TONE-8\n 1B000..1B122  ; XID_Continue # Lo [291] KATAKANA LETTER ARCHAIC E..KATAKANA LETTER ARCHAIC WU\n+1B132         ; XID_Continue # Lo       HIRAGANA LETTER SMALL KO\n 1B150..1B152  ; XID_Continue # Lo   [3] HIRAGANA LETTER SMALL WI..HIRAGANA LETTER SMALL WO\n+1B155         ; XID_Continue # Lo       KATAKANA LETTER SMALL KO\n 1B164..1B167  ; XID_Continue # Lo   [4] KATAKANA LETTER SMALL WI..KATAKANA LETTER SMALL N\n 1B170..1B2FB  ; XID_Continue # Lo [396] NUSHU CHARACTER-1B170..NUSHU CHARACTER-1B2FB\n 1BC00..1BC6A  ; XID_Continue # Lo [107] DUPLOYAN LETTER H..DUPLOYAN LETTER VOCALIC M\n@@ -10127,11 +10246,14 @@ FFDA..FFDC    ; XID_Continue # Lo   [3] HALFWIDTH HANGUL LETTER EU..HALFWIDTH HA\n 1DF00..1DF09  ; XID_Continue # L&  [10] LATIN SMALL LETTER FENG DIGRAPH WITH TRILL..LATIN SMALL LETTER T WITH HOOK AND RETROFLEX HOOK\n 1DF0A         ; XID_Continue # Lo       LATIN LETTER RETROFLEX CLICK WITH RETROFLEX HOOK\n 1DF0B..1DF1E  ; XID_Continue # L&  [20] LATIN SMALL LETTER ESH WITH DOUBLE BAR..LATIN SMALL LETTER S WITH CURL\n+1DF25..1DF2A  ; XID_Continue # L&   [6] LATIN SMALL LETTER D WITH MID-HEIGHT LEFT HOOK..LATIN SMALL LETTER T WITH MID-HEIGHT LEFT HOOK\n 1E000..1E006  ; XID_Continue # Mn   [7] COMBINING GLAGOLITIC LETTER AZU..COMBINING GLAGOLITIC LETTER ZHIVETE\n 1E008..1E018  ; XID_Continue # Mn  [17] COMBINING GLAGOLITIC LETTER ZEMLJA..COMBINING GLAGOLITIC LETTER HERU\n 1E01B..1E021  ; XID_Continue # Mn   [7] COMBINING GLAGOLITIC LETTER SHTA..COMBINING GLAGOLITIC LETTER YATI\n 1E023..1E024  ; XID_Continue # Mn   [2] COMBINING GLAGOLITIC LETTER YU..COMBINING GLAGOLITIC LETTER SMALL YUS\n 1E026..1E02A  ; XID_Continue # Mn   [5] COMBINING GLAGOLITIC LETTER YO..COMBINING GLAGOLITIC LETTER FITA\n+1E030..1E06D  ; XID_Continue # Lm  [62] MODIFIER LETTER CYRILLIC SMALL A..MODIFIER LETTER CYRILLIC SMALL STRAIGHT U WITH STROKE\n+1E08F         ; XID_Continue # Mn       COMBINING CYRILLIC SMALL LETTER BYELORUSSIAN-UKRAINIAN I\n 1E100..1E12C  ; XID_Continue # Lo  [45] NYIAKENG PUACHUE HMONG LETTER MA..NYIAKENG PUACHUE HMONG LETTER W\n 1E130..1E136  ; XID_Continue # Mn   [7] NYIAKENG PUACHUE HMONG TONE-B..NYIAKENG PUACHUE HMONG TONE-D\n 1E137..1E13D  ; XID_Continue # Lm   [7] NYIAKENG PUACHUE HMONG SIGN FOR PERSON..NYIAKENG PUACHUE HMONG SYLLABLE LENGTHENER\n@@ -10142,6 +10264,10 @@ FFDA..FFDC    ; XID_Continue # Lo   [3] HALFWIDTH HANGUL LETTER EU..HALFWIDTH HA\n 1E2C0..1E2EB  ; XID_Continue # Lo  [44] WANCHO LETTER AA..WANCHO LETTER YIH\n 1E2EC..1E2EF  ; XID_Continue # Mn   [4] WANCHO TONE TUP..WANCHO TONE KOINI\n 1E2F0..1E2F9  ; XID_Continue # Nd  [10] WANCHO DIGIT ZERO..WANCHO DIGIT NINE\n+1E4D0..1E4EA  ; XID_Continue # Lo  [27] NAG MUNDARI LETTER O..NAG MUNDARI LETTER ELL\n+1E4EB         ; XID_Continue # Lm       NAG MUNDARI SIGN OJOD\n+1E4EC..1E4EF  ; XID_Continue # Mn   [4] NAG MUNDARI SIGN MUHOR..NAG MUNDARI SIGN SUTUH\n+1E4F0..1E4F9  ; XID_Continue # Nd  [10] NAG MUNDARI DIGIT ZERO..NAG MUNDARI DIGIT NINE\n 1E7E0..1E7E6  ; XID_Continue # Lo   [7] ETHIOPIC SYLLABLE HHYA..ETHIOPIC SYLLABLE HHYO\n 1E7E8..1E7EB  ; XID_Continue # Lo   [4] ETHIOPIC SYLLABLE GURAGE HHWA..ETHIOPIC SYLLABLE HHWE\n 1E7ED..1E7EE  ; XID_Continue # Lo   [2] ETHIOPIC SYLLABLE GURAGE MWI..ETHIOPIC SYLLABLE GURAGE MWEE\n@@ -10187,15 +10313,16 @@ FFDA..FFDC    ; XID_Continue # Lo   [3] HALFWIDTH HANGUL LETTER EU..HALFWIDTH HA\n 1EEAB..1EEBB  ; XID_Continue # Lo  [17] ARABIC MATHEMATICAL DOUBLE-STRUCK LAM..ARABIC MATHEMATICAL DOUBLE-STRUCK GHAIN\n 1FBF0..1FBF9  ; XID_Continue # Nd  [10] SEGMENTED DIGIT ZERO..SEGMENTED DIGIT NINE\n 20000..2A6DF  ; XID_Continue # Lo [42720] CJK UNIFIED IDEOGRAPH-20000..CJK UNIFIED IDEOGRAPH-2A6DF\n-2A700..2B738  ; XID_Continue # Lo [4153] CJK UNIFIED IDEOGRAPH-2A700..CJK UNIFIED IDEOGRAPH-2B738\n+2A700..2B739  ; XID_Continue # Lo [4154] CJK UNIFIED IDEOGRAPH-2A700..CJK UNIFIED IDEOGRAPH-2B739\n 2B740..2B81D  ; XID_Continue # Lo [222] CJK UNIFIED IDEOGRAPH-2B740..CJK UNIFIED IDEOGRAPH-2B81D\n 2B820..2CEA1  ; XID_Continue # Lo [5762] CJK UNIFIED IDEOGRAPH-2B820..CJK UNIFIED IDEOGRAPH-2CEA1\n 2CEB0..2EBE0  ; XID_Continue # Lo [7473] CJK UNIFIED IDEOGRAPH-2CEB0..CJK UNIFIED IDEOGRAPH-2EBE0\n 2F800..2FA1D  ; XID_Continue # Lo [542] CJK COMPATIBILITY IDEOGRAPH-2F800..CJK COMPATIBILITY IDEOGRAPH-2FA1D\n 30000..3134A  ; XID_Continue # Lo [4939] CJK UNIFIED IDEOGRAPH-30000..CJK UNIFIED IDEOGRAPH-3134A\n+31350..323AF  ; XID_Continue # Lo [4192] CJK UNIFIED IDEOGRAPH-31350..CJK UNIFIED IDEOGRAPH-323AF\n E0100..E01EF  ; XID_Continue # Mn [240] VARIATION SELECTOR-17..VARIATION SELECTOR-256\n \n-# Total code points: 135053\n+# Total code points: 139463\n \n # ================================================\n \n@@ -10206,7 +10333,7 @@ E0100..E01EF  ; XID_Continue # Mn [240] VARIATION SELECTOR-17..VARIATION SELECTO\n #  + Variation_Selector\n #  - White_Space\n #  - FFF9..FFFB (Interlinear annotation format characters)\n-#  - 13430..13438 (Egyptian hieroglyph format characters)\n+#  - 13430..13440 (Egyptian hieroglyph format characters)\n #  - Prepended_Concatenation_Mark (Exceptional format characters that should be visible)\n \n 00AD          ; Default_Ignorable_Code_Point # Cf       SOFT HYPHEN\n@@ -10351,7 +10478,7 @@ E01F0..E0FFF  ; Default_Ignorable_Code_Point # Cn [3600] <reserved-E01F0>..<rese\n 0E47..0E4E    ; Grapheme_Extend # Mn   [8] THAI CHARACTER MAITAIKHU..THAI CHARACTER YAMAKKAN\n 0EB1          ; Grapheme_Extend # Mn       LAO VOWEL SIGN MAI KAN\n 0EB4..0EBC    ; Grapheme_Extend # Mn   [9] LAO VOWEL SIGN I..LAO SEMIVOWEL SIGN LO\n-0EC8..0ECD    ; Grapheme_Extend # Mn   [6] LAO TONE MAI EK..LAO NIGGAHITA\n+0EC8..0ECE    ; Grapheme_Extend # Mn   [7] LAO TONE MAI EK..LAO YAMAKKAN\n 0F18..0F19    ; Grapheme_Extend # Mn   [2] TIBETAN ASTROLOGICAL SIGN -KHYUD PA..TIBETAN ASTROLOGICAL SIGN SDONG TSHUGS\n 0F35          ; Grapheme_Extend # Mn       TIBETAN MARK NGAS BZUNG NYI ZLA\n 0F37          ; Grapheme_Extend # Mn       TIBETAN MARK NGAS BZUNG SGOR RTAGS\n@@ -10490,6 +10617,7 @@ FF9E..FF9F    ; Grapheme_Extend # Lm   [2] HALFWIDTH KATAKANA VOICED SOUND MARK.\n 10AE5..10AE6  ; Grapheme_Extend # Mn   [2] MANICHAEAN ABBREVIATION MARK ABOVE..MANICHAEAN ABBREVIATION MARK BELOW\n 10D24..10D27  ; Grapheme_Extend # Mn   [4] HANIFI ROHINGYA SIGN HARBAHAY..HANIFI ROHINGYA SIGN TASSI\n 10EAB..10EAC  ; Grapheme_Extend # Mn   [2] YEZIDI COMBINING HAMZA MARK..YEZIDI COMBINING MADDA MARK\n+10EFD..10EFF  ; Grapheme_Extend # Mn   [3] ARABIC SMALL LOW WORD SAKTA..ARABIC SMALL LOW WORD MADDA\n 10F46..10F50  ; Grapheme_Extend # Mn  [11] SOGDIAN COMBINING DOT BELOW..SOGDIAN COMBINING STROKE BELOW\n 10F82..10F85  ; Grapheme_Extend # Mn   [4] OLD UYGHUR COMBINING DOT ABOVE..OLD UYGHUR COMBINING TWO DOTS BELOW\n 11001         ; Grapheme_Extend # Mn       BRAHMI SIGN ANUSVARA\n@@ -10512,6 +10640,7 @@ FF9E..FF9F    ; Grapheme_Extend # Lm   [2] HALFWIDTH KATAKANA VOICED SOUND MARK.\n 11234         ; Grapheme_Extend # Mn       KHOJKI SIGN ANUSVARA\n 11236..11237  ; Grapheme_Extend # Mn   [2] KHOJKI SIGN NUKTA..KHOJKI SIGN SHADDA\n 1123E         ; Grapheme_Extend # Mn       KHOJKI SIGN SUKUN\n+11241         ; Grapheme_Extend # Mn       KHOJKI VOWEL SIGN VOCALIC R\n 112DF         ; Grapheme_Extend # Mn       KHUDAWADI SIGN ANUSVARA\n 112E3..112EA  ; Grapheme_Extend # Mn   [8] KHUDAWADI VOWEL SIGN U..KHUDAWADI SIGN VIRAMA\n 11300..11301  ; Grapheme_Extend # Mn   [2] GRANTHA SIGN COMBINING ANUSVARA ABOVE..GRANTHA SIGN CANDRABINDU\n@@ -10579,6 +10708,12 @@ FF9E..FF9F    ; Grapheme_Extend # Lm   [2] HALFWIDTH KATAKANA VOICED SOUND MARK.\n 11D95         ; Grapheme_Extend # Mn       GUNJALA GONDI SIGN ANUSVARA\n 11D97         ; Grapheme_Extend # Mn       GUNJALA GONDI VIRAMA\n 11EF3..11EF4  ; Grapheme_Extend # Mn   [2] MAKASAR VOWEL SIGN I..MAKASAR VOWEL SIGN U\n+11F00..11F01  ; Grapheme_Extend # Mn   [2] KAWI SIGN CANDRABINDU..KAWI SIGN ANUSVARA\n+11F36..11F3A  ; Grapheme_Extend # Mn   [5] KAWI VOWEL SIGN I..KAWI VOWEL SIGN VOCALIC R\n+11F40         ; Grapheme_Extend # Mn       KAWI VOWEL SIGN EU\n+11F42         ; Grapheme_Extend # Mn       KAWI CONJOINER\n+13440         ; Grapheme_Extend # Mn       EGYPTIAN HIEROGLYPH MIRROR HORIZONTALLY\n+13447..13455  ; Grapheme_Extend # Mn  [15] EGYPTIAN HIEROGLYPH MODIFIER DAMAGED AT TOP START..EGYPTIAN HIEROGLYPH MODIFIER DAMAGED\n 16AF0..16AF4  ; Grapheme_Extend # Mn   [5] BASSA VAH COMBINING HIGH TONE..BASSA VAH COMBINING HIGH-LOW TONE\n 16B30..16B36  ; Grapheme_Extend # Mn   [7] PAHAWH HMONG MARK CIM TUB..PAHAWH HMONG MARK CIM TAUM\n 16F4F         ; Grapheme_Extend # Mn       MIAO SIGN CONSONANT MODIFIER BAR\n@@ -10605,15 +10740,17 @@ FF9E..FF9F    ; Grapheme_Extend # Lm   [2] HALFWIDTH KATAKANA VOICED SOUND MARK.\n 1E01B..1E021  ; Grapheme_Extend # Mn   [7] COMBINING GLAGOLITIC LETTER SHTA..COMBINING GLAGOLITIC LETTER YATI\n 1E023..1E024  ; Grapheme_Extend # Mn   [2] COMBINING GLAGOLITIC LETTER YU..COMBINING GLAGOLITIC LETTER SMALL YUS\n 1E026..1E02A  ; Grapheme_Extend # Mn   [5] COMBINING GLAGOLITIC LETTER YO..COMBINING GLAGOLITIC LETTER FITA\n+1E08F         ; Grapheme_Extend # Mn       COMBINING CYRILLIC SMALL LETTER BYELORUSSIAN-UKRAINIAN I\n 1E130..1E136  ; Grapheme_Extend # Mn   [7] NYIAKENG PUACHUE HMONG TONE-B..NYIAKENG PUACHUE HMONG TONE-D\n 1E2AE         ; Grapheme_Extend # Mn       TOTO SIGN RISING TONE\n 1E2EC..1E2EF  ; Grapheme_Extend # Mn   [4] WANCHO TONE TUP..WANCHO TONE KOINI\n+1E4EC..1E4EF  ; Grapheme_Extend # Mn   [4] NAG MUNDARI SIGN MUHOR..NAG MUNDARI SIGN SUTUH\n 1E8D0..1E8D6  ; Grapheme_Extend # Mn   [7] MENDE KIKAKUI COMBINING NUMBER TEENS..MENDE KIKAKUI COMBINING NUMBER MILLIONS\n 1E944..1E94A  ; Grapheme_Extend # Mn   [7] ADLAM ALIF LENGTHENER..ADLAM NUKTA\n E0020..E007F  ; Grapheme_Extend # Cf  [96] TAG SPACE..CANCEL TAG\n E0100..E01EF  ; Grapheme_Extend # Mn [240] VARIATION SELECTOR-17..VARIATION SELECTOR-256\n \n-# Total code points: 2090\n+# Total code points: 2125\n \n # ================================================\n \n@@ -10913,6 +11050,7 @@ E0100..E01EF  ; Grapheme_Extend # Mn [240] VARIATION SELECTOR-17..VARIATION SELE\n 0CE0..0CE1    ; Grapheme_Base # Lo   [2] KANNADA LETTER VOCALIC RR..KANNADA LETTER VOCALIC LL\n 0CE6..0CEF    ; Grapheme_Base # Nd  [10] KANNADA DIGIT ZERO..KANNADA DIGIT NINE\n 0CF1..0CF2    ; Grapheme_Base # Lo   [2] KANNADA SIGN JIHVAMULIYA..KANNADA SIGN UPADHMANIYA\n+0CF3          ; Grapheme_Base # Mc       KANNADA SIGN COMBINING ANUSVARA ABOVE RIGHT\n 0D02..0D03    ; Grapheme_Base # Mc   [2] MALAYALAM SIGN ANUSVARA..MALAYALAM SIGN VISARGA\n 0D04..0D0C    ; Grapheme_Base # Lo   [9] MALAYALAM LETTER VEDIC ANUSVARA..MALAYALAM LETTER VOCALIC L\n 0D0E..0D10    ; Grapheme_Base # Lo   [3] MALAYALAM LETTER E..MALAYALAM LETTER AI\n@@ -11965,6 +12103,7 @@ FFFC..FFFD    ; Grapheme_Base # So   [2] OBJECT REPLACEMENT CHARACTER..REPLACEME\n 11232..11233  ; Grapheme_Base # Mc   [2] KHOJKI VOWEL SIGN O..KHOJKI VOWEL SIGN AU\n 11235         ; Grapheme_Base # Mc       KHOJKI SIGN VIRAMA\n 11238..1123D  ; Grapheme_Base # Po   [6] KHOJKI DANDA..KHOJKI ABBREVIATION SIGN\n+1123F..11240  ; Grapheme_Base # Lo   [2] KHOJKI LETTER QA..KHOJKI LETTER SHORT I\n 11280..11286  ; Grapheme_Base # Lo   [7] MULTANI LETTER A..MULTANI LETTER GA\n 11288         ; Grapheme_Base # Lo       MULTANI LETTER GHA\n 1128A..1128D  ; Grapheme_Base # Lo   [4] MULTANI LETTER CA..MULTANI LETTER JJA\n@@ -12080,6 +12219,7 @@ FFFC..FFFD    ; Grapheme_Base # So   [2] OBJECT REPLACEMENT CHARACTER..REPLACEME\n 11A9D         ; Grapheme_Base # Lo       SOYOMBO MARK PLUTA\n 11A9E..11AA2  ; Grapheme_Base # Po   [5] SOYOMBO HEAD MARK WITH MOON AND SUN AND TRIPLE FLAME..SOYOMBO TERMINAL MARK-2\n 11AB0..11AF8  ; Grapheme_Base # Lo  [73] CANADIAN SYLLABICS NATTILIK HI..PAU CIN HAU GLOTTAL STOP FINAL\n+11B00..11B09  ; Grapheme_Base # Po  [10] DEVANAGARI HEAD MARK..DEVANAGARI SIGN MINDU\n 11C00..11C08  ; Grapheme_Base # Lo   [9] BHAIKSUKI LETTER A..BHAIKSUKI LETTER VOCALIC L\n 11C0A..11C2E  ; Grapheme_Base # Lo  [37] BHAIKSUKI LETTER E..BHAIKSUKI LETTER HA\n 11C2F         ; Grapheme_Base # Mc       BHAIKSUKI VOWEL SIGN AA\n@@ -12109,6 +12249,15 @@ FFFC..FFFD    ; Grapheme_Base # So   [2] OBJECT REPLACEMENT CHARACTER..REPLACEME\n 11EE0..11EF2  ; Grapheme_Base # Lo  [19] MAKASAR LETTER KA..MAKASAR ANGKA\n 11EF5..11EF6  ; Grapheme_Base # Mc   [2] MAKASAR VOWEL SIGN E..MAKASAR VOWEL SIGN O\n 11EF7..11EF8  ; Grapheme_Base # Po   [2] MAKASAR PASSIMBANG..MAKASAR END OF SECTION\n+11F02         ; Grapheme_Base # Lo       KAWI SIGN REPHA\n+11F03         ; Grapheme_Base # Mc       KAWI SIGN VISARGA\n+11F04..11F10  ; Grapheme_Base # Lo  [13] KAWI LETTER A..KAWI LETTER O\n+11F12..11F33  ; Grapheme_Base # Lo  [34] KAWI LETTER KA..KAWI LETTER JNYA\n+11F34..11F35  ; Grapheme_Base # Mc   [2] KAWI VOWEL SIGN AA..KAWI VOWEL SIGN ALTERNATE AA\n+11F3E..11F3F  ; Grapheme_Base # Mc   [2] KAWI VOWEL SIGN E..KAWI VOWEL SIGN AI\n+11F41         ; Grapheme_Base # Mc       KAWI SIGN KILLER\n+11F43..11F4F  ; Grapheme_Base # Po  [13] KAWI DANDA..KAWI PUNCTUATION CLOSING SPIRAL\n+11F50..11F59  ; Grapheme_Base # Nd  [10] KAWI DIGIT ZERO..KAWI DIGIT NINE\n 11FB0         ; Grapheme_Base # Lo       LISU LETTER YHA\n 11FC0..11FD4  ; Grapheme_Base # No  [21] TAMIL FRACTION ONE THREE-HUNDRED-AND-TWENTIETH..TAMIL FRACTION DOWNSCALING FACTOR KIIZH\n 11FD5..11FDC  ; Grapheme_Base # So   [8] TAMIL SIGN NEL..TAMIL SIGN MUKKURUNI\n@@ -12121,7 +12270,8 @@ FFFC..FFFD    ; Grapheme_Base # So   [2] OBJECT REPLACEMENT CHARACTER..REPLACEME\n 12480..12543  ; Grapheme_Base # Lo [196] CUNEIFORM SIGN AB TIMES NUN TENU..CUNEIFORM SIGN ZU5 TIMES THREE DISH TENU\n 12F90..12FF0  ; Grapheme_Base # Lo  [97] CYPRO-MINOAN SIGN CM001..CYPRO-MINOAN SIGN CM114\n 12FF1..12FF2  ; Grapheme_Base # Po   [2] CYPRO-MINOAN SIGN CM301..CYPRO-MINOAN SIGN CM302\n-13000..1342E  ; Grapheme_Base # Lo [1071] EGYPTIAN HIEROGLYPH A001..EGYPTIAN HIEROGLYPH AA032\n+13000..1342F  ; Grapheme_Base # Lo [1072] EGYPTIAN HIEROGLYPH A001..EGYPTIAN HIEROGLYPH V011D\n+13441..13446  ; Grapheme_Base # Lo   [6] EGYPTIAN HIEROGLYPH FULL BLANK..EGYPTIAN HIEROGLYPH WIDE LOST SIGN\n 14400..14646  ; Grapheme_Base # Lo [583] ANATOLIAN HIEROGLYPH A001..ANATOLIAN HIEROGLYPH A530\n 16800..16A38  ; Grapheme_Base # Lo [569] BAMUM LETTER PHASE-A NGKUE MFON..BAMUM LETTER PHASE-F VUEQ\n 16A40..16A5E  ; Grapheme_Base # Lo  [31] MRO LETTER TA..MRO LETTER TEK\n@@ -12159,7 +12309,9 @@ FFFC..FFFD    ; Grapheme_Base # So   [2] OBJECT REPLACEMENT CHARACTER..REPLACEME\n 1AFF5..1AFFB  ; Grapheme_Base # Lm   [7] KATAKANA LETTER MINNAN TONE-7..KATAKANA LETTER MINNAN NASALIZED TONE-5\n 1AFFD..1AFFE  ; Grapheme_Base # Lm   [2] KATAKANA LETTER MINNAN NASALIZED TONE-7..KATAKANA LETTER MINNAN NASALIZED TONE-8\n 1B000..1B122  ; Grapheme_Base # Lo [291] KATAKANA LETTER ARCHAIC E..KATAKANA LETTER ARCHAIC WU\n+1B132         ; Grapheme_Base # Lo       HIRAGANA LETTER SMALL KO\n 1B150..1B152  ; Grapheme_Base # Lo   [3] HIRAGANA LETTER SMALL WI..HIRAGANA LETTER SMALL WO\n+1B155         ; Grapheme_Base # Lo       KATAKANA LETTER SMALL KO\n 1B164..1B167  ; Grapheme_Base # Lo   [4] KATAKANA LETTER SMALL WI..KATAKANA LETTER SMALL N\n 1B170..1B2FB  ; Grapheme_Base # Lo [396] NUSHU CHARACTER-1B170..NUSHU CHARACTER-1B2FB\n 1BC00..1BC6A  ; Grapheme_Base # Lo [107] DUPLOYAN LETTER H..DUPLOYAN LETTER VOCALIC M\n@@ -12180,6 +12332,7 @@ FFFC..FFFD    ; Grapheme_Base # So   [2] OBJECT REPLACEMENT CHARACTER..REPLACEME\n 1D1AE..1D1EA  ; Grapheme_Base # So  [61] MUSICAL SYMBOL PEDAL MARK..MUSICAL SYMBOL KORON\n 1D200..1D241  ; Grapheme_Base # So  [66] GREEK VOCAL NOTATION SYMBOL-1..GREEK INSTRUMENTAL NOTATION SYMBOL-54\n 1D245         ; Grapheme_Base # So       GREEK MUSICAL LEIMMA\n+1D2C0..1D2D3  ; Grapheme_Base # No  [20] KAKTOVIK NUMERAL ZERO..KAKTOVIK NUMERAL NINETEEN\n 1D2E0..1D2F3  ; Grapheme_Base # No  [20] MAYAN NUMERAL ZERO..MAYAN NUMERAL NINETEEN\n 1D300..1D356  ; Grapheme_Base # So  [87] MONOGRAM FOR EARTH..TETRAGRAM FOR FOSTERING\n 1D360..1D378  ; Grapheme_Base # No  [25] COUNTING ROD UNIT DIGIT ONE..TALLY MARK FIVE\n@@ -12233,6 +12386,8 @@ FFFC..FFFD    ; Grapheme_Base # So   [2] OBJECT REPLACEMENT CHARACTER..REPLACEME\n 1DF00..1DF09  ; Grapheme_Base # L&  [10] LATIN SMALL LETTER FENG DIGRAPH WITH TRILL..LATIN SMALL LETTER T WITH HOOK AND RETROFLEX HOOK\n 1DF0A         ; Grapheme_Base # Lo       LATIN LETTER RETROFLEX CLICK WITH RETROFLEX HOOK\n 1DF0B..1DF1E  ; Grapheme_Base # L&  [20] LATIN SMALL LETTER ESH WITH DOUBLE BAR..LATIN SMALL LETTER S WITH CURL\n+1DF25..1DF2A  ; Grapheme_Base # L&   [6] LATIN SMALL LETTER D WITH MID-HEIGHT LEFT HOOK..LATIN SMALL LETTER T WITH MID-HEIGHT LEFT HOOK\n+1E030..1E06D  ; Grapheme_Base # Lm  [62] MODIFIER LETTER CYRILLIC SMALL A..MODIFIER LETTER CYRILLIC SMALL STRAIGHT U WITH STROKE\n 1E100..1E12C  ; Grapheme_Base # Lo  [45] NYIAKENG PUACHUE HMONG LETTER MA..NYIAKENG PUACHUE HMONG LETTER W\n 1E137..1E13D  ; Grapheme_Base # Lm   [7] NYIAKENG PUACHUE HMONG SIGN FOR PERSON..NYIAKENG PUACHUE HMONG SYLLABLE LENGTHENER\n 1E140..1E149  ; Grapheme_Base # Nd  [10] NYIAKENG PUACHUE HMONG DIGIT ZERO..NYIAKENG PUACHUE HMONG DIGIT NINE\n@@ -12242,6 +12397,9 @@ FFFC..FFFD    ; Grapheme_Base # So   [2] OBJECT REPLACEMENT CHARACTER..REPLACEME\n 1E2C0..1E2EB  ; Grapheme_Base # Lo  [44] WANCHO LETTER AA..WANCHO LETTER YIH\n 1E2F0..1E2F9  ; Grapheme_Base # Nd  [10] WANCHO DIGIT ZERO..WANCHO DIGIT NINE\n 1E2FF         ; Grapheme_Base # Sc       WANCHO NGUN SIGN\n+1E4D0..1E4EA  ; Grapheme_Base # Lo  [27] NAG MUNDARI LETTER O..NAG MUNDARI LETTER ELL\n+1E4EB         ; Grapheme_Base # Lm       NAG MUNDARI SIGN OJOD\n+1E4F0..1E4F9  ; Grapheme_Base # Nd  [10] NAG MUNDARI DIGIT ZERO..NAG MUNDARI DIGIT NINE\n 1E7E0..1E7E6  ; Grapheme_Base # Lo   [7] ETHIOPIC SYLLABLE HHYA..ETHIOPIC SYLLABLE HHYO\n 1E7E8..1E7EB  ; Grapheme_Base # Lo   [4] ETHIOPIC SYLLABLE GURAGE HHWA..ETHIOPIC SYLLABLE HHWE\n 1E7ED..1E7EE  ; Grapheme_Base # Lo   [2] ETHIOPIC SYLLABLE GURAGE MWI..ETHIOPIC SYLLABLE GURAGE MWEE\n@@ -12310,10 +12468,10 @@ FFFC..FFFD    ; Grapheme_Base # So   [2] OBJECT REPLACEMENT CHARACTER..REPLACEME\n 1F300..1F3FA  ; Grapheme_Base # So [251] CYCLONE..AMPHORA\n 1F3FB..1F3FF  ; Grapheme_Base # Sk   [5] EMOJI MODIFIER FITZPATRICK TYPE-1-2..EMOJI MODIFIER FITZPATRICK TYPE-6\n 1F400..1F6D7  ; Grapheme_Base # So [728] RAT..ELEVATOR\n-1F6DD..1F6EC  ; Grapheme_Base # So  [16] PLAYGROUND SLIDE..AIRPLANE ARRIVING\n+1F6DC..1F6EC  ; Grapheme_Base # So  [17] WIRELESS..AIRPLANE ARRIVING\n 1F6F0..1F6FC  ; Grapheme_Base # So  [13] SATELLITE..ROLLER SKATE\n-1F700..1F773  ; Grapheme_Base # So [116] ALCHEMICAL SYMBOL FOR QUINTESSENCE..ALCHEMICAL SYMBOL FOR HALF OUNCE\n-1F780..1F7D8  ; Grapheme_Base # So  [89] BLACK LEFT-POINTING ISOSCELES RIGHT TRIANGLE..NEGATIVE CIRCLED SQUARE\n+1F700..1F776  ; Grapheme_Base # So [119] ALCHEMICAL SYMBOL FOR QUINTESSENCE..LUNAR ECLIPSE\n+1F77B..1F7D9  ; Grapheme_Base # So  [95] HAUMEA..NINE POINTED WHITE STAR\n 1F7E0..1F7EB  ; Grapheme_Base # So  [12] LARGE ORANGE CIRCLE..LARGE BROWN SQUARE\n 1F7F0         ; Grapheme_Base # So       HEAVY EQUALS SIGN\n 1F800..1F80B  ; Grapheme_Base # So  [12] LEFTWARDS ARROW WITH SMALL TRIANGLE ARROWHEAD..DOWNWARDS ARROW WITH LARGE TRIANGLE ARROWHEAD\n@@ -12324,27 +12482,26 @@ FFFC..FFFD    ; Grapheme_Base # So   [2] OBJECT REPLACEMENT CHARACTER..REPLACEME\n 1F8B0..1F8B1  ; Grapheme_Base # So   [2] ARROW POINTING UPWARDS THEN NORTH WEST..ARROW POINTING RIGHTWARDS THEN CURVING SOUTH WEST\n 1F900..1FA53  ; Grapheme_Base # So [340] CIRCLED CROSS FORMEE WITH FOUR DOTS..BLACK CHESS KNIGHT-BISHOP\n 1FA60..1FA6D  ; Grapheme_Base # So  [14] XIANGQI RED GENERAL..XIANGQI BLACK SOLDIER\n-1FA70..1FA74  ; Grapheme_Base # So   [5] BALLET SHOES..THONG SANDAL\n-1FA78..1FA7C  ; Grapheme_Base # So   [5] DROP OF BLOOD..CRUTCH\n-1FA80..1FA86  ; Grapheme_Base # So   [7] YO-YO..NESTING DOLLS\n-1FA90..1FAAC  ; Grapheme_Base # So  [29] RINGED PLANET..HAMSA\n-1FAB0..1FABA  ; Grapheme_Base # So  [11] FLY..NEST WITH EGGS\n-1FAC0..1FAC5  ; Grapheme_Base # So   [6] ANATOMICAL HEART..PERSON WITH CROWN\n-1FAD0..1FAD9  ; Grapheme_Base # So  [10] BLUEBERRIES..JAR\n-1FAE0..1FAE7  ; Grapheme_Base # So   [8] MELTING FACE..BUBBLES\n-1FAF0..1FAF6  ; Grapheme_Base # So   [7] HAND WITH INDEX FINGER AND THUMB CROSSED..HEART HANDS\n+1FA70..1FA7C  ; Grapheme_Base # So  [13] BALLET SHOES..CRUTCH\n+1FA80..1FA88  ; Grapheme_Base # So   [9] YO-YO..FLUTE\n+1FA90..1FABD  ; Grapheme_Base # So  [46] RINGED PLANET..WING\n+1FABF..1FAC5  ; Grapheme_Base # So   [7] GOOSE..PERSON WITH CROWN\n+1FACE..1FADB  ; Grapheme_Base # So  [14] MOOSE..PEA POD\n+1FAE0..1FAE8  ; Grapheme_Base # So   [9] MELTING FACE..SHAKING FACE\n+1FAF0..1FAF8  ; Grapheme_Base # So   [9] HAND WITH INDEX FINGER AND THUMB CROSSED..RIGHTWARDS PUSHING HAND\n 1FB00..1FB92  ; Grapheme_Base # So [147] BLOCK SEXTANT-1..UPPER HALF INVERSE MEDIUM SHADE AND LOWER HALF BLOCK\n 1FB94..1FBCA  ; Grapheme_Base # So  [55] LEFT HALF INVERSE MEDIUM SHADE AND RIGHT HALF BLOCK..WHITE UP-POINTING CHEVRON\n 1FBF0..1FBF9  ; Grapheme_Base # Nd  [10] SEGMENTED DIGIT ZERO..SEGMENTED DIGIT NINE\n 20000..2A6DF  ; Grapheme_Base # Lo [42720] CJK UNIFIED IDEOGRAPH-20000..CJK UNIFIED IDEOGRAPH-2A6DF\n-2A700..2B738  ; Grapheme_Base # Lo [4153] CJK UNIFIED IDEOGRAPH-2A700..CJK UNIFIED IDEOGRAPH-2B738\n+2A700..2B739  ; Grapheme_Base # Lo [4154] CJK UNIFIED IDEOGRAPH-2A700..CJK UNIFIED IDEOGRAPH-2B739\n 2B740..2B81D  ; Grapheme_Base # Lo [222] CJK UNIFIED IDEOGRAPH-2B740..CJK UNIFIED IDEOGRAPH-2B81D\n 2B820..2CEA1  ; Grapheme_Base # Lo [5762] CJK UNIFIED IDEOGRAPH-2B820..CJK UNIFIED IDEOGRAPH-2CEA1\n 2CEB0..2EBE0  ; Grapheme_Base # Lo [7473] CJK UNIFIED IDEOGRAPH-2CEB0..CJK UNIFIED IDEOGRAPH-2EBE0\n 2F800..2FA1D  ; Grapheme_Base # Lo [542] CJK COMPATIBILITY IDEOGRAPH-2F800..CJK COMPATIBILITY IDEOGRAPH-2FA1D\n 30000..3134A  ; Grapheme_Base # Lo [4939] CJK UNIFIED IDEOGRAPH-30000..CJK UNIFIED IDEOGRAPH-3134A\n+31350..323AF  ; Grapheme_Base # Lo [4192] CJK UNIFIED IDEOGRAPH-31350..CJK UNIFIED IDEOGRAPH-323AF\n \n-# Total code points: 142539\n+# Total code points: 146986\n \n # ================================================\n \n@@ -12410,7 +12567,9 @@ ABED          ; Grapheme_Link # Mn       MEETEI MAYEK APUN IYEK\n 11C3F         ; Grapheme_Link # Mn       BHAIKSUKI SIGN VIRAMA\n 11D44..11D45  ; Grapheme_Link # Mn   [2] MASARAM GONDI SIGN HALANTA..MASARAM GONDI VIRAMA\n 11D97         ; Grapheme_Link # Mn       GUNJALA GONDI VIRAMA\n+11F41         ; Grapheme_Link # Mc       KAWI SIGN KILLER\n+11F42         ; Grapheme_Link # Mn       KAWI CONJOINER\n \n-# Total code points: 63\n+# Total code points: 65\n \n # EOF"}, {"sha": "5d5ab6160397b6affc999a58918dd922090b4e73", "filename": "contrib/unicode/DerivedNormalizationProps.txt", "status": "modified", "additions": 74, "deletions": 9, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/contrib%2Funicode%2FDerivedNormalizationProps.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/contrib%2Funicode%2FDerivedNormalizationProps.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Funicode%2FDerivedNormalizationProps.txt?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -1,11 +1,11 @@\n-# DerivedNormalizationProps-14.0.0.txt\n-# Date: 2021-06-04, 02:19:20 GMT\n-# \u00a9 2021 Unicode\u00ae, Inc.\n+# DerivedNormalizationProps-15.0.0.txt\n+# Date: 2022-04-02, 01:29:03 GMT\n+# \u00a9 2022 Unicode\u00ae, Inc.\n # Unicode and the Unicode Logo are registered trademarks of Unicode, Inc. in the U.S. and other countries.\n-# For terms of use, see http://www.unicode.org/terms_of_use.html\n+# For terms of use, see https://www.unicode.org/terms_of_use.html\n #\n # Unicode Character Database\n-#   For documentation, see http://www.unicode.org/reports/tr44/\n+#   For documentation, see https://www.unicode.org/reports/tr44/\n \n # ================================================\n \n@@ -1652,6 +1652,7 @@ FFED..FFEE    ; NFKD_QC; N # So   [2] HALFWIDTH BLACK SQUARE..HALFWIDTH WHITE CI\n 1D7C3         ; NFKD_QC; N # Sm       MATHEMATICAL SANS-SERIF BOLD ITALIC PARTIAL DIFFERENTIAL\n 1D7C4..1D7CB  ; NFKD_QC; N # L&   [8] MATHEMATICAL SANS-SERIF BOLD ITALIC EPSILON SYMBOL..MATHEMATICAL BOLD SMALL DIGAMMA\n 1D7CE..1D7FF  ; NFKD_QC; N # Nd  [50] MATHEMATICAL BOLD DIGIT ZERO..MATHEMATICAL MONOSPACE DIGIT NINE\n+1E030..1E06D  ; NFKD_QC; N # Lm  [62] MODIFIER LETTER CYRILLIC SMALL A..MODIFIER LETTER CYRILLIC SMALL STRAIGHT U WITH STROKE\n 1EE00..1EE03  ; NFKD_QC; N # Lo   [4] ARABIC MATHEMATICAL ALEF..ARABIC MATHEMATICAL DAL\n 1EE05..1EE1F  ; NFKD_QC; N # Lo  [27] ARABIC MATHEMATICAL WAW..ARABIC MATHEMATICAL DOTLESS QAF\n 1EE21..1EE22  ; NFKD_QC; N # Lo   [2] ARABIC MATHEMATICAL INITIAL BEH..ARABIC MATHEMATICAL INITIAL JEEM\n@@ -1697,7 +1698,7 @@ FFED..FFEE    ; NFKD_QC; N # So   [2] HALFWIDTH BLACK SQUARE..HALFWIDTH WHITE CI\n 1FBF0..1FBF9  ; NFKD_QC; N # Nd  [10] SEGMENTED DIGIT ZERO..SEGMENTED DIGIT NINE\n 2F800..2FA1D  ; NFKD_QC; N # Lo [542] CJK COMPATIBILITY IDEOGRAPH-2F800..CJK COMPATIBILITY IDEOGRAPH-2FA1D\n \n-# Total code points: 16967\n+# Total code points: 17029\n \n # ================================================\n \n@@ -2060,6 +2061,7 @@ FFED..FFEE    ; NFKC_QC; N # So   [2] HALFWIDTH BLACK SQUARE..HALFWIDTH WHITE CI\n 1D7C3         ; NFKC_QC; N # Sm       MATHEMATICAL SANS-SERIF BOLD ITALIC PARTIAL DIFFERENTIAL\n 1D7C4..1D7CB  ; NFKC_QC; N # L&   [8] MATHEMATICAL SANS-SERIF BOLD ITALIC EPSILON SYMBOL..MATHEMATICAL BOLD SMALL DIGAMMA\n 1D7CE..1D7FF  ; NFKC_QC; N # Nd  [50] MATHEMATICAL BOLD DIGIT ZERO..MATHEMATICAL MONOSPACE DIGIT NINE\n+1E030..1E06D  ; NFKC_QC; N # Lm  [62] MODIFIER LETTER CYRILLIC SMALL A..MODIFIER LETTER CYRILLIC SMALL STRAIGHT U WITH STROKE\n 1EE00..1EE03  ; NFKC_QC; N # Lo   [4] ARABIC MATHEMATICAL ALEF..ARABIC MATHEMATICAL DAL\n 1EE05..1EE1F  ; NFKC_QC; N # Lo  [27] ARABIC MATHEMATICAL WAW..ARABIC MATHEMATICAL DOTLESS QAF\n 1EE21..1EE22  ; NFKC_QC; N # Lo   [2] ARABIC MATHEMATICAL INITIAL BEH..ARABIC MATHEMATICAL INITIAL JEEM\n@@ -2105,7 +2107,7 @@ FFED..FFEE    ; NFKC_QC; N # So   [2] HALFWIDTH BLACK SQUARE..HALFWIDTH WHITE CI\n 1FBF0..1FBF9  ; NFKC_QC; N # Nd  [10] SEGMENTED DIGIT ZERO..SEGMENTED DIGIT NINE\n 2F800..2FA1D  ; NFKC_QC; N # Lo [542] CJK COMPATIBILITY IDEOGRAPH-2F800..CJK COMPATIBILITY IDEOGRAPH-2FA1D\n \n-# Total code points: 4866\n+# Total code points: 4928\n \n # ================================================\n \n@@ -8076,6 +8078,68 @@ FFF0..FFF8    ; NFKC_CF;                # Cn   [9] <reserved-FFF0>..<reserved-FF\n 1D7FD         ; NFKC_CF; 0037           # Nd       MATHEMATICAL MONOSPACE DIGIT SEVEN\n 1D7FE         ; NFKC_CF; 0038           # Nd       MATHEMATICAL MONOSPACE DIGIT EIGHT\n 1D7FF         ; NFKC_CF; 0039           # Nd       MATHEMATICAL MONOSPACE DIGIT NINE\n+1E030         ; NFKC_CF; 0430           # Lm       MODIFIER LETTER CYRILLIC SMALL A\n+1E031         ; NFKC_CF; 0431           # Lm       MODIFIER LETTER CYRILLIC SMALL BE\n+1E032         ; NFKC_CF; 0432           # Lm       MODIFIER LETTER CYRILLIC SMALL VE\n+1E033         ; NFKC_CF; 0433           # Lm       MODIFIER LETTER CYRILLIC SMALL GHE\n+1E034         ; NFKC_CF; 0434           # Lm       MODIFIER LETTER CYRILLIC SMALL DE\n+1E035         ; NFKC_CF; 0435           # Lm       MODIFIER LETTER CYRILLIC SMALL IE\n+1E036         ; NFKC_CF; 0436           # Lm       MODIFIER LETTER CYRILLIC SMALL ZHE\n+1E037         ; NFKC_CF; 0437           # Lm       MODIFIER LETTER CYRILLIC SMALL ZE\n+1E038         ; NFKC_CF; 0438           # Lm       MODIFIER LETTER CYRILLIC SMALL I\n+1E039         ; NFKC_CF; 043A           # Lm       MODIFIER LETTER CYRILLIC SMALL KA\n+1E03A         ; NFKC_CF; 043B           # Lm       MODIFIER LETTER CYRILLIC SMALL EL\n+1E03B         ; NFKC_CF; 043C           # Lm       MODIFIER LETTER CYRILLIC SMALL EM\n+1E03C         ; NFKC_CF; 043E           # Lm       MODIFIER LETTER CYRILLIC SMALL O\n+1E03D         ; NFKC_CF; 043F           # Lm       MODIFIER LETTER CYRILLIC SMALL PE\n+1E03E         ; NFKC_CF; 0440           # Lm       MODIFIER LETTER CYRILLIC SMALL ER\n+1E03F         ; NFKC_CF; 0441           # Lm       MODIFIER LETTER CYRILLIC SMALL ES\n+1E040         ; NFKC_CF; 0442           # Lm       MODIFIER LETTER CYRILLIC SMALL TE\n+1E041         ; NFKC_CF; 0443           # Lm       MODIFIER LETTER CYRILLIC SMALL U\n+1E042         ; NFKC_CF; 0444           # Lm       MODIFIER LETTER CYRILLIC SMALL EF\n+1E043         ; NFKC_CF; 0445           # Lm       MODIFIER LETTER CYRILLIC SMALL HA\n+1E044         ; NFKC_CF; 0446           # Lm       MODIFIER LETTER CYRILLIC SMALL TSE\n+1E045         ; NFKC_CF; 0447           # Lm       MODIFIER LETTER CYRILLIC SMALL CHE\n+1E046         ; NFKC_CF; 0448           # Lm       MODIFIER LETTER CYRILLIC SMALL SHA\n+1E047         ; NFKC_CF; 044B           # Lm       MODIFIER LETTER CYRILLIC SMALL YERU\n+1E048         ; NFKC_CF; 044D           # Lm       MODIFIER LETTER CYRILLIC SMALL E\n+1E049         ; NFKC_CF; 044E           # Lm       MODIFIER LETTER CYRILLIC SMALL YU\n+1E04A         ; NFKC_CF; A689           # Lm       MODIFIER LETTER CYRILLIC SMALL DZZE\n+1E04B         ; NFKC_CF; 04D9           # Lm       MODIFIER LETTER CYRILLIC SMALL SCHWA\n+1E04C         ; NFKC_CF; 0456           # Lm       MODIFIER LETTER CYRILLIC SMALL BYELORUSSIAN-UKRAINIAN I\n+1E04D         ; NFKC_CF; 0458           # Lm       MODIFIER LETTER CYRILLIC SMALL JE\n+1E04E         ; NFKC_CF; 04E9           # Lm       MODIFIER LETTER CYRILLIC SMALL BARRED O\n+1E04F         ; NFKC_CF; 04AF           # Lm       MODIFIER LETTER CYRILLIC SMALL STRAIGHT U\n+1E050         ; NFKC_CF; 04CF           # Lm       MODIFIER LETTER CYRILLIC SMALL PALOCHKA\n+1E051         ; NFKC_CF; 0430           # Lm       CYRILLIC SUBSCRIPT SMALL LETTER A\n+1E052         ; NFKC_CF; 0431           # Lm       CYRILLIC SUBSCRIPT SMALL LETTER BE\n+1E053         ; NFKC_CF; 0432           # Lm       CYRILLIC SUBSCRIPT SMALL LETTER VE\n+1E054         ; NFKC_CF; 0433           # Lm       CYRILLIC SUBSCRIPT SMALL LETTER GHE\n+1E055         ; NFKC_CF; 0434           # Lm       CYRILLIC SUBSCRIPT SMALL LETTER DE\n+1E056         ; NFKC_CF; 0435           # Lm       CYRILLIC SUBSCRIPT SMALL LETTER IE\n+1E057         ; NFKC_CF; 0436           # Lm       CYRILLIC SUBSCRIPT SMALL LETTER ZHE\n+1E058         ; NFKC_CF; 0437           # Lm       CYRILLIC SUBSCRIPT SMALL LETTER ZE\n+1E059         ; NFKC_CF; 0438           # Lm       CYRILLIC SUBSCRIPT SMALL LETTER I\n+1E05A         ; NFKC_CF; 043A           # Lm       CYRILLIC SUBSCRIPT SMALL LETTER KA\n+1E05B         ; NFKC_CF; 043B           # Lm       CYRILLIC SUBSCRIPT SMALL LETTER EL\n+1E05C         ; NFKC_CF; 043E           # Lm       CYRILLIC SUBSCRIPT SMALL LETTER O\n+1E05D         ; NFKC_CF; 043F           # Lm       CYRILLIC SUBSCRIPT SMALL LETTER PE\n+1E05E         ; NFKC_CF; 0441           # Lm       CYRILLIC SUBSCRIPT SMALL LETTER ES\n+1E05F         ; NFKC_CF; 0443           # Lm       CYRILLIC SUBSCRIPT SMALL LETTER U\n+1E060         ; NFKC_CF; 0444           # Lm       CYRILLIC SUBSCRIPT SMALL LETTER EF\n+1E061         ; NFKC_CF; 0445           # Lm       CYRILLIC SUBSCRIPT SMALL LETTER HA\n+1E062         ; NFKC_CF; 0446           # Lm       CYRILLIC SUBSCRIPT SMALL LETTER TSE\n+1E063         ; NFKC_CF; 0447           # Lm       CYRILLIC SUBSCRIPT SMALL LETTER CHE\n+1E064         ; NFKC_CF; 0448           # Lm       CYRILLIC SUBSCRIPT SMALL LETTER SHA\n+1E065         ; NFKC_CF; 044A           # Lm       CYRILLIC SUBSCRIPT SMALL LETTER HARD SIGN\n+1E066         ; NFKC_CF; 044B           # Lm       CYRILLIC SUBSCRIPT SMALL LETTER YERU\n+1E067         ; NFKC_CF; 0491           # Lm       CYRILLIC SUBSCRIPT SMALL LETTER GHE WITH UPTURN\n+1E068         ; NFKC_CF; 0456           # Lm       CYRILLIC SUBSCRIPT SMALL LETTER BYELORUSSIAN-UKRAINIAN I\n+1E069         ; NFKC_CF; 0455           # Lm       CYRILLIC SUBSCRIPT SMALL LETTER DZE\n+1E06A         ; NFKC_CF; 045F           # Lm       CYRILLIC SUBSCRIPT SMALL LETTER DZHE\n+1E06B         ; NFKC_CF; 04AB           # Lm       MODIFIER LETTER CYRILLIC SMALL ES WITH DESCENDER\n+1E06C         ; NFKC_CF; A651           # Lm       MODIFIER LETTER CYRILLIC SMALL YERU WITH BACK YER\n+1E06D         ; NFKC_CF; 04B1           # Lm       MODIFIER LETTER CYRILLIC SMALL STRAIGHT U WITH STROKE\n 1E900         ; NFKC_CF; 1E922          # L&       ADLAM CAPITAL LETTER ALIF\n 1E901         ; NFKC_CF; 1E923          # L&       ADLAM CAPITAL LETTER DAALI\n 1E902         ; NFKC_CF; 1E924          # L&       ADLAM CAPITAL LETTER LAAM\n@@ -8937,7 +9001,7 @@ E0080..E00FF  ; NFKC_CF;                # Cn [128] <reserved-E0080>..<reserved-E\n E0100..E01EF  ; NFKC_CF;                # Mn [240] VARIATION SELECTOR-17..VARIATION SELECTOR-256\n E01F0..E0FFF  ; NFKC_CF;                # Cn [3600] <reserved-E01F0>..<reserved-E0FFF>\n \n-# Total code points: 10429\n+# Total code points: 10491\n \n # ================================================\n \n@@ -9895,6 +9959,7 @@ FFF0..FFF8    ; Changes_When_NFKC_Casefolded # Cn   [9] <reserved-FFF0>..<reserv\n 1D7C3         ; Changes_When_NFKC_Casefolded # Sm       MATHEMATICAL SANS-SERIF BOLD ITALIC PARTIAL DIFFERENTIAL\n 1D7C4..1D7CB  ; Changes_When_NFKC_Casefolded # L&   [8] MATHEMATICAL SANS-SERIF BOLD ITALIC EPSILON SYMBOL..MATHEMATICAL BOLD SMALL DIGAMMA\n 1D7CE..1D7FF  ; Changes_When_NFKC_Casefolded # Nd  [50] MATHEMATICAL BOLD DIGIT ZERO..MATHEMATICAL MONOSPACE DIGIT NINE\n+1E030..1E06D  ; Changes_When_NFKC_Casefolded # Lm  [62] MODIFIER LETTER CYRILLIC SMALL A..MODIFIER LETTER CYRILLIC SMALL STRAIGHT U WITH STROKE\n 1E900..1E921  ; Changes_When_NFKC_Casefolded # L&  [34] ADLAM CAPITAL LETTER ALIF..ADLAM CAPITAL LETTER SHA\n 1EE00..1EE03  ; Changes_When_NFKC_Casefolded # Lo   [4] ARABIC MATHEMATICAL ALEF..ARABIC MATHEMATICAL DAL\n 1EE05..1EE1F  ; Changes_When_NFKC_Casefolded # Lo  [27] ARABIC MATHEMATICAL WAW..ARABIC MATHEMATICAL DOTLESS QAF\n@@ -9948,6 +10013,6 @@ E0080..E00FF  ; Changes_When_NFKC_Casefolded # Cn [128] <reserved-E0080>..<reser\n E0100..E01EF  ; Changes_When_NFKC_Casefolded # Mn [240] VARIATION SELECTOR-17..VARIATION SELECTOR-256\n E01F0..E0FFF  ; Changes_When_NFKC_Casefolded # Cn [3600] <reserved-E01F0>..<reserved-E0FFF>\n \n-# Total code points: 10429\n+# Total code points: 10491\n \n # EOF"}, {"sha": "38b7076c02f786d3fb417a3e16d5a1034107d406", "filename": "contrib/unicode/EastAsianWidth.txt", "status": "modified", "additions": 53, "deletions": 21, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/contrib%2Funicode%2FEastAsianWidth.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/contrib%2Funicode%2FEastAsianWidth.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Funicode%2FEastAsianWidth.txt?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -1,6 +1,6 @@\n-# EastAsianWidth-14.0.0.txt\n-# Date: 2021-07-06, 09:58:53 GMT [KW, LI]\n-# \u00a9 2021 Unicode\u00ae, Inc.\n+# EastAsianWidth-15.0.0.txt\n+# Date: 2022-05-24, 17:40:20 GMT [KW, LI]\n+# \u00a9 2022 Unicode\u00ae, Inc.\n # Unicode and the Unicode Logo are registered trademarks of Unicode, Inc. in the U.S. and other countries.\n # For terms of use, see https://www.unicode.org/terms_of_use.html\n #\n@@ -534,6 +534,7 @@\n 0CE2..0CE3;N     # Mn     [2] KANNADA VOWEL SIGN VOCALIC L..KANNADA VOWEL SIGN VOCALIC LL\n 0CE6..0CEF;N     # Nd    [10] KANNADA DIGIT ZERO..KANNADA DIGIT NINE\n 0CF1..0CF2;N     # Lo     [2] KANNADA SIGN JIHVAMULIYA..KANNADA SIGN UPADHMANIYA\n+0CF3;N           # Mc         KANNADA SIGN COMBINING ANUSVARA ABOVE RIGHT\n 0D00..0D01;N     # Mn     [2] MALAYALAM SIGN COMBINING ANUSVARA ABOVE..MALAYALAM SIGN CANDRABINDU\n 0D02..0D03;N     # Mc     [2] MALAYALAM SIGN ANUSVARA..MALAYALAM SIGN VISARGA\n 0D04..0D0C;N     # Lo     [9] MALAYALAM LETTER VEDIC ANUSVARA..MALAYALAM LETTER VOCALIC L\n@@ -595,7 +596,7 @@\n 0EBD;N           # Lo         LAO SEMIVOWEL SIGN NYO\n 0EC0..0EC4;N     # Lo     [5] LAO VOWEL SIGN E..LAO VOWEL SIGN AI\n 0EC6;N           # Lm         LAO KO LA\n-0EC8..0ECD;N     # Mn     [6] LAO TONE MAI EK..LAO NIGGAHITA\n+0EC8..0ECE;N     # Mn     [7] LAO TONE MAI EK..LAO YAMAKKAN\n 0ED0..0ED9;N     # Nd    [10] LAO DIGIT ZERO..LAO DIGIT NINE\n 0EDC..0EDF;N     # Lo     [4] LAO HO NO..LAO LETTER KHMU NYO\n 0F00;N           # Lo         TIBETAN SYLLABLE OM\n@@ -1946,6 +1947,7 @@ FFFD;A           # So         REPLACEMENT CHARACTER\n 10EAB..10EAC;N   # Mn     [2] YEZIDI COMBINING HAMZA MARK..YEZIDI COMBINING MADDA MARK\n 10EAD;N          # Pd         YEZIDI HYPHENATION MARK\n 10EB0..10EB1;N   # Lo     [2] YEZIDI LETTER LAM WITH DOT ABOVE..YEZIDI LETTER YOT WITH CIRCUMFLEX ABOVE\n+10EFD..10EFF;N   # Mn     [3] ARABIC SMALL LOW WORD SAKTA..ARABIC SMALL LOW WORD MADDA\n 10F00..10F1C;N   # Lo    [29] OLD SOGDIAN LETTER ALEPH..OLD SOGDIAN LETTER FINAL TAW WITH VERTICAL TAIL\n 10F1D..10F26;N   # No    [10] OLD SOGDIAN NUMBER ONE..OLD SOGDIAN FRACTION ONE HALF\n 10F27;N          # Lo         OLD SOGDIAN LIGATURE AYIN-DALETH\n@@ -2028,6 +2030,8 @@ FFFD;A           # So         REPLACEMENT CHARACTER\n 11236..11237;N   # Mn     [2] KHOJKI SIGN NUKTA..KHOJKI SIGN SHADDA\n 11238..1123D;N   # Po     [6] KHOJKI DANDA..KHOJKI ABBREVIATION SIGN\n 1123E;N          # Mn         KHOJKI SIGN SUKUN\n+1123F..11240;N   # Lo     [2] KHOJKI LETTER QA..KHOJKI LETTER SHORT I\n+11241;N          # Mn         KHOJKI VOWEL SIGN VOCALIC R\n 11280..11286;N   # Lo     [7] MULTANI LETTER A..MULTANI LETTER GA\n 11288;N          # Lo         MULTANI LETTER GHA\n 1128A..1128D;N   # Lo     [4] MULTANI LETTER CA..MULTANI LETTER JJA\n@@ -2190,6 +2194,7 @@ FFFD;A           # So         REPLACEMENT CHARACTER\n 11A9E..11AA2;N   # Po     [5] SOYOMBO HEAD MARK WITH MOON AND SUN AND TRIPLE FLAME..SOYOMBO TERMINAL MARK-2\n 11AB0..11ABF;N   # Lo    [16] CANADIAN SYLLABICS NATTILIK HI..CANADIAN SYLLABICS SPA\n 11AC0..11AF8;N   # Lo    [57] PAU CIN HAU LETTER PA..PAU CIN HAU GLOTTAL STOP FINAL\n+11B00..11B09;N   # Po    [10] DEVANAGARI HEAD MARK..DEVANAGARI SIGN MINDU\n 11C00..11C08;N   # Lo     [9] BHAIKSUKI LETTER A..BHAIKSUKI LETTER VOCALIC L\n 11C0A..11C2E;N   # Lo    [37] BHAIKSUKI LETTER E..BHAIKSUKI LETTER HA\n 11C2F;N          # Mc         BHAIKSUKI VOWEL SIGN AA\n@@ -2235,6 +2240,19 @@ FFFD;A           # So         REPLACEMENT CHARACTER\n 11EF3..11EF4;N   # Mn     [2] MAKASAR VOWEL SIGN I..MAKASAR VOWEL SIGN U\n 11EF5..11EF6;N   # Mc     [2] MAKASAR VOWEL SIGN E..MAKASAR VOWEL SIGN O\n 11EF7..11EF8;N   # Po     [2] MAKASAR PASSIMBANG..MAKASAR END OF SECTION\n+11F00..11F01;N   # Mn     [2] KAWI SIGN CANDRABINDU..KAWI SIGN ANUSVARA\n+11F02;N          # Lo         KAWI SIGN REPHA\n+11F03;N          # Mc         KAWI SIGN VISARGA\n+11F04..11F10;N   # Lo    [13] KAWI LETTER A..KAWI LETTER O\n+11F12..11F33;N   # Lo    [34] KAWI LETTER KA..KAWI LETTER JNYA\n+11F34..11F35;N   # Mc     [2] KAWI VOWEL SIGN AA..KAWI VOWEL SIGN ALTERNATE AA\n+11F36..11F3A;N   # Mn     [5] KAWI VOWEL SIGN I..KAWI VOWEL SIGN VOCALIC R\n+11F3E..11F3F;N   # Mc     [2] KAWI VOWEL SIGN E..KAWI VOWEL SIGN AI\n+11F40;N          # Mn         KAWI VOWEL SIGN EU\n+11F41;N          # Mc         KAWI SIGN KILLER\n+11F42;N          # Mn         KAWI CONJOINER\n+11F43..11F4F;N   # Po    [13] KAWI DANDA..KAWI PUNCTUATION CLOSING SPIRAL\n+11F50..11F59;N   # Nd    [10] KAWI DIGIT ZERO..KAWI DIGIT NINE\n 11FB0;N          # Lo         LISU LETTER YHA\n 11FC0..11FD4;N   # No    [21] TAMIL FRACTION ONE THREE-HUNDRED-AND-TWENTIETH..TAMIL FRACTION DOWNSCALING FACTOR KIIZH\n 11FD5..11FDC;N   # So     [8] TAMIL SIGN NEL..TAMIL SIGN MUKKURUNI\n@@ -2247,8 +2265,11 @@ FFFD;A           # So         REPLACEMENT CHARACTER\n 12480..12543;N   # Lo   [196] CUNEIFORM SIGN AB TIMES NUN TENU..CUNEIFORM SIGN ZU5 TIMES THREE DISH TENU\n 12F90..12FF0;N   # Lo    [97] CYPRO-MINOAN SIGN CM001..CYPRO-MINOAN SIGN CM114\n 12FF1..12FF2;N   # Po     [2] CYPRO-MINOAN SIGN CM301..CYPRO-MINOAN SIGN CM302\n-13000..1342E;N   # Lo  [1071] EGYPTIAN HIEROGLYPH A001..EGYPTIAN HIEROGLYPH AA032\n-13430..13438;N   # Cf     [9] EGYPTIAN HIEROGLYPH VERTICAL JOINER..EGYPTIAN HIEROGLYPH END SEGMENT\n+13000..1342F;N   # Lo  [1072] EGYPTIAN HIEROGLYPH A001..EGYPTIAN HIEROGLYPH V011D\n+13430..1343F;N   # Cf    [16] EGYPTIAN HIEROGLYPH VERTICAL JOINER..EGYPTIAN HIEROGLYPH END WALLED ENCLOSURE\n+13440;N          # Mn         EGYPTIAN HIEROGLYPH MIRROR HORIZONTALLY\n+13441..13446;N   # Lo     [6] EGYPTIAN HIEROGLYPH FULL BLANK..EGYPTIAN HIEROGLYPH WIDE LOST SIGN\n+13447..13455;N   # Mn    [15] EGYPTIAN HIEROGLYPH MODIFIER DAMAGED AT TOP START..EGYPTIAN HIEROGLYPH MODIFIER DAMAGED\n 14400..14646;N   # Lo   [583] ANATOLIAN HIEROGLYPH A001..ANATOLIAN HIEROGLYPH A530\n 16800..16A38;N   # Lo   [569] BAMUM LETTER PHASE-A NGKUE MFON..BAMUM LETTER PHASE-F VUEQ\n 16A40..16A5E;N   # Lo    [31] MRO LETTER TA..MRO LETTER TEK\n@@ -2293,7 +2314,9 @@ FFFD;A           # So         REPLACEMENT CHARACTER\n 1AFFD..1AFFE;W   # Lm     [2] KATAKANA LETTER MINNAN NASALIZED TONE-7..KATAKANA LETTER MINNAN NASALIZED TONE-8\n 1B000..1B0FF;W   # Lo   [256] KATAKANA LETTER ARCHAIC E..HENTAIGANA LETTER RE-2\n 1B100..1B122;W   # Lo    [35] HENTAIGANA LETTER RE-3..KATAKANA LETTER ARCHAIC WU\n+1B132;W          # Lo         HIRAGANA LETTER SMALL KO\n 1B150..1B152;W   # Lo     [3] HIRAGANA LETTER SMALL WI..HIRAGANA LETTER SMALL WO\n+1B155;W          # Lo         KATAKANA LETTER SMALL KO\n 1B164..1B167;W   # Lo     [4] KATAKANA LETTER SMALL WI..KATAKANA LETTER SMALL N\n 1B170..1B2FB;W   # Lo   [396] NUSHU CHARACTER-1B170..NUSHU CHARACTER-1B2FB\n 1BC00..1BC6A;N   # Lo   [107] DUPLOYAN LETTER H..DUPLOYAN LETTER VOCALIC M\n@@ -2324,6 +2347,7 @@ FFFD;A           # So         REPLACEMENT CHARACTER\n 1D200..1D241;N   # So    [66] GREEK VOCAL NOTATION SYMBOL-1..GREEK INSTRUMENTAL NOTATION SYMBOL-54\n 1D242..1D244;N   # Mn     [3] COMBINING GREEK MUSICAL TRISEME..COMBINING GREEK MUSICAL PENTASEME\n 1D245;N          # So         GREEK MUSICAL LEIMMA\n+1D2C0..1D2D3;N   # No    [20] KAKTOVIK NUMERAL ZERO..KAKTOVIK NUMERAL NINETEEN\n 1D2E0..1D2F3;N   # No    [20] MAYAN NUMERAL ZERO..MAYAN NUMERAL NINETEEN\n 1D300..1D356;N   # So    [87] MONOGRAM FOR EARTH..TETRAGRAM FOR FOSTERING\n 1D360..1D378;N   # No    [25] COUNTING ROD UNIT DIGIT ONE..TALLY MARK FIVE\n@@ -2383,11 +2407,14 @@ FFFD;A           # So         REPLACEMENT CHARACTER\n 1DF00..1DF09;N   # Ll    [10] LATIN SMALL LETTER FENG DIGRAPH WITH TRILL..LATIN SMALL LETTER T WITH HOOK AND RETROFLEX HOOK\n 1DF0A;N          # Lo         LATIN LETTER RETROFLEX CLICK WITH RETROFLEX HOOK\n 1DF0B..1DF1E;N   # Ll    [20] LATIN SMALL LETTER ESH WITH DOUBLE BAR..LATIN SMALL LETTER S WITH CURL\n+1DF25..1DF2A;N   # Ll     [6] LATIN SMALL LETTER D WITH MID-HEIGHT LEFT HOOK..LATIN SMALL LETTER T WITH MID-HEIGHT LEFT HOOK\n 1E000..1E006;N   # Mn     [7] COMBINING GLAGOLITIC LETTER AZU..COMBINING GLAGOLITIC LETTER ZHIVETE\n 1E008..1E018;N   # Mn    [17] COMBINING GLAGOLITIC LETTER ZEMLJA..COMBINING GLAGOLITIC LETTER HERU\n 1E01B..1E021;N   # Mn     [7] COMBINING GLAGOLITIC LETTER SHTA..COMBINING GLAGOLITIC LETTER YATI\n 1E023..1E024;N   # Mn     [2] COMBINING GLAGOLITIC LETTER YU..COMBINING GLAGOLITIC LETTER SMALL YUS\n 1E026..1E02A;N   # Mn     [5] COMBINING GLAGOLITIC LETTER YO..COMBINING GLAGOLITIC LETTER FITA\n+1E030..1E06D;N   # Lm    [62] MODIFIER LETTER CYRILLIC SMALL A..MODIFIER LETTER CYRILLIC SMALL STRAIGHT U WITH STROKE\n+1E08F;N          # Mn         COMBINING CYRILLIC SMALL LETTER BYELORUSSIAN-UKRAINIAN I\n 1E100..1E12C;N   # Lo    [45] NYIAKENG PUACHUE HMONG LETTER MA..NYIAKENG PUACHUE HMONG LETTER W\n 1E130..1E136;N   # Mn     [7] NYIAKENG PUACHUE HMONG TONE-B..NYIAKENG PUACHUE HMONG TONE-D\n 1E137..1E13D;N   # Lm     [7] NYIAKENG PUACHUE HMONG SIGN FOR PERSON..NYIAKENG PUACHUE HMONG SYLLABLE LENGTHENER\n@@ -2400,6 +2427,10 @@ FFFD;A           # So         REPLACEMENT CHARACTER\n 1E2EC..1E2EF;N   # Mn     [4] WANCHO TONE TUP..WANCHO TONE KOINI\n 1E2F0..1E2F9;N   # Nd    [10] WANCHO DIGIT ZERO..WANCHO DIGIT NINE\n 1E2FF;N          # Sc         WANCHO NGUN SIGN\n+1E4D0..1E4EA;N   # Lo    [27] NAG MUNDARI LETTER O..NAG MUNDARI LETTER ELL\n+1E4EB;N          # Lm         NAG MUNDARI SIGN OJOD\n+1E4EC..1E4EF;N   # Mn     [4] NAG MUNDARI SIGN MUHOR..NAG MUNDARI SIGN SUTUH\n+1E4F0..1E4F9;N   # Nd    [10] NAG MUNDARI DIGIT ZERO..NAG MUNDARI DIGIT NINE\n 1E7E0..1E7E6;N   # Lo     [7] ETHIOPIC SYLLABLE HHYA..ETHIOPIC SYLLABLE HHYO\n 1E7E8..1E7EB;N   # Lo     [4] ETHIOPIC SYLLABLE GURAGE HHWA..ETHIOPIC SYLLABLE HHWE\n 1E7ED..1E7EE;N   # Lo     [2] ETHIOPIC SYLLABLE GURAGE MWI..ETHIOPIC SYLLABLE GURAGE MWEE\n@@ -2528,13 +2559,14 @@ FFFD;A           # So         REPLACEMENT CHARACTER\n 1F6D0..1F6D2;W   # So     [3] PLACE OF WORSHIP..SHOPPING TROLLEY\n 1F6D3..1F6D4;N   # So     [2] STUPA..PAGODA\n 1F6D5..1F6D7;W   # So     [3] HINDU TEMPLE..ELEVATOR\n-1F6DD..1F6DF;W   # So     [3] PLAYGROUND SLIDE..RING BUOY\n+1F6DC..1F6DF;W   # So     [4] WIRELESS..RING BUOY\n 1F6E0..1F6EA;N   # So    [11] HAMMER AND WRENCH..NORTHEAST-POINTING AIRPLANE\n 1F6EB..1F6EC;W   # So     [2] AIRPLANE DEPARTURE..AIRPLANE ARRIVING\n 1F6F0..1F6F3;N   # So     [4] SATELLITE..PASSENGER SHIP\n 1F6F4..1F6FC;W   # So     [9] SCOOTER..ROLLER SKATE\n-1F700..1F773;N   # So   [116] ALCHEMICAL SYMBOL FOR QUINTESSENCE..ALCHEMICAL SYMBOL FOR HALF OUNCE\n-1F780..1F7D8;N   # So    [89] BLACK LEFT-POINTING ISOSCELES RIGHT TRIANGLE..NEGATIVE CIRCLED SQUARE\n+1F700..1F776;N   # So   [119] ALCHEMICAL SYMBOL FOR QUINTESSENCE..LUNAR ECLIPSE\n+1F77B..1F77F;N   # So     [5] HAUMEA..ORCUS\n+1F780..1F7D9;N   # So    [90] BLACK LEFT-POINTING ISOSCELES RIGHT TRIANGLE..NINE POINTED WHITE STAR\n 1F7E0..1F7EB;W   # So    [12] LARGE ORANGE CIRCLE..LARGE BROWN SQUARE\n 1F7F0;W          # So         HEAVY EQUALS SIGN\n 1F800..1F80B;N   # So    [12] LEFTWARDS ARROW WITH SMALL TRIANGLE ARROWHEAD..DOWNWARDS ARROW WITH LARGE TRIANGLE ARROWHEAD\n@@ -2551,22 +2583,20 @@ FFFD;A           # So         REPLACEMENT CHARACTER\n 1F947..1F9FF;W   # So   [185] FIRST PLACE MEDAL..NAZAR AMULET\n 1FA00..1FA53;N   # So    [84] NEUTRAL CHESS KING..BLACK CHESS KNIGHT-BISHOP\n 1FA60..1FA6D;N   # So    [14] XIANGQI RED GENERAL..XIANGQI BLACK SOLDIER\n-1FA70..1FA74;W   # So     [5] BALLET SHOES..THONG SANDAL\n-1FA78..1FA7C;W   # So     [5] DROP OF BLOOD..CRUTCH\n-1FA80..1FA86;W   # So     [7] YO-YO..NESTING DOLLS\n-1FA90..1FAAC;W   # So    [29] RINGED PLANET..HAMSA\n-1FAB0..1FABA;W   # So    [11] FLY..NEST WITH EGGS\n-1FAC0..1FAC5;W   # So     [6] ANATOMICAL HEART..PERSON WITH CROWN\n-1FAD0..1FAD9;W   # So    [10] BLUEBERRIES..JAR\n-1FAE0..1FAE7;W   # So     [8] MELTING FACE..BUBBLES\n-1FAF0..1FAF6;W   # So     [7] HAND WITH INDEX FINGER AND THUMB CROSSED..HEART HANDS\n+1FA70..1FA7C;W   # So    [13] BALLET SHOES..CRUTCH\n+1FA80..1FA88;W   # So     [9] YO-YO..FLUTE\n+1FA90..1FABD;W   # So    [46] RINGED PLANET..WING\n+1FABF..1FAC5;W   # So     [7] GOOSE..PERSON WITH CROWN\n+1FACE..1FADB;W   # So    [14] MOOSE..PEA POD\n+1FAE0..1FAE8;W   # So     [9] MELTING FACE..SHAKING FACE\n+1FAF0..1FAF8;W   # So     [9] HAND WITH INDEX FINGER AND THUMB CROSSED..RIGHTWARDS PUSHING HAND\n 1FB00..1FB92;N   # So   [147] BLOCK SEXTANT-1..UPPER HALF INVERSE MEDIUM SHADE AND LOWER HALF BLOCK\n 1FB94..1FBCA;N   # So    [55] LEFT HALF INVERSE MEDIUM SHADE AND RIGHT HALF BLOCK..WHITE UP-POINTING CHEVRON\n 1FBF0..1FBF9;N   # Nd    [10] SEGMENTED DIGIT ZERO..SEGMENTED DIGIT NINE\n 20000..2A6DF;W   # Lo [42720] CJK UNIFIED IDEOGRAPH-20000..CJK UNIFIED IDEOGRAPH-2A6DF\n 2A6E0..2A6FF;W   # Cn    [32] <reserved-2A6E0>..<reserved-2A6FF>\n-2A700..2B738;W   # Lo  [4153] CJK UNIFIED IDEOGRAPH-2A700..CJK UNIFIED IDEOGRAPH-2B738\n-2B739..2B73F;W   # Cn     [7] <reserved-2B739>..<reserved-2B73F>\n+2A700..2B739;W   # Lo  [4154] CJK UNIFIED IDEOGRAPH-2A700..CJK UNIFIED IDEOGRAPH-2B739\n+2B73A..2B73F;W   # Cn     [6] <reserved-2B73A>..<reserved-2B73F>\n 2B740..2B81D;W   # Lo   [222] CJK UNIFIED IDEOGRAPH-2B740..CJK UNIFIED IDEOGRAPH-2B81D\n 2B81E..2B81F;W   # Cn     [2] <reserved-2B81E>..<reserved-2B81F>\n 2B820..2CEA1;W   # Lo  [5762] CJK UNIFIED IDEOGRAPH-2B820..CJK UNIFIED IDEOGRAPH-2CEA1\n@@ -2577,7 +2607,9 @@ FFFD;A           # So         REPLACEMENT CHARACTER\n 2FA1E..2FA1F;W   # Cn     [2] <reserved-2FA1E>..<reserved-2FA1F>\n 2FA20..2FFFD;W   # Cn  [1502] <reserved-2FA20>..<reserved-2FFFD>\n 30000..3134A;W   # Lo  [4939] CJK UNIFIED IDEOGRAPH-30000..CJK UNIFIED IDEOGRAPH-3134A\n-3134B..3FFFD;W   # Cn [60595] <reserved-3134B>..<reserved-3FFFD>\n+3134B..3134F;W   # Cn     [5] <reserved-3134B>..<reserved-3134F>\n+31350..323AF;W   # Lo  [4192] CJK UNIFIED IDEOGRAPH-31350..CJK UNIFIED IDEOGRAPH-323AF\n+323B0..3FFFD;W   # Cn [56398] <reserved-323B0>..<reserved-3FFFD>\n E0001;N          # Cf         LANGUAGE TAG\n E0020..E007F;N   # Cf    [96] TAG SPACE..CANCEL TAG\n E0100..E01EF;A   # Mn   [240] VARIATION SELECTOR-17..VARIATION SELECTOR-256"}, {"sha": "db3a863a920cbfe98dd3945aaad56cfcc3ee1441", "filename": "contrib/unicode/NameAliases.txt", "status": "added", "additions": 570, "deletions": 0, "changes": 570, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/contrib%2Funicode%2FNameAliases.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/contrib%2Funicode%2FNameAliases.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Funicode%2FNameAliases.txt?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -0,0 +1,570 @@\n+# NameAliases-15.0.0.txt\n+# Date: 2022-07-26, 20:13:00 GMT [KW]\n+# \u00a9 2022 Unicode\u00ae, Inc.\n+# For terms of use, see https://www.unicode.org/terms_of_use.html\n+#\n+# Unicode Character Database\n+# For documentation, see https://www.unicode.org/reports/tr44/\n+#\n+# This file is a normative contributory data file in the\n+# Unicode Character Database.\n+#\n+# This file defines the formal name aliases for Unicode characters.\n+#\n+# For informative aliases, see NamesList.txt\n+#\n+# The formal name aliases are divided into five types, each with a distinct label.\n+#\n+# Type Labels:\n+#\n+# 1. correction\n+#      Corrections for serious problems in the character names\n+# 2. control\n+#      ISO 6429 names for C0 and C1 control functions, and other\n+#      commonly occurring names for control codes\n+# 3. alternate\n+#      A few widely used alternate names for format characters\n+# 4. figment\n+#      Several documented labels for C1 control code points which\n+#      were never actually approved in any standard\n+# 5. abbreviation\n+#      Commonly occurring abbreviations (or acronyms) for control codes,\n+#      format characters, spaces, and variation selectors\n+#\n+# The formal name aliases are part of the Unicode character namespace, which\n+# includes the character names and the names of named character sequences.\n+# The inclusion of ISO 6429 names and other commonly occurring names and\n+# abbreviations for control codes and format characters as formal name aliases\n+# is to help avoid name collisions between Unicode character names and the\n+# labels which commonly appear in text and/or in implementations such as regex, for\n+# control codes (which for historical reasons have no Unicode character name)\n+# or for format characters.\n+#\n+# For documentation, see NamesList.html and https://www.unicode.org/reports/tr44/\n+#\n+# FORMAT\n+#\n+# Each line has three fields, as described here:\n+#\n+# First field:  Code point\n+# Second field: Alias\n+# Third field:  Type\n+#\n+# The type labels used are defined above. As for property values, comparisons\n+# of type labels should ignore case.\n+#\n+# The type labels can be mapped to other strings for display, if desired.\n+#\n+# In case multiple aliases are assigned, additional aliases\n+# are provided on separate lines. Parsers of this data file should\n+# take note that the same code point can (and does) occur more than once.\n+#\n+# Note that currently the only instances of multiple aliases of the same\n+# type for a single code point are either of type \"control\" or \"abbreviation\".\n+# An alias of type \"abbreviation\" can, in principle, be added for any code\n+# point, although currently aliases of type \"correction\" do not have\n+# any additional aliases of type \"abbreviation\". Such relationships\n+# are not enforced by stability policies.\n+#\n+#-----------------------------------------------------------------\n+\n+0000;NULL;control\n+0000;NUL;abbreviation\n+0001;START OF HEADING;control\n+0001;SOH;abbreviation\n+0002;START OF TEXT;control\n+0002;STX;abbreviation\n+0003;END OF TEXT;control\n+0003;ETX;abbreviation\n+0004;END OF TRANSMISSION;control\n+0004;EOT;abbreviation\n+0005;ENQUIRY;control\n+0005;ENQ;abbreviation\n+0006;ACKNOWLEDGE;control\n+0006;ACK;abbreviation\n+\n+# Note that no formal name alias for the ISO 6429 \"BELL\" is\n+# provided for U+0007, because of the existing name collision\n+# with U+1F514 BELL.\n+\n+0007;ALERT;control\n+0007;BEL;abbreviation\n+\n+0008;BACKSPACE;control\n+0008;BS;abbreviation\n+0009;CHARACTER TABULATION;control\n+0009;HORIZONTAL TABULATION;control\n+0009;HT;abbreviation\n+0009;TAB;abbreviation\n+000A;LINE FEED;control\n+000A;NEW LINE;control\n+000A;END OF LINE;control\n+000A;LF;abbreviation\n+000A;NL;abbreviation\n+000A;EOL;abbreviation\n+000B;LINE TABULATION;control\n+000B;VERTICAL TABULATION;control\n+000B;VT;abbreviation\n+000C;FORM FEED;control\n+000C;FF;abbreviation\n+000D;CARRIAGE RETURN;control\n+000D;CR;abbreviation\n+000E;SHIFT OUT;control\n+000E;LOCKING-SHIFT ONE;control\n+000E;SO;abbreviation\n+000F;SHIFT IN;control\n+000F;LOCKING-SHIFT ZERO;control\n+000F;SI;abbreviation\n+0010;DATA LINK ESCAPE;control\n+0010;DLE;abbreviation\n+0011;DEVICE CONTROL ONE;control\n+0011;DC1;abbreviation\n+0012;DEVICE CONTROL TWO;control\n+0012;DC2;abbreviation\n+0013;DEVICE CONTROL THREE;control\n+0013;DC3;abbreviation\n+0014;DEVICE CONTROL FOUR;control\n+0014;DC4;abbreviation\n+0015;NEGATIVE ACKNOWLEDGE;control\n+0015;NAK;abbreviation\n+0016;SYNCHRONOUS IDLE;control\n+0016;SYN;abbreviation\n+0017;END OF TRANSMISSION BLOCK;control\n+0017;ETB;abbreviation\n+0018;CANCEL;control\n+0018;CAN;abbreviation\n+0019;END OF MEDIUM;control\n+0019;EOM;abbreviation\n+0019;EM;abbreviation\n+001A;SUBSTITUTE;control\n+001A;SUB;abbreviation\n+001B;ESCAPE;control\n+001B;ESC;abbreviation\n+001C;INFORMATION SEPARATOR FOUR;control\n+001C;FILE SEPARATOR;control\n+001C;FS;abbreviation\n+001D;INFORMATION SEPARATOR THREE;control\n+001D;GROUP SEPARATOR;control\n+001D;GS;abbreviation\n+001E;INFORMATION SEPARATOR TWO;control\n+001E;RECORD SEPARATOR;control\n+001E;RS;abbreviation\n+001F;INFORMATION SEPARATOR ONE;control\n+001F;UNIT SEPARATOR;control\n+001F;US;abbreviation\n+0020;SP;abbreviation\n+007F;DELETE;control\n+007F;DEL;abbreviation\n+\n+# PADDING CHARACTER and HIGH OCTET PRESET represent\n+# architectural concepts initially proposed for early\n+# drafts of ISO/IEC 10646-1. They were never actually\n+# approved or standardized: hence their designation\n+# here as the \"figment\" type. Formal name aliases\n+# (and corresponding abbreviations) for these code\n+# points are included here because these names leaked\n+# out from the draft documents and were published in\n+# at least one RFC whose names for code points were\n+# implemented in Perl regex expressions.\n+\n+0080;PADDING CHARACTER;figment\n+0080;PAD;abbreviation\n+0081;HIGH OCTET PRESET;figment\n+0081;HOP;abbreviation\n+\n+0082;BREAK PERMITTED HERE;control\n+0082;BPH;abbreviation\n+0083;NO BREAK HERE;control\n+0083;NBH;abbreviation\n+0084;INDEX;control\n+0084;IND;abbreviation\n+0085;NEXT LINE;control\n+0085;NEL;abbreviation\n+0086;START OF SELECTED AREA;control\n+0086;SSA;abbreviation\n+0087;END OF SELECTED AREA;control\n+0087;ESA;abbreviation\n+0088;CHARACTER TABULATION SET;control\n+0088;HORIZONTAL TABULATION SET;control\n+0088;HTS;abbreviation\n+0089;CHARACTER TABULATION WITH JUSTIFICATION;control\n+0089;HORIZONTAL TABULATION WITH JUSTIFICATION;control\n+0089;HTJ;abbreviation\n+008A;LINE TABULATION SET;control\n+008A;VERTICAL TABULATION SET;control\n+008A;VTS;abbreviation\n+008B;PARTIAL LINE FORWARD;control\n+008B;PARTIAL LINE DOWN;control\n+008B;PLD;abbreviation\n+008C;PARTIAL LINE BACKWARD;control\n+008C;PARTIAL LINE UP;control\n+008C;PLU;abbreviation\n+008D;REVERSE LINE FEED;control\n+008D;REVERSE INDEX;control\n+008D;RI;abbreviation\n+008E;SINGLE SHIFT TWO;control\n+008E;SINGLE-SHIFT-2;control\n+008E;SS2;abbreviation\n+008F;SINGLE SHIFT THREE;control\n+008F;SINGLE-SHIFT-3;control\n+008F;SS3;abbreviation\n+0090;DEVICE CONTROL STRING;control\n+0090;DCS;abbreviation\n+0091;PRIVATE USE ONE;control\n+0091;PRIVATE USE-1;control\n+0091;PU1;abbreviation\n+0092;PRIVATE USE TWO;control\n+0092;PRIVATE USE-2;control\n+0092;PU2;abbreviation\n+0093;SET TRANSMIT STATE;control\n+0093;STS;abbreviation\n+0094;CANCEL CHARACTER;control\n+0094;CCH;abbreviation\n+0095;MESSAGE WAITING;control\n+0095;MW;abbreviation\n+0096;START OF GUARDED AREA;control\n+0096;START OF PROTECTED AREA;control\n+0096;SPA;abbreviation\n+0097;END OF GUARDED AREA;control\n+0097;END OF PROTECTED AREA;control\n+0097;EPA;abbreviation\n+0098;START OF STRING;control\n+0098;SOS;abbreviation\n+\n+# SINGLE GRAPHIC CHARACTER INTRODUCER is another\n+# architectural concept from early drafts of ISO/IEC 10646-1\n+# which was never approved and standardized.\n+\n+0099;SINGLE GRAPHIC CHARACTER INTRODUCER;figment\n+0099;SGC;abbreviation\n+\n+009A;SINGLE CHARACTER INTRODUCER;control\n+009A;SCI;abbreviation\n+009B;CONTROL SEQUENCE INTRODUCER;control\n+009B;CSI;abbreviation\n+009C;STRING TERMINATOR;control\n+009C;ST;abbreviation\n+009D;OPERATING SYSTEM COMMAND;control\n+009D;OSC;abbreviation\n+009E;PRIVACY MESSAGE;control\n+009E;PM;abbreviation\n+009F;APPLICATION PROGRAM COMMAND;control\n+009F;APC;abbreviation\n+00A0;NBSP;abbreviation\n+00AD;SHY;abbreviation\n+01A2;LATIN CAPITAL LETTER GHA;correction\n+01A3;LATIN SMALL LETTER GHA;correction\n+034F;CGJ;abbreviation\n+0616;ARABIC SMALL HIGH LIGATURE ALEF WITH YEH BARREE;correction\n+061C;ALM;abbreviation\n+0709;SYRIAC SUBLINEAR COLON SKEWED LEFT;correction\n+0CDE;KANNADA LETTER LLLA;correction\n+0E9D;LAO LETTER FO FON;correction\n+0E9F;LAO LETTER FO FAY;correction\n+0EA3;LAO LETTER RO;correction\n+0EA5;LAO LETTER LO;correction\n+0FD0;TIBETAN MARK BKA- SHOG GI MGO RGYAN;correction\n+11EC;HANGUL JONGSEONG YESIEUNG-KIYEOK;correction\n+11ED;HANGUL JONGSEONG YESIEUNG-SSANGKIYEOK;correction\n+11EE;HANGUL JONGSEONG SSANGYESIEUNG;correction\n+11EF;HANGUL JONGSEONG YESIEUNG-KHIEUKH;correction\n+180B;FVS1;abbreviation\n+180C;FVS2;abbreviation\n+180D;FVS3;abbreviation\n+180E;MVS;abbreviation\n+180F;FVS4;abbreviation\n+1BBD;SUNDANESE LETTER ARCHAIC I;correction\n+200B;ZWSP;abbreviation\n+200C;ZWNJ;abbreviation\n+200D;ZWJ;abbreviation\n+200E;LRM;abbreviation\n+200F;RLM;abbreviation\n+202A;LRE;abbreviation\n+202B;RLE;abbreviation\n+202C;PDF;abbreviation\n+202D;LRO;abbreviation\n+202E;RLO;abbreviation\n+202F;NNBSP;abbreviation\n+205F;MMSP;abbreviation\n+2060;WJ;abbreviation\n+2066;LRI;abbreviation\n+2067;RLI;abbreviation\n+2068;FSI;abbreviation\n+2069;PDI;abbreviation\n+2118;WEIERSTRASS ELLIPTIC FUNCTION;correction\n+2448;MICR ON US SYMBOL;correction\n+2449;MICR DASH SYMBOL;correction\n+2B7A;LEFTWARDS TRIANGLE-HEADED ARROW WITH DOUBLE VERTICAL STROKE;correction\n+2B7C;RIGHTWARDS TRIANGLE-HEADED ARROW WITH DOUBLE VERTICAL STROKE;correction\n+A015;YI SYLLABLE ITERATION MARK;correction\n+AA6E;MYANMAR LETTER KHAMTI LLA;correction\n+FE00;VS1;abbreviation\n+FE01;VS2;abbreviation\n+FE02;VS3;abbreviation\n+FE03;VS4;abbreviation\n+FE04;VS5;abbreviation\n+FE05;VS6;abbreviation\n+FE06;VS7;abbreviation\n+FE07;VS8;abbreviation\n+FE08;VS9;abbreviation\n+FE09;VS10;abbreviation\n+FE0A;VS11;abbreviation\n+FE0B;VS12;abbreviation\n+FE0C;VS13;abbreviation\n+FE0D;VS14;abbreviation\n+FE0E;VS15;abbreviation\n+FE0F;VS16;abbreviation\n+FE18;PRESENTATION FORM FOR VERTICAL RIGHT WHITE LENTICULAR BRACKET;correction\n+FEFF;BYTE ORDER MARK;alternate\n+FEFF;BOM;abbreviation\n+FEFF;ZWNBSP;abbreviation\n+122D4;CUNEIFORM SIGN NU11 TENU;correction\n+122D5;CUNEIFORM SIGN NU11 OVER NU11 BUR OVER BUR;correction\n+16E56;MEDEFAIDRIN CAPITAL LETTER H;correction\n+16E57;MEDEFAIDRIN CAPITAL LETTER NG;correction\n+16E76;MEDEFAIDRIN SMALL LETTER H;correction\n+16E77;MEDEFAIDRIN SMALL LETTER NG;correction\n+1B001;HENTAIGANA LETTER E-1;correction\n+1D0C5;BYZANTINE MUSICAL SYMBOL FTHORA SKLIRON CHROMA VASIS;correction\n+E0100;VS17;abbreviation\n+E0101;VS18;abbreviation\n+E0102;VS19;abbreviation\n+E0103;VS20;abbreviation\n+E0104;VS21;abbreviation\n+E0105;VS22;abbreviation\n+E0106;VS23;abbreviation\n+E0107;VS24;abbreviation\n+E0108;VS25;abbreviation\n+E0109;VS26;abbreviation\n+E010A;VS27;abbreviation\n+E010B;VS28;abbreviation\n+E010C;VS29;abbreviation\n+E010D;VS30;abbreviation\n+E010E;VS31;abbreviation\n+E010F;VS32;abbreviation\n+E0110;VS33;abbreviation\n+E0111;VS34;abbreviation\n+E0112;VS35;abbreviation\n+E0113;VS36;abbreviation\n+E0114;VS37;abbreviation\n+E0115;VS38;abbreviation\n+E0116;VS39;abbreviation\n+E0117;VS40;abbreviation\n+E0118;VS41;abbreviation\n+E0119;VS42;abbreviation\n+E011A;VS43;abbreviation\n+E011B;VS44;abbreviation\n+E011C;VS45;abbreviation\n+E011D;VS46;abbreviation\n+E011E;VS47;abbreviation\n+E011F;VS48;abbreviation\n+E0120;VS49;abbreviation\n+E0121;VS50;abbreviation\n+E0122;VS51;abbreviation\n+E0123;VS52;abbreviation\n+E0124;VS53;abbreviation\n+E0125;VS54;abbreviation\n+E0126;VS55;abbreviation\n+E0127;VS56;abbreviation\n+E0128;VS57;abbreviation\n+E0129;VS58;abbreviation\n+E012A;VS59;abbreviation\n+E012B;VS60;abbreviation\n+E012C;VS61;abbreviation\n+E012D;VS62;abbreviation\n+E012E;VS63;abbreviation\n+E012F;VS64;abbreviation\n+E0130;VS65;abbreviation\n+E0131;VS66;abbreviation\n+E0132;VS67;abbreviation\n+E0133;VS68;abbreviation\n+E0134;VS69;abbreviation\n+E0135;VS70;abbreviation\n+E0136;VS71;abbreviation\n+E0137;VS72;abbreviation\n+E0138;VS73;abbreviation\n+E0139;VS74;abbreviation\n+E013A;VS75;abbreviation\n+E013B;VS76;abbreviation\n+E013C;VS77;abbreviation\n+E013D;VS78;abbreviation\n+E013E;VS79;abbreviation\n+E013F;VS80;abbreviation\n+E0140;VS81;abbreviation\n+E0141;VS82;abbreviation\n+E0142;VS83;abbreviation\n+E0143;VS84;abbreviation\n+E0144;VS85;abbreviation\n+E0145;VS86;abbreviation\n+E0146;VS87;abbreviation\n+E0147;VS88;abbreviation\n+E0148;VS89;abbreviation\n+E0149;VS90;abbreviation\n+E014A;VS91;abbreviation\n+E014B;VS92;abbreviation\n+E014C;VS93;abbreviation\n+E014D;VS94;abbreviation\n+E014E;VS95;abbreviation\n+E014F;VS96;abbreviation\n+E0150;VS97;abbreviation\n+E0151;VS98;abbreviation\n+E0152;VS99;abbreviation\n+E0153;VS100;abbreviation\n+E0154;VS101;abbreviation\n+E0155;VS102;abbreviation\n+E0156;VS103;abbreviation\n+E0157;VS104;abbreviation\n+E0158;VS105;abbreviation\n+E0159;VS106;abbreviation\n+E015A;VS107;abbreviation\n+E015B;VS108;abbreviation\n+E015C;VS109;abbreviation\n+E015D;VS110;abbreviation\n+E015E;VS111;abbreviation\n+E015F;VS112;abbreviation\n+E0160;VS113;abbreviation\n+E0161;VS114;abbreviation\n+E0162;VS115;abbreviation\n+E0163;VS116;abbreviation\n+E0164;VS117;abbreviation\n+E0165;VS118;abbreviation\n+E0166;VS119;abbreviation\n+E0167;VS120;abbreviation\n+E0168;VS121;abbreviation\n+E0169;VS122;abbreviation\n+E016A;VS123;abbreviation\n+E016B;VS124;abbreviation\n+E016C;VS125;abbreviation\n+E016D;VS126;abbreviation\n+E016E;VS127;abbreviation\n+E016F;VS128;abbreviation\n+E0170;VS129;abbreviation\n+E0171;VS130;abbreviation\n+E0172;VS131;abbreviation\n+E0173;VS132;abbreviation\n+E0174;VS133;abbreviation\n+E0175;VS134;abbreviation\n+E0176;VS135;abbreviation\n+E0177;VS136;abbreviation\n+E0178;VS137;abbreviation\n+E0179;VS138;abbreviation\n+E017A;VS139;abbreviation\n+E017B;VS140;abbreviation\n+E017C;VS141;abbreviation\n+E017D;VS142;abbreviation\n+E017E;VS143;abbreviation\n+E017F;VS144;abbreviation\n+E0180;VS145;abbreviation\n+E0181;VS146;abbreviation\n+E0182;VS147;abbreviation\n+E0183;VS148;abbreviation\n+E0184;VS149;abbreviation\n+E0185;VS150;abbreviation\n+E0186;VS151;abbreviation\n+E0187;VS152;abbreviation\n+E0188;VS153;abbreviation\n+E0189;VS154;abbreviation\n+E018A;VS155;abbreviation\n+E018B;VS156;abbreviation\n+E018C;VS157;abbreviation\n+E018D;VS158;abbreviation\n+E018E;VS159;abbreviation\n+E018F;VS160;abbreviation\n+E0190;VS161;abbreviation\n+E0191;VS162;abbreviation\n+E0192;VS163;abbreviation\n+E0193;VS164;abbreviation\n+E0194;VS165;abbreviation\n+E0195;VS166;abbreviation\n+E0196;VS167;abbreviation\n+E0197;VS168;abbreviation\n+E0198;VS169;abbreviation\n+E0199;VS170;abbreviation\n+E019A;VS171;abbreviation\n+E019B;VS172;abbreviation\n+E019C;VS173;abbreviation\n+E019D;VS174;abbreviation\n+E019E;VS175;abbreviation\n+E019F;VS176;abbreviation\n+E01A0;VS177;abbreviation\n+E01A1;VS178;abbreviation\n+E01A2;VS179;abbreviation\n+E01A3;VS180;abbreviation\n+E01A4;VS181;abbreviation\n+E01A5;VS182;abbreviation\n+E01A6;VS183;abbreviation\n+E01A7;VS184;abbreviation\n+E01A8;VS185;abbreviation\n+E01A9;VS186;abbreviation\n+E01AA;VS187;abbreviation\n+E01AB;VS188;abbreviation\n+E01AC;VS189;abbreviation\n+E01AD;VS190;abbreviation\n+E01AE;VS191;abbreviation\n+E01AF;VS192;abbreviation\n+E01B0;VS193;abbreviation\n+E01B1;VS194;abbreviation\n+E01B2;VS195;abbreviation\n+E01B3;VS196;abbreviation\n+E01B4;VS197;abbreviation\n+E01B5;VS198;abbreviation\n+E01B6;VS199;abbreviation\n+E01B7;VS200;abbreviation\n+E01B8;VS201;abbreviation\n+E01B9;VS202;abbreviation\n+E01BA;VS203;abbreviation\n+E01BB;VS204;abbreviation\n+E01BC;VS205;abbreviation\n+E01BD;VS206;abbreviation\n+E01BE;VS207;abbreviation\n+E01BF;VS208;abbreviation\n+E01C0;VS209;abbreviation\n+E01C1;VS210;abbreviation\n+E01C2;VS211;abbreviation\n+E01C3;VS212;abbreviation\n+E01C4;VS213;abbreviation\n+E01C5;VS214;abbreviation\n+E01C6;VS215;abbreviation\n+E01C7;VS216;abbreviation\n+E01C8;VS217;abbreviation\n+E01C9;VS218;abbreviation\n+E01CA;VS219;abbreviation\n+E01CB;VS220;abbreviation\n+E01CC;VS221;abbreviation\n+E01CD;VS222;abbreviation\n+E01CE;VS223;abbreviation\n+E01CF;VS224;abbreviation\n+E01D0;VS225;abbreviation\n+E01D1;VS226;abbreviation\n+E01D2;VS227;abbreviation\n+E01D3;VS228;abbreviation\n+E01D4;VS229;abbreviation\n+E01D5;VS230;abbreviation\n+E01D6;VS231;abbreviation\n+E01D7;VS232;abbreviation\n+E01D8;VS233;abbreviation\n+E01D9;VS234;abbreviation\n+E01DA;VS235;abbreviation\n+E01DB;VS236;abbreviation\n+E01DC;VS237;abbreviation\n+E01DD;VS238;abbreviation\n+E01DE;VS239;abbreviation\n+E01DF;VS240;abbreviation\n+E01E0;VS241;abbreviation\n+E01E1;VS242;abbreviation\n+E01E2;VS243;abbreviation\n+E01E3;VS244;abbreviation\n+E01E4;VS245;abbreviation\n+E01E5;VS246;abbreviation\n+E01E6;VS247;abbreviation\n+E01E7;VS248;abbreviation\n+E01E8;VS249;abbreviation\n+E01E9;VS250;abbreviation\n+E01EA;VS251;abbreviation\n+E01EB;VS252;abbreviation\n+E01EC;VS253;abbreviation\n+E01ED;VS254;abbreviation\n+E01EE;VS255;abbreviation\n+E01EF;VS256;abbreviation\n+\n+# EOF"}, {"sha": "b49d6460c1690c9458bd53640cb4413a93485bfc", "filename": "contrib/unicode/PropList.txt", "status": "modified", "additions": 40, "deletions": 16, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/contrib%2Funicode%2FPropList.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/contrib%2Funicode%2FPropList.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Funicode%2FPropList.txt?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -1,11 +1,11 @@\n-# PropList-14.0.0.txt\n-# Date: 2021-08-12, 23:13:05 GMT\n-# \u00a9 2021 Unicode\u00ae, Inc.\n+# PropList-15.0.0.txt\n+# Date: 2022-08-05, 22:17:16 GMT\n+# \u00a9 2022 Unicode\u00ae, Inc.\n # Unicode and the Unicode Logo are registered trademarks of Unicode, Inc. in the U.S. and other countries.\n-# For terms of use, see http://www.unicode.org/terms_of_use.html\n+# For terms of use, see https://www.unicode.org/terms_of_use.html\n #\n # Unicode Character Database\n-#   For documentation, see http://www.unicode.org/reports/tr44/\n+#   For documentation, see https://www.unicode.org/reports/tr44/\n \n # ================================================\n \n@@ -215,6 +215,7 @@ FF64          ; Terminal_Punctuation # Po       HALFWIDTH IDEOGRAPHIC COMMA\n 11C41..11C43  ; Terminal_Punctuation # Po   [3] BHAIKSUKI DANDA..BHAIKSUKI WORD SEPARATOR\n 11C71         ; Terminal_Punctuation # Po       MARCHEN MARK SHAD\n 11EF7..11EF8  ; Terminal_Punctuation # Po   [2] MAKASAR PASSIMBANG..MAKASAR END OF SECTION\n+11F43..11F44  ; Terminal_Punctuation # Po   [2] KAWI DANDA..KAWI DOUBLE DANDA\n 12470..12474  ; Terminal_Punctuation # Po   [5] CUNEIFORM PUNCTUATION SIGN OLD ASSYRIAN WORD DIVIDER..CUNEIFORM PUNCTUATION SIGN DIAGONAL QUADCOLON\n 16A6E..16A6F  ; Terminal_Punctuation # Po   [2] MRO DANDA..MRO DOUBLE DANDA\n 16AF5         ; Terminal_Punctuation # Po       BASSA VAH FULL STOP\n@@ -224,7 +225,7 @@ FF64          ; Terminal_Punctuation # Po       HALFWIDTH IDEOGRAPHIC COMMA\n 1BC9F         ; Terminal_Punctuation # Po       DUPLOYAN PUNCTUATION CHINOOK FULL STOP\n 1DA87..1DA8A  ; Terminal_Punctuation # Po   [4] SIGNWRITING COMMA..SIGNWRITING COLON\n \n-# Total code points: 276\n+# Total code points: 278\n \n # ================================================\n \n@@ -507,6 +508,7 @@ FF41..FF46    ; Hex_Digit # L&   [6] FULLWIDTH LATIN SMALL LETTER A..FULLWIDTH L\n 0BD7          ; Other_Alphabetic # Mc       TAMIL AU LENGTH MARK\n 0C00          ; Other_Alphabetic # Mn       TELUGU SIGN COMBINING CANDRABINDU ABOVE\n 0C01..0C03    ; Other_Alphabetic # Mc   [3] TELUGU SIGN CANDRABINDU..TELUGU SIGN VISARGA\n+0C04          ; Other_Alphabetic # Mn       TELUGU SIGN COMBINING ANUSVARA ABOVE\n 0C3E..0C40    ; Other_Alphabetic # Mn   [3] TELUGU VOWEL SIGN AA..TELUGU VOWEL SIGN II\n 0C41..0C44    ; Other_Alphabetic # Mc   [4] TELUGU VOWEL SIGN U..TELUGU VOWEL SIGN VOCALIC RR\n 0C46..0C48    ; Other_Alphabetic # Mn   [3] TELUGU VOWEL SIGN E..TELUGU VOWEL SIGN AI\n@@ -524,6 +526,7 @@ FF41..FF46    ; Hex_Digit # L&   [6] FULLWIDTH LATIN SMALL LETTER A..FULLWIDTH L\n 0CCC          ; Other_Alphabetic # Mn       KANNADA VOWEL SIGN AU\n 0CD5..0CD6    ; Other_Alphabetic # Mc   [2] KANNADA LENGTH MARK..KANNADA AI LENGTH MARK\n 0CE2..0CE3    ; Other_Alphabetic # Mn   [2] KANNADA VOWEL SIGN VOCALIC L..KANNADA VOWEL SIGN VOCALIC LL\n+0CF3          ; Other_Alphabetic # Mc       KANNADA SIGN COMBINING ANUSVARA ABOVE RIGHT\n 0D00..0D01    ; Other_Alphabetic # Mn   [2] MALAYALAM SIGN COMBINING ANUSVARA ABOVE..MALAYALAM SIGN CANDRABINDU\n 0D02..0D03    ; Other_Alphabetic # Mc   [2] MALAYALAM SIGN ANUSVARA..MALAYALAM SIGN VISARGA\n 0D3E..0D40    ; Other_Alphabetic # Mc   [3] MALAYALAM VOWEL SIGN AA..MALAYALAM VOWEL SIGN II\n@@ -548,7 +551,7 @@ FF41..FF46    ; Hex_Digit # L&   [6] FULLWIDTH LATIN SMALL LETTER A..FULLWIDTH L\n 0ECD          ; Other_Alphabetic # Mn       LAO NIGGAHITA\n 0F71..0F7E    ; Other_Alphabetic # Mn  [14] TIBETAN VOWEL SIGN AA..TIBETAN SIGN RJES SU NGA RO\n 0F7F          ; Other_Alphabetic # Mc       TIBETAN SIGN RNAM BCAD\n-0F80..0F81    ; Other_Alphabetic # Mn   [2] TIBETAN VOWEL SIGN REVERSED I..TIBETAN VOWEL SIGN REVERSED II\n+0F80..0F83    ; Other_Alphabetic # Mn   [4] TIBETAN VOWEL SIGN REVERSED I..TIBETAN SIGN SNA LDAN\n 0F8D..0F97    ; Other_Alphabetic # Mn  [11] TIBETAN SUBJOINED SIGN LCE TSA CAN..TIBETAN SUBJOINED LETTER JA\n 0F99..0FBC    ; Other_Alphabetic # Mn  [36] TIBETAN SUBJOINED LETTER NYA..TIBETAN SUBJOINED LETTER FIXED-FORM RA\n 102B..102C    ; Other_Alphabetic # Mc   [2] MYANMAR VOWEL SIGN TALL AA..MYANMAR VOWEL SIGN AA\n@@ -692,6 +695,7 @@ FB1E          ; Other_Alphabetic # Mn       HEBREW POINT JUDEO-SPANISH VARIKA\n 11002         ; Other_Alphabetic # Mc       BRAHMI SIGN VISARGA\n 11038..11045  ; Other_Alphabetic # Mn  [14] BRAHMI VOWEL SIGN AA..BRAHMI VOWEL SIGN AU\n 11073..11074  ; Other_Alphabetic # Mn   [2] BRAHMI VOWEL SIGN OLD TAMIL SHORT E..BRAHMI VOWEL SIGN OLD TAMIL SHORT O\n+11080..11081  ; Other_Alphabetic # Mn   [2] KAITHI SIGN CANDRABINDU..KAITHI SIGN ANUSVARA\n 11082         ; Other_Alphabetic # Mc       KAITHI SIGN VISARGA\n 110B0..110B2  ; Other_Alphabetic # Mc   [3] KAITHI VOWEL SIGN AA..KAITHI VOWEL SIGN II\n 110B3..110B6  ; Other_Alphabetic # Mn   [4] KAITHI VOWEL SIGN U..KAITHI VOWEL SIGN AI\n@@ -715,6 +719,7 @@ FB1E          ; Other_Alphabetic # Mn       HEBREW POINT JUDEO-SPANISH VARIKA\n 11234         ; Other_Alphabetic # Mn       KHOJKI SIGN ANUSVARA\n 11237         ; Other_Alphabetic # Mn       KHOJKI SIGN SHADDA\n 1123E         ; Other_Alphabetic # Mn       KHOJKI SIGN SUKUN\n+11241         ; Other_Alphabetic # Mn       KHOJKI VOWEL SIGN VOCALIC R\n 112DF         ; Other_Alphabetic # Mn       KHUDAWADI SIGN ANUSVARA\n 112E0..112E2  ; Other_Alphabetic # Mc   [3] KHUDAWADI VOWEL SIGN AA..KHUDAWADI VOWEL SIGN II\n 112E3..112E8  ; Other_Alphabetic # Mn   [6] KHUDAWADI VOWEL SIGN U..KHUDAWADI VOWEL SIGN AU\n@@ -807,6 +812,12 @@ FB1E          ; Other_Alphabetic # Mn       HEBREW POINT JUDEO-SPANISH VARIKA\n 11D96         ; Other_Alphabetic # Mc       GUNJALA GONDI SIGN VISARGA\n 11EF3..11EF4  ; Other_Alphabetic # Mn   [2] MAKASAR VOWEL SIGN I..MAKASAR VOWEL SIGN U\n 11EF5..11EF6  ; Other_Alphabetic # Mc   [2] MAKASAR VOWEL SIGN E..MAKASAR VOWEL SIGN O\n+11F00..11F01  ; Other_Alphabetic # Mn   [2] KAWI SIGN CANDRABINDU..KAWI SIGN ANUSVARA\n+11F03         ; Other_Alphabetic # Mc       KAWI SIGN VISARGA\n+11F34..11F35  ; Other_Alphabetic # Mc   [2] KAWI VOWEL SIGN AA..KAWI VOWEL SIGN ALTERNATE AA\n+11F36..11F3A  ; Other_Alphabetic # Mn   [5] KAWI VOWEL SIGN I..KAWI VOWEL SIGN VOCALIC R\n+11F3E..11F3F  ; Other_Alphabetic # Mc   [2] KAWI VOWEL SIGN E..KAWI VOWEL SIGN AI\n+11F40         ; Other_Alphabetic # Mn       KAWI VOWEL SIGN EU\n 16F4F         ; Other_Alphabetic # Mn       MIAO SIGN CONSONANT MODIFIER BAR\n 16F51..16F87  ; Other_Alphabetic # Mc  [55] MIAO SIGN ASPIRATION..MIAO VOWEL SIGN UI\n 16F8F..16F92  ; Other_Alphabetic # Mn   [4] MIAO TONE RIGHT..MIAO TONE BELOW\n@@ -817,12 +828,13 @@ FB1E          ; Other_Alphabetic # Mn       HEBREW POINT JUDEO-SPANISH VARIKA\n 1E01B..1E021  ; Other_Alphabetic # Mn   [7] COMBINING GLAGOLITIC LETTER SHTA..COMBINING GLAGOLITIC LETTER YATI\n 1E023..1E024  ; Other_Alphabetic # Mn   [2] COMBINING GLAGOLITIC LETTER YU..COMBINING GLAGOLITIC LETTER SMALL YUS\n 1E026..1E02A  ; Other_Alphabetic # Mn   [5] COMBINING GLAGOLITIC LETTER YO..COMBINING GLAGOLITIC LETTER FITA\n+1E08F         ; Other_Alphabetic # Mn       COMBINING CYRILLIC SMALL LETTER BYELORUSSIAN-UKRAINIAN I\n 1E947         ; Other_Alphabetic # Mn       ADLAM HAMZA\n 1F130..1F149  ; Other_Alphabetic # So  [26] SQUARED LATIN CAPITAL LETTER A..SQUARED LATIN CAPITAL LETTER Z\n 1F150..1F169  ; Other_Alphabetic # So  [26] NEGATIVE CIRCLED LATIN CAPITAL LETTER A..NEGATIVE CIRCLED LATIN CAPITAL LETTER Z\n 1F170..1F189  ; Other_Alphabetic # So  [26] NEGATIVE SQUARED LATIN CAPITAL LETTER A..NEGATIVE SQUARED LATIN CAPITAL LETTER Z\n \n-# Total code points: 1404\n+# Total code points: 1425\n \n # ================================================\n \n@@ -840,14 +852,15 @@ FA70..FAD9    ; Ideographic # Lo [106] CJK COMPATIBILITY IDEOGRAPH-FA70..CJK COM\n 18D00..18D08  ; Ideographic # Lo   [9] TANGUT IDEOGRAPH-18D00..TANGUT IDEOGRAPH-18D08\n 1B170..1B2FB  ; Ideographic # Lo [396] NUSHU CHARACTER-1B170..NUSHU CHARACTER-1B2FB\n 20000..2A6DF  ; Ideographic # Lo [42720] CJK UNIFIED IDEOGRAPH-20000..CJK UNIFIED IDEOGRAPH-2A6DF\n-2A700..2B738  ; Ideographic # Lo [4153] CJK UNIFIED IDEOGRAPH-2A700..CJK UNIFIED IDEOGRAPH-2B738\n+2A700..2B739  ; Ideographic # Lo [4154] CJK UNIFIED IDEOGRAPH-2A700..CJK UNIFIED IDEOGRAPH-2B739\n 2B740..2B81D  ; Ideographic # Lo [222] CJK UNIFIED IDEOGRAPH-2B740..CJK UNIFIED IDEOGRAPH-2B81D\n 2B820..2CEA1  ; Ideographic # Lo [5762] CJK UNIFIED IDEOGRAPH-2B820..CJK UNIFIED IDEOGRAPH-2CEA1\n 2CEB0..2EBE0  ; Ideographic # Lo [7473] CJK UNIFIED IDEOGRAPH-2CEB0..CJK UNIFIED IDEOGRAPH-2EBE0\n 2F800..2FA1D  ; Ideographic # Lo [542] CJK COMPATIBILITY IDEOGRAPH-2F800..CJK COMPATIBILITY IDEOGRAPH-2FA1D\n 30000..3134A  ; Ideographic # Lo [4939] CJK UNIFIED IDEOGRAPH-30000..CJK UNIFIED IDEOGRAPH-3134A\n+31350..323AF  ; Ideographic # Lo [4192] CJK UNIFIED IDEOGRAPH-31350..CJK UNIFIED IDEOGRAPH-323AF\n \n-# Total code points: 101661\n+# Total code points: 105854\n \n # ================================================\n \n@@ -1028,6 +1041,7 @@ FFE3          ; Diacritic # Sk       FULLWIDTH MACRON\n 10AE5..10AE6  ; Diacritic # Mn   [2] MANICHAEAN ABBREVIATION MARK ABOVE..MANICHAEAN ABBREVIATION MARK BELOW\n 10D22..10D23  ; Diacritic # Lo   [2] HANIFI ROHINGYA MARK SAKIN..HANIFI ROHINGYA MARK NA KHONNA\n 10D24..10D27  ; Diacritic # Mn   [4] HANIFI ROHINGYA SIGN HARBAHAY..HANIFI ROHINGYA SIGN TASSI\n+10EFD..10EFF  ; Diacritic # Mn   [3] ARABIC SMALL LOW WORD SAKTA..ARABIC SMALL LOW WORD MADDA\n 10F46..10F50  ; Diacritic # Mn  [11] SOGDIAN COMBINING DOT BELOW..SOGDIAN COMBINING STROKE BELOW\n 10F82..10F85  ; Diacritic # Mn   [4] OLD UYGHUR COMBINING DOT ABOVE..OLD UYGHUR COMBINING TWO DOTS BELOW\n 11046         ; Diacritic # Mn       BRAHMI VIRAMA\n@@ -1064,6 +1078,7 @@ FFE3          ; Diacritic # Sk       FULLWIDTH MACRON\n 11D42         ; Diacritic # Mn       MASARAM GONDI SIGN NUKTA\n 11D44..11D45  ; Diacritic # Mn   [2] MASARAM GONDI SIGN HALANTA..MASARAM GONDI VIRAMA\n 11D97         ; Diacritic # Mn       GUNJALA GONDI VIRAMA\n+13447..13455  ; Diacritic # Mn  [15] EGYPTIAN HIEROGLYPH MODIFIER DAMAGED AT TOP START..EGYPTIAN HIEROGLYPH MODIFIER DAMAGED\n 16AF0..16AF4  ; Diacritic # Mn   [5] BASSA VAH COMBINING HIGH TONE..BASSA VAH COMBINING HIGH-LOW TONE\n 16B30..16B36  ; Diacritic # Mn   [7] PAHAWH HMONG MARK CIM TUB..PAHAWH HMONG MARK CIM TAUM\n 16F8F..16F92  ; Diacritic # Mn   [4] MIAO TONE RIGHT..MIAO TONE BELOW\n@@ -1079,14 +1094,15 @@ FFE3          ; Diacritic # Sk       FULLWIDTH MACRON\n 1D17B..1D182  ; Diacritic # Mn   [8] MUSICAL SYMBOL COMBINING ACCENT..MUSICAL SYMBOL COMBINING LOURE\n 1D185..1D18B  ; Diacritic # Mn   [7] MUSICAL SYMBOL COMBINING DOIT..MUSICAL SYMBOL COMBINING TRIPLE TONGUE\n 1D1AA..1D1AD  ; Diacritic # Mn   [4] MUSICAL SYMBOL COMBINING DOWN BOW..MUSICAL SYMBOL COMBINING SNAP PIZZICATO\n+1E030..1E06D  ; Diacritic # Lm  [62] MODIFIER LETTER CYRILLIC SMALL A..MODIFIER LETTER CYRILLIC SMALL STRAIGHT U WITH STROKE\n 1E130..1E136  ; Diacritic # Mn   [7] NYIAKENG PUACHUE HMONG TONE-B..NYIAKENG PUACHUE HMONG TONE-D\n 1E2AE         ; Diacritic # Mn       TOTO SIGN RISING TONE\n 1E2EC..1E2EF  ; Diacritic # Mn   [4] WANCHO TONE TUP..WANCHO TONE KOINI\n 1E8D0..1E8D6  ; Diacritic # Mn   [7] MENDE KIKAKUI COMBINING NUMBER TEENS..MENDE KIKAKUI COMBINING NUMBER MILLIONS\n 1E944..1E946  ; Diacritic # Mn   [3] ADLAM ALIF LENGTHENER..ADLAM GEMINATION MARK\n 1E948..1E94A  ; Diacritic # Mn   [3] ADLAM CONSONANT MODIFIER..ADLAM NUKTA\n \n-# Total code points: 1064\n+# Total code points: 1144\n \n # ================================================\n \n@@ -1135,6 +1151,7 @@ FF70          ; Extender # Lm       HALFWIDTH KATAKANA-HIRAGANA PROLONGED SOUND\n 02E0..02E4    ; Other_Lowercase # Lm   [5] MODIFIER LETTER SMALL GAMMA..MODIFIER LETTER SMALL REVERSED GLOTTAL STOP\n 0345          ; Other_Lowercase # Mn       COMBINING GREEK YPOGEGRAMMENI\n 037A          ; Other_Lowercase # Lm       GREEK YPOGEGRAMMENI\n+10FC          ; Other_Lowercase # Lm       MODIFIER LETTER GEORGIAN NAR\n 1D2C..1D6A    ; Other_Lowercase # Lm  [63] MODIFIER LETTER CAPITAL A..GREEK SUBSCRIPT SMALL LETTER CHI\n 1D78          ; Other_Lowercase # Lm       MODIFIER LETTER CYRILLIC EN\n 1D9B..1DBF    ; Other_Lowercase # Lm  [37] MODIFIER LETTER SMALL TURNED ALPHA..MODIFIER LETTER SMALL THETA\n@@ -1146,14 +1163,17 @@ FF70          ; Extender # Lm       HALFWIDTH KATAKANA-HIRAGANA PROLONGED SOUND\n 2C7C..2C7D    ; Other_Lowercase # Lm   [2] LATIN SUBSCRIPT SMALL LETTER J..MODIFIER LETTER CAPITAL V\n A69C..A69D    ; Other_Lowercase # Lm   [2] MODIFIER LETTER CYRILLIC HARD SIGN..MODIFIER LETTER CYRILLIC SOFT SIGN\n A770          ; Other_Lowercase # Lm       MODIFIER LETTER US\n+A7F2..A7F4    ; Other_Lowercase # Lm   [3] MODIFIER LETTER CAPITAL C..MODIFIER LETTER CAPITAL Q\n A7F8..A7F9    ; Other_Lowercase # Lm   [2] MODIFIER LETTER CAPITAL H WITH STROKE..MODIFIER LETTER SMALL LIGATURE OE\n AB5C..AB5F    ; Other_Lowercase # Lm   [4] MODIFIER LETTER SMALL HENG..MODIFIER LETTER SMALL U WITH LEFT HOOK\n+AB69          ; Other_Lowercase # Lm       MODIFIER LETTER SMALL TURNED W\n 10780         ; Other_Lowercase # Lm       MODIFIER LETTER SMALL CAPITAL AA\n 10783..10785  ; Other_Lowercase # Lm   [3] MODIFIER LETTER SMALL AE..MODIFIER LETTER SMALL B WITH HOOK\n 10787..107B0  ; Other_Lowercase # Lm  [42] MODIFIER LETTER SMALL DZ DIGRAPH..MODIFIER LETTER SMALL V WITH RIGHT HOOK\n 107B2..107BA  ; Other_Lowercase # Lm   [9] MODIFIER LETTER SMALL CAPITAL Y..MODIFIER LETTER SMALL S WITH CURL\n+1E030..1E06D  ; Other_Lowercase # Lm  [62] MODIFIER LETTER CYRILLIC SMALL A..MODIFIER LETTER CYRILLIC SMALL STRAIGHT U WITH STROKE\n \n-# Total code points: 244\n+# Total code points: 311\n \n # ================================================\n \n@@ -1251,13 +1271,14 @@ FA21          ; Unified_Ideograph # Lo       CJK COMPATIBILITY IDEOGRAPH-FA21\n FA23..FA24    ; Unified_Ideograph # Lo   [2] CJK COMPATIBILITY IDEOGRAPH-FA23..CJK COMPATIBILITY IDEOGRAPH-FA24\n FA27..FA29    ; Unified_Ideograph # Lo   [3] CJK COMPATIBILITY IDEOGRAPH-FA27..CJK COMPATIBILITY IDEOGRAPH-FA29\n 20000..2A6DF  ; Unified_Ideograph # Lo [42720] CJK UNIFIED IDEOGRAPH-20000..CJK UNIFIED IDEOGRAPH-2A6DF\n-2A700..2B738  ; Unified_Ideograph # Lo [4153] CJK UNIFIED IDEOGRAPH-2A700..CJK UNIFIED IDEOGRAPH-2B738\n+2A700..2B739  ; Unified_Ideograph # Lo [4154] CJK UNIFIED IDEOGRAPH-2A700..CJK UNIFIED IDEOGRAPH-2B739\n 2B740..2B81D  ; Unified_Ideograph # Lo [222] CJK UNIFIED IDEOGRAPH-2B740..CJK UNIFIED IDEOGRAPH-2B81D\n 2B820..2CEA1  ; Unified_Ideograph # Lo [5762] CJK UNIFIED IDEOGRAPH-2B820..CJK UNIFIED IDEOGRAPH-2CEA1\n 2CEB0..2EBE0  ; Unified_Ideograph # Lo [7473] CJK UNIFIED IDEOGRAPH-2CEB0..CJK UNIFIED IDEOGRAPH-2EBE0\n 30000..3134A  ; Unified_Ideograph # Lo [4939] CJK UNIFIED IDEOGRAPH-30000..CJK UNIFIED IDEOGRAPH-3134A\n+31350..323AF  ; Unified_Ideograph # Lo [4192] CJK UNIFIED IDEOGRAPH-31350..CJK UNIFIED IDEOGRAPH-323AF\n \n-# Total code points: 92865\n+# Total code points: 97058\n \n # ================================================\n \n@@ -1323,8 +1344,10 @@ E0001         ; Deprecated # Cf       LANGUAGE TAG\n 1D65E..1D65F  ; Soft_Dotted # L&   [2] MATHEMATICAL SANS-SERIF BOLD ITALIC SMALL I..MATHEMATICAL SANS-SERIF BOLD ITALIC SMALL J\n 1D692..1D693  ; Soft_Dotted # L&   [2] MATHEMATICAL MONOSPACE SMALL I..MATHEMATICAL MONOSPACE SMALL J\n 1DF1A         ; Soft_Dotted # L&       LATIN SMALL LETTER I WITH STROKE AND RETROFLEX HOOK\n+1E04C..1E04D  ; Soft_Dotted # Lm   [2] MODIFIER LETTER CYRILLIC SMALL BYELORUSSIAN-UKRAINIAN I..MODIFIER LETTER CYRILLIC SMALL JE\n+1E068         ; Soft_Dotted # Lm       CYRILLIC SUBSCRIPT SMALL LETTER BYELORUSSIAN-UKRAINIAN I\n \n-# Total code points: 47\n+# Total code points: 50\n \n # ================================================\n \n@@ -1430,6 +1453,7 @@ FF61          ; Sentence_Terminal # Po       HALFWIDTH IDEOGRAPHIC FULL STOP\n 11A9B..11A9C  ; Sentence_Terminal # Po   [2] SOYOMBO MARK SHAD..SOYOMBO MARK DOUBLE SHAD\n 11C41..11C42  ; Sentence_Terminal # Po   [2] BHAIKSUKI DANDA..BHAIKSUKI DOUBLE DANDA\n 11EF7..11EF8  ; Sentence_Terminal # Po   [2] MAKASAR PASSIMBANG..MAKASAR END OF SECTION\n+11F43..11F44  ; Sentence_Terminal # Po   [2] KAWI DANDA..KAWI DOUBLE DANDA\n 16A6E..16A6F  ; Sentence_Terminal # Po   [2] MRO DANDA..MRO DOUBLE DANDA\n 16AF5         ; Sentence_Terminal # Po       BASSA VAH FULL STOP\n 16B37..16B38  ; Sentence_Terminal # Po   [2] PAHAWH HMONG SIGN VOS THOM..PAHAWH HMONG SIGN VOS TSHAB CEEB\n@@ -1438,7 +1462,7 @@ FF61          ; Sentence_Terminal # Po       HALFWIDTH IDEOGRAPHIC FULL STOP\n 1BC9F         ; Sentence_Terminal # Po       DUPLOYAN PUNCTUATION CHINOOK FULL STOP\n 1DA88         ; Sentence_Terminal # Po       SIGNWRITING FULL STOP\n \n-# Total code points: 152\n+# Total code points: 154\n \n # ================================================\n "}, {"sha": "50ef0c32b827b297537ecbee44423eacf6642c77", "filename": "contrib/unicode/README", "status": "modified", "additions": 26, "deletions": 8, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/contrib%2Funicode%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/contrib%2Funicode%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Funicode%2FREADME?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -1,17 +1,20 @@\n This directory contains a mechanism for GCC to have its own internal\n implementation of wcwidth functionality (cpp_wcwidth () in libcpp/charset.c),\n as well as a mechanism to update the information about codepoints permitted in\n-identifiers, which is encoded in libcpp/ucnid.h.\n+identifiers, which is encoded in libcpp/ucnid.h, and mapping between Unicode\n+names and codepoints, which is encoded in libcpp/uname2c.h.\n \n The idea is to produce the necessary lookup tables\n-(../../libcpp/{ucnid.h,generated_cpp_wcwidth.h}) in a reproducible way, starting\n-from the following files that are distributed by the Unicode Consortium:\n+(../../libcpp/{ucnid.h,uname2c.h,generated_cpp_wcwidth.h}) in a reproducible\n+way, starting from the following files that are distributed by the Unicode\n+Consortium:\n \n ftp://ftp.unicode.org/Public/UNIDATA/UnicodeData.txt\n ftp://ftp.unicode.org/Public/UNIDATA/EastAsianWidth.txt\n ftp://ftp.unicode.org/Public/UNIDATA/PropList.txt\n ftp://ftp.unicode.org/Public/UNIDATA/DerivedNormalizationProps.txt\n ftp://ftp.unicode.org/Public/UNIDATA/DerivedCoreProperties.txt\n+ftp://ftp.unicode.org/Public/UNIDATA/NameAliases.txt\n \n These files have been added to source control in this directory;\n please see unicode-license.txt for the relevant copyright information.\n@@ -27,7 +30,7 @@ localedata/unicode-gen/unicode_utils.py\n localedata/unicode-gen/utf8_gen.py\n \n And the most recent versions added to GCC are from glibc git commit:\n-f6032247061fb37d59565f2e9667e242c8a98e76\n+4c721f24fc190d1dc935eb0bab283de7cf13182e\n \n The script gen_wcwidth.py found here contains the GCC-specific code to\n map glibc's output to the lookup tables we require.  This script should not need\n@@ -44,12 +47,27 @@ The procedure to update GCC's Unicode support is the following:\n \n 3.  Run ./gen_wcwidth.py X.Y > ../../libcpp/generated_cpp_wcwidth.h\n     (where X.Y is the version of the Unicode standard corresponding to the\n-    Unicode data files being used, most recently, 14.0.0).\n+    Unicode data files being used, most recently, 15.0.0).\n \n-4.  Compile makeucnid, e.g. with:\n-      gcc -O2 ../../libcpp/makeucnid.cc -o ../../libcpp/makeucnid\n+4.  Update Unicode Copyright years in libcpp/makeucnid.cc and in\n+    libcpp/makeuname2c.cc up to the year in which the Unicode\n+    standard has been released.\n \n-5.  Generate ucnid.h as follows:\n+5.  Compile makeucnid, e.g. with:\n+      g++ -O2 ../../libcpp/makeucnid.cc -o ../../libcpp/makeucnid\n+\n+6.  Generate ucnid.h as follows:\n       ../../libcpp/makeucnid ../../libcpp/ucnid.tab UnicodeData.txt \\\n \tDerivedNormalizationProps.txt DerivedCoreProperties.txt \\\n \t> ../../libcpp/ucnid.h\n+\n+7.  Read the corresponding Unicode's standard and update correspondingly\n+    generated_ranges table in libcpp/makeuname2c.cc (in Unicode 15 all\n+    the needed information was in Table 4-8).\n+\n+8.  Compile makeuname2c, e.g. with:\n+      g++ -O2 ../../libcpp/makeuname2c.cc -o ../../libcpp/makeuname2c\n+\n+9:  Generate uname2c.h as follows:\n+      ../../libcpp/makeuname2c UnicodeData.txt NameAliases.txt \\\n+\t> ../../libcpp/uname2c.h"}, {"sha": "ea963a7162ce6e913a9f5a98e940b52181ac68dd", "filename": "contrib/unicode/UnicodeData.txt", "status": "modified", "additions": 299, "deletions": 1, "changes": 300, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/contrib%2Funicode%2FUnicodeData.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/contrib%2Funicode%2FUnicodeData.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Funicode%2FUnicodeData.txt?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -2975,6 +2975,7 @@\n 0CEF;KANNADA DIGIT NINE;Nd;0;L;;9;9;9;N;;;;;\n 0CF1;KANNADA SIGN JIHVAMULIYA;Lo;0;L;;;;;N;;;;;\n 0CF2;KANNADA SIGN UPADHMANIYA;Lo;0;L;;;;;N;;;;;\n+0CF3;KANNADA SIGN COMBINING ANUSVARA ABOVE RIGHT;Mc;0;L;;;;;N;;;;;\n 0D00;MALAYALAM SIGN COMBINING ANUSVARA ABOVE;Mn;0;NSM;;;;;N;;;;;\n 0D01;MALAYALAM SIGN CANDRABINDU;Mn;0;NSM;;;;;N;;;;;\n 0D02;MALAYALAM SIGN ANUSVARA;Mc;0;L;;;;;N;;;;;\n@@ -3339,6 +3340,7 @@\n 0ECB;LAO TONE MAI CATAWA;Mn;122;NSM;;;;;N;;;;;\n 0ECC;LAO CANCELLATION MARK;Mn;0;NSM;;;;;N;;;;;\n 0ECD;LAO NIGGAHITA;Mn;0;NSM;;;;;N;;;;;\n+0ECE;LAO YAMAKKAN;Mn;0;NSM;;;;;N;;;;;\n 0ED0;LAO DIGIT ZERO;Nd;0;L;;0;0;0;N;;;;;\n 0ED1;LAO DIGIT ONE;Nd;0;L;;1;1;1;N;;;;;\n 0ED2;LAO DIGIT TWO;Nd;0;L;;2;2;2;N;;;;;\n@@ -19393,6 +19395,9 @@ FFFD;REPLACEMENT CHARACTER;So;0;ON;;;;;N;;;;;\n 10EAD;YEZIDI HYPHENATION MARK;Pd;0;R;;;;;N;;;;;\n 10EB0;YEZIDI LETTER LAM WITH DOT ABOVE;Lo;0;R;;;;;N;;;;;\n 10EB1;YEZIDI LETTER YOT WITH CIRCUMFLEX ABOVE;Lo;0;R;;;;;N;;;;;\n+10EFD;ARABIC SMALL LOW WORD SAKTA;Mn;220;NSM;;;;;N;;;;;\n+10EFE;ARABIC SMALL LOW WORD QASR;Mn;220;NSM;;;;;N;;;;;\n+10EFF;ARABIC SMALL LOW WORD MADDA;Mn;220;NSM;;;;;N;;;;;\n 10F00;OLD SOGDIAN LETTER ALEPH;Lo;0;R;;;;;N;;;;;\n 10F01;OLD SOGDIAN LETTER FINAL ALEPH;Lo;0;R;;;;;N;;;;;\n 10F02;OLD SOGDIAN LETTER BETH;Lo;0;R;;;;;N;;;;;\n@@ -20058,6 +20063,9 @@ FFFD;REPLACEMENT CHARACTER;So;0;ON;;;;;N;;;;;\n 1123C;KHOJKI DOUBLE SECTION MARK;Po;0;L;;;;;N;;;;;\n 1123D;KHOJKI ABBREVIATION SIGN;Po;0;L;;;;;N;;;;;\n 1123E;KHOJKI SIGN SUKUN;Mn;0;NSM;;;;;N;;;;;\n+1123F;KHOJKI LETTER QA;Lo;0;L;;;;;N;;;;;\n+11240;KHOJKI LETTER SHORT I;Lo;0;L;;;;;N;;;;;\n+11241;KHOJKI VOWEL SIGN VOCALIC R;Mn;0;NSM;;;;;N;;;;;\n 11280;MULTANI LETTER A;Lo;0;L;;;;;N;;;;;\n 11281;MULTANI LETTER I;Lo;0;L;;;;;N;;;;;\n 11282;MULTANI LETTER U;Lo;0;L;;;;;N;;;;;\n@@ -21256,6 +21264,16 @@ FFFD;REPLACEMENT CHARACTER;So;0;ON;;;;;N;;;;;\n 11AF6;PAU CIN HAU LOW-FALLING TONE LONG FINAL;Lo;0;L;;;;;N;;;;;\n 11AF7;PAU CIN HAU LOW-FALLING TONE FINAL;Lo;0;L;;;;;N;;;;;\n 11AF8;PAU CIN HAU GLOTTAL STOP FINAL;Lo;0;L;;;;;N;;;;;\n+11B00;DEVANAGARI HEAD MARK;Po;0;L;;;;;N;;;;;\n+11B01;DEVANAGARI HEAD MARK WITH HEADSTROKE;Po;0;L;;;;;N;;;;;\n+11B02;DEVANAGARI SIGN BHALE;Po;0;L;;;;;N;;;;;\n+11B03;DEVANAGARI SIGN BHALE WITH HOOK;Po;0;L;;;;;N;;;;;\n+11B04;DEVANAGARI SIGN EXTENDED BHALE;Po;0;L;;;;;N;;;;;\n+11B05;DEVANAGARI SIGN EXTENDED BHALE WITH HOOK;Po;0;L;;;;;N;;;;;\n+11B06;DEVANAGARI SIGN WESTERN FIVE-LIKE BHALE;Po;0;L;;;;;N;;;;;\n+11B07;DEVANAGARI SIGN WESTERN NINE-LIKE BHALE;Po;0;L;;;;;N;;;;;\n+11B08;DEVANAGARI SIGN REVERSED NINE-LIKE BHALE;Po;0;L;;;;;N;;;;;\n+11B09;DEVANAGARI SIGN MINDU;Po;0;L;;;;;N;;;;;\n 11C00;BHAIKSUKI LETTER A;Lo;0;L;;;;;N;;;;;\n 11C01;BHAIKSUKI LETTER AA;Lo;0;L;;;;;N;;;;;\n 11C02;BHAIKSUKI LETTER I;Lo;0;L;;;;;N;;;;;\n@@ -21584,6 +21602,92 @@ FFFD;REPLACEMENT CHARACTER;So;0;ON;;;;;N;;;;;\n 11EF6;MAKASAR VOWEL SIGN O;Mc;0;L;;;;;N;;;;;\n 11EF7;MAKASAR PASSIMBANG;Po;0;L;;;;;N;;;;;\n 11EF8;MAKASAR END OF SECTION;Po;0;L;;;;;N;;;;;\n+11F00;KAWI SIGN CANDRABINDU;Mn;0;NSM;;;;;N;;;;;\n+11F01;KAWI SIGN ANUSVARA;Mn;0;NSM;;;;;N;;;;;\n+11F02;KAWI SIGN REPHA;Lo;0;L;;;;;N;;;;;\n+11F03;KAWI SIGN VISARGA;Mc;0;L;;;;;N;;;;;\n+11F04;KAWI LETTER A;Lo;0;L;;;;;N;;;;;\n+11F05;KAWI LETTER AA;Lo;0;L;;;;;N;;;;;\n+11F06;KAWI LETTER I;Lo;0;L;;;;;N;;;;;\n+11F07;KAWI LETTER II;Lo;0;L;;;;;N;;;;;\n+11F08;KAWI LETTER U;Lo;0;L;;;;;N;;;;;\n+11F09;KAWI LETTER UU;Lo;0;L;;;;;N;;;;;\n+11F0A;KAWI LETTER VOCALIC R;Lo;0;L;;;;;N;;;;;\n+11F0B;KAWI LETTER VOCALIC RR;Lo;0;L;;;;;N;;;;;\n+11F0C;KAWI LETTER VOCALIC L;Lo;0;L;;;;;N;;;;;\n+11F0D;KAWI LETTER VOCALIC LL;Lo;0;L;;;;;N;;;;;\n+11F0E;KAWI LETTER E;Lo;0;L;;;;;N;;;;;\n+11F0F;KAWI LETTER AI;Lo;0;L;;;;;N;;;;;\n+11F10;KAWI LETTER O;Lo;0;L;;;;;N;;;;;\n+11F12;KAWI LETTER KA;Lo;0;L;;;;;N;;;;;\n+11F13;KAWI LETTER KHA;Lo;0;L;;;;;N;;;;;\n+11F14;KAWI LETTER GA;Lo;0;L;;;;;N;;;;;\n+11F15;KAWI LETTER GHA;Lo;0;L;;;;;N;;;;;\n+11F16;KAWI LETTER NGA;Lo;0;L;;;;;N;;;;;\n+11F17;KAWI LETTER CA;Lo;0;L;;;;;N;;;;;\n+11F18;KAWI LETTER CHA;Lo;0;L;;;;;N;;;;;\n+11F19;KAWI LETTER JA;Lo;0;L;;;;;N;;;;;\n+11F1A;KAWI LETTER JHA;Lo;0;L;;;;;N;;;;;\n+11F1B;KAWI LETTER NYA;Lo;0;L;;;;;N;;;;;\n+11F1C;KAWI LETTER TTA;Lo;0;L;;;;;N;;;;;\n+11F1D;KAWI LETTER TTHA;Lo;0;L;;;;;N;;;;;\n+11F1E;KAWI LETTER DDA;Lo;0;L;;;;;N;;;;;\n+11F1F;KAWI LETTER DDHA;Lo;0;L;;;;;N;;;;;\n+11F20;KAWI LETTER NNA;Lo;0;L;;;;;N;;;;;\n+11F21;KAWI LETTER TA;Lo;0;L;;;;;N;;;;;\n+11F22;KAWI LETTER THA;Lo;0;L;;;;;N;;;;;\n+11F23;KAWI LETTER DA;Lo;0;L;;;;;N;;;;;\n+11F24;KAWI LETTER DHA;Lo;0;L;;;;;N;;;;;\n+11F25;KAWI LETTER NA;Lo;0;L;;;;;N;;;;;\n+11F26;KAWI LETTER PA;Lo;0;L;;;;;N;;;;;\n+11F27;KAWI LETTER PHA;Lo;0;L;;;;;N;;;;;\n+11F28;KAWI LETTER BA;Lo;0;L;;;;;N;;;;;\n+11F29;KAWI LETTER BHA;Lo;0;L;;;;;N;;;;;\n+11F2A;KAWI LETTER MA;Lo;0;L;;;;;N;;;;;\n+11F2B;KAWI LETTER YA;Lo;0;L;;;;;N;;;;;\n+11F2C;KAWI LETTER RA;Lo;0;L;;;;;N;;;;;\n+11F2D;KAWI LETTER LA;Lo;0;L;;;;;N;;;;;\n+11F2E;KAWI LETTER WA;Lo;0;L;;;;;N;;;;;\n+11F2F;KAWI LETTER SHA;Lo;0;L;;;;;N;;;;;\n+11F30;KAWI LETTER SSA;Lo;0;L;;;;;N;;;;;\n+11F31;KAWI LETTER SA;Lo;0;L;;;;;N;;;;;\n+11F32;KAWI LETTER HA;Lo;0;L;;;;;N;;;;;\n+11F33;KAWI LETTER JNYA;Lo;0;L;;;;;N;;;;;\n+11F34;KAWI VOWEL SIGN AA;Mc;0;L;;;;;N;;;;;\n+11F35;KAWI VOWEL SIGN ALTERNATE AA;Mc;0;L;;;;;N;;;;;\n+11F36;KAWI VOWEL SIGN I;Mn;0;NSM;;;;;N;;;;;\n+11F37;KAWI VOWEL SIGN II;Mn;0;NSM;;;;;N;;;;;\n+11F38;KAWI VOWEL SIGN U;Mn;0;NSM;;;;;N;;;;;\n+11F39;KAWI VOWEL SIGN UU;Mn;0;NSM;;;;;N;;;;;\n+11F3A;KAWI VOWEL SIGN VOCALIC R;Mn;0;NSM;;;;;N;;;;;\n+11F3E;KAWI VOWEL SIGN E;Mc;0;L;;;;;N;;;;;\n+11F3F;KAWI VOWEL SIGN AI;Mc;0;L;;;;;N;;;;;\n+11F40;KAWI VOWEL SIGN EU;Mn;0;NSM;;;;;N;;;;;\n+11F41;KAWI SIGN KILLER;Mc;9;L;;;;;N;;;;;\n+11F42;KAWI CONJOINER;Mn;9;NSM;;;;;N;;;;;\n+11F43;KAWI DANDA;Po;0;L;;;;;N;;;;;\n+11F44;KAWI DOUBLE DANDA;Po;0;L;;;;;N;;;;;\n+11F45;KAWI PUNCTUATION SECTION MARKER;Po;0;L;;;;;N;;;;;\n+11F46;KAWI PUNCTUATION ALTERNATE SECTION MARKER;Po;0;L;;;;;N;;;;;\n+11F47;KAWI PUNCTUATION FLOWER;Po;0;L;;;;;N;;;;;\n+11F48;KAWI PUNCTUATION SPACE FILLER;Po;0;L;;;;;N;;;;;\n+11F49;KAWI PUNCTUATION DOT;Po;0;L;;;;;N;;;;;\n+11F4A;KAWI PUNCTUATION DOUBLE DOT;Po;0;L;;;;;N;;;;;\n+11F4B;KAWI PUNCTUATION TRIPLE DOT;Po;0;L;;;;;N;;;;;\n+11F4C;KAWI PUNCTUATION CIRCLE;Po;0;L;;;;;N;;;;;\n+11F4D;KAWI PUNCTUATION FILLED CIRCLE;Po;0;L;;;;;N;;;;;\n+11F4E;KAWI PUNCTUATION SPIRAL;Po;0;L;;;;;N;;;;;\n+11F4F;KAWI PUNCTUATION CLOSING SPIRAL;Po;0;L;;;;;N;;;;;\n+11F50;KAWI DIGIT ZERO;Nd;0;L;;0;0;0;N;;;;;\n+11F51;KAWI DIGIT ONE;Nd;0;L;;1;1;1;N;;;;;\n+11F52;KAWI DIGIT TWO;Nd;0;L;;2;2;2;N;;;;;\n+11F53;KAWI DIGIT THREE;Nd;0;L;;3;3;3;N;;;;;\n+11F54;KAWI DIGIT FOUR;Nd;0;L;;4;4;4;N;;;;;\n+11F55;KAWI DIGIT FIVE;Nd;0;L;;5;5;5;N;;;;;\n+11F56;KAWI DIGIT SIX;Nd;0;L;;6;6;6;N;;;;;\n+11F57;KAWI DIGIT SEVEN;Nd;0;L;;7;7;7;N;;;;;\n+11F58;KAWI DIGIT EIGHT;Nd;0;L;;8;8;8;N;;;;;\n+11F59;KAWI DIGIT NINE;Nd;0;L;;9;9;9;N;;;;;\n 11FB0;LISU LETTER YHA;Lo;0;L;;;;;N;;;;;\n 11FC0;TAMIL FRACTION ONE THREE-HUNDRED-AND-TWENTIETH;No;0;L;;;;1/320;N;;;;;\n 11FC1;TAMIL FRACTION ONE ONE-HUNDRED-AND-SIXTIETH;No;0;L;;;;1/160;N;;;;;\n@@ -24040,6 +24144,7 @@ FFFD;REPLACEMENT CHARACTER;So;0;ON;;;;;N;;;;;\n 1342C;EGYPTIAN HIEROGLYPH AA030;Lo;0;L;;;;;N;;;;;\n 1342D;EGYPTIAN HIEROGLYPH AA031;Lo;0;L;;;;;N;;;;;\n 1342E;EGYPTIAN HIEROGLYPH AA032;Lo;0;L;;;;;N;;;;;\n+1342F;EGYPTIAN HIEROGLYPH V011D;Lo;0;L;;;;;N;;;;;\n 13430;EGYPTIAN HIEROGLYPH VERTICAL JOINER;Cf;0;L;;;;;N;;;;;\n 13431;EGYPTIAN HIEROGLYPH HORIZONTAL JOINER;Cf;0;L;;;;;N;;;;;\n 13432;EGYPTIAN HIEROGLYPH INSERT AT TOP START;Cf;0;L;;;;;N;;;;;\n@@ -24049,6 +24154,35 @@ FFFD;REPLACEMENT CHARACTER;So;0;ON;;;;;N;;;;;\n 13436;EGYPTIAN HIEROGLYPH OVERLAY MIDDLE;Cf;0;L;;;;;N;;;;;\n 13437;EGYPTIAN HIEROGLYPH BEGIN SEGMENT;Cf;0;L;;;;;N;;;;;\n 13438;EGYPTIAN HIEROGLYPH END SEGMENT;Cf;0;L;;;;;N;;;;;\n+13439;EGYPTIAN HIEROGLYPH INSERT AT MIDDLE;Cf;0;L;;;;;N;;;;;\n+1343A;EGYPTIAN HIEROGLYPH INSERT AT TOP;Cf;0;L;;;;;N;;;;;\n+1343B;EGYPTIAN HIEROGLYPH INSERT AT BOTTOM;Cf;0;L;;;;;N;;;;;\n+1343C;EGYPTIAN HIEROGLYPH BEGIN ENCLOSURE;Cf;0;L;;;;;N;;;;;\n+1343D;EGYPTIAN HIEROGLYPH END ENCLOSURE;Cf;0;L;;;;;N;;;;;\n+1343E;EGYPTIAN HIEROGLYPH BEGIN WALLED ENCLOSURE;Cf;0;L;;;;;N;;;;;\n+1343F;EGYPTIAN HIEROGLYPH END WALLED ENCLOSURE;Cf;0;L;;;;;N;;;;;\n+13440;EGYPTIAN HIEROGLYPH MIRROR HORIZONTALLY;Mn;0;NSM;;;;;N;;;;;\n+13441;EGYPTIAN HIEROGLYPH FULL BLANK;Lo;0;L;;;;;N;;;;;\n+13442;EGYPTIAN HIEROGLYPH HALF BLANK;Lo;0;L;;;;;N;;;;;\n+13443;EGYPTIAN HIEROGLYPH LOST SIGN;Lo;0;L;;;;;N;;;;;\n+13444;EGYPTIAN HIEROGLYPH HALF LOST SIGN;Lo;0;L;;;;;N;;;;;\n+13445;EGYPTIAN HIEROGLYPH TALL LOST SIGN;Lo;0;L;;;;;N;;;;;\n+13446;EGYPTIAN HIEROGLYPH WIDE LOST SIGN;Lo;0;L;;;;;N;;;;;\n+13447;EGYPTIAN HIEROGLYPH MODIFIER DAMAGED AT TOP START;Mn;0;NSM;;;;;N;;;;;\n+13448;EGYPTIAN HIEROGLYPH MODIFIER DAMAGED AT BOTTOM START;Mn;0;NSM;;;;;N;;;;;\n+13449;EGYPTIAN HIEROGLYPH MODIFIER DAMAGED AT START;Mn;0;NSM;;;;;N;;;;;\n+1344A;EGYPTIAN HIEROGLYPH MODIFIER DAMAGED AT TOP END;Mn;0;NSM;;;;;N;;;;;\n+1344B;EGYPTIAN HIEROGLYPH MODIFIER DAMAGED AT TOP;Mn;0;NSM;;;;;N;;;;;\n+1344C;EGYPTIAN HIEROGLYPH MODIFIER DAMAGED AT BOTTOM START AND TOP END;Mn;0;NSM;;;;;N;;;;;\n+1344D;EGYPTIAN HIEROGLYPH MODIFIER DAMAGED AT START AND TOP;Mn;0;NSM;;;;;N;;;;;\n+1344E;EGYPTIAN HIEROGLYPH MODIFIER DAMAGED AT BOTTOM END;Mn;0;NSM;;;;;N;;;;;\n+1344F;EGYPTIAN HIEROGLYPH MODIFIER DAMAGED AT TOP START AND BOTTOM END;Mn;0;NSM;;;;;N;;;;;\n+13450;EGYPTIAN HIEROGLYPH MODIFIER DAMAGED AT BOTTOM;Mn;0;NSM;;;;;N;;;;;\n+13451;EGYPTIAN HIEROGLYPH MODIFIER DAMAGED AT START AND BOTTOM;Mn;0;NSM;;;;;N;;;;;\n+13452;EGYPTIAN HIEROGLYPH MODIFIER DAMAGED AT END;Mn;0;NSM;;;;;N;;;;;\n+13453;EGYPTIAN HIEROGLYPH MODIFIER DAMAGED AT TOP AND END;Mn;0;NSM;;;;;N;;;;;\n+13454;EGYPTIAN HIEROGLYPH MODIFIER DAMAGED AT BOTTOM AND END;Mn;0;NSM;;;;;N;;;;;\n+13455;EGYPTIAN HIEROGLYPH MODIFIER DAMAGED;Mn;0;NSM;;;;;N;;;;;\n 14400;ANATOLIAN HIEROGLYPH A001;Lo;0;L;;;;;N;;;;;\n 14401;ANATOLIAN HIEROGLYPH A002;Lo;0;L;;;;;N;;;;;\n 14402;ANATOLIAN HIEROGLYPH A003;Lo;0;L;;;;;N;;;;;\n@@ -27289,9 +27423,11 @@ FFFD;REPLACEMENT CHARACTER;So;0;ON;;;;;N;;;;;\n 1B120;KATAKANA LETTER ARCHAIC YI;Lo;0;L;;;;;N;;;;;\n 1B121;KATAKANA LETTER ARCHAIC YE;Lo;0;L;;;;;N;;;;;\n 1B122;KATAKANA LETTER ARCHAIC WU;Lo;0;L;;;;;N;;;;;\n+1B132;HIRAGANA LETTER SMALL KO;Lo;0;L;;;;;N;;;;;\n 1B150;HIRAGANA LETTER SMALL WI;Lo;0;L;;;;;N;;;;;\n 1B151;HIRAGANA LETTER SMALL WE;Lo;0;L;;;;;N;;;;;\n 1B152;HIRAGANA LETTER SMALL WO;Lo;0;L;;;;;N;;;;;\n+1B155;KATAKANA LETTER SMALL KO;Lo;0;L;;;;;N;;;;;\n 1B164;KATAKANA LETTER SMALL WI;Lo;0;L;;;;;N;;;;;\n 1B165;KATAKANA LETTER SMALL WE;Lo;0;L;;;;;N;;;;;\n 1B166;KATAKANA LETTER SMALL WO;Lo;0;L;;;;;N;;;;;\n@@ -28573,6 +28709,26 @@ FFFD;REPLACEMENT CHARACTER;So;0;ON;;;;;N;;;;;\n 1D243;COMBINING GREEK MUSICAL TETRASEME;Mn;230;NSM;;;;;N;;;;;\n 1D244;COMBINING GREEK MUSICAL PENTASEME;Mn;230;NSM;;;;;N;;;;;\n 1D245;GREEK MUSICAL LEIMMA;So;0;ON;;;;;N;;;;;\n+1D2C0;KAKTOVIK NUMERAL ZERO;No;0;L;;;;0;N;;;;;\n+1D2C1;KAKTOVIK NUMERAL ONE;No;0;L;;;;1;N;;;;;\n+1D2C2;KAKTOVIK NUMERAL TWO;No;0;L;;;;2;N;;;;;\n+1D2C3;KAKTOVIK NUMERAL THREE;No;0;L;;;;3;N;;;;;\n+1D2C4;KAKTOVIK NUMERAL FOUR;No;0;L;;;;4;N;;;;;\n+1D2C5;KAKTOVIK NUMERAL FIVE;No;0;L;;;;5;N;;;;;\n+1D2C6;KAKTOVIK NUMERAL SIX;No;0;L;;;;6;N;;;;;\n+1D2C7;KAKTOVIK NUMERAL SEVEN;No;0;L;;;;7;N;;;;;\n+1D2C8;KAKTOVIK NUMERAL EIGHT;No;0;L;;;;8;N;;;;;\n+1D2C9;KAKTOVIK NUMERAL NINE;No;0;L;;;;9;N;;;;;\n+1D2CA;KAKTOVIK NUMERAL TEN;No;0;L;;;;10;N;;;;;\n+1D2CB;KAKTOVIK NUMERAL ELEVEN;No;0;L;;;;11;N;;;;;\n+1D2CC;KAKTOVIK NUMERAL TWELVE;No;0;L;;;;12;N;;;;;\n+1D2CD;KAKTOVIK NUMERAL THIRTEEN;No;0;L;;;;13;N;;;;;\n+1D2CE;KAKTOVIK NUMERAL FOURTEEN;No;0;L;;;;14;N;;;;;\n+1D2CF;KAKTOVIK NUMERAL FIFTEEN;No;0;L;;;;15;N;;;;;\n+1D2D0;KAKTOVIK NUMERAL SIXTEEN;No;0;L;;;;16;N;;;;;\n+1D2D1;KAKTOVIK NUMERAL SEVENTEEN;No;0;L;;;;17;N;;;;;\n+1D2D2;KAKTOVIK NUMERAL EIGHTEEN;No;0;L;;;;18;N;;;;;\n+1D2D3;KAKTOVIK NUMERAL NINETEEN;No;0;L;;;;19;N;;;;;\n 1D2E0;MAYAN NUMERAL ZERO;No;0;L;;;;0;N;;;;;\n 1D2E1;MAYAN NUMERAL ONE;No;0;L;;;;1;N;;;;;\n 1D2E2;MAYAN NUMERAL TWO;No;0;L;;;;2;N;;;;;\n@@ -30404,6 +30560,12 @@ FFFD;REPLACEMENT CHARACTER;So;0;ON;;;;;N;;;;;\n 1DF1C;LATIN SMALL LETTER TESH DIGRAPH WITH RETROFLEX HOOK;Ll;0;L;;;;;N;;;;;\n 1DF1D;LATIN SMALL LETTER C WITH RETROFLEX HOOK;Ll;0;L;;;;;N;;;;;\n 1DF1E;LATIN SMALL LETTER S WITH CURL;Ll;0;L;;;;;N;;;;;\n+1DF25;LATIN SMALL LETTER D WITH MID-HEIGHT LEFT HOOK;Ll;0;L;;;;;N;;;;;\n+1DF26;LATIN SMALL LETTER L WITH MID-HEIGHT LEFT HOOK;Ll;0;L;;;;;N;;;;;\n+1DF27;LATIN SMALL LETTER N WITH MID-HEIGHT LEFT HOOK;Ll;0;L;;;;;N;;;;;\n+1DF28;LATIN SMALL LETTER R WITH MID-HEIGHT LEFT HOOK;Ll;0;L;;;;;N;;;;;\n+1DF29;LATIN SMALL LETTER S WITH MID-HEIGHT LEFT HOOK;Ll;0;L;;;;;N;;;;;\n+1DF2A;LATIN SMALL LETTER T WITH MID-HEIGHT LEFT HOOK;Ll;0;L;;;;;N;;;;;\n 1E000;COMBINING GLAGOLITIC LETTER AZU;Mn;230;NSM;;;;;N;;;;;\n 1E001;COMBINING GLAGOLITIC LETTER BUKY;Mn;230;NSM;;;;;N;;;;;\n 1E002;COMBINING GLAGOLITIC LETTER VEDE;Mn;230;NSM;;;;;N;;;;;\n@@ -30442,6 +30604,69 @@ FFFD;REPLACEMENT CHARACTER;So;0;ON;;;;;N;;;;;\n 1E028;COMBINING GLAGOLITIC LETTER BIG YUS;Mn;230;NSM;;;;;N;;;;;\n 1E029;COMBINING GLAGOLITIC LETTER IOTATED BIG YUS;Mn;230;NSM;;;;;N;;;;;\n 1E02A;COMBINING GLAGOLITIC LETTER FITA;Mn;230;NSM;;;;;N;;;;;\n+1E030;MODIFIER LETTER CYRILLIC SMALL A;Lm;0;L;<super> 0430;;;;N;;;;;\n+1E031;MODIFIER LETTER CYRILLIC SMALL BE;Lm;0;L;<super> 0431;;;;N;;;;;\n+1E032;MODIFIER LETTER CYRILLIC SMALL VE;Lm;0;L;<super> 0432;;;;N;;;;;\n+1E033;MODIFIER LETTER CYRILLIC SMALL GHE;Lm;0;L;<super> 0433;;;;N;;;;;\n+1E034;MODIFIER LETTER CYRILLIC SMALL DE;Lm;0;L;<super> 0434;;;;N;;;;;\n+1E035;MODIFIER LETTER CYRILLIC SMALL IE;Lm;0;L;<super> 0435;;;;N;;;;;\n+1E036;MODIFIER LETTER CYRILLIC SMALL ZHE;Lm;0;L;<super> 0436;;;;N;;;;;\n+1E037;MODIFIER LETTER CYRILLIC SMALL ZE;Lm;0;L;<super> 0437;;;;N;;;;;\n+1E038;MODIFIER LETTER CYRILLIC SMALL I;Lm;0;L;<super> 0438;;;;N;;;;;\n+1E039;MODIFIER LETTER CYRILLIC SMALL KA;Lm;0;L;<super> 043A;;;;N;;;;;\n+1E03A;MODIFIER LETTER CYRILLIC SMALL EL;Lm;0;L;<super> 043B;;;;N;;;;;\n+1E03B;MODIFIER LETTER CYRILLIC SMALL EM;Lm;0;L;<super> 043C;;;;N;;;;;\n+1E03C;MODIFIER LETTER CYRILLIC SMALL O;Lm;0;L;<super> 043E;;;;N;;;;;\n+1E03D;MODIFIER LETTER CYRILLIC SMALL PE;Lm;0;L;<super> 043F;;;;N;;;;;\n+1E03E;MODIFIER LETTER CYRILLIC SMALL ER;Lm;0;L;<super> 0440;;;;N;;;;;\n+1E03F;MODIFIER LETTER CYRILLIC SMALL ES;Lm;0;L;<super> 0441;;;;N;;;;;\n+1E040;MODIFIER LETTER CYRILLIC SMALL TE;Lm;0;L;<super> 0442;;;;N;;;;;\n+1E041;MODIFIER LETTER CYRILLIC SMALL U;Lm;0;L;<super> 0443;;;;N;;;;;\n+1E042;MODIFIER LETTER CYRILLIC SMALL EF;Lm;0;L;<super> 0444;;;;N;;;;;\n+1E043;MODIFIER LETTER CYRILLIC SMALL HA;Lm;0;L;<super> 0445;;;;N;;;;;\n+1E044;MODIFIER LETTER CYRILLIC SMALL TSE;Lm;0;L;<super> 0446;;;;N;;;;;\n+1E045;MODIFIER LETTER CYRILLIC SMALL CHE;Lm;0;L;<super> 0447;;;;N;;;;;\n+1E046;MODIFIER LETTER CYRILLIC SMALL SHA;Lm;0;L;<super> 0448;;;;N;;;;;\n+1E047;MODIFIER LETTER CYRILLIC SMALL YERU;Lm;0;L;<super> 044B;;;;N;;;;;\n+1E048;MODIFIER LETTER CYRILLIC SMALL E;Lm;0;L;<super> 044D;;;;N;;;;;\n+1E049;MODIFIER LETTER CYRILLIC SMALL YU;Lm;0;L;<super> 044E;;;;N;;;;;\n+1E04A;MODIFIER LETTER CYRILLIC SMALL DZZE;Lm;0;L;<super> A689;;;;N;;;;;\n+1E04B;MODIFIER LETTER CYRILLIC SMALL SCHWA;Lm;0;L;<super> 04D9;;;;N;;;;;\n+1E04C;MODIFIER LETTER CYRILLIC SMALL BYELORUSSIAN-UKRAINIAN I;Lm;0;L;<super> 0456;;;;N;;;;;\n+1E04D;MODIFIER LETTER CYRILLIC SMALL JE;Lm;0;L;<super> 0458;;;;N;;;;;\n+1E04E;MODIFIER LETTER CYRILLIC SMALL BARRED O;Lm;0;L;<super> 04E9;;;;N;;;;;\n+1E04F;MODIFIER LETTER CYRILLIC SMALL STRAIGHT U;Lm;0;L;<super> 04AF;;;;N;;;;;\n+1E050;MODIFIER LETTER CYRILLIC SMALL PALOCHKA;Lm;0;L;<super> 04CF;;;;N;;;;;\n+1E051;CYRILLIC SUBSCRIPT SMALL LETTER A;Lm;0;L;<sub> 0430;;;;N;;;;;\n+1E052;CYRILLIC SUBSCRIPT SMALL LETTER BE;Lm;0;L;<sub> 0431;;;;N;;;;;\n+1E053;CYRILLIC SUBSCRIPT SMALL LETTER VE;Lm;0;L;<sub> 0432;;;;N;;;;;\n+1E054;CYRILLIC SUBSCRIPT SMALL LETTER GHE;Lm;0;L;<sub> 0433;;;;N;;;;;\n+1E055;CYRILLIC SUBSCRIPT SMALL LETTER DE;Lm;0;L;<sub> 0434;;;;N;;;;;\n+1E056;CYRILLIC SUBSCRIPT SMALL LETTER IE;Lm;0;L;<sub> 0435;;;;N;;;;;\n+1E057;CYRILLIC SUBSCRIPT SMALL LETTER ZHE;Lm;0;L;<sub> 0436;;;;N;;;;;\n+1E058;CYRILLIC SUBSCRIPT SMALL LETTER ZE;Lm;0;L;<sub> 0437;;;;N;;;;;\n+1E059;CYRILLIC SUBSCRIPT SMALL LETTER I;Lm;0;L;<sub> 0438;;;;N;;;;;\n+1E05A;CYRILLIC SUBSCRIPT SMALL LETTER KA;Lm;0;L;<sub> 043A;;;;N;;;;;\n+1E05B;CYRILLIC SUBSCRIPT SMALL LETTER EL;Lm;0;L;<sub> 043B;;;;N;;;;;\n+1E05C;CYRILLIC SUBSCRIPT SMALL LETTER O;Lm;0;L;<sub> 043E;;;;N;;;;;\n+1E05D;CYRILLIC SUBSCRIPT SMALL LETTER PE;Lm;0;L;<sub> 043F;;;;N;;;;;\n+1E05E;CYRILLIC SUBSCRIPT SMALL LETTER ES;Lm;0;L;<sub> 0441;;;;N;;;;;\n+1E05F;CYRILLIC SUBSCRIPT SMALL LETTER U;Lm;0;L;<sub> 0443;;;;N;;;;;\n+1E060;CYRILLIC SUBSCRIPT SMALL LETTER EF;Lm;0;L;<sub> 0444;;;;N;;;;;\n+1E061;CYRILLIC SUBSCRIPT SMALL LETTER HA;Lm;0;L;<sub> 0445;;;;N;;;;;\n+1E062;CYRILLIC SUBSCRIPT SMALL LETTER TSE;Lm;0;L;<sub> 0446;;;;N;;;;;\n+1E063;CYRILLIC SUBSCRIPT SMALL LETTER CHE;Lm;0;L;<sub> 0447;;;;N;;;;;\n+1E064;CYRILLIC SUBSCRIPT SMALL LETTER SHA;Lm;0;L;<sub> 0448;;;;N;;;;;\n+1E065;CYRILLIC SUBSCRIPT SMALL LETTER HARD SIGN;Lm;0;L;<sub> 044A;;;;N;;;;;\n+1E066;CYRILLIC SUBSCRIPT SMALL LETTER YERU;Lm;0;L;<sub> 044B;;;;N;;;;;\n+1E067;CYRILLIC SUBSCRIPT SMALL LETTER GHE WITH UPTURN;Lm;0;L;<sub> 0491;;;;N;;;;;\n+1E068;CYRILLIC SUBSCRIPT SMALL LETTER BYELORUSSIAN-UKRAINIAN I;Lm;0;L;<sub> 0456;;;;N;;;;;\n+1E069;CYRILLIC SUBSCRIPT SMALL LETTER DZE;Lm;0;L;<sub> 0455;;;;N;;;;;\n+1E06A;CYRILLIC SUBSCRIPT SMALL LETTER DZHE;Lm;0;L;<sub> 045F;;;;N;;;;;\n+1E06B;MODIFIER LETTER CYRILLIC SMALL ES WITH DESCENDER;Lm;0;L;<super> 04AB;;;;N;;;;;\n+1E06C;MODIFIER LETTER CYRILLIC SMALL YERU WITH BACK YER;Lm;0;L;<super> A651;;;;N;;;;;\n+1E06D;MODIFIER LETTER CYRILLIC SMALL STRAIGHT U WITH STROKE;Lm;0;L;<super> 04B1;;;;N;;;;;\n+1E08F;COMBINING CYRILLIC SMALL LETTER BYELORUSSIAN-UKRAINIAN I;Mn;230;NSM;;;;;N;;;;;\n 1E100;NYIAKENG PUACHUE HMONG LETTER MA;Lo;0;L;;;;;N;;;;;\n 1E101;NYIAKENG PUACHUE HMONG LETTER TSA;Lo;0;L;;;;;N;;;;;\n 1E102;NYIAKENG PUACHUE HMONG LETTER NTA;Lo;0;L;;;;;N;;;;;\n@@ -30603,6 +30828,48 @@ FFFD;REPLACEMENT CHARACTER;So;0;ON;;;;;N;;;;;\n 1E2F8;WANCHO DIGIT EIGHT;Nd;0;L;;8;8;8;N;;;;;\n 1E2F9;WANCHO DIGIT NINE;Nd;0;L;;9;9;9;N;;;;;\n 1E2FF;WANCHO NGUN SIGN;Sc;0;ET;;;;;N;;;;;\n+1E4D0;NAG MUNDARI LETTER O;Lo;0;L;;;;;N;;;;;\n+1E4D1;NAG MUNDARI LETTER OP;Lo;0;L;;;;;N;;;;;\n+1E4D2;NAG MUNDARI LETTER OL;Lo;0;L;;;;;N;;;;;\n+1E4D3;NAG MUNDARI LETTER OY;Lo;0;L;;;;;N;;;;;\n+1E4D4;NAG MUNDARI LETTER ONG;Lo;0;L;;;;;N;;;;;\n+1E4D5;NAG MUNDARI LETTER A;Lo;0;L;;;;;N;;;;;\n+1E4D6;NAG MUNDARI LETTER AJ;Lo;0;L;;;;;N;;;;;\n+1E4D7;NAG MUNDARI LETTER AB;Lo;0;L;;;;;N;;;;;\n+1E4D8;NAG MUNDARI LETTER ANY;Lo;0;L;;;;;N;;;;;\n+1E4D9;NAG MUNDARI LETTER AH;Lo;0;L;;;;;N;;;;;\n+1E4DA;NAG MUNDARI LETTER I;Lo;0;L;;;;;N;;;;;\n+1E4DB;NAG MUNDARI LETTER IS;Lo;0;L;;;;;N;;;;;\n+1E4DC;NAG MUNDARI LETTER IDD;Lo;0;L;;;;;N;;;;;\n+1E4DD;NAG MUNDARI LETTER IT;Lo;0;L;;;;;N;;;;;\n+1E4DE;NAG MUNDARI LETTER IH;Lo;0;L;;;;;N;;;;;\n+1E4DF;NAG MUNDARI LETTER U;Lo;0;L;;;;;N;;;;;\n+1E4E0;NAG MUNDARI LETTER UC;Lo;0;L;;;;;N;;;;;\n+1E4E1;NAG MUNDARI LETTER UD;Lo;0;L;;;;;N;;;;;\n+1E4E2;NAG MUNDARI LETTER UK;Lo;0;L;;;;;N;;;;;\n+1E4E3;NAG MUNDARI LETTER UR;Lo;0;L;;;;;N;;;;;\n+1E4E4;NAG MUNDARI LETTER E;Lo;0;L;;;;;N;;;;;\n+1E4E5;NAG MUNDARI LETTER ENN;Lo;0;L;;;;;N;;;;;\n+1E4E6;NAG MUNDARI LETTER EG;Lo;0;L;;;;;N;;;;;\n+1E4E7;NAG MUNDARI LETTER EM;Lo;0;L;;;;;N;;;;;\n+1E4E8;NAG MUNDARI LETTER EN;Lo;0;L;;;;;N;;;;;\n+1E4E9;NAG MUNDARI LETTER ETT;Lo;0;L;;;;;N;;;;;\n+1E4EA;NAG MUNDARI LETTER ELL;Lo;0;L;;;;;N;;;;;\n+1E4EB;NAG MUNDARI SIGN OJOD;Lm;0;L;;;;;N;;;;;\n+1E4EC;NAG MUNDARI SIGN MUHOR;Mn;232;NSM;;;;;N;;;;;\n+1E4ED;NAG MUNDARI SIGN TOYOR;Mn;232;NSM;;;;;N;;;;;\n+1E4EE;NAG MUNDARI SIGN IKIR;Mn;220;NSM;;;;;N;;;;;\n+1E4EF;NAG MUNDARI SIGN SUTUH;Mn;230;NSM;;;;;N;;;;;\n+1E4F0;NAG MUNDARI DIGIT ZERO;Nd;0;L;;0;0;0;N;;;;;\n+1E4F1;NAG MUNDARI DIGIT ONE;Nd;0;L;;1;1;1;N;;;;;\n+1E4F2;NAG MUNDARI DIGIT TWO;Nd;0;L;;2;2;2;N;;;;;\n+1E4F3;NAG MUNDARI DIGIT THREE;Nd;0;L;;3;3;3;N;;;;;\n+1E4F4;NAG MUNDARI DIGIT FOUR;Nd;0;L;;4;4;4;N;;;;;\n+1E4F5;NAG MUNDARI DIGIT FIVE;Nd;0;L;;5;5;5;N;;;;;\n+1E4F6;NAG MUNDARI DIGIT SIX;Nd;0;L;;6;6;6;N;;;;;\n+1E4F7;NAG MUNDARI DIGIT SEVEN;Nd;0;L;;7;7;7;N;;;;;\n+1E4F8;NAG MUNDARI DIGIT EIGHT;Nd;0;L;;8;8;8;N;;;;;\n+1E4F9;NAG MUNDARI DIGIT NINE;Nd;0;L;;9;9;9;N;;;;;\n 1E7E0;ETHIOPIC SYLLABLE HHYA;Lo;0;L;;;;;N;;;;;\n 1E7E1;ETHIOPIC SYLLABLE HHYU;Lo;0;L;;;;;N;;;;;\n 1E7E2;ETHIOPIC SYLLABLE HHYI;Lo;0;L;;;;;N;;;;;\n@@ -32678,6 +32945,7 @@ FFFD;REPLACEMENT CHARACTER;So;0;ON;;;;;N;;;;;\n 1F6D5;HINDU TEMPLE;So;0;ON;;;;;N;;;;;\n 1F6D6;HUT;So;0;ON;;;;;N;;;;;\n 1F6D7;ELEVATOR;So;0;ON;;;;;N;;;;;\n+1F6DC;WIRELESS;So;0;ON;;;;;N;;;;;\n 1F6DD;PLAYGROUND SLIDE;So;0;ON;;;;;N;;;;;\n 1F6DE;WHEEL;So;0;ON;;;;;N;;;;;\n 1F6DF;RING BUOY;So;0;ON;;;;;N;;;;;\n@@ -32823,6 +33091,14 @@ FFFD;REPLACEMENT CHARACTER;So;0;ON;;;;;N;;;;;\n 1F771;ALCHEMICAL SYMBOL FOR MONTH;So;0;ON;;;;;N;;;;;\n 1F772;ALCHEMICAL SYMBOL FOR HALF DRAM;So;0;ON;;;;;N;;;;;\n 1F773;ALCHEMICAL SYMBOL FOR HALF OUNCE;So;0;ON;;;;;N;;;;;\n+1F774;LOT OF FORTUNE;So;0;ON;;;;;N;;;;;\n+1F775;OCCULTATION;So;0;ON;;;;;N;;;;;\n+1F776;LUNAR ECLIPSE;So;0;ON;;;;;N;;;;;\n+1F77B;HAUMEA;So;0;ON;;;;;N;;;;;\n+1F77C;MAKEMAKE;So;0;ON;;;;;N;;;;;\n+1F77D;GONGGONG;So;0;ON;;;;;N;;;;;\n+1F77E;QUAOAR;So;0;ON;;;;;N;;;;;\n+1F77F;ORCUS;So;0;ON;;;;;N;;;;;\n 1F780;BLACK LEFT-POINTING ISOSCELES RIGHT TRIANGLE;So;0;ON;;;;;N;;;;;\n 1F781;BLACK UP-POINTING ISOSCELES RIGHT TRIANGLE;So;0;ON;;;;;N;;;;;\n 1F782;BLACK RIGHT-POINTING ISOSCELES RIGHT TRIANGLE;So;0;ON;;;;;N;;;;;\n@@ -32912,6 +33188,7 @@ FFFD;REPLACEMENT CHARACTER;So;0;ON;;;;;N;;;;;\n 1F7D6;NEGATIVE CIRCLED TRIANGLE;So;0;ON;;;;;N;;;;;\n 1F7D7;CIRCLED SQUARE;So;0;ON;;;;;N;;;;;\n 1F7D8;NEGATIVE CIRCLED SQUARE;So;0;ON;;;;;N;;;;;\n+1F7D9;NINE POINTED WHITE STAR;So;0;ON;;;;;N;;;;;\n 1F7E0;LARGE ORANGE CIRCLE;So;0;ON;;;;;N;;;;;\n 1F7E1;LARGE YELLOW CIRCLE;So;0;ON;;;;;N;;;;;\n 1F7E2;LARGE GREEN CIRCLE;So;0;ON;;;;;N;;;;;\n@@ -33434,6 +33711,9 @@ FFFD;REPLACEMENT CHARACTER;So;0;ON;;;;;N;;;;;\n 1FA72;BRIEFS;So;0;ON;;;;;N;;;;;\n 1FA73;SHORTS;So;0;ON;;;;;N;;;;;\n 1FA74;THONG SANDAL;So;0;ON;;;;;N;;;;;\n+1FA75;LIGHT BLUE HEART;So;0;ON;;;;;N;;;;;\n+1FA76;GREY HEART;So;0;ON;;;;;N;;;;;\n+1FA77;PINK HEART;So;0;ON;;;;;N;;;;;\n 1FA78;DROP OF BLOOD;So;0;ON;;;;;N;;;;;\n 1FA79;ADHESIVE BANDAGE;So;0;ON;;;;;N;;;;;\n 1FA7A;STETHOSCOPE;So;0;ON;;;;;N;;;;;\n@@ -33446,6 +33726,8 @@ FFFD;REPLACEMENT CHARACTER;So;0;ON;;;;;N;;;;;\n 1FA84;MAGIC WAND;So;0;ON;;;;;N;;;;;\n 1FA85;PINATA;So;0;ON;;;;;N;;;;;\n 1FA86;NESTING DOLLS;So;0;ON;;;;;N;;;;;\n+1FA87;MARACAS;So;0;ON;;;;;N;;;;;\n+1FA88;FLUTE;So;0;ON;;;;;N;;;;;\n 1FA90;RINGED PLANET;So;0;ON;;;;;N;;;;;\n 1FA91;CHAIR;So;0;ON;;;;;N;;;;;\n 1FA92;RAZOR;So;0;ON;;;;;N;;;;;\n@@ -33475,6 +33757,9 @@ FFFD;REPLACEMENT CHARACTER;So;0;ON;;;;;N;;;;;\n 1FAAA;IDENTIFICATION CARD;So;0;ON;;;;;N;;;;;\n 1FAAB;LOW BATTERY;So;0;ON;;;;;N;;;;;\n 1FAAC;HAMSA;So;0;ON;;;;;N;;;;;\n+1FAAD;FOLDING HAND FAN;So;0;ON;;;;;N;;;;;\n+1FAAE;HAIR PICK;So;0;ON;;;;;N;;;;;\n+1FAAF;KHANDA;So;0;ON;;;;;N;;;;;\n 1FAB0;FLY;So;0;ON;;;;;N;;;;;\n 1FAB1;WORM;So;0;ON;;;;;N;;;;;\n 1FAB2;BEETLE;So;0;ON;;;;;N;;;;;\n@@ -33486,12 +33771,18 @@ FFFD;REPLACEMENT CHARACTER;So;0;ON;;;;;N;;;;;\n 1FAB8;CORAL;So;0;ON;;;;;N;;;;;\n 1FAB9;EMPTY NEST;So;0;ON;;;;;N;;;;;\n 1FABA;NEST WITH EGGS;So;0;ON;;;;;N;;;;;\n+1FABB;HYACINTH;So;0;ON;;;;;N;;;;;\n+1FABC;JELLYFISH;So;0;ON;;;;;N;;;;;\n+1FABD;WING;So;0;ON;;;;;N;;;;;\n+1FABF;GOOSE;So;0;ON;;;;;N;;;;;\n 1FAC0;ANATOMICAL HEART;So;0;ON;;;;;N;;;;;\n 1FAC1;LUNGS;So;0;ON;;;;;N;;;;;\n 1FAC2;PEOPLE HUGGING;So;0;ON;;;;;N;;;;;\n 1FAC3;PREGNANT MAN;So;0;ON;;;;;N;;;;;\n 1FAC4;PREGNANT PERSON;So;0;ON;;;;;N;;;;;\n 1FAC5;PERSON WITH CROWN;So;0;ON;;;;;N;;;;;\n+1FACE;MOOSE;So;0;ON;;;;;N;;;;;\n+1FACF;DONKEY;So;0;ON;;;;;N;;;;;\n 1FAD0;BLUEBERRIES;So;0;ON;;;;;N;;;;;\n 1FAD1;BELL PEPPER;So;0;ON;;;;;N;;;;;\n 1FAD2;OLIVE;So;0;ON;;;;;N;;;;;\n@@ -33502,6 +33793,8 @@ FFFD;REPLACEMENT CHARACTER;So;0;ON;;;;;N;;;;;\n 1FAD7;POURING LIQUID;So;0;ON;;;;;N;;;;;\n 1FAD8;BEANS;So;0;ON;;;;;N;;;;;\n 1FAD9;JAR;So;0;ON;;;;;N;;;;;\n+1FADA;GINGER ROOT;So;0;ON;;;;;N;;;;;\n+1FADB;PEA POD;So;0;ON;;;;;N;;;;;\n 1FAE0;MELTING FACE;So;0;ON;;;;;N;;;;;\n 1FAE1;SALUTING FACE;So;0;ON;;;;;N;;;;;\n 1FAE2;FACE WITH OPEN EYES AND HAND OVER MOUTH;So;0;ON;;;;;N;;;;;\n@@ -33510,13 +33803,16 @@ FFFD;REPLACEMENT CHARACTER;So;0;ON;;;;;N;;;;;\n 1FAE5;DOTTED LINE FACE;So;0;ON;;;;;N;;;;;\n 1FAE6;BITING LIP;So;0;ON;;;;;N;;;;;\n 1FAE7;BUBBLES;So;0;ON;;;;;N;;;;;\n+1FAE8;SHAKING FACE;So;0;ON;;;;;N;;;;;\n 1FAF0;HAND WITH INDEX FINGER AND THUMB CROSSED;So;0;ON;;;;;N;;;;;\n 1FAF1;RIGHTWARDS HAND;So;0;ON;;;;;N;;;;;\n 1FAF2;LEFTWARDS HAND;So;0;ON;;;;;N;;;;;\n 1FAF3;PALM DOWN HAND;So;0;ON;;;;;N;;;;;\n 1FAF4;PALM UP HAND;So;0;ON;;;;;N;;;;;\n 1FAF5;INDEX POINTING AT THE VIEWER;So;0;ON;;;;;N;;;;;\n 1FAF6;HEART HANDS;So;0;ON;;;;;N;;;;;\n+1FAF7;LEFTWARDS PUSHING HAND;So;0;ON;;;;;N;;;;;\n+1FAF8;RIGHTWARDS PUSHING HAND;So;0;ON;;;;;N;;;;;\n 1FB00;BLOCK SEXTANT-1;So;0;ON;;;;;N;;;;;\n 1FB01;BLOCK SEXTANT-2;So;0;ON;;;;;N;;;;;\n 1FB02;BLOCK SEXTANT-12;So;0;ON;;;;;N;;;;;\n@@ -33732,7 +34028,7 @@ FFFD;REPLACEMENT CHARACTER;So;0;ON;;;;;N;;;;;\n 20000;<CJK Ideograph Extension B, First>;Lo;0;L;;;;;N;;;;;\n 2A6DF;<CJK Ideograph Extension B, Last>;Lo;0;L;;;;;N;;;;;\n 2A700;<CJK Ideograph Extension C, First>;Lo;0;L;;;;;N;;;;;\n-2B738;<CJK Ideograph Extension C, Last>;Lo;0;L;;;;;N;;;;;\n+2B739;<CJK Ideograph Extension C, Last>;Lo;0;L;;;;;N;;;;;\n 2B740;<CJK Ideograph Extension D, First>;Lo;0;L;;;;;N;;;;;\n 2B81D;<CJK Ideograph Extension D, Last>;Lo;0;L;;;;;N;;;;;\n 2B820;<CJK Ideograph Extension E, First>;Lo;0;L;;;;;N;;;;;\n@@ -34283,6 +34579,8 @@ FFFD;REPLACEMENT CHARACTER;So;0;ON;;;;;N;;;;;\n 2FA1D;CJK COMPATIBILITY IDEOGRAPH-2FA1D;Lo;0;L;2A600;;;;N;;;;;\n 30000;<CJK Ideograph Extension G, First>;Lo;0;L;;;;;N;;;;;\n 3134A;<CJK Ideograph Extension G, Last>;Lo;0;L;;;;;N;;;;;\n+31350;<CJK Ideograph Extension H, First>;Lo;0;L;;;;;N;;;;;\n+323AF;<CJK Ideograph Extension H, Last>;Lo;0;L;;;;;N;;;;;\n E0001;LANGUAGE TAG;Cf;0;BN;;;;;N;;;;;\n E0020;TAG SPACE;Cf;0;BN;;;;;N;;;;;\n E0021;TAG EXCLAMATION MARK;Cf;0;BN;;;;;N;;;;;"}, {"sha": "af6873a12c1a470dbf9850793a73fac845abe48a", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -1,3 +1,11 @@\n+2023-03-28  Xi Ruoyao  <xry111@xry111.site>\n+\n+\tPR other/109293\n+\t* configure.ac (AC_CHECK_DECLS): Add memmem.\n+\t* configure: Regenerate.\n+\t* config.h.in: Regenerate.\n+\t* system.h (memmem): Declare if HAVE_DECL_MEMMEM is zero.\n+\n 2023-02-17  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* inclhack.def (solaris_math_12): Add bypass."}, {"sha": "0fd21b721b9c97f24ed33a37fb9936cc8e166276", "filename": "fixincludes/config.h.in", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/fixincludes%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/fixincludes%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Fconfig.h.in?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -78,6 +78,10 @@\n    don't. */\n #undef HAVE_DECL_GETC_UNLOCKED\n \n+/* Define to 1 if you have the declaration of `memmem', and to 0 if you don't.\n+   */\n+#undef HAVE_DECL_MEMMEM\n+\n /* Define to 1 if you have the declaration of `putchar_unlocked', and to 0 if\n    you don't. */\n #undef HAVE_DECL_PUTCHAR_UNLOCKED"}, {"sha": "bdcc41f6ddc8d20ab8a56ee0ccc5d69cd395c469", "filename": "fixincludes/configure", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/fixincludes%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/fixincludes%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Fconfigure?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -5043,6 +5043,16 @@ fi\n cat >>confdefs.h <<_ACEOF\n #define HAVE_DECL_VASPRINTF $ac_have_decl\n _ACEOF\n+ac_fn_c_check_decl \"$LINENO\" \"memmem\" \"ac_cv_have_decl_memmem\" \"$ac_includes_default\"\n+if test \"x$ac_cv_have_decl_memmem\" = xyes; then :\n+  ac_have_decl=1\n+else\n+  ac_have_decl=0\n+fi\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DECL_MEMMEM $ac_have_decl\n+_ACEOF\n \n ac_fn_c_check_decl \"$LINENO\" \"clearerr_unlocked\" \"ac_cv_have_decl_clearerr_unlocked\" \"$ac_includes_default\"\n if test \"x$ac_cv_have_decl_clearerr_unlocked\" = xyes; then :"}, {"sha": "ef2227e3c9385fabd2073cd9a53fed99047b2f38", "filename": "fixincludes/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/fixincludes%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/fixincludes%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Fconfigure.ac?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -88,7 +88,7 @@ define(fixincludes_UNLOCKED_FUNCS, clearerr_unlocked feof_unlocked dnl\n   fread_unlocked fwrite_unlocked getchar_unlocked getc_unlocked dnl\n   putchar_unlocked putc_unlocked)\n AC_CHECK_FUNCS(fixincludes_UNLOCKED_FUNCS)\n-AC_CHECK_DECLS([abort, asprintf, basename(char *), errno, vasprintf])\n+AC_CHECK_DECLS([abort, asprintf, basename(char *), errno, vasprintf, memmem])\n AC_CHECK_DECLS(m4_split(m4_normalize(fixincludes_UNLOCKED_FUNCS)))\n \n # Checks for typedefs, structures, and compiler characteristics."}, {"sha": "687fb2e2025d6f62a9c1d44527ea1524b56504da", "filename": "fixincludes/system.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/fixincludes%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/fixincludes%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Fsystem.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -209,6 +209,10 @@ extern int errno;\n extern void abort (void);\n #endif\n \n+#if defined (HAVE_DECL_MEMMEM) && !HAVE_DECL_MEMMEM\n+extern void *memmem (const void *, size_t, const void *, size_t);\n+#endif\n+\n #if HAVE_SYS_STAT_H\n # include <sys/stat.h>\n #endif"}, {"sha": "b1ab528cf9a08685522662723579bd695ec0be20", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3415, "deletions": 0, "changes": 3415, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "b4a11630735ade5441ce946c935db0f43876b41e", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -1 +1 @@\n-20230221\n+20230406"}, {"sha": "170667e82126dd6dd43b70718f51d4426b6f0c57", "filename": "gcc/Makefile.in", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -789,6 +789,9 @@ INSTALL_HEADERS=install-headers install-mkheaders\n # Control whether Info documentation is built and installed.\n BUILD_INFO = @BUILD_INFO@\n \n+# Control flags for @contents placement in HTML output\n+MAKEINFO_TOC_INLINE_FLAG = @MAKEINFO_TOC_INLINE_FLAG@\n+\n # Control whether manpages generated by texi2pod.pl can be rebuilt.\n GENERATED_MANPAGES = @GENERATED_MANPAGES@\n \n@@ -3493,7 +3496,8 @@ html:: $(HTMLS_BUILD)\n $(build_htmldir)/%/index.html: %.texi\n \t$(mkinstalldirs) $(@D)\n \trm -f $(@D)/*\n-\t$(TEXI2HTML) -I $(abs_docdir) -I $(abs_docdir)/include -o $(@D) $<\n+\t$(TEXI2HTML) $(MAKEINFO_TOC_INLINE_FLAG) \\\n+\t\t-I $(abs_docdir) -I $(abs_docdir)/include -o $(@D) $<\n \n # Duplicate entry to handle renaming of gccinstall\n $(build_htmldir)/gccinstall/index.html: $(TEXI_GCCINSTALL_FILES)"}, {"sha": "c3741f744c57995a3bb9b03a0e13aacb9baea62f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -1,3 +1,25 @@\n+2023-03-06  Javier Miranda  <miranda@adacore.com>\n+\n+\tPR ada/108858\n+\t* sem_ch6.adb (Analyze_Subprogram_Body_Helper): For functions with\n+\tseparate spec, if their return type was visible through a limited-\n+\twith context clause, their extra formals were not added when the\n+\tspec was analyzed.  Now the full view must be available, and the\n+\textra formals can be created and Returns_By_Ref computed.\n+\n+2023-03-06  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR ada/108909\n+\tPR ada/108983\n+\t* Make-generated.in: Do not use GNATMAKE.\n+\t* gcc-interface/Makefile.in: Ditto.\n+\n+2023-02-26  Peter Foley  <pefoley2@pefoley.com>\n+\n+\tPR ada/108909\n+\t* Make-generated.in: Use GNATMAKE.\n+\t* gcc-interface/Makefile.in: Ditto.\n+\n 2023-02-14  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.cc (gnat_gimplify_expr): Add missing guard."}, {"sha": "d4701aed0f7a9aabb7ea91b561c0e056724bd43c", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -3836,6 +3836,21 @@ package body Sem_Ch6 is\n          Spec_Decl := Unit_Declaration_Node (Spec_Id);\n          Verify_Overriding_Indicator;\n \n+         --  For functions with separate spec, if their return type was visible\n+         --  through a limited-with context clause, their extra formals were\n+         --  not added when the spec was frozen. Now the full view must be\n+         --  available, and the extra formals can be created and Returns_By_Ref\n+         --  computed (required to generate its return statements).\n+\n+         if Ekind (Spec_Id) = E_Function\n+           and then From_Limited_With (Etype (Spec_Id))\n+           and then Is_Build_In_Place_Function (Spec_Id)\n+           and then not Has_BIP_Formals (Spec_Id)\n+         then\n+            Create_Extra_Formals (Spec_Id);\n+            Compute_Returns_By_Ref (Spec_Id);\n+         end if;\n+\n          --  In general, the spec will be frozen when we start analyzing the\n          --  body. However, for internally generated operations, such as\n          --  wrapper functions for inherited operations with controlling"}, {"sha": "86f2e229519351138bbbdd4c6e61234dd51a854f", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 123, "deletions": 0, "changes": 123, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -1,3 +1,126 @@\n+2023-03-22  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/109239\n+\t* program-point.cc: Include \"analyzer/inlining-iterator.h\".\n+\t(program_point::effectively_intraprocedural_p): New function.\n+\t* program-point.h (program_point::effectively_intraprocedural_p):\n+\tNew decl.\n+\t* sm-malloc.cc (deref_before_check::emit): Use it when rejecting\n+\tinterprocedural cases, so that we reject interprocedural cases\n+\tthat have become intraprocedural due to inlining.\n+\n+2023-03-18  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/109094\n+\t* region-model.cc (region_model::on_longjmp): Pass false for\n+\tnew \"eval_return_svalue\" param of pop_frame.\n+\t(region_model::pop_frame): Add new \"eval_return_svalue\" param and\n+\tuse it to suppress the call to get_rvalue on the result when\n+\tneeded by on_longjmp.\n+\t* region-model.h (region_model::pop_frame): Add new\n+\t\"eval_return_svalue\" param.\n+\n+2023-03-10  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/109059\n+\t* region-model.cc (region_model::mark_region_as_unknown): Gather a\n+\tset of maybe-live svalues and call on_maybe_live_values with it.\n+\t* store.cc (binding_map::remove_overlapping_bindings): Add new\n+\t\"maybe_live_values\" param; add any removed svalues to it.\n+\t(binding_cluster::clobber_region): Add NULL as new param of\n+\tremove_overlapping_bindings.\n+\t(binding_cluster::mark_region_as_unknown): Add \"maybe_live_values\"\n+\tparam and pass it to remove_overlapping_bindings.\n+\t(binding_cluster::maybe_get_compound_binding): Add NULL for new\n+\tparam of binding_map::remove_overlapping_bindings.\n+\t(binding_cluster::remove_overlapping_bindings): Add\n+\t\"maybe_live_values\" param and pass to\n+\tbinding_map::remove_overlapping_bindings.\n+\t(store::set_value): Capture a set of maybe-live svalues, and call\n+\ton_maybe_live_values with it.\n+\t(store::on_maybe_live_values): New.\n+\t(store::mark_region_as_unknown): Add \"maybe_live_values\" param\n+\tand pass it to binding_cluster::mark_region_as_unknown.\n+\t(store::remove_overlapping_bindings): Pass NULL for new param of\n+\tbinding_cluster::remove_overlapping_bindings.\n+\t* store.h (binding_map::remove_overlapping_bindings): Add\n+\t\"maybe_live_values\" param.\n+\t(binding_cluster::mark_region_as_unknown): Likewise.\n+\t(binding_cluster::remove_overlapping_bindings): Likewise.\n+\t(store::mark_region_as_unknown): Likewise.\n+\t(store::on_maybe_live_values): New decl.\n+\n+2023-03-10  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/108475\n+\tPR analyzer/109060\n+\t* sm-malloc.cc (deref_before_check::deref_before_check):\n+\tInitialize new field m_deref_expr.  Assert that arg is non-NULL.\n+\t(deref_before_check::emit): Reject cases where the spelling of the\n+\tthing that was dereferenced differs from that of what is checked,\n+\tor if the dereference expression was not found.  Remove code to\n+\thandle NULL m_arg.\n+\t(deref_before_check::describe_state_change): Remove code to handle\n+\tNULL m_arg.\n+\t(deref_before_check::describe_final_event): Likewise.\n+\t(deref_before_check::sufficiently_similar_p): New.\n+\t(deref_before_check::m_deref_expr): New field.\n+\t(malloc_state_machine::maybe_complain_about_deref_before_check):\n+\tDon't warn if the diag_ptr is NULL.\n+\n+2023-03-03  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* kf.cc (class kf_sprintf): New.\n+\t(register_known_functions): Register it.\n+\n+2023-03-02  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/108968\n+\t* region-model.cc (region_model::get_rvalue_1): Handle VAR_DECLs\n+\twith a DECL_HARD_REGISTER by returning UNKNOWN.\n+\n+2023-03-02  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* kf.cc (register_known_functions): Add __errno function for newlib.\n+\n+2023-03-01  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/107565\n+\t* region-model.cc (region_model::on_call_pre): Flatten logic by\n+\treturning early.  Consolidate logic for detecting const and pure\n+\tfunctions.  When considering whether an unhandled built-in\n+\tfunction has side-effects, consider all kinds of builtin, rather\n+\tthan just BUILT_IN_NORMAL, and don't require\n+\tgimple_builtin_call_types_compatible_p.\n+\n+2023-03-01  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/108935\n+\t* infinite-recursion.cc (contains_unknown_p): New.\n+\t(sufficiently_different_region_binding_p): New function, splitting\n+\tout inner loop from...\n+\t(sufficiently_different_p): ...here.  Extend detection of unknown\n+\tsvalues to also include svalues that contain unknown.  Treat\n+\tchanges in frames below the entry to the recursion as being\n+\tsufficiently different to reject being an infinite recursion.\n+\n+2023-02-21  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/108830\n+\t* analyzer.opt (fanalyzer-suppress-followups): New option.\n+\t* engine.cc (impl_region_model_context::warn): Terminate the path\n+\tif the diagnostic's terminate_path_p vfunc returns true and\n+\t-fanalyzer-suppress-followups is true (the default).\n+\t(impl_sm_context::warn): Likewise, for both overloads.\n+\t* pending-diagnostic.h (pending_diagnostic::terminate_path_p): New\n+\tvfunc.\n+\t* program-state.cc (program_state::on_edge): Terminate the path if\n+\tthe ctxt requests it during updating the edge.\n+\t* region-model.cc (poisoned_value_diagnostic::terminate_path_p):\n+\tNew vfunc.\n+\t* sm-malloc.cc (null_deref::terminate_path_p): New vfunc.\n+\t(null_arg::terminate_path_p): New vfunc.\n+\n 2023-02-16  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/108806"}, {"sha": "9d1a937e40398f2336ca3aa06bac04dcfb6327dc", "filename": "gcc/analyzer/analyzer.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fanalyzer%2Fanalyzer.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fanalyzer%2Fanalyzer.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fanalyzer.opt?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -262,6 +262,10 @@ fanalyzer-state-merge\n Common Var(flag_analyzer_state_merge) Init(1)\n Merge similar-enough states during analysis.\n \n+fanalyzer-suppress-followups\n+Common Var(flag_analyzer_suppress_followups) Init(1)\n+Stop exploring an execution path after certain diagnostics.\n+\n fanalyzer-transitivity\n Common Var(flag_analyzer_transitivity) Init(0)\n Enable transitivity of constraints during analysis."}, {"sha": "a5965c2b8ff048e47d9c1687d5298a11020a5bee", "filename": "gcc/analyzer/engine.cc", "status": "modified", "additions": 24, "deletions": 5, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fanalyzer%2Fengine.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fanalyzer%2Fengine.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fengine.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -125,11 +125,20 @@ impl_region_model_context::warn (std::unique_ptr<pending_diagnostic> d)\n       return false;\n     }\n   if (m_eg)\n-    return m_eg->get_diagnostic_manager ().add_diagnostic\n-      (m_enode_for_diag, m_enode_for_diag->get_supernode (),\n-       m_stmt, m_stmt_finder, std::move (d));\n-  else\n-    return false;\n+    {\n+      bool terminate_path = d->terminate_path_p ();\n+      if (m_eg->get_diagnostic_manager ().add_diagnostic\n+\t  (m_enode_for_diag, m_enode_for_diag->get_supernode (),\n+\t   m_stmt, m_stmt_finder, std::move (d)))\n+\t{\n+\t  if (m_path_ctxt\n+\t      && terminate_path\n+\t      && flag_analyzer_suppress_followups)\n+\t    m_path_ctxt->terminate_path ();\n+\t  return true;\n+\t}\n+    }\n+  return false;\n }\n \n void\n@@ -378,9 +387,14 @@ class impl_sm_context : public sm_context\n       = (var\n \t ? m_old_smap->get_state (var_old_sval, m_eg.get_ext_state ())\n \t : m_old_smap->get_global_state ());\n+    bool terminate_path = d->terminate_path_p ();\n     m_eg.get_diagnostic_manager ().add_diagnostic\n       (&m_sm, m_enode_for_diag, snode, stmt, m_stmt_finder,\n        var, var_old_sval, current, std::move (d));\n+    if (m_path_ctxt\n+\t&& terminate_path\n+\t&& flag_analyzer_suppress_followups)\n+      m_path_ctxt->terminate_path ();\n   }\n \n   void warn (const supernode *snode, const gimple *stmt,\n@@ -393,9 +407,14 @@ class impl_sm_context : public sm_context\n       = (sval\n \t ? m_old_smap->get_state (sval, m_eg.get_ext_state ())\n \t : m_old_smap->get_global_state ());\n+    bool terminate_path = d->terminate_path_p ();\n     m_eg.get_diagnostic_manager ().add_diagnostic\n       (&m_sm, m_enode_for_diag, snode, stmt, m_stmt_finder,\n        NULL_TREE, sval, current, std::move (d));\n+    if (m_path_ctxt\n+\t&& terminate_path\n+\t&& flag_analyzer_suppress_followups)\n+      m_path_ctxt->terminate_path ();\n   }\n \n   /* Hook for picking more readable trees for SSA names of temporaries,"}, {"sha": "c262e391953881d7113039f8a6f76748045036fc", "filename": "gcc/analyzer/infinite-recursion.cc", "status": "modified", "additions": 100, "deletions": 51, "changes": 151, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fanalyzer%2Finfinite-recursion.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fanalyzer%2Finfinite-recursion.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Finfinite-recursion.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -394,12 +394,108 @@ remap_enclosing_frame (const region *base_reg,\n     }\n }\n \n+/* Return true iff SVAL is unknown, or contains an unknown svalue.  */\n+\n+static bool\n+contains_unknown_p (const svalue *sval)\n+{\n+  if (sval->get_kind () == SK_UNKNOWN)\n+    return true;\n+  if (const compound_svalue *compound_sval\n+\t= sval->dyn_cast_compound_svalue ())\n+    for (auto iter : *compound_sval)\n+      if (iter.second->get_kind () == SK_UNKNOWN)\n+\treturn true;\n+  return false;\n+}\n+\n+/* Subroutine of sufficiently_different_p.  Compare the store bindings\n+   for BASE_REG within NEW_ENTRY_ENODE and PREV_ENTRY_ENODE.\n+\n+   Return true if the state of NEW_ENTRY_ENODE is sufficiently different\n+   from PREV_ENTRY_ENODE within BASE_REG to suggest that some variant is\n+   being modified, and thus the recursion isn't infinite.\n+\n+   Return false if the states for BASE_REG are effectively the same.  */\n+\n+static bool\n+sufficiently_different_region_binding_p (exploded_node *new_entry_enode,\n+\t\t\t\t\t exploded_node *prev_entry_enode,\n+\t\t\t\t\t const region *base_reg)\n+{\n+  /* Compare the stores of the two enodes.  */\n+  const region_model &new_model\n+    = *new_entry_enode->get_state ().m_region_model;\n+  const region_model &prev_model\n+    = *prev_entry_enode->get_state ().m_region_model;\n+\n+  /* Get the value within the new frame.  */\n+  const svalue *new_sval\n+    = new_model.get_store_value (base_reg, NULL);\n+\n+  /* If any part of the value is UNKNOWN (e.g. due to hitting\n+     complexity limits) assume that it differs from the previous\n+     value.  */\n+  if (contains_unknown_p (new_sval))\n+    return true;\n+\n+  /* Get the equivalent value within the old enode.  */\n+  const svalue *prev_sval;\n+\n+  if (const frame_region *enclosing_frame\n+      = base_reg->maybe_get_frame_region ())\n+    {\n+      /* We have a binding within a frame in the new entry enode.  */\n+\n+      /* Consider changes in bindings below the original entry\n+\t to the recursion.  */\n+      const int old_stack_depth = prev_entry_enode->get_stack_depth ();\n+      if (enclosing_frame->get_stack_depth () < old_stack_depth)\n+\tprev_sval = prev_model.get_store_value (base_reg, NULL);\n+      else\n+\t{\n+\t  /* Ignore bindings within frames below the new entry node.  */\n+\t  const int new_stack_depth = new_entry_enode->get_stack_depth ();\n+\t  if (enclosing_frame->get_stack_depth () < new_stack_depth)\n+\t    return false;\n+\n+\t  /* We have a binding within the frame of the new entry node,\n+\t     presumably a parameter.  */\n+\n+\t  /* Get the value within the equivalent frame of\n+\t     the old entrypoint; typically will be the initial_svalue\n+\t     of the parameter.  */\n+\t  const frame_region *equiv_prev_frame\n+\t    = prev_model.get_current_frame ();\n+\t  const region *equiv_prev_base_reg\n+\t    = remap_enclosing_frame (base_reg,\n+\t\t\t\t     enclosing_frame,\n+\t\t\t\t     equiv_prev_frame,\n+\t\t\t\t     new_model.get_manager ());\n+\t  prev_sval\n+\t    = prev_model.get_store_value (equiv_prev_base_reg, NULL);\n+\t}\n+    }\n+  else\n+    prev_sval = prev_model.get_store_value (base_reg, NULL);\n+\n+  /* If the prev_sval contains UNKNOWN (e.g. due to hitting complexity limits)\n+     assume that it will differ from any new value.  */\n+  if (contains_unknown_p (prev_sval))\n+    return true;\n+\n+  if (new_sval != prev_sval)\n+    return true;\n+\n+  return false;\n+}\n+\n /* Compare the state of memory at NEW_ENTRY_ENODE and PREV_ENTRY_ENODE,\n    both of which are entrypoints to the same function, where recursion has\n    occurred.\n \n    Return true if the state of NEW_ENTRY_ENODE is sufficiently different\n-   from PREV_ENTRY_ENODE to suggests that some variant is being modified,\n+   from PREV_ENTRY_ENODE to suggest that some variant is being modified,\n    and thus the recursion isn't infinite.\n \n    Return false if the states are effectively the same, suggesting that\n@@ -459,64 +555,17 @@ sufficiently_different_p (exploded_node *new_entry_enode,\n   gcc_assert (is_entrypoint_p (new_entry_enode));\n   gcc_assert (is_entrypoint_p (prev_entry_enode));\n \n-  const int new_stack_depth = new_entry_enode->get_stack_depth ();\n-\n   /* Compare the stores of the two enodes.  */\n   const region_model &new_model\n     = *new_entry_enode->get_state ().m_region_model;\n-  const region_model &prev_model\n-    = *prev_entry_enode->get_state ().m_region_model;\n   const store &new_store = *new_model.get_store ();\n \n   for (auto kv : new_store)\n     {\n       const region *base_reg = kv.first;\n-\n-      /* Get the value within the new frame.  */\n-      const svalue *new_sval\n-\t= new_model.get_store_value (base_reg, NULL);\n-\n-      /* If the value is UNKNOWN (e.g. due to hitting complexity limits)\n-\t assume that it differs from the previous value.  */\n-      if (new_sval->get_kind () == SK_UNKNOWN)\n-\treturn true;\n-\n-      /* Get the equivalent value within the old enode.  */\n-      const svalue *prev_sval;\n-\n-      if (const frame_region *enclosing_frame\n-\t    = base_reg->maybe_get_frame_region ())\n-\t{\n-\t  /* We have a binding within a frame in the new entry enode.  */\n-\n-\t  /* Ignore bindings within frames below the new entry node.  */\n-\t  if (enclosing_frame->get_stack_depth () < new_stack_depth)\n-\t    continue;\n-\n-\t  /* We have a binding within the frame of the new entry node,\n-\t     presumably a parameter.  */\n-\n-\t  /* Get the value within the equivalent frame of\n-\t     the old entrypoint; typically will be the initial_svalue\n-\t     of the parameter.  */\n-\t  const frame_region *equiv_prev_frame\n-\t    = prev_model.get_current_frame ();\n-\t  const region *equiv_prev_base_reg\n-\t    = remap_enclosing_frame (base_reg,\n-\t\t\t\t     enclosing_frame,\n-\t\t\t\t     equiv_prev_frame,\n-\t\t\t\t     new_model.get_manager ());\n-\t  prev_sval = prev_model.get_store_value (equiv_prev_base_reg, NULL);\n-\t}\n-      else\n-\tprev_sval = prev_model.get_store_value (base_reg, NULL);\n-\n-      /* If the prev_sval is UNKNOWN (e.g. due to hitting complexity limits)\n-\t assume that it will differ from any new value.  */\n-      if (prev_sval->get_kind () == SK_UNKNOWN)\n-\treturn true;\n-\n-      if (new_sval != prev_sval)\n+      if (sufficiently_different_region_binding_p (new_entry_enode,\n+\t\t\t\t\t\t   prev_entry_enode,\n+\t\t\t\t\t\t   base_reg))\n \treturn true;\n     }\n "}, {"sha": "93c46630f36100385b277b171e94712d61a97503", "filename": "gcc/analyzer/kf.cc", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fanalyzer%2Fkf.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fanalyzer%2Fkf.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fkf.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -778,6 +778,34 @@ kf_strchr::impl_call_post (const call_details &cd) const\n     }\n }\n \n+/* Handler for \"sprintf\".\n+     int sprintf(char *str, const char *format, ...);\n+*/\n+\n+class kf_sprintf : public known_function\n+{\n+public:\n+  bool matches_call_types_p (const call_details &cd) const final override\n+  {\n+    return (cd.num_args () >= 2\n+\t    && cd.arg_is_pointer_p (0)\n+\t    && cd.arg_is_pointer_p (1));\n+  }\n+\n+  void impl_call_pre (const call_details &cd) const final override\n+  {\n+    /* For now, merely assume that the destination buffer gets set to a\n+       new svalue.  */\n+    region_model *model = cd.get_model ();\n+    region_model_context *ctxt = cd.get_ctxt ();\n+    const svalue *dst_ptr = cd.get_arg_svalue (0);\n+    const region *dst_reg\n+      = model->deref_rvalue (dst_ptr, cd.get_arg_tree (0), ctxt);\n+    const svalue *content = cd.get_or_create_conjured_svalue (dst_reg);\n+    model->set_value (dst_reg, content, ctxt);\n+  }\n+};\n+\n /* Handler for \"__builtin_stack_restore\".  */\n \n class kf_stack_restore : public known_function\n@@ -990,6 +1018,7 @@ register_known_functions (known_function_manager &kfm)\n     kfm.add (BUILT_IN_MEMSET, make_unique<kf_memset> ());\n     kfm.add (BUILT_IN_MEMSET_CHK, make_unique<kf_memset> ());\n     kfm.add (BUILT_IN_REALLOC, make_unique<kf_realloc> ());\n+    kfm.add (BUILT_IN_SPRINTF, make_unique<kf_sprintf> ());\n     kfm.add (BUILT_IN_STACK_RESTORE, make_unique<kf_stack_restore> ());\n     kfm.add (BUILT_IN_STACK_SAVE, make_unique<kf_stack_save> ());\n     kfm.add (BUILT_IN_STRCHR, make_unique<kf_strchr> ());\n@@ -1033,9 +1062,11 @@ register_known_functions (known_function_manager &kfm)\n        and OS X like this:\n \t extern int * __error(void);\n \t #define errno (*__error())\n+       and similarly __errno for newlib.\n        Add these as synonyms for \"__errno_location\".  */\n     kfm.add (\"___errno\", make_unique<kf_errno_location> ());\n     kfm.add (\"__error\", make_unique<kf_errno_location> ());\n+    kfm.add (\"__errno\", make_unique<kf_errno_location> ());\n   }\n \n   /* Language-specific support functions.  */"}, {"sha": "6423c8be4ea61694d423080617d0cb8f6d310f30", "filename": "gcc/analyzer/pending-diagnostic.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fanalyzer%2Fpending-diagnostic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fanalyzer%2Fpending-diagnostic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fpending-diagnostic.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -173,6 +173,10 @@ class pending_diagnostic\n      having to generate feasible execution paths for them).  */\n   virtual int get_controlling_option () const = 0;\n \n+  /* Vfunc to give the diagnostic the chance to terminate the execution\n+     path being explored.  By default, don't terminate the path.  */\n+  virtual bool terminate_path_p () const { return false; }\n+\n   /* Vfunc for emitting the diagnostic.  The rich_location will have been\n      populated with a diagnostic_path.\n      Return true if a diagnostic is actually emitted.  */"}, {"sha": "f2d6490f0c04407775d488a0e7752e3f35738f8c", "filename": "gcc/analyzer/program-point.cc", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fanalyzer%2Fprogram-point.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fanalyzer%2Fprogram-point.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fprogram-point.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -52,6 +52,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"shortest-paths.h\"\n #include \"analyzer/exploded-graph.h\"\n #include \"analyzer/analysis-plan.h\"\n+#include \"analyzer/inlining-iterator.h\"\n \n #if ENABLE_ANALYZER\n \n@@ -719,6 +720,47 @@ program_point::get_next () const\n     }\n }\n \n+/* Return true iff POINT_A and POINT_B share the same function and\n+   call_string, both directly, and when attempting to undo inlining\n+   information.  */\n+\n+bool\n+program_point::effectively_intraprocedural_p (const program_point &point_a,\n+\t\t\t\t\t      const program_point &point_b)\n+{\n+  /* First, compare without considering inlining info.  */\n+  if (point_a.get_function ()\n+      != point_b.get_function ())\n+    return false;\n+  if (&point_a.get_call_string ()\n+      != &point_b.get_call_string ())\n+    return false;\n+\n+  /* Consider inlining info; they must have originally come from\n+     the same function and have been inlined in the same way.  */\n+  location_t loc_a = point_a.get_location ();\n+  location_t loc_b = point_b.get_location ();\n+  inlining_iterator iter_a (loc_a);\n+  inlining_iterator iter_b (loc_b);\n+  while (!(iter_a.done_p () || iter_b.done_p ()))\n+    {\n+      if (iter_a.done_p () || iter_b.done_p ())\n+\treturn false;\n+\n+      if (iter_a.get_fndecl () != iter_b.get_fndecl ())\n+\treturn false;\n+      if (iter_a.get_callsite () != iter_b.get_callsite ())\n+\treturn false;\n+      if (iter_a.get_block () != iter_b.get_block ())\n+\treturn false;\n+\n+      iter_a.next ();\n+      iter_b.next ();\n+    }\n+\n+  return true;\n+}\n+\n #if CHECKING_P\n \n namespace selftest {"}, {"sha": "7df3b69c513502d747d5dcca6472f925cb263a7c", "filename": "gcc/analyzer/program-point.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fanalyzer%2Fprogram-point.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fanalyzer%2Fprogram-point.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fprogram-point.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -299,6 +299,9 @@ class program_point\n \n   program_point get_next () const;\n \n+  static bool effectively_intraprocedural_p (const program_point &point_a,\n+\t\t\t\t\t     const program_point &point_b);\n+\n  private:\n   program_point (const function_point &fn_point)\n   : m_function_point (fn_point),"}, {"sha": "8dade4b5b3e01ee2a45e7943172a3d7674da4422", "filename": "gcc/analyzer/program-state.cc", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fanalyzer%2Fprogram-state.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fanalyzer%2Fprogram-state.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fprogram-state.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -1105,6 +1105,27 @@ program_state::on_edge (exploded_graph &eg,\n \t\t\tconst superedge *succ,\n \t\t\tuncertainty_t *uncertainty)\n {\n+  class my_path_context : public path_context\n+  {\n+  public:\n+    my_path_context (bool &terminated) : m_terminated (terminated) {}\n+    void bifurcate (std::unique_ptr<custom_edge_info>) final override\n+    {\n+      gcc_unreachable ();\n+    }\n+\n+    void terminate_path () final override\n+    {\n+      m_terminated = true;\n+    }\n+\n+    bool terminate_path_p () const final override\n+    {\n+      return m_terminated;\n+    }\n+    bool &m_terminated;\n+  };\n+\n   /* Update state.  */\n   const program_point &point = enode->get_point ();\n   const gimple *last_stmt = point.get_supernode ()->get_last_stmt ();\n@@ -1117,11 +1138,12 @@ program_state::on_edge (exploded_graph &eg,\n      Adding the relevant conditions for the edge could also trigger\n      sm-state transitions (e.g. transitions due to ptrs becoming known\n      to be NULL or non-NULL) */\n-\n+  bool terminated = false;\n+  my_path_context path_ctxt (terminated);\n   impl_region_model_context ctxt (eg, enode,\n \t\t\t\t  &enode->get_state (),\n \t\t\t\t  this,\n-\t\t\t\t  uncertainty, NULL,\n+\t\t\t\t  uncertainty, &path_ctxt,\n \t\t\t\t  last_stmt);\n   if (!m_region_model->maybe_update_for_edge (*succ,\n \t\t\t\t\t      last_stmt,\n@@ -1134,6 +1156,8 @@ program_state::on_edge (exploded_graph &eg,\n \t\t     succ->m_dest->m_index);\n       return false;\n     }\n+  if (terminated)\n+    return false;\n \n   program_state::detect_leaks (enode->get_state (), *this,\n \t\t\t       NULL, eg.get_ext_state (),"}, {"sha": "fb81d43f91b2c0bd5d704eade8bdca0db7c617d0", "filename": "gcc/analyzer/region-model.cc", "status": "modified", "additions": 44, "deletions": 30, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fanalyzer%2Fregion-model.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fanalyzer%2Fregion-model.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -505,6 +505,8 @@ class poisoned_value_diagnostic\n       }\n   }\n \n+  bool terminate_path_p () const final override { return true; }\n+\n   bool emit (rich_location *rich_loc) final override\n   {\n     switch (m_pkind)\n@@ -1475,8 +1477,6 @@ region_model::on_call_pre (const gcall *call, region_model_context *ctxt)\n {\n   call_details cd (call, this, ctxt);\n \n-  bool unknown_side_effects = false;\n-\n   /* Special-case for IFN_DEFERRED_INIT.\n      We want to report uninitialized variables with -fanalyzer (treating\n      -ftrivial-auto-var-init= as purely a mitigation feature).\n@@ -1485,7 +1485,7 @@ region_model::on_call_pre (const gcall *call, region_model_context *ctxt)\n      view of the analyzer.  */\n   if (gimple_call_internal_p (call)\n       && gimple_call_internal_fn (call) == IFN_DEFERRED_INIT)\n-    return false;\n+    return false; /* No side effects.  */\n \n   /* Get svalues for all of the arguments at the callsite, to ensure that we\n      complain about any uninitialized arguments.  This might lead to\n@@ -1530,33 +1530,29 @@ region_model::on_call_pre (const gcall *call, region_model_context *ctxt)\n \t  = get_known_function (gimple_call_internal_fn (call)))\n       {\n \tkf->impl_call_pre (cd);\n-\treturn false;\n+\treturn false; /* No further side effects.  */\n       }\n \n-  if (callee_fndecl)\n-    {\n-      int callee_fndecl_flags = flags_from_decl_or_type (callee_fndecl);\n+  if (!callee_fndecl)\n+    return true; /* Unknown side effects.  */\n \n-      if (const known_function *kf = get_known_function (callee_fndecl, cd))\n-\t{\n-\t  kf->impl_call_pre (cd);\n-\t  return false;\n-\t}\n-      else if (fndecl_built_in_p (callee_fndecl, BUILT_IN_NORMAL)\n-\t  && gimple_builtin_call_types_compatible_p (call, callee_fndecl))\n-\t{\n-\t  if (!(callee_fndecl_flags & (ECF_CONST | ECF_PURE)))\n-\t    unknown_side_effects = true;\n-\t}\n-      else if (!fndecl_has_gimple_body_p (callee_fndecl)\n-\t       && (!(callee_fndecl_flags & (ECF_CONST | ECF_PURE)))\n-\t       && !fndecl_built_in_p (callee_fndecl))\n-\tunknown_side_effects = true;\n+  if (const known_function *kf = get_known_function (callee_fndecl, cd))\n+    {\n+      kf->impl_call_pre (cd);\n+      return false; /* No further side effects.  */\n     }\n-  else\n-    unknown_side_effects = true;\n \n-  return unknown_side_effects;\n+  const int callee_fndecl_flags = flags_from_decl_or_type (callee_fndecl);\n+  if (callee_fndecl_flags & (ECF_CONST | ECF_PURE))\n+    return false; /* No side effects.  */\n+\n+  if (fndecl_built_in_p (callee_fndecl))\n+    return true; /* Unknown side effects.  */\n+\n+  if (!fndecl_has_gimple_body_p (callee_fndecl))\n+    return true; /* Unknown side effects.  */\n+\n+  return false; /* No side effects.  */\n }\n \n /* Update this model for the CALL stmt, using CTXT to report any\n@@ -1956,7 +1952,7 @@ region_model::on_longjmp (const gcall *longjmp_call, const gcall *setjmp_call,\n      setjmp was called.  */\n   gcc_assert (get_stack_depth () >= setjmp_stack_depth);\n   while (get_stack_depth () > setjmp_stack_depth)\n-    pop_frame (NULL, NULL, ctxt);\n+    pop_frame (NULL, NULL, ctxt, false);\n \n   gcc_assert (get_stack_depth () == setjmp_stack_depth);\n \n@@ -2207,9 +2203,16 @@ region_model::get_rvalue_1 (path_var pv, region_model_context *ctxt) const\n \treturn get_rvalue_for_bits (TREE_TYPE (expr), reg, bits, ctxt);\n       }\n \n-    case SSA_NAME:\n     case VAR_DECL:\n+      if (DECL_HARD_REGISTER (pv.m_tree))\n+\t{\n+\t  /* If it has a hard register, it doesn't have a memory region\n+\t     and can't be referred to as an lvalue.  */\n+\t  return m_mgr->get_or_create_unknown_svalue (TREE_TYPE (pv.m_tree));\n+\t}\n+      /* Fall through. */\n     case PARM_DECL:\n+    case SSA_NAME:\n     case RESULT_DECL:\n     case ARRAY_REF:\n       {\n@@ -3293,8 +3296,10 @@ void\n region_model::mark_region_as_unknown (const region *reg,\n \t\t\t\t      uncertainty_t *uncertainty)\n {\n+  svalue_set maybe_live_values;\n   m_store.mark_region_as_unknown (m_mgr->get_store_manager(), reg,\n-\t\t\t\t  uncertainty);\n+\t\t\t\t  uncertainty, &maybe_live_values);\n+  m_store.on_maybe_live_values (maybe_live_values);\n }\n \n /* Determine what is known about the condition \"LHS_SVAL OP RHS_SVAL\" within\n@@ -4674,14 +4679,19 @@ region_model::get_current_function () const\n    If OUT_RESULT is non-null, copy any return value from the frame\n    into *OUT_RESULT.\n \n+   If EVAL_RETURN_SVALUE is false, then don't evaluate the return value.\n+   This is for use when unwinding frames e.g. due to longjmp, to suppress\n+   erroneously reporting uninitialized return values.\n+\n    Purge the frame region and all its descendent regions.\n    Convert any pointers that point into such regions into\n    POISON_KIND_POPPED_STACK svalues.  */\n \n void\n region_model::pop_frame (tree result_lvalue,\n \t\t\t const svalue **out_result,\n-\t\t\t region_model_context *ctxt)\n+\t\t\t region_model_context *ctxt,\n+\t\t\t bool eval_return_svalue)\n {\n   gcc_assert (m_current_frame);\n \n@@ -4695,7 +4705,9 @@ region_model::pop_frame (tree result_lvalue,\n   tree fndecl = m_current_frame->get_function ()->decl;\n   tree result = DECL_RESULT (fndecl);\n   const svalue *retval = NULL;\n-  if (result && TREE_TYPE (result) != void_type_node)\n+  if (result\n+      && TREE_TYPE (result) != void_type_node\n+      && eval_return_svalue)\n     {\n       retval = get_rvalue (result, ctxt);\n       if (out_result)\n@@ -4707,6 +4719,8 @@ region_model::pop_frame (tree result_lvalue,\n \n   if (result_lvalue && retval)\n     {\n+      gcc_assert (eval_return_svalue);\n+\n       /* Compute result_dst_reg using RESULT_LVALUE *after* popping\n \t the frame, but before poisoning pointers into the old frame.  */\n       const region *result_dst_reg = get_lvalue (result_lvalue, ctxt);"}, {"sha": "fe3db0b0c985c3d78fa9618cbfb6bd8ca4076fc7", "filename": "gcc/analyzer/region-model.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fanalyzer%2Fregion-model.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fanalyzer%2Fregion-model.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -341,7 +341,8 @@ class region_model\n   function * get_current_function () const;\n   void pop_frame (tree result_lvalue,\n \t\t  const svalue **out_result,\n-\t\t  region_model_context *ctxt);\n+\t\t  region_model_context *ctxt,\n+\t\t  bool eval_return_svalue = true);\n   int get_stack_depth () const;\n   const frame_region *get_frame_at_index (int index) const;\n "}, {"sha": "74701375409d214cb239a292a52e89705832e1ee", "filename": "gcc/analyzer/sm-malloc.cc", "status": "modified", "additions": 53, "deletions": 41, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fanalyzer%2Fsm-malloc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fanalyzer%2Fsm-malloc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fsm-malloc.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -1150,6 +1150,8 @@ class null_deref : public malloc_diagnostic\n     return OPT_Wanalyzer_null_dereference;\n   }\n \n+  bool terminate_path_p () const final override { return true; }\n+\n   bool emit (rich_location *rich_loc) final override\n   {\n     /* CWE-476: NULL Pointer Dereference.  */\n@@ -1203,6 +1205,8 @@ class null_arg : public malloc_diagnostic\n     return OPT_Wanalyzer_null_argument;\n   }\n \n+  bool terminate_path_p () const final override { return true; }\n+\n   bool emit (rich_location *rich_loc) final override\n   {\n     /* CWE-476: NULL Pointer Dereference.  */\n@@ -1494,8 +1498,11 @@ class deref_before_check : public malloc_diagnostic\n   deref_before_check (const malloc_state_machine &sm, tree arg)\n   : malloc_diagnostic (sm, arg),\n     m_deref_enode (NULL),\n+    m_deref_expr (NULL),\n     m_check_enode (NULL)\n-  {}\n+  {\n+    gcc_assert (arg);\n+  }\n \n   const char *get_kind () const final override { return \"deref_before_check\"; }\n \n@@ -1513,10 +1520,11 @@ class deref_before_check : public malloc_diagnostic\n     if (!m_check_enode)\n       return false;\n     /* Only emit the warning for intraprocedural cases.  */\n-    if (m_deref_enode->get_function () != m_check_enode->get_function ())\n-      return false;\n-    if (&m_deref_enode->get_point ().get_call_string ()\n-\t!= &m_check_enode->get_point ().get_call_string ())\n+    const program_point &deref_point = m_deref_enode->get_point ();\n+    const program_point &check_point = m_check_enode->get_point ();\n+\n+    if (!program_point::effectively_intraprocedural_p (deref_point,\n+\t\t\t\t\t\t       check_point))\n       return false;\n \n     /* Reject the warning if the check occurs within a macro defintion.\n@@ -1556,6 +1564,15 @@ class deref_before_check : public malloc_diagnostic\n     if (linemap_location_from_macro_definition_p (line_table, check_loc))\n       return false;\n \n+    /* Reject if m_deref_expr is sufficiently different from m_arg\n+       for cases where the dereference is spelled differently from\n+       the check, which is probably two different ways to get the\n+       same svalue, and thus not worth reporting.  */\n+    if (!m_deref_expr)\n+      return false;\n+    if (!sufficiently_similar_p (m_deref_expr, m_arg))\n+      return false;\n+\n     /* Reject the warning if the deref's BB doesn't dominate that\n        of the check, so that we don't warn e.g. for shared cleanup\n        code that checks a pointer for NULL, when that code is sometimes\n@@ -1568,15 +1585,10 @@ class deref_before_check : public malloc_diagnostic\n \t\t\t m_deref_enode->get_supernode ()->m_bb))\n       return false;\n \n-    if (m_arg)\n-      return warning_at (rich_loc, get_controlling_option (),\n-\t\t\t \"check of %qE for NULL after already\"\n-\t\t\t \" dereferencing it\",\n-\t\t\t m_arg);\n-    else\n-      return warning_at (rich_loc, get_controlling_option (),\n-\t\t\t \"check of pointer for NULL after already\"\n-\t\t\t \" dereferencing it\");\n+    return warning_at (rich_loc, get_controlling_option (),\n+\t\t       \"check of %qE for NULL after already\"\n+\t\t       \" dereferencing it\",\n+\t\t       m_arg);\n   }\n \n   label_text describe_state_change (const evdesc::state_change &change)\n@@ -1587,11 +1599,9 @@ class deref_before_check : public malloc_diagnostic\n       {\n \tm_first_deref_event = change.m_event_id;\n \tm_deref_enode = change.m_event.get_exploded_node ();\n-\tif (m_arg)\n-\t  return change.formatted_print (\"pointer %qE is dereferenced here\",\n-\t\t\t\t\t m_arg);\n-\telse\n-\t  return label_text::borrow (\"pointer is dereferenced here\");\n+\tm_deref_expr = change.m_expr;\n+\treturn change.formatted_print (\"pointer %qE is dereferenced here\",\n+\t\t\t\t       m_arg);\n       }\n     return malloc_diagnostic::describe_state_change (change);\n   }\n@@ -1600,31 +1610,32 @@ class deref_before_check : public malloc_diagnostic\n   {\n     m_check_enode = ev.m_event.get_exploded_node ();\n     if (m_first_deref_event.known_p ())\n-      {\n-\tif (m_arg)\n-\t  return ev.formatted_print (\"pointer %qE is checked for NULL here but\"\n-\t\t\t\t     \" it was already dereferenced at %@\",\n-\t\t\t\t     m_arg, &m_first_deref_event);\n-\telse\n-\t  return ev.formatted_print (\"pointer is checked for NULL here but\"\n-\t\t\t\t     \" it was already dereferenced at %@\",\n-\t\t\t\t     &m_first_deref_event);\n-      }\n+      return ev.formatted_print (\"pointer %qE is checked for NULL here but\"\n+\t\t\t\t \" it was already dereferenced at %@\",\n+\t\t\t\t m_arg, &m_first_deref_event);\n     else\n-      {\n-\tif (m_arg)\n-\t  return ev.formatted_print (\"pointer %qE is checked for NULL here but\"\n-\t\t\t\t     \" it was already dereferenced\",\n-\t\t\t\t     m_arg);\n-\telse\n-\t  return ev.formatted_print (\"pointer is checked for NULL here but\"\n-\t\t\t\t     \" it was already dereferenced\");\n-      }\n+      return ev.formatted_print (\"pointer %qE is checked for NULL here but\"\n+\t\t\t\t \" it was already dereferenced\",\n+\t\t\t\t m_arg);\n   }\n \n private:\n+  static bool sufficiently_similar_p (tree expr_a, tree expr_b)\n+  {\n+    pretty_printer *pp_a = global_dc->printer->clone ();\n+    pretty_printer *pp_b = global_dc->printer->clone ();\n+    pp_printf (pp_a, \"%qE\", expr_a);\n+    pp_printf (pp_b, \"%qE\", expr_b);\n+    bool result = (strcmp (pp_formatted_text (pp_a), pp_formatted_text (pp_b))\n+\t\t   == 0);\n+    delete pp_a;\n+    delete pp_b;\n+    return result;\n+  }\n+\n   diagnostic_event_id_t m_first_deref_event;\n   const exploded_node *m_deref_enode;\n+  tree m_deref_expr;\n   const exploded_node *m_check_enode;\n };\n \n@@ -2137,9 +2148,10 @@ maybe_complain_about_deref_before_check (sm_context *sm_ctxt,\n     return;\n \n   tree diag_ptr = sm_ctxt->get_diagnostic_tree (ptr);\n-  sm_ctxt->warn\n-    (node, stmt, ptr,\n-     make_unique<deref_before_check> (*this, diag_ptr));\n+  if (diag_ptr)\n+    sm_ctxt->warn\n+      (node, stmt, ptr,\n+       make_unique<deref_before_check> (*this, diag_ptr));\n   sm_ctxt->set_next_state (stmt, ptr, m_stop);\n }\n "}, {"sha": "e8c927b9fe9bc40b7c2c8dad04e0a458df8eaeea", "filename": "gcc/analyzer/store.cc", "status": "modified", "additions": 58, "deletions": 12, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fanalyzer%2Fstore.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fanalyzer%2Fstore.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fstore.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -1078,6 +1078,9 @@ binding_map::get_overlapping_bindings (const binding_key *key,\n    If UNCERTAINTY is non-NULL, use it to record any svalues that\n    were removed, as being maybe-bound.\n \n+   If MAYBE_LIVE_VALUES is non-NULL, then use it to record any svalues that\n+   were removed as being maybe-live.\n+\n    If ALWAYS_OVERLAP, then assume that DROP_KEY can overlap anything\n    in the map, due to one or both of the underlying clusters being\n    symbolic (but not the same symbolic region).  Hence even if DROP_KEY is a\n@@ -1089,6 +1092,7 @@ void\n binding_map::remove_overlapping_bindings (store_manager *mgr,\n \t\t\t\t\t  const binding_key *drop_key,\n \t\t\t\t\t  uncertainty_t *uncertainty,\n+\t\t\t\t\t  svalue_set *maybe_live_values,\n \t\t\t\t\t  bool always_overlap)\n {\n   /* Get the bindings of interest within this map.  */\n@@ -1123,6 +1127,11 @@ binding_map::remove_overlapping_bindings (store_manager *mgr,\n \t      || always_overlap))\n \tuncertainty->on_maybe_bound_sval (old_sval);\n \n+      /* Record any svalues that were removed to *MAYBE_LIVE_VALUES as being\n+\t maybe-live. */\n+      if (maybe_live_values)\n+\tmaybe_live_values->add (old_sval);\n+\n       /* Begin by removing the old binding. */\n       m_map.remove (iter_binding);\n \n@@ -1416,7 +1425,7 @@ binding_cluster::bind_compound_sval (store_manager *mgr,\n void\n binding_cluster::clobber_region (store_manager *mgr, const region *reg)\n {\n-  remove_overlapping_bindings (mgr, reg, NULL);\n+  remove_overlapping_bindings (mgr, reg, NULL, NULL);\n }\n \n /* Remove any bindings for REG within this cluster.  */\n@@ -1464,6 +1473,8 @@ binding_cluster::zero_fill_region (store_manager *mgr, const region *reg)\n    Remove any bindings overlapping REG_FOR_OVERLAP.\n    If UNCERTAINTY is non-NULL, use it to record any svalues that\n    had bindings to them removed, as being maybe-bound.\n+   If MAYBE_LIVE_VALUES is non-NULL, use it to record any svalues that\n+   had bindings to them removed, as being maybe-live.\n \n    REG_TO_BIND and REG_FOR_OVERLAP are the same for\n    store::mark_region_as_unknown, but are different in\n@@ -1474,12 +1485,14 @@ void\n binding_cluster::mark_region_as_unknown (store_manager *mgr,\n \t\t\t\t\t const region *reg_to_bind,\n \t\t\t\t\t const region *reg_for_overlap,\n-\t\t\t\t\t uncertainty_t *uncertainty)\n+\t\t\t\t\t uncertainty_t *uncertainty,\n+\t\t\t\t\t svalue_set *maybe_live_values)\n {\n   if (reg_to_bind->empty_p ())\n     return;\n \n-  remove_overlapping_bindings (mgr, reg_for_overlap, uncertainty);\n+  remove_overlapping_bindings (mgr, reg_for_overlap, uncertainty,\n+\t\t\t       maybe_live_values);\n \n   /* Add a default binding to \"unknown\".  */\n   region_model_manager *sval_mgr = mgr->get_svalue_manager ();\n@@ -1748,7 +1761,7 @@ binding_cluster::maybe_get_compound_binding (store_manager *mgr,\n \t\t it overlaps with offset_concrete_key.  */\n \t      default_map.remove_overlapping_bindings (mgr,\n \t\t\t\t\t\t       offset_concrete_key,\n-\t\t\t\t\t\t       NULL, false);\n+\t\t\t\t\t\t       NULL, NULL, false);\n \t    }\n \t  else if (bound_range.contains_p (reg_range, &subrange))\n \t    {\n@@ -1782,7 +1795,7 @@ binding_cluster::maybe_get_compound_binding (store_manager *mgr,\n \t\t it overlaps with overlap_concrete_key.  */\n \t      default_map.remove_overlapping_bindings (mgr,\n \t\t\t\t\t\t       overlap_concrete_key,\n-\t\t\t\t\t\t       NULL, false);\n+\t\t\t\t\t\t       NULL, NULL, false);\n \t    }\n \t}\n       else\n@@ -1813,12 +1826,16 @@ binding_cluster::maybe_get_compound_binding (store_manager *mgr,\n    in the map.\n \n    If UNCERTAINTY is non-NULL, use it to record any svalues that\n-   were removed, as being maybe-bound.  */\n+   were removed, as being maybe-bound.\n+\n+   If MAYBE_LIVE_VALUES is non-NULL, use it to record any svalues that\n+   were removed, as being maybe-live.  */\n \n void\n binding_cluster::remove_overlapping_bindings (store_manager *mgr,\n \t\t\t\t\t      const region *reg,\n-\t\t\t\t\t      uncertainty_t *uncertainty)\n+\t\t\t\t\t      uncertainty_t *uncertainty,\n+\t\t\t\t\t      svalue_set *maybe_live_values)\n {\n   if (reg->empty_p ())\n     return;\n@@ -1836,6 +1853,7 @@ binding_cluster::remove_overlapping_bindings (store_manager *mgr,\n \t\t\t && (cluster_base_reg->get_kind () == RK_SYMBOLIC\n \t\t\t     || other_base_reg->get_kind () == RK_SYMBOLIC));\n   m_map.remove_overlapping_bindings (mgr, reg_binding, uncertainty,\n+\t\t\t\t     maybe_live_values,\n \t\t\t\t     always_overlap);\n }\n \n@@ -2600,7 +2618,10 @@ store::set_value (store_manager *mgr, const region *lhs_reg,\n      Writes to symbolic clusters can affect both concrete and symbolic\n      clusters.\n      Invalidate our knowledge of other clusters that might have been\n-     affected by the write.  */\n+     affected by the write.\n+     Gather the set of all svalues that might still be live even if\n+     the store doesn't refer to them.  */\n+  svalue_set maybe_live_values;\n   for (cluster_map_t::iterator iter = m_cluster_map.begin ();\n        iter != m_cluster_map.end (); ++iter)\n     {\n@@ -2637,7 +2658,8 @@ store::set_value (store_manager *mgr, const region *lhs_reg,\n \t\t(mgr,\n \t\t iter_base_reg, /* reg_to_bind */\n \t\t lhs_reg, /* reg_for_overlap */\n-\t\t uncertainty);\n+\t\t uncertainty,\n+\t\t &maybe_live_values);\n \t      break;\n \n \t    case tristate::TS_TRUE:\n@@ -2651,6 +2673,11 @@ store::set_value (store_manager *mgr, const region *lhs_reg,\n \t    }\n \t}\n     }\n+  /* Given the set of svalues that might still be live, process them\n+     (e.g. marking regions as escaped).\n+     We do this after the iteration to avoid potentially changing\n+     m_cluster_map whilst iterating over it.  */\n+  on_maybe_live_values (maybe_live_values);\n }\n \n /* Determine if BASE_REG_A could be an alias of BASE_REG_B.  */\n@@ -2731,6 +2758,21 @@ store::eval_alias_1 (const region *base_reg_a,\n   return tristate::TS_UNKNOWN;\n }\n \n+/* Record all of the values in MAYBE_LIVE_VALUES as being possibly live.  */\n+\n+void\n+store::on_maybe_live_values (const svalue_set &maybe_live_values)\n+{\n+  for (auto sval : maybe_live_values)\n+    {\n+      if (const region_svalue *ptr_sval = sval->dyn_cast_region_svalue ())\n+\t{\n+\t  const region *base_reg = ptr_sval->get_pointee ()->get_base_region ();\n+\t  mark_as_escaped (base_reg);\n+\t}\n+    }\n+}\n+\n /* Remove all bindings overlapping REG within this store.  */\n \n void\n@@ -2798,14 +2840,16 @@ store::zero_fill_region (store_manager *mgr, const region *reg)\n \n void\n store::mark_region_as_unknown (store_manager *mgr, const region *reg,\n-\t\t\t       uncertainty_t *uncertainty)\n+\t\t\t       uncertainty_t *uncertainty,\n+\t\t\t       svalue_set *maybe_live_values)\n {\n   const region *base_reg = reg->get_base_region ();\n   if (base_reg->symbolic_for_unknown_ptr_p ()\n       || !base_reg->tracked_p ())\n     return;\n   binding_cluster *cluster = get_or_create_cluster (base_reg);\n-  cluster->mark_region_as_unknown (mgr, reg, reg, uncertainty);\n+  cluster->mark_region_as_unknown (mgr, reg, reg, uncertainty,\n+\t\t\t\t   maybe_live_values);\n }\n \n /* Purge state involving SVAL.  */\n@@ -3052,7 +3096,9 @@ store::remove_overlapping_bindings (store_manager *mgr, const region *reg,\n \t  delete cluster;\n \t  return;\n \t}\n-      cluster->remove_overlapping_bindings (mgr, reg, uncertainty);\n+      /* Pass NULL for the maybe_live_values here, as we don't want to\n+\t record the old svalues as being maybe-bound.  */\n+      cluster->remove_overlapping_bindings (mgr, reg, uncertainty, NULL);\n     }\n }\n "}, {"sha": "7ded650b60885e11f44762722866b03b9a8130b4", "filename": "gcc/analyzer/store.h", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fanalyzer%2Fstore.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fanalyzer%2Fstore.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fstore.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -541,6 +541,7 @@ class binding_map\n   void remove_overlapping_bindings (store_manager *mgr,\n \t\t\t\t    const binding_key *drop_key,\n \t\t\t\t    uncertainty_t *uncertainty,\n+\t\t\t\t    svalue_set *maybe_live_values,\n \t\t\t\t    bool always_overlap);\n \n private:\n@@ -607,7 +608,8 @@ class binding_cluster\n   void mark_region_as_unknown (store_manager *mgr,\n \t\t\t       const region *reg_to_bind,\n \t\t\t       const region *reg_for_overlap,\n-\t\t\t       uncertainty_t *uncertainty);\n+\t\t\t       uncertainty_t *uncertainty,\n+\t\t\t       svalue_set *maybe_live_values);\n   void purge_state_involving (const svalue *sval,\n \t\t\t      region_model_manager *sval_mgr);\n \n@@ -620,7 +622,8 @@ class binding_cluster\n \t\t\t\t\t     const region *reg) const;\n \n   void remove_overlapping_bindings (store_manager *mgr, const region *reg,\n-\t\t\t\t    uncertainty_t *uncertainty);\n+\t\t\t\t    uncertainty_t *uncertainty,\n+\t\t\t\t    svalue_set *maybe_live_values);\n \n   template <typename T>\n   void for_each_value (void (*cb) (const svalue *sval, T user_data),\n@@ -746,7 +749,8 @@ class store\n   void fill_region (store_manager *mgr, const region *reg, const svalue *sval);\n   void zero_fill_region (store_manager *mgr, const region *reg);\n   void mark_region_as_unknown (store_manager *mgr, const region *reg,\n-\t\t\t       uncertainty_t *uncertainty);\n+\t\t\t       uncertainty_t *uncertainty,\n+\t\t\t       svalue_set *maybe_live_values);\n   void purge_state_involving (const svalue *sval,\n \t\t\t      region_model_manager *sval_mgr);\n \n@@ -801,6 +805,7 @@ class store\n   void replay_call_summary_cluster (call_summary_replay &r,\n \t\t\t\t    const store &summary,\n \t\t\t\t    const region *base_reg);\n+  void on_maybe_live_values (const svalue_set &maybe_live_values);\n \n private:\n   void remove_overlapping_bindings (store_manager *mgr, const region *reg,"}, {"sha": "2424cf69ef1145e3209c0d5be69d55ad189ac8f2", "filename": "gcc/asan.cc", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fasan.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fasan.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fasan.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -3287,7 +3287,17 @@ asan_add_global (tree decl, tree type, vec<constructor_elt, va_gc> *v)\n     pp_string (&asan_pp, \"<unknown>\");\n   str_cst = asan_pp_string (&asan_pp);\n \n-  pp_string (&module_name_pp, main_input_filename);\n+  if (!in_lto_p)\n+    pp_string (&module_name_pp, main_input_filename);\n+  else\n+    {\n+      const_tree tu = get_ultimate_context ((const_tree)decl);\n+      if (tu != NULL_TREE)\n+\tpp_string (&module_name_pp, IDENTIFIER_POINTER (DECL_NAME (tu)));\n+      else\n+\tpp_string (&module_name_pp, aux_base_name);\n+    }\n+\n   module_name_cst = asan_pp_string (&module_name_pp);\n \n   if (asan_needs_local_alias (decl))"}, {"sha": "1bfdc598eec530179879a479b54655bae8a88eef", "filename": "gcc/builtins.cc", "status": "modified", "additions": 43, "deletions": 23, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fbuiltins.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fbuiltins.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -1446,18 +1446,19 @@ apply_args_size (void)\n \t  {\n \t    fixed_size_mode mode = targetm.calls.get_raw_arg_mode (regno);\n \n-\t    gcc_assert (mode != VOIDmode);\n-\n-\t    align = GET_MODE_ALIGNMENT (mode) / BITS_PER_UNIT;\n-\t    if (size % align != 0)\n-\t      size = CEIL (size, align) * align;\n-\t    size += GET_MODE_SIZE (mode);\n-\t    apply_args_mode[regno] = mode;\n+\t    if (mode != VOIDmode)\n+\t      {\n+\t\talign = GET_MODE_ALIGNMENT (mode) / BITS_PER_UNIT;\n+\t\tif (size % align != 0)\n+\t\t  size = CEIL (size, align) * align;\n+\t\tsize += GET_MODE_SIZE (mode);\n+\t\tapply_args_mode[regno] = mode;\n+\t      }\n+\t    else\n+\t      apply_args_mode[regno] = as_a <fixed_size_mode> (VOIDmode);\n \t  }\n \telse\n-\t  {\n-\t    apply_args_mode[regno] = as_a <fixed_size_mode> (VOIDmode);\n-\t  }\n+\t  apply_args_mode[regno] = as_a <fixed_size_mode> (VOIDmode);\n     }\n   return size;\n }\n@@ -1481,13 +1482,16 @@ apply_result_size (void)\n \t  {\n \t    fixed_size_mode mode = targetm.calls.get_raw_result_mode (regno);\n \n-\t    gcc_assert (mode != VOIDmode);\n-\n-\t    align = GET_MODE_ALIGNMENT (mode) / BITS_PER_UNIT;\n-\t    if (size % align != 0)\n-\t      size = CEIL (size, align) * align;\n-\t    size += GET_MODE_SIZE (mode);\n-\t    apply_result_mode[regno] = mode;\n+\t    if (mode != VOIDmode)\n+\t      {\n+\t\talign = GET_MODE_ALIGNMENT (mode) / BITS_PER_UNIT;\n+\t\tif (size % align != 0)\n+\t\t  size = CEIL (size, align) * align;\n+\t\tsize += GET_MODE_SIZE (mode);\n+\t\tapply_result_mode[regno] = mode;\n+\t      }\n+\t    else\n+\t      apply_result_mode[regno] = as_a <fixed_size_mode> (VOIDmode);\n \t  }\n \telse\n \t  apply_result_mode[regno] = as_a <fixed_size_mode> (VOIDmode);\n@@ -2089,6 +2093,14 @@ mathfn_built_in (tree type, combined_fn fn)\n   return mathfn_built_in_1 (type, fn, /*implicit=*/ 1);\n }\n \n+/* Like mathfn_built_in_1, but always use the explicit array.  */\n+\n+tree\n+mathfn_built_in_explicit (tree type, combined_fn fn)\n+{\n+  return mathfn_built_in_1 (type, fn, /*implicit=*/ 0);\n+}\n+\n /* Like mathfn_built_in_1, but take a built_in_function and\n    always use the implicit array.  */\n \n@@ -4204,7 +4216,7 @@ builtin_memset_read_str (void *data, void *prev,\n \treturn const_vec;\n \n       /* Use the move expander with CONST_VECTOR.  */\n-      target = targetm.gen_memset_scratch_rtx (mode);\n+      target = gen_reg_rtx (mode);\n       emit_move_insn (target, const_vec);\n       return target;\n     }\n@@ -4248,7 +4260,7 @@ builtin_memset_gen_str (void *data, void *prev,\n \t the memset expander.  */\n       insn_code icode = optab_handler (vec_duplicate_optab, mode);\n \n-      target = targetm.gen_memset_scratch_rtx (mode);\n+      target = gen_reg_rtx (mode);\n       class expand_operand ops[2];\n       create_output_operand (&ops[0], target, mode);\n       create_input_operand (&ops[1], (rtx) data, QImode);\n@@ -7134,8 +7146,16 @@ inline_string_cmp (rtx target, tree var_str, const char *const_str,\n \n       op0 = convert_modes (mode, unit_mode, op0, 1);\n       op1 = convert_modes (mode, unit_mode, op1, 1);\n-      result = expand_simple_binop (mode, MINUS, op0, op1,\n-\t\t\t\t    result, 1, OPTAB_WIDEN);\n+      rtx diff = expand_simple_binop (mode, MINUS, op0, op1,\n+\t\t\t\t      result, 1, OPTAB_WIDEN);\n+\n+      /* Force the difference into result register.  We cannot reassign\n+\t result here (\"result = diff\") or we may end up returning\n+\t uninitialized result when expand_simple_binop allocates a new\n+\t pseudo-register for returning.  */\n+      if (diff != result)\n+\temit_move_insn (result, diff);\n+\n       if (i < length - 1)\n \temit_cmp_and_jump_insns (result, CONST0_RTX (mode), NE, NULL_RTX,\n \t    \t\t\t mode, true, ne_label);\n@@ -7162,8 +7182,8 @@ inline_expand_builtin_bytecmp (tree exp, rtx target)\n   bool is_ncmp = (fcode == BUILT_IN_STRNCMP || fcode == BUILT_IN_MEMCMP);\n \n   /* Do NOT apply this inlining expansion when optimizing for size or\n-     optimization level below 2.  */\n-  if (optimize < 2 || optimize_insn_for_size_p ())\n+     optimization level below 2 or if unused *cmp hasn't been DCEd.  */\n+  if (optimize < 2 || optimize_insn_for_size_p () || target == const0_rtx)\n     return NULL_RTX;\n \n   gcc_checking_assert (fcode == BUILT_IN_STRCMP"}, {"sha": "2fd0d5a3a3e4fc5059c5fec56a8914104cb972de", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -1,3 +1,96 @@\n+2023-03-28  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR c/107002\n+\t* c-common.h (check_for_xor_used_as_pow): Add \"rhs_loc\" param.\n+\t* c-warn.cc (check_for_xor_used_as_pow): Add \"rhs_loc\" param.\n+\tReject cases where involving macro expansions.\n+\n+2023-03-28  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/107163\n+\t* c-common.cc (verify_tree): Don't use sequenced handling\n+\tfor COMPONENT_REF.\n+\n+2023-03-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/109151\n+\t* c-ubsan.cc (ubsan_instrument_division): Handle all scalar integral\n+\ttypes rather than just INTEGER_TYPE.\n+\n+2023-03-10  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitizer/108060\n+\tPR sanitizer/109050\n+\t* c-gimplify.cc (ubsan_walk_array_refs_r): For a MODIFY_EXPR, instrument\n+\tthe RHS before the LHS.\n+\n+2023-03-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/107465\n+\t* c-warn.cc (warn_for_sign_compare): Don't warn for unset bits\n+\tabove innermost zero extension of BIT_NOT_EXPR result.\n+\n+2023-03-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/107465\n+\t* c-warn.cc (warn_for_sign_compare): If c_common_get_narrower\n+\tdoesn't return a narrower result, use TYPE_UNSIGNED to set unsignedp0\n+\tand unsignedp1.  For the one BIT_NOT_EXPR case vs. one without,\n+\tonly check for constant in the non-BIT_NOT_EXPR operand, use std::swap\n+\tto simplify the code, only warn if BIT_NOT_EXPR operand is extended\n+\tfrom narrower unsigned, fix up computation of mask for the constant\n+\tcases and for unsigned other operand case handle differently\n+\tBIT_NOT_EXPR result being sign vs. zero extended.\n+\n+2023-03-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/107846\n+\t* c-warn.cc: Include langhooks.h.\n+\t(maybe_warn_shift_overflow): Set type0 to what TREE_TYPE (op0)\n+\tpromotes to rather than TREE_TYPE (op0) itself, if TREE_TYPE (op0)\n+\tis narrower than type0 and unsigned, use wi::min_precision with\n+\tUNSIGNED and fold_convert op0 to type0 before emitting the warning.\n+\n+2023-03-03  Alexandre Oliva  <oliva@adacore.com>\n+\n+\t* c-common.cc (c_common_nodes_and_builtins): Take\n+\twchar_type_node for wint_type_node when aliased.\n+\t(c_stddef_cpp_builtins): Define __WINT_TYPE__, when aliased to\n+\twchar_t, to the underlying type rather than wchar_t in\n+\tnon-C++.\n+\t* c-cppbuiltin.cc (type_suffix): Handle wchar_type_node.\n+\n+2023-02-28  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/107938\n+\t* c-warn.cc (check_address_or_pointer_of_packed_member): Check\n+\tPOINTER_TYPE_P.\n+\n+2023-02-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/108894\n+\t* c-common.h (c_strict_flex_array_level_of): Declare.\n+\t* c-common.cc (c_strict_flex_array_level_of): New function,\n+\tmoved and renamed from c-decl.cc's strict_flex_array_level_of.\n+\t* c-ubsan.cc (ubsan_instrument_bounds): Fix comment typo.  For\n+\tC check c_strict_flex_array_level_of whether a trailing array\n+\tshould be treated as flexible member like.  Handle C [0] arrays.\n+\tAdd 1 + index_off_by_one rather than index_off_by_one to bounds\n+\tand use tree_int_cst_lt rather than tree_int_cst_le for idx vs.\n+\tbounds comparison.\n+\n+2023-02-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR translation/108890\n+\t* c.opt (fcontracts): Fix description.\n+\n+2023-02-22  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/108880\n+\t* c-gimplify.cc (c_genericize_control_stmt) <case STATEMENT_LIST>: Pass\n+\tpset to walk_tree_1.\n+\t(c_genericize): Call walk_tree with an explicit pset.\n+\n 2023-02-18  Martin Uecker  <uecker@tugraz.at>\n \n \tPR c/105660"}, {"sha": "2b4c82facf7f95560f2d3b0aa50e8412f5809c5b", "filename": "gcc/c-family/c-common.cc", "status": "modified", "additions": 48, "deletions": 4, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fc-family%2Fc-common.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fc-family%2Fc-common.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -2154,12 +2154,17 @@ verify_tree (tree x, struct tlist **pbefore_sp, struct tlist **pno_sp,\n \n     case LSHIFT_EXPR:\n     case RSHIFT_EXPR:\n-    case COMPONENT_REF:\n     case ARRAY_REF:\n       if (cxx_dialect >= cxx17)\n \tgoto sequenced_binary;\n       goto do_default;\n \n+    case COMPONENT_REF:\n+      /* Treat as unary, the other operands aren't evaluated.  */\n+      x = TREE_OPERAND (x, 0);\n+      writer = 0;\n+      goto restart;\n+\n     default:\n     do_default:\n       /* For other expressions, simply recurse on their operands.\n@@ -4576,8 +4581,11 @@ c_common_nodes_and_builtins (void)\n   char32_array_type_node\n     = build_array_type (char32_type_node, array_domain_type);\n \n-  wint_type_node =\n-    TREE_TYPE (identifier_global_value (get_identifier (WINT_TYPE)));\n+  if (strcmp (WINT_TYPE, \"wchar_t\") == 0)\n+    wint_type_node = wchar_type_node;\n+  else\n+    wint_type_node =\n+      TREE_TYPE (identifier_global_value (get_identifier (WINT_TYPE)));\n \n   intmax_type_node =\n     TREE_TYPE (identifier_global_value (get_identifier (INTMAX_TYPE)));\n@@ -5359,7 +5367,14 @@ c_stddef_cpp_builtins(void)\n   builtin_define_with_value (\"__SIZE_TYPE__\", SIZE_TYPE, 0);\n   builtin_define_with_value (\"__PTRDIFF_TYPE__\", PTRDIFF_TYPE, 0);\n   builtin_define_with_value (\"__WCHAR_TYPE__\", MODIFIED_WCHAR_TYPE, 0);\n-  builtin_define_with_value (\"__WINT_TYPE__\", WINT_TYPE, 0);\n+  /* C++ has wchar_t as a builtin type, C doesn't, so if WINT_TYPE\n+     maps to wchar_t, define it to the underlying WCHAR_TYPE in C, and\n+     to wchar_t in C++, so the desired type equivalence holds.  */\n+  if (!c_dialect_cxx ()\n+      && strcmp (WINT_TYPE, \"wchar_t\") == 0)\n+    builtin_define_with_value (\"__WINT_TYPE__\", WCHAR_TYPE, 0);\n+  else\n+    builtin_define_with_value (\"__WINT_TYPE__\", WINT_TYPE, 0);\n   builtin_define_with_value (\"__INTMAX_TYPE__\", INTMAX_TYPE, 0);\n   builtin_define_with_value (\"__UINTMAX_TYPE__\", UINTMAX_TYPE, 0);\n   if (flag_char8_t)\n@@ -9501,4 +9516,33 @@ c_common_finalize_early_debug (void)\n       (*debug_hooks->early_global_decl) (cnode->decl);\n }\n \n+/* Get the LEVEL of the strict_flex_array for the ARRAY_FIELD based on the\n+   values of attribute strict_flex_array and the flag_strict_flex_arrays.  */\n+unsigned int\n+c_strict_flex_array_level_of (tree array_field)\n+{\n+  gcc_assert (TREE_CODE (array_field) == FIELD_DECL);\n+  unsigned int strict_flex_array_level = flag_strict_flex_arrays;\n+\n+  tree attr_strict_flex_array\n+    = lookup_attribute (\"strict_flex_array\", DECL_ATTRIBUTES (array_field));\n+  /* If there is a strict_flex_array attribute attached to the field,\n+     override the flag_strict_flex_arrays.  */\n+  if (attr_strict_flex_array)\n+    {\n+      /* Get the value of the level first from the attribute.  */\n+      unsigned HOST_WIDE_INT attr_strict_flex_array_level = 0;\n+      gcc_assert (TREE_VALUE (attr_strict_flex_array) != NULL_TREE);\n+      attr_strict_flex_array = TREE_VALUE (attr_strict_flex_array);\n+      gcc_assert (TREE_VALUE (attr_strict_flex_array) != NULL_TREE);\n+      attr_strict_flex_array = TREE_VALUE (attr_strict_flex_array);\n+      gcc_assert (tree_fits_uhwi_p (attr_strict_flex_array));\n+      attr_strict_flex_array_level = tree_to_uhwi (attr_strict_flex_array);\n+\n+      /* The attribute has higher priority than flag_struct_flex_array.  */\n+      strict_flex_array_level = attr_strict_flex_array_level;\n+    }\n+  return strict_flex_array_level;\n+}\n+\n #include \"gt-c-family-c-common.h\""}, {"sha": "f96350b64af0ca59d1a125534a5b909e761c213c", "filename": "gcc/c-family/c-common.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fc-family%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fc-family%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -907,6 +907,7 @@ extern tree fold_for_warn (tree);\n extern tree c_common_get_narrower (tree, int *);\n extern bool get_attribute_operand (tree, unsigned HOST_WIDE_INT *);\n extern void c_common_finalize_early_debug (void);\n+extern unsigned int c_strict_flex_array_level_of (tree);\n extern bool c_option_is_from_cpp_diagnostics (int);\n \n /* Used by convert_and_check; in front ends.  */\n@@ -1523,7 +1524,7 @@ extern void warn_for_multistatement_macros (location_t, location_t,\n \n extern void check_for_xor_used_as_pow (location_t lhs_loc, tree lhs_val,\n \t\t\t\t       location_t operator_loc,\n-\t\t\t\t       tree rhs_val);\n+\t\t\t\t       location_t rhs_loc, tree rhs_val);\n \n /* In c-attribs.cc.  */\n extern bool attribute_takes_identifier_p (const_tree);"}, {"sha": "98f5aef2af95d81eb353f12ab894158d793772af", "filename": "gcc/c-family/c-cppbuiltin.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fc-family%2Fc-cppbuiltin.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fc-family%2Fc-cppbuiltin.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-cppbuiltin.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -1903,6 +1903,8 @@ type_suffix (tree type)\n \t      systems use it anyway.  */\n \t   || type == char_type_node)\n     is_long = 0;\n+  else if (type == wchar_type_node)\n+    return type_suffix (underlying_wchar_type_node);\n   else\n     gcc_unreachable ();\n "}, {"sha": "ef5c7d919fcc678f2b8aac453c5d82d8ac76b4ef", "filename": "gcc/c-family/c-gimplify.cc", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fc-family%2Fc-gimplify.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fc-family%2Fc-gimplify.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-gimplify.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -106,6 +106,18 @@ ubsan_walk_array_refs_r (tree *tp, int *walk_subtrees, void *data)\n     }\n   else if (TREE_CODE (*tp) == ARRAY_REF)\n     ubsan_maybe_instrument_array_ref (tp, false);\n+  else if (TREE_CODE (*tp) == MODIFY_EXPR)\n+    {\n+      /* Since r7-1900, we gimplify RHS before LHS.  Consider\n+\t   a[b] |= c;\n+\t wherein we can have a single shared tree a[b] in both LHS and RHS.\n+\t If we only instrument the LHS and the access is invalid, the program\n+\t could crash before emitting a UBSan error.  So instrument the RHS\n+\t first.  */\n+      *walk_subtrees = 0;\n+      walk_tree (&TREE_OPERAND (*tp, 1), ubsan_walk_array_refs_r, pset, pset);\n+      walk_tree (&TREE_OPERAND (*tp, 0), ubsan_walk_array_refs_r, pset, pset);\n+    }\n   return NULL_TREE;\n }\n \n@@ -511,12 +523,15 @@ c_genericize_control_stmt (tree *stmt_p, int *walk_subtrees, void *data,\n \t     STATEMENT_LIST wouldn't be present at all the resulting\n \t     expression wouldn't have TREE_SIDE_EFFECTS set, so make sure\n \t     to clear it even on the STATEMENT_LIST in such cases.  */\n+\t  hash_set<tree> *pset = (c_dialect_cxx ()\n+\t\t\t\t  ? nullptr\n+\t\t\t\t  : static_cast<hash_set<tree> *>(data));\n \t  for (i = tsi_start (stmt); !tsi_end_p (i); tsi_next (&i))\n \t    {\n \t      tree t = tsi_stmt (i);\n \t      if (TREE_CODE (t) != DEBUG_BEGIN_STMT && nondebug_stmts < 2)\n \t\tnondebug_stmts++;\n-\t      walk_tree_1 (tsi_stmt_ptr (i), func, data, NULL, lh);\n+\t      walk_tree_1 (tsi_stmt_ptr (i), func, data, pset, lh);\n \t      if (TREE_CODE (t) != DEBUG_BEGIN_STMT\n \t\t  && (nondebug_stmts > 1 || TREE_SIDE_EFFECTS (tsi_stmt (i))))\n \t\tclear_side_effects = false;\n@@ -572,8 +587,9 @@ c_genericize (tree fndecl)\n       bc_state_t save_state;\n       push_cfun (DECL_STRUCT_FUNCTION (fndecl));\n       save_bc_state (&save_state);\n-      walk_tree_without_duplicates (&DECL_SAVED_TREE (fndecl),\n-\t\t\t\t    c_genericize_control_r, NULL);\n+      hash_set<tree> pset;\n+      walk_tree (&DECL_SAVED_TREE (fndecl), c_genericize_control_r, &pset,\n+\t\t &pset);\n       restore_bc_state (&save_state);\n       pop_cfun ();\n     }"}, {"sha": "c3ae515306cfbe9ee773383f1f222582fdce5cf3", "filename": "gcc/c-family/c-ubsan.cc", "status": "modified", "additions": 59, "deletions": 8, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fc-family%2Fc-ubsan.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fc-family%2Fc-ubsan.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-ubsan.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -53,7 +53,7 @@ ubsan_instrument_division (location_t loc, tree op0, tree op1)\n   op0 = unshare_expr (op0);\n   op1 = unshare_expr (op1);\n \n-  if (TREE_CODE (type) == INTEGER_TYPE\n+  if (INTEGRAL_TYPE_P (type)\n       && sanitize_flags_p (SANITIZE_DIVIDE))\n     t = fold_build2 (EQ_EXPR, boolean_type_node,\n \t\t     op1, build_int_cst (type, 0));\n@@ -68,7 +68,7 @@ ubsan_instrument_division (location_t loc, tree op0, tree op1)\n     t = NULL_TREE;\n \n   /* We check INT_MIN / -1 only for signed types.  */\n-  if (TREE_CODE (type) == INTEGER_TYPE\n+  if (INTEGRAL_TYPE_P (type)\n       && sanitize_flags_p (SANITIZE_SI_OVERFLOW)\n       && !TYPE_UNSIGNED (type))\n     {\n@@ -354,7 +354,7 @@ ubsan_instrument_return (location_t loc)\n    that gets expanded in the sanopt pass, and make an array dimension\n    of it.  ARRAY is the array, *INDEX is an index to the array.\n    Return NULL_TREE if no instrumentation is emitted.\n-   IGNORE_OFF_BY_ONE is true if the ARRAY_REF is inside a ADDR_EXPR.  */\n+   IGNORE_OFF_BY_ONE is true if the ARRAY_REF is inside an ADDR_EXPR.  */\n \n tree\n ubsan_instrument_bounds (location_t loc, tree array, tree *index,\n@@ -363,13 +363,25 @@ ubsan_instrument_bounds (location_t loc, tree array, tree *index,\n   tree type = TREE_TYPE (array);\n   tree domain = TYPE_DOMAIN (type);\n \n-  if (domain == NULL_TREE || TYPE_MAX_VALUE (domain) == NULL_TREE)\n+  if (domain == NULL_TREE)\n     return NULL_TREE;\n \n   tree bound = TYPE_MAX_VALUE (domain);\n-  if (ignore_off_by_one)\n-    bound = fold_build2 (PLUS_EXPR, TREE_TYPE (bound), bound,\n-\t\t\t build_int_cst (TREE_TYPE (bound), 1));\n+  if (!bound)\n+    {\n+      /* Handle C [0] arrays, which have TYPE_MAX_VALUE NULL, like\n+\t C++ [0] arrays which have TYPE_MIN_VALUE 0 TYPE_MAX_VALUE -1.  */\n+      if (!c_dialect_cxx ()\n+\t  && COMPLETE_TYPE_P (type)\n+\t  && integer_zerop (TYPE_SIZE (type)))\n+\tbound = build_int_cst (TREE_TYPE (TYPE_MIN_VALUE (domain)), -1);\n+      else\n+\treturn NULL_TREE;\n+    }\n+\n+  bound = fold_build2 (PLUS_EXPR, TREE_TYPE (bound), bound,\n+\t\t       build_int_cst (TREE_TYPE (bound),\n+\t\t       1 + ignore_off_by_one));\n \n   /* Detect flexible array members and suchlike, unless\n      -fsanitize=bounds-strict.  */\n@@ -392,6 +404,45 @@ ubsan_instrument_bounds (location_t loc, tree array, tree *index,\n \t  if (next)\n \t    /* Not a last element.  Instrument it.  */\n \t    break;\n+\t  if (TREE_CODE (TREE_TYPE (TREE_OPERAND (cref, 1))) == ARRAY_TYPE\n+\t      && !c_dialect_cxx ())\n+\t    {\n+\t      unsigned l\n+\t\t= c_strict_flex_array_level_of (TREE_OPERAND (cref, 1));\n+\t      tree type2 = TREE_TYPE (TREE_OPERAND (cref, 1));\n+\t      if (TYPE_DOMAIN (type2) != NULL_TREE)\n+\t\t{\n+\t\t  tree max = TYPE_MAX_VALUE (TYPE_DOMAIN (type2));\n+\t\t  if (max == NULL_TREE)\n+\t\t    {\n+\t\t      /* C [0] */\n+\t\t      if (COMPLETE_TYPE_P (type2)\n+\t\t\t  && integer_zerop (TYPE_SIZE (type2))\n+\t\t\t  && l == 3)\n+\t\t\tnext = TREE_OPERAND (cref, 1);\n+\t\t    }\n+\t\t  else if (TREE_CODE (max) == INTEGER_CST)\n+\t\t    {\n+\t\t      if (c_dialect_cxx ()\n+\t\t\t  && integer_all_onesp (max))\n+\t\t\t{\n+\t\t\t  /* C++ [0] */\n+\t\t\t  if (l == 3)\n+\t\t\t    next = TREE_OPERAND (cref, 1);\n+\t\t\t}\n+\t\t      else if (integer_zerop (max))\n+\t\t\t{\n+\t\t\t  /* C/C++ [1] */\n+\t\t\t  if (l >= 2)\n+\t\t\t    next = TREE_OPERAND (cref, 1);\n+\t\t\t}\n+\t\t      else if (l >= 1)\n+\t\t\tnext = TREE_OPERAND (cref, 1);\n+\t\t    }\n+\t\t}\n+\t      if (next)\n+\t\tbreak;\n+\t    }\n \t  /* Ok, this is the last field of the structure/union.  But the\n \t     aggregate containing the field must be the last field too,\n \t     recursively.  */\n@@ -413,7 +464,7 @@ ubsan_instrument_bounds (location_t loc, tree array, tree *index,\n   if (idx\n       && TREE_CODE (bound) == INTEGER_CST\n       && tree_int_cst_sgn (idx) >= 0\n-      && tree_int_cst_le (idx, bound))\n+      && tree_int_cst_lt (idx, bound))\n     return NULL_TREE;\n \n   *index = save_expr (*index);"}, {"sha": "9ac43a1af6ef5f9bc9c5bc2368a16a72588bed2c", "filename": "gcc/c-family/c-warn.cc", "status": "modified", "additions": 86, "deletions": 39, "changes": 125, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fc-family%2Fc-warn.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fc-family%2Fc-warn.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-warn.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -39,6 +39,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"calls.h\"\n #include \"stor-layout.h\"\n #include \"tree-pretty-print.h\"\n+#include \"langhooks.h\"\n \n /* Print a warning if a constant expression had overflow in folding.\n    Invoke this function on every expression that the language\n@@ -2344,42 +2345,63 @@ warn_for_sign_compare (location_t location,\n      have all bits set that are set in the ~ operand when it is\n      extended.  */\n \n-  op0 = c_common_get_narrower (op0, &unsignedp0);\n-  op1 = c_common_get_narrower (op1, &unsignedp1);\n+  /* bits0 is the bit index of op0 extended to result_type, which will\n+     be always 0 and so all bits above it.  If there is a BIT_NOT_EXPR\n+     in that operand possibly sign or zero extended to op0 and then\n+     possibly further sign or zero extended to result_type, bits0 will\n+     be the precision of result type if all the extensions involved\n+     if any are sign extensions, and will be the place of the innermost\n+     zero extension otherwise.  We warn only if BIT_NOT_EXPR's operand is\n+     zero extended from some even smaller precision, in that case after\n+     BIT_NOT_EXPR some bits below bits0 will be guaranteed to be set.\n+     Similarly for bits1.  */\n+  int bits0 = TYPE_PRECISION (result_type);\n+  if (TYPE_UNSIGNED (TREE_TYPE (op0)))\n+    bits0 = TYPE_PRECISION (TREE_TYPE (op0));\n+  tree arg0 = c_common_get_narrower (op0, &unsignedp0);\n+  if (TYPE_PRECISION (TREE_TYPE (arg0)) == TYPE_PRECISION (TREE_TYPE (op0)))\n+    unsignedp0 = TYPE_UNSIGNED (TREE_TYPE (op0));\n+  else if (unsignedp0)\n+    bits0 = TYPE_PRECISION (TREE_TYPE (arg0));\n+  op0 = arg0;\n+  int bits1 = TYPE_PRECISION (result_type);\n+  if (TYPE_UNSIGNED (TREE_TYPE (op1)))\n+    bits1 = TYPE_PRECISION (TREE_TYPE (op1));\n+  tree arg1 = c_common_get_narrower (op1, &unsignedp1);\n+  if (TYPE_PRECISION (TREE_TYPE (arg1)) == TYPE_PRECISION (TREE_TYPE (op1)))\n+    unsignedp1 = TYPE_UNSIGNED (TREE_TYPE (op1));\n+  else if (unsignedp1)\n+    bits1 = TYPE_PRECISION (TREE_TYPE (arg1));\n+  op1 = arg1;\n \n   if ((TREE_CODE (op0) == BIT_NOT_EXPR)\n       ^ (TREE_CODE (op1) == BIT_NOT_EXPR))\n     {\n-      if (TREE_CODE (op0) == BIT_NOT_EXPR)\n-\top0 = c_common_get_narrower (TREE_OPERAND (op0, 0), &unsignedp0);\n       if (TREE_CODE (op1) == BIT_NOT_EXPR)\n-\top1 = c_common_get_narrower (TREE_OPERAND (op1, 0), &unsignedp1);\n-\n-      if (tree_fits_shwi_p (op0) || tree_fits_shwi_p (op1))\n \t{\n-\t  tree primop;\n-\t  HOST_WIDE_INT constant, mask;\n-\t  int unsignedp;\n-\t  unsigned int bits;\n+\t  std::swap (op0, op1);\n+\t  std::swap (unsignedp0, unsignedp1);\n+\t  std::swap (bits0, bits1);\n+\t}\n \n-\t  if (tree_fits_shwi_p (op0))\n-\t    {\n-\t      primop = op1;\n-\t      unsignedp = unsignedp1;\n-\t      constant = tree_to_shwi (op0);\n-\t    }\n-\t  else\n-\t    {\n-\t      primop = op0;\n-\t      unsignedp = unsignedp0;\n-\t      constant = tree_to_shwi (op1);\n-\t    }\n+      int unsignedp;\n+      arg0 = c_common_get_narrower (TREE_OPERAND (op0, 0), &unsignedp);\n \n-\t  bits = TYPE_PRECISION (TREE_TYPE (primop));\n-\t  if (bits < TYPE_PRECISION (result_type)\n-\t      && bits < HOST_BITS_PER_LONG && unsignedp)\n+      /* For these warnings, we need BIT_NOT_EXPR operand to be\n+\t zero extended from narrower type to BIT_NOT_EXPR's type.\n+\t In that case, all those bits above the narrower's type\n+\t are after BIT_NOT_EXPR set to 1.  */\n+      if (tree_fits_shwi_p (op1))\n+\t{\n+\t  HOST_WIDE_INT constant = tree_to_shwi (op1);\n+\t  unsigned int bits = TYPE_PRECISION (TREE_TYPE (arg0));\n+\t  if (unsignedp\n+\t      && bits < TYPE_PRECISION (TREE_TYPE (op0))\n+\t      && bits < HOST_BITS_PER_WIDE_INT)\n \t    {\n-\t      mask = HOST_WIDE_INT_M1U << bits;\n+\t      HOST_WIDE_INT mask = HOST_WIDE_INT_M1U << bits;\n+\t      if (bits0 < HOST_BITS_PER_WIDE_INT)\n+\t\tmask &= ~(HOST_WIDE_INT_M1U << bits0);\n \t      if ((mask & constant) != mask)\n \t\t{\n \t\t  if (constant == 0)\n@@ -2393,11 +2415,11 @@ warn_for_sign_compare (location_t location,\n \t\t}\n \t    }\n \t}\n-      else if (unsignedp0 && unsignedp1\n-\t       && (TYPE_PRECISION (TREE_TYPE (op0))\n-\t\t   < TYPE_PRECISION (result_type))\n-\t       && (TYPE_PRECISION (TREE_TYPE (op1))\n-\t\t   < TYPE_PRECISION (result_type)))\n+      else if ((TYPE_PRECISION (TREE_TYPE (arg0))\n+\t\t< TYPE_PRECISION (TREE_TYPE (op0)))\n+\t       && unsignedp\n+\t       && unsignedp1\n+\t       && TYPE_PRECISION (TREE_TYPE (op1)) < bits0)\n \twarning_at (location, OPT_Wsign_compare,\n \t\t    \"comparison of promoted bitwise complement \"\n \t\t    \"of an unsigned value with unsigned\");\n@@ -2615,14 +2637,19 @@ maybe_warn_shift_overflow (location_t loc, tree op0, tree op1)\n       || TREE_CODE (op1) != INTEGER_CST)\n     return false;\n \n-  tree type0 = TREE_TYPE (op0);\n+  /* match.pd could have narrowed the left shift already,\n+     take type promotion into account.  */\n+  tree type0 = lang_hooks.types.type_promotes_to (TREE_TYPE (op0));\n   unsigned int prec0 = TYPE_PRECISION (type0);\n \n   /* Left-hand operand must be signed.  */\n   if (TYPE_OVERFLOW_WRAPS (type0) || cxx_dialect >= cxx20)\n     return false;\n \n-  unsigned int min_prec = (wi::min_precision (wi::to_wide (op0), SIGNED)\n+  signop sign = SIGNED;\n+  if (TYPE_PRECISION (TREE_TYPE (op0)) < TYPE_PRECISION (type0))\n+    sign = TYPE_SIGN (TREE_TYPE (op0));\n+  unsigned int min_prec = (wi::min_precision (wi::to_wide (op0), sign)\n \t\t\t   + TREE_INT_CST_LOW (op1));\n   /* Handle the case of left-shifting 1 into the sign bit.\n    * However, shifting 1 _out_ of the sign bit, as in\n@@ -2645,7 +2672,8 @@ maybe_warn_shift_overflow (location_t loc, tree op0, tree op1)\n     warning_at (loc, OPT_Wshift_overflow_,\n \t\t\"result of %qE requires %u bits to represent, \"\n \t\t\"but %qT only has %u bits\",\n-\t\tbuild2_loc (loc, LSHIFT_EXPR, type0, op0, op1),\n+\t\tbuild2_loc (loc, LSHIFT_EXPR, type0,\n+\t\t\t    fold_convert (type0, op0), op1),\n \t\tmin_prec, type0, prec0);\n \n   return overflowed;\n@@ -3000,6 +3028,10 @@ check_address_or_pointer_of_packed_member (tree type, tree rhs)\n \t  if (rhs == NULL_TREE)\n \t    return NULL_TREE;\n \t  rhs = TREE_TYPE (rhs);\t/* Pointer type.  */\n+\t  /* We could be called while processing a template and RHS could be\n+\t     a functor.  In that case it's a class, not a pointer.  */\n+\t  if (!POINTER_TYPE_P (rhs))\n+\t    return NULL_TREE;\n \t  rhs = TREE_TYPE (rhs);\t/* Function type.  */\n \t  rhstype = TREE_TYPE (rhs);\n \t  if (!rhstype || !POINTER_TYPE_P (rhstype))\n@@ -3803,14 +3835,15 @@ do_warn_array_compare (location_t location, tree_code code, tree op0, tree op1)\n     }\n }\n \n-/* Given LHS_VAL ^ RHS_VAL, where LHS_LOC is the location of the LHS and\n-   OPERATOR_LOC is the location of the ^, complain with -Wxor-used-as-pow\n-   if it looks like the user meant exponentiation rather than xor.  */\n+/* Given LHS_VAL ^ RHS_VAL, where LHS_LOC is the location of the LHS,\n+   OPERATOR_LOC is the location of the ^, and RHS_LOC the location of the\n+   RHS, complain with -Wxor-used-as-pow if it looks like the user meant\n+   exponentiation rather than xor.  */\n \n void\n check_for_xor_used_as_pow (location_t lhs_loc, tree lhs_val,\n \t\t\t   location_t operator_loc,\n-\t\t\t   tree rhs_val)\n+\t\t\t   location_t rhs_loc, tree rhs_val)\n {\n   /* Only complain if both args are non-negative integer constants that fit\n      in uhwi.  */\n@@ -3827,6 +3860,20 @@ check_for_xor_used_as_pow (location_t lhs_loc, tree lhs_val,\n   binary_op_rich_location loc (operator_loc,\n \t\t\t       lhs_val, rhs_val, false);\n \n+  /* Reject cases where we don't have 3 distinct locations.\n+     This can happen e.g. due to macro expansion with\n+     -ftrack-macro-expansion=0 */\n+  if (!(lhs_loc != operator_loc\n+\t&& lhs_loc != rhs_loc\n+\t&& operator_loc != rhs_loc))\n+    return;\n+\n+  /* Reject cases in which any of the locations came from a macro.  */\n+  if (from_macro_expansion_at (lhs_loc)\n+      || from_macro_expansion_at (operator_loc)\n+      || from_macro_expansion_at (rhs_loc))\n+    return;\n+\n   /* If we issue fix-it hints with the warning then we will also issue a\n      note suggesting how to suppress the warning with a different change.\n      These proposed changes are incompatible.  */"}, {"sha": "3333cddeece7e3920bd903eca7ab5e28411be1d2", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -1689,7 +1689,7 @@ C++ ObjC++ Joined RejectNegative Host_Wide_Int Var(constexpr_ops_limit) Init(335\n \n fcontracts\n C++ ObjC++ Var(flag_contracts) Init(0)\n-Enable certain features present drafts of C++ Contracts.\n+Enable certain features present in drafts of C++ Contracts.\n \n Enum\n Name(on_off) Type(int) UnknownError(argument %qs must be either %<on%> or %<off%>)"}, {"sha": "f23b3ba65dae754c63b062b83372e64f1ab32359", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -1,3 +1,22 @@\n+2023-03-28  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR c/107002\n+\t* c-typeck.cc (parser_build_binary_op): Update for new param of\n+\tcheck_for_xor_used_as_pow.\n+\n+2023-03-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/108079\n+\t* c-decl.cc (pop_scope): Suppress OPT_Wunused_variable warning\n+\tafter diagnosing it.\n+\n+2023-02-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/108894\n+\t* c-decl.cc (strict_flex_array_level_of): Move to c-common.cc\n+\tand rename to c_strict_flex_array_level_of.\n+\t(is_flexible_array_member_p): Adjust caller.\n+\n 2023-02-18  Martin Uecker  <uecker@tugraz.at>\n \n \tPR c/108375"}, {"sha": "e537d33f3986083c039f671bcf5eb4c6f0408300", "filename": "gcc/c/c-decl.cc", "status": "modified", "additions": 5, "deletions": 31, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fc%2Fc-decl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fc%2Fc-decl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -1310,7 +1310,10 @@ pop_scope (void)\n \t      && scope != external_scope)\n \t    {\n \t      if (!TREE_USED (p))\n-\t\twarning (OPT_Wunused_variable, \"unused variable %q+D\", p);\n+\t\t{\n+\t\t  warning (OPT_Wunused_variable, \"unused variable %q+D\", p);\n+\t\t  suppress_warning (p, OPT_Wunused_variable);\n+\t\t}\n \t      else if (DECL_CONTEXT (p) == current_function_decl)\n \t\twarning_at (DECL_SOURCE_LOCATION (p),\n \t\t\t    OPT_Wunused_but_set_variable,\n@@ -9050,35 +9053,6 @@ finish_incomplete_vars (tree incomplete_vars, bool toplevel)\n     }\n }\n \n-/* Get the LEVEL of the strict_flex_array for the ARRAY_FIELD based on the\n-   values of attribute strict_flex_array and the flag_strict_flex_arrays.  */\n-static unsigned int\n-strict_flex_array_level_of (tree array_field)\n-{\n-  gcc_assert (TREE_CODE (array_field) == FIELD_DECL);\n-  unsigned int strict_flex_array_level = flag_strict_flex_arrays;\n-\n-  tree attr_strict_flex_array\n-    = lookup_attribute (\"strict_flex_array\", DECL_ATTRIBUTES (array_field));\n-  /* If there is a strict_flex_array attribute attached to the field,\n-     override the flag_strict_flex_arrays.  */\n-  if (attr_strict_flex_array)\n-    {\n-      /* Get the value of the level first from the attribute.  */\n-      unsigned HOST_WIDE_INT attr_strict_flex_array_level = 0;\n-      gcc_assert (TREE_VALUE (attr_strict_flex_array) != NULL_TREE);\n-      attr_strict_flex_array = TREE_VALUE (attr_strict_flex_array);\n-      gcc_assert (TREE_VALUE (attr_strict_flex_array) != NULL_TREE);\n-      attr_strict_flex_array = TREE_VALUE (attr_strict_flex_array);\n-      gcc_assert (tree_fits_uhwi_p (attr_strict_flex_array));\n-      attr_strict_flex_array_level = tree_to_uhwi (attr_strict_flex_array);\n-\n-      /* The attribute has higher priority than flag_struct_flex_array.  */\n-      strict_flex_array_level = attr_strict_flex_array_level;\n-    }\n-  return strict_flex_array_level;\n-}\n-\n /* Determine whether the FIELD_DECL X is a flexible array member according to\n    the following info:\n   A. whether the FIELD_DECL X is the last field of the DECL_CONTEXT;\n@@ -9105,7 +9079,7 @@ is_flexible_array_member_p (bool is_last_field,\n   bool is_one_element_array = one_element_array_type_p (TREE_TYPE (x));\n   bool is_flexible_array = flexible_array_member_type_p (TREE_TYPE (x));\n \n-  unsigned int strict_flex_array_level = strict_flex_array_level_of (x);\n+  unsigned int strict_flex_array_level = c_strict_flex_array_level_of (x);\n \n   switch (strict_flex_array_level)\n     {"}, {"sha": "7079d4ee145cf7c6b80c64c765973cb24c8a027d", "filename": "gcc/c/c-typeck.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fc%2Fc-typeck.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fc%2Fc-typeck.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -4083,7 +4083,7 @@ parser_build_binary_op (location_t location, enum tree_code code,\n       && arg2.m_decimal)\n     check_for_xor_used_as_pow (arg1.get_location (), arg1.value,\n \t\t\t       location,\n-\t\t\t       arg2.value);\n+\t\t\t       arg2.get_location (), arg2.value);\n \n   return result;\n }"}, {"sha": "1a1b26b1c6c23ce273bcd08dc9a973f777174007", "filename": "gcc/cfgexpand.cc", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcfgexpand.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcfgexpand.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -5365,6 +5365,10 @@ expand_debug_expr (tree exp)\n     case VEC_WIDEN_MULT_ODD_EXPR:\n     case VEC_WIDEN_LSHIFT_HI_EXPR:\n     case VEC_WIDEN_LSHIFT_LO_EXPR:\n+    case VEC_WIDEN_PLUS_HI_EXPR:\n+    case VEC_WIDEN_PLUS_LO_EXPR:\n+    case VEC_WIDEN_MINUS_HI_EXPR:\n+    case VEC_WIDEN_MINUS_LO_EXPR:\n     case VEC_PERM_EXPR:\n     case VEC_DUPLICATE_EXPR:\n     case VEC_SERIES_EXPR:\n@@ -5401,6 +5405,8 @@ expand_debug_expr (tree exp)\n     case WIDEN_MULT_EXPR:\n     case WIDEN_MULT_PLUS_EXPR:\n     case WIDEN_MULT_MINUS_EXPR:\n+    case WIDEN_PLUS_EXPR:\n+    case WIDEN_MINUS_EXPR:\n       if (SCALAR_INT_MODE_P (GET_MODE (op0))\n \t  && SCALAR_INT_MODE_P (mode))\n \t{\n@@ -5413,6 +5419,10 @@ expand_debug_expr (tree exp)\n \t    op1 = simplify_gen_unary (ZERO_EXTEND, mode, op1, inner_mode);\n \t  else\n \t    op1 = simplify_gen_unary (SIGN_EXTEND, mode, op1, inner_mode);\n+\t  if (TREE_CODE (exp) == WIDEN_PLUS_EXPR)\n+\t    return simplify_gen_binary (PLUS, mode, op0, op1);\n+\t  else if (TREE_CODE (exp) == WIDEN_MINUS_EXPR)\n+\t    return simplify_gen_binary (MINUS, mode, op0, op1);\n \t  op0 = simplify_gen_binary (MULT, mode, op0, op1);\n \t  if (TREE_CODE (exp) == WIDEN_MULT_EXPR)\n \t    return op0;"}, {"sha": "ec663d233851bd7d9b1e87c344afccf0e0a79417", "filename": "gcc/cgraph.cc", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcgraph.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcgraph.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -1548,7 +1548,8 @@ cgraph_edge::redirect_call_stmt_to_callee (cgraph_edge *e)\n   else\n     {\n       if (flag_checking\n-\t  && !fndecl_built_in_p (e->callee->decl, BUILT_IN_UNREACHABLE))\n+\t  && !fndecl_built_in_p (e->callee->decl, BUILT_IN_UNREACHABLE)\n+\t  && !fndecl_built_in_p (e->callee->decl, BUILT_IN_UNREACHABLE_TRAP))\n \tipa_verify_edge_has_no_modifications (e);\n       new_stmt = e->call_stmt;\n       gimple_call_set_fndecl (new_stmt, e->callee->decl);\n@@ -1634,7 +1635,9 @@ cgraph_update_edges_for_call_stmt_node (cgraph_node *node,\n \t{\n \t  /* Keep calls marked as dead dead.  */\n \t  if (new_stmt && is_gimple_call (new_stmt) && e->callee\n-\t      && fndecl_built_in_p (e->callee->decl, BUILT_IN_UNREACHABLE))\n+\t      && (fndecl_built_in_p (e->callee->decl, BUILT_IN_UNREACHABLE)\n+\t\t  || fndecl_built_in_p (e->callee->decl,\n+\t\t\t\t\tBUILT_IN_UNREACHABLE_TRAP)))\n \t    {\n \t      cgraph_edge::set_call_stmt (node->get_edge (old_stmt),\n \t\t\t\t\t  as_a <gcall *> (new_stmt));\n@@ -3598,7 +3601,9 @@ cgraph_node::verify_node (void)\n \t  /* Optimized out calls are redirected to __builtin_unreachable.  */\n \t  && (e->count.nonzero_p ()\n \t      || ! e->callee->decl\n-\t      || !fndecl_built_in_p (e->callee->decl, BUILT_IN_UNREACHABLE))\n+\t      || !(fndecl_built_in_p (e->callee->decl, BUILT_IN_UNREACHABLE)\n+\t\t   || fndecl_built_in_p (e->callee->decl,\n+\t\t\t\t\t BUILT_IN_UNREACHABLE_TRAP)))\n \t  && count\n \t      == ENTRY_BLOCK_PTR_FOR_FN (DECL_STRUCT_FUNCTION (decl))->count\n \t  && (!e->count.ipa_p ()"}, {"sha": "bfea97104ef89b309dcfbcda3e1f33fb1523bb3a", "filename": "gcc/cgraph.h", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -152,6 +152,9 @@ struct GTY((desc (\"%h.type\"), tag (\"SYMTAB_SYMBOL\"),\n   /* Remove symbol from symbol table.  */\n   void remove (void);\n \n+  /* Undo any definition or use of the symbol.  */\n+  void reset (void);\n+\n   /* Dump symtab node to F.  */\n   void dump (FILE *f);\n \n@@ -1066,14 +1069,6 @@ struct GTY((tag (\"SYMTAB_FUNCTION\"))) cgraph_node : public symtab_node\n   /* Expand function specified by node.  */\n   void expand (void);\n \n-  /* As an GCC extension we allow redefinition of the function.  The\n-     semantics when both copies of bodies differ is not well defined.\n-     We replace the old body with new body so in unit at a time mode\n-     we always use new body, while in normal mode we may end up with\n-     old body inlined into some functions and new body expanded and\n-     inlined in others.  */\n-  void reset (void);\n-\n   /* Creates a wrapper from cgraph_node to TARGET node. Thunk is used for this\n      kind of wrapper method.  */\n   void create_wrapper (cgraph_node *target);"}, {"sha": "7c5d3b2842c95ffe26e2b3be3b0349fd8a400f61", "filename": "gcc/cgraphclones.cc", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcgraphclones.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcgraphclones.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphclones.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -218,7 +218,17 @@ duplicate_thunk_for_node (cgraph_node *thunk, cgraph_node *node)\n       body_adj.modify_formal_parameters ();\n     }\n   else\n-    new_decl = copy_node (thunk->decl);\n+    {\n+      new_decl = copy_node (thunk->decl);\n+      for (tree *arg = &DECL_ARGUMENTS (new_decl);\n+\t   *arg; arg = &DECL_CHAIN (*arg))\n+\t{\n+\t  tree next = DECL_CHAIN (*arg);\n+\t  *arg = copy_node (*arg);\n+\t  DECL_CONTEXT (*arg) = new_decl;\n+\t  DECL_CHAIN (*arg) = next;\n+\t}\n+    }\n \n   gcc_checking_assert (!DECL_STRUCT_FUNCTION (new_decl));\n   gcc_checking_assert (!DECL_INITIAL (new_decl));\n@@ -425,7 +435,9 @@ cgraph_node::create_clone (tree new_decl, profile_count prof_count,\n \t version.  The only exception is when the edge was proved to\n \t be unreachable during the cloning procedure.  */\n       if (!e->callee\n-\t  || !fndecl_built_in_p (e->callee->decl, BUILT_IN_UNREACHABLE))\n+\t  || !(fndecl_built_in_p (e->callee->decl, BUILT_IN_UNREACHABLE)\n+\t       || fndecl_built_in_p (e->callee->decl,\n+\t\t\t\t     BUILT_IN_UNREACHABLE_TRAP)))\n         e->redirect_callee_duplicating_thunks (new_node);\n     }\n   new_node->expand_all_artificial_thunks ();"}, {"sha": "bccd2f2abb5a3faf757c27a2064a3facd79b8cdb", "filename": "gcc/cgraphunit.cc", "status": "modified", "additions": 21, "deletions": 12, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcgraphunit.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcgraphunit.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -378,30 +378,38 @@ symbol_table::process_new_functions (void)\n    inlined in others.\n \n    ??? It may make more sense to use one body for inlining and other\n-   body for expanding the function but this is difficult to do.  */\n+   body for expanding the function but this is difficult to do.\n+\n+   This is also used to cancel C++ mangling aliases, which can be for\n+   functions or variables.  */\n \n void\n-cgraph_node::reset (void)\n+symtab_node::reset (void)\n {\n-  /* If process is set, then we have already begun whole-unit analysis.\n-     This is *not* testing for whether we've already emitted the function.\n-     That case can be sort-of legitimately seen with real function redefinition\n-     errors.  I would argue that the front end should never present us with\n-     such a case, but don't enforce that for now.  */\n-  gcc_assert (!process);\n-\n   /* Reset our data structures so we can analyze the function again.  */\n-  inlined_to = NULL;\n-  memset (&rtl, 0, sizeof (rtl));\n   analyzed = false;\n   definition = false;\n   alias = false;\n   transparent_alias = false;\n   weakref = false;\n   cpp_implicit_alias = false;\n \n-  remove_callees ();\n   remove_all_references ();\n+  remove_from_same_comdat_group ();\n+\n+  if (cgraph_node *cn = dyn_cast <cgraph_node *> (this))\n+    {\n+      /* If process is set, then we have already begun whole-unit analysis.\n+\t This is *not* testing for whether we've already emitted the function.\n+\t That case can be sort-of legitimately seen with real function\n+\t redefinition errors.  I would argue that the front end should never\n+\t present us with such a case, but don't enforce that for now.  */\n+      gcc_assert (!cn->process);\n+\n+      memset (&cn->rtl, 0, sizeof (cn->rtl));\n+      cn->inlined_to = NULL;\n+      cn->remove_callees ();\n+    }\n }\n \n /* Return true when there are references to the node.  INCLUDE_SELF is\n@@ -1120,6 +1128,7 @@ check_global_declaration (symtab_node *snode)\n       && (TREE_CODE (decl) != FUNCTION_DECL\n \t  || (!DECL_STATIC_CONSTRUCTOR (decl)\n \t      && !DECL_STATIC_DESTRUCTOR (decl)))\n+      && (! VAR_P (decl) || !warning_suppressed_p (decl, OPT_Wunused_variable))\n       /* Otherwise, ask the language.  */\n       && lang_hooks.decls.warn_unused_global (decl))\n     warning_at (DECL_SOURCE_LOCATION (decl),"}, {"sha": "22bf8e1ec89814ec75a6e042946fbf55ca2e9614", "filename": "gcc/combine.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcombine.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcombine.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -1416,6 +1416,7 @@ combine_instructions (rtx_insn *f, unsigned int nregs)\n \t\t      statistics_counter_event (cfun, \"insn-with-note combine\", 1);\n \t\t      goto retry;\n \t\t    }\n+\t\t  INSN_CODE (temp) = -1;\n \t\t  SET_SRC (set) = orig_src;\n \t\t  SET_DEST (set) = orig_dest;\n \t\t}"}, {"sha": "862c474d3c8fb14e044cfc92835b81f986d64218", "filename": "gcc/common.opt", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -582,6 +582,10 @@ Wcast-align=strict\n Common Var(warn_cast_align,2) Warning\n Warn about pointer casts which increase alignment.\n \n+Wcomplain-wrong-lang\n+Common Var(warn_complain_wrong_lang) Init(1) Warning\n+Complain when a command-line option is valid, but not applicable to the current front end.\n+\n Wcpp\n Common Var(warn_cpp) Init(1) Warning\n Warn when a #warning directive is encountered.\n@@ -1204,6 +1208,10 @@ fchecking=\n Common Joined RejectNegative UInteger Var(flag_checking)\n Perform internal consistency checkings.\n \n+fcanon-prefix-map\n+Common Var(common_deferred_options) Defer\n+For -f*-prefix-map= options compare canonicalized pathnames rather than just strings.\n+\n fcode-hoisting\n Common Var(flag_code_hoisting) Optimization\n Enable code hoisting.\n@@ -3341,11 +3349,11 @@ Common Driver RejectNegative JoinedOrMissing\n Generate BTF debug information at default level.\n \n gdwarf\n-Common Driver JoinedOrMissing Negative(gdwarf-)\n+Common Driver JoinedOrMissing RejectNegative\n Generate debug information in default version of DWARF format.\n \n gdwarf-\n-Common Driver Joined UInteger Var(dwarf_version) Init(DWARF_VERSION_DEFAULT)\n+Common Driver Joined UInteger Var(dwarf_version) Init(DWARF_VERSION_DEFAULT) RejectNegative\n Generate debug information in DWARF v2 (or later) format.\n \n gdwarf32\n@@ -3357,7 +3365,7 @@ Common Driver Var(dwarf_offset_size,8) RejectNegative\n Use 64-bit DWARF format when emitting DWARF debug information.\n \n ggdb\n-Common Driver JoinedOrMissing\n+Common Driver JoinedOrMissing RejectNegative\n Generate debug information in default extended format.\n \n ginline-points\n@@ -3424,7 +3432,7 @@ gvariable-location-views=incompat5\n Common Driver RejectNegative Var(debug_variable_location_views, -1) Init(2)\n \n gvms\n-Common Driver JoinedOrMissing\n+Common Driver JoinedOrMissing RejectNegative\n Generate debug information in VMS format.\n \n gxcoff"}, {"sha": "2fc0f8bffc15643ebd2ba7aead1e84485ee5f118", "filename": "gcc/common/config/riscv/riscv-common.cc", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -222,6 +222,19 @@ static const struct riscv_ext_version riscv_ext_version_table[] =\n   {\"svinval\", ISA_SPEC_CLASS_NONE, 1, 0},\n   {\"svnapot\", ISA_SPEC_CLASS_NONE, 1, 0},\n \n+  {\"xtheadba\", ISA_SPEC_CLASS_NONE, 1, 0},\n+  {\"xtheadbb\", ISA_SPEC_CLASS_NONE, 1, 0},\n+  {\"xtheadbs\", ISA_SPEC_CLASS_NONE, 1, 0},\n+  {\"xtheadcmo\", ISA_SPEC_CLASS_NONE, 1, 0},\n+  {\"xtheadcondmov\", ISA_SPEC_CLASS_NONE, 1, 0},\n+  {\"xtheadfmemidx\", ISA_SPEC_CLASS_NONE, 1, 0},\n+  {\"xtheadfmv\", ISA_SPEC_CLASS_NONE, 1, 0},\n+  {\"xtheadint\", ISA_SPEC_CLASS_NONE, 1, 0},\n+  {\"xtheadmac\", ISA_SPEC_CLASS_NONE, 1, 0},\n+  {\"xtheadmemidx\", ISA_SPEC_CLASS_NONE, 1, 0},\n+  {\"xtheadmempair\", ISA_SPEC_CLASS_NONE, 1, 0},\n+  {\"xtheadsync\", ISA_SPEC_CLASS_NONE, 1, 0},\n+\n   /* Terminate the list.  */\n   {NULL, ISA_SPEC_CLASS_NONE, 0, 0}\n };\n@@ -1140,6 +1153,10 @@ riscv_subset_list::parse (const char *arch, location_t loc)\n \n   subset_list->handle_combine_ext ();\n \n+  if (subset_list->lookup (\"zfinx\") && subset_list->lookup (\"f\"))\n+    error_at (loc, \"%<-march=%s%>: z*inx conflicts with floating-point \"\n+\t\t   \"extensions\", arch);\n+\n   return subset_list;\n \n fail:\n@@ -1248,6 +1265,19 @@ static const riscv_ext_flag_table_t riscv_ext_flag_table[] =\n   {\"svinval\", &gcc_options::x_riscv_sv_subext, MASK_SVINVAL},\n   {\"svnapot\", &gcc_options::x_riscv_sv_subext, MASK_SVNAPOT},\n \n+  {\"xtheadba\",      &gcc_options::x_riscv_xthead_subext, MASK_XTHEADBA},\n+  {\"xtheadbb\",      &gcc_options::x_riscv_xthead_subext, MASK_XTHEADBB},\n+  {\"xtheadbs\",      &gcc_options::x_riscv_xthead_subext, MASK_XTHEADBS},\n+  {\"xtheadcmo\",     &gcc_options::x_riscv_xthead_subext, MASK_XTHEADCMO},\n+  {\"xtheadcondmov\", &gcc_options::x_riscv_xthead_subext, MASK_XTHEADCONDMOV},\n+  {\"xtheadfmemidx\", &gcc_options::x_riscv_xthead_subext, MASK_XTHEADFMEMIDX},\n+  {\"xtheadfmv\",     &gcc_options::x_riscv_xthead_subext, MASK_XTHEADFMV},\n+  {\"xtheadint\",     &gcc_options::x_riscv_xthead_subext, MASK_XTHEADINT},\n+  {\"xtheadmac\",     &gcc_options::x_riscv_xthead_subext, MASK_XTHEADMAC},\n+  {\"xtheadmemidx\",  &gcc_options::x_riscv_xthead_subext, MASK_XTHEADMEMIDX},\n+  {\"xtheadmempair\", &gcc_options::x_riscv_xthead_subext, MASK_XTHEADMEMPAIR},\n+  {\"xtheadsync\",    &gcc_options::x_riscv_xthead_subext, MASK_XTHEADSYNC},\n+\n   {NULL, NULL, 0}\n };\n "}, {"sha": "cb29734100407a2e10236ad2ded06ec0d6462e38", "filename": "gcc/config.gcc", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -542,6 +542,7 @@ riscv*)\n \tcpu_type=riscv\n \textra_objs=\"riscv-builtins.o riscv-c.o riscv-sr.o riscv-shorten-memrefs.o riscv-selftests.o riscv-v.o riscv-vsetvl.o\"\n \textra_objs=\"${extra_objs} riscv-vector-builtins.o riscv-vector-builtins-shapes.o riscv-vector-builtins-bases.o\"\n+\textra_objs=\"${extra_objs} thead.o\"\n \td_target_objs=\"riscv-d.o\"\n \textra_headers=\"riscv_vector.h\"\n \ttarget_gtfiles=\"$target_gtfiles \\$(srcdir)/config/riscv/riscv-vector-builtins.cc\"\n@@ -2146,7 +2147,7 @@ x86_64-*-cygwin*)\n \tneed_64bit_isa=yes\n \ttm_file=\"${tm_file} i386/unix.h i386/bsd.h i386/gas.h i386/cygming.h i386/cygwin.h i386/cygwin-w64.h i386/cygwin-stdint.h\"\n \txm_file=i386/xm-cygwin.h\n-\ttmake_file=\"${tmake_file} i386/t-cygming t-slibgcc i386/t-cygwin-w64\"\n+\ttmake_file=\"${tmake_file} i386/t-cygming t-slibgcc\"\n \ttarget_gtfiles=\"$target_gtfiles \\$(srcdir)/config/i386/winnt.cc\"\n \textra_options=\"${extra_options} i386/cygming.opt i386/cygwin.opt\"\n \textra_objs=\"${extra_objs} winnt.o winnt-stubs.o\"\n@@ -4756,7 +4757,7 @@ case \"${target}\" in\n \t\t;;\n \n \tmips*-*-*)\n-\t\tsupported_defaults=\"abi arch arch_32 arch_64 float fpu nan fp_32 odd_spreg_32 tune tune_32 tune_64 divide llsc mips-plt synci lxc1-sxc1 madd4 compact-branches\"\n+\t\tsupported_defaults=\"abi arch arch_32 arch_64 float fpu nan fp_32 odd_spreg_32 tune tune_32 tune_64 divide llsc mips-plt synci lxc1-sxc1 madd4 compact-branches msa\"\n \n \t\tcase ${with_float} in\n \t\t\"\" | soft | hard)\n@@ -4918,6 +4919,21 @@ case \"${target}\" in\n \t\t\texit 1\n \t\t\t;;\n \t\tesac\n+\n+\t\tcase ${with_msa} in\n+\t\tyes)\n+\t\t\twith_msa=msa\n+\t\t\t;;\n+\t\tno)\n+\t\t\twith_msa=no-msa\n+\t\t\t;;\n+\t\t\"\")\n+\t\t\t;;\n+\t\t*)\n+\t\t\techo \"Unknown msa type used in --with-msa\" 1>&2\n+\t\t\texit 1\n+\t\t\t;;\n+\t\tesac\n \t\t;;\n \n \tloongarch*-*-*)\n@@ -5862,7 +5878,7 @@ case ${target} in\n esac\n \n t=\n-all_defaults=\"abi cpu cpu_32 cpu_64 arch arch_32 arch_64 tune tune_32 tune_64 schedule float mode fpu nan fp_32 odd_spreg_32 divide llsc mips-plt synci tls lxc1-sxc1 madd4 isa_spec compact-branches\"\n+all_defaults=\"abi cpu cpu_32 cpu_64 arch arch_32 arch_64 tune tune_32 tune_64 schedule float mode fpu nan fp_32 odd_spreg_32 divide llsc mips-plt synci tls lxc1-sxc1 madd4 isa_spec compact-branches msa\"\n for option in $all_defaults\n do\n \teval \"val=\\$with_\"`echo $option | sed s/-/_/g`"}, {"sha": "5df85752ed42cf62f45f82862f2a921a5825f714", "filename": "gcc/config.host", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.host?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -232,19 +232,21 @@ case ${host} in\n     ;;\n   i[34567]86-*-mingw32*)\n     host_xm_file=i386/xm-mingw32.h\n-    host_xmake_file=\"${host_xmake_file} i386/x-mingw32\"\n+    host_xmake_file=\"${host_xmake_file} i386/x-mingw32 i386/x-mingw32-utf8\"\n     host_exeext=.exe\n     out_host_hook_obj=host-mingw32.o\n-    host_extra_gcc_objs=\"${host_extra_gcc_objs} driver-mingw32.o\"\n+    host_extra_objs=\"${host_extra_objs} utf8-mingw32.o\"\n+    host_extra_gcc_objs=\"${host_extra_gcc_objs} driver-mingw32.o utf8rc-mingw32.o\"\n     host_lto_plugin_soname=liblto_plugin.dll\n     ;;\n   x86_64-*-mingw*)\n     use_long_long_for_widest_fast_int=yes\n     host_xm_file=i386/xm-mingw32.h\n-    host_xmake_file=\"${host_xmake_file} i386/x-mingw32\"\n+    host_xmake_file=\"${host_xmake_file} i386/x-mingw32 i386/x-mingw32-utf8\"\n     host_exeext=.exe\n     out_host_hook_obj=host-mingw32.o\n-    host_extra_gcc_objs=\"${host_extra_gcc_objs} driver-mingw32.o\"\n+    host_extra_objs=\"${host_extra_objs} utf8-mingw32.o\"\n+    host_extra_gcc_objs=\"${host_extra_gcc_objs} driver-mingw32.o utf8rc-mingw32.o\"\n     host_lto_plugin_soname=liblto_plugin.dll\n     ;;\n   aarch64*-*-darwin*)"}, {"sha": "cc6b7c01fd1d9a3d2ddd1d73326332ed13a25f54", "filename": "gcc/config/aarch64/aarch64-builtins.cc", "status": "modified", "additions": 28, "deletions": 12, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -918,7 +918,6 @@ tree aarch64_fp16_type_node = NULL_TREE;\n tree aarch64_fp16_ptr_type_node = NULL_TREE;\n \n /* Back-end node type for brain float (bfloat) types.  */\n-tree aarch64_bf16_type_node = NULL_TREE;\n tree aarch64_bf16_ptr_type_node = NULL_TREE;\n \n /* Wrapper around add_builtin_function.  NAME is the name of the built-in\n@@ -1010,7 +1009,7 @@ aarch64_int_or_fp_type (machine_mode mode,\n     case E_DFmode:\n       return double_type_node;\n     case E_BFmode:\n-      return aarch64_bf16_type_node;\n+      return bfloat16_type_node;\n     default:\n       gcc_unreachable ();\n     }\n@@ -1124,8 +1123,8 @@ aarch64_init_simd_builtin_types (void)\n   aarch64_simd_types[Float64x2_t].eltype = double_type_node;\n \n   /* Init Bfloat vector types with underlying __bf16 type.  */\n-  aarch64_simd_types[Bfloat16x4_t].eltype = aarch64_bf16_type_node;\n-  aarch64_simd_types[Bfloat16x8_t].eltype = aarch64_bf16_type_node;\n+  aarch64_simd_types[Bfloat16x4_t].eltype = bfloat16_type_node;\n+  aarch64_simd_types[Bfloat16x8_t].eltype = bfloat16_type_node;\n \n   for (i = 0; i < nelts; i++)\n     {\n@@ -1197,7 +1196,7 @@ aarch64_init_simd_builtin_scalar_types (void)\n \t\t\t\t\t     \"__builtin_aarch64_simd_poly128\");\n   (*lang_hooks.types.register_builtin_type) (intTI_type_node,\n \t\t\t\t\t     \"__builtin_aarch64_simd_ti\");\n-  (*lang_hooks.types.register_builtin_type) (aarch64_bf16_type_node,\n+  (*lang_hooks.types.register_builtin_type) (bfloat16_type_node,\n \t\t\t\t\t     \"__builtin_aarch64_simd_bf\");\n   /* Unsigned integer types for various mode sizes.  */\n   (*lang_hooks.types.register_builtin_type) (unsigned_intQI_type_node,\n@@ -1682,13 +1681,8 @@ aarch64_init_fp16_types (void)\n static void\n aarch64_init_bf16_types (void)\n {\n-  aarch64_bf16_type_node = make_node (REAL_TYPE);\n-  TYPE_PRECISION (aarch64_bf16_type_node) = 16;\n-  SET_TYPE_MODE (aarch64_bf16_type_node, BFmode);\n-  layout_type (aarch64_bf16_type_node);\n-\n-  lang_hooks.types.register_builtin_type (aarch64_bf16_type_node, \"__bf16\");\n-  aarch64_bf16_ptr_type_node = build_pointer_type (aarch64_bf16_type_node);\n+  lang_hooks.types.register_builtin_type (bfloat16_type_node, \"__bf16\");\n+  aarch64_bf16_ptr_type_node = build_pointer_type (bfloat16_type_node);\n }\n \n /* Pointer authentication builtins that will become NOP on legacy platform.\n@@ -3000,6 +2994,19 @@ get_mem_type_for_load_store (unsigned int fcode)\n   }\n }\n \n+/* We've seen a vector load from address ADDR.  Record it in\n+   vector_load_decls, if appropriate.  */\n+static void\n+aarch64_record_vector_load_arg (tree addr)\n+{\n+  tree decl = aarch64_vector_load_decl (addr);\n+  if (!decl)\n+    return;\n+  if (!cfun->machine->vector_load_decls)\n+    cfun->machine->vector_load_decls = hash_set<tree>::create_ggc (31);\n+  cfun->machine->vector_load_decls->add (decl);\n+}\n+\n /* Try to fold STMT, given that it's a call to the built-in function with\n    subcode FCODE.  Return the new statement on success and null on\n    failure.  */\n@@ -3057,6 +3064,11 @@ aarch64_general_gimple_fold_builtin (unsigned int fcode, gcall *stmt,\n      BUILTIN_VALL_F16 (LOAD1, ld1, 0, LOAD)\n      BUILTIN_VDQ_I (LOAD1_U, ld1, 0, LOAD)\n      BUILTIN_VALLP_NO_DI (LOAD1_P, ld1, 0, LOAD)\n+\t/* Punt until after inlining, so that we stand more chance of\n+\t   recording something meaningful in vector_load_decls.  */\n+\tif (!cfun->after_inlining)\n+\t  break;\n+\taarch64_record_vector_load_arg (args[0]);\n \tif (!BYTES_BIG_ENDIAN)\n \t  {\n \t    enum aarch64_simd_type mem_type\n@@ -3075,6 +3087,8 @@ aarch64_general_gimple_fold_builtin (unsigned int fcode, gcall *stmt,\n \t\t\t\t     fold_build2 (MEM_REF,\n \t\t\t\t\t\t  access_type,\n \t\t\t\t\t\t  args[0], zero));\n+\t    gimple_set_vuse (new_stmt, gimple_vuse (stmt));\n+\t    gimple_set_vdef (new_stmt, gimple_vdef (stmt));\n \t  }\n \tbreak;\n \n@@ -3098,6 +3112,8 @@ aarch64_general_gimple_fold_builtin (unsigned int fcode, gcall *stmt,\n \t      = gimple_build_assign (fold_build2 (MEM_REF, access_type,\n \t\t\t\t\t\t  args[0], zero),\n \t\t\t\t     args[1]);\n+\t    gimple_set_vuse (new_stmt, gimple_vuse (stmt));\n+\t    gimple_set_vdef (new_stmt, gimple_vdef (stmt));\n \t  }\n \tbreak;\n "}, {"sha": "2ec88c98400d5a2d7bdb954baca9e2664d2885ac", "filename": "gcc/config/aarch64/aarch64-cores.def", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -29,7 +29,10 @@\n    will be made, represented as an identifier.\n    ARCH_IDENT is the architecture implemented by the chip as specified in\n    aarch64-arches.def.\n-   FLAGS are the bitwise-or of the traits that apply to that core.\n+   FLAGS is a parentheses-enclosed, comma-separated list of architecture\n+   features in the core that are present in addition to the base architecture.\n+   The architecture feature names are as per the identifiers in\n+   aarch64-option-extensions.def.\n    This need not include flags implied by the architecture.\n    COSTS is the name of the rtx_costs routine to use.\n    IMP is the implementer ID of the CPU vendor.  On a GNU/Linux system it"}, {"sha": "63339fa47df983fac97ed8b1cf965852a2aa8f42", "filename": "gcc/config/aarch64/aarch64-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -761,6 +761,7 @@ bool aarch64_const_vec_all_same_in_range_p (rtx, HOST_WIDE_INT,\n bool aarch64_constant_address_p (rtx);\n bool aarch64_emit_approx_div (rtx, rtx, rtx);\n bool aarch64_emit_approx_sqrt (rtx, rtx, bool);\n+tree aarch64_vector_load_decl (tree);\n void aarch64_expand_call (rtx, rtx, rtx, bool);\n bool aarch64_expand_cpymem (rtx *);\n bool aarch64_expand_setmem (rtx *);"}, {"sha": "b63c1fe154362cdf31b2965d48f599be60387056", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 20, "deletions": 53, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -840,7 +840,7 @@\n )\n \n ;; The intrinsic version of integer ABS must not be allowed to\n-;; combine with any operation with an integerated ABS step, such\n+;; combine with any operation with an integrated ABS step, such\n ;; as SABD.\n (define_insn \"aarch64_abs<mode>\"\n   [(set (match_operand:VSDQ_I_DI 0 \"register_operand\" \"=w\")\n@@ -4867,60 +4867,27 @@\n   }\n )\n \n-;; div optimizations using narrowings\n-;; we can do the division e.g. shorts by 255 faster by calculating it as\n-;; (x + ((x + 257) >> 8)) >> 8 assuming the operation is done in\n-;; double the precision of x.\n-;;\n-;; If we imagine a short as being composed of two blocks of bytes then\n-;; adding 257 or 0b0000_0001_0000_0001 to the number is equivalent to\n-;; adding 1 to each sub component:\n-;;\n-;;      short value of 16-bits\n-;; \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n-;; \u2502              \u2502                \u2502\n-;; \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n-;;   8-bit part1 \u25b2  8-bit part2   \u25b2\n-;;               \u2502                \u2502\n-;;               \u2502                \u2502\n-;;              +1               +1\n-;;\n-;; after the first addition, we have to shift right by 8, and narrow the\n-;; results back to a byte.  Remember that the addition must be done in\n-;; double the precision of the input.  Since 8 is half the size of a short\n-;; we can use a narrowing halfing instruction in AArch64, addhn which also\n-;; does the addition in a wider precision and narrows back to a byte.  The\n-;; shift itself is implicit in the operation as it writes back only the top\n-;; half of the result. i.e. bits 2*esize-1:esize.\n-;;\n-;; Since we have narrowed the result of the first part back to a byte, for\n-;; the second addition we can use a widening addition, uaddw.\n-;;\n-;; For the final shift, since it's unsigned arithmetic we emit an ushr by 8.\n-;;\n-;; The shift is later optimized by combine to a uzp2 with movi #0.\n-(define_expand \"@aarch64_bitmask_udiv<mode>3\"\n-  [(match_operand:VQN 0 \"register_operand\")\n-   (match_operand:VQN 1 \"register_operand\")\n-   (match_operand:VQN 2 \"immediate_operand\")]\n+;; Optimize ((a + b) >> n) + c where n is half the bitsize of the vector\n+(define_insn_and_split \"*bitmask_shift_plus<mode>\"\n+  [(set (match_operand:VQN 0 \"register_operand\" \"=&w\")\n+\t(plus:VQN\n+\t  (lshiftrt:VQN\n+\t    (plus:VQN (match_operand:VQN 1 \"register_operand\" \"w\")\n+\t\t      (match_operand:VQN 2 \"register_operand\" \"w\"))\n+\t    (match_operand:VQN 3 \"aarch64_simd_shift_imm_vec_exact_top\" \"\"))\n+\t  (match_operand:VQN 4 \"register_operand\" \"w\")))]\n   \"TARGET_SIMD\"\n+  \"#\"\n+  \"&& true\"\n+  [(const_int 0)]\n {\n-  unsigned HOST_WIDE_INT size\n-    = (1ULL << GET_MODE_UNIT_BITSIZE (<VNARROWQ>mode)) - 1;\n-  rtx elt = unwrap_const_vec_duplicate (operands[2]);\n-  if (!CONST_INT_P (elt) || UINTVAL (elt) != size)\n-    FAIL;\n-\n-  rtx addend = gen_reg_rtx (<MODE>mode);\n-  rtx val = aarch64_simd_gen_const_vector_dup (<VNARROWQ2>mode, 1);\n-  emit_move_insn (addend, lowpart_subreg (<MODE>mode, val, <VNARROWQ2>mode));\n-  rtx tmp1 = gen_reg_rtx (<VNARROWQ>mode);\n-  rtx tmp2 = gen_reg_rtx (<MODE>mode);\n-  emit_insn (gen_aarch64_addhn<mode> (tmp1, operands[1], addend));\n-  unsigned bitsize = GET_MODE_UNIT_BITSIZE (<VNARROWQ>mode);\n-  rtx shift_vector = aarch64_simd_gen_const_vector_dup (<MODE>mode, bitsize);\n-  emit_insn (gen_aarch64_uaddw<Vnarrowq> (tmp2, operands[1], tmp1));\n-  emit_insn (gen_aarch64_simd_lshr<mode> (operands[0], tmp2, shift_vector));\n+  rtx tmp;\n+  if (can_create_pseudo_p ())\n+    tmp = gen_reg_rtx (<VNARROWQ>mode);\n+  else\n+    tmp = gen_rtx_REG (<VNARROWQ>mode, REGNO (operands[0]));\n+  emit_insn (gen_aarch64_addhn<mode> (tmp, operands[1], operands[2]));\n+  emit_insn (gen_aarch64_uaddw<Vnarrowq> (operands[0], operands[4], tmp));\n   DONE;\n })\n "}, {"sha": "534f6e69d72342fdcfcc00bd330585db1eae32e1", "filename": "gcc/config/aarch64/aarch64-sve-builtins.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Faarch64%2Faarch64-sve-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Faarch64%2Faarch64-sve-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-sve-builtins.def?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -61,7 +61,7 @@ DEF_SVE_MODE (u64offset, none, svuint64_t, bytes)\n DEF_SVE_MODE (vnum, none, none, vectors)\n \n DEF_SVE_TYPE (svbool_t, 10, __SVBool_t, boolean_type_node)\n-DEF_SVE_TYPE (svbfloat16_t, 14, __SVBfloat16_t, aarch64_bf16_type_node)\n+DEF_SVE_TYPE (svbfloat16_t, 14, __SVBfloat16_t, bfloat16_type_node)\n DEF_SVE_TYPE (svfloat16_t, 13, __SVFloat16_t, aarch64_fp16_type_node)\n DEF_SVE_TYPE (svfloat32_t, 13, __SVFloat32_t, float_type_node)\n DEF_SVE_TYPE (svfloat64_t, 13, __SVFloat64_t, double_type_node)"}, {"sha": "2346f9f835d26f5b87afd47cdc9e44f9f47604ed", "filename": "gcc/config/aarch64/aarch64-sve2.md", "status": "modified", "additions": 16, "deletions": 41, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Faarch64%2Faarch64-sve2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Faarch64%2Faarch64-sve2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-sve2.md?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -71,7 +71,6 @@\n ;; ---- [INT] Reciprocal approximation\n ;; ---- [INT<-FP] Base-2 logarithm\n ;; ---- [INT] Polynomial multiplication\n-;; ---- [INT] Misc optab implementations\n ;;\n ;; == Permutation\n ;; ---- [INT,FP] General permutes\n@@ -1600,6 +1599,22 @@\n   \"<sve_int_op>\\t%0.<Ventype>, %2.<Vetype>, %3.<Vetype>\"\n )\n \n+;; Optimize ((a + b) >> n) where n is half the bitsize of the vector\n+(define_insn \"*bitmask_shift_plus<mode>\"\n+  [(set (match_operand:SVE_FULL_HSDI 0 \"register_operand\" \"=w\")\n+\t(unspec:SVE_FULL_HSDI\n+\t   [(match_operand:<VPRED> 1)\n+\t    (lshiftrt:SVE_FULL_HSDI\n+\t      (plus:SVE_FULL_HSDI\n+\t\t(match_operand:SVE_FULL_HSDI 2 \"register_operand\" \"w\")\n+\t\t(match_operand:SVE_FULL_HSDI 3 \"register_operand\" \"w\"))\n+\t      (match_operand:SVE_FULL_HSDI 4\n+\t\t \"aarch64_simd_shift_imm_vec_exact_top\" \"\"))]\n+          UNSPEC_PRED_X))]\n+  \"TARGET_SVE2\"\n+  \"addhnb\\t%0.<Ventype>, %2.<Vetype>, %3.<Vetype>\"\n+)\n+\n ;; -------------------------------------------------------------------------\n ;; ---- [INT] Narrowing right shifts\n ;; -------------------------------------------------------------------------\n@@ -2313,46 +2328,6 @@\n   \"<sve_int_op>\\t%0.<Vewtype>, %1.<Vetype>, %2.<Vetype>\"\n )\n \n-;; -------------------------------------------------------------------------\n-;; ---- [INT] Misc optab implementations\n-;; -------------------------------------------------------------------------\n-;; Includes:\n-;; - aarch64_bitmask_udiv\n-;; -------------------------------------------------------------------------\n-\n-;; div optimizations using narrowings\n-;; we can do the division e.g. shorts by 255 faster by calculating it as\n-;; (x + ((x + 257) >> 8)) >> 8 assuming the operation is done in\n-;; double the precision of x.\n-;;\n-;; See aarch64-simd.md for bigger explanation.\n-(define_expand \"@aarch64_bitmask_udiv<mode>3\"\n-  [(match_operand:SVE_FULL_HSDI 0 \"register_operand\")\n-   (match_operand:SVE_FULL_HSDI 1 \"register_operand\")\n-   (match_operand:SVE_FULL_HSDI 2 \"immediate_operand\")]\n-  \"TARGET_SVE2\"\n-{\n-  unsigned HOST_WIDE_INT size\n-    = (1ULL << GET_MODE_UNIT_BITSIZE (<VNARROW>mode)) - 1;\n-  rtx elt = unwrap_const_vec_duplicate (operands[2]);\n-  if (!CONST_INT_P (elt) || UINTVAL (elt) != size)\n-    FAIL;\n-\n-  rtx addend = gen_reg_rtx (<MODE>mode);\n-  rtx tmp1 = gen_reg_rtx (<VNARROW>mode);\n-  rtx tmp2 = gen_reg_rtx (<VNARROW>mode);\n-  rtx val = aarch64_simd_gen_const_vector_dup (<VNARROW>mode, 1);\n-  emit_move_insn (addend, lowpart_subreg (<MODE>mode, val, <VNARROW>mode));\n-  emit_insn (gen_aarch64_sve (UNSPEC_ADDHNB, <MODE>mode, tmp1, operands[1],\n-\t\t\t      addend));\n-  emit_insn (gen_aarch64_sve (UNSPEC_ADDHNB, <MODE>mode, tmp2, operands[1],\n-\t\t\t      lowpart_subreg (<MODE>mode, tmp1,\n-\t\t\t\t\t      <VNARROW>mode)));\n-  emit_move_insn (operands[0],\n-\t\t  lowpart_subreg (<MODE>mode, tmp2, <VNARROW>mode));\n-  DONE;\n-})\n-\n ;; =========================================================================\n ;; == Permutation\n ;; ========================================================================="}, {"sha": "42617ced73a4ef087ac6b5d13ebdfaf058f0b7ac", "filename": "gcc/config/aarch64/aarch64.cc", "status": "modified", "additions": 103, "deletions": 104, "changes": 207, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Faarch64%2Faarch64.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Faarch64%2Faarch64.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -1132,7 +1132,7 @@ static const struct cpu_vector_cost thunderx3t110_vector_cost =\n \n static const advsimd_vec_cost ampere1_advsimd_vector_cost =\n {\n-  3, /* int_stmt_cost  */\n+  1, /* int_stmt_cost  */\n   3, /* fp_stmt_cost  */\n   0, /* ld2_st2_permute_cost  */\n   0, /* ld3_st3_permute_cost  */\n@@ -1148,17 +1148,17 @@ static const advsimd_vec_cost ampere1_advsimd_vector_cost =\n   8, /* store_elt_extra_cost  */\n   6, /* vec_to_scalar_cost  */\n   7, /* scalar_to_vec_cost  */\n-  5, /* align_load_cost  */\n-  5, /* unalign_load_cost  */\n-  2, /* unalign_store_cost  */\n-  2  /* store_cost  */\n+  4, /* align_load_cost  */\n+  4, /* unalign_load_cost  */\n+  1, /* unalign_store_cost  */\n+  1  /* store_cost  */\n };\n \n /* Ampere-1 costs for vector insn classes.  */\n static const struct cpu_vector_cost ampere1_vector_cost =\n {\n   1, /* scalar_int_stmt_cost  */\n-  1, /* scalar_fp_stmt_cost  */\n+  3, /* scalar_fp_stmt_cost  */\n   4, /* scalar_load_cost  */\n   1, /* scalar_store_cost  */\n   1, /* cond_taken_branch_cost  */\n@@ -3847,6 +3847,19 @@ aarch64_vectorize_related_mode (machine_mode vector_mode,\n   return default_vectorize_related_mode (vector_mode, element_mode, nunits);\n }\n \n+/* Implement TARGET_VECTORIZE_PREFERRED_DIV_AS_SHIFTS_OVER_MULT.  */\n+\n+static bool\n+aarch64_vectorize_preferred_div_as_shifts_over_mult (const_tree type)\n+{\n+  machine_mode mode = TYPE_MODE (type);\n+  unsigned int vec_flags = aarch64_classify_vector_mode (mode);\n+  bool sve_p = (vec_flags & VEC_ANY_SVE);\n+  bool simd_p = (vec_flags & VEC_ADVSIMD);\n+\n+  return (sve_p && TARGET_SVE2) || (simd_p && TARGET_SIMD);\n+}\n+\n /* Implement TARGET_PREFERRED_ELSE_VALUE.  For binary operations,\n    prefer to use the first arithmetic operand as the else value if\n    the else value doesn't matter, since that exactly matches the SVE\n@@ -7375,6 +7388,9 @@ aarch64_function_value_regno_p (const unsigned int regno)\n   if (regno >= V0_REGNUM && regno < V0_REGNUM + HA_MAX_NUM_FLDS)\n     return TARGET_FLOAT;\n \n+  if (regno >= P0_REGNUM && regno < P0_REGNUM + HA_MAX_NUM_FLDS)\n+    return TARGET_SVE;\n+\n   return false;\n }\n \n@@ -7946,7 +7962,8 @@ bool\n aarch64_function_arg_regno_p (unsigned regno)\n {\n   return ((GP_REGNUM_P (regno) && regno < R0_REGNUM + NUM_ARG_REGS)\n-\t  || (FP_REGNUM_P (regno) && regno < V0_REGNUM + NUM_FP_ARG_REGS));\n+\t  || (FP_REGNUM_P (regno) && regno < V0_REGNUM + NUM_FP_ARG_REGS)\n+\t  || (PR_REGNUM_P (regno) && regno < P0_REGNUM + NUM_PR_ARG_REGS));\n }\n \n /* Implement FUNCTION_ARG_BOUNDARY.  Every parameter gets at least\n@@ -7982,6 +7999,10 @@ aarch64_get_reg_raw_mode (int regno)\n        for SVE types are fundamentally incompatible with the\n        __builtin_return/__builtin_apply interface.  */\n     return as_a <fixed_size_mode> (V16QImode);\n+  if (PR_REGNUM_P (regno))\n+    /* For SVE PR regs, indicate that they should be ignored for\n+       __builtin_apply/__builtin_return.  */\n+    return as_a <fixed_size_mode> (VOIDmode);\n   return default_get_reg_raw_mode (regno);\n }\n \n@@ -15648,6 +15669,33 @@ aarch64_first_cycle_multipass_dfa_lookahead_guard (rtx_insn *insn,\n \n /* Vectorizer cost model target hooks.  */\n \n+/* If a vld1 from address ADDR should be recorded in vector_load_decls,\n+   return the decl that should be recorded.  Return null otherwise.  */\n+tree\n+aarch64_vector_load_decl (tree addr)\n+{\n+  if (TREE_CODE (addr) != ADDR_EXPR)\n+    return NULL_TREE;\n+  tree base = get_base_address (TREE_OPERAND (addr, 0));\n+  if (TREE_CODE (base) != VAR_DECL)\n+    return NULL_TREE;\n+  return base;\n+}\n+\n+/* Return true if STMT_INFO accesses a decl that is known to be the\n+   argument to a vld1 in the same function.  */\n+static bool\n+aarch64_accesses_vector_load_decl_p (stmt_vec_info stmt_info)\n+{\n+  if (!cfun->machine->vector_load_decls)\n+    return false;\n+  auto dr = STMT_VINFO_DATA_REF (stmt_info);\n+  if (!dr)\n+    return false;\n+  tree decl = aarch64_vector_load_decl (DR_BASE_ADDRESS (dr));\n+  return decl && cfun->machine->vector_load_decls->contains (decl);\n+}\n+\n /* Information about how the CPU would issue the scalar, Advanced SIMD\n    or SVE version of a vector loop, using the scheme defined by the\n    aarch64_base_vec_issue_info hierarchy of structures.  */\n@@ -15878,6 +15926,20 @@ class aarch64_vector_costs : public vector_costs\n      supported by Advanced SIMD and SVE2.  */\n   bool m_has_avg = false;\n \n+  /* True if the vector body contains a store to a decl and if the\n+     function is known to have a vld1 from the same decl.\n+\n+     In the Advanced SIMD ACLE, the recommended endian-agnostic way of\n+     initializing a vector is:\n+\n+       float f[4] = { elts };\n+       float32x4_t x = vld1q_f32(f);\n+\n+     We should strongly prefer vectorization of the initialization of f,\n+     so that the store to f and the load back can be optimized away,\n+     leaving a vectorization of { elts }.  */\n+  bool m_stores_to_vector_load_decl = false;\n+\n   /* - If M_VEC_FLAGS is zero then we're costing the original scalar code.\n      - If M_VEC_FLAGS & VEC_ADVSIMD is nonzero then we're costing Advanced\n        SIMD code.\n@@ -16894,6 +16956,18 @@ aarch64_vector_costs::add_stmt_cost (int count, vect_cost_for_stmt kind,\n \t    }\n \t}\n     }\n+\n+  /* If the statement stores to a decl that is known to be the argument\n+     to a vld1 in the same function, ignore the store for costing purposes.\n+     See the comment above m_stores_to_vector_load_decl for more details.  */\n+  if (stmt_info\n+      && (kind == vector_store || kind == unaligned_store)\n+      && aarch64_accesses_vector_load_decl_p (stmt_info))\n+    {\n+      stmt_cost = 0;\n+      m_stores_to_vector_load_decl = true;\n+    }\n+\n   return record_stmt_cost (stmt_info, where, (count * stmt_cost).ceil ());\n }\n \n@@ -17183,12 +17257,21 @@ aarch64_vector_costs::finish_cost (const vector_costs *uncast_scalar_costs)\n \n   /* Apply the heuristic described above m_stp_sequence_cost.  Prefer\n      the scalar code in the event of a tie, since there is more chance\n-     of scalar code being optimized with surrounding operations.  */\n+     of scalar code being optimized with surrounding operations.\n+\n+     In addition, if the vector body is a simple store to a decl that\n+     is elsewhere loaded using vld1, strongly prefer the vector form,\n+     to the extent of giving the prologue a zero cost.  See the comment\n+     above m_stores_to_vector_load_decl for details.  */\n   if (!loop_vinfo\n       && scalar_costs\n-      && m_stp_sequence_cost != ~0U\n-      && m_stp_sequence_cost >= scalar_costs->m_stp_sequence_cost)\n-    m_costs[vect_body] = 2 * scalar_costs->total_cost ();\n+      && m_stp_sequence_cost != ~0U)\n+    {\n+      if (m_stores_to_vector_load_decl)\n+\tm_costs[vect_prologue] = 0;\n+      else if (m_stp_sequence_cost >= scalar_costs->m_stp_sequence_cost)\n+\tm_costs[vect_body] = 2 * scalar_costs->total_cost ();\n+    }\n \n   vector_costs::finish_cost (scalar_costs);\n }\n@@ -19858,7 +19941,7 @@ aarch64_gimplify_va_arg_expr (tree valist, tree type, gimple_seq *pre_p,\n \t  field_ptr_t = aarch64_fp16_ptr_type_node;\n \t  break;\n \tcase E_BFmode:\n-\t  field_t = aarch64_bf16_type_node;\n+\t  field_t = bfloat16_type_node;\n \t  field_ptr_t = aarch64_bf16_ptr_type_node;\n \t  break;\n \tcase E_V2SImode:\n@@ -24361,46 +24444,6 @@ aarch64_vectorize_vec_perm_const (machine_mode vmode, machine_mode op_mode,\n \n   return ret;\n }\n-\n-/* Implement TARGET_VECTORIZE_CAN_SPECIAL_DIV_BY_CONST.  */\n-\n-bool\n-aarch64_vectorize_can_special_div_by_constant (enum tree_code code,\n-\t\t\t\t\t       tree vectype, wide_int cst,\n-\t\t\t\t\t       rtx *output, rtx in0, rtx in1)\n-{\n-  if (code != TRUNC_DIV_EXPR\n-      || !TYPE_UNSIGNED (vectype))\n-    return false;\n-\n-  machine_mode mode = TYPE_MODE (vectype);\n-  unsigned int flags = aarch64_classify_vector_mode (mode);\n-  if ((flags & VEC_ANY_SVE) && !TARGET_SVE2)\n-    return false;\n-\n-  int pow = wi::exact_log2 (cst + 1);\n-  auto insn_code = maybe_code_for_aarch64_bitmask_udiv3 (TYPE_MODE (vectype));\n-  /* SVE actually has a div operator, we may have gotten here through\n-     that route.  */\n-  if (pow != (int) (element_precision (vectype) / 2)\n-      || insn_code == CODE_FOR_nothing)\n-    return false;\n-\n-  /* We can use the optimized pattern.  */\n-  if (in0 == NULL_RTX && in1 == NULL_RTX)\n-    return true;\n-\n-  gcc_assert (output);\n-\n-  expand_operand ops[3];\n-  create_output_operand (&ops[0], *output, mode);\n-  create_input_operand (&ops[1], in0, mode);\n-  create_fixed_operand (&ops[2], in1);\n-  expand_insn (insn_code, 3, ops);\n-  *output = ops[0].value;\n-  return true;\n-}\n-\n /* Generate a byte permute mask for a register of mode MODE,\n    which has NUNITS units.  */\n \n@@ -26588,26 +26631,26 @@ aarch64_dwarf_poly_indeterminate_value (unsigned int i, unsigned int *factor,\n }\n \n /* Implement TARGET_LIBGCC_FLOATING_POINT_MODE_SUPPORTED_P - return TRUE\n-   if MODE is HFmode, and punt to the generic implementation otherwise.  */\n+   if MODE is [BH]Fmode, and punt to the generic implementation otherwise.  */\n \n static bool\n aarch64_libgcc_floating_mode_supported_p (scalar_float_mode mode)\n {\n-  return (mode == HFmode\n+  return ((mode == HFmode || mode == BFmode)\n \t  ? true\n \t  : default_libgcc_floating_mode_supported_p (mode));\n }\n \n /* Implement TARGET_SCALAR_MODE_SUPPORTED_P - return TRUE\n-   if MODE is HFmode, and punt to the generic implementation otherwise.  */\n+   if MODE is [BH]Fmode, and punt to the generic implementation otherwise.  */\n \n static bool\n aarch64_scalar_mode_supported_p (scalar_mode mode)\n {\n   if (DECIMAL_FLOAT_MODE_P (mode))\n     return default_decimal_float_supported_p ();\n \n-  return (mode == HFmode\n+  return ((mode == HFmode || mode == BFmode)\n \t  ? true\n \t  : default_scalar_mode_supported_p (mode));\n }\n@@ -27075,51 +27118,13 @@ aarch64_stack_protect_guard (void)\n   return NULL_TREE;\n }\n \n-/* Return the diagnostic message string if conversion from FROMTYPE to\n-   TOTYPE is not allowed, NULL otherwise.  */\n-\n-static const char *\n-aarch64_invalid_conversion (const_tree fromtype, const_tree totype)\n-{\n-  if (element_mode (fromtype) != element_mode (totype))\n-    {\n-      /* Do no allow conversions to/from BFmode scalar types.  */\n-      if (TYPE_MODE (fromtype) == BFmode)\n-\treturn N_(\"invalid conversion from type %<bfloat16_t%>\");\n-      if (TYPE_MODE (totype) == BFmode)\n-\treturn N_(\"invalid conversion to type %<bfloat16_t%>\");\n-    }\n-\n-  /* Conversion allowed.  */\n-  return NULL;\n-}\n-\n-/* Return the diagnostic message string if the unary operation OP is\n-   not permitted on TYPE, NULL otherwise.  */\n-\n-static const char *\n-aarch64_invalid_unary_op (int op, const_tree type)\n-{\n-  /* Reject all single-operand operations on BFmode except for &.  */\n-  if (element_mode (type) == BFmode && op != ADDR_EXPR)\n-    return N_(\"operation not permitted on type %<bfloat16_t%>\");\n-\n-  /* Operation allowed.  */\n-  return NULL;\n-}\n-\n /* Return the diagnostic message string if the binary operation OP is\n    not permitted on TYPE1 and TYPE2, NULL otherwise.  */\n \n static const char *\n aarch64_invalid_binary_op (int op ATTRIBUTE_UNUSED, const_tree type1,\n \t\t\t   const_tree type2)\n {\n-  /* Reject all 2-operand operations on BFmode.  */\n-  if (element_mode (type1) == BFmode\n-      || element_mode (type2) == BFmode)\n-    return N_(\"operation not permitted on type %<bfloat16_t%>\");\n-\n   if (VECTOR_TYPE_P (type1)\n       && VECTOR_TYPE_P (type2)\n       && !TYPE_INDIVISIBLE_P (type1)\n@@ -27716,12 +27721,6 @@ aarch64_libgcc_floating_mode_supported_p\n #undef TARGET_MANGLE_TYPE\n #define TARGET_MANGLE_TYPE aarch64_mangle_type\n \n-#undef TARGET_INVALID_CONVERSION\n-#define TARGET_INVALID_CONVERSION aarch64_invalid_conversion\n-\n-#undef TARGET_INVALID_UNARY_OP\n-#define TARGET_INVALID_UNARY_OP aarch64_invalid_unary_op\n-\n #undef TARGET_INVALID_BINARY_OP\n #define TARGET_INVALID_BINARY_OP aarch64_invalid_binary_op\n \n@@ -27902,13 +27901,13 @@ aarch64_libgcc_floating_mode_supported_p\n #undef TARGET_MAX_ANCHOR_OFFSET\n #define TARGET_MAX_ANCHOR_OFFSET 4095\n \n+#undef TARGET_VECTORIZE_PREFERRED_DIV_AS_SHIFTS_OVER_MULT\n+#define TARGET_VECTORIZE_PREFERRED_DIV_AS_SHIFTS_OVER_MULT \\\n+  aarch64_vectorize_preferred_div_as_shifts_over_mult\n+\n #undef TARGET_VECTOR_ALIGNMENT\n #define TARGET_VECTOR_ALIGNMENT aarch64_simd_vector_alignment\n \n-#undef TARGET_VECTORIZE_CAN_SPECIAL_DIV_BY_CONST\n-#define TARGET_VECTORIZE_CAN_SPECIAL_DIV_BY_CONST \\\n-  aarch64_vectorize_can_special_div_by_constant\n-\n #undef TARGET_VECTORIZE_PREFERRED_VECTOR_ALIGNMENT\n #define TARGET_VECTORIZE_PREFERRED_VECTOR_ALIGNMENT \\\n   aarch64_vectorize_preferred_vector_alignment"}, {"sha": "155cace6afea4b1b3828146e22f8a8214deaf76b", "filename": "gcc/config/aarch64/aarch64.h", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Faarch64%2Faarch64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Faarch64%2Faarch64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -860,6 +860,7 @@ struct GTY (()) aarch64_frame\n   bool is_scs_enabled;\n };\n \n+#ifdef hash_set_h\n typedef struct GTY (()) machine_function\n {\n   struct aarch64_frame frame;\n@@ -868,8 +869,12 @@ typedef struct GTY (()) machine_function\n   /* One entry for each general purpose register.  */\n   rtx call_via[SP_REGNUM];\n   bool label_is_assembled;\n+  /* A set of all decls that have been passed to a vld1 intrinsic in the\n+     current function.  This is used to help guide the vector cost model.  */\n+  hash_set<tree> *vector_load_decls;\n } machine_function;\n #endif\n+#endif\n \n /* Which ABI to use.  */\n enum aarch64_abi_type\n@@ -1237,9 +1242,8 @@ extern const char *aarch64_rewrite_mcpu (int argc, const char **argv);\n extern GTY(()) tree aarch64_fp16_type_node;\n extern GTY(()) tree aarch64_fp16_ptr_type_node;\n \n-/* This type is the user-visible __bf16, and a pointer to that type.  Defined\n-   in aarch64-builtins.cc.  */\n-extern GTY(()) tree aarch64_bf16_type_node;\n+/* Pointer to the user-visible __bf16 type.  __bf16 itself is generic\n+   bfloat16_type_node.  Defined in aarch64-builtins.cc.  */\n extern GTY(()) tree aarch64_bf16_ptr_type_node;\n \n /* The generic unwind code in libgcc does not initialize the frame pointer."}, {"sha": "022eef80bc1e93299f329610dcd2321917d5770a", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 25, "deletions": 2, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -949,8 +949,8 @@\n \n (define_expand \"tbranch_<code><mode>3\"\n   [(set (pc) (if_then_else\n-              (EQL (match_operand:ALLI 0 \"register_operand\")\n-                   (match_operand 1 \"aarch64_simd_shift_imm_<mode>\"))\n+              (EQL (match_operand:SHORT 0 \"register_operand\")\n+                   (match_operand 1 \"const0_operand\"))\n               (label_ref (match_operand 2 \"\"))\n               (pc)))]\n   \"\"\n@@ -4656,6 +4656,29 @@\n   [(set_attr \"type\" \"logic_shift_imm\")]\n )\n \n+(define_split\n+  [(set (match_operand:GPI 0 \"register_operand\")\n+\t(LOGICAL_OR_PLUS:GPI\n+\t  (and:GPI\n+\t    (lshiftrt:GPI (match_operand:GPI 1 \"register_operand\")\n+\t\t\t  (match_operand:QI 2 \"aarch64_shift_imm_<mode>\"))\n+\t    (match_operand:GPI 3 \"aarch64_logical_immediate\"))\n+\t  (match_operand:GPI 4 \"register_operand\")))]\n+  \"can_create_pseudo_p ()\n+   && aarch64_bitmask_imm (UINTVAL (operands[3]) << UINTVAL (operands[2]),\n+\t\t\t   <MODE>mode)\"\n+  [(set (match_dup 5) (and:GPI (match_dup 1) (match_dup 6)))\n+   (set (match_dup 0) (LOGICAL_OR_PLUS:GPI\n+\t\t       (lshiftrt:GPI (match_dup 5) (match_dup 2))\n+                       (match_dup 4)))]\n+  {\n+    operands[5] = gen_reg_rtx (<MODE>mode);\n+    operands[6]\n+      = gen_int_mode (UINTVAL (operands[3]) << UINTVAL (operands[2]),\n+\t\t      <MODE>mode);\n+  }\n+)\n+\n (define_split\n   [(set (match_operand:GPI 0 \"register_operand\")\n \t(LOGICAL_OR_PLUS:GPI"}, {"sha": "35eab6c94bfceb04a8760b494eb8f1133e640a59", "filename": "gcc/config/arm/mve.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Farm%2Fmve.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Farm%2Fmve.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fmve.md?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -723,7 +723,7 @@\n \t VCREATEQ_F))\n   ]\n   \"TARGET_HAVE_MVE && TARGET_HAVE_MVE_FLOAT\"\n-  \"vmov %q0[2], %q0[0], %Q2, %Q1\\;vmov %q0[3], %q0[1], %R2, %R1\"\n+  \"vmov %q0[2], %q0[0], %Q1, %Q2\\;vmov %q0[3], %q0[1], %R1, %R2\"\n   [(set_attr \"type\" \"mve_move\")\n    (set_attr \"length\"\"8\")])\n \n@@ -738,7 +738,7 @@\n \t VCREATEQ))\n   ]\n   \"TARGET_HAVE_MVE\"\n-  \"vmov %q0[2], %q0[0], %Q2, %Q1\\;vmov %q0[3], %q0[1], %R2, %R1\"\n+  \"vmov %q0[2], %q0[0], %Q1, %Q2\\;vmov %q0[3], %q0[1], %R1, %R2\"\n   [(set_attr \"type\" \"mve_move\")\n    (set_attr \"length\"\"8\")])\n "}, {"sha": "60e7ba35d8b2525c3a255e8039a500d0f79b29e4", "filename": "gcc/config/arm/vfp.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Farm%2Fvfp.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Farm%2Fvfp.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fvfp.md?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -312,9 +312,9 @@\n     case 12: case 13:\n       return output_move_vfp (operands);\n     case 14:\n-      return \\\"vmsr\\\\t P0, %1\\\";\n+      return \\\"vmsr\\\\tp0, %1\\\";\n     case 15:\n-      return \\\"vmrs\\\\t %0, P0\\\";\n+      return \\\"vmrs\\\\t%0, p0\\\";\n     case 16:\n       return \\\"mcr\\\\tp10, 7, %1, cr1, cr0, 0\\\\t @SET_FPSCR\\\";\n     case 17:"}, {"sha": "fa9aa19d13e38a08ac9867245952490d9081a867", "filename": "gcc/config/cris/constraints.md", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fcris%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fcris%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fconstraints.md?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -100,17 +100,7 @@\n \t\t\t\t\t       || reload_completed)\")))\n \n ;; Extra constraints.\n-(define_constraint \"R\"\n-  \"An operand to BDAP or BIAP.\"\n-       ;; A BIAP; r.S?\n-  (ior (match_test \"cris_biap_index_p (op, reload_in_progress\n-\t\t\t\t\t   || reload_completed)\")\n-       ;; A [reg] or (int) [reg], maybe with post-increment.\n-       (match_test \"cris_bdap_index_p (op, reload_in_progress\n-\t\t\t\t\t   || reload_completed)\")\n-       (match_test \"CONSTANT_P (op)\")))\n-\n-(define_constraint \"T\"\n+(define_memory_constraint \"T\"\n   \"Memory three-address operand.\"\n   ;; All are indirect-memory:\n   (and (match_code \"mem\")"}, {"sha": "05dead9c0778c17a7a4d59ecf1c097fa1830403b", "filename": "gcc/config/cris/cris.cc", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fcris%2Fcris.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fcris%2Fcris.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -1884,7 +1884,28 @@ cris_rtx_costs (rtx x, machine_mode mode, int outer_code, int opno,\n \tif (val == 0)\n \t  *total = 0;\n \telse if (val < 32 && val >= -32)\n-\t  *total = 1;\n+\t  switch (outer_code)\n+\t    {\n+\t      /* For modes that fit in one register we tell they cost\n+\t\t the same as with register operands.  DImode operations\n+\t\t needs careful consideration for more basic reasons:\n+\t\t shifting by a non-word-size amount needs more\n+\t\t operations than an addition by a register pair.\n+\t\t Deliberately excluding SET, PLUS and comparisons and\n+\t\t also not including the full -64..63 range for (PLUS\n+\t\t and) MINUS.  */\n+\t    case MINUS: case ASHIFT: case LSHIFTRT:\n+\t    case ASHIFTRT: case AND: case IOR:\n+\t      if (GET_MODE_SIZE(mode) <= UNITS_PER_WORD)\n+\t\t{\n+\t\t  *total = 0;\n+\t\t  break;\n+\t\t}\n+\t      /* FALL THROUGH.  */\n+\t    default:\n+\t      *total = 1;\n+\t      break;\n+\t    }\n \t/* Eight or 16 bits are a word and cycle more expensive.  */\n \telse if (val <= 32767 && val >= -32768)\n \t  *total = 2;"}, {"sha": "366b4bc304bfd09681d7a47224298e48b0caacbe", "filename": "gcc/config/cris/cris.md", "status": "modified", "additions": 102, "deletions": 1, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fcris%2Fcris.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fcris%2Fcris.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.md?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -183,6 +183,10 @@\n \n (define_mode_iterator WD [SI HI])\n (define_mode_iterator BW [HI QI])\n+\n+; Another \"BW\" for use where an independent iteration is needed.\n+(define_mode_iterator BW2 [HI QI])\n+\n (define_mode_attr S [(SI \"HI\") (HI \"QI\")])\n (define_mode_attr s [(SI \"hi\") (HI \"qi\")])\n (define_mode_attr m [(SI \".d\") (HI \".w\") (QI \".b\")])\n@@ -1362,12 +1366,63 @@\n {\n   rtx reg = operands[0];\n   rtx_insn *i = next_nonnote_nondebug_insn_bb (curr_insn);\n+  rtx x, src, dest;\n \n   while (i != NULL_RTX && (!INSN_P (i) || DEBUG_INSN_P (i)))\n     i = next_nonnote_nondebug_insn_bb (i);\n \n-  if (i == NULL_RTX || reg_mentioned_p (reg, i) || BARRIER_P (i))\n+  /* We don't want to strip the clobber if the next insn possibly uses the\n+     zeroness of the result.  Preferably fail only if we see a compare insn\n+     that looks eliminable and with the register \"reg\" compared.  With some\n+     effort we could also check for an equality test (EQ, NE) in the post-split\n+     user, just not for now.  */\n+  if (i == NULL_RTX)\n+    FAIL;\n+\n+  x = single_set (i);\n+\n+  /* We explicitly need to bail on a BARRIER, but that's implied by a failing\n+     single_set test.  */\n+  if (x == NULL_RTX)\n     FAIL;\n+\n+  src = SET_SRC (x);\n+  dest = SET_DEST (x);\n+\n+  /* Bail on (post-split) eliminable compares.  */\n+  if (REG_P (dest) && REGNO (dest) == CRIS_CC0_REGNUM\n+      && GET_CODE (src) == COMPARE)\n+    {\n+      rtx cop0 = XEXP (src, 0);\n+\n+      if (REG_P (cop0) && REGNO (cop0) == REGNO (reg)\n+\t  && XEXP (src, 1) == const0_rtx)\n+\tFAIL;\n+    }\n+\n+  /* Bail out if we see a (pre-split) cbranch or cstore where the comparison\n+     looks eliminable and uses the destination register in this addition.  We\n+     don't need to look very deep: a single_set which is a parallel clobbers\n+     something, and (one of) that something, is always CRIS_CC0_REGNUM here.\n+     Also, the entities we're looking for are two-element parallels.  A\n+     split-up cbranch or cstore doesn't clobber CRIS_CC0_REGNUM.  A cbranch has\n+     if_then_else as its source with a comparison operator as the condition,\n+     and a cstore has a source with the comparison operator directly.  That\n+     also matches dstep, so look for pc as destination for the if_then_else.\n+     We error on the safe side if we happen to catch other conditional entities\n+     and FAIL, that just means the split won't happen.  */\n+  if (GET_CODE (PATTERN (i)) == PARALLEL && XVECLEN (PATTERN (i), 0) == 2)\n+    {\n+      rtx cmp\n+\t= (GET_CODE (src) == IF_THEN_ELSE && dest == pc_rtx\n+\t   ? XEXP (src, 0)\n+\t   : (COMPARISON_P (src) ? src : NULL_RTX));\n+      gcc_assert (cmp == NULL_RTX || COMPARISON_P (cmp));\n+\n+      if (cmp && REG_P (XEXP (cmp, 0)) && XEXP (cmp, 1) == const0_rtx\n+\t  && REGNO (XEXP (cmp, 0)) == REGNO (reg))\n+\tFAIL;\n+    }\n })\n \n (define_insn \"<u>mul<s><mode>3\"\n@@ -2832,6 +2887,52 @@\n   operands[3] = gen_rtx_ZERO_EXTEND (SImode, op1);\n   operands[4] = GEN_INT (trunc_int_for_mode (INTVAL (operands[1]), QImode));\n })\n+\n+;; Fix a decomposed szext: fuse it with the memory operand of the\n+;; load.  This is typically the sign-extension part of a decomposed\n+;; \"indirect offset\" address.\n+(define_peephole2 ; lra_szext_decomposed\n+  [(parallel\n+    [(set (match_operand:BW 0 \"register_operand\")\n+\t  (match_operand:BW 1 \"memory_operand\"))\n+     (clobber (reg:CC CRIS_CC0_REGNUM))])\n+   (parallel\n+    [(set (match_operand:SI 2 \"register_operand\") (szext:SI (match_dup 0)))\n+     (clobber (reg:CC CRIS_CC0_REGNUM))])]\n+  \"REGNO (operands[0]) == REGNO (operands[2])\n+   || peep2_reg_dead_p (2, operands[0])\"\n+  [(parallel\n+    [(set (match_dup 2) (szext:SI (match_dup 1)))\n+     (clobber (reg:CC CRIS_CC0_REGNUM))])])\n+\n+;; Re-compose a decomposed \"indirect offset\" address for a szext\n+;; operation.  The non-clobbering \"addi\" is generated by LRA.\n+;; This and lra_szext_decomposed is covered by cris/rld-legit1.c.\n+(define_peephole2 ; lra_szext_decomposed_indirect_with_offset\n+  [(parallel\n+    [(set (match_operand:SI 0 \"register_operand\")\n+\t  (sign_extend:SI (mem:BW (match_operand:SI 1 \"register_operand\"))))\n+     (clobber (reg:CC CRIS_CC0_REGNUM))])\n+   (set (match_dup 0)\n+\t(plus:SI (match_dup 0) (match_operand:SI 2 \"register_operand\")))\n+   (parallel\n+    [(set (match_operand:SI 3 \"register_operand\")\n+\t  (szext:SI (mem:BW2 (match_dup 0))))\n+     (clobber (reg:CC CRIS_CC0_REGNUM))])]\n+  \"(REGNO (operands[0]) == REGNO (operands[3])\n+    || peep2_reg_dead_p (3, operands[0]))\n+   && (REGNO (operands[0]) == REGNO (operands[1])\n+       || peep2_reg_dead_p (3, operands[0]))\"\n+  [(parallel\n+    [(set\n+      (match_dup 3)\n+      (szext:SI\n+       (mem:BW2 (plus:SI (szext:SI (mem:BW (match_dup 1))) (match_dup 2)))))\n+     (clobber (reg:CC CRIS_CC0_REGNUM))])])\n+\n+;; Add operations with similar or same decomposed addresses here, when\n+;; encountered - but only when covered by mentioned test-cases for at\n+;; least one of the cases generalized in the pattern.\n \f\n ;; Local variables:\n ;; mode:emacs-lisp"}, {"sha": "287ce17d4225bdb0942df0061bc9bff814970f34", "filename": "gcc/config/gcn/gcn-protos.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fgcn%2Fgcn-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fgcn%2Fgcn-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn-protos.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -27,6 +27,11 @@ extern unsigned int gcn_dwarf_register_number (unsigned int regno);\n extern rtx get_exec (int64_t);\n extern rtx get_exec (machine_mode mode);\n extern char * gcn_expand_dpp_shr_insn (machine_mode, const char *, int, int);\n+extern char * gcn_expand_dpp_swap_pairs_insn (machine_mode, const char *, int);\n+extern char * gcn_expand_dpp_distribute_even_insn (machine_mode, const char *,\n+\t\t\t\t\t\t   int unspec);\n+extern char * gcn_expand_dpp_distribute_odd_insn (machine_mode, const char *,\n+\t\t\t\t\t\t  int unspec);\n extern void gcn_expand_epilogue ();\n extern rtx gcn_expand_scaled_offsets (addr_space_t as, rtx base, rtx offsets,\n \t\t\t\t      rtx scale, bool unsigned_p, rtx exec);\n@@ -70,6 +75,7 @@ extern reg_class gcn_regno_reg_class (int regno);\n extern bool gcn_scalar_flat_address_p (rtx);\n extern bool gcn_scalar_flat_mem_p (rtx);\n extern bool gcn_sgpr_move_p (rtx, rtx);\n+extern bool gcn_stepped_zero_int_parallel_p (rtx op, int step);\n extern bool gcn_valid_move_p (machine_mode, rtx, rtx);\n extern rtx gcn_vec_constant (machine_mode, int);\n extern rtx gcn_vec_constant (machine_mode, rtx);"}, {"sha": "e3d6d65e9a9628982fd0466a71de9da1a2290f78", "filename": "gcc/config/gcn/gcn-valu.md", "status": "modified", "additions": 468, "deletions": 10, "changes": 478, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fgcn%2Fgcn-valu.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fgcn%2Fgcn-valu.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn-valu.md?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -49,6 +49,13 @@\n \t\t       V16QI V16HI V16SI V16HF V16SF\n \t\t       V32QI V32HI V32SI V32HF V32SF\n \t\t       V64QI V64HI V64SI V64HF V64SF])\n+(define_mode_iterator V_1REG_ALT\n+\t\t      [V2QI V2HI V2SI V2HF V2SF\n+\t\t       V4QI V4HI V4SI V4HF V4SF\n+\t\t       V8QI V8HI V8SI V8HF V8SF\n+\t\t       V16QI V16HI V16SI V16HF V16SF\n+\t\t       V32QI V32HI V32SI V32HF V32SF\n+\t\t       V64QI V64HI V64SI V64HF V64SF])\n \n (define_mode_iterator V_INT_1REG\n \t\t      [V2QI V2HI V2SI\n@@ -80,6 +87,13 @@\n \t\t       V16DI V16DF\n \t\t       V32DI V32DF\n \t\t       V64DI V64DF])\n+(define_mode_iterator V_2REG_ALT\n+\t\t      [V2DI V2DF\n+\t\t       V4DI V4DF\n+\t\t       V8DI V8DF\n+\t\t       V16DI V16DF\n+\t\t       V32DI V32DF\n+\t\t       V64DI V64DF])\n \n ; Vector modes with native support\n (define_mode_iterator V_noQI\n@@ -788,11 +802,36 @@\n    (set_attr \"exec\" \"none\")\n    (set_attr \"laneselect\" \"yes\")])\n \n+(define_insn \"vec_extract<V_1REG:mode><V_1REG_ALT:mode>_nop\"\n+  [(set (match_operand:V_1REG_ALT 0 \"register_operand\" \"=v,v\")\n+\t(vec_select:V_1REG_ALT\n+\t  (match_operand:V_1REG 1 \"register_operand\"   \" 0,v\")\n+\t  (match_operand 2 \"ascending_zero_int_parallel\" \"\")))]\n+  \"MODE_VF (<V_1REG_ALT:MODE>mode) < MODE_VF (<V_1REG:MODE>mode)\n+   && <V_1REG_ALT:SCALAR_MODE>mode == <V_1REG:SCALAR_MODE>mode\"\n+  \"@\n+  ; in-place extract %0\n+  v_mov_b32\\t%L0, %L1\"\n+  [(set_attr \"type\" \"vmult\")\n+   (set_attr \"length\" \"0,8\")])\n+  \n+(define_insn \"vec_extract<V_2REG:mode><V_2REG_ALT:mode>_nop\"\n+  [(set (match_operand:V_2REG_ALT 0 \"register_operand\" \"=v,v\")\n+\t(vec_select:V_2REG_ALT\n+\t  (match_operand:V_2REG 1 \"register_operand\"   \" 0,v\")\n+\t  (match_operand 2 \"ascending_zero_int_parallel\" \"\")))]\n+  \"MODE_VF (<V_2REG_ALT:MODE>mode) < MODE_VF (<V_2REG:MODE>mode)\n+   && <V_2REG_ALT:SCALAR_MODE>mode == <V_2REG:SCALAR_MODE>mode\"\n+  \"@\n+  ; in-place extract %0\n+  v_mov_b32\\t%L0, %L1\\;v_mov_b32\\t%H0, %H1\"\n+  [(set_attr \"type\" \"vmult\")\n+   (set_attr \"length\" \"0,8\")])\n+  \n (define_expand \"vec_extract<V_ALL:mode><V_ALL_ALT:mode>\"\n-  [(set (match_operand:V_ALL_ALT 0 \"register_operand\")\n-\t(vec_select:V_ALL_ALT\n-\t  (match_operand:V_ALL 1 \"register_operand\")\n-\t  (parallel [(match_operand 2 \"immediate_operand\")])))]\n+  [(match_operand:V_ALL_ALT 0 \"register_operand\")\n+   (match_operand:V_ALL 1 \"register_operand\")\n+   (match_operand 2 \"immediate_operand\")]\n   \"MODE_VF (<V_ALL_ALT:MODE>mode) < MODE_VF (<V_ALL:MODE>mode)\n    && <V_ALL_ALT:SCALAR_MODE>mode == <V_ALL:SCALAR_MODE>mode\"\n   {\n@@ -802,8 +841,12 @@\n \n     if (firstlane == 0)\n       {\n-\t/* A plain move will do.  */\n-\ttmp = operands[1];\n+\trtx parallel = gen_rtx_PARALLEL (<V_ALL:MODE>mode,\n+\t\t\t\t\t  rtvec_alloc (numlanes));\n+\tfor (int i = 0; i < numlanes; i++)\n+\t  XVECEXP (parallel, 0, i) = GEN_INT (i);\n+\temit_insn (gen_vec_extract<V_ALL:mode><V_ALL_ALT:mode>_nop\n+\t\t   (operands[0], operands[1], parallel));\n       } else {\n         /* FIXME: optimize this by using DPP where available.  */\n \n@@ -815,10 +858,10 @@\n \ttmp = gen_reg_rtx (<V_ALL:MODE>mode);\n \temit_insn (gen_ds_bpermute<V_ALL:mode> (tmp, permutation, operands[1],\n \t\t\t\t\t\tget_exec (<V_ALL:MODE>mode)));\n-      }\n \n-    emit_move_insn (operands[0],\n-\t\t    gen_rtx_SUBREG (<V_ALL_ALT:MODE>mode, tmp, 0));\n+\temit_move_insn (operands[0],\n+\t\t\tgen_rtx_SUBREG (<V_ALL_ALT:MODE>mode, tmp, 0));\n+      }\n     DONE;\n   })\n \n@@ -1224,6 +1267,45 @@\n   [(set_attr \"type\" \"vop_dpp\")\n    (set_attr \"length\" \"16\")])\n \n+(define_insn \"@dpp_swap_pairs<mode>\"\n+  [(set (match_operand:V_noHI 0 \"register_operand\"    \"=v\")\n+\t(unspec:V_noHI\n+\t  [(match_operand:V_noHI 1 \"register_operand\" \" v\")]\n+\t  UNSPEC_MOV_DPP_SWAP_PAIRS))]\n+  \"\"\n+  {\n+    return gcn_expand_dpp_swap_pairs_insn (<MODE>mode, \"v_mov_b32\",\n+\t                                   UNSPEC_MOV_DPP_SWAP_PAIRS);\n+  }\n+  [(set_attr \"type\" \"vop_dpp\")\n+   (set_attr \"length\" \"16\")])\n+\n+(define_insn \"@dpp_distribute_even<mode>\"\n+  [(set (match_operand:V_noHI 0 \"register_operand\"    \"=v\")\n+\t(unspec:V_noHI\n+\t  [(match_operand:V_noHI 1 \"register_operand\" \" v\")]\n+\t  UNSPEC_MOV_DPP_DISTRIBUTE_EVEN))]\n+  \"\"\n+  {\n+    return gcn_expand_dpp_distribute_even_insn (<MODE>mode, \"v_mov_b32\",\n+\t\t\t\t\t\tUNSPEC_MOV_DPP_DISTRIBUTE_EVEN);\n+  }\n+  [(set_attr \"type\" \"vop_dpp\")\n+   (set_attr \"length\" \"16\")])\n+\n+(define_insn \"@dpp_distribute_odd<mode>\"\n+  [(set (match_operand:V_noHI 0 \"register_operand\"    \"=v\")\n+\t(unspec:V_noHI\n+\t  [(match_operand:V_noHI 1 \"register_operand\" \" v\")]\n+\t  UNSPEC_MOV_DPP_DISTRIBUTE_EVEN))]\n+  \"\"\n+  {\n+    return gcn_expand_dpp_distribute_odd_insn (<MODE>mode, \"v_mov_b32\",\n+\t\t\t\t\t       UNSPEC_MOV_DPP_DISTRIBUTE_ODD);\n+  }\n+  [(set_attr \"type\" \"vop_dpp\")\n+   (set_attr \"length\" \"16\")])\n+\n ;; }}}\n ;; {{{ ALU special case: add/sub\n \n@@ -2185,6 +2267,180 @@\n     DONE;\n   })\n \n+(define_int_iterator UNSPEC_CMUL_OP [UNSPEC_CMUL UNSPEC_CMUL_CONJ])\n+(define_int_attr conj_op [(UNSPEC_CMUL \"\") (UNSPEC_CMUL_CONJ \"_conj\")])\n+(define_int_attr cmul_subadd [(UNSPEC_CMUL \"sub\") (UNSPEC_CMUL_CONJ \"add\")])\n+(define_int_attr cmul_addsub [(UNSPEC_CMUL \"add\") (UNSPEC_CMUL_CONJ \"sub\")])\n+\n+(define_expand \"cmul<conj_op><mode>3\"\n+  [(set (match_operand:V_noHI 0 \"register_operand\"    \"=&v\")\n+        (unspec:V_noHI\n+\t  [(match_operand:V_noHI 1 \"register_operand\" \"v\")\n+\t   (match_operand:V_noHI 2 \"register_operand\" \"v\")]\n+\t  UNSPEC_CMUL_OP))]\n+  \"\"\n+  {\n+    // operands[1]                                                  a   b\n+    // operands[2]                                                  c   d\n+    rtx t1 = gen_reg_rtx (<MODE>mode);\n+    emit_insn (gen_mul<mode>3 (t1, operands[1], operands[2]));   // a*c b*d\n+\n+    rtx s2_perm = gen_reg_rtx (<MODE>mode);\n+    emit_insn (gen_dpp_swap_pairs<mode> (s2_perm, operands[2])); // d   c\n+\n+    rtx t2 = gen_reg_rtx (<MODE>mode);\n+    emit_insn (gen_mul<mode>3 (t2, operands[1], s2_perm));       // a*d b*c\n+\n+    rtx t1_perm = gen_reg_rtx (<MODE>mode);\n+    emit_insn (gen_dpp_swap_pairs<mode> (t1_perm, t1));          // b*d a*c\n+\n+    rtx even = gen_rtx_REG (DImode, EXEC_REG);\n+    emit_move_insn (even, get_exec (0x5555555555555555UL));\n+    rtx dest = operands[0];\n+    emit_insn (gen_<cmul_subadd><mode>3_exec (dest, t1, t1_perm, dest, even));\n+                                                             // a*c-b*d 0\n+\n+    rtx t2_perm = gen_reg_rtx (<MODE>mode);\n+    emit_insn (gen_dpp_swap_pairs<mode> (t2_perm, t2));          // b*c a*d\n+\n+    rtx odd = gen_rtx_REG (DImode, EXEC_REG);\n+    emit_move_insn (odd, get_exec (0xaaaaaaaaaaaaaaaaUL));\n+    emit_insn (gen_<cmul_addsub><mode>3_exec (dest, t2, t2_perm, dest, odd));\n+                                                                   // 0 a*d+b*c\n+    DONE;\n+  })\n+\n+(define_code_iterator addsub [plus minus])\n+(define_code_attr addsub_as [(plus \"a\") (minus \"s\")])\n+\n+(define_expand \"cml<addsub_as><mode>4\"\n+  [(set (match_operand:V_FP 0 \"register_operand\"      \"=&v\")\n+\t(addsub:V_FP\n+\t  (unspec:V_FP\n+\t    [(match_operand:V_FP 1 \"register_operand\" \"v\")\n+\t     (match_operand:V_FP 2 \"register_operand\" \"v\")]\n+\t    UNSPEC_CMUL)\n+\t  (match_operand:V_FP 3 \"register_operand\"    \"v\")))]\n+  \"\"\n+  {\n+    rtx a = gen_reg_rtx (<MODE>mode);\n+    emit_insn (gen_dpp_distribute_even<mode> (a, operands[1]));    // a   a\n+\n+    rtx t1 = gen_reg_rtx (<MODE>mode);\n+    emit_insn (gen_fm<addsub_as><mode>4 (t1, a, operands[2], operands[3]));\n+                                                                   // a*c a*d\n+\n+    rtx b = gen_reg_rtx (<MODE>mode);\n+    emit_insn (gen_dpp_distribute_odd<mode> (b, operands[1]));     // b   b\n+\n+    rtx t2 = gen_reg_rtx (<MODE>mode);\n+    emit_insn (gen_mul<mode>3 (t2, b, operands[2]));               // b*c b*d\n+\n+    rtx t2_perm = gen_reg_rtx (<MODE>mode);\n+    emit_insn (gen_dpp_swap_pairs<mode> (t2_perm, t2));            // b*d b*c\n+\n+    rtx even = gen_rtx_REG (DImode, EXEC_REG);\n+    emit_move_insn (even, get_exec (0x5555555555555555UL));\n+    rtx dest = operands[0];\n+    emit_insn (gen_sub<mode>3_exec (dest, t1, t2_perm, dest, even));\n+\n+    rtx odd = gen_rtx_REG (DImode, EXEC_REG);\n+    emit_move_insn (odd, get_exec (0xaaaaaaaaaaaaaaaaUL));\n+    emit_insn (gen_add<mode>3_exec (dest, t1, t2_perm, dest, odd));\n+\n+    DONE;\n+  })\n+\n+(define_expand \"vec_addsub<mode>3\"\n+  [(set (match_operand:V_noHI 0 \"register_operand\"     \"=&v\")\n+        (vec_merge:V_noHI\n+          (minus:V_noHI\n+            (match_operand:V_noHI 1 \"register_operand\" \"v\")\n+            (match_operand:V_noHI 2 \"register_operand\" \"v\"))\n+          (plus:V_noHI (match_dup 1) (match_dup 2))\n+          (const_int 6148914691236517205)))]\n+  \"\"\n+  {\n+    rtx even = gen_rtx_REG (DImode, EXEC_REG);\n+    emit_move_insn (even, get_exec (0x5555555555555555UL));\n+    rtx dest = operands[0];\n+    rtx x = operands[1];\n+    rtx y = operands[2];\n+    emit_insn (gen_sub<mode>3_exec (dest, x, y, dest, even));\n+    rtx odd = gen_rtx_REG (DImode, EXEC_REG);\n+    emit_move_insn (odd, get_exec (0xaaaaaaaaaaaaaaaaUL));\n+    emit_insn (gen_add<mode>3_exec (dest, x, y, dest, odd));\n+\n+    DONE;\n+  })\n+\n+(define_int_iterator CADD [UNSPEC_CADD90 UNSPEC_CADD270])\n+(define_int_attr rot [(UNSPEC_CADD90 \"90\") (UNSPEC_CADD270 \"270\")])\n+(define_int_attr cadd_subadd [(UNSPEC_CADD90 \"sub\") (UNSPEC_CADD270 \"add\")])\n+(define_int_attr cadd_addsub [(UNSPEC_CADD90 \"add\") (UNSPEC_CADD270 \"sub\")])\n+\n+(define_expand \"cadd<rot><mode>3\"\n+  [(set (match_operand:V_noHI 0 \"register_operand\"                 \"=&v\")\n+        (unspec:V_noHI [(match_operand:V_noHI 1 \"register_operand\" \"v\")\n+                        (match_operand:V_noHI 2 \"register_operand\" \"v\")]\n+                        CADD))]\n+  \"\"\n+  {\n+    rtx dest = operands[0];\n+    rtx x = operands[1];\n+    rtx y = gen_reg_rtx (<MODE>mode);\n+    emit_insn (gen_dpp_swap_pairs<mode> (y, operands[2]));\n+\n+    rtx even = gen_rtx_REG (DImode, EXEC_REG);\n+    emit_move_insn (even, get_exec (0x5555555555555555UL));\n+    emit_insn (gen_<cadd_subadd><mode>3_exec (dest, x, y, dest, even));\n+    rtx odd = gen_rtx_REG (DImode, EXEC_REG);\n+    emit_move_insn (odd, get_exec (0xaaaaaaaaaaaaaaaaUL));\n+    emit_insn (gen_<cadd_addsub><mode>3_exec (dest, x, y, dest, odd));\n+\n+    DONE;\n+  })\n+\n+(define_expand \"vec_fmaddsub<mode>4\"\n+  [(match_operand:V_noHI 0 \"register_operand\" \"=&v\")\n+   (match_operand:V_noHI 1 \"register_operand\" \"v\")\n+   (match_operand:V_noHI 2 \"register_operand\" \"v\")\n+   (match_operand:V_noHI 3 \"register_operand\" \"v\")]\n+  \"\"\n+  {\n+    rtx t1 = gen_reg_rtx (<MODE>mode);\n+    emit_insn (gen_mul<mode>3 (t1, operands[1], operands[2]));\n+    rtx even = gen_rtx_REG (DImode, EXEC_REG);\n+    emit_move_insn (even, get_exec (0x5555555555555555UL));\n+    rtx dest = operands[0];\n+    emit_insn (gen_sub<mode>3_exec (dest, t1, operands[3], dest, even));\n+    rtx odd = gen_rtx_REG (DImode, EXEC_REG);\n+    emit_move_insn (odd, get_exec (0xaaaaaaaaaaaaaaaaUL));\n+    emit_insn (gen_add<mode>3_exec (dest, t1, operands[3], dest, odd));\n+\n+    DONE;\n+  })\n+\n+(define_expand \"vec_fmsubadd<mode>4\"\n+  [(match_operand:V_noHI 0 \"register_operand\" \"=&v\")\n+   (match_operand:V_noHI 1 \"register_operand\" \"v\")\n+   (match_operand:V_noHI 2 \"register_operand\" \"v\")\n+   (match_operand:V_noHI 3 \"register_operand\" \"v\")]\n+  \"\"\n+  {\n+    rtx t1 = gen_reg_rtx (<MODE>mode);\n+    emit_insn (gen_mul<mode>3 (t1, operands[1], operands[2]));\n+    rtx even = gen_rtx_REG (DImode, EXEC_REG);\n+    emit_move_insn (even, get_exec (0x5555555555555555UL));\n+    rtx dest = operands[0];\n+    emit_insn (gen_add<mode>3_exec (dest, t1, operands[3], dest, even));\n+    rtx odd = gen_rtx_REG (DImode, EXEC_REG);\n+    emit_move_insn (odd, get_exec (0xaaaaaaaaaaaaaaaaUL));\n+    emit_insn (gen_add<mode>3_exec (dest, t1, operands[3], dest, odd));\n+\n+    DONE;\n+  })\n+\n ;; }}}\n ;; {{{ ALU generic case\n \n@@ -2358,6 +2614,34 @@\n     DONE;\n   })\n \n+(define_expand \"<expander><mode>3_exec\"\n+  [(set (match_operand:V_QIHI 0 \"gcn_valu_dst_operand\")\n+\t(vec_merge:V_QIHI\n+\t  (minmaxop:V_QIHI\n+\t    (match_operand:V_QIHI 1 \"gcn_valu_src0_operand\")\n+\t    (match_operand:V_QIHI 2 \"gcn_valu_src1com_operand\"))\n+\t  (match_operand:V_QIHI 3 \"gcn_register_or_unspec_operand\" \"U0\")\n+\t  (match_operand:DI 4 \"gcn_exec_reg_operand\" \"e\")))]\n+  \"\"\n+  {\n+    enum {smin, umin, smax, umax};\n+    bool unsignedp = (<code> == umax || <code> == umin);\n+    rtx insi1 = gen_reg_rtx (<VnSI>mode);\n+    rtx insi2 = gen_reg_rtx (<VnSI>mode);\n+    rtx outsi = gen_reg_rtx (<VnSI>mode);\n+    rtx out = operands[0];\n+    rtx exec = operands[4];\n+    rtx tmp = gen_reg_rtx (<MODE>mode);\n+\n+    convert_move (insi1, operands[1], unsignedp);\n+    convert_move (insi2, operands[2], unsignedp);\n+    emit_insn (gen_<code><vnsi>3_exec (outsi, insi1, insi2,\n+                                       gcn_gen_undef(<VnSI>mode), exec));\n+    convert_move (tmp, outsi, unsignedp);\n+    emit_insn (gen_mov<mode>_exec (out, tmp, operands[3], exec));\n+    DONE;\n+  })\n+\n (define_insn \"<expander><vnsi>3<exec>\"\n   [(set (match_operand:V_SI 0 \"gcn_valu_dst_operand\"\t   \"=  v,RD\")\n \t(minmaxop:V_SI\n@@ -2370,6 +2654,71 @@\n   [(set_attr \"type\" \"vop2,ds\")\n    (set_attr \"length\" \"8,8\")])\n \n+(define_insn_and_split \"<expander><mode>3\"\n+  [(set (match_operand:V_DI 0 \"register_operand\"      \"=v\")\n+\t(minmaxop:V_DI\n+\t  (match_operand:V_DI 1 \"gcn_alu_operand\"     \" v\")\n+\t  (match_operand:V_DI 2 \"gcn_alu_operand\"     \" v\")))\n+    (clobber (reg:DI VCC_REG))]\n+  \"\"\n+  \"#\"\n+  \"reload_completed\"\n+  [(const_int 0)]\n+  {\n+    rtx out = operands[0];\n+    rtx vcc = gen_rtx_REG (DImode, VCC_REG);\n+\n+    enum {smin, smax, umin, umax};\n+    bool minp = (<code> == smin || <code> == umin);\n+    if (<code> == smin || <code> == smax)\n+      emit_insn (gen_vec_cmp<mode>di (vcc, minp ? gen_rtx_LT (VOIDmode, 0, 0) :\n+                                      gen_rtx_GT (VOIDmode, 0, 0), operands[1],\n+                                      operands[2]));\n+    else\n+      emit_insn (gen_vec_cmp<mode>di (vcc, minp ? gen_rtx_LTU (VOIDmode, 0, 0) :\n+                                      gen_rtx_GTU (VOIDmode, 0, 0), operands[1],\n+                                      operands[2]));\n+    emit_insn (gen_vcond_mask_<mode>di (out, operands[1], operands[2], vcc));\n+  }\n+  [(set_attr \"type\" \"mult\")])\n+\n+(define_insn_and_split \"<expander><mode>3_exec\"\n+  [(set (match_operand:V_DI 0 \"register_operand\"                 \"= v\")\n+\t(vec_merge:V_DI\n+          (minmaxop:V_DI\n+            (match_operand:V_DI 1 \"gcn_alu_operand\"              \"  v\")\n+            (match_operand:V_DI 2 \"gcn_alu_operand\"              \"  v\"))\n+          (match_operand:V_DI 3 \"gcn_register_or_unspec_operand\" \" U0\")\n+          (match_operand:DI 4 \"gcn_exec_reg_operand\"  \"+e\")))\n+    (clobber (match_scratch:<VnDI> 5\t\t      \"= &v\"))\n+    (clobber (reg:DI VCC_REG))]\n+  \"\"\n+  \"#\"\n+  \"reload_completed\"\n+  [(const_int 0)]\n+  {\n+    rtx out = operands[0];\n+    rtx vcc = gen_rtx_REG (DImode, VCC_REG);\n+    rtx exec = operands[4];\n+    rtx tmp = operands[5];\n+\n+    enum {smin, smax, umin, umax};\n+    bool minp = (<code> == smin || <code> == umin);\n+    if (<code> == smin || <code> == smax)\n+      emit_insn (gen_vec_cmp<mode>di_exec (vcc,\n+                                           minp ? gen_rtx_LT (VOIDmode, 0, 0) :\n+                                           gen_rtx_GT (VOIDmode, 0, 0),\n+                                           operands[1], operands[2], exec));\n+    else\n+      emit_insn (gen_vec_cmp<mode>di_exec (vcc,\n+                                           minp ? gen_rtx_LTU (VOIDmode, 0, 0) :\n+                                           gen_rtx_GTU (VOIDmode, 0, 0),\n+                                           operands[1], operands[2], exec));\n+    emit_insn (gen_vcond_mask_<mode>di (tmp, operands[1], operands[2], vcc));\n+    emit_insn (gen_mov<mode>_exec (out, tmp, operands[3], exec));\n+  }\n+  [(set_attr \"type\" \"mult\")])\n+\n ;; }}}\n ;; {{{ Int unops\n \n@@ -2383,6 +2732,23 @@\n     DONE;\n   })\n \n+(define_insn_and_split \"one_cmpl<mode>2<exec>\"\n+  [(set (match_operand:V_DI 0 \"register_operand\"  \"=   v\")\n+        (not:V_DI\n+          (match_operand:V_DI 1 \"gcn_alu_operand\" \"vSvDB\")))]\n+  \"\"\n+  \"#\"\n+  \"reload_completed\"\n+  [(set (match_dup 3) (not:<VnSI> (match_dup 5)))\n+   (set (match_dup 4) (not:<VnSI> (match_dup 6)))]\n+  {\n+    operands[3] = gcn_operand_part (<VnDI>mode, operands[0], 0);\n+    operands[4] = gcn_operand_part (<VnDI>mode, operands[0], 1);\n+    operands[5] = gcn_operand_part (<VnDI>mode, operands[1], 0);\n+    operands[6] = gcn_operand_part (<VnDI>mode, operands[1], 1);\n+  }\n+  [(set_attr \"type\" \"mult\")])\n+\n ;; }}}\n ;; {{{ FP binops - special cases\n \n@@ -2768,6 +3134,56 @@\n   [(set_attr \"type\" \"vop3a\")\n    (set_attr \"length\" \"8\")])\n \n+(define_insn \"fms<mode>4<exec>\"\n+  [(set (match_operand:V_FP 0 \"register_operand\"  \"=  v,   v\")\n+\t(fma:V_FP\n+\t  (match_operand:V_FP 1 \"gcn_alu_operand\" \"% vA,  vA\")\n+\t(match_operand:V_FP 2 \"gcn_alu_operand\"   \"  vA,vSvA\")\n+\t(neg:V_FP\n+\t  (match_operand:V_FP 3 \"gcn_alu_operand\" \"vSvA,  vA\"))))]\n+  \"\"\n+  \"v_fma%i0\\t%0, %1, %2, -%3\"\n+  [(set_attr \"type\" \"vop3a\")\n+   (set_attr \"length\" \"8\")])\n+\n+(define_insn \"fms<mode>4_negop2<exec>\"\n+  [(set (match_operand:V_FP 0 \"register_operand\"    \"=  v,   v,   v\")\n+\t(fma:V_FP\n+\t  (match_operand:V_FP 1 \"gcn_alu_operand\"   \"  vA,  vA,vSvA\")\n+\t  (neg:V_FP\n+\t    (match_operand:V_FP 2 \"gcn_alu_operand\" \"  vA,vSvA,  vA\"))\n+\t  (neg:V_FP\n+\t    (match_operand:V_FP 3 \"gcn_alu_operand\" \"vSvA,  vA,  vA\"))))]\n+  \"\"\n+  \"v_fma%i0\\t%0, %1, -%2, -%3\"\n+  [(set_attr \"type\" \"vop3a\")\n+   (set_attr \"length\" \"8\")])\n+\n+(define_insn \"fms<mode>4\"\n+  [(set (match_operand:FP 0 \"register_operand\"    \"=  v,   v\")\n+\t(fma:FP\n+\t  (match_operand:FP 1 \"gcn_alu_operand\"   \"% vA,  vA\")\n+\t  (match_operand:FP 2 \"gcn_alu_operand\"   \"  vA,vSvA\")\n+\t  (neg:FP\n+\t    (match_operand:FP 3 \"gcn_alu_operand\" \"vSvA,  vA\"))))]\n+  \"\"\n+  \"v_fma%i0\\t%0, %1, %2, -%3\"\n+  [(set_attr \"type\" \"vop3a\")\n+   (set_attr \"length\" \"8\")])\n+\n+(define_insn \"fms<mode>4_negop2\"\n+  [(set (match_operand:FP 0 \"register_operand\"    \"=  v,   v,   v\")\n+\t(fma:FP\n+\t  (match_operand:FP 1 \"gcn_alu_operand\"   \"  vA,  vA,vSvA\")\n+\t  (neg:FP\n+\t    (match_operand:FP 2 \"gcn_alu_operand\" \"  vA,vSvA,  vA\"))\n+\t  (neg:FP\n+\t    (match_operand:FP 3 \"gcn_alu_operand\" \"vSvA,  vA,  vA\"))))]\n+  \"\"\n+  \"v_fma%i0\\t%0, %1, -%2, -%3\"\n+  [(set_attr \"type\" \"vop3a\")\n+   (set_attr \"length\" \"8\")])\n+\n ;; }}}\n ;; {{{ FP division\n \n@@ -3468,7 +3884,49 @@\n     DONE;\n   })\n \n-;; TODO smin umin smax umax\n+(define_code_iterator cond_fminmaxop [smin smax])\n+\n+(define_expand \"cond_<fexpander><mode>\"\n+  [(match_operand:V_FP 0 \"register_operand\")\n+   (match_operand:DI 1 \"register_operand\")\n+   (cond_fminmaxop:V_FP\n+     (match_operand:V_FP 2 \"gcn_alu_operand\")\n+     (match_operand:V_FP 3 \"gcn_alu_operand\"))\n+   (match_operand:V_FP 4 \"register_operand\")]\n+  \"\"\n+  {\n+    operands[1] = force_reg (DImode, operands[1]);\n+    operands[2] = force_reg (<MODE>mode, operands[2]);\n+\n+    emit_insn (gen_<fexpander><mode>3_exec (operands[0], operands[2],\n+\t\t\t\t\t    operands[3], operands[4],\n+\t\t\t\t\t    operands[1]));\n+    DONE;\n+  })\n+\n+(define_code_iterator cond_minmaxop [smin smax umin umax])\n+\n+(define_expand \"cond_<expander><mode>\"\n+  [(match_operand:V_INT 0 \"register_operand\")\n+   (match_operand:DI 1 \"register_operand\")\n+   (cond_minmaxop:V_INT\n+     (match_operand:V_INT 2 \"gcn_alu_operand\")\n+     (match_operand:V_INT 3 \"gcn_alu_operand\"))\n+   (match_operand:V_INT 4 \"register_operand\")]\n+  \"\"\n+  {\n+    operands[1] = force_reg (DImode, operands[1]);\n+    operands[2] = force_reg (<MODE>mode, operands[2]);\n+    rtx tmp = gen_reg_rtx (<MODE>mode);\n+\n+    emit_insn (gen_<expander><mode>3_exec (tmp, operands[2], operands[3],\n+                                           gcn_gen_undef(<MODE>mode),\n+                                           operands[1]));\n+    emit_insn (gen_vcond_mask_<mode>di (operands[0], tmp, operands[4],\n+                                        operands[1]));\n+    DONE;\n+  })\n+\n (define_code_iterator cond_bitop [and ior xor])\n \n (define_expand \"cond_<expander><mode>\""}, {"sha": "a7d278cd2f856f258a6c0ca566a0882491e3738e", "filename": "gcc/config/gcn/gcn.cc", "status": "modified", "additions": 215, "deletions": 1, "changes": 216, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fgcn%2Fgcn.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fgcn%2Fgcn.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -53,6 +53,7 @@\n #include \"dwarf2.h\"\n #include \"gimple.h\"\n #include \"cgraph.h\"\n+#include \"case-cfn-macros.h\"\n \n /* This file should be included last.  */\n #include \"target-def.h\"\n@@ -491,6 +492,15 @@ gcn_class_max_nregs (reg_class_t rclass, machine_mode mode)\n     }\n   else if (rclass == VCC_CONDITIONAL_REG && mode == BImode)\n     return 2;\n+\n+  /* Vector modes in SGPRs are not supposed to happen (disallowed by\n+     gcn_hard_regno_mode_ok), but there are some patterns that have an \"Sv\"\n+     constraint and are used by splitters, post-reload.\n+     This ensures that we don't accidentally mark the following 63 scalar\n+     registers as \"live\".  */\n+  if (rclass == SGPR_REGS && VECTOR_MODE_P (mode))\n+    return CEIL (GET_MODE_SIZE (GET_MODE_INNER (mode)), 4);\n+\n   return CEIL (GET_MODE_SIZE (mode), 4);\n }\n \n@@ -797,7 +807,7 @@ static reg_class_t\n gcn_spill_class (reg_class_t c, machine_mode /*mode */ )\n {\n   if (reg_classes_intersect_p (ALL_CONDITIONAL_REGS, c)\n-      || c == VCC_CONDITIONAL_REG)\n+      || c == VCC_CONDITIONAL_REG || c == EXEC_MASK_REG)\n     return SGPR_REGS;\n   else\n     return NO_REGS;\n@@ -1421,6 +1431,24 @@ CODE_FOR_OP (reload_out)\n #undef CODE_FOR_OP\n #undef CODE_FOR\n \n+/* Return true if OP is a PARALLEL of CONST_INTs that form a linear\n+   series with step STEP.  */\n+\n+bool\n+gcn_stepped_zero_int_parallel_p (rtx op, int step)\n+{\n+  if (GET_CODE (op) != PARALLEL || !CONST_INT_P (XVECEXP (op, 0, 0)))\n+    return false;\n+\n+  unsigned HOST_WIDE_INT base = 0;\n+  for (int i = 0; i < XVECLEN (op, 0); ++i)\n+    if (!CONST_INT_P (XVECEXP (op, 0, i))\n+\t|| UINTVAL (XVECEXP (op, 0, i)) != base + i * step)\n+      return false;\n+\n+  return true;\n+}\n+\n /* }}}  */\n /* {{{ Addresses, pointers and moves.  */\n \n@@ -3220,6 +3248,10 @@ move_callee_saved_registers (rtx sp, machine_function *offsets,\n       emit_insn (move_vectors);\n       emit_insn (move_scalars);\n     }\n+\n+  /* This happens when a new register becomes \"live\" after reload.\n+     Check your splitters!  */\n+  gcc_assert (offset <= offsets->callee_saves);\n }\n \n /* Generate prologue.  Called from gen_prologue during pro_and_epilogue pass.\n@@ -5012,6 +5044,79 @@ gcn_vector_alignment_reachable (const_tree ARG_UNUSED (type), bool is_packed)\n   return !is_packed;\n }\n \n+/* Generate DPP pairwise swap instruction.\n+   This instruction swaps the values in each even lane with the value in the\n+   next one:\n+     a, b, c, d -> b, a, d, c.\n+   The opcode is given by INSN.  */\n+\n+char *\n+gcn_expand_dpp_swap_pairs_insn (machine_mode mode, const char *insn,\n+\t\t\t\tint ARG_UNUSED (unspec))\n+{\n+  static char buf[128];\n+  const char *dpp;\n+\n+  /* Add the DPP modifiers.  */\n+  dpp = \"quad_perm:[1,0,3,2]\";\n+\n+  if (vgpr_2reg_mode_p (mode))\n+    sprintf (buf, \"%s\\t%%L0, %%L1 %s\\n\\t%s\\t%%H0, %%H1 %s\",\n+\t     insn, dpp, insn, dpp);\n+  else\n+    sprintf (buf, \"%s\\t%%0, %%1 %s\", insn, dpp);\n+\n+  return buf;\n+}\n+\n+/* Generate DPP distribute even instruction.\n+   This instruction copies the value in each even lane to the next one:\n+     a, b, c, d -> a, a, c, c.\n+   The opcode is given by INSN.  */\n+\n+char *\n+gcn_expand_dpp_distribute_even_insn (machine_mode mode, const char *insn,\n+\t\t\t\t     int ARG_UNUSED (unspec))\n+{\n+  static char buf[128];\n+  const char *dpp;\n+\n+  /* Add the DPP modifiers.  */\n+  dpp = \"quad_perm:[0,0,2,2]\";\n+\n+  if (vgpr_2reg_mode_p (mode))\n+    sprintf (buf, \"%s\\t%%L0, %%L1 %s\\n\\t%s\\t%%H0, %%H1 %s\",\n+\t     insn, dpp, insn, dpp);\n+  else\n+    sprintf (buf, \"%s\\t%%0, %%1 %s\", insn, dpp);\n+\n+  return buf;\n+}\n+\n+/* Generate DPP distribute odd instruction.\n+   This isntruction copies the value in each odd lane to the previous one:\n+     a, b, c, d -> b, b, d, d.\n+   The opcode is given by INSN.  */\n+\n+char *\n+gcn_expand_dpp_distribute_odd_insn (machine_mode mode, const char *insn,\n+\t\t\t\t    int ARG_UNUSED (unspec))\n+{\n+  static char buf[128];\n+  const char *dpp;\n+\n+  /* Add the DPP modifiers.  */\n+  dpp = \"quad_perm:[1,1,3,3]\";\n+\n+  if (vgpr_2reg_mode_p (mode))\n+    sprintf (buf, \"%s\\t%%L0, %%L1 %s\\n\\t%s\\t%%H0, %%H1 %s\",\n+\t     insn, dpp, insn, dpp);\n+  else\n+    sprintf (buf, \"%s\\t%%0, %%1 %s\", insn, dpp);\n+\n+  return buf;\n+}\n+\n /* Generate DPP instructions used for vector reductions.\n \n    The opcode is given by INSN.\n@@ -5240,6 +5345,110 @@ gcn_simd_clone_usable (struct cgraph_node *ARG_UNUSED (node))\n   return 0;\n }\n \n+tree mathfn_built_in_explicit (tree, combined_fn);\n+\n+/* Implement TARGET_VECTORIZE_BUILTIN_VECTORIZED_FUNCTION.\n+   Return the function declaration of the vectorized version of the builtin\n+   in the math library if available.  */\n+\n+tree\n+gcn_vectorize_builtin_vectorized_function (unsigned int fn, tree type_out,\n+\t\t\t\t\t   tree type_in)\n+{\n+  if (TREE_CODE (type_out) != VECTOR_TYPE\n+      || TREE_CODE (type_in) != VECTOR_TYPE)\n+    return NULL_TREE;\n+\n+  machine_mode out_mode = TYPE_MODE (TREE_TYPE (type_out));\n+  int out_n = TYPE_VECTOR_SUBPARTS (type_out);\n+  machine_mode in_mode = TYPE_MODE (TREE_TYPE (type_in));\n+  int in_n = TYPE_VECTOR_SUBPARTS (type_in);\n+  combined_fn cfn = combined_fn (fn);\n+\n+  /* Keep this consistent with the list of vectorized math routines.  */\n+  int implicit_p;\n+  switch (fn)\n+    {\n+    CASE_CFN_ACOS:\n+    CASE_CFN_ACOSH:\n+    CASE_CFN_ASIN:\n+    CASE_CFN_ASINH:\n+    CASE_CFN_ATAN:\n+    CASE_CFN_ATAN2:\n+    CASE_CFN_ATANH:\n+    CASE_CFN_COPYSIGN:\n+    CASE_CFN_COS:\n+    CASE_CFN_COSH:\n+    CASE_CFN_ERF:\n+    CASE_CFN_EXP:\n+    CASE_CFN_EXP2:\n+    CASE_CFN_FINITE:\n+    CASE_CFN_FMOD:\n+    CASE_CFN_GAMMA:\n+    CASE_CFN_HYPOT:\n+    CASE_CFN_ISNAN:\n+    CASE_CFN_LGAMMA:\n+    CASE_CFN_LOG:\n+    CASE_CFN_LOG10:\n+    CASE_CFN_LOG2:\n+    CASE_CFN_POW:\n+    CASE_CFN_REMAINDER:\n+    CASE_CFN_RINT:\n+    CASE_CFN_SIN:\n+    CASE_CFN_SINH:\n+    CASE_CFN_SQRT:\n+    CASE_CFN_TAN:\n+    CASE_CFN_TANH:\n+    CASE_CFN_TGAMMA:\n+      implicit_p = 1;\n+      break;\n+\n+    CASE_CFN_SCALB:\n+    CASE_CFN_SIGNIFICAND:\n+      implicit_p = 0;\n+      break;\n+\n+    default:\n+      return NULL_TREE;\n+    }\n+\n+  tree out_t_node = (out_mode == DFmode) ? double_type_node : float_type_node;\n+  tree fndecl = implicit_p ? mathfn_built_in (out_t_node, cfn)\n+\t\t\t   : mathfn_built_in_explicit (out_t_node, cfn);\n+\n+  const char *bname = IDENTIFIER_POINTER (DECL_NAME (fndecl));\n+  char name[20];\n+  sprintf (name, out_mode == DFmode ? \"v%ddf_%s\" : \"v%dsf_%s\",\n+\t   out_n, bname + 10);\n+\n+  unsigned arity = 0;\n+  for (tree args = DECL_ARGUMENTS (fndecl); args; args = TREE_CHAIN (args))\n+    arity++;\n+\n+  tree fntype = (arity == 1)\n+\t\t? build_function_type_list (type_out, type_in, NULL)\n+\t\t: build_function_type_list (type_out, type_in, type_in, NULL);\n+\n+  /* Build a function declaration for the vectorized function.  */\n+  tree new_fndecl = build_decl (BUILTINS_LOCATION,\n+\t\t\t\tFUNCTION_DECL, get_identifier (name), fntype);\n+  TREE_PUBLIC (new_fndecl) = 1;\n+  DECL_EXTERNAL (new_fndecl) = 1;\n+  DECL_IS_NOVOPS (new_fndecl) = 1;\n+  TREE_READONLY (new_fndecl) = 1;\n+\n+  return new_fndecl;\n+}\n+\n+/* Implement TARGET_LIBC_HAS_FUNCTION.  */\n+\n+bool\n+gcn_libc_has_function (enum function_class fn_class,\n+\t\t       tree type)\n+{\n+  return bsd_libc_has_function (fn_class, type);\n+}\n+\n /* }}}  */\n /* {{{ md_reorg pass.  */\n \n@@ -7290,6 +7499,8 @@ gcn_dwarf_register_span (rtx rtl)\n   gcn_ira_change_pseudo_allocno_class\n #undef  TARGET_LEGITIMATE_CONSTANT_P\n #define TARGET_LEGITIMATE_CONSTANT_P gcn_legitimate_constant_p\n+#undef  TARGET_LIBC_HAS_FUNCTION\n+#define TARGET_LIBC_HAS_FUNCTION gcn_libc_has_function\n #undef  TARGET_LRA_P\n #define TARGET_LRA_P hook_bool_void_true\n #undef  TARGET_MACHINE_DEPENDENT_REORG\n@@ -7337,6 +7548,9 @@ gcn_dwarf_register_span (rtx rtl)\n #define TARGET_TRULY_NOOP_TRUNCATION gcn_truly_noop_truncation\n #undef  TARGET_VECTORIZE_BUILTIN_VECTORIZATION_COST\n #define TARGET_VECTORIZE_BUILTIN_VECTORIZATION_COST gcn_vectorization_cost\n+#undef  TARGET_VECTORIZE_BUILTIN_VECTORIZED_FUNCTION\n+#define TARGET_VECTORIZE_BUILTIN_VECTORIZED_FUNCTION \\\n+  gcn_vectorize_builtin_vectorized_function\n #undef  TARGET_VECTORIZE_GET_MASK_MODE\n #define TARGET_VECTORIZE_GET_MASK_MODE gcn_vectorize_get_mask_mode\n #undef  TARGET_VECTORIZE_PREFERRED_SIMD_MODE"}, {"sha": "c90303c54b5f6b6ec79837b18fa8f37ecd254a3c", "filename": "gcc/config/gcn/gcn.md", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fgcn%2Fgcn.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fgcn%2Fgcn.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn.md?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -78,6 +78,13 @@\n   UNSPEC_PLUS_CARRY_DPP_SHR UNSPEC_PLUS_CARRY_IN_DPP_SHR\n   UNSPEC_AND_DPP_SHR UNSPEC_IOR_DPP_SHR UNSPEC_XOR_DPP_SHR\n   UNSPEC_MOV_DPP_SHR\n+  UNSPEC_MOV_DPP_SWAP_PAIRS\n+  UNSPEC_MOV_DPP_DISTRIBUTE_EVEN\n+  UNSPEC_MOV_DPP_DISTRIBUTE_ODD\n+  UNSPEC_CMUL UNSPEC_CMUL_CONJ\n+  UNSPEC_CMUL_ADD UNSPEC_CMUL_SUB\n+  UNSPEC_CADD90\n+  UNSPEC_CADD270\n   UNSPEC_GATHER\n   UNSPEC_SCATTER\n   UNSPEC_RCP"}, {"sha": "61bc927307782647e911692f17a0b099f01167d9", "filename": "gcc/config/gcn/mkoffload.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fgcn%2Fmkoffload.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fgcn%2Fmkoffload.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fmkoffload.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -1082,6 +1082,9 @@ main (int argc, char **argv)\n       if (verbose)\n \tobstack_ptr_grow (&ld_argv_obstack, \"-v\");\n \n+      if (save_temps)\n+\tobstack_ptr_grow (&ld_argv_obstack, \"-save-temps\");\n+\n       for (int i = 1; i < argc; i++)\n \tif (startswith (argv[i], \"-l\")\n \t    || startswith (argv[i], \"-Wl\")"}, {"sha": "5554a06b63b5513791dee097a3c9d004d3c3d124", "filename": "gcc/config/gcn/predicates.md", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fgcn%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fgcn%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fpredicates.md?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -197,3 +197,10 @@\n        (ior (match_operand 0 \"gcn_ds_memory_operand\")\n \t    (and (match_code \"unspec\")\n               (match_test \"XINT (op, 1) == UNSPEC_VECTOR\")))))\n+\n+(define_predicate \"ascending_zero_int_parallel\"\n+  (match_code \"parallel\")\n+{\n+  return gcn_stepped_zero_int_parallel_p (op, 1);\n+})\n+"}, {"sha": "d1aa7ab28ca016b1b7df81d0ca8e84b6c4fc12c0", "filename": "gcc/config/host-linux.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fhost-linux.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fhost-linux.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fhost-linux.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -99,7 +99,7 @@\n #elif defined(__riscv) && defined (__LP64__)\n # define TRY_EMPTY_VM_SPACE\t0x1000000000\n #elif defined(__loongarch__) && defined(__LP64__)\n-# define TRY_EMPTY_VM_SPACE\t0x8000000000\n+# define TRY_EMPTY_VM_SPACE\t0x1000000000\n #else\n # define TRY_EMPTY_VM_SPACE\t0\n #endif"}, {"sha": "acff6138d636903ae80c9f560f3168e73ab19ea4", "filename": "gcc/config/i386/host-mingw32.cc", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fi386%2Fhost-mingw32.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fi386%2Fhost-mingw32.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fhost-mingw32.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -44,9 +44,6 @@ static size_t mingw32_gt_pch_alloc_granularity (void);\n \n static inline void w32_error(const char*, const char*, int, const char*);\n \n-/* FIXME: Is this big enough?  */\n-static const size_t pch_VA_max_size  = 128 * 1024 * 1024;\n-\n /* Granularity for reserving address space.  */\n static size_t va_granularity = 0x10000;\n \n@@ -88,9 +85,6 @@ static void *\n mingw32_gt_pch_get_address (size_t size, int)\n {\n   void* res;\n-  size = (size + va_granularity - 1) & ~(va_granularity - 1);\n-  if (size > pch_VA_max_size)\n-    return NULL;\n \n   /* FIXME: We let system determine base by setting first arg to NULL.\n      Allocating at top of available address space avoids unnecessary\n@@ -100,7 +94,7 @@ mingw32_gt_pch_get_address (size_t size, int)\n      If we allocate at bottom we need to reserve the address as early\n      as possible and at the same point in each invocation. */\n  \n-  res = VirtualAlloc (NULL, pch_VA_max_size,\n+  res = VirtualAlloc (NULL, size,\n \t\t      MEM_RESERVE | MEM_TOP_DOWN,\n \t\t      PAGE_NOACCESS);\n   if (!res)\n@@ -150,7 +144,7 @@ mingw32_gt_pch_use_address (void *&addr, size_t size, int fd,\n \n   /* Offset must be also be a multiple of allocation granularity for\n      this to work.  We can't change the offset. */ \n-  if ((offset & (va_granularity - 1)) != 0 || size > pch_VA_max_size)\n+  if ((offset & (va_granularity - 1)) != 0)\n     return -1;\n \n "}, {"sha": "6dae6972d81f292527529300da65a5f4291294f0", "filename": "gcc/config/i386/i386-builtin.def", "status": "modified", "additions": 42, "deletions": 42, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtin.def?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -23,9 +23,9 @@\n    <http://www.gnu.org/licenses/>.  */\n \n /* Before including this file, some macros must be defined:\n-   BDESC (mask, icode, name, code, comparison, flag)\n+   BDESC (mask, mask2, icode, name, code, comparison, flag)\n      -- definition of each builtin\n-   BDESC_FIRST (kind, KIND, mask, icode, name, code, comparison, flag)\n+   BDESC_FIRST (kind, KIND, mask, mask2, icode, name, code, comparison, flag)\n      -- like BDESC, but used for the first builtin in each category;\n \tbdesc_##kind will be used in the name of the array and\n \tIX86_BUILTIN__BDESC_##KIND##_FIRST will be the low boundary\n@@ -1384,7 +1384,7 @@ BDESC (OPTION_MASK_ISA_AVX512F, 0, CODE_FOR_avx512f_compressv8df_mask, \"__builti\n BDESC (OPTION_MASK_ISA_AVX512F, 0, CODE_FOR_avx512f_compressv16sf_mask, \"__builtin_ia32_compresssf512_mask\", IX86_BUILTIN_COMPRESSPS512, UNKNOWN, (int) V16SF_FTYPE_V16SF_V16SF_UHI)\n BDESC (OPTION_MASK_ISA_AVX512F, 0, CODE_FOR_floatv8siv8df2_mask, \"__builtin_ia32_cvtdq2pd512_mask\", IX86_BUILTIN_CVTDQ2PD512, UNKNOWN, (int) V8DF_FTYPE_V8SI_V8DF_UQI)\n BDESC (OPTION_MASK_ISA_AVX512F, 0, CODE_FOR_avx512f_vcvtps2ph512_mask_sae,  \"__builtin_ia32_vcvtps2ph512_mask\", IX86_BUILTIN_CVTPS2PH512, UNKNOWN, (int) V16HI_FTYPE_V16SF_INT_V16HI_UHI)\n-BDESC (OPTION_MASK_ISA_AVX512F, 0, CODE_FOR_ufloatv8siv8df2_mask, \"__builtin_ia32_cvtudq2pd512_mask\", IX86_BUILTIN_CVTUDQ2PD512, UNKNOWN, (int) V8DF_FTYPE_V8SI_V8DF_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512F, 0, CODE_FOR_floatunsv8siv8df2_mask, \"__builtin_ia32_cvtudq2pd512_mask\", IX86_BUILTIN_CVTUDQ2PD512, UNKNOWN, (int) V8DF_FTYPE_V8SI_V8DF_UQI)\n BDESC (OPTION_MASK_ISA_AVX512F, 0, CODE_FOR_cvtusi2sd32, \"__builtin_ia32_cvtusi2sd32\", IX86_BUILTIN_CVTUSI2SD32, UNKNOWN, (int) V2DF_FTYPE_V2DF_UINT)\n BDESC (OPTION_MASK_ISA_AVX512F, 0, CODE_FOR_expandv8df_mask, \"__builtin_ia32_expanddf512_mask\", IX86_BUILTIN_EXPANDPD512, UNKNOWN, (int) V8DF_FTYPE_V8DF_V8DF_UQI)\n BDESC (OPTION_MASK_ISA_AVX512F, 0, CODE_FOR_avx512f_expandv8df_maskz, \"__builtin_ia32_expanddf512_maskz\", IX86_BUILTIN_EXPANDPD512Z, UNKNOWN, (int) V8DF_FTYPE_V8DF_V8DF_UQI)\n@@ -1719,32 +1719,32 @@ BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_fixuns_t\n BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_fixuns_truncv2dfv2di2_mask, \"__builtin_ia32_cvttpd2uqq128_mask\", IX86_BUILTIN_CVTTPD2UQQ128, UNKNOWN, (int) V2DI_FTYPE_V2DF_V2DI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_fix_notruncv4dfv4di2_mask, \"__builtin_ia32_cvtpd2qq256_mask\", IX86_BUILTIN_CVTPD2QQ256, UNKNOWN, (int) V4DI_FTYPE_V4DF_V4DI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_fix_notruncv2dfv2di2_mask, \"__builtin_ia32_cvtpd2qq128_mask\", IX86_BUILTIN_CVTPD2QQ128, UNKNOWN, (int) V2DI_FTYPE_V2DF_V2DI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_ufix_notruncv4dfv4di2_mask, \"__builtin_ia32_cvtpd2uqq256_mask\", IX86_BUILTIN_CVTPD2UQQ256, UNKNOWN, (int) V4DI_FTYPE_V4DF_V4DI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_ufix_notruncv2dfv2di2_mask, \"__builtin_ia32_cvtpd2uqq128_mask\", IX86_BUILTIN_CVTPD2UQQ128, UNKNOWN, (int) V2DI_FTYPE_V2DF_V2DI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_ufix_notruncv4dfv4si2_mask, \"__builtin_ia32_cvtpd2udq256_mask\", IX86_BUILTIN_CVTPD2UDQ256_MASK, UNKNOWN, (int) V4SI_FTYPE_V4DF_V4SI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_ufix_notruncv2dfv2si2_mask, \"__builtin_ia32_cvtpd2udq128_mask\", IX86_BUILTIN_CVTPD2UDQ128_MASK, UNKNOWN, (int) V4SI_FTYPE_V2DF_V4SI_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_fixuns_notruncv4dfv4di2_mask, \"__builtin_ia32_cvtpd2uqq256_mask\", IX86_BUILTIN_CVTPD2UQQ256, UNKNOWN, (int) V4DI_FTYPE_V4DF_V4DI_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_fixuns_notruncv2dfv2di2_mask, \"__builtin_ia32_cvtpd2uqq128_mask\", IX86_BUILTIN_CVTPD2UQQ128, UNKNOWN, (int) V2DI_FTYPE_V2DF_V2DI_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_fixuns_notruncv4dfv4si2_mask, \"__builtin_ia32_cvtpd2udq256_mask\", IX86_BUILTIN_CVTPD2UDQ256_MASK, UNKNOWN, (int) V4SI_FTYPE_V4DF_V4SI_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_fixuns_notruncv2dfv2si2_mask, \"__builtin_ia32_cvtpd2udq128_mask\", IX86_BUILTIN_CVTPD2UDQ128_MASK, UNKNOWN, (int) V4SI_FTYPE_V2DF_V4SI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_fix_truncv4sfv4di2_mask, \"__builtin_ia32_cvttps2qq256_mask\", IX86_BUILTIN_CVTTPS2QQ256, UNKNOWN, (int) V4DI_FTYPE_V4SF_V4DI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_avx512dq_fix_truncv2sfv2di2_mask, \"__builtin_ia32_cvttps2qq128_mask\", IX86_BUILTIN_CVTTPS2QQ128, UNKNOWN, (int) V2DI_FTYPE_V4SF_V2DI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_fixuns_truncv4sfv4di2_mask, \"__builtin_ia32_cvttps2uqq256_mask\", IX86_BUILTIN_CVTTPS2UQQ256, UNKNOWN, (int) V4DI_FTYPE_V4SF_V4DI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_avx512dq_fixuns_truncv2sfv2di2_mask, \"__builtin_ia32_cvttps2uqq128_mask\", IX86_BUILTIN_CVTTPS2UQQ128, UNKNOWN, (int) V2DI_FTYPE_V4SF_V2DI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_fix_truncv8sfv8si2_mask, \"__builtin_ia32_cvttps2dq256_mask\", IX86_BUILTIN_CVTTPS2DQ256_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SF_V8SI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_fix_truncv4sfv4si2_mask, \"__builtin_ia32_cvttps2dq128_mask\", IX86_BUILTIN_CVTTPS2DQ128_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SF_V4SI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_ufix_truncv8sfv8si2_mask, \"__builtin_ia32_cvttps2udq256_mask\", IX86_BUILTIN_CVTTPS2UDQ256, UNKNOWN, (int) V8SI_FTYPE_V8SF_V8SI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_ufix_truncv4sfv4si2_mask, \"__builtin_ia32_cvttps2udq128_mask\", IX86_BUILTIN_CVTTPS2UDQ128, UNKNOWN, (int) V4SI_FTYPE_V4SF_V4SI_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_fixuns_truncv8sfv8si2_mask, \"__builtin_ia32_cvttps2udq256_mask\", IX86_BUILTIN_CVTTPS2UDQ256, UNKNOWN, (int) V8SI_FTYPE_V8SF_V8SI_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_fixuns_truncv4sfv4si2_mask, \"__builtin_ia32_cvttps2udq128_mask\", IX86_BUILTIN_CVTTPS2UDQ128, UNKNOWN, (int) V4SI_FTYPE_V4SF_V4SI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_fix_truncv4dfv4si2_mask, \"__builtin_ia32_cvttpd2dq256_mask\", IX86_BUILTIN_CVTTPD2DQ256_MASK, UNKNOWN, (int) V4SI_FTYPE_V4DF_V4SI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_sse2_cvttpd2dq_mask, \"__builtin_ia32_cvttpd2dq128_mask\", IX86_BUILTIN_CVTTPD2DQ128_MASK, UNKNOWN, (int) V4SI_FTYPE_V2DF_V4SI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_ufix_truncv4dfv4si2_mask, \"__builtin_ia32_cvttpd2udq256_mask\", IX86_BUILTIN_CVTTPD2UDQ256_MASK, UNKNOWN, (int) V4SI_FTYPE_V4DF_V4SI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_ufix_truncv2dfv2si2_mask, \"__builtin_ia32_cvttpd2udq128_mask\", IX86_BUILTIN_CVTTPD2UDQ128_MASK, UNKNOWN, (int) V4SI_FTYPE_V2DF_V4SI_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_fixuns_truncv4dfv4si2_mask, \"__builtin_ia32_cvttpd2udq256_mask\", IX86_BUILTIN_CVTTPD2UDQ256_MASK, UNKNOWN, (int) V4SI_FTYPE_V4DF_V4SI_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_fixuns_truncv2dfv2si2_mask, \"__builtin_ia32_cvttpd2udq128_mask\", IX86_BUILTIN_CVTTPD2UDQ128_MASK, UNKNOWN, (int) V4SI_FTYPE_V2DF_V4SI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_avx_cvtpd2dq256_mask, \"__builtin_ia32_cvtpd2dq256_mask\", IX86_BUILTIN_CVTPD2DQ256_MASK, UNKNOWN, (int) V4SI_FTYPE_V4DF_V4SI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_sse2_cvtpd2dq_mask, \"__builtin_ia32_cvtpd2dq128_mask\", IX86_BUILTIN_CVTPD2DQ128_MASK, UNKNOWN, (int) V4SI_FTYPE_V2DF_V4SI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_floatv4siv4df2_mask, \"__builtin_ia32_cvtdq2pd256_mask\", IX86_BUILTIN_CVTDQ2PD256_MASK, UNKNOWN, (int) V4DF_FTYPE_V4SI_V4DF_UQI)\n BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_sse2_cvtdq2pd_mask, \"__builtin_ia32_cvtdq2pd128_mask\", IX86_BUILTIN_CVTDQ2PD128_MASK, UNKNOWN, (int) V2DF_FTYPE_V4SI_V2DF_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_ufloatv4siv4df2_mask, \"__builtin_ia32_cvtudq2pd256_mask\", IX86_BUILTIN_CVTUDQ2PD256_MASK, UNKNOWN, (int) V4DF_FTYPE_V4SI_V4DF_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_ufloatv2siv2df2_mask, \"__builtin_ia32_cvtudq2pd128_mask\", IX86_BUILTIN_CVTUDQ2PD128_MASK, UNKNOWN, (int) V2DF_FTYPE_V4SI_V2DF_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_floatunsv4siv4df2_mask, \"__builtin_ia32_cvtudq2pd256_mask\", IX86_BUILTIN_CVTUDQ2PD256_MASK, UNKNOWN, (int) V4DF_FTYPE_V4SI_V4DF_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_floatunsv2siv2df2_mask, \"__builtin_ia32_cvtudq2pd128_mask\", IX86_BUILTIN_CVTUDQ2PD128_MASK, UNKNOWN, (int) V2DF_FTYPE_V4SI_V2DF_UQI)\n BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_floatv8siv8sf2_mask, \"__builtin_ia32_cvtdq2ps256_mask\", IX86_BUILTIN_CVTDQ2PS256_MASK, UNKNOWN, (int) V8SF_FTYPE_V8SI_V8SF_UQI)\n BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_floatv4siv4sf2_mask, \"__builtin_ia32_cvtdq2ps128_mask\", IX86_BUILTIN_CVTDQ2PS128_MASK, UNKNOWN, (int) V4SF_FTYPE_V4SI_V4SF_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_ufloatv8siv8sf2_mask, \"__builtin_ia32_cvtudq2ps256_mask\", IX86_BUILTIN_CVTUDQ2PS256_MASK, UNKNOWN, (int) V8SF_FTYPE_V8SI_V8SF_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_ufloatv4siv4sf2_mask, \"__builtin_ia32_cvtudq2ps128_mask\", IX86_BUILTIN_CVTUDQ2PS128_MASK, UNKNOWN, (int) V4SF_FTYPE_V4SI_V4SF_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_floatunsv8siv8sf2_mask, \"__builtin_ia32_cvtudq2ps256_mask\", IX86_BUILTIN_CVTUDQ2PS256_MASK, UNKNOWN, (int) V8SF_FTYPE_V8SI_V8SF_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_floatunsv4siv4sf2_mask, \"__builtin_ia32_cvtudq2ps128_mask\", IX86_BUILTIN_CVTUDQ2PS128_MASK, UNKNOWN, (int) V4SF_FTYPE_V4SI_V4SF_UQI)\n BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_avx_cvtps2pd256_mask, \"__builtin_ia32_cvtps2pd256_mask\", IX86_BUILTIN_CVTPS2PD256_MASK, UNKNOWN, (int) V4DF_FTYPE_V4SF_V4DF_UQI)\n BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_sse2_cvtps2pd_mask, \"__builtin_ia32_cvtps2pd128_mask\", IX86_BUILTIN_CVTPS2PD128_MASK, UNKNOWN, (int) V2DF_FTYPE_V4SF_V2DF_UQI)\n BDESC (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_avx512vl_vec_dupv32qi_mask, \"__builtin_ia32_pbroadcastb256_mask\", IX86_BUILTIN_PBROADCASTB256_MASK, UNKNOWN, (int) V32QI_FTYPE_V16QI_V32QI_USI)\n@@ -2072,8 +2072,8 @@ BDESC (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_avx512vl\n BDESC (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_avx512vl_lshrvv8hi_mask, \"__builtin_ia32_psrlv8hi_mask\", IX86_BUILTIN_PSRLVV8HI, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_V8HI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_avx_fix_notruncv8sfv8si_mask, \"__builtin_ia32_cvtps2dq256_mask\", IX86_BUILTIN_CVTPS2DQ256_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SF_V8SI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_sse2_fix_notruncv4sfv4si_mask, \"__builtin_ia32_cvtps2dq128_mask\", IX86_BUILTIN_CVTPS2DQ128_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SF_V4SI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_avx512vl_ufix_notruncv8sfv8si_mask, \"__builtin_ia32_cvtps2udq256_mask\", IX86_BUILTIN_CVTPS2UDQ256, UNKNOWN, (int) V8SI_FTYPE_V8SF_V8SI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_avx512vl_ufix_notruncv4sfv4si_mask, \"__builtin_ia32_cvtps2udq128_mask\", IX86_BUILTIN_CVTPS2UDQ128, UNKNOWN, (int) V4SI_FTYPE_V4SF_V4SI_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_avx512vl_fixuns_notruncv8sfv8si_mask, \"__builtin_ia32_cvtps2udq256_mask\", IX86_BUILTIN_CVTPS2UDQ256, UNKNOWN, (int) V8SI_FTYPE_V8SF_V8SI_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_avx512vl_fixuns_notruncv4sfv4si_mask, \"__builtin_ia32_cvtps2udq128_mask\", IX86_BUILTIN_CVTPS2UDQ128, UNKNOWN, (int) V4SI_FTYPE_V4SF_V4SI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_avx512dq_cvtps2qqv4di_mask, \"__builtin_ia32_cvtps2qq256_mask\", IX86_BUILTIN_CVTPS2QQ256, UNKNOWN, (int) V4DI_FTYPE_V4SF_V4DI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_avx512dq_cvtps2qqv2di_mask, \"__builtin_ia32_cvtps2qq128_mask\", IX86_BUILTIN_CVTPS2QQ128, UNKNOWN, (int) V2DI_FTYPE_V4SF_V2DI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_avx512dq_cvtps2uqqv4di_mask, \"__builtin_ia32_cvtps2uqq256_mask\", IX86_BUILTIN_CVTPS2UQQ256, UNKNOWN, (int) V4DI_FTYPE_V4SF_V4DI_UQI)\n@@ -2797,47 +2797,47 @@ BDESC (0, OPTION_MASK_ISA2_AVX5124VNNIW, CODE_FOR_avx5124vnniw_vp4dpwssds_mask,\n BDESC (0, OPTION_MASK_ISA2_RDPID, CODE_FOR_rdpid, \"__builtin_ia32_rdpid\", IX86_BUILTIN_RDPID, UNKNOWN, (int) UNSIGNED_FTYPE_VOID)\n \n /* VAES.  */\n-BDESC (0, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesdec_v16qi, \"__builtin_ia32_vaesdec_v16qi\", IX86_BUILTIN_VAESDEC16, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI)\n+BDESC (OPTION_MASK_ISA_AVX512VL, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesdec_v16qi, \"__builtin_ia32_vaesdec_v16qi\", IX86_BUILTIN_VAESDEC16, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI)\n BDESC (0, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesdec_v32qi, \"__builtin_ia32_vaesdec_v32qi\", IX86_BUILTIN_VAESDEC32, UNKNOWN, (int) V32QI_FTYPE_V32QI_V32QI)\n BDESC (0, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesdec_v64qi, \"__builtin_ia32_vaesdec_v64qi\", IX86_BUILTIN_VAESDEC64, UNKNOWN, (int) V64QI_FTYPE_V64QI_V64QI)\n-BDESC (0, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesdeclast_v16qi, \"__builtin_ia32_vaesdeclast_v16qi\", IX86_BUILTIN_VAESDECLAST16, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI)\n+BDESC (OPTION_MASK_ISA_AVX512VL, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesdeclast_v16qi, \"__builtin_ia32_vaesdeclast_v16qi\", IX86_BUILTIN_VAESDECLAST16, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI)\n BDESC (0, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesdeclast_v32qi, \"__builtin_ia32_vaesdeclast_v32qi\", IX86_BUILTIN_VAESDECLAST32, UNKNOWN, (int) V32QI_FTYPE_V32QI_V32QI)\n BDESC (0, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesdeclast_v64qi, \"__builtin_ia32_vaesdeclast_v64qi\", IX86_BUILTIN_VAESDECLAST64, UNKNOWN, (int) V64QI_FTYPE_V64QI_V64QI)\n-BDESC (0, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesenc_v16qi, \"__builtin_ia32_vaesenc_v16qi\", IX86_BUILTIN_VAESENC16, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI)\n+BDESC (OPTION_MASK_ISA_AVX512VL, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesenc_v16qi, \"__builtin_ia32_vaesenc_v16qi\", IX86_BUILTIN_VAESENC16, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI)\n BDESC (0, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesenc_v32qi, \"__builtin_ia32_vaesenc_v32qi\", IX86_BUILTIN_VAESENC32, UNKNOWN, (int) V32QI_FTYPE_V32QI_V32QI)\n BDESC (0, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesenc_v64qi, \"__builtin_ia32_vaesenc_v64qi\", IX86_BUILTIN_VAESENC64, UNKNOWN, (int) V64QI_FTYPE_V64QI_V64QI)\n-BDESC (0, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesenclast_v16qi, \"__builtin_ia32_vaesenclast_v16qi\", IX86_BUILTIN_VAESENCLAST16, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI)\n+BDESC (OPTION_MASK_ISA_AVX512VL, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesenclast_v16qi, \"__builtin_ia32_vaesenclast_v16qi\", IX86_BUILTIN_VAESENCLAST16, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI)\n BDESC (0, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesenclast_v32qi, \"__builtin_ia32_vaesenclast_v32qi\", IX86_BUILTIN_VAESENCLAST32, UNKNOWN, (int) V32QI_FTYPE_V32QI_V32QI)\n BDESC (0, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesenclast_v64qi, \"__builtin_ia32_vaesenclast_v64qi\", IX86_BUILTIN_VAESENCLAST64, UNKNOWN, (int) V64QI_FTYPE_V64QI_V64QI)\n \n /* BF16 */\n BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtne2ps2bf16_v32bf, \"__builtin_ia32_cvtne2ps2bf16_v32bf\", IX86_BUILTIN_CVTNE2PS2BF16_V32BF, UNKNOWN, (int) V32BF_FTYPE_V16SF_V16SF)\n BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtne2ps2bf16_v32bf_mask, \"__builtin_ia32_cvtne2ps2bf16_v32bf_mask\", IX86_BUILTIN_CVTNE2PS2BF16_V32BF_MASK, UNKNOWN, (int) V32BF_FTYPE_V16SF_V16SF_V32BF_USI)\n BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtne2ps2bf16_v32bf_maskz, \"__builtin_ia32_cvtne2ps2bf16_v32bf_maskz\", IX86_BUILTIN_CVTNE2PS2BF16_V32BF_MASKZ, UNKNOWN, (int) V32BF_FTYPE_V16SF_V16SF_USI)\n-BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtne2ps2bf16_v16bf, \"__builtin_ia32_cvtne2ps2bf16_v16bf\", IX86_BUILTIN_CVTNE2PS2BF16_V16BF, UNKNOWN, (int) V16BF_FTYPE_V8SF_V8SF)\n-BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtne2ps2bf16_v16bf_mask, \"__builtin_ia32_cvtne2ps2bf16_v16bf_mask\", IX86_BUILTIN_CVTNE2PS2BF16_V16BF_MASK, UNKNOWN, (int) V16BF_FTYPE_V8SF_V8SF_V16BF_UHI)\n-BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtne2ps2bf16_v16bf_maskz, \"__builtin_ia32_cvtne2ps2bf16_v16bf_maskz\", IX86_BUILTIN_CVTNE2PS2BF16_V16BF_MASKZ, UNKNOWN, (int) V16BF_FTYPE_V8SF_V8SF_UHI)\n-BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtne2ps2bf16_v8bf, \"__builtin_ia32_cvtne2ps2bf16_v8bf\", IX86_BUILTIN_CVTNE2PS2BF16_V8BF, UNKNOWN, (int) V8BF_FTYPE_V4SF_V4SF)\n-BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtne2ps2bf16_v8bf_mask, \"__builtin_ia32_cvtne2ps2bf16_v8bf_mask\", IX86_BUILTIN_CVTNE2PS2BF16_V8BF_MASK, UNKNOWN, (int) V8BF_FTYPE_V4SF_V4SF_V8BF_UQI)\n-BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtne2ps2bf16_v8bf_maskz, \"__builtin_ia32_cvtne2ps2bf16_v8bf_maskz\", IX86_BUILTIN_CVTNE2PS2BF16_V8BF_MASKZ, UNKNOWN, (int) V8BF_FTYPE_V4SF_V4SF_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512VL, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtne2ps2bf16_v16bf, \"__builtin_ia32_cvtne2ps2bf16_v16bf\", IX86_BUILTIN_CVTNE2PS2BF16_V16BF, UNKNOWN, (int) V16BF_FTYPE_V8SF_V8SF)\n+BDESC (OPTION_MASK_ISA_AVX512VL, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtne2ps2bf16_v16bf_mask, \"__builtin_ia32_cvtne2ps2bf16_v16bf_mask\", IX86_BUILTIN_CVTNE2PS2BF16_V16BF_MASK, UNKNOWN, (int) V16BF_FTYPE_V8SF_V8SF_V16BF_UHI)\n+BDESC (OPTION_MASK_ISA_AVX512VL, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtne2ps2bf16_v16bf_maskz, \"__builtin_ia32_cvtne2ps2bf16_v16bf_maskz\", IX86_BUILTIN_CVTNE2PS2BF16_V16BF_MASKZ, UNKNOWN, (int) V16BF_FTYPE_V8SF_V8SF_UHI)\n+BDESC (OPTION_MASK_ISA_AVX512VL, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtne2ps2bf16_v8bf, \"__builtin_ia32_cvtne2ps2bf16_v8bf\", IX86_BUILTIN_CVTNE2PS2BF16_V8BF, UNKNOWN, (int) V8BF_FTYPE_V4SF_V4SF)\n+BDESC (OPTION_MASK_ISA_AVX512VL, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtne2ps2bf16_v8bf_mask, \"__builtin_ia32_cvtne2ps2bf16_v8bf_mask\", IX86_BUILTIN_CVTNE2PS2BF16_V8BF_MASK, UNKNOWN, (int) V8BF_FTYPE_V4SF_V4SF_V8BF_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512VL, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtne2ps2bf16_v8bf_maskz, \"__builtin_ia32_cvtne2ps2bf16_v8bf_maskz\", IX86_BUILTIN_CVTNE2PS2BF16_V8BF_MASKZ, UNKNOWN, (int) V8BF_FTYPE_V4SF_V4SF_UQI)\n BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtneps2bf16_v16sf, \"__builtin_ia32_cvtneps2bf16_v16sf\", IX86_BUILTIN_CVTNEPS2BF16_V16SF, UNKNOWN, (int) V16BF_FTYPE_V16SF)\n BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtneps2bf16_v16sf_mask, \"__builtin_ia32_cvtneps2bf16_v16sf_mask\", IX86_BUILTIN_CVTNEPS2BF16_V16SF_MASK, UNKNOWN, (int) V16BF_FTYPE_V16SF_V16BF_UHI)\n BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtneps2bf16_v16sf_maskz, \"__builtin_ia32_cvtneps2bf16_v16sf_maskz\", IX86_BUILTIN_CVTNE2PS2BF16_V16SF_MASKZ, UNKNOWN, (int) V16BF_FTYPE_V16SF_UHI)\n BDESC (OPTION_MASK_ISA_AVX512VL, OPTION_MASK_ISA2_AVXNECONVERT | OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_vcvtneps2bf16_v8sf, \"__builtin_ia32_cvtneps2bf16_v8sf\", IX86_BUILTIN_CVTNEPS2BF16_V8SF, UNKNOWN, (int) V8BF_FTYPE_V8SF)\n-BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtneps2bf16_v8sf_mask, \"__builtin_ia32_cvtneps2bf16_v8sf_mask\", IX86_BUILTIN_CVTNEPS2BF16_V8SF_MASK, UNKNOWN, (int) V8BF_FTYPE_V8SF_V8BF_UQI)\n-BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtneps2bf16_v8sf_maskz, \"__builtin_ia32_cvtneps2bf16_v8sf_maskz\", IX86_BUILTIN_CVTNE2PS2BF16_V8SF_MASKZ, UNKNOWN, (int) V8BF_FTYPE_V8SF_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512VL, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtneps2bf16_v8sf_mask, \"__builtin_ia32_cvtneps2bf16_v8sf_mask\", IX86_BUILTIN_CVTNEPS2BF16_V8SF_MASK, UNKNOWN, (int) V8BF_FTYPE_V8SF_V8BF_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512VL, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtneps2bf16_v8sf_maskz, \"__builtin_ia32_cvtneps2bf16_v8sf_maskz\", IX86_BUILTIN_CVTNE2PS2BF16_V8SF_MASKZ, UNKNOWN, (int) V8BF_FTYPE_V8SF_UQI)\n BDESC (OPTION_MASK_ISA_AVX512VL, OPTION_MASK_ISA2_AVXNECONVERT | OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_vcvtneps2bf16_v4sf, \"__builtin_ia32_cvtneps2bf16_v4sf\", IX86_BUILTIN_CVTNEPS2BF16_V4SF, UNKNOWN, (int) V8BF_FTYPE_V4SF)\n-BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtneps2bf16_v4sf_mask, \"__builtin_ia32_cvtneps2bf16_v4sf_mask\", IX86_BUILTIN_CVTNEPS2BF16_V4SF_MASK, UNKNOWN, (int) V8BF_FTYPE_V4SF_V8BF_UQI)\n-BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtneps2bf16_v4sf_maskz, \"__builtin_ia32_cvtneps2bf16_v4sf_maskz\", IX86_BUILTIN_CVTNE2PS2BF16_V4SF_MASKZ, UNKNOWN, (int) V8BF_FTYPE_V4SF_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512VL, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtneps2bf16_v4sf_mask, \"__builtin_ia32_cvtneps2bf16_v4sf_mask\", IX86_BUILTIN_CVTNEPS2BF16_V4SF_MASK, UNKNOWN, (int) V8BF_FTYPE_V4SF_V8BF_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512VL, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtneps2bf16_v4sf_maskz, \"__builtin_ia32_cvtneps2bf16_v4sf_maskz\", IX86_BUILTIN_CVTNE2PS2BF16_V4SF_MASKZ, UNKNOWN, (int) V8BF_FTYPE_V4SF_UQI)\n BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_dpbf16ps_v16sf, \"__builtin_ia32_dpbf16ps_v16sf\", IX86_BUILTIN_DPBF16PS_V16SF, UNKNOWN, (int) V16SF_FTYPE_V16SF_V32BF_V32BF)\n BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_dpbf16ps_v16sf_mask, \"__builtin_ia32_dpbf16ps_v16sf_mask\", IX86_BUILTIN_DPBF16PS_V16SF_MASK, UNKNOWN, (int) V16SF_FTYPE_V16SF_V32BF_V32BF_UHI)\n BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_dpbf16ps_v16sf_maskz, \"__builtin_ia32_dpbf16ps_v16sf_maskz\", IX86_BUILTIN_DPBF16PS_V16SF_MASKZ, UNKNOWN, (int) V16SF_FTYPE_V16SF_V32BF_V32BF_UHI)\n-BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_dpbf16ps_v8sf, \"__builtin_ia32_dpbf16ps_v8sf\", IX86_BUILTIN_DPBF16PS_V8SF, UNKNOWN, (int) V8SF_FTYPE_V8SF_V16BF_V16BF)\n-BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_dpbf16ps_v8sf_mask, \"__builtin_ia32_dpbf16ps_v8sf_mask\", IX86_BUILTIN_DPBF16PS_V8SF_MASK, UNKNOWN, (int) V8SF_FTYPE_V8SF_V16BF_V16BF_UQI)\n-BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_dpbf16ps_v8sf_maskz, \"__builtin_ia32_dpbf16ps_v8sf_maskz\", IX86_BUILTIN_DPBF16PS_V8SF_MASKZ, UNKNOWN, (int) V8SF_FTYPE_V8SF_V16BF_V16BF_UQI)\n-BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_dpbf16ps_v4sf, \"__builtin_ia32_dpbf16ps_v4sf\", IX86_BUILTIN_DPBF16PS_V4SF, UNKNOWN, (int) V4SF_FTYPE_V4SF_V8BF_V8BF)\n-BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_dpbf16ps_v4sf_mask, \"__builtin_ia32_dpbf16ps_v4sf_mask\", IX86_BUILTIN_DPBF16PS_V4SF_MASK, UNKNOWN, (int) V4SF_FTYPE_V4SF_V8BF_V8BF_UQI)\n-BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_dpbf16ps_v4sf_maskz, \"__builtin_ia32_dpbf16ps_v4sf_maskz\", IX86_BUILTIN_DPBF16PS_V4SF_MASKZ, UNKNOWN, (int) V4SF_FTYPE_V4SF_V8BF_V8BF_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512VL, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_dpbf16ps_v8sf, \"__builtin_ia32_dpbf16ps_v8sf\", IX86_BUILTIN_DPBF16PS_V8SF, UNKNOWN, (int) V8SF_FTYPE_V8SF_V16BF_V16BF)\n+BDESC (OPTION_MASK_ISA_AVX512VL, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_dpbf16ps_v8sf_mask, \"__builtin_ia32_dpbf16ps_v8sf_mask\", IX86_BUILTIN_DPBF16PS_V8SF_MASK, UNKNOWN, (int) V8SF_FTYPE_V8SF_V16BF_V16BF_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512VL, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_dpbf16ps_v8sf_maskz, \"__builtin_ia32_dpbf16ps_v8sf_maskz\", IX86_BUILTIN_DPBF16PS_V8SF_MASKZ, UNKNOWN, (int) V8SF_FTYPE_V8SF_V16BF_V16BF_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512VL, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_dpbf16ps_v4sf, \"__builtin_ia32_dpbf16ps_v4sf\", IX86_BUILTIN_DPBF16PS_V4SF, UNKNOWN, (int) V4SF_FTYPE_V4SF_V8BF_V8BF)\n+BDESC (OPTION_MASK_ISA_AVX512VL, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_dpbf16ps_v4sf_mask, \"__builtin_ia32_dpbf16ps_v4sf_mask\", IX86_BUILTIN_DPBF16PS_V4SF_MASK, UNKNOWN, (int) V4SF_FTYPE_V4SF_V8BF_V8BF_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512VL, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_dpbf16ps_v4sf_maskz, \"__builtin_ia32_dpbf16ps_v4sf_maskz\", IX86_BUILTIN_DPBF16PS_V4SF_MASKZ, UNKNOWN, (int) V4SF_FTYPE_V4SF_V8BF_V8BF_UQI)\n BDESC (OPTION_MASK_ISA_SSE2, 0, CODE_FOR_extendbfsf2_1, \"__builtin_ia32_cvtbf2sf\", IX86_BUILTIN_CVTBF2SF, UNKNOWN, (int) FLOAT_FTYPE_BFLOAT16)\n \n \n@@ -3019,11 +3019,11 @@ BDESC (OPTION_MASK_ISA_AVX512F, 0, CODE_FOR_sse_comi_round, \"__builtin_ia32_vcom\n BDESC (OPTION_MASK_ISA_AVX512F, 0, CODE_FOR_floatv16siv16sf2_mask_round, \"__builtin_ia32_cvtdq2ps512_mask\", IX86_BUILTIN_CVTDQ2PS512, UNKNOWN, (int) V16SF_FTYPE_V16SI_V16SF_HI_INT)\n BDESC (OPTION_MASK_ISA_AVX512F, 0, CODE_FOR_avx512f_cvtpd2dq512_mask_round, \"__builtin_ia32_cvtpd2dq512_mask\", IX86_BUILTIN_CVTPD2DQ512, UNKNOWN, (int) V8SI_FTYPE_V8DF_V8SI_QI_INT)\n BDESC (OPTION_MASK_ISA_AVX512F, 0, CODE_FOR_avx512f_cvtpd2ps512_mask_round,  \"__builtin_ia32_cvtpd2ps512_mask\", IX86_BUILTIN_CVTPD2PS512, UNKNOWN, (int) V8SF_FTYPE_V8DF_V8SF_QI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512F, 0, CODE_FOR_ufix_notruncv8dfv8si2_mask_round, \"__builtin_ia32_cvtpd2udq512_mask\", IX86_BUILTIN_CVTPD2UDQ512, UNKNOWN, (int) V8SI_FTYPE_V8DF_V8SI_QI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512F, 0, CODE_FOR_fixuns_notruncv8dfv8si2_mask_round, \"__builtin_ia32_cvtpd2udq512_mask\", IX86_BUILTIN_CVTPD2UDQ512, UNKNOWN, (int) V8SI_FTYPE_V8DF_V8SI_QI_INT)\n BDESC (OPTION_MASK_ISA_AVX512F, 0, CODE_FOR_avx512f_vcvtph2ps512_mask_round,  \"__builtin_ia32_vcvtph2ps512_mask\", IX86_BUILTIN_CVTPH2PS512, UNKNOWN, (int) V16SF_FTYPE_V16HI_V16SF_HI_INT)\n BDESC (OPTION_MASK_ISA_AVX512F, 0, CODE_FOR_avx512f_fix_notruncv16sfv16si_mask_round, \"__builtin_ia32_cvtps2dq512_mask\", IX86_BUILTIN_CVTPS2DQ512_MASK, UNKNOWN, (int) V16SI_FTYPE_V16SF_V16SI_HI_INT)\n BDESC (OPTION_MASK_ISA_AVX512F, 0, CODE_FOR_avx512f_cvtps2pd512_mask_round, \"__builtin_ia32_cvtps2pd512_mask\", IX86_BUILTIN_CVTPS2PD512, UNKNOWN, (int) V8DF_FTYPE_V8SF_V8DF_QI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512F, 0, CODE_FOR_avx512f_ufix_notruncv16sfv16si_mask_round, \"__builtin_ia32_cvtps2udq512_mask\", IX86_BUILTIN_CVTPS2UDQ512, UNKNOWN, (int) V16SI_FTYPE_V16SF_V16SI_HI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512F, 0, CODE_FOR_avx512f_fixuns_notruncv16sfv16si_mask_round, \"__builtin_ia32_cvtps2udq512_mask\", IX86_BUILTIN_CVTPS2UDQ512, UNKNOWN, (int) V16SI_FTYPE_V16SF_V16SI_HI_INT)\n BDESC (OPTION_MASK_ISA_AVX512F, 0, CODE_FOR_sse2_cvtsd2ss_round, \"__builtin_ia32_cvtsd2ss_round\", IX86_BUILTIN_CVTSD2SS_ROUND, UNKNOWN, (int) V4SF_FTYPE_V4SF_V2DF_INT)\n BDESC (OPTION_MASK_ISA_AVX512F, 0, CODE_FOR_sse2_cvtsd2ss_mask_round, \"__builtin_ia32_cvtsd2ss_mask_round\", IX86_BUILTIN_CVTSD2SS_MASK_ROUND, UNKNOWN, (int) V4SF_FTYPE_V4SF_V2DF_V4SF_UQI_INT)\n BDESC (OPTION_MASK_ISA_AVX512F | OPTION_MASK_ISA_64BIT, 0, CODE_FOR_sse2_cvtsi2sdq_round, \"__builtin_ia32_cvtsi2sd64\", IX86_BUILTIN_CVTSI2SD64, UNKNOWN, (int) V2DF_FTYPE_V2DF_INT64_INT)\n@@ -3034,8 +3034,8 @@ BDESC (OPTION_MASK_ISA_AVX512F, 0, CODE_FOR_sse2_cvtss2sd_mask_round, \"__builtin\n BDESC (OPTION_MASK_ISA_AVX512F, 0, CODE_FOR_fix_truncv8dfv8si2_mask_round, \"__builtin_ia32_cvttpd2dq512_mask\", IX86_BUILTIN_CVTTPD2DQ512, UNKNOWN, (int) V8SI_FTYPE_V8DF_V8SI_QI_INT)\n BDESC (OPTION_MASK_ISA_AVX512F, 0, CODE_FOR_fixuns_truncv8dfv8si2_mask_round, \"__builtin_ia32_cvttpd2udq512_mask\", IX86_BUILTIN_CVTTPD2UDQ512, UNKNOWN, (int) V8SI_FTYPE_V8DF_V8SI_QI_INT)\n BDESC (OPTION_MASK_ISA_AVX512F, 0, CODE_FOR_fix_truncv16sfv16si2_mask_round, \"__builtin_ia32_cvttps2dq512_mask\", IX86_BUILTIN_CVTTPS2DQ512, UNKNOWN, (int) V16SI_FTYPE_V16SF_V16SI_HI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512F, 0, CODE_FOR_ufix_truncv16sfv16si2_mask_round, \"__builtin_ia32_cvttps2udq512_mask\", IX86_BUILTIN_CVTTPS2UDQ512, UNKNOWN, (int) V16SI_FTYPE_V16SF_V16SI_HI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512F, 0, CODE_FOR_ufloatv16siv16sf2_mask_round, \"__builtin_ia32_cvtudq2ps512_mask\", IX86_BUILTIN_CVTUDQ2PS512, UNKNOWN, (int) V16SF_FTYPE_V16SI_V16SF_HI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512F, 0, CODE_FOR_fixuns_truncv16sfv16si2_mask_round, \"__builtin_ia32_cvttps2udq512_mask\", IX86_BUILTIN_CVTTPS2UDQ512, UNKNOWN, (int) V16SI_FTYPE_V16SF_V16SI_HI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512F, 0, CODE_FOR_floatunsv16siv16sf2_mask_round, \"__builtin_ia32_cvtudq2ps512_mask\", IX86_BUILTIN_CVTUDQ2PS512, UNKNOWN, (int) V16SF_FTYPE_V16SI_V16SF_HI_INT)\n BDESC (OPTION_MASK_ISA_AVX512F | OPTION_MASK_ISA_64BIT, 0, CODE_FOR_cvtusi2sd64_round, \"__builtin_ia32_cvtusi2sd64\", IX86_BUILTIN_CVTUSI2SD64, UNKNOWN, (int) V2DF_FTYPE_V2DF_UINT64_INT)\n BDESC (OPTION_MASK_ISA_AVX512F, 0, CODE_FOR_cvtusi2ss32_round, \"__builtin_ia32_cvtusi2ss32\", IX86_BUILTIN_CVTUSI2SS32, UNKNOWN, (int) V4SF_FTYPE_V4SF_UINT_INT)\n BDESC (OPTION_MASK_ISA_AVX512F | OPTION_MASK_ISA_64BIT, 0, CODE_FOR_cvtusi2ss64_round, \"__builtin_ia32_cvtusi2ss64\", IX86_BUILTIN_CVTUSI2SS64, UNKNOWN, (int) V4SF_FTYPE_V4SF_UINT64_INT)\n@@ -3185,7 +3185,7 @@ BDESC (OPTION_MASK_ISA_AVX512DQ, 0, CODE_FOR_avx512dq_rangesv2df_mask_round, \"__\n BDESC (OPTION_MASK_ISA_AVX512DQ, 0, CODE_FOR_avx512dq_rangesv4sf_mask_round, \"__builtin_ia32_rangess128_mask_round\", IX86_BUILTIN_RANGESS128, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF_INT_V4SF_UQI_INT)\n BDESC (OPTION_MASK_ISA_AVX512DQ, 0, CODE_FOR_fix_notruncv8dfv8di2_mask_round, \"__builtin_ia32_cvtpd2qq512_mask\", IX86_BUILTIN_CVTPD2QQ512, UNKNOWN, (int) V8DI_FTYPE_V8DF_V8DI_QI_INT)\n BDESC (OPTION_MASK_ISA_AVX512DQ, 0, CODE_FOR_avx512dq_cvtps2qqv8di_mask_round, \"__builtin_ia32_cvtps2qq512_mask\", IX86_BUILTIN_CVTPS2QQ512, UNKNOWN, (int) V8DI_FTYPE_V8SF_V8DI_QI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512DQ, 0, CODE_FOR_ufix_notruncv8dfv8di2_mask_round, \"__builtin_ia32_cvtpd2uqq512_mask\", IX86_BUILTIN_CVTPD2UQQ512, UNKNOWN, (int) V8DI_FTYPE_V8DF_V8DI_QI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512DQ, 0, CODE_FOR_fixuns_notruncv8dfv8di2_mask_round, \"__builtin_ia32_cvtpd2uqq512_mask\", IX86_BUILTIN_CVTPD2UQQ512, UNKNOWN, (int) V8DI_FTYPE_V8DF_V8DI_QI_INT)\n BDESC (OPTION_MASK_ISA_AVX512DQ, 0, CODE_FOR_avx512dq_cvtps2uqqv8di_mask_round, \"__builtin_ia32_cvtps2uqq512_mask\", IX86_BUILTIN_CVTPS2UQQ512, UNKNOWN, (int) V8DI_FTYPE_V8SF_V8DI_QI_INT)\n BDESC (OPTION_MASK_ISA_AVX512DQ, 0, CODE_FOR_floatv8div8sf2_mask_round, \"__builtin_ia32_cvtqq2ps512_mask\", IX86_BUILTIN_CVTQQ2PS512, UNKNOWN, (int) V8SF_FTYPE_V8DI_V8SF_QI_INT)\n BDESC (OPTION_MASK_ISA_AVX512DQ, 0, CODE_FOR_floatunsv8div8sf2_mask_round, \"__builtin_ia32_cvtuqq2ps512_mask\", IX86_BUILTIN_CVTUQQ2PS512, UNKNOWN, (int) V8SF_FTYPE_V8DI_V8SF_QI_INT)"}, {"sha": "0d817fc3f3b87adfeef4af9bca2147eeb000ce89", "filename": "gcc/config/i386/i386-expand.cc", "status": "modified", "additions": 54, "deletions": 30, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fi386%2Fi386-expand.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fi386%2Fi386-expand.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-expand.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -197,9 +197,20 @@ split_double_concat (machine_mode mode, rtx dst, rtx lo, rtx hi)\n     {\n       /* In this case, code below would first emit_move_insn (dlo, lo)\n \t and then emit_move_insn (dhi, hi).  But the former would\n-\t invalidate hi's address.  Load into dhi first.  */\n-      emit_move_insn (dhi, hi);\n-      hi = dhi;\n+\t invalidate hi's address.  */\n+      if (rtx_equal_p (dhi, lo))\n+\t{\n+\t  /* We can't load into dhi first, so load into dlo\n+\t     first and we'll swap.  */\n+\t  emit_move_insn (dlo, hi);\n+\t  hi = dlo;\n+\t}\n+      else\n+\t{\n+\t  /* Load into dhi first.  */\n+\t  emit_move_insn (dhi, hi);\n+\t  hi = dhi;\n+\t}\n     }\n   if (!rtx_equal_p (dlo, hi))\n     {\n@@ -327,7 +338,7 @@ ix86_convert_const_wide_int_to_broadcast (machine_mode mode, rtx op)\n   machine_mode vector_mode;\n   if (!mode_for_vector (broadcast_mode, nunits).exists (&vector_mode))\n     gcc_unreachable ();\n-  rtx target = ix86_gen_scratch_sse_rtx (vector_mode);\n+  rtx target = gen_reg_rtx (vector_mode);\n   bool ok = ix86_expand_vector_init_duplicate (false, vector_mode,\n \t\t\t\t\t       target,\n \t\t\t\t\t       GEN_INT (val_broadcast));\n@@ -675,7 +686,7 @@ ix86_expand_vector_move (machine_mode mode, rtx operands[])\n       if (!register_operand (op0, mode)\n \t  && !register_operand (op1, mode))\n \t{\n-\t  rtx scratch = ix86_gen_scratch_sse_rtx (mode);\n+\t  rtx scratch = gen_reg_rtx (mode);\n \t  emit_move_insn (scratch, op1);\n \t  op1 = scratch;\n \t}\n@@ -717,7 +728,7 @@ ix86_expand_vector_move (machine_mode mode, rtx operands[])\n       && !register_operand (op0, mode)\n       && !register_operand (op1, mode))\n     {\n-      rtx tmp = ix86_gen_scratch_sse_rtx (GET_MODE (op0));\n+      rtx tmp = gen_reg_rtx (GET_MODE (op0));\n       emit_move_insn (tmp, op1);\n       emit_move_insn (op0, tmp);\n       return;\n@@ -2022,7 +2033,7 @@ ix86_expand_vector_convert_uns_vsivsf (rtx target, rtx val)\n }\n \n /* Adjust a V*SFmode/V*DFmode value VAL so that *sfix_trunc* resp. fix_trunc*\n-   pattern can be used on it instead of *ufix_trunc* resp. fixuns_trunc*.\n+   pattern can be used on it instead of fixuns_trunc*.\n    This is done by doing just signed conversion if < 0x1p31, and otherwise by\n    subtracting 0x1p31 first and xoring in 0x80000000 from *XORP afterwards.  */\n \n@@ -18949,11 +18960,9 @@ expand_vec_perm_movs (struct expand_vec_perm_d *d)\n   if (d->one_operand_p)\n     return false;\n \n-  if (!(TARGET_SSE && vmode == V4SFmode)\n-      && !(TARGET_SSE && vmode == V4SImode)\n-      && !(TARGET_MMX_WITH_SSE && vmode == V2SFmode)\n-      && !(TARGET_SSE2 && vmode == V2DFmode)\n-      && !(TARGET_SSE2 && vmode == V2DImode))\n+  if (!(TARGET_SSE && (vmode == V4SFmode || vmode == V4SImode))\n+      && !(TARGET_MMX_WITH_SSE && (vmode == V2SFmode || vmode == V2SImode))\n+      && !(TARGET_SSE2 && (vmode == V2DFmode || vmode == V2DImode)))\n     return false;\n \n   /* Only the first element is changed.  */\n@@ -18998,9 +19007,10 @@ expand_vec_perm_blend (struct expand_vec_perm_d *d)\n     ;\n   else if (TARGET_AVX && (vmode == V4DFmode || vmode == V8SFmode))\n     ;\n-  else if (TARGET_SSE4_1 && (GET_MODE_SIZE (vmode) == 16\n-\t\t\t     || GET_MODE_SIZE (vmode) == 8\n-\t\t\t     || GET_MODE_SIZE (vmode) == 4))\n+  else if (TARGET_SSE4_1\n+\t   && (GET_MODE_SIZE (vmode) == 16\n+\t       || (TARGET_MMX_WITH_SSE && GET_MODE_SIZE (vmode) == 8)\n+\t       || GET_MODE_SIZE (vmode) == 4))\n     ;\n   else\n     return false;\n@@ -19033,6 +19043,8 @@ expand_vec_perm_blend (struct expand_vec_perm_d *d)\n     case E_V8SFmode:\n     case E_V2DFmode:\n     case E_V4SFmode:\n+    case E_V2SFmode:\n+    case E_V2HImode:\n     case E_V4HImode:\n     case E_V8HImode:\n     case E_V8SImode:\n@@ -19057,10 +19069,20 @@ expand_vec_perm_blend (struct expand_vec_perm_d *d)\n       goto do_subreg;\n \n     case E_V4SImode:\n-      for (i = 0; i < 4; ++i)\n-\tmask |= (d->perm[i] >= 4 ? 3 : 0) << (i * 2);\n-      vmode = V8HImode;\n-      goto do_subreg;\n+      if (TARGET_AVX2)\n+\t{\n+\t  /* Use vpblendd instead of vpblendw.  */\n+\t  for (i = 0; i < nelt; ++i)\n+\t    mask |= ((unsigned HOST_WIDE_INT) (d->perm[i] >= nelt)) << i;\n+\t  break;\n+\t}\n+      else\n+\t{\n+\t  for (i = 0; i < 4; ++i)\n+\t    mask |= (d->perm[i] >= 4 ? 3 : 0) << (i * 2);\n+\t  vmode = V8HImode;\n+\t  goto do_subreg;\n+\t}\n \n     case E_V16QImode:\n       /* See if bytes move in pairs so we can use pblendw with\n@@ -19888,11 +19910,15 @@ expand_vec_perm_1 (struct expand_vec_perm_d *d)\n \t}\n     }\n \n+  /* Try the SSE4.1 blend variable merge instructions.  */\n+  if (expand_vec_perm_blend (d))\n+    return true;\n+\n   /* Try movss/movsd instructions.  */\n   if (expand_vec_perm_movs (d))\n     return true;\n \n-  /* Finally, try the fully general two operand permute.  */\n+  /* Try the fully general two operand permute.  */\n   if (expand_vselect_vconcat (d->target, d->op0, d->op1, d->perm, nelt,\n \t\t\t      d->testing_p))\n     return true;\n@@ -19915,10 +19941,6 @@ expand_vec_perm_1 (struct expand_vec_perm_d *d)\n \treturn true;\n     }\n \n-  /* Try the SSE4.1 blend variable merge instructions.  */\n-  if (expand_vec_perm_blend (d))\n-    return true;\n-\n   /* Try one of the AVX vpermil variable permutations.  */\n   if (expand_vec_perm_vpermil (d))\n     return true;\n@@ -20276,9 +20298,10 @@ expand_vec_perm_pblendv (struct expand_vec_perm_d *d)\n     ;\n   else if (TARGET_AVX && (vmode == V4DFmode || vmode == V8SFmode))\n     ;\n-  else if (TARGET_SSE4_1 && (GET_MODE_SIZE (vmode) == 4\n-\t\t\t     || GET_MODE_SIZE (vmode) == 8\n-\t\t\t     || GET_MODE_SIZE (vmode) == 16))\n+  else if (TARGET_SSE4_1\n+\t   && (GET_MODE_SIZE (vmode) == 16\n+\t       || (TARGET_MMX_WITH_SSE && GET_MODE_SIZE (vmode) == 8)\n+\t       || GET_MODE_SIZE (vmode) == 4))\n     ;\n   else\n     return false;\n@@ -21142,9 +21165,10 @@ expand_vec_perm_2perm_pblendv (struct expand_vec_perm_d *d, bool two_insn)\n     ;\n   else if (TARGET_AVX && (vmode == V4DFmode || vmode == V8SFmode))\n     ;\n-  else if (TARGET_SSE4_1 && (GET_MODE_SIZE (vmode) == 16\n-\t\t\t     || GET_MODE_SIZE (vmode) == 8\n-\t\t\t     || GET_MODE_SIZE (vmode) == 4))\n+  else if (TARGET_SSE4_1\n+\t   && (GET_MODE_SIZE (vmode) == 16\n+\t       || (TARGET_MMX_WITH_SSE && GET_MODE_SIZE (vmode) == 8)\n+\t       || GET_MODE_SIZE (vmode) == 4))\n     ;\n   else\n     return false;"}, {"sha": "c09abf8fc2070396bde8ad7e0abf915fe012ec61", "filename": "gcc/config/i386/i386-features.cc", "status": "modified", "additions": 55, "deletions": 22, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fi386%2Fi386-features.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fi386%2Fi386-features.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-features.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -296,6 +296,8 @@ scalar_chain::scalar_chain (enum machine_mode smode_, enum machine_mode vmode_)\n \n   n_sse_to_integer = 0;\n   n_integer_to_sse = 0;\n+\n+  max_visits = x86_stv_max_visits;\n }\n \n /* Free chain's data.  */\n@@ -354,10 +356,12 @@ scalar_chain::mark_dual_mode_def (df_ref def)\n }\n \n /* Check REF's chain to add new insns into a queue\n-   and find registers requiring conversion.  */\n+   and find registers requiring conversion.  Return true if OK, false\n+   if the analysis was aborted.  */\n \n-void\n-scalar_chain::analyze_register_chain (bitmap candidates, df_ref ref)\n+bool\n+scalar_chain::analyze_register_chain (bitmap candidates, df_ref ref,\n+\t\t\t\t      bitmap disallowed)\n {\n   df_link *chain;\n   bool mark_def = false;\n@@ -371,6 +375,9 @@ scalar_chain::analyze_register_chain (bitmap candidates, df_ref ref)\n       if (!NONDEBUG_INSN_P (DF_REF_INSN (chain->ref)))\n \tcontinue;\n \n+      if (--max_visits == 0)\n+\treturn false;\n+\n       if (!DF_REF_REG_MEM_P (chain->ref))\n \t{\n \t  if (bitmap_bit_p (insns, uid))\n@@ -381,6 +388,10 @@ scalar_chain::analyze_register_chain (bitmap candidates, df_ref ref)\n \t      add_to_queue (uid);\n \t      continue;\n \t    }\n+\n+\t  /* If we run into parts of an aborted chain discovery abort.  */\n+\t  if (bitmap_bit_p (disallowed, uid))\n+\t    return false;\n \t}\n \n       if (DF_REF_REG_DEF_P (chain->ref))\n@@ -401,15 +412,19 @@ scalar_chain::analyze_register_chain (bitmap candidates, df_ref ref)\n \n   if (mark_def)\n     mark_dual_mode_def (ref);\n+\n+  return true;\n }\n \n-/* Add instruction into a chain.  */\n+/* Add instruction into a chain.  Return true if OK, false if the search\n+   was aborted.  */\n \n-void\n-scalar_chain::add_insn (bitmap candidates, unsigned int insn_uid)\n+bool\n+scalar_chain::add_insn (bitmap candidates, unsigned int insn_uid,\n+\t\t\tbitmap disallowed)\n {\n   if (!bitmap_set_bit (insns, insn_uid))\n-    return;\n+    return true;\n \n   if (dump_file)\n     fprintf (dump_file, \"  Adding insn %d to chain #%d\\n\", insn_uid, chain_id);\n@@ -426,22 +441,27 @@ scalar_chain::add_insn (bitmap candidates, unsigned int insn_uid)\n   df_ref ref;\n   for (ref = DF_INSN_UID_DEFS (insn_uid); ref; ref = DF_REF_NEXT_LOC (ref))\n     if (!HARD_REGISTER_P (DF_REF_REG (ref)))\n-      analyze_register_chain (candidates, ref);\n+      if (!analyze_register_chain (candidates, ref, disallowed))\n+\treturn false;\n \n   /* The operand(s) of VEC_SELECT don't need to be converted/convertible.  */\n   if (def_set && GET_CODE (SET_SRC (def_set)) == VEC_SELECT)\n-    return;\n+    return true;\n \n   for (ref = DF_INSN_UID_USES (insn_uid); ref; ref = DF_REF_NEXT_LOC (ref))\n     if (!DF_REF_REG_MEM_P (ref))\n-      analyze_register_chain (candidates, ref);\n+      if (!analyze_register_chain (candidates, ref, disallowed))\n+\treturn false;\n+\n+  return true;\n }\n \n /* Build new chain starting from insn INSN_UID recursively\n-   adding all dependent uses and definitions.  */\n+   adding all dependent uses and definitions.  Return true if OK, false\n+   if the chain discovery was aborted.  */\n \n-void\n-scalar_chain::build (bitmap candidates, unsigned insn_uid)\n+bool\n+scalar_chain::build (bitmap candidates, unsigned insn_uid, bitmap disallowed)\n {\n   queue = BITMAP_ALLOC (NULL);\n   bitmap_set_bit (queue, insn_uid);\n@@ -454,7 +474,17 @@ scalar_chain::build (bitmap candidates, unsigned insn_uid)\n       insn_uid = bitmap_first_set_bit (queue);\n       bitmap_clear_bit (queue, insn_uid);\n       bitmap_clear_bit (candidates, insn_uid);\n-      add_insn (candidates, insn_uid);\n+      if (!add_insn (candidates, insn_uid, disallowed))\n+\t{\n+\t  /* If we aborted the search put sofar found insn on the set of\n+\t     disallowed insns so that further searches reaching them also\n+\t     abort and thus we abort the whole but yet undiscovered chain.  */\n+\t  bitmap_ior_into (disallowed, insns);\n+\t  if (dump_file)\n+\t    fprintf (dump_file, \"Aborted chain #%d discovery\\n\", chain_id);\n+\t  BITMAP_FREE (queue);\n+\t  return false;\n+\t}\n     }\n \n   if (dump_file)\n@@ -478,6 +508,8 @@ scalar_chain::build (bitmap candidates, unsigned insn_uid)\n     }\n \n   BITMAP_FREE (queue);\n+\n+  return true;\n }\n \n /* Return a cost of building a vector costant\n@@ -2282,6 +2314,7 @@ convert_scalars_to_vector (bool timode_p)\n \n   for (unsigned i = 0; i <= 2; ++i)\n     {\n+      auto_bitmap disallowed;\n       bitmap_tree_view (&candidates[i]);\n       while (!bitmap_empty_p (&candidates[i]))\n \t{\n@@ -2296,14 +2329,14 @@ convert_scalars_to_vector (bool timode_p)\n \t  /* Find instructions chain we want to convert to vector mode.\n \t     Check all uses and definitions to estimate all required\n \t     conversions.  */\n-\t  chain->build (&candidates[i], uid);\n-\n-\t  if (chain->compute_convert_gain () > 0)\n-\t    converted_insns += chain->convert ();\n-\t  else\n-\t    if (dump_file)\n-\t      fprintf (dump_file, \"Chain #%d conversion is not profitable\\n\",\n-\t\t       chain->chain_id);\n+\t  if (chain->build (&candidates[i], uid, disallowed))\n+\t    {\n+\t      if (chain->compute_convert_gain () > 0)\n+\t\tconverted_insns += chain->convert ();\n+\t      else if (dump_file)\n+\t\tfprintf (dump_file, \"Chain #%d conversion is not profitable\\n\",\n+\t\t\t chain->chain_id);\n+\t    }\n \n \t  delete chain;\n \t}"}, {"sha": "72a9f54b4e297239da5df3e7c677966693c5298d", "filename": "gcc/config/i386/i386-features.h", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fi386%2Fi386-features.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fi386%2Fi386-features.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-features.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -148,12 +148,15 @@ class scalar_chain\n   /* Registers used in both vector and sclar modes.  */\n   bitmap defs_conv;\n \n+  /* Limit on chain discovery.  */\n+  unsigned max_visits;\n+\n   bitmap insns_conv;\n   hash_map<rtx, rtx> defs_map;\n   unsigned n_sse_to_integer;\n   unsigned n_integer_to_sse;\n \n-  void build (bitmap candidates, unsigned insn_uid);\n+  bool build (bitmap candidates, unsigned insn_uid, bitmap disallowed);\n   virtual int compute_convert_gain () = 0;\n   int convert ();\n \n@@ -168,8 +171,9 @@ class scalar_chain\n   void convert_registers ();\n \n  private:\n-  void add_insn (bitmap candidates, unsigned insn_uid);\n-  void analyze_register_chain (bitmap candidates, df_ref ref);\n+  bool add_insn (bitmap candidates, unsigned insn_uid, bitmap disallowed);\n+  bool analyze_register_chain (bitmap candidates, df_ref ref,\n+\t\t\t       bitmap disallowed);\n   virtual void convert_insn (rtx_insn *insn) = 0;\n   virtual void convert_op (rtx *op, rtx_insn *insn) = 0;\n };"}, {"sha": "71ae95ffef7bd171583100bca01e785abd1a9c2a", "filename": "gcc/config/i386/i386-protos.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-protos.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -50,8 +50,6 @@ extern void ix86_reset_previous_fndecl (void);\n \n extern bool ix86_using_red_zone (void);\n \n-extern rtx ix86_gen_scratch_sse_rtx (machine_mode);\n-\n extern unsigned int ix86_regmode_natural_size (machine_mode);\n extern bool ix86_check_builtin_isa_match (unsigned int fcode);\n #ifdef RTX_CODE"}, {"sha": "2581b800a061db6a9a13c2b0420b2311f76a3584", "filename": "gcc/config/i386/i386.cc", "status": "modified", "additions": 37, "deletions": 14, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fi386%2Fi386.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fi386%2Fi386.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -16682,10 +16682,18 @@ assign_386_stack_local (machine_mode mode, enum ix86_stack_slot n)\n     if (s->mode == mode && s->n == n)\n       return validize_mem (copy_rtx (s->rtl));\n \n+  int align = 0;\n+  /* For DImode with SLOT_FLOATxFDI_387 use 32-bit\n+     alignment with -m32 -mpreferred-stack-boundary=2.  */\n+  if (mode == DImode\n+      && !TARGET_64BIT\n+      && n == SLOT_FLOATxFDI_387\n+      && ix86_preferred_stack_boundary < GET_MODE_ALIGNMENT (DImode))\n+    align = 32;\n   s = ggc_alloc<stack_local_entry> ();\n   s->n = n;\n   s->mode = mode;\n-  s->rtl = assign_stack_local (mode, GET_MODE_SIZE (mode), 0);\n+  s->rtl = assign_stack_local (mode, GET_MODE_SIZE (mode), align);\n \n   s->next = ix86_stack_locals;\n   ix86_stack_locals = s;\n@@ -19839,9 +19847,12 @@ inline_memory_move_cost (machine_mode mode, enum reg_class regclass, int in)\n \t  index = 1;\n \t  break;\n \t/* DImode loads and stores assumed to cost the same as SImode.  */\n-\tdefault:\n+\tcase 4:\n+\tcase 8:\n \t  index = 2;\n \t  break;\n+\tdefault:\n+\t  return 100;\n \t}\n \n       if (in == 2)\n@@ -22775,6 +22786,27 @@ ix86_mangle_type (const_tree type)\n     }\n }\n \n+/* Create C++ tinfo symbols for only conditionally available fundamental\n+   types.  */\n+\n+static void\n+ix86_emit_support_tinfos (emit_support_tinfos_callback callback)\n+{\n+  extern tree ix86_float16_type_node;\n+  extern tree ix86_bf16_type_node;\n+\n+  if (!TARGET_SSE2)\n+    {\n+      gcc_checking_assert (!float16_type_node && !bfloat16_type_node);\n+      float16_type_node = ix86_float16_type_node;\n+      bfloat16_type_node = ix86_bf16_type_node;\n+      callback (float16_type_node);\n+      callback (bfloat16_type_node);\n+      float16_type_node = NULL_TREE;\n+      bfloat16_type_node = NULL_TREE;\n+    }\n+}\n+\n static GTY(()) tree ix86_tls_stack_chk_guard_decl;\n \n static tree\n@@ -24176,15 +24208,6 @@ ix86_optab_supported_p (int op, machine_mode mode1, machine_mode,\n     }\n }\n \n-/* Implement the TARGET_GEN_MEMSET_SCRATCH_RTX hook.  Return a scratch\n-   register in MODE for vector load and store.  */\n-\n-rtx\n-ix86_gen_scratch_sse_rtx (machine_mode mode)\n-{\n-  return gen_reg_rtx (mode);\n-}\n-\n /* Address space support.\n \n    This is not \"far pointers\" in the 16-bit sense, but an easy way\n@@ -24954,6 +24977,9 @@ ix86_libgcc_floating_mode_supported_p\n #undef TARGET_MANGLE_TYPE\n #define TARGET_MANGLE_TYPE ix86_mangle_type\n \n+#undef TARGET_EMIT_SUPPORT_TINFOS\n+#define TARGET_EMIT_SUPPORT_TINFOS ix86_emit_support_tinfos\n+\n #undef TARGET_STACK_PROTECT_GUARD\n #define TARGET_STACK_PROTECT_GUARD ix86_stack_protect_guard\n \n@@ -25229,9 +25255,6 @@ static bool ix86_libc_has_fast_function (int fcode ATTRIBUTE_UNUSED)\n #undef TARGET_LIBC_HAS_FAST_FUNCTION\n #define TARGET_LIBC_HAS_FAST_FUNCTION ix86_libc_has_fast_function\n \n-#undef TARGET_GEN_MEMSET_SCRATCH_RTX\n-#define TARGET_GEN_MEMSET_SCRATCH_RTX ix86_gen_scratch_sse_rtx\n-\n #if CHECKING_P\n #undef TARGET_RUN_TARGET_SELFTESTS\n #define TARGET_RUN_TARGET_SELFTESTS selftest::ix86_run_selftests"}, {"sha": "ed689b044c3449f9115dd9c4d5fc342eec0b2d56", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -19527,8 +19527,7 @@\n    (set (reg:CCFP FPSR_REG)\n \t(unspec:CCFP [(match_dup 2) (match_dup 3)]\n \t\t     UNSPEC_C2_FLAG))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && flag_finite_math_only\"\n+  \"TARGET_USE_FANCY_MATH_387\"\n   \"fprem\"\n   [(set_attr \"type\" \"fpspc\")\n    (set_attr \"znver1_decode\" \"vector\")\n@@ -19538,8 +19537,7 @@\n   [(use (match_operand:XF 0 \"register_operand\"))\n    (use (match_operand:XF 1 \"general_operand\"))\n    (use (match_operand:XF 2 \"general_operand\"))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && flag_finite_math_only\"\n+  \"TARGET_USE_FANCY_MATH_387\"\n {\n   rtx_code_label *label = gen_label_rtx ();\n \n@@ -19562,8 +19560,7 @@\n   [(use (match_operand:MODEF 0 \"register_operand\"))\n    (use (match_operand:MODEF 1 \"general_operand\"))\n    (use (match_operand:MODEF 2 \"general_operand\"))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && flag_finite_math_only\"\n+  \"TARGET_USE_FANCY_MATH_387\"\n {\n   rtx (*gen_truncxf) (rtx, rtx);\n \n@@ -19602,8 +19599,7 @@\n    (set (reg:CCFP FPSR_REG)\n \t(unspec:CCFP [(match_dup 2) (match_dup 3)]\n \t\t     UNSPEC_C2_FLAG))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && flag_finite_math_only\"\n+  \"TARGET_USE_FANCY_MATH_387\"\n   \"fprem1\"\n   [(set_attr \"type\" \"fpspc\")\n    (set_attr \"znver1_decode\" \"vector\")\n@@ -19613,8 +19609,7 @@\n   [(use (match_operand:XF 0 \"register_operand\"))\n    (use (match_operand:XF 1 \"general_operand\"))\n    (use (match_operand:XF 2 \"general_operand\"))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && flag_finite_math_only\"\n+  \"TARGET_USE_FANCY_MATH_387\"\n {\n   rtx_code_label *label = gen_label_rtx ();\n \n@@ -19637,8 +19632,7 @@\n   [(use (match_operand:MODEF 0 \"register_operand\"))\n    (use (match_operand:MODEF 1 \"general_operand\"))\n    (use (match_operand:MODEF 2 \"general_operand\"))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && flag_finite_math_only\"\n+  \"TARGET_USE_FANCY_MATH_387\"\n {\n   rtx (*gen_truncxf) (rtx, rtx);\n "}, {"sha": "94fdd639ff150d8b69ca1d1ee9b3ca0f7f8517dc", "filename": "gcc/config/i386/i386.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fi386%2Fi386.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fi386%2Fi386.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.opt?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -599,6 +599,10 @@ Target Mask(STV) Save\n Disable Scalar to Vector optimization pass transforming 64-bit integer\n computations into a vector ones.\n \n+-param=x86-stv-max-visits=\n+Target Joined UInteger Var(x86_stv_max_visits) Init(10000) IntegerRange(1, 1000000) Param\n+The maximum number of use and def visits when discovering a STV chain before the discovery is aborted.\n+\n mdispatch-scheduler\n Target RejectNegative Var(flag_dispatch_scheduler)\n Do dispatch scheduling if processor is bdver1, bdver2, bdver3, bdver4"}, {"sha": "18dae03ad0a43c35b3c695f52e8f08f2e646403b", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 24, "deletions": 5, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -1154,6 +1154,25 @@\n   DONE;\n })\n \n+(define_insn \"*mmx_blendps\"\n+  [(set (match_operand:V2SF 0 \"register_operand\" \"=Yr,*x,x\")\n+\t(vec_merge:V2SF\n+\t  (match_operand:V2SF 2 \"register_operand\" \"Yr,*x,x\")\n+\t  (match_operand:V2SF 1 \"register_operand\" \"0,0,x\")\n+\t  (match_operand:SI 3 \"const_0_to_3_operand\")))]\n+  \"TARGET_SSE4_1 && TARGET_MMX_WITH_SSE\"\n+  \"@\n+   blendps\\t{%3, %2, %0|%0, %2, %3}\n+   blendps\\t{%3, %2, %0|%0, %2, %3}\n+   vblendps\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n+  [(set_attr \"isa\" \"noavx,noavx,avx\")\n+   (set_attr \"type\" \"ssemov\")\n+   (set_attr \"length_immediate\" \"1\")\n+   (set_attr \"prefix_data16\" \"1,1,*\")\n+   (set_attr \"prefix_extra\" \"1\")\n+   (set_attr \"prefix\" \"orig,orig,vex\")\n+   (set_attr \"mode\" \"V4SF\")])\n+\n (define_insn \"mmx_blendvps\"\n   [(set (match_operand:V2SF 0 \"register_operand\" \"=Yr,*x,x\")\n \t(unspec:V2SF\n@@ -1518,11 +1537,11 @@\n    (set_attr \"prefix\" \"*,maybe_vex,orig\")\n    (set_attr \"mode\" \"DI,V4SF,V4SF\")])\n \n-(define_insn \"*mmx_movss\"\n-  [(set (match_operand:V2SF 0 \"register_operand\"   \"=x,v\")\n-\t(vec_merge:V2SF\n-\t  (match_operand:V2SF 2 \"register_operand\" \" x,v\")\n-\t  (match_operand:V2SF 1 \"register_operand\" \" 0,v\")\n+(define_insn \"*mmx_movss_<mode>\"\n+  [(set (match_operand:V2FI 0 \"register_operand\"   \"=x,v\")\n+\t(vec_merge:V2FI\n+\t  (match_operand:V2FI 2 \"register_operand\" \" x,v\")\n+\t  (match_operand:V2FI 1 \"register_operand\" \" 0,v\")\n \t  (const_int 1)))]\n   \"TARGET_MMX_WITH_SSE\"\n   \"@"}, {"sha": "513960e8f33ce5cdb5826841bf50a9453717f75b", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 30, "deletions": 39, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -7850,7 +7850,7 @@\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n-(define_insn \"ufloat<sseintvecmodelower><mode>2<mask_name><round_name>\"\n+(define_insn \"<mask_codefor>floatuns<sseintvecmodelower><mode>2<mask_name><round_name>\"\n   [(set (match_operand:VF1_AVX512VL 0 \"register_operand\" \"=v\")\n \t(unsigned_float:VF1_AVX512VL\n \t  (match_operand:<sseintvecmode> 1 \"nonimmediate_operand\" \"<round_constraint>\")))]\n@@ -7861,24 +7861,16 @@\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_expand \"floatuns<sseintvecmodelower><mode>2\"\n-  [(match_operand:VF1 0 \"register_operand\")\n-   (match_operand:<sseintvecmode> 1 \"register_operand\")]\n+  [(set (match_operand:VF1 0 \"register_operand\")\n+\t(unsigned_float:VF1\n+\t  (match_operand:<sseintvecmode> 1 \"register_operand\")))]\n   \"TARGET_SSE2 && (<MODE>mode == V4SFmode || TARGET_AVX2)\"\n {\n-  if (<MODE>mode == V16SFmode)\n-    emit_insn (gen_ufloatv16siv16sf2 (operands[0], operands[1]));\n-  else\n-    if (TARGET_AVX512VL)\n-      {\n-\tif (<MODE>mode == V4SFmode)\n-\t  emit_insn (gen_ufloatv4siv4sf2 (operands[0], operands[1]));\n-\telse\n-\t  emit_insn (gen_ufloatv8siv8sf2 (operands[0], operands[1]));\n-      }\n-  else\n-    ix86_expand_vector_convert_uns_vsivsf (operands[0], operands[1]);\n-\n-  DONE;\n+  if (<MODE>mode != V16SFmode && !TARGET_AVX512VL)\n+    {\n+      ix86_expand_vector_convert_uns_vsivsf (operands[0], operands[1]);\n+      DONE;\n+    }\n })\n \n \n@@ -7913,7 +7905,7 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"XI\")])\n \n-(define_insn \"<mask_codefor><avx512>_ufix_notrunc<sf2simodelower><mode><mask_name><round_name>\"\n+(define_insn \"<mask_codefor><avx512>_fixuns_notrunc<sf2simodelower><mode><mask_name><round_name>\"\n   [(set (match_operand:VI4_AVX512VL 0 \"register_operand\" \"=v\")\n \t(unspec:VI4_AVX512VL\n \t  [(match_operand:<ssePSmode> 1 \"nonimmediate_operand\" \"<round_constraint>\")]\n@@ -7970,7 +7962,7 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"TI\")])\n \n-(define_insn \"<fixsuffix>fix_truncv16sfv16si2<mask_name><round_saeonly_name>\"\n+(define_insn \"fix<fixunssuffix>_truncv16sfv16si2<mask_name><round_saeonly_name>\"\n   [(set (match_operand:V16SI 0 \"register_operand\" \"=v\")\n \t(any_fix:V16SI\n \t  (match_operand:V16SF 1 \"<round_saeonly_nimm_predicate>\" \"<round_saeonly_constraint>\")))]\n@@ -8010,22 +8002,21 @@\n    (set_attr \"mode\" \"TI\")])\n \n (define_expand \"fixuns_trunc<mode><sseintvecmodelower>2\"\n-  [(match_operand:<sseintvecmode> 0 \"register_operand\")\n-   (match_operand:VF1 1 \"register_operand\")]\n+  [(set (match_operand:<sseintvecmode> 0 \"register_operand\")\n+\t  (unsigned_fix:<sseintvecmode>\n+\t    (match_operand:VF1_128_256 1 \"register_operand\")))]\n   \"TARGET_SSE2\"\n {\n-  if (<MODE>mode == V16SFmode)\n-    emit_insn (gen_ufix_truncv16sfv16si2 (operands[0],\n-\t\t\t\t\t  operands[1]));\n-  else\n+  /* AVX512 support vcvttps2udq for all 128/256/512-bit vectors.  */\n+  if (!TARGET_AVX512VL)\n     {\n       rtx tmp[3];\n       tmp[0] = ix86_expand_adjust_ufix_to_sfix_si (operands[1], &tmp[2]);\n       tmp[1] = gen_reg_rtx (<sseintvecmode>mode);\n       emit_insn (gen_fix_trunc<mode><sseintvecmodelower>2 (tmp[1], tmp[0]));\n       emit_insn (gen_xor<sseintvecmodelower>3 (operands[0], tmp[1], tmp[2]));\n+      DONE;\n     }\n-  DONE;\n })\n \n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n@@ -8413,7 +8404,7 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"V4SF\")])\n \n-(define_insn \"ufloat<si2dfmodelower><mode>2<mask_name>\"\n+(define_insn \"floatuns<si2dfmodelower><mode>2<mask_name>\"\n   [(set (match_operand:VF2_512_256VL 0 \"register_operand\" \"=v\")\n \t(unsigned_float:VF2_512_256VL\n \t  (match_operand:<si2dfmode> 1 \"nonimmediate_operand\" \"vm\")))]\n@@ -8423,7 +8414,7 @@\n     (set_attr \"prefix\" \"evex\")\n     (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"ufloatv2siv2df2<mask_name>\"\n+(define_insn \"<mask_codefor>floatunsv2siv2df2<mask_name>\"\n   [(set (match_operand:V2DF 0 \"register_operand\" \"=v\")\n \t(unsigned_float:V2DF\n \t  (vec_select:V2SI\n@@ -8572,11 +8563,11 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"TI\")])\n \n-;; For ufix_notrunc* insn patterns\n+;; For fixuns_notrunc* insn patterns\n (define_mode_attr pd2udqsuff\n   [(V8DF \"\") (V4DF \"{y}\")])\n \n-(define_insn \"ufix_notrunc<mode><si2dfmodelower>2<mask_name><round_name>\"\n+(define_insn \"fixuns_notrunc<mode><si2dfmodelower>2<mask_name><round_name>\"\n   [(set (match_operand:<si2dfmode> 0 \"register_operand\" \"=v\")\n \t(unspec:<si2dfmode>\n \t  [(match_operand:VF2_512_256VL 1 \"nonimmediate_operand\" \"<round_constraint>\")]\n@@ -8587,7 +8578,7 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n-(define_insn \"ufix_notruncv2dfv2si2\"\n+(define_insn \"fixuns_notruncv2dfv2si2\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n \t(vec_concat:V4SI\n \t  (unspec:V2SI\n@@ -8600,7 +8591,7 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"TI\")])\n \n-(define_insn \"ufix_notruncv2dfv2si2_mask\"\n+(define_insn \"fixuns_notruncv2dfv2si2_mask\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n \t(vec_concat:V4SI\n \t  (vec_merge:V2SI\n@@ -8618,7 +8609,7 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"TI\")])\n \n-(define_insn \"*ufix_notruncv2dfv2si2_mask_1\"\n+(define_insn \"*fixuns_notruncv2dfv2si2_mask_1\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n \t(vec_concat:V4SI\n \t  (vec_merge:V2SI\n@@ -8644,7 +8635,7 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"OI\")])\n \n-(define_insn \"ufix_truncv2dfv2si2\"\n+(define_insn \"*fixuns_truncv2dfv2si2\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n \t(vec_concat:V4SI\n \t  (unsigned_fix:V2SI (match_operand:V2DF 1 \"nonimmediate_operand\" \"vm\"))\n@@ -8655,7 +8646,7 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"TI\")])\n \n-(define_insn \"ufix_truncv2dfv2si2_mask\"\n+(define_insn \"fixuns_truncv2dfv2si2_mask\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n \t(vec_concat:V4SI\n \t  (vec_merge:V2SI\n@@ -8671,7 +8662,7 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"TI\")])\n \n-(define_insn \"*ufix_truncv2dfv2si2_mask_1\"\n+(define_insn \"*fixuns_truncv2dfv2si2_mask_1\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n \t(vec_concat:V4SI\n \t  (vec_merge:V2SI\n@@ -8694,7 +8685,7 @@\n    (set_attr \"prefix\" \"maybe_evex\")\n    (set_attr \"mode\" \"OI\")])\n \n-(define_insn \"ufix_truncv4dfv4si2<mask_name>\"\n+(define_insn \"fixuns_truncv4dfv4si2<mask_name>\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n \t(unsigned_fix:V4SI (match_operand:V4DF 1 \"nonimmediate_operand\" \"vm\")))]\n   \"TARGET_AVX512VL && TARGET_AVX512F\"\n@@ -8724,7 +8715,7 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<sseintvecmode2>\")])\n \n-(define_insn \"ufix_notrunc<mode><sseintvecmodelower>2<mask_name><round_name>\"\n+(define_insn \"fixuns_notrunc<mode><sseintvecmodelower>2<mask_name><round_name>\"\n   [(set (match_operand:<sseintvecmode> 0 \"register_operand\" \"=v\")\n \t(unspec:<sseintvecmode>\n \t  [(match_operand:VF2_AVX512VL 1 \"nonimmediate_operand\" \"<round_constraint>\")]\n@@ -8827,7 +8818,7 @@\n   DONE;\n })\n \n-(define_insn \"ufix_trunc<mode><sseintvecmodelower>2<mask_name>\"\n+(define_insn \"<mask_codefor>fixuns_trunc<mode><sseintvecmodelower>2<mask_name>\"\n   [(set (match_operand:<sseintvecmode> 0 \"register_operand\" \"=v\")\n \t(unsigned_fix:<sseintvecmode>\n \t  (match_operand:VF1_128_256VL 1 \"nonimmediate_operand\" \"vm\")))]"}, {"sha": "2f8dee6c1ecd03f7b3311cdbb33b84d2e306b71b", "filename": "gcc/config/i386/sym-mingw32.cc", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fi386%2Fsym-mingw32.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fi386%2Fsym-mingw32.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsym-mingw32.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -0,0 +1,3 @@\n+/* Prevent any name mangling to make sure that the linker\n+   will always find the symbol. */\n+char HOST_EXTRA_OBJS_SYMBOL asm (\"HOST_EXTRA_OBJS_SYMBOL\");"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "gcc/config/i386/t-cygwin-w64", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fi386%2Ft-cygwin-w64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fi386%2Ft-cygwin-w64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-cygwin-w64?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -1,3 +0,0 @@\n-MULTILIB_OPTIONS = m64/m32\n-MULTILIB_DIRNAMES = 64\n-MULTILIB_OSDIRNAMES = ../lib ../lib32"}, {"sha": "e2174e85b7c1f908d2cc4b02a7e84eb7bafbdf72", "filename": "gcc/config/i386/utf8-mingw32.rc", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fi386%2Futf8-mingw32.rc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fi386%2Futf8-mingw32.rc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Futf8-mingw32.rc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -0,0 +1,3 @@\n+#include <winuser.h>\n+\n+CREATEPROCESS_MANIFEST_RESOURCE_ID RT_MANIFEST \"winnt-utf8.manifest\""}, {"sha": "dab929e1515a2bdf20e2e89afe9cc3985ca95da2", "filename": "gcc/config/i386/winnt-utf8.manifest", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fi386%2Fwinnt-utf8.manifest", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fi386%2Fwinnt-utf8.manifest", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwinnt-utf8.manifest?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -0,0 +1,8 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n+<assembly manifestVersion=\"1.0\" xmlns=\"urn:schemas-microsoft-com:asm.v1\">\n+  <application>\n+    <windowsSettings>\n+      <activeCodePage xmlns=\"http://schemas.microsoft.com/SMI/2019/WindowsSettings\">UTF-8</activeCodePage>\n+    </windowsSettings>\n+  </application>\n+</assembly>"}, {"sha": "cb3d84348816252dfd845ffcbf447180aae0f3ba", "filename": "gcc/config/i386/x-mingw32", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fi386%2Fx-mingw32", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fi386%2Fx-mingw32", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx-mingw32?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -27,8 +27,7 @@ WERROR_FLAGS += -Wno-format\n \n host-mingw32.o : $(srcdir)/config/i386/host-mingw32.cc $(CONFIG_H) $(SYSTEM_H) \\\n   coretypes.h hosthooks.h hosthooks-def.h toplev.h $(DIAGNOSTIC_H) $(HOOKS_H)\n-\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n-\t\t$(srcdir)/config/i386/host-mingw32.cc\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n \n driver-mingw32.o : $(srcdir)/config/i386/driver-mingw32.cc $(CONFIG_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<"}, {"sha": "2783dd259a6fda89a3daab660f6e2e319b7f673b", "filename": "gcc/config/i386/x-mingw32-utf8", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fi386%2Fx-mingw32-utf8", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fi386%2Fx-mingw32-utf8", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx-mingw32-utf8?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -0,0 +1,61 @@\n+# Copyright (C) 2023 Free Software Foundation, Inc.\n+#\n+# This file is part of GCC.\n+#\n+# GCC is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3, or (at your option)\n+# any later version.\n+#\n+# GCC is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+#\n+#\n+# For mingw Windows hosts, embed a manifest that sets the active\n+# code page of the driver and compiler proper processes to utf8.\n+# This only has an effect when gcc is hosted on Windows version\n+# 1903 (May 2019 Update) or later.\n+\n+# The resource .rc file references the utf8 .manifest file.\n+# Compile it into an object file using windres.\n+# The resulting .o file gets added to host_extra_gcc_objs in\n+# config.host for mingw hosts and gets linked into\n+# the driver as a .o file, so it's lack of symbols is OK.\n+utf8rc-mingw32.o : $(srcdir)/config/i386/utf8-mingw32.rc \\\n+  $(srcdir)/config/i386/winnt-utf8.manifest\n+\t$(WINDRES) $< $@\n+\n+# Create an object file that just exports the global symbol\n+# HOST_EXTRA_OBJS_SYMBOL\n+sym-mingw32.o : $(srcdir)/config/i386/sym-mingw32.cc\n+\t$(COMPILER) -c $< $@\n+\n+# Combine the two object files into one which has both the\n+# compiled utf8 resource and the HOST_EXTRA_OBJS_SYMBOL symbol.\n+# The resulting .o file gets added to host_extra_objs in\n+# config.host for mingw hosts and gets archived into\n+# libbackend.a which gets linked into the compiler proper.\n+# If nothing references it into libbackend.a, it will not\n+# get linked into the compiler proper eventually.\n+# Therefore we need to request the symbol at compiler link time.\n+utf8-mingw32.o : utf8rc-mingw32.o sym-mingw32.o\n+\t$(COMPILER) -r utf8rc-mingw32.o sym-mingw32.o -o $@\n+\n+# Force compilers to link against the utf8 resource by\n+# requiring the symbol to be defined.\n+# Otherwise the object file won't get linked in the compilers\n+# because nothing is referencing it in libbackend.a\n+# This is expected because the resource object is not supposed\n+# to have any symbols, it just has to be linked into the\n+# executable in order for Windows to use the utf8 code page.\n+# Some build environments are passing these flags to other\n+# programs as well, so make the symbol definition optional\n+# such that these programs don't fail to build when they\n+# don't find it.\n+$(COMPILERS) : override LDFLAGS += -Wl,--undefined=HOST_EXTRA_OBJS_SYMBOL"}, {"sha": "9d603cc84e4414eebc60d1a12d786dac0f679124", "filename": "gcc/config/i386/x86-tune.def", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fi386%2Fx86-tune.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fi386%2Fx86-tune.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx86-tune.def?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -486,7 +486,7 @@ DEF_TUNE (X86_TUNE_USE_GATHER_2PARTS, \"use_gather_2parts\",\n /* X86_TUNE_USE_SCATTER_2PARTS: Use scater instructions for vectors with 2\n    elements.  */\n DEF_TUNE (X86_TUNE_USE_SCATTER_2PARTS, \"use_scatter_2parts\",\n-\t  ~(m_ZNVER4 | m_GENERIC))\n+\t  ~(m_ZNVER4))\n \n /* X86_TUNE_USE_GATHER_4PARTS: Use gather instructions for vectors with 4\n    elements.  */\n@@ -496,7 +496,7 @@ DEF_TUNE (X86_TUNE_USE_GATHER_4PARTS, \"use_gather_4parts\",\n /* X86_TUNE_USE_SCATTER_4PARTS: Use scater instructions for vectors with 4\n    elements.  */\n DEF_TUNE (X86_TUNE_USE_SCATTER_4PARTS, \"use_scatter_4parts\",\n-\t  ~(m_ZNVER4 | m_GENERIC))\n+\t  ~(m_ZNVER4))\n \n /* X86_TUNE_USE_GATHER: Use gather instructions for vectors with 8 or more\n    elements.  */\n@@ -506,7 +506,7 @@ DEF_TUNE (X86_TUNE_USE_GATHER, \"use_gather\",\n /* X86_TUNE_USE_SCATTER: Use scater instructions for vectors with 8 or more\n    elements.  */\n DEF_TUNE (X86_TUNE_USE_SCATTER, \"use_scatter\",\n-\t  ~(m_ZNVER4 | m_GENERIC))\n+\t  ~(m_ZNVER4))\n \n /* X86_TUNE_AVOID_128FMA_CHAINS: Avoid creating loops with tight 128bit or\n    smaller FMA chain.  */"}, {"sha": "f81678756465adfd719fd049bb37bf07a40cbda3", "filename": "gcc/config/loongarch/loongarch.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Floongarch%2Floongarch.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Floongarch%2Floongarch.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Floongarch%2Floongarch.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -676,7 +676,7 @@ enum reg_class\n    point values.  */\n \n #define GP_RETURN (GP_REG_FIRST + 4)\n-#define FP_RETURN ((TARGET_SOFT_FLOAT) ? GP_RETURN : (FP_REG_FIRST + 0))\n+#define FP_RETURN ((TARGET_SOFT_FLOAT_ABI) ? GP_RETURN : (FP_REG_FIRST + 0))\n \n #define MAX_ARGS_IN_REGISTERS 8\n \n@@ -1154,6 +1154,6 @@ struct GTY (()) machine_function\n /* The largest type that can be passed in floating-point registers.  */\n /* TODO: according to mabi.  */\n #define UNITS_PER_FP_ARG  \\\n-  (TARGET_HARD_FLOAT ? (TARGET_DOUBLE_FLOAT ? 8 : 4) : 0)\n+  (TARGET_HARD_FLOAT_ABI ? (TARGET_DOUBLE_FLOAT_ABI ? 8 : 4) : 0)\n \n #define FUNCTION_VALUE_REGNO_P(N) ((N) == GP_RETURN || (N) == FP_RETURN)"}, {"sha": "724d446af93c75cecc33f2d062ecfa611fd78bf0", "filename": "gcc/config/m68k/m68k-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fm68k%2Fm68k-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fm68k%2Fm68k-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k-protos.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -84,6 +84,7 @@ extern int emit_move_sequence (rtx *, machine_mode, rtx);\n extern bool m68k_movem_pattern_p (rtx, rtx, HOST_WIDE_INT, bool);\n extern const char *m68k_output_movem (rtx *, rtx, HOST_WIDE_INT, bool);\n extern bool m68k_epilogue_uses (int);\n+extern void m68k_final_prescan_insn (rtx_insn *, rtx *, int);\n \n /* Functions from m68k.cc used in constraints.md.  */\n extern rtx m68k_unwrap_symbol (rtx, bool);"}, {"sha": "03db2b6a9369f5d8b5038e1ee61421bf7e98551e", "filename": "gcc/config/m68k/m68k.cc", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fm68k%2Fm68k.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fm68k%2Fm68k.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -2550,6 +2550,18 @@ m68k_adjust_decorated_operand (rtx op)\n     }\n }\n \n+/* Prescan insn before outputing assembler for it.  */\n+\n+void\n+m68k_final_prescan_insn (rtx_insn *insn ATTRIBUTE_UNUSED,\n+\t\t\t rtx *operands, int n_operands)\n+{\n+  int i;\n+\n+  for (i = 0; i < n_operands; ++i)\n+    m68k_adjust_decorated_operand (operands[i]);\n+}\n+\n /* Move X to a register and add REG_EQUAL note pointing to ORIG.\n    If REG is non-null, use it; generate new pseudo otherwise.  */\n \n@@ -3658,6 +3670,7 @@ handle_move_double (rtx operands[2],\n \n   /* Normal case: do the two words, low-numbered first.  */\n \n+  m68k_final_prescan_insn (NULL, operands, 2);\n   handle_movsi (operands);\n \n   /* Do the middle one of the three words for long double */\n@@ -3668,6 +3681,7 @@ handle_move_double (rtx operands[2],\n       if (addreg1)\n \thandle_reg_adjust (addreg1, 4);\n \n+      m68k_final_prescan_insn (NULL, middlehalf, 2);\n       handle_movsi (middlehalf);\n     }\n \n@@ -3678,6 +3692,7 @@ handle_move_double (rtx operands[2],\n     handle_reg_adjust (addreg1, 4);\n \n   /* Do that word.  */\n+  m68k_final_prescan_insn (NULL, latehalf, 2);\n   handle_movsi (latehalf);\n \n   /* Undo the adds we just did.  */"}, {"sha": "450c380359c43ce6dc4db9fb625083bf531bd96c", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -837,6 +837,9 @@ __transfer_from_trampoline ()\t\t\t\t\t\\\n   assemble_name ((FILE), (NAME)),\t\t\\\n   fprintf ((FILE), \",%u\\n\", (int)(ROUNDED)))\n \n+#define FINAL_PRESCAN_INSN(INSN, OPVEC, NOPERANDS) \\\n+  m68k_final_prescan_insn (INSN, OPVEC, NOPERANDS)\n+\n /* On the 68000, we use several CODE characters:\n    '.' for dot needed in Motorola-style opcode names.\n    '-' for an operand pushing on the stack:"}, {"sha": "2048346910525f8854c64d0d23d9553ce789fc2e", "filename": "gcc/config/mips/mips-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-protos.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -271,7 +271,7 @@ extern void mips_declare_object (FILE *, const char *, const char *,\n extern void mips_declare_object_name (FILE *, const char *, tree);\n extern void mips_finish_declare_object (FILE *, tree, int, int);\n extern void mips_set_text_contents_type (FILE *, const char *,\n-\t\t\t\t\t unsigned long, bool);\n+\t\t\t\t\t unsigned HOST_WIDE_INT, bool);\n \n extern bool mips_small_data_pattern_p (rtx);\n extern rtx mips_rewrite_small_data (rtx);"}, {"sha": "ca822758b41cac46cc3f01fd2200c69bfd35f479", "filename": "gcc/config/mips/mips.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fmips%2Fmips.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fmips%2Fmips.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -630,6 +630,7 @@ static const struct attribute_spec mips_attribute_table[] = {\n     mips_handle_use_shadow_register_set_attr, NULL },\n   { \"keep_interrupts_masked\",\t0, 0, false, true,  true, false, NULL, NULL },\n   { \"use_debug_exception_return\", 0, 0, false, true, true, false, NULL, NULL },\n+  { \"use_hazard_barrier_return\", 0, 0, true, false, false, false, NULL, NULL },\n   { NULL,\t   0, 0, false, false, false, false, NULL, NULL }\n };\n \f\n@@ -9922,7 +9923,7 @@ mips_finish_declare_object (FILE *stream, tree decl, int top_level, int at_end)\n void\n mips_set_text_contents_type (FILE *file ATTRIBUTE_UNUSED,\n \t\t\t     const char *prefix ATTRIBUTE_UNUSED,\n-\t\t\t     unsigned long num ATTRIBUTE_UNUSED,\n+\t\t\t     unsigned HOST_WIDE_INT num ATTRIBUTE_UNUSED,\n \t\t\t     bool function_p ATTRIBUTE_UNUSED)\n {\n #ifdef ASM_OUTPUT_TYPE_DIRECTIVE\n@@ -9931,7 +9932,7 @@ mips_set_text_contents_type (FILE *file ATTRIBUTE_UNUSED,\n   char *sname;\n   rtx symbol;\n \n-  sprintf (buf, \"%lu\", num);\n+  sprintf (buf, HOST_WIDE_INT_PRINT_UNSIGNED, num);\n   symbol = XEXP (DECL_RTL (current_function_decl), 0);\n   fnname = targetm.strip_name_encoding (XSTR (symbol, 0));\n   sname = ACONCAT ((prefix, fnname, \"_\", buf, NULL));"}, {"sha": "6daf6d37165bfdd878baa76059f6ae5464fa619d", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -916,7 +916,8 @@ struct mips_cpu_info {\n   {\"synci\", \"%{!msynci:%{!mno-synci:-m%(VALUE)}}\" },\t\t\t\\\n   {\"lxc1-sxc1\", \"%{!mlxc1-sxc1:%{!mno-lxc1-sxc1:-m%(VALUE)}}\" }, \\\n   {\"madd4\", \"%{!mmadd4:%{!mno-madd4:-m%(VALUE)}}\" }, \\\n-  {\"compact-branches\", \"%{!mcompact-branches=*:-mcompact-branches=%(VALUE)}\" } \\\n+  {\"compact-branches\", \"%{!mcompact-branches=*:-mcompact-branches=%(VALUE)}\" }, \\\n+  {\"msa\", \"%{!mmsa:%{!mno-msa:-m%(VALUE)}}\" } \\\n \n /* A spec that infers the:\n    -mnan=2008 setting from a -mips argument,\n@@ -3386,6 +3387,9 @@ struct GTY(())  machine_function {\n \n   /* True if GCC stored callee saved registers in the frame header.  */\n   bool use_frame_header_for_callee_saved_regs;\n+\n+  /* True if the function should generate hazard barrier return.  */\n+  bool use_hazard_barrier_return_p;\n };\n #endif\n "}, {"sha": "ac1d77afc7d126d43634a177ea57d75b35c2bd31", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -159,6 +159,7 @@\n \n   ;; The `.insn' pseudo-op.\n   UNSPEC_INSN_PSEUDO\n+  UNSPEC_JRHB\n ])\n \n (define_constants\n@@ -3165,6 +3166,15 @@\n   [(set_attr \"type\" \"clz\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n+\n+(define_insn \"*clo<mode>2\"\n+  [(set (match_operand:GPR 0 \"register_operand\" \"=d\")\n+\t(clz:GPR (not:GPR (match_operand:GPR 1 \"register_operand\" \"d\"))))]\n+  \"ISA_HAS_CLZ_CLO\"\n+  \"<d>clo\\t%0,%1\"\n+  [(set_attr \"type\" \"clz\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n ;;\n ;;  ...................\n ;;\n@@ -6670,6 +6680,20 @@\n   [(set_attr \"type\"\t\"jump\")\n    (set_attr \"mode\"\t\"none\")])\n \n+;; Insn to clear execution and instruction hazards while returning.\n+;; However, it doesn't clear hazards created by the insn in its delay slot.\n+;; Thus, explicitly place a nop in its delay slot.\n+\n+(define_insn \"mips_hb_return_internal\"\n+  [(return)\n+   (unspec_volatile [(match_operand 0 \"pmode_register_operand\" \"\")]\n+\t\t    UNSPEC_JRHB)]\n+  \"\"\n+  {\n+    return \"%(jr.hb\\t$31%/%)\";\n+  }\n+  [(set_attr \"insn_count\" \"2\")])\n+\n ;; Normal return.\n \n (define_insn \"<optab>_internal\""}, {"sha": "78e8e9813fdcedc299cf93fe6f83137e0c060417", "filename": "gcc/config/moxie/constraints.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fmoxie%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fmoxie%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmoxie%2Fconstraints.md?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -22,19 +22,19 @@\n ;; Constraints\n ;; -------------------------------------------------------------------------\n \n-(define_constraint \"A\"\n+(define_memory_constraint \"A\"\n   \"An absolute address.\"\n   (and (match_code \"mem\")\n        (ior (match_test \"GET_CODE (XEXP (op, 0)) == SYMBOL_REF\")\n \t    (match_test \"GET_CODE (XEXP (op, 0)) == LABEL_REF\")\n \t    (match_test \"GET_CODE (XEXP (op, 0)) == CONST\"))))\n \n-(define_constraint \"B\"\n+(define_memory_constraint \"B\"\n   \"An offset address.\"\n   (and (match_code \"mem\")\n        (match_test \"moxie_offset_address_p (op)\")))\n \n-(define_constraint \"W\"\n+(define_memory_constraint \"W\"\n   \"A register indirect memory operand.\"\n   (and (match_code \"mem\")\n        (match_test \"REG_P (XEXP (op, 0))"}, {"sha": "2132b6e48a3dd3f01af857a25c53fd3202992314", "filename": "gcc/config/moxie/moxie.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fmoxie%2Fmoxie.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fmoxie%2Fmoxie.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmoxie%2Fmoxie.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -616,9 +616,6 @@ moxie_legitimate_address_p (machine_mode mode ATTRIBUTE_UNUSED,\n #undef  TARGET_FUNCTION_ARG_ADVANCE\n #define TARGET_FUNCTION_ARG_ADVANCE\tmoxie_function_arg_advance\n \n-#undef TARGET_LRA_P\n-#define TARGET_LRA_P hook_bool_void_false\n-\n #undef  TARGET_ADDR_SPACE_LEGITIMATE_ADDRESS_P\n #define TARGET_ADDR_SPACE_LEGITIMATE_ADDRESS_P\tmoxie_legitimate_address_p\n "}, {"sha": "7aa591689ba87c1bb68730ea1d760ba6749c7ee8", "filename": "gcc/config/riscv/bitmanip.md", "status": "modified", "additions": 59, "deletions": 19, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Fbitmanip.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Fbitmanip.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Fbitmanip.md?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -185,11 +185,31 @@\n \n ;; ZBB extension.\n \n+(define_expand \"clzdi2\"\n+  [(set (match_operand:DI 0 \"register_operand\")\n+\t(clz:DI (match_operand:DI 1 \"register_operand\")))]\n+  \"TARGET_64BIT && (TARGET_ZBB || TARGET_XTHEADBB)\")\n+\n+(define_expand \"clzsi2\"\n+  [(set (match_operand:SI 0 \"register_operand\")\n+\t(clz:SI (match_operand:SI 1 \"register_operand\")))]\n+  \"TARGET_ZBB || (!TARGET_64BIT && TARGET_XTHEADBB)\")\n+\n+(define_expand \"ctz<mode>2\"\n+  [(set (match_operand:GPR 0 \"register_operand\")\n+\t(ctz:GPR (match_operand:GPR 1 \"register_operand\")))]\n+  \"TARGET_ZBB\")\n+\n+(define_expand \"popcount<mode>2\"\n+  [(set (match_operand:GPR 0 \"register_operand\")\n+\t(popcount:GPR (match_operand:GPR 1 \"register_operand\")))]\n+  \"TARGET_ZBB\")\n+\n (define_insn \"*<optab>_not<mode>\"\n   [(set (match_operand:X 0 \"register_operand\" \"=r\")\n         (bitmanip_bitwise:X (not:X (match_operand:X 1 \"register_operand\" \"r\"))\n                             (match_operand:X 2 \"register_operand\" \"r\")))]\n-  \"TARGET_ZBB\"\n+  \"TARGET_ZBB || TARGET_ZBKB\"\n   \"<insn>n\\t%0,%2,%1\"\n   [(set_attr \"type\" \"bitmanip\")\n    (set_attr \"mode\" \"<X:MODE>\")])\n@@ -203,20 +223,20 @@\n \t\t\t       (const_int 0)))\n \t\t(match_operand:DI 2 \"register_operand\")))\n    (clobber (match_operand:DI 3 \"register_operand\"))]\n-  \"TARGET_ZBB\"\n+  \"TARGET_ZBB || TARGET_ZBKB\"\n   [(set (match_dup 3) (ashiftrt:DI (match_dup 1) (const_int 63)))\n    (set (match_dup 0) (and:DI (not:DI (match_dup 3)) (match_dup 2)))])\n \n (define_insn \"*xor_not<mode>\"\n   [(set (match_operand:X 0 \"register_operand\" \"=r\")\n         (not:X (xor:X (match_operand:X 1 \"register_operand\" \"r\")\n                       (match_operand:X 2 \"register_operand\" \"r\"))))]\n-  \"TARGET_ZBB\"\n+  \"TARGET_ZBB || TARGET_ZBKB\"\n   \"xnor\\t%0,%1,%2\"\n   [(set_attr \"type\" \"bitmanip\")\n    (set_attr \"mode\" \"<X:MODE>\")])\n \n-(define_insn \"<bitmanip_optab>si2\"\n+(define_insn \"*<bitmanip_optab>si2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n         (clz_ctz_pcnt:SI (match_operand:SI 1 \"register_operand\" \"r\")))]\n   \"TARGET_ZBB\"\n@@ -233,7 +253,7 @@\n   [(set_attr \"type\" \"bitmanip\")\n    (set_attr \"mode\" \"SI\")])\n \n-(define_insn \"<bitmanip_optab>di2\"\n+(define_insn \"*<bitmanip_optab>di2\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n         (clz_ctz_pcnt:DI (match_operand:DI 1 \"register_operand\" \"r\")))]\n   \"TARGET_64BIT && TARGET_ZBB\"\n@@ -273,51 +293,61 @@\n   [(set_attr \"type\" \"bitmanip,load\")\n    (set_attr \"mode\" \"HI\")])\n \n-(define_insn \"rotrsi3\"\n+(define_expand \"rotr<mode>3\"\n+  [(set (match_operand:GPR 0 \"register_operand\")\n+\t(rotatert:GPR (match_operand:GPR 1 \"register_operand\")\n+\t\t     (match_operand:QI 2 \"arith_operand\")))]\n+  \"TARGET_ZBB || TARGET_XTHEADBB\"\n+{\n+  if (TARGET_XTHEADBB && !immediate_operand (operands[2], VOIDmode))\n+    FAIL;\n+})\n+\n+(define_insn \"*rotrsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(rotatert:SI (match_operand:SI 1 \"register_operand\" \"r\")\n \t\t     (match_operand:QI 2 \"arith_operand\" \"rI\")))]\n-  \"TARGET_ZBB\"\n+  \"TARGET_ZBB || TARGET_ZBKB\"\n   \"ror%i2%~\\t%0,%1,%2\"\n   [(set_attr \"type\" \"bitmanip\")])\n \n-(define_insn \"rotrdi3\"\n+(define_insn \"*rotrdi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(rotatert:DI (match_operand:DI 1 \"register_operand\" \"r\")\n \t\t     (match_operand:QI 2 \"arith_operand\" \"rI\")))]\n-  \"TARGET_64BIT && TARGET_ZBB\"\n+  \"TARGET_64BIT && (TARGET_ZBB || TARGET_ZBKB)\"\n   \"ror%i2\\t%0,%1,%2\"\n   [(set_attr \"type\" \"bitmanip\")])\n \n-(define_insn \"rotrsi3_sext\"\n+(define_insn \"*rotrsi3_sext\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(sign_extend:DI (rotatert:SI (match_operand:SI 1 \"register_operand\" \"r\")\n \t\t\t\t     (match_operand:QI 2 \"register_operand\" \"r\"))))]\n-  \"TARGET_64BIT && TARGET_ZBB\"\n+  \"TARGET_64BIT && (TARGET_ZBB || TARGET_ZBKB)\"\n   \"rorw\\t%0,%1,%2\"\n   [(set_attr \"type\" \"bitmanip\")])\n \n (define_insn \"rotlsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(rotate:SI (match_operand:SI 1 \"register_operand\" \"r\")\n \t\t   (match_operand:QI 2 \"register_operand\" \"r\")))]\n-  \"TARGET_ZBB\"\n+  \"TARGET_ZBB || TARGET_ZBKB\"\n   \"rol%~\\t%0,%1,%2\"\n   [(set_attr \"type\" \"bitmanip\")])\n \n (define_insn \"rotldi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(rotate:DI (match_operand:DI 1 \"register_operand\" \"r\")\n \t\t   (match_operand:QI 2 \"register_operand\" \"r\")))]\n-  \"TARGET_64BIT && TARGET_ZBB\"\n+  \"TARGET_64BIT && (TARGET_ZBB || TARGET_ZBKB)\"\n   \"rol\\t%0,%1,%2\"\n   [(set_attr \"type\" \"bitmanip\")])\n \n (define_insn \"rotlsi3_sext\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(sign_extend:DI (rotate:SI (match_operand:SI 1 \"register_operand\" \"r\")\n \t\t\t\t   (match_operand:QI 2 \"register_operand\" \"r\"))))]\n-  \"TARGET_64BIT && TARGET_ZBB\"\n+  \"TARGET_64BIT && (TARGET_ZBB || TARGET_ZBKB)\"\n   \"rolw\\t%0,%1,%2\"\n   [(set_attr \"type\" \"bitmanip\")])\n \n@@ -329,10 +359,20 @@\n   \"TARGET_ZBB\"\n   \"orc.b\\t%0,%1\")\n \n-(define_insn \"bswap<mode>2\"\n+(define_expand \"bswapdi2\"\n+  [(set (match_operand:DI 0 \"register_operand\")\n+\t(bswap:DI (match_operand:DI 1 \"register_operand\")))]\n+  \"TARGET_64BIT && (TARGET_ZBB || TARGET_XTHEADBB)\")\n+\n+(define_expand \"bswapsi2\"\n+  [(set (match_operand:SI 0 \"register_operand\")\n+\t(bswap:SI (match_operand:SI 1 \"register_operand\")))]\n+  \"(!TARGET_64BIT && TARGET_ZBB) || TARGET_XTHEADBB\")\n+\n+(define_insn \"*bswap<mode>2\"\n   [(set (match_operand:X 0 \"register_operand\" \"=r\")\n         (bswap:X (match_operand:X 1 \"register_operand\" \"r\")))]\n-  \"TARGET_ZBB\"\n+  \"TARGET_ZBB || TARGET_ZBKB\"\n   \"rev8\\t%0,%1\"\n   [(set_attr \"type\" \"bitmanip\")])\n \n@@ -363,9 +403,9 @@\n (define_insn \"<bitmanip_optab><mode>3\"\n   [(set (match_operand:X 0 \"register_operand\" \"=r\")\n         (bitmanip_minmax:X (match_operand:X 1 \"register_operand\" \"r\")\n-\t\t\t   (match_operand:X 2 \"register_operand\" \"r\")))]\n+\t\t\t   (match_operand:X 2 \"reg_or_0_operand\" \"rJ\")))]\n   \"TARGET_ZBB\"\n-  \"<bitmanip_insn>\\t%0,%1,%2\"\n+  \"<bitmanip_insn>\\t%0,%1,%z2\"\n   [(set_attr \"type\" \"bitmanip\")])\n \n ;; Optimize the common case of a SImode min/max against a constant\n@@ -442,7 +482,7 @@\n \t(ior:DI (sign_extend:DI (match_operand:SI 1 \"register_operand\" \"r\"))\n \t\t(match_operand 2 \"single_bit_mask_operand\" \"i\")))]\n   \"TARGET_ZBS && TARGET_64BIT\n-   && !partial_subreg_p (operands[2])\"\n+   && !partial_subreg_p (operands[1])\"\n   \"bseti\\t%0,%1,%S2\"\n   [(set_attr \"type\" \"bitmanip\")])\n "}, {"sha": "c448e6b37e93093b09e7c4e9a2108292e09de324", "filename": "gcc/config/riscv/constraints.md", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Fconstraints.md?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -83,6 +83,14 @@\n   (and (match_code \"const_int\")\n        (match_test \"SINGLE_BIT_MASK_OPERAND (~ival)\")))\n \n+(define_constraint \"D03\"\n+  \"0, 1, 2 or 3 immediate\"\n+  (match_test \"IN_RANGE (ival, 0, 3)\"))\n+\n+(define_constraint \"DsA\"\n+  \"0 - 10 immediate\"\n+  (match_test \"IN_RANGE (ival, 0, 10)\"))\n+\n ;; Floating-point constant +0.0, used for FCVT-based moves when FMV is\n ;; not available in RV32.\n (define_constraint \"G\"\n@@ -162,7 +170,21 @@\n  (and (match_code \"const_vector\")\n       (match_test \"op == CONSTM1_RTX (GET_MODE (op))\")))\n \n+(define_constraint \"Wb1\"\n+  \"@internal\n+ A constraint that matches a BOOL vector of {...,0,...0,1}\"\n+ (and (match_code \"const_vector\")\n+      (match_test \"rtx_equal_p (op, riscv_vector::gen_scalar_move_mask (GET_MODE (op)))\")))\n+\n (define_memory_constraint \"Wdm\"\n   \"Vector duplicate memory operand\"\n   (and (match_code \"mem\")\n        (match_code \"reg\" \"0\")))\n+\n+;; Vendor ISA extension constraints.\n+\n+(define_register_constraint \"th_f_fmv\" \"TARGET_XTHEADFMV ? FP_REGS : NO_REGS\"\n+  \"A floating-point register for XTheadFmv.\")\n+\n+(define_register_constraint \"th_r_fmv\" \"TARGET_XTHEADFMV ? GR_REGS : NO_REGS\"\n+  \"An integer register for XTheadFmv.\")"}, {"sha": "777aa529005fcb575a2f458b088b96f1227edbb5", "filename": "gcc/config/riscv/crypto.md", "status": "added", "additions": 435, "deletions": 0, "changes": 435, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Fcrypto.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Fcrypto.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Fcrypto.md?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -0,0 +1,435 @@\n+;; Machine description for RISC-V Scalar Cryptography extensions.\n+;; Copyright (C) 2023 Free Software Foundation, Inc.\n+\n+;; This file is part of GCC.\n+\n+;; GCC is free software; you can redistribute it and/or modify\n+;; it under the terms of the GNU General Public License as published by\n+;; the Free Software Foundation; either version 3, or (at your option)\n+;; any later version.\n+\n+;; GCC is distributed in the hope that it will be useful,\n+;; but WITHOUT ANY WARRANTY; without even the implied warranty of\n+;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+;; GNU General Public License for more details.\n+\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING3.  If not see\n+;; <http://www.gnu.org/licenses/>.\n+\n+(define_c_enum \"unspec\" [\n+    ;; Zbkb unspecs\n+    UNSPEC_BREV8\n+    UNSPEC_ZIP\n+    UNSPEC_UNZIP\n+    UNSPEC_PACK\n+    UNSPEC_PACKH\n+    UNSPEC_PACKW\n+\n+    ;; Zbkc unspecs\n+    UNSPEC_CLMUL\n+    UNSPEC_CLMULH\n+\n+    ;; Zbkx unspecs\n+    UNSPEC_XPERM8\n+    UNSPEC_XPERM4\n+\n+    ;; Zknd unspecs\n+    UNSPEC_AES_DSI\n+    UNSPEC_AES_DSMI\n+    UNSPEC_AES_DS\n+    UNSPEC_AES_DSM\n+    UNSPEC_AES_IM\n+    UNSPEC_AES_KS1I\n+    UNSPEC_AES_KS2\n+\n+    ;; Zkne unspecs\n+    UNSPEC_AES_ES\n+    UNSPEC_AES_ESM\n+    UNSPEC_AES_ESI\n+    UNSPEC_AES_ESMI\n+\n+    ;; Zknh unspecs\n+    UNSPEC_SHA_256_SIG0\n+    UNSPEC_SHA_256_SIG1\n+    UNSPEC_SHA_256_SUM0\n+    UNSPEC_SHA_256_SUM1\n+    UNSPEC_SHA_512_SIG0\n+    UNSPEC_SHA_512_SIG0H\n+    UNSPEC_SHA_512_SIG0L\n+    UNSPEC_SHA_512_SIG1\n+    UNSPEC_SHA_512_SIG1H\n+    UNSPEC_SHA_512_SIG1L\n+    UNSPEC_SHA_512_SUM0\n+    UNSPEC_SHA_512_SUM0R\n+    UNSPEC_SHA_512_SUM1\n+    UNSPEC_SHA_512_SUM1R\n+\n+    ;; Zksh unspecs\n+    UNSPEC_SM3_P0\n+    UNSPEC_SM3_P1\n+\n+    ;; Zksed unspecs\n+    UNSPEC_SM4_ED\n+    UNSPEC_SM4_KS\n+])\n+\n+;; ZBKB extension\n+(define_insn \"riscv_brev8_<mode>\"\n+  [(set (match_operand:X 0 \"register_operand\" \"=r\")\n+        (unspec:X [(match_operand:X 1 \"register_operand\" \"r\")]\n+                  UNSPEC_BREV8))]\n+  \"TARGET_ZBKB\"\n+  \"brev8\\t%0,%1\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+(define_insn \"riscv_zip\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+        (unspec:SI [(match_operand:SI 1 \"register_operand\" \"r\")]\n+                  UNSPEC_ZIP))]\n+  \"TARGET_ZBKB && !TARGET_64BIT\"\n+  \"zip\\t%0,%1\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+(define_insn \"riscv_unzip\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+        (unspec:SI [(match_operand:SI 1 \"register_operand\" \"r\")]\n+                  UNSPEC_UNZIP))]\n+  \"TARGET_ZBKB && !TARGET_64BIT\"\n+  \"unzip\\t%0,%1\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+(define_insn \"riscv_pack_<X:mode><HISI:mode>\"\n+  [(set (match_operand:X 0 \"register_operand\" \"=r\")\n+        (unspec:X [(match_operand:HISI 1 \"register_operand\" \"r\")\n+                  (match_operand:HISI 2 \"register_operand\" \"r\")]\n+                  UNSPEC_PACK))]\n+  \"TARGET_ZBKB\"\n+  \"pack\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+(define_insn \"riscv_packh_<mode>\"\n+  [(set (match_operand:X 0 \"register_operand\" \"=r\")\n+        (unspec:X [(match_operand:QI 1 \"register_operand\" \"r\")\n+                  (match_operand:QI 2 \"register_operand\" \"r\")]\n+                  UNSPEC_PACKH))]\n+  \"TARGET_ZBKB\"\n+  \"packh\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+(define_insn \"riscv_packw\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+        (unspec:DI [(match_operand:HI 1 \"register_operand\" \"r\")\n+                  (match_operand:HI 2 \"register_operand\" \"r\")]\n+                  UNSPEC_PACKW))]\n+  \"TARGET_ZBKB && TARGET_64BIT\"\n+  \"packw\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+;; ZBKC extension\n+\n+(define_insn \"riscv_clmul_<mode>\"\n+  [(set (match_operand:X 0 \"register_operand\" \"=r\")\n+        (unspec:X [(match_operand:X 1 \"register_operand\" \"r\")\n+                  (match_operand:X 2 \"register_operand\" \"r\")]\n+                  UNSPEC_CLMUL))]\n+  \"TARGET_ZBKC\"\n+  \"clmul\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+(define_insn \"riscv_clmulh_<mode>\"\n+  [(set (match_operand:X 0 \"register_operand\" \"=r\")\n+        (unspec:X [(match_operand:X 1 \"register_operand\" \"r\")\n+                  (match_operand:X 2 \"register_operand\" \"r\")]\n+                  UNSPEC_CLMULH))]\n+  \"TARGET_ZBKC\"\n+  \"clmulh\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+;; ZBKX extension\n+\n+(define_insn \"riscv_xperm4_<mode>\"\n+  [(set (match_operand:X 0 \"register_operand\" \"=r\")\n+        (unspec:X [(match_operand:X 1 \"register_operand\" \"r\")\n+                  (match_operand:X 2 \"register_operand\" \"r\")]\n+                  UNSPEC_XPERM4))]\n+  \"TARGET_ZBKX\"\n+  \"xperm4\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+(define_insn \"riscv_xperm8_<mode>\"\n+  [(set (match_operand:X 0 \"register_operand\" \"=r\")\n+        (unspec:X [(match_operand:X 1 \"register_operand\" \"r\")\n+                  (match_operand:X 2 \"register_operand\" \"r\")]\n+                  UNSPEC_XPERM8))]\n+  \"TARGET_ZBKX\"\n+  \"xperm8\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+;; ZKND extension\n+\n+(define_insn \"riscv_aes32dsi\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+        (unspec:SI [(match_operand:SI 1 \"register_operand\" \"r\")\n+                   (match_operand:SI 2 \"register_operand\" \"r\")\n+                   (match_operand:SI 3 \"register_operand\" \"D03\")]\n+                   UNSPEC_AES_DSI))]\n+  \"TARGET_ZKND && !TARGET_64BIT\"\n+  \"aes32dsi\\t%0,%1,%2,%3\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+(define_insn \"riscv_aes32dsmi\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+        (unspec:SI [(match_operand:SI 1 \"register_operand\" \"r\")\n+                   (match_operand:SI 2 \"register_operand\" \"r\")\n+                   (match_operand:SI 3 \"register_operand\" \"D03\")]\n+                   UNSPEC_AES_DSMI))]\n+  \"TARGET_ZKND && !TARGET_64BIT\"\n+  \"aes32dsmi\\t%0,%1,%2,%3\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+(define_insn \"riscv_aes64ds\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+        (unspec:DI [(match_operand:DI 1 \"register_operand\" \"r\")\n+                   (match_operand:DI 2 \"register_operand\" \"r\")]\n+                   UNSPEC_AES_DS))]\n+  \"TARGET_ZKND && TARGET_64BIT\"\n+  \"aes64ds\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+(define_insn \"riscv_aes64dsm\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+        (unspec:DI [(match_operand:DI 1 \"register_operand\" \"r\")\n+                   (match_operand:DI 2 \"register_operand\" \"r\")]\n+                   UNSPEC_AES_DSM))]\n+  \"TARGET_ZKND && TARGET_64BIT\"\n+  \"aes64dsm\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+(define_insn \"riscv_aes64im\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+        (unspec:DI [(match_operand:DI 1 \"register_operand\" \"r\")]\n+                   UNSPEC_AES_IM))]\n+  \"TARGET_ZKND && TARGET_64BIT\"\n+  \"aes64im\\t%0,%1\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+(define_insn \"riscv_aes64ks1i\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+        (unspec:DI [(match_operand:DI 1 \"register_operand\" \"r\")\n+                   (match_operand:SI 2 \"register_operand\" \"DsA\")]\n+                   UNSPEC_AES_KS1I))]\n+  \"(TARGET_ZKND || TARGET_ZKNE) && TARGET_64BIT\"\n+  \"aes64ks1i\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+(define_insn \"riscv_aes64ks2\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+        (unspec:DI [(match_operand:DI 1 \"register_operand\" \"r\")\n+                   (match_operand:DI 2 \"register_operand\" \"r\")]\n+                   UNSPEC_AES_KS2))]\n+  \"(TARGET_ZKND || TARGET_ZKNE) && TARGET_64BIT\"\n+  \"aes64ks2\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+;; ZKNE extension\n+\n+(define_insn \"riscv_aes32esi\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+        (unspec:SI [(match_operand:SI 1 \"register_operand\" \"r\")\n+                   (match_operand:SI 2 \"register_operand\" \"r\")\n+                   (match_operand:SI 3 \"register_operand\" \"D03\")]\n+                   UNSPEC_AES_ESI))]\n+  \"TARGET_ZKNE && !TARGET_64BIT\"\n+  \"aes32esi\\t%0,%1,%2,%3\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+(define_insn \"riscv_aes32esmi\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+        (unspec:SI [(match_operand:SI 1 \"register_operand\" \"r\")\n+                   (match_operand:SI 2 \"register_operand\" \"r\")\n+                   (match_operand:SI 3 \"register_operand\" \"D03\")]\n+                   UNSPEC_AES_ESMI))]\n+  \"TARGET_ZKNE && !TARGET_64BIT\"\n+  \"aes32esmi\\t%0,%1,%2,%3\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+(define_insn \"riscv_aes64es\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+        (unspec:DI [(match_operand:DI 1 \"register_operand\" \"r\")\n+                   (match_operand:DI 2 \"register_operand\" \"r\")]\n+                   UNSPEC_AES_ES))]\n+  \"TARGET_ZKNE && TARGET_64BIT\"\n+  \"aes64es\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+(define_insn \"riscv_aes64esm\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+        (unspec:DI [(match_operand:DI 1 \"register_operand\" \"r\")\n+                   (match_operand:DI 2 \"register_operand\" \"r\")]\n+                   UNSPEC_AES_ESM))]\n+  \"TARGET_ZKNE && TARGET_64BIT\"\n+  \"aes64esm\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+;; ZKNH - SHA256\n+\n+(define_insn \"riscv_sha256sig0_<mode>\"\n+  [(set (match_operand:X 0 \"register_operand\" \"=r\")\n+        (unspec:X [(match_operand:X 1 \"register_operand\" \"r\")]\n+                  UNSPEC_SHA_256_SIG0))]\n+  \"TARGET_ZKNH\"\n+  \"sha256sig0\\t%0,%1\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+(define_insn \"riscv_sha256sig1_<mode>\"\n+  [(set (match_operand:X 0 \"register_operand\" \"=r\")\n+        (unspec:X [(match_operand:X 1 \"register_operand\" \"r\")]\n+                  UNSPEC_SHA_256_SIG1))]\n+  \"TARGET_ZKNH\"\n+  \"sha256sig1\\t%0,%1\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+(define_insn \"riscv_sha256sum0_<mode>\"\n+  [(set (match_operand:X 0 \"register_operand\" \"=r\")\n+        (unspec:X [(match_operand:X 1 \"register_operand\" \"r\")]\n+                  UNSPEC_SHA_256_SUM0))]\n+  \"TARGET_ZKNH\"\n+  \"sha256sum0\\t%0,%1\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+(define_insn \"riscv_sha256sum1_<mode>\"\n+  [(set (match_operand:X 0 \"register_operand\" \"=r\")\n+        (unspec:X [(match_operand:X 1 \"register_operand\" \"r\")]\n+                  UNSPEC_SHA_256_SUM1))]\n+  \"TARGET_ZKNH\"\n+  \"sha256sum1\\t%0,%1\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+;; ZKNH - SHA512\n+\n+(define_insn \"riscv_sha512sig0h\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+        (unspec:SI [(match_operand:SI 1 \"register_operand\" \"r\")\n+                   (match_operand:SI 2 \"register_operand\" \"r\")]\n+                   UNSPEC_SHA_512_SIG0H))]\n+  \"TARGET_ZKNH && !TARGET_64BIT\"\n+  \"sha512sig0h\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+(define_insn \"riscv_sha512sig0l\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+        (unspec:SI [(match_operand:SI 1 \"register_operand\" \"r\")\n+                   (match_operand:SI 2 \"register_operand\" \"r\")]\n+                   UNSPEC_SHA_512_SIG0L))]\n+  \"TARGET_ZKNH && !TARGET_64BIT\"\n+  \"sha512sig0l\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+(define_insn \"riscv_sha512sig1h\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+        (unspec:SI [(match_operand:SI 1 \"register_operand\" \"r\")\n+                   (match_operand:SI 2 \"register_operand\" \"r\")]\n+                   UNSPEC_SHA_512_SIG1H))]\n+  \"TARGET_ZKNH && !TARGET_64BIT\"\n+  \"sha512sig1h\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+(define_insn \"riscv_sha512sig1l\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+        (unspec:SI [(match_operand:SI 1 \"register_operand\" \"r\")\n+                   (match_operand:SI 2 \"register_operand\" \"r\")]\n+                   UNSPEC_SHA_512_SIG1L))]\n+  \"TARGET_ZKNH && !TARGET_64BIT\"\n+  \"sha512sig1l\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+(define_insn \"riscv_sha512sum0r\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+        (unspec:SI [(match_operand:SI 1 \"register_operand\" \"r\")\n+                   (match_operand:SI 2 \"register_operand\" \"r\")]\n+                   UNSPEC_SHA_512_SUM0R))]\n+  \"TARGET_ZKNH && !TARGET_64BIT\"\n+  \"sha512sum0r\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+(define_insn \"riscv_sha512sum1r\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+        (unspec:SI [(match_operand:SI 1 \"register_operand\" \"r\")\n+                   (match_operand:SI 2 \"register_operand\" \"r\")]\n+                   UNSPEC_SHA_512_SUM1R))]\n+  \"TARGET_ZKNH && !TARGET_64BIT\"\n+  \"sha512sum1r\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+(define_insn \"riscv_sha512sig0\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+        (unspec:DI [(match_operand:DI 1 \"register_operand\" \"r\")]\n+                   UNSPEC_SHA_512_SIG0))]\n+  \"TARGET_ZKNH && TARGET_64BIT\"\n+  \"sha512sig0\\t%0,%1\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+(define_insn \"riscv_sha512sig1\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+        (unspec:DI [(match_operand:DI 1 \"register_operand\" \"r\")]\n+                   UNSPEC_SHA_512_SIG1))]\n+  \"TARGET_ZKNH && TARGET_64BIT\"\n+  \"sha512sig1\\t%0,%1\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+(define_insn \"riscv_sha512sum0\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+        (unspec:DI [(match_operand:DI 1 \"register_operand\" \"r\")]\n+                   UNSPEC_SHA_512_SUM0))]\n+  \"TARGET_ZKNH && TARGET_64BIT\"\n+  \"sha512sum0\\t%0,%1\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+(define_insn \"riscv_sha512sum1\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+        (unspec:DI [(match_operand:DI 1 \"register_operand\" \"r\")]\n+                   UNSPEC_SHA_512_SUM1))]\n+  \"TARGET_ZKNH && TARGET_64BIT\"\n+  \"sha512sum1\\t%0,%1\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+ ;; ZKSH\n+\n+(define_insn \"riscv_sm3p0_<mode>\"\n+  [(set (match_operand:X 0 \"register_operand\" \"=r\")\n+        (unspec:X [(match_operand:X 1 \"register_operand\" \"r\")]\n+                  UNSPEC_SM3_P0))]\n+  \"TARGET_ZKSH\"\n+  \"sm3p0\\t%0,%1\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+(define_insn \"riscv_sm3p1_<mode>\"\n+  [(set (match_operand:X 0 \"register_operand\" \"=r\")\n+        (unspec:X [(match_operand:X 1 \"register_operand\" \"r\")]\n+                  UNSPEC_SM3_P1))]\n+  \"TARGET_ZKSH\"\n+  \"sm3p1\\t%0,%1\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+;; ZKSED\n+\n+(define_insn \"riscv_sm4ed_<mode>\"\n+  [(set (match_operand:X 0 \"register_operand\" \"=r\")\n+        (unspec:X [(match_operand:X 1 \"register_operand\" \"r\")\n+                  (match_operand:X 2 \"register_operand\" \"r\")\n+                  (match_operand:SI 3 \"register_operand\" \"D03\")]\n+                  UNSPEC_SM4_ED))]\n+  \"TARGET_ZKSED\"\n+  \"sm4ed\\t%0,%1,%2,%3\"\n+  [(set_attr \"type\" \"crypto\")])\n+\n+(define_insn \"riscv_sm4ks_<mode>\"\n+  [(set (match_operand:X 0 \"register_operand\" \"=r\")\n+        (unspec:X [(match_operand:X 1 \"register_operand\" \"r\")\n+                  (match_operand:X 2 \"register_operand\" \"r\")\n+                  (match_operand:SI 3 \"register_operand\" \"D03\")]\n+                  UNSPEC_SM4_KS))]\n+  \"TARGET_ZKSED\"\n+  \"sm4ks\\t%0,%1,%2,%3\"\n+  [(set_attr \"type\" \"crypto\")])"}, {"sha": "e677b55290c68193872ad8f169b25d2e4a890943", "filename": "gcc/config/riscv/genrvv-type-indexer.cc", "status": "added", "additions": 313, "deletions": 0, "changes": 313, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Fgenrvv-type-indexer.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Fgenrvv-type-indexer.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Fgenrvv-type-indexer.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -0,0 +1,313 @@\n+/* Generate the RVV type indexer tables.\n+   Copyright (C) 2023-2023 Free Software Foundation, Inc.\n+This file is part of GCC.\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"bconfig.h\"\n+#define INCLUDE_SSTREAM\n+#include \"system.h\"\n+#include \"errors.h\"\n+\n+#include \"coretypes.h\"\n+\n+#include <assert.h>\n+#include <math.h>\n+\n+std::string\n+to_lmul (int lmul_log2)\n+{\n+  std::stringstream lmul_str;\n+  if (lmul_log2 >= 0)\n+    lmul_str << \"m\";\n+  else\n+    {\n+      lmul_str << \"mf\";\n+      lmul_log2 = -lmul_log2;\n+    }\n+\n+  lmul_str << (1 << lmul_log2);\n+  return lmul_str.str ();\n+}\n+\n+bool\n+valid_type (unsigned sew, int lmul_log2, bool float_p)\n+{\n+  if (lmul_log2 > 3)\n+    return false;\n+\n+  switch (sew)\n+    {\n+    case 8:\n+      return lmul_log2 >= -3 && !float_p;\n+    case 16:\n+      return lmul_log2 >= -2 && !float_p;\n+    case 32:\n+      return lmul_log2 >= -1;\n+    case 64:\n+      return lmul_log2 >= 0;\n+    default:\n+      return false;\n+    }\n+}\n+\n+std::string\n+inttype (unsigned sew, int lmul_log2, bool unsigned_p)\n+{\n+  if (!valid_type (sew, lmul_log2, /*float_t*/ false))\n+    return \"INVALID\";\n+\n+  std::stringstream mode;\n+  mode << \"v\";\n+  if (unsigned_p)\n+    mode << \"u\";\n+  mode << \"int\" << sew << to_lmul (lmul_log2) << \"_t\";\n+  return mode.str ();\n+}\n+\n+std::string\n+floattype (unsigned sew, int lmul_log2)\n+{\n+  if (!valid_type (sew, lmul_log2, /*float_t*/ true))\n+    return \"INVALID\";\n+\n+  std::stringstream mode;\n+  mode << \"vfloat\" << sew << to_lmul (lmul_log2) << \"_t\";\n+  return mode.str ();\n+}\n+\n+std::string\n+maskmode (unsigned sew, int lmul_log2)\n+{\n+  if (!valid_type (sew, lmul_log2, /*float_t*/ false))\n+    return \"INVALID\";\n+\n+  std::stringstream mode;\n+\n+  int mlen;\n+  if (lmul_log2 >= 0)\n+    mlen = sew / (1 << lmul_log2);\n+  else\n+    mlen = sew * (1 << -lmul_log2);\n+\n+  mode << \"vbool\" << mlen << \"_t\";\n+  return mode.str ();\n+}\n+\n+std::string\n+same_ratio_eew_type (unsigned sew, int lmul_log2, unsigned eew, bool unsigned_p,\n+\t\t     bool float_p)\n+{\n+  if (!valid_type (sew, lmul_log2, float_p))\n+    return \"INVALID\";\n+\n+  int elmul_log2;\n+\n+  if (sew == eew)\n+    elmul_log2 = lmul_log2;\n+  else if (sew > eew)\n+    elmul_log2 = lmul_log2 - std::log2 (sew / eew);\n+  else /* sew < eew */\n+    elmul_log2 = lmul_log2 + std::log2 (eew / sew);\n+\n+  if (float_p)\n+    return floattype (eew, elmul_log2);\n+  else\n+    return inttype (eew, elmul_log2, unsigned_p);\n+}\n+\n+int\n+main (int argc, const char **argv)\n+{\n+  // Require at least one argument.\n+  if (argc < 2)\n+    return 1;\n+\n+  FILE *fp = fopen (argv[1], \"w\");\n+\n+  if (!fp)\n+    return 1;\n+\n+  fprintf (fp, \"/* Generated by genrvv-type-indexer */\\n\");\n+\n+  for (unsigned vbool : {64, 32, 16, 8, 4, 2, 1})\n+    {\n+      std::stringstream mode;\n+      mode << \"vbool\" << vbool << \"_t\";\n+      fprintf (fp, \"DEF_RVV_TYPE_INDEX (\\n\");\n+      fprintf (fp, \"  /*VECTOR*/ %s,\\n\", mode.str ().c_str ());\n+      fprintf (fp, \"  /*MASK*/ %s,\\n\", mode.str ().c_str ());\n+      fprintf (fp, \"  /*SIGNED*/ INVALID,\\n\");\n+      fprintf (fp, \"  /*UNSIGNED*/ INVALID,\\n\");\n+      for (unsigned eew : {8, 16, 32, 64})\n+\tfprintf (fp, \"  /*EEW%d_INDEX*/ INVALID,\\n\", eew);\n+      fprintf (fp, \"  /*SHIFT*/ INVALID,\\n\");\n+      fprintf (fp, \"  /*DOUBLE_TRUNC*/ INVALID,\\n\");\n+      fprintf (fp, \"  /*QUAD_TRUNC*/ INVALID,\\n\");\n+      fprintf (fp, \"  /*OCT_TRUNC*/ INVALID,\\n\");\n+      fprintf (fp, \"  /*DOUBLE_TRUNC_SCALAR*/ INVALID,\\n\");\n+      fprintf (fp, \"  /*DOUBLE_TRUNC_SIGNED*/ INVALID,\\n\");\n+      fprintf (fp, \"  /*DOUBLE_TRUNC_UNSIGNED*/ INVALID,\\n\");\n+      fprintf (fp, \"  /*DOUBLE_TRUNC_UNSIGNED_SCALAR*/ INVALID,\\n\");\n+      fprintf (fp, \"  /*DOUBLE_TRUNC_FLOAT*/ INVALID,\\n\");\n+      fprintf (fp, \"  /*FLOAT*/ INVALID,\\n\");\n+      fprintf (fp, \"  /*LMUL1*/ INVALID,\\n\");\n+      fprintf (fp, \"  /*WLMUL1*/ INVALID,\\n\");\n+      for (unsigned eew : {8, 16, 32, 64})\n+\tfprintf (fp, \"  /*EEW%d_INTERPRET*/ INVALID,\\n\", eew);\n+\n+      for (unsigned lmul_log2_offset : {1, 2, 3, 4, 5, 6})\n+\t{\n+\t  unsigned multiple_of_lmul = 1 << lmul_log2_offset;\n+\t  const char *comma = lmul_log2_offset == 6 ? \"\" : \",\";\n+\t  fprintf (fp, \"  /*X%d_INTERPRET*/ INVALID%s\\n\", multiple_of_lmul,\n+\t\t   comma);\n+\t}\n+      fprintf (fp, \")\\n\");\n+    }\n+\n+  // Build for vint and vuint\n+  for (unsigned sew : {8, 16, 32, 64})\n+    for (int lmul_log2 : {-3, -2, -1, 0, 1, 2, 3})\n+      for (bool unsigned_p : {false, true})\n+\t{\n+\t  if (!valid_type (sew, lmul_log2, /*float_t*/ false))\n+\t    continue;\n+\n+\t  fprintf (fp, \"DEF_RVV_TYPE_INDEX (\\n\");\n+\t  fprintf (fp, \"  /*VECTOR*/ %s,\\n\",\n+\t\t   inttype (sew, lmul_log2, unsigned_p).c_str ());\n+\t  fprintf (fp, \"  /*MASK*/ %s,\\n\", maskmode (sew, lmul_log2).c_str ());\n+\t  fprintf (fp, \"  /*SIGNED*/ %s,\\n\",\n+\t\t   inttype (sew, lmul_log2, /*unsigned_p*/ false).c_str ());\n+\t  fprintf (fp, \"  /*UNSIGNED*/ %s,\\n\",\n+\t\t   inttype (sew, lmul_log2, /*unsigned_p*/ true).c_str ());\n+\t  for (unsigned eew : {8, 16, 32, 64})\n+\t    fprintf (fp, \"  /*EEW%d_INDEX*/ %s,\\n\", eew,\n+\t\t     same_ratio_eew_type (sew, lmul_log2, eew,\n+\t\t\t\t\t  /*unsigned_p*/ true, false)\n+\t\t       .c_str ());\n+\t  fprintf (fp, \"  /*SHIFT*/ %s,\\n\",\n+\t\t   inttype (sew, lmul_log2, /*unsigned_p*/ true).c_str ());\n+\t  fprintf (fp, \"  /*DOUBLE_TRUNC*/ %s,\\n\",\n+\t\t   same_ratio_eew_type (sew, lmul_log2, sew / 2, unsigned_p,\n+\t\t\t\t\tfalse)\n+\t\t     .c_str ());\n+\t  fprintf (fp, \"  /*QUAD_TRUNC*/ %s,\\n\",\n+\t\t   same_ratio_eew_type (sew, lmul_log2, sew / 4, unsigned_p,\n+\t\t\t\t\tfalse)\n+\t\t     .c_str ());\n+\t  fprintf (fp, \"  /*OCT_TRUNC*/ %s,\\n\",\n+\t\t   same_ratio_eew_type (sew, lmul_log2, sew / 8, unsigned_p,\n+\t\t\t\t\tfalse)\n+\t\t     .c_str ());\n+\t  fprintf (fp, \"  /*DOUBLE_TRUNC_SCALAR*/ %s,\\n\",\n+\t\t   same_ratio_eew_type (sew, lmul_log2, sew / 2, unsigned_p,\n+\t\t\t\t\tfalse)\n+\t\t     .c_str ());\n+\t  fprintf (fp, \"  /*DOUBLE_TRUNC_SIGNED*/ INVALID,\\n\");\n+\t  fprintf (fp, \"  /*DOUBLE_TRUNC_UNSIGNED*/ %s,\\n\",\n+\t\t   same_ratio_eew_type (sew, lmul_log2, sew / 2, true, false)\n+\t\t     .c_str ());\n+\t  if (unsigned_p)\n+\t    fprintf (fp, \"  /*DOUBLE_TRUNC_UNSIGNED_SCALAR*/ INVALID,\\n\");\n+\t  else\n+\t    fprintf (fp, \"  /*DOUBLE_TRUNC_UNSIGNED_SCALAR*/ %s,\\n\",\n+\t\t     same_ratio_eew_type (sew, lmul_log2, sew / 2, true, false)\n+\t\t       .c_str ());\n+\t  fprintf (fp, \"  /*DOUBLE_TRUNC_FLOAT*/ %s,\\n\",\n+\t\t   same_ratio_eew_type (sew, lmul_log2, sew / 2, false, true)\n+\t\t     .c_str ());\n+\t  fprintf (fp, \"  /*FLOAT*/ %s,\\n\",\n+\t\t   floattype (sew, lmul_log2).c_str ());\n+\t  fprintf (fp, \"  /*LMUL1*/ %s,\\n\",\n+\t\t   inttype (sew, /*lmul_log2*/ 0, unsigned_p).c_str ());\n+\t  fprintf (fp, \"  /*WLMUL1*/ %s,\\n\",\n+\t\t   inttype (sew * 2, /*lmul_log2*/ 0, unsigned_p).c_str ());\n+\t  for (unsigned eew : {8, 16, 32, 64})\n+\t    {\n+\t      if (eew == sew)\n+\t\tfprintf (fp, \"  /*EEW%d_INTERPRET*/ INVALID,\\n\", eew);\n+\t      else\n+\t\tfprintf (fp, \"  /*EEW%d_INTERPRET*/ %s,\\n\", eew,\n+\t\t\t inttype (eew, lmul_log2, unsigned_p).c_str ());\n+\t    }\n+\n+\t  for (unsigned lmul_log2_offset : {1, 2, 3, 4, 5, 6})\n+\t    {\n+\t      unsigned multiple_of_lmul = 1 << lmul_log2_offset;\n+\t      const char *comma = lmul_log2_offset == 6 ? \"\" : \",\";\n+\t      fprintf (fp, \"  /*X%d_VLMUL_EXT*/ %s%s\\n\", multiple_of_lmul,\n+\t\t       inttype (sew, lmul_log2 + lmul_log2_offset, unsigned_p)\n+\t\t\t .c_str (),\n+\t\t       comma);\n+\t    }\n+\t  fprintf (fp, \")\\n\");\n+\t}\n+  // Build for vfloat\n+  for (unsigned sew : {32, 64})\n+    for (int lmul_log2 : {-3, -2, -1, 0, 1, 2, 3})\n+      {\n+\tif (!valid_type (sew, lmul_log2, /*float_t*/ true))\n+\t  continue;\n+\n+\tfprintf (fp, \"DEF_RVV_TYPE_INDEX (\\n\");\n+\tfprintf (fp, \"  /*VECTOR*/ %s,\\n\", floattype (sew, lmul_log2).c_str ());\n+\tfprintf (fp, \"  /*MASK*/ %s,\\n\", maskmode (sew, lmul_log2).c_str ());\n+\tfprintf (fp, \"  /*SIGNED*/ %s,\\n\",\n+\t\t inttype (sew, lmul_log2, /*unsigned_p*/ false).c_str ());\n+\tfprintf (fp, \"  /*UNSIGNED*/ %s,\\n\",\n+\t\t inttype (sew, lmul_log2, /*unsigned_p*/ true).c_str ());\n+\tfor (unsigned eew : {8, 16, 32, 64})\n+\t  fprintf (fp, \"  /*EEW%d_INDEX*/ %s,\\n\", eew,\n+\t\t   same_ratio_eew_type (sew, lmul_log2, eew,\n+\t\t\t\t\t/*unsigned_p*/ true, false)\n+\t\t     .c_str ());\n+\tfprintf (fp, \"  /*SHIFT*/ INVALID,\\n\");\n+\tfprintf (\n+\t  fp, \"  /*DOUBLE_TRUNC*/ %s,\\n\",\n+\t  same_ratio_eew_type (sew, lmul_log2, sew / 2, false, true).c_str ());\n+\tfprintf (fp, \"  /*QUAD_TRUNC*/ INVALID,\\n\");\n+\tfprintf (fp, \"  /*OCT_TRUNC*/ INVALID,\\n\");\n+\tfprintf (\n+\t  fp, \"  /*DOUBLE_TRUNC_SCALAR*/ %s,\\n\",\n+\t  same_ratio_eew_type (sew, lmul_log2, sew / 2, false, true).c_str ());\n+\tfprintf (\n+\t  fp, \"  /*DOUBLE_TRUNC_SIGNED*/ %s,\\n\",\n+\t  same_ratio_eew_type (sew, lmul_log2, sew / 2, false, false).c_str ());\n+\tfprintf (\n+\t  fp, \"  /*DOUBLE_TRUNC_UNSIGNED*/ %s,\\n\",\n+\t  same_ratio_eew_type (sew, lmul_log2, sew / 2, true, false).c_str ());\n+\tfprintf (fp, \"  /*DOUBLE_TRUNC_UNSIGNED_SCALAR*/ INVALID,\\n\");\n+\tfprintf (\n+\t  fp, \"  /*DOUBLE_TRUNC_FLOAT*/ %s,\\n\",\n+\t  same_ratio_eew_type (sew, lmul_log2, sew / 2, false, true).c_str ());\n+\tfprintf (fp, \"  /*FLOAT*/ INVALID,\\n\");\n+\tfprintf (fp, \"  /*LMUL1*/ %s,\\n\",\n+\t\t floattype (sew, /*lmul_log2*/ 0).c_str ());\n+\tfprintf (fp, \"  /*WLMUL1*/ %s,\\n\",\n+\t\t floattype (sew * 2, /*lmul_log2*/ 0).c_str ());\n+\tfor (unsigned eew : {8, 16, 32, 64})\n+\t  fprintf (fp, \"  /*EEW%d_INTERPRET*/ INVALID,\\n\", eew);\n+\tfor (unsigned lmul_log2_offset : {1, 2, 3, 4, 5, 6})\n+\t  {\n+\t    unsigned multiple_of_lmul = 1 << lmul_log2_offset;\n+\t    const char *comma = lmul_log2_offset == 6 ? \"\" : \",\";\n+\t    fprintf (fp, \"  /*X%d_VLMUL_EXT*/ %s%s\\n\", multiple_of_lmul,\n+\t\t     floattype (sew, lmul_log2 + lmul_log2_offset).c_str (),\n+\t\t     comma);\n+\t  }\n+\tfprintf (fp, \")\\n\");\n+      }\n+\n+  return 0;\n+}"}, {"sha": "9b7670384523722dbfa985e7b0e9285008609254", "filename": "gcc/config/riscv/iterators.md", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Fiterators.md?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -26,6 +26,10 @@\n ;; from the same template.\n (define_mode_iterator GPR [SI (DI \"TARGET_64BIT\")])\n \n+;; A copy of GPR that can be used when a pattern has two independent\n+;; modes.\n+(define_mode_iterator GPR2 [SI (DI \"TARGET_64BIT\")])\n+\n ;; This mode iterator allows :P to be used for patterns that operate on\n ;; pointer-sized quantities.  Exactly one of the two alternatives will match.\n (define_mode_iterator P [(SI \"Pmode == SImode\") (DI \"Pmode == DImode\")])\n@@ -175,7 +179,9 @@\n \t\t     (gt \"\") (gtu \"u\")\n \t\t     (ge \"\") (geu \"u\")\n \t\t     (lt \"\") (ltu \"u\")\n-\t\t     (le \"\") (leu \"u\")])\n+\t\t     (le \"\") (leu \"u\")\n+\t\t     (fix \"\") (unsigned_fix \"u\")\n+\t\t     (float \"\") (unsigned_float \"u\")])\n \n ;; <su> is like <u>, but the signed form expands to \"s\" rather than \"\".\n (define_code_attr su [(sign_extend \"s\") (zero_extend \"u\")])\n@@ -204,6 +210,8 @@\n \t\t\t (mult \"mul\")\n \t\t\t (not \"one_cmpl\")\n \t\t\t (neg \"neg\")\n+\t\t\t (abs \"abs\")\n+\t\t\t (sqrt \"sqrt\")\n \t\t\t (ss_plus \"ssadd\")\n \t\t\t (us_plus \"usadd\")\n \t\t\t (ss_minus \"sssub\")\n@@ -235,6 +243,8 @@\n \t\t\t(mult \"mul\")\n \t\t\t(not \"not\")\n \t\t\t(neg \"neg\")\n+\t\t\t(abs \"abs\")\n+\t\t\t(sqrt \"sqrt\")\n \t\t\t(ss_plus \"sadd\")\n \t\t\t(us_plus \"saddu\")\n \t\t\t(ss_minus \"ssub\")"}, {"sha": "0a3d4c077573f18f6669f84ad45be14d392e7533", "filename": "gcc/config/riscv/multilib-generator", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Fmultilib-generator", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Fmultilib-generator", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Fmultilib-generator?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -175,7 +175,7 @@ for cmodel in cmodels:\n     # Drop duplicated entry.\n     alts = unique(alts)\n \n-    for alt in alts[1:]:\n+    for alt in alts:\n       if alt == arch:\n         continue\n       arches[alt] = 1"}, {"sha": "67e7046d7e65d47165f4385d2220b2df7e504344", "filename": "gcc/config/riscv/peephole.md", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Fpeephole.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Fpeephole.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Fpeephole.md?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -38,3 +38,59 @@\n {\n   operands[5] = GEN_INT (INTVAL (operands[2]) - INTVAL (operands[5]));\n })\n+\n+;; XTheadMemPair: merge two SI or DI loads\n+(define_peephole2\n+  [(set (match_operand:GPR 0 \"register_operand\" \"\")\n+\t(match_operand:GPR 1 \"memory_operand\" \"\"))\n+   (set (match_operand:GPR 2 \"register_operand\" \"\")\n+\t(match_operand:GPR 3 \"memory_operand\" \"\"))]\n+  \"TARGET_XTHEADMEMPAIR\n+  && th_mempair_operands_p (operands, true, <GPR:MODE>mode)\"\n+  [(parallel [(set (match_dup 0) (match_dup 1))\n+\t          (set (match_dup 2) (match_dup 3))])]\n+{\n+  th_mempair_order_operands (operands, true, <GPR:MODE>mode);\n+})\n+\n+;; XTheadMemPair: merge two SI or DI stores\n+(define_peephole2\n+  [(set (match_operand:GPR 0 \"memory_operand\" \"\")\n+\t(match_operand:GPR 1 \"register_operand\" \"\"))\n+   (set (match_operand:GPR 2 \"memory_operand\" \"\")\n+\t(match_operand:GPR 3 \"register_operand\" \"\"))]\n+  \"TARGET_XTHEADMEMPAIR\n+  && th_mempair_operands_p (operands, false, <GPR:MODE>mode)\"\n+  [(parallel [(set (match_dup 0) (match_dup 1))\n+              (set (match_dup 2) (match_dup 3))])]\n+{\n+  th_mempair_order_operands (operands, false, <GPR:MODE>mode);\n+})\n+\n+;; XTheadMemPair: merge two SI loads with sign-extension\n+(define_peephole2\n+  [(set (match_operand:DI 0 \"register_operand\" \"\")\n+\t(sign_extend:DI (match_operand:SI 1 \"memory_operand\" \"\")))\n+   (set (match_operand:DI 2 \"register_operand\" \"\")\n+\t(sign_extend:DI (match_operand:SI 3 \"memory_operand\" \"\")))]\n+  \"TARGET_XTHEADMEMPAIR && TARGET_64BIT\n+  && th_mempair_operands_p (operands, true, SImode)\"\n+  [(parallel [(set (match_dup 0) (sign_extend:DI (match_dup 1)))\n+              (set (match_dup 2) (sign_extend:DI (match_dup 3)))])]\n+{\n+  th_mempair_order_operands (operands, true, SImode);\n+})\n+\n+;; XTheadMemPair: merge two SI loads with zero-extension\n+(define_peephole2\n+  [(set (match_operand:DI 0 \"register_operand\" \"\")\n+\t(zero_extend:DI (match_operand:SI 1 \"memory_operand\" \"\")))\n+   (set (match_operand:DI 2 \"register_operand\" \"\")\n+\t(zero_extend:DI (match_operand:SI 3 \"memory_operand\" \"\")))]\n+  \"TARGET_XTHEADMEMPAIR && TARGET_64BIT\n+  && th_mempair_operands_p (operands, true, SImode)\"\n+  [(parallel [(set (match_dup 0) (zero_extend:DI (match_dup 1)))\n+              (set (match_dup 2) (zero_extend:DI (match_dup 3)))])]\n+{\n+  th_mempair_order_operands (operands, true, SImode);\n+})"}, {"sha": "0d9d7701c7ead1eea22a30355bc5da0264c332de", "filename": "gcc/config/riscv/predicates.md", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Fpredicates.md?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -284,13 +284,22 @@\n \t\t|| satisfies_constraint_Wc0 (op)\"))))\n \n (define_predicate \"vector_all_trues_mask_operand\"\n-  (ior (match_operand 0 \"register_operand\")\n+  (and (match_code \"const_vector\")\n        (match_test \"op == CONSTM1_RTX (GET_MODE (op))\")))\n \n+(define_predicate \"vector_least_significant_set_mask_operand\"\n+  (and (match_code \"const_vector\")\n+       (match_test \"rtx_equal_p (op, riscv_vector::gen_scalar_move_mask (GET_MODE (op)))\")))\n+\n (define_predicate \"vector_mask_operand\"\n   (ior (match_operand 0 \"register_operand\")\n        (match_operand 0 \"vector_all_trues_mask_operand\")))\n \n+(define_predicate \"vector_broadcast_mask_operand\"\n+  (ior (match_operand 0 \"vector_least_significant_set_mask_operand\")\n+    (ior (match_operand 0 \"register_operand\")\n+         (match_operand 0 \"vector_all_trues_mask_operand\"))))\n+\n (define_predicate \"vector_undef_operand\"\n   (match_test \"rtx_equal_p (op, RVV_VUNDEF (GET_MODE (op)))\"))\n \n@@ -337,13 +346,20 @@\n   (ior (match_operand 0 \"const_0_operand\")\n        (match_operand 0 \"pmode_register_operand\")))\n \n+;; A special predicate that doesn't match a particular mode.\n+(define_special_predicate \"vector_any_register_operand\"\n+  (match_code \"reg\"))\n+\n ;; The scalar operand can be directly broadcast by RVV instructions.\n (define_predicate \"direct_broadcast_operand\"\n   (and (match_test \"!(reload_completed && !FLOAT_MODE_P (GET_MODE (op))\n-\t\t&& register_operand (op, GET_MODE (op))\n+\t\t&& (register_operand (op, GET_MODE (op)) || CONST_INT_P (op)\n+\t\t|| rtx_equal_p (op, CONST0_RTX (GET_MODE (op))))\n \t\t&& maybe_gt (GET_MODE_BITSIZE (GET_MODE (op)), GET_MODE_BITSIZE (Pmode)))\")\n-    (ior (match_operand 0 \"register_operand\")\n-         (match_test \"satisfies_constraint_Wdm (op)\"))))\n+    (ior (match_test \"rtx_equal_p (op, CONST0_RTX (GET_MODE (op)))\")\n+         (ior (match_operand 0 \"const_int_operand\")\n+              (ior (match_operand 0 \"register_operand\")\n+                   (match_test \"satisfies_constraint_Wdm (op)\"))))))\n \n ;; A CONST_INT operand that has exactly two bits cleared.\n (define_predicate \"const_nottwobits_operand\""}, {"sha": "b1c4b7547d7086ff8d60768d5664cbcef2ecd68e", "filename": "gcc/config/riscv/riscv-builtins.cc", "status": "modified", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-builtins.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-builtins.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-builtins.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -38,10 +38,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"expr.h\"\n #include \"langhooks.h\"\n #include \"tm_p.h\"\n+#include \"backend.h\"\n+#include \"gimple.h\"\n+#include \"gimple-iterator.h\"\n \n /* Macros to create an enumeration identifier for a function prototype.  */\n #define RISCV_FTYPE_NAME0(A) RISCV_##A##_FTYPE\n #define RISCV_FTYPE_NAME1(A, B) RISCV_##A##_FTYPE_##B\n+#define RISCV_FTYPE_NAME2(A, B, C) RISCV_##A##_FTYPE_##B##_##C\n+#define RISCV_FTYPE_NAME3(A, B, C, D) RISCV_##A##_FTYPE_##B##_##C##_##D\n \n /* Classifies the prototype of a built-in function.  */\n enum riscv_function_type {\n@@ -98,6 +103,23 @@ AVAIL (zero32,  TARGET_ZICBOZ && !TARGET_64BIT)\n AVAIL (zero64,  TARGET_ZICBOZ && TARGET_64BIT)\n AVAIL (prefetchi32, TARGET_ZICBOP && !TARGET_64BIT)\n AVAIL (prefetchi64, TARGET_ZICBOP && TARGET_64BIT)\n+AVAIL (crypto_zbkb32, TARGET_ZBKB && !TARGET_64BIT)\n+AVAIL (crypto_zbkb64, TARGET_ZBKB && TARGET_64BIT)\n+AVAIL (crypto_zbkc32, TARGET_ZBKC && !TARGET_64BIT)\n+AVAIL (crypto_zbkc64, TARGET_ZBKC && TARGET_64BIT)\n+AVAIL (crypto_zbkx32, TARGET_ZBKX && !TARGET_64BIT)\n+AVAIL (crypto_zbkx64, TARGET_ZBKX && TARGET_64BIT)\n+AVAIL (crypto_zknd32, TARGET_ZKND && !TARGET_64BIT)\n+AVAIL (crypto_zknd64, TARGET_ZKND && TARGET_64BIT)\n+AVAIL (crypto_zkne32, TARGET_ZKNE && !TARGET_64BIT)\n+AVAIL (crypto_zkne64, TARGET_ZKNE && TARGET_64BIT)\n+AVAIL (crypto_zkne_or_zknd, (TARGET_ZKNE || TARGET_ZKND) && TARGET_64BIT)\n+AVAIL (crypto_zknh32, TARGET_ZKNH && !TARGET_64BIT)\n+AVAIL (crypto_zknh64, TARGET_ZKNH && TARGET_64BIT)\n+AVAIL (crypto_zksh32, TARGET_ZKSH && !TARGET_64BIT)\n+AVAIL (crypto_zksh64, TARGET_ZKSH && TARGET_64BIT)\n+AVAIL (crypto_zksed32, TARGET_ZKSED && !TARGET_64BIT)\n+AVAIL (crypto_zksed64, TARGET_ZKSED && TARGET_64BIT)\n AVAIL (always,     (!0))\n \n /* Construct a riscv_builtin_description from the given arguments.\n@@ -132,6 +154,8 @@ AVAIL (always,     (!0))\n /* Argument types.  */\n #define RISCV_ATYPE_VOID void_type_node\n #define RISCV_ATYPE_USI unsigned_intSI_type_node\n+#define RISCV_ATYPE_QI intQI_type_node\n+#define RISCV_ATYPE_HI intHI_type_node\n #define RISCV_ATYPE_SI intSI_type_node\n #define RISCV_ATYPE_DI intDI_type_node\n #define RISCV_ATYPE_VOID_PTR ptr_type_node\n@@ -142,9 +166,14 @@ AVAIL (always,     (!0))\n   RISCV_ATYPE_##A\n #define RISCV_FTYPE_ATYPES1(A, B) \\\n   RISCV_ATYPE_##A, RISCV_ATYPE_##B\n+#define RISCV_FTYPE_ATYPES2(A, B, C) \\\n+  RISCV_ATYPE_##A, RISCV_ATYPE_##B, RISCV_ATYPE_##C\n+#define RISCV_FTYPE_ATYPES3(A, B, C, D) \\\n+  RISCV_ATYPE_##A, RISCV_ATYPE_##B, RISCV_ATYPE_##C, RISCV_ATYPE_##D\n \n static const struct riscv_builtin_description riscv_builtins[] = {\n   #include \"riscv-cmo.def\"\n+  #include \"riscv-scalar-crypto.def\"\n \n   DIRECT_BUILTIN (frflags, RISCV_USI_FTYPE, hard_float),\n   DIRECT_NO_TARGET_BUILTIN (fsflags, RISCV_VOID_FTYPE_USI, hard_float),\n@@ -306,6 +335,34 @@ riscv_expand_builtin_direct (enum insn_code icode, rtx target, tree exp,\n   return riscv_expand_builtin_insn (icode, opno, ops, has_target_p);\n }\n \n+/* Implement TARGET_GIMPLE_FOLD_BUILTIN.  */\n+\n+bool\n+riscv_gimple_fold_builtin (gimple_stmt_iterator *gsi)\n+{\n+  gcall *stmt = as_a<gcall *> (gsi_stmt (*gsi));\n+  tree fndecl = gimple_call_fndecl (stmt);\n+  unsigned int code = DECL_MD_FUNCTION_CODE (fndecl);\n+  unsigned int subcode = code >> RISCV_BUILTIN_SHIFT;\n+  gimple *new_stmt = NULL;\n+  switch (code & RISCV_BUILTIN_CLASS)\n+    {\n+    case RISCV_BUILTIN_GENERAL:\n+      new_stmt = NULL;\n+      break;\n+\n+    case RISCV_BUILTIN_VECTOR:\n+      new_stmt = riscv_vector::gimple_fold_builtin (subcode, gsi, stmt);\n+      break;\n+    }\n+\n+  if (!new_stmt)\n+    return false;\n+\n+  gsi_replace (gsi, new_stmt, false);\n+  return true;\n+}\n+\n /* Implement TARGET_EXPAND_BUILTIN.  */\n \n rtx"}, {"sha": "6ad562dcb8b2f078adc1bfcf9c5ea3615c95c53c", "filename": "gcc/config/riscv/riscv-c.cc", "status": "modified", "additions": 34, "deletions": 4, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-c.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-c.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-c.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -34,6 +34,12 @@ along with GCC; see the file COPYING3.  If not see\n \n #define builtin_define(TXT) cpp_define (pfile, TXT)\n \n+static int\n+riscv_ext_version_value (unsigned major, unsigned minor)\n+{\n+  return (major * 1000000) + (minor * 1000);\n+}\n+\n /* Implement TARGET_CPU_CPP_BUILTINS.  */\n \n void\n@@ -118,7 +124,11 @@ riscv_cpu_cpp_builtins (cpp_reader *pfile)\n     builtin_define_with_int_value (\"__riscv_v_elen_fp\", 0);\n \n   if (TARGET_MIN_VLEN)\n-    builtin_define (\"__riscv_vector\");\n+    {\n+      builtin_define (\"__riscv_vector\");\n+      builtin_define_with_int_value (\"__riscv_v_intrinsic\",\n+\t\t\t\t     riscv_ext_version_value (0, 11));\n+    }\n \n   /* Define architecture extension test macros.  */\n   builtin_define_with_int_value (\"__riscv_arch_test\", 1);\n@@ -141,13 +151,13 @@ riscv_cpu_cpp_builtins (cpp_reader *pfile)\n        subset != subset_list->end ();\n        subset = subset->next)\n     {\n-      int version_value = (subset->major_version * 1000000)\n-\t\t\t   + (subset->minor_version * 1000);\n+      int version_value = riscv_ext_version_value (subset->major_version,\n+\t\t\t\t\t\t   subset->minor_version);\n       /* Special rule for zicsr and zifencei, it's used for ISA spec 2.2 or\n \t earlier.  */\n       if ((subset->name == \"zicsr\" || subset->name == \"zifencei\")\n \t  && version_value == 0)\n-\tversion_value = 2000000;\n+\tversion_value = riscv_ext_version_value (2, 0);\n \n       sprintf (buf, \"__riscv_%s\", subset->name.c_str ());\n       builtin_define_with_int_value (buf, version_value);\n@@ -184,10 +194,30 @@ riscv_pragma_intrinsic (cpp_reader *)\n     error (\"unknown %<#pragma riscv intrinsic%> option %qs\", name);\n }\n \n+/* Implement TARGET_CHECK_BUILTIN_CALL.  */\n+static bool\n+riscv_check_builtin_call (location_t loc, vec<location_t> arg_loc, tree fndecl,\n+\t\t\t  tree orig_fndecl, unsigned int nargs, tree *args)\n+{\n+  unsigned int code = DECL_MD_FUNCTION_CODE (fndecl);\n+  unsigned int subcode = code >> RISCV_BUILTIN_SHIFT;\n+  switch (code & RISCV_BUILTIN_CLASS)\n+    {\n+    case RISCV_BUILTIN_GENERAL:\n+      return true;\n+\n+    case RISCV_BUILTIN_VECTOR:\n+      return riscv_vector::check_builtin_call (loc, arg_loc, subcode,\n+\t\t\t\t\t       orig_fndecl, nargs, args);\n+    }\n+  gcc_unreachable ();\n+}\n+\n /* Implement REGISTER_TARGET_PRAGMAS.  */\n \n void\n riscv_register_pragmas (void)\n {\n+  targetm.check_builtin_call = riscv_check_builtin_call;\n   c_register_pragma (\"riscv\", \"intrinsic\", riscv_pragma_intrinsic);\n }"}, {"sha": "7d87ab7ce28f045f659b58d30ca339c54f4a7830", "filename": "gcc/config/riscv/riscv-cores.def", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-cores.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-cores.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-cores.def?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -73,4 +73,8 @@ RISCV_CORE(\"sifive-s76\",      \"rv64imafdc\", \"sifive-7-series\")\n RISCV_CORE(\"sifive-u54\",      \"rv64imafdc\", \"sifive-5-series\")\n RISCV_CORE(\"sifive-u74\",      \"rv64imafdc\", \"sifive-7-series\")\n \n+RISCV_CORE(\"thead-c906\",      \"rv64imafdc_xtheadba_xtheadbb_xtheadbs_xtheadcmo_\"\n+\t\t\t      \"xtheadcondmov_xtheadfmemidx_xtheadmac_\"\n+\t\t\t      \"xtheadmemidx_xtheadmempair_xtheadsync\",\n+\t\t\t      \"thead-c906\")\n #undef RISCV_CORE"}, {"sha": "3b518195a29c65f01ea958d4ee068bc8c827d692", "filename": "gcc/config/riscv/riscv-ftypes.def", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-ftypes.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-ftypes.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-ftypes.def?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -32,3 +32,13 @@ DEF_RISCV_FTYPE (1, (VOID, USI))\n DEF_RISCV_FTYPE (1, (VOID, VOID_PTR))\n DEF_RISCV_FTYPE (1, (SI, SI))\n DEF_RISCV_FTYPE (1, (DI, DI))\n+DEF_RISCV_FTYPE (2, (SI, QI, QI))\n+DEF_RISCV_FTYPE (2, (SI, HI, HI))\n+DEF_RISCV_FTYPE (2, (SI, SI, SI))\n+DEF_RISCV_FTYPE (2, (DI, QI, QI))\n+DEF_RISCV_FTYPE (2, (DI, HI, HI))\n+DEF_RISCV_FTYPE (2, (DI, SI, SI))\n+DEF_RISCV_FTYPE (2, (DI, DI, SI))\n+DEF_RISCV_FTYPE (2, (DI, DI, DI))\n+DEF_RISCV_FTYPE (3, (SI, SI, SI, SI))\n+DEF_RISCV_FTYPE (3, (DI, DI, DI, SI))"}, {"sha": "4cf7cf8b1c6eb7f6f4b27d100e620e4c6a8fcc33", "filename": "gcc/config/riscv/riscv-modes.def", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-modes.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-modes.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-modes.def?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -64,13 +64,21 @@ ADJUST_ALIGNMENT (VNx16BI, 1);\n ADJUST_ALIGNMENT (VNx32BI, 1);\n ADJUST_ALIGNMENT (VNx64BI, 1);\n \n-ADJUST_BYTESIZE (VNx1BI, riscv_vector_chunks * riscv_bytes_per_vector_chunk);\n-ADJUST_BYTESIZE (VNx2BI, riscv_vector_chunks * riscv_bytes_per_vector_chunk);\n-ADJUST_BYTESIZE (VNx4BI, riscv_vector_chunks * riscv_bytes_per_vector_chunk);\n-ADJUST_BYTESIZE (VNx8BI, riscv_vector_chunks * riscv_bytes_per_vector_chunk);\n-ADJUST_BYTESIZE (VNx16BI, riscv_vector_chunks * riscv_bytes_per_vector_chunk);\n-ADJUST_BYTESIZE (VNx32BI, riscv_vector_chunks * riscv_bytes_per_vector_chunk);\n-ADJUST_BYTESIZE (VNx64BI, riscv_v_adjust_nunits (VNx64BImode, 8));\n+ADJUST_BYTESIZE (VNx1BI, riscv_v_adjust_bytesize (VNx1BImode, 1));\n+ADJUST_BYTESIZE (VNx2BI, riscv_v_adjust_bytesize (VNx2BImode, 1));\n+ADJUST_BYTESIZE (VNx4BI, riscv_v_adjust_bytesize (VNx4BImode, 1));\n+ADJUST_BYTESIZE (VNx8BI, riscv_v_adjust_bytesize (VNx8BImode, 1));\n+ADJUST_BYTESIZE (VNx16BI, riscv_v_adjust_bytesize (VNx16BImode, 2));\n+ADJUST_BYTESIZE (VNx32BI, riscv_v_adjust_bytesize (VNx32BImode, 4));\n+ADJUST_BYTESIZE (VNx64BI, riscv_v_adjust_bytesize (VNx64BImode, 8));\n+\n+ADJUST_PRECISION (VNx1BI, riscv_v_adjust_precision (VNx1BImode, 1));\n+ADJUST_PRECISION (VNx2BI, riscv_v_adjust_precision (VNx2BImode, 2));\n+ADJUST_PRECISION (VNx4BI, riscv_v_adjust_precision (VNx4BImode, 4));\n+ADJUST_PRECISION (VNx8BI, riscv_v_adjust_precision (VNx8BImode, 8));\n+ADJUST_PRECISION (VNx16BI, riscv_v_adjust_precision (VNx16BImode, 16));\n+ADJUST_PRECISION (VNx32BI, riscv_v_adjust_precision (VNx32BImode, 32));\n+ADJUST_PRECISION (VNx64BI, riscv_v_adjust_precision (VNx64BImode, 64));\n \n /*\n    | Mode        | MIN_VLEN=32 | MIN_VLEN=32 | MIN_VLEN=64 | MIN_VLEN=64 |"}, {"sha": "cf0cd669be40c6249b828901fbf3fbf36ad33bb5", "filename": "gcc/config/riscv/riscv-opts.h", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-opts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-opts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-opts.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -189,4 +189,30 @@ enum stack_protector_guard {\n    ? 0 \\\n    : 32 << (__builtin_popcount (riscv_zvl_flags) - 1))\n \n+#define MASK_XTHEADBA      (1 << 0)\n+#define MASK_XTHEADBB      (1 << 1)\n+#define MASK_XTHEADBS      (1 << 2)\n+#define MASK_XTHEADCMO     (1 << 3)\n+#define MASK_XTHEADCONDMOV (1 << 4)\n+#define MASK_XTHEADFMEMIDX (1 << 5)\n+#define MASK_XTHEADFMV     (1 << 6)\n+#define MASK_XTHEADINT     (1 << 7)\n+#define MASK_XTHEADMAC     (1 << 8)\n+#define MASK_XTHEADMEMIDX  (1 << 9)\n+#define MASK_XTHEADMEMPAIR (1 << 10)\n+#define MASK_XTHEADSYNC    (1 << 11)\n+\n+#define TARGET_XTHEADBA      ((riscv_xthead_subext & MASK_XTHEADBA) != 0)\n+#define TARGET_XTHEADBB      ((riscv_xthead_subext & MASK_XTHEADBB) != 0)\n+#define TARGET_XTHEADBS      ((riscv_xthead_subext & MASK_XTHEADBS) != 0)\n+#define TARGET_XTHEADCMO     ((riscv_xthead_subext & MASK_XTHEADCMO) != 0)\n+#define TARGET_XTHEADCONDMOV ((riscv_xthead_subext & MASK_XTHEADCONDMOV) != 0)\n+#define TARGET_XTHEADFMEMIDX ((riscv_xthead_subext & MASK_XTHEADFMEMIDX) != 0)\n+#define TARGET_XTHEADFMV     ((riscv_xthead_subext & MASK_XTHEADFMV) != 0)\n+#define TARGET_XTHEADINT     ((riscv_xthead_subext & MASK_XTHEADINT) != 0)\n+#define TARGET_XTHEADMAC     ((riscv_xthead_subext & MASK_XTHEADMAC) != 0)\n+#define TARGET_XTHEADMEMIDX  ((riscv_xthead_subext & MASK_XTHEADMEMIDX) != 0)\n+#define TARGET_XTHEADMEMPAIR ((riscv_xthead_subext & MASK_XTHEADMEMPAIR) != 0)\n+#define TARGET_XTHEADSYNC    ((riscv_xthead_subext & MASK_XTHEADSYNC) != 0)\n+\n #endif /* ! GCC_RISCV_OPTS_H */"}, {"sha": "4611447dddeb0f7f160678eb5228459f12e5d4d0", "filename": "gcc/config/riscv/riscv-protos.h", "status": "modified", "additions": 38, "deletions": 2, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-protos.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -54,12 +54,13 @@ extern bool riscv_split_64bit_move_p (rtx, rtx);\n extern void riscv_split_doubleword_move (rtx, rtx);\n extern const char *riscv_output_move (rtx, rtx);\n extern const char *riscv_output_return ();\n+\n #ifdef RTX_CODE\n extern void riscv_expand_int_scc (rtx, enum rtx_code, rtx, rtx);\n extern void riscv_expand_float_scc (rtx, enum rtx_code, rtx, rtx);\n extern void riscv_expand_conditional_branch (rtx, enum rtx_code, rtx, rtx);\n-extern void riscv_expand_conditional_move (rtx, rtx, rtx, rtx_code, rtx, rtx);\n #endif\n+extern bool riscv_expand_conditional_move (rtx, rtx, rtx, rtx);\n extern rtx riscv_legitimize_call_address (rtx);\n extern void riscv_set_return_address (rtx, rtx);\n extern bool riscv_expand_block_move (rtx, rtx, rtx);\n@@ -85,6 +86,7 @@ void riscv_register_pragmas (void);\n \n /* Routines implemented in riscv-builtins.cc.  */\n extern void riscv_atomic_assign_expand_fenv (tree *, tree *, tree *);\n+extern bool riscv_gimple_fold_builtin (gimple_stmt_iterator *);\n extern rtx riscv_expand_builtin (tree, rtx, rtx, machine_mode, int);\n extern tree riscv_builtin_decl (unsigned int, bool);\n extern void riscv_init_builtins (void);\n@@ -122,7 +124,8 @@ void riscv_run_selftests (void);\n namespace riscv_vector {\n #define RVV_VLMAX gen_rtx_REG (Pmode, X0_REGNUM)\n #define RVV_VUNDEF(MODE)                                                       \\\n-  gen_rtx_UNSPEC (MODE, gen_rtvec (1, const0_rtx), UNSPEC_VUNDEF)\n+  gen_rtx_UNSPEC (MODE, gen_rtvec (1, gen_rtx_REG (SImode, X0_REGNUM)),        \\\n+\t\t  UNSPEC_VUNDEF)\n enum vlmul_type\n {\n   LMUL_1 = 0,\n@@ -133,6 +136,7 @@ enum vlmul_type\n   LMUL_F8 = 5,\n   LMUL_F4 = 6,\n   LMUL_F2 = 7,\n+  NUM_LMUL = 8\n };\n \n enum avl_type\n@@ -148,10 +152,15 @@ bool verify_type_context (location_t, type_context_kind, const_tree, bool);\n #endif\n void handle_pragma_vector (void);\n tree builtin_decl (unsigned, bool);\n+gimple *gimple_fold_builtin (unsigned int, gimple_stmt_iterator *, gcall *);\n rtx expand_builtin (unsigned int, tree, rtx);\n+bool check_builtin_call (location_t, vec<location_t>, unsigned int,\n+\t\t\t   tree, unsigned int, tree *);\n bool const_vec_all_same_in_range_p (rtx, HOST_WIDE_INT, HOST_WIDE_INT);\n bool legitimize_move (rtx, rtx, machine_mode);\n+void emit_vlmax_vsetvl (machine_mode, rtx);\n void emit_vlmax_op (unsigned, rtx, rtx, machine_mode);\n+void emit_vlmax_op (unsigned, rtx, rtx, rtx, machine_mode);\n void emit_nonvlmax_op (unsigned, rtx, rtx, rtx, machine_mode);\n enum vlmul_type get_vlmul (machine_mode);\n unsigned int get_ratio (machine_mode);\n@@ -183,6 +192,20 @@ bool has_vi_variant_p (rtx_code, rtx);\n #endif\n bool sew64_scalar_helper (rtx *, rtx *, rtx, machine_mode, machine_mode,\n \t\t\t  bool, void (*)(rtx *, rtx));\n+rtx gen_scalar_move_mask (machine_mode);\n+\n+/* RVV vector register sizes.\n+   TODO: Currently, we only add RVV_32/RVV_64/RVV_128, we may need to\n+   support other values in the future.  */\n+enum vlen_enum\n+{\n+  RVV_32 = 32,\n+  RVV_64 = 64,\n+  RVV_65536 = 65536\n+};\n+bool slide1_sew64_helper (int, machine_mode, machine_mode,\n+\t\t\t  machine_mode, rtx *);\n+rtx gen_avl_for_scalar_move (rtx);\n }\n \n /* We classify builtin types into two classes:\n@@ -200,4 +223,17 @@ const unsigned int RISCV_BUILTIN_SHIFT = 1;\n /* Mask that selects the riscv_builtin_class part of a function code.  */\n const unsigned int RISCV_BUILTIN_CLASS = (1 << RISCV_BUILTIN_SHIFT) - 1;\n \n+/* Routines implemented in thead.cc.  */\n+extern bool th_mempair_operands_p (rtx[4], bool, machine_mode);\n+extern void th_mempair_order_operands (rtx[4], bool, machine_mode);\n+extern void th_mempair_prepare_save_restore_operands (rtx[4], bool,\n+\t\t\t\t\t\t      machine_mode,\n+\t\t\t\t\t\t      int, HOST_WIDE_INT,\n+\t\t\t\t\t\t      int, HOST_WIDE_INT);\n+extern void th_mempair_save_restore_regs (rtx[4], bool, machine_mode);\n+#ifdef RTX_CODE\n+extern const char*\n+th_mempair_output_move (rtx[4], bool, machine_mode, RTX_CODE);\n+#endif\n+\n #endif /* ! GCC_RISCV_PROTOS_H */"}, {"sha": "139793c6360237530310ae78d71fdabbbdf53817", "filename": "gcc/config/riscv/riscv-scalar-crypto.def", "status": "added", "additions": 94, "deletions": 0, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-scalar-crypto.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-scalar-crypto.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-scalar-crypto.def?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -0,0 +1,94 @@\n+/* Builtin functions for RISC-V Scalar Cryptography extensions.\n+   Copyright (C) 2023 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+// ZBKB\n+RISCV_BUILTIN (pack_sihi, \"pack\", RISCV_BUILTIN_DIRECT, RISCV_SI_FTYPE_HI_HI, crypto_zbkb32),\n+RISCV_BUILTIN (pack_disi, \"pack\", RISCV_BUILTIN_DIRECT, RISCV_DI_FTYPE_SI_SI, crypto_zbkb64),\n+\n+RISCV_BUILTIN (packh_si, \"packh\", RISCV_BUILTIN_DIRECT, RISCV_SI_FTYPE_QI_QI, crypto_zbkb32),\n+RISCV_BUILTIN (packh_di, \"packh\", RISCV_BUILTIN_DIRECT, RISCV_DI_FTYPE_QI_QI, crypto_zbkb64),\n+\n+RISCV_BUILTIN (packw, \"packw\", RISCV_BUILTIN_DIRECT, RISCV_DI_FTYPE_HI_HI, crypto_zbkb64),\n+\n+RISCV_BUILTIN (zip, \"zip\", RISCV_BUILTIN_DIRECT, RISCV_SI_FTYPE_SI, crypto_zbkb32),\n+RISCV_BUILTIN (unzip, \"unzip\", RISCV_BUILTIN_DIRECT, RISCV_SI_FTYPE_SI, crypto_zbkb32),\n+\n+RISCV_BUILTIN (brev8_si, \"brev8\", RISCV_BUILTIN_DIRECT, RISCV_SI_FTYPE_SI, crypto_zbkb32),\n+RISCV_BUILTIN (brev8_di, \"brev8\", RISCV_BUILTIN_DIRECT, RISCV_DI_FTYPE_DI, crypto_zbkb64),\n+\n+// ZBKC\n+RISCV_BUILTIN (clmul_si, \"clmul\", RISCV_BUILTIN_DIRECT, RISCV_SI_FTYPE_SI_SI, crypto_zbkc32),\n+RISCV_BUILTIN (clmul_di, \"clmul\", RISCV_BUILTIN_DIRECT, RISCV_DI_FTYPE_DI_DI, crypto_zbkc64),\n+RISCV_BUILTIN (clmulh_si, \"clmulh\", RISCV_BUILTIN_DIRECT, RISCV_SI_FTYPE_SI_SI, crypto_zbkc32),\n+RISCV_BUILTIN (clmulh_di, \"clmulh\", RISCV_BUILTIN_DIRECT, RISCV_DI_FTYPE_DI_DI, crypto_zbkc64),\n+\n+// ZBKX\n+RISCV_BUILTIN (xperm4_si, \"xperm4\", RISCV_BUILTIN_DIRECT, RISCV_SI_FTYPE_SI_SI, crypto_zbkx32),\n+RISCV_BUILTIN (xperm4_di, \"xperm4\", RISCV_BUILTIN_DIRECT, RISCV_DI_FTYPE_DI_DI, crypto_zbkx64),\n+RISCV_BUILTIN (xperm8_si, \"xperm8\", RISCV_BUILTIN_DIRECT, RISCV_SI_FTYPE_SI_SI, crypto_zbkx32),\n+RISCV_BUILTIN (xperm8_di, \"xperm8\", RISCV_BUILTIN_DIRECT, RISCV_DI_FTYPE_DI_DI, crypto_zbkx64),\n+\n+// ZKND\n+DIRECT_BUILTIN (aes32dsi, RISCV_SI_FTYPE_SI_SI_SI, crypto_zknd32),\n+DIRECT_BUILTIN (aes32dsmi, RISCV_SI_FTYPE_SI_SI_SI, crypto_zknd32),\n+DIRECT_BUILTIN (aes64ds, RISCV_DI_FTYPE_DI_DI, crypto_zknd64),\n+DIRECT_BUILTIN (aes64dsm, RISCV_DI_FTYPE_DI_DI, crypto_zknd64),\n+DIRECT_BUILTIN (aes64im, RISCV_DI_FTYPE_DI, crypto_zknd64),\n+DIRECT_BUILTIN (aes64ks1i, RISCV_DI_FTYPE_DI_SI, crypto_zkne_or_zknd),\n+DIRECT_BUILTIN (aes64ks2, RISCV_DI_FTYPE_DI_DI, crypto_zkne_or_zknd),\n+\n+// ZKNE\n+DIRECT_BUILTIN (aes32esi, RISCV_SI_FTYPE_SI_SI_SI, crypto_zkne32),\n+DIRECT_BUILTIN (aes32esmi, RISCV_SI_FTYPE_SI_SI_SI, crypto_zkne32),\n+DIRECT_BUILTIN (aes64es, RISCV_DI_FTYPE_DI_DI, crypto_zkne64),\n+DIRECT_BUILTIN (aes64esm, RISCV_DI_FTYPE_DI_DI, crypto_zkne64),\n+\n+// ZKNH\n+RISCV_BUILTIN (sha256sig0_si, \"sha256sig0\", RISCV_BUILTIN_DIRECT, RISCV_SI_FTYPE_SI, crypto_zknh32),\n+RISCV_BUILTIN (sha256sig0_di, \"sha256sig0\", RISCV_BUILTIN_DIRECT, RISCV_DI_FTYPE_DI, crypto_zknh64),\n+RISCV_BUILTIN (sha256sig1_si, \"sha256sig1\", RISCV_BUILTIN_DIRECT, RISCV_SI_FTYPE_SI, crypto_zknh32),\n+RISCV_BUILTIN (sha256sig1_di, \"sha256sig1\", RISCV_BUILTIN_DIRECT, RISCV_DI_FTYPE_DI, crypto_zknh64),\n+RISCV_BUILTIN (sha256sum0_si, \"sha256sum0\", RISCV_BUILTIN_DIRECT, RISCV_SI_FTYPE_SI, crypto_zknh32),\n+RISCV_BUILTIN (sha256sum0_di, \"sha256sum0\", RISCV_BUILTIN_DIRECT, RISCV_DI_FTYPE_DI, crypto_zknh64),\n+RISCV_BUILTIN (sha256sum1_si, \"sha256sum1\", RISCV_BUILTIN_DIRECT, RISCV_SI_FTYPE_SI, crypto_zknh32),\n+RISCV_BUILTIN (sha256sum1_di, \"sha256sum1\", RISCV_BUILTIN_DIRECT, RISCV_DI_FTYPE_DI, crypto_zknh64),\n+\n+DIRECT_BUILTIN (sha512sig0h, RISCV_SI_FTYPE_SI_SI, crypto_zknh32),\n+DIRECT_BUILTIN (sha512sig0l, RISCV_SI_FTYPE_SI_SI, crypto_zknh32),\n+DIRECT_BUILTIN (sha512sig1h, RISCV_SI_FTYPE_SI_SI, crypto_zknh32),\n+DIRECT_BUILTIN (sha512sig1l, RISCV_SI_FTYPE_SI_SI, crypto_zknh32),\n+DIRECT_BUILTIN (sha512sum0r, RISCV_SI_FTYPE_SI_SI, crypto_zknh32),\n+DIRECT_BUILTIN (sha512sum1r, RISCV_SI_FTYPE_SI_SI, crypto_zknh32),\n+\n+DIRECT_BUILTIN (sha512sig0, RISCV_DI_FTYPE_DI, crypto_zknh64),\n+DIRECT_BUILTIN (sha512sig1, RISCV_DI_FTYPE_DI, crypto_zknh64),\n+DIRECT_BUILTIN (sha512sum0, RISCV_DI_FTYPE_DI, crypto_zknh64),\n+DIRECT_BUILTIN (sha512sum1, RISCV_DI_FTYPE_DI, crypto_zknh64),\n+\n+// ZKSH\n+RISCV_BUILTIN (sm3p0_si, \"sm3p0\", RISCV_BUILTIN_DIRECT, RISCV_SI_FTYPE_SI, crypto_zksh32),\n+RISCV_BUILTIN (sm3p0_di, \"sm3p0\", RISCV_BUILTIN_DIRECT, RISCV_DI_FTYPE_DI, crypto_zksh64),\n+RISCV_BUILTIN (sm3p1_si, \"sm3p1\", RISCV_BUILTIN_DIRECT, RISCV_SI_FTYPE_SI, crypto_zksh32),\n+RISCV_BUILTIN (sm3p1_di, \"sm3p1\", RISCV_BUILTIN_DIRECT, RISCV_DI_FTYPE_DI, crypto_zksh64),\n+\n+// ZKSED\n+RISCV_BUILTIN (sm4ed_si, \"sm4ed\", RISCV_BUILTIN_DIRECT, RISCV_SI_FTYPE_SI_SI_SI, crypto_zksed32),\n+RISCV_BUILTIN (sm4ed_di, \"sm4ed\", RISCV_BUILTIN_DIRECT, RISCV_DI_FTYPE_DI_DI_SI, crypto_zksed64),\n+RISCV_BUILTIN (sm4ks_si, \"sm4ks\", RISCV_BUILTIN_DIRECT, RISCV_SI_FTYPE_SI_SI_SI, crypto_zksed32),\n+RISCV_BUILTIN (sm4ks_di, \"sm4ks\", RISCV_BUILTIN_DIRECT, RISCV_DI_FTYPE_DI_DI_SI, crypto_zksed64),"}, {"sha": "2e91d019f6cd8b7619d3e73bf15b7592d609934c", "filename": "gcc/config/riscv/riscv-v.cc", "status": "modified", "additions": 255, "deletions": 15, "changes": 270, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-v.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-v.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-v.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -42,6 +42,7 @@\n #include \"expr.h\"\n #include \"optabs.h\"\n #include \"tm-constrs.h\"\n+#include \"rtx-vector-builder.h\"\n \n using namespace riscv_vector;\n \n@@ -97,6 +98,15 @@ template <int MAX_OPERANDS> class insn_expander\n   expand_operand m_ops[MAX_OPERANDS];\n };\n \n+static unsigned\n+get_sew (machine_mode mode)\n+{\n+  unsigned int sew = GET_MODE_CLASS (mode) == MODE_VECTOR_BOOL\n+\t\t       ? 8\n+\t\t       : GET_MODE_BITSIZE (GET_MODE_INNER (mode));\n+  return sew;\n+}\n+\n /* Return true if X is a const_vector with all duplicate elements, which is in\n    the range between MINVAL and MAXVAL.  */\n bool\n@@ -108,13 +118,10 @@ const_vec_all_same_in_range_p (rtx x, HOST_WIDE_INT minval,\n \t  && IN_RANGE (INTVAL (elt), minval, maxval));\n }\n \n-static rtx\n-emit_vlmax_vsetvl (machine_mode vmode)\n+void\n+emit_vlmax_vsetvl (machine_mode vmode, rtx vl)\n {\n-  rtx vl = gen_reg_rtx (Pmode);\n-  unsigned int sew = GET_MODE_CLASS (vmode) == MODE_VECTOR_BOOL\n-\t\t       ? 8\n-\t\t       : GET_MODE_BITSIZE (GET_MODE_INNER (vmode));\n+  unsigned int sew = get_sew (vmode);\n   enum vlmul_type vlmul = get_vlmul (vmode);\n   unsigned int ratio = calculate_ratio (sew, vlmul);\n \n@@ -124,8 +131,6 @@ emit_vlmax_vsetvl (machine_mode vmode)\n \t\t\t   const0_rtx));\n   else\n     emit_insn (gen_vlmax_avl (Pmode, vl, gen_int_mode (ratio, Pmode)));\n-\n-  return vl;\n }\n \n /* Calculate SEW/LMUL ratio.  */\n@@ -165,7 +170,7 @@ calculate_ratio (unsigned int sew, enum vlmul_type vlmul)\n /* Emit an RVV unmask && vl mov from SRC to DEST.  */\n static void\n emit_pred_op (unsigned icode, rtx mask, rtx dest, rtx src, rtx len,\n-\t      machine_mode mask_mode)\n+\t      machine_mode mask_mode, bool vlmax_p)\n {\n   insn_expander<8> e;\n   machine_mode mode = GET_MODE (dest);\n@@ -185,32 +190,40 @@ emit_pred_op (unsigned icode, rtx mask, rtx dest, rtx src, rtx len,\n     e.add_input_operand (len, Pmode);\n   else\n     {\n-      rtx vlmax = emit_vlmax_vsetvl (mode);\n+      rtx vlmax = gen_reg_rtx (Pmode);\n+      emit_vlmax_vsetvl (mode, vlmax);\n       e.add_input_operand (vlmax, Pmode);\n     }\n \n   if (GET_MODE_CLASS (mode) != MODE_VECTOR_BOOL)\n     e.add_policy_operand (get_prefer_tail_policy (), get_prefer_mask_policy ());\n \n-  if (len)\n-    e.add_avl_type_operand (avl_type::NONVLMAX);\n-  else\n+  if (vlmax_p)\n     e.add_avl_type_operand (avl_type::VLMAX);\n+  else\n+    e.add_avl_type_operand (avl_type::NONVLMAX);\n \n   e.expand ((enum insn_code) icode, MEM_P (dest) || MEM_P (src));\n }\n \n void\n emit_vlmax_op (unsigned icode, rtx dest, rtx src, machine_mode mask_mode)\n {\n-  emit_pred_op (icode, NULL_RTX, dest, src, NULL_RTX, mask_mode);\n+  emit_pred_op (icode, NULL_RTX, dest, src, NULL_RTX, mask_mode, true);\n+}\n+\n+void\n+emit_vlmax_op (unsigned icode, rtx dest, rtx src, rtx len,\n+\t       machine_mode mask_mode)\n+{\n+  emit_pred_op (icode, NULL_RTX, dest, src, len, mask_mode, true);\n }\n \n void\n emit_nonvlmax_op (unsigned icode, rtx dest, rtx src, rtx len,\n \t\t  machine_mode mask_mode)\n {\n-  emit_pred_op (icode, NULL_RTX, dest, src, len, mask_mode);\n+  emit_pred_op (icode, NULL_RTX, dest, src, len, mask_mode, false);\n }\n \n static void\n@@ -264,6 +277,20 @@ legitimize_move (rtx dest, rtx src, machine_mode mask_mode)\n       expand_const_vector (dest, src, mask_mode);\n       return true;\n     }\n+\n+  /* In order to decrease the memory traffic, we don't use whole register\n+   * load/store for the LMUL less than 1 and mask mode, so those case will\n+   * require one extra general purpose register, but it's not allowed during LRA\n+   * process, so we have a special move pattern used for LRA, which will defer\n+   * the expansion after LRA.  */\n+  if ((known_lt (GET_MODE_SIZE (mode), BYTES_PER_RISCV_VECTOR)\n+       || GET_MODE_CLASS (mode) == MODE_VECTOR_BOOL)\n+      && lra_in_progress)\n+    {\n+      emit_insn (gen_mov_lra (mode, Pmode, dest, src));\n+      return true;\n+    }\n+\n   if (known_ge (GET_MODE_SIZE (mode), BYTES_PER_RISCV_VECTOR)\n       && GET_MODE_CLASS (mode) != MODE_VECTOR_BOOL)\n     {\n@@ -273,6 +300,13 @@ legitimize_move (rtx dest, rtx src, machine_mode mask_mode)\n \n       return false;\n     }\n+\n+  if (register_operand (src, mode) && register_operand (dest, mode))\n+    {\n+      emit_insn (gen_rtx_SET (dest, src));\n+      return true;\n+    }\n+\n   if (!register_operand (src, mode) && !register_operand (dest, mode))\n     {\n       rtx tmp = gen_reg_rtx (mode);\n@@ -282,6 +316,10 @@ legitimize_move (rtx dest, rtx src, machine_mode mask_mode)\n \temit_move_insn (tmp, src);\n       src = tmp;\n     }\n+\n+  if (satisfies_constraint_vu (src))\n+    return false;\n+\n   emit_vlmax_op (code_for_pred_mov (mode), dest, src, mask_mode);\n   return true;\n }\n@@ -484,4 +522,206 @@ sew64_scalar_helper (rtx *operands, rtx *scalar_op, rtx vl,\n   return true;\n }\n \n+/* Get { ... ,0, 0, 0, ..., 0, 0, 0, 1 } mask.  */\n+rtx\n+gen_scalar_move_mask (machine_mode mode)\n+{\n+  rtx_vector_builder builder (mode, 1, 2);\n+  builder.quick_push (const1_rtx);\n+  builder.quick_push (const0_rtx);\n+  return builder.build ();\n+}\n+\n+static unsigned\n+compute_vlmax (unsigned vector_bits, unsigned elt_size, unsigned min_size)\n+{\n+  // Original equation:\n+  //   VLMAX = (VectorBits / EltSize) * LMUL\n+  //   where LMUL = MinSize / TARGET_MIN_VLEN\n+  // The following equations have been reordered to prevent loss of precision\n+  // when calculating fractional LMUL.\n+  return ((vector_bits / elt_size) * min_size) / TARGET_MIN_VLEN;\n+}\n+\n+static unsigned\n+get_unknown_min_value (machine_mode mode)\n+{\n+  enum vlmul_type vlmul = get_vlmul (mode);\n+  switch (vlmul)\n+    {\n+    case LMUL_1:\n+      return TARGET_MIN_VLEN;\n+    case LMUL_2:\n+      return TARGET_MIN_VLEN * 2;\n+    case LMUL_4:\n+      return TARGET_MIN_VLEN * 4;\n+    case LMUL_8:\n+      return TARGET_MIN_VLEN * 8;\n+    default:\n+      gcc_unreachable ();\n+    }\n+}\n+\n+static rtx\n+force_vector_length_operand (rtx vl)\n+{\n+  if (CONST_INT_P (vl) && !satisfies_constraint_K (vl))\n+    return force_reg (Pmode, vl);\n+  return vl;\n+}\n+\n+static rtx\n+gen_no_side_effects_vsetvl_rtx (machine_mode vmode, rtx vl, rtx avl)\n+{\n+  unsigned int sew = get_sew (vmode);\n+  return gen_vsetvl_no_side_effects (Pmode, vl, avl, gen_int_mode (sew, Pmode),\n+\t\t\t\t     gen_int_mode (get_vlmul (vmode), Pmode),\n+\t\t\t\t     const0_rtx, const0_rtx);\n+}\n+\n+/* GET VL * 2 rtx.  */\n+static rtx\n+get_vl_x2_rtx (rtx avl, machine_mode mode, machine_mode demote_mode)\n+{\n+  rtx i32vl = NULL_RTX;\n+  if (CONST_INT_P (avl))\n+    {\n+      unsigned elt_size = GET_MODE_BITSIZE (GET_MODE_INNER (mode));\n+      unsigned min_size = get_unknown_min_value (mode);\n+      unsigned vlen_max = RVV_65536;\n+      unsigned vlmax_max = compute_vlmax (vlen_max, elt_size, min_size);\n+      unsigned vlen_min = TARGET_MIN_VLEN;\n+      unsigned vlmax_min = compute_vlmax (vlen_min, elt_size, min_size);\n+\n+      unsigned HOST_WIDE_INT avl_int = INTVAL (avl);\n+      if (avl_int <= vlmax_min)\n+\ti32vl = gen_int_mode (2 * avl_int, Pmode);\n+      else if (avl_int >= 2 * vlmax_max)\n+\t{\n+\t  // Just set i32vl to VLMAX in this situation\n+\t  i32vl = gen_reg_rtx (Pmode);\n+\t  emit_insn (\n+\t    gen_no_side_effects_vsetvl_rtx (demote_mode, i32vl, RVV_VLMAX));\n+\t}\n+      else\n+\t{\n+\t  // For AVL between (MinVLMAX, 2 * MaxVLMAX), the actual working vl\n+\t  // is related to the hardware implementation.\n+\t  // So let the following code handle\n+\t}\n+    }\n+  if (!i32vl)\n+    {\n+      // Using vsetvli instruction to get actually used length which related to\n+      // the hardware implementation\n+      rtx i64vl = gen_reg_rtx (Pmode);\n+      emit_insn (\n+\tgen_no_side_effects_vsetvl_rtx (mode, i64vl, force_reg (Pmode, avl)));\n+      // scale 2 for 32-bit length\n+      i32vl = gen_reg_rtx (Pmode);\n+      emit_insn (\n+\tgen_rtx_SET (i32vl, gen_rtx_ASHIFT (Pmode, i64vl, const1_rtx)));\n+    }\n+\n+  return force_vector_length_operand (i32vl);\n+}\n+\n+bool\n+slide1_sew64_helper (int unspec, machine_mode mode, machine_mode demote_mode,\n+\t\t     machine_mode demote_mask_mode, rtx *ops)\n+{\n+  rtx scalar_op = ops[4];\n+  rtx avl = ops[5];\n+  machine_mode scalar_mode = GET_MODE_INNER (mode);\n+  if (rtx_equal_p (scalar_op, const0_rtx))\n+    {\n+      ops[5] = force_vector_length_operand (ops[5]);\n+      return false;\n+    }\n+\n+  if (TARGET_64BIT)\n+    {\n+      ops[4] = force_reg (scalar_mode, scalar_op);\n+      ops[5] = force_vector_length_operand (ops[5]);\n+      return false;\n+    }\n+\n+  if (immediate_operand (scalar_op, Pmode))\n+    {\n+      ops[4] = gen_rtx_SIGN_EXTEND (scalar_mode, force_reg (Pmode, scalar_op));\n+      ops[5] = force_vector_length_operand (ops[5]);\n+      return false;\n+    }\n+\n+  if (CONST_INT_P (scalar_op))\n+    scalar_op = force_reg (scalar_mode, scalar_op);\n+\n+  rtx vl_x2 = get_vl_x2_rtx (avl, mode, demote_mode);\n+\n+  rtx demote_scalar_op1, demote_scalar_op2;\n+  if (unspec == UNSPEC_VSLIDE1UP)\n+    {\n+      demote_scalar_op1 = gen_highpart (Pmode, scalar_op);\n+      demote_scalar_op2 = gen_lowpart (Pmode, scalar_op);\n+    }\n+  else\n+    {\n+      demote_scalar_op1 = gen_lowpart (Pmode, scalar_op);\n+      demote_scalar_op2 = gen_highpart (Pmode, scalar_op);\n+    }\n+\n+  rtx temp = gen_reg_rtx (demote_mode);\n+  rtx ta = gen_int_mode (get_prefer_tail_policy (), Pmode);\n+  rtx ma = gen_int_mode (get_prefer_mask_policy (), Pmode);\n+  rtx merge = RVV_VUNDEF (demote_mode);\n+  /* Handle vslide1<ud>_tu.  */\n+  if (register_operand (ops[2], mode)\n+      && rtx_equal_p (ops[1], CONSTM1_RTX (GET_MODE (ops[1]))))\n+    {\n+      merge = gen_lowpart (demote_mode, ops[2]);\n+      ta = ops[6];\n+      ma = ops[7];\n+    }\n+\n+  emit_insn (gen_pred_slide (unspec, demote_mode, temp,\n+\t\t\t     CONSTM1_RTX (demote_mask_mode), merge,\n+\t\t\t     gen_lowpart (demote_mode, ops[3]),\n+\t\t\t     demote_scalar_op1, vl_x2, ta, ma, ops[8]));\n+  emit_insn (gen_pred_slide (unspec, demote_mode,\n+\t\t\t     gen_lowpart (demote_mode, ops[0]),\n+\t\t\t     CONSTM1_RTX (demote_mask_mode), merge, temp,\n+\t\t\t     demote_scalar_op2, vl_x2, ta, ma, ops[8]));\n+\n+  if (rtx_equal_p (ops[1], CONSTM1_RTX (GET_MODE (ops[1]))))\n+    return true;\n+  else\n+    emit_insn (gen_pred_merge (mode, ops[0], ops[2], ops[2], ops[0], ops[1],\n+\t\t\t       force_vector_length_operand (ops[5]), ops[6],\n+\t\t\t       ops[8]));\n+  return true;\n+}\n+\n+rtx\n+gen_avl_for_scalar_move (rtx avl)\n+{\n+  /* AVL for scalar move has different behavior between 0 and large than 0.  */\n+  if (CONST_INT_P (avl))\n+    {\n+      /* So we could just set AVL to 1 for any constant other than 0.  */\n+      if (rtx_equal_p (avl, const0_rtx))\n+\treturn const0_rtx;\n+      else\n+\treturn const1_rtx;\n+    }\n+  else\n+    {\n+      /* For non-constant value, we set any non zero value to 1 by\n+\t `sgtu new_avl,input_avl,zero` + `vsetvli`.  */\n+      rtx tmp = gen_reg_rtx (Pmode);\n+      emit_insn (\n+\tgen_rtx_SET (tmp, gen_rtx_fmt_ee (GTU, Pmode, avl, const0_rtx)));\n+      return tmp;\n+    }\n+}\n+\n } // namespace riscv_vector"}, {"sha": "52467bbc961fed9c004a69fb6af8417420ceb369", "filename": "gcc/config/riscv/riscv-vector-builtins-bases.cc", "status": "modified", "additions": 1133, "deletions": 116, "changes": 1249, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-vector-builtins-bases.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-vector-builtins-bases.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-vector-builtins-bases.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -129,9 +129,57 @@ class loadstore : public function_base\n \t    code_for_pred_indexed_store (unspec, e.vector_mode (),\n \t\t\t\t\t e.index_mode ()));\n \telse\n-\t  return e.use_exact_insn (\n-\t    code_for_pred_indexed_load (unspec, e.vector_mode (),\n-\t\t\t\t\te.index_mode ()));\n+\t  {\n+\t    unsigned src_eew_bitsize\n+\t      = GET_MODE_BITSIZE (GET_MODE_INNER (e.index_mode ()));\n+\t    unsigned dst_eew_bitsize\n+\t      = GET_MODE_BITSIZE (GET_MODE_INNER (e.vector_mode ()));\n+\t    if (dst_eew_bitsize == src_eew_bitsize)\n+\t      return e.use_exact_insn (\n+\t\tcode_for_pred_indexed_load_same_eew (unspec, e.vector_mode ()));\n+\t    else if (dst_eew_bitsize > src_eew_bitsize)\n+\t      {\n+\t\tunsigned factor = dst_eew_bitsize / src_eew_bitsize;\n+\t\tswitch (factor)\n+\t\t  {\n+\t\t  case 2:\n+\t\t    return e.use_exact_insn (\n+\t\t      code_for_pred_indexed_load_x2_greater_eew (\n+\t\t\tunspec, e.vector_mode ()));\n+\t\t  case 4:\n+\t\t    return e.use_exact_insn (\n+\t\t      code_for_pred_indexed_load_x4_greater_eew (\n+\t\t\tunspec, e.vector_mode ()));\n+\t\t  case 8:\n+\t\t    return e.use_exact_insn (\n+\t\t      code_for_pred_indexed_load_x8_greater_eew (\n+\t\t\tunspec, e.vector_mode ()));\n+\t\t  default:\n+\t\t    gcc_unreachable ();\n+\t\t  }\n+\t      }\n+\t    else\n+\t      {\n+\t\tunsigned factor = src_eew_bitsize / dst_eew_bitsize;\n+\t\tswitch (factor)\n+\t\t  {\n+\t\t  case 2:\n+\t\t    return e.use_exact_insn (\n+\t\t      code_for_pred_indexed_load_x2_smaller_eew (\n+\t\t\tunspec, e.vector_mode ()));\n+\t\t  case 4:\n+\t\t    return e.use_exact_insn (\n+\t\t      code_for_pred_indexed_load_x4_smaller_eew (\n+\t\t\tunspec, e.vector_mode ()));\n+\t\t  case 8:\n+\t\t    return e.use_exact_insn (\n+\t\t      code_for_pred_indexed_load_x8_smaller_eew (\n+\t\t\tunspec, e.vector_mode ()));\n+\t\t  default:\n+\t\t    gcc_unreachable ();\n+\t\t  }\n+\t      }\n+\t  }\n       }\n     else if (LST_TYPE == LST_STRIDED)\n       {\n@@ -155,8 +203,11 @@ class loadstore : public function_base\n };\n \n /* Implements\n- * vadd/vsub/vand/vor/vxor/vsll/vsra/vsrl/vmin/vmax/vminu/vmaxu/vdiv/vrem/vdivu/vremu/vsadd/vsaddu/vssub/vssubu.\n- */\n+   vadd/vsub/vand/vor/vxor/vsll/vsra/vsrl/\n+   vmin/vmax/vminu/vmaxu/vdiv/vrem/vdivu/\n+   vremu/vsadd/vsaddu/vssub/vssubu\n+   vfadd/vfsub/\n+*/\n template<rtx_code CODE>\n class binop : public function_base\n {\n@@ -166,6 +217,7 @@ class binop : public function_base\n     switch (e.op_info->op)\n       {\n       case OP_TYPE_vx:\n+      case OP_TYPE_vf:\n \treturn e.use_exact_insn (code_for_pred_scalar (CODE, e.vector_mode ()));\n       case OP_TYPE_vv:\n \treturn e.use_exact_insn (code_for_pred (CODE, e.vector_mode ()));\n@@ -239,8 +291,8 @@ class vmulh : public function_base\n   }\n };\n \n-/* Implements vwadd/vwsub/vwmul.  */\n-template<rtx_code CODE1, rtx_code CODE2>\n+/* Implements vwadd/vwsub/vwmul/vfwadd/vfwsub/vfwmul.  */\n+template<rtx_code CODE1, rtx_code CODE2 = FLOAT_EXTEND>\n class widen_binop : public function_base\n {\n public:\n@@ -265,6 +317,31 @@ class widen_binop : public function_base\n       }\n   }\n };\n+template<rtx_code CODE>\n+class widen_binop<CODE, FLOAT_EXTEND> : public function_base\n+{\n+public:\n+  rtx expand (function_expander &e) const override\n+  {\n+    switch (e.op_info->op)\n+      {\n+      case OP_TYPE_vv:\n+\treturn e.use_exact_insn (\n+\t  code_for_pred_dual_widen (CODE, e.vector_mode ()));\n+      case OP_TYPE_vf:\n+\treturn e.use_exact_insn (\n+\t  code_for_pred_dual_widen_scalar (CODE, e.vector_mode ()));\n+      case OP_TYPE_wv:\n+\treturn e.use_exact_insn (\n+\t  code_for_pred_single_widen (CODE, e.vector_mode ()));\n+      case OP_TYPE_wf:\n+\treturn e.use_exact_insn (\n+\t  code_for_pred_single_widen_scalar (CODE, e.vector_mode ()));\n+      default:\n+\tgcc_unreachable ();\n+      }\n+  }\n+};\n \n /* Implements vwmulsu.  */\n class vwmulsu : public function_base\n@@ -426,7 +503,7 @@ class vncvt_x : public function_base\n   }\n };\n \n-/* Implements vmerge.  */\n+/* Implements vmerge/vfmerge.  */\n class vmerge : public function_base\n {\n public:\n@@ -439,14 +516,15 @@ class vmerge : public function_base\n       case OP_TYPE_vvm:\n \treturn e.use_exact_insn (code_for_pred_merge (e.vector_mode ()));\n       case OP_TYPE_vxm:\n+      case OP_TYPE_vfm:\n \treturn e.use_exact_insn (code_for_pred_merge_scalar (e.vector_mode ()));\n       default:\n \tgcc_unreachable ();\n       }\n   }\n };\n \n-/* Implements vmv.v.x/vmv.v.v.  */\n+/* Implements vmv.v.x/vmv.v.v/vfmv.v.f.  */\n class vmv_v : public function_base\n {\n public:\n@@ -457,6 +535,7 @@ class vmv_v : public function_base\n       case OP_TYPE_v:\n \treturn e.use_exact_insn (code_for_pred_mov (e.vector_mode ()));\n       case OP_TYPE_x:\n+      case OP_TYPE_f:\n \treturn e.use_exact_insn (code_for_pred_broadcast (e.vector_mode ()));\n       default:\n \tgcc_unreachable ();\n@@ -539,132 +618,139 @@ class icmp : public function_base\n   }\n };\n \n-/* Enumerates types of ternary operations.\n-   We have 2 types ternop:\n-     - 1. accumulator is vd:\n-        vmacc.vv vd,vs1,vs2 # vd = vs1 * vs2 + vd.\n-     - 2. accumulator is vs2:\n-        vmadd.vv vd,vs1,vs2 # vd = vs1 * vd + vs2.  */\n-enum ternop_type\n+/* Implements vmacc/vnmsac/vmadd/vnmsub.  */\n+class vmacc : public function_base\n {\n-  TERNOP_VMACC,\n-  TERNOP_VNMSAC,\n-  TERNOP_VMADD,\n-  TERNOP_VNMSUB,\n+public:\n+  bool has_merge_operand_p () const override { return false; }\n+\n+  rtx expand (function_expander &e) const override\n+  {\n+    if (e.op_info->op == OP_TYPE_vx)\n+      return e.use_ternop_insn (true, code_for_pred_mul_plus_scalar (\n+\t\t\t\t\te.vector_mode ()));\n+    if (e.op_info->op == OP_TYPE_vv)\n+      return e.use_ternop_insn (true,\n+\t\t\t\tcode_for_pred_mul_plus (e.vector_mode ()));\n+    gcc_unreachable ();\n+  }\n };\n \n-/* Implements vmacc/vnmsac/vmadd/vnmsub.  */\n-template<ternop_type TERNOP_TYPE>\n-class imac : public function_base\n+class vnmsac : public function_base\n {\n public:\n   bool has_merge_operand_p () const override { return false; }\n \n   rtx expand (function_expander &e) const override\n   {\n-    switch (TERNOP_TYPE)\n-      {\n-      case TERNOP_VMACC:\n-\tif (e.op_info->op == OP_TYPE_vx)\n-\t  return e.use_ternop_insn (\n-\t    true, code_for_pred_mul_scalar (PLUS, e.vector_mode ()));\n-\tif (e.op_info->op == OP_TYPE_vv)\n-\t  return e.use_ternop_insn (true,\n-\t\t\t\t    code_for_pred_mul (PLUS, e.vector_mode ()));\n-\tbreak;\n-      case TERNOP_VNMSAC:\n-\tif (e.op_info->op == OP_TYPE_vx)\n-\t  return e.use_ternop_insn (\n-\t    true, code_for_pred_mul_scalar (MINUS, e.vector_mode ()));\n-\tif (e.op_info->op == OP_TYPE_vv)\n-\t  return e.use_ternop_insn (true, code_for_pred_mul (MINUS,\n-\t\t\t\t\t\t\t     e.vector_mode ()));\n-\tbreak;\n-      case TERNOP_VMADD:\n-\tif (e.op_info->op == OP_TYPE_vx)\n-\t  return e.use_ternop_insn (\n-\t    false, code_for_pred_mul_scalar (PLUS, e.vector_mode ()));\n-\tif (e.op_info->op == OP_TYPE_vv)\n-\t  return e.use_ternop_insn (false,\n-\t\t\t\t    code_for_pred_mul (PLUS, e.vector_mode ()));\n-\tbreak;\n-      case TERNOP_VNMSUB:\n-\tif (e.op_info->op == OP_TYPE_vx)\n-\t  return e.use_ternop_insn (\n-\t    false, code_for_pred_mul_scalar (MINUS, e.vector_mode ()));\n-\tif (e.op_info->op == OP_TYPE_vv)\n-\t  return e.use_ternop_insn (false,\n-\t\t\t\t    code_for_pred_mul (MINUS,\n-\t\t\t\t\t\t       e.vector_mode ()));\n-\tbreak;\n-      default:\n-\tbreak;\n-      }\n+    if (e.op_info->op == OP_TYPE_vx)\n+      return e.use_ternop_insn (true, code_for_pred_minus_mul_scalar (\n+\t\t\t\t\te.vector_mode ()));\n+    if (e.op_info->op == OP_TYPE_vv)\n+      return e.use_ternop_insn (true,\n+\t\t\t\tcode_for_pred_minus_mul (e.vector_mode ()));\n     gcc_unreachable ();\n   }\n };\n \n-/* Enumerates types of widen ternary operations.\n-   We have 4 types ternop:\n-     - 1. vwmacc.\n-     - 2. vwmaccu.\n-     - 3. vwmaccsu.\n-     - 4. vwmaccus.  */\n-enum widen_ternop_type\n+class vmadd : public function_base\n {\n-  WIDEN_TERNOP_VWMACC,\n-  WIDEN_TERNOP_VWMACCU,\n-  WIDEN_TERNOP_VWMACCSU,\n-  WIDEN_TERNOP_VWMACCUS,\n+public:\n+  bool has_merge_operand_p () const override { return false; }\n+\n+  rtx expand (function_expander &e) const override\n+  {\n+    if (e.op_info->op == OP_TYPE_vx)\n+      return e.use_ternop_insn (false, code_for_pred_mul_plus_scalar (\n+\t\t\t\t\t e.vector_mode ()));\n+    if (e.op_info->op == OP_TYPE_vv)\n+      return e.use_ternop_insn (false,\n+\t\t\t\tcode_for_pred_mul_plus (e.vector_mode ()));\n+    gcc_unreachable ();\n+  }\n+};\n+\n+class vnmsub : public function_base\n+{\n+public:\n+  bool has_merge_operand_p () const override { return false; }\n+\n+  rtx expand (function_expander &e) const override\n+  {\n+    if (e.op_info->op == OP_TYPE_vx)\n+      return e.use_ternop_insn (false, code_for_pred_minus_mul_scalar (\n+\t\t\t\t\t e.vector_mode ()));\n+    if (e.op_info->op == OP_TYPE_vv)\n+      return e.use_ternop_insn (false,\n+\t\t\t\tcode_for_pred_minus_mul (e.vector_mode ()));\n+    gcc_unreachable ();\n+  }\n };\n \n /* Implements vwmacc<su><su>.  */\n-template<widen_ternop_type WIDEN_TERNOP_TYPE>\n-class iwmac : public function_base\n+class vwmacc : public function_base\n {\n public:\n   bool has_merge_operand_p () const override { return false; }\n \n   rtx expand (function_expander &e) const override\n   {\n-    switch (WIDEN_TERNOP_TYPE)\n-      {\n-      case WIDEN_TERNOP_VWMACC:\n-\tif (e.op_info->op == OP_TYPE_vx)\n-\t  return e.use_widen_ternop_insn (\n-\t    code_for_pred_widen_mul_plus_scalar (SIGN_EXTEND,\n-\t\t\t\t\t\t e.vector_mode ()));\n-\tif (e.op_info->op == OP_TYPE_vv)\n-\t  return e.use_widen_ternop_insn (\n-\t    code_for_pred_widen_mul_plus (SIGN_EXTEND, e.vector_mode ()));\n-\tbreak;\n-      case WIDEN_TERNOP_VWMACCU:\n-\tif (e.op_info->op == OP_TYPE_vx)\n-\t  return e.use_widen_ternop_insn (\n-\t    code_for_pred_widen_mul_plus_scalar (ZERO_EXTEND,\n-\t\t\t\t\t\t e.vector_mode ()));\n-\tif (e.op_info->op == OP_TYPE_vv)\n-\t  return e.use_widen_ternop_insn (\n-\t    code_for_pred_widen_mul_plus (ZERO_EXTEND, e.vector_mode ()));\n-\tbreak;\n-      case WIDEN_TERNOP_VWMACCSU:\n-\tif (e.op_info->op == OP_TYPE_vx)\n-\t  return e.use_widen_ternop_insn (\n-\t    code_for_pred_widen_mul_plussu_scalar (e.vector_mode ()));\n-\tif (e.op_info->op == OP_TYPE_vv)\n-\t  return e.use_widen_ternop_insn (\n-\t    code_for_pred_widen_mul_plussu (e.vector_mode ()));\n-\tbreak;\n-      case WIDEN_TERNOP_VWMACCUS:\n-\treturn e.use_widen_ternop_insn (\n-\t  code_for_pred_widen_mul_plusus_scalar (e.vector_mode ()));\n-      default:\n-\tbreak;\n-      }\n+    if (e.op_info->op == OP_TYPE_vx)\n+      return e.use_widen_ternop_insn (\n+\tcode_for_pred_widen_mul_plus_scalar (SIGN_EXTEND, e.vector_mode ()));\n+    if (e.op_info->op == OP_TYPE_vv)\n+      return e.use_widen_ternop_insn (\n+\tcode_for_pred_widen_mul_plus (SIGN_EXTEND, e.vector_mode ()));\n+    gcc_unreachable ();\n+  }\n+};\n+\n+class vwmaccu : public function_base\n+{\n+public:\n+  bool has_merge_operand_p () const override { return false; }\n+\n+  rtx expand (function_expander &e) const override\n+  {\n+    if (e.op_info->op == OP_TYPE_vx)\n+      return e.use_widen_ternop_insn (\n+\tcode_for_pred_widen_mul_plus_scalar (ZERO_EXTEND, e.vector_mode ()));\n+    if (e.op_info->op == OP_TYPE_vv)\n+      return e.use_widen_ternop_insn (\n+\tcode_for_pred_widen_mul_plus (ZERO_EXTEND, e.vector_mode ()));\n+    gcc_unreachable ();\n+  }\n+};\n+\n+class vwmaccsu : public function_base\n+{\n+public:\n+  bool has_merge_operand_p () const override { return false; }\n+\n+  rtx expand (function_expander &e) const override\n+  {\n+    if (e.op_info->op == OP_TYPE_vx)\n+      return e.use_widen_ternop_insn (\n+\tcode_for_pred_widen_mul_plussu_scalar (e.vector_mode ()));\n+    if (e.op_info->op == OP_TYPE_vv)\n+      return e.use_widen_ternop_insn (\n+\tcode_for_pred_widen_mul_plussu (e.vector_mode ()));\n     gcc_unreachable ();\n   }\n };\n \n+class vwmaccus : public function_base\n+{\n+public:\n+  bool has_merge_operand_p () const override { return false; }\n+\n+  rtx expand (function_expander &e) const override\n+  {\n+    return e.use_widen_ternop_insn (\n+      code_for_pred_widen_mul_plusus_scalar (e.vector_mode ()));\n+  }\n+};\n+\n /* Implements vmand/vmnand/vmandn/vmxor/vmor/vmnor/vmorn/vmxnor  */\n template<rtx_code CODE>\n class mask_logic : public function_base\n@@ -844,6 +930,749 @@ class vid : public function_base\n   }\n };\n \n+/* Implements vfrsub/vfrdiv.  */\n+template<rtx_code CODE>\n+class reverse_binop : public function_base\n+{\n+public:\n+  rtx expand (function_expander &e) const override\n+  {\n+    return e.use_exact_insn (\n+      code_for_pred_reverse_scalar (CODE, e.vector_mode ()));\n+  }\n+};\n+\n+class vfmacc : public function_base\n+{\n+public:\n+  bool has_merge_operand_p () const override { return false; }\n+\n+  rtx expand (function_expander &e) const override\n+  {\n+    if (e.op_info->op == OP_TYPE_vf)\n+      return e.use_ternop_insn (true,\n+\t\t\t\tcode_for_pred_mul_scalar (PLUS,\n+\t\t\t\t\t\t\t  e.vector_mode ()));\n+    if (e.op_info->op == OP_TYPE_vv)\n+      return e.use_ternop_insn (true,\n+\t\t\t\tcode_for_pred_mul (PLUS, e.vector_mode ()));\n+    gcc_unreachable ();\n+  }\n+};\n+\n+class vfnmsac : public function_base\n+{\n+public:\n+  bool has_merge_operand_p () const override { return false; }\n+\n+  rtx expand (function_expander &e) const override\n+  {\n+    if (e.op_info->op == OP_TYPE_vf)\n+      return e.use_ternop_insn (\n+\ttrue, code_for_pred_mul_neg_scalar (PLUS, e.vector_mode ()));\n+    if (e.op_info->op == OP_TYPE_vv)\n+      return e.use_ternop_insn (true,\n+\t\t\t\tcode_for_pred_mul_neg (PLUS, e.vector_mode ()));\n+    gcc_unreachable ();\n+  }\n+};\n+\n+class vfmadd : public function_base\n+{\n+public:\n+  bool has_merge_operand_p () const override { return false; }\n+\n+  rtx expand (function_expander &e) const override\n+  {\n+    if (e.op_info->op == OP_TYPE_vf)\n+      return e.use_ternop_insn (false,\n+\t\t\t\tcode_for_pred_mul_scalar (PLUS,\n+\t\t\t\t\t\t\t  e.vector_mode ()));\n+    if (e.op_info->op == OP_TYPE_vv)\n+      return e.use_ternop_insn (false,\n+\t\t\t\tcode_for_pred_mul (PLUS, e.vector_mode ()));\n+    gcc_unreachable ();\n+  }\n+};\n+\n+class vfnmsub : public function_base\n+{\n+public:\n+  bool has_merge_operand_p () const override { return false; }\n+\n+  rtx expand (function_expander &e) const override\n+  {\n+    if (e.op_info->op == OP_TYPE_vf)\n+      return e.use_ternop_insn (\n+\tfalse, code_for_pred_mul_neg_scalar (PLUS, e.vector_mode ()));\n+    if (e.op_info->op == OP_TYPE_vv)\n+      return e.use_ternop_insn (false,\n+\t\t\t\tcode_for_pred_mul_neg (PLUS, e.vector_mode ()));\n+    gcc_unreachable ();\n+  }\n+};\n+\n+class vfnmacc : public function_base\n+{\n+public:\n+  bool has_merge_operand_p () const override { return false; }\n+\n+  rtx expand (function_expander &e) const override\n+  {\n+    if (e.op_info->op == OP_TYPE_vf)\n+      return e.use_ternop_insn (\n+\ttrue, code_for_pred_mul_neg_scalar (MINUS, e.vector_mode ()));\n+    if (e.op_info->op == OP_TYPE_vv)\n+      return e.use_ternop_insn (true,\n+\t\t\t\tcode_for_pred_mul_neg (MINUS, e.vector_mode ()));\n+    gcc_unreachable ();\n+  }\n+};\n+\n+class vfmsac : public function_base\n+{\n+public:\n+  bool has_merge_operand_p () const override { return false; }\n+\n+  rtx expand (function_expander &e) const override\n+  {\n+    if (e.op_info->op == OP_TYPE_vf)\n+      return e.use_ternop_insn (true,\n+\t\t\t\tcode_for_pred_mul_scalar (MINUS,\n+\t\t\t\t\t\t\t  e.vector_mode ()));\n+    if (e.op_info->op == OP_TYPE_vv)\n+      return e.use_ternop_insn (true,\n+\t\t\t\tcode_for_pred_mul (MINUS, e.vector_mode ()));\n+    gcc_unreachable ();\n+  }\n+};\n+\n+class vfnmadd : public function_base\n+{\n+public:\n+  bool has_merge_operand_p () const override { return false; }\n+\n+  rtx expand (function_expander &e) const override\n+  {\n+    if (e.op_info->op == OP_TYPE_vf)\n+      return e.use_ternop_insn (\n+\tfalse, code_for_pred_mul_neg_scalar (MINUS, e.vector_mode ()));\n+    if (e.op_info->op == OP_TYPE_vv)\n+      return e.use_ternop_insn (false,\n+\t\t\t\tcode_for_pred_mul_neg (MINUS, e.vector_mode ()));\n+    gcc_unreachable ();\n+  }\n+};\n+\n+class vfmsub : public function_base\n+{\n+public:\n+  bool has_merge_operand_p () const override { return false; }\n+\n+  rtx expand (function_expander &e) const override\n+  {\n+    if (e.op_info->op == OP_TYPE_vf)\n+      return e.use_ternop_insn (false,\n+\t\t\t\tcode_for_pred_mul_scalar (MINUS,\n+\t\t\t\t\t\t\t  e.vector_mode ()));\n+    if (e.op_info->op == OP_TYPE_vv)\n+      return e.use_ternop_insn (false,\n+\t\t\t\tcode_for_pred_mul (MINUS, e.vector_mode ()));\n+    gcc_unreachable ();\n+  }\n+};\n+\n+class vfwmacc : public function_base\n+{\n+public:\n+  bool has_merge_operand_p () const override { return false; }\n+\n+  rtx expand (function_expander &e) const override\n+  {\n+    if (e.op_info->op == OP_TYPE_vf)\n+      return e.use_widen_ternop_insn (\n+\tcode_for_pred_widen_mul_scalar (PLUS, e.vector_mode ()));\n+    if (e.op_info->op == OP_TYPE_vv)\n+      return e.use_widen_ternop_insn (\n+\tcode_for_pred_widen_mul (PLUS, e.vector_mode ()));\n+    gcc_unreachable ();\n+  }\n+};\n+\n+class vfwnmacc : public function_base\n+{\n+public:\n+  bool has_merge_operand_p () const override { return false; }\n+\n+  rtx expand (function_expander &e) const override\n+  {\n+    if (e.op_info->op == OP_TYPE_vf)\n+      return e.use_widen_ternop_insn (\n+\tcode_for_pred_widen_mul_neg_scalar (MINUS, e.vector_mode ()));\n+    if (e.op_info->op == OP_TYPE_vv)\n+      return e.use_widen_ternop_insn (\n+\tcode_for_pred_widen_mul_neg (MINUS, e.vector_mode ()));\n+    gcc_unreachable ();\n+  }\n+};\n+\n+class vfwmsac : public function_base\n+{\n+public:\n+  bool has_merge_operand_p () const override { return false; }\n+\n+  rtx expand (function_expander &e) const override\n+  {\n+    if (e.op_info->op == OP_TYPE_vf)\n+      return e.use_widen_ternop_insn (\n+\tcode_for_pred_widen_mul_scalar (MINUS, e.vector_mode ()));\n+    if (e.op_info->op == OP_TYPE_vv)\n+      return e.use_widen_ternop_insn (\n+\tcode_for_pred_widen_mul (MINUS, e.vector_mode ()));\n+    gcc_unreachable ();\n+  }\n+};\n+\n+class vfwnmsac : public function_base\n+{\n+public:\n+  bool has_merge_operand_p () const override { return false; }\n+\n+  rtx expand (function_expander &e) const override\n+  {\n+    if (e.op_info->op == OP_TYPE_vf)\n+      return e.use_widen_ternop_insn (\n+\tcode_for_pred_widen_mul_neg_scalar (PLUS, e.vector_mode ()));\n+    if (e.op_info->op == OP_TYPE_vv)\n+      return e.use_widen_ternop_insn (\n+\tcode_for_pred_widen_mul_neg (PLUS, e.vector_mode ()));\n+    gcc_unreachable ();\n+  }\n+};\n+\n+/* Implements vfsqrt7/vfrec7/vfclass/vfsgnj/vfsgnjn/vfsgnjx.  */\n+template<int UNSPEC>\n+class float_misc : public function_base\n+{\n+public:\n+  rtx expand (function_expander &e) const override\n+  {\n+    if (e.op_info->op == OP_TYPE_vf)\n+      return e.use_exact_insn (code_for_pred_scalar (UNSPEC, e.vector_mode ()));\n+    if (e.op_info->op == OP_TYPE_vv || e.op_info->op == OP_TYPE_v)\n+      return e.use_exact_insn (code_for_pred (UNSPEC, e.vector_mode ()));\n+    gcc_unreachable ();\n+  }\n+};\n+\n+/* Implements vmfeq/vmfne/vmflt/vmfgt/vmfle/vmfge.  */\n+template<rtx_code CODE>\n+class fcmp : public function_base\n+{\n+public:\n+  rtx expand (function_expander &e) const override\n+  {\n+    switch (e.op_info->op)\n+      {\n+\tcase OP_TYPE_vf: {\n+\t  if (CODE == EQ || CODE == NE)\n+\t    return e.use_compare_insn (CODE, code_for_pred_eqne_scalar (\n+\t\t\t\t\t       e.vector_mode ()));\n+\t  else\n+\t    return e.use_compare_insn (CODE, code_for_pred_cmp_scalar (\n+\t\t\t\t\t       e.vector_mode ()));\n+\t}\n+\tcase OP_TYPE_vv: {\n+\t  return e.use_compare_insn (CODE,\n+\t\t\t\t     code_for_pred_cmp (e.vector_mode ()));\n+\t}\n+      default:\n+\tgcc_unreachable ();\n+      }\n+  }\n+};\n+\n+/* Implements vfclass.  */\n+class vfclass : public function_base\n+{\n+public:\n+  rtx expand (function_expander &e) const override\n+  {\n+    return e.use_exact_insn (code_for_pred_class (e.arg_mode (0)));\n+  }\n+};\n+\n+/* Implements vfcvt.x.  */\n+template<int UNSPEC>\n+class vfcvt_x : public function_base\n+{\n+public:\n+  rtx expand (function_expander &e) const override\n+  {\n+    return e.use_exact_insn (code_for_pred_fcvt_x_f (UNSPEC, e.arg_mode (0)));\n+  }\n+};\n+\n+/* Implements vfcvt.rtz.x.  */\n+template<rtx_code CODE>\n+class vfcvt_rtz_x : public function_base\n+{\n+public:\n+  rtx expand (function_expander &e) const override\n+  {\n+    return e.use_exact_insn (code_for_pred (CODE, e.arg_mode (0)));\n+  }\n+};\n+\n+class vfcvt_f : public function_base\n+{\n+public:\n+  rtx expand (function_expander &e) const override\n+  {\n+    if (e.op_info->op == OP_TYPE_x_v)\n+      return e.use_exact_insn (code_for_pred (FLOAT, e.vector_mode ()));\n+    if (e.op_info->op == OP_TYPE_xu_v)\n+      return e.use_exact_insn (\n+\tcode_for_pred (UNSIGNED_FLOAT, e.vector_mode ()));\n+    gcc_unreachable ();\n+  }\n+};\n+\n+/* Implements vfwcvt.x.  */\n+template<int UNSPEC>\n+class vfwcvt_x : public function_base\n+{\n+public:\n+  rtx expand (function_expander &e) const override\n+  {\n+    return e.use_exact_insn (\n+      code_for_pred_widen_fcvt_x_f (UNSPEC, e.vector_mode ()));\n+  }\n+};\n+\n+/* Implements vfwcvt.rtz.x.  */\n+template<rtx_code CODE>\n+class vfwcvt_rtz_x : public function_base\n+{\n+public:\n+  rtx expand (function_expander &e) const override\n+  {\n+    return e.use_exact_insn (code_for_pred_widen (CODE, e.vector_mode ()));\n+  }\n+};\n+\n+class vfwcvt_f : public function_base\n+{\n+public:\n+  rtx expand (function_expander &e) const override\n+  {\n+    if (e.op_info->op == OP_TYPE_f_v)\n+      return e.use_exact_insn (code_for_pred_extend (e.vector_mode ()));\n+    if (e.op_info->op == OP_TYPE_x_v)\n+      return e.use_exact_insn (code_for_pred_widen (FLOAT, e.vector_mode ()));\n+    if (e.op_info->op == OP_TYPE_xu_v)\n+      return e.use_exact_insn (\n+\tcode_for_pred_widen (UNSIGNED_FLOAT, e.vector_mode ()));\n+    gcc_unreachable ();\n+  }\n+};\n+\n+/* Implements vfncvt.x.  */\n+template<int UNSPEC>\n+class vfncvt_x : public function_base\n+{\n+public:\n+  rtx expand (function_expander &e) const override\n+  {\n+    return e.use_exact_insn (\n+      code_for_pred_narrow_fcvt_x_f (UNSPEC, e.arg_mode (0)));\n+  }\n+};\n+\n+/* Implements vfncvt.rtz.x.  */\n+template<rtx_code CODE>\n+class vfncvt_rtz_x : public function_base\n+{\n+public:\n+  rtx expand (function_expander &e) const override\n+  {\n+    return e.use_exact_insn (code_for_pred_narrow (CODE, e.vector_mode ()));\n+  }\n+};\n+\n+class vfncvt_f : public function_base\n+{\n+public:\n+  rtx expand (function_expander &e) const override\n+  {\n+    if (e.op_info->op == OP_TYPE_f_w)\n+      return e.use_exact_insn (code_for_pred_trunc (e.vector_mode ()));\n+    if (e.op_info->op == OP_TYPE_x_w)\n+      return e.use_exact_insn (code_for_pred_narrow (FLOAT, e.arg_mode (0)));\n+    if (e.op_info->op == OP_TYPE_xu_w)\n+      return e.use_exact_insn (\n+\tcode_for_pred_narrow (UNSIGNED_FLOAT, e.arg_mode (0)));\n+    gcc_unreachable ();\n+  }\n+};\n+\n+class vfncvt_rod_f : public function_base\n+{\n+public:\n+  rtx expand (function_expander &e) const override\n+  {\n+    return e.use_exact_insn (code_for_pred_rod_trunc (e.vector_mode ()));\n+  }\n+};\n+\n+/* Implements reduction instructions.  */\n+template<rtx_code CODE>\n+class reducop : public function_base\n+{\n+public:\n+  bool apply_mask_policy_p () const override { return false; }\n+\n+  rtx expand (function_expander &e) const override\n+  {\n+    return e.use_exact_insn (\n+      code_for_pred_reduc (CODE, e.vector_mode (), e.vector_mode ()));\n+  }\n+};\n+\n+/* Implements widen reduction instructions.  */\n+template<int UNSPEC>\n+class widen_reducop : public function_base\n+{\n+public:\n+  bool apply_mask_policy_p () const override { return false; }\n+\n+  rtx expand (function_expander &e) const override\n+  {\n+    return e.use_exact_insn (code_for_pred_widen_reduc_plus (UNSPEC,\n+\t\t\t\t\t\t\t     e.vector_mode (),\n+\t\t\t\t\t\t\t     e.vector_mode ()));\n+  }\n+};\n+\n+/* Implements floating-point reduction instructions.  */\n+template<int UNSPEC>\n+class freducop : public function_base\n+{\n+public:\n+  bool apply_mask_policy_p () const override { return false; }\n+\n+  rtx expand (function_expander &e) const override\n+  {\n+    return e.use_exact_insn (\n+      code_for_pred_reduc_plus (UNSPEC, e.vector_mode (), e.vector_mode ()));\n+  }\n+};\n+\n+/* Implements widening floating-point reduction instructions.  */\n+template<int UNSPEC>\n+class widen_freducop : public function_base\n+{\n+public:\n+  bool apply_mask_policy_p () const override { return false; }\n+\n+  rtx expand (function_expander &e) const override\n+  {\n+    return e.use_exact_insn (code_for_pred_widen_reduc_plus (UNSPEC,\n+\t\t\t\t\t\t\t     e.vector_mode (),\n+\t\t\t\t\t\t\t     e.vector_mode ()));\n+  }\n+};\n+\n+/* Implements vmv/vfmv instructions.  */\n+class vmv : public function_base\n+{\n+public:\n+  bool apply_vl_p () const override { return false; }\n+  bool apply_tail_policy_p () const override { return false; }\n+  bool apply_mask_policy_p () const override { return false; }\n+  bool use_mask_predication_p () const override { return false; }\n+  bool has_merge_operand_p () const override { return false; }\n+\n+  rtx expand (function_expander &e) const override\n+  {\n+    return e.use_exact_insn (code_for_pred_extract_first (e.vector_mode ()));\n+  }\n+};\n+\n+/* Implements vmv.s.x/vfmv.s.f.  */\n+class vmv_s : public function_base\n+{\n+public:\n+  rtx expand (function_expander &e) const override\n+  {\n+    return e.use_scalar_move_insn (code_for_pred_broadcast (e.vector_mode ()));\n+  }\n+};\n+\n+template<int UNSPEC>\n+class slideop : public function_base\n+{\n+public:\n+  bool has_merge_operand_p () const override\n+  {\n+    if (UNSPEC == UNSPEC_VSLIDEUP)\n+      return false;\n+    return true;\n+  }\n+\n+  rtx expand (function_expander &e) const override\n+  {\n+    return e.use_exact_insn (code_for_pred_slide (UNSPEC, e.vector_mode ()));\n+  }\n+};\n+\n+class vrgather : public function_base\n+{\n+public:\n+  rtx expand (function_expander &e) const override\n+  {\n+    switch (e.op_info->op)\n+      {\n+      case OP_TYPE_vx:\n+\treturn e.use_exact_insn (\n+\t  code_for_pred_gather_scalar (e.vector_mode ()));\n+      case OP_TYPE_vv:\n+\treturn e.use_exact_insn (code_for_pred_gather (e.vector_mode ()));\n+      default:\n+\tgcc_unreachable ();\n+      }\n+  }\n+};\n+\n+class vrgatherei16 : public function_base\n+{\n+public:\n+  rtx expand (function_expander &e) const override\n+  {\n+    return e.use_exact_insn (code_for_pred_gatherei16 (e.vector_mode ()));\n+  }\n+};\n+\n+class vcompress : public function_base\n+{\n+public:\n+  bool apply_mask_policy_p () const override { return false; }\n+  bool use_mask_predication_p () const override { return false; }\n+  rtx expand (function_expander &e) const override\n+  {\n+    return e.use_exact_insn (code_for_pred_compress (e.vector_mode ()));\n+  }\n+};\n+\n+class vundefined : public function_base\n+{\n+public:\n+  bool apply_vl_p () const override\n+  {\n+    return false;\n+  }\n+\n+  rtx expand (function_expander &e) const override\n+  {\n+    return e.generate_insn (code_for_vundefined (e.vector_mode ()));\n+  }\n+};\n+\n+class vreinterpret : public function_base\n+{\n+public:\n+  bool apply_vl_p () const override\n+  {\n+    return false;\n+  }\n+\n+  rtx expand (function_expander &e) const override\n+  {\n+    e.add_input_operand (0);\n+    return e.generate_insn (code_for_vreinterpret (e.ret_mode ()));\n+  }\n+};\n+\n+class vlmul_ext : public function_base\n+{\n+public:\n+  bool apply_vl_p () const override\n+  {\n+    return false;\n+  }\n+\n+  rtx expand (function_expander &e) const override\n+  {\n+    e.add_input_operand (0);\n+    switch (e.op_info->ret.base_type)\n+      {\n+      case RVV_BASE_vlmul_ext_x2:\n+\treturn e.generate_insn (\n+\t  code_for_vlmul_extx2 (e.vector_mode ()));\n+      case RVV_BASE_vlmul_ext_x4:\n+\treturn e.generate_insn (\n+\t  code_for_vlmul_extx4 (e.vector_mode ()));\n+      case RVV_BASE_vlmul_ext_x8:\n+\treturn e.generate_insn (\n+\t  code_for_vlmul_extx8 (e.vector_mode ()));\n+      case RVV_BASE_vlmul_ext_x16:\n+\treturn e.generate_insn (\n+\t  code_for_vlmul_extx16 (e.vector_mode ()));\n+      case RVV_BASE_vlmul_ext_x32:\n+\treturn e.generate_insn (\n+\t  code_for_vlmul_extx32 (e.vector_mode ()));\n+      case RVV_BASE_vlmul_ext_x64:\n+\treturn e.generate_insn (\n+\t  code_for_vlmul_extx64 (e.vector_mode ()));\n+      default:\n+\tgcc_unreachable ();\n+      }\n+  }\n+};\n+\n+class vlmul_trunc : public function_base\n+{\n+public:\n+  bool apply_vl_p () const override { return false; }\n+\n+  rtx expand (function_expander &e) const override\n+  {\n+    rtx src = expand_normal (CALL_EXPR_ARG (e.exp, 0));\n+    emit_move_insn (e.target, gen_lowpart (GET_MODE (e.target), src));\n+    return e.target;\n+  }\n+};\n+\n+class vset : public function_base\n+{\n+public:\n+  bool apply_vl_p () const override { return false; }\n+\n+  rtx expand (function_expander &e) const override\n+  {\n+    rtx dest = expand_normal (CALL_EXPR_ARG (e.exp, 0));\n+    rtx index = expand_normal (CALL_EXPR_ARG (e.exp, 1));\n+    rtx src = expand_normal (CALL_EXPR_ARG (e.exp, 2));\n+    poly_int64 offset = INTVAL (index) * GET_MODE_SIZE (GET_MODE (src));\n+    emit_move_insn (e.target, dest);\n+    rtx subreg = simplify_gen_subreg (GET_MODE (src), e.target,\n+\t\t\t\t      GET_MODE (e.target), offset);\n+    emit_move_insn (subreg, src);\n+    return e.target;\n+  }\n+};\n+\n+class vget : public function_base\n+{\n+public:\n+  bool apply_vl_p () const override { return false; }\n+\n+  rtx expand (function_expander &e) const override\n+  {\n+    rtx src = expand_normal (CALL_EXPR_ARG (e.exp, 0));\n+    rtx index = expand_normal (CALL_EXPR_ARG (e.exp, 1));\n+    poly_int64 offset = INTVAL (index) * GET_MODE_SIZE (GET_MODE (e.target));\n+    rtx subreg\n+      = simplify_gen_subreg (GET_MODE (e.target), src, GET_MODE (src), offset);\n+    return subreg;\n+  }\n+};\n+\n+class read_vl : public function_base\n+{\n+public:\n+  unsigned int call_properties (const function_instance &) const override\n+  {\n+    return CP_READ_CSR;\n+  }\n+\n+  rtx expand (function_expander &e) const override\n+  {\n+    if (Pmode == SImode)\n+      emit_insn (gen_read_vlsi (e.target));\n+    else\n+      emit_insn (gen_read_vldi_zero_extend (e.target));\n+    return e.target;\n+  }\n+};\n+\n+class vleff : public function_base\n+{\n+public:\n+  unsigned int call_properties (const function_instance &) const override\n+  {\n+    return CP_READ_MEMORY | CP_WRITE_CSR;\n+  }\n+\n+  gimple *fold (gimple_folder &f) const override\n+  {\n+    /* fold vleff (const *base, size_t *new_vl, size_t vl)\n+\n+       ====> vleff (const *base, size_t vl)\n+\t     new_vl = MEM_REF[read_vl ()].  */\n+\n+    auto_vec<tree> vargs (gimple_call_num_args (f.call) - 1);\n+\n+    for (unsigned i = 0; i < gimple_call_num_args (f.call); i++)\n+      {\n+\t/* Exclude size_t *new_vl argument.  */\n+\tif (i == gimple_call_num_args (f.call) - 2)\n+\t  continue;\n+\n+\tvargs.quick_push (gimple_call_arg (f.call, i));\n+      }\n+\n+    gimple *repl = gimple_build_call_vec (gimple_call_fn (f.call), vargs);\n+    gimple_call_set_lhs (repl, f.lhs);\n+\n+    /* Handle size_t *new_vl by read_vl.  */\n+    tree new_vl = gimple_call_arg (f.call, gimple_call_num_args (f.call) - 2);\n+    if (integer_zerop (new_vl))\n+      {\n+\t/* This case happens when user passes the nullptr to new_vl argument.\n+\t   In this case, we just need to ignore the new_vl argument and return\n+\t   vleff instruction directly. */\n+\treturn repl;\n+      }\n+\n+    tree tmp_var = create_tmp_var (size_type_node, \"new_vl\");\n+    tree decl = get_read_vl_decl ();\n+    gimple *g = gimple_build_call (decl, 0);\n+    gimple_call_set_lhs (g, tmp_var);\n+    tree indirect\n+      = fold_build2 (MEM_REF, size_type_node,\n+\t\t     gimple_call_arg (f.call,\n+\t\t\t\t      gimple_call_num_args (f.call) - 2),\n+\t\t     build_int_cst (build_pointer_type (size_type_node), 0));\n+    gassign *assign = gimple_build_assign (indirect, tmp_var);\n+\n+    gsi_insert_after (f.gsi, assign, GSI_SAME_STMT);\n+    gsi_insert_after (f.gsi, g, GSI_SAME_STMT);\n+    return repl;\n+  }\n+\n+  rtx expand (function_expander &e) const override\n+  {\n+    return e.use_contiguous_load_insn (\n+      code_for_pred_fault_load (e.vector_mode ()));\n+  }\n+};\n+\n+/* Implements vlenb.  */\n+class vlenb : public function_base\n+{\n+public:\n+  bool apply_vl_p () const override { return false; }\n+\n+  rtx expand (function_expander &e) const override\n+  {\n+    machine_mode mode = GET_MODE (e.target);\n+    rtx vlenb = gen_int_mode (BYTES_PER_RISCV_VECTOR, mode);\n+    emit_move_insn (e.target, vlenb);\n+    return e.target;\n+  }\n+};\n+\n static CONSTEXPR const vsetvl<false> vsetvl_obj;\n static CONSTEXPR const vsetvl<true> vsetvlmax_obj;\n static CONSTEXPR const loadstore<false, LST_UNIT_STRIDE, false> vle_obj;\n@@ -921,14 +1750,14 @@ static CONSTEXPR const icmp<LTU> vmsltu_obj;\n static CONSTEXPR const icmp<GTU> vmsgtu_obj;\n static CONSTEXPR const icmp<LEU> vmsleu_obj;\n static CONSTEXPR const icmp<GEU> vmsgeu_obj;\n-static CONSTEXPR const imac<TERNOP_VMACC> vmacc_obj;\n-static CONSTEXPR const imac<TERNOP_VNMSAC> vnmsac_obj;\n-static CONSTEXPR const imac<TERNOP_VMADD> vmadd_obj;\n-static CONSTEXPR const imac<TERNOP_VNMSUB> vnmsub_obj;\n-static CONSTEXPR const iwmac<WIDEN_TERNOP_VWMACC> vwmacc_obj;\n-static CONSTEXPR const iwmac<WIDEN_TERNOP_VWMACCU> vwmaccu_obj;\n-static CONSTEXPR const iwmac<WIDEN_TERNOP_VWMACCSU> vwmaccsu_obj;\n-static CONSTEXPR const iwmac<WIDEN_TERNOP_VWMACCUS> vwmaccus_obj;\n+static CONSTEXPR const vmacc vmacc_obj;\n+static CONSTEXPR const vnmsac vnmsac_obj;\n+static CONSTEXPR const vmadd vmadd_obj;\n+static CONSTEXPR const vnmsub vnmsub_obj;\n+static CONSTEXPR const vwmacc vwmacc_obj;\n+static CONSTEXPR const vwmaccu vwmaccu_obj;\n+static CONSTEXPR const vwmaccsu vwmaccsu_obj;\n+static CONSTEXPR const vwmaccus vwmaccus_obj;\n static CONSTEXPR const binop<SS_PLUS> vsadd_obj;\n static CONSTEXPR const binop<SS_MINUS> vssub_obj;\n static CONSTEXPR const binop<US_PLUS> vsaddu_obj;\n@@ -961,6 +1790,100 @@ static CONSTEXPR const mask_misc<UNSPEC_VMSIF> vmsif_obj;\n static CONSTEXPR const mask_misc<UNSPEC_VMSOF> vmsof_obj;\n static CONSTEXPR const viota viota_obj;\n static CONSTEXPR const vid vid_obj;\n+static CONSTEXPR const binop<PLUS> vfadd_obj;\n+static CONSTEXPR const binop<MINUS> vfsub_obj;\n+static CONSTEXPR const reverse_binop<MINUS> vfrsub_obj;\n+static CONSTEXPR const widen_binop<PLUS> vfwadd_obj;\n+static CONSTEXPR const widen_binop<MINUS> vfwsub_obj;\n+static CONSTEXPR const binop<MULT> vfmul_obj;\n+static CONSTEXPR const binop<DIV> vfdiv_obj;\n+static CONSTEXPR const reverse_binop<DIV> vfrdiv_obj;\n+static CONSTEXPR const widen_binop<MULT> vfwmul_obj;\n+static CONSTEXPR const vfmacc vfmacc_obj;\n+static CONSTEXPR const vfnmsac vfnmsac_obj;\n+static CONSTEXPR const vfmadd vfmadd_obj;\n+static CONSTEXPR const vfnmsub vfnmsub_obj;\n+static CONSTEXPR const vfnmacc vfnmacc_obj;\n+static CONSTEXPR const vfmsac vfmsac_obj;\n+static CONSTEXPR const vfnmadd vfnmadd_obj;\n+static CONSTEXPR const vfmsub vfmsub_obj;\n+static CONSTEXPR const vfwmacc vfwmacc_obj;\n+static CONSTEXPR const vfwnmacc vfwnmacc_obj;\n+static CONSTEXPR const vfwmsac vfwmsac_obj;\n+static CONSTEXPR const vfwnmsac vfwnmsac_obj;\n+static CONSTEXPR const unop<SQRT> vfsqrt_obj;\n+static CONSTEXPR const float_misc<UNSPEC_VFRSQRT7> vfrsqrt7_obj;\n+static CONSTEXPR const float_misc<UNSPEC_VFREC7> vfrec7_obj;\n+static CONSTEXPR const binop<SMIN> vfmin_obj;\n+static CONSTEXPR const binop<SMAX> vfmax_obj;\n+static CONSTEXPR const float_misc<UNSPEC_VCOPYSIGN> vfsgnj_obj;\n+static CONSTEXPR const float_misc<UNSPEC_VNCOPYSIGN> vfsgnjn_obj;\n+static CONSTEXPR const float_misc<UNSPEC_VXORSIGN> vfsgnjx_obj;\n+static CONSTEXPR const unop<NEG> vfneg_obj;\n+static CONSTEXPR const unop<ABS> vfabs_obj;\n+static CONSTEXPR const fcmp<EQ> vmfeq_obj;\n+static CONSTEXPR const fcmp<NE> vmfne_obj;\n+static CONSTEXPR const fcmp<LT> vmflt_obj;\n+static CONSTEXPR const fcmp<GT> vmfgt_obj;\n+static CONSTEXPR const fcmp<LE> vmfle_obj;\n+static CONSTEXPR const fcmp<GE> vmfge_obj;\n+static CONSTEXPR const vfclass vfclass_obj;\n+static CONSTEXPR const vmerge vfmerge_obj;\n+static CONSTEXPR const vmv_v vfmv_v_obj;\n+static CONSTEXPR const vfcvt_x<UNSPEC_VFCVT> vfcvt_x_obj;\n+static CONSTEXPR const vfcvt_x<UNSPEC_UNSIGNED_VFCVT> vfcvt_xu_obj;\n+static CONSTEXPR const vfcvt_rtz_x<FIX> vfcvt_rtz_x_obj;\n+static CONSTEXPR const vfcvt_rtz_x<UNSIGNED_FIX> vfcvt_rtz_xu_obj;\n+static CONSTEXPR const vfcvt_f vfcvt_f_obj;\n+static CONSTEXPR const vfwcvt_x<UNSPEC_VFCVT> vfwcvt_x_obj;\n+static CONSTEXPR const vfwcvt_x<UNSPEC_UNSIGNED_VFCVT> vfwcvt_xu_obj;\n+static CONSTEXPR const vfwcvt_rtz_x<FIX> vfwcvt_rtz_x_obj;\n+static CONSTEXPR const vfwcvt_rtz_x<UNSIGNED_FIX> vfwcvt_rtz_xu_obj;\n+static CONSTEXPR const vfwcvt_f vfwcvt_f_obj;\n+static CONSTEXPR const vfncvt_x<UNSPEC_VFCVT> vfncvt_x_obj;\n+static CONSTEXPR const vfncvt_x<UNSPEC_UNSIGNED_VFCVT> vfncvt_xu_obj;\n+static CONSTEXPR const vfncvt_rtz_x<FIX> vfncvt_rtz_x_obj;\n+static CONSTEXPR const vfncvt_rtz_x<UNSIGNED_FIX> vfncvt_rtz_xu_obj;\n+static CONSTEXPR const vfncvt_f vfncvt_f_obj;\n+static CONSTEXPR const vfncvt_rod_f vfncvt_rod_f_obj;\n+static CONSTEXPR const reducop<PLUS> vredsum_obj;\n+static CONSTEXPR const reducop<UMAX> vredmaxu_obj;\n+static CONSTEXPR const reducop<SMAX> vredmax_obj;\n+static CONSTEXPR const reducop<UMIN> vredminu_obj;\n+static CONSTEXPR const reducop<SMIN> vredmin_obj;\n+static CONSTEXPR const reducop<AND> vredand_obj;\n+static CONSTEXPR const reducop<IOR> vredor_obj;\n+static CONSTEXPR const reducop<XOR> vredxor_obj;\n+static CONSTEXPR const widen_reducop<UNSPEC_WREDUC_SUM> vwredsum_obj;\n+static CONSTEXPR const widen_reducop<UNSPEC_WREDUC_USUM> vwredsumu_obj;\n+static CONSTEXPR const freducop<UNSPEC_UNORDERED> vfredusum_obj;\n+static CONSTEXPR const freducop<UNSPEC_ORDERED> vfredosum_obj;\n+static CONSTEXPR const reducop<SMAX> vfredmax_obj;\n+static CONSTEXPR const reducop<SMIN> vfredmin_obj;\n+static CONSTEXPR const widen_freducop<UNSPEC_UNORDERED> vfwredusum_obj;\n+static CONSTEXPR const widen_freducop<UNSPEC_ORDERED> vfwredosum_obj;\n+static CONSTEXPR const vmv vmv_x_obj;\n+static CONSTEXPR const vmv_s vmv_s_obj;\n+static CONSTEXPR const vmv vfmv_f_obj;\n+static CONSTEXPR const vmv_s vfmv_s_obj;\n+static CONSTEXPR const slideop<UNSPEC_VSLIDEUP> vslideup_obj;\n+static CONSTEXPR const slideop<UNSPEC_VSLIDEDOWN> vslidedown_obj;\n+static CONSTEXPR const slideop<UNSPEC_VSLIDE1UP> vslide1up_obj;\n+static CONSTEXPR const slideop<UNSPEC_VSLIDE1DOWN> vslide1down_obj;\n+static CONSTEXPR const slideop<UNSPEC_VFSLIDE1UP> vfslide1up_obj;\n+static CONSTEXPR const slideop<UNSPEC_VFSLIDE1DOWN> vfslide1down_obj;\n+static CONSTEXPR const vrgather vrgather_obj;\n+static CONSTEXPR const vrgatherei16 vrgatherei16_obj;\n+static CONSTEXPR const vcompress vcompress_obj;\n+static CONSTEXPR const vundefined vundefined_obj;\n+static CONSTEXPR const vreinterpret vreinterpret_obj;\n+static CONSTEXPR const vlmul_ext vlmul_ext_obj;\n+static CONSTEXPR const vlmul_trunc vlmul_trunc_obj;\n+static CONSTEXPR const vset vset_obj;\n+static CONSTEXPR const vget vget_obj;\n+static CONSTEXPR const read_vl read_vl_obj;\n+static CONSTEXPR const vleff vleff_obj;\n+static CONSTEXPR const vlenb vlenb_obj;\n \n /* Declare the function base NAME, pointing it to an instance\n    of class <NAME>_obj.  */\n@@ -1084,5 +2007,99 @@ BASE (vmsif)\n BASE (vmsof)\n BASE (viota)\n BASE (vid)\n+BASE (vfadd)\n+BASE (vfsub)\n+BASE (vfrsub)\n+BASE (vfwadd)\n+BASE (vfwsub)\n+BASE (vfmul)\n+BASE (vfdiv)\n+BASE (vfrdiv)\n+BASE (vfwmul)\n+BASE (vfmacc)\n+BASE (vfnmsac)\n+BASE (vfmadd)\n+BASE (vfnmsub)\n+BASE (vfnmacc)\n+BASE (vfmsac)\n+BASE (vfnmadd)\n+BASE (vfmsub)\n+BASE (vfwmacc)\n+BASE (vfwnmacc)\n+BASE (vfwmsac)\n+BASE (vfwnmsac)\n+BASE (vfsqrt)\n+BASE (vfrsqrt7)\n+BASE (vfrec7)\n+BASE (vfmin)\n+BASE (vfmax)\n+BASE (vfsgnj)\n+BASE (vfsgnjn)\n+BASE (vfsgnjx)\n+BASE (vfneg)\n+BASE (vfabs)\n+BASE (vmfeq)\n+BASE (vmfne)\n+BASE (vmflt)\n+BASE (vmfgt)\n+BASE (vmfle)\n+BASE (vmfge)\n+BASE (vfclass)\n+BASE (vfmerge)\n+BASE (vfmv_v)\n+BASE (vfcvt_x)\n+BASE (vfcvt_xu)\n+BASE (vfcvt_rtz_x)\n+BASE (vfcvt_rtz_xu)\n+BASE (vfcvt_f)\n+BASE (vfwcvt_x)\n+BASE (vfwcvt_xu)\n+BASE (vfwcvt_rtz_x)\n+BASE (vfwcvt_rtz_xu)\n+BASE (vfwcvt_f)\n+BASE (vfncvt_x)\n+BASE (vfncvt_xu)\n+BASE (vfncvt_rtz_x)\n+BASE (vfncvt_rtz_xu)\n+BASE (vfncvt_f)\n+BASE (vfncvt_rod_f)\n+BASE (vredsum)\n+BASE (vredmaxu)\n+BASE (vredmax)\n+BASE (vredminu)\n+BASE (vredmin)\n+BASE (vredand)\n+BASE (vredor)\n+BASE (vredxor)\n+BASE (vwredsum)\n+BASE (vwredsumu)\n+BASE (vfredusum)\n+BASE (vfredosum)\n+BASE (vfredmax)\n+BASE (vfredmin)\n+BASE (vfwredosum)\n+BASE (vfwredusum)\n+BASE (vmv_x)\n+BASE (vmv_s)\n+BASE (vfmv_f)\n+BASE (vfmv_s)\n+BASE (vslideup)\n+BASE (vslidedown)\n+BASE (vslide1up)\n+BASE (vslide1down)\n+BASE (vfslide1up)\n+BASE (vfslide1down)\n+BASE (vrgather)\n+BASE (vrgatherei16)\n+BASE (vcompress)\n+BASE (vundefined)\n+BASE (vreinterpret)\n+BASE (vlmul_ext)\n+BASE (vlmul_trunc)\n+BASE (vset)\n+BASE (vget)\n+BASE (read_vl)\n+BASE (vleff)\n+BASE (vlenb)\n \n } // end namespace riscv_vector"}, {"sha": "0196f80b69e21a4a7c5aa17fe1ba8880a03cfd5a", "filename": "gcc/config/riscv/riscv-vector-builtins-bases.h", "status": "modified", "additions": 98, "deletions": 0, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-vector-builtins-bases.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-vector-builtins-bases.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-vector-builtins-bases.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -143,6 +143,104 @@ extern const function_base *const vmsif;\n extern const function_base *const vmsof;\n extern const function_base *const viota;\n extern const function_base *const vid;\n+extern const function_base *const vfadd;\n+extern const function_base *const vfadd;\n+extern const function_base *const vfsub;\n+extern const function_base *const vfsub;\n+extern const function_base *const vfrsub;\n+extern const function_base *const vfwadd;\n+extern const function_base *const vfwsub;\n+extern const function_base *const vfmul;\n+extern const function_base *const vfmul;\n+extern const function_base *const vfdiv;\n+extern const function_base *const vfdiv;\n+extern const function_base *const vfrdiv;\n+extern const function_base *const vfwmul;\n+extern const function_base *const vfmacc;\n+extern const function_base *const vfnmsac;\n+extern const function_base *const vfmadd;\n+extern const function_base *const vfnmsub;\n+extern const function_base *const vfnmacc;\n+extern const function_base *const vfmsac;\n+extern const function_base *const vfnmadd;\n+extern const function_base *const vfmsub;\n+extern const function_base *const vfwmacc;\n+extern const function_base *const vfwnmacc;\n+extern const function_base *const vfwmsac;\n+extern const function_base *const vfwnmsac;\n+extern const function_base *const vfsqrt;\n+extern const function_base *const vfrsqrt7;\n+extern const function_base *const vfrec7;\n+extern const function_base *const vfmin;\n+extern const function_base *const vfmax;\n+extern const function_base *const vfsgnj;\n+extern const function_base *const vfsgnjn;\n+extern const function_base *const vfsgnjx;\n+extern const function_base *const vfneg;\n+extern const function_base *const vfabs;\n+extern const function_base *const vmfeq;\n+extern const function_base *const vmfne;\n+extern const function_base *const vmflt;\n+extern const function_base *const vmfgt;\n+extern const function_base *const vmfle;\n+extern const function_base *const vmfge;\n+extern const function_base *const vfclass;\n+extern const function_base *const vfmerge;\n+extern const function_base *const vfmv_v;\n+extern const function_base *const vfcvt_x;\n+extern const function_base *const vfcvt_xu;\n+extern const function_base *const vfcvt_rtz_x;\n+extern const function_base *const vfcvt_rtz_xu;\n+extern const function_base *const vfcvt_f;\n+extern const function_base *const vfwcvt_x;\n+extern const function_base *const vfwcvt_xu;\n+extern const function_base *const vfwcvt_rtz_x;\n+extern const function_base *const vfwcvt_rtz_xu;\n+extern const function_base *const vfwcvt_f;\n+extern const function_base *const vfncvt_x;\n+extern const function_base *const vfncvt_xu;\n+extern const function_base *const vfncvt_rtz_x;\n+extern const function_base *const vfncvt_rtz_xu;\n+extern const function_base *const vfncvt_f;\n+extern const function_base *const vfncvt_rod_f;\n+extern const function_base *const vredsum;\n+extern const function_base *const vredmaxu;\n+extern const function_base *const vredmax;\n+extern const function_base *const vredminu;\n+extern const function_base *const vredmin;\n+extern const function_base *const vredand;\n+extern const function_base *const vredor;\n+extern const function_base *const vredxor;\n+extern const function_base *const vwredsum;\n+extern const function_base *const vwredsumu;\n+extern const function_base *const vfredusum;\n+extern const function_base *const vfredosum;\n+extern const function_base *const vfredmax;\n+extern const function_base *const vfredmin;\n+extern const function_base *const vfwredosum;\n+extern const function_base *const vfwredusum;\n+extern const function_base *const vmv_x;\n+extern const function_base *const vmv_s;\n+extern const function_base *const vfmv_f;\n+extern const function_base *const vfmv_s;\n+extern const function_base *const vslideup;\n+extern const function_base *const vslidedown;\n+extern const function_base *const vslide1up;\n+extern const function_base *const vslide1down;\n+extern const function_base *const vfslide1up;\n+extern const function_base *const vfslide1down;\n+extern const function_base *const vrgather;\n+extern const function_base *const vrgatherei16;\n+extern const function_base *const vcompress;\n+extern const function_base *const vundefined;\n+extern const function_base *const vreinterpret;\n+extern const function_base *const vlmul_ext;\n+extern const function_base *const vlmul_trunc;\n+extern const function_base *const vset;\n+extern const function_base *const vget;\n+extern const function_base *const read_vl;\n+extern const function_base *const vleff;\n+extern const function_base *const vlenb;\n }\n \n } // end namespace riscv_vector"}, {"sha": "3f1513cb9fd75e08fdb4458bd0a5f7883ef590ee", "filename": "gcc/config/riscv/riscv-vector-builtins-functions.def", "status": "modified", "additions": 250, "deletions": 27, "changes": 277, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-vector-builtins-functions.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-vector-builtins-functions.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-vector-builtins-functions.def?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -36,6 +36,10 @@ along with GCC; see the file COPYING3. If not see\n #define DEF_RVV_FUNCTION(NAME, SHAPE, PREDS, OPS_INFO)\n #endif\n \n+/* Internal helper functions for gimple fold use.  */\n+DEF_RVV_FUNCTION (read_vl, read_vl, none_preds, p_none_void_ops)\n+DEF_RVV_FUNCTION (vlenb, vlenb, none_preds, ul_none_void_ops)\n+\n /* 6. Configuration-Setting Instructions.  */\n \n DEF_RVV_FUNCTION (vsetvl, vsetvl, none_preds, i_none_size_size_ops)\n@@ -54,24 +58,26 @@ DEF_RVV_FUNCTION (vlse, loadstore, full_preds, all_v_scalar_const_ptr_ptrdiff_op\n DEF_RVV_FUNCTION (vsse, loadstore, none_m_preds, all_v_scalar_ptr_ptrdiff_ops)\n \n // 7.6. Vector Indexed Instructions\n-DEF_RVV_FUNCTION (vluxei8, indexed_loadstore, full_preds, all_v_scalar_const_ptr_uint8_index_ops)\n-DEF_RVV_FUNCTION (vluxei16, indexed_loadstore, full_preds, all_v_scalar_const_ptr_uint16_index_ops)\n-DEF_RVV_FUNCTION (vluxei32, indexed_loadstore, full_preds, all_v_scalar_const_ptr_uint32_index_ops)\n-DEF_RVV_FUNCTION (vluxei64, indexed_loadstore, full_preds, all_v_scalar_const_ptr_uint64_index_ops)\n-DEF_RVV_FUNCTION (vloxei8, indexed_loadstore, full_preds, all_v_scalar_const_ptr_uint8_index_ops)\n-DEF_RVV_FUNCTION (vloxei16, indexed_loadstore, full_preds, all_v_scalar_const_ptr_uint16_index_ops)\n-DEF_RVV_FUNCTION (vloxei32, indexed_loadstore, full_preds, all_v_scalar_const_ptr_uint32_index_ops)\n-DEF_RVV_FUNCTION (vloxei64, indexed_loadstore, full_preds, all_v_scalar_const_ptr_uint64_index_ops)\n-DEF_RVV_FUNCTION (vsuxei8, indexed_loadstore, none_m_preds, all_v_scalar_ptr_uint8_index_ops)\n-DEF_RVV_FUNCTION (vsuxei16, indexed_loadstore, none_m_preds, all_v_scalar_ptr_uint16_index_ops)\n-DEF_RVV_FUNCTION (vsuxei32, indexed_loadstore, none_m_preds, all_v_scalar_ptr_uint32_index_ops)\n-DEF_RVV_FUNCTION (vsuxei64, indexed_loadstore, none_m_preds, all_v_scalar_ptr_uint64_index_ops)\n-DEF_RVV_FUNCTION (vsoxei8, indexed_loadstore, none_m_preds, all_v_scalar_ptr_uint8_index_ops)\n-DEF_RVV_FUNCTION (vsoxei16, indexed_loadstore, none_m_preds, all_v_scalar_ptr_uint16_index_ops)\n-DEF_RVV_FUNCTION (vsoxei32, indexed_loadstore, none_m_preds, all_v_scalar_ptr_uint32_index_ops)\n-DEF_RVV_FUNCTION (vsoxei64, indexed_loadstore, none_m_preds, all_v_scalar_ptr_uint64_index_ops)\n-\n-// TODO: 7.7. Unit-stride Fault-Only-First Loads\n+DEF_RVV_FUNCTION (vluxei8, indexed_loadstore, full_preds, all_v_scalar_const_ptr_eew8_index_ops)\n+DEF_RVV_FUNCTION (vluxei16, indexed_loadstore, full_preds, all_v_scalar_const_ptr_eew16_index_ops)\n+DEF_RVV_FUNCTION (vluxei32, indexed_loadstore, full_preds, all_v_scalar_const_ptr_eew32_index_ops)\n+DEF_RVV_FUNCTION (vluxei64, indexed_loadstore, full_preds, all_v_scalar_const_ptr_eew64_index_ops)\n+DEF_RVV_FUNCTION (vloxei8, indexed_loadstore, full_preds, all_v_scalar_const_ptr_eew8_index_ops)\n+DEF_RVV_FUNCTION (vloxei16, indexed_loadstore, full_preds, all_v_scalar_const_ptr_eew16_index_ops)\n+DEF_RVV_FUNCTION (vloxei32, indexed_loadstore, full_preds, all_v_scalar_const_ptr_eew32_index_ops)\n+DEF_RVV_FUNCTION (vloxei64, indexed_loadstore, full_preds, all_v_scalar_const_ptr_eew64_index_ops)\n+DEF_RVV_FUNCTION (vsuxei8, indexed_loadstore, none_m_preds, all_v_scalar_ptr_eew8_index_ops)\n+DEF_RVV_FUNCTION (vsuxei16, indexed_loadstore, none_m_preds, all_v_scalar_ptr_eew16_index_ops)\n+DEF_RVV_FUNCTION (vsuxei32, indexed_loadstore, none_m_preds, all_v_scalar_ptr_eew32_index_ops)\n+DEF_RVV_FUNCTION (vsuxei64, indexed_loadstore, none_m_preds, all_v_scalar_ptr_eew64_index_ops)\n+DEF_RVV_FUNCTION (vsoxei8, indexed_loadstore, none_m_preds, all_v_scalar_ptr_eew8_index_ops)\n+DEF_RVV_FUNCTION (vsoxei16, indexed_loadstore, none_m_preds, all_v_scalar_ptr_eew16_index_ops)\n+DEF_RVV_FUNCTION (vsoxei32, indexed_loadstore, none_m_preds, all_v_scalar_ptr_eew32_index_ops)\n+DEF_RVV_FUNCTION (vsoxei64, indexed_loadstore, none_m_preds, all_v_scalar_ptr_eew64_index_ops)\n+\n+// 7.7. Unit-stride Fault-Only-First Loads\n+DEF_RVV_FUNCTION (vleff, fault_load, full_preds, all_v_scalar_const_ptr_size_ptr_ops)\n+\n // TODO: 7.8. Vector Load/Store Segment Instructions\n \n /* 11. Vector Integer Arithmetic Instructions.  */\n@@ -105,12 +111,12 @@ DEF_RVV_FUNCTION (vwcvt_x, alu, full_preds, i_x_x_v_ops)\n DEF_RVV_FUNCTION (vwcvtu_x, alu, full_preds, u_x_x_v_ops)\n \n // 11.3. Vector Integer Extension\n-DEF_RVV_FUNCTION (vzext, alu, full_preds, u_vf2_ops)\n-DEF_RVV_FUNCTION (vzext, alu, full_preds, u_vf4_ops)\n-DEF_RVV_FUNCTION (vzext, alu, full_preds, u_vf8_ops)\n-DEF_RVV_FUNCTION (vsext, alu, full_preds, i_vf2_ops)\n-DEF_RVV_FUNCTION (vsext, alu, full_preds, i_vf4_ops)\n-DEF_RVV_FUNCTION (vsext, alu, full_preds, i_vf8_ops)\n+DEF_RVV_FUNCTION (vzext, widen_alu, full_preds, u_vf2_ops)\n+DEF_RVV_FUNCTION (vzext, widen_alu, full_preds, u_vf4_ops)\n+DEF_RVV_FUNCTION (vzext, widen_alu, full_preds, u_vf8_ops)\n+DEF_RVV_FUNCTION (vsext, widen_alu, full_preds, i_vf2_ops)\n+DEF_RVV_FUNCTION (vsext, widen_alu, full_preds, i_vf4_ops)\n+DEF_RVV_FUNCTION (vsext, widen_alu, full_preds, i_vf8_ops)\n \n // 11.4. Vector Integer Add-with-Carry/Subtract-with-Borrow Instructions\n DEF_RVV_FUNCTION (vadc, no_mask_policy, none_tu_preds, iu_vvvm_ops)\n@@ -275,8 +281,164 @@ DEF_RVV_FUNCTION (vnclipu, narrow_alu, full_preds, u_narrow_shift_vwx_ops)\n DEF_RVV_FUNCTION (vnclip, narrow_alu, full_preds, i_narrow_shift_vwv_ops)\n DEF_RVV_FUNCTION (vnclip, narrow_alu, full_preds, i_narrow_shift_vwx_ops)\n \n-/* TODO: 13. Vector Floating-Point Instructions.  */\n-/* TODO: 14. Vector Reduction Operations.  */\n+/* 13. Vector Floating-Point Instructions.  */\n+\n+// 13.2. Vector Single-Width Floating-Point Add/Subtract Instructions\n+DEF_RVV_FUNCTION (vfadd, alu, full_preds, f_vvv_ops)\n+DEF_RVV_FUNCTION (vfadd, alu, full_preds, f_vvf_ops)\n+DEF_RVV_FUNCTION (vfsub, alu, full_preds, f_vvv_ops)\n+DEF_RVV_FUNCTION (vfsub, alu, full_preds, f_vvf_ops)\n+DEF_RVV_FUNCTION (vfrsub, alu, full_preds, f_vvf_ops)\n+\n+// 13.3. Vector Widening Floating-Point Add/Subtract Instructions\n+DEF_RVV_FUNCTION (vfwadd, widen_alu, full_preds, f_wvv_ops)\n+DEF_RVV_FUNCTION (vfwadd, widen_alu, full_preds, f_wvf_ops)\n+DEF_RVV_FUNCTION (vfwsub, widen_alu, full_preds, f_wvv_ops)\n+DEF_RVV_FUNCTION (vfwsub, widen_alu, full_preds, f_wvf_ops)\n+DEF_RVV_FUNCTION (vfwadd, widen_alu, full_preds, f_wwv_ops)\n+DEF_RVV_FUNCTION (vfwadd, widen_alu, full_preds, f_wwf_ops)\n+DEF_RVV_FUNCTION (vfwsub, widen_alu, full_preds, f_wwv_ops)\n+DEF_RVV_FUNCTION (vfwsub, widen_alu, full_preds, f_wwf_ops)\n+\n+// 13.4. Vector Single-Width Floating-Point Multiply/Divide Instructions\n+DEF_RVV_FUNCTION (vfmul, alu, full_preds, f_vvv_ops)\n+DEF_RVV_FUNCTION (vfmul, alu, full_preds, f_vvf_ops)\n+DEF_RVV_FUNCTION (vfdiv, alu, full_preds, f_vvv_ops)\n+DEF_RVV_FUNCTION (vfdiv, alu, full_preds, f_vvf_ops)\n+DEF_RVV_FUNCTION (vfrdiv, alu, full_preds, f_vvf_ops)\n+\n+// 13.5. Vector Widening Floating-Point Multiply\n+DEF_RVV_FUNCTION (vfwmul, alu, full_preds, f_wvv_ops)\n+DEF_RVV_FUNCTION (vfwmul, alu, full_preds, f_wvf_ops)\n+\n+// 13.6. Vector Single-Width Floating-Point Fused Multiply-Add Instructions\n+DEF_RVV_FUNCTION (vfmacc, alu, full_preds, f_vvvv_ops)\n+DEF_RVV_FUNCTION (vfmacc, alu, full_preds, f_vvfv_ops)\n+DEF_RVV_FUNCTION (vfnmsac, alu, full_preds, f_vvvv_ops)\n+DEF_RVV_FUNCTION (vfnmsac, alu, full_preds, f_vvfv_ops)\n+DEF_RVV_FUNCTION (vfmadd, alu, full_preds, f_vvvv_ops)\n+DEF_RVV_FUNCTION (vfmadd, alu, full_preds, f_vvfv_ops)\n+DEF_RVV_FUNCTION (vfnmsub, alu, full_preds, f_vvvv_ops)\n+DEF_RVV_FUNCTION (vfnmsub, alu, full_preds, f_vvfv_ops)\n+DEF_RVV_FUNCTION (vfnmacc, alu, full_preds, f_vvvv_ops)\n+DEF_RVV_FUNCTION (vfnmacc, alu, full_preds, f_vvfv_ops)\n+DEF_RVV_FUNCTION (vfmsac, alu, full_preds, f_vvvv_ops)\n+DEF_RVV_FUNCTION (vfmsac, alu, full_preds, f_vvfv_ops)\n+DEF_RVV_FUNCTION (vfnmadd, alu, full_preds, f_vvvv_ops)\n+DEF_RVV_FUNCTION (vfnmadd, alu, full_preds, f_vvfv_ops)\n+DEF_RVV_FUNCTION (vfmsub, alu, full_preds, f_vvvv_ops)\n+DEF_RVV_FUNCTION (vfmsub, alu, full_preds, f_vvfv_ops)\n+\n+// 13.7. Vector Widening Floating-Point Fused Multiply-Add Instructions\n+DEF_RVV_FUNCTION (vfwmacc, alu, full_preds, f_wwvv_ops)\n+DEF_RVV_FUNCTION (vfwmacc, alu, full_preds, f_wwfv_ops)\n+DEF_RVV_FUNCTION (vfwnmacc, alu, full_preds, f_wwvv_ops)\n+DEF_RVV_FUNCTION (vfwnmacc, alu, full_preds, f_wwfv_ops)\n+DEF_RVV_FUNCTION (vfwmsac, alu, full_preds, f_wwvv_ops)\n+DEF_RVV_FUNCTION (vfwmsac, alu, full_preds, f_wwfv_ops)\n+DEF_RVV_FUNCTION (vfwnmsac, alu, full_preds, f_wwvv_ops)\n+DEF_RVV_FUNCTION (vfwnmsac, alu, full_preds, f_wwfv_ops)\n+\n+// 13.8. Vector Floating-Point Square-Root Instruction\n+DEF_RVV_FUNCTION (vfsqrt, alu, full_preds, f_v_ops)\n+\n+// 13.9. Vector Floating-Point Reciprocal Square-Root Estimate Instruction\n+DEF_RVV_FUNCTION (vfrsqrt7, alu, full_preds, f_v_ops)\n+\n+// 13.10. Vector Floating-Point Reciprocal Estimate Instruction\n+DEF_RVV_FUNCTION (vfrec7, alu, full_preds, f_v_ops)\n+\n+// 13.11. Vector Floating-Point MIN/MAX Instructions\n+DEF_RVV_FUNCTION (vfmin, alu, full_preds, f_vvv_ops)\n+DEF_RVV_FUNCTION (vfmin, alu, full_preds, f_vvf_ops)\n+DEF_RVV_FUNCTION (vfmax, alu, full_preds, f_vvv_ops)\n+DEF_RVV_FUNCTION (vfmax, alu, full_preds, f_vvf_ops)\n+\n+// 13.12. Vector Floating-Point Sign-Injection Instructions\n+DEF_RVV_FUNCTION (vfsgnj, alu, full_preds, f_vvv_ops)\n+DEF_RVV_FUNCTION (vfsgnj, alu, full_preds, f_vvf_ops)\n+DEF_RVV_FUNCTION (vfsgnjn, alu, full_preds, f_vvv_ops)\n+DEF_RVV_FUNCTION (vfsgnjn, alu, full_preds, f_vvf_ops)\n+DEF_RVV_FUNCTION (vfsgnjx, alu, full_preds, f_vvv_ops)\n+DEF_RVV_FUNCTION (vfsgnjx, alu, full_preds, f_vvf_ops)\n+DEF_RVV_FUNCTION (vfneg, alu, full_preds, f_v_ops)\n+DEF_RVV_FUNCTION (vfabs, alu, full_preds, f_v_ops)\n+\n+// 13.13. Vector Floating-Point Compare Instructions\n+DEF_RVV_FUNCTION (vmfeq, return_mask, none_m_mu_preds, f_mvv_ops)\n+DEF_RVV_FUNCTION (vmfeq, return_mask, none_m_mu_preds, f_mvf_ops)\n+DEF_RVV_FUNCTION (vmfne, return_mask, none_m_mu_preds, f_mvv_ops)\n+DEF_RVV_FUNCTION (vmfne, return_mask, none_m_mu_preds, f_mvf_ops)\n+DEF_RVV_FUNCTION (vmflt, return_mask, none_m_mu_preds, f_mvv_ops)\n+DEF_RVV_FUNCTION (vmflt, return_mask, none_m_mu_preds, f_mvf_ops)\n+DEF_RVV_FUNCTION (vmfle, return_mask, none_m_mu_preds, f_mvv_ops)\n+DEF_RVV_FUNCTION (vmfle, return_mask, none_m_mu_preds, f_mvf_ops)\n+DEF_RVV_FUNCTION (vmfgt, return_mask, none_m_mu_preds, f_mvv_ops)\n+DEF_RVV_FUNCTION (vmfgt, return_mask, none_m_mu_preds, f_mvf_ops)\n+DEF_RVV_FUNCTION (vmfge, return_mask, none_m_mu_preds, f_mvv_ops)\n+DEF_RVV_FUNCTION (vmfge, return_mask, none_m_mu_preds, f_mvf_ops)\n+\n+// 13.14. Vector Floating-Point Classify Instruction\n+DEF_RVV_FUNCTION (vfclass, alu, full_preds, f_to_u_v_ops)\n+\n+// 13.15. Vector Floating-Point Merge Instruction\n+DEF_RVV_FUNCTION (vfmerge, no_mask_policy, none_tu_preds, f_vvfm_ops)\n+\n+// 13.16. Vector Floating-Point Move Instruction\n+DEF_RVV_FUNCTION (vfmv_v, move, none_tu_preds, f_f_ops)\n+\n+// 13.17. Single-Width Floating-Point/Integer Type-Convert Instructions\n+DEF_RVV_FUNCTION (vfcvt_x, alu, full_preds, f_to_i_f_v_ops)\n+DEF_RVV_FUNCTION (vfcvt_xu, alu, full_preds, f_to_u_f_v_ops)\n+DEF_RVV_FUNCTION (vfcvt_rtz_x, alu, full_preds, f_to_i_f_v_ops)\n+DEF_RVV_FUNCTION (vfcvt_rtz_xu, alu, full_preds, f_to_u_f_v_ops)\n+DEF_RVV_FUNCTION (vfcvt_f, alu, full_preds, i_to_f_x_v_ops)\n+DEF_RVV_FUNCTION (vfcvt_f, alu, full_preds, u_to_f_xu_v_ops)\n+\n+// 13.18. Widening Floating-Point/Integer Type-Convert Instructions\n+DEF_RVV_FUNCTION (vfwcvt_x, alu, full_preds, f_to_wi_f_v_ops)\n+DEF_RVV_FUNCTION (vfwcvt_xu, alu, full_preds, f_to_wu_f_v_ops)\n+DEF_RVV_FUNCTION (vfwcvt_rtz_x, alu, full_preds, f_to_wi_f_v_ops)\n+DEF_RVV_FUNCTION (vfwcvt_rtz_xu, alu, full_preds, f_to_wu_f_v_ops)\n+DEF_RVV_FUNCTION (vfwcvt_f, alu, full_preds, i_to_wf_x_v_ops)\n+DEF_RVV_FUNCTION (vfwcvt_f, alu, full_preds, u_to_wf_xu_v_ops)\n+DEF_RVV_FUNCTION (vfwcvt_f, alu, full_preds, f_to_wf_f_v_ops)\n+\n+// 13.19. Narrowing Floating-Point/Integer Type-Convert Instructions\n+DEF_RVV_FUNCTION (vfncvt_x, narrow_alu, full_preds, f_to_ni_f_w_ops)\n+DEF_RVV_FUNCTION (vfncvt_xu, narrow_alu, full_preds, f_to_nu_f_w_ops)\n+DEF_RVV_FUNCTION (vfncvt_rtz_x, narrow_alu, full_preds, f_to_ni_f_w_ops)\n+DEF_RVV_FUNCTION (vfncvt_rtz_xu, narrow_alu, full_preds, f_to_nu_f_w_ops)\n+DEF_RVV_FUNCTION (vfncvt_f, narrow_alu, full_preds, i_to_nf_x_w_ops)\n+DEF_RVV_FUNCTION (vfncvt_f, narrow_alu, full_preds, u_to_nf_xu_w_ops)\n+DEF_RVV_FUNCTION (vfncvt_f, narrow_alu, full_preds, f_to_nf_f_w_ops)\n+DEF_RVV_FUNCTION (vfncvt_rod_f, narrow_alu, full_preds, f_to_nf_f_w_ops)\n+\n+/* 14. Vector Reduction Operations.  */\n+\n+// 14.1. Vector Single-Width Integer Reduction Instructions\n+DEF_RVV_FUNCTION (vredsum, reduc_alu, no_mu_preds, iu_vs_ops)\n+DEF_RVV_FUNCTION (vredmaxu, reduc_alu, no_mu_preds, iu_vs_ops)\n+DEF_RVV_FUNCTION (vredmax, reduc_alu, no_mu_preds, iu_vs_ops)\n+DEF_RVV_FUNCTION (vredminu, reduc_alu, no_mu_preds, iu_vs_ops)\n+DEF_RVV_FUNCTION (vredmin, reduc_alu, no_mu_preds, iu_vs_ops)\n+DEF_RVV_FUNCTION (vredand, reduc_alu, no_mu_preds, iu_vs_ops)\n+DEF_RVV_FUNCTION (vredor, reduc_alu, no_mu_preds, iu_vs_ops)\n+DEF_RVV_FUNCTION (vredxor, reduc_alu, no_mu_preds, iu_vs_ops)\n+\n+// 14.2. Vector Widening Integer Reduction Instructions\n+DEF_RVV_FUNCTION (vwredsum, reduc_alu, no_mu_preds, wi_vs_ops)\n+DEF_RVV_FUNCTION (vwredsumu, reduc_alu, no_mu_preds, wu_vs_ops)\n+\n+// 14.3. Vector Single-Width Floating-Point Reduction Instructions\n+DEF_RVV_FUNCTION (vfredusum, reduc_alu, no_mu_preds, f_vs_ops)\n+DEF_RVV_FUNCTION (vfredosum, reduc_alu, no_mu_preds, f_vs_ops)\n+DEF_RVV_FUNCTION (vfredmax, reduc_alu, no_mu_preds, f_vs_ops)\n+DEF_RVV_FUNCTION (vfredmin, reduc_alu, no_mu_preds, f_vs_ops)\n+\n+// 14.4. Vector Widening Floating-Point Reduction Instructions\n+DEF_RVV_FUNCTION (vfwredosum, reduc_alu, no_mu_preds, wf_vs_ops)\n+DEF_RVV_FUNCTION (vfwredusum, reduc_alu, no_mu_preds, wf_vs_ops)\n \n /* 15. Vector Mask Instructions.  */\n \n@@ -308,6 +470,67 @@ DEF_RVV_FUNCTION (viota, mask_alu, full_preds, u_vm_ops)\n // 15.9. Vector Element Index Instruction\n DEF_RVV_FUNCTION (vid, alu, full_preds, u_v_ops)\n \n-/* TODO: 16. Vector Permutation Instructions.  */\n+/* 16. Vector Permutation Instructions.  */\n+\n+// 16.1. Integer Scalar Move Instructions\n+DEF_RVV_FUNCTION (vmv_x, scalar_move, none_preds, iu_x_s_ops)\n+DEF_RVV_FUNCTION (vmv_s, move, none_tu_preds, iu_s_x_ops)\n+\n+// 16.2. Floating-Point Scalar Move Instructions\n+DEF_RVV_FUNCTION (vfmv_f, scalar_move, none_preds, f_f_s_ops)\n+DEF_RVV_FUNCTION (vfmv_s, move, none_tu_preds, f_s_f_ops)\n+\n+// 16.3. Vector Slide Instructions\n+DEF_RVV_FUNCTION (vslideup, alu, full_preds, all_vvvx_ops)\n+DEF_RVV_FUNCTION (vslidedown, alu, full_preds, all_vvx_ops)\n+DEF_RVV_FUNCTION (vslide1up, alu, full_preds, iu_vvx_ops)\n+DEF_RVV_FUNCTION (vslide1down, alu, full_preds, iu_vvx_ops)\n+DEF_RVV_FUNCTION (vfslide1up, alu, full_preds, f_vvf_ops)\n+DEF_RVV_FUNCTION (vfslide1down, alu, full_preds, f_vvf_ops)\n+\n+// 16.4. Vector Register Gather Instructions\n+DEF_RVV_FUNCTION (vrgather, alu, full_preds, all_gather_vvv_ops)\n+DEF_RVV_FUNCTION (vrgather, alu, full_preds, all_gather_vvx_ops)\n+DEF_RVV_FUNCTION (vrgatherei16, alu, full_preds, all_gatherei16_vvv_ops)\n+\n+// 16.5. Vector Compress Instruction\n+DEF_RVV_FUNCTION (vcompress, alu, none_tu_preds, all_vvm_ops)\n+\n+/* Miscellaneous Vector Functions.  */\n+DEF_RVV_FUNCTION (vundefined, vundefined, none_preds, all_none_void_ops)\n+DEF_RVV_FUNCTION (vreinterpret, misc, none_preds, i_v_u_ops)\n+DEF_RVV_FUNCTION (vreinterpret, misc, none_preds, u_v_i_ops)\n+DEF_RVV_FUNCTION (vreinterpret, misc, none_preds, f_v_i_ops)\n+DEF_RVV_FUNCTION (vreinterpret, misc, none_preds, f_v_u_ops)\n+DEF_RVV_FUNCTION (vreinterpret, misc, none_preds, i_v_f_ops)\n+DEF_RVV_FUNCTION (vreinterpret, misc, none_preds, u_v_f_ops)\n+DEF_RVV_FUNCTION (vreinterpret, misc, none_preds, iu_v_eew8_interpret_ops)\n+DEF_RVV_FUNCTION (vreinterpret, misc, none_preds, iu_v_eew16_interpret_ops)\n+DEF_RVV_FUNCTION (vreinterpret, misc, none_preds, iu_v_eew32_interpret_ops)\n+DEF_RVV_FUNCTION (vreinterpret, misc, none_preds, iu_v_eew64_interpret_ops)\n+DEF_RVV_FUNCTION (vlmul_ext, misc, none_preds, all_v_vlmul_ext_x2_ops)\n+DEF_RVV_FUNCTION (vlmul_ext, misc, none_preds, all_v_vlmul_ext_x4_ops)\n+DEF_RVV_FUNCTION (vlmul_ext, misc, none_preds, all_v_vlmul_ext_x8_ops)\n+DEF_RVV_FUNCTION (vlmul_ext, misc, none_preds, all_v_vlmul_ext_x16_ops)\n+DEF_RVV_FUNCTION (vlmul_ext, misc, none_preds, all_v_vlmul_ext_x32_ops)\n+DEF_RVV_FUNCTION (vlmul_ext, misc, none_preds, all_v_vlmul_ext_x64_ops)\n+DEF_RVV_FUNCTION (vlmul_trunc, misc, none_preds, all_v_vlmul_trunc_x2_ops)\n+DEF_RVV_FUNCTION (vlmul_trunc, misc, none_preds, all_v_vlmul_trunc_x4_ops)\n+DEF_RVV_FUNCTION (vlmul_trunc, misc, none_preds, all_v_vlmul_trunc_x8_ops)\n+DEF_RVV_FUNCTION (vlmul_trunc, misc, none_preds, all_v_vlmul_trunc_x16_ops)\n+DEF_RVV_FUNCTION (vlmul_trunc, misc, none_preds, all_v_vlmul_trunc_x32_ops)\n+DEF_RVV_FUNCTION (vlmul_trunc, misc, none_preds, all_v_vlmul_trunc_x64_ops)\n+DEF_RVV_FUNCTION (vset, vset, none_preds, all_v_vset_lmul1_x2_ops)\n+DEF_RVV_FUNCTION (vset, vset, none_preds, all_v_vset_lmul1_x4_ops)\n+DEF_RVV_FUNCTION (vset, vset, none_preds, all_v_vset_lmul1_x8_ops)\n+DEF_RVV_FUNCTION (vset, vset, none_preds, all_v_vset_lmul2_x2_ops)\n+DEF_RVV_FUNCTION (vset, vset, none_preds, all_v_vset_lmul2_x4_ops)\n+DEF_RVV_FUNCTION (vset, vset, none_preds, all_v_vset_lmul4_x2_ops)\n+DEF_RVV_FUNCTION (vget, vget, none_preds, all_v_vget_lmul1_x2_ops)\n+DEF_RVV_FUNCTION (vget, vget, none_preds, all_v_vget_lmul1_x4_ops)\n+DEF_RVV_FUNCTION (vget, vget, none_preds, all_v_vget_lmul1_x8_ops)\n+DEF_RVV_FUNCTION (vget, vget, none_preds, all_v_vget_lmul2_x2_ops)\n+DEF_RVV_FUNCTION (vget, vget, none_preds, all_v_vget_lmul2_x4_ops)\n+DEF_RVV_FUNCTION (vget, vget, none_preds, all_v_vget_lmul4_x2_ops)\n \n #undef DEF_RVV_FUNCTION"}, {"sha": "0682f81400ac4343001b69b4f9e2452b8b6ca28c", "filename": "gcc/config/riscv/riscv-vector-builtins-shapes.cc", "status": "modified", "additions": 223, "deletions": 21, "changes": 244, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-vector-builtins-shapes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-vector-builtins-shapes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-vector-builtins-shapes.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -197,22 +197,12 @@ struct alu_def : public build_base\n \n     b.append_base_name (instance.base_name);\n \n-    /* vop<sew> --> vop<sew>_<op>. According to rvv-intrinsic-doc, _vv/_vx/_v\n-       API doesn't have OP suffix in overloaded function name, otherwise, we\n-       always append OP suffix in function name. For example, vsext_vf2.  */\n-    if (instance.op_info->op == OP_TYPE_vv || instance.op_info->op == OP_TYPE_vx\n-\t|| instance.op_info->op == OP_TYPE_v\n-\t|| instance.op_info->op == OP_TYPE_x_v)\n-      {\n-\tif (!overloaded_p)\n-\t  b.append_name (operand_suffixes[instance.op_info->op]);\n-      }\n-    else\n-      b.append_name (operand_suffixes[instance.op_info->op]);\n-\n     /* vop<sew>_<op> --> vop<sew>_<op>_<type>.  */\n     if (!overloaded_p)\n-      b.append_name (type_suffixes[instance.type.index].vector);\n+      {\n+\tb.append_name (operand_suffixes[instance.op_info->op]);\n+\tb.append_name (type_suffixes[instance.type.index].vector);\n+      }\n \n     /* According to rvv-intrinsic-doc, it does not add \"_m\" suffix\n        for vop_m C++ overloaded API.  */\n@@ -287,8 +277,7 @@ struct return_mask_def : public build_base\n       {\n \tb.append_name (type_suffixes[instance.type.index].vector);\n \tvector_type_index ret_type_idx\n-\t  = instance.op_info->ret.get_base_vector_type (\n-\t    builtin_types[instance.type.index].vector);\n+\t  = instance.op_info->ret.get_function_type_index (instance.type.index);\n \tb.append_name (type_suffixes[ret_type_idx].vector);\n       }\n \n@@ -313,8 +302,7 @@ struct narrow_alu_def : public build_base\n \tb.append_name (operand_suffixes[instance.op_info->op]);\n \t/* vop_<op> --> vop_<op>_<type>.  */\n \tvector_type_index ret_type_idx\n-\t  = instance.op_info->ret.get_base_vector_type (\n-\t    builtin_types[instance.type.index].vector);\n+\t  = instance.op_info->ret.get_function_type_index (instance.type.index);\n \tb.append_name (type_suffixes[ret_type_idx].vector);\n       }\n \n@@ -333,9 +321,9 @@ struct move_def : public build_base\n   char *get_name (function_builder &b, const function_instance &instance,\n \t\t  bool overloaded_p) const override\n   {\n-    /* vmv.v.x (PRED_none) can not be overloaded.  */\n-    if (instance.op_info->op == OP_TYPE_x && overloaded_p\n-\t&& instance.pred == PRED_TYPE_none)\n+    /* vmv.v.x/vfmv.v.f (PRED_none) can not be overloaded.  */\n+    if ((instance.op_info->op == OP_TYPE_x || instance.op_info->op == OP_TYPE_f)\n+\t&& overloaded_p && instance.pred == PRED_TYPE_none)\n       return nullptr;\n \n     b.append_base_name (instance.base_name);\n@@ -384,6 +372,211 @@ struct mask_alu_def : public build_base\n   }\n };\n \n+/* reduc_alu_def class.  */\n+struct reduc_alu_def : public build_base\n+{\n+  char *get_name (function_builder &b, const function_instance &instance,\n+\t\t  bool overloaded_p) const override\n+  {\n+    b.append_base_name (instance.base_name);\n+\n+    /* vop_<op> --> vop<sew>_<op>_<type>.  */\n+    if (!overloaded_p)\n+      {\n+\tb.append_name (operand_suffixes[instance.op_info->op]);\n+\tb.append_name (type_suffixes[instance.type.index].vector);\n+\tvector_type_index ret_type_idx\n+\t  = instance.op_info->ret.get_function_type_index (instance.type.index);\n+\tb.append_name (type_suffixes[ret_type_idx].vector);\n+      }\n+\n+    /* According to rvv-intrinsic-doc, it does not add \"_m\" suffix\n+       for vop_m C++ overloaded API.  */\n+    if (overloaded_p && instance.pred == PRED_TYPE_m)\n+      return b.finish_name ();\n+    b.append_name (predication_suffixes[instance.pred]);\n+    return b.finish_name ();\n+  }\n+};\n+\n+/* scalar_move_def class.  */\n+struct scalar_move_def : public build_base\n+{\n+  char *get_name (function_builder &b, const function_instance &instance,\n+\t\t  bool overloaded_p) const override\n+  {\n+    b.append_base_name (instance.base_name);\n+    if (overloaded_p)\n+      return b.finish_name ();\n+    b.append_name (operand_suffixes[instance.op_info->op]);\n+    b.append_name (type_suffixes[instance.type.index].vector);\n+    b.append_name (type_suffixes[instance.type.index].scalar);\n+    return b.finish_name ();\n+  }\n+};\n+\n+/* vundefined_def class.  */\n+struct vundefined_def : public build_base\n+{\n+  char *get_name (function_builder &b, const function_instance &instance,\n+\t\t  bool overloaded_p) const override\n+  {\n+    if (overloaded_p)\n+      return nullptr;\n+    b.append_base_name (instance.base_name);\n+    b.append_name (type_suffixes[instance.type.index].vector);\n+    return b.finish_name ();\n+  }\n+};\n+\n+/* misc_def class.  */\n+struct misc_def : public build_base\n+{\n+  char *get_name (function_builder &b, const function_instance &instance,\n+\t\t  bool overloaded_p) const override\n+  {\n+    b.append_base_name (instance.base_name);\n+\n+    if (!overloaded_p)\n+      {\n+\tb.append_name (operand_suffixes[instance.op_info->op]);\n+\tvector_type_index arg0_type_idx\n+\t  = instance.op_info->args[0].get_function_type_index (\n+\t    instance.type.index);\n+\tb.append_name (type_suffixes[arg0_type_idx].vector);\n+      }\n+\n+    vector_type_index ret_type_idx\n+      = instance.op_info->ret.get_function_type_index (instance.type.index);\n+    b.append_name (type_suffixes[ret_type_idx].vector);\n+    return b.finish_name ();\n+  }\n+};\n+\n+/* vset_def class.  */\n+struct vset_def : public build_base\n+{\n+  char *get_name (function_builder &b, const function_instance &instance,\n+\t\t  bool overloaded_p) const override\n+  {\n+    b.append_base_name (instance.base_name);\n+\n+    if (!overloaded_p)\n+      {\n+\tb.append_name (operand_suffixes[instance.op_info->op]);\n+\tvector_type_index arg_type_idx\n+\t  = instance.op_info->args[2].get_function_type_index (\n+\t    instance.type.index);\n+\tb.append_name (type_suffixes[arg_type_idx].vector);\n+\n+\tvector_type_index ret_type_idx\n+\t  = instance.op_info->ret.get_function_type_index (instance.type.index);\n+\tb.append_name (type_suffixes[ret_type_idx].vector);\n+      }\n+    return b.finish_name ();\n+  }\n+\n+  bool check (function_checker &c) const override\n+  {\n+    poly_int64 outer_size = GET_MODE_SIZE (c.arg_mode (0));\n+    poly_int64 inner_size = GET_MODE_SIZE (c.arg_mode (2));\n+    unsigned int nvecs = exact_div (outer_size, inner_size).to_constant ();\n+    return c.require_immediate (1, 0, nvecs - 1);\n+  }\n+};\n+\n+/* vget_def class.  */\n+struct vget_def : public misc_def\n+{\n+  bool check (function_checker &c) const override\n+  {\n+    poly_int64 outer_size = GET_MODE_SIZE (c.arg_mode (0));\n+    poly_int64 inner_size = GET_MODE_SIZE (c.ret_mode ());\n+    unsigned int nvecs = exact_div (outer_size, inner_size).to_constant ();\n+    return c.require_immediate (1, 0, nvecs - 1);\n+  }\n+};\n+\n+/* read_vl_def class.  */\n+struct read_vl_def : public function_shape\n+{\n+  void build (function_builder &b,\n+\t      const function_group_info &group) const override\n+  {\n+    auto_vec<tree> argument_types;\n+    b.add_unique_function (get_read_vl_instance (), (*group.shape),\n+\t\t\t   size_type_node, argument_types);\n+  }\n+\n+  char *get_name (function_builder &b, const function_instance &instance,\n+\t\t  bool overloaded_p) const override\n+  {\n+    if (overloaded_p)\n+      return nullptr;\n+    b.append_base_name (instance.base_name);\n+    return b.finish_name ();\n+  }\n+};\n+\n+/* fault_load_def class.  */\n+struct fault_load_def : public build_base\n+{\n+  char *get_name (function_builder &b, const function_instance &instance,\n+\t\t  bool overloaded_p) const override\n+  {\n+    if (overloaded_p)\n+      if (instance.pred == PRED_TYPE_none || instance.pred == PRED_TYPE_mu)\n+\treturn nullptr;\n+    tree type = builtin_types[instance.type.index].vector;\n+    machine_mode mode = TYPE_MODE (type);\n+    int sew = GET_MODE_BITSIZE (GET_MODE_INNER (mode));\n+    b.append_name (\"__riscv_\");\n+    b.append_name (\"vle\");\n+    b.append_sew (sew);\n+    b.append_name (\"ff\");\n+\n+    /* vop<sew>_v --> vop<sew>_v_<type>.  */\n+    if (!overloaded_p)\n+      {\n+\t/* vop<sew> --> vop<sew>_v.  */\n+\tb.append_name (operand_suffixes[instance.op_info->op]);\n+\t/* vop<sew>_v --> vop<sew>_v_<type>.  */\n+\tb.append_name (type_suffixes[instance.type.index].vector);\n+      }\n+\n+    /* According to rvv-intrinsic-doc, it does not add \"_m\" suffix\n+       for vop_m C++ overloaded API.  */\n+    if (overloaded_p && instance.pred == PRED_TYPE_m)\n+      return b.finish_name ();\n+    b.append_name (predication_suffixes[instance.pred]);\n+    return b.finish_name ();\n+  }\n+};\n+\n+/* vlenb_def class.  */\n+struct vlenb_def : public function_shape\n+{\n+  void build (function_builder &b,\n+\t      const function_group_info &group) const override\n+  {\n+    auto_vec<tree> argument_types;\n+    function_instance function_instance (group.base_name, *group.base,\n+\t\t\t\t\t *group.shape, group.ops_infos.types[0],\n+\t\t\t\t\t group.preds[0], &group.ops_infos);\n+    b.add_unique_function (function_instance, (*group.shape),\n+\t\t\t   long_unsigned_type_node, argument_types);\n+  }\n+\n+  char *get_name (function_builder &b, const function_instance &instance,\n+\t\t  bool overloaded_p) const override\n+  {\n+    if (overloaded_p)\n+      return nullptr;\n+    b.append_base_name (instance.base_name);\n+    return b.finish_name ();\n+  }\n+};\n+\n SHAPE(vsetvl, vsetvl)\n SHAPE(vsetvl, vsetvlmax)\n SHAPE(loadstore, loadstore)\n@@ -395,5 +588,14 @@ SHAPE(return_mask, return_mask)\n SHAPE(narrow_alu, narrow_alu)\n SHAPE(move, move)\n SHAPE(mask_alu, mask_alu)\n+SHAPE(reduc_alu, reduc_alu)\n+SHAPE(scalar_move, scalar_move)\n+SHAPE(vundefined, vundefined)\n+SHAPE(misc, misc)\n+SHAPE(vset, vset)\n+SHAPE(vget, vget)\n+SHAPE(read_vl, read_vl)\n+SHAPE(fault_load, fault_load)\n+SHAPE(vlenb, vlenb)\n \n } // end namespace riscv_vector"}, {"sha": "aee2f94b04c433000207d11f8b00b9e30b44ab7d", "filename": "gcc/config/riscv/riscv-vector-builtins-shapes.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-vector-builtins-shapes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-vector-builtins-shapes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-vector-builtins-shapes.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -35,6 +35,15 @@ extern const function_shape *const return_mask;\n extern const function_shape *const narrow_alu;\n extern const function_shape *const move;\n extern const function_shape *const mask_alu;\n+extern const function_shape *const reduc_alu;\n+extern const function_shape *const scalar_move;\n+extern const function_shape *const vundefined;\n+extern const function_shape *const misc;\n+extern const function_shape *const vset;\n+extern const function_shape *const vget;\n+extern const function_shape *const read_vl;\n+extern const function_shape *const fault_load;\n+extern const function_shape *const vlenb;\n }\n \n } // end namespace riscv_vector"}, {"sha": "a55d494f1d94bb444a2e70fe0509f7b6d0247b24", "filename": "gcc/config/riscv/riscv-vector-builtins-types.def", "status": "modified", "additions": 577, "deletions": 0, "changes": 577, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-vector-builtins-types.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-vector-builtins-types.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-vector-builtins-types.def?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -92,6 +92,149 @@ along with GCC; see the file COPYING3. If not see\n #define DEF_RVV_FULL_V_U_OPS(TYPE, REQUIRE)\n #endif\n \n+/* Use \"DEF_RVV_WEXTF_OPS\" macro include Double-Widening float which\n+   will be iterated and registered as intrinsic functions.  */\n+#ifndef DEF_RVV_WEXTF_OPS\n+#define DEF_RVV_WEXTF_OPS(TYPE, REQUIRE)\n+#endif\n+\n+/* Use \"DEF_RVV_CONVERT_I_OPS\" macro include all integer that will be converted\n+   in the float with same nunits which will be iterated and registered as\n+   intrinsic functions.  */\n+#ifndef DEF_RVV_CONVERT_I_OPS\n+#define DEF_RVV_CONVERT_I_OPS(TYPE, REQUIRE)\n+#endif\n+\n+/* Use \"DEF_RVV_CONVERT_U_OPS\" macro include all unsigned integer that will be\n+   converted in the float with same nunits which will be iterated and registered\n+   as intrinsic functions.  */\n+#ifndef DEF_RVV_CONVERT_U_OPS\n+#define DEF_RVV_CONVERT_U_OPS(TYPE, REQUIRE)\n+#endif\n+\n+/* Use \"DEF_RVV_WCONVERT_I_OPS\" macro include all integer that will be widen\n+   converted in the float with same nunits which will be iterated and registered\n+   as intrinsic functions.  */\n+#ifndef DEF_RVV_WCONVERT_I_OPS\n+#define DEF_RVV_WCONVERT_I_OPS(TYPE, REQUIRE)\n+#endif\n+\n+/* Use \"DEF_RVV_WCONVERT_U_OPS\" macro include all unsigned integer that will be\n+   widen converted in the float with same nunits which will be iterated and\n+   registered as intrinsic functions.  */\n+#ifndef DEF_RVV_WCONVERT_U_OPS\n+#define DEF_RVV_WCONVERT_U_OPS(TYPE, REQUIRE)\n+#endif\n+\n+/* Use \"DEF_RVV_WCONVERT_F_OPS\" macro include all unsigned integer that will be\n+   widen converted in the float with same nunits which will be iterated and\n+   registered as intrinsic functions.  */\n+#ifndef DEF_RVV_WCONVERT_F_OPS\n+#define DEF_RVV_WCONVERT_F_OPS(TYPE, REQUIRE)\n+#endif\n+\n+/* Use \"DEF_RVV_WI_OPS\" macro include all signed integer can be widened which\n+   will be iterated and registered as intrinsic functions.  */\n+#ifndef DEF_RVV_WI_OPS\n+#define DEF_RVV_WI_OPS(TYPE, REQUIRE)\n+#endif\n+\n+/* Use \"DEF_RVV_WU_OPS\" macro include all unsigned integer can be widened which\n+   will be iterated and registered as intrinsic functions.  */\n+#ifndef DEF_RVV_WU_OPS\n+#define DEF_RVV_WU_OPS(TYPE, REQUIRE)\n+#endif\n+\n+/* Use \"DEF_RVV_WF_OPS\" macro include all floating-point can be widened which\n+   will be iterated and registered as intrinsic functions.  */\n+#ifndef DEF_RVV_WF_OPS\n+#define DEF_RVV_WF_OPS(TYPE, REQUIRE)\n+#endif\n+\n+/* Use \"DEF_RVV_EI16_OPS\" macro include all types for vrgatherei16 which will be\n+   iterated and registered as intrinsic functions.  */\n+#ifndef DEF_RVV_EI16_OPS\n+#define DEF_RVV_EI16_OPS(TYPE, REQUIRE)\n+#endif\n+\n+/* Use \"DEF_RVV_EEW8_INTERPRET_OPS\" macro include all types for EEW8 vinterpret\n+   which will be iterated and registered as intrinsic functions.  */\n+#ifndef DEF_RVV_EEW8_INTERPRET_OPS\n+#define DEF_RVV_EEW8_INTERPRET_OPS(TYPE, REQUIRE)\n+#endif\n+\n+/* Use \"DEF_RVV_EEW16_INTERPRET_OPS\" macro include all types for EEW16\n+   vinterpret which will be iterated and registered as intrinsic functions.  */\n+#ifndef DEF_RVV_EEW16_INTERPRET_OPS\n+#define DEF_RVV_EEW16_INTERPRET_OPS(TYPE, REQUIRE)\n+#endif\n+\n+/* Use \"DEF_RVV_EEW32_INTERPRET_OPS\" macro include all types for EEW32\n+   vinterpret which will be iterated and registered as intrinsic functions.  */\n+#ifndef DEF_RVV_EEW32_INTERPRET_OPS\n+#define DEF_RVV_EEW32_INTERPRET_OPS(TYPE, REQUIRE)\n+#endif\n+\n+/* Use \"DEF_RVV_EEW64_INTERPRET_OPS\" macro include all types for EEW64\n+   vinterpret which will be iterated and registered as intrinsic functions.  */\n+#ifndef DEF_RVV_EEW64_INTERPRET_OPS\n+#define DEF_RVV_EEW64_INTERPRET_OPS(TYPE, REQUIRE)\n+#endif\n+\n+/* Use \"DEF_RVV_X2_VLMUL_EXT_OPS\" macro include all types for X2 VLMUL EXT\n+   which will be iterated and registered as intrinsic functions.  */\n+#ifndef DEF_RVV_X2_VLMUL_EXT_OPS\n+#define DEF_RVV_X2_VLMUL_EXT_OPS(TYPE, REQUIRE)\n+#endif\n+\n+/* Use \"DEF_RVV_X4_VLMUL_EXT_OPS\" macro include all types for X4 VLMUL EXT\n+   which will be iterated and registered as intrinsic functions.  */\n+#ifndef DEF_RVV_X4_VLMUL_EXT_OPS\n+#define DEF_RVV_X4_VLMUL_EXT_OPS(TYPE, REQUIRE)\n+#endif\n+\n+/* Use \"DEF_RVV_X8_VLMUL_EXT_OPS\" macro include all types for X8 VLMUL EXT\n+   which will be iterated and registered as intrinsic functions.  */\n+#ifndef DEF_RVV_X8_VLMUL_EXT_OPS\n+#define DEF_RVV_X8_VLMUL_EXT_OPS(TYPE, REQUIRE)\n+#endif\n+\n+/* Use \"DEF_RVV_X16_VLMUL_EXT_OPS\" macro include all types for X16 VLMUL EXT\n+   which will be iterated and registered as intrinsic functions.  */\n+#ifndef DEF_RVV_X16_VLMUL_EXT_OPS\n+#define DEF_RVV_X16_VLMUL_EXT_OPS(TYPE, REQUIRE)\n+#endif\n+\n+/* Use \"DEF_RVV_X32_VLMUL_EXT_OPS\" macro include all types for X32 VLMUL EXT\n+   which will be iterated and registered as intrinsic functions.  */\n+#ifndef DEF_RVV_X32_VLMUL_EXT_OPS\n+#define DEF_RVV_X32_VLMUL_EXT_OPS(TYPE, REQUIRE)\n+#endif\n+\n+/* Use \"DEF_RVV_X64_VLMUL_EXT_OPS\" macro include all types for X64 VLMUL EXT\n+   which will be iterated and registered as intrinsic functions.  */\n+#ifndef DEF_RVV_X64_VLMUL_EXT_OPS\n+#define DEF_RVV_X64_VLMUL_EXT_OPS(TYPE, REQUIRE)\n+#endif\n+\n+/* Use \"DEF_RVV_LMUL1_OPS\" macro include all types for LMUL1\n+   which will be iterated and registered as intrinsic functions.  */\n+#ifndef DEF_RVV_LMUL1_OPS\n+#define DEF_RVV_LMUL1_OPS(TYPE, REQUIRE)\n+#endif\n+\n+/* Use \"DEF_RVV_LMUL2_OPS\" macro include all types for LMUL2\n+   which will be iterated and registered as intrinsic functions.  */\n+#ifndef DEF_RVV_LMUL2_OPS\n+#define DEF_RVV_LMUL2_OPS(TYPE, REQUIRE)\n+#endif\n+\n+/* Use \"DEF_RVV_LMUL4_OPS\" macro include all types for LMUL4\n+   which will be iterated and registered as intrinsic functions.  */\n+#ifndef DEF_RVV_LMUL4_OPS\n+#define DEF_RVV_LMUL4_OPS(TYPE, REQUIRE)\n+#endif\n+\n DEF_RVV_I_OPS (vint8mf8_t, RVV_REQUIRE_ZVE64)\n DEF_RVV_I_OPS (vint8mf4_t, 0)\n DEF_RVV_I_OPS (vint8mf2_t, 0)\n@@ -264,6 +407,417 @@ DEF_RVV_FULL_V_U_OPS (vuint64m2_t, RVV_REQUIRE_FULL_V)\n DEF_RVV_FULL_V_U_OPS (vuint64m4_t, RVV_REQUIRE_FULL_V)\n DEF_RVV_FULL_V_U_OPS (vuint64m8_t, RVV_REQUIRE_FULL_V)\n \n+DEF_RVV_WEXTF_OPS (vfloat64m1_t, RVV_REQUIRE_ELEN_FP_64)\n+DEF_RVV_WEXTF_OPS (vfloat64m2_t, RVV_REQUIRE_ELEN_FP_64)\n+DEF_RVV_WEXTF_OPS (vfloat64m4_t, RVV_REQUIRE_ELEN_FP_64)\n+DEF_RVV_WEXTF_OPS (vfloat64m8_t, RVV_REQUIRE_ELEN_FP_64)\n+\n+DEF_RVV_CONVERT_I_OPS (vint32mf2_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_CONVERT_I_OPS (vint32m1_t, 0)\n+DEF_RVV_CONVERT_I_OPS (vint32m2_t, 0)\n+DEF_RVV_CONVERT_I_OPS (vint32m4_t, 0)\n+DEF_RVV_CONVERT_I_OPS (vint32m8_t, 0)\n+DEF_RVV_CONVERT_I_OPS (vint64m1_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_CONVERT_I_OPS (vint64m2_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_CONVERT_I_OPS (vint64m4_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_CONVERT_I_OPS (vint64m8_t, RVV_REQUIRE_ZVE64)\n+\n+DEF_RVV_CONVERT_U_OPS (vuint32mf2_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_CONVERT_U_OPS (vuint32m1_t, 0)\n+DEF_RVV_CONVERT_U_OPS (vuint32m2_t, 0)\n+DEF_RVV_CONVERT_U_OPS (vuint32m4_t, 0)\n+DEF_RVV_CONVERT_U_OPS (vuint32m8_t, 0)\n+DEF_RVV_CONVERT_U_OPS (vuint64m1_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_CONVERT_U_OPS (vuint64m2_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_CONVERT_U_OPS (vuint64m4_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_CONVERT_U_OPS (vuint64m8_t, RVV_REQUIRE_ZVE64)\n+\n+DEF_RVV_WCONVERT_I_OPS (vint64m1_t, RVV_REQUIRE_ELEN_FP_32 | RVV_REQUIRE_ZVE64)\n+DEF_RVV_WCONVERT_I_OPS (vint64m2_t, RVV_REQUIRE_ELEN_FP_32 | RVV_REQUIRE_ZVE64)\n+DEF_RVV_WCONVERT_I_OPS (vint64m4_t, RVV_REQUIRE_ELEN_FP_32 | RVV_REQUIRE_ZVE64)\n+DEF_RVV_WCONVERT_I_OPS (vint64m8_t, RVV_REQUIRE_ELEN_FP_32 | RVV_REQUIRE_ZVE64)\n+\n+DEF_RVV_WCONVERT_U_OPS (vuint64m1_t, RVV_REQUIRE_ELEN_FP_32 | RVV_REQUIRE_ZVE64)\n+DEF_RVV_WCONVERT_U_OPS (vuint64m2_t, RVV_REQUIRE_ELEN_FP_32 | RVV_REQUIRE_ZVE64)\n+DEF_RVV_WCONVERT_U_OPS (vuint64m4_t, RVV_REQUIRE_ELEN_FP_32 | RVV_REQUIRE_ZVE64)\n+DEF_RVV_WCONVERT_U_OPS (vuint64m8_t, RVV_REQUIRE_ELEN_FP_32 | RVV_REQUIRE_ZVE64)\n+\n+DEF_RVV_WCONVERT_F_OPS (vfloat64m1_t, RVV_REQUIRE_ELEN_FP_64)\n+DEF_RVV_WCONVERT_F_OPS (vfloat64m2_t, RVV_REQUIRE_ELEN_FP_64)\n+DEF_RVV_WCONVERT_F_OPS (vfloat64m4_t, RVV_REQUIRE_ELEN_FP_64)\n+DEF_RVV_WCONVERT_F_OPS (vfloat64m8_t, RVV_REQUIRE_ELEN_FP_64)\n+\n+DEF_RVV_WI_OPS (vint8mf8_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_WI_OPS (vint8mf4_t, 0)\n+DEF_RVV_WI_OPS (vint8mf2_t, 0)\n+DEF_RVV_WI_OPS (vint8m1_t, 0)\n+DEF_RVV_WI_OPS (vint8m2_t, 0)\n+DEF_RVV_WI_OPS (vint8m4_t, 0)\n+DEF_RVV_WI_OPS (vint8m8_t, 0)\n+DEF_RVV_WI_OPS (vint16mf4_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_WI_OPS (vint16mf2_t, 0)\n+DEF_RVV_WI_OPS (vint16m1_t, 0)\n+DEF_RVV_WI_OPS (vint16m2_t, 0)\n+DEF_RVV_WI_OPS (vint16m4_t, 0)\n+DEF_RVV_WI_OPS (vint16m8_t, 0)\n+DEF_RVV_WI_OPS (vint32mf2_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_WI_OPS (vint32m1_t, 0)\n+DEF_RVV_WI_OPS (vint32m2_t, 0)\n+DEF_RVV_WI_OPS (vint32m4_t, 0)\n+DEF_RVV_WI_OPS (vint32m8_t, 0)\n+\n+DEF_RVV_WU_OPS (vuint8mf8_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_WU_OPS (vuint8mf4_t, 0)\n+DEF_RVV_WU_OPS (vuint8mf2_t, 0)\n+DEF_RVV_WU_OPS (vuint8m1_t, 0)\n+DEF_RVV_WU_OPS (vuint8m2_t, 0)\n+DEF_RVV_WU_OPS (vuint8m4_t, 0)\n+DEF_RVV_WU_OPS (vuint8m8_t, 0)\n+DEF_RVV_WU_OPS (vuint16mf4_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_WU_OPS (vuint16mf2_t, 0)\n+DEF_RVV_WU_OPS (vuint16m1_t, 0)\n+DEF_RVV_WU_OPS (vuint16m2_t, 0)\n+DEF_RVV_WU_OPS (vuint16m4_t, 0)\n+DEF_RVV_WU_OPS (vuint16m8_t, 0)\n+DEF_RVV_WU_OPS (vuint32mf2_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_WU_OPS (vuint32m1_t, 0)\n+DEF_RVV_WU_OPS (vuint32m2_t, 0)\n+DEF_RVV_WU_OPS (vuint32m4_t, 0)\n+DEF_RVV_WU_OPS (vuint32m8_t, 0)\n+\n+DEF_RVV_WF_OPS (vfloat32mf2_t, RVV_REQUIRE_ELEN_FP_32 | RVV_REQUIRE_ZVE64)\n+DEF_RVV_WF_OPS (vfloat32m1_t, RVV_REQUIRE_ELEN_FP_32)\n+DEF_RVV_WF_OPS (vfloat32m2_t, RVV_REQUIRE_ELEN_FP_32)\n+DEF_RVV_WF_OPS (vfloat32m4_t, RVV_REQUIRE_ELEN_FP_32)\n+DEF_RVV_WF_OPS (vfloat32m8_t, RVV_REQUIRE_ELEN_FP_32)\n+\n+DEF_RVV_EI16_OPS (vint8mf8_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EI16_OPS (vint8mf4_t, 0)\n+DEF_RVV_EI16_OPS (vint8mf2_t, 0)\n+DEF_RVV_EI16_OPS (vint8m1_t, 0)\n+DEF_RVV_EI16_OPS (vint8m2_t, 0)\n+DEF_RVV_EI16_OPS (vint8m4_t, 0)\n+DEF_RVV_EI16_OPS (vint16mf4_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EI16_OPS (vint16mf2_t, 0)\n+DEF_RVV_EI16_OPS (vint16m1_t, 0)\n+DEF_RVV_EI16_OPS (vint16m2_t, 0)\n+DEF_RVV_EI16_OPS (vint16m4_t, 0)\n+DEF_RVV_EI16_OPS (vint16m8_t, 0)\n+DEF_RVV_EI16_OPS (vint32mf2_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EI16_OPS (vint32m1_t, 0)\n+DEF_RVV_EI16_OPS (vint32m2_t, 0)\n+DEF_RVV_EI16_OPS (vint32m4_t, 0)\n+DEF_RVV_EI16_OPS (vint32m8_t, 0)\n+DEF_RVV_EI16_OPS (vint64m1_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EI16_OPS (vint64m2_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EI16_OPS (vint64m4_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EI16_OPS (vint64m8_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EI16_OPS (vuint8mf8_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EI16_OPS (vuint8mf4_t, 0)\n+DEF_RVV_EI16_OPS (vuint8mf2_t, 0)\n+DEF_RVV_EI16_OPS (vuint8m1_t, 0)\n+DEF_RVV_EI16_OPS (vuint8m2_t, 0)\n+DEF_RVV_EI16_OPS (vuint8m4_t, 0)\n+DEF_RVV_EI16_OPS (vuint16mf4_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EI16_OPS (vuint16mf2_t, 0)\n+DEF_RVV_EI16_OPS (vuint16m1_t, 0)\n+DEF_RVV_EI16_OPS (vuint16m2_t, 0)\n+DEF_RVV_EI16_OPS (vuint16m4_t, 0)\n+DEF_RVV_EI16_OPS (vuint16m8_t, 0)\n+DEF_RVV_EI16_OPS (vuint32mf2_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EI16_OPS (vuint32m1_t, 0)\n+DEF_RVV_EI16_OPS (vuint32m2_t, 0)\n+DEF_RVV_EI16_OPS (vuint32m4_t, 0)\n+DEF_RVV_EI16_OPS (vuint32m8_t, 0)\n+DEF_RVV_EI16_OPS (vuint64m1_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EI16_OPS (vuint64m2_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EI16_OPS (vuint64m4_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EI16_OPS (vuint64m8_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EI16_OPS (vfloat32mf2_t, RVV_REQUIRE_ELEN_FP_32 | RVV_REQUIRE_ZVE64)\n+DEF_RVV_EI16_OPS (vfloat32m1_t, RVV_REQUIRE_ELEN_FP_32)\n+DEF_RVV_EI16_OPS (vfloat32m2_t, RVV_REQUIRE_ELEN_FP_32)\n+DEF_RVV_EI16_OPS (vfloat32m4_t, RVV_REQUIRE_ELEN_FP_32)\n+DEF_RVV_EI16_OPS (vfloat32m8_t, RVV_REQUIRE_ELEN_FP_32)\n+DEF_RVV_EI16_OPS (vfloat64m1_t, RVV_REQUIRE_ELEN_FP_64)\n+DEF_RVV_EI16_OPS (vfloat64m2_t, RVV_REQUIRE_ELEN_FP_64)\n+DEF_RVV_EI16_OPS (vfloat64m4_t, RVV_REQUIRE_ELEN_FP_64)\n+DEF_RVV_EI16_OPS (vfloat64m8_t, RVV_REQUIRE_ELEN_FP_64)\n+\n+DEF_RVV_EEW8_INTERPRET_OPS (vint16mf4_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EEW8_INTERPRET_OPS (vint16mf2_t, 0)\n+DEF_RVV_EEW8_INTERPRET_OPS (vint16m1_t, 0)\n+DEF_RVV_EEW8_INTERPRET_OPS (vint16m2_t, 0)\n+DEF_RVV_EEW8_INTERPRET_OPS (vint16m4_t, 0)\n+DEF_RVV_EEW8_INTERPRET_OPS (vint16m8_t, 0)\n+DEF_RVV_EEW8_INTERPRET_OPS (vint32mf2_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EEW8_INTERPRET_OPS (vint32m1_t, 0)\n+DEF_RVV_EEW8_INTERPRET_OPS (vint32m2_t, 0)\n+DEF_RVV_EEW8_INTERPRET_OPS (vint32m4_t, 0)\n+DEF_RVV_EEW8_INTERPRET_OPS (vint32m8_t, 0)\n+DEF_RVV_EEW8_INTERPRET_OPS (vint64m1_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EEW8_INTERPRET_OPS (vint64m2_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EEW8_INTERPRET_OPS (vint64m4_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EEW8_INTERPRET_OPS (vint64m8_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EEW8_INTERPRET_OPS (vuint16mf4_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EEW8_INTERPRET_OPS (vuint16mf2_t, 0)\n+DEF_RVV_EEW8_INTERPRET_OPS (vuint16m1_t, 0)\n+DEF_RVV_EEW8_INTERPRET_OPS (vuint16m2_t, 0)\n+DEF_RVV_EEW8_INTERPRET_OPS (vuint16m4_t, 0)\n+DEF_RVV_EEW8_INTERPRET_OPS (vuint16m8_t, 0)\n+DEF_RVV_EEW8_INTERPRET_OPS (vuint32mf2_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EEW8_INTERPRET_OPS (vuint32m1_t, 0)\n+DEF_RVV_EEW8_INTERPRET_OPS (vuint32m2_t, 0)\n+DEF_RVV_EEW8_INTERPRET_OPS (vuint32m4_t, 0)\n+DEF_RVV_EEW8_INTERPRET_OPS (vuint32m8_t, 0)\n+DEF_RVV_EEW8_INTERPRET_OPS (vuint64m1_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EEW8_INTERPRET_OPS (vuint64m2_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EEW8_INTERPRET_OPS (vuint64m4_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EEW8_INTERPRET_OPS (vuint64m8_t, RVV_REQUIRE_ZVE64)\n+\n+DEF_RVV_EEW16_INTERPRET_OPS (vint8mf4_t, 0)\n+DEF_RVV_EEW16_INTERPRET_OPS (vint8mf2_t, 0)\n+DEF_RVV_EEW16_INTERPRET_OPS (vint8m1_t, 0)\n+DEF_RVV_EEW16_INTERPRET_OPS (vint8m2_t, 0)\n+DEF_RVV_EEW16_INTERPRET_OPS (vint8m4_t, 0)\n+DEF_RVV_EEW16_INTERPRET_OPS (vint8m8_t, 0)\n+DEF_RVV_EEW16_INTERPRET_OPS (vint32mf2_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EEW16_INTERPRET_OPS (vint32m1_t, 0)\n+DEF_RVV_EEW16_INTERPRET_OPS (vint32m2_t, 0)\n+DEF_RVV_EEW16_INTERPRET_OPS (vint32m4_t, 0)\n+DEF_RVV_EEW16_INTERPRET_OPS (vint32m8_t, 0)\n+DEF_RVV_EEW16_INTERPRET_OPS (vint64m1_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EEW16_INTERPRET_OPS (vint64m2_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EEW16_INTERPRET_OPS (vint64m4_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EEW16_INTERPRET_OPS (vint64m8_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EEW16_INTERPRET_OPS (vuint8mf4_t, 0)\n+DEF_RVV_EEW16_INTERPRET_OPS (vuint8mf2_t, 0)\n+DEF_RVV_EEW16_INTERPRET_OPS (vuint8m1_t, 0)\n+DEF_RVV_EEW16_INTERPRET_OPS (vuint8m2_t, 0)\n+DEF_RVV_EEW16_INTERPRET_OPS (vuint8m4_t, 0)\n+DEF_RVV_EEW16_INTERPRET_OPS (vuint8m8_t, 0)\n+DEF_RVV_EEW16_INTERPRET_OPS (vuint32mf2_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EEW16_INTERPRET_OPS (vuint32m1_t, 0)\n+DEF_RVV_EEW16_INTERPRET_OPS (vuint32m2_t, 0)\n+DEF_RVV_EEW16_INTERPRET_OPS (vuint32m4_t, 0)\n+DEF_RVV_EEW16_INTERPRET_OPS (vuint32m8_t, 0)\n+DEF_RVV_EEW16_INTERPRET_OPS (vuint64m1_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EEW16_INTERPRET_OPS (vuint64m2_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EEW16_INTERPRET_OPS (vuint64m4_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EEW16_INTERPRET_OPS (vuint64m8_t, RVV_REQUIRE_ZVE64)\n+\n+DEF_RVV_EEW32_INTERPRET_OPS (vint8mf2_t, 0)\n+DEF_RVV_EEW32_INTERPRET_OPS (vint8m1_t, 0)\n+DEF_RVV_EEW32_INTERPRET_OPS (vint8m2_t, 0)\n+DEF_RVV_EEW32_INTERPRET_OPS (vint8m4_t, 0)\n+DEF_RVV_EEW32_INTERPRET_OPS (vint8m8_t, 0)\n+DEF_RVV_EEW32_INTERPRET_OPS (vint16mf2_t, 0)\n+DEF_RVV_EEW32_INTERPRET_OPS (vint16m1_t, 0)\n+DEF_RVV_EEW32_INTERPRET_OPS (vint16m2_t, 0)\n+DEF_RVV_EEW32_INTERPRET_OPS (vint16m4_t, 0)\n+DEF_RVV_EEW32_INTERPRET_OPS (vint16m8_t, 0)\n+DEF_RVV_EEW32_INTERPRET_OPS (vint64m1_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EEW32_INTERPRET_OPS (vint64m2_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EEW32_INTERPRET_OPS (vint64m4_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EEW32_INTERPRET_OPS (vint64m8_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EEW32_INTERPRET_OPS (vuint8mf2_t, 0)\n+DEF_RVV_EEW32_INTERPRET_OPS (vuint8m1_t, 0)\n+DEF_RVV_EEW32_INTERPRET_OPS (vuint8m2_t, 0)\n+DEF_RVV_EEW32_INTERPRET_OPS (vuint8m4_t, 0)\n+DEF_RVV_EEW32_INTERPRET_OPS (vuint8m8_t, 0)\n+DEF_RVV_EEW32_INTERPRET_OPS (vuint16mf2_t, 0)\n+DEF_RVV_EEW32_INTERPRET_OPS (vuint16m1_t, 0)\n+DEF_RVV_EEW32_INTERPRET_OPS (vuint16m2_t, 0)\n+DEF_RVV_EEW32_INTERPRET_OPS (vuint16m4_t, 0)\n+DEF_RVV_EEW32_INTERPRET_OPS (vuint16m8_t, 0)\n+DEF_RVV_EEW32_INTERPRET_OPS (vuint64m1_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EEW32_INTERPRET_OPS (vuint64m2_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EEW32_INTERPRET_OPS (vuint64m4_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_EEW32_INTERPRET_OPS (vuint64m8_t, RVV_REQUIRE_ZVE64)\n+\n+DEF_RVV_EEW64_INTERPRET_OPS (vint8m1_t, 0)\n+DEF_RVV_EEW64_INTERPRET_OPS (vint8m2_t, 0)\n+DEF_RVV_EEW64_INTERPRET_OPS (vint8m4_t, 0)\n+DEF_RVV_EEW64_INTERPRET_OPS (vint8m8_t, 0)\n+DEF_RVV_EEW64_INTERPRET_OPS (vint16m1_t, 0)\n+DEF_RVV_EEW64_INTERPRET_OPS (vint16m2_t, 0)\n+DEF_RVV_EEW64_INTERPRET_OPS (vint16m4_t, 0)\n+DEF_RVV_EEW64_INTERPRET_OPS (vint16m8_t, 0)\n+DEF_RVV_EEW64_INTERPRET_OPS (vint32m1_t, 0)\n+DEF_RVV_EEW64_INTERPRET_OPS (vint32m2_t, 0)\n+DEF_RVV_EEW64_INTERPRET_OPS (vint32m4_t, 0)\n+DEF_RVV_EEW64_INTERPRET_OPS (vint32m8_t, 0)\n+DEF_RVV_EEW64_INTERPRET_OPS (vuint8m1_t, 0)\n+DEF_RVV_EEW64_INTERPRET_OPS (vuint8m2_t, 0)\n+DEF_RVV_EEW64_INTERPRET_OPS (vuint8m4_t, 0)\n+DEF_RVV_EEW64_INTERPRET_OPS (vuint8m8_t, 0)\n+DEF_RVV_EEW64_INTERPRET_OPS (vuint16m1_t, 0)\n+DEF_RVV_EEW64_INTERPRET_OPS (vuint16m2_t, 0)\n+DEF_RVV_EEW64_INTERPRET_OPS (vuint16m4_t, 0)\n+DEF_RVV_EEW64_INTERPRET_OPS (vuint16m8_t, 0)\n+DEF_RVV_EEW64_INTERPRET_OPS (vuint32m1_t, 0)\n+DEF_RVV_EEW64_INTERPRET_OPS (vuint32m2_t, 0)\n+DEF_RVV_EEW64_INTERPRET_OPS (vuint32m4_t, 0)\n+DEF_RVV_EEW64_INTERPRET_OPS (vuint32m8_t, 0)\n+\n+DEF_RVV_X2_VLMUL_EXT_OPS (vint8mf8_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vint8mf4_t, 0)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vint8mf2_t, 0)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vint8m1_t, 0)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vint8m2_t, 0)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vint8m4_t, 0)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vint16mf4_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vint16mf2_t, 0)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vint16m1_t, 0)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vint16m2_t, 0)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vint16m4_t, 0)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vint32mf2_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vint32m1_t, 0)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vint32m2_t, 0)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vint32m4_t, 0)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vint64m1_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vint64m2_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vint64m4_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vuint8mf8_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vuint8mf4_t, 0)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vuint8mf2_t, 0)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vuint8m1_t, 0)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vuint8m2_t, 0)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vuint8m4_t, 0)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vuint16mf4_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vuint16mf2_t, 0)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vuint16m1_t, 0)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vuint16m2_t, 0)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vuint16m4_t, 0)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vuint32mf2_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vuint32m1_t, 0)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vuint32m2_t, 0)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vuint32m4_t, 0)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vuint64m1_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vuint64m2_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vuint64m4_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vfloat32mf2_t, RVV_REQUIRE_ELEN_FP_32 | RVV_REQUIRE_ZVE64)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vfloat32m1_t, RVV_REQUIRE_ELEN_FP_32)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vfloat32m2_t, RVV_REQUIRE_ELEN_FP_32)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vfloat32m4_t, RVV_REQUIRE_ELEN_FP_32)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vfloat64m1_t, RVV_REQUIRE_ELEN_FP_64)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vfloat64m2_t, RVV_REQUIRE_ELEN_FP_64)\n+DEF_RVV_X2_VLMUL_EXT_OPS (vfloat64m4_t, RVV_REQUIRE_ELEN_FP_64)\n+\n+DEF_RVV_X4_VLMUL_EXT_OPS (vint8mf8_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X4_VLMUL_EXT_OPS (vint8mf4_t, 0)\n+DEF_RVV_X4_VLMUL_EXT_OPS (vint8mf2_t, 0)\n+DEF_RVV_X4_VLMUL_EXT_OPS (vint8m1_t, 0)\n+DEF_RVV_X4_VLMUL_EXT_OPS (vint8m2_t, 0)\n+DEF_RVV_X4_VLMUL_EXT_OPS (vint16mf4_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X4_VLMUL_EXT_OPS (vint16mf2_t, 0)\n+DEF_RVV_X4_VLMUL_EXT_OPS (vint16m1_t, 0)\n+DEF_RVV_X4_VLMUL_EXT_OPS (vint16m2_t, 0)\n+DEF_RVV_X4_VLMUL_EXT_OPS (vint32mf2_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X4_VLMUL_EXT_OPS (vint32m1_t, 0)\n+DEF_RVV_X4_VLMUL_EXT_OPS (vint32m2_t, 0)\n+DEF_RVV_X4_VLMUL_EXT_OPS (vint64m1_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X4_VLMUL_EXT_OPS (vint64m2_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X4_VLMUL_EXT_OPS (vuint8mf8_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X4_VLMUL_EXT_OPS (vuint8mf4_t, 0)\n+DEF_RVV_X4_VLMUL_EXT_OPS (vuint8mf2_t, 0)\n+DEF_RVV_X4_VLMUL_EXT_OPS (vuint8m1_t, 0)\n+DEF_RVV_X4_VLMUL_EXT_OPS (vuint8m2_t, 0)\n+DEF_RVV_X4_VLMUL_EXT_OPS (vuint16mf4_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X4_VLMUL_EXT_OPS (vuint16mf2_t, 0)\n+DEF_RVV_X4_VLMUL_EXT_OPS (vuint16m1_t, 0)\n+DEF_RVV_X4_VLMUL_EXT_OPS (vuint16m2_t, 0)\n+DEF_RVV_X4_VLMUL_EXT_OPS (vuint32mf2_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X4_VLMUL_EXT_OPS (vuint32m1_t, 0)\n+DEF_RVV_X4_VLMUL_EXT_OPS (vuint32m2_t, 0)\n+DEF_RVV_X4_VLMUL_EXT_OPS (vuint64m1_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X4_VLMUL_EXT_OPS (vuint64m2_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X4_VLMUL_EXT_OPS (vfloat32mf2_t, RVV_REQUIRE_ELEN_FP_32 | RVV_REQUIRE_ZVE64)\n+DEF_RVV_X4_VLMUL_EXT_OPS (vfloat32m1_t, RVV_REQUIRE_ELEN_FP_32)\n+DEF_RVV_X4_VLMUL_EXT_OPS (vfloat32m2_t, RVV_REQUIRE_ELEN_FP_32)\n+DEF_RVV_X4_VLMUL_EXT_OPS (vfloat64m1_t, RVV_REQUIRE_ELEN_FP_64)\n+DEF_RVV_X4_VLMUL_EXT_OPS (vfloat64m2_t, RVV_REQUIRE_ELEN_FP_64)\n+\n+DEF_RVV_X8_VLMUL_EXT_OPS (vint8mf8_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X8_VLMUL_EXT_OPS (vint8mf4_t, 0)\n+DEF_RVV_X8_VLMUL_EXT_OPS (vint8mf2_t, 0)\n+DEF_RVV_X8_VLMUL_EXT_OPS (vint8m1_t, 0)\n+DEF_RVV_X8_VLMUL_EXT_OPS (vint16mf4_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X8_VLMUL_EXT_OPS (vint16mf2_t, 0)\n+DEF_RVV_X8_VLMUL_EXT_OPS (vint16m1_t, 0)\n+DEF_RVV_X8_VLMUL_EXT_OPS (vint32mf2_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X8_VLMUL_EXT_OPS (vint32m1_t, 0)\n+DEF_RVV_X8_VLMUL_EXT_OPS (vint64m1_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X8_VLMUL_EXT_OPS (vuint8mf8_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X8_VLMUL_EXT_OPS (vuint8mf4_t, 0)\n+DEF_RVV_X8_VLMUL_EXT_OPS (vuint8mf2_t, 0)\n+DEF_RVV_X8_VLMUL_EXT_OPS (vuint8m1_t, 0)\n+DEF_RVV_X8_VLMUL_EXT_OPS (vuint16mf4_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X8_VLMUL_EXT_OPS (vuint16mf2_t, 0)\n+DEF_RVV_X8_VLMUL_EXT_OPS (vuint16m1_t, 0)\n+DEF_RVV_X8_VLMUL_EXT_OPS (vuint32mf2_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X8_VLMUL_EXT_OPS (vuint32m1_t, 0)\n+DEF_RVV_X8_VLMUL_EXT_OPS (vuint64m1_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X8_VLMUL_EXT_OPS (vfloat32mf2_t, RVV_REQUIRE_ELEN_FP_32 | RVV_REQUIRE_ZVE64)\n+DEF_RVV_X8_VLMUL_EXT_OPS (vfloat32m1_t, RVV_REQUIRE_ELEN_FP_32)\n+DEF_RVV_X8_VLMUL_EXT_OPS (vfloat64m1_t, RVV_REQUIRE_ELEN_FP_64)\n+\n+DEF_RVV_X16_VLMUL_EXT_OPS (vint8mf8_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X16_VLMUL_EXT_OPS (vint8mf4_t, 0)\n+DEF_RVV_X16_VLMUL_EXT_OPS (vint8mf2_t, 0)\n+DEF_RVV_X16_VLMUL_EXT_OPS (vint16mf4_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X16_VLMUL_EXT_OPS (vint16mf2_t, 0)\n+DEF_RVV_X16_VLMUL_EXT_OPS (vint32mf2_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X16_VLMUL_EXT_OPS (vuint8mf8_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X16_VLMUL_EXT_OPS (vuint8mf4_t, 0)\n+DEF_RVV_X16_VLMUL_EXT_OPS (vuint8mf2_t, 0)\n+DEF_RVV_X16_VLMUL_EXT_OPS (vuint16mf4_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X16_VLMUL_EXT_OPS (vuint16mf2_t, 0)\n+DEF_RVV_X16_VLMUL_EXT_OPS (vuint32mf2_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X16_VLMUL_EXT_OPS (vfloat32mf2_t, RVV_REQUIRE_ELEN_FP_32 | RVV_REQUIRE_ZVE64)\n+\n+DEF_RVV_X32_VLMUL_EXT_OPS (vint8mf8_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X32_VLMUL_EXT_OPS (vint8mf4_t, 0)\n+DEF_RVV_X32_VLMUL_EXT_OPS (vint16mf4_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X32_VLMUL_EXT_OPS (vuint8mf8_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X32_VLMUL_EXT_OPS (vuint8mf4_t, 0)\n+DEF_RVV_X32_VLMUL_EXT_OPS (vuint16mf4_t, RVV_REQUIRE_ZVE64)\n+\n+DEF_RVV_X64_VLMUL_EXT_OPS (vint8mf8_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_X64_VLMUL_EXT_OPS (vuint8mf8_t, RVV_REQUIRE_ZVE64)\n+\n+DEF_RVV_LMUL1_OPS (vint8m1_t, 0)\n+DEF_RVV_LMUL1_OPS (vint16m1_t, 0)\n+DEF_RVV_LMUL1_OPS (vint32m1_t, 0)\n+DEF_RVV_LMUL1_OPS (vint64m1_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_LMUL1_OPS (vuint8m1_t, 0)\n+DEF_RVV_LMUL1_OPS (vuint16m1_t, 0)\n+DEF_RVV_LMUL1_OPS (vuint32m1_t, 0)\n+DEF_RVV_LMUL1_OPS (vuint64m1_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_LMUL1_OPS (vfloat32m1_t, RVV_REQUIRE_ELEN_FP_32)\n+DEF_RVV_LMUL1_OPS (vfloat64m1_t, RVV_REQUIRE_ELEN_FP_64)\n+\n+DEF_RVV_LMUL2_OPS (vint8m2_t, 0)\n+DEF_RVV_LMUL2_OPS (vint16m2_t, 0)\n+DEF_RVV_LMUL2_OPS (vint32m2_t, 0)\n+DEF_RVV_LMUL2_OPS (vint64m2_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_LMUL2_OPS (vuint8m2_t, 0)\n+DEF_RVV_LMUL2_OPS (vuint16m2_t, 0)\n+DEF_RVV_LMUL2_OPS (vuint32m2_t, 0)\n+DEF_RVV_LMUL2_OPS (vuint64m2_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_LMUL2_OPS (vfloat32m2_t, RVV_REQUIRE_ELEN_FP_32)\n+DEF_RVV_LMUL2_OPS (vfloat64m2_t, RVV_REQUIRE_ELEN_FP_64)\n+\n+DEF_RVV_LMUL4_OPS (vint8m4_t, 0)\n+DEF_RVV_LMUL4_OPS (vint16m4_t, 0)\n+DEF_RVV_LMUL4_OPS (vint32m4_t, 0)\n+DEF_RVV_LMUL4_OPS (vint64m4_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_LMUL4_OPS (vuint8m4_t, 0)\n+DEF_RVV_LMUL4_OPS (vuint16m4_t, 0)\n+DEF_RVV_LMUL4_OPS (vuint32m4_t, 0)\n+DEF_RVV_LMUL4_OPS (vuint64m4_t, RVV_REQUIRE_ZVE64)\n+DEF_RVV_LMUL4_OPS (vfloat32m4_t, RVV_REQUIRE_ELEN_FP_32)\n+DEF_RVV_LMUL4_OPS (vfloat64m4_t, RVV_REQUIRE_ELEN_FP_64)\n+\n #undef DEF_RVV_I_OPS\n #undef DEF_RVV_U_OPS\n #undef DEF_RVV_F_OPS\n@@ -276,3 +830,26 @@ DEF_RVV_FULL_V_U_OPS (vuint64m8_t, RVV_REQUIRE_FULL_V)\n #undef DEF_RVV_OEXTU_OPS\n #undef DEF_RVV_FULL_V_I_OPS\n #undef DEF_RVV_FULL_V_U_OPS\n+#undef DEF_RVV_WEXTF_OPS\n+#undef DEF_RVV_CONVERT_I_OPS\n+#undef DEF_RVV_CONVERT_U_OPS\n+#undef DEF_RVV_WCONVERT_I_OPS\n+#undef DEF_RVV_WCONVERT_U_OPS\n+#undef DEF_RVV_WCONVERT_F_OPS\n+#undef DEF_RVV_WI_OPS\n+#undef DEF_RVV_WU_OPS\n+#undef DEF_RVV_WF_OPS\n+#undef DEF_RVV_EI16_OPS\n+#undef DEF_RVV_EEW8_INTERPRET_OPS\n+#undef DEF_RVV_EEW16_INTERPRET_OPS\n+#undef DEF_RVV_EEW32_INTERPRET_OPS\n+#undef DEF_RVV_EEW64_INTERPRET_OPS\n+#undef DEF_RVV_X2_VLMUL_EXT_OPS\n+#undef DEF_RVV_X4_VLMUL_EXT_OPS\n+#undef DEF_RVV_X8_VLMUL_EXT_OPS\n+#undef DEF_RVV_X16_VLMUL_EXT_OPS\n+#undef DEF_RVV_X32_VLMUL_EXT_OPS\n+#undef DEF_RVV_X64_VLMUL_EXT_OPS\n+#undef DEF_RVV_LMUL1_OPS\n+#undef DEF_RVV_LMUL2_OPS\n+#undef DEF_RVV_LMUL4_OPS"}, {"sha": "bd16fe9db7d595274a63dde8f894fb734f672029", "filename": "gcc/config/riscv/riscv-vector-builtins.cc", "status": "modified", "additions": 1357, "deletions": 289, "changes": 1646, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-vector-builtins.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-vector-builtins.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-vector-builtins.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -45,6 +45,9 @@\n #include \"targhooks.h\"\n #include \"regs.h\"\n #include \"emit-rtl.h\"\n+#include \"basic-block.h\"\n+#include \"gimple.h\"\n+#include \"gimple-iterator.h\"\n #include \"riscv-vector-builtins.h\"\n #include \"riscv-vector-builtins-shapes.h\"\n #include \"riscv-vector-builtins-bases.h\"\n@@ -106,33 +109,48 @@ const char *const operand_suffixes[NUM_OP_TYPES] = {\n const rvv_builtin_suffixes type_suffixes[NUM_VECTOR_TYPES + 1] = {\n #define DEF_RVV_TYPE(NAME, NCHARS, ABI_NAME, SCALAR_TYPE, VECTOR_MODE,         \\\n \t\t     VECTOR_MODE_MIN_VLEN_32, VECTOR_SUFFIX, SCALAR_SUFFIX,    \\\n-\t\t     VSETVL_SUFFIX, MASK_TYPE)                                 \\\n+\t\t     VSETVL_SUFFIX)                                            \\\n   {#VECTOR_SUFFIX, #SCALAR_SUFFIX, #VSETVL_SUFFIX},\n #include \"riscv-vector-builtins.def\"\n };\n \n-/* Mask type for each RVV type.  */\n-const vector_type_index mask_types[NUM_VECTOR_TYPES + 1] = {\n-#define DEF_RVV_TYPE(NAME, NCHARS, ABI_NAME, SCALAR_TYPE, VECTOR_MODE,         \\\n-\t\t     VECTOR_MODE_MIN_VLEN_32, VECTOR_SUFFIX, SCALAR_SUFFIX,    \\\n-\t\t     VSETVL_SUFFIX, MASK_TYPE)                                 \\\n-  VECTOR_TYPE_##MASK_TYPE,\n-#include \"riscv-vector-builtins.def\"\n-};\n-\n /* Static information about predication suffix for each RVV type.  */\n const char *const predication_suffixes[NUM_PRED_TYPES] = {\n   \"\", /* PRED_TYPE_none.  */\n #define DEF_RVV_PRED_TYPE(NAME) \"_\" # NAME,\n #include \"riscv-vector-builtins.def\"\n };\n \n+/* A list of all signed integer will be registered for intrinsic functions.  */\n+static const rvv_type_info none_ops[] = {{NUM_VECTOR_TYPES, 0}};\n+\n /* A list of all signed integer will be registered for intrinsic functions.  */\n static const rvv_type_info i_ops[] = {\n #define DEF_RVV_I_OPS(TYPE, REQUIRE) {VECTOR_TYPE_##TYPE, REQUIRE},\n #include \"riscv-vector-builtins-types.def\"\n   {NUM_VECTOR_TYPES, 0}};\n \n+/* A list of all signed integer can be widened will be registered for intrinsic\n+ * functions.  */\n+static const rvv_type_info wi_ops[] = {\n+#define DEF_RVV_WI_OPS(TYPE, REQUIRE) {VECTOR_TYPE_##TYPE, REQUIRE},\n+#include \"riscv-vector-builtins-types.def\"\n+  {NUM_VECTOR_TYPES, 0}};\n+\n+/* A list of all unsigned integer can be widened will be registered for\n+ * intrinsic functions.  */\n+static const rvv_type_info wu_ops[] = {\n+#define DEF_RVV_WU_OPS(TYPE, REQUIRE) {VECTOR_TYPE_##TYPE, REQUIRE},\n+#include \"riscv-vector-builtins-types.def\"\n+  {NUM_VECTOR_TYPES, 0}};\n+\n+/* A list of all floating-point can be widened will be registered for intrinsic\n+ * functions.  */\n+static const rvv_type_info wf_ops[] = {\n+#define DEF_RVV_WF_OPS(TYPE, REQUIRE) {VECTOR_TYPE_##TYPE, REQUIRE},\n+#include \"riscv-vector-builtins-types.def\"\n+  {NUM_VECTOR_TYPES, 0}};\n+\n /* A list of all signed integer that SEW = 64 require full 'V' extension will be\n    registered for intrinsic functions.  */\n static const rvv_type_info full_v_i_ops[] = {\n@@ -147,12 +165,42 @@ static const rvv_type_info full_v_u_ops[] = {\n #include \"riscv-vector-builtins-types.def\"\n   {NUM_VECTOR_TYPES, 0}};\n \n-/* A list of all signed integer will be registered for intrinsic functions.  */\n+/* A list of all unsigned integer will be registered for intrinsic functions.  */\n static const rvv_type_info u_ops[] = {\n #define DEF_RVV_U_OPS(TYPE, REQUIRE) {VECTOR_TYPE_##TYPE, REQUIRE},\n #include \"riscv-vector-builtins-types.def\"\n   {NUM_VECTOR_TYPES, 0}};\n \n+/* A list of all signed integer will be registered for intrinsic functions.  */\n+static const rvv_type_info convert_i_ops[] = {\n+#define DEF_RVV_CONVERT_I_OPS(TYPE, REQUIRE) {VECTOR_TYPE_##TYPE, REQUIRE},\n+#include \"riscv-vector-builtins-types.def\"\n+  {NUM_VECTOR_TYPES, 0}};\n+\n+/* A list of all unsigned integer will be registered for intrinsic functions.  */\n+static const rvv_type_info convert_u_ops[] = {\n+#define DEF_RVV_CONVERT_U_OPS(TYPE, REQUIRE) {VECTOR_TYPE_##TYPE, REQUIRE},\n+#include \"riscv-vector-builtins-types.def\"\n+  {NUM_VECTOR_TYPES, 0}};\n+\n+/* A list of all signed integer will be registered for intrinsic functions.  */\n+static const rvv_type_info wconvert_i_ops[] = {\n+#define DEF_RVV_WCONVERT_I_OPS(TYPE, REQUIRE) {VECTOR_TYPE_##TYPE, REQUIRE},\n+#include \"riscv-vector-builtins-types.def\"\n+  {NUM_VECTOR_TYPES, 0}};\n+\n+/* A list of all unsigned integer will be registered for intrinsic functions. */\n+static const rvv_type_info wconvert_u_ops[] = {\n+#define DEF_RVV_WCONVERT_U_OPS(TYPE, REQUIRE) {VECTOR_TYPE_##TYPE, REQUIRE},\n+#include \"riscv-vector-builtins-types.def\"\n+  {NUM_VECTOR_TYPES, 0}};\n+\n+/* A list of all floating-point will be registered for intrinsic functions. */\n+static const rvv_type_info wconvert_f_ops[] = {\n+#define DEF_RVV_WCONVERT_F_OPS(TYPE, REQUIRE) {VECTOR_TYPE_##TYPE, REQUIRE},\n+#include \"riscv-vector-builtins-types.def\"\n+  {NUM_VECTOR_TYPES, 0}};\n+\n /* A list of all integer will be registered for intrinsic functions.  */\n static const rvv_type_info iu_ops[] = {\n #define DEF_RVV_I_OPS(TYPE, REQUIRE) {VECTOR_TYPE_##TYPE, REQUIRE},\n@@ -168,19 +216,38 @@ static const rvv_type_info all_ops[] = {\n #include \"riscv-vector-builtins-types.def\"\n   {NUM_VECTOR_TYPES, 0}};\n \n+/* A list of all types will be registered for intrinsic functions.  */\n+static const rvv_type_info ei16_ops[] = {\n+#define DEF_RVV_EI16_OPS(TYPE, REQUIRE) {VECTOR_TYPE_##TYPE, REQUIRE},\n+#include \"riscv-vector-builtins-types.def\"\n+  {NUM_VECTOR_TYPES, 0}};\n+\n /* A list of all bool will be registered for intrinsic functions.  */\n static const rvv_type_info b_ops[] = {\n #define DEF_RVV_B_OPS(TYPE, REQUIRE) {VECTOR_TYPE_##TYPE, REQUIRE},\n #include \"riscv-vector-builtins-types.def\"\n   {NUM_VECTOR_TYPES, 0}};\n \n+/* A list of all float will be registered for intrinsic functions.  */\n+static const rvv_type_info f_ops[] = {\n+#define DEF_RVV_F_OPS(TYPE, REQUIRE) {VECTOR_TYPE_##TYPE, REQUIRE},\n+#include \"riscv-vector-builtins-types.def\"\n+  {NUM_VECTOR_TYPES, 0}};\n+\n /* A list of Double-Widening signed integer will be registered for intrinsic\n  * functions.  */\n static const rvv_type_info wexti_ops[] = {\n #define DEF_RVV_WEXTI_OPS(TYPE, REQUIRE) {VECTOR_TYPE_##TYPE, REQUIRE},\n #include \"riscv-vector-builtins-types.def\"\n   {NUM_VECTOR_TYPES, 0}};\n \n+/* A list of Double-Widening float will be registered for intrinsic functions.\n+ */\n+static const rvv_type_info wextf_ops[] = {\n+#define DEF_RVV_WEXTF_OPS(TYPE, REQUIRE) {VECTOR_TYPE_##TYPE, REQUIRE},\n+#include \"riscv-vector-builtins-types.def\"\n+  {NUM_VECTOR_TYPES, 0}};\n+\n /* A list of Quad-Widening signed integer will be registered for intrinsic\n  * functions.  */\n static const rvv_type_info qexti_ops[] = {\n@@ -224,12 +291,92 @@ static const rvv_type_info oextu_ops[] = {\n #include \"riscv-vector-builtins-types.def\"\n   {NUM_VECTOR_TYPES, 0}};\n \n+/* A list of eew8 interpret will be registered for intrinsic functions.  */\n+static const rvv_type_info eew8_interpret_ops[] = {\n+#define DEF_RVV_EEW8_INTERPRET_OPS(TYPE, REQUIRE) {VECTOR_TYPE_##TYPE, REQUIRE},\n+#include \"riscv-vector-builtins-types.def\"\n+  {NUM_VECTOR_TYPES, 0}};\n+\n+/* A list of eew16 interpret will be registered for intrinsic functions.  */\n+static const rvv_type_info eew16_interpret_ops[] = {\n+#define DEF_RVV_EEW16_INTERPRET_OPS(TYPE, REQUIRE)                             \\\n+  {VECTOR_TYPE_##TYPE, REQUIRE},\n+#include \"riscv-vector-builtins-types.def\"\n+  {NUM_VECTOR_TYPES, 0}};\n+\n+/* A list of eew32 interpret will be registered for intrinsic functions.  */\n+static const rvv_type_info eew32_interpret_ops[] = {\n+#define DEF_RVV_EEW32_INTERPRET_OPS(TYPE, REQUIRE)                             \\\n+  {VECTOR_TYPE_##TYPE, REQUIRE},\n+#include \"riscv-vector-builtins-types.def\"\n+  {NUM_VECTOR_TYPES, 0}};\n+\n+/* A list of eew64 interpret will be registered for intrinsic functions.  */\n+static const rvv_type_info eew64_interpret_ops[] = {\n+#define DEF_RVV_EEW64_INTERPRET_OPS(TYPE, REQUIRE)                             \\\n+  {VECTOR_TYPE_##TYPE, REQUIRE},\n+#include \"riscv-vector-builtins-types.def\"\n+  {NUM_VECTOR_TYPES, 0}};\n+\n+/* A list of x2 vlmul ext will be registered for intrinsic functions.  */\n+static const rvv_type_info vlmul_ext_x2_ops[] = {\n+#define DEF_RVV_X2_VLMUL_EXT_OPS(TYPE, REQUIRE) {VECTOR_TYPE_##TYPE, REQUIRE},\n+#include \"riscv-vector-builtins-types.def\"\n+  {NUM_VECTOR_TYPES, 0}};\n+\n+/* A list of x4 vlmul ext will be registered for intrinsic functions.  */\n+static const rvv_type_info vlmul_ext_x4_ops[] = {\n+#define DEF_RVV_X4_VLMUL_EXT_OPS(TYPE, REQUIRE) {VECTOR_TYPE_##TYPE, REQUIRE},\n+#include \"riscv-vector-builtins-types.def\"\n+  {NUM_VECTOR_TYPES, 0}};\n+\n+/* A list of x8 vlmul ext will be registered for intrinsic functions.  */\n+static const rvv_type_info vlmul_ext_x8_ops[] = {\n+#define DEF_RVV_X8_VLMUL_EXT_OPS(TYPE, REQUIRE) {VECTOR_TYPE_##TYPE, REQUIRE},\n+#include \"riscv-vector-builtins-types.def\"\n+  {NUM_VECTOR_TYPES, 0}};\n+\n+/* A list of x16 vlmul ext will be registered for intrinsic functions.  */\n+static const rvv_type_info vlmul_ext_x16_ops[] = {\n+#define DEF_RVV_X16_VLMUL_EXT_OPS(TYPE, REQUIRE) {VECTOR_TYPE_##TYPE, REQUIRE},\n+#include \"riscv-vector-builtins-types.def\"\n+  {NUM_VECTOR_TYPES, 0}};\n+\n+/* A list of x32 vlmul ext will be registered for intrinsic functions.  */\n+static const rvv_type_info vlmul_ext_x32_ops[] = {\n+#define DEF_RVV_X32_VLMUL_EXT_OPS(TYPE, REQUIRE) {VECTOR_TYPE_##TYPE, REQUIRE},\n+#include \"riscv-vector-builtins-types.def\"\n+  {NUM_VECTOR_TYPES, 0}};\n+\n+/* A list of x64 vlmul ext will be registered for intrinsic functions.  */\n+static const rvv_type_info vlmul_ext_x64_ops[] = {\n+#define DEF_RVV_X64_VLMUL_EXT_OPS(TYPE, REQUIRE) {VECTOR_TYPE_##TYPE, REQUIRE},\n+#include \"riscv-vector-builtins-types.def\"\n+  {NUM_VECTOR_TYPES, 0}};\n+\n+/* A list of LMUL1 will be registered for intrinsic functions.  */\n+static const rvv_type_info lmul1_ops[] = {\n+#define DEF_RVV_LMUL1_OPS(TYPE, REQUIRE) {VECTOR_TYPE_##TYPE, REQUIRE},\n+#include \"riscv-vector-builtins-types.def\"\n+  {NUM_VECTOR_TYPES, 0}};\n+\n+/* A list of LMUL2 will be registered for intrinsic functions.  */\n+static const rvv_type_info lmul2_ops[] = {\n+#define DEF_RVV_LMUL2_OPS(TYPE, REQUIRE) {VECTOR_TYPE_##TYPE, REQUIRE},\n+#include \"riscv-vector-builtins-types.def\"\n+  {NUM_VECTOR_TYPES, 0}};\n+\n+/* A list of LMUL4 will be registered for intrinsic functions.  */\n+static const rvv_type_info lmul4_ops[] = {\n+#define DEF_RVV_LMUL4_OPS(TYPE, REQUIRE) {VECTOR_TYPE_##TYPE, REQUIRE},\n+#include \"riscv-vector-builtins-types.def\"\n+  {NUM_VECTOR_TYPES, 0}};\n+\n static CONSTEXPR const rvv_arg_type_info rvv_arg_type_info_end\n   = rvv_arg_type_info (NUM_BASE_TYPES);\n \n-/* A list of args for size_t func (void) function.  */\n-static CONSTEXPR const rvv_arg_type_info void_args[]\n-  = {rvv_arg_type_info (RVV_BASE_void), rvv_arg_type_info_end};\n+/* A list of args for size_t func () function.  */\n+static CONSTEXPR const rvv_arg_type_info void_args[] = {rvv_arg_type_info_end};\n \n /* A list of args for size_t func () function.  */\n static CONSTEXPR const rvv_arg_type_info end_args[]\n@@ -243,6 +390,12 @@ static CONSTEXPR const rvv_arg_type_info size_args[]\n static CONSTEXPR const rvv_arg_type_info scalar_const_ptr_args[]\n   = {rvv_arg_type_info (RVV_BASE_scalar_const_ptr), rvv_arg_type_info_end};\n \n+/* A list of args for vector_type func (const scalar_type *, size_t *) function.\n+ */\n+static CONSTEXPR const rvv_arg_type_info scalar_const_ptr_size_ptr_args[]\n+  = {rvv_arg_type_info (RVV_BASE_scalar_const_ptr),\n+     rvv_arg_type_info (RVV_BASE_size_ptr), rvv_arg_type_info_end};\n+\n /* A list of args for void func (scalar_type *, vector_type) function.  */\n static CONSTEXPR const rvv_arg_type_info scalar_ptr_args[]\n   = {rvv_arg_type_info (RVV_BASE_scalar_ptr),\n@@ -261,56 +414,56 @@ static CONSTEXPR const rvv_arg_type_info scalar_ptr_ptrdiff_args[]\n      rvv_arg_type_info (RVV_BASE_ptrdiff), rvv_arg_type_info (RVV_BASE_vector),\n      rvv_arg_type_info_end};\n \n-/* A list of args for vector_type func (const scalar_type *, uint8_index_type)\n+/* A list of args for vector_type func (const scalar_type *, eew8_index_type)\n  * function.  */\n-static CONSTEXPR const rvv_arg_type_info scalar_const_ptr_uint8_index_args[]\n+static CONSTEXPR const rvv_arg_type_info scalar_const_ptr_eew8_index_args[]\n   = {rvv_arg_type_info (RVV_BASE_scalar_const_ptr),\n-     rvv_arg_type_info (RVV_BASE_uint8_index), rvv_arg_type_info_end};\n+     rvv_arg_type_info (RVV_BASE_eew8_index), rvv_arg_type_info_end};\n \n-/* A list of args for vector_type func (const scalar_type *, uint16_index_type)\n+/* A list of args for vector_type func (const scalar_type *, eew16_index_type)\n  * function.  */\n-static CONSTEXPR const rvv_arg_type_info scalar_const_ptr_uint16_index_args[]\n+static CONSTEXPR const rvv_arg_type_info scalar_const_ptr_eew16_index_args[]\n   = {rvv_arg_type_info (RVV_BASE_scalar_const_ptr),\n-     rvv_arg_type_info (RVV_BASE_uint16_index), rvv_arg_type_info_end};\n+     rvv_arg_type_info (RVV_BASE_eew16_index), rvv_arg_type_info_end};\n \n-/* A list of args for vector_type func (const scalar_type *, uint32_index_type)\n+/* A list of args for vector_type func (const scalar_type *, eew32_index_type)\n  * function.  */\n-static CONSTEXPR const rvv_arg_type_info scalar_const_ptr_uint32_index_args[]\n+static CONSTEXPR const rvv_arg_type_info scalar_const_ptr_eew32_index_args[]\n   = {rvv_arg_type_info (RVV_BASE_scalar_const_ptr),\n-     rvv_arg_type_info (RVV_BASE_uint32_index), rvv_arg_type_info_end};\n+     rvv_arg_type_info (RVV_BASE_eew32_index), rvv_arg_type_info_end};\n \n-/* A list of args for vector_type func (const scalar_type *, uint64_index_type)\n+/* A list of args for vector_type func (const scalar_type *, eew64_index_type)\n  * function.  */\n-static CONSTEXPR const rvv_arg_type_info scalar_const_ptr_uint64_index_args[]\n+static CONSTEXPR const rvv_arg_type_info scalar_const_ptr_eew64_index_args[]\n   = {rvv_arg_type_info (RVV_BASE_scalar_const_ptr),\n-     rvv_arg_type_info (RVV_BASE_uint64_index), rvv_arg_type_info_end};\n+     rvv_arg_type_info (RVV_BASE_eew64_index), rvv_arg_type_info_end};\n \n-/* A list of args for void func (scalar_type *, uint8_index_type, vector_type)\n+/* A list of args for void func (scalar_type *, eew8_index_type, vector_type)\n  * function.  */\n-static CONSTEXPR const rvv_arg_type_info scalar_ptr_uint8_index_args[]\n+static CONSTEXPR const rvv_arg_type_info scalar_ptr_eew8_index_args[]\n   = {rvv_arg_type_info (RVV_BASE_scalar_ptr),\n-     rvv_arg_type_info (RVV_BASE_uint8_index),\n+     rvv_arg_type_info (RVV_BASE_eew8_index),\n      rvv_arg_type_info (RVV_BASE_vector), rvv_arg_type_info_end};\n \n-/* A list of args for void func (scalar_type *, uint16_index_type, vector_type)\n+/* A list of args for void func (scalar_type *, eew16_index_type, vector_type)\n  * function.  */\n-static CONSTEXPR const rvv_arg_type_info scalar_ptr_uint16_index_args[]\n+static CONSTEXPR const rvv_arg_type_info scalar_ptr_eew16_index_args[]\n   = {rvv_arg_type_info (RVV_BASE_scalar_ptr),\n-     rvv_arg_type_info (RVV_BASE_uint16_index),\n+     rvv_arg_type_info (RVV_BASE_eew16_index),\n      rvv_arg_type_info (RVV_BASE_vector), rvv_arg_type_info_end};\n \n-/* A list of args for void func (scalar_type *, uint32_index_type, vector_type)\n+/* A list of args for void func (scalar_type *, eew32_index_type, vector_type)\n  * function.  */\n-static CONSTEXPR const rvv_arg_type_info scalar_ptr_uint32_index_args[]\n+static CONSTEXPR const rvv_arg_type_info scalar_ptr_eew32_index_args[]\n   = {rvv_arg_type_info (RVV_BASE_scalar_ptr),\n-     rvv_arg_type_info (RVV_BASE_uint32_index),\n+     rvv_arg_type_info (RVV_BASE_eew32_index),\n      rvv_arg_type_info (RVV_BASE_vector), rvv_arg_type_info_end};\n \n-/* A list of args for void func (scalar_type *, uint64_index_type, vector_type)\n+/* A list of args for void func (scalar_type *, eew64_index_type, vector_type)\n  * function.  */\n-static CONSTEXPR const rvv_arg_type_info scalar_ptr_uint64_index_args[]\n+static CONSTEXPR const rvv_arg_type_info scalar_ptr_eew64_index_args[]\n   = {rvv_arg_type_info (RVV_BASE_scalar_ptr),\n-     rvv_arg_type_info (RVV_BASE_uint64_index),\n+     rvv_arg_type_info (RVV_BASE_eew64_index),\n      rvv_arg_type_info (RVV_BASE_vector), rvv_arg_type_info_end};\n \n /* A list of args for vector_type func (vector_type, vector_type) function.  */\n@@ -336,6 +489,12 @@ static CONSTEXPR const rvv_arg_type_info vvm_args[]\n   = {rvv_arg_type_info (RVV_BASE_vector), rvv_arg_type_info (RVV_BASE_vector),\n      rvv_arg_type_info (RVV_BASE_mask), rvv_arg_type_info_end};\n \n+/* A list of args for vector_type func (vector_type, mask_type)\n+ * function.  */\n+static CONSTEXPR const rvv_arg_type_info vm_args[]\n+  = {rvv_arg_type_info (RVV_BASE_vector), rvv_arg_type_info (RVV_BASE_mask),\n+     rvv_arg_type_info_end};\n+\n /* A list of args for vector_type func (vector_type, scalar_type, mask_type)\n  * function.  */\n static CONSTEXPR const rvv_arg_type_info vxm_args[]\n@@ -364,6 +523,16 @@ static CONSTEXPR const rvv_arg_type_info shift_vv_args[]\n   = {rvv_arg_type_info (RVV_BASE_vector),\n      rvv_arg_type_info (RVV_BASE_shift_vector), rvv_arg_type_info_end};\n \n+/* A list of args for vector_type func (vector_type, shift_type) function.  */\n+static CONSTEXPR const rvv_arg_type_info gather_vv_args[]\n+  = {rvv_arg_type_info (RVV_BASE_vector),\n+     rvv_arg_type_info (RVV_BASE_unsigned_vector), rvv_arg_type_info_end};\n+\n+/* A list of args for vector_type func (vector_type, shift_type) function.  */\n+static CONSTEXPR const rvv_arg_type_info gatherei16_vv_args[]\n+  = {rvv_arg_type_info (RVV_BASE_vector),\n+     rvv_arg_type_info (RVV_BASE_eew16_index), rvv_arg_type_info_end};\n+\n /* A list of args for double demote type func (vector_type, shift_type)\n  * function.  */\n static CONSTEXPR const rvv_arg_type_info shift_wv_args[]\n@@ -375,6 +544,54 @@ static CONSTEXPR const rvv_arg_type_info shift_wv_args[]\n static CONSTEXPR const rvv_arg_type_info v_args[]\n   = {rvv_arg_type_info (RVV_BASE_vector), rvv_arg_type_info_end};\n \n+/* A list of args for vector_type func (vector_type) function.  */\n+static CONSTEXPR const rvv_arg_type_info v_x2_trunc_args[]\n+  = {rvv_arg_type_info (RVV_BASE_vlmul_ext_x2), rvv_arg_type_info_end};\n+\n+/* A list of args for vector_type func (vector_type) function.  */\n+static CONSTEXPR const rvv_arg_type_info v_x4_trunc_args[]\n+  = {rvv_arg_type_info (RVV_BASE_vlmul_ext_x4), rvv_arg_type_info_end};\n+\n+/* A list of args for vector_type func (vector_type) function.  */\n+static CONSTEXPR const rvv_arg_type_info v_x8_trunc_args[]\n+  = {rvv_arg_type_info (RVV_BASE_vlmul_ext_x8), rvv_arg_type_info_end};\n+\n+/* A list of args for vector_type func (vector_type) function.  */\n+static CONSTEXPR const rvv_arg_type_info v_x16_trunc_args[]\n+  = {rvv_arg_type_info (RVV_BASE_vlmul_ext_x16), rvv_arg_type_info_end};\n+\n+/* A list of args for vector_type func (vector_type) function.  */\n+static CONSTEXPR const rvv_arg_type_info v_x32_trunc_args[]\n+  = {rvv_arg_type_info (RVV_BASE_vlmul_ext_x32), rvv_arg_type_info_end};\n+\n+/* A list of args for vector_type func (vector_type) function.  */\n+static CONSTEXPR const rvv_arg_type_info v_x64_trunc_args[]\n+  = {rvv_arg_type_info (RVV_BASE_vlmul_ext_x64), rvv_arg_type_info_end};\n+\n+/* A list of args for vector_type func (vector_type, lmul1_type) function.  */\n+static CONSTEXPR const rvv_arg_type_info vs_args[]\n+  = {rvv_arg_type_info (RVV_BASE_vector),\n+     rvv_arg_type_info (RVV_BASE_lmul1_vector), rvv_arg_type_info_end};\n+\n+/* A list of args for vector_type func (vector_type, widen_lmul1_type) function.\n+ */\n+static CONSTEXPR const rvv_arg_type_info wvs_args[]\n+  = {rvv_arg_type_info (RVV_BASE_vector),\n+     rvv_arg_type_info (RVV_BASE_widen_lmul1_vector), rvv_arg_type_info_end};\n+\n+/* A list of args for vector_type func (vector_type) function.  */\n+static CONSTEXPR const rvv_arg_type_info f_v_args[]\n+  = {rvv_arg_type_info (RVV_BASE_float_vector), rvv_arg_type_info_end};\n+\n+/* A list of args for vector_type func (vector_type) function.  */\n+static CONSTEXPR const rvv_arg_type_info trunc_f_v_args[]\n+  = {rvv_arg_type_info (RVV_BASE_double_trunc_float_vector),\n+     rvv_arg_type_info_end};\n+\n+/* A list of args for vector_type func (vector_type) function.  */\n+static CONSTEXPR const rvv_arg_type_info w_v_args[]\n+  = {rvv_arg_type_info (RVV_BASE_double_trunc_vector), rvv_arg_type_info_end};\n+\n /* A list of args for vector_type func (vector_type) function.  */\n static CONSTEXPR const rvv_arg_type_info m_args[]\n   = {rvv_arg_type_info (RVV_BASE_mask), rvv_arg_type_info_end};\n@@ -384,10 +601,16 @@ static CONSTEXPR const rvv_arg_type_info x_args[]\n   = {rvv_arg_type_info (RVV_BASE_scalar), rvv_arg_type_info_end};\n \n /* A list of args for vector_type func (vector_type, size) function.  */\n-static CONSTEXPR const rvv_arg_type_info vector_size_args[]\n+static CONSTEXPR const rvv_arg_type_info v_size_args[]\n   = {rvv_arg_type_info (RVV_BASE_vector), rvv_arg_type_info (RVV_BASE_size),\n      rvv_arg_type_info_end};\n \n+/* A list of args for vector_type func (vector_type, vector_type, size)\n+ * function.  */\n+static CONSTEXPR const rvv_arg_type_info vv_size_args[]\n+  = {rvv_arg_type_info (RVV_BASE_vector), rvv_arg_type_info (RVV_BASE_vector),\n+     rvv_arg_type_info (RVV_BASE_size), rvv_arg_type_info_end};\n+\n /* A list of args for vector_type func (double demote type) function.  */\n static CONSTEXPR const rvv_arg_type_info vf2_args[]\n   = {rvv_arg_type_info (RVV_BASE_double_trunc_vector), rvv_arg_type_info_end};\n@@ -479,6 +702,57 @@ static CONSTEXPR const rvv_arg_type_info vf8_args[]\n static CONSTEXPR const rvv_arg_type_info x_x_v_args[]\n   = {rvv_arg_type_info (RVV_BASE_double_trunc_vector), rvv_arg_type_info_end};\n \n+/* A list of args for vector_type func (vector_type) function.  */\n+static CONSTEXPR const rvv_arg_type_info x_v_args[]\n+  = {rvv_arg_type_info (RVV_BASE_signed_vector), rvv_arg_type_info_end};\n+\n+/* A list of args for vector_type func (vector_type) function.  */\n+static CONSTEXPR const rvv_arg_type_info xu_v_args[]\n+  = {rvv_arg_type_info (RVV_BASE_unsigned_vector), rvv_arg_type_info_end};\n+\n+/* A list of args for vector_type func (vector_type) function.  */\n+static CONSTEXPR const rvv_arg_type_info w_x_v_args[]\n+  = {rvv_arg_type_info (RVV_BASE_double_trunc_signed_vector),\n+     rvv_arg_type_info_end};\n+\n+/* A list of args for vector_type func (vector_type) function.  */\n+static CONSTEXPR const rvv_arg_type_info w_xu_v_args[]\n+  = {rvv_arg_type_info (RVV_BASE_double_trunc_unsigned_vector),\n+     rvv_arg_type_info_end};\n+\n+/* A list of args for vector_type func (vector_type) function.  */\n+static CONSTEXPR const rvv_arg_type_info ext_x2_vset_args[]\n+  = {rvv_arg_type_info (RVV_BASE_vlmul_ext_x2),\n+     rvv_arg_type_info (RVV_BASE_size), rvv_arg_type_info (RVV_BASE_vector),\n+     rvv_arg_type_info_end};\n+\n+/* A list of args for vector_type func (vector_type) function.  */\n+static CONSTEXPR const rvv_arg_type_info ext_x4_vset_args[]\n+  = {rvv_arg_type_info (RVV_BASE_vlmul_ext_x4),\n+     rvv_arg_type_info (RVV_BASE_size), rvv_arg_type_info (RVV_BASE_vector),\n+     rvv_arg_type_info_end};\n+\n+/* A list of args for vector_type func (vector_type) function.  */\n+static CONSTEXPR const rvv_arg_type_info ext_x8_vset_args[]\n+  = {rvv_arg_type_info (RVV_BASE_vlmul_ext_x8),\n+     rvv_arg_type_info (RVV_BASE_size), rvv_arg_type_info (RVV_BASE_vector),\n+     rvv_arg_type_info_end};\n+\n+/* A list of args for vector_type func (vector_type) function.  */\n+static CONSTEXPR const rvv_arg_type_info ext_x2_vget_args[]\n+  = {rvv_arg_type_info (RVV_BASE_vlmul_ext_x2),\n+     rvv_arg_type_info (RVV_BASE_size), rvv_arg_type_info_end};\n+\n+/* A list of args for vector_type func (vector_type) function.  */\n+static CONSTEXPR const rvv_arg_type_info ext_x4_vget_args[]\n+  = {rvv_arg_type_info (RVV_BASE_vlmul_ext_x4),\n+     rvv_arg_type_info (RVV_BASE_size), rvv_arg_type_info_end};\n+\n+/* A list of args for vector_type func (vector_type) function.  */\n+static CONSTEXPR const rvv_arg_type_info ext_x8_vget_args[]\n+  = {rvv_arg_type_info (RVV_BASE_vlmul_ext_x8),\n+     rvv_arg_type_info (RVV_BASE_size), rvv_arg_type_info_end};\n+\n /* A list of none preds that will be registered for intrinsic functions.  */\n static CONSTEXPR const predication_type_index none_preds[]\n   = {PRED_TYPE_none, NUM_PRED_TYPES};\n@@ -488,6 +762,10 @@ static CONSTEXPR const predication_type_index full_preds[]\n   = {PRED_TYPE_none, PRED_TYPE_m,  PRED_TYPE_tu,  PRED_TYPE_tum,\n      PRED_TYPE_tumu, PRED_TYPE_mu, NUM_PRED_TYPES};\n \n+/* vop/vop_m/vop_tu/vop_tum/ will be registered.  */\n+static CONSTEXPR const predication_type_index no_mu_preds[]\n+  = {PRED_TYPE_none, PRED_TYPE_m, PRED_TYPE_tu, PRED_TYPE_tum, NUM_PRED_TYPES};\n+\n /* vop/vop_tu will be registered.  */\n static CONSTEXPR const predication_type_index none_tu_preds[]\n   = {PRED_TYPE_none, PRED_TYPE_tu, NUM_PRED_TYPES};\n@@ -500,7 +778,7 @@ static CONSTEXPR const predication_type_index none_m_preds[]\n static CONSTEXPR const predication_type_index none_m_mu_preds[]\n   = {PRED_TYPE_none, PRED_TYPE_m, PRED_TYPE_mu, NUM_PRED_TYPES};\n \n-/* A static operand information for size_t func (void) function registration. */\n+/* A static operand information for size_t func () function registration. */\n static CONSTEXPR const rvv_op_info i_none_size_void_ops\n   = {i_ops,\t\t\t\t/* Types */\n      OP_TYPE_none,\t\t\t/* Suffix */\n@@ -515,6 +793,14 @@ static CONSTEXPR const rvv_op_info i_none_size_size_ops\n      rvv_arg_type_info (RVV_BASE_size), /* Return type */\n      size_args /* Args */};\n \n+/* A static operand information for vector_type func () function registration.\n+ */\n+static CONSTEXPR const rvv_op_info all_none_void_ops\n+  = {all_ops,\t\t\t\t  /* Types */\n+     OP_TYPE_none,\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     void_args /* Args */};\n+\n /* A static operand information for vector_type func (const scalar_type *)\n  * function registration. */\n static CONSTEXPR const rvv_op_info all_v_scalar_const_ptr_ops\n@@ -523,6 +809,14 @@ static CONSTEXPR const rvv_op_info all_v_scalar_const_ptr_ops\n      rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n      scalar_const_ptr_args /* Args */};\n \n+/* A static operand information for vector_type func (const scalar_type *)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info all_v_scalar_const_ptr_size_ptr_ops\n+  = {all_ops,\t\t\t\t  /* Types */\n+     OP_TYPE_v,\t\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     scalar_const_ptr_size_ptr_args /* Args */};\n+\n /* A static operand information for void func (scalar_type *, vector_type)\n  * function registration. */\n static CONSTEXPR const rvv_op_info all_v_scalar_ptr_ops\n@@ -612,36 +906,36 @@ static CONSTEXPR const rvv_op_info all_v_scalar_const_ptr_ptrdiff_ops\n      scalar_const_ptr_ptrdiff_args /* Args */};\n \n /* A static operand information for vector_type func (const scalar_type *,\n- * uint8_index_type) function registration. */\n-static CONSTEXPR const rvv_op_info all_v_scalar_const_ptr_uint8_index_ops\n+ * eew8_index_type) function registration. */\n+static CONSTEXPR const rvv_op_info all_v_scalar_const_ptr_eew8_index_ops\n   = {all_ops,\t\t\t\t  /* Types */\n      OP_TYPE_v,\t\t\t\t  /* Suffix */\n      rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n-     scalar_const_ptr_uint8_index_args /* Args */};\n+     scalar_const_ptr_eew8_index_args /* Args */};\n \n /* A static operand information for vector_type func (const scalar_type *,\n- * uint16_index_type) function registration. */\n-static CONSTEXPR const rvv_op_info all_v_scalar_const_ptr_uint16_index_ops\n+ * eew16_index_type) function registration. */\n+static CONSTEXPR const rvv_op_info all_v_scalar_const_ptr_eew16_index_ops\n   = {all_ops,\t\t\t\t  /* Types */\n      OP_TYPE_v,\t\t\t\t  /* Suffix */\n      rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n-     scalar_const_ptr_uint16_index_args /* Args */};\n+     scalar_const_ptr_eew16_index_args /* Args */};\n \n /* A static operand information for vector_type func (const scalar_type *,\n- * uint32_index_type) function registration. */\n-static CONSTEXPR const rvv_op_info all_v_scalar_const_ptr_uint32_index_ops\n+ * eew32_index_type) function registration. */\n+static CONSTEXPR const rvv_op_info all_v_scalar_const_ptr_eew32_index_ops\n   = {all_ops,\t\t\t\t  /* Types */\n      OP_TYPE_v,\t\t\t\t  /* Suffix */\n      rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n-     scalar_const_ptr_uint32_index_args /* Args */};\n+     scalar_const_ptr_eew32_index_args /* Args */};\n \n /* A static operand information for vector_type func (const scalar_type *,\n- * uint64_index_type) function registration. */\n-static CONSTEXPR const rvv_op_info all_v_scalar_const_ptr_uint64_index_ops\n+ * eew64_index_type) function registration. */\n+static CONSTEXPR const rvv_op_info all_v_scalar_const_ptr_eew64_index_ops\n   = {all_ops,\t\t\t\t  /* Types */\n      OP_TYPE_v,\t\t\t\t  /* Suffix */\n      rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n-     scalar_const_ptr_uint64_index_args /* Args */};\n+     scalar_const_ptr_eew64_index_args /* Args */};\n \n /* A static operand information for void func (scalar_type *, ptrdiff_t,\n  * vector_type) function registration. */\n@@ -651,37 +945,37 @@ static CONSTEXPR const rvv_op_info all_v_scalar_ptr_ptrdiff_ops\n      rvv_arg_type_info (RVV_BASE_void), /* Return type */\n      scalar_ptr_ptrdiff_args /* Args */};\n \n-/* A static operand information for void func (scalar_type *, uint8_index_type,\n+/* A static operand information for void func (scalar_type *, eew8_index_type,\n  * vector_type) function registration. */\n-static CONSTEXPR const rvv_op_info all_v_scalar_ptr_uint8_index_ops\n+static CONSTEXPR const rvv_op_info all_v_scalar_ptr_eew8_index_ops\n   = {all_ops,\t\t\t\t/* Types */\n      OP_TYPE_v,\t\t\t\t/* Suffix */\n      rvv_arg_type_info (RVV_BASE_void), /* Return type */\n-     scalar_ptr_uint8_index_args /* Args */};\n+     scalar_ptr_eew8_index_args /* Args */};\n \n-/* A static operand information for void func (scalar_type *, uint16_index_type,\n+/* A static operand information for void func (scalar_type *, eew16_index_type,\n  * vector_type) function registration. */\n-static CONSTEXPR const rvv_op_info all_v_scalar_ptr_uint16_index_ops\n+static CONSTEXPR const rvv_op_info all_v_scalar_ptr_eew16_index_ops\n   = {all_ops,\t\t\t\t/* Types */\n      OP_TYPE_v,\t\t\t\t/* Suffix */\n      rvv_arg_type_info (RVV_BASE_void), /* Return type */\n-     scalar_ptr_uint16_index_args /* Args */};\n+     scalar_ptr_eew16_index_args /* Args */};\n \n-/* A static operand information for void func (scalar_type *, uint32_index_type,\n+/* A static operand information for void func (scalar_type *, eew32_index_type,\n  * vector_type) function registration. */\n-static CONSTEXPR const rvv_op_info all_v_scalar_ptr_uint32_index_ops\n+static CONSTEXPR const rvv_op_info all_v_scalar_ptr_eew32_index_ops\n   = {all_ops,\t\t\t\t/* Types */\n      OP_TYPE_v,\t\t\t\t/* Suffix */\n      rvv_arg_type_info (RVV_BASE_void), /* Return type */\n-     scalar_ptr_uint32_index_args /* Args */};\n+     scalar_ptr_eew32_index_args /* Args */};\n \n-/* A static operand information for void func (scalar_type *, uint64_index_type,\n+/* A static operand information for void func (scalar_type *, eew64_index_type,\n  * vector_type) function registration. */\n-static CONSTEXPR const rvv_op_info all_v_scalar_ptr_uint64_index_ops\n+static CONSTEXPR const rvv_op_info all_v_scalar_ptr_eew64_index_ops\n   = {all_ops,\t\t\t\t/* Types */\n      OP_TYPE_v,\t\t\t\t/* Suffix */\n      rvv_arg_type_info (RVV_BASE_void), /* Return type */\n-     scalar_ptr_uint64_index_args /* Args */};\n+     scalar_ptr_eew64_index_args /* Args */};\n \n /* A static operand information for vector_type func (vector_type, vector_type)\n  * function registration. */\n@@ -707,6 +1001,22 @@ static CONSTEXPR const rvv_op_info iu_vvxv_ops\n      rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n      vxv_args /* Args */};\n \n+/* A static operand information for vector_type func (vector_type, vector_type,\n+ * vector_type) function registration. */\n+static CONSTEXPR const rvv_op_info f_vvvv_ops\n+  = {f_ops,\t\t\t\t  /* Types */\n+     OP_TYPE_vv,\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     vvv_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type, scalar_type,\n+ * vector_type) function registration. */\n+static CONSTEXPR const rvv_op_info f_vvfv_ops\n+  = {f_ops,\t\t\t\t  /* Types */\n+     OP_TYPE_vf,\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     vxv_args /* Args */};\n+\n /* A static operand information for vector_type func (vector_type, vector_type,\n  * mask_type) function registration. */\n static CONSTEXPR const rvv_op_info iu_vvvm_ops\n@@ -723,6 +1033,14 @@ static CONSTEXPR const rvv_op_info all_vvvm_ops\n      rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n      vvm_args /* Args */};\n \n+/* A static operand information for vector_type func (vector_type, vector_type,\n+ * mask_type) function registration. */\n+static CONSTEXPR const rvv_op_info all_vvm_ops\n+  = {all_ops,\t\t\t\t  /* Types */\n+     OP_TYPE_vm,\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     vm_args /* Args */};\n+\n /* A static operand information for vector_type func (vector_type, scalar_type,\n  * mask_type) function registration. */\n static CONSTEXPR const rvv_op_info iu_vvxm_ops\n@@ -731,6 +1049,14 @@ static CONSTEXPR const rvv_op_info iu_vvxm_ops\n      rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n      vxm_args /* Args */};\n \n+/* A static operand information for vector_type func (vector_type, scalar_type,\n+ * mask_type) function registration. */\n+static CONSTEXPR const rvv_op_info f_vvfm_ops\n+  = {f_ops,\t\t\t\t  /* Types */\n+     OP_TYPE_vfm,\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     vxm_args /* Args */};\n+\n /* A static operand information for mask_type func (vector_type, vector_type,\n  * mask_type) function registration. */\n static CONSTEXPR const rvv_op_info iu_mvvm_ops\n@@ -771,6 +1097,14 @@ static CONSTEXPR const rvv_op_info u_mvv_ops\n      rvv_arg_type_info (RVV_BASE_mask), /* Return type */\n      vv_args /* Args */};\n \n+/* A static operand information for mask_type func (vector_type, vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info f_mvv_ops\n+  = {f_ops,\t\t\t\t/* Types */\n+     OP_TYPE_vv,\t\t\t/* Suffix */\n+     rvv_arg_type_info (RVV_BASE_mask), /* Return type */\n+     vv_args /* Args */};\n+\n /* A static operand information for mask_type func (vector_type, scalar_type)\n  * function registration. */\n static CONSTEXPR const rvv_op_info iu_mvx_ops\n@@ -795,6 +1129,14 @@ static CONSTEXPR const rvv_op_info u_mvx_ops\n      rvv_arg_type_info (RVV_BASE_mask), /* Return type */\n      vx_args /* Args */};\n \n+/* A static operand information for mask_type func (vector_type, scalar_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info f_mvf_ops\n+  = {f_ops,\t\t\t\t/* Types */\n+     OP_TYPE_vf,\t\t\t/* Suffix */\n+     rvv_arg_type_info (RVV_BASE_mask), /* Return type */\n+     vx_args /* Args */};\n+\n /* A static operand information for vector_type func (vector_type, vector_type)\n  * function registration. */\n static CONSTEXPR const rvv_op_info i_vvv_ops\n@@ -811,6 +1153,22 @@ static CONSTEXPR const rvv_op_info u_vvv_ops\n      rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n      vv_args /* Args */};\n \n+/* A static operand information for vector_type func (vector_type, vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info f_vvv_ops\n+  = {f_ops,\t\t\t\t/* Types */\n+     OP_TYPE_vv,\t\t\t/* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     vv_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type, vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info f_vvf_ops\n+  = {f_ops,\t\t\t\t/* Types */\n+     OP_TYPE_vf,\t\t\t/* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     vx_args /* Args */};\n+\n /* A static operand information for vector_type func (vector_type, vector_type)\n  * function registration. */\n static CONSTEXPR const rvv_op_info full_v_i_vvv_ops\n@@ -843,6 +1201,22 @@ static CONSTEXPR const rvv_op_info iu_vvx_ops\n      rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n      vx_args /* Args */};\n \n+/* A static operand information for vector_type func (vector_type, scalar_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info all_vvx_ops\n+  = {all_ops,\t\t\t\t  /* Types */\n+     OP_TYPE_vx,\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     v_size_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type, vector_type,\n+ * scalar_type) function registration. */\n+static CONSTEXPR const rvv_op_info all_vvvx_ops\n+  = {all_ops,\t\t\t\t  /* Types */\n+     OP_TYPE_vx,\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     vv_size_args /* Args */};\n+\n /* A static operand information for vector_type func (vector_type, scalar_type)\n  * function registration. */\n static CONSTEXPR const rvv_op_info i_vvx_ops\n@@ -898,7 +1272,7 @@ static CONSTEXPR const rvv_op_info iu_shift_vvx_ops\n   = {iu_ops,\t\t\t\t  /* Types */\n      OP_TYPE_vx,\t\t\t  /* Suffix */\n      rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n-     vector_size_args /* Args */};\n+     v_size_args /* Args */};\n \n /* A static operand information for vector_type func (vector_type, shift_type)\n  * function registration. */\n@@ -914,7 +1288,7 @@ static CONSTEXPR const rvv_op_info i_shift_vvx_ops\n   = {i_ops,\t\t\t\t  /* Types */\n      OP_TYPE_vx,\t\t\t  /* Suffix */\n      rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n-     vector_size_args /* Args */};\n+     v_size_args /* Args */};\n \n /* A static operand information for vector_type func (vector_type, shift_type)\n  * function registration. */\n@@ -930,29 +1304,438 @@ static CONSTEXPR const rvv_op_info u_shift_vvx_ops\n   = {u_ops,\t\t\t\t  /* Types */\n      OP_TYPE_vx,\t\t\t  /* Suffix */\n      rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n-     vector_size_args /* Args */};\n+     v_size_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type, index_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info all_gather_vvv_ops\n+  = {all_ops,\t\t\t\t  /* Types */\n+     OP_TYPE_vv,\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     gather_vv_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type, size_t)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info all_gather_vvx_ops\n+  = {all_ops,\t\t\t\t  /* Types */\n+     OP_TYPE_vx,\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     v_size_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type, index_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info all_gatherei16_vvv_ops\n+  = {ei16_ops,\t\t\t\t  /* Types */\n+     OP_TYPE_vv,\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     gatherei16_vv_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info iu_v_ops\n+  = {iu_ops,\t\t\t/* Types */\n+     OP_TYPE_v,\t\t\t/* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     v_args /* Args */};\n+\n+/* A static operand information for scalar_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info iu_x_s_ops\n+  = {iu_ops,\t\t\t\t  /* Types */\n+     OP_TYPE_s,\t\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_scalar), /* Return type */\n+     v_args /* Args */};\n+\n+/* A static operand information for scalar_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info f_f_s_ops\n+  = {f_ops,\t\t\t\t  /* Types */\n+     OP_TYPE_s,\t\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_scalar), /* Return type */\n+     v_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info iu_vs_ops\n+  = {iu_ops,\t\t\t\t\t/* Types */\n+     OP_TYPE_vs,\t\t\t\t/* Suffix */\n+     rvv_arg_type_info (RVV_BASE_lmul1_vector), /* Return type */\n+     vs_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info f_vs_ops\n+  = {f_ops,\t\t\t\t\t/* Types */\n+     OP_TYPE_vs,\t\t\t\t/* Suffix */\n+     rvv_arg_type_info (RVV_BASE_lmul1_vector), /* Return type */\n+     vs_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info wi_vs_ops\n+  = {wi_ops,\t\t\t\t\t      /* Types */\n+     OP_TYPE_vs,\t\t\t\t      /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_widen_lmul1_vector), /* Return type */\n+     wvs_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info wu_vs_ops\n+  = {wu_ops,\t\t\t\t\t      /* Types */\n+     OP_TYPE_vs,\t\t\t\t      /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_widen_lmul1_vector), /* Return type */\n+     wvs_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info wf_vs_ops\n+  = {wf_ops,\t\t\t\t\t      /* Types */\n+     OP_TYPE_vs,\t\t\t\t      /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_widen_lmul1_vector), /* Return type */\n+     wvs_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info f_v_ops\n+  = {f_ops,\t\t\t\t  /* Types */\n+     OP_TYPE_v,\t\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     v_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info f_to_u_v_ops\n+  = {convert_u_ops,\t\t\t  /* Types */\n+     OP_TYPE_v,\t\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     f_v_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info f_to_i_f_v_ops\n+  = {convert_i_ops,\t\t\t  /* Types */\n+     OP_TYPE_f_v,\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     f_v_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info f_to_wi_f_v_ops\n+  = {wconvert_i_ops,\t\t\t  /* Types */\n+     OP_TYPE_f_v,\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     trunc_f_v_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info f_to_ni_f_w_ops\n+  = {f_ops,\t\t\t\t\t\t      /* Types */\n+     OP_TYPE_f_w,\t\t\t\t\t      /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_double_trunc_signed_vector), /* Return type */\n+     v_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info f_to_nu_f_w_ops\n+  = {f_ops,\t  /* Types */\n+     OP_TYPE_f_w, /* Suffix */\n+     rvv_arg_type_info (\n+       RVV_BASE_double_trunc_unsigned_vector), /* Return type */\n+     v_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info i_to_f_x_v_ops\n+  = {f_ops,\t\t\t\t  /* Types */\n+     OP_TYPE_x_v,\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     x_v_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info u_to_f_xu_v_ops\n+  = {f_ops,\t\t\t\t  /* Types */\n+     OP_TYPE_xu_v,\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     xu_v_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info i_to_wf_x_v_ops\n+  = {f_ops,\t\t\t\t  /* Types */\n+     OP_TYPE_x_v,\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     w_x_v_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info u_to_wf_xu_v_ops\n+  = {f_ops,\t\t\t\t  /* Types */\n+     OP_TYPE_xu_v,\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     w_xu_v_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info i_to_nf_x_w_ops\n+  = {wconvert_i_ops,\t\t\t\t\t     /* Types */\n+     OP_TYPE_x_w,\t\t\t\t\t     /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_double_trunc_float_vector), /* Return type */\n+     v_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info u_to_nf_xu_w_ops\n+  = {wconvert_u_ops,\t\t\t\t\t     /* Types */\n+     OP_TYPE_xu_w,\t\t\t\t\t     /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_double_trunc_float_vector), /* Return type */\n+     v_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info f_to_u_f_v_ops\n+  = {convert_u_ops,\t\t\t  /* Types */\n+     OP_TYPE_f_v,\t\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     f_v_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info f_to_wu_f_v_ops\n+  = {wconvert_u_ops,\t\t\t  /* Types */\n+     OP_TYPE_f_v,\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     trunc_f_v_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info f_to_wf_f_v_ops\n+  = {f_ops,\t\t\t\t  /* Types */\n+     OP_TYPE_f_v,\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     w_v_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info f_to_nf_f_w_ops\n+  = {wconvert_f_ops,\t\t\t\t\t     /* Types */\n+     OP_TYPE_f_w,\t\t\t\t\t     /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_double_trunc_float_vector), /* Return type */\n+     v_args /* Args */};\n \n /* A static operand information for vector_type func (vector_type)\n  * function registration. */\n-static CONSTEXPR const rvv_op_info iu_v_ops\n-  = {iu_ops,\t\t\t/* Types */\n-     OP_TYPE_v,\t\t\t/* Suffix */\n+static CONSTEXPR const rvv_op_info all_v_ops\n+  = {all_ops,\t\t\t/* Types */\n+     OP_TYPE_v,\t\t\t/* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     v_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info i_v_u_ops\n+  = {i_ops,\t\t\t\t\t/* Types */\n+     OP_TYPE_v,\t\t\t\t\t/* Suffix */\n+     rvv_arg_type_info (RVV_BASE_unsigned_vector), /* Return type */\n+     v_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info u_v_i_ops\n+  = {u_ops,\t\t\t\t\t/* Types */\n+     OP_TYPE_v,\t\t\t\t\t/* Suffix */\n+     rvv_arg_type_info (RVV_BASE_signed_vector), /* Return type */\n+     v_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info iu_v_eew8_interpret_ops\n+  = {eew8_interpret_ops,\t\t\t  /* Types */\n+     OP_TYPE_v,\t\t\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_eew8_interpret), /* Return type */\n+     v_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info iu_v_eew16_interpret_ops\n+  = {eew16_interpret_ops,\t\t\t   /* Types */\n+     OP_TYPE_v,\t\t\t\t\t   /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_eew16_interpret), /* Return type */\n+     v_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info iu_v_eew32_interpret_ops\n+  = {eew32_interpret_ops,\t\t\t   /* Types */\n+     OP_TYPE_v,\t\t\t\t\t   /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_eew32_interpret), /* Return type */\n+     v_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info iu_v_eew64_interpret_ops\n+  = {eew64_interpret_ops,\t\t\t   /* Types */\n+     OP_TYPE_v,\t\t\t\t\t   /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_eew64_interpret), /* Return type */\n+     v_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info all_v_vlmul_ext_x2_ops\n+  = {vlmul_ext_x2_ops,\t\t\t\t/* Types */\n+     OP_TYPE_v,\t\t\t\t\t/* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vlmul_ext_x2), /* Return type */\n+     v_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info all_v_vlmul_ext_x4_ops\n+  = {vlmul_ext_x4_ops,\t\t\t\t/* Types */\n+     OP_TYPE_v,\t\t\t\t\t/* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vlmul_ext_x4), /* Return type */\n+     v_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info all_v_vlmul_ext_x8_ops\n+  = {vlmul_ext_x8_ops,\t\t\t\t/* Types */\n+     OP_TYPE_v,\t\t\t\t\t/* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vlmul_ext_x8), /* Return type */\n+     v_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info all_v_vlmul_ext_x16_ops\n+  = {vlmul_ext_x16_ops,\t\t\t\t /* Types */\n+     OP_TYPE_v,\t\t\t\t\t /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vlmul_ext_x16), /* Return type */\n+     v_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info all_v_vlmul_ext_x32_ops\n+  = {vlmul_ext_x32_ops,\t\t\t\t /* Types */\n+     OP_TYPE_v,\t\t\t\t\t /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vlmul_ext_x32), /* Return type */\n+     v_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info all_v_vlmul_ext_x64_ops\n+  = {vlmul_ext_x64_ops,\t\t\t\t /* Types */\n+     OP_TYPE_v,\t\t\t\t\t /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vlmul_ext_x64), /* Return type */\n+     v_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info all_v_vlmul_trunc_x2_ops\n+  = {vlmul_ext_x2_ops,\t\t\t  /* Types */\n+     OP_TYPE_v,\t\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     v_x2_trunc_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info all_v_vlmul_trunc_x4_ops\n+  = {vlmul_ext_x4_ops,\t\t\t  /* Types */\n+     OP_TYPE_v,\t\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     v_x4_trunc_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info all_v_vlmul_trunc_x8_ops\n+  = {vlmul_ext_x8_ops,\t\t\t  /* Types */\n+     OP_TYPE_v,\t\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     v_x8_trunc_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info all_v_vlmul_trunc_x16_ops\n+  = {vlmul_ext_x16_ops,\t\t\t  /* Types */\n+     OP_TYPE_v,\t\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     v_x16_trunc_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info all_v_vlmul_trunc_x32_ops\n+  = {vlmul_ext_x32_ops,\t\t\t  /* Types */\n+     OP_TYPE_v,\t\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     v_x32_trunc_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info all_v_vlmul_trunc_x64_ops\n+  = {vlmul_ext_x64_ops,\t\t\t  /* Types */\n+     OP_TYPE_v,\t\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     v_x64_trunc_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info f_v_i_ops\n+  = {f_ops,\t\t\t\t\t /* Types */\n+     OP_TYPE_v,\t\t\t\t\t /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_signed_vector), /* Return type */\n+     v_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info f_v_u_ops\n+  = {f_ops,\t\t\t\t\t   /* Types */\n+     OP_TYPE_v,\t\t\t\t\t   /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_unsigned_vector), /* Return type */\n+     v_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info i_v_f_ops\n+  = {f_ops,\t\t\t\t  /* Types */\n+     OP_TYPE_v,\t\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     x_v_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info u_v_f_ops\n+  = {f_ops,\t\t\t\t  /* Types */\n+     OP_TYPE_v,\t\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     xu_v_args /* Args */};\n+\n+/* A static operand information for vector_type func (scalar_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info iu_x_ops\n+  = {iu_ops,\t\t\t/* Types */\n+     OP_TYPE_x,\t\t\t/* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     x_args /* Args */};\n+\n+/* A static operand information for vector_type func (scalar_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info iu_s_x_ops\n+  = {iu_ops,\t\t\t\t  /* Types */\n+     OP_TYPE_x,\t\t\t\t  /* Suffix */\n      rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n-     v_args /* Args */};\n+     x_args /* Args */};\n \n-/* A static operand information for vector_type func (vector_type)\n+/* A static operand information for vector_type func (scalar_type)\n  * function registration. */\n-static CONSTEXPR const rvv_op_info all_v_ops\n-  = {all_ops,\t\t\t/* Types */\n-     OP_TYPE_v,\t\t\t/* Suffix */\n+static CONSTEXPR const rvv_op_info f_f_ops\n+  = {f_ops,\t\t\t/* Types */\n+     OP_TYPE_f,\t\t\t/* Suffix */\n      rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n-     v_args /* Args */};\n+     x_args /* Args */};\n \n /* A static operand information for vector_type func (scalar_type)\n  * function registration. */\n-static CONSTEXPR const rvv_op_info iu_x_ops\n-  = {iu_ops,\t\t\t/* Types */\n-     OP_TYPE_x,\t\t\t/* Suffix */\n+static CONSTEXPR const rvv_op_info f_s_f_ops\n+  = {f_ops,\t\t\t\t  /* Types */\n+     OP_TYPE_f,\t\t\t\t  /* Suffix */\n      rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n      x_args /* Args */};\n \n@@ -1012,6 +1795,14 @@ static CONSTEXPR const rvv_op_info i_wvv_ops\n      rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n      wvv_args /* Args */};\n \n+/* A static operand information for vector_type func (double demote type, double\n+ * demote type) function registration. */\n+static CONSTEXPR const rvv_op_info f_wvv_ops\n+  = {wextf_ops,\t\t\t\t  /* Types */\n+     OP_TYPE_vv,\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     wvv_args /* Args */};\n+\n /* A static operand information for vector_type func (vector_type, double demote\n  * type, double demote type) function registration. */\n static CONSTEXPR const rvv_op_info i_wwvv_ops\n@@ -1028,6 +1819,22 @@ static CONSTEXPR const rvv_op_info i_wwxv_ops\n      rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n      wwxv_args /* Args */};\n \n+/* A static operand information for vector_type func (vector_type, double demote\n+ * type, double demote type) function registration. */\n+static CONSTEXPR const rvv_op_info f_wwvv_ops\n+  = {wextf_ops,\t\t\t\t  /* Types */\n+     OP_TYPE_vv,\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     wwvv_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type, double demote\n+ * scalar_type, double demote type) function registration. */\n+static CONSTEXPR const rvv_op_info f_wwfv_ops\n+  = {wextf_ops,\t\t\t\t  /* Types */\n+     OP_TYPE_vf,\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     wwxv_args /* Args */};\n+\n /* A static operand information for vector_type func (vector_type, double demote\n  * type, double demote type) function registration. */\n static CONSTEXPR const rvv_op_info u_wwvv_ops\n@@ -1092,6 +1899,14 @@ static CONSTEXPR const rvv_op_info i_wvx_ops\n      rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n      wvx_args /* Args */};\n \n+/* A static operand information for vector_type func (double demote type, double\n+ * demote scalar_type) function registration. */\n+static CONSTEXPR const rvv_op_info f_wvf_ops\n+  = {wextf_ops,\t\t\t\t  /* Types */\n+     OP_TYPE_vf,\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     wvx_args /* Args */};\n+\n /* A static operand information for vector_type func (signed double demote type,\n  * unsigned double demote scalar_type) function registration. */\n static CONSTEXPR const rvv_op_info i_su_wvx_ops\n@@ -1108,6 +1923,14 @@ static CONSTEXPR const rvv_op_info i_wwv_ops\n      rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n      wwv_args /* Args */};\n \n+/* A static operand information for vector_type func (vector_type, double\n+ * demote type) function registration. */\n+static CONSTEXPR const rvv_op_info f_wwv_ops\n+  = {wextf_ops,\t\t\t\t  /* Types */\n+     OP_TYPE_wv,\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     wwv_args /* Args */};\n+\n /* A static operand information for vector_type func (vector_type, double\n  * demote scalar_type) function registration. */\n static CONSTEXPR const rvv_op_info i_wwx_ops\n@@ -1116,6 +1939,14 @@ static CONSTEXPR const rvv_op_info i_wwx_ops\n      rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n      wwx_args /* Args */};\n \n+/* A static operand information for vector_type func (vector_type, double\n+ * demote scalar_type) function registration. */\n+static CONSTEXPR const rvv_op_info f_wwf_ops\n+  = {wextf_ops,\t\t\t\t  /* Types */\n+     OP_TYPE_wf,\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     wwx_args /* Args */};\n+\n /* A static operand information for vector_type func (vector_type, double\n  * demote type) function registration. */\n static CONSTEXPR const rvv_op_info u_wwv_ops\n@@ -1178,15 +2009,15 @@ static CONSTEXPR const rvv_op_info i_narrow_shift_vwx_ops\n   = {wexti_ops,\t\t\t\t\t       /* Types */\n      OP_TYPE_wx,\t\t\t\t       /* Suffix */\n      rvv_arg_type_info (RVV_BASE_double_trunc_vector), /* Return type */\n-     vector_size_args /* Args */};\n+     v_size_args /* Args */};\n \n /* A static operand information for double demote type func (vector_type,\n  * size_t) function registration. */\n static CONSTEXPR const rvv_op_info u_narrow_shift_vwx_ops\n   = {wextu_ops,\t\t\t\t\t       /* Types */\n      OP_TYPE_wx,\t\t\t\t       /* Suffix */\n      rvv_arg_type_info (RVV_BASE_double_trunc_vector), /* Return type */\n-     vector_size_args /* Args */};\n+     v_size_args /* Args */};\n \n /* A static operand information for double demote type func (vector_type)\n  * function registration. */\n@@ -1196,6 +2027,173 @@ static CONSTEXPR const rvv_op_info iu_trunc_ops\n      rvv_arg_type_info (RVV_BASE_double_trunc_vector), /* Return type */\n      v_args /* Args */};\n \n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info all_v_vset_lmul1_x2_ops\n+  = {lmul1_ops,\t\t\t\t\t/* Types */\n+     OP_TYPE_v,\t\t\t\t\t/* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vlmul_ext_x2), /* Return type */\n+     ext_x2_vset_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info all_v_vset_lmul1_x4_ops\n+  = {lmul1_ops,\t\t\t\t\t/* Types */\n+     OP_TYPE_v,\t\t\t\t\t/* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vlmul_ext_x4), /* Return type */\n+     ext_x4_vset_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info all_v_vset_lmul1_x8_ops\n+  = {lmul1_ops,\t\t\t\t\t/* Types */\n+     OP_TYPE_v,\t\t\t\t\t/* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vlmul_ext_x8), /* Return type */\n+     ext_x8_vset_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info all_v_vset_lmul2_x2_ops\n+  = {lmul2_ops,\t\t\t\t\t/* Types */\n+     OP_TYPE_v,\t\t\t\t\t/* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vlmul_ext_x2), /* Return type */\n+     ext_x2_vset_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info all_v_vset_lmul2_x4_ops\n+  = {lmul2_ops,\t\t\t\t\t/* Types */\n+     OP_TYPE_v,\t\t\t\t\t/* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vlmul_ext_x4), /* Return type */\n+     ext_x4_vset_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info all_v_vset_lmul4_x2_ops\n+  = {lmul4_ops,\t\t\t\t\t/* Types */\n+     OP_TYPE_v,\t\t\t\t\t/* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vlmul_ext_x2), /* Return type */\n+     ext_x2_vset_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info all_v_vget_lmul1_x2_ops\n+  = {lmul1_ops,\t\t\t\t  /* Types */\n+     OP_TYPE_v,\t\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     ext_x2_vget_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info all_v_vget_lmul1_x4_ops\n+  = {lmul1_ops,\t\t\t\t  /* Types */\n+     OP_TYPE_v,\t\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     ext_x4_vget_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info all_v_vget_lmul1_x8_ops\n+  = {lmul1_ops,\t\t\t\t  /* Types */\n+     OP_TYPE_v,\t\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     ext_x8_vget_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info all_v_vget_lmul2_x2_ops\n+  = {lmul2_ops,\t\t\t\t  /* Types */\n+     OP_TYPE_v,\t\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     ext_x2_vget_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info all_v_vget_lmul2_x4_ops\n+  = {lmul2_ops,\t\t\t\t  /* Types */\n+     OP_TYPE_v,\t\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     ext_x4_vget_args /* Args */};\n+\n+/* A static operand information for vector_type func (vector_type)\n+ * function registration. */\n+static CONSTEXPR const rvv_op_info all_v_vget_lmul4_x2_ops\n+  = {lmul4_ops,\t\t\t\t  /* Types */\n+     OP_TYPE_v,\t\t\t\t  /* Suffix */\n+     rvv_arg_type_info (RVV_BASE_vector), /* Return type */\n+     ext_x2_vget_args /* Args */};\n+\n+/* A static operand information for size_t func () function registration. */\n+static CONSTEXPR const rvv_op_info p_none_void_ops\n+  = {none_ops,\t\t\t\t/* Types */\n+     OP_TYPE_none,\t\t\t/* Suffix */\n+     rvv_arg_type_info (RVV_BASE_size), /* Return type */\n+     void_args /* Args */};\n+\n+/* A static operand information for unsigned long func () function registration. */\n+static CONSTEXPR const rvv_op_info ul_none_void_ops\n+  = {none_ops,\t\t\t\t/* Types */\n+     OP_TYPE_none,\t\t\t/* Suffix */\n+     rvv_arg_type_info (RVV_BASE_unsigned_long), /* Return type */\n+     void_args /* Args */};\n+\n+/* A list of all RVV base function types.  */\n+static CONSTEXPR const function_type_info function_types[] = {\n+#define DEF_RVV_TYPE_INDEX(VECTOR, MASK, SIGNED, UNSIGNED, EEW8_INDEX, EEW16_INDEX, \\\n+\t\t      EEW32_INDEX, EEW64_INDEX, SHIFT, DOUBLE_TRUNC,           \\\n+\t\t      QUAD_TRUNC, OCT_TRUNC, DOUBLE_TRUNC_SCALAR,              \\\n+\t\t      DOUBLE_TRUNC_SIGNED, DOUBLE_TRUNC_UNSIGNED,              \\\n+\t\t      DOUBLE_TRUNC_UNSIGNED_SCALAR, DOUBLE_TRUNC_FLOAT, FLOAT, \\\n+\t\t      LMUL1, WLMUL1, EEW8_INTERPRET, EEW16_INTERPRET,          \\\n+\t\t      EEW32_INTERPRET, EEW64_INTERPRET, X2_VLMUL_EXT,          \\\n+\t\t      X4_VLMUL_EXT, X8_VLMUL_EXT, X16_VLMUL_EXT,               \\\n+\t\t      X32_VLMUL_EXT, X64_VLMUL_EXT)                            \\\n+  {                                                                            \\\n+    VECTOR_TYPE_##VECTOR,                                                      \\\n+    VECTOR_TYPE_INVALID,                                                       \\\n+    VECTOR_TYPE_##MASK,                                                        \\\n+    VECTOR_TYPE_##SIGNED,                                                      \\\n+    VECTOR_TYPE_##UNSIGNED,                                                    \\\n+    VECTOR_TYPE_INVALID,                                                       \\\n+    VECTOR_TYPE_INVALID,                                                       \\\n+    VECTOR_TYPE_INVALID,                                                       \\\n+    VECTOR_TYPE_INVALID,                                                       \\\n+    VECTOR_TYPE_INVALID,                                                       \\\n+    VECTOR_TYPE_INVALID,                                                       \\\n+    VECTOR_TYPE_INVALID,                                                       \\\n+    VECTOR_TYPE_INVALID,                                                       \\\n+    VECTOR_TYPE_INVALID,                                                       \\\n+    VECTOR_TYPE_##EEW8_INDEX,                                                  \\\n+    VECTOR_TYPE_##EEW16_INDEX,                                                 \\\n+    VECTOR_TYPE_##EEW32_INDEX,                                                 \\\n+    VECTOR_TYPE_##EEW64_INDEX,                                                 \\\n+    VECTOR_TYPE_##SHIFT,                                                       \\\n+    VECTOR_TYPE_##DOUBLE_TRUNC,                                                \\\n+    VECTOR_TYPE_##QUAD_TRUNC,                                                  \\\n+    VECTOR_TYPE_##OCT_TRUNC,                                                   \\\n+    VECTOR_TYPE_##DOUBLE_TRUNC_SCALAR,                                         \\\n+    VECTOR_TYPE_##DOUBLE_TRUNC_SIGNED,                                         \\\n+    VECTOR_TYPE_##DOUBLE_TRUNC_UNSIGNED,                                       \\\n+    VECTOR_TYPE_##DOUBLE_TRUNC_UNSIGNED_SCALAR,                                \\\n+    VECTOR_TYPE_##DOUBLE_TRUNC_FLOAT,                                          \\\n+    VECTOR_TYPE_##FLOAT,                                                       \\\n+    VECTOR_TYPE_##LMUL1,                                                       \\\n+    VECTOR_TYPE_##WLMUL1,                                                      \\\n+    VECTOR_TYPE_##EEW8_INTERPRET,                                              \\\n+    VECTOR_TYPE_##EEW16_INTERPRET,                                             \\\n+    VECTOR_TYPE_##EEW32_INTERPRET,                                             \\\n+    VECTOR_TYPE_##EEW64_INTERPRET,                                             \\\n+    VECTOR_TYPE_##X2_VLMUL_EXT,                                                \\\n+    VECTOR_TYPE_##X4_VLMUL_EXT,                                                \\\n+    VECTOR_TYPE_##X8_VLMUL_EXT,                                                \\\n+    VECTOR_TYPE_##X16_VLMUL_EXT,                                               \\\n+    VECTOR_TYPE_##X32_VLMUL_EXT,                                               \\\n+    VECTOR_TYPE_##X64_VLMUL_EXT,                                               \\\n+    VECTOR_TYPE_INVALID,                                                       \\\n+  },\n+#include \"riscv-vector-builtins.def\"\n+}; // namespace riscv_vector\n+\n /* A list of all RVV intrinsic functions.  */\n static function_group_info function_groups[] = {\n #define DEF_RVV_FUNCTION(NAME, SHAPE, PREDS, OPS_INFO)                         \\\n@@ -1388,9 +2386,29 @@ register_vector_type (vector_type_index type)\n static bool\n required_extensions_p (enum rvv_base_type type)\n {\n-  return type == RVV_BASE_vector || type == RVV_BASE_uint8_index\n-\t || type == RVV_BASE_uint16_index || type == RVV_BASE_uint32_index\n-\t || type == RVV_BASE_uint64_index;\n+  return type == RVV_BASE_eew8_index || type == RVV_BASE_eew16_index\n+\t || type == RVV_BASE_eew32_index || type == RVV_BASE_eew64_index\n+\t || type == RVV_BASE_float_vector\n+\t || type == RVV_BASE_double_trunc_float_vector\n+\t || type == RVV_BASE_double_trunc_vector\n+\t || type == RVV_BASE_widen_lmul1_vector\n+\t || type == RVV_BASE_eew8_interpret || type == RVV_BASE_eew16_interpret\n+\t || type == RVV_BASE_eew32_interpret || type == RVV_BASE_eew64_interpret\n+\t || type == RVV_BASE_vlmul_ext_x2 || type == RVV_BASE_vlmul_ext_x4\n+\t || type == RVV_BASE_vlmul_ext_x8 || type == RVV_BASE_vlmul_ext_x16\n+\t || type == RVV_BASE_vlmul_ext_x32 || type == RVV_BASE_vlmul_ext_x64;\n+}\n+\n+static uint64_t\n+get_required_extensions (vector_type_index type_idx)\n+{\n+  for (unsigned int i = 0; all_ops[i].index != NUM_VECTOR_TYPES; i++)\n+    if (type_idx == all_ops[i].index)\n+      return all_ops[i].required_extensions;\n+  for (unsigned int i = 0; b_ops[i].index != NUM_VECTOR_TYPES; i++)\n+    if (type_idx == b_ops[i].index)\n+      return b_ops[i].required_extensions;\n+  gcc_unreachable ();\n }\n \n /* Check whether all the RVV_REQUIRE_* values in REQUIRED_EXTENSIONS are\n@@ -1401,21 +2419,30 @@ check_required_extensions (const function_instance &instance)\n   rvv_type_info type_info = instance.type;\n   uint64_t required_extensions = type_info.required_extensions;\n   const rvv_op_info *op_info = instance.op_info;\n-  tree type = builtin_types[type_info.index].vector;\n+\n+  if (required_extensions_p (op_info->ret.base_type))\n+    {\n+      enum vector_type_index ret_type_idx\n+\t= op_info->ret.get_function_type_index (type_info.index);\n+      if (ret_type_idx == NUM_VECTOR_TYPES)\n+\treturn false;\n+      required_extensions |= get_required_extensions (ret_type_idx);\n+    }\n+\n   for (unsigned i = 0; op_info->args[i].base_type != NUM_BASE_TYPES; ++i)\n     {\n       if (!required_extensions_p (op_info->args[i].base_type))\n \tcontinue;\n \n       enum vector_type_index vector_type\n-\t= op_info->args[i].get_base_vector_type (type);\n+\t= op_info->args[i].get_function_type_index (type_info.index);\n       if (vector_type == NUM_VECTOR_TYPES)\n-\tcontinue;\n-      required_extensions |= op_info->types[vector_type].required_extensions;\n+\treturn false;\n+      required_extensions |= get_required_extensions (vector_type);\n \n       /* According to RVV ISA, EEW=64 index of indexed loads/stores require\n \t XLEN = 64.  */\n-      if (op_info->args[i].base_type == RVV_BASE_uint64_index)\n+      if (op_info->args[i].base_type == RVV_BASE_eew64_index)\n \trequired_extensions |= RVV_REQUIRE_RV64BIT;\n     }\n \n@@ -1474,92 +2501,35 @@ get_mask_policy_for_pred (enum predication_type_index pred)\n   return gen_int_mode (get_prefer_mask_policy (), Pmode);\n }\n \n-vector_type_index\n-rvv_arg_type_info::get_base_vector_type (tree type) const\n-{\n-  if (!type)\n-    return NUM_VECTOR_TYPES;\n-  poly_int64 nunits = GET_MODE_NUNITS (TYPE_MODE (type));\n-  machine_mode inner_mode = GET_MODE_INNER (TYPE_MODE (type));\n-  bool unsigned_p = TYPE_UNSIGNED (type);\n-  if (base_type == RVV_BASE_double_trunc_unsigned_vector\n-      || base_type == RVV_BASE_double_trunc_unsigned_scalar)\n-    unsigned_p = true;\n-  switch (base_type)\n-    {\n-    case RVV_BASE_mask:\n-      inner_mode = E_BImode;\n-      break;\n-    case RVV_BASE_uint8_index:\n-      inner_mode = E_QImode;\n-      unsigned_p = true;\n-      break;\n-    case RVV_BASE_uint16_index:\n-      inner_mode = E_HImode;\n-      unsigned_p = true;\n-      break;\n-    case RVV_BASE_uint32_index:\n-      inner_mode = E_SImode;\n-      unsigned_p = true;\n-      break;\n-    case RVV_BASE_uint64_index:\n-      inner_mode = E_DImode;\n-      unsigned_p = true;\n-      break;\n-    case RVV_BASE_shift_vector:\n-      inner_mode = GET_MODE_INNER (TYPE_MODE (type));\n-      unsigned_p = true;\n-      break;\n-    case RVV_BASE_double_trunc_vector:\n-    case RVV_BASE_double_trunc_scalar:\n-    case RVV_BASE_double_trunc_unsigned_vector:\n-    case RVV_BASE_double_trunc_unsigned_scalar:\n-      if (inner_mode == DImode)\n-\tinner_mode = SImode;\n-      else if (inner_mode == SImode)\n-\tinner_mode = HImode;\n-      else if (inner_mode == HImode)\n-\tinner_mode = QImode;\n-      else\n-\tgcc_unreachable ();\n-      break;\n-    case RVV_BASE_quad_trunc_vector:\n-      if (inner_mode == DImode)\n-\tinner_mode = HImode;\n-      else if (inner_mode == SImode)\n-\tinner_mode = QImode;\n-      else\n-\tgcc_unreachable ();\n-      break;\n-    case RVV_BASE_oct_trunc_vector:\n-      if (inner_mode == DImode)\n-\tinner_mode = QImode;\n-      else\n-\tgcc_unreachable ();\n-      break;\n-    default:\n-      return NUM_VECTOR_TYPES;\n-    }\n-\n-  opt_machine_mode mode\n-    = get_vector_mode (as_a<scalar_mode> (inner_mode), nunits);\n-\n-  if (!mode.exists ())\n-    return NUM_VECTOR_TYPES;\n-  for (unsigned int i = 0; i < NUM_VECTOR_TYPES + 1; i++)\n-    {\n-      tree vector_type = builtin_types[i].vector;\n-      if (!vector_type)\n-\tcontinue;\n+tree\n+rvv_arg_type_info::get_scalar_ptr_type (vector_type_index type_idx) const\n+{\n+  /* According to the latest rvv-intrinsic-doc, it defines vsm.v intrinsic:\n+   __riscv_vsm (uint8_t *base, vbool1_t value, size_t vl).  */\n+  if (type_idx >= VECTOR_TYPE_vbool64_t && type_idx <= VECTOR_TYPE_vbool1_t)\n+    return builtin_types[VECTOR_TYPE_vuint8mf8_t].scalar_ptr;\n+  else\n+    return builtin_types[type_idx].scalar_ptr;\n+}\n \n-      if (GET_MODE_CLASS (TYPE_MODE (vector_type)) != MODE_VECTOR_BOOL\n-\t  && TYPE_UNSIGNED (vector_type) != unsigned_p)\n-\tcontinue;\n+tree\n+rvv_arg_type_info::get_scalar_const_ptr_type (vector_type_index type_idx) const\n+{\n+  /* According to the latest rvv-intrinsic-doc, it defines vlm.v intrinsic:\n+   __riscv_vlm_v_b1 (const uint8_t *base, size_t vl).  */\n+  if (type_idx >= VECTOR_TYPE_vbool64_t && type_idx <= VECTOR_TYPE_vbool1_t)\n+    return builtin_types[VECTOR_TYPE_vuint8mf8_t].scalar_const_ptr;\n+  else\n+    return builtin_types[type_idx].scalar_const_ptr;\n+}\n \n-      if (TYPE_MODE (vector_type) == mode.require ())\n-\treturn (enum vector_type_index) i;\n-    }\n-  return NUM_VECTOR_TYPES;\n+vector_type_index\n+rvv_arg_type_info::get_function_type_index (vector_type_index type_idx) const\n+{\n+  tree type\n+    = builtin_types[function_types[type_idx].type_indexes[base_type]].vector;\n+  return type ? function_types[type_idx].type_indexes[base_type]\n+\t      : NUM_VECTOR_TYPES;\n }\n \n tree\n@@ -1569,77 +2539,19 @@ rvv_arg_type_info::get_tree_type (vector_type_index type_idx) const\n      satisfy the require extension of the type. For example,\n      vfloat32m1_t require floating-point extension. In this case,\n      just return NULL_TREE.  */\n-  if (!builtin_types[type_idx].vector)\n+  if (type_idx != VECTOR_TYPE_INVALID && !builtin_types[type_idx].vector)\n     return NULL_TREE;\n+\n   switch (base_type)\n     {\n-    case RVV_BASE_vector:\n-      return builtin_types[type_idx].vector;\n-    case RVV_BASE_scalar:\n-      return builtin_types[type_idx].scalar;\n-    /* According to riscv-vector-builtins-types.def, the unsigned\n-       type is always the signed type + 1 (They have same SEW and LMUL).\n-       For example 'vuint8mf8_t' enum = 'vint8mf8_t' enum + 1.\n-       Note: We dont't allow type_idx to be unsigned type.  */\n-    case RVV_BASE_unsigned_vector:\n-      gcc_assert (!TYPE_UNSIGNED (builtin_types[type_idx].vector));\n-      return builtin_types[type_idx + 1].vector;\n-    case RVV_BASE_unsigned_scalar:\n-      gcc_assert (!TYPE_UNSIGNED (builtin_types[type_idx].scalar));\n-      return builtin_types[type_idx + 1].scalar;\n-    case RVV_BASE_vector_ptr:\n-      return builtin_types[type_idx].vector_ptr;\n-    case RVV_BASE_scalar_ptr:\n-      /* According to the latest rvv-intrinsic-doc, it defines vsm.v intrinsic:\n-\t __riscv_vsm (uint8_t *base, vbool1_t value, size_t vl).  */\n-      if (type_idx >= VECTOR_TYPE_vbool64_t && type_idx <= VECTOR_TYPE_vbool1_t)\n-\treturn builtin_types[VECTOR_TYPE_vuint8mf8_t].scalar_ptr;\n-      else\n-\treturn builtin_types[type_idx].scalar_ptr;\n-    case RVV_BASE_scalar_const_ptr:\n-      /* According to the latest rvv-intrinsic-doc, it defines vlm.v intrinsic:\n-\t __riscv_vlm_v_b1 (const uint8_t *base, size_t vl).  */\n-      if (type_idx >= VECTOR_TYPE_vbool64_t && type_idx <= VECTOR_TYPE_vbool1_t)\n-\treturn builtin_types[VECTOR_TYPE_vuint8mf8_t].scalar_const_ptr;\n-      else\n-\treturn builtin_types[type_idx].scalar_const_ptr;\n-    case RVV_BASE_void:\n-      return void_type_node;\n-    case RVV_BASE_size:\n-      return size_type_node;\n-    case RVV_BASE_ptrdiff:\n-      return ptrdiff_type_node;\n-    case RVV_BASE_unsigned_long:\n-      return long_unsigned_type_node;\n-    case RVV_BASE_long:\n-      return long_integer_type_node;\n-    case RVV_BASE_uint8_index:\n-    case RVV_BASE_uint16_index:\n-    case RVV_BASE_uint32_index:\n-    case RVV_BASE_uint64_index:\n-    case RVV_BASE_shift_vector:\n-    case RVV_BASE_double_trunc_vector:\n-    case RVV_BASE_quad_trunc_vector:\n-    case RVV_BASE_oct_trunc_vector:\n-    case RVV_BASE_double_trunc_unsigned_vector:\n-    case RVV_BASE_mask:\n-      if (get_base_vector_type (builtin_types[type_idx].vector)\n-\t  != NUM_VECTOR_TYPES)\n-\treturn builtin_types[get_base_vector_type (\n-\t\t\t       builtin_types[type_idx].vector)].vector;\n-      break;\n-    case RVV_BASE_double_trunc_scalar:\n-    case RVV_BASE_double_trunc_unsigned_scalar:\n-      if (get_base_vector_type (builtin_types[type_idx].vector)\n-\t  != NUM_VECTOR_TYPES)\n-\treturn builtin_types[get_base_vector_type (\n-\t\t\t       builtin_types[type_idx].vector)].scalar;\n-      break;\n+#define DEF_RVV_BASE_TYPE(NAME, TYPE)                                          \\\n+  case RVV_BASE_##NAME:                                                        \\\n+    return TYPE;\n+#include \"riscv-vector-builtins.def\"\n     default:\n       gcc_unreachable ();\n     }\n-  /* Return NULL_TREE if the type we don't want to register.  */\n-  return NULL_TREE;\n+  gcc_unreachable ();\n }\n \n function_instance::function_instance (const char *base_name_in,\n@@ -1809,7 +2721,9 @@ function_builder::apply_predication (const function_instance &instance,\n       argument_types.quick_insert (0, return_type);\n \n   /* These predication types need to apply mask type.  */\n-  tree mask_type = builtin_types[mask_types[instance.type.index]].vector;\n+  vector_type_index mask_type_index\n+    = function_types[instance.type.index].type_indexes[RVV_BASE_mask];\n+  tree mask_type = builtin_types[mask_type_index].vector;\n   if (instance.pred == PRED_TYPE_m || instance.pred == PRED_TYPE_tum\n       || instance.pred == PRED_TYPE_tumu || instance.pred == PRED_TYPE_mu)\n     argument_types.quick_insert (0, mask_type);\n@@ -1978,6 +2892,32 @@ function_call_info::function_call_info (location_t location_in,\n   : function_instance (instance_in), location (location_in), fndecl (fndecl_in)\n {}\n \n+gimple_folder::gimple_folder (const function_instance &instance, tree fndecl,\n+\t\t\t      gimple_stmt_iterator *gsi_in, gcall *call_in)\n+  : function_call_info (gimple_location (call_in), instance, fndecl),\n+    gsi (gsi_in), call (call_in), lhs (gimple_call_lhs (call_in))\n+{\n+}\n+\n+/* Try to fold the call.  Return the new statement on success and null\n+   on failure.  */\n+gimple *\n+gimple_folder::fold ()\n+{\n+  /* Don't fold anything when RVV is disabled; emit an error during\n+     expansion instead.  */\n+  if (!TARGET_VECTOR)\n+    return NULL;\n+\n+  /* Punt if the function has a return type and no result location is\n+     provided.  The attributes should allow target-independent code to\n+     remove the calls if appropriate.  */\n+  if (!lhs && TREE_TYPE (gimple_call_fntype (call)) != void_type_node)\n+    return NULL;\n+\n+  return base->fold (*this);\n+}\n+\n function_expander::function_expander (const function_instance &instance,\n \t\t\t\t      tree fndecl_in, tree exp_in,\n \t\t\t\t      rtx target_in)\n@@ -2018,14 +2958,21 @@ function_expander::add_mem_operand (machine_mode mode, unsigned argno)\n   add_fixed_operand (mem);\n }\n \n+/* Return the machine_mode of the corresponding mask type.  */\n+machine_mode\n+function_expander::mask_mode (void) const\n+{\n+  vector_type_index mask_type_index\n+    = function_types[type.index].type_indexes[RVV_BASE_mask];\n+  return TYPE_MODE (builtin_types[mask_type_index].vector);\n+}\n+\n /* Implement the call using instruction ICODE, with a 1:1 mapping between\n    arguments and input operands.  */\n rtx\n function_expander::use_exact_insn (insn_code icode)\n {\n   machine_mode mode = TYPE_MODE (TREE_TYPE (exp));\n-  tree mask_type = builtin_types[mask_types[type.index]].vector;\n-  machine_mode mask_mode = TYPE_MODE (mask_type);\n \n   /* Record the offset to get the argument.  */\n   int arg_offset = 0;\n@@ -2035,7 +2982,7 @@ function_expander::use_exact_insn (insn_code icode)\n       if (use_real_mask_p (pred))\n \tadd_input_operand (arg_offset++);\n       else\n-\tadd_all_one_mask_operand (mask_mode);\n+\tadd_all_one_mask_operand (mask_mode ());\n     }\n \n   /* Store operation doesn't have merge operand.  */\n@@ -2055,7 +3002,8 @@ function_expander::use_exact_insn (insn_code icode)\n   if (base->apply_mask_policy_p ())\n     add_input_operand (Pmode, get_mask_policy_for_pred (pred));\n \n-  add_input_operand (Pmode, get_avl_type_rtx (avl_type::NONVLMAX));\n+  if (base->apply_vl_p ())\n+    add_input_operand (Pmode, get_avl_type_rtx (avl_type::NONVLMAX));\n   return generate_insn (icode);\n }\n \n@@ -2065,16 +3013,14 @@ function_expander::use_contiguous_load_insn (insn_code icode)\n {\n   gcc_assert (call_expr_nargs (exp) > 0);\n   machine_mode mode = TYPE_MODE (TREE_TYPE (exp));\n-  tree mask_type = builtin_types[mask_types[type.index]].vector;\n-  machine_mode mask_mode = TYPE_MODE (mask_type);\n \n   /* Record the offset to get the argument.  */\n   int arg_offset = 0;\n \n   if (use_real_mask_p (pred))\n     add_input_operand (arg_offset++);\n   else\n-    add_all_one_mask_operand (mask_mode);\n+    add_all_one_mask_operand (mask_mode ());\n \n   if (use_real_merge_p (pred))\n     add_input_operand (arg_offset++);\n@@ -2104,8 +3050,6 @@ function_expander::use_contiguous_store_insn (insn_code icode)\n {\n   gcc_assert (call_expr_nargs (exp) > 0);\n   machine_mode mode = TYPE_MODE (builtin_types[type.index].vector);\n-  tree mask_type = builtin_types[mask_types[type.index]].vector;\n-  machine_mode mask_mode = TYPE_MODE (mask_type);\n \n   /* Record the offset to get the argument.  */\n   int arg_offset = 0;\n@@ -2115,7 +3059,7 @@ function_expander::use_contiguous_store_insn (insn_code icode)\n   if (use_real_mask_p (pred))\n     add_input_operand (arg_offset++);\n   else\n-    add_all_one_mask_operand (mask_mode);\n+    add_all_one_mask_operand (mask_mode ());\n \n   arg_offset++;\n   for (int argno = arg_offset; argno < call_expr_nargs (exp); argno++)\n@@ -2147,6 +3091,15 @@ function_expander::use_compare_insn (rtx_code rcode, insn_code icode)\n \n   rtx op1 = expand_normal (CALL_EXPR_ARG (exp, arg_offset++));\n   rtx op2 = expand_normal (CALL_EXPR_ARG (exp, arg_offset++));\n+  if (!insn_operand_matches (icode, opno + 1, op1))\n+    op1 = force_reg (mode, op1);\n+  if (!insn_operand_matches (icode, opno + 2, op2))\n+    {\n+      if (VECTOR_MODE_P (GET_MODE (op2)))\n+\top2 = force_reg (mode, op2);\n+      else\n+\top2 = force_reg (GET_MODE_INNER (mode), op2);\n+    }\n   rtx comparison = gen_rtx_fmt_ee (rcode, mask_mode, op1, op2);\n   if (!VECTOR_MODE_P (GET_MODE (op2)))\n     comparison = gen_rtx_fmt_ee (rcode, mask_mode, op1,\n@@ -2171,21 +3124,18 @@ rtx\n function_expander::use_ternop_insn (bool vd_accum_p, insn_code icode)\n {\n   machine_mode mode = TYPE_MODE (builtin_types[type.index].vector);\n-  tree mask_type = builtin_types[mask_types[type.index]].vector;\n-  machine_mode mask_mode = TYPE_MODE (mask_type);\n \n   /* Record the offset to get the argument.  */\n   int arg_offset = 0;\n \n   if (use_real_mask_p (pred))\n     add_input_operand (arg_offset++);\n   else\n-    add_all_one_mask_operand (mask_mode);\n+    add_all_one_mask_operand (mask_mode ());\n \n   rtx vd = expand_normal (CALL_EXPR_ARG (exp, arg_offset++));\n   rtx vs1 = expand_normal (CALL_EXPR_ARG (exp, arg_offset++));\n   rtx vs2 = expand_normal (CALL_EXPR_ARG (exp, arg_offset++));\n-  rtx merge = use_real_merge_p (pred) ? vd : RVV_VUNDEF (mode);\n \n   if (VECTOR_MODE_P (GET_MODE (vs1)))\n     {\n@@ -2195,7 +3145,7 @@ function_expander::use_ternop_insn (bool vd_accum_p, insn_code icode)\n       add_input_operand (mode, vs2);\n       if (vd_accum_p)\n \tadd_input_operand (mode, vd);\n-      add_input_operand (mode, merge);\n+      add_input_operand (mode, vd);\n     }\n   else\n     {\n@@ -2210,7 +3160,7 @@ function_expander::use_ternop_insn (bool vd_accum_p, insn_code icode)\n \t  add_input_operand (mode, vd);\n \t  add_input_operand (mode, vs2);\n \t}\n-      add_input_operand (mode, merge);\n+      add_input_operand (mode, vd);\n     }\n \n   for (int argno = arg_offset; argno < call_expr_nargs (exp); argno++)\n@@ -2219,61 +3169,54 @@ function_expander::use_ternop_insn (bool vd_accum_p, insn_code icode)\n   add_input_operand (Pmode, get_tail_policy_for_pred (pred));\n   add_input_operand (Pmode, get_mask_policy_for_pred (pred));\n   add_input_operand (Pmode, get_avl_type_rtx (avl_type::NONVLMAX));\n-\n-  /* See optabs.cc, the maximum nops is 9 for using 'maybe_gen_insn'.\n-     We temporarily use GCN directly. We will change it back it we\n-     can support nops >= 10.  */\n-  gcc_assert (maybe_legitimize_operands (icode, 0, opno, m_ops));\n-  rtx_insn *pat = GEN_FCN (\n-    icode) (m_ops[0].value, m_ops[1].value, m_ops[2].value, m_ops[3].value,\n-\t    m_ops[4].value, m_ops[5].value, m_ops[6].value, m_ops[7].value,\n-\t    m_ops[8].value, m_ops[9].value);\n-  emit_insn (pat);\n-  return m_ops[0].value;\n+  return generate_insn (icode);\n }\n \n /* Implement the call using instruction ICODE, with a 1:1 mapping between\n    arguments and input operands.  */\n rtx\n function_expander::use_widen_ternop_insn (insn_code icode)\n {\n-  machine_mode mode = TYPE_MODE (builtin_types[type.index].vector);\n-  tree mask_type = builtin_types[mask_types[type.index]].vector;\n-  machine_mode mask_mode = TYPE_MODE (mask_type);\n-\n   /* Record the offset to get the argument.  */\n   int arg_offset = 0;\n \n   if (use_real_mask_p (pred))\n     add_input_operand (arg_offset++);\n   else\n-    add_all_one_mask_operand (mask_mode);\n+    add_all_one_mask_operand (mask_mode ());\n+\n+  for (int argno = arg_offset; argno < call_expr_nargs (exp); argno++)\n+    add_input_operand (argno);\n+\n+  add_input_operand (Pmode, get_tail_policy_for_pred (pred));\n+  add_input_operand (Pmode, get_mask_policy_for_pred (pred));\n+  add_input_operand (Pmode, get_avl_type_rtx (avl_type::NONVLMAX));\n+  return generate_insn (icode);\n+}\n+\n+/* Implement the call using instruction ICODE, with a 1:1 mapping between\n+   arguments and input operands.  */\n+rtx\n+function_expander::use_scalar_move_insn (insn_code icode)\n+{\n+  machine_mode mode = TYPE_MODE (TREE_TYPE (exp));\n+\n+  /* Record the offset to get the argument.  */\n+  int arg_offset = 0;\n+  add_scalar_move_mask_operand (mask_mode ());\n \n-  rtx merge = RVV_VUNDEF (mode);\n   if (use_real_merge_p (pred))\n-    merge = expand_normal (CALL_EXPR_ARG (exp, arg_offset));\n+    add_input_operand (arg_offset++);\n+  else\n+    add_vundef_operand (mode);\n \n   for (int argno = arg_offset; argno < call_expr_nargs (exp); argno++)\n-    {\n-      if (argno == call_expr_nargs (exp) - 1)\n-\tadd_input_operand (mode, merge);\n-      add_input_operand (argno);\n-    }\n+    add_input_operand (argno);\n \n   add_input_operand (Pmode, get_tail_policy_for_pred (pred));\n   add_input_operand (Pmode, get_mask_policy_for_pred (pred));\n   add_input_operand (Pmode, get_avl_type_rtx (avl_type::NONVLMAX));\n-\n-  /* See optabs.cc, the maximum nops is 9 for using 'maybe_gen_insn'.\n-     We temporarily use GCN directly. We will change it back it we\n-     can support nops >= 10.  */\n-  gcc_assert (maybe_legitimize_operands (icode, 0, opno, m_ops));\n-  rtx_insn *pat = GEN_FCN (\n-    icode) (m_ops[0].value, m_ops[1].value, m_ops[2].value, m_ops[3].value,\n-\t    m_ops[4].value, m_ops[5].value, m_ops[6].value, m_ops[7].value,\n-\t    m_ops[8].value, m_ops[9].value);\n-  emit_insn (pat);\n-  return m_ops[0].value;\n+  return generate_insn (icode);\n }\n \n /* Generate instruction ICODE, given that its operands have already\n@@ -2290,6 +3233,88 @@ function_expander::generate_insn (insn_code icode)\n   return function_returns_void_p () ? const0_rtx : m_ops[0].value;\n }\n \n+function_checker::function_checker (location_t location,\n+\t\t\t\t    const function_instance &instance,\n+\t\t\t\t    tree fndecl, tree fntype,\n+\t\t\t\t    unsigned int nargs, tree *args)\n+  : function_call_info (location, instance, fndecl), m_fntype (fntype),\n+    m_nargs (nargs), m_args (args)\n+{}\n+\n+/* Report that LOCATION has a call to FNDECL in which argument ARGNO\n+   was not an integer constant expression.  ARGNO counts from zero.  */\n+void\n+function_checker::report_non_ice (unsigned int argno) const\n+{\n+  error_at (location,\n+\t    \"argument %d of %qE must be an integer constant\"\n+\t    \" expression\",\n+\t    argno + 1, fndecl);\n+}\n+\n+/* Report that LOCATION has a call to FNDECL in which argument ARGNO has\n+   the value ACTUAL, whereas the function requires a value in the range\n+   [MIN, MAX].  ARGNO counts from zero.  */\n+void\n+function_checker::report_out_of_range (unsigned int argno, HOST_WIDE_INT actual,\n+\t\t\t\t       HOST_WIDE_INT min,\n+\t\t\t\t       HOST_WIDE_INT max) const\n+{\n+  error_at (location,\n+\t    \"passing %wd to argument %d of %qE, which expects\"\n+\t    \" a value in the range [%wd, %wd]\",\n+\t    actual, argno + 1, fndecl, min, max);\n+}\n+\n+/* Check that argument ARGNO is an integer constant expression and\n+   store its value in VALUE_OUT if so.  The caller should first\n+   check that argument ARGNO exists.  */\n+bool\n+function_checker::require_immediate (unsigned int argno, HOST_WIDE_INT min,\n+\t\t\t\t     HOST_WIDE_INT max) const\n+{\n+  gcc_assert (argno < m_nargs);\n+  tree arg = m_args[argno];\n+\n+  /* The type and range are unsigned, so read the argument as an\n+     unsigned rather than signed HWI.  */\n+  if (!tree_fits_uhwi_p (arg))\n+    {\n+      report_non_ice (argno);\n+      return false;\n+    }\n+  return require_immediate_range (argno, min, max);\n+}\n+\n+/* Check that argument REL_ARGNO is an integer constant expression in the\n+   range [MIN, MAX].  REL_ARGNO counts from the end of the predication\n+   arguments.  */\n+bool\n+function_checker::require_immediate_range (unsigned int argno,\n+\t\t\t\t\t   HOST_WIDE_INT min,\n+\t\t\t\t\t   HOST_WIDE_INT max) const\n+{\n+  gcc_assert (argno < m_nargs);\n+  tree arg = m_args[argno];\n+  HOST_WIDE_INT actual = tree_to_uhwi (arg);\n+\n+  if (!IN_RANGE (actual, min, max))\n+    {\n+      report_out_of_range (argno, actual, min, max);\n+      return false;\n+    }\n+\n+  return true;\n+}\n+\n+/* Perform semantic checks on the call.  Return true if the call is valid,\n+   otherwise report a suitable error.  */\n+bool\n+function_checker::check ()\n+{\n+  return shape->check (*this);\n+}\n+\n inline hashval_t\n registered_function_hasher::hash (value_type value)\n {\n@@ -2443,6 +3468,16 @@ builtin_decl (unsigned int code, bool)\n   return (*registered_functions)[code]->decl;\n }\n \n+/* Attempt to fold STMT, given that it's a call to the SVE function\n+   with subcode CODE.  Return the new statement on success and null\n+   on failure.  Insert any other new statements at GSI.  */\n+gimple *\n+gimple_fold_builtin (unsigned int code, gimple_stmt_iterator *gsi, gcall *stmt)\n+{\n+  registered_function &rfn = *(*registered_functions)[code];\n+  return gimple_folder (rfn.instance, rfn.decl, gsi, stmt).fold ();\n+}\n+\n /* Expand a call to the RVV function with subcode CODE.  EXP is the call\n    expression and TARGET is the preferred location for the result.\n    Return the value of the lhs.  */\n@@ -2453,6 +3488,39 @@ expand_builtin (unsigned int code, tree exp, rtx target)\n   return function_expander (rfn.instance, rfn.decl, exp, target).expand ();\n }\n \n+/* Perform any semantic checks needed for a call to the SVE function\n+   with subcode CODE, such as testing for integer constant expressions.\n+   The call occurs at location LOCATION and has NARGS arguments,\n+   given by ARGS.  FNDECL is the original function decl, before\n+   overload resolution.\n+\n+   Return true if the call is valid, otherwise report a suitable error.  */\n+bool\n+check_builtin_call (location_t location, vec<location_t>, unsigned int code,\n+\t\t    tree fndecl, unsigned int nargs, tree *args)\n+{\n+  const registered_function &rfn = *(*registered_functions)[code];\n+  return function_checker (location, rfn.instance, fndecl,\n+\t\t\t   TREE_TYPE (rfn.decl), nargs, args).check ();\n+}\n+\n+function_instance\n+get_read_vl_instance (void)\n+{\n+  return function_instance (\"read_vl\", bases::read_vl, shapes::read_vl,\n+\t\t\t    none_ops[0], PRED_TYPE_none, &p_none_void_ops);\n+}\n+\n+tree\n+get_read_vl_decl (void)\n+{\n+  function_instance instance = get_read_vl_instance ();\n+  hashval_t hash = instance.hash ();\n+  registered_function *rfn = function_table->find_with_hash (instance, hash);\n+  gcc_assert (rfn);\n+  return rfn->decl;\n+}\n+\n } // end namespace riscv_vector\n \n inline void"}, {"sha": "563ad355342ee61b38501981555518ba17803d9b", "filename": "gcc/config/riscv/riscv-vector-builtins.def", "status": "modified", "additions": 164, "deletions": 86, "changes": 250, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-vector-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-vector-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-vector-builtins.def?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -44,7 +44,7 @@ along with GCC; see the file COPYING3.  If not see\n #ifndef DEF_RVV_TYPE\n #define DEF_RVV_TYPE(NAME, NCHARS, ABI_NAME, SCALAR_TYPE, VECTOR_MODE,         \\\n \t\t     VECTOR_MODE_MIN_VLEN_32, VECTOR_SUFFIX, SCALAR_SUFFIX,    \\\n-\t\t     VSETVL_SUFFIX, MASK_TYPE)\n+\t\t     VSETVL_SUFFIX)\n #endif\n \n /* Use \"DEF_RVV_OP_TYPE\" macro to define RVV operand types.\n@@ -59,214 +59,233 @@ along with GCC; see the file COPYING3.  If not see\n #define DEF_RVV_PRED_TYPE(NAME)\n #endif\n \n+/* Use \"DEF_RVV_BASE_TYPE\" macro to define RVV base types.\n+   The 'NAME' will be concatenated into intrinsic function name.  */\n+#ifndef DEF_RVV_BASE_TYPE\n+#define DEF_RVV_BASE_TYPE(NAME, TYPE)\n+#endif\n+\n+/* Use \"DEF_RVV_TYPE_INDEX\" macro to define RVV function types.  */\n+#ifndef DEF_RVV_TYPE_INDEX\n+#define DEF_RVV_TYPE_INDEX(VECTOR, MASK, SIGNED, UNSIGNED, EEW8_INDEX, EEW16_INDEX, \\\n+\t\t      EEW32_INDEX, EEW64_INDEX, SHIFT, DOUBLE_TRUNC,           \\\n+\t\t      QUAD_TRUNC, OCT_TRUNC, DOUBLE_TRUNC_SCALAR,              \\\n+\t\t      DOUBLE_TRUNC_SIGNED, DOUBLE_TRUNC_UNSIGNED,              \\\n+\t\t      DOUBLE_TRUNC_UNSIGNED_SCALAR, DOUBLE_TRUNC_FLOAT, FLOAT, \\\n+\t\t      LMUL1, WLMUL1, EEW8_INTERPRET, EEW16_INTERPRET,          \\\n+\t\t      EEW32_INTERPRET, EEW64_INTERPRET, X2_VLMUL_EXT,          \\\n+\t\t      X4_VLMUL_EXT, X8_VLMUL_EXT, X16_VLMUL_EXT,               \\\n+\t\t      X32_VLMUL_EXT, X64_VLMUL_EXT)\n+#endif\n+\n /* SEW/LMUL = 64:\n    Only enable when TARGET_MIN_VLEN > 32 and machine mode = VNx1BImode.  */\n-DEF_RVV_TYPE (vbool64_t, 14, __rvv_bool64_t, boolean, VNx1BI, VOID, _b64, , , vbool64_t)\n+DEF_RVV_TYPE (vbool64_t, 14, __rvv_bool64_t, boolean, VNx1BI, VOID, _b64, , )\n /* SEW/LMUL = 32:\n    Machine mode = VNx2BImode when TARGET_MIN_VLEN > 32.\n    Machine mode = VNx1BImode when TARGET_MIN_VLEN = 32.  */\n-DEF_RVV_TYPE (vbool32_t, 14, __rvv_bool32_t, boolean, VNx2BI, VNx1BI, _b32, , , vbool32_t)\n+DEF_RVV_TYPE (vbool32_t, 14, __rvv_bool32_t, boolean, VNx2BI, VNx1BI, _b32, , )\n /* SEW/LMUL = 16:\n    Machine mode = VNx2BImode when TARGET_MIN_VLEN = 32.\n    Machine mode = VNx4BImode when TARGET_MIN_VLEN > 32.  */\n-DEF_RVV_TYPE (vbool16_t, 14, __rvv_bool16_t, boolean, VNx4BI, VNx2BI, _b16, , , vbool16_t)\n+DEF_RVV_TYPE (vbool16_t, 14, __rvv_bool16_t, boolean, VNx4BI, VNx2BI, _b16, , )\n /* SEW/LMUL = 8:\n    Machine mode = VNx8BImode when TARGET_MIN_VLEN > 32.\n    Machine mode = VNx4BImode when TARGET_MIN_VLEN = 32.  */\n-DEF_RVV_TYPE (vbool8_t, 13, __rvv_bool8_t, boolean, VNx8BI, VNx4BI, _b8, , , vbool8_t)\n+DEF_RVV_TYPE (vbool8_t, 13, __rvv_bool8_t, boolean, VNx8BI, VNx4BI, _b8, , )\n /* SEW/LMUL = 4:\n    Machine mode = VNx16BImode when TARGET_MIN_VLEN > 32.\n    Machine mode = VNx8BImode when TARGET_MIN_VLEN = 32.  */\n-DEF_RVV_TYPE (vbool4_t, 13, __rvv_bool4_t, boolean, VNx16BI, VNx8BI, _b4, , , vbool4_t)\n+DEF_RVV_TYPE (vbool4_t, 13, __rvv_bool4_t, boolean, VNx16BI, VNx8BI, _b4, , )\n /* SEW/LMUL = 2:\n    Machine mode = VNx32BImode when TARGET_MIN_VLEN > 32.\n    Machine mode = VNx16BImode when TARGET_MIN_VLEN = 32.  */\n-DEF_RVV_TYPE (vbool2_t, 13, __rvv_bool2_t, boolean, VNx32BI, VNx16BI, _b2, , , vbool2_t)\n+DEF_RVV_TYPE (vbool2_t, 13, __rvv_bool2_t, boolean, VNx32BI, VNx16BI, _b2, , )\n /* SEW/LMUL = 1:\n    Machine mode = VNx64BImode when TARGET_MIN_VLEN > 32.\n    Machine mode = VNx32BImode when TARGET_MIN_VLEN = 32.  */\n-DEF_RVV_TYPE (vbool1_t, 13, __rvv_bool1_t, boolean, VNx64BI, VNx32BI, _b1, , , vbool1_t)\n+DEF_RVV_TYPE (vbool1_t, 13, __rvv_bool1_t, boolean, VNx64BI, VNx32BI, _b1, , )\n \n /* LMUL = 1/8:\n    Only enble when TARGET_MIN_VLEN > 32 and machine mode = VNx1QImode.  */\n DEF_RVV_TYPE (vint8mf8_t, 15, __rvv_int8mf8_t, int8, VNx1QI, VOID, _i8mf8, _i8,\n-\t      _e8mf8, vbool64_t)\n-DEF_RVV_TYPE (vuint8mf8_t, 16, __rvv_uint8mf8_t, uint8, VNx1QI, VOID,\n-\t      _u8mf8, _u8, _e8mf8, vbool64_t)\n+\t      _e8mf8)\n+DEF_RVV_TYPE (vuint8mf8_t, 16, __rvv_uint8mf8_t, uint8, VNx1QI, VOID, _u8mf8,\n+\t      _u8, _e8mf8)\n /* LMUL = 1/4:\n    Machine mode = VNx2QImode when TARGET_MIN_VLEN > 32.\n    Machine mode = VNx1QImode when TARGET_MIN_VLEN = 32.  */\n DEF_RVV_TYPE (vint8mf4_t, 15, __rvv_int8mf4_t, int8, VNx2QI, VNx1QI, _i8mf4,\n-\t      _i8, _e8mf4, vbool32_t)\n-DEF_RVV_TYPE (vuint8mf4_t, 16, __rvv_uint8mf4_t, uint8, VNx2QI, VNx1QI,\n-\t      _u8mf4, _u8, _e8mf4, vbool32_t)\n+\t      _i8, _e8mf4)\n+DEF_RVV_TYPE (vuint8mf4_t, 16, __rvv_uint8mf4_t, uint8, VNx2QI, VNx1QI, _u8mf4,\n+\t      _u8, _e8mf4)\n /* LMUL = 1/2:\n    Machine mode = VNx4QImode when TARGET_MIN_VLEN > 32.\n    Machine mode = VNx2QImode when TARGET_MIN_VLEN = 32.  */\n DEF_RVV_TYPE (vint8mf2_t, 15, __rvv_int8mf2_t, int8, VNx4QI, VNx2QI, _i8mf2,\n-\t      _i8, _e8mf2, vbool16_t)\n-DEF_RVV_TYPE (vuint8mf2_t, 16, __rvv_uint8mf2_t, uint8, VNx4QI, VNx2QI,\n-\t      _u8mf2, _u8, _e8mf2, vbool16_t)\n+\t      _i8, _e8mf2)\n+DEF_RVV_TYPE (vuint8mf2_t, 16, __rvv_uint8mf2_t, uint8, VNx4QI, VNx2QI, _u8mf2,\n+\t      _u8, _e8mf2)\n /* LMUL = 1:\n    Machine mode = VNx8QImode when TARGET_MIN_VLEN > 32.\n    Machine mode = VNx4QImode when TARGET_MIN_VLEN = 32.  */\n DEF_RVV_TYPE (vint8m1_t, 14, __rvv_int8m1_t, int8, VNx8QI, VNx4QI, _i8m1, _i8,\n-\t      _e8m1, vbool8_t)\n-DEF_RVV_TYPE (vuint8m1_t, 15, __rvv_uint8m1_t, uint8, VNx8QI, VNx4QI,\n-\t      _u8m1, _u8, _e8m1, vbool8_t)\n+\t      _e8m1)\n+DEF_RVV_TYPE (vuint8m1_t, 15, __rvv_uint8m1_t, uint8, VNx8QI, VNx4QI, _u8m1,\n+\t      _u8, _e8m1)\n /* LMUL = 2:\n    Machine mode = VNx16QImode when TARGET_MIN_VLEN > 32.\n    Machine mode = VNx8QImode when TARGET_MIN_VLEN = 32.  */\n DEF_RVV_TYPE (vint8m2_t, 14, __rvv_int8m2_t, int8, VNx16QI, VNx8QI, _i8m2, _i8,\n-\t      _e8m2, vbool4_t)\n-DEF_RVV_TYPE (vuint8m2_t, 15, __rvv_uint8m2_t, uint8, VNx16QI, VNx8QI,\n-\t      _u8m2, _u8, _e8m2, vbool4_t)\n+\t      _e8m2)\n+DEF_RVV_TYPE (vuint8m2_t, 15, __rvv_uint8m2_t, uint8, VNx16QI, VNx8QI, _u8m2,\n+\t      _u8, _e8m2)\n /* LMUL = 4:\n    Machine mode = VNx32QImode when TARGET_MIN_VLEN > 32.\n    Machine mode = VNx16QImode when TARGET_MIN_VLEN = 32.  */\n-DEF_RVV_TYPE (vint8m4_t, 14, __rvv_int8m4_t, int8, VNx32QI, VNx16QI, _i8m4,\n-\t      _i8, _e8m4, vbool2_t)\n-DEF_RVV_TYPE (vuint8m4_t, 15, __rvv_uint8m4_t, uint8, VNx32QI, VNx16QI,\n-\t      _u8m4, _u8, _e8m4, vbool2_t)\n+DEF_RVV_TYPE (vint8m4_t, 14, __rvv_int8m4_t, int8, VNx32QI, VNx16QI, _i8m4, _i8,\n+\t      _e8m4)\n+DEF_RVV_TYPE (vuint8m4_t, 15, __rvv_uint8m4_t, uint8, VNx32QI, VNx16QI, _u8m4,\n+\t      _u8, _e8m4)\n /* LMUL = 8:\n    Machine mode = VNx64QImode when TARGET_MIN_VLEN > 32.\n    Machine mode = VNx32QImode when TARGET_MIN_VLEN = 32.  */\n-DEF_RVV_TYPE (vint8m8_t, 14, __rvv_int8m8_t, int8, VNx64QI, VNx32QI, _i8m8,\n-\t      _i8, _e8m8, vbool1_t)\n-DEF_RVV_TYPE (vuint8m8_t, 15, __rvv_uint8m8_t, uint8, VNx64QI, VNx32QI,\n-\t      _u8m8, _u8, _e8m8, vbool1_t)\n+DEF_RVV_TYPE (vint8m8_t, 14, __rvv_int8m8_t, int8, VNx64QI, VNx32QI, _i8m8, _i8,\n+\t      _e8m8)\n+DEF_RVV_TYPE (vuint8m8_t, 15, __rvv_uint8m8_t, uint8, VNx64QI, VNx32QI, _u8m8,\n+\t      _u8, _e8m8)\n \n /* LMUL = 1/4:\n    Only enble when TARGET_MIN_VLEN > 32 and machine mode = VNx1HImode.  */\n DEF_RVV_TYPE (vint16mf4_t, 16, __rvv_int16mf4_t, int16, VNx1HI, VOID, _i16mf4,\n-\t      _i16, _e16mf4, vbool64_t)\n+\t      _i16, _e16mf4)\n DEF_RVV_TYPE (vuint16mf4_t, 17, __rvv_uint16mf4_t, uint16, VNx1HI, VOID,\n-\t      _u16mf4, _u16, _e16mf4, vbool64_t)\n+\t      _u16mf4, _u16, _e16mf4)\n /* LMUL = 1/2:\n    Machine mode = VNx2HImode when TARGET_MIN_VLEN > 32.\n    Machine mode = VNx1HImode when TARGET_MIN_VLEN = 32.  */\n DEF_RVV_TYPE (vint16mf2_t, 16, __rvv_int16mf2_t, int16, VNx2HI, VNx1HI, _i16mf2,\n-\t      _i16, _e16mf2, vbool32_t)\n-DEF_RVV_TYPE (vuint16mf2_t, 17, __rvv_uint16mf2_t, uint16, VNx2HI,\n-\t      VNx1HI, _u16mf2, _u16, _e16mf2, vbool32_t)\n+\t      _i16, _e16mf2)\n+DEF_RVV_TYPE (vuint16mf2_t, 17, __rvv_uint16mf2_t, uint16, VNx2HI, VNx1HI,\n+\t      _u16mf2, _u16, _e16mf2)\n /* LMUL = 1:\n    Machine mode = VNx4HImode when TARGET_MIN_VLEN > 32.\n    Machine mode = VNx2HImode when TARGET_MIN_VLEN = 32.  */\n DEF_RVV_TYPE (vint16m1_t, 15, __rvv_int16m1_t, int16, VNx4HI, VNx2HI, _i16m1,\n-\t      _i16, _e16m1, vbool16_t)\n-DEF_RVV_TYPE (vuint16m1_t, 16, __rvv_uint16m1_t, uint16, VNx4HI, VNx2HI,\n-\t      _u16m1, _u16, _e16m1, vbool16_t)\n+\t      _i16, _e16m1)\n+DEF_RVV_TYPE (vuint16m1_t, 16, __rvv_uint16m1_t, uint16, VNx4HI, VNx2HI, _u16m1,\n+\t      _u16, _e16m1)\n /* LMUL = 2:\n    Machine mode = VNx8HImode when TARGET_MIN_VLEN > 32.\n    Machine mode = VNx4HImode when TARGET_MIN_VLEN = 32.  */\n DEF_RVV_TYPE (vint16m2_t, 15, __rvv_int16m2_t, int16, VNx8HI, VNx4HI, _i16m2,\n-\t      _i16, _e16m2, vbool8_t)\n-DEF_RVV_TYPE (vuint16m2_t, 16, __rvv_uint16m2_t, uint16, VNx8HI, VNx4HI,\n-\t      _u16m2, _u16, _e16m2, vbool8_t)\n+\t      _i16, _e16m2)\n+DEF_RVV_TYPE (vuint16m2_t, 16, __rvv_uint16m2_t, uint16, VNx8HI, VNx4HI, _u16m2,\n+\t      _u16, _e16m2)\n /* LMUL = 4:\n    Machine mode = VNx16HImode when TARGET_MIN_VLEN > 32.\n    Machine mode = VNx8HImode when TARGET_MIN_VLEN = 32.  */\n DEF_RVV_TYPE (vint16m4_t, 15, __rvv_int16m4_t, int16, VNx16HI, VNx8HI, _i16m4,\n-\t      _i16, _e16m4, vbool4_t)\n-DEF_RVV_TYPE (vuint16m4_t, 16, __rvv_uint16m4_t, uint16, VNx16HI,\n-\t      VNx8HI, _u16m4, _u16, _e16m4, vbool4_t)\n+\t      _i16, _e16m4)\n+DEF_RVV_TYPE (vuint16m4_t, 16, __rvv_uint16m4_t, uint16, VNx16HI, VNx8HI,\n+\t      _u16m4, _u16, _e16m4)\n /* LMUL = 8:\n    Machine mode = VNx32HImode when TARGET_MIN_VLEN > 32.\n    Machine mode = VNx16HImode when TARGET_MIN_VLEN = 32.  */\n DEF_RVV_TYPE (vint16m8_t, 15, __rvv_int16m8_t, int16, VNx32HI, VNx16HI, _i16m8,\n-\t      _i16, _e16m8, vbool2_t)\n-DEF_RVV_TYPE (vuint16m8_t, 16, __rvv_uint16m8_t, uint16, VNx32HI,\n-\t      VNx16HI, _u16m8, _u16, _e16m8, vbool2_t)\n+\t      _i16, _e16m8)\n+DEF_RVV_TYPE (vuint16m8_t, 16, __rvv_uint16m8_t, uint16, VNx32HI, VNx16HI,\n+\t      _u16m8, _u16, _e16m8)\n \n /* LMUL = 1/2:\n    Only enble when TARGET_MIN_VLEN > 32 and machine mode = VNx1SImode.  */\n DEF_RVV_TYPE (vint32mf2_t, 16, __rvv_int32mf2_t, int32, VNx1SI, VOID, _i32mf2,\n-\t      _i32, _e32mf2, vbool64_t)\n+\t      _i32, _e32mf2)\n DEF_RVV_TYPE (vuint32mf2_t, 17, __rvv_uint32mf2_t, uint32, VNx1SI, VOID,\n-\t      _u32mf2, _u32, _e32mf2, vbool64_t)\n+\t      _u32mf2, _u32, _e32mf2)\n /* LMUL = 1:\n    Machine mode = VNx2SImode when TARGET_MIN_VLEN > 32.\n    Machine mode = VNx1SImode when TARGET_MIN_VLEN = 32.  */\n DEF_RVV_TYPE (vint32m1_t, 15, __rvv_int32m1_t, int32, VNx2SI, VNx1SI, _i32m1,\n-\t      _i32, _e32m1, vbool32_t)\n-DEF_RVV_TYPE (vuint32m1_t, 16, __rvv_uint32m1_t, uint32, VNx2SI, VNx1SI,\n-\t      _u32m1, _u32, _e32m1, vbool32_t)\n+\t      _i32, _e32m1)\n+DEF_RVV_TYPE (vuint32m1_t, 16, __rvv_uint32m1_t, uint32, VNx2SI, VNx1SI, _u32m1,\n+\t      _u32, _e32m1)\n /* LMUL = 2:\n    Machine mode = VNx4SImode when TARGET_MIN_VLEN > 32.\n    Machine mode = VNx2SImode when TARGET_MIN_VLEN = 32.  */\n DEF_RVV_TYPE (vint32m2_t, 15, __rvv_int32m2_t, int32, VNx4SI, VNx2SI, _i32m2,\n-\t      _i32, _e32m2, vbool16_t)\n-DEF_RVV_TYPE (vuint32m2_t, 16, __rvv_uint32m2_t, uint32, VNx4SI, VNx2SI,\n-\t      _u32m2, _u32, _e32m2, vbool16_t)\n+\t      _i32, _e32m2)\n+DEF_RVV_TYPE (vuint32m2_t, 16, __rvv_uint32m2_t, uint32, VNx4SI, VNx2SI, _u32m2,\n+\t      _u32, _e32m2)\n /* LMUL = 4:\n    Machine mode = VNx8SImode when TARGET_MIN_VLEN > 32.\n    Machine mode = VNx4SImode when TARGET_MIN_VLEN = 32.  */\n DEF_RVV_TYPE (vint32m4_t, 15, __rvv_int32m4_t, int32, VNx8SI, VNx4SI, _i32m4,\n-\t      _i32, _e32m4, vbool8_t)\n-DEF_RVV_TYPE (vuint32m4_t, 16, __rvv_uint32m4_t, uint32, VNx8SI, VNx4SI,\n-\t      _u32m4, _u32, _e32m4, vbool8_t)\n+\t      _i32, _e32m4)\n+DEF_RVV_TYPE (vuint32m4_t, 16, __rvv_uint32m4_t, uint32, VNx8SI, VNx4SI, _u32m4,\n+\t      _u32, _e32m4)\n /* LMUL = 8:\n    Machine mode = VNx16SImode when TARGET_MIN_VLEN > 32.\n    Machine mode = VNx8SImode when TARGET_MIN_VLEN = 32.  */\n DEF_RVV_TYPE (vint32m8_t, 15, __rvv_int32m8_t, int32, VNx16SI, VNx8SI, _i32m8,\n-\t      _i32, _e32m8, vbool4_t)\n-DEF_RVV_TYPE (vuint32m8_t, 16, __rvv_uint32m8_t, uint32, VNx16SI,\n-\t      VNx8SI, _u32m8, _u32, _e32m8, vbool4_t)\n+\t      _i32, _e32m8)\n+DEF_RVV_TYPE (vuint32m8_t, 16, __rvv_uint32m8_t, uint32, VNx16SI, VNx8SI,\n+\t      _u32m8, _u32, _e32m8)\n \n /* SEW = 64:\n-   Disable when TARGET_MIN_VLEN > 32.  */\n+   Enable when TARGET_MIN_VLEN > 32.  */\n DEF_RVV_TYPE (vint64m1_t, 15, __rvv_int64m1_t, int64, VNx1DI, VOID, _i64m1,\n-\t      _i64, _e64m1, vbool64_t)\n-DEF_RVV_TYPE (vuint64m1_t, 16, __rvv_uint64m1_t, uint64, VNx1DI, VOID,\n-\t      _u64m1, _u64, _e64m1, vbool64_t)\n+\t      _i64, _e64m1)\n+DEF_RVV_TYPE (vuint64m1_t, 16, __rvv_uint64m1_t, uint64, VNx1DI, VOID, _u64m1,\n+\t      _u64, _e64m1)\n DEF_RVV_TYPE (vint64m2_t, 15, __rvv_int64m2_t, int64, VNx2DI, VOID, _i64m2,\n-\t      _i64, _e64m2, vbool32_t)\n-DEF_RVV_TYPE (vuint64m2_t, 16, __rvv_uint64m2_t, uint64, VNx2DI, VOID,\n-\t      _u64m2, _u64, _e64m2, vbool32_t)\n+\t      _i64, _e64m2)\n+DEF_RVV_TYPE (vuint64m2_t, 16, __rvv_uint64m2_t, uint64, VNx2DI, VOID, _u64m2,\n+\t      _u64, _e64m2)\n DEF_RVV_TYPE (vint64m4_t, 15, __rvv_int64m4_t, int64, VNx4DI, VOID, _i64m4,\n-\t      _i64, _e64m4, vbool16_t)\n-DEF_RVV_TYPE (vuint64m4_t, 16, __rvv_uint64m4_t, uint64, VNx4DI, VOID,\n-\t      _u64m4, _u64, _e64m4, vbool16_t)\n+\t      _i64, _e64m4)\n+DEF_RVV_TYPE (vuint64m4_t, 16, __rvv_uint64m4_t, uint64, VNx4DI, VOID, _u64m4,\n+\t      _u64, _e64m4)\n DEF_RVV_TYPE (vint64m8_t, 15, __rvv_int64m8_t, int64, VNx8DI, VOID, _i64m8,\n-\t      _i64, _e64m8, vbool8_t)\n-DEF_RVV_TYPE (vuint64m8_t, 16, __rvv_uint64m8_t, uint64, VNx8DI, VOID,\n-\t      _u64m8, _u64, _e64m8, vbool8_t)\n+\t      _i64, _e64m8)\n+DEF_RVV_TYPE (vuint64m8_t, 16, __rvv_uint64m8_t, uint64, VNx8DI, VOID, _u64m8,\n+\t      _u64, _e64m8)\n \n /* LMUL = 1/2:\n    Only enble when TARGET_MIN_VLEN > 32 and machine mode = VNx1SFmode.  */\n DEF_RVV_TYPE (vfloat32mf2_t, 18, __rvv_float32mf2_t, float, VNx1SF, VOID,\n-\t      _f32mf2, _f32, _e32mf2, vbool64_t)\n+\t      _f32mf2, _f32, _e32mf2)\n /* LMUL = 1:\n    Machine mode = VNx2SFmode when TARGET_MIN_VLEN > 32.\n    Machine mode = VNx1SFmode when TARGET_MIN_VLEN = 32.  */\n DEF_RVV_TYPE (vfloat32m1_t, 17, __rvv_float32m1_t, float, VNx2SF, VNx1SF,\n-\t      _f32m1, _f32, _e32m1, vbool32_t)\n+\t      _f32m1, _f32, _e32m1)\n /* LMUL = 2:\n    Machine mode = VNx4SFmode when TARGET_MIN_VLEN > 32.\n    Machine mode = VNx2SFmode when TARGET_MIN_VLEN = 32.  */\n DEF_RVV_TYPE (vfloat32m2_t, 17, __rvv_float32m2_t, float, VNx4SF, VNx2SF,\n-\t      _f32m2, _f32, _e32m2, vbool16_t)\n+\t      _f32m2, _f32, _e32m2)\n /* LMUL = 4:\n    Machine mode = VNx8SFmode when TARGET_MIN_VLEN > 32.\n    Machine mode = VNx4SFmode when TARGET_MIN_VLEN = 32.  */\n DEF_RVV_TYPE (vfloat32m4_t, 17, __rvv_float32m4_t, float, VNx8SF, VNx4SF,\n-\t      _f32m4, _f32, _e32m4, vbool8_t)\n+\t      _f32m4, _f32, _e32m4)\n /* LMUL = 8:\n    Machine mode = VNx16SFmode when TARGET_MIN_VLEN > 32.\n    Machine mode = VNx8SFmode when TARGET_MIN_VLEN = 32.  */\n DEF_RVV_TYPE (vfloat32m8_t, 17, __rvv_float32m8_t, float, VNx16SF, VNx8SF,\n-\t      _f32m8, _f32, _e32m8, vbool4_t)\n+\t      _f32m8, _f32, _e32m8)\n \n /* SEW = 64:\n-   Disable when TARGET_VECTOR_FP64.  */\n+   Enable when TARGET_VECTOR_FP64.  */\n DEF_RVV_TYPE (vfloat64m1_t, 17, __rvv_float64m1_t, double, VNx1DF, VOID, _f64m1,\n-\t      _f64, _e64m1, vbool64_t)\n+\t      _f64, _e64m1)\n DEF_RVV_TYPE (vfloat64m2_t, 17, __rvv_float64m2_t, double, VNx2DF, VOID, _f64m2,\n-\t      _f64, _e64m2, vbool32_t)\n+\t      _f64, _e64m2)\n DEF_RVV_TYPE (vfloat64m4_t, 17, __rvv_float64m4_t, double, VNx4DF, VOID, _f64m4,\n-\t      _f64, _e64m4, vbool16_t)\n+\t      _f64, _e64m4)\n DEF_RVV_TYPE (vfloat64m8_t, 17, __rvv_float64m8_t, double, VNx8DF, VOID, _f64m8,\n-\t      _f64, _e64m8, vbool8_t)\n+\t      _f64, _e64m8)\n \n DEF_RVV_OP_TYPE (vv)\n DEF_RVV_OP_TYPE (vx)\n@@ -288,7 +307,12 @@ DEF_RVV_OP_TYPE (vf)\n DEF_RVV_OP_TYPE (vm)\n DEF_RVV_OP_TYPE (wf)\n DEF_RVV_OP_TYPE (vfm)\n-DEF_RVV_OP_TYPE (v_f)\n+DEF_RVV_OP_TYPE (f)\n+DEF_RVV_OP_TYPE (f_v)\n+DEF_RVV_OP_TYPE (xu_v)\n+DEF_RVV_OP_TYPE (f_w)\n+DEF_RVV_OP_TYPE (xu_w)\n+DEF_RVV_OP_TYPE (s)\n \n DEF_RVV_PRED_TYPE (ta)\n DEF_RVV_PRED_TYPE (tu)\n@@ -302,6 +326,60 @@ DEF_RVV_PRED_TYPE (m)\n DEF_RVV_PRED_TYPE (tam)\n DEF_RVV_PRED_TYPE (tum)\n \n+DEF_RVV_BASE_TYPE (vector, builtin_types[type_idx].vector)\n+DEF_RVV_BASE_TYPE (scalar, builtin_types[type_idx].scalar)\n+DEF_RVV_BASE_TYPE (mask, get_vector_type (type_idx))\n+DEF_RVV_BASE_TYPE (signed_vector, get_vector_type (type_idx))\n+DEF_RVV_BASE_TYPE (unsigned_vector, get_vector_type (type_idx))\n+/* According to riscv-vector-builtins-types.def, the unsigned\n+   type is always the signed type + 1 (They have same SEW and LMUL).\n+   For example 'vuint8mf8_t' enum = 'vint8mf8_t' enum + 1.\n+   Note: We dont't allow type_idx to be unsigned type.  */\n+DEF_RVV_BASE_TYPE (unsigned_scalar, builtin_types[type_idx + 1].scalar)\n+DEF_RVV_BASE_TYPE (vector_ptr, builtin_types[type_idx].vector_ptr)\n+/* According to the latest rvv-intrinsic-doc, it defines vsm.v intrinsic:\n+   __riscv_vsm (uint8_t *base, vbool1_t value, size_t vl).  */\n+DEF_RVV_BASE_TYPE (scalar_ptr, get_scalar_ptr_type (type_idx))\n+/* According to the latest rvv-intrinsic-doc, it defines vlm.v intrinsic:\n+   __riscv_vlm_v_b1 (const uint8_t *base, size_t vl).  */\n+DEF_RVV_BASE_TYPE (scalar_const_ptr, get_scalar_const_ptr_type (type_idx))\n+DEF_RVV_BASE_TYPE (void, void_type_node)\n+DEF_RVV_BASE_TYPE (size, size_type_node)\n+DEF_RVV_BASE_TYPE (ptrdiff, ptrdiff_type_node)\n+DEF_RVV_BASE_TYPE (unsigned_long, long_unsigned_type_node)\n+DEF_RVV_BASE_TYPE (long, long_integer_type_node)\n+DEF_RVV_BASE_TYPE (eew8_index, get_vector_type (type_idx))\n+DEF_RVV_BASE_TYPE (eew16_index, get_vector_type (type_idx))\n+DEF_RVV_BASE_TYPE (eew32_index, get_vector_type (type_idx))\n+DEF_RVV_BASE_TYPE (eew64_index, get_vector_type (type_idx))\n+DEF_RVV_BASE_TYPE (shift_vector, get_vector_type (type_idx))\n+DEF_RVV_BASE_TYPE (double_trunc_vector, get_vector_type (type_idx))\n+DEF_RVV_BASE_TYPE (quad_trunc_vector, get_vector_type (type_idx))\n+DEF_RVV_BASE_TYPE (oct_trunc_vector, get_vector_type (type_idx))\n+DEF_RVV_BASE_TYPE (double_trunc_scalar, get_scalar_type (type_idx))\n+DEF_RVV_BASE_TYPE (double_trunc_signed_vector, get_vector_type (type_idx))\n+DEF_RVV_BASE_TYPE (double_trunc_unsigned_vector, get_vector_type (type_idx))\n+DEF_RVV_BASE_TYPE (double_trunc_unsigned_scalar, get_scalar_type (type_idx))\n+DEF_RVV_BASE_TYPE (double_trunc_float_vector, get_vector_type (type_idx))\n+DEF_RVV_BASE_TYPE (float_vector, get_vector_type (type_idx))\n+DEF_RVV_BASE_TYPE (lmul1_vector, get_vector_type (type_idx))\n+DEF_RVV_BASE_TYPE (widen_lmul1_vector, get_vector_type (type_idx))\n+DEF_RVV_BASE_TYPE (eew8_interpret, get_vector_type (type_idx))\n+DEF_RVV_BASE_TYPE (eew16_interpret, get_vector_type (type_idx))\n+DEF_RVV_BASE_TYPE (eew32_interpret, get_vector_type (type_idx))\n+DEF_RVV_BASE_TYPE (eew64_interpret, get_vector_type (type_idx))\n+DEF_RVV_BASE_TYPE (vlmul_ext_x2, get_vector_type (type_idx))\n+DEF_RVV_BASE_TYPE (vlmul_ext_x4, get_vector_type (type_idx))\n+DEF_RVV_BASE_TYPE (vlmul_ext_x8, get_vector_type (type_idx))\n+DEF_RVV_BASE_TYPE (vlmul_ext_x16, get_vector_type (type_idx))\n+DEF_RVV_BASE_TYPE (vlmul_ext_x32, get_vector_type (type_idx))\n+DEF_RVV_BASE_TYPE (vlmul_ext_x64, get_vector_type (type_idx))\n+DEF_RVV_BASE_TYPE (size_ptr, build_pointer_type (size_type_node))\n+\n+#include \"riscv-vector-type-indexer.gen.def\"\n+\n #undef DEF_RVV_PRED_TYPE\n #undef DEF_RVV_OP_TYPE\n #undef DEF_RVV_TYPE\n+#undef DEF_RVV_BASE_TYPE\n+#undef DEF_RVV_TYPE_INDEX"}, {"sha": "84dfe67677389e76e44d3eef243f6c07eee4c22a", "filename": "gcc/config/riscv/riscv-vector-builtins.h", "status": "modified", "additions": 130, "deletions": 26, "changes": 156, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-vector-builtins.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-vector-builtins.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-vector-builtins.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -123,7 +123,8 @@ enum vector_type_index\n {\n #define DEF_RVV_TYPE(NAME, ABI_NAME, NCHARS, ARGS...) VECTOR_TYPE_##NAME,\n #include \"riscv-vector-builtins.def\"\n-  NUM_VECTOR_TYPES\n+  NUM_VECTOR_TYPES,\n+  VECTOR_TYPE_INVALID = NUM_VECTOR_TYPES\n };\n \n /* Enumerates the RVV governing predication types.  */\n@@ -138,30 +139,8 @@ enum predication_type_index\n /* Enumerates the RVV base types.  */\n enum rvv_base_type\n {\n-  RVV_BASE_vector,\n-  RVV_BASE_scalar,\n-  RVV_BASE_mask,\n-  RVV_BASE_unsigned_vector,\n-  RVV_BASE_unsigned_scalar,\n-  RVV_BASE_vector_ptr,\n-  RVV_BASE_scalar_ptr,\n-  RVV_BASE_scalar_const_ptr,\n-  RVV_BASE_void,\n-  RVV_BASE_size,\n-  RVV_BASE_ptrdiff,\n-  RVV_BASE_unsigned_long,\n-  RVV_BASE_long,\n-  RVV_BASE_uint8_index,\n-  RVV_BASE_uint16_index,\n-  RVV_BASE_uint32_index,\n-  RVV_BASE_uint64_index,\n-  RVV_BASE_shift_vector,\n-  RVV_BASE_double_trunc_vector,\n-  RVV_BASE_quad_trunc_vector,\n-  RVV_BASE_oct_trunc_vector,\n-  RVV_BASE_double_trunc_scalar,\n-  RVV_BASE_double_trunc_unsigned_vector,\n-  RVV_BASE_double_trunc_unsigned_scalar,\n+#define DEF_RVV_BASE_TYPE(NAME, ARGS...) RVV_BASE_##NAME,\n+#include \"riscv-vector-builtins.def\"\n   NUM_BASE_TYPES\n };\n \n@@ -183,6 +162,13 @@ struct rvv_builtin_suffixes\n   const char *vsetvl;\n };\n \n+/* Builtin base type used to specify the type of builtin function\n+   argument or return result.  */\n+struct function_type_info\n+{\n+  enum vector_type_index type_indexes[NUM_BASE_TYPES];\n+};\n+\n /* RVV Builtin argument information.  */\n struct rvv_arg_type_info\n {\n@@ -191,7 +177,11 @@ struct rvv_arg_type_info\n   {}\n   enum rvv_base_type base_type;\n \n-  vector_type_index get_base_vector_type (tree type) const;\n+  tree get_scalar_ptr_type (vector_type_index) const;\n+  tree get_scalar_const_ptr_type (vector_type_index) const;\n+  vector_type_index get_function_type_index (vector_type_index) const;\n+  tree get_scalar_type (vector_type_index) const;\n+  tree get_vector_type (vector_type_index) const;\n   tree get_tree_type (vector_type_index) const;\n };\n \n@@ -325,6 +315,25 @@ function_call_info::function_returns_void_p ()\n   return TREE_TYPE (TREE_TYPE (fndecl)) == void_type_node;\n }\n \n+/* A class for folding a gimple function call.  */\n+class gimple_folder : public function_call_info\n+{\n+public:\n+  gimple_folder (const function_instance &, tree, gimple_stmt_iterator *,\n+\t\t gcall *);\n+\n+  gimple *fold ();\n+\n+  /* Where to insert extra statements that feed the final replacement.  */\n+  gimple_stmt_iterator *gsi;\n+\n+  /* The call we're folding.  */\n+  gcall *call;\n+\n+  /* The result of the call, or null if none.  */\n+  tree lhs;\n+};\n+\n /* A class for expanding a function call into RTL.  */\n class function_expander : public function_call_info\n {\n@@ -336,20 +345,25 @@ class function_expander : public function_call_info\n   void add_input_operand (unsigned);\n   void add_output_operand (machine_mode, rtx);\n   void add_all_one_mask_operand (machine_mode);\n+  void add_scalar_move_mask_operand (machine_mode);\n   void add_vundef_operand (machine_mode);\n   void add_fixed_operand (rtx);\n   void add_integer_operand (rtx);\n   void add_mem_operand (machine_mode, unsigned);\n \n   machine_mode vector_mode (void) const;\n   machine_mode index_mode (void) const;\n+  machine_mode arg_mode (int) const;\n+  machine_mode mask_mode (void) const;\n+  machine_mode ret_mode (void) const;\n \n   rtx use_exact_insn (insn_code);\n   rtx use_contiguous_load_insn (insn_code);\n   rtx use_contiguous_store_insn (insn_code);\n   rtx use_compare_insn (rtx_code, insn_code);\n   rtx use_ternop_insn (bool, insn_code);\n   rtx use_widen_ternop_insn (insn_code);\n+  rtx use_scalar_move_insn (insn_code);\n   rtx generate_insn (insn_code);\n \n   /* The function call expression.  */\n@@ -395,11 +409,46 @@ class function_base\n   /* Return true if intrinsics has merge operand.  */\n   virtual bool has_merge_operand_p () const;\n \n+  /* Try to fold the given gimple call.  Return the new gimple statement\n+     on success, otherwise return null.  */\n+  virtual gimple *fold (gimple_folder &) const { return NULL; }\n+\n   /* Expand the given call into rtl.  Return the result of the function,\n      or an arbitrary value if the function doesn't return a result.  */\n   virtual rtx expand (function_expander &) const = 0;\n };\n \n+/* A class for checking that the semantic constraints on a function call are\n+   satisfied, such as arguments being integer constant expressions with\n+   a particular range.  The parent class's FNDECL is the decl that was\n+   called in the original source, before overload resolution.  */\n+class function_checker : public function_call_info\n+{\n+public:\n+  function_checker (location_t, const function_instance &, tree, tree,\n+\t\t    unsigned int, tree *);\n+\n+  machine_mode arg_mode (unsigned int) const;\n+  machine_mode ret_mode (void) const;\n+  bool check (void);\n+\n+  bool require_immediate (unsigned int, HOST_WIDE_INT, HOST_WIDE_INT) const;\n+\n+private:\n+  bool require_immediate_range (unsigned int, HOST_WIDE_INT,\n+\t\t\t\tHOST_WIDE_INT) const;\n+  void report_non_ice (unsigned int) const;\n+  void report_out_of_range (unsigned int, HOST_WIDE_INT, HOST_WIDE_INT,\n+\t\t\t    HOST_WIDE_INT) const;\n+\n+  /* The type of the resolved function.  */\n+  tree m_fntype;\n+\n+  /* The arguments to the function.  */\n+  unsigned int m_nargs;\n+  tree *m_args;\n+};\n+\n /* Classifies functions into \"shapes\" base on:\n \n    - Base name of the intrinsic function.\n@@ -420,12 +469,34 @@ class function_shape\n   /* Define all functions associated with the given group.  */\n   virtual void build (function_builder &, const function_group_info &) const\n     = 0;\n+\n+  /* Check whether the given call is semantically valid.  Return true\n+   if it is, otherwise report an error and return false.  */\n+  virtual bool check (function_checker &) const { return true; }\n };\n \n extern const char *const operand_suffixes[NUM_OP_TYPES];\n extern const rvv_builtin_suffixes type_suffixes[NUM_VECTOR_TYPES + 1];\n extern const char *const predication_suffixes[NUM_PRED_TYPES];\n extern rvv_builtin_types_t builtin_types[NUM_VECTOR_TYPES + 1];\n+extern function_instance get_read_vl_instance (void);\n+extern tree get_read_vl_decl (void);\n+\n+inline tree\n+rvv_arg_type_info::get_scalar_type (vector_type_index type_idx) const\n+{\n+  return get_function_type_index (type_idx) == VECTOR_TYPE_INVALID\n+\t   ? NULL_TREE\n+\t   : builtin_types[get_function_type_index (type_idx)].scalar;\n+}\n+\n+inline tree\n+rvv_arg_type_info::get_vector_type (vector_type_index type_idx) const\n+{\n+  return get_function_type_index (type_idx) == VECTOR_TYPE_INVALID\n+\t   ? NULL_TREE\n+\t   : builtin_types[get_function_type_index (type_idx)].vector;\n+}\n \n inline bool\n function_instance::operator!= (const function_instance &other) const\n@@ -463,6 +534,13 @@ function_expander::add_all_one_mask_operand (machine_mode mode)\n   add_input_operand (mode, CONSTM1_RTX (mode));\n }\n \n+/* Add mask operand for scalar move instruction.  */\n+inline void\n+function_expander::add_scalar_move_mask_operand (machine_mode mode)\n+{\n+  add_input_operand (mode, gen_scalar_move_mask (mode));\n+}\n+\n /* Add an operand that must be X.  The only way of legitimizing an\n    invalid X is to reload the address of a MEM.  */\n inline void\n@@ -492,6 +570,32 @@ function_expander::index_mode (void) const\n   return TYPE_MODE (op_info->args[1].get_tree_type (type.index));\n }\n \n+/* Return the machine_mode of the corresponding arg type.  */\n+inline machine_mode\n+function_expander::arg_mode (int idx) const\n+{\n+  return TYPE_MODE (op_info->args[idx].get_tree_type (type.index));\n+}\n+\n+/* Return the machine_mode of the corresponding return type.  */\n+inline machine_mode\n+function_expander::ret_mode (void) const\n+{\n+  return TYPE_MODE (op_info->ret.get_tree_type (type.index));\n+}\n+\n+inline machine_mode\n+function_checker::arg_mode (unsigned int argno) const\n+{\n+  return TYPE_MODE (TREE_TYPE (m_args[argno]));\n+}\n+\n+inline machine_mode\n+function_checker::ret_mode () const\n+{\n+  return TYPE_MODE (TREE_TYPE (TREE_TYPE (fndecl)));\n+}\n+\n /* Default implementation of function_base::call_properties, with conservatively\n    correct behavior for floating-point instructions.  */\n inline unsigned int"}, {"sha": "1b66e3b9eebeecac93cc19a2b5e9f3c65209346c", "filename": "gcc/config/riscv/riscv-vsetvl.cc", "status": "modified", "additions": 957, "deletions": 351, "changes": 1308, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-vsetvl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-vsetvl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-vsetvl.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -63,7 +63,16 @@ along with GCC; see the file COPYING3.  If not see\n \n     -  The subroutine of optimize > 0 is lazy_vsetvl.\n        This function optimize vsetvl insertion process by\n-       lazy code motion (LCM) layering on RTL_SSA.  */\n+       lazy code motion (LCM) layering on RTL_SSA.\n+\n+    -  get_avl (), get_insn (), get_avl_source ():\n+\n+\t1. get_insn () is the current instruction, find_access (get_insn\n+   ())->def is the same as get_avl_source () if get_insn () demand VL.\n+\t2. If get_avl () is non-VLMAX REG, get_avl () == get_avl_source\n+   ()->regno ().\n+\t3. get_avl_source ()->regno () is the REGNO that we backward propagate.\n+ */\n \n #define IN_TARGET_CODE 1\n #define INCLUDE_ALGORITHM\n@@ -94,6 +103,10 @@ along with GCC; see the file COPYING3.  If not see\n using namespace rtl_ssa;\n using namespace riscv_vector;\n \n+static CONSTEXPR const unsigned ALL_SEW[] = {8, 16, 32, 64};\n+static CONSTEXPR const vlmul_type ALL_LMUL[]\n+  = {LMUL_1, LMUL_2, LMUL_4, LMUL_8, LMUL_F8, LMUL_F4, LMUL_F2};\n+\n DEBUG_FUNCTION void\n debug (const vector_insn_info *info)\n {\n@@ -165,6 +178,38 @@ valid_sew_p (size_t sew)\n   return exact_log2 (sew) && sew >= 8 && sew <= 64;\n }\n \n+/* Return true if the instruction ignores VLMUL field of VTYPE.  */\n+static bool\n+ignore_vlmul_insn_p (rtx_insn *rinsn)\n+{\n+  return get_attr_type (rinsn) == TYPE_VIMOVVX\n+\t || get_attr_type (rinsn) == TYPE_VFMOVVF\n+\t || get_attr_type (rinsn) == TYPE_VIMOVXV\n+\t || get_attr_type (rinsn) == TYPE_VFMOVFV;\n+}\n+\n+/* Return true if the instruction is scalar move instruction.  */\n+static bool\n+scalar_move_insn_p (rtx_insn *rinsn)\n+{\n+  return get_attr_type (rinsn) == TYPE_VIMOVXV\n+\t || get_attr_type (rinsn) == TYPE_VFMOVFV;\n+}\n+\n+/* Return true if the instruction is fault first load instruction.  */\n+static bool\n+fault_first_load_p (rtx_insn *rinsn)\n+{\n+  return recog_memoized (rinsn) >= 0 && get_attr_type (rinsn) == TYPE_VLDFF;\n+}\n+\n+/* Return true if the instruction is read vl instruction.  */\n+static bool\n+read_vl_insn_p (rtx_insn *rinsn)\n+{\n+  return recog_memoized (rinsn) >= 0 && get_attr_type (rinsn) == TYPE_RDVL;\n+}\n+\n /* Return true if it is a vsetvl instruction.  */\n static bool\n vector_config_insn_p (rtx_insn *rinsn)\n@@ -234,8 +279,7 @@ has_vsetvl_killed_avl_p (const bb_info *bb, const vector_insn_info &info)\n     {\n       rtx avl = info.get_avl ();\n       if (vlmax_avl_p (avl))\n-\treturn find_reg_killed_by (bb, get_vl (info.get_insn ()->rtl ()))\n-\t       != nullptr;\n+\treturn find_reg_killed_by (bb, info.get_avl_reg_rtx ()) != nullptr;\n       for (const insn_info *insn : bb->reverse_real_nondebug_insns ())\n \t{\n \t  def_info *def = find_access (insn->defs (), REGNO (avl));\n@@ -288,8 +332,7 @@ anticipatable_occurrence_p (const bb_info *bb, const vector_insn_info dem)\n       /* rs1 (avl) are not modified in the basic block prior to the VSETVL.  */\n       if (!vlmax_avl_p (dem.get_avl ()))\n \t{\n-\t  set_info *set\n-\t    = find_access (insn->uses (), REGNO (dem.get_avl ()))->def ();\n+\t  set_info *set = dem.get_avl_source ();\n \t  /* If it's undefined, it's not anticipatable conservatively.  */\n \t  if (!set)\n \t    return false;\n@@ -355,6 +398,8 @@ available_occurrence_p (const bb_info *bb, const vector_insn_info dem)\n \t  for (const insn_info *i = insn; real_insn_and_same_bb_p (i, bb);\n \t       i = i->next_nondebug_insn ())\n \t    {\n+\t      if (read_vl_insn_p (i->rtl ()))\n+\t\tcontinue;\n \t      /* rs1 (avl) are not modified by following statements in\n \t\t the basic block.  */\n \t      if (find_access (i->defs (), REGNO (dem.get_avl ())))\n@@ -369,72 +414,6 @@ available_occurrence_p (const bb_info *bb, const vector_insn_info dem)\n   return true;\n }\n \n-/* Return true if the block is worthwhile backward propagation.  */\n-static bool\n-backward_propagate_worthwhile_p (const basic_block cfg_bb,\n-\t\t\t\t const vector_block_info block_info)\n-{\n-  if (loop_basic_block_p (cfg_bb))\n-    {\n-      if (block_info.reaching_out.valid_or_dirty_p ())\n-\t{\n-\t  if (block_info.local_dem.compatible_p (block_info.reaching_out))\n-\t    {\n-\t      /* Case 1 (Can backward propagate):\n-\t\t ....\n-\t\t bb0:\n-\t\t ...\n-\t\t for (int i = 0; i < n; i++)\n-\t\t   {\n-\t\t     vint16mf4_t v = __riscv_vle16_v_i16mf4 (in + i + 5, 7);\n-\t\t     __riscv_vse16_v_i16mf4 (out + i + 5, v, 7);\n-\t\t   }\n-\t\t The local_dem is compatible with reaching_out. Such case is\n-\t\t worthwhile backward propagation.  */\n-\t      return true;\n-\t    }\n-\t  else\n-\t    {\n-\t      /* Case 2 (Don't backward propagate):\n-\t\t    ....\n-\t\t    bb0:\n-\t\t    ...\n-\t\t    for (int i = 0; i < n; i++)\n-\t\t      {\n-\t\t\tvint16mf4_t v = __riscv_vle16_v_i16mf4 (in + i + 5, 7);\n-\t\t\t__riscv_vse16_v_i16mf4 (out + i + 5, v, 7);\n-\t\t\tvint16mf2_t v2 = __riscv_vle16_v_i16mf2 (in + i + 6, 8);\n-\t\t\t__riscv_vse16_v_i16mf2 (out + i + 6, v, 8);\n-\t\t      }\n-\t\t The local_dem is incompatible with reaching_out.\n-\t\t It makes no sense to backward propagate the local_dem since we\n-\t\t can't avoid VSETVL inside the loop.  */\n-\t      return false;\n-\t    }\n-\t}\n-      else\n-\t{\n-\t  gcc_assert (block_info.reaching_out.unknown_p ());\n-\t  /* Case 3 (Don't backward propagate):\n-\t\t....\n-\t\tbb0:\n-\t\t...\n-\t\tfor (int i = 0; i < n; i++)\n-\t\t  {\n-\t\t    vint16mf4_t v = __riscv_vle16_v_i16mf4 (in + i + 5, 7);\n-\t\t    __riscv_vse16_v_i16mf4 (out + i + 5, v, 7);\n-\t\t    fn3 ();\n-\t\t  }\n-\t    The local_dem is VALID, but the reaching_out is UNKNOWN.\n-\t    It makes no sense to backward propagate the local_dem since we\n-\t    can't avoid VSETVL inside the loop.  */\n-\t  return false;\n-\t}\n-    }\n-\n-  return true;\n-}\n-\n static bool\n insn_should_be_added_p (const insn_info *insn, unsigned int types)\n {\n@@ -657,15 +636,20 @@ static rtx\n gen_vsetvl_pat (rtx_insn *rinsn, const vector_insn_info &info)\n {\n   rtx new_pat;\n+  vl_vtype_info new_info = info;\n+  if (info.get_insn () && info.get_insn ()->rtl ()\n+      && fault_first_load_p (info.get_insn ()->rtl ()))\n+    new_info.set_avl_info (\n+      avl_info (get_avl (info.get_insn ()->rtl ()), nullptr));\n   if (vsetvl_insn_p (rinsn) || vlmax_avl_p (info.get_avl ()))\n     {\n       rtx dest = get_vl (rinsn);\n-      new_pat = gen_vsetvl_pat (VSETVL_NORMAL, info, dest);\n+      new_pat = gen_vsetvl_pat (VSETVL_NORMAL, new_info, dest);\n     }\n   else if (INSN_CODE (rinsn) == CODE_FOR_vsetvl_vtype_change_only)\n-    new_pat = gen_vsetvl_pat (VSETVL_VTYPE_CHANGE_ONLY, info, NULL_RTX);\n+    new_pat = gen_vsetvl_pat (VSETVL_VTYPE_CHANGE_ONLY, new_info, NULL_RTX);\n   else\n-    new_pat = gen_vsetvl_pat (VSETVL_DISCARD_RESULT, info, NULL_RTX);\n+    new_pat = gen_vsetvl_pat (VSETVL_DISCARD_RESULT, new_info, NULL_RTX);\n   return new_pat;\n }\n \n@@ -702,7 +686,7 @@ eliminate_insn (rtx_insn *rinsn)\n     delete_insn (rinsn);\n }\n \n-static void\n+static vsetvl_type\n insert_vsetvl (enum emit_type emit_type, rtx_insn *rinsn,\n \t       const vector_insn_info &info, const vector_insn_info &prev_info)\n {\n@@ -713,14 +697,14 @@ insert_vsetvl (enum emit_type emit_type, rtx_insn *rinsn,\n     {\n       emit_vsetvl_insn (VSETVL_VTYPE_CHANGE_ONLY, emit_type, info, NULL_RTX,\n \t\t\trinsn);\n-      return;\n+      return VSETVL_VTYPE_CHANGE_ONLY;\n     }\n \n   if (info.has_avl_imm ())\n     {\n       emit_vsetvl_insn (VSETVL_DISCARD_RESULT, emit_type, info, NULL_RTX,\n \t\t\trinsn);\n-      return;\n+      return VSETVL_DISCARD_RESULT;\n     }\n \n   if (info.has_avl_no_reg ())\n@@ -732,14 +716,14 @@ insert_vsetvl (enum emit_type emit_type, rtx_insn *rinsn,\n \t{\n \t  emit_vsetvl_insn (VSETVL_VTYPE_CHANGE_ONLY, emit_type, info, NULL_RTX,\n \t\t\t    rinsn);\n-\t  return;\n+\t  return VSETVL_VTYPE_CHANGE_ONLY;\n \t}\n       /* Otherwise use an AVL of 0 to avoid depending on previous vl.  */\n       vl_vtype_info new_info = info;\n       new_info.set_avl_info (avl_info (const0_rtx, nullptr));\n       emit_vsetvl_insn (VSETVL_DISCARD_RESULT, emit_type, new_info, NULL_RTX,\n \t\t\trinsn);\n-      return;\n+      return VSETVL_DISCARD_RESULT;\n     }\n \n   /* Use X0 as the DestReg unless AVLReg is X0. We also need to change the\n@@ -748,10 +732,10 @@ insert_vsetvl (enum emit_type emit_type, rtx_insn *rinsn,\n   if (vlmax_avl_p (info.get_avl ()))\n     {\n       gcc_assert (has_vtype_op (rinsn) || vsetvl_insn_p (rinsn));\n-      rtx vl_op = get_vl (rinsn);\n+      rtx vl_op = info.get_avl_reg_rtx ();\n       gcc_assert (!vlmax_avl_p (vl_op));\n       emit_vsetvl_insn (VSETVL_NORMAL, emit_type, info, vl_op, rinsn);\n-      return;\n+      return VSETVL_NORMAL;\n     }\n \n   emit_vsetvl_insn (VSETVL_DISCARD_RESULT, emit_type, info, NULL_RTX, rinsn);\n@@ -761,6 +745,7 @@ insert_vsetvl (enum emit_type emit_type, rtx_insn *rinsn,\n       fprintf (dump_file, \"Update VL/VTYPE info, previous info=\");\n       prev_info.dump (dump_file);\n     }\n+  return VSETVL_DISCARD_RESULT;\n }\n \n /* If X contains any LABEL_REF's, add REG_LABEL_OPERAND notes for them\n@@ -890,8 +875,16 @@ get_vl_vtype_info (const insn_info *insn)\n {\n   set_info *set = nullptr;\n   rtx avl = ::get_avl (insn->rtl ());\n-  if (avl && REG_P (avl) && !vlmax_avl_p (avl))\n-    set = find_access (insn->uses (), REGNO (avl))->def ();\n+  if (avl && REG_P (avl))\n+    {\n+      if (vlmax_avl_p (avl) && has_vl_op (insn->rtl ()))\n+\tset\n+\t  = find_access (insn->uses (), REGNO (get_vl (insn->rtl ())))->def ();\n+      else if (!vlmax_avl_p (avl))\n+\tset = find_access (insn->uses (), REGNO (avl))->def ();\n+      else\n+\tset = nullptr;\n+    }\n \n   uint8_t sew = get_sew (insn->rtl ());\n   enum vlmul_type vlmul = get_vlmul (insn->rtl ());\n@@ -939,6 +932,36 @@ change_insn (rtx_insn *rinsn, rtx new_pat)\n     }\n }\n \n+static const insn_info *\n+get_forward_read_vl_insn (const insn_info *insn)\n+{\n+  const bb_info *bb = insn->bb ();\n+  for (const insn_info *i = insn->next_nondebug_insn ();\n+       real_insn_and_same_bb_p (i, bb); i = i->next_nondebug_insn ())\n+    {\n+      if (find_access (i->defs (), VL_REGNUM))\n+\treturn nullptr;\n+      if (read_vl_insn_p (i->rtl ()))\n+\treturn i;\n+    }\n+  return nullptr;\n+}\n+\n+static const insn_info *\n+get_backward_fault_first_load_insn (const insn_info *insn)\n+{\n+  const bb_info *bb = insn->bb ();\n+  for (const insn_info *i = insn->prev_nondebug_insn ();\n+       real_insn_and_same_bb_p (i, bb); i = i->prev_nondebug_insn ())\n+    {\n+      if (fault_first_load_p (i->rtl ()))\n+\treturn i;\n+      if (find_access (i->defs (), VL_REGNUM))\n+\treturn nullptr;\n+    }\n+  return nullptr;\n+}\n+\n static bool\n change_insn (function_info *ssa, insn_change change, insn_info *insn,\n \t     rtx new_pat)\n@@ -1044,6 +1067,12 @@ source_equal_p (insn_info *insn1, insn_info *insn2)\n   rtx note2 = find_reg_equal_equiv_note (rinsn2);\n   rtx single_set1 = single_set (rinsn1);\n   rtx single_set2 = single_set (rinsn2);\n+  if (read_vl_insn_p (rinsn1) && read_vl_insn_p (rinsn2))\n+    {\n+      const insn_info *load1 = get_backward_fault_first_load_insn (insn1);\n+      const insn_info *load2 = get_backward_fault_first_load_insn (insn2);\n+      return load1 && load2 && load1 == load2;\n+    }\n \n   if (note1 && note2 && rtx_equal_p (note1, note2))\n     return true;\n@@ -1072,47 +1101,497 @@ source_equal_p (insn_info *insn1, insn_info *insn2)\n \treturn true;\n     }\n \n-  /* We only handle AVL is set by instructions with no side effects.  */\n-  if (!single_set1 || !single_set2)\n-    return false;\n-  if (!rtx_equal_p (SET_SRC (single_set1), SET_SRC (single_set2)))\n-    return false;\n-  gcc_assert (insn1->uses ().size () == insn2->uses ().size ());\n-  for (size_t i = 0; i < insn1->uses ().size (); i++)\n-    if (insn1->uses ()[i] != insn2->uses ()[i])\n-      return false;\n+  /* We only handle AVL is set by instructions with no side effects.  */\n+  if (!single_set1 || !single_set2)\n+    return false;\n+  if (!rtx_equal_p (SET_SRC (single_set1), SET_SRC (single_set2)))\n+    return false;\n+  gcc_assert (insn1->uses ().size () == insn2->uses ().size ());\n+  for (size_t i = 0; i < insn1->uses ().size (); i++)\n+    if (insn1->uses ()[i] != insn2->uses ()[i])\n+      return false;\n+  return true;\n+}\n+\n+/* Helper function to get single same real RTL source.\n+   return NULL if it is not a single real RTL source.  */\n+static insn_info *\n+extract_single_source (set_info *set)\n+{\n+  if (!set)\n+    return nullptr;\n+  if (set->insn ()->is_real ())\n+    return set->insn ();\n+  if (!set->insn ()->is_phi ())\n+    return nullptr;\n+  hash_set<set_info *> sets = get_all_sets (set, true, false, true);\n+\n+  insn_info *first_insn = (*sets.begin ())->insn ();\n+  if (first_insn->is_artificial ())\n+    return nullptr;\n+  for (const set_info *set : sets)\n+    {\n+      /* If there is a head or end insn, we conservative return\n+\t NULL so that VSETVL PASS will insert vsetvl directly.  */\n+      if (set->insn ()->is_artificial ())\n+\treturn nullptr;\n+      if (!source_equal_p (set->insn (), first_insn))\n+\treturn nullptr;\n+    }\n+\n+  return first_insn;\n+}\n+\n+static unsigned\n+calculate_sew (vlmul_type vlmul, unsigned int ratio)\n+{\n+  for (const unsigned sew : ALL_SEW)\n+    if (calculate_ratio (sew, vlmul) == ratio)\n+      return sew;\n+  return 0;\n+}\n+\n+static vlmul_type\n+calculate_vlmul (unsigned int sew, unsigned int ratio)\n+{\n+  for (const vlmul_type vlmul : ALL_LMUL)\n+    if (calculate_ratio (sew, vlmul) == ratio)\n+      return vlmul;\n+  return LMUL_RESERVED;\n+}\n+\n+static bool\n+incompatible_avl_p (const vector_insn_info &info1,\n+\t\t    const vector_insn_info &info2)\n+{\n+  return !info1.compatible_avl_p (info2) && !info2.compatible_avl_p (info1);\n+}\n+\n+static bool\n+different_sew_p (const vector_insn_info &info1, const vector_insn_info &info2)\n+{\n+  return info1.get_sew () != info2.get_sew ();\n+}\n+\n+static bool\n+different_lmul_p (const vector_insn_info &info1, const vector_insn_info &info2)\n+{\n+  return info1.get_vlmul () != info2.get_vlmul ();\n+}\n+\n+static bool\n+different_ratio_p (const vector_insn_info &info1, const vector_insn_info &info2)\n+{\n+  return info1.get_ratio () != info2.get_ratio ();\n+}\n+\n+static bool\n+different_tail_policy_p (const vector_insn_info &info1,\n+\t\t\t const vector_insn_info &info2)\n+{\n+  return info1.get_ta () != info2.get_ta ();\n+}\n+\n+static bool\n+different_mask_policy_p (const vector_insn_info &info1,\n+\t\t\t const vector_insn_info &info2)\n+{\n+  return info1.get_ma () != info2.get_ma ();\n+}\n+\n+static bool\n+possible_zero_avl_p (const vector_insn_info &info1,\n+\t\t     const vector_insn_info &info2)\n+{\n+  return !info1.has_non_zero_avl () || !info2.has_non_zero_avl ();\n+}\n+\n+static bool\n+second_ratio_invalid_for_first_sew_p (const vector_insn_info &info1,\n+\t\t\t\t      const vector_insn_info &info2)\n+{\n+  return calculate_vlmul (info1.get_sew (), info2.get_ratio ())\n+\t == LMUL_RESERVED;\n+}\n+\n+static bool\n+second_ratio_invalid_for_first_lmul_p (const vector_insn_info &info1,\n+\t\t\t\t       const vector_insn_info &info2)\n+{\n+  return calculate_sew (info1.get_vlmul (), info2.get_ratio ()) == 0;\n+}\n+\n+static bool\n+second_sew_less_than_first_sew_p (const vector_insn_info &info1,\n+\t\t\t\t  const vector_insn_info &info2)\n+{\n+  return info2.get_sew () < info1.get_sew ();\n+}\n+\n+static bool\n+first_sew_less_than_second_sew_p (const vector_insn_info &info1,\n+\t\t\t\t  const vector_insn_info &info2)\n+{\n+  return info1.get_sew () < info2.get_sew ();\n+}\n+\n+/* return 0 if LMUL1 == LMUL2.\n+   return -1 if LMUL1 < LMUL2.\n+   return 1 if LMUL1 > LMUL2.  */\n+static int\n+compare_lmul (vlmul_type vlmul1, vlmul_type vlmul2)\n+{\n+  if (vlmul1 == vlmul2)\n+    return 0;\n+\n+  switch (vlmul1)\n+    {\n+    case LMUL_1:\n+      if (vlmul2 == LMUL_2 || vlmul2 == LMUL_4 || vlmul2 == LMUL_8)\n+\treturn 1;\n+      else\n+\treturn -1;\n+    case LMUL_2:\n+      if (vlmul2 == LMUL_4 || vlmul2 == LMUL_8)\n+\treturn 1;\n+      else\n+\treturn -1;\n+    case LMUL_4:\n+      if (vlmul2 == LMUL_8)\n+\treturn 1;\n+      else\n+\treturn -1;\n+    case LMUL_8:\n+      return -1;\n+    case LMUL_F2:\n+      if (vlmul2 == LMUL_1 || vlmul2 == LMUL_2 || vlmul2 == LMUL_4\n+\t  || vlmul2 == LMUL_8)\n+\treturn 1;\n+      else\n+\treturn -1;\n+    case LMUL_F4:\n+      if (vlmul2 == LMUL_F2 || vlmul2 == LMUL_1 || vlmul2 == LMUL_2\n+\t  || vlmul2 == LMUL_4 || vlmul2 == LMUL_8)\n+\treturn 1;\n+      else\n+\treturn -1;\n+    case LMUL_F8:\n+      return 0;\n+    default:\n+      gcc_unreachable ();\n+    }\n+}\n+\n+static bool\n+second_lmul_less_than_first_lmul_p (const vector_insn_info &info1,\n+\t\t\t\t    const vector_insn_info &info2)\n+{\n+  return compare_lmul (info2.get_vlmul (), info1.get_vlmul ()) == -1;\n+}\n+\n+static bool\n+second_ratio_less_than_first_ratio_p (const vector_insn_info &info1,\n+\t\t\t\t      const vector_insn_info &info2)\n+{\n+  return info2.get_ratio () < info1.get_ratio ();\n+}\n+\n+static CONSTEXPR const demands_cond incompatible_conds[] = {\n+#define DEF_INCOMPATIBLE_COND(AVL1, SEW1, LMUL1, RATIO1, NONZERO_AVL1,         \\\n+\t\t\t      GE_SEW1, TAIL_POLICTY1, MASK_POLICY1, AVL2,      \\\n+\t\t\t      SEW2, LMUL2, RATIO2, NONZERO_AVL2, GE_SEW2,      \\\n+\t\t\t      TAIL_POLICTY2, MASK_POLICY2, COND)               \\\n+  {{{AVL1, SEW1, LMUL1, RATIO1, NONZERO_AVL1, GE_SEW1, TAIL_POLICTY1,          \\\n+     MASK_POLICY1},                                                            \\\n+    {AVL2, SEW2, LMUL2, RATIO2, NONZERO_AVL2, GE_SEW2, TAIL_POLICTY2,          \\\n+     MASK_POLICY2}},                                                           \\\n+   COND},\n+#include \"riscv-vsetvl.def\"\n+};\n+\n+static unsigned\n+greatest_sew (const vector_insn_info &info1, const vector_insn_info &info2)\n+{\n+  return std::max (info1.get_sew (), info2.get_sew ());\n+}\n+\n+static unsigned\n+first_sew (const vector_insn_info &info1, const vector_insn_info &)\n+{\n+  return info1.get_sew ();\n+}\n+\n+static unsigned\n+second_sew (const vector_insn_info &, const vector_insn_info &info2)\n+{\n+  return info2.get_sew ();\n+}\n+\n+static vlmul_type\n+first_vlmul (const vector_insn_info &info1, const vector_insn_info &)\n+{\n+  return info1.get_vlmul ();\n+}\n+\n+static vlmul_type\n+second_vlmul (const vector_insn_info &, const vector_insn_info &info2)\n+{\n+  return info2.get_vlmul ();\n+}\n+\n+static unsigned\n+first_ratio (const vector_insn_info &info1, const vector_insn_info &)\n+{\n+  return info1.get_ratio ();\n+}\n+\n+static unsigned\n+second_ratio (const vector_insn_info &, const vector_insn_info &info2)\n+{\n+  return info2.get_ratio ();\n+}\n+\n+static vlmul_type\n+vlmul_for_first_sew_second_ratio (const vector_insn_info &info1,\n+\t\t\t\t  const vector_insn_info &info2)\n+{\n+  return calculate_vlmul (info1.get_sew (), info2.get_ratio ());\n+}\n+\n+static unsigned\n+ratio_for_second_sew_first_vlmul (const vector_insn_info &info1,\n+\t\t\t\t  const vector_insn_info &info2)\n+{\n+  return calculate_ratio (info2.get_sew (), info1.get_vlmul ());\n+}\n+\n+static CONSTEXPR const demands_fuse_rule fuse_rules[] = {\n+#define DEF_SEW_LMUL_FUSE_RULE(DEMAND_SEW1, DEMAND_LMUL1, DEMAND_RATIO1,       \\\n+\t\t\t       DEMAND_GE_SEW1, DEMAND_SEW2, DEMAND_LMUL2,      \\\n+\t\t\t       DEMAND_RATIO2, DEMAND_GE_SEW2, NEW_DEMAND_SEW,  \\\n+\t\t\t       NEW_DEMAND_LMUL, NEW_DEMAND_RATIO,              \\\n+\t\t\t       NEW_DEMAND_GE_SEW, NEW_SEW, NEW_VLMUL,          \\\n+\t\t\t       NEW_RATIO)                                      \\\n+  {{{DEMAND_ANY, DEMAND_SEW1, DEMAND_LMUL1, DEMAND_RATIO1, DEMAND_ANY,         \\\n+     DEMAND_GE_SEW1, DEMAND_ANY, DEMAND_ANY},                                  \\\n+    {DEMAND_ANY, DEMAND_SEW2, DEMAND_LMUL2, DEMAND_RATIO2, DEMAND_ANY,         \\\n+     DEMAND_GE_SEW2, DEMAND_ANY, DEMAND_ANY}},                                 \\\n+   NEW_DEMAND_SEW,                                                             \\\n+   NEW_DEMAND_LMUL,                                                            \\\n+   NEW_DEMAND_RATIO,                                                           \\\n+   NEW_DEMAND_GE_SEW,                                                          \\\n+   NEW_SEW,                                                                    \\\n+   NEW_VLMUL,                                                                  \\\n+   NEW_RATIO},\n+#include \"riscv-vsetvl.def\"\n+};\n+\n+static bool\n+always_unavailable (const vector_insn_info &, const vector_insn_info &)\n+{\n+  return true;\n+}\n+\n+static bool\n+avl_unavailable_p (const vector_insn_info &info1, const vector_insn_info &info2)\n+{\n+  return !info2.compatible_avl_p (info1.get_avl_info ());\n+}\n+\n+static bool\n+sew_unavailable_p (const vector_insn_info &info1, const vector_insn_info &info2)\n+{\n+  if (!info2.demand_p (DEMAND_LMUL) && !info2.demand_p (DEMAND_RATIO))\n+    {\n+      if (info2.demand_p (DEMAND_GE_SEW))\n+\treturn info1.get_sew () < info2.get_sew ();\n+      return info1.get_sew () != info2.get_sew ();\n+    }\n+  return true;\n+}\n+\n+static bool\n+lmul_unavailable_p (const vector_insn_info &info1,\n+\t\t    const vector_insn_info &info2)\n+{\n+  if (info1.get_vlmul () == info2.get_vlmul () && !info2.demand_p (DEMAND_SEW)\n+      && !info2.demand_p (DEMAND_RATIO))\n+    return false;\n+  return true;\n+}\n+\n+static bool\n+ge_sew_unavailable_p (const vector_insn_info &info1,\n+\t\t      const vector_insn_info &info2)\n+{\n+  if (!info2.demand_p (DEMAND_LMUL) && !info2.demand_p (DEMAND_RATIO)\n+      && info2.demand_p (DEMAND_GE_SEW))\n+    return info1.get_sew () < info2.get_sew ();\n+  return true;\n+}\n+\n+static bool\n+ge_sew_lmul_unavailable_p (const vector_insn_info &info1,\n+\t\t\t   const vector_insn_info &info2)\n+{\n+  if (!info2.demand_p (DEMAND_RATIO) && info2.demand_p (DEMAND_GE_SEW))\n+    return info1.get_sew () < info2.get_sew ();\n+  return true;\n+}\n+\n+static bool\n+ge_sew_ratio_unavailable_p (const vector_insn_info &info1,\n+\t\t\t    const vector_insn_info &info2)\n+{\n+  if (!info2.demand_p (DEMAND_LMUL) && info2.demand_p (DEMAND_GE_SEW))\n+    return info1.get_sew () < info2.get_sew ();\n+  return true;\n+}\n+\n+static CONSTEXPR const demands_cond unavailable_conds[] = {\n+#define DEF_UNAVAILABLE_COND(AVL1, SEW1, LMUL1, RATIO1, NONZERO_AVL1, GE_SEW1, \\\n+\t\t\t     TAIL_POLICTY1, MASK_POLICY1, AVL2, SEW2, LMUL2,   \\\n+\t\t\t     RATIO2, NONZERO_AVL2, GE_SEW2, TAIL_POLICTY2,     \\\n+\t\t\t     MASK_POLICY2, COND)                               \\\n+  {{{AVL1, SEW1, LMUL1, RATIO1, NONZERO_AVL1, GE_SEW1, TAIL_POLICTY1,          \\\n+     MASK_POLICY1},                                                            \\\n+    {AVL2, SEW2, LMUL2, RATIO2, NONZERO_AVL2, GE_SEW2, TAIL_POLICTY2,          \\\n+     MASK_POLICY2}},                                                           \\\n+   COND},\n+#include \"riscv-vsetvl.def\"\n+};\n+\n+static bool\n+same_sew_lmul_demand_p (const bool *dems1, const bool *dems2)\n+{\n+  return dems1[DEMAND_SEW] == dems2[DEMAND_SEW]\n+\t && dems1[DEMAND_LMUL] == dems2[DEMAND_LMUL]\n+\t && dems1[DEMAND_RATIO] == dems2[DEMAND_RATIO] && !dems1[DEMAND_GE_SEW]\n+\t && !dems2[DEMAND_GE_SEW];\n+}\n+\n+static bool\n+propagate_avl_across_demands_p (const vector_insn_info &info1,\n+\t\t\t\tconst vector_insn_info &info2)\n+{\n+  if (info2.demand_p (DEMAND_AVL))\n+    {\n+      if (info2.demand_p (DEMAND_NONZERO_AVL))\n+\treturn info1.demand_p (DEMAND_AVL)\n+\t       && !info1.demand_p (DEMAND_NONZERO_AVL) && info1.has_avl_reg ();\n+    }\n+  else\n+    return info1.demand_p (DEMAND_AVL) && info1.has_avl_reg ();\n+  return false;\n+}\n+\n+static bool\n+reg_available_p (const insn_info *insn, const vector_insn_info &info)\n+{\n+  if (info.has_avl_reg () && !info.get_avl_source ())\n+    return false;\n+  insn_info *def_insn = info.get_avl_source ()->insn ();\n+  if (def_insn->bb () == insn->bb ())\n+    return before_p (def_insn, insn);\n+  else\n+    return dominated_by_p (CDI_DOMINATORS, insn->bb ()->cfg_bb (),\n+\t\t\t   def_insn->bb ()->cfg_bb ());\n+}\n+\n+/* Return true if the instruction support relaxed compatible check.  */\n+static bool\n+support_relaxed_compatible_p (const vector_insn_info &info1,\n+\t\t\t      const vector_insn_info &info2)\n+{\n+  if (fault_first_load_p (info1.get_insn ()->rtl ())\n+      && info2.demand_p (DEMAND_AVL) && info2.has_avl_reg ()\n+      && info2.get_avl_source () && info2.get_avl_source ()->insn ()->is_phi ())\n+    {\n+      hash_set<set_info *> sets\n+\t= get_all_sets (info2.get_avl_source (), true, false, false);\n+      for (set_info *set : sets)\n+\t{\n+\t  if (read_vl_insn_p (set->insn ()->rtl ()))\n+\t    {\n+\t      const insn_info *insn\n+\t\t= get_backward_fault_first_load_insn (set->insn ());\n+\t      if (insn == info1.get_insn ())\n+\t\treturn info2.compatible_vtype_p (info1);\n+\t    }\n+\t}\n+    }\n+  return false;\n+}\n+\n+/* Return true if the block is worthwhile backward propagation.  */\n+static bool\n+backward_propagate_worthwhile_p (const basic_block cfg_bb,\n+\t\t\t\t const vector_block_info block_info)\n+{\n+  if (loop_basic_block_p (cfg_bb))\n+    {\n+      if (block_info.reaching_out.valid_or_dirty_p ())\n+\t{\n+\t  if (block_info.local_dem.compatible_p (block_info.reaching_out))\n+\t    {\n+\t      /* Case 1 (Can backward propagate):\n+\t\t ....\n+\t\t bb0:\n+\t\t ...\n+\t\t for (int i = 0; i < n; i++)\n+\t\t   {\n+\t\t     vint16mf4_t v = __riscv_vle16_v_i16mf4 (in + i + 5, 7);\n+\t\t     __riscv_vse16_v_i16mf4 (out + i + 5, v, 7);\n+\t\t   }\n+\t\t The local_dem is compatible with reaching_out. Such case is\n+\t\t worthwhile backward propagation.  */\n+\t      return true;\n+\t    }\n+\t  else\n+\t    {\n+\t      if (support_relaxed_compatible_p (block_info.reaching_out,\n+\t\t\t\t\t\tblock_info.local_dem))\n+\t\treturn true;\n+\t      /* Case 2 (Don't backward propagate):\n+\t\t    ....\n+\t\t    bb0:\n+\t\t    ...\n+\t\t    for (int i = 0; i < n; i++)\n+\t\t      {\n+\t\t\tvint16mf4_t v = __riscv_vle16_v_i16mf4 (in + i + 5, 7);\n+\t\t\t__riscv_vse16_v_i16mf4 (out + i + 5, v, 7);\n+\t\t\tvint16mf2_t v2 = __riscv_vle16_v_i16mf2 (in + i + 6, 8);\n+\t\t\t__riscv_vse16_v_i16mf2 (out + i + 6, v, 8);\n+\t\t      }\n+\t\t The local_dem is incompatible with reaching_out.\n+\t\t It makes no sense to backward propagate the local_dem since we\n+\t\t can't avoid VSETVL inside the loop.  */\n+\t      return false;\n+\t    }\n+\t}\n+      else\n+\t{\n+\t  gcc_assert (block_info.reaching_out.unknown_p ());\n+\t  /* Case 3 (Don't backward propagate):\n+\t\t....\n+\t\tbb0:\n+\t\t...\n+\t\tfor (int i = 0; i < n; i++)\n+\t\t  {\n+\t\t    vint16mf4_t v = __riscv_vle16_v_i16mf4 (in + i + 5, 7);\n+\t\t    __riscv_vse16_v_i16mf4 (out + i + 5, v, 7);\n+\t\t    fn3 ();\n+\t\t  }\n+\t    The local_dem is VALID, but the reaching_out is UNKNOWN.\n+\t    It makes no sense to backward propagate the local_dem since we\n+\t    can't avoid VSETVL inside the loop.  */\n+\t  return false;\n+\t}\n+    }\n+\n   return true;\n }\n \n-/* Helper function to get single same real RTL source.\n-   return NULL if it is not a single real RTL source.  */\n-static insn_info *\n-extract_single_source (set_info *set)\n-{\n-  if (!set)\n-    return nullptr;\n-  if (set->insn ()->is_real ())\n-    return set->insn ();\n-  if (!set->insn ()->is_phi ())\n-    return nullptr;\n-  hash_set<set_info *> sets = get_all_sets (set, true, false, true);\n-\n-  insn_info *first_insn = (*sets.begin ())->insn ();\n-  if (first_insn->is_artificial ())\n-    return nullptr;\n-  for (const set_info *set : sets)\n-    {\n-      /* If there is a head or end insn, we conservative return\n-\t NULL so that VSETVL PASS will insert vsetvl directly.  */\n-      if (set->insn ()->is_artificial ())\n-\treturn nullptr;\n-      if (!source_equal_p (set->insn (), first_insn))\n-\treturn nullptr;\n-    }\n-\n-  return first_insn;\n-}\n-\n avl_info::avl_info (const avl_info &other)\n {\n   m_value = other.get_value ();\n@@ -1251,6 +1730,16 @@ avl_info::operator!= (const avl_info &other) const\n   return !(*this == other);\n }\n \n+bool\n+avl_info::has_non_zero_avl () const\n+{\n+  if (has_avl_imm ())\n+    return INTVAL (get_value ()) > 0;\n+  if (has_avl_reg ())\n+    return vlmax_avl_p (get_value ());\n+  return false;\n+}\n+\n /* Initialize VL/VTYPE information.  */\n vl_vtype_info::vl_vtype_info (avl_info avl_in, uint8_t sew_in,\n \t\t\t      enum vlmul_type vlmul_in, uint8_t ratio_in,\n@@ -1275,16 +1764,6 @@ vl_vtype_info::operator!= (const vl_vtype_info &other) const\n   return !(*this == other);\n }\n \n-bool\n-vl_vtype_info::has_non_zero_avl () const\n-{\n-  if (has_avl_imm ())\n-    return INTVAL (get_avl ()) > 0;\n-  if (has_avl_reg ())\n-    return vlmax_avl_p (get_avl ());\n-  return false;\n-}\n-\n bool\n vl_vtype_info::same_avl_p (const vl_vtype_info &other) const\n {\n@@ -1314,49 +1793,33 @@ vl_vtype_info::same_vlmax_p (const vl_vtype_info &other) const\n    meaning Dem1 is easier be compatible with others than Dem2\n    or Dem2 is stricter than Dem1.\n    For example, Dem1 (demand SEW + LMUL) > Dem2 (demand RATIO).  */\n-bool\n-vector_insn_info::operator> (const vector_insn_info &other) const\n-{\n-  if (other.compatible_p (static_cast<const vl_vtype_info &> (*this))\n-      && !this->compatible_p (static_cast<const vl_vtype_info &> (other)))\n-    return true;\n-  return false;\n-}\n-\n bool\n vector_insn_info::operator>= (const vector_insn_info &other) const\n {\n-  if (*this > other)\n-    return true;\n-\n-  if (*this == other)\n-    return true;\n-\n-  if (!compatible_p (other))\n-    return false;\n-\n-  if (!demand_p (DEMAND_AVL) && other.demand_p (DEMAND_AVL))\n-    return false;\n-\n-  if (same_vlmax_p (other))\n+  if (support_relaxed_compatible_p (*this, other))\n     {\n-      if (demand_p (DEMAND_RATIO) && !other.demand_p (DEMAND_RATIO)\n-\t  && (get_sew () != other.get_sew ()\n-\t      || get_vlmul () != other.get_vlmul ()))\n-\treturn false;\n-\n-      if (get_sew () == other.get_sew () && get_vlmul () == other.get_vlmul ())\n-\t{\n-\t  if (demand_p (DEMAND_RATIO) && !other.demand_p (DEMAND_RATIO))\n-\t    return false;\n-\t}\n+      unsigned array_size = sizeof (unavailable_conds) / sizeof (demands_cond);\n+      /* Bypass AVL unavailable cases.  */\n+      for (unsigned i = 2; i < array_size; i++)\n+\tif (unavailable_conds[i].pair.match_cond_p (this->get_demands (),\n+\t\t\t\t\t\t    other.get_demands ())\n+\t    && unavailable_conds[i].incompatible_p (*this, other))\n+\t  return false;\n+      return true;\n     }\n \n-  if (!demand_p (DEMAND_TAIL_POLICY) && other.demand_p (DEMAND_TAIL_POLICY))\n+  if (!other.compatible_p (static_cast<const vl_vtype_info &> (*this)))\n     return false;\n+  if (!this->compatible_p (static_cast<const vl_vtype_info &> (other)))\n+    return true;\n \n-  if (!demand_p (DEMAND_MASK_POLICY) && other.demand_p (DEMAND_MASK_POLICY))\n-    return false;\n+  if (*this == other)\n+    return true;\n+\n+  for (const auto &cond : unavailable_conds)\n+    if (cond.pair.match_cond_p (this->get_demands (), other.get_demands ())\n+\t&& cond.incompatible_p (*this, other))\n+      return false;\n \n   return true;\n }\n@@ -1431,7 +1894,7 @@ vector_insn_info::parse_insn (insn_info *insn)\n \n   /* If this is something that updates VL/VTYPE that we don't know about, set\n      the state to unknown.  */\n-  if (!vector_config_insn_p (insn->rtl ())\n+  if (!vector_config_insn_p (insn->rtl ()) && !has_vtype_op (insn->rtl ())\n       && (find_access (insn->defs (), VL_REGNUM)\n \t  || find_access (insn->defs (), VTYPE_REGNUM)))\n     {\n@@ -1467,7 +1930,8 @@ vector_insn_info::parse_insn (insn_info *insn)\n \t demand SEW && LMUL both. Some instructions may demand SEW\n \t only and ignore LMUL, will fix it later.  */\n       m_demands[DEMAND_SEW] = true;\n-      m_demands[DEMAND_LMUL] = true;\n+      if (!ignore_vlmul_insn_p (insn->rtl ()))\n+\tm_demands[DEMAND_LMUL] = true;\n     }\n \n   if (get_attr_ta (insn->rtl ()) != INVALID_ATTRIBUTE)\n@@ -1478,32 +1942,34 @@ vector_insn_info::parse_insn (insn_info *insn)\n   if (vector_config_insn_p (insn->rtl ()))\n     return;\n \n-  if (!has_avl_reg () || !m_avl.get_source ()\n-      || !m_avl.get_source ()->insn ()->is_phi ())\n+  if (scalar_move_insn_p (insn->rtl ()))\n+    {\n+      if (m_avl.has_non_zero_avl ())\n+\tm_demands[DEMAND_NONZERO_AVL] = true;\n+      if (m_ta)\n+\tm_demands[DEMAND_GE_SEW] = true;\n+    }\n+\n+  if (!m_avl.has_avl_reg () || vlmax_avl_p (get_avl ()) || !m_avl.get_source ())\n+    return;\n+  if (!m_avl.get_source ()->insn ()->is_real ()\n+      && !m_avl.get_source ()->insn ()->is_phi ())\n     return;\n \n   insn_info *def_insn = extract_single_source (m_avl.get_source ());\n-  if (def_insn)\n-    {\n-      vector_insn_info new_info;\n-      new_info.parse_insn (def_insn);\n-      if (!same_vlmax_p (new_info))\n-\treturn;\n-      /* TODO: Currently, we don't forward AVL for non-VLMAX vsetvl.  */\n-      if (vlmax_avl_p (new_info.get_avl ()))\n-\tset_avl_info (new_info.get_avl_info ());\n-    }\n-}\n+  if (!def_insn || !vsetvl_insn_p (def_insn->rtl ()))\n+    return;\n \n-void\n-vector_insn_info::demand_vl_vtype ()\n-{\n-  m_state = VALID;\n-  m_demands[DEMAND_AVL] = true;\n-  m_demands[DEMAND_SEW] = true;\n-  m_demands[DEMAND_LMUL] = true;\n-  m_demands[DEMAND_TAIL_POLICY] = true;\n-  m_demands[DEMAND_MASK_POLICY] = true;\n+  vector_insn_info new_info;\n+  new_info.parse_insn (def_insn);\n+  if (!same_vlmax_p (new_info) && !scalar_move_insn_p (insn->rtl ()))\n+    return;\n+  /* TODO: Currently, we don't forward AVL for non-VLMAX vsetvl.  */\n+  if (vlmax_avl_p (new_info.get_avl ()))\n+    set_avl_info (avl_info (new_info.get_avl (), get_avl_source ()));\n+\n+  if (scalar_move_insn_p (insn->rtl ()) && m_avl.has_non_zero_avl ())\n+    m_demands[DEMAND_NONZERO_AVL] = true;\n }\n \n bool\n@@ -1512,37 +1978,9 @@ vector_insn_info::compatible_p (const vector_insn_info &other) const\n   gcc_assert (valid_or_dirty_p () && other.valid_or_dirty_p ()\n \t      && \"Can't compare invalid demanded infos\");\n \n-  /* Check SEW.  */\n-  if (demand_p (DEMAND_SEW) && other.demand_p (DEMAND_SEW)\n-      && get_sew () != other.get_sew ())\n-    return false;\n-\n-  /* Check LMUL.  */\n-  if (demand_p (DEMAND_LMUL) && other.demand_p (DEMAND_LMUL)\n-      && get_vlmul () != other.get_vlmul ())\n-    return false;\n-\n-  /* Check RATIO.  */\n-  if (demand_p (DEMAND_RATIO) && other.demand_p (DEMAND_RATIO)\n-      && get_ratio () != other.get_ratio ())\n-    return false;\n-  if (demand_p (DEMAND_RATIO) && (other.get_sew () || other.get_vlmul ())\n-      && get_ratio () != other.get_ratio ())\n-    return false;\n-  if (other.demand_p (DEMAND_RATIO) && (get_sew () || get_vlmul ())\n-      && get_ratio () != other.get_ratio ())\n-    return false;\n-\n-  if (demand_p (DEMAND_TAIL_POLICY) && other.demand_p (DEMAND_TAIL_POLICY)\n-      && get_ta () != other.get_ta ())\n-    return false;\n-  if (demand_p (DEMAND_MASK_POLICY) && other.demand_p (DEMAND_MASK_POLICY)\n-      && get_ma () != other.get_ma ())\n-    return false;\n-\n-  if (demand_p (DEMAND_AVL) && other.demand_p (DEMAND_AVL))\n-    return compatible_avl_p (other);\n-\n+  for (const auto &cond : incompatible_conds)\n+    if (cond.dual_incompatible_p (*this, other))\n+      return false;\n   return true;\n }\n \n@@ -1553,6 +1991,8 @@ vector_insn_info::compatible_avl_p (const vl_vtype_info &other) const\n   gcc_assert (!unknown_p () && \"Can't compare AVL in unknown state\");\n   if (!demand_p (DEMAND_AVL))\n     return true;\n+  if (demand_p (DEMAND_NONZERO_AVL) && other.has_non_zero_avl ())\n+    return true;\n   return get_avl_info () == other.get_avl_info ();\n }\n \n@@ -1562,6 +2002,10 @@ vector_insn_info::compatible_avl_p (const avl_info &other) const\n   gcc_assert (valid_or_dirty_p () && \"Can't compare invalid vl_vtype_info\");\n   gcc_assert (!unknown_p () && \"Can't compare AVL in unknown state\");\n   gcc_assert (demand_p (DEMAND_AVL) && \"Can't compare AVL undemand state\");\n+  if (!demand_p (DEMAND_AVL))\n+    return true;\n+  if (demand_p (DEMAND_NONZERO_AVL) && other.has_non_zero_avl ())\n+    return true;\n   return get_avl_info () == other;\n }\n \n@@ -1570,8 +2014,13 @@ vector_insn_info::compatible_vtype_p (const vl_vtype_info &other) const\n {\n   gcc_assert (valid_or_dirty_p () && \"Can't compare invalid vl_vtype_info\");\n   gcc_assert (!unknown_p () && \"Can't compare VTYPE in unknown state\");\n-  if (demand_p (DEMAND_SEW) && m_sew != other.get_sew ())\n-    return false;\n+  if (demand_p (DEMAND_SEW))\n+    {\n+      if (!demand_p (DEMAND_GE_SEW) && m_sew != other.get_sew ())\n+\treturn false;\n+      if (demand_p (DEMAND_GE_SEW) && m_sew > other.get_sew ())\n+\treturn false;\n+    }\n   if (demand_p (DEMAND_LMUL) && m_vlmul != other.get_vlmul ())\n     return false;\n   if (demand_p (DEMAND_RATIO) && m_ratio != other.get_ratio ())\n@@ -1609,117 +2058,175 @@ vector_insn_info::compatible_p (const vl_vtype_info &curr_info) const\n bool\n vector_insn_info::available_p (const vector_insn_info &other) const\n {\n-  if (*this >= other)\n-    return true;\n-  return false;\n+  return *this >= other;\n }\n \n-vector_insn_info\n-vector_insn_info::merge (const vector_insn_info &merge_info,\n-\t\t\t enum merge_type type = LOCAL_MERGE) const\n+void\n+vector_insn_info::fuse_avl (const vector_insn_info &info1,\n+\t\t\t    const vector_insn_info &info2)\n {\n-  if (!vsetvl_insn_p (get_insn ()->rtl ()))\n-    gcc_assert (this->compatible_p (merge_info)\n-\t\t&& \"Can't merge incompatible demanded infos\");\n+  set_insn (info1.get_insn ());\n+  if (info1.demand_p (DEMAND_AVL))\n+    {\n+      if (info1.demand_p (DEMAND_NONZERO_AVL))\n+\t{\n+\t  if (info2.demand_p (DEMAND_AVL)\n+\t      && !info2.demand_p (DEMAND_NONZERO_AVL))\n+\t    {\n+\t      set_avl_info (info2.get_avl_info ());\n+\t      set_demand (DEMAND_AVL, true);\n+\t      set_demand (DEMAND_NONZERO_AVL, false);\n+\t      return;\n+\t    }\n+\t}\n+      set_avl_info (info1.get_avl_info ());\n+      set_demand (DEMAND_NONZERO_AVL, info1.demand_p (DEMAND_NONZERO_AVL));\n+    }\n+  else\n+    {\n+      set_avl_info (info2.get_avl_info ());\n+      set_demand (DEMAND_NONZERO_AVL, info2.demand_p (DEMAND_NONZERO_AVL));\n+    }\n+  set_demand (DEMAND_AVL,\n+\t      info1.demand_p (DEMAND_AVL) || info2.demand_p (DEMAND_AVL));\n+}\n \n-  vector_insn_info new_info;\n-  new_info.demand_vl_vtype ();\n+void\n+vector_insn_info::fuse_sew_lmul (const vector_insn_info &info1,\n+\t\t\t\t const vector_insn_info &info2)\n+{\n+  /* We need to fuse sew && lmul according to demand info:\n \n-  if (type == LOCAL_MERGE)\n+     1. GE_SEW.\n+     2. SEW.\n+     3. LMUL.\n+     4. RATIO.  */\n+  if (same_sew_lmul_demand_p (info1.get_demands (), info2.get_demands ()))\n     {\n-      /* For local backward data flow, we always update INSN && AVL as the\n-\t latest INSN and AVL so that we can keep track status of each INSN.*/\n-      new_info.set_insn (merge_info.get_insn ());\n-      if (merge_info.demand_p (DEMAND_AVL))\n-\tnew_info.set_avl_info (merge_info.get_avl_info ());\n-      else if (demand_p (DEMAND_AVL))\n-\tnew_info.set_avl_info (get_avl_info ());\n+      set_demand (DEMAND_SEW, info2.demand_p (DEMAND_SEW));\n+      set_demand (DEMAND_LMUL, info2.demand_p (DEMAND_LMUL));\n+      set_demand (DEMAND_RATIO, info2.demand_p (DEMAND_RATIO));\n+      set_demand (DEMAND_GE_SEW, info2.demand_p (DEMAND_GE_SEW));\n+      set_sew (info2.get_sew ());\n+      set_vlmul (info2.get_vlmul ());\n+      set_ratio (info2.get_ratio ());\n+      return;\n     }\n-  else\n+  for (const auto &rule : fuse_rules)\n     {\n-      /* For global data flow, we should keep original INSN and AVL if they\n-\t valid since we should keep the life information of each block.\n-\n-\t For example:\n-\t   bb 0 -> bb 1.\n-\t We should keep INSN && AVL of bb 1 since we will eventually emit\n-\t vsetvl instruction according to INSN and AVL of bb 1.  */\n-      new_info.set_insn (get_insn ());\n-      if (demand_p (DEMAND_AVL))\n-\tnew_info.set_avl_info (get_avl_info ());\n-      else if (merge_info.demand_p (DEMAND_AVL))\n-\tnew_info.set_avl_info (merge_info.get_avl_info ());\n-    }\n-\n-  if (!demand_p (DEMAND_AVL) && !merge_info.demand_p (DEMAND_AVL))\n-    new_info.undemand (DEMAND_AVL);\n-  if (!demand_p (DEMAND_SEW) && !merge_info.demand_p (DEMAND_SEW))\n-    new_info.undemand (DEMAND_SEW);\n-  if (!demand_p (DEMAND_LMUL) && !merge_info.demand_p (DEMAND_LMUL))\n-    new_info.undemand (DEMAND_LMUL);\n-\n-  if (!demand_p (DEMAND_TAIL_POLICY)\n-      && !merge_info.demand_p (DEMAND_TAIL_POLICY))\n-    new_info.undemand (DEMAND_TAIL_POLICY);\n-  if (!demand_p (DEMAND_MASK_POLICY)\n-      && !merge_info.demand_p (DEMAND_MASK_POLICY))\n-    new_info.undemand (DEMAND_MASK_POLICY);\n-\n-  if (merge_info.demand_p (DEMAND_SEW))\n-    new_info.set_sew (merge_info.get_sew ());\n-  else if (demand_p (DEMAND_SEW))\n-    new_info.set_sew (get_sew ());\n-\n-  if (merge_info.demand_p (DEMAND_LMUL))\n-    new_info.set_vlmul (merge_info.get_vlmul ());\n-  else if (demand_p (DEMAND_LMUL))\n-    new_info.set_vlmul (get_vlmul ());\n-\n-  if (!new_info.demand_p (DEMAND_SEW) && !new_info.demand_p (DEMAND_LMUL))\n-    {\n-      if (demand_p (DEMAND_RATIO) || merge_info.demand_p (DEMAND_RATIO))\n-\tnew_info.demand (DEMAND_RATIO);\n-      /* Even though we don't demand_p SEW && VLMUL in this case, we still\n-       * need them.  */\n-      if (merge_info.demand_p (DEMAND_RATIO))\n+      if (rule.pair.match_cond_p (info1.get_demands (), info2.get_demands ()))\n \t{\n-\t  new_info.set_sew (merge_info.get_sew ());\n-\t  new_info.set_vlmul (merge_info.get_vlmul ());\n-\t  new_info.set_ratio (merge_info.get_ratio ());\n+\t  set_demand (DEMAND_SEW, rule.demand_sew_p);\n+\t  set_demand (DEMAND_LMUL, rule.demand_lmul_p);\n+\t  set_demand (DEMAND_RATIO, rule.demand_ratio_p);\n+\t  set_demand (DEMAND_GE_SEW, rule.demand_ge_sew_p);\n+\t  set_sew (rule.new_sew (info1, info2));\n+\t  set_vlmul (rule.new_vlmul (info1, info2));\n+\t  set_ratio (rule.new_ratio (info1, info2));\n+\t  return;\n \t}\n-      else if (demand_p (DEMAND_RATIO))\n+      if (rule.pair.match_cond_p (info2.get_demands (), info1.get_demands ()))\n \t{\n-\t  new_info.set_sew (get_sew ());\n-\t  new_info.set_vlmul (get_vlmul ());\n-\t  new_info.set_ratio (get_ratio ());\n+\t  set_demand (DEMAND_SEW, rule.demand_sew_p);\n+\t  set_demand (DEMAND_LMUL, rule.demand_lmul_p);\n+\t  set_demand (DEMAND_RATIO, rule.demand_ratio_p);\n+\t  set_demand (DEMAND_GE_SEW, rule.demand_ge_sew_p);\n+\t  set_sew (rule.new_sew (info2, info1));\n+\t  set_vlmul (rule.new_vlmul (info2, info1));\n+\t  set_ratio (rule.new_ratio (info2, info1));\n+\t  return;\n \t}\n     }\n-  else\n+  gcc_unreachable ();\n+}\n+\n+void\n+vector_insn_info::fuse_tail_policy (const vector_insn_info &info1,\n+\t\t\t\t    const vector_insn_info &info2)\n+{\n+  if (info1.demand_p (DEMAND_TAIL_POLICY))\n+    {\n+      set_ta (info1.get_ta ());\n+      demand (DEMAND_TAIL_POLICY);\n+    }\n+  else if (info2.demand_p (DEMAND_TAIL_POLICY))\n     {\n-      /* when get_attr_ratio is invalid, this kind of instructions\n-\t doesn't care about ratio. However, we still need this value\n-\t in demand_p info backward analysis.  */\n-      new_info.set_ratio (\n-\tcalculate_ratio (new_info.get_sew (), new_info.get_vlmul ()));\n+      set_ta (info2.get_ta ());\n+      demand (DEMAND_TAIL_POLICY);\n     }\n+  else\n+    set_ta (get_default_ta ());\n+}\n \n-  if (merge_info.demand_p (DEMAND_TAIL_POLICY))\n-    new_info.set_ta (merge_info.get_ta ());\n-  else if (demand_p (DEMAND_TAIL_POLICY))\n-    new_info.set_ta (get_ta ());\n+void\n+vector_insn_info::fuse_mask_policy (const vector_insn_info &info1,\n+\t\t\t\t    const vector_insn_info &info2)\n+{\n+  if (info1.demand_p (DEMAND_MASK_POLICY))\n+    {\n+      set_ma (info1.get_ma ());\n+      demand (DEMAND_MASK_POLICY);\n+    }\n+  else if (info2.demand_p (DEMAND_MASK_POLICY))\n+    {\n+      set_ma (info2.get_ma ());\n+      demand (DEMAND_MASK_POLICY);\n+    }\n   else\n-    new_info.set_ta (get_default_ta ());\n+    set_ma (get_default_ma ());\n+}\n+\n+vector_insn_info\n+vector_insn_info::merge (const vector_insn_info &merge_info,\n+\t\t\t enum merge_type type = LOCAL_MERGE) const\n+{\n+  if (!vsetvl_insn_p (get_insn ()->rtl ()))\n+    gcc_assert (this->compatible_p (merge_info)\n+\t\t&& \"Can't merge incompatible demanded infos\");\n \n-  if (merge_info.demand_p (DEMAND_MASK_POLICY))\n-    new_info.set_ma (merge_info.get_ma ());\n-  else if (demand_p (DEMAND_MASK_POLICY))\n-    new_info.set_ma (get_ma ());\n+  vector_insn_info new_info;\n+  new_info.set_valid ();\n+  if (type == LOCAL_MERGE)\n+    {\n+      /* For local backward data flow, we always update INSN && AVL as the\n+\t latest INSN and AVL so that we can keep track status of each INSN.  */\n+      new_info.fuse_avl (merge_info, *this);\n+    }\n   else\n-    new_info.set_ma (get_default_ma ());\n+    {\n+      /* For global data flow, we should keep original INSN and AVL if they\n+      valid since we should keep the life information of each block.\n \n+      For example:\n+\tbb 0 -> bb 1.\n+      We should keep INSN && AVL of bb 1 since we will eventually emit\n+      vsetvl instruction according to INSN and AVL of bb 1.  */\n+      new_info.fuse_avl (*this, merge_info);\n+    }\n+\n+  new_info.fuse_sew_lmul (*this, merge_info);\n+  new_info.fuse_tail_policy (*this, merge_info);\n+  new_info.fuse_mask_policy (*this, merge_info);\n   return new_info;\n }\n \n+bool\n+vector_insn_info::update_fault_first_load_avl (insn_info *insn)\n+{\n+  // Update AVL to vl-output of the fault first load.\n+  const insn_info *read_vl = get_forward_read_vl_insn (insn);\n+  if (read_vl)\n+    {\n+      rtx vl = SET_DEST (PATTERN (read_vl->rtl ()));\n+      def_info *def = find_access (read_vl->defs (), REGNO (vl));\n+      set_info *set = safe_dyn_cast<set_info *> (def);\n+      set_avl_info (avl_info (vl, set));\n+      set_insn (insn);\n+      return true;\n+    }\n+  return false;\n+}\n+\n void\n vector_insn_info::dump (FILE *file) const\n {\n@@ -1740,7 +2247,9 @@ vector_insn_info::dump (FILE *file) const\n     fprintf (file, \"DIRTY,\");\n \n   fprintf (file, \"Demand field={%d(VL),\", demand_p (DEMAND_AVL));\n+  fprintf (file, \"%d(DEMAND_NONZERO_AVL),\", demand_p (DEMAND_NONZERO_AVL));\n   fprintf (file, \"%d(SEW),\", demand_p (DEMAND_SEW));\n+  fprintf (file, \"%d(DEMAND_GE_SEW),\", demand_p (DEMAND_GE_SEW));\n   fprintf (file, \"%d(LMUL),\", demand_p (DEMAND_LMUL));\n   fprintf (file, \"%d(RATIO),\", demand_p (DEMAND_RATIO));\n   fprintf (file, \"%d(TAIL_POLICY),\", demand_p (DEMAND_TAIL_POLICY));\n@@ -1895,6 +2404,8 @@ vector_infos_manager::release (void)\n   if (!vector_exprs.is_empty ())\n     vector_exprs.release ();\n \n+  gcc_assert (to_refine_vsetvls.is_empty ());\n+  gcc_assert (to_delete_vsetvls.is_empty ());\n   if (optimize > 0)\n     free_bitmap_vectors ();\n }\n@@ -2167,8 +2678,19 @@ pass_vsetvl::compute_local_backward_infos (const bb_info *bb)\n       else\n \t{\n \t  gcc_assert (info.valid_p () && \"Unexpected Invalid demanded info\");\n-\t  if (change.valid_p () && change.compatible_p (info))\n-\t    info = change.merge (info);\n+\t  if (change.valid_p ())\n+\t    {\n+\t      if (!(propagate_avl_across_demands_p (change, info)\n+\t\t    && !reg_available_p (insn, change))\n+\t\t  && change.compatible_p (info))\n+\t\t{\n+\t\t  info = change.merge (info);\n+\t\t  /* Fix PR109399, we should update user vsetvl instruction\n+\t\t     if there is a change in demand fusion.  */\n+\t\t  if (vsetvl_insn_p (insn->rtl ()))\n+\t\t    change_vsetvl_insn (insn, info);\n+\t\t}\n+\t    }\n \t  change = info;\n \t}\n     }\n@@ -2187,7 +2709,7 @@ pass_vsetvl::need_vsetvl (const vector_insn_info &require,\n   if (!curr_info.valid_p () || curr_info.unknown_p () || curr_info.uninit_p ())\n     return true;\n \n-  if (require.compatible_p (curr_info))\n+  if (require.compatible_p (static_cast<const vl_vtype_info &> (curr_info)))\n     return false;\n \n   return true;\n@@ -2221,7 +2743,9 @@ pass_vsetvl::transfer_after (vector_insn_info &info, insn_info *insn) const\n       return;\n     }\n \n-  /* TODO: Support fault first load info update VL in the future.  */\n+  if (fault_first_load_p (insn->rtl ())\n+      && info.update_fault_first_load_avl (insn))\n+    return;\n \n   /* If this is something that updates VL/VTYPE that we don't know about, set\n      the state to unknown.  */\n@@ -2243,6 +2767,7 @@ pass_vsetvl::emit_local_forward_vsetvls (const bb_info *bb)\n   for (insn_info *insn : bb->real_nondebug_insns ())\n     {\n       const vector_insn_info prev_info = curr_info;\n+      enum vsetvl_type type = NUM_VSETVL_TYPE;\n       transfer_before (curr_info, insn);\n \n       if (has_vtype_op (insn->rtl ()))\n@@ -2254,10 +2779,25 @@ pass_vsetvl::emit_local_forward_vsetvls (const bb_info *bb)\n \t\t= m_vector_manager->vector_insn_infos[insn->uid ()];\n \t      if (!require.compatible_p (\n \t\t    static_cast<const vl_vtype_info &> (prev_info)))\n-\t\tinsert_vsetvl (EMIT_BEFORE, insn->rtl (), require, prev_info);\n+\t\ttype = insert_vsetvl (EMIT_BEFORE, insn->rtl (), require,\n+\t\t\t\t      prev_info);\n \t    }\n \t}\n \n+      /* Fix the issue of following sequence:\n+\t vsetivli zero, 5\n+\t ....\n+\t vsetvli zero, zero\n+\t vmv.x.s (demand AVL = 8).\n+\t ....\n+\t incorrect: vsetvli zero, zero ===> Since the curr_info is AVL = 8.\n+\t correct: vsetivli zero, 8\n+\t vadd (demand AVL = 8).  */\n+      if (type == VSETVL_VTYPE_CHANGE_ONLY)\n+\t{\n+\t  /* Update the curr_info to be real correct AVL.  */\n+\t  curr_info.set_avl_info (prev_info.get_avl_info ());\n+\t}\n       transfer_after (curr_info, insn);\n     }\n \n@@ -2282,7 +2822,7 @@ pass_vsetvl::get_backward_fusion_type (const bb_info *bb,\n   rtx reg = NULL_RTX;\n \n   /* Case 1: Don't need VL. Just let it backward propagate.  */\n-  if (!has_vl_op (insn->rtl ()))\n+  if (!prop.demand_p (DEMAND_AVL))\n     return VALID_AVL_FUSION;\n   else\n     {\n@@ -2296,16 +2836,16 @@ pass_vsetvl::get_backward_fusion_type (const bb_info *bb,\n \t  gcc_assert (prop.has_avl_reg ());\n \t  if (vlmax_avl_p (prop.get_avl ()))\n \t    /* Check VL operand for vsetvl vl,zero.  */\n-\t    reg = get_vl (insn->rtl ());\n+\t    reg = prop.get_avl_reg_rtx ();\n \t  else\n \t    /* Check AVL operand for vsetvl zero,avl.  */\n-\t    reg = get_avl (insn->rtl ());\n+\t    reg = prop.get_avl ();\n \t}\n     }\n \n   gcc_assert (reg);\n-  def_info *def = find_access (insn->uses (), REGNO (reg))->def ();\n-  if (!def->insn ()->is_phi () && def->insn ()->bb () == insn->bb ())\n+  if (!prop.get_avl_source ()->insn ()->is_phi ()\n+      && prop.get_avl_source ()->insn ()->bb () == insn->bb ())\n     return INVALID_FUSION;\n   hash_set<set_info *> sets\n     = get_all_sets (prop.get_avl_source (), true, true, true);\n@@ -2340,10 +2880,8 @@ pass_vsetvl::hard_empty_block_p (const bb_info *bb,\n \n   basic_block cfg_bb = bb->cfg_bb ();\n   sbitmap avin = m_vector_manager->vector_avin[cfg_bb->index];\n-  rtx avl = vlmax_avl_p (info.get_avl ()) ? get_vl (info.get_insn ()->rtl ())\n-\t\t\t\t\t  : get_avl (info.get_insn ()->rtl ());\n-  insn_info *insn = info.get_insn ();\n-  set_info *set = find_access (insn->uses (), REGNO (avl))->def ();\n+  set_info *set = info.get_avl_source ();\n+  rtx avl = gen_rtx_REG (Pmode, set->regno ());\n   hash_set<set_info *> sets = get_all_sets (set, true, false, false);\n   hash_set<basic_block> pred_cfg_bbs = get_all_predecessors (cfg_bb);\n \n@@ -2599,6 +3137,12 @@ pass_vsetvl::backward_demand_fusion (void)\n \t    continue;\n \t  if (e->src->index == ENTRY_BLOCK_PTR_FOR_FN (cfun)->index)\n \t    continue;\n+\t  /* If prop is demand of vsetvl instruction and reaching doesn't demand\n+\t     AVL. We don't backward propagate since vsetvl instruction has no\n+\t     side effects.  */\n+\t  if (vsetvl_insn_p (prop.get_insn ()->rtl ())\n+\t      && propagate_avl_across_demands_p (prop, block_info.reaching_out))\n+\t    continue;\n \n \t  if (block_info.reaching_out.unknown_p ())\n \t    continue;\n@@ -2635,7 +3179,7 @@ pass_vsetvl::backward_demand_fusion (void)\n \n \t      if (block_info.reaching_out.compatible_p (prop))\n \t\t{\n-\t\t  if (block_info.reaching_out >= prop)\n+\t\t  if (block_info.reaching_out.available_p (prop))\n \t\t    continue;\n \t\t  new_info = block_info.reaching_out.merge (prop, GLOBAL_MERGE);\n \t\t  new_info.set_dirty (\n@@ -2659,6 +3203,14 @@ pass_vsetvl::backward_demand_fusion (void)\n \t\t    continue;\n \t\t}\n \n+\t      if (propagate_avl_across_demands_p (prop,\n+\t\t\t\t\t\t  block_info.reaching_out))\n+\t\t{\n+\t\t  rtx reg = new_info.get_avl_reg_rtx ();\n+\t\t  if (find_reg_killed_by (crtl->ssa->bb (e->src), reg))\n+\t\t    new_info.set_dirty (true);\n+\t\t}\n+\n \t      block_info.local_dem = new_info;\n \t      block_info.reaching_out = new_info;\n \t      changed_p = true;\n@@ -2683,13 +3235,11 @@ pass_vsetvl::backward_demand_fusion (void)\n \t\t  if (set->insn () != block_info.reaching_out.get_insn ())\n \t\t    continue;\n \t\t}\n-\t      else\n-\t\t{\n-\t\t  if (!block_info.reaching_out.compatible_p (prop))\n-\t\t    continue;\n-\t\t  if (block_info.reaching_out >= prop)\n-\t\t    continue;\n-\t\t}\n+\n+\t      if (!block_info.reaching_out.compatible_p (prop))\n+\t\tcontinue;\n+\t      if (block_info.reaching_out.available_p (prop))\n+\t\tcontinue;\n \n \t      vector_insn_info be_merged = block_info.reaching_out;\n \t      if (block_info.local_dem == block_info.reaching_out)\n@@ -2699,6 +3249,11 @@ pass_vsetvl::backward_demand_fusion (void)\n \t      if (curr_block_info.probability > block_info.probability)\n \t\tblock_info.probability = curr_block_info.probability;\n \n+\t      if (propagate_avl_across_demands_p (prop, block_info.reaching_out)\n+\t\t  && !reg_available_p (crtl->ssa->bb (e->src)->end_insn (),\n+\t\t\t\t       new_info))\n+\t\tcontinue;\n+\n \t      change_vsetvl_insn (new_info.get_insn (), new_info);\n \t      if (block_info.local_dem == block_info.reaching_out)\n \t\tblock_info.local_dem = new_info;\n@@ -2745,6 +3300,9 @@ pass_vsetvl::forward_demand_fusion (void)\n       if (cfg_bb == ENTRY_BLOCK_PTR_FOR_FN (cfun))\n \tcontinue;\n \n+      if (vsetvl_insn_p (prop.get_insn ()->rtl ()))\n+\tcontinue;\n+\n       edge e;\n       edge_iterator ei;\n       /* Forward propagate to each successor.  */\n@@ -2767,10 +3325,12 @@ pass_vsetvl::forward_demand_fusion (void)\n \t  /* If there is nothing to propagate, just skip it.  */\n \t  if (!local_dem.valid_or_dirty_p ())\n \t    continue;\n-\t  if (local_dem >= prop)\n+\t  if (local_dem.available_p (prop))\n \t    continue;\n \t  if (!local_dem.compatible_p (prop))\n \t    continue;\n+\t  if (propagate_avl_across_demands_p (prop, local_dem))\n+\t    continue;\n \n \t  vector_insn_info new_info = local_dem.merge (prop, GLOBAL_MERGE);\n \t  new_info.set_insn (local_dem.get_insn ());\n@@ -3156,8 +3716,14 @@ pass_vsetvl::refine_vsetvls (void) const\n       if (!can_refine_vsetvl_p (cfg_bb, info))\n \tcontinue;\n \n-      if (!vector_config_insn_p (rinsn))\n-\trinsn = PREV_INSN (rinsn);\n+      /* We can't refine user vsetvl into vsetvl zero,zero since the dest\n+\t will be used by the following instructions.  */\n+      if (vector_config_insn_p (rinsn))\n+\t{\n+\t  m_vector_manager->to_refine_vsetvls.add (rinsn);\n+\t  continue;\n+\t}\n+      rinsn = PREV_INSN (rinsn);\n       rtx new_pat = gen_vsetvl_pat (VSETVL_VTYPE_CHANGE_ONLY, info, NULL_RTX);\n       change_insn (rinsn, new_pat);\n     }\n@@ -3189,15 +3755,17 @@ pass_vsetvl::cleanup_vsetvls ()\n \t\t  insn_info *insn = dem.get_insn ();\n \t\t  gcc_assert (insn && insn->rtl ());\n \t\t  rtx_insn *rinsn;\n+\t\t  /* We can't eliminate user vsetvl since the dest will be used\n+\t\t   * by the following instructions.  */\n \t\t  if (vector_config_insn_p (insn->rtl ()))\n-\t\t    rinsn = insn->rtl ();\n-\t\t  else\n \t\t    {\n-\t\t      gcc_assert (has_vtype_op (insn->rtl ()));\n-\t\t      rinsn = PREV_INSN (insn->rtl ());\n-\t\t      gcc_assert (\n-\t\t\tvector_config_insn_p (PREV_INSN (insn->rtl ())));\n+\t\t      m_vector_manager->to_delete_vsetvls.add (insn->rtl ());\n+\t\t      continue;\n \t\t    }\n+\n+\t\t  gcc_assert (has_vtype_op (insn->rtl ()));\n+\t\t  rinsn = PREV_INSN (insn->rtl ());\n+\t\t  gcc_assert (vector_config_insn_p (PREV_INSN (insn->rtl ())));\n \t\t  eliminate_insn (rinsn);\n \t\t}\n \t    }\n@@ -3265,7 +3833,8 @@ pass_vsetvl::commit_vsetvls (void)\n \t  bool available_p = false;\n \t  EXECUTE_IF_SET_IN_BITMAP (avin, 0, bb_index, sbi)\n \t  {\n-\t    if (*m_vector_manager->vector_exprs[bb_index] >= reaching_out)\n+\t    if (m_vector_manager->vector_exprs[bb_index]->available_p (\n+\t\t  reaching_out))\n \t      {\n \t\tavailable_p = true;\n \t\tbreak;\n@@ -3276,12 +3845,18 @@ pass_vsetvl::commit_vsetvls (void)\n \t}\n \n       rtx new_pat;\n-      if (can_refine_vsetvl_p (cfg_bb, reaching_out))\n+      if (!reaching_out.demand_p (DEMAND_AVL))\n+\t{\n+\t  vl_vtype_info new_info = reaching_out;\n+\t  new_info.set_avl_info (avl_info (const0_rtx, nullptr));\n+\t  new_pat = gen_vsetvl_pat (VSETVL_DISCARD_RESULT, new_info, NULL_RTX);\n+\t}\n+      else if (can_refine_vsetvl_p (cfg_bb, reaching_out))\n \tnew_pat\n \t  = gen_vsetvl_pat (VSETVL_VTYPE_CHANGE_ONLY, reaching_out, NULL_RTX);\n       else if (vlmax_avl_p (reaching_out.get_avl ()))\n \tnew_pat = gen_vsetvl_pat (VSETVL_NORMAL, reaching_out,\n-\t\t\t\t  get_vl (reaching_out.get_insn ()->rtl ()));\n+\t\t\t\t  reaching_out.get_avl_reg_rtx ());\n       else\n \tnew_pat\n \t  = gen_vsetvl_pat (VSETVL_DISCARD_RESULT, reaching_out, NULL_RTX);\n@@ -3363,9 +3938,16 @@ pass_vsetvl::cleanup_insns (void) const\n \t      use_array new_uses = use_array (uses_builder.finish ());\n \t      change.new_uses = new_uses;\n \t      change.move_range = insn->ebb ()->insn_range ();\n-\t      rtx set = single_set (rinsn);\n-\t      rtx src = simplify_replace_rtx (SET_SRC (set), avl, const0_rtx);\n-\t      rtx pat = gen_rtx_SET (SET_DEST (set), src);\n+\t      rtx pat;\n+\t      if (fault_first_load_p (rinsn))\n+\t\tpat = simplify_replace_rtx (PATTERN (rinsn), avl, const0_rtx);\n+\t      else\n+\t\t{\n+\t\t  rtx set = single_set (rinsn);\n+\t\t  rtx src\n+\t\t    = simplify_replace_rtx (SET_SRC (set), avl, const0_rtx);\n+\t\t  pat = gen_rtx_SET (SET_DEST (set), src);\n+\t\t}\n \t      gcc_assert (change_insn (crtl->ssa, change, insn, pat));\n \t    }\n \t}\n@@ -3459,12 +4041,36 @@ pass_vsetvl::propagate_avl (void) const\n \t    {\n \t      rtx vl = get_vl (insn->rtl ());\n \t      rtx avl = get_avl (insn->rtl ());\n-\t      if (vlmax_avl_p (avl))\n-\t\tcontinue;\n \t      def_info *def = find_access (insn->defs (), REGNO (vl));\n \t      set_info *set = safe_dyn_cast<set_info *> (def);\n+\t      vector_insn_info info;\n+\t      info.parse_insn (insn);\n \t      gcc_assert (set);\n-\t      const vl_vtype_info info = get_vl_vtype_info (insn);\n+\t      if (m_vector_manager->to_delete_vsetvls.contains (insn->rtl ()))\n+\t\t{\n+\t\t  m_vector_manager->to_delete_vsetvls.remove (insn->rtl ());\n+\t\t  if (m_vector_manager->to_refine_vsetvls.contains (\n+\t\t\tinsn->rtl ()))\n+\t\t    m_vector_manager->to_refine_vsetvls.remove (insn->rtl ());\n+\t\t  if (!set->has_nondebug_insn_uses ())\n+\t\t    {\n+\t\t      to_delete.add (insn->rtl ());\n+\t\t      continue;\n+\t\t    }\n+\t\t}\n+\t      if (m_vector_manager->to_refine_vsetvls.contains (insn->rtl ()))\n+\t\t{\n+\t\t  m_vector_manager->to_refine_vsetvls.remove (insn->rtl ());\n+\t\t  if (!set->has_nondebug_insn_uses ())\n+\t\t    {\n+\t\t      rtx new_pat = gen_vsetvl_pat (VSETVL_VTYPE_CHANGE_ONLY,\n+\t\t\t\t\t\t    info, NULL_RTX);\n+\t\t      change_insn (insn->rtl (), new_pat);\n+\t\t      continue;\n+\t\t    }\n+\t\t}\n+\t      if (vlmax_avl_p (avl))\n+\t\tcontinue;\n \t      rtx new_pat\n \t\t= gen_vsetvl_pat (VSETVL_DISCARD_RESULT, info, NULL_RTX);\n \t      if (!set->has_nondebug_insn_uses ())"}, {"sha": "7a73149f1dacba2c54295088cce69691d4e936df", "filename": "gcc/config/riscv/riscv-vsetvl.def", "status": "added", "additions": 513, "deletions": 0, "changes": 513, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-vsetvl.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-vsetvl.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-vsetvl.def?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -0,0 +1,513 @@\n+/* VSETVL pass def for RISC-V 'V' Extension for GNU compiler.\n+   Copyright (C) 2023-2023 Free Software Foundation, Inc.\n+   Contributed by Juzhe Zhong (juzhe.zhong@rivai.ai), RiVAI Technologies Ltd.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or(at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY, WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef DEF_INCOMPATIBLE_COND\n+#define DEF_INCOMPATIBLE_COND(AVL1, SEW1, LMUL1, RATIO1, NONZERO_AVL1,         \\\n+\t\t\t      GE_SEW1, TAIL_POLICTY1, MASK_POLICY1, AVL2,      \\\n+\t\t\t      SEW2, LMUL2, RATIO2, NONZERO_AVL2, GE_SEW2,      \\\n+\t\t\t      TAIL_POLICTY2, MASK_POLICY2, COND)\n+#endif\n+\n+#ifndef DEF_SEW_LMUL_FUSE_RULE\n+#define DEF_SEW_LMUL_FUSE_RULE(DEMAND_SEW1, DEMAND_LMUL1, DEMAND_RATIO1,       \\\n+\t\t\t       DEMAND_GE_SEW1, DEMAND_SEW2, DEMAND_LMUL2,      \\\n+\t\t\t       DEMAND_RATIO2, DEMAND_GE_SEW2, NEW_DEMAND_SEW,  \\\n+\t\t\t       NEW_DEMAND_LMUL, NEW_DEMAND_RATIO,              \\\n+\t\t\t       NEW_DEMAND_GE_SEW, NEW_SEW, NEW_VLMUL,          \\\n+\t\t\t       NEW_RATIO)\n+#endif\n+\n+#ifndef DEF_UNAVAILABLE_COND\n+#define DEF_UNAVAILABLE_COND(AVL1, SEW1, LMUL1, RATIO1, NONZERO_AVL1, GE_SEW1, \\\n+\t\t\t     TAIL_POLICTY1, MASK_POLICY1, AVL2, SEW2, LMUL2,   \\\n+\t\t\t     RATIO2, NONZERO_AVL2, GE_SEW2, TAIL_POLICTY2,     \\\n+\t\t\t     MASK_POLICY2, COND)\n+#endif\n+\n+/* Case 1: Demand compatible AVL.  */\n+DEF_INCOMPATIBLE_COND (/*AVL*/ DEMAND_TRUE, /*SEW*/ DEMAND_ANY,\n+\t\t       /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_ANY,\n+\t\t       /*NONZERO_AVL*/ DEMAND_FALSE, /*GE_SEW*/ DEMAND_ANY,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*AVL*/ DEMAND_TRUE, /*SEW*/ DEMAND_ANY,\n+\t\t       /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_ANY,\n+\t\t       /*NONZERO_AVL*/ DEMAND_FALSE, /*GE_SEW*/ DEMAND_ANY,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*COND*/ incompatible_avl_p)\n+\n+/* Case 2: Demand same SEW.  */\n+DEF_INCOMPATIBLE_COND (/*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_TRUE,\n+\t\t       /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_ANY,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_FALSE,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_TRUE,\n+\t\t       /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_ANY,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_FALSE,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*COND*/ different_sew_p)\n+\n+/* Case 3: Demand same LMUL.  */\n+DEF_INCOMPATIBLE_COND (/*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_ANY,\n+\t\t       /*LMUL*/ DEMAND_TRUE, /*RATIO*/ DEMAND_ANY,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_ANY,\n+\t\t       /*LMUL*/ DEMAND_TRUE, /*RATIO*/ DEMAND_ANY,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*COND*/ different_lmul_p)\n+\n+/* Case 4: Demand same RATIO.  */\n+DEF_INCOMPATIBLE_COND (/*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_ANY,\n+\t\t       /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_TRUE,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_ANY,\n+\t\t       /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_TRUE,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*COND*/ different_ratio_p)\n+\n+/* Case 5: Demand same TAIL_POLICY.  */\n+DEF_INCOMPATIBLE_COND (/*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_ANY,\n+\t\t       /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_ANY,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_TRUE, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_ANY,\n+\t\t       /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_ANY,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_TRUE, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*COND*/ different_tail_policy_p)\n+\n+/* Case 6: Demand same MASK_POLICY.  */\n+DEF_INCOMPATIBLE_COND (/*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_ANY,\n+\t\t       /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_ANY,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_TRUE,\n+\t\t       /*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_ANY,\n+\t\t       /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_ANY,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_TRUE,\n+\t\t       /*COND*/ different_mask_policy_p)\n+\n+/* Case 7: Demand non zero AVL.  */\n+DEF_INCOMPATIBLE_COND (/*AVL*/ DEMAND_TRUE, /*SEW*/ DEMAND_ANY,\n+\t\t       /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_ANY,\n+\t\t       /*NONZERO_AVL*/ DEMAND_TRUE, /*GE_SEW*/ DEMAND_ANY,\n+\t\t       DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*AVL*/ DEMAND_TRUE, /*SEW*/ DEMAND_ANY,\n+\t\t       /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_ANY,\n+\t\t       /*NONZERO_AVL*/ DEMAND_FALSE, /*GE_SEW*/ DEMAND_ANY,\n+\t\t       DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*COND*/ possible_zero_avl_p)\n+\n+/* Case 8: First SEW/LMUL/GE_SEW <-> Second RATIO/SEW.  */\n+DEF_INCOMPATIBLE_COND (/*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_TRUE,\n+\t\t       /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_ANY,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_ANY,\n+\t\t       /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_TRUE,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*COND*/ second_ratio_invalid_for_first_sew_p)\n+DEF_INCOMPATIBLE_COND (/*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_ANY,\n+\t\t       /*LMUL*/ DEMAND_TRUE, /*RATIO*/ DEMAND_ANY,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_ANY,\n+\t\t       /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_TRUE,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*COND*/ second_ratio_invalid_for_first_lmul_p)\n+DEF_INCOMPATIBLE_COND (/*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_ANY,\n+\t\t       /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_ANY,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_TRUE,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_TRUE,\n+\t\t       /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_ANY,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_FALSE,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*COND*/ second_sew_less_than_first_sew_p)\n+\n+/* Case 9: First (GE_SEW + LMUL) <-> Second RATIO.  */\n+DEF_INCOMPATIBLE_COND (/*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_TRUE,\n+\t\t       /*LMUL*/ DEMAND_TRUE, /*RATIO*/ DEMAND_ANY,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_TRUE,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_ANY,\n+\t\t       /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_TRUE,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*COND*/ second_ratio_less_than_first_ratio_p)\n+/* Case 11: First (SEW + LMUL) <-> Second RATIO.  */\n+DEF_INCOMPATIBLE_COND (/*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_TRUE,\n+\t\t       /*LMUL*/ DEMAND_TRUE, /*RATIO*/ DEMAND_ANY,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_FALSE,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_ANY,\n+\t\t       /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_TRUE,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*COND*/ different_ratio_p)\n+/* Case 13: First (GE_SEW/SEW + RATIO) <-> Second LMUL.  */\n+DEF_INCOMPATIBLE_COND (/*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_TRUE,\n+\t\t       /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_TRUE,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_ANY,\n+\t\t       /*LMUL*/ DEMAND_TRUE, /*RATIO*/ DEMAND_ANY,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*COND*/ different_lmul_p)\n+/* Case 14: First (LMUL + RATIO) <-> Second SEW.  */\n+DEF_INCOMPATIBLE_COND (/*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_ANY,\n+\t\t       /*LMUL*/ DEMAND_TRUE, /*RATIO*/ DEMAND_TRUE,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_TRUE,\n+\t\t       /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_ANY,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_FALSE,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*COND*/ different_sew_p)\n+/* Case 15: First (LMUL + RATIO) <-> Second GE_SEW.  */\n+DEF_INCOMPATIBLE_COND (/*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_ANY,\n+\t\t       /*LMUL*/ DEMAND_TRUE, /*RATIO*/ DEMAND_TRUE,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_TRUE,\n+\t\t       /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_ANY,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_TRUE,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*COND*/ first_sew_less_than_second_sew_p)\n+\n+/* Case 16: First SEW + Second LMUL <-> First RATIO.  */\n+DEF_INCOMPATIBLE_COND (/*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_TRUE,\n+\t\t       /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_TRUE,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_FALSE,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_ANY,\n+\t\t       /*LMUL*/ DEMAND_TRUE, /*RATIO*/ DEMAND_ANY,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*COND*/ different_lmul_p)\n+/* Case 17: First SEW + Second LMUL <-> Second RATIO.  */\n+DEF_INCOMPATIBLE_COND (/*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_TRUE,\n+\t\t       /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_ANY,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_FALSE,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_ANY,\n+\t\t       /*LMUL*/ DEMAND_TRUE, /*RATIO*/ DEMAND_TRUE,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*COND*/ different_sew_p)\n+\n+/* Case 18: First SEW + Second RATIO <-> First LMUL.  */\n+DEF_INCOMPATIBLE_COND (/*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_TRUE,\n+\t\t       /*LMUL*/ DEMAND_TRUE, /*RATIO*/ DEMAND_ANY,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_FALSE,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_ANY,\n+\t\t       /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_TRUE,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*COND*/ different_ratio_p)\n+\n+/* Case 19: First GE_SEW + Second LMUL <-> First RATIO.  */\n+DEF_INCOMPATIBLE_COND (/*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_TRUE,\n+\t\t       /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_TRUE,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_FALSE,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_ANY,\n+\t\t       /*LMUL*/ DEMAND_TRUE, /*RATIO*/ DEMAND_ANY,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*COND*/ second_lmul_less_than_first_lmul_p)\n+/* Case 20: First GE_SEW + Second LMUL <-> Second RATIO.  */\n+DEF_INCOMPATIBLE_COND (/*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_TRUE,\n+\t\t       /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_ANY,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_FALSE,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_ANY,\n+\t\t       /*LMUL*/ DEMAND_TRUE, /*RATIO*/ DEMAND_TRUE,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*COND*/ second_sew_less_than_first_sew_p)\n+\n+/* Case 21: First GE_SEW + Second RATIO <-> First LMUL.  */\n+DEF_INCOMPATIBLE_COND (/*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_TRUE,\n+\t\t       /*LMUL*/ DEMAND_TRUE, /*RATIO*/ DEMAND_ANY,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_FALSE,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_ANY,\n+\t\t       /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_TRUE,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*COND*/ second_ratio_less_than_first_ratio_p)\n+\n+/* Case 22: First GE_SEW + Second SEW + First LMUL + Second ratio.  */\n+DEF_INCOMPATIBLE_COND (/*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_ANY,\n+\t\t       /*LMUL*/ DEMAND_TRUE, /*RATIO*/ DEMAND_ANY,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_TRUE,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_TRUE,\n+\t\t       /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_TRUE,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_FALSE,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*COND*/ different_lmul_p)\n+\n+/* Case 23: First GE_SEW + Second SEW + Second LMUL + First ratio.  */\n+DEF_INCOMPATIBLE_COND (/*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_ANY,\n+\t\t       /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_TRUE,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_TRUE,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_TRUE,\n+\t\t       /*LMUL*/ DEMAND_TRUE, /*RATIO*/ DEMAND_ANY,\n+\t\t       /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_FALSE,\n+\t\t       /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t       /*COND*/ different_ratio_p)\n+\n+/* Merge rules.  */\n+DEF_SEW_LMUL_FUSE_RULE (/*SEW*/ DEMAND_TRUE, /*LMUL*/ DEMAND_FALSE,\n+\t\t\t/*RATIO*/ DEMAND_FALSE, /*GE_SEW*/ DEMAND_TRUE,\n+\t\t\t/*SEW*/ DEMAND_TRUE, /*LMUL*/ DEMAND_FALSE,\n+\t\t\t/*RATIO*/ DEMAND_FALSE, /*GE_SEW*/ DEMAND_TRUE,\n+\t\t\t/*NEW_DEMAND_SEW*/ true,\n+\t\t\t/*NEW_DEMAND_LMUL*/ false,\n+\t\t\t/*NEW_DEMAND_RATIO*/ false,\n+\t\t\t/*NEW_DEMAND_GE_SEW*/ true, greatest_sew, first_vlmul,\n+\t\t\tfirst_ratio)\n+\n+DEF_SEW_LMUL_FUSE_RULE (/*SEW*/ DEMAND_TRUE, /*LMUL*/ DEMAND_ANY,\n+\t\t\t/*RATIO*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_FALSE,\n+\t\t\t/*SEW*/ DEMAND_ANY, /*LMUL*/ DEMAND_ANY,\n+\t\t\t/*RATIO*/ DEMAND_TRUE, /*GE_SEW*/ DEMAND_ANY,\n+\t\t\t/*NEW_DEMAND_SEW*/ true,\n+\t\t\t/*NEW_DEMAND_LMUL*/ true,\n+\t\t\t/*NEW_DEMAND_RATIO*/ false,\n+\t\t\t/*NEW_DEMAND_GE_SEW*/ false, first_sew,\n+\t\t\tvlmul_for_first_sew_second_ratio, second_ratio)\n+DEF_SEW_LMUL_FUSE_RULE (/*SEW*/ DEMAND_ANY, /*LMUL*/ DEMAND_TRUE,\n+\t\t\t/*RATIO*/ DEMAND_FALSE, /*GE_SEW*/ DEMAND_ANY,\n+\t\t\t/*SEW*/ DEMAND_TRUE, /*LMUL*/ DEMAND_ANY,\n+\t\t\t/*RATIO*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_FALSE,\n+\t\t\t/*NEW_DEMAND_SEW*/ true,\n+\t\t\t/*NEW_DEMAND_LMUL*/ true,\n+\t\t\t/*NEW_DEMAND_RATIO*/ false,\n+\t\t\t/*NEW_DEMAND_GE_SEW*/ false, second_sew, first_vlmul,\n+\t\t\tratio_for_second_sew_first_vlmul)\n+DEF_SEW_LMUL_FUSE_RULE (/*SEW*/ DEMAND_TRUE, /*LMUL*/ DEMAND_FALSE,\n+\t\t\t/*RATIO*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_TRUE,\n+\t\t\t/*SEW*/ DEMAND_FALSE, /*LMUL*/ DEMAND_FALSE,\n+\t\t\t/*RATIO*/ DEMAND_TRUE, /*GE_SEW*/ DEMAND_FALSE,\n+\t\t\t/*NEW_DEMAND_SEW*/ true,\n+\t\t\t/*NEW_DEMAND_LMUL*/ false,\n+\t\t\t/*NEW_DEMAND_RATIO*/ false,\n+\t\t\t/*NEW_DEMAND_GE_SEW*/ true, first_sew,\n+\t\t\tvlmul_for_first_sew_second_ratio, second_ratio)\n+DEF_SEW_LMUL_FUSE_RULE (/*SEW*/ DEMAND_TRUE, /*LMUL*/ DEMAND_FALSE,\n+\t\t\t/*RATIO*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_TRUE,\n+\t\t\t/*SEW*/ DEMAND_TRUE, /*LMUL*/ DEMAND_FALSE,\n+\t\t\t/*RATIO*/ DEMAND_TRUE, /*GE_SEW*/ DEMAND_TRUE,\n+\t\t\t/*NEW_DEMAND_SEW*/ true,\n+\t\t\t/*NEW_DEMAND_LMUL*/ false,\n+\t\t\t/*NEW_DEMAND_RATIO*/ true,\n+\t\t\t/*NEW_DEMAND_GE_SEW*/ true, greatest_sew, first_vlmul,\n+\t\t\tsecond_ratio)\n+DEF_SEW_LMUL_FUSE_RULE (/*SEW*/ DEMAND_TRUE, /*LMUL*/ DEMAND_FALSE,\n+\t\t\t/*RATIO*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_TRUE,\n+\t\t\t/*SEW*/ DEMAND_FALSE, /*LMUL*/ DEMAND_TRUE,\n+\t\t\t/*RATIO*/ DEMAND_FALSE, /*GE_SEW*/ DEMAND_FALSE,\n+\t\t\t/*NEW_DEMAND_SEW*/ true,\n+\t\t\t/*NEW_DEMAND_LMUL*/ true,\n+\t\t\t/*NEW_DEMAND_RATIO*/ false,\n+\t\t\t/*NEW_DEMAND_GE_SEW*/ true, first_sew, second_vlmul,\n+\t\t\tsecond_ratio)\n+DEF_SEW_LMUL_FUSE_RULE (/*SEW*/ DEMAND_TRUE, /*LMUL*/ DEMAND_FALSE,\n+\t\t\t/*RATIO*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_TRUE,\n+\t\t\t/*SEW*/ DEMAND_TRUE, /*LMUL*/ DEMAND_TRUE,\n+\t\t\t/*RATIO*/ DEMAND_FALSE, /*GE_SEW*/ DEMAND_FALSE,\n+\t\t\t/*NEW_DEMAND_SEW*/ true,\n+\t\t\t/*NEW_DEMAND_LMUL*/ true,\n+\t\t\t/*NEW_DEMAND_RATIO*/ false,\n+\t\t\t/*NEW_DEMAND_GE_SEW*/ false, second_sew, second_vlmul,\n+\t\t\tsecond_ratio)\n+DEF_SEW_LMUL_FUSE_RULE (/*SEW*/ DEMAND_TRUE, /*LMUL*/ DEMAND_FALSE,\n+\t\t\t/*RATIO*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_TRUE,\n+\t\t\t/*SEW*/ DEMAND_TRUE, /*LMUL*/ DEMAND_TRUE,\n+\t\t\t/*RATIO*/ DEMAND_FALSE, /*GE_SEW*/ DEMAND_TRUE,\n+\t\t\t/*NEW_DEMAND_SEW*/ true,\n+\t\t\t/*NEW_DEMAND_LMUL*/ true,\n+\t\t\t/*NEW_DEMAND_RATIO*/ false,\n+\t\t\t/*NEW_DEMAND_GE_SEW*/ false, greatest_sew, second_vlmul,\n+\t\t\tsecond_ratio)\n+\n+DEF_SEW_LMUL_FUSE_RULE (/*SEW*/ DEMAND_TRUE, /*LMUL*/ DEMAND_FALSE,\n+\t\t\t/*RATIO*/ DEMAND_FALSE, /*GE_SEW*/ DEMAND_TRUE,\n+\t\t\t/*SEW*/ DEMAND_TRUE, /*LMUL*/ DEMAND_FALSE,\n+\t\t\t/*RATIO*/ DEMAND_FALSE, /*GE_SEW*/ DEMAND_FALSE,\n+\t\t\t/*NEW_DEMAND_SEW*/ true,\n+\t\t\t/*NEW_DEMAND_LMUL*/ false,\n+\t\t\t/*NEW_DEMAND_RATIO*/ false,\n+\t\t\t/*NEW_DEMAND_GE_SEW*/ false, second_sew, second_vlmul,\n+\t\t\tsecond_ratio)\n+DEF_SEW_LMUL_FUSE_RULE (/*SEW*/ DEMAND_TRUE, /*LMUL*/ DEMAND_TRUE,\n+\t\t\t/*RATIO*/ DEMAND_FALSE, /*GE_SEW*/ DEMAND_TRUE,\n+\t\t\t/*SEW*/ DEMAND_TRUE, /*LMUL*/ DEMAND_FALSE,\n+\t\t\t/*RATIO*/ DEMAND_FALSE, /*GE_SEW*/ DEMAND_FALSE,\n+\t\t\t/*NEW_DEMAND_SEW*/ true,\n+\t\t\t/*NEW_DEMAND_LMUL*/ true,\n+\t\t\t/*NEW_DEMAND_RATIO*/ false,\n+\t\t\t/*NEW_DEMAND_GE_SEW*/ false, second_sew, first_vlmul,\n+\t\t\tsecond_ratio)\n+DEF_SEW_LMUL_FUSE_RULE (/*SEW*/ DEMAND_TRUE, /*LMUL*/ DEMAND_FALSE,\n+\t\t\t/*RATIO*/ DEMAND_TRUE, /*GE_SEW*/ DEMAND_TRUE,\n+\t\t\t/*SEW*/ DEMAND_TRUE, /*LMUL*/ DEMAND_FALSE,\n+\t\t\t/*RATIO*/ DEMAND_FALSE, /*GE_SEW*/ DEMAND_FALSE,\n+\t\t\t/*NEW_DEMAND_SEW*/ true,\n+\t\t\t/*NEW_DEMAND_LMUL*/ false,\n+\t\t\t/*NEW_DEMAND_RATIO*/ true,\n+\t\t\t/*NEW_DEMAND_GE_SEW*/ false, second_sew, first_vlmul,\n+\t\t\tfirst_ratio)\n+\n+/* Define the unavailable cases for LCM.  */\n+\n+/* Case 1: Dem1 (Not demand AVL) is unavailable to Dem2 (Demand AVL).  */\n+DEF_UNAVAILABLE_COND (/*AVL*/ DEMAND_FALSE, /*SEW*/ DEMAND_ANY,\n+\t\t      /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_ANY,\n+\t\t      /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t      /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t      /*AVL*/ DEMAND_TRUE, /*SEW*/ DEMAND_ANY,\n+\t\t      /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_ANY,\n+\t\t      /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t      /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t      /*COND*/ always_unavailable)\n+/* Case 2: Dem1 (Demand AVL) is unavailable to Dem2 (Demand normal AVL).  */\n+DEF_UNAVAILABLE_COND (/*AVL*/ DEMAND_TRUE, /*SEW*/ DEMAND_ANY,\n+\t\t      /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_ANY,\n+\t\t      /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t      /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t      /*AVL*/ DEMAND_TRUE, /*SEW*/ DEMAND_ANY,\n+\t\t      /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_ANY,\n+\t\t      /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t      /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t      /*COND*/ avl_unavailable_p)\n+\n+/* Case 3: Dem1 (Not demand TAIL) is unavailable to Dem2 (Demand TAIL).  */\n+DEF_UNAVAILABLE_COND (/*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_ANY,\n+\t\t      /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_ANY,\n+\t\t      /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t      /*TAIL_POLICTY*/ DEMAND_FALSE, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t      /*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_ANY,\n+\t\t      /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_ANY,\n+\t\t      /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t      /*TAIL_POLICTY*/ DEMAND_TRUE, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t      /*COND*/ always_unavailable)\n+\n+/* Case 4: Dem1 (Not demand MASK) is unavailable to Dem2 (Demand MASK).  */\n+DEF_UNAVAILABLE_COND (/*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_ANY,\n+\t\t      /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_ANY,\n+\t\t      /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t      /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_FALSE,\n+\t\t      /*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_ANY,\n+\t\t      /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_ANY,\n+\t\t      /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t      /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_TRUE,\n+\t\t      /*COND*/ always_unavailable)\n+\n+/* Case 5: Dem1 (Demand RATIO) is unavailable to Dem2 (Demand SEW/GE_SEW/LMUL).\n+ */\n+DEF_UNAVAILABLE_COND (/*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_FALSE,\n+\t\t      /*LMUL*/ DEMAND_FALSE, /*RATIO*/ DEMAND_TRUE,\n+\t\t      /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_FALSE,\n+\t\t      /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t      /*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_TRUE,\n+\t\t      /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_ANY,\n+\t\t      /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t      /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t      /*COND*/ always_unavailable)\n+DEF_UNAVAILABLE_COND (/*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_FALSE,\n+\t\t      /*LMUL*/ DEMAND_FALSE, /*RATIO*/ DEMAND_TRUE,\n+\t\t      /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_FALSE,\n+\t\t      /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t      /*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_ANY,\n+\t\t      /*LMUL*/ DEMAND_TRUE, /*RATIO*/ DEMAND_ANY,\n+\t\t      /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t      /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t      /*COND*/ always_unavailable)\n+\n+/* Case 6: Dem1 (Demand SEW).  */\n+DEF_UNAVAILABLE_COND (/*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_TRUE,\n+\t\t      /*LMUL*/ DEMAND_FALSE, /*RATIO*/ DEMAND_FALSE,\n+\t\t      /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_FALSE,\n+\t\t      /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t      /*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_ANY,\n+\t\t      /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_ANY,\n+\t\t      /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t      /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t      /*COND*/ sew_unavailable_p)\n+\n+/* Case 7: Dem1 (Demand LMUL).  */\n+DEF_UNAVAILABLE_COND (/*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_FALSE,\n+\t\t      /*LMUL*/ DEMAND_TRUE, /*RATIO*/ DEMAND_FALSE,\n+\t\t      /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_FALSE,\n+\t\t      /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t      /*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_ANY,\n+\t\t      /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_ANY,\n+\t\t      /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t      /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t      /*COND*/ lmul_unavailable_p)\n+\n+/* Case 8: Dem1 (Demand GE_SEW).  */\n+DEF_UNAVAILABLE_COND (/*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_TRUE,\n+\t\t      /*LMUL*/ DEMAND_FALSE, /*RATIO*/ DEMAND_FALSE,\n+\t\t      /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_TRUE,\n+\t\t      /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t      /*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_ANY,\n+\t\t      /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_ANY,\n+\t\t      /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t      /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t      /*COND*/ ge_sew_unavailable_p)\n+\n+/* Case 9: Dem1 (Demand GE_SEW + LMUL).  */\n+DEF_UNAVAILABLE_COND (/*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_TRUE,\n+\t\t      /*LMUL*/ DEMAND_TRUE, /*RATIO*/ DEMAND_FALSE,\n+\t\t      /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_TRUE,\n+\t\t      /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t      /*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_ANY,\n+\t\t      /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_ANY,\n+\t\t      /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t      /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t      /*COND*/ ge_sew_lmul_unavailable_p)\n+\n+/* Case 10: Dem1 (Demand GE_SEW + RATIO).  */\n+DEF_UNAVAILABLE_COND (/*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_TRUE,\n+\t\t      /*LMUL*/ DEMAND_FALSE, /*RATIO*/ DEMAND_TRUE,\n+\t\t      /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_TRUE,\n+\t\t      /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t      /*AVL*/ DEMAND_ANY, /*SEW*/ DEMAND_ANY,\n+\t\t      /*LMUL*/ DEMAND_ANY, /*RATIO*/ DEMAND_ANY,\n+\t\t      /*NONZERO_AVL*/ DEMAND_ANY, /*GE_SEW*/ DEMAND_ANY,\n+\t\t      /*TAIL_POLICTY*/ DEMAND_ANY, /*MASK_POLICY*/ DEMAND_ANY,\n+\t\t      /*COND*/ ge_sew_ratio_unavailable_p)\n+\n+#undef DEF_INCOMPATIBLE_COND\n+#undef DEF_SEW_LMUL_FUSE_RULE\n+#undef DEF_UNAVAILABLE_COND"}, {"sha": "237381f7026bd1675a1aefaa7ae1a5e03d89377c", "filename": "gcc/config/riscv/riscv-vsetvl.h", "status": "modified", "additions": 90, "deletions": 7, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-vsetvl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv-vsetvl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-vsetvl.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -31,6 +31,7 @@ enum vsetvl_type\n   VSETVL_NORMAL,\n   VSETVL_VTYPE_CHANGE_ONLY,\n   VSETVL_DISCARD_RESULT,\n+  NUM_VSETVL_TYPE\n };\n \n enum emit_type\n@@ -47,11 +48,20 @@ enum demand_type\n   DEMAND_SEW,\n   DEMAND_LMUL,\n   DEMAND_RATIO,\n+  DEMAND_NONZERO_AVL,\n+  DEMAND_GE_SEW,\n   DEMAND_TAIL_POLICY,\n   DEMAND_MASK_POLICY,\n   NUM_DEMAND\n };\n \n+enum demand_status\n+{\n+  DEMAND_FALSE,\n+  DEMAND_TRUE,\n+  DEMAND_ANY,\n+};\n+\n enum fusion_type\n {\n   INVALID_FUSION,\n@@ -162,6 +172,14 @@ class avl_info\n   avl_info &operator= (const avl_info &);\n   bool operator== (const avl_info &) const;\n   bool operator!= (const avl_info &) const;\n+\n+  bool has_avl_imm () const\n+  {\n+    return get_value () && CONST_INT_P (get_value ());\n+  }\n+  bool has_avl_reg () const { return get_value () && REG_P (get_value ()); }\n+  bool has_avl_no_reg () const { return !get_value (); }\n+  bool has_non_zero_avl () const;\n };\n \n /* Basic structure to save VL/VTYPE information.  */\n@@ -197,10 +215,10 @@ struct vl_vtype_info\n   bool operator== (const vl_vtype_info &) const;\n   bool operator!= (const vl_vtype_info &) const;\n \n-  bool has_avl_imm () const { return get_avl () && CONST_INT_P (get_avl ()); }\n-  bool has_avl_reg () const { return get_avl () && REG_P (get_avl ()); }\n-  bool has_avl_no_reg () const { return !get_avl (); }\n-  bool has_non_zero_avl () const;\n+  bool has_avl_imm () const { return m_avl.has_avl_imm (); }\n+  bool has_avl_reg () const { return m_avl.has_avl_reg (); }\n+  bool has_avl_no_reg () const { return m_avl.has_avl_no_reg (); }\n+  bool has_non_zero_avl () const { return m_avl.has_non_zero_avl (); };\n \n   rtx get_avl () const { return m_avl.get_value (); }\n   const avl_info &get_avl_info () const { return m_avl; }\n@@ -291,7 +309,6 @@ class vector_insn_info : public vl_vtype_info\n      We use RTL_SSA framework to initialize the insn_info.  */\n   void parse_insn (rtl_ssa::insn_info *);\n \n-  bool operator> (const vector_insn_info &) const;\n   bool operator>= (const vector_insn_info &) const;\n   bool operator== (const vector_insn_info &) const;\n \n@@ -353,8 +370,14 @@ class vector_insn_info : public vl_vtype_info\n \n   bool demand_p (enum demand_type type) const { return m_demands[type]; }\n   void demand (enum demand_type type) { m_demands[type] = true; }\n-  void demand_vl_vtype ();\n-  void undemand (enum demand_type type) { m_demands[type] = false; }\n+  void set_demand (enum demand_type type, bool value)\n+  {\n+    m_demands[type] = value;\n+  }\n+  void fuse_avl (const vector_insn_info &, const vector_insn_info &);\n+  void fuse_sew_lmul (const vector_insn_info &, const vector_insn_info &);\n+  void fuse_tail_policy (const vector_insn_info &, const vector_insn_info &);\n+  void fuse_mask_policy (const vector_insn_info &, const vector_insn_info &);\n \n   bool compatible_p (const vector_insn_info &) const;\n   bool compatible_avl_p (const vl_vtype_info &) const;\n@@ -364,6 +387,12 @@ class vector_insn_info : public vl_vtype_info\n   vector_insn_info merge (const vector_insn_info &, enum merge_type) const;\n \n   rtl_ssa::insn_info *get_insn () const { return m_insn; }\n+  const bool *get_demands (void) const { return m_demands; }\n+  rtx get_avl_reg_rtx (void) const\n+  {\n+    return gen_rtx_REG (Pmode, get_avl_source ()->regno ());\n+  }\n+  bool update_fault_first_load_avl (rtl_ssa::insn_info *);\n \n   void dump (FILE *) const;\n };\n@@ -388,6 +417,8 @@ class vector_infos_manager\n   auto_vec<vector_insn_info> vector_insn_infos;\n   auto_vec<vector_block_info> vector_block_infos;\n   auto_vec<vector_insn_info *> vector_exprs;\n+  hash_set<rtx_insn *> to_refine_vsetvls;\n+  hash_set<rtx_insn *> to_delete_vsetvls;\n \n   struct edge_list *vector_edge_list;\n   sbitmap *vector_kill;\n@@ -426,5 +457,57 @@ class vector_infos_manager\n   void dump (FILE *) const;\n };\n \n+struct demands_pair\n+{\n+  demand_status first[NUM_DEMAND];\n+  demand_status second[NUM_DEMAND];\n+  bool match_cond_p (const bool *dems1, const bool *dems2) const\n+  {\n+    for (unsigned i = 0; i < NUM_DEMAND; i++)\n+      {\n+\tif (first[i] != DEMAND_ANY && first[i] != dems1[i])\n+\t  return false;\n+\tif (second[i] != DEMAND_ANY && second[i] != dems2[i])\n+\t  return false;\n+      }\n+    return true;\n+  }\n+};\n+\n+struct demands_cond\n+{\n+  demands_pair pair;\n+  using CONDITION_TYPE\n+    = bool (*) (const vector_insn_info &, const vector_insn_info &);\n+  CONDITION_TYPE incompatible_p;\n+  bool dual_incompatible_p (const vector_insn_info &info1,\n+\t\t\t    const vector_insn_info &info2) const\n+  {\n+    return ((pair.match_cond_p (info1.get_demands (), info2.get_demands ())\n+\t     && incompatible_p (info1, info2))\n+\t    || (pair.match_cond_p (info2.get_demands (), info1.get_demands ())\n+\t\t&& incompatible_p (info2, info1)));\n+  }\n+};\n+\n+struct demands_fuse_rule\n+{\n+  demands_pair pair;\n+  bool demand_sew_p;\n+  bool demand_lmul_p;\n+  bool demand_ratio_p;\n+  bool demand_ge_sew_p;\n+\n+  using NEW_SEW\n+    = unsigned (*) (const vector_insn_info &, const vector_insn_info &);\n+  using NEW_VLMUL\n+    = vlmul_type (*) (const vector_insn_info &, const vector_insn_info &);\n+  using NEW_RATIO\n+    = unsigned (*) (const vector_insn_info &, const vector_insn_info &);\n+  NEW_SEW new_sew;\n+  NEW_VLMUL new_vlmul;\n+  NEW_RATIO new_ratio;\n+};\n+\n } // namespace riscv_vector\n #endif"}, {"sha": "5f542932d13ce69aae2fb088087cfc1e2533769e", "filename": "gcc/config/riscv/riscv.cc", "status": "modified", "additions": 219, "deletions": 51, "changes": 270, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -1003,6 +1003,40 @@ riscv_v_adjust_nunits (machine_mode mode, int scale)\n   return scale;\n }\n \n+/* Call from ADJUST_BYTESIZE in riscv-modes.def.  Return the correct\n+   BYTE size for corresponding machine_mode.  */\n+\n+poly_int64\n+riscv_v_adjust_bytesize (machine_mode mode, int scale)\n+{\n+  if (riscv_v_ext_vector_mode_p (mode))\n+  {\n+    poly_uint16 mode_size = GET_MODE_SIZE (mode);\n+\n+    if (maybe_eq (mode_size, (uint16_t)-1))\n+      mode_size = riscv_vector_chunks * scale;\n+\n+    if (known_gt (mode_size, BYTES_PER_RISCV_VECTOR))\n+      mode_size = BYTES_PER_RISCV_VECTOR;\n+\n+    return mode_size;\n+  }\n+\n+  return scale;\n+}\n+\n+/* Call from ADJUST_PRECISION in riscv-modes.def.  Return the correct\n+   PRECISION size for corresponding machine_mode.  */\n+\n+poly_int64\n+riscv_v_adjust_precision (machine_mode mode, int scale)\n+{\n+  if (riscv_v_ext_vector_mode_p (mode))\n+    return riscv_vector_chunks * scale;\n+\n+  return scale;\n+}\n+\n /* Return true if X is a valid address for machine mode MODE.  If it is,\n    fill in INFO appropriately.  STRICT_P is true if REG_OK_STRICT is in\n    effect.  */\n@@ -2300,8 +2334,8 @@ riscv_rtx_costs (rtx x, machine_mode mode, int outer_code, int opno ATTRIBUTE_UN\n       return false;\n \n     case IF_THEN_ELSE:\n-      if (TARGET_SFB_ALU\n-\t  && register_operand (XEXP (x, 1), mode)\n+      if ((TARGET_SFB_ALU || TARGET_XTHEADCONDMOV)\n+\t  && reg_or_0_operand (XEXP (x, 1), mode)\n \t  && sfb_alu_operand (XEXP (x, 2), mode)\n \t  && comparison_operator (XEXP (x, 0), VOIDmode))\n \t{\n@@ -2400,14 +2434,23 @@ riscv_rtx_costs (rtx x, machine_mode mode, int outer_code, int opno ATTRIBUTE_UN\n \t  *total = COSTS_N_INSNS (SINGLE_SHIFT_COST);\n \t  return true;\n \t}\n-      /* bext pattern for zbs.  */\n-      if (TARGET_ZBS && outer_code == SET\n+      /* bit extraction pattern (zbs:bext, xtheadbs:tst).  */\n+      if ((TARGET_ZBS || TARGET_XTHEADBS) && outer_code == SET\n \t  && GET_CODE (XEXP (x, 1)) == CONST_INT\n \t  && INTVAL (XEXP (x, 1)) == 1)\n \t{\n \t  *total = COSTS_N_INSNS (SINGLE_SHIFT_COST);\n \t  return true;\n \t}\n+      gcc_fallthrough ();\n+    case SIGN_EXTRACT:\n+      if (TARGET_XTHEADBB && outer_code == SET\n+\t  && CONST_INT_P (XEXP (x, 1))\n+\t  && CONST_INT_P (XEXP (x, 2)))\n+\t{\n+\t  *total = COSTS_N_INSNS (SINGLE_SHIFT_COST);\n+\t  return true;\n+\t}\n       return false;\n \n     case ASHIFT:\n@@ -2527,7 +2570,8 @@ riscv_rtx_costs (rtx x, machine_mode mode, int outer_code, int opno ATTRIBUTE_UN\n \t  && GET_CODE (XEXP (x, 0)) == MULT\n \t  && REG_P (XEXP (XEXP (x, 0), 0))\n \t  && CONST_INT_P (XEXP (XEXP (x, 0), 1))\n-\t  && IN_RANGE (pow2p_hwi (INTVAL (XEXP (XEXP (x, 0), 1))), 1, 3))\n+\t  && pow2p_hwi (INTVAL (XEXP (XEXP (x, 0), 1)))\n+\t  && IN_RANGE (exact_log2 (INTVAL (XEXP (XEXP (x, 0), 1))), 1, 3))\n \t{\n \t  *total = COSTS_N_INSNS (1);\n \t  return true;\n@@ -2745,11 +2789,29 @@ riscv_split_64bit_move_p (rtx dest, rtx src)\n void\n riscv_split_doubleword_move (rtx dest, rtx src)\n {\n-  rtx low_dest;\n+  /* XTheadFmv has instructions for accessing the upper bits of a double.  */\n+  if (!TARGET_64BIT && TARGET_XTHEADFMV)\n+    {\n+      if (FP_REG_RTX_P (dest))\n+\t{\n+\t  rtx low_src = riscv_subword (src, false);\n+\t  rtx high_src = riscv_subword (src, true);\n+\t  emit_insn (gen_th_fmv_hw_w_x (dest, high_src, low_src));\n+\t  return;\n+\t}\n+      if (FP_REG_RTX_P (src))\n+\t{\n+\t  rtx low_dest = riscv_subword (dest, false);\n+\t  rtx high_dest = riscv_subword (dest, true);\n+\t  emit_insn (gen_th_fmv_x_w (low_dest, src));\n+\t  emit_insn (gen_th_fmv_x_hw (high_dest, src));\n+\t  return;\n+\t}\n+    }\n \n    /* The operation can be split into two normal moves.  Decide in\n       which order to do them.  */\n-   low_dest = riscv_subword (dest, false);\n+   rtx low_dest = riscv_subword (dest, false);\n    if (REG_P (low_dest) && reg_overlap_mentioned_p (low_dest, src))\n      {\n        riscv_emit_move (riscv_subword (dest, true), riscv_subword (src, true));\n@@ -3089,13 +3151,30 @@ riscv_extend_comparands (rtx_code code, rtx *op0, rtx *op1)\n     }\n }\n \n-/* Convert a comparison into something that can be used in a branch.  On\n-   entry, *OP0 and *OP1 are the values being compared and *CODE is the code\n-   used to compare them.  Update them to describe the final comparison.  */\n+/* Convert a comparison into something that can be used in a branch or\n+   conditional move.  On entry, *OP0 and *OP1 are the values being\n+   compared and *CODE is the code used to compare them.\n+\n+   Update *CODE, *OP0 and *OP1 so that they describe the final comparison.\n+   If NEED_EQ_NE_P, then only EQ or NE comparisons against zero are\n+   emitted.  */\n \n static void\n-riscv_emit_int_compare (enum rtx_code *code, rtx *op0, rtx *op1)\n+riscv_emit_int_compare (enum rtx_code *code, rtx *op0, rtx *op1,\n+\t\t\tbool need_eq_ne_p = false)\n {\n+  if (need_eq_ne_p)\n+    {\n+      rtx cmp_op0 = *op0;\n+      rtx cmp_op1 = *op1;\n+      if (*code == EQ || *code == NE)\n+\t{\n+\t  *op0 = riscv_zero_if_equal (cmp_op0, cmp_op1);\n+\t  *op1 = const0_rtx;\n+\t  return;\n+\t}\n+    }\n+\n   if (splittable_const_int_operand (*op1, VOIDmode))\n     {\n       HOST_WIDE_INT rhs = INTVAL (*op1);\n@@ -3281,16 +3360,71 @@ riscv_expand_conditional_branch (rtx label, rtx_code code, rtx op0, rtx op1)\n   emit_jump_insn (gen_condjump (condition, label));\n }\n \n-/* If (CODE OP0 OP1) holds, move CONS to DEST; else move ALT to DEST.  */\n+/* Helper to emit two one-sided conditional moves for the movecc.  */\n \n-void\n-riscv_expand_conditional_move (rtx dest, rtx cons, rtx alt, rtx_code code,\n-\t\t\t       rtx op0, rtx op1)\n+static void\n+riscv_expand_conditional_move_onesided (rtx dest, rtx cons, rtx alt,\n+\t\t\t\t\trtx_code code, rtx op0, rtx op1)\n {\n-  riscv_emit_int_compare (&code, &op0, &op1);\n-  rtx cond = gen_rtx_fmt_ee (code, GET_MODE (op0), op0, op1);\n-  emit_insn (gen_rtx_SET (dest, gen_rtx_IF_THEN_ELSE (GET_MODE (dest), cond,\n-\t\t\t\t\t\t      cons, alt)));\n+  machine_mode mode = GET_MODE (dest);\n+\n+  gcc_assert (GET_MODE_CLASS (mode) == MODE_INT);\n+  gcc_assert (reg_or_0_operand (cons, mode));\n+  gcc_assert (reg_or_0_operand (alt, mode));\n+\n+  riscv_emit_int_compare (&code, &op0, &op1, true);\n+  rtx cond = gen_rtx_fmt_ee (code, mode, op0, op1);\n+\n+  rtx tmp1 = gen_reg_rtx (mode);\n+  rtx tmp2 = gen_reg_rtx (mode);\n+\n+  emit_insn (gen_rtx_SET (tmp1, gen_rtx_IF_THEN_ELSE (mode, cond,\n+\t\t\t\t\t\t      cons, const0_rtx)));\n+\n+  /* We need to expand a sequence for both blocks and we do that such,\n+     that the second conditional move will use the inverted condition.\n+     We use temporaries that are or'd to the dest register.  */\n+  cond = gen_rtx_fmt_ee ((code == EQ) ? NE : EQ, mode, op0, op1);\n+  emit_insn (gen_rtx_SET (tmp2, gen_rtx_IF_THEN_ELSE (mode, cond,\n+\t\t\t\t\t\t      alt, const0_rtx)));\n+\n+  emit_insn (gen_rtx_SET (dest, gen_rtx_IOR (mode, tmp1, tmp2)));\n+ }\n+\n+/* Emit a cond move: If OP holds, move CONS to DEST; else move ALT to DEST.\n+   Return 0 if expansion failed.  */\n+\n+bool\n+riscv_expand_conditional_move (rtx dest, rtx op, rtx cons, rtx alt)\n+{\n+  machine_mode mode = GET_MODE (dest);\n+  rtx_code code = GET_CODE (op);\n+  rtx op0 = XEXP (op, 0);\n+  rtx op1 = XEXP (op, 1);\n+\n+  if (TARGET_XTHEADCONDMOV\n+      && GET_MODE_CLASS (mode) == MODE_INT\n+      && reg_or_0_operand (cons, mode)\n+      && reg_or_0_operand (alt, mode)\n+      && GET_MODE (op) == mode\n+      && GET_MODE (op0) == mode\n+      && GET_MODE (op1) == mode\n+      && (code == EQ || code == NE))\n+    {\n+      riscv_expand_conditional_move_onesided (dest, cons, alt, code, op0, op1);\n+      return true;\n+    }\n+  else if (TARGET_SFB_ALU\n+\t   && mode == word_mode)\n+    {\n+      riscv_emit_int_compare (&code, &op0, &op1);\n+      rtx cond = gen_rtx_fmt_ee (code, GET_MODE (op0), op0, op1);\n+      emit_insn (gen_rtx_SET (dest, gen_rtx_IF_THEN_ELSE (GET_MODE (dest),\n+\t\t\t\t\t\t\t  cond, cons, alt)));\n+      return true;\n+    }\n+\n+  return false;\n }\n \n /* Implement TARGET_FUNCTION_ARG_BOUNDARY.  Every parameter gets at\n@@ -4864,6 +4998,35 @@ riscv_set_return_address (rtx address, rtx scratch)\n   riscv_emit_move (gen_frame_mem (GET_MODE (address), slot_address), address);\n }\n \n+/* Save register REG to MEM.  Make the instruction frame-related.  */\n+\n+static void\n+riscv_save_reg (rtx reg, rtx mem)\n+{\n+  riscv_emit_move (mem, reg);\n+  riscv_set_frame_expr (riscv_frame_set (mem, reg));\n+}\n+\n+/* Restore register REG from MEM.  */\n+\n+static void\n+riscv_restore_reg (rtx reg, rtx mem)\n+{\n+  rtx insn = riscv_emit_move (reg, mem);\n+  rtx dwarf = NULL_RTX;\n+  dwarf = alloc_reg_note (REG_CFA_RESTORE, reg, dwarf);\n+\n+  if (epilogue_cfa_sp_offset && REGNO (reg) == HARD_FRAME_POINTER_REGNUM)\n+    {\n+      rtx cfa_adjust_rtx = gen_rtx_PLUS (Pmode, stack_pointer_rtx,\n+\t\t\t\t\t GEN_INT (epilogue_cfa_sp_offset));\n+      dwarf = alloc_reg_note (REG_CFA_DEF_CFA, cfa_adjust_rtx, dwarf);\n+    }\n+\n+  REG_NOTES (insn) = dwarf;\n+  RTX_FRAME_RELATED_P (insn) = 1;\n+}\n+\n /* A function to save or store a register.  The first argument is the\n    register and the second is the stack slot.  */\n typedef void (*riscv_save_restore_fn) (rtx, rtx);\n@@ -4958,6 +5121,36 @@ riscv_for_each_saved_reg (poly_int64 sp_offset, riscv_save_restore_fn fn,\n \t  && riscv_is_eh_return_data_register (regno))\n \tcontinue;\n \n+      if (TARGET_XTHEADMEMPAIR)\n+\t{\n+\t  /* Get the next reg/offset pair.  */\n+\t  HOST_WIDE_INT offset2 = offset;\n+\t  unsigned int regno2 = riscv_next_saved_reg (regno, limit, &offset2);\n+\n+\t  /* Validate everything before emitting a mempair instruction.  */\n+\t  if (regno2 != INVALID_REGNUM\n+\t      && !cfun->machine->reg_is_wrapped_separately[regno2]\n+\t      && !(epilogue && !maybe_eh_return\n+\t\t   && riscv_is_eh_return_data_register (regno2)))\n+\t    {\n+\t      bool load_p = (fn == riscv_restore_reg);\n+\t      rtx operands[4];\n+\t      th_mempair_prepare_save_restore_operands (operands,\n+\t\t\t\t\t\t\tload_p, word_mode,\n+\t\t\t\t\t\t\tregno, offset,\n+\t\t\t\t\t\t\tregno2, offset2);\n+\n+\t      /* If the operands fit into a mempair insn, then emit one.  */\n+\t      if (th_mempair_operands_p (operands, load_p, word_mode))\n+\t\t{\n+\t\t  th_mempair_save_restore_regs (operands, load_p, word_mode);\n+\t\t  offset = offset2;\n+\t\t  regno = regno2;\n+\t\t  continue;\n+\t\t}\n+\t    }\n+\t}\n+\n       riscv_save_restore_reg (word_mode, regno, offset, fn);\n     }\n \n@@ -4976,35 +5169,6 @@ riscv_for_each_saved_reg (poly_int64 sp_offset, riscv_save_restore_fn fn,\n       }\n }\n \n-/* Save register REG to MEM.  Make the instruction frame-related.  */\n-\n-static void\n-riscv_save_reg (rtx reg, rtx mem)\n-{\n-  riscv_emit_move (mem, reg);\n-  riscv_set_frame_expr (riscv_frame_set (mem, reg));\n-}\n-\n-/* Restore register REG from MEM.  */\n-\n-static void\n-riscv_restore_reg (rtx reg, rtx mem)\n-{\n-  rtx insn = riscv_emit_move (reg, mem);\n-  rtx dwarf = NULL_RTX;\n-  dwarf = alloc_reg_note (REG_CFA_RESTORE, reg, dwarf);\n-\n-  if (epilogue_cfa_sp_offset && REGNO (reg) == HARD_FRAME_POINTER_REGNUM)\n-    {\n-      rtx cfa_adjust_rtx = gen_rtx_PLUS (Pmode, stack_pointer_rtx,\n-\t\t\t\t\t GEN_INT (epilogue_cfa_sp_offset));\n-      dwarf = alloc_reg_note (REG_CFA_DEF_CFA, cfa_adjust_rtx, dwarf);\n-    }\n-\n-  REG_NOTES (insn) = dwarf;\n-  RTX_FRAME_RELATED_P (insn) = 1;\n-}\n-\n /* For stack frames that can't be allocated with a single ADDI instruction,\n    compute the best value to initially allocate.  It must at a minimum\n    allocate enough space to spill the callee-saved registers.  If TARGET_RVC,\n@@ -5721,7 +5885,8 @@ riscv_secondary_memory_needed (machine_mode mode, reg_class_t class1,\n {\n   return (!riscv_v_ext_vector_mode_p (mode)\n \t  && GET_MODE_SIZE (mode).to_constant () > UNITS_PER_WORD\n-\t  && (class1 == FP_REGS) != (class2 == FP_REGS));\n+\t  && (class1 == FP_REGS) != (class2 == FP_REGS)\n+\t  && !TARGET_XTHEADFMV);\n }\n \n /* Implement TARGET_REGISTER_MOVE_COST.  */\n@@ -6883,8 +7048,8 @@ riscv_dwarf_poly_indeterminate_value (unsigned int i, unsigned int *factor,\n \t\t\t\t      int *offset)\n {\n   /* Polynomial invariant 1 == (VLENB / riscv_bytes_per_vector_chunk) - 1.\n-     1. TARGET_MIN_VLEN == 32, olynomial invariant 1 == (VLENB / 4) - 1.\n-     2. TARGET_MIN_VLEN > 32, olynomial invariant 1 == (VLENB / 8) - 1.\n+     1. TARGET_MIN_VLEN == 32, polynomial invariant 1 == (VLENB / 4) - 1.\n+     2. TARGET_MIN_VLEN > 32, polynomial invariant 1 == (VLENB / 8) - 1.\n   */\n   gcc_assert (i == 1);\n   *factor = riscv_bytes_per_vector_chunk;\n@@ -7068,6 +7233,9 @@ riscv_shamt_matches_mask_p (int shamt, HOST_WIDE_INT mask)\n #undef TARGET_BUILTIN_DECL\n #define TARGET_BUILTIN_DECL riscv_builtin_decl\n \n+#undef TARGET_GIMPLE_FOLD_BUILTIN\n+#define TARGET_GIMPLE_FOLD_BUILTIN riscv_gimple_fold_builtin\n+\n #undef TARGET_EXPAND_BUILTIN\n #define TARGET_EXPAND_BUILTIN riscv_expand_builtin\n "}, {"sha": "66fb07d66521843fcab130c7640f483f8a4516ec", "filename": "gcc/config/riscv/riscv.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -1025,6 +1025,8 @@ extern unsigned riscv_stack_boundary;\n extern unsigned riscv_bytes_per_vector_chunk;\n extern poly_uint16 riscv_vector_chunks;\n extern poly_int64 riscv_v_adjust_nunits (enum machine_mode, int);\n+extern poly_int64 riscv_v_adjust_precision (enum machine_mode, int);\n+extern poly_int64 riscv_v_adjust_bytesize (enum machine_mode, int);\n /* The number of bits and bytes in a RVV vector.  */\n #define BITS_PER_RISCV_VECTOR (poly_uint16 (riscv_vector_chunks * riscv_bytes_per_vector_chunk * 8))\n #define BYTES_PER_RISCV_VECTOR (poly_uint16 (riscv_vector_chunks * riscv_bytes_per_vector_chunk))"}, {"sha": "bc384d9aedf12a755c95197c8f07d60987580257", "filename": "gcc/config/riscv/riscv.md", "status": "modified", "additions": 81, "deletions": 28, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.md?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -100,6 +100,10 @@\n \n   ;; Zihintpause unspec\n   UNSPECV_PAUSE\n+\n+  ;; XTheadFmv unspec\n+  UNSPEC_XTHEADFMV\n+  UNSPEC_XTHEADFMV_HW\n ])\n \n (define_constants\n@@ -242,6 +246,8 @@\n ;; bitmanip\tbit manipulation instructions\n ;; rotate   rotation instructions\n ;; atomic   atomic instructions\n+;; condmove\tconditional moves\n+;; crypto cryptography instructions\n ;; Classification of RVV instructions which will be added to each RVV .md pattern and used by scheduler.\n ;; rdvlenb     vector byte length vlenb csrr read\n ;; rdvl        vector length vl csrr read\n@@ -309,9 +315,9 @@\n ;; 14. Vector reduction operations\n ;; vired       vector single-width integer reduction instructions\n ;; viwred      vector widening integer reduction instructions\n-;; vfred       vector single-width floating-point un-ordered reduction instruction\n+;; vfredu      vector single-width floating-point un-ordered reduction instruction\n ;; vfredo      vector single-width floating-point ordered reduction instruction\n-;; vfwred      vector widening floating-point un-ordered reduction instruction\n+;; vfwredu     vector widening floating-point un-ordered reduction instruction\n ;; vfwredo     vector widening floating-point ordered reduction instruction\n ;; 15. Vector mask instructions\n ;; vmalu       vector mask-register logical instructions\n@@ -321,21 +327,24 @@\n ;; vmiota      vector iota\n ;; vmidx       vector element index instruction\n ;; 16. Vector permutation instructions\n-;; vimovvx     integer scalar move instructions\n-;; vimovxv     integer scalar move instructions\n-;; vfmovvf     floating-point scalar move instructions\n-;; vfmovfv     floating-point scalar move instructions\n-;; vislide     vector slide instructions\n-;; vislide1    vector slide instructions\n-;; vfslide1    vector slide instructions\n-;; vgather     vector register gather instructions\n-;; vcompress   vector compress instruction\n-;; vmov        whole vector register move\n+;; vimovvx      integer scalar move instructions\n+;; vimovxv      integer scalar move instructions\n+;; vfmovvf      floating-point scalar move instructions\n+;; vfmovfv      floating-point scalar move instructions\n+;; vslideup     vector slide instructions\n+;; vslidedown   vector slide instructions\n+;; vislide1up   vector slide instructions\n+;; vislide1down vector slide instructions\n+;; vfslide1up   vector slide instructions\n+;; vfslide1down vector slide instructions\n+;; vgather      vector register gather instructions\n+;; vcompress    vector compress instruction\n+;; vmov         whole vector register move\n (define_attr \"type\"\n   \"unknown,branch,jump,call,load,fpload,store,fpstore,\n    mtc,mfc,const,arith,logical,shift,slt,imul,idiv,move,fmove,fadd,fmul,\n    fmadd,fdiv,fcmp,fcvt,fsqrt,multi,auipc,sfb_alu,nop,ghost,bitmanip,rotate,\n-   atomic,rdvlenb,rdvl,vsetvl,vlde,vste,vldm,vstm,vlds,vsts,\n+   atomic,condmove,crypto,rdvlenb,rdvl,vsetvl,vlde,vste,vldm,vstm,vlds,vsts,\n    vldux,vldox,vstux,vstox,vldff,vldr,vstr,\n    vialu,viwalu,vext,vicalu,vshift,vnshift,vicmp,viminmax,\n    vimul,vidiv,viwmul,vimuladd,viwmuladd,vimerge,vimov,\n@@ -344,9 +353,10 @@\n    vfcmp,vfminmax,vfsgnj,vfclass,vfmerge,vfmov,\n    vfcvtitof,vfcvtftoi,vfwcvtitof,vfwcvtftoi,\n    vfwcvtftof,vfncvtitof,vfncvtftoi,vfncvtftof,\n-   vired,viwred,vfred,vfredo,vfwred,vfwredo,\n+   vired,viwred,vfredu,vfredo,vfwredu,vfwredo,\n    vmalu,vmpop,vmffs,vmsfs,vmiota,vmidx,vimovvx,vimovxv,vfmovvf,vfmovfv,\n-   vislide,vislide1,vfslide1,vgather,vcompress,vmov\"\n+   vslideup,vslidedown,vislide1up,vislide1down,vfslide1up,vfslide1down,\n+   vgather,vcompress,vmov\"\n   (cond [(eq_attr \"got\" \"load\") (const_string \"load\")\n \n \t ;; If a doubleword move uses these expensive instructions,\n@@ -1358,7 +1368,9 @@\n   [(set (match_operand:DI     0 \"register_operand\"     \"=r,r\")\n \t(zero_extend:DI\n \t    (match_operand:SI 1 \"nonimmediate_operand\" \" r,m\")))]\n-  \"TARGET_64BIT && !TARGET_ZBA\"\n+  \"TARGET_64BIT && !TARGET_ZBA\n+   && !(register_operand (operands[1], SImode)\n+        && reg_or_subregno (operands[1]) == VL_REGNUM)\"\n   \"@\n    #\n    lwu\\t%0,%1\"\n@@ -1738,7 +1750,9 @@\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r,r,r, m,  *f,*f,*r,*m,r\")\n \t(match_operand:SI 1 \"move_operand\"         \" r,T,m,rJ,*r*J,*m,*f,*f,vp\"))]\n   \"(register_operand (operands[0], SImode)\n-    || reg_or_0_operand (operands[1], SImode))\"\n+    || reg_or_0_operand (operands[1], SImode))\n+    && !(register_operand (operands[1], SImode)\n+         && reg_or_subregno (operands[1]) == VL_REGNUM)\"\n   { return riscv_output_move (operands[0], operands[1]); }\n   [(set_attr \"move_type\" \"move,const,load,store,mtc,fpload,mfc,fpstore,rdvlenb\")\n    (set_attr \"mode\" \"SI\")\n@@ -1855,16 +1869,17 @@\n     DONE;\n })\n \n+\n ;; In RV32, we lack fmv.x.d and fmv.d.x.  Go through memory instead.\n ;; (However, we can still use fcvt.d.w to zero a floating-point register.)\n (define_insn \"*movdf_hardfloat_rv32\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=f,f,f,m,m,  *r,*r,*m\")\n-\t(match_operand:DF 1 \"move_operand\"         \" f,G,m,f,G,*r*G,*m,*r\"))]\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=f,f,f,m,m,*th_f_fmv,*th_r_fmv,  *r,*r,*m\")\n+\t(match_operand:DF 1 \"move_operand\"         \" f,G,m,f,G,*th_r_fmv,*th_f_fmv,*r*G,*m,*r\"))]\n   \"!TARGET_64BIT && TARGET_DOUBLE_FLOAT\n    && (register_operand (operands[0], DFmode)\n        || reg_or_0_operand (operands[1], DFmode))\"\n   { return riscv_output_move (operands[0], operands[1]); }\n-  [(set_attr \"move_type\" \"fmove,mtc,fpload,fpstore,store,move,load,store\")\n+  [(set_attr \"move_type\" \"fmove,mtc,fpload,fpstore,store,mtc,mfc,move,load,store\")\n    (set_attr \"mode\" \"DF\")])\n \n (define_insn \"*movdf_hardfloat_rv64\"\n@@ -2308,17 +2323,15 @@\n (define_expand \"mov<mode>cc\"\n   [(set (match_operand:GPR 0 \"register_operand\")\n \t(if_then_else:GPR (match_operand 1 \"comparison_operator\")\n-\t\t\t  (match_operand:GPR 2 \"register_operand\")\n+\t\t\t  (match_operand:GPR 2 \"reg_or_0_operand\")\n \t\t\t  (match_operand:GPR 3 \"sfb_alu_operand\")))]\n-  \"TARGET_SFB_ALU\"\n+  \"TARGET_SFB_ALU || TARGET_XTHEADCONDMOV\"\n {\n-  rtx cmp = operands[1];\n-  /* We only handle word mode integer compares for now.  */\n-  if (GET_MODE (XEXP (cmp, 0)) != word_mode)\n+  if (riscv_expand_conditional_move (operands[0], operands[1],\n+\t\t\t\t     operands[2], operands[3]))\n+    DONE;\n+  else\n     FAIL;\n-  riscv_expand_conditional_move (operands[0], operands[2], operands[3],\n-\t\t\t\t GET_CODE (cmp), XEXP (cmp, 0), XEXP (cmp, 1));\n-  DONE;\n })\n \n (define_insn \"*mov<GPR:mode><X:mode>cc\"\n@@ -3087,10 +3100,50 @@\n   \"prefetch.i\\t%a0\"\n )\n \n+(define_expand \"extv<mode>\"\n+  [(set (match_operand:GPR 0 \"register_operand\" \"=r\")\n+\t(sign_extract:GPR (match_operand:GPR 1 \"register_operand\" \"r\")\n+\t\t\t (match_operand 2 \"const_int_operand\")\n+\t\t\t (match_operand 3 \"const_int_operand\")))]\n+  \"TARGET_XTHEADBB\"\n+)\n+\n+(define_expand \"extzv<mode>\"\n+  [(set (match_operand:GPR 0 \"register_operand\" \"=r\")\n+\t(zero_extract:GPR (match_operand:GPR 1 \"register_operand\" \"r\")\n+\t\t\t (match_operand 2 \"const_int_operand\")\n+\t\t\t (match_operand 3 \"const_int_operand\")))]\n+  \"TARGET_XTHEADBB\"\n+{\n+  if (TARGET_XTHEADBB\n+      && (INTVAL (operands[2]) < 8) && (INTVAL (operands[3]) == 0))\n+    FAIL;\n+})\n+\n+(define_expand \"maddhisi4\"\n+  [(set (match_operand:SI 0 \"register_operand\")\n+\t(plus:SI\n+\t  (mult:SI (sign_extend:SI (match_operand:HI 1 \"register_operand\"))\n+\t\t   (sign_extend:SI (match_operand:HI 2 \"register_operand\")))\n+\t  (match_operand:SI 3 \"register_operand\")))]\n+  \"TARGET_XTHEADMAC\"\n+)\n+\n+(define_expand \"msubhisi4\"\n+  [(set (match_operand:SI 0 \"register_operand\")\n+\t(minus:SI\n+\t  (match_operand:SI 3 \"register_operand\")\n+\t  (mult:SI (sign_extend:SI (match_operand:HI 1 \"register_operand\"))\n+\t\t   (sign_extend:SI (match_operand:HI 2 \"register_operand\")))))]\n+  \"TARGET_XTHEADMAC\"\n+)\n+\n (include \"bitmanip.md\")\n+(include \"crypto.md\")\n (include \"sync.md\")\n (include \"peephole.md\")\n (include \"pic.md\")\n (include \"generic.md\")\n (include \"sifive-7.md\")\n+(include \"thead.md\")\n (include \"vector.md\")"}, {"sha": "ff1dd4ddd4ff1b396fb6960101fab9f5329eb322", "filename": "gcc/config/riscv/riscv.opt", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Friscv.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.opt?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -235,6 +235,9 @@ int riscv_zm_subext\n TargetVariable\n int riscv_sv_subext\n \n+TargetVariable\n+int riscv_xthead_subext\n+\n Enum\n Name(isa_spec_class) Type(enum riscv_isa_spec_class)\n Supported ISA specs (for use with the -misa-spec= option):"}, {"sha": "6e326fc7e029583447fef75b81dbd35c35172590", "filename": "gcc/config/riscv/t-riscv", "status": "modified", "additions": 53, "deletions": 13, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Ft-riscv", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Ft-riscv", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Ft-riscv?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -1,6 +1,13 @@\n+RISCV_BUILTINS_H = $(srcdir)/config/riscv/riscv-vector-builtins.h \\\n+\t\t   $(srcdir)/config/riscv/riscv-vector-builtins.def \\\n+\t\t   $(srcdir)/config/riscv/riscv-vector-builtins-functions.def \\\n+\t\t   riscv-vector-type-indexer.gen.def\n+\n riscv-builtins.o: $(srcdir)/config/riscv/riscv-builtins.cc $(CONFIG_H) \\\n   $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) $(RECOG_H) langhooks.h \\\n-  $(DIAGNOSTIC_CORE_H) $(OPTABS_H) $(srcdir)/config/riscv/riscv-ftypes.def \\\n+  $(DIAGNOSTIC_CORE_H) $(OPTABS_H) $(RISCV_BUILTINS_H) \\\n+  $(srcdir)/config/riscv/riscv-ftypes.def \\\n+  $(srcdir)/config/riscv/riscv-vector-builtins-types.def \\\n   $(srcdir)/config/riscv/riscv-modes.def\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/riscv/riscv-builtins.cc\n@@ -9,22 +16,22 @@ riscv-vector-builtins.o: $(srcdir)/config/riscv/riscv-vector-builtins.cc \\\n   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(RTL_H) $(TM_P_H) \\\n   memmodel.h insn-codes.h $(OPTABS_H) $(RECOG_H) $(DIAGNOSTIC_H) $(EXPR_H) \\\n   $(FUNCTION_H) fold-const.h gimplify.h explow.h stor-layout.h $(REGS_H) \\\n-  alias.h langhooks.h attribs.h stringpool.h emit-rtl.h \\\n-  $(srcdir)/config/riscv/riscv-vector-builtins.h \\\n+  alias.h langhooks.h attribs.h stringpool.h emit-rtl.h basic-block.h \\\n+  gimple.h gimple-iterator.h \\\n   $(srcdir)/config/riscv/riscv-vector-builtins-shapes.h \\\n   $(srcdir)/config/riscv/riscv-vector-builtins-bases.h \\\n-  $(srcdir)/config/riscv/riscv-vector-builtins.def \\\n   $(srcdir)/config/riscv/riscv-vector-builtins-types.def \\\n-  $(srcdir)/config/riscv/riscv-vector-builtins-functions.def\n+  $(RISCV_BUILTINS_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/riscv/riscv-vector-builtins.cc\n \n riscv-vector-builtins-shapes.o: \\\n   $(srcdir)/config/riscv/riscv-vector-builtins-shapes.cc \\\n   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(RTL_H) \\\n   $(TM_P_H) memmodel.h insn-codes.h $(OPTABS_H) \\\n-  $(srcdir)/config/riscv/riscv-vector-builtins.h \\\n-  $(srcdir)/config/riscv/riscv-vector-builtins-shapes.h\n+  $(srcdir)/config/riscv/riscv-vector-builtins-shapes.h \\\n+  $(srcdir)/config/riscv/riscv-vector-builtins-bases.h \\\n+  $(RISCV_BUILTINS_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/riscv/riscv-vector-builtins-shapes.cc\n \n@@ -35,9 +42,9 @@ riscv-vector-builtins-bases.o: \\\n   $(EXPR_H) $(BASIC_BLOCK_H) $(FUNCTION_H) fold-const.h $(GIMPLE_H) \\\n   gimple-iterator.h gimplify.h explow.h $(EMIT_RTL_H) tree-vector-builder.h \\\n   rtx-vector-builder.h \\\n-  $(srcdir)/config/riscv/riscv-vector-builtins.h \\\n   $(srcdir)/config/riscv/riscv-vector-builtins-shapes.h \\\n-  $(srcdir)/config/riscv/riscv-vector-builtins-bases.h\n+  $(srcdir)/config/riscv/riscv-vector-builtins-bases.h \\\n+  $(RISCV_BUILTINS_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/riscv/riscv-vector-builtins-bases.cc\n \n@@ -59,19 +66,33 @@ riscv-vsetvl.o: $(srcdir)/config/riscv/riscv-vsetvl.cc \\\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/riscv/riscv-vsetvl.cc\n \n-riscv-d.o: $(srcdir)/config/riscv/riscv-d.cc\n+riscv-d.o: $(srcdir)/config/riscv/riscv-d.cc \\\n+  $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H)\n \t$(COMPILE) $<\n \t$(POSTCOMPILE)\n \n-riscv-shorten-memrefs.o: $(srcdir)/config/riscv/riscv-shorten-memrefs.cc\n+riscv-shorten-memrefs.o: $(srcdir)/config/riscv/riscv-shorten-memrefs.cc \\\n+  $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TARGET_H)\n \t$(COMPILE) $<\n \t$(POSTCOMPILE)\n \n-riscv-selftests.o: $(srcdir)/config/riscv/riscv-selftests.cc\n+riscv-selftests.o: $(srcdir)/config/riscv/riscv-selftests.cc \\\n+  $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) output.h \\\n+  $(C_COMMON_H) $(TARGET_H) $(OPTABS_H) $(EXPR_H) $(INSN_ATTR_H) $(EMIT_RTL_H)\n \t$(COMPILE) $<\n \t$(POSTCOMPILE)\n \n-riscv-v.o: $(srcdir)/config/riscv/riscv-v.cc\n+riscv-v.o: $(srcdir)/config/riscv/riscv-v.cc \\\n+  $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(RTL_H) \\\n+  $(TM_P_H) $(TARGET_H) memmodel.h insn-codes.h $(OPTABS_H) $(RECOG_H) \\\n+  $(EXPR_H) $(INSN_ATTR_H) explow.h $(EMIT_RTL_H) tree-vector-builder.h \\\n+  rtx-vector-builder.h\n+\t$(COMPILE) $<\n+\t$(POSTCOMPILE)\n+\n+thead.o: $(srcdir)/config/riscv/thead.cc \\\n+  $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TARGET_H) backend.h $(RTL_H) \\\n+  memmodel.h $(EMIT_RTL_H) poly-int.h output.h\n \t$(COMPILE) $<\n \t$(POSTCOMPILE)\n \n@@ -80,3 +101,22 @@ PASSES_EXTRA += $(srcdir)/config/riscv/riscv-passes.def\n $(common_out_file): $(srcdir)/config/riscv/riscv-cores.def \\\n     $(srcdir)/config/riscv/riscv-protos.h \\\n     $(srcdir)/config/riscv/riscv-subset.h\n+\n+build/genrvv-type-indexer.o: $(srcdir)/config/riscv/genrvv-type-indexer.cc $(RTL_BASE_H) $(BCONFIG_H) $(SYSTEM_H)\t\\\n+  $(CORETYPES_H) $(GTM_H) errors.h $(GENSUPPORT_H) insn-modes.h\n+\n+build/genrvv-type-indexer$(build_exeext): build/genrvv-type-indexer.o\n+\t+$(LINKER_FOR_BUILD) $(BUILD_LINKERFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t    $(filter-out $(BUILD_LIBDEPS), $^) $(BUILD_LIBS)\n+\n+$(srcdir)/config/riscv/riscv-vector-builtins.def: riscv-vector-type-indexer.gen.def\n+$(srcdir)/config/riscv/riscv-vector-builtins.h: $(srcdir)/config/riscv/riscv-vector-builtins.def\n+\n+riscv-vector-type-indexer.gen.def: s-riscv-vector-type-indexer.gen.defs ; @true\n+\n+s-riscv-vector-type-indexer.gen.defs: build/genrvv-type-indexer$(build_exeext)\n+\t$(RUN_GEN) build/genrvv-type-indexer$(build_exeext) tmp-riscv-vector-type-indexer.gen.def\n+\t$(SHELL) $(srcdir)/../move-if-change tmp-riscv-vector-type-indexer.gen.def    riscv-vector-type-indexer.gen.def\n+\t$(STAMP) s-riscv-vector-type-indexer.gen.defs\n+\n+genprog+=rvv-type-indexer"}, {"sha": "19b120308958b0689f2a0be260b5633eda4567da", "filename": "gcc/config/riscv/t-rtems", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Ft-rtems", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Ft-rtems", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Ft-rtems?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -1,8 +1,8 @@\n MULTILIB_OPTIONS\t=\n MULTILIB_DIRNAMES\t=\n \n-MULTILIB_OPTIONS\t+= march=rv32i/march=rv32im/march=rv32imafd/march=rv32iac/march=rv32imac/march=rv32imafc/march=rv64imafd/march=rv64imac/march=rv64imafdc\n-MULTILIB_DIRNAMES\t+= rv32i       rv32im       rv32imafd       rv32iac       rv32imac       rv32imafc       rv64imafd       rv64imac       rv64imafdc\n+MULTILIB_OPTIONS\t+= march=rv32i/march=rv32iac/march=rv32im/march=rv32ima/march=rv32imac/march=rv32imaf/march=rv32imafc/march=rv32imafd/march=rv32imafdc/march=rv64ima/march=rv64imac/march=rv64imafd/march=rv64imafdc\n+MULTILIB_DIRNAMES\t+= rv32i       rv32iac       rv32im       rv32ima       rv32imac       rv32imaf       rv32imafc       rv32imafd       rv32imafdc       rv64ima       rv64imac       rv64imafd       rv64imafdc\n \n MULTILIB_OPTIONS\t+= mabi=ilp32/mabi=ilp32f/mabi=ilp32d/mabi=lp64/mabi=lp64d\n MULTILIB_DIRNAMES\t+= ilp32      ilp32f      ilp32d      lp64      lp64d\n@@ -12,14 +12,15 @@ MULTILIB_DIRNAMES\t+= medany\n \n MULTILIB_REQUIRED\t=\n MULTILIB_REQUIRED\t+= march=rv32i/mabi=ilp32\n-MULTILIB_REQUIRED\t+= march=rv32im/mabi=ilp32\n-MULTILIB_REQUIRED\t+= march=rv32imafd/mabi=ilp32d\n MULTILIB_REQUIRED\t+= march=rv32iac/mabi=ilp32\n+MULTILIB_REQUIRED\t+= march=rv32im/mabi=ilp32\n+MULTILIB_REQUIRED\t+= march=rv32ima/mabi=ilp32\n MULTILIB_REQUIRED\t+= march=rv32imac/mabi=ilp32\n+MULTILIB_REQUIRED\t+= march=rv32imaf/mabi=ilp32f\n MULTILIB_REQUIRED\t+= march=rv32imafc/mabi=ilp32f\n-MULTILIB_REQUIRED\t+= march=rv64imafd/mabi=lp64d\n-MULTILIB_REQUIRED\t+= march=rv64imafd/mabi=lp64d/mcmodel=medany\n-MULTILIB_REQUIRED\t+= march=rv64imac/mabi=lp64\n+MULTILIB_REQUIRED\t+= march=rv32imafd/mabi=ilp32d\n+MULTILIB_REQUIRED\t+= march=rv32imafdc/mabi=ilp32d\n+MULTILIB_REQUIRED\t+= march=rv64ima/mabi=lp64/mcmodel=medany\n MULTILIB_REQUIRED\t+= march=rv64imac/mabi=lp64/mcmodel=medany\n-MULTILIB_REQUIRED\t+= march=rv64imafdc/mabi=lp64d\n+MULTILIB_REQUIRED\t+= march=rv64imafd/mabi=lp64d/mcmodel=medany\n MULTILIB_REQUIRED\t+= march=rv64imafdc/mabi=lp64d/mcmodel=medany"}, {"sha": "752038053102cee81f3797a813157ebcff7d5c94", "filename": "gcc/config/riscv/thead.cc", "status": "added", "additions": 427, "deletions": 0, "changes": 427, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Fthead.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Fthead.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Fthead.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -0,0 +1,427 @@\n+/* Subroutines used for code generation for RISC-V.\n+   Copyright (C) 2023 Free Software Foundation, Inc.\n+   Contributed by Christoph M\u00fcllner (christoph.muellner@vrull.eu).\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3, or (at your option)\n+   any later version.\n+\n+   GCC is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GCC; see the file COPYING3.  If not see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#define IN_TARGET_CODE 1\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"target.h\"\n+#include \"backend.h\"\n+#include \"rtl.h\"\n+#include \"memmodel.h\"\n+#include \"emit-rtl.h\"\n+#include \"poly-int.h\"\n+#include \"output.h\"\n+\n+/* If MEM is in the form of \"base+offset\", extract the two parts\n+   of address and set to BASE and OFFSET, otherwise return false\n+   after clearing BASE and OFFSET.  */\n+\n+static bool\n+extract_base_offset_in_addr (rtx mem, rtx *base, rtx *offset)\n+{\n+  rtx addr;\n+\n+  gcc_assert (MEM_P (mem));\n+\n+  addr = XEXP (mem, 0);\n+\n+  if (REG_P (addr))\n+    {\n+      *base = addr;\n+      *offset = const0_rtx;\n+      return true;\n+    }\n+\n+  if (GET_CODE (addr) == PLUS\n+      && REG_P (XEXP (addr, 0)) && CONST_INT_P (XEXP (addr, 1)))\n+    {\n+      *base = XEXP (addr, 0);\n+      *offset = XEXP (addr, 1);\n+      return true;\n+    }\n+\n+  *base = NULL_RTX;\n+  *offset = NULL_RTX;\n+\n+  return false;\n+}\n+\n+/* If X is a PLUS of a CONST_INT, return the two terms in *BASE_PTR\n+   and *OFFSET_PTR.  Return X in *BASE_PTR and 0 in *OFFSET_PTR otherwise.  */\n+\n+static void\n+split_plus (rtx x, rtx *base_ptr, HOST_WIDE_INT *offset_ptr)\n+{\n+  if (GET_CODE (x) == PLUS && CONST_INT_P (XEXP (x, 1)))\n+    {\n+      *base_ptr = XEXP (x, 0);\n+      *offset_ptr = INTVAL (XEXP (x, 1));\n+    }\n+  else\n+    {\n+      *base_ptr = x;\n+      *offset_ptr = 0;\n+    }\n+}\n+\n+/* Output a mempair instruction with the provided OPERANDS.\n+   LOAD_P is true if a we have a pair of loads (stores otherwise).\n+   MODE is the access mode (DI or SI).\n+   CODE is the extension code (UNKNOWN, SIGN_EXTEND or ZERO_EXTEND).\n+   This instruction does not handle invalid inputs gracefully,\n+   but is full of assertions to ensure that only valid instructions\n+   are emitted.  */\n+\n+const char *\n+th_mempair_output_move (rtx operands[4], bool load_p,\n+\t\t\tmachine_mode mode, RTX_CODE code)\n+{\n+  rtx reg1, reg2, mem1, mem2, base1, base2;\n+  HOST_WIDE_INT offset1, offset2;\n+  rtx output_operands[5];\n+  const char* format;\n+\n+  gcc_assert (mode == SImode || mode == DImode);\n+\n+  /* Paired 64-bit access instructions have a fixed shift amount of 4.\n+     Paired 32-bit access instructions have a fixed shift amount of 3.  */\n+  unsigned shamt = (mode == DImode) ? 4 : 3;\n+\n+  if (load_p)\n+    {\n+\treg1 = copy_rtx (operands[0]);\n+\treg2 = copy_rtx (operands[2]);\n+\tmem1 = copy_rtx (operands[1]);\n+\tmem2 = copy_rtx (operands[3]);\n+\n+\tif (mode == SImode)\n+\t  if (code == ZERO_EXTEND)\n+\t    format = \"th.lwud\\t%0, %1, (%2), %3, %4\";\n+\t  else //SIGN_EXTEND or UNKNOWN\n+\t    format = \"th.lwd\\t%0, %1, (%2), %3, %4\";\n+\telse\n+\t  format = \"th.ldd\\t%0, %1, (%2), %3, %4\";\n+    }\n+  else\n+    {\n+\treg1 = copy_rtx (operands[1]);\n+\treg2 = copy_rtx (operands[3]);\n+\tmem1 = copy_rtx (operands[0]);\n+\tmem2 = copy_rtx (operands[2]);\n+\n+\tif (mode == SImode)\n+\t  format = \"th.swd\\t%z0, %z1, (%2), %3, %4\";\n+\telse\n+\t  format = \"th.sdd\\t%z0, %z1, (%2), %3, %4\";\n+    }\n+\n+  split_plus (XEXP (mem1, 0), &base1, &offset1);\n+  split_plus (XEXP (mem2, 0), &base2, &offset2);\n+  gcc_assert (rtx_equal_p (base1, base2));\n+  auto size1 = MEM_SIZE (mem1);\n+  auto size2 = MEM_SIZE (mem2);\n+  gcc_assert (known_eq (size1, size2));\n+  gcc_assert (known_eq (offset1 + size1, offset2));\n+\n+  HOST_WIDE_INT imm2 = offset1 >> shamt;\n+\n+  /* Make sure all mempair instruction constraints are met.  */\n+  gcc_assert (imm2 >= 0 && imm2 < 4);\n+  gcc_assert ((imm2 << shamt) == offset1);\n+  gcc_assert (REG_P (reg1));\n+  gcc_assert (REG_P (reg2));\n+  gcc_assert (REG_P (base1));\n+  if (load_p)\n+    {\n+      gcc_assert (REGNO (reg1) != REGNO (reg2));\n+      gcc_assert (REGNO (reg1) != REGNO (base1));\n+      gcc_assert (REGNO (reg2) != REGNO (base1));\n+    }\n+\n+  /* Output the mempair instruction.  */\n+  output_operands[0] = copy_rtx (reg1);\n+  output_operands[1] = copy_rtx (reg2);\n+  output_operands[2] = copy_rtx (base1);\n+  output_operands[3] = gen_rtx_CONST_INT (mode, imm2);\n+  output_operands[4] = gen_rtx_CONST_INT (mode, shamt);\n+  output_asm_insn (format, output_operands);\n+\n+  return \"\";\n+}\n+\n+/* Analyse if a pair of loads/stores MEM1 and MEM2 with given MODE\n+   are consecutive so they can be merged into a mempair instruction.\n+   RESERVED will be set to true, if a reversal of the accesses is\n+   required (false otherwise). Returns true if the accesses can be\n+   merged (even if reversing is necessary) and false if not.  */\n+\n+static bool\n+th_mempair_check_consecutive_mems (machine_mode mode, rtx *mem1, rtx *mem2,\n+\t\t\t\t   bool *reversed)\n+{\n+  rtx base1, base2, offset1, offset2;\n+  extract_base_offset_in_addr (*mem1, &base1, &offset1);\n+  extract_base_offset_in_addr (*mem2, &base2, &offset2);\n+\n+  /* Make sure both mems are in base+offset form.  */\n+  if (!base1 || !base2)\n+    return false;\n+\n+  /* If both mems use the same base register, just check the offsets.  */\n+  if (rtx_equal_p (base1, base2))\n+    {\n+      auto size = GET_MODE_SIZE (mode);\n+\n+      if (known_eq (UINTVAL (offset1) + size, UINTVAL (offset2)))\n+\t{\n+\t  *reversed = false;\n+\t  return true;\n+\t}\n+\n+      if (known_eq (UINTVAL (offset2) + size, UINTVAL (offset1)))\n+\t{\n+\t  *reversed = true;\n+\t  return true;\n+\t}\n+\n+      return false;\n+    }\n+\n+  return false;\n+}\n+\n+/* Check if the given MEM can be used to define the address of a mempair\n+   instruction.  */\n+\n+static bool\n+th_mempair_operand_p (rtx mem, machine_mode mode)\n+{\n+  if (!MEM_SIZE_KNOWN_P (mem))\n+    return false;\n+\n+  /* Only DI or SI mempair instructions exist.  */\n+  gcc_assert (mode == SImode || mode == DImode);\n+  auto mem_sz = MEM_SIZE (mem);\n+  auto mode_sz = GET_MODE_SIZE (mode);\n+  if (!known_eq (mem_sz, mode_sz))\n+    return false;\n+\n+  /* Paired 64-bit access instructions have a fixed shift amount of 4.\n+     Paired 32-bit access instructions have a fixed shift amount of 3.  */\n+  machine_mode mem_mode = GET_MODE (mem);\n+  unsigned shamt = (mem_mode == DImode) ? 4 : 3;\n+\n+  rtx base;\n+  HOST_WIDE_INT offset;\n+  split_plus (XEXP (mem, 0), &base, &offset);\n+  HOST_WIDE_INT imm2 = offset >> shamt;\n+\n+  if (imm2 < 0 || imm2 >= 4)\n+    return false;\n+\n+  if ((imm2 << shamt) != offset)\n+    return false;\n+\n+  return true;\n+}\n+\n+static bool\n+th_mempair_load_overlap_p (rtx reg1, rtx reg2, rtx mem)\n+{\n+  if (REGNO (reg1) == REGNO (reg2))\n+    return true;\n+\n+  if (reg_overlap_mentioned_p (reg1, mem))\n+    return true;\n+\n+  rtx base;\n+  HOST_WIDE_INT offset;\n+  split_plus (XEXP (mem, 0), &base, &offset);\n+\n+  if (!REG_P (base))\n+    return true;\n+\n+  if (REG_P (base))\n+    {\n+      if (REGNO (base) == REGNO (reg1)\n+\t  || REGNO (base) == REGNO (reg2))\n+\treturn true;\n+    }\n+\n+  return false;\n+}\n+\n+/* Given OPERANDS of consecutive load/store, check if we can merge\n+   them into load-pair or store-pair instructions.\n+   LOAD is true if they are load instructions.\n+   MODE is the mode of memory operation.  */\n+\n+bool\n+th_mempair_operands_p (rtx operands[4], bool load_p,\n+\t\t       machine_mode mode)\n+{\n+  rtx mem_1, mem_2, reg_1, reg_2;\n+\n+  if (load_p)\n+    {\n+      reg_1 = operands[0];\n+      mem_1 = operands[1];\n+      reg_2 = operands[2];\n+      mem_2 = operands[3];\n+      if (!REG_P (reg_1) || !REG_P (reg_2))\n+\treturn false;\n+      if (th_mempair_load_overlap_p (reg_1, reg_2, mem_1))\n+\treturn false;\n+      if (th_mempair_load_overlap_p (reg_1, reg_2, mem_2))\n+\treturn false;\n+    }\n+  else\n+    {\n+      mem_1 = operands[0];\n+      reg_1 = operands[1];\n+      mem_2 = operands[2];\n+      reg_2 = operands[3];\n+    }\n+\n+  /* Check if the registers are GP registers.  */\n+  if (!REG_P (reg_1) || !GP_REG_P (REGNO (reg_1))\n+      || !REG_P (reg_2) || !GP_REG_P (REGNO (reg_2)))\n+    return false;\n+\n+  /* The mems cannot be volatile.  */\n+  if (!MEM_P (mem_1) || !MEM_P (mem_2))\n+    return false;\n+  if (MEM_VOLATILE_P (mem_1) || MEM_VOLATILE_P (mem_2))\n+    return false;\n+\n+  /* If we have slow unaligned access, we only accept aligned memory.  */\n+  if (riscv_slow_unaligned_access_p\n+      && known_lt (MEM_ALIGN (mem_1), GET_MODE_SIZE (mode) * BITS_PER_UNIT))\n+    return false;\n+\n+  /* Check if the addresses are in the form of [base+offset].  */\n+  bool reversed = false;\n+  if (!th_mempair_check_consecutive_mems (mode, &mem_1, &mem_2, &reversed))\n+    return false;\n+\n+  /* The first memory accesses must be a mempair operand.  */\n+  if ((!reversed && !th_mempair_operand_p (mem_1, mode))\n+      || (reversed && !th_mempair_operand_p (mem_2, mode)))\n+    return false;\n+\n+  /* The operands must be of the same size.  */\n+  gcc_assert (known_eq (GET_MODE_SIZE (GET_MODE (mem_1)),\n+\t\t\tGET_MODE_SIZE (GET_MODE (mem_2))));\n+\n+  return true;\n+}\n+\n+/* Given OPERANDS of consecutive load/store that can be merged,\n+   swap them if they are not in ascending order.\n+   Return true if swap was performed.  */\n+void\n+th_mempair_order_operands (rtx operands[4], bool load_p, machine_mode mode)\n+{\n+  int mem_op = load_p ? 1 : 0;\n+  bool reversed = false;\n+  if (!th_mempair_check_consecutive_mems (mode,\n+\t\t\t\t\t  operands + mem_op,\n+\t\t\t\t\t  operands + mem_op + 2,\n+\t\t\t\t\t  &reversed))\n+    gcc_unreachable ();\n+\n+  if (reversed)\n+    {\n+      /* Irrespective of whether this is a load or a store,\n+\t we do the same swap.  */\n+      std::swap (operands[0], operands[2]);\n+      std::swap (operands[1], operands[3]);\n+    }\n+}\n+\n+/* Similar like riscv_save_reg, but saves two registers to memory\n+   and marks the resulting instruction as frame-related.  */\n+\n+static void\n+th_mempair_save_regs (rtx operands[4])\n+{\n+  rtx set1 = gen_rtx_SET (operands[0], operands[1]);\n+  rtx set2 = gen_rtx_SET (operands[2], operands[3]);\n+  rtx insn = emit_insn (gen_rtx_PARALLEL (VOIDmode, gen_rtvec (2, set1, set2)));\n+  RTX_FRAME_RELATED_P (insn) = 1;\n+  add_reg_note (insn, REG_CFA_OFFSET, copy_rtx (set1));\n+  add_reg_note (insn, REG_CFA_OFFSET, copy_rtx (set2));\n+}\n+\n+/* Similar like riscv_restore_reg, but restores two registers from memory\n+   and marks the instruction frame-related.  */\n+\n+static void\n+th_mempair_restore_regs (rtx operands[4])\n+{\n+  rtx set1 = gen_rtx_SET (operands[0], operands[1]);\n+  rtx set2 = gen_rtx_SET (operands[2], operands[3]);\n+  rtx insn = emit_insn (gen_rtx_PARALLEL (VOIDmode, gen_rtvec (2, set1, set2)));\n+  RTX_FRAME_RELATED_P (insn) = 1;\n+  add_reg_note (insn, REG_CFA_RESTORE, operands[0]);\n+  add_reg_note (insn, REG_CFA_RESTORE, operands[2]);\n+}\n+\n+/* Prepare the OPERANDS array to emit a mempair instruction using the\n+   provided information. No checks are performed, the resulting array\n+   should be validated using th_mempair_operands_p().  */\n+\n+void\n+th_mempair_prepare_save_restore_operands (rtx operands[4],\n+\t\t\t\t\t  bool load_p, machine_mode mode,\n+\t\t\t\t\t  int regno, HOST_WIDE_INT offset,\n+\t\t\t\t\t  int regno2, HOST_WIDE_INT offset2)\n+{\n+  int reg_op = load_p ? 0 : 1;\n+  int mem_op = load_p ? 1 : 0;\n+\n+  rtx mem1 = plus_constant (mode, stack_pointer_rtx, offset);\n+  mem1 = gen_frame_mem (mode, mem1);\n+  rtx mem2 = plus_constant (mode, stack_pointer_rtx, offset2);\n+  mem2 = gen_frame_mem (mode, mem2);\n+\n+  operands[reg_op] = gen_rtx_REG (mode, regno);\n+  operands[mem_op] = mem1;\n+  operands[2 + reg_op] = gen_rtx_REG (mode, regno2);\n+  operands[2 + mem_op] = mem2;\n+}\n+\n+/* Emit a mempair instruction to save/restore two registers to/from stack.  */\n+\n+void\n+th_mempair_save_restore_regs (rtx operands[4], bool load_p,\n+\t\t\t\t machine_mode mode)\n+{\n+  gcc_assert (th_mempair_operands_p (operands, load_p, mode));\n+\n+  th_mempair_order_operands (operands, load_p, mode);\n+\n+  if (load_p)\n+    th_mempair_restore_regs (operands);\n+  else\n+    th_mempair_save_regs (operands);\n+}"}, {"sha": "0623607d3dc55ce878e4ad1abcc63783bbc8c0df", "filename": "gcc/config/riscv/thead.md", "status": "added", "additions": 346, "deletions": 0, "changes": 346, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Fthead.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Fthead.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Fthead.md?ref=3757e8d71794cece4a5c9d08245b7ad111044853", "patch": "@@ -0,0 +1,346 @@\n+;; Machine description for T-Head vendor extensions\n+;; Copyright (C) 2021-2022 Free Software Foundation, Inc.\n+\n+;; This file is part of GCC.\n+\n+;; GCC is free software; you can redistribute it and/or modify\n+;; it under the terms of the GNU General Public License as published by\n+;; the Free Software Foundation; either version 3, or (at your option)\n+;; any later version.\n+\n+;; GCC is distributed in the hope that it will be useful,\n+;; but WITHOUT ANY WARRANTY; without even the implied warranty of\n+;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+;; GNU General Public License for more details.\n+\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING3.  If not see\n+;; <http://www.gnu.org/licenses/>.\n+\n+;; XTheadBa\n+\n+(define_insn \"*th_addsl<mode>4\"\n+  [(set (match_operand:X 0 \"register_operand\" \"=r\")\n+\t(plus:X (ashift:X (match_operand:X 1 \"register_operand\" \"r\")\n+\t\t\t  (match_operand 2 \"const_int_operand\" \"n\"))\n+\t\t(match_operand:X 3 \"register_operand\" \"r\")))]\n+  \"TARGET_XTHEADBA\n+   && (INTVAL (operands[2]) >= 0) && (INTVAL (operands[2]) <= 3)\"\n+  \"th.addsl\\t%0,%3,%1,%2\"\n+  [(set_attr \"type\" \"bitmanip\")\n+   (set_attr \"mode\" \"<X:MODE>\")])\n+\n+;; XTheadBb\n+\n+(define_insn \"*th_srri<mode>3\"\n+  [(set (match_operand:GPR 0 \"register_operand\" \"=r\")\n+\t(rotatert:GPR (match_operand:GPR 1 \"register_operand\" \"r\")\n+\t\t     (match_operand 2 \"const_int_operand\" \"n\")))]\n+  \"TARGET_XTHEADBB && (TARGET_64BIT || <MODE>mode == SImode)\"\n+  {\n+    bool wform = TARGET_64BIT && (<MODE>mode == SImode);\n+    operands[2] = GEN_INT (INTVAL (operands[2])\n+                  & (GET_MODE_BITSIZE (<MODE>mode) - 1));\n+    return wform ? \"th.srriw\\t%0,%1,%2\" : \"th.srri\\t%0,%1,%2\";\n+  }\n+  [(set_attr \"type\" \"bitmanip\")\n+   (set_attr \"mode\" \"<GPR:MODE>\")])\n+\n+(define_insn \"*th_ext<mode>4\"\n+  [(set (match_operand:GPR 0 \"register_operand\" \"=r\")\n+\t(sign_extract:GPR (match_operand:GPR 1 \"register_operand\" \"r\")\n+\t\t\t(match_operand 2 \"const_int_operand\")\n+\t\t\t(match_operand 3 \"const_int_operand\")))]\n+  \"TARGET_XTHEADBB\"\n+{\n+  operands[2] = GEN_INT (INTVAL (operands[2]) + INTVAL (operands[3]) - 1);\n+  return \"th.ext\\t%0,%1,%2,%3\";\n+}\n+  [(set_attr \"type\" \"bitmanip\")\n+   (set_attr \"mode\" \"<GPR:MODE>\")])\n+\n+(define_insn \"*th_extu<mode>4\"\n+  [(set (match_operand:GPR 0 \"register_operand\" \"=r\")\n+\t(zero_extract:GPR (match_operand:GPR 1 \"register_operand\" \"r\")\n+\t\t\t(match_operand 2 \"const_int_operand\")\n+\t\t\t(match_operand 3 \"const_int_operand\")))]\n+  \"TARGET_XTHEADBB\"\n+{\n+  operands[2] = GEN_INT (INTVAL (operands[2]) + INTVAL (operands[3]) - 1);\n+  return \"th.extu\\t%0,%1,%2,%3\";\n+}\n+  [(set_attr \"type\" \"bitmanip\")\n+   (set_attr \"mode\" \"<GPR:MODE>\")])\n+\n+(define_insn \"*th_clz<mode>2\"\n+  [(set (match_operand:X 0 \"register_operand\" \"=r\")\n+\t(clz:X (match_operand:X 1 \"register_operand\" \"r\")))]\n+  \"TARGET_XTHEADBB\"\n+  \"th.ff1\\t%0,%1\"\n+  [(set_attr \"type\" \"bitmanip\")\n+   (set_attr \"mode\" \"<X:MODE>\")])\n+\n+(define_insn \"*th_rev<mode>2\"\n+  [(set (match_operand:GPR 0 \"register_operand\" \"=r\")\n+\t(bswap:GPR (match_operand:GPR 1 \"register_operand\" \"r\")))]\n+  \"TARGET_XTHEADBB && (TARGET_64BIT || <MODE>mode == SImode)\"\n+  {\n+    bool wform = TARGET_64BIT && (<MODE>mode == SImode);\n+    return wform ? \"th.revw\\t%0,%1\" : \"th.rev\\t%0,%1\";\n+  }\n+  [(set_attr \"type\" \"bitmanip\")\n+   (set_attr \"mode\" \"<GPR:MODE>\")])\n+\n+;; XTheadBs\n+\n+(define_insn \"*th_tst<mode>3\"\n+  [(set (match_operand:X 0 \"register_operand\" \"=r\")\n+\t(zero_extract:X (match_operand:X 1 \"register_operand\" \"r\")\n+\t\t\t(const_int 1)\n+\t\t\t(match_operand 2 \"const_int_operand\" \"n\")))]\n+  \"TARGET_XTHEADBS && UINTVAL (operands[2]) < GET_MODE_BITSIZE (<MODE>mode)\"\n+  \"th.tst\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"bitmanip\")])\n+\n+;; XTheadCondMov\n+\n+(define_insn \"*th_cond_mov<GPR:mode><GPR2:mode>\"\n+  [(set (match_operand:GPR 0 \"register_operand\" \"=r,r\")\n+\t(if_then_else:GPR\n+\t (match_operator 4 \"equality_operator\"\n+\t\t[(match_operand:GPR2 1 \"register_operand\" \"r,r\")\n+\t\t (const_int 0)])\n+\t (match_operand:GPR 2 \"reg_or_0_operand\" \"rJ,0\")\n+\t (match_operand:GPR 3 \"reg_or_0_operand\" \"0,rJ\")))]\n+  \"TARGET_XTHEADCONDMOV\"\n+{\n+  if (which_alternative == 0)\n+    return \"th.mv%C4z\\t%0,%z2,%1\";\n+\n+  /* Invert the condition and take else-block.  */\n+  rtx_code code = GET_CODE (operands[4]);\n+  code = (code == EQ) ? NE : EQ;\n+  operands[4] = gen_rtx_fmt_ee (code, VOIDmode, const0_rtx, const0_rtx);\n+  return \"th.mv%C4z\\t%0,%z3,%1\";\n+}\n+  [(set_attr \"type\" \"condmove\")\n+   (set_attr \"mode\" \"<GPR:MODE>\")])\n+\n+(define_insn \"*th_cond_gpr_mov<GPR:mode><GPR2:mode>\"\n+  [(set (match_operand:GPR 0 \"register_operand\" \"=r,r\")\n+\t(if_then_else:GPR\n+\t (match_operand:GPR2 1 \"register_operand\" \"r,r\")\n+\t (match_operand:GPR 2 \"reg_or_0_operand\" \"rJ,0\")\n+\t (match_operand:GPR 3 \"reg_or_0_operand\" \"0,rJ\")))]\n+  \"TARGET_XTHEADCONDMOV\"\n+  \"@\n+   th.mvnez\\t%0,%z2,%1\n+   th.mveqz\\t%0,%z3,%1\"\n+  [(set_attr \"type\" \"condmove\")\n+   (set_attr \"mode\" \"<GPR:MODE>\")])\n+\n+;; XTheadFmv\n+\n+;; In RV32, we lack fmv.x.d and fmv.d.x, but XTheadFmv has instructions\n+;; that cover this case.\n+\n+(define_insn \"th_fmv_hw_w_x\"\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n+\t(unspec:DF [(match_operand:SI 1 \"register_operand\" \"r\")\n+                (match_operand:SI 2 \"register_operand\" \"r\")]\n+     UNSPEC_XTHEADFMV))]\n+  \"!TARGET_64BIT && TARGET_XTHEADFMV\"\n+  \"fmv.w.x\\t%0,%2\\n\\tth.fmv.hw.x\\t%0,%1\"\n+  [(set_attr \"move_type\" \"move\")\n+   (set_attr \"mode\" \"DF\")])\n+\n+(define_insn \"th_fmv_x_w\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(unspec:SI [(match_operand:DF 1 \"register_operand\" \"f\")]\n+     UNSPEC_XTHEADFMV))]\n+  \"!TARGET_64BIT && TARGET_XTHEADFMV\"\n+  \"fmv.x.w\\t%0,%1\"\n+  [(set_attr \"move_type\" \"move\")\n+   (set_attr \"mode\" \"DF\")])\n+\n+(define_insn \"th_fmv_x_hw\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(unspec:SI [(match_operand:DF 1 \"register_operand\" \"f\")]\n+     UNSPEC_XTHEADFMV_HW))]\n+  \"!TARGET_64BIT && TARGET_XTHEADFMV\"\n+  \"th.fmv.x.hw\\t%0,%1\"\n+  [(set_attr \"move_type\" \"move\")\n+   (set_attr \"mode\" \"DF\")])\n+\n+;; XTheadMac\n+\n+(define_insn \"*th_mula<mode>\"\n+  [(set (match_operand:X 0 \"register_operand\" \"=r\")\n+\t      (plus:X (mult:X (match_operand:X 1 \"register_operand\" \"r\")\n+\t\t\t      (match_operand:X 2 \"register_operand\" \"r\"))\n+\t\t      (match_operand:X 3 \"register_operand\" \"0\")))]\n+  \"TARGET_XTHEADMAC\"\n+  \"th.mula\\\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"imul\")\n+   (set_attr \"mode\" \"<MODE>\")]\n+)\n+\n+(define_insn \"*th_mulawsi\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(sign_extend:DI\n+\t  (plus:SI (mult:SI (match_operand:SI 1 \"register_operand\" \"r\")\n+\t\t\t    (match_operand:SI 2 \"register_operand\" \"r\"))\n+\t\t   (match_operand:SI 3 \"register_operand\" \"0\"))))]\n+  \"TARGET_XTHEADMAC && TARGET_64BIT\"\n+  \"th.mulaw\\\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"imul\")\n+   (set_attr \"mode\" \"SI\")]\n+)\n+\n+(define_insn \"*th_mulawsi2\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t      (plus:SI (mult:SI (match_operand:SI 1 \"register_operand\" \"r\")\n+\t\t\t\t(match_operand:SI 2 \"register_operand\" \"r\"))\n+\t\t       (match_operand:SI 3 \"register_operand\" \"0\")))]\n+  \"TARGET_XTHEADMAC && TARGET_64BIT\"\n+  \"th.mulaw\\\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"imul\")\n+   (set_attr \"mode\" \"SI\")]\n+)\n+\n+(define_insn \"*th_maddhisi4\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t  (plus:SI\n+\t    (mult:SI\n+\t      (sign_extend:SI (match_operand:HI 1 \"register_operand\" \" r\"))\n+\t      (sign_extend:SI (match_operand:HI 2 \"register_operand\" \" r\")))\n+\t    (match_operand:SI 3 \"register_operand\" \" 0\")))]\n+  \"TARGET_XTHEADMAC\"\n+  \"th.mulah\\\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"imul\")\n+   (set_attr \"mode\" \"SI\")]\n+)\n+\n+(define_insn \"*th_sextw_maddhisi4\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(sign_extend:DI\n+\t  (plus:SI\n+\t    (mult:SI\n+\t      (sign_extend:SI (match_operand:HI 1 \"register_operand\" \" r\"))\n+\t      (sign_extend:SI (match_operand:HI 2 \"register_operand\" \" r\")))\n+\t    (match_operand:SI 3 \"register_operand\" \" 0\"))))]\n+  \"TARGET_XTHEADMAC && TARGET_64BIT\"\n+  \"th.mulah\\\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"imul\")\n+   (set_attr \"mode\" \"SI\")]\n+)\n+\n+(define_insn \"*th_muls<mode>\"\n+  [(set (match_operand:X 0 \"register_operand\" \"=r\")\n+\t      (minus:X (match_operand:X 3 \"register_operand\" \"0\")\n+\t\t       (mult:X (match_operand:X 1 \"register_operand\" \"r\")\n+\t\t\t       (match_operand:X 2 \"register_operand\" \"r\"))))]\n+  \"TARGET_XTHEADMAC\"\n+  \"th.muls\\\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"imul\")\n+   (set_attr \"mode\" \"<MODE>\")]\n+)\n+\n+(define_insn \"*th_mulswsi\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(sign_extend:DI\n+\t  (minus:SI (match_operand:SI 3 \"register_operand\" \"0\")\n+\t\t    (mult:SI (match_operand:SI 1 \"register_operand\" \"r\")\n+\t\t\t     (match_operand:SI 2 \"register_operand\" \"r\")))))]\n+  \"TARGET_XTHEADMAC && TARGET_64BIT\"\n+  \"th.mulsw\\\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"imul\")\n+   (set_attr \"mode\" \"SI\")]\n+)\n+\n+(define_insn \"*th_mulswsi2\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(minus:SI (match_operand:SI 3 \"register_operand\" \"0\")\n+\t\t  (mult:SI (match_operand:SI 1 \"register_operand\" \"r\")\n+\t\t\t   (match_operand:SI 2 \"register_operand\" \"r\"))))]\n+  \"TARGET_XTHEADMAC && TARGET_64BIT\"\n+  \"th.mulsw\\\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"imul\")\n+   (set_attr \"mode\" \"SI\")]\n+)\n+\n+(define_insn \"*th_msubhisi4\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(minus:SI (match_operand:SI 3 \"register_operand\" \" 0\")\n+\t  (mult:SI (sign_extend:SI (match_operand:HI 1 \"register_operand\" \" r\"))\n+\t    (sign_extend:SI (match_operand:HI 2 \"register_operand\" \" r\")))))]\n+  \"TARGET_XTHEADMAC\"\n+  \"th.mulsh\\\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"imul\")\n+   (set_attr \"mode\" \"SI\")]\n+)\n+\n+(define_insn \"*th_sextw_msubhisi4\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(sign_extend:DI\n+\t  (minus:SI (match_operand:SI 3 \"register_operand\" \" 0\")\n+\t    (mult:SI\n+\t      (sign_extend:SI (match_operand:HI 1 \"register_operand\" \" r\"))\n+\t      (sign_extend:SI (match_operand:HI 2 \"register_operand\" \" r\"))))))]\n+  \"TARGET_XTHEADMAC && TARGET_64BIT\"\n+  \"th.mulsh\\\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"imul\")\n+   (set_attr \"mode\" \"SI\")]\n+)\n+\n+;; XTheadMemPair\n+\n+;; MEMPAIR load 64/32 bit\n+(define_insn \"*th_mempair_load_<GPR:mode>2\"\n+  [(set (match_operand:GPR 0 \"register_operand\" \"=r\")\n+\t(match_operand:GPR 1 \"memory_operand\" \"m\"))\n+   (set (match_operand:GPR 2 \"register_operand\" \"=r\")\n+\t(match_operand:GPR 3 \"memory_operand\" \"m\"))]\n+  \"TARGET_XTHEADMEMPAIR && reload_completed\n+   && th_mempair_operands_p (operands, true, <GPR:MODE>mode)\"\n+  { return th_mempair_output_move (operands, true, <GPR:MODE>mode, UNKNOWN); }\n+  [(set_attr \"move_type\" \"load\")\n+   (set_attr \"mode\" \"<GPR:MODE>\")])\n+\n+;; MEMPAIR store 64/32 bit\n+(define_insn \"*th_mempair_store_<GPR:mode>2\"\n+  [(set (match_operand:GPR 0 \"memory_operand\" \"=m\")\n+\t(match_operand:GPR 1 \"register_operand\" \"r\"))\n+   (set (match_operand:GPR 2 \"memory_operand\" \"=m\")\n+\t(match_operand:GPR 3 \"register_operand\" \"r\"))]\n+  \"TARGET_XTHEADMEMPAIR && reload_completed\n+   && th_mempair_operands_p (operands, false, <GPR:MODE>mode)\"\n+  { return th_mempair_output_move (operands, false, <GPR:MODE>mode, UNKNOWN); }\n+  [(set_attr \"move_type\" \"store\")\n+   (set_attr \"mode\" \"<GPR:MODE>\")])\n+\n+;; MEMPAIR load DI extended signed SI\n+(define_insn \"*th_mempair_load_extendsidi2\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(sign_extend:DI (match_operand:SI 1 \"memory_operand\" \"m\")))\n+   (set (match_operand:DI 2 \"register_operand\" \"=r\")\n+\t(sign_extend:DI (match_operand:SI 3 \"memory_operand\" \"m\")))]\n+  \"TARGET_XTHEADMEMPAIR && TARGET_64BIT && reload_completed\n+   && th_mempair_operands_p (operands, true, SImode)\"\n+  { return th_mempair_output_move (operands, true, SImode, SIGN_EXTEND); }\n+  [(set_attr \"move_type\" \"load\")\n+   (set_attr \"mode\" \"DI\")\n+   (set_attr \"length\" \"8\")])\n+\n+;; MEMPAIR load DI extended unsigned SI\n+(define_insn \"*th_mempair_load_zero_extendsidi2\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(zero_extend:DI (match_operand:SI 1 \"memory_operand\" \"m\")))\n+   (set (match_operand:DI 2 \"register_operand\" \"=r\")\n+\t(zero_extend:DI (match_operand:SI 3 \"memory_operand\" \"m\")))]\n+  \"TARGET_XTHEADMEMPAIR && TARGET_64BIT && reload_completed\n+   && th_mempair_operands_p (operands, true, SImode)\"\n+  { return th_mempair_output_move (operands, true, SImode, ZERO_EXTEND); }\n+  [(set_attr \"move_type\" \"load\")\n+   (set_attr \"mode\" \"DI\")\n+   (set_attr \"length\" \"8\")])"}, {"sha": "194e9b8f57fdfec3121cbd84b31f87ab35f2844a", "filename": "gcc/config/riscv/vector-iterators.md", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Fvector-iterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Fvector-iterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Fvector-iterators.md?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "0ecca98f20cd19c172b7486a05f49cc2d96f1ed4", "filename": "gcc/config/riscv/vector.md", "status": "modified", "additions": 3867, "deletions": 1254, "changes": 5121, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Fvector.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Friscv%2Fvector.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Fvector.md?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "49b0c964f4da76120b35380ad8fbf77c61747125", "filename": "gcc/config/rs6000/altivec.md", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Frs6000%2Faltivec.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Frs6000%2Faltivec.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.md?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "44d01a83d8d04c7e9fa2b21b3cc76fe25eefe740", "filename": "gcc/config/rs6000/emmintrin.h", "status": "modified", "additions": 12, "deletions": 16, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Frs6000%2Femmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Frs6000%2Femmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Femmintrin.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "83c28cd8af3215ab31799d742852554526f710d2", "filename": "gcc/config/rs6000/rs6000-builtin.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "03fb194b15108c5cfd7d1c1b4219f2fc34386ff5", "filename": "gcc/config/rs6000/rs6000-builtins.def", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Frs6000%2Frs6000-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Frs6000%2Frs6000-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-builtins.def?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "3be5860dd9b90ccd75d1747e2d4de0a8365df922", "filename": "gcc/config/rs6000/rs6000.cc", "status": "modified", "additions": 102, "deletions": 72, "changes": 174, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Frs6000%2Frs6000.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Frs6000%2Frs6000.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "44f7dd509cb422acb33a42d35724e1827b865a54", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "1ae04c8e0a801bfe8ab7caeff9b465467e8ae62b", "filename": "gcc/config/rs6000/vector.md", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Frs6000%2Fvector.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Frs6000%2Fvector.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvector.md?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "3b9c1e1ca5df48a002cd1006a6b5355bbb14a294", "filename": "gcc/config/s390/driver-native.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fs390%2Fdriver-native.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fs390%2Fdriver-native.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fdriver-native.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "0c369197fd93dc1e199e5075ca653bea27ab8a65", "filename": "gcc/config/s390/predicates.md", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fs390%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fs390%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fpredicates.md?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "505de995da87b5a8eff5531581fb43a1ef136fb1", "filename": "gcc/config/s390/s390.cc", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fs390%2Fs390.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fs390%2Fs390.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "21bec729efa738ece0ff905860a4a48d4090e22e", "filename": "gcc/config/s390/vector.md", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fs390%2Fvector.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fs390%2Fvector.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fvector.md?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "cba5ac0fc5407b45d56eb25f96e8549508ad1367", "filename": "gcc/config/sol2.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "8c0c9dce9714a30bf4c52ae6fd62d514c102268c", "filename": "gcc/config/sparc/sparc.cc", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fsparc%2Fsparc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fsparc%2Fsparc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "94779c16c63d84f64203ad8f7c17df153aa167a7", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 44, "deletions": 18, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "9733c90fe4c6f48d3c37406bb7fdd1ea84dd5f32", "filename": "gcc/config/vx-common.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fvx-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fvx-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvx-common.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "e684e7deebf924aa54f6d5086f375a89d7396b69", "filename": "gcc/config/xtensa/linux.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fxtensa%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fxtensa%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Flinux.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "cf6574be0353a7e534cdda79d44fe8d2bb5750a9", "filename": "gcc/config/xtensa/t-xtensa", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fxtensa%2Ft-xtensa", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fxtensa%2Ft-xtensa", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Ft-xtensa?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "5347a7e24292a8120abeea9b7b6107d9105869de", "filename": "gcc/config/xtensa/xtensa-dynconfig.c", "status": "removed", "additions": 0, "deletions": 171, "changes": 171, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e44f127cdb12a28536fe21983dfad20570bceda0/gcc%2Fconfig%2Fxtensa%2Fxtensa-dynconfig.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e44f127cdb12a28536fe21983dfad20570bceda0/gcc%2Fconfig%2Fxtensa%2Fxtensa-dynconfig.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa-dynconfig.c?ref=e44f127cdb12a28536fe21983dfad20570bceda0"}, {"sha": "9aea9f253c2573f8d43dc92f238bf61a08a8a973", "filename": "gcc/config/xtensa/xtensa-dynconfig.cc", "status": "added", "additions": 195, "deletions": 0, "changes": 195, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fxtensa%2Fxtensa-dynconfig.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fxtensa%2Fxtensa-dynconfig.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa-dynconfig.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "64cbf27c24859f7abb98e6ccd64345d80a0aec70", "filename": "gcc/config/xtensa/xtensa-protos.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fxtensa%2Fxtensa-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fxtensa%2Fxtensa-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa-protos.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "7287aa7a258acd81446d850201277d66302e463f", "filename": "gcc/config/xtensa/xtensa.cc", "status": "modified", "additions": 147, "deletions": 29, "changes": 176, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fxtensa%2Fxtensa.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fxtensa%2Fxtensa.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "8ebf37cab33a3a061a588cf47dfa6d33df863120", "filename": "gcc/config/xtensa/xtensa.h", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "3521fa33b47dd8670a5bbb35a7e292b2870cbc2f", "filename": "gcc/config/xtensa/xtensa.md", "status": "modified", "additions": 97, "deletions": 10, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fxtensa%2Fxtensa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfig%2Fxtensa%2Fxtensa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.md?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "cf6e949dd30d3f98f6ba7887ed4e38fb8b8e5fb0", "filename": "gcc/configure", "status": "modified", "additions": 76, "deletions": 41, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "8c61044e304068ea3d341a72b7c2718999fc376a", "filename": "gcc/configure.ac", "status": "modified", "additions": 30, "deletions": 8, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "908c66cc83953aecbe012de630c57f18316f1348", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 556, "deletions": 0, "changes": 556, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "cdd7701b9e77c25e7b04cf3dfb15a5698e19b860", "filename": "gcc/cp/call.cc", "status": "modified", "additions": 117, "deletions": 27, "changes": 144, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Fcall.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Fcall.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "68b62086340bcd1ab357907308b52b64c680b994", "filename": "gcc/cp/class.cc", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Fclass.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Fclass.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "3de60cfd0f84ffeb8c0427689153e87438c30a18", "filename": "gcc/cp/constexpr.cc", "status": "modified", "additions": 77, "deletions": 11, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Fconstexpr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Fconstexpr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "273d15ab0975b15cbf1256285e54939c2758748c", "filename": "gcc/cp/constraint.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Fconstraint.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Fconstraint.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstraint.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "9d1cb558f4f72ebe78c3420667e7d33e664be595", "filename": "gcc/cp/contracts.cc", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Fcontracts.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Fcontracts.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcontracts.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "b307c8ca8b64aa7c45df1dd38ff02ae7d9aa5beb", "filename": "gcc/cp/coroutines.cc", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Fcoroutines.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Fcoroutines.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcoroutines.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "4fecd5616bd419ba6e5c50ab2d10fabd00e6eb02", "filename": "gcc/cp/cp-gimplify.cc", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Fcp-gimplify.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Fcp-gimplify.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "bac593c00945799acdcd358955d747f4111e6f3f", "filename": "gcc/cp/cp-trait.def", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Fcp-trait.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Fcp-trait.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-trait.def?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "622752ae4e6e9d5967f844f3c79e7cbbc5856d9c", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 7, "deletions": 12, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "7f4556d0da2b2ac827d3777d08bdee94dc7632bd", "filename": "gcc/cp/cxx-pretty-print.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Fcxx-pretty-print.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Fcxx-pretty-print.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcxx-pretty-print.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "5369714f9b3d23a76195149155a105a7dc112246", "filename": "gcc/cp/decl.cc", "status": "modified", "additions": 41, "deletions": 7, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Fdecl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Fdecl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "9594be4092c3c00fddc9d4c6da5931ea3b7e8792", "filename": "gcc/cp/decl2.cc", "status": "modified", "additions": 47, "deletions": 12, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Fdecl2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Fdecl2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "91a5e0498601de3e884dd76a119971d530bf3b41", "filename": "gcc/cp/except.cc", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Fexcept.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Fexcept.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexcept.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "b36de2b20bba9f945299566c68b2e2af069bcb2e", "filename": "gcc/cp/friend.cc", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Ffriend.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Ffriend.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ffriend.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "9571d18170ea8070c7fd7a1e3de12c1fd30bd81e", "filename": "gcc/cp/init.cc", "status": "modified", "additions": 90, "deletions": 31, "changes": 121, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Finit.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Finit.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "9925209b2ed07901ec847c32c6e85445f71305ca", "filename": "gcc/cp/lambda.cc", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Flambda.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Flambda.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flambda.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "a235f23459d2ca6a12ba2eecb0611c81c3d3e2e1", "filename": "gcc/cp/mangle.cc", "status": "modified", "additions": 31, "deletions": 4, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Fmangle.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Fmangle.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "a6341b98af21aabc047e3faf59fe22559b7aed6f", "filename": "gcc/cp/parser.cc", "status": "modified", "additions": 60, "deletions": 18, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Fparser.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Fparser.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "4429ae66b68218a7c34e21b6fce38b68c47a9dc6", "filename": "gcc/cp/pt.cc", "status": "modified", "additions": 468, "deletions": 171, "changes": 639, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Fpt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Fpt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "7878929c246798a50e2b64ffb9f4506d5c389ebe", "filename": "gcc/cp/rtti.cc", "status": "modified", "additions": 41, "deletions": 15, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Frtti.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Frtti.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Frtti.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "3f521b3bd72fc5eb83cc1c1a15ef2863f5a8c323", "filename": "gcc/cp/search.cc", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Fsearch.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Fsearch.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "99a76e3ed65864c2177a3a16d5288195de1748ee", "filename": "gcc/cp/semantics.cc", "status": "modified", "additions": 31, "deletions": 12, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Fsemantics.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Fsemantics.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "16b8fcb7d57518635e74340758347ae4fcbfae60", "filename": "gcc/cp/tree.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Ftree.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Ftree.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "8b60cbbc167077a141729c5992f76849464bd6a2", "filename": "gcc/cp/typeck.cc", "status": "modified", "additions": 19, "deletions": 13, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Ftypeck.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fcp%2Ftypeck.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "0ec5aeee2dfa3a70021ccc701c8e16df0f60c782", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 122, "deletions": 0, "changes": 122, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "1679fb81097985639199262abab81ab59d9d2bb8", "filename": "gcc/d/Make-lang.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FMake-lang.in?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "5c6c300ecec08ee1f8f89c00a4ae6f01afab459b", "filename": "gcc/d/d-codegen.cc", "status": "modified", "additions": 12, "deletions": 31, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fd-codegen.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fd-codegen.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-codegen.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "15d02b6de7603695fd66bd084b659962d7acb951", "filename": "gcc/d/d-ctfloat.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fd-ctfloat.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fd-ctfloat.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-ctfloat.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "cf200959cf9dfc0793bb8dd1f16d01198fe0cfe2", "filename": "gcc/d/d-frontend.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fd-frontend.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fd-frontend.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-frontend.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "04cb631244cda8e9a72b59d47c32b77bf99946ac", "filename": "gcc/d/d-gimplify.cc", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fd-gimplify.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fd-gimplify.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-gimplify.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "235e22a4b41e32a23741fe87ddd4981a3fdf5903", "filename": "gcc/d/d-lang.cc", "status": "modified", "additions": 4, "deletions": 15, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fd-lang.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fd-lang.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-lang.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "4c7a212703e52794460908a02197d39af7835fcb", "filename": "gcc/d/d-target.cc", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fd-target.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fd-target.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-target.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "b64a6fb46f9c15da6e8f2a9b23b81d5d0af27df4", "filename": "gcc/d/d-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fd-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fd-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-tree.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "78c4ab554dc8a7a04eb9aaab16237ce5107860df", "filename": "gcc/d/decl.cc", "status": "modified", "additions": 158, "deletions": 136, "changes": 294, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdecl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdecl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdecl.cc?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "986925e8bdc5f07454d8c8ad81861e1212d54fca", "filename": "gcc/d/dmd/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2FMERGE?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "cecd008e608b519e765df8bf614930aa1aeb2b43", "filename": "gcc/d/dmd/README.md", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2FREADME.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2FREADME.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2FREADME.md?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "da496a2ceeb77daecf0af7295d0090b8a6121a96", "filename": "gcc/d/dmd/VERSION", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2FVERSION", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2FVERSION", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2FVERSION?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "f2d68d53d752dc6286c15182a8570900e9d51e2a", "filename": "gcc/d/dmd/access.d", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Faccess.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Faccess.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Faccess.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "1306a104fff540db5a2f3877e9a7ccec8f638ba2", "filename": "gcc/d/dmd/aggregate.d", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Faggregate.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Faggregate.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Faggregate.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "04e5eb2f0d9b1acf399ccf33808816dab4571a33", "filename": "gcc/d/dmd/aggregate.h", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Faggregate.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Faggregate.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Faggregate.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "ef839fae536aabea302c4d55fc7fb34b4cf5fe0a", "filename": "gcc/d/dmd/aliasthis.d", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Faliasthis.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Faliasthis.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Faliasthis.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "389cff40054d07c7587767336bf5283425e62710", "filename": "gcc/d/dmd/aliasthis.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Faliasthis.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Faliasthis.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Faliasthis.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "59ba9f5ecd65fb815c8bde7b5d2f0bc401d8b720", "filename": "gcc/d/dmd/apply.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fapply.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fapply.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fapply.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "908855e271c644796658208cb66d9bc3a4d04463", "filename": "gcc/d/dmd/arrayop.d", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Farrayop.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Farrayop.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Farrayop.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "34ffa6eb8fd7913aa387c814ba60a42e8606a38a", "filename": "gcc/d/dmd/arraytypes.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Farraytypes.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Farraytypes.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Farraytypes.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "05126a53d7ee9173f0427716fe11e3c9f2b008c8", "filename": "gcc/d/dmd/arraytypes.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Farraytypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Farraytypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Farraytypes.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "c0dd186628af52f91a1d0b0af38b310ca2f5bd2c", "filename": "gcc/d/dmd/ast_node.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fast_node.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fast_node.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fast_node.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "6154c6d1b3afacc77b8083a07734297b137a8269", "filename": "gcc/d/dmd/ast_node.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fast_node.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fast_node.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fast_node.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "6e882082bed9581de19f45641bd8c7b52c34ba7f", "filename": "gcc/d/dmd/astenums.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fastenums.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fastenums.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fastenums.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "dbe78ef74bc595bb61c3d5448dbbb2b859bbcdee", "filename": "gcc/d/dmd/attrib.d", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fattrib.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fattrib.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fattrib.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "44ceb12e0d06b892cf49c007e0315d10d38a3e3d", "filename": "gcc/d/dmd/attrib.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fattrib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fattrib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fattrib.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "bd5b78e92dc557817f647589e56a60c8b4fd53a3", "filename": "gcc/d/dmd/blockexit.d", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fblockexit.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fblockexit.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fblockexit.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "27ba1e03454f4a706c76ae6b5ad12e1ff57f611b", "filename": "gcc/d/dmd/builtin.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fbuiltin.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fbuiltin.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fbuiltin.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "0c237e6da567015bc5ac14b68a8337daafbac2fb", "filename": "gcc/d/dmd/canthrow.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fcanthrow.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fcanthrow.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcanthrow.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "21a1b5e6def7ff4e8391287d68fe5a3e8a5a9ba8", "filename": "gcc/d/dmd/chkformat.d", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fchkformat.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fchkformat.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fchkformat.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "19bf83e4ec353144df64fc98b580e39950a4f102", "filename": "gcc/d/dmd/clone.d", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fclone.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fclone.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fclone.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "b9fcb0995c91448f8edb67bc6a3ebc4be0cd3209", "filename": "gcc/d/dmd/common/bitfields.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fcommon%2Fbitfields.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fcommon%2Fbitfields.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcommon%2Fbitfields.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "ae13c41d310002a6653279a4e9fb1059f8a0eb1e", "filename": "gcc/d/dmd/common/file.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fcommon%2Ffile.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fcommon%2Ffile.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcommon%2Ffile.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "007d301359c78a9c2c5283f43689497488241d33", "filename": "gcc/d/dmd/common/outbuffer.d", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fcommon%2Foutbuffer.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fcommon%2Foutbuffer.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcommon%2Foutbuffer.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "b672842e74d54c7c35168039c0a1c4c73506ffdc", "filename": "gcc/d/dmd/common/outbuffer.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fcommon%2Foutbuffer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fcommon%2Foutbuffer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcommon%2Foutbuffer.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "1111cec2cf1ea8a614cdf56555d77eb45117e629", "filename": "gcc/d/dmd/common/string.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fcommon%2Fstring.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fcommon%2Fstring.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcommon%2Fstring.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "68ec1d3848ddb21bf6b25b5b29ec4d07d345fff8", "filename": "gcc/d/dmd/compiler.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fcompiler.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fcompiler.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcompiler.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "c7cbce3bd7f5bbfbee60ec29635ca6d987033916", "filename": "gcc/d/dmd/compiler.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fcompiler.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fcompiler.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcompiler.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "c0c4cf1ce82f45916299373093762ba8889cb506", "filename": "gcc/d/dmd/cond.d", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fcond.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fcond.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcond.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "422a715bdba3f451bed2994b60f72604f556f881", "filename": "gcc/d/dmd/cond.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fcond.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fcond.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcond.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "e4be63cda3e5261122c2f24644e72174eefd9061", "filename": "gcc/d/dmd/constfold.d", "status": "modified", "additions": 12, "deletions": 16, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fconstfold.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fconstfold.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fconstfold.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "a18f810372df477fb0ecc2d89d6e116b9f9446f0", "filename": "gcc/d/dmd/cparse.d", "status": "modified", "additions": 78, "deletions": 34, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fcparse.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fcparse.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcparse.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "b015a642b909159f753e93311574c1f9d7b87a92", "filename": "gcc/d/dmd/cppmangle.d", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fcppmangle.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fcppmangle.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcppmangle.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "1071edf7c93126741f54e90a57cd02a955fb0e78", "filename": "gcc/d/dmd/ctfe.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fctfe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fctfe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fctfe.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "8109e12d43d34daab0506e6422329a73f1a0e674", "filename": "gcc/d/dmd/ctfeexpr.d", "status": "modified", "additions": 7, "deletions": 20, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fctfeexpr.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fctfeexpr.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fctfeexpr.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "a3953af6ce87435887837029d660ce0e05fa4707", "filename": "gcc/d/dmd/ctorflow.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fctorflow.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fctorflow.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fctorflow.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "2830b25d651210af1cb5cd09eb3f0fb3ed8d21a9", "filename": "gcc/d/dmd/dcast.d", "status": "modified", "additions": 37, "deletions": 3, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdcast.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdcast.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdcast.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "e4585934089f3255f52ec2d6c9839bbd499e6bb5", "filename": "gcc/d/dmd/dclass.d", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdclass.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdclass.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdclass.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "7cd8df19bdcb0fab5dcd39c06a6efe611f4fa077", "filename": "gcc/d/dmd/declaration.d", "status": "modified", "additions": 29, "deletions": 14, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdeclaration.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdeclaration.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdeclaration.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "cd4155d0fbb0d659d49dc53c4bcf9a4e6c40d4cd", "filename": "gcc/d/dmd/declaration.h", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdeclaration.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdeclaration.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdeclaration.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "fd9569105b59c56ce18cc418e22958e9a5b86aaf", "filename": "gcc/d/dmd/delegatize.d", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdelegatize.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdelegatize.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdelegatize.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "221250b27e0e574eb078662d6013925d6d9ec2a2", "filename": "gcc/d/dmd/denum.d", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdenum.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdenum.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdenum.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "b653d9bbf894e72b2101fd2f05f9c2505cffc9d7", "filename": "gcc/d/dmd/dimport.d", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdimport.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdimport.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdimport.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "e6ef704be8688e7d65e015af73431bfc7d92c42c", "filename": "gcc/d/dmd/dinterpret.d", "status": "modified", "additions": 52, "deletions": 24, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdinterpret.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdinterpret.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdinterpret.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "6fc23e99e8680b9dc56e62afb14fa1cb7801be31", "filename": "gcc/d/dmd/dmacro.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdmacro.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdmacro.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdmacro.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "72a447657878f7d71b79292c7e8c2b92fc7edbfe", "filename": "gcc/d/dmd/dmangle.d", "status": "modified", "additions": 311, "deletions": 261, "changes": 572, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdmangle.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdmangle.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdmangle.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "a5f7cd321da53c521e712c13788e91d806e28a58", "filename": "gcc/d/dmd/dmodule.d", "status": "modified", "additions": 109, "deletions": 24, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdmodule.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdmodule.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdmodule.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "88e8996ae3aafda278e3a2bf2692da70c8d99f7a", "filename": "gcc/d/dmd/doc.d", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdoc.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdoc.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdoc.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "d16806beda2ac9176bed398f304ad1ea311c5f72", "filename": "gcc/d/dmd/doc.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdoc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdoc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdoc.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "ab422fd0cf6024d71c02b58ba92478459139075a", "filename": "gcc/d/dmd/dscope.d", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdscope.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdscope.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdscope.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "3268d5667de88675c4df6f5dd9eddadc6c5b358a", "filename": "gcc/d/dmd/dstruct.d", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdstruct.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdstruct.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdstruct.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "e7ce93ee067cc3fd351d120282ae43cfb20ee27a", "filename": "gcc/d/dmd/dsymbol.d", "status": "modified", "additions": 27, "deletions": 13, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdsymbol.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdsymbol.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdsymbol.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "1cee456aa10b6cdd653003774c1d5509cafa3a43", "filename": "gcc/d/dmd/dsymbol.h", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdsymbol.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdsymbol.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdsymbol.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "6697ad6d4d66506da429df95ab2cc0ee61313704", "filename": "gcc/d/dmd/dsymbolsem.d", "status": "modified", "additions": 165, "deletions": 96, "changes": 261, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdsymbolsem.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdsymbolsem.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdsymbolsem.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "ad3a6d4dd54f9e9af4904691d87ad341e5f438a7", "filename": "gcc/d/dmd/dtemplate.d", "status": "modified", "additions": 213, "deletions": 103, "changes": 316, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdtemplate.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdtemplate.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdtemplate.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "7c3ff4bccc2ca87842ac8164f82e3d26f6cd207f", "filename": "gcc/d/dmd/dtoh.d", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdtoh.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdtoh.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdtoh.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "259f85c5128597d27fe69c91e69ef354dfd59b4b", "filename": "gcc/d/dmd/dversion.d", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdversion.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fdversion.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdversion.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "c31883f11d90fd5ee073367e0d216c3da73b39f0", "filename": "gcc/d/dmd/entity.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fentity.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fentity.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fentity.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "be12c65e6d66fe5dbbd551ed1005e13c3d86b665", "filename": "gcc/d/dmd/enum.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fenum.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fenum.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fenum.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "f107f7b09b3a24f197ef7a546f2e2d373b1da0db", "filename": "gcc/d/dmd/errors.d", "status": "modified", "additions": 54, "deletions": 1, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Ferrors.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Ferrors.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Ferrors.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "cc72811b112dd00e840d3d39d0b7a6aec35c9f4e", "filename": "gcc/d/dmd/errors.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Ferrors.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Ferrors.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Ferrors.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "b519db7e9bc08bbc2a4ad227b6dc970694fae678", "filename": "gcc/d/dmd/errorsink.d", "status": "added", "additions": 121, "deletions": 0, "changes": 121, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Ferrorsink.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Ferrorsink.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Ferrorsink.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "420fa7f80bbb816dc87c0efed8cd46c1158d513d", "filename": "gcc/d/dmd/escape.d", "status": "modified", "additions": 117, "deletions": 78, "changes": 195, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fescape.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fescape.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fescape.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "df5e9ddc98ef33810312e0d2c2c796aa22e76001", "filename": "gcc/d/dmd/expression.d", "status": "modified", "additions": 143, "deletions": 29, "changes": 172, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fexpression.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fexpression.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fexpression.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "e4716c8dfcf51008bfbdbd97e6a28910c54a8711", "filename": "gcc/d/dmd/expression.h", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fexpression.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fexpression.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fexpression.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "632ea11cdc0686b0d2e3bdb50be24ef90ab0da58", "filename": "gcc/d/dmd/expressionsem.d", "status": "modified", "additions": 344, "deletions": 186, "changes": 530, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fexpressionsem.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fexpressionsem.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fexpressionsem.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "a0e5d0519c8ec3c3ac935b9d171b2a74ac13c9b8", "filename": "gcc/d/dmd/file_manager.d", "status": "modified", "additions": 31, "deletions": 24, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Ffile_manager.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Ffile_manager.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Ffile_manager.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "ba2825a3098dfa80d71eb560c4529bde32bae965", "filename": "gcc/d/dmd/foreachvar.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fforeachvar.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fforeachvar.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fforeachvar.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "4b6b5b58233942cff73b4866afb87a46136dfbb6", "filename": "gcc/d/dmd/func.d", "status": "modified", "additions": 137, "deletions": 80, "changes": 217, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Ffunc.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Ffunc.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Ffunc.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "1919d9ae0ce1e0a53907a77443d1384100c1ed6d", "filename": "gcc/d/dmd/globals.d", "status": "modified", "additions": 11, "deletions": 130, "changes": 141, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fglobals.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fglobals.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fglobals.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "ec8fc32ed0f52871737bb85afdc8f2ed2bbbe97c", "filename": "gcc/d/dmd/globals.h", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fglobals.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fglobals.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fglobals.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "7b52eff663d943c7fc058e14994de37c7efc5e43", "filename": "gcc/d/dmd/gluelayer.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fgluelayer.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fgluelayer.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fgluelayer.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "c7e5690bc0a7e9d9486e48ee83776ad1d72ce90f", "filename": "gcc/d/dmd/hdrgen.d", "status": "modified", "additions": 64, "deletions": 20, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fhdrgen.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fhdrgen.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fhdrgen.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "43fea34255f75c68fb43988f75c6977d2dd9c840", "filename": "gcc/d/dmd/hdrgen.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fhdrgen.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fhdrgen.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fhdrgen.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "4d780b302b09b7e7501d21ce2e5a05cef7a525d3", "filename": "gcc/d/dmd/iasm.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fiasm.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fiasm.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fiasm.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "f8c88ab536e9cccd5cfa2d2829244f07bdc4d652", "filename": "gcc/d/dmd/iasmgcc.d", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fiasmgcc.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fiasmgcc.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fiasmgcc.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "ec5cb25ef28abf5ee25ff96481bb186f580fc8e8", "filename": "gcc/d/dmd/id.d", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fid.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fid.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fid.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "f6cf6e59c34cc5a01af191dba767ddb96bf4d4cf", "filename": "gcc/d/dmd/id.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fid.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fid.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fid.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "2233d7777708eb0e7de3f702a8a6bb62f5d437d7", "filename": "gcc/d/dmd/identifier.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fidentifier.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fidentifier.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fidentifier.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "c12c3554c1b348c710efeb8c870ffca673eb1be2", "filename": "gcc/d/dmd/identifier.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fidentifier.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fidentifier.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fidentifier.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "b45880a288724fe1e84069c2335ac3fed1ce02d1", "filename": "gcc/d/dmd/impcnvtab.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fimpcnvtab.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fimpcnvtab.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fimpcnvtab.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "913de9fa61cb092d9bf6ecc2c1bfbb9ab15a7404", "filename": "gcc/d/dmd/imphint.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fimphint.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fimphint.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fimphint.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "ff25ba2045d44aab9598c2bd9dbb42d0764a1ab4", "filename": "gcc/d/dmd/import.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fimport.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fimport.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fimport.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "97710b88199f0a2a884ae95f96c048f7bc344478", "filename": "gcc/d/dmd/importc.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fimportc.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fimportc.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fimportc.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "f646d0382eb6e714f9084383e71249600e569afb", "filename": "gcc/d/dmd/init.d", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Finit.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Finit.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Finit.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "66b874c91b5f30bcd94d26828edea6a9b17a282a", "filename": "gcc/d/dmd/init.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Finit.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Finit.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Finit.h?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "18b10b41a2d3e19acacca01bd7ccc080acaef681", "filename": "gcc/d/dmd/initsem.d", "status": "modified", "additions": 151, "deletions": 104, "changes": 255, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Finitsem.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Finitsem.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Finitsem.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "8e63122f4cbee2c6fe0f8a9fa5ad0ef03ac15439", "filename": "gcc/d/dmd/inline.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Finline.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Finline.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Finline.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "d67e0f5958df7dc6b07613960a4bd638416e2cf9", "filename": "gcc/d/dmd/intrange.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fintrange.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fintrange.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fintrange.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "2af7faec354d6c74eedb6896a887cc174ff3548f", "filename": "gcc/d/dmd/json.d", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fjson.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3757e8d71794cece4a5c9d08245b7ad111044853/gcc%2Fd%2Fdmd%2Fjson.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fjson.d?ref=3757e8d71794cece4a5c9d08245b7ad111044853"}]}