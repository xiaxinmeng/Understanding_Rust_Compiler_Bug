{"sha": "467403ca5587335ab372bc19f8e261af067afe2f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDY3NDAzY2E1NTg3MzM1YWIzNzJiYzE5ZjhlMjYxYWYwNjdhZmUyZg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1999-11-05T18:19:55Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-11-05T18:19:55Z"}, "message": "i386.c (split_xf): New.\n\n        * i386.c (split_xf): New.\n        * i386-protos.h: Declare it.\n        * i386.md (movxf_1): Add general regs alternatives.\n        (movxf_1+1): New splitter for same.\n\nFrom-SVN: r30419", "tree": {"sha": "1919db1a6a2c27a98d708b59e99c981afddedb10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1919db1a6a2c27a98d708b59e99c981afddedb10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/467403ca5587335ab372bc19f8e261af067afe2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/467403ca5587335ab372bc19f8e261af067afe2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/467403ca5587335ab372bc19f8e261af067afe2f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/467403ca5587335ab372bc19f8e261af067afe2f/comments", "author": null, "committer": null, "parents": [{"sha": "3948f9d08f16115e491d5dc8d08fa7d6fb0f0917", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3948f9d08f16115e491d5dc8d08fa7d6fb0f0917", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3948f9d08f16115e491d5dc8d08fa7d6fb0f0917"}], "stats": {"total": 46, "additions": 44, "deletions": 2}, "files": [{"sha": "477361cad65cbc37e7ead7ed03a34f95967f4b66", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/467403ca5587335ab372bc19f8e261af067afe2f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/467403ca5587335ab372bc19f8e261af067afe2f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=467403ca5587335ab372bc19f8e261af067afe2f", "patch": "@@ -1,3 +1,10 @@\n+Fri Nov  5 10:18:11 1999  Richard Henderson  <rth@cygnus.com>\n+\n+\t* i386.c (split_xf): New.\n+\t* i386-protos.h: Declare it.\n+\t* i386.md (movxf_1): Add general regs alternatives.\n+\t(movxf_1+1): New splitter for same.\n+\n Fri Nov  5 12:05:52 1999  Nick Clifton  <nickc@cygnus.com>\n \n \t* function.c (purge_addressof_1): Add missing return values."}, {"sha": "7468ce80c2aa278be42b2a88e26ff62de2ed6a3f", "filename": "gcc/config/i386/i386-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/467403ca5587335ab372bc19f8e261af067afe2f/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/467403ca5587335ab372bc19f8e261af067afe2f/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-protos.h?ref=467403ca5587335ab372bc19f8e261af067afe2f", "patch": "@@ -73,6 +73,7 @@ extern void print_operand PROTO((FILE*, rtx, int));\n extern void print_operand_address PROTO((FILE*, rtx));\n \n extern void split_di PROTO((rtx[], int, rtx[], rtx[]));\n+extern void split_xf PROTO((rtx, rtx[3]));\n \n extern char *output_387_binary_op PROTO((rtx, rtx*));\n extern char *output_fix_trunc PROTO((rtx, rtx*));"}, {"sha": "090196002432af82c52eafe0b940ba09504ea045", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/467403ca5587335ab372bc19f8e261af067afe2f/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/467403ca5587335ab372bc19f8e261af067afe2f/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=467403ca5587335ab372bc19f8e261af067afe2f", "patch": "@@ -2995,6 +2995,26 @@ split_di (operands, num, lo_half, hi_half)\n \tabort();\n     }\n }\n+\n+void\n+split_xf (orig, out)\n+     rtx orig;\n+     rtx out[3];\n+{\n+  if (REG_P (orig))\n+    {\n+      int regno = REGNO (orig);\n+      out[0] = gen_rtx_REG (SImode, regno);\n+      out[1] = gen_rtx_REG (SImode, regno + 1);\n+      out[2] = gen_rtx_REG (SImode, regno + 2);\n+    }\n+  else\n+    {\n+      out[0] = change_address (orig, SImode, NULL_RTX);\n+      out[1] = adj_offsettable_operand (out[0], 4);\n+      out[2] = adj_offsettable_operand (out[0], 8);\n+    }\n+}\n \f\n /* Output code to perform a 387 binary operation in INSN, one of PLUS,\n    MINUS, MULT or DIV.  OPERANDS are the insn operands, where operands[3]"}, {"sha": "91745f197617de624a79a43e82f34f4fa7e69a93", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/467403ca5587335ab372bc19f8e261af067afe2f/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/467403ca5587335ab372bc19f8e261af067afe2f/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=467403ca5587335ab372bc19f8e261af067afe2f", "patch": "@@ -1980,8 +1980,8 @@\n }\")\n \n (define_insn \"*movxf_1\"\n-  [(set (match_operand:XF 0 \"nonimmediate_operand\" \"=f,m,f\")\n-\t(match_operand:XF 1 \"general_operand\" \"fm,f,G\"))]\n+  [(set (match_operand:XF 0 \"nonimmediate_operand\" \"=f,m,f,*r,o\")\n+\t(match_operand:XF 1 \"general_operand\" \"fm,f,G,*ro,*r\"))]\n   \"\"\n   \"*\n {\n@@ -2013,11 +2013,25 @@\n \t  return \\\"fld1\\\";\n \t}\n       break;\n+\n+    case 3: case 4:\n+      return \\\"#\\\";\n     }\n   abort();\n }\"\n   [(set_attr \"type\" \"fmov\")])\n \n+(define_split\n+  [(set (match_operand:XF 0 \"nonimmediate_operand\" \"\")\n+\t(match_operand:XF 1 \"nonimmediate_operand\" \"\"))]\n+  \"(REG_P (operands[0]) && ! FP_REGNO_P (REGNO (operands[0])))\n+   || (REG_P (operands[1]) && ! FP_REGNO_P (REGNO (operands[1])))\"\n+  [(set (match_dup 0) (match_dup 3))\n+   (set (match_dup 1) (match_dup 4))\n+   (set (match_dup 2) (match_dup 5))]\n+  \"split_xf (operands[1], &operands[3]);\n+   split_xf (operands[0], &operands[0]);\")\n+\n (define_insn \"swapxf\"\n   [(set (match_operand:XF 0 \"register_operand\" \"+f\")\n \t(match_operand:XF 1 \"register_operand\" \"+f\"))"}]}