{"sha": "b6263c5df20b4ab1e4b88b95bde37d836b47dfc9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjYyNjNjNWRmMjBiNGFiMWU0Yjg4Yjk1YmRlMzdkODM2YjQ3ZGZjOQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-05-05T15:06:13Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-05-05T15:06:13Z"}, "message": "Kill walk_namespaces.\n\n\t* cp-tree.h (walk_namespaces_fn, walk_namespaces): Delete.\n\t* decl.c (walk_namespaces_r, walk_namespaces): Delete.\n\nFrom-SVN: r247638", "tree": {"sha": "5dc4b3ada78d21b98d31465033b06a8590d96cb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5dc4b3ada78d21b98d31465033b06a8590d96cb6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6263c5df20b4ab1e4b88b95bde37d836b47dfc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6263c5df20b4ab1e4b88b95bde37d836b47dfc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6263c5df20b4ab1e4b88b95bde37d836b47dfc9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6263c5df20b4ab1e4b88b95bde37d836b47dfc9/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c02d2d0adb153f819e75b0d9f62fcdf43ff1954d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c02d2d0adb153f819e75b0d9f62fcdf43ff1954d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c02d2d0adb153f819e75b0d9f62fcdf43ff1954d"}], "stats": {"total": 34, "additions": 4, "deletions": 30}, "files": [{"sha": "218e9c792f38582c8f47a7e8843375c00908afa8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6263c5df20b4ab1e4b88b95bde37d836b47dfc9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6263c5df20b4ab1e4b88b95bde37d836b47dfc9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b6263c5df20b4ab1e4b88b95bde37d836b47dfc9", "patch": "@@ -1,5 +1,9 @@\n 2017-05-05  Nathan Sidwell  <nathan@acm.org>\n \n+\tKill walk_namespaces.\n+\t* cp-tree.h (walk_namespaces_fn, walk_namespaces): Delete.\n+\t* decl.c (walk_namespaces_r, walk_namespaces): Delete.\n+\n \tKill per-namespace static_decls.\n \t* cp-tree.h (static_decls): Declare.\n \t(wrapup_globals_for_namespace,"}, {"sha": "8120b9332becb687027900bf3f2b04ca08b864b0", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6263c5df20b4ab1e4b88b95bde37d836b47dfc9/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6263c5df20b4ab1e4b88b95bde37d836b47dfc9/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=b6263c5df20b4ab1e4b88b95bde37d836b47dfc9", "patch": "@@ -5902,9 +5902,6 @@ extern void revert_static_member_fn\t\t(tree);\n extern void fixup_anonymous_aggr\t\t(tree);\n extern tree compute_array_index_type\t\t(tree, tree, tsubst_flags_t);\n extern tree check_default_argument\t\t(tree, tree, tsubst_flags_t);\n-typedef int (*walk_namespaces_fn)\t\t(tree, void *);\n-extern int walk_namespaces\t\t\t(walk_namespaces_fn,\n-\t\t\t\t\t\t void *);\n extern int wrapup_namespace_globals\t\t();\n extern tree create_implicit_typedef\t\t(tree, tree);\n extern int local_variable_p\t\t\t(const_tree);"}, {"sha": "bd00bc311feb00e304ee14bebc6d6195dbbf8ecc", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6263c5df20b4ab1e4b88b95bde37d836b47dfc9/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6263c5df20b4ab1e4b88b95bde37d836b47dfc9/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=b6263c5df20b4ab1e4b88b95bde37d836b47dfc9", "patch": "@@ -78,7 +78,6 @@ static void check_for_uninitialized_const_var (tree);\n static tree local_variable_p_walkfn (tree *, int *, void *);\n static const char *tag_name (enum tag_types);\n static tree lookup_and_check_tag (enum tag_types, tree, tag_scope, bool);\n-static int walk_namespaces_r (tree, walk_namespaces_fn, void *);\n static void maybe_deduce_size_from_array_init (tree, tree);\n static void layout_var_decl (tree);\n static tree check_initializer (tree, tree, int, vec<tree, va_gc> **);\n@@ -879,32 +878,6 @@ poplevel (int keep, int reverse, int functionbody)\n   return block;\n }\n \n-/* Walk all the namespaces contained NAMESPACE, including NAMESPACE\n-   itself, calling F for each.  The DATA is passed to F as well.  */\n-\n-static int\n-walk_namespaces_r (tree name_space, walk_namespaces_fn f, void* data)\n-{\n-  int result = 0;\n-  tree current = NAMESPACE_LEVEL (name_space)->namespaces;\n-\n-  result |= (*f) (name_space, data);\n-\n-  for (; current; current = DECL_CHAIN (current))\n-    result |= walk_namespaces_r (current, f, data);\n-\n-  return result;\n-}\n-\n-/* Walk all the namespaces, calling F for each.  The DATA is passed to\n-   F as well.  */\n-\n-int\n-walk_namespaces (walk_namespaces_fn f, void* data)\n-{\n-  return walk_namespaces_r (global_namespace, f, data);\n-}\n-\n /* Call wrapup_globals_declarations for the globals in NAMESPACE.  */\n /* Diagnose odr-used extern inline variables without definitions\n    in the current TU.  */"}]}