{"sha": "54ca9930b79c8f759919fdbe671ff24ce4141b0c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRjYTk5MzBiNzljOGY3NTk5MTlmZGJlNjcxZmYyNGNlNDE0MWIwYw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-06-30T00:51:29Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-06-30T00:51:29Z"}, "message": "Enable implicitly deleted functions (N2346)\n\n\tEnable implicitly deleted functions (N2346)\n\t* class.c (check_bases_and_members): Adjust lambda flags.\n\t* method.c (implicitly_declare_fn): Set DECL_DELETED_FN if appropriate.\n\nFrom-SVN: r161581", "tree": {"sha": "9475890307f4ab29171a55ba449382044eb779cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9475890307f4ab29171a55ba449382044eb779cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54ca9930b79c8f759919fdbe671ff24ce4141b0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54ca9930b79c8f759919fdbe671ff24ce4141b0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54ca9930b79c8f759919fdbe671ff24ce4141b0c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54ca9930b79c8f759919fdbe671ff24ce4141b0c/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9a71b305bf556ad173b123d2d58612652b82e6dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a71b305bf556ad173b123d2d58612652b82e6dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a71b305bf556ad173b123d2d58612652b82e6dc"}], "stats": {"total": 154, "additions": 125, "deletions": 29}, "files": [{"sha": "8c9b424f54532207478602f335ff3c5e728f25a1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=54ca9930b79c8f759919fdbe671ff24ce4141b0c", "patch": "@@ -1,5 +1,9 @@\n 2010-06-29  Jason Merrill  <jason@redhat.com>\n \n+\tEnable implicitly deleted functions (N2346)\n+\t* class.c (check_bases_and_members): Adjust lambda flags.\n+\t* method.c (implicitly_declare_fn): Set DECL_DELETED_FN if appropriate.\n+\n \t* decl2.c (mark_used): Adjust error for use of deleted function.\n \n \tMachinery to support implicit delete/move."}, {"sha": "031a4ea79c37a4f96ac7d31894b834e697bf6b52", "filename": "gcc/cp/class.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=54ca9930b79c8f759919fdbe671ff24ce4141b0c", "patch": "@@ -4563,10 +4563,9 @@ check_bases_and_members (tree t)\n       /* \"The closure type associated with a lambda-expression has a deleted\n \t default constructor and a deleted copy assignment operator.\"  */\n       TYPE_NEEDS_CONSTRUCTING (t) = 1;\n-      TYPE_HAS_DEFAULT_CONSTRUCTOR (t) = 0;\n-      CLASSTYPE_LAZY_DEFAULT_CTOR (t) = 0;\n-      TYPE_HAS_COPY_ASSIGN (t) = 0;\n-      CLASSTYPE_LAZY_COPY_ASSIGN (t) = 0;\n+      TYPE_HAS_COMPLEX_DFLT (t) = 1;\n+      TYPE_HAS_COMPLEX_COPY_ASSIGN (t) = 1;\n+      CLASSTYPE_LAZY_MOVE_ASSIGN (t) = 0;\n \n       /* \"This class type is not an aggregate.\"  */\n       CLASSTYPE_NON_AGGREGATE (t) = 1;"}, {"sha": "ad41e9acc57537bf756d529046f9afa2b9f96239", "filename": "gcc/cp/method.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=54ca9930b79c8f759919fdbe671ff24ce4141b0c", "patch": "@@ -1408,6 +1408,8 @@ implicitly_declare_fn (special_function_kind kind, tree type, bool const_p)\n   DECL_IN_AGGR_P (fn) = 1;\n   DECL_ARTIFICIAL (fn) = 1;\n   DECL_DEFAULTED_FN (fn) = 1;\n+  if (cxx_dialect >= cxx0x)\n+    DECL_DELETED_FN (fn) = deleted_p;\n   DECL_NOT_REALLY_EXTERN (fn) = 1;\n   DECL_DECLARED_INLINE_P (fn) = 1;\n   gcc_assert (!TREE_USED (fn));"}, {"sha": "7b7dc7b1cd4250c3885b9bee8449c43e9b6da9ef", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=54ca9930b79c8f759919fdbe671ff24ce4141b0c", "patch": "@@ -1,5 +1,24 @@\n 2010-06-29  Jason Merrill  <jason@redhat.com>\n \n+\tEnable implicitly deleted functions (N2346)\n+\t* g++.dg/cpp0x/defaulted17.C: New.\n+\t* g++.dg/cpp0x/implicit1.C: New.\n+\t* g++.dg/cpp0x/implicit2.C: New.\n+\t* g++.dg/cpp0x/lambda/lambda-ctor-neg.C: Adjust.\n+\t* g++.dg/ext/has_virtual_destructor.C: Adjust.\n+\t* g++.dg/init/ctor4.C: Adjust.\n+\t* g++.dg/init/synth2.C: Adjust.\n+\t* g++.dg/lto/20081118_1.C: Adjust.\n+\t* g++.dg/other/error13.C: Adjust.\n+\t* g++.dg/other/unused1.C: Adjust.\n+\t* g++.old-deja/g++.bob/inherit2.C: Adjust.\n+\t* g++.old-deja/g++.bugs/900205_04.C: Adjust.\n+\t* g++.old-deja/g++.jason/opeq3.C: Adjust.\n+\t* g++.old-deja/g++.law/ctors17.C: Adjust.\n+\t* g++.old-deja/g++.oliva/delete1.C: Adjust.\n+\t* g++.old-deja/g++.pt/assign1.C: Adjust.\n+\t* g++.old-deja/g++.pt/crash20.C: Adjust.\n+\n \t* g++.dg/cpp0x/defaulted10.C: Adjust for new deleted message.\n \t* g++.dg/cpp0x/defaulted13.C: Adjust.\n \t* g++.dg/cpp0x/defaulted2.C: Adjust."}, {"sha": "79e91a0eb61bb3e1e1d4b422353a91035d71e96f", "filename": "gcc/testsuite/g++.dg/cpp0x/defaulted17.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted17.C?ref=54ca9930b79c8f759919fdbe671ff24ce4141b0c", "patch": "@@ -0,0 +1,12 @@\n+// { dg-options -std=c++0x }\n+\n+struct A\t\t\t// { dg-error \"const|operator=\" }\n+{\n+  const int i;\n+};\n+\n+int main()\n+{\n+  A a = { 0 };\n+  a = a;\t\t\t// { dg-error \"deleted\" }\n+}"}, {"sha": "2efbde6a93a265ba43b328f526a7a2891ee2e641", "filename": "gcc/testsuite/g++.dg/cpp0x/implicit1.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fimplicit1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fimplicit1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fimplicit1.C?ref=54ca9930b79c8f759919fdbe671ff24ce4141b0c", "patch": "@@ -0,0 +1,26 @@\n+// Test for implicitly deleted destructors.\n+// { dg-options \"-std=c++0x\" }\n+// { dg-prune-output \"default definition would be ill-formed\" }\n+// { dg-prune-output \"within this context\" }\n+\n+class C\n+{\n+  void operator delete (void *); // { dg-error \"private\" }\n+public:\n+  virtual ~C();\t\t\t// { dg-error \"overriding\" }\n+};\n+\n+struct D: C { };\t\t// { dg-error \"deleted\" }\n+D d;\t\t\t\t// { dg-error \"deleted\" }\n+\n+struct E\n+{\n+  ~E() = delete;\t\t// { dg-error \"declared here\" }\n+};\n+\n+struct F\n+{\n+  virtual ~F();\t\t\t// { dg-error \"overriding\" }\n+};\n+\n+struct G: E, F { };\t\t// { dg-error \"deleted\" }"}, {"sha": "f24a78838faf773fce3bdc9ff6aba0e1f73f5370", "filename": "gcc/testsuite/g++.dg/cpp0x/implicit2.C", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fimplicit2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fimplicit2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fimplicit2.C?ref=54ca9930b79c8f759919fdbe671ff24ce4141b0c", "patch": "@@ -0,0 +1,33 @@\n+// Test that the synthesized C copy constructor calls the A template\n+// constructor and has the appropriate exception specification.\n+// { dg-options -std=c++0x }\n+// { dg-do run }\n+\n+int r = 1;\n+\n+struct A\n+{\n+  A() {}\n+  A(const A&) throw () { }\n+  template <class T>\n+  A(T& t) { r = 0; }\n+};\n+\n+struct B\n+{\n+  B() {}\n+  B(B&) throw () { }\n+};\n+\n+struct C: A, B { };\n+\n+#define SA(E) static_assert(E, #E)\n+\n+C c;\n+SA (!noexcept(C(c)));\n+\n+int main()\n+{\n+  (C(c));\n+  return r;\n+}"}, {"sha": "76ed7445f45deed9df44b5b9a594972df288f352", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-ctor-neg.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-ctor-neg.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-ctor-neg.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-ctor-neg.C?ref=54ca9930b79c8f759919fdbe671ff24ce4141b0c", "patch": "@@ -3,7 +3,7 @@\n void f()\n {\n   int i;\n-  auto lam = [i]{};\t\t// { dg-message \"note\" }\n+  auto lam = [i]{};\t\t// { dg-message \"\" }\n   decltype(lam) lam2 = { 1 };\t// { dg-error \"\" \"not an aggregate\" }\n   decltype(lam) lam3;\t\t// { dg-error \"\" \"deleted default ctor\" }\n   lam3 = lam;\t\t\t// { dg-error \"\" \"deleted assignment op\" }\n@@ -12,7 +12,7 @@ void f()\n template <class T>\n void g(T i)\n {\n-  auto lam = [i]{};\t\t// { dg-message \"note\" }\n+  auto lam = [i]{};\t\t// { dg-message \"\" }\n   decltype(lam) lam2 = { 1 };\t// { dg-error \"\" \"not an aggregate\" }\n   decltype(lam) lam3;\t\t// { dg-error \"\" \"deleted default ctor\" }\n   lam3 = lam;\t\t\t// { dg-error \"\" \"deleted assignment op\" }"}, {"sha": "093e7f5004d095777d0c44ff00274cc4c25aecc3", "filename": "gcc/testsuite/g++.dg/ext/has_virtual_destructor.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fhas_virtual_destructor.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fhas_virtual_destructor.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fhas_virtual_destructor.C?ref=54ca9930b79c8f759919fdbe671ff24ce4141b0c", "patch": "@@ -14,15 +14,15 @@ union U\n   double b;\n };\n \n-class B\n+struct B\n {\n   virtual ~B() { }\n };\n \n-class C\n+struct C\n : public B { };\n \n-class D\n+struct D\n {\n   ~D() { }\n };"}, {"sha": "1c92bb973d312d5723743a759fc5eb2703003aed", "filename": "gcc/testsuite/g++.dg/init/ctor4.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fctor4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fctor4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fctor4.C?ref=54ca9930b79c8f759919fdbe671ff24ce4141b0c", "patch": "@@ -6,7 +6,7 @@ public:\n   foo();\n };\n \n-class bar: public foo {// { dg-error \"uninitialized\" }\n+class bar: public foo {\t\t// { dg-error \"reference|bar::bar\" }\n private:\n   int &a;\n };\n@@ -16,5 +16,5 @@ foo::foo() {\n \n int main(int argc, char **argv)\n {\n-  bar x; // { dg-message \"synthesized\" }\n+  bar x; // { dg-message \"synthesized|deleted\" }\n }"}, {"sha": "9e8a08a6ea3bea7eec3e0963828b7073bca61fd5", "filename": "gcc/testsuite/g++.dg/init/synth2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fsynth2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fsynth2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fsynth2.C?ref=54ca9930b79c8f759919fdbe671ff24ce4141b0c", "patch": "@@ -5,7 +5,7 @@ struct G {\n   G(G&);\t\t\t// { dg-message \"\" \"candidate\" }\n };\n \n-class A\t\t\t\t// { dg-error \"no match\" }\n+class A\t\t\t\t// { dg-error \"\" }\n {\n   const G g;\n };"}, {"sha": "a1bf08186df33d4dd53195d48de2c3fcf2411ca0", "filename": "gcc/testsuite/g++.dg/lto/20081118_1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081118_1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081118_1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081118_1.C?ref=54ca9930b79c8f759919fdbe671ff24ce4141b0c", "patch": "@@ -1,4 +1,5 @@\n class object {\n+public:\n   virtual ~object() {}\n };\n "}, {"sha": "784550180ffa9706cbf43bb6cade0b346d4e43e3", "filename": "gcc/testsuite/g++.dg/other/error13.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror13.C?ref=54ca9930b79c8f759919fdbe671ff24ce4141b0c", "patch": "@@ -5,6 +5,6 @@ struct A\t\t\t// { dg-message \"note\" }\n   A(void x); // { dg-error \"invalid use|incomplete type|candidates\" }\n };\n \n-struct B : A {}; // { dg-error \"no matching function for call\" }\n+struct B : A {}; // { dg-error \"no matching function for call|deleted\" }\n  \n-B b; // { dg-message \"synthesized method\" }\n+B b; // { dg-message \"synthesized method|deleted\" }"}, {"sha": "2a3ca1be7497a27da2d5cd07d22682c56df99a1a", "filename": "gcc/testsuite/g++.dg/other/unused1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Funused1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Funused1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Funused1.C?ref=54ca9930b79c8f759919fdbe671ff24ce4141b0c", "patch": "@@ -32,7 +32,7 @@ int bar4 (void)\n   return const_cast<printer *>(dotmatrix)->i;\n }\n \n-class class1 { virtual ~class1(); } *c1;\n+class class1 { public: virtual ~class1(); } *c1;\n class class2 : class1 { char j; };\n int bar5 (void)\n {"}, {"sha": "6e26ecfa639324916865b41cf24370361f374c0f", "filename": "gcc/testsuite/g++.old-deja/g++.bob/inherit2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bob%2Finherit2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bob%2Finherit2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bob%2Finherit2.C?ref=54ca9930b79c8f759919fdbe671ff24ce4141b0c", "patch": "@@ -10,7 +10,7 @@ private:\n   const A& operator =(const A &) { abort(); }\n };\n \n-class B : public A { // { dg-error \"within\" }\n+class B : public A { // { dg-error \"\" }\n public:\n   B(void) {}\n };\n@@ -20,5 +20,5 @@ void f(B b) {\t\t\t// { dg-error \"initializing\" }\n \n void g() {\n   B h;\n-  f(h);  // { dg-message \"synthesized\" \"synth\" }\n+  f(h);  // { dg-message \"synthesized|deleted\" \"synth\" }\n }"}, {"sha": "4290144f89ff487b2a44453c5436207dfef28ab1", "filename": "gcc/testsuite/g++.old-deja/g++.bugs/900205_04.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900205_04.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900205_04.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900205_04.C?ref=54ca9930b79c8f759919fdbe671ff24ce4141b0c", "patch": "@@ -23,9 +23,9 @@ struct0::struct0 (int, void *) // { dg-message \"note\" }\n {\n }\n \n-struct struct0_derived_struct_0 : public struct0 { // { dg-error \"no matching\" }\n+struct struct0_derived_struct_0 : public struct0 { // { dg-error \"no matching|deleted\" }\n };\n \n-struct0_derived_struct_0 object; // { dg-message \"synthesized\" }\n+struct0_derived_struct_0  object; // { dg-message \"synthesized|deleted\" }\n \n int main () { return 0; }"}, {"sha": "b4e6e2550c09aa56c677d764a11f025acf5e66d9", "filename": "gcc/testsuite/g++.old-deja/g++.jason/opeq3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fopeq3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fopeq3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fopeq3.C?ref=54ca9930b79c8f759919fdbe671ff24ce4141b0c", "patch": "@@ -1,7 +1,7 @@\n // { dg-do assemble  }\n // Bug: g++ generates code for assignment in invalid situations.\n \n-class X { // { dg-error \"assignment\" }\n+class X { // { dg-error \"reference|operator=\" }\n   int& a;\n public:\n   X(int& i): a(i) { }\n@@ -11,5 +11,5 @@ void foo ()\n {\n   int one=1, two=2;\n   X a(one), b(two);\n-  a = b;\t\t\t// { dg-message \"synthesized\" }\n+  a = b;\t\t\t// { dg-message \"synthesized|deleted\" }\n }"}, {"sha": "0d61c49abd79128266210297ade72921766d3144", "filename": "gcc/testsuite/g++.old-deja/g++.law/ctors17.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors17.C?ref=54ca9930b79c8f759919fdbe671ff24ce4141b0c", "patch": "@@ -6,10 +6,12 @@\n // Subject: gcc 2.4.3.1: illegal constructor call not rejected\n // Date: Tue, 15 Jun 1993 18:34:14 +0200 (MET DST)\n \n+// C++0x mode doesn't print the deleted copy constructor as a candidate.\n+// { dg-prune-output \":14:\" }\n \n #include <fstream>\n \n-class X : public std::ifstream { // { dg-message \"note\" } candidate\n+class X : public std::ifstream {\n     public:\n       X(int a, const char *b) {} // { dg-message \"note\" } candidate\n };"}, {"sha": "368a87a2a9a25544fe0c5744f03f17bad67ed018", "filename": "gcc/testsuite/g++.old-deja/g++.oliva/delete1.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Fdelete1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Fdelete1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Fdelete1.C?ref=54ca9930b79c8f759919fdbe671ff24ce4141b0c", "patch": "@@ -28,5 +28,4 @@ struct baz : foo {\n   virtual ~baz() {} // { dg-error \"\" } delete is private in vdtor\n } baz_;\n \n-struct bad : baz {} bad_; // { dg-error \"\" } delete is private in vdtor\n-// { dg-message \"synthesized\" \"note\" { target *-*-* } 31 }\n+struct bad : baz {} bad_; // { dg-message \"\" } delete is private in vdtor"}, {"sha": "854d8ee27a9d3787cb8d111f0d5876b9ea17c686", "filename": "gcc/testsuite/g++.old-deja/g++.pt/assign1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fassign1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fassign1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fassign1.C?ref=54ca9930b79c8f759919fdbe671ff24ce4141b0c", "patch": "@@ -2,13 +2,13 @@\n // Origin: Mark Mitchell <mark@codesourcery.com>\n \n template <class T>\n-struct S { // { dg-error \"assignment\" }\n+struct S {\t\t\t// { dg-error \"const|operator=\" }\n   S();\n   T t;\n };\n \n void f()\n {\n   S<const int> s;\n-  s = s; // { dg-message \"synthesized\" }\n+  s = s; // { dg-message \"synthesized|deleted\" }\n }"}, {"sha": "a5175b9909bae39c15c672de33b2c68bc410e6cd", "filename": "gcc/testsuite/g++.old-deja/g++.pt/crash20.C", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54ca9930b79c8f759919fdbe671ff24ce4141b0c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash20.C?ref=54ca9930b79c8f759919fdbe671ff24ce4141b0c", "patch": "@@ -1,8 +1,7 @@\n // { dg-do compile  }\n \n template <class T = int>\n-struct A { // { dg-error \"assignment\" \"assignment\" }\n-// { dg-message \"instantiated\" \"inst\" { target *-*-* } 4 }\n+struct A { // { dg-message \"const|operator=\" \"assignment\" }\n   const T x;\n   A() : x(0) { } A(T x) : x(x) { }\n }; \n@@ -11,7 +10,7 @@ template <class B>\n void func ()\n {\n   B y; \n-  y = B();  // { dg-message \"synthesized\" }\n+  y = B();  // { dg-message \"synthesized|deleted\" }\n }\n \n int main (void) { func< A<> >(); }"}]}