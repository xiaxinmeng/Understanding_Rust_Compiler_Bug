{"sha": "9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE5MWVkMmEyZWJmNWQzOGI5YTQ3Y2I3YTE1NDU5MmZjYTU4MmU1Zg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2018-10-18T20:38:41Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2018-10-18T20:38:41Z"}, "message": "i386: Enable AVX512 memory broadcast for FMA\n\nMany AVX512 vector operations can broadcast from a scalar memory source.\nThis patch enables memory broadcast for FMA operations.\n\ngcc/\n\n\tPR target/72782\n\t* config/i386/sse.md (VF_AVX512): New.\n\t(avx512bcst): Likewise.\n\t(*<sd_mask_codefor>fma_fmadd_<mode><sd_maskz_name>_bcst_1):\n\tLikewise.\n\t(*<sd_mask_codefor>fma_fmadd_<mode><sd_maskz_name>_bcst_2):\n\tLikewise.\n\t(*<sd_mask_codefor>fma_fmadd_<mode><sd_maskz_name>_bcst_3):\n\tLikewise.\n\ngcc/testsuite/\n\n\tPR target/72782\n\t* gcc.target/i386/avx512-fma-1.h: New file.\n\t* gcc.target/i386/avx512-fma-2.h: Likewise.\n\t* gcc.target/i386/avx512-fma-3.h: Likewise.\n\t* gcc.target/i386/avx512-fma-4.h: Likewise.\n\t* gcc.target/i386/avx512-fma-5.h: Likewise.\n\t* gcc.target/i386/avx512-fma-6.h: Likewise.\n\t* gcc.target/i386/avx512-fma-7.h: Likewise.\n\t* gcc.target/i386/avx512-fma-8.h: Likewise.\n\t* gcc.target/i386/avx512f-fmadd-df-zmm-1.c: Likewise.\n\t* gcc.target/i386/avx512f-fmadd-sf-zmm-1.c: Likewise.\n\t* gcc.target/i386/avx512f-fmadd-sf-zmm-2.c: Likewise.\n\t* gcc.target/i386/avx512f-fmadd-sf-zmm-3.c: Likewise.\n\t* gcc.target/i386/avx512f-fmadd-sf-zmm-4.c: Likewise.\n\t* gcc.target/i386/avx512f-fmadd-sf-zmm-5.c: Likewise.\n\t* gcc.target/i386/avx512f-fmadd-sf-zmm-6.c: Likewise.\n\t* gcc.target/i386/avx512f-fmadd-sf-zmm-7.c: Likewise.\n\t* gcc.target/i386/avx512f-fmadd-sf-zmm-8.c: Likewise.\n\t* gcc.target/i386/avx512vl-fmadd-sf-xmm-1.c: Likewise.\n\t* gcc.target/i386/avx512vl-fmadd-sf-ymm-1.c: Likewise.\n\nFrom-SVN: r265288", "tree": {"sha": "691e7d4f32c035c19bc86d2c621a2a25bf0360d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/691e7d4f32c035c19bc86d2c621a2a25bf0360d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "955fe731e3c1784b56209006576bc4263b854b9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/955fe731e3c1784b56209006576bc4263b854b9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/955fe731e3c1784b56209006576bc4263b854b9f"}], "stats": {"total": 323, "additions": 323, "deletions": 0}, "files": [{"sha": "e36ecd20e665d4ef9d1076c41fe12b9dda3529e3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f", "patch": "@@ -1,3 +1,15 @@\n+2018-10-18  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/72782\n+\t* config/i386/sse.md (VF_AVX512): New.\n+\t(avx512bcst): Likewise.\n+\t(*<sd_mask_codefor>fma_fmadd_<mode><sd_maskz_name>_bcst_1):\n+\tLikewise.\n+\t(*<sd_mask_codefor>fma_fmadd_<mode><sd_maskz_name>_bcst_2):\n+\tLikewise.\n+\t(*<sd_mask_codefor>fma_fmadd_<mode><sd_maskz_name>_bcst_3):\n+\tLikewise.\n+\n 2018-10-18  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* doc/invoke.texi (-dumpversion): Improve grammar."}, {"sha": "71684d63423d74d0bcda5ae9c70b48bbd1be8700", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f", "patch": "@@ -650,6 +650,16 @@\n    (V2DI \"TARGET_AVX512VL\") (V2DF \"TARGET_AVX512VL\")])\n (define_mode_iterator VI48F_256 [V8SI V8SF V4DI V4DF])\n \n+(define_mode_iterator VF_AVX512\n+  [(V4SF \"TARGET_AVX512VL\") (V2DF \"TARGET_AVX512VL\")\n+   (V8SF \"TARGET_AVX512VL\") (V4DF \"TARGET_AVX512VL\")\n+   V16SF V8DF])\n+\n+(define_mode_attr avx512bcst\n+  [(V4SF \"%{1to4%}\") (V2DF \"%{1to2%}\")\n+   (V8SF \"%{1to8%}\") (V4DF \"%{1to4%}\")\n+   (V16SF \"%{1to16%}\") (V8DF \"%{1to8%}\")])\n+\n ;; Mapping from float mode to required SSE level\n (define_mode_attr sse\n   [(SF \"sse\") (DF \"sse2\")\n@@ -3736,6 +3746,46 @@\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n+(define_insn \"*<sd_mask_codefor>fma_fmadd_<mode><sd_maskz_name>_bcst_1\"\n+  [(set (match_operand:VF_AVX512 0 \"register_operand\" \"=v,v\")\n+\t(fma:VF_AVX512\n+\t  (match_operand:VF_AVX512 1 \"nonimmediate_operand\" \"0,v\")\n+\t  (match_operand:VF_AVX512 2 \"nonimmediate_operand\" \"v,0\")\n+\t  (vec_duplicate:VF_AVX512\n+\t    (match_operand:<ssescalarmode> 3 \"memory_operand\" \"m,m\"))))]\n+  \"TARGET_AVX512F && <sd_mask_mode512bit_condition>\"\n+  \"vfmadd213<ssemodesuffix>\\t{%3<avx512bcst>, %2, %0<sd_mask_op4>|%0<sd_mask_op4>, %2, %3<avx512bcst>}\"\n+  [(set_attr \"type\" \"ssemuladd\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n+(define_insn \"*<sd_mask_codefor>fma_fmadd_<mode><sd_maskz_name>_bcst_2\"\n+  [(set (match_operand:VF_AVX512 0 \"register_operand\" \"=v,v\")\n+\t(fma:VF_AVX512\n+\t  (vec_duplicate:VF_AVX512\n+\t    (match_operand:<ssescalarmode> 1 \"memory_operand\" \"m,m\"))\n+\t  (match_operand:VF_AVX512 2 \"nonimmediate_operand\" \"0,v\")\n+\t  (match_operand:VF_AVX512 3 \"nonimmediate_operand\" \"v,0\")))]\n+  \"TARGET_AVX512F && <sd_mask_mode512bit_condition>\"\n+  \"@\n+   vfmadd132<ssemodesuffix>\\t{%1<avx512bcst>, %3, %0<sd_mask_op4>|%0<sd_mask_op4>, %3, %1<avx512bcst>}\n+   vfmadd231<ssemodesuffix>\\t{%1<avx512bcst>, %2, %0<sd_mask_op4>|%0<sd_mask_op4>, %2, %1<avx512bcst>}\"\n+  [(set_attr \"type\" \"ssemuladd\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n+(define_insn \"*<sd_mask_codefor>fma_fmadd_<mode><sd_maskz_name>_bcst_3\"\n+  [(set (match_operand:VF_AVX512 0 \"register_operand\" \"=v,v\")\n+\t(fma:VF_AVX512\n+\t  (match_operand:VF_AVX512 1 \"nonimmediate_operand\" \"0,v\")\n+\t  (vec_duplicate:VF_AVX512\n+\t    (match_operand:<ssescalarmode> 2 \"memory_operand\" \"m,m\"))\n+\t  (match_operand:VF_AVX512 3 \"nonimmediate_operand\" \"v,0\")))]\n+  \"TARGET_AVX512F && <sd_mask_mode512bit_condition>\"\n+  \"@\n+   vfmadd132<ssemodesuffix>\\t{%2<avx512bcst>, %3, %0<sd_mask_op4>|%0<sd_mask_op4>, %3, %2<avx512bcst>}\n+   vfmadd231<ssemodesuffix>\\t{%2<avx512bcst>, %1, %0<sd_mask_op4>|%0<sd_mask_op4>, %1, %2<avx512bcst>}\"\n+  [(set_attr \"type\" \"ssemuladd\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n (define_insn \"<avx512>_fmadd_<mode>_mask<round_name>\"\n   [(set (match_operand:VF_AVX512VL 0 \"register_operand\" \"=v,v\")\n \t(vec_merge:VF_AVX512VL"}, {"sha": "742316dd054edd5a0116dc3d3b812200ebc54cc7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f", "patch": "@@ -1,3 +1,26 @@\n+2018-10-18  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/72782\n+\t* gcc.target/i386/avx512-fma-1.h: New file.\n+\t* gcc.target/i386/avx512-fma-2.h: Likewise.\n+\t* gcc.target/i386/avx512-fma-3.h: Likewise.\n+\t* gcc.target/i386/avx512-fma-4.h: Likewise.\n+\t* gcc.target/i386/avx512-fma-5.h: Likewise.\n+\t* gcc.target/i386/avx512-fma-6.h: Likewise.\n+\t* gcc.target/i386/avx512-fma-7.h: Likewise.\n+\t* gcc.target/i386/avx512-fma-8.h: Likewise.\n+\t* gcc.target/i386/avx512f-fmadd-df-zmm-1.c: Likewise.\n+\t* gcc.target/i386/avx512f-fmadd-sf-zmm-1.c: Likewise.\n+\t* gcc.target/i386/avx512f-fmadd-sf-zmm-2.c: Likewise.\n+\t* gcc.target/i386/avx512f-fmadd-sf-zmm-3.c: Likewise.\n+\t* gcc.target/i386/avx512f-fmadd-sf-zmm-4.c: Likewise.\n+\t* gcc.target/i386/avx512f-fmadd-sf-zmm-5.c: Likewise.\n+\t* gcc.target/i386/avx512f-fmadd-sf-zmm-6.c: Likewise.\n+\t* gcc.target/i386/avx512f-fmadd-sf-zmm-7.c: Likewise.\n+\t* gcc.target/i386/avx512f-fmadd-sf-zmm-8.c: Likewise.\n+\t* gcc.target/i386/avx512vl-fmadd-sf-xmm-1.c: Likewise.\n+\t* gcc.target/i386/avx512vl-fmadd-sf-ymm-1.c: Likewise.\n+\n 2018-10-18  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/87625"}, {"sha": "a8dc0b5d7a9c84267b757a7c6dc462f91305b8d7", "filename": "gcc/testsuite/gcc.target/i386/avx512-fma-1.h", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512-fma-1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512-fma-1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512-fma-1.h?ref=9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f", "patch": "@@ -0,0 +1,12 @@\n+#include <immintrin.h>\n+\n+#define PASTER2(x,y)\t\tx##y\n+#define PASTER3(x,y,z)\t\t_mm##x##_##y##_##z\n+#define OP(vec, op, suffix)\tPASTER3 (vec, op, suffix)\n+#define DUP(vec, suffix, val)\tPASTER3 (vec, set1, suffix) (val)\n+\n+type\n+foo (type x, type y, SCALAR *f)\n+{\n+  return OP (vec, op, suffix) (x, y, DUP (vec, suffix, *f));\n+}"}, {"sha": "a3a0e9c0dd33716c6bd1303d5dc8bf825ff7522c", "filename": "gcc/testsuite/gcc.target/i386/avx512-fma-2.h", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512-fma-2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512-fma-2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512-fma-2.h?ref=9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f", "patch": "@@ -0,0 +1,13 @@\n+#include <immintrin.h>\n+\n+#define PASTER2(x,y)\t\tx##y\n+#define PASTER3(x,y,z)\t\t_mm##x##_##y##_##z\n+#define TYPE(vec)\t\tPASTER2 (__m, vec)\n+#define OP(vec, op, suffix)\tPASTER3 (vec, op, suffix)\n+#define DUP(vec, suffix, val)\tPASTER3 (vec, set1, suffix) (val)\n+\n+type\n+foo (type x, type y, SCALAR *f)\n+{\n+  return OP (vec, op, suffix) (y, x, DUP (vec, suffix, *f));\n+}"}, {"sha": "8c38d178a25521e961bfb180829c78e6bec739e0", "filename": "gcc/testsuite/gcc.target/i386/avx512-fma-3.h", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512-fma-3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512-fma-3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512-fma-3.h?ref=9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f", "patch": "@@ -0,0 +1,13 @@\n+#include <immintrin.h>\n+\n+#define PASTER2(x,y)\t\tx##y\n+#define PASTER3(x,y,z)\t\t_mm##x##_##y##_##z\n+#define TYPE(vec)\t\tPASTER2 (__m, vec)\n+#define OP(vec, op, suffix)\tPASTER3 (vec, op, suffix)\n+#define DUP(vec, suffix, val)\tPASTER3 (vec, set1, suffix) (val)\n+\n+type\n+foo (type x, type y, SCALAR *f)\n+{\n+  return OP (vec, op, suffix) (x, DUP (vec, suffix, *f), y);\n+}"}, {"sha": "fec01c292a3077ed4823e17967bc71080b262f4c", "filename": "gcc/testsuite/gcc.target/i386/avx512-fma-4.h", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512-fma-4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512-fma-4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512-fma-4.h?ref=9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f", "patch": "@@ -0,0 +1,13 @@\n+#include <immintrin.h>\n+\n+#define PASTER2(x,y)\t\tx##y\n+#define PASTER3(x,y,z)\t\t_mm##x##_##y##_##z\n+#define TYPE(vec)\t\tPASTER2 (__m, vec)\n+#define OP(vec, op, suffix)\tPASTER3 (vec, op, suffix)\n+#define DUP(vec, suffix, val)\tPASTER3 (vec, set1, suffix) (val)\n+\n+type\n+foo (type x, type y, SCALAR *f)\n+{\n+  return OP (vec, op, suffix) (y, DUP (vec, suffix, *f), x);\n+}"}, {"sha": "386960ae5e01fa16629047afbabab472cf14dc9d", "filename": "gcc/testsuite/gcc.target/i386/avx512-fma-5.h", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512-fma-5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512-fma-5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512-fma-5.h?ref=9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f", "patch": "@@ -0,0 +1,13 @@\n+#include <immintrin.h>\n+\n+#define PASTER2(x,y)\t\tx##y\n+#define PASTER3(x,y,z)\t\t_mm##x##_##y##_##z\n+#define TYPE(vec)\t\tPASTER2 (__m, vec)\n+#define OP(vec, op, suffix)\tPASTER3 (vec, op, suffix)\n+#define DUP(vec, suffix, val)\tPASTER3 (vec, set1, suffix) (val)\n+\n+type\n+foo (type x, type y, SCALAR *f)\n+{\n+  return OP (vec, op, suffix) (DUP (vec, suffix, *f), x, y);\n+}"}, {"sha": "de209016ee7902a0c5d19dc2d69fe24c6d0f11ed", "filename": "gcc/testsuite/gcc.target/i386/avx512-fma-6.h", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512-fma-6.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512-fma-6.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512-fma-6.h?ref=9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f", "patch": "@@ -0,0 +1,13 @@\n+#include <immintrin.h>\n+\n+#define PASTER2(x,y)\t\tx##y\n+#define PASTER3(x,y,z)\t\t_mm##x##_##y##_##z\n+#define TYPE(vec)\t\tPASTER2 (__m, vec)\n+#define OP(vec, op, suffix)\tPASTER3 (vec, op, suffix)\n+#define DUP(vec, suffix, val)\tPASTER3 (vec, set1, suffix) (val)\n+\n+type\n+foo (type x, type y, SCALAR *f)\n+{\n+  return OP (vec, op, suffix) (DUP (vec, suffix, *f), y, x);\n+}"}, {"sha": "489866048beb3ba01197fbf61148da327246f876", "filename": "gcc/testsuite/gcc.target/i386/avx512-fma-7.h", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512-fma-7.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512-fma-7.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512-fma-7.h?ref=9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f", "patch": "@@ -0,0 +1,16 @@\n+#include <immintrin.h>\n+\n+#define PASTER2(x,y)\t\tx##y\n+#define PASTER3(x,y,z)\t\t_mm##x##_##y##_##z\n+#define TYPE(vec)\t\tPASTER2 (__m, vec)\n+#define OP(vec, op, suffix)\tPASTER3 (vec, op, suffix)\n+#define DUP(vec, suffix, val)\tPASTER3 (vec, set1, suffix) (val)\n+\n+extern SCALAR bar (void);\n+\n+type\n+foo (type x, type y)\n+{\n+  SCALAR f = bar ();\n+  return OP (vec, op, suffix) (x, y, DUP (vec, suffix, f));\n+}"}, {"sha": "e5bd28e5471fd41e7cad7b56038ec14d90ac3c4b", "filename": "gcc/testsuite/gcc.target/i386/avx512-fma-8.h", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512-fma-8.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512-fma-8.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512-fma-8.h?ref=9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f", "patch": "@@ -0,0 +1,13 @@\n+#include <immintrin.h>\n+\n+#define PASTER2(x,y)\t\tx##y\n+#define PASTER3(x,y,z)\t\t_mm##x##_##y##_##z\n+#define TYPE(vec)\t\tPASTER2 (__m, vec)\n+#define OP(vec, op, suffix)\tPASTER3 (vec, op, suffix)\n+#define DUP(vec, suffix, val)\tPASTER3 (vec, set1, suffix) (val)\n+\n+type\n+foo (type x, type y, SCALAR f)\n+{\n+  return OP (vec, op, suffix) (y, x, DUP (vec, suffix, f));\n+}"}, {"sha": "6d6e522d5211c38aac42c7972d8162d58927b955", "filename": "gcc/testsuite/gcc.target/i386/avx512f-fmadd-df-zmm-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-fmadd-df-zmm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-fmadd-df-zmm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-fmadd-df-zmm-1.c?ref=9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512f -O2\" } */\n+/* { dg-final { scan-assembler-times \"vfmadd...pd\\[ \\\\t\\]+\\\\(%(?:eax|rdi|edi)\\\\)\\\\\\{1to\\[1-8\\]+\\\\\\}, %zmm\\[0-9\\]+, %zmm0\" 1 } } */\n+/* { dg-final { scan-assembler-not \"vbroadcastsd\\[^\\n\\]*%zmm\\[0-9\\]+\" } } */\n+\n+#define type __m512d\n+#define vec 512\n+#define op fmadd\n+#define suffix pd\n+#define SCALAR double\n+\n+#include \"avx512-fma-1.h\""}, {"sha": "98333103d1d65e8bce47d6cc2b8acbf3665ee903", "filename": "gcc/testsuite/gcc.target/i386/avx512f-fmadd-sf-zmm-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-fmadd-sf-zmm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-fmadd-sf-zmm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-fmadd-sf-zmm-1.c?ref=9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512f -O2\" } */\n+/* { dg-final { scan-assembler-times \"vfmadd...ps\\[ \\\\t\\]+\\\\(%(?:eax|rdi|edi)\\\\)\\\\\\{1to\\[1-8\\]+\\\\\\}, %zmm\\[0-9\\]+, %zmm0\" 1 } } */\n+/* { dg-final { scan-assembler-not \"vbroadcastss\\[^\\n\\]*%zmm\\[0-9\\]+\" } } */\n+\n+#define type __m512\n+#define vec 512\n+#define op fmadd\n+#define suffix ps\n+#define SCALAR float\n+\n+#include \"avx512-fma-1.h\""}, {"sha": "34e5620102b288e11843f0eeeb0932adccc866f1", "filename": "gcc/testsuite/gcc.target/i386/avx512f-fmadd-sf-zmm-2.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-fmadd-sf-zmm-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-fmadd-sf-zmm-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-fmadd-sf-zmm-2.c?ref=9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512f -O2\" } */\n+/* { dg-final { scan-assembler-times \"vfmadd...ps\\[ \\\\t\\]+\\\\(%(?:eax|rdi|edi)\\\\)\\\\\\{1to\\[1-8\\]+\\\\\\}, %zmm\\[0-9\\]+, %zmm0\" 1 } } */\n+/* { dg-final { scan-assembler-not \"vbroadcastss\\[^\\n\\]*%zmm\\[0-9\\]+\" } } */\n+\n+#define type __m512\n+#define vec 512\n+#define op fmadd\n+#define suffix ps\n+#define SCALAR float\n+\n+#include \"avx512-fma-2.h\""}, {"sha": "83456259f6eb756e8cb55691977832e4fb2f3cf0", "filename": "gcc/testsuite/gcc.target/i386/avx512f-fmadd-sf-zmm-3.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-fmadd-sf-zmm-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-fmadd-sf-zmm-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-fmadd-sf-zmm-3.c?ref=9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512f -O2\" } */\n+/* { dg-final { scan-assembler-times \"vfmadd...ps\\[ \\\\t\\]+\\\\(%(?:eax|rdi|edi)\\\\)\\\\\\{1to\\[1-8\\]+\\\\\\}, %zmm\\[0-9\\]+, %zmm0\" 1 } } */\n+/* { dg-final { scan-assembler-not \"vbroadcastss\\[^\\n\\]*%zmm\\[0-9\\]+\" } } */\n+\n+#define type __m512\n+#define vec 512\n+#define op fmadd\n+#define suffix ps\n+#define SCALAR float\n+\n+#include \"avx512-fma-3.h\""}, {"sha": "c028c8e3860143e4ade8f526a05336e237f34442", "filename": "gcc/testsuite/gcc.target/i386/avx512f-fmadd-sf-zmm-4.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-fmadd-sf-zmm-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-fmadd-sf-zmm-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-fmadd-sf-zmm-4.c?ref=9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512f -O2\" } */\n+/* { dg-final { scan-assembler-times \"vfmadd...ps\\[ \\\\t\\]+\\\\(%(?:eax|rdi|edi)\\\\)\\\\\\{1to\\[1-8\\]+\\\\\\}, %zmm\\[0-9\\]+, %zmm0\" 1 } } */\n+/* { dg-final { scan-assembler-not \"vbroadcastss\\[^\\n\\]*%zmm\\[0-9\\]+\" } } */\n+\n+#define type __m512\n+#define vec 512\n+#define op fmadd\n+#define suffix ps\n+#define SCALAR float\n+\n+#include \"avx512-fma-4.h\""}, {"sha": "3eac8e886b64ef7092cade10eb8b6995f53d1f10", "filename": "gcc/testsuite/gcc.target/i386/avx512f-fmadd-sf-zmm-5.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-fmadd-sf-zmm-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-fmadd-sf-zmm-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-fmadd-sf-zmm-5.c?ref=9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512f -O2\" } */\n+/* { dg-final { scan-assembler-times \"vfmadd...ps\\[ \\\\t\\]+\\\\(%(?:eax|rdi|edi)\\\\)\\\\\\{1to\\[1-8\\]+\\\\\\}, %zmm\\[0-9\\]+, %zmm0\" 1 } } */\n+/* { dg-final { scan-assembler-not \"vbroadcastss\\[^\\n\\]*%zmm\\[0-9\\]+\" } } */\n+\n+#define type __m512\n+#define vec 512\n+#define op fmadd\n+#define suffix ps\n+#define SCALAR float\n+\n+#include \"avx512-fma-5.h\""}, {"sha": "990cdc64f1b6a9b976e1958dced9e4fedb662771", "filename": "gcc/testsuite/gcc.target/i386/avx512f-fmadd-sf-zmm-6.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-fmadd-sf-zmm-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-fmadd-sf-zmm-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-fmadd-sf-zmm-6.c?ref=9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512f -O2\" } */\n+/* { dg-final { scan-assembler-times \"vfmadd...ps\\[ \\\\t\\]+\\\\(%(?:eax|rdi|edi)\\\\)\\\\\\{1to\\[1-8\\]+\\\\\\}, %zmm\\[0-9\\]+, %zmm0\" 1 } } */\n+/* { dg-final { scan-assembler-not \"vbroadcastss\\[^\\n\\]*%zmm\\[0-9\\]+\" } } */\n+\n+#define type __m512\n+#define vec 512\n+#define op fmadd\n+#define suffix ps\n+#define SCALAR float\n+\n+#include \"avx512-fma-6.h\""}, {"sha": "8c117207efaf1fd505af928e5a7c469eebbc48a7", "filename": "gcc/testsuite/gcc.target/i386/avx512f-fmadd-sf-zmm-7.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-fmadd-sf-zmm-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-fmadd-sf-zmm-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-fmadd-sf-zmm-7.c?ref=9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512f -O2\" } */\n+/* { dg-final { scan-assembler-times \"vbroadcastss\\[^\\n\\]*%zmm\\[0-9\\]+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vfmadd...ps\\[^\\n\\]*%zmm\\[0-9\\]+\" 1 } } */\n+\n+#define type __m512\n+#define vec 512\n+#define op fmadd\n+#define suffix ps\n+#define SCALAR float\n+\n+#include \"avx512-fma-7.h\""}, {"sha": "8a9da75dd07128a33e33af62cfedcb7829c81963", "filename": "gcc/testsuite/gcc.target/i386/avx512f-fmadd-sf-zmm-8.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-fmadd-sf-zmm-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-fmadd-sf-zmm-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-fmadd-sf-zmm-8.c?ref=9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-mavx512f -O2\" } */\n+/* { dg-final { scan-assembler-times \"vbroadcastss\\[^\\n\\]*%zmm\\[0-9\\]+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vfmadd...ps\\[ \\\\t\\]+%zmm\\[0-9\\]+, %zmm\\[0-9\\]+, %zmm0\" 1 } } */\n+\n+#define type __m512\n+#define vec 512\n+#define op fmadd\n+#define suffix ps\n+#define SCALAR float\n+\n+#include \"avx512-fma-8.h\""}, {"sha": "e03a93552fc1df11174a181e1db29d79638eade2", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-fmadd-sf-xmm-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-fmadd-sf-xmm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-fmadd-sf-xmm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-fmadd-sf-xmm-1.c?ref=9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mfma -mavx512vl -O2\" } */\n+/* { dg-final { scan-assembler-times \"vfmadd...ps\\[ \\\\t\\]+\\\\(%(?:eax|rdi|edi)\\\\)\\\\\\{1to\\[1-8\\]+\\\\\\}, %xmm\\[0-9\\]+, %xmm0\" 1 } } */\n+/* { dg-final { scan-assembler-not \"vbroadcastss\\[^\\n\\]*%xmm\\[0-9\\]+\" } } */\n+\n+#define type __m128\n+#define vec\n+#define op fmadd\n+#define suffix ps\n+#define SCALAR float\n+\n+#include \"avx512-fma-1.h\""}, {"sha": "225766d722a8fd779776ebb0f2509b25b20f0b27", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-fmadd-sf-ymm-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-fmadd-sf-ymm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-fmadd-sf-ymm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-fmadd-sf-ymm-1.c?ref=9a91ed2a2ebf5d38b9a47cb7a154592fca582e5f", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mfma -mavx512vl -O2\" } */\n+/* { dg-final { scan-assembler-times \"vfmadd...ps\\[ \\\\t\\]+\\\\(%(?:eax|rdi|edi)\\\\)\\\\\\{1to\\[1-8\\]+\\\\\\}, %ymm\\[0-9\\]+, %ymm0\" 1 } } */\n+/* { dg-final { scan-assembler-not \"vbroadcastss\\[^\\n\\]*%ymm\\[0-9\\]+\" } } */\n+\n+#define type __m256\n+#define vec 256\n+#define op fmadd\n+#define suffix ps\n+#define SCALAR float\n+\n+#include \"avx512-fma-1.h\""}]}