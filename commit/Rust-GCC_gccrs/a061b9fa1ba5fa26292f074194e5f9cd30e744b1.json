{"sha": "a061b9fa1ba5fa26292f074194e5f9cd30e744b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTA2MWI5ZmExYmE1ZmEyNjI5MmYwNzQxOTRlNWY5Y2QzMGU3NDRiMQ==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-10-19T00:25:57Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-10-19T00:25:57Z"}, "message": "(FRAME_POINTER_REQUIRED): Require frame pointer if\nnon-leaf flat function.\n\nFrom-SVN: r8309", "tree": {"sha": "6be33fbdb133d4228e1da667b1a2e2260cc8693b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6be33fbdb133d4228e1da667b1a2e2260cc8693b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a061b9fa1ba5fa26292f074194e5f9cd30e744b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a061b9fa1ba5fa26292f074194e5f9cd30e744b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a061b9fa1ba5fa26292f074194e5f9cd30e744b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a061b9fa1ba5fa26292f074194e5f9cd30e744b1/comments", "author": null, "committer": null, "parents": [{"sha": "af432130ae43aa872d977e6bda6a9fbe8c83b149", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af432130ae43aa872d977e6bda6a9fbe8c83b149", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af432130ae43aa872d977e6bda6a9fbe8c83b149"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "b5f7d3499cc96f58a1457c57c5954257732bfe4f", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a061b9fa1ba5fa26292f074194e5f9cd30e744b1/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a061b9fa1ba5fa26292f074194e5f9cd30e744b1/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=a061b9fa1ba5fa26292f074194e5f9cd30e744b1", "patch": "@@ -710,12 +710,14 @@ extern int sparc_mode_class[];\n    Zero means the frame pointer need not be set up (and parms\n    may be accessed via the stack pointer) in functions that seem suitable.\n    This is computed in `reload', in reload1.c.\n+   Used in flow.c, global.c, and reload1.c.\n \n-   Used in flow.c, global.c, and reload1.c.  */\n-extern int leaf_function;\n-\n+   Being a non-leaf function does not mean a frame pointer is needed in the\n+   flat window model.  However, the debugger won't be able to backtrace through\n+   us with out it.  */\n #define FRAME_POINTER_REQUIRED \\\n-  (TARGET_FRW ? (current_function_calls_alloca || current_function_varargs) \\\n+  (TARGET_FRW ? (current_function_calls_alloca || current_function_varargs \\\n+\t\t || !leaf_function_p ()) \\\n    : ! (leaf_function_p () && only_leaf_regs_used ()))\n \n /* C statement to store the difference between the frame pointer\n@@ -1515,6 +1517,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n    to do a \"save\" insn.  The decision about whether or not\n    to do this is made in regclass.c.  */\n \n+extern int leaf_function;\n #define FUNCTION_PROLOGUE(FILE, SIZE)\t\t\t\t\\\n   (TARGET_FRW ? sparc_flat_output_function_prologue (FILE, SIZE) \\\n    : output_function_prologue (FILE, SIZE, leaf_function))"}]}