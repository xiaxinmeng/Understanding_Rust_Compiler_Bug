{"sha": "0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGFhMDZiMThmYzlmNzllYzEyYWI2NWEzNDkxM2I0ZjY3ZDIxNzdkOA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2004-11-24T04:11:23Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2004-11-24T04:11:23Z"}, "message": "doxygroups.cc: Add std::tr1 namespace.\n\n\n2004-11-23  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* docs/doxygen/doxygroups.cc: Add std::tr1 namespace.\n\t* docs/doxygen/run_doxygen: Renames for std::tr1.\n\t* docs/doxygen/user.cfg.in: Add cxxabi.h.\n\t* include/bits/*.tcc: Add file markup.\n\t* include/bits/allocator.h: Add link to allocator.html.\n\t* include/bits/atomicity.h: Add file markup.\n\t* include/bits/concurrence.h: Same.\n\t* include/bits/functexcept.h: Same.\n\t* include/ext*: Adjust file markup, remove GCC3 bits.\n\t* include/std/*: Adjust file markup, remove bits about renamed files.\n\t* libsupc++/cxxabi.h: Add file markup.\n\t* testsuite/20_util/memory/auto_ptr/assign_neg.cc: Adjust line numbers.\n\nFrom-SVN: r91135", "tree": {"sha": "bd9c019ce149788080d32cf3857bc82ca8487be7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd9c019ce149788080d32cf3857bc82ca8487be7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/comments", "author": null, "committer": null, "parents": [{"sha": "af746697141397c71da91a4f52f2e3b9db005cec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af746697141397c71da91a4f52f2e3b9db005cec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af746697141397c71da91a4f52f2e3b9db005cec"}], "stats": {"total": 279, "additions": 179, "deletions": 100}, "files": [{"sha": "95caec3bf4aacacf6236161a40d7303a16570d00", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -1,3 +1,18 @@\n+2004-11-23  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* docs/doxygen/doxygroups.cc: Add std::tr1 namespace.\n+\t* docs/doxygen/run_doxygen: Renames for std::tr1.\n+\t* docs/doxygen/user.cfg.in: Add cxxabi.h.\n+\t* include/bits/*.tcc: Add file markup.\n+\t* include/bits/allocator.h: Add link to allocator.html.\n+\t* include/bits/atomicity.h: Add file markup.\n+\t* include/bits/concurrence.h: Same.\n+\t* include/bits/functexcept.h: Same.\n+\t* include/ext*: Adjust file markup, remove GCC3 bits.\n+\t* include/std/*: Adjust file markup, remove bits about renamed files.\n+\t* libsupc++/cxxabi.h: Add file markup.\n+\t* testsuite/20_util/memory/auto_ptr/assign_neg.cc: Adjust line numbers.\n+\n 2004-11-22  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/locale_facets.h (isspace, isprint, isupper,"}, {"sha": "f683f2237ab877a1fe45e30db102cc9dfd027793", "filename": "libstdc++-v3/docs/doxygen/doxygroups.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fdoxygroups.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fdoxygroups.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fdoxygroups.cc?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -19,6 +19,9 @@\n /** @namespace std\n  *  @brief Everything defined by the ISO C++ Standard is within namespace std.\n */\n+/** @namespace std::tr1\n+ *  @brief Everything defined by the TR1 is within namespace std::tr1.\n+*/\n /** @namespace __gnu_cxx\n  *  @brief This namespace serves two purposes.\n  *"}, {"sha": "b45572348164eb92e3fd5aee10126f4226da1375", "filename": "libstdc++-v3/docs/doxygen/run_doxygen", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Frun_doxygen", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Frun_doxygen", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Frun_doxygen?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -282,6 +282,10 @@ cp ${srcdir}/docs/doxygen/Intro.3 C++Intro.3\n \n # Why didn't I do this at the start?  Were rabid weasels eating my brain?\n # Who the fsck would \"man std_vector\" when the class isn't named that?\n+for f in std_tr1_*; do\n+    newname=`echo $f | sed 's/^std_tr1_/std::tr1::/'`\n+    mv $f $newname\n+done\n for f in std_*; do\n     newname=`echo $f | sed 's/^std_/std::/'`\n     mv $f $newname"}, {"sha": "efbba60232b16a336daf6bf1d5c36d8b8f043a0c", "filename": "libstdc++-v3/docs/doxygen/user.cfg.in", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fuser.cfg.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fuser.cfg.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fuser.cfg.in?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -76,6 +76,7 @@ INPUT                  = @srcdir@/docs/doxygen/doxygroups.cc \\\n                          @srcdir@/libsupc++/exception \\\n                          @srcdir@/libsupc++/new \\\n                          @srcdir@/libsupc++/typeinfo \\\n+                         @srcdir@/libsupc++/cxxabi.h \\\n                          include/algorithm \\\n                          include/bitset \\\n                          include/deque \\\n@@ -148,7 +149,8 @@ ALPHABETICAL_INDEX     = YES\n COLS_IN_ALPHA_INDEX    = 2\n IGNORE_PREFIX          = std \\\n                          __gnu_cxx \\\n-                         __gnu_debug\n+                         __gnu_debug \\\n+\t          \t std::tr1\n #---------------------------------------------------------------------------\n # configuration options related to the HTML output\n #---------------------------------------------------------------------------"}, {"sha": "c28442fc6fa792c6383a4c3c6d276e9a5dcd1edc", "filename": "libstdc++-v3/include/bits/allocator.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fallocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fallocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fallocator.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -56,6 +56,7 @@ namespace std\n   template<typename _Tp>\n     class allocator;\n \n+  /// allocator<void> specialization.\n   template<>\n     class allocator<void>\n     {\n@@ -71,7 +72,12 @@ namespace std\n         { typedef allocator<_Tp1> other; };\n     };\n \n-  /// @brief  The \"standard\" allocator, as per [20.4].\n+  /**\n+   * @brief  The \"standard\" allocator, as per [20.4].\n+   *\n+   *  Further details:\n+   *  http://gcc.gnu.org/onlinedocs/libstdc++/20_util/allocator.html\n+   */\n   template<typename _Tp>\n     class allocator: public ___glibcxx_base_allocator<_Tp>\n     {"}, {"sha": "932efe931ce3c733e72e662ccef40416157f6871", "filename": "libstdc++-v3/include/bits/atomicity.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fatomicity.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file atomicity.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n #ifndef _GLIBCXX_ATOMICITY_H\n #define _GLIBCXX_ATOMICITY_H\t1\n "}, {"sha": "afc2afb79cf7509d1564ca62d16b321d37bfef67", "filename": "libstdc++-v3/include/bits/basic_ios.tcc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.tcc?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file basic_ios.tcc\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n #ifndef _BASIC_IOS_TCC\n #define _BASIC_IOS_TCC 1\n "}, {"sha": "872156f12aba730b051863a15a855879049304e7", "filename": "libstdc++-v3/include/bits/basic_string.tcc", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.tcc?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -28,13 +28,15 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file basic_string.tcc\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 21  Strings library\n //\n \n-// This file is included by <string>.  It is not meant to be included\n-// separately.\n-\n // Written by Jason Merrill based upon the specification by Takanori Adachi\n // in ANSI X3J16/94-0013R2.  Rewritten by Nathan Myers to ISO-14882.\n "}, {"sha": "bc56eebfcde841e679d1fa64ed707354a6708694", "filename": "libstdc++-v3/include/bits/concurrence.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fconcurrence.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fconcurrence.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fconcurrence.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -28,6 +28,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file concurrence.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n #ifndef _CONCURRENCE_H\n #define _CONCURRENCE_H 1\n "}, {"sha": "8b5c0cf0c00b3387945cb3c7e65c7e3fcd254d95", "filename": "libstdc++-v3/include/bits/fstream.tcc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -28,6 +28,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file fstream.tcc\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 27.8  File-based streams\n //"}, {"sha": "448297c07810cbf92bb73c0e2fad2786157a6361", "filename": "libstdc++-v3/include/bits/functexcept.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffunctexcept.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffunctexcept.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffunctexcept.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -27,6 +27,10 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file functexcept.h\n+ *  This header provides support for -fno-exceptions.\n+ */\n+\n //\n // ISO C++ 14882: 19.1  Exception classes\n //"}, {"sha": "68451adbfbea8c4e74a8fab8572a082bfbb17769", "filename": "libstdc++-v3/include/bits/istream.tcc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -28,6 +28,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file istream.tcc\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 27.6.1  Input streams\n //"}, {"sha": "ae3a102ff448591537a972f82174d9c3dea75411", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -28,7 +28,10 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-// Warning: this file is not meant for user inclusion. Use <locale>.\n+/** @file locale_facets.tcc\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n \n #ifndef _LOCALE_FACETS_TCC\n #define _LOCALE_FACETS_TCC 1"}, {"sha": "fc1c56ff6e4ee089ad182bf938e0dde143f02fb3", "filename": "libstdc++-v3/include/bits/ostream.tcc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -28,6 +28,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ostream.tcc\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 27.6.2  Output streams\n //"}, {"sha": "579c4a2cd9f327cf24f664cec9784029d23cf454", "filename": "libstdc++-v3/include/bits/sstream.tcc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsstream.tcc?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -28,6 +28,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file sstream.tcc\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 27.7  String-based streams\n //"}, {"sha": "bbce9e51b901a27a81b849c8f6909311a455e260", "filename": "libstdc++-v3/include/bits/streambuf.tcc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -28,6 +28,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file streambuf.tcc\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 27.5  Stream buffers\n //"}, {"sha": "523ea629feafdf1991dbf97062ae3356a7985cec", "filename": "libstdc++-v3/include/bits/valarray_array.tcc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvalarray_array.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvalarray_array.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvalarray_array.tcc?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file valarray_array.tcc\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n // Written by Gabriel Dos Reis <Gabriel.Dos-Reis@DPTMaths.ENS-Cachan.Fr>\n \n #ifndef _VALARRAY_ARRAY_TCC"}, {"sha": "52de67ce68415d0b664b88d5adbe39200c4213cb", "filename": "libstdc++-v3/include/ext/algorithm", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Falgorithm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Falgorithm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Falgorithm?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -55,8 +55,7 @@\n \n /** @file ext/algorithm\n  *  This file is a GNU extension to the Standard C++ Library (possibly\n- *  containing extensions from the HP/SGI STL subset).  You should only\n- *  include this header if you are using GCC 3 or later.\n+ *  containing extensions from the HP/SGI STL subset).\n  */\n \n #ifndef _EXT_ALGORITHM"}, {"sha": "54525f034136d5b5691b4408f31afe050c23cafd", "filename": "libstdc++-v3/include/ext/array_allocator.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Farray_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Farray_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Farray_allocator.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -27,6 +27,10 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ext/array_allocator.h\n+ *  This file is a GNU extension to the Standard C++ Library.\n+ */\n+\n #ifndef _ARRAY_ALLOCATOR_H\n #define _ARRAY_ALLOCATOR_H 1\n "}, {"sha": "656683c244eefa61ce3b30ff4796f9168763cdb3", "filename": "libstdc++-v3/include/ext/bitmap_allocator.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Fbitmap_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Fbitmap_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fbitmap_allocator.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -29,7 +29,6 @@\n \n /** @file ext/bitmap_allocator.h\n  *  This file is a GNU extension to the Standard C++ Library.\n- *  You should only include this header if you are using GCC 3 or later.\n  */\n \n #ifndef _BITMAP_ALLOCATOR_H"}, {"sha": "7d0b45b9b17ac0c92197f4cb95e59b087e80d566", "filename": "libstdc++-v3/include/ext/functional", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Ffunctional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Ffunctional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Ffunctional?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -55,8 +55,7 @@\n \n /** @file ext/functional\n  *  This file is a GNU extension to the Standard C++ Library (possibly\n- *  containing extensions from the HP/SGI STL subset).  You should only\n- *  include this header if you are using GCC 3 or later.\n+ *  containing extensions from the HP/SGI STL subset).\n  */\n \n #ifndef _EXT_FUNCTIONAL"}, {"sha": "3f15e5fef1c339fdf4dd12ae90ab5ab9c176b0fc", "filename": "libstdc++-v3/include/ext/hash_fun.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Fhash_fun.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Fhash_fun.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fhash_fun.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -55,8 +55,7 @@\n \n /** @file ext/hash_fun.h\n  *  This file is a GNU extension to the Standard C++ Library (possibly\n- *  containing extensions from the HP/SGI STL subset).  You should only\n- *  include this header if you are using GCC 3 or later.\n+ *  containing extensions from the HP/SGI STL subset).\n  */\n \n #ifndef _HASH_FUN_H"}, {"sha": "eff10e0272bb8560271527a8547509a40b0a4c22", "filename": "libstdc++-v3/include/ext/hash_map", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Fhash_map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Fhash_map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fhash_map?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -55,8 +55,7 @@\n \n /** @file ext/hash_map\n  *  This file is a GNU extension to the Standard C++ Library (possibly\n- *  containing extensions from the HP/SGI STL subset).  You should only\n- *  include this header if you are using GCC 3 or later.\n+ *  containing extensions from the HP/SGI STL subset).\n  */\n \n #ifndef _HASH_MAP"}, {"sha": "f6e791a500f31e0b582c05d67cf83169d8689eb3", "filename": "libstdc++-v3/include/ext/hash_set", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Fhash_set", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Fhash_set", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fhash_set?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -55,8 +55,7 @@\n \n /** @file ext/hash_set\n  *  This file is a GNU extension to the Standard C++ Library (possibly\n- *  containing extensions from the HP/SGI STL subset).  You should only\n- *  include this header if you are using GCC 3 or later.\n+ *  containing extensions from the HP/SGI STL subset).\n  */\n \n #ifndef _HASH_SET"}, {"sha": "fc9beb62d06a24681250778b04c690ca4c083f1e", "filename": "libstdc++-v3/include/ext/hashtable.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Fhashtable.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Fhashtable.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fhashtable.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -55,8 +55,7 @@\n \n /** @file ext/hashtable.h\n  *  This file is a GNU extension to the Standard C++ Library (possibly\n- *  containing extensions from the HP/SGI STL subset).  You should only\n- *  include this header if you are using GCC 3 or later.\n+ *  containing extensions from the HP/SGI STL subset).\n  */\n \n #ifndef _HASHTABLE_H"}, {"sha": "35096271595f4f8990dbd54f1351cfb394b6537f", "filename": "libstdc++-v3/include/ext/iterator", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Fiterator", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Fiterator", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fiterator?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -55,8 +55,7 @@\n \n /** @file ext/iterator\n  *  This file is a GNU extension to the Standard C++ Library (possibly\n- *  containing extensions from the HP/SGI STL subset).  You should only\n- *  include this header if you are using GCC 3 or later.\n+ *  containing extensions from the HP/SGI STL subset).\n  */\n \n #ifndef _EXT_ITERATOR"}, {"sha": "4d917d590e242bd7855ca495a5bd4d2e3870e9ef", "filename": "libstdc++-v3/include/ext/malloc_allocator.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Fmalloc_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Fmalloc_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fmalloc_allocator.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -27,6 +27,10 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ext/malloc_allocator.h\n+ *  This file is a GNU extension to the Standard C++ Library.\n+ */\n+\n #ifndef _MALLOC_ALLOCATOR_H\n #define _MALLOC_ALLOCATOR_H 1\n \n@@ -36,7 +40,7 @@\n namespace __gnu_cxx\n {\n   /**\n-   *  @brief  An allocator that uses malloc\n+   *  @brief  An allocator that uses malloc.\n    *\n    *  This is precisely the allocator defined in the C++ Standard. \n    *    - all allocation calls malloc"}, {"sha": "6244c0e1d6541847ec34128e5a6f3527983af5ff", "filename": "libstdc++-v3/include/ext/memory", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Fmemory", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Fmemory", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fmemory?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -55,8 +55,7 @@\n \n /** @file ext/memory\n  *  This file is a GNU extension to the Standard C++ Library (possibly\n- *  containing extensions from the HP/SGI STL subset).  You should only\n- *  include this header if you are using GCC 3 or later.\n+ *  containing extensions from the HP/SGI STL subset).\n  */\n \n #ifndef _EXT_MEMORY"}, {"sha": "72fd181322fa85e0f19a99199fb7fec066b24b3c", "filename": "libstdc++-v3/include/ext/mt_allocator.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Fmt_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Fmt_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fmt_allocator.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -29,7 +29,6 @@\n \n /** @file ext/mt_allocator.h\n  *  This file is a GNU extension to the Standard C++ Library.\n- *  You should only include this header if you are using GCC 3 or later.\n  */\n \n #ifndef _MT_ALLOCATOR_H"}, {"sha": "f6f777be4652fc3a59811344a0ff910d14c3e09b", "filename": "libstdc++-v3/include/ext/new_allocator.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Fnew_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Fnew_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fnew_allocator.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -27,6 +27,10 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ext/new_allocator.h\n+ *  This file is a GNU extension to the Standard C++ Library.\n+ */\n+\n #ifndef _NEW_ALLOCATOR_H\n #define _NEW_ALLOCATOR_H 1\n "}, {"sha": "8bb1ad7de610d53ef2dff9cd7d2e3ea98b8aa4e9", "filename": "libstdc++-v3/include/ext/numeric", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Fnumeric", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Fnumeric", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fnumeric?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -55,8 +55,7 @@\n \n /** @file ext/numeric\n  *  This file is a GNU extension to the Standard C++ Library (possibly\n- *  containing extensions from the HP/SGI STL subset).  You should only\n- *  include this header if you are using GCC 3 or later.\n+ *  containing extensions from the HP/SGI STL subset). \n  */\n \n #ifndef _EXT_NUMERIC"}, {"sha": "c2f5551247d6fc6dba1f04d2b7b2d9a36d0361b5", "filename": "libstdc++-v3/include/ext/pod_char_traits.h", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpod_char_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpod_char_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpod_char_traits.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -1,6 +1,6 @@\n // POD character, std::char_traits specialization -*- C++ -*-\n \n-// Copyright (C) 2002, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2002, 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -27,6 +27,10 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ext/pod_char_traits.h\n+ *  This file is a GNU extension to the Standard C++ Library.\n+ */\n+\n // Gabriel Dos Reis <gdr@integrable-solutions.net>\n // Benjamin Kosnik <bkoz@redhat.com>\n \n@@ -37,6 +41,7 @@\n \n namespace __gnu_cxx\n {\n+  /// @brief A POD class that serves as a character abstraction class.\n   template<typename V, typename I, typename S = mbstate_t>\n     struct character\n     {\n@@ -59,7 +64,7 @@ namespace __gnu_cxx\n \n namespace std\n {\n-  // Provide std::char_traits specialization.\n+  /// char_traits<__gnu_cxx::character> specialization.\n   template<typename V, typename I, typename S>\n     struct char_traits<__gnu_cxx::character<V, I, S> >\n     {"}, {"sha": "c5b2bec3dcba8d97706eb10586adce01456aa5a9", "filename": "libstdc++-v3/include/ext/pool_allocator.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpool_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpool_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpool_allocator.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -42,8 +42,8 @@\n \n /** @file ext/pool_allocator.h\n  *  This file is a GNU extension to the Standard C++ Library.\n- *  You should only include this header if you are using GCC 3 or later.\n  */\n+\n #ifndef _POOL_ALLOCATOR_H\n #define _POOL_ALLOCATOR_H 1\n \n@@ -117,7 +117,7 @@ namespace __gnu_cxx\n     };\n \n \n-  /// @brief  Class __pool_alloc.\n+  /// @brief  class __pool_alloc.\n   template<typename _Tp>\n     class __pool_alloc : private __pool_alloc_base\n     {"}, {"sha": "439c7e1f15659ba73b58193cc5efedce58fb377d", "filename": "libstdc++-v3/include/ext/rb_tree", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Frb_tree", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Frb_tree", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Frb_tree?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -55,8 +55,7 @@\n \n /** @file ext/rb_tree\n  *  This file is a GNU extension to the Standard C++ Library (possibly\n- *  containing extensions from the HP/SGI STL subset).  You should only\n- *  include this header if you are using GCC 3 or later.\n+ *  containing extensions from the HP/SGI STL subset). \n  */\n \n #ifndef _RB_TREE"}, {"sha": "0e24618864644c3a0e14a6856cbcbafece7227c2", "filename": "libstdc++-v3/include/ext/rope", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Frope", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Frope", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Frope?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -42,8 +42,7 @@\n \n /** @file ext/rope\n  *  This file is a GNU extension to the Standard C++ Library (possibly\n- *  containing extensions from the HP/SGI STL subset).  You should only\n- *  include this header if you are using GCC 3 or later.\n+ *  containing extensions from the HP/SGI STL subset). \n  */\n \n #ifndef _ROPE"}, {"sha": "fb886d8a7b9b87bdf09b556be03dc8d1f7b1eb5e", "filename": "libstdc++-v3/include/ext/slist", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Fslist", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fext%2Fslist", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fslist?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -43,8 +43,7 @@\n \n /** @file ext/slist\n  *  This file is a GNU extension to the Standard C++ Library (possibly\n- *  containing extensions from the HP/SGI STL subset).  You should only\n- *  include this header if you are using GCC 3 or later.\n+ *  containing extensions from the HP/SGI STL subset). \n  */\n \n #ifndef _SLIST"}, {"sha": "218fe9aa2aa842d4512a869a32ea9e2c7a2258b0", "filename": "libstdc++-v3/include/std/std_algorithm.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_algorithm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_algorithm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_algorithm.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -54,8 +54,7 @@\n  */\n \n /** @file\n- *  This is a Standard C++ Library header.  You should @c #include this header\n- *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *  This is a Standard C++ Library header.\n  */\n \n #ifndef _GLIBCXX_ALGORITHM"}, {"sha": "dc677786a2de77f53a1979d0bb5b797502ab71f9", "filename": "libstdc++-v3/include/std/std_bitset.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_bitset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_bitset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_bitset.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -41,8 +41,7 @@\n  */\n \n /** @file bitset\n- *  This is a Standard C++ Library header.  You should @c #include this header\n- *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *  This is a Standard C++ Library header.\n  */\n \n #ifndef _GLIBCXX_BITSET"}, {"sha": "7efd975a07b6a55502c7b43f0003ccc6db1be521", "filename": "libstdc++-v3/include/std/std_complex.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_complex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_complex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_complex.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -36,8 +36,7 @@\n //\n \n /** @file complex\n- *  This is a Standard C++ Library header.  You should @c #include this header\n- *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *  This is a Standard C++ Library header.\n  */\n \n #ifndef _GLIBCXX_COMPLEX"}, {"sha": "a26541514ace011d2e4596ae28a18e11236c79a9", "filename": "libstdc++-v3/include/std/std_deque.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_deque.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_deque.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_deque.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -54,8 +54,7 @@\n  */\n \n /** @file deque\n- *  This is a Standard C++ Library header.  You should @c #include this header\n- *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *  This is a Standard C++ Library header.\n  */\n \n #ifndef _GLIBCXX_DEQUE"}, {"sha": "d1fce4dbbca4816de44045463bba0c3851c0b080", "filename": "libstdc++-v3/include/std/std_fstream.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_fstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_fstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_fstream.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -33,8 +33,7 @@\n //\n \n /** @file fstream\n- *  This is a Standard C++ Library header.  You should @c #include this header\n- *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *  This is a Standard C++ Library header.\n  */\n \n #ifndef _GLIBCXX_FSTREAM"}, {"sha": "6eeb029c31117148d89233165fbce270b97e30fd", "filename": "libstdc++-v3/include/std/std_functional.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_functional.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_functional.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_functional.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -42,8 +42,7 @@\n  */\n \n /** @file\n- *  This is a Standard C++ Library header.  You should @c #include this header\n- *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *  This is a Standard C++ Library header.\n  */\n \n #ifndef _GLIBCXX_FUNCTIONAL"}, {"sha": "f14703515c59350e3be6c9b983294be367634ed6", "filename": "libstdc++-v3/include/std/std_iomanip.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iomanip.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iomanip.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iomanip.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -33,8 +33,7 @@\n //\n \n /** @file iomanip\n- *  This is a Standard C++ Library header.  You should @c #include this header\n- *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *  This is a Standard C++ Library header.\n  */\n \n #ifndef _GLIBCXX_IOMANIP"}, {"sha": "14c1da86df670159fd5ea2488d4c711845fb64d6", "filename": "libstdc++-v3/include/std/std_ios.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_ios.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_ios.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_ios.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -32,8 +32,7 @@\n //\n \n /** @file ios\n- *  This is a Standard C++ Library header.  You should @c #include this header\n- *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *  This is a Standard C++ Library header.\n  */\n \n #ifndef _GLIBCXX_IOS"}, {"sha": "f7a63b660eb4978ea203a75d6ca61c5c6686c0de", "filename": "libstdc++-v3/include/std/std_iosfwd.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iosfwd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iosfwd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iosfwd.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -33,8 +33,7 @@\n //\n \n /** @file iosfwd\n- *  This is a Standard C++ Library header.  You should @c #include this header\n- *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *  This is a Standard C++ Library header.\n  */\n \n #ifndef _GLIBCXX_IOSFWD"}, {"sha": "7a658eb630a696d3c776cce6839becadcbf2de5d", "filename": "libstdc++-v3/include/std/std_iostream.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iostream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iostream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iostream.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -32,8 +32,7 @@\n //\n \n /** @file iostream\n- *  This is a Standard C++ Library header.  You should @c #include this header\n- *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *  This is a Standard C++ Library header. \n  */\n \n #ifndef _GLIBCXX_IOSTREAM"}, {"sha": "0a6bd992467e997e5e738e2edbd9a67dee7b8ec6", "filename": "libstdc++-v3/include/std/std_istream.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_istream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_istream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_istream.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -33,8 +33,7 @@\n //\n \n /** @file istream\n- *  This is a Standard C++ Library header.  You should @c #include this header\n- *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *  This is a Standard C++ Library header.\n  */\n \n #ifndef _GLIBCXX_ISTREAM"}, {"sha": "c5565e99e82b33dff29676d999354794594e9872", "filename": "libstdc++-v3/include/std/std_iterator.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iterator.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -54,8 +54,7 @@\n  */\n \n /** @file iterator\n- *  This is a Standard C++ Library header.  You should @c #include this header\n- *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *  This is a Standard C++ Library header.\n  */\n \n #ifndef _GLIBCXX_ITERATOR"}, {"sha": "9bc99e1a4e9c7dd4418908fa1563baf602790862", "filename": "libstdc++-v3/include/std/std_limits.h", "status": "modified", "additions": 21, "deletions": 5, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_limits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_limits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_limits.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -27,6 +27,10 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file limits\n+ *  This is a Standard C++ Library header.\n+ */\n+\n // Note: this is not a conforming implementation.\n // Written by Gabriel Dos Reis <gdr@codesourcery.com>\n \n@@ -35,11 +39,6 @@\n // 18.2.1\n //\n \n-/** @file limits\n- *  This is a Standard C++ Library header.  You should @c #include this header\n- *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n- */\n-\n #ifndef _GLIBCXX_NUMERIC_LIMITS\n #define _GLIBCXX_NUMERIC_LIMITS 1\n \n@@ -310,6 +309,8 @@ namespace std\n \n   // Now there follow 15 explicit specializations.  Yes, 15.  Make sure\n   // you get the count right.\n+\n+  /// numeric_limits<bool> specialization.\n   template<>\n     struct numeric_limits<bool>\n     {\n@@ -363,6 +364,7 @@ namespace std\n       static const float_round_style round_style = round_toward_zero;\n     };\n \n+  /// numeric_limits<char> specialization.\n   template<>\n     struct numeric_limits<char>\n     {\n@@ -413,6 +415,7 @@ namespace std\n       static const float_round_style round_style = round_toward_zero;\n     };\n \n+  /// numeric_limits<signed char> specialization.\n   template<>\n     struct numeric_limits<signed char>\n     {\n@@ -463,6 +466,7 @@ namespace std\n       static const float_round_style round_style = round_toward_zero;\n     };\n \n+  /// numeric_limits<unsigned char> specialization.\n   template<>\n     struct numeric_limits<unsigned char>\n     {\n@@ -513,6 +517,7 @@ namespace std\n       static const float_round_style round_style = round_toward_zero;\n     };\n \n+  /// numeric_limits<wchar_t> specialization.\n   template<>\n     struct numeric_limits<wchar_t>\n     {\n@@ -563,6 +568,7 @@ namespace std\n       static const float_round_style round_style = round_toward_zero;\n     };\n \n+  /// numeric_limits<short> specialization.\n   template<>\n     struct numeric_limits<short>\n     {\n@@ -613,6 +619,7 @@ namespace std\n       static const float_round_style round_style = round_toward_zero;\n     };\n \n+  /// numeric_limits<unsigned short> specialization.\n   template<>\n     struct numeric_limits<unsigned short>\n     {\n@@ -663,6 +670,7 @@ namespace std\n       static const float_round_style round_style = round_toward_zero;\n     };\n \n+  /// numeric_limits<int> specialization.\n   template<>\n     struct numeric_limits<int>\n     {\n@@ -713,6 +721,7 @@ namespace std\n       static const float_round_style round_style = round_toward_zero;\n     };\n \n+  /// numeric_limits<unsigned int> specialization.\n   template<>\n     struct numeric_limits<unsigned int>\n     {\n@@ -763,6 +772,7 @@ namespace std\n       static const float_round_style round_style = round_toward_zero;\n     };\n \n+  /// numeric_limits<long> specialization.\n   template<>\n     struct numeric_limits<long>\n     {\n@@ -813,6 +823,7 @@ namespace std\n       static const float_round_style round_style = round_toward_zero;\n     };\n \n+  /// numeric_limits<unsigned long> specialization.\n   template<>\n     struct numeric_limits<unsigned long>\n     {\n@@ -863,6 +874,7 @@ namespace std\n       static const float_round_style round_style = round_toward_zero;\n     };\n \n+  /// numeric_limits<long long> specialization.\n   template<>\n     struct numeric_limits<long long>\n     {\n@@ -913,6 +925,7 @@ namespace std\n       static const float_round_style round_style = round_toward_zero;\n     };\n \n+  /// numeric_limits<unsigned long long> specialization.\n   template<>\n     struct numeric_limits<unsigned long long>\n     {\n@@ -963,6 +976,7 @@ namespace std\n       static const float_round_style round_style = round_toward_zero;\n     };\n \n+  /// numeric_limits<float> specialization.\n   template<>\n     struct numeric_limits<float>\n     {\n@@ -1019,6 +1033,7 @@ namespace std\n #undef __glibcxx_float_traps\n #undef __glibcxx_float_tinyness_before\n \n+  /// numeric_limits<double> specialization.\n   template<>\n     struct numeric_limits<double>\n     {\n@@ -1075,6 +1090,7 @@ namespace std\n #undef __glibcxx_double_traps\n #undef __glibcxx_double_tinyness_before\n \n+  /// numeric_limits<long double> specialization.\n   template<>\n     struct numeric_limits<long double>\n     {"}, {"sha": "badf51699175a57a06c75dd300036dc2c3f87c97", "filename": "libstdc++-v3/include/std/std_list.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_list.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -54,8 +54,7 @@\n  */\n \n /** @file list\n- *  This is a Standard C++ Library header.  You should @c #include this header\n- *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *  This is a Standard C++ Library header.\n  */\n \n #ifndef _GLIBCXX_LIST"}, {"sha": "c560c97ebfe153b485af576509373e310ee17d7d", "filename": "libstdc++-v3/include/std/std_locale.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_locale.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_locale.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_locale.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -32,8 +32,7 @@\n //\n \n /** @file locale\n- *  This is a Standard C++ Library header.  You should @c #include this header\n- *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *  This is a Standard C++ Library header.\n  */\n \n #ifndef _GLIBCXX_LOCALE"}, {"sha": "62ade24cbe641209336cd72f8577302b696f6f7a", "filename": "libstdc++-v3/include/std/std_map.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_map.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -54,8 +54,7 @@\n  */\n \n /** @file map\n- *  This is a Standard C++ Library header.  You should @c #include this header\n- *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *  This is a Standard C++ Library header.\n  */\n \n #ifndef _GLIBCXX_MAP"}, {"sha": "7983297539f98225392819a3255896cff921f24a", "filename": "libstdc++-v3/include/std/std_memory.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_memory.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_memory.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_memory.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -42,8 +42,7 @@\n  */\n \n /** @file\n- *  This is a Standard C++ Library header.  You should @c #include this header\n- *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *  This is a Standard C++ Library header.\n  */\n \n #ifndef _GLIBCXX_MEMORY"}, {"sha": "1fabed986150a7c5c0729744cf5013bd49c4928f", "filename": "libstdc++-v3/include/std/std_numeric.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_numeric.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_numeric.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_numeric.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -54,8 +54,7 @@\n  */\n \n /** @file\n- *  This is a Standard C++ Library header.  You should @c #include this header\n- *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *  This is a Standard C++ Library header.\n  */\n \n #ifndef _GLIBCXX_NUMERIC"}, {"sha": "1c66440199df12db6f8f2bde80946e0fc18b95b6", "filename": "libstdc++-v3/include/std/std_ostream.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_ostream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_ostream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_ostream.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -33,8 +33,7 @@\n //\n \n /** @file ostream\n- *  This is a Standard C++ Library header.  You should @c #include this header\n- *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *  This is a Standard C++ Library header.\n  */\n \n #ifndef _GLIBCXX_OSTREAM"}, {"sha": "2aee4f5ac8ad9a98979c33fd386c8bb70ce5f8b3", "filename": "libstdc++-v3/include/std/std_queue.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_queue.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_queue.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_queue.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -54,8 +54,7 @@\n  */\n \n /** @file queue\n- *  This is a Standard C++ Library header.  You should @c #include this header\n- *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *  This is a Standard C++ Library header.\n  */\n \n #ifndef _GLIBCXX_QUEUE"}, {"sha": "5924cc563b227512e84b5a24a68c0031e9a8ecc5", "filename": "libstdc++-v3/include/std/std_set.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_set.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_set.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_set.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -54,8 +54,7 @@\n  */\n \n /** @file set\n- *  This is a Standard C++ Library header.  You should @c #include this header\n- *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *  This is a Standard C++ Library header.\n  */\n \n #ifndef _GLIBCXX_SET"}, {"sha": "66215b2f730de5556f8f2c9e9d9331d8bf6ceaae", "filename": "libstdc++-v3/include/std/std_sstream.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_sstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_sstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_sstream.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -33,8 +33,7 @@\n //\n \n /** @file sstream\n- *  This is a Standard C++ Library header.  You should @c #include this header\n- *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *  This is a Standard C++ Library header.\n  */\n \n #ifndef _GLIBCXX_SSTREAM"}, {"sha": "92712afb125fb3179f4090e104e65f24342ce65f", "filename": "libstdc++-v3/include/std/std_stack.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_stack.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_stack.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_stack.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -54,8 +54,7 @@\n  */\n \n /** @file stack\n- *  This is a Standard C++ Library header.  You should @c #include this header\n- *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *  This is a Standard C++ Library header.\n  */\n \n #ifndef _GLIBCXX_STACK"}, {"sha": "4fe09ed24b2b7ec14eee9ce195d6810e8e5e5a11", "filename": "libstdc++-v3/include/std/std_stdexcept.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_stdexcept.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_stdexcept.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_stdexcept.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -32,8 +32,7 @@\n //\n \n /** @file stdexcept\n- *  This is a Standard C++ Library header.  You should @c #include this header\n- *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *  This is a Standard C++ Library header.\n  */\n \n #ifndef _GLIBCXX_STDEXCEPT"}, {"sha": "c6902bec819dca34feabf2472d93ff81ba416a40", "filename": "libstdc++-v3/include/std/std_streambuf.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -33,8 +33,7 @@\n //\n \n /** @file streambuf\n- *  This is a Standard C++ Library header.  You should @c #include this header\n- *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *  This is a Standard C++ Library header.\n  */\n \n #ifndef _GLIBXX_STREAMBUF"}, {"sha": "02fe46e16d3c59f7d4fe6819ebc82337f7044e3d", "filename": "libstdc++-v3/include/std/std_string.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_string.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -33,8 +33,7 @@\n //\n \n /** @file string\n- *  This is a Standard C++ Library header.  You should @c #include this header\n- *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *  This is a Standard C++ Library header.\n  */\n \n #ifndef _GLIBCXX_STRING"}, {"sha": "352e8d3e727b484bcf8a0d3c31a751cc97eb5a67", "filename": "libstdc++-v3/include/std/std_utility.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_utility.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_utility.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_utility.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -54,8 +54,7 @@\n  */\n \n /** @file utility\n- *  This is a Standard C++ Library header.  You should @c #include this header\n- *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *  This is a Standard C++ Library header. \n  */\n \n #ifndef _GLIBCXX_UTILITY"}, {"sha": "21310baa9000034e198c9530b974e9070d54002d", "filename": "libstdc++-v3/include/std/std_valarray.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_valarray.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_valarray.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_valarray.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -31,8 +31,7 @@\n // Written by Gabriel Dos Reis <Gabriel.Dos-Reis@DPTMaths.ENS-Cachan.Fr>\n \n /** @file valarray\n- *  This is a Standard C++ Library header.  You should @c #include this header\n- *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *  This is a Standard C++ Library header. \n  */\n \n #ifndef _GLIBCXX_VALARRAY"}, {"sha": "3756ce93e84244a293bab262b68e30867a2a6fc8", "filename": "libstdc++-v3/include/std/std_vector.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_vector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_vector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_vector.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -54,8 +54,7 @@\n  */\n \n /** @file vector\n- *  This is a Standard C++ Library header.  You should @c #include this header\n- *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *  This is a Standard C++ Library header.\n  */\n \n #ifndef _GLIBCXX_VECTOR"}, {"sha": "9962bd9c5b26066385651c7b3f4bac0763884f61", "filename": "libstdc++-v3/libsupc++/cxxabi.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcxxabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcxxabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcxxabi.h?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -39,6 +39,10 @@\n    is includable from both C and C++. Though the C++ specific parts are not\n    available in C, naturally enough.  */\n \n+/** @file cxxabi.h\n+ *  The header provides an interface to the C++ ABI.\n+ */\n+\n #ifndef _CXXABI_H\n #define _CXXABI_H 1\n "}, {"sha": "55291676f3d91f0d1da018b51880bf75a8736c62", "filename": "libstdc++-v3/testsuite/20_util/memory/auto_ptr/assign_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmemory%2Fauto_ptr%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa06b18fc9f79ec12ab65a34913b4f67d2177d8/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmemory%2Fauto_ptr%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmemory%2Fauto_ptr%2Fassign_neg.cc?ref=0aa06b18fc9f79ec12ab65a34913b4f67d2177d8", "patch": "@@ -46,5 +46,5 @@ main()\n   test01();\n   return 0;\n }\n-// { dg-error \"candidates\" \"\" { target *-*-* } 224 } \n-// { dg-error \"std::auto_ptr\" \"\" { target *-*-* } 354 } \n+// { dg-error \"candidates\" \"\" { target *-*-* } 223 } \n+// { dg-error \"std::auto_ptr\" \"\" { target *-*-* } 353 } "}]}