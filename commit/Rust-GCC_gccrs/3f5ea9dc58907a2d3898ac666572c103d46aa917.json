{"sha": "3f5ea9dc58907a2d3898ac666572c103d46aa917", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Y1ZWE5ZGM1ODkwN2EyZDM4OThhYzY2NjU3MmMxMDNkNDZhYTkxNw==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2011-06-10T11:06:36Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2011-06-10T11:06:36Z"}, "message": "avr.c (avr_function_arg_advance): Fix thinko about when a value is actually passed in regs.\n\n\t* config/avr/avr.c (avr_function_arg_advance): Fix thinko about\n\twhen a value is actually passed in regs.\n\nFrom-SVN: r174898", "tree": {"sha": "f453b18df2d8d9d94c8fca0330d394f929a12849", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f453b18df2d8d9d94c8fca0330d394f929a12849"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f5ea9dc58907a2d3898ac666572c103d46aa917", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f5ea9dc58907a2d3898ac666572c103d46aa917", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f5ea9dc58907a2d3898ac666572c103d46aa917", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f5ea9dc58907a2d3898ac666572c103d46aa917/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b11b09048dcd08782578c7c34456e51aa408b1a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b11b09048dcd08782578c7c34456e51aa408b1a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b11b09048dcd08782578c7c34456e51aa408b1a9"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "0c18e056a75feb2badc31f5f23f7affb3a9f02b7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f5ea9dc58907a2d3898ac666572c103d46aa917/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f5ea9dc58907a2d3898ac666572c103d46aa917/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3f5ea9dc58907a2d3898ac666572c103d46aa917", "patch": "@@ -1,3 +1,8 @@\n+2011-06-10  Georg-Johann Lay  <avr@gjlay.de>\n+\t\n+\t* config/avr/avr.c (avr_function_arg_advance): Fix thinko about\n+\twhen a value is actually passed in regs.\n+\n 2011-06-10  Eric Botcazou  <ebotcazou@adacore.com>\n \t    Laurent Roug\ufffd  <laurent.rouge@menta.fr>\n "}, {"sha": "aadfd244b68e92c9ffca9de69b1cfac7aa687655", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f5ea9dc58907a2d3898ac666572c103d46aa917/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f5ea9dc58907a2d3898ac666572c103d46aa917/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=3f5ea9dc58907a2d3898ac666572c103d46aa917", "patch": "@@ -1784,7 +1784,8 @@ avr_function_arg_advance (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n      a function must not pass arguments in call-saved regs in order to get\n      tail-called. */\n   \n-  if (cum->regno >= 0\n+  if (cum->regno >= 8\n+      && cum->nregs >= 0\n       && !call_used_regs[cum->regno])\n     {\n       /* FIXME: We ship info on failing tail-call in struct machine_function.\n@@ -1800,7 +1801,8 @@ avr_function_arg_advance (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n      user has fixed a GPR needed to pass an argument, an (implicit) function\n      call would clobber that fixed register.  See PR45099 for an example.  */\n   \n-  if (cum->regno >= 0)\n+  if (cum->regno >= 8\n+      && cum->nregs >= 0)\n     {\n       int regno;\n "}]}