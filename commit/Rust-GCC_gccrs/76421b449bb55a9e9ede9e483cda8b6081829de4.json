{"sha": "76421b449bb55a9e9ede9e483cda8b6081829de4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzY0MjFiNDQ5YmI1NWE5ZTllZGU5ZTQ4M2NkYThiNjA4MTgyOWRlNA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-03-25T09:44:25Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-03-25T09:44:25Z"}, "message": "tree-ssa-loop-im.c (struct depend): Remove.\n\n2013-03-25  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-loop-im.c (struct depend): Remove.\n\t(struct lim_aux_data): Make depends a vec of gimples.\n\t(free_lim_aux_data): Adjust.\n\t(add_dependency): Likewise.\n\t(set_level): Likewise.\n\nFrom-SVN: r197031", "tree": {"sha": "566436d6b91c9959a729dc11c6aeda2161a60620", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/566436d6b91c9959a729dc11c6aeda2161a60620"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76421b449bb55a9e9ede9e483cda8b6081829de4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76421b449bb55a9e9ede9e483cda8b6081829de4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76421b449bb55a9e9ede9e483cda8b6081829de4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76421b449bb55a9e9ede9e483cda8b6081829de4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d154bfa22dcd6442f30a615cab1d4720cafb0b58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d154bfa22dcd6442f30a615cab1d4720cafb0b58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d154bfa22dcd6442f30a615cab1d4720cafb0b58"}], "stats": {"total": 48, "additions": 19, "deletions": 29}, "files": [{"sha": "264dd092338be0b435e0b38364ed0425fb448b84", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76421b449bb55a9e9ede9e483cda8b6081829de4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76421b449bb55a9e9ede9e483cda8b6081829de4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=76421b449bb55a9e9ede9e483cda8b6081829de4", "patch": "@@ -1,3 +1,11 @@\n+2013-03-25  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-loop-im.c (struct depend): Remove.\n+\t(struct lim_aux_data): Make depends a vec of gimples.\n+\t(free_lim_aux_data): Adjust.\n+\t(add_dependency): Likewise.\n+\t(set_level): Likewise.\n+\n 2013-03-25  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/56434"}, {"sha": "182a5a46ef63246b7b116f5b4a851323e9769a34", "filename": "gcc/tree-ssa-loop-im.c", "status": "modified", "additions": 11, "deletions": 29, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76421b449bb55a9e9ede9e483cda8b6081829de4/gcc%2Ftree-ssa-loop-im.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76421b449bb55a9e9ede9e483cda8b6081829de4/gcc%2Ftree-ssa-loop-im.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-im.c?ref=76421b449bb55a9e9ede9e483cda8b6081829de4", "patch": "@@ -58,15 +58,6 @@ along with GCC; see the file COPYING3.  If not see\n \t something;\n      }  */\n \n-/* A type for the list of statements that have to be moved in order to be able\n-   to hoist an invariant computation.  */\n-\n-struct depend\n-{\n-  gimple stmt;\n-  struct depend *next;\n-};\n-\n /* The auxiliary data kept for each statement.  */\n \n struct lim_aux_data\n@@ -85,11 +76,11 @@ struct lim_aux_data\n   unsigned cost;\t\t/* Cost of the computation performed by the\n \t\t\t\t   statement.  */\n \n-  struct depend *depends;\t/* List of statements that must be also hoisted\n-\t\t\t\t   out of the loop when this statement is\n-\t\t\t\t   hoisted; i.e. those that define the operands\n-\t\t\t\t   of the statement and are inside of the\n-\t\t\t\t   MAX_LOOP loop.  */\n+  vec<gimple> depends;\t\t/* Vector of statements that must be also\n+\t\t\t\t   hoisted out of the loop when this statement\n+\t\t\t\t   is hoisted; i.e. those that define the\n+\t\t\t\t   operands of the statement and are inside of\n+\t\t\t\t   the MAX_LOOP loop.  */\n };\n \n /* Maps statements to their lim_aux_data.  */\n@@ -210,13 +201,7 @@ get_lim_data (gimple stmt)\n static void\n free_lim_aux_data (struct lim_aux_data *data)\n {\n-  struct depend *dep, *next;\n-\n-  for (dep = data->depends; dep; dep = next)\n-    {\n-      next = dep->next;\n-      free (dep);\n-    }\n+  data->depends.release();\n   free (data);\n }\n \n@@ -481,7 +466,6 @@ add_dependency (tree def, struct lim_aux_data *data, struct loop *loop,\n   gimple def_stmt = SSA_NAME_DEF_STMT (def);\n   basic_block def_bb = gimple_bb (def_stmt);\n   struct loop *max_loop;\n-  struct depend *dep;\n   struct lim_aux_data *def_data;\n \n   if (!def_bb)\n@@ -506,10 +490,7 @@ add_dependency (tree def, struct lim_aux_data *data, struct loop *loop,\n       && def_bb->loop_father == loop)\n     data->cost += def_data->cost;\n \n-  dep = XNEW (struct depend);\n-  dep->stmt = def_stmt;\n-  dep->next = data->depends;\n-  data->depends = dep;\n+  data->depends.safe_push (def_stmt);\n \n   return true;\n }\n@@ -872,8 +853,9 @@ static void\n set_level (gimple stmt, struct loop *orig_loop, struct loop *level)\n {\n   struct loop *stmt_loop = gimple_bb (stmt)->loop_father;\n-  struct depend *dep;\n   struct lim_aux_data *lim_data;\n+  gimple dep_stmt;\n+  unsigned i;\n \n   stmt_loop = find_common_loop (orig_loop, stmt_loop);\n   lim_data = get_lim_data (stmt);\n@@ -887,8 +869,8 @@ set_level (gimple stmt, struct loop *orig_loop, struct loop *level)\n \t      || flow_loop_nested_p (lim_data->max_loop, level));\n \n   lim_data->tgt_loop = level;\n-  for (dep = lim_data->depends; dep; dep = dep->next)\n-    set_level (dep->stmt, orig_loop, level);\n+  FOR_EACH_VEC_ELT (lim_data->depends, i, dep_stmt)\n+    set_level (dep_stmt, orig_loop, level);\n }\n \n /* Determines an outermost loop from that we want to hoist the statement STMT."}]}