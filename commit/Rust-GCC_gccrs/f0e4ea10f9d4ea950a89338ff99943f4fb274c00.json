{"sha": "f0e4ea10f9d4ea950a89338ff99943f4fb274c00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjBlNGVhMTBmOWQ0ZWE5NTBhODkzMzhmZjk5OTQzZjRmYjI3NGMwMA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-04-13T14:34:13Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-04-13T14:34:13Z"}, "message": "basic-block.h, [...]: Fix comment typos.\n\n\t* basic-block.h, tree-ssa-uncprop.c, varasm.c,\n\tconfig/i386/sse.md: Fix comment typos.\n\nFrom-SVN: r98085", "tree": {"sha": "61ca3ff252cd1e5c6f3886fcfa7f1f1b672e4c27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61ca3ff252cd1e5c6f3886fcfa7f1f1b672e4c27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0e4ea10f9d4ea950a89338ff99943f4fb274c00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0e4ea10f9d4ea950a89338ff99943f4fb274c00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0e4ea10f9d4ea950a89338ff99943f4fb274c00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0e4ea10f9d4ea950a89338ff99943f4fb274c00/comments", "author": null, "committer": null, "parents": [{"sha": "fec02a2d77525e980aa9ac53f6c308004144c5b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fec02a2d77525e980aa9ac53f6c308004144c5b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fec02a2d77525e980aa9ac53f6c308004144c5b7"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "cdc2df90cf82b3da4374f18fe35f6abf1f2c4406", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0e4ea10f9d4ea950a89338ff99943f4fb274c00/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0e4ea10f9d4ea950a89338ff99943f4fb274c00/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f0e4ea10f9d4ea950a89338ff99943f4fb274c00", "patch": "@@ -1,3 +1,8 @@\n+2005-04-13  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* basic-block.h, tree-ssa-uncprop.c, varasm.c,\n+\tconfig/i386/sse.md: Fix comment typos.\n+\n 2005-04-13  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* configure.ac (gcc_AC_CHECK_DECLS): Add vsnprintf."}, {"sha": "2527640f707df49f3748ceb3e707f9026e395f0e", "filename": "gcc/basic-block.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0e4ea10f9d4ea950a89338ff99943f4fb274c00/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0e4ea10f9d4ea950a89338ff99943f4fb274c00/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=f0e4ea10f9d4ea950a89338ff99943f4fb274c00", "patch": "@@ -396,7 +396,7 @@ struct control_flow_graph GTY(())\n #define BASIC_BLOCK_FOR_FUNCTION(FN,N) \\\n   (VARRAY_BB (basic_block_info_for_function(FN), (N)))\n \n-/* Defines for texual backward source compatibility.  */\n+/* Defines for textual backward source compatibility.  */\n #define ENTRY_BLOCK_PTR\t\t(cfun->cfg->x_entry_block_ptr)\n #define EXIT_BLOCK_PTR\t\t(cfun->cfg->x_exit_block_ptr)\n #define basic_block_info\t(cfun->cfg->x_basic_block_info)"}, {"sha": "a73c27155e9d90e7cf31c0b5ba81ac48470fa29f", "filename": "gcc/tree-ssa-uncprop.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0e4ea10f9d4ea950a89338ff99943f4fb274c00/gcc%2Ftree-ssa-uncprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0e4ea10f9d4ea950a89338ff99943f4fb274c00/gcc%2Ftree-ssa-uncprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-uncprop.c?ref=f0e4ea10f9d4ea950a89338ff99943f4fb274c00", "patch": "@@ -258,7 +258,7 @@ associate_equivalences_with_edges (void)\n    COND_EXPRs and SWITCH_EXPRs.\n \n    We want to do those propagations as they can sometimes allow\n-   the SSA optimziers to do a better job.  However, in the cases\n+   the SSA optimizers to do a better job.  However, in the cases\n    where such propagations do not result in further optimization,\n    we would like to \"undo\" the propagation to avoid the redundant\n    copies and constant initializations.\n@@ -507,7 +507,7 @@ uncprop_into_successor_phis (struct dom_walk_data *walk_data ATTRIBUTE_UNUSED,\n \t      /* Walk every equivalence with the same value.  If we find\n \t\t one with the same underlying variable as the PHI result,\n \t\t then replace the value in the argument with its equivalent\n-\t\t SSA_NAME.  Use the most recent equivlance as hopefully\n+\t\t SSA_NAME.  Use the most recent equivalence as hopefully\n \t\t that results in shortest lifetimes.  */\n \t      for (j = VARRAY_ACTIVE_SIZE (elt->equivalences) - 1; j >= 0; j--)\n \t\t{"}, {"sha": "f2a361dff20d3e7d28d0c4eb7e3a122c270c8702", "filename": "gcc/varasm.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0e4ea10f9d4ea950a89338ff99943f4fb274c00/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0e4ea10f9d4ea950a89338ff99943f4fb274c00/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=f0e4ea10f9d4ea950a89338ff99943f4fb274c00", "patch": "@@ -129,8 +129,8 @@ char *hot_section_end_label;\n \n char *cold_section_end_label;\n  \n-/* The following global variable indicates the seciton name to be used\n-   for the current cold section, when partitiong hot and cold basic \n+/* The following global variable indicates the section name to be used\n+   for the current cold section, when partitioning hot and cold basic \n    blocks into separate sections.  */\n \n char *unlikely_text_section_name;"}]}