{"sha": "1b96e9a4bfb7d1ed3e4795288b69e0ba8b08f330", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI5NmU5YTRiZmI3ZDFlZDNlNDc5NTI4OGI2OWUwYmE4YjA4ZjMzMA==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2015-09-03T11:01:14Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2015-09-03T11:01:14Z"}, "message": "Fix inner loop phi in expand_omp_for_static_chunk\n\n2015-09-03  Tom de Vries  <tom@codesourcery.com>\n\n\tPR tree-optimization/65637\n\t* omp-low.c (find_phi_with_arg_on_edge): New function.\n\t(expand_omp_for_static_chunk): Fix inner loop phi.\n\n\t* testsuite/libgomp.c/autopar-2.c: New test.\n\nFrom-SVN: r227437", "tree": {"sha": "135974571dbf7f23c3c4e4d50e4fb8a510ae8965", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/135974571dbf7f23c3c4e4d50e4fb8a510ae8965"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b96e9a4bfb7d1ed3e4795288b69e0ba8b08f330", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b96e9a4bfb7d1ed3e4795288b69e0ba8b08f330", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b96e9a4bfb7d1ed3e4795288b69e0ba8b08f330", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b96e9a4bfb7d1ed3e4795288b69e0ba8b08f330/comments", "author": null, "committer": null, "parents": [{"sha": "8050766eaef0077f0af28dab1c0fe6f1aad724bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8050766eaef0077f0af28dab1c0fe6f1aad724bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8050766eaef0077f0af28dab1c0fe6f1aad724bb"}], "stats": {"total": 47, "additions": 46, "deletions": 1}, "files": [{"sha": "f09f24f6e95cbe8c7c13f17d5278113d175994de", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b96e9a4bfb7d1ed3e4795288b69e0ba8b08f330/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b96e9a4bfb7d1ed3e4795288b69e0ba8b08f330/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1b96e9a4bfb7d1ed3e4795288b69e0ba8b08f330", "patch": "@@ -1,3 +1,9 @@\n+2015-09-03  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR tree-optimization/65637\n+\t* omp-low.c (find_phi_with_arg_on_edge): New function.\n+\t(expand_omp_for_static_chunk): Fix inner loop phi.\n+\n 2015-09-03  Tom de Vries  <tom@codesourcery.com>\n \n \tPR tree-optimization/65637"}, {"sha": "22e55f6c3cf35eb544d91b7865428df833a0b686", "filename": "gcc/omp-low.c", "status": "modified", "additions": 31, "deletions": 1, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b96e9a4bfb7d1ed3e4795288b69e0ba8b08f330/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b96e9a4bfb7d1ed3e4795288b69e0ba8b08f330/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=1b96e9a4bfb7d1ed3e4795288b69e0ba8b08f330", "patch": "@@ -6885,6 +6885,24 @@ expand_omp_for_static_nochunk (struct omp_region *region,\n     }\n }\n \n+/* Return phi in E->DEST with ARG on edge E.  */\n+\n+static gphi *\n+find_phi_with_arg_on_edge (tree arg, edge e)\n+{\n+  basic_block bb = e->dest;\n+\n+  for (gphi_iterator gpi = gsi_start_phis (bb);\n+       !gsi_end_p (gpi);\n+       gsi_next (&gpi))\n+    {\n+      gphi *phi = gpi.phi ();\n+      if (PHI_ARG_DEF_FROM_EDGE (phi, e) == arg)\n+\treturn phi;\n+    }\n+\n+  return NULL;\n+}\n \n /* A subroutine of expand_omp_for.  Generate code for a parallel\n    loop with static schedule and a specified chunk size.  Given\n@@ -7324,7 +7342,19 @@ expand_omp_for_static_chunk (struct omp_region *region,\n \t    t = vextra;\n \t  add_phi_arg (nphi, t, ene, locus);\n \t  locus = redirect_edge_var_map_location (vm);\n-\t  add_phi_arg (nphi, redirect_edge_var_map_def (vm), re, locus);\n+\t  tree back_arg = redirect_edge_var_map_def (vm);\n+\t  add_phi_arg (nphi, back_arg, re, locus);\n+\t  edge ce = find_edge (cont_bb, body_bb);\n+\t  if (ce == NULL)\n+\t    {\n+\t      ce = BRANCH_EDGE (cont_bb);\n+\t      gcc_assert (single_succ (ce->dest) == body_bb);\n+\t      ce = single_succ_edge (ce->dest);\n+\t    }\n+\t  gphi *inner_loop_phi = find_phi_with_arg_on_edge (back_arg, ce);\n+\t  gcc_assert (inner_loop_phi != NULL);\n+\t  add_phi_arg (inner_loop_phi, gimple_phi_result (nphi),\n+\t\t       find_edge (seq_start_bb, body_bb), locus);\n \t}\n       gcc_assert (gsi_end_p (psi) && (head == NULL || i == head->length ()));\n       redirect_edge_var_map_clear (re);"}, {"sha": "d5aaa486204869bd2f344c08aa0f12d86c3c399f", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b96e9a4bfb7d1ed3e4795288b69e0ba8b08f330/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b96e9a4bfb7d1ed3e4795288b69e0ba8b08f330/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=1b96e9a4bfb7d1ed3e4795288b69e0ba8b08f330", "patch": "@@ -1,3 +1,8 @@\n+2015-09-03  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR tree-optimization/65637\n+\t* testsuite/libgomp.c/autopar-2.c: New test.\n+\n 2015-08-29  Tom de Vries  <tom@codesourcery.com>\n \n \tPR tree-optimization/46193"}, {"sha": "821a4dabc472c9001497c5ead2c4e2c761bba984", "filename": "libgomp/testsuite/libgomp.c/autopar-2.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b96e9a4bfb7d1ed3e4795288b69e0ba8b08f330/libgomp%2Ftestsuite%2Flibgomp.c%2Fautopar-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b96e9a4bfb7d1ed3e4795288b69e0ba8b08f330/libgomp%2Ftestsuite%2Flibgomp.c%2Fautopar-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fautopar-2.c?ref=1b96e9a4bfb7d1ed3e4795288b69e0ba8b08f330", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-ftree-parallelize-loops=4 -ffast-math --param parloops-chunk-size=100\" } */\n+\n+#include \"autopar-1.c\""}]}