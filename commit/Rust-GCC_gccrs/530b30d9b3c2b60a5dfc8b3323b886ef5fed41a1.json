{"sha": "530b30d9b3c2b60a5dfc8b3323b886ef5fed41a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTMwYjMwZDliM2MyYjYwYTVkZmM4YjMzMjNiODg2ZWY1ZmVkNDFhMQ==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-05-18T16:46:49Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-07-08T14:55:49Z"}, "message": "[Ada] Allow boolean expressions in aspect Relaxed_Initialization\n\ngcc/ada/\n\n\t* sem_ch13.adb (Analyze_Aspect_Relaxed_Initialization): Analyze\n\toptional boolean expressions.\n\t* sem_util.ads, sem_util.adb (Has_Relaxed_Initialization): Adapt\n\tquery; update comment.", "tree": {"sha": "4f9cfa6c1b6cb7748f762be7d3971ab5c0d6d047", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f9cfa6c1b6cb7748f762be7d3971ab5c0d6d047"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/530b30d9b3c2b60a5dfc8b3323b886ef5fed41a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/530b30d9b3c2b60a5dfc8b3323b886ef5fed41a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/530b30d9b3c2b60a5dfc8b3323b886ef5fed41a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/530b30d9b3c2b60a5dfc8b3323b886ef5fed41a1/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e3342889e86d70c670f833351f1eb9ad19eeb4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e3342889e86d70c670f833351f1eb9ad19eeb4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e3342889e86d70c670f833351f1eb9ad19eeb4e"}], "stats": {"total": 72, "additions": 63, "deletions": 9}, "files": [{"sha": "476503c2e78938ef09669f8f4445b902118ffe1d", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 40, "deletions": 4, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/530b30d9b3c2b60a5dfc8b3323b886ef5fed41a1/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/530b30d9b3c2b60a5dfc8b3323b886ef5fed41a1/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=530b30d9b3c2b60a5dfc8b3323b886ef5fed41a1", "patch": "@@ -2304,12 +2304,48 @@ package body Sem_Ch13 is\n \n                      if Nkind (Expr) = N_Aggregate then\n \n-                        --  Component associations are not allowed in the\n-                        --  aspect expression aggregate.\n+                        --  Component associations in the aggregate must be a\n+                        --  parameter name followed by a static boolean\n+                        --  expression.\n \n                         if Present (Component_Associations (Expr)) then\n-                           Error_Msg_N (\"illegal aspect % expression\", Expr);\n-                        else\n+                           declare\n+                              Assoc : Node_Id :=\n+                                First (Component_Associations (Expr));\n+                           begin\n+                              while Present (Assoc) loop\n+                                 if List_Length (Choices (Assoc)) = 1 then\n+                                    Analyze_Relaxed_Parameter\n+                                      (E, First (Choices (Assoc)), Seen);\n+\n+                                    if Inside_A_Generic then\n+                                       Preanalyze_And_Resolve\n+                                         (Expression (Assoc), Any_Boolean);\n+                                    else\n+                                       Analyze_And_Resolve\n+                                         (Expression (Assoc), Any_Boolean);\n+                                    end if;\n+\n+                                    if not Is_OK_Static_Expression\n+                                      (Expression (Assoc))\n+                                    then\n+                                       Error_Msg_N\n+                                         (\"expression of aspect %\" &\n+                                          \"must be static\", Aspect);\n+                                    end if;\n+\n+                                 else\n+                                    Error_Msg_N\n+                                      (\"illegal aspect % expression\", Expr);\n+                                 end if;\n+                                 Next (Assoc);\n+                              end loop;\n+                           end;\n+                        end if;\n+\n+                        --  Expressions of the aggregate are parameter names\n+\n+                        if Present (Expressions (Expr)) then\n                            declare\n                               Param : Node_Id := First (Expressions (Expr));\n "}, {"sha": "7751be7b9db312decf7695608405334d368bcd5c", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/530b30d9b3c2b60a5dfc8b3323b886ef5fed41a1/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/530b30d9b3c2b60a5dfc8b3323b886ef5fed41a1/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=530b30d9b3c2b60a5dfc8b3323b886ef5fed41a1", "patch": "@@ -12525,6 +12525,7 @@ package body Sem_Util is\n                Subp_Id     : Entity_Id;\n                Aspect_Expr : Node_Id;\n                Param_Expr  : Node_Id;\n+               Assoc       : Node_Id;\n \n             begin\n                if Is_Formal (E) then\n@@ -12538,13 +12539,30 @@ package body Sem_Util is\n                     Find_Value_Of_Aspect\n                       (Subp_Id, Aspect_Relaxed_Initialization);\n \n-                  --  Aspect expression is either an aggregate, e.g.:\n+                  --  Aspect expression is either an aggregate with an optional\n+                  --  Boolean expression (which defaults to True), e.g.:\n                   --\n                   --    function F (X : Integer) return Integer\n-                  --      with Relaxed_Initialization => (X, F'Result);\n+                  --      with Relaxed_Initialization => (X => True, F'Result);\n \n                   if Nkind (Aspect_Expr) = N_Aggregate then\n \n+                     if Present (Component_Associations (Aspect_Expr)) then\n+                        Assoc := First (Component_Associations (Aspect_Expr));\n+\n+                        while Present (Assoc) loop\n+                           if Denotes_Relaxed_Parameter\n+                             (First (Choices (Assoc)), E)\n+                           then\n+                              return\n+                                Is_True\n+                                  (Static_Boolean (Expression (Assoc)));\n+                           end if;\n+\n+                           Next (Assoc);\n+                        end loop;\n+                     end if;\n+\n                      Param_Expr := First (Expressions (Aspect_Expr));\n \n                      while Present (Param_Expr) loop"}, {"sha": "817af3baa61b62946920c3d2a20e3335a0fda36e", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/530b30d9b3c2b60a5dfc8b3323b886ef5fed41a1/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/530b30d9b3c2b60a5dfc8b3323b886ef5fed41a1/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=530b30d9b3c2b60a5dfc8b3323b886ef5fed41a1", "patch": "@@ -1383,9 +1383,9 @@ package Sem_Util is\n \n    function Has_Relaxed_Initialization (E : Entity_Id) return Boolean;\n    --  Returns True iff entity E is subject to the Relaxed_Initialization\n-   --  aspect. Entity E can be either type, variable, constant, function,\n-   --  or abstract state. For private types and deferred constants E should\n-   --  be the private view, because aspect can only be attached there.\n+   --  aspect. Entity E can be either type, variable, constant, subprogram,\n+   --  entry or an abstract state. For private types and deferred constants\n+   --  E should be the private view, because aspect can only be attached there.\n \n    function Has_Signed_Zeros (E : Entity_Id) return Boolean;\n    --  Determines if the floating-point type E supports signed zeros."}]}