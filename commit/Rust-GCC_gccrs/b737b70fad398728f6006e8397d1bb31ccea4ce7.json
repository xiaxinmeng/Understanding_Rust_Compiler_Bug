{"sha": "b737b70fad398728f6006e8397d1bb31ccea4ce7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjczN2I3MGZhZDM5ODcyOGY2MDA2ZTgzOTdkMWJiMzFjY2VhNGNlNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-12-07T18:20:25Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-12-07T18:20:25Z"}, "message": "builtins: Avoid ICE with __builtin_clear_padding on POINTERS_EXTEND_UNSIGNED targets [PR98147]\n\nThe function that calls targetm.emit_call_builtin___clear_cache\nasserts that each of the begin and end operands has either ptr_mode or\nPmode.\nOn most targets that is the same mode, but e.g. on aarch64 -mabi=ilp32\nor a few others it is different.  When a target has a clear cache\nnon-library handler, it will use create_address_operand which will do the\nconversion to the right mode automatically, but when emitting a library\ncall, we just say the operands are ptr_mode even when they can be Pmode\ntoo; in that case we need to convert explicitly.\n\n2020-12-07  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/98147\n\t* builtins.c (default_emit_call_builtin___clear_cache): Call\n\tconvert_memory_address to ptr_mode on both begin and end.\n\n\t* gcc.dg/pr98147.c: New test.", "tree": {"sha": "2a6658e3df17c11dd8d74d9c7403c9bc69678010", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a6658e3df17c11dd8d74d9c7403c9bc69678010"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b737b70fad398728f6006e8397d1bb31ccea4ce7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b737b70fad398728f6006e8397d1bb31ccea4ce7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b737b70fad398728f6006e8397d1bb31ccea4ce7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b737b70fad398728f6006e8397d1bb31ccea4ce7/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3a1b3e6fb24ccf6f45e7d6ce904d5549bba01d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3a1b3e6fb24ccf6f45e7d6ce904d5549bba01d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3a1b3e6fb24ccf6f45e7d6ce904d5549bba01d6"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "faa5030853bc146e1ad88c39e74e46fe2ba84c8b", "filename": "gcc/builtins.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b737b70fad398728f6006e8397d1bb31ccea4ce7/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b737b70fad398728f6006e8397d1bb31ccea4ce7/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=b737b70fad398728f6006e8397d1bb31ccea4ce7", "patch": "@@ -7790,8 +7790,8 @@ default_emit_call_builtin___clear_cache (rtx begin, rtx end)\n \n   emit_library_call (callee,\n \t\t     LCT_NORMAL, VOIDmode,\n-\t\t     begin, ptr_mode,\n-\t\t     end, ptr_mode);\n+\t\t     convert_memory_address (ptr_mode, begin), ptr_mode,\n+\t\t     convert_memory_address (ptr_mode, end), ptr_mode);\n }\n \n /* Emit a call to __builtin___clear_cache, unless the target specifies"}, {"sha": "3edc7985f10138058df3aca8aba98fd90d425e56", "filename": "gcc/testsuite/gcc.dg/pr98147.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b737b70fad398728f6006e8397d1bb31ccea4ce7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr98147.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b737b70fad398728f6006e8397d1bb31ccea4ce7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr98147.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr98147.c?ref=b737b70fad398728f6006e8397d1bb31ccea4ce7", "patch": "@@ -0,0 +1,10 @@\n+/* PR target/98147 */\n+\n+char buffer[32] = \"foo bar\";\n+\n+int\n+main ()\n+{\n+  __builtin___clear_cache (buffer, buffer + 32);\n+  return 0;\n+}"}]}