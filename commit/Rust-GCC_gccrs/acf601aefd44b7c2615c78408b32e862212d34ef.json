{"sha": "acf601aefd44b7c2615c78408b32e862212d34ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWNmNjAxYWVmZDQ0YjdjMjYxNWM3ODQwOGIzMmU4NjIyMTJkMzRlZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-02-07T16:42:24Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-02-07T16:42:24Z"}, "message": "re PR preprocessor/56824 (pragma GCC diagnostic push/pop fail with GCC diagnostic ignored \"-Waggregate-return\")\n\n\tPR preprocessor/56824\n\t* line-map.c (get_combined_adhoc_loc, linemap_get_expansion_line,\n\tlinemap_get_expansion_filename, linemap_location_in_system_header_p,\n\tlinemap_location_from_macro_expansion_p,\n\tlinemap_macro_loc_to_spelling_point, linemap_macro_loc_to_def_point,\n\tlinemap_macro_loc_to_exp_point, linemap_expand_location): Fix\n\tformatting.\n\t(linemap_compare_locations): Look through adhoc locations for both\n\tl0 and l1.\n\n\t* gcc.dg/pr56824.c: New test.\n\nFrom-SVN: r207606", "tree": {"sha": "0bdd845c1adb622d79a45e91abf5a44001f7be1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0bdd845c1adb622d79a45e91abf5a44001f7be1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/acf601aefd44b7c2615c78408b32e862212d34ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acf601aefd44b7c2615c78408b32e862212d34ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acf601aefd44b7c2615c78408b32e862212d34ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acf601aefd44b7c2615c78408b32e862212d34ef/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "177bc204a2f3a13c9fad9c8f88eb3449c8752552", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/177bc204a2f3a13c9fad9c8f88eb3449c8752552", "html_url": "https://github.com/Rust-GCC/gccrs/commit/177bc204a2f3a13c9fad9c8f88eb3449c8752552"}], "stats": {"total": 80, "additions": 60, "deletions": 20}, "files": [{"sha": "a50fa4bc7ba6cea1cc78a19a0ed28dfabb022ab1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acf601aefd44b7c2615c78408b32e862212d34ef/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acf601aefd44b7c2615c78408b32e862212d34ef/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=acf601aefd44b7c2615c78408b32e862212d34ef", "patch": "@@ -1,3 +1,8 @@\n+2014-02-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR preprocessor/56824\n+\t* gcc.dg/pr56824.c: New test.\n+\n 2014-02-07  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n \n \t* gcc.dg/gcc-have-sync-compare-and-swap.c: Align the 16 byte"}, {"sha": "d682d0a8102764470a114c79b115172deb30ad10", "filename": "gcc/testsuite/gcc.dg/pr56824.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acf601aefd44b7c2615c78408b32e862212d34ef/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56824.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acf601aefd44b7c2615c78408b32e862212d34ef/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56824.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56824.c?ref=acf601aefd44b7c2615c78408b32e862212d34ef", "patch": "@@ -0,0 +1,18 @@\n+/* PR preprocessor/56824 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Waggregate-return\" } */\n+\n+struct S { int i; };\n+struct S foo (void);\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Waggregate-return\"\n+\n+int\n+main ()\n+{\n+  foo ();\n+  return 0;\n+}\n+\n+#pragma GCC diagnostic pop"}, {"sha": "b7f2011190e6698a439faabcf0c1e4e0c2c4c7b5", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acf601aefd44b7c2615c78408b32e862212d34ef/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acf601aefd44b7c2615c78408b32e862212d34ef/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=acf601aefd44b7c2615c78408b32e862212d34ef", "patch": "@@ -1,3 +1,15 @@\n+2014-02-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR preprocessor/56824\n+\t* line-map.c (get_combined_adhoc_loc, linemap_get_expansion_line,\n+\tlinemap_get_expansion_filename, linemap_location_in_system_header_p,\n+\tlinemap_location_from_macro_expansion_p,\n+\tlinemap_macro_loc_to_spelling_point, linemap_macro_loc_to_def_point,\n+\tlinemap_macro_loc_to_exp_point, linemap_expand_location): Fix\n+\tformatting.\n+\t(linemap_compare_locations): Look through adhoc locations for both\n+\tl0 and l1.\n+\n 2014-01-23  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR PR preprocessor/58580"}, {"sha": "f9a7658cbdbe4ffcc70773911a2efa9d6d41ce85", "filename": "libcpp/line-map.c", "status": "modified", "additions": 25, "deletions": 20, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acf601aefd44b7c2615c78408b32e862212d34ef/libcpp%2Fline-map.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acf601aefd44b7c2615c78408b32e862212d34ef/libcpp%2Fline-map.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fline-map.c?ref=acf601aefd44b7c2615c78408b32e862212d34ef", "patch": "@@ -106,8 +106,8 @@ get_combined_adhoc_loc (struct line_maps *set,\n   linemap_assert (data);\n \n   if (IS_ADHOC_LOC (locus))\n-    locus =\n-\tset->location_adhoc_data_map.data[locus & MAX_SOURCE_LOCATION].locus;\n+    locus\n+      = set->location_adhoc_data_map.data[locus & MAX_SOURCE_LOCATION].locus;\n   if (locus == 0 && data == NULL)\n     return 0;\n   lb.locus = locus;\n@@ -141,8 +141,8 @@ get_combined_adhoc_loc (struct line_maps *set,\n \t}\n       *slot = set->location_adhoc_data_map.data\n \t      + set->location_adhoc_data_map.curr_loc;\n-      set->location_adhoc_data_map.data[\n-\t  set->location_adhoc_data_map.curr_loc++] = lb;\n+      set->location_adhoc_data_map.data[set->location_adhoc_data_map.curr_loc++]\n+\t= lb;\n     }\n   return ((*slot) - set->location_adhoc_data_map.data) | 0x80000000;\n }\n@@ -833,8 +833,8 @@ linemap_get_expansion_line (struct line_maps *set,\n   const struct line_map *map = NULL;\n \n   if (IS_ADHOC_LOC (location))\n-    location = set->location_adhoc_data_map.data[\n-\tlocation & MAX_SOURCE_LOCATION].locus;\n+    location = set->location_adhoc_data_map.data[location\n+\t\t\t\t\t\t & MAX_SOURCE_LOCATION].locus;\n \n   if (location < RESERVED_LOCATION_COUNT)\n     return 0;\n@@ -861,8 +861,8 @@ linemap_get_expansion_filename (struct line_maps *set,\n   const struct line_map *map = NULL;\n \n   if (IS_ADHOC_LOC (location))\n-    location = set->location_adhoc_data_map.data[\n-\tlocation & MAX_SOURCE_LOCATION].locus;\n+    location = set->location_adhoc_data_map.data[location\n+\t\t\t\t\t\t & MAX_SOURCE_LOCATION].locus;\n \n   if (location < RESERVED_LOCATION_COUNT)\n     return NULL;\n@@ -899,8 +899,8 @@ linemap_location_in_system_header_p (struct line_maps *set,\n   const struct line_map *map = NULL;\n \n   if (IS_ADHOC_LOC (location))\n-    location = set->location_adhoc_data_map.data[\n-\tlocation & MAX_SOURCE_LOCATION].locus;\n+    location = set->location_adhoc_data_map.data[location\n+\t\t\t\t\t\t & MAX_SOURCE_LOCATION].locus;\n \n   if (location < RESERVED_LOCATION_COUNT)\n     return false;\n@@ -942,8 +942,8 @@ linemap_location_from_macro_expansion_p (struct line_maps *set,\n \t\t\t\t\t source_location location)\n {\n   if (IS_ADHOC_LOC (location))\n-    location = set->location_adhoc_data_map.data[\n-\tlocation & MAX_SOURCE_LOCATION].locus;\n+    location = set->location_adhoc_data_map.data[location\n+\t\t\t\t\t\t & MAX_SOURCE_LOCATION].locus;\n \n   linemap_assert (location <= MAX_SOURCE_LOCATION\n \t\t  && (set->highest_location\n@@ -1024,6 +1024,11 @@ linemap_compare_locations (struct line_maps *set,\n   bool pre_virtual_p, post_virtual_p;\n   source_location l0 = pre, l1 = post;\n \n+  if (IS_ADHOC_LOC (l0))\n+    l0 = set->location_adhoc_data_map.data[l0 & MAX_SOURCE_LOCATION].locus;\n+  if (IS_ADHOC_LOC (l1))\n+    l1 = set->location_adhoc_data_map.data[l1 & MAX_SOURCE_LOCATION].locus;\n+\n   if (l0 == l1)\n     return 0;\n \n@@ -1086,8 +1091,8 @@ linemap_macro_loc_to_spelling_point (struct line_maps *set,\n   struct line_map *map;\n \n   if (IS_ADHOC_LOC (location))\n-    location = set->location_adhoc_data_map.data[\n-\tlocation & MAX_SOURCE_LOCATION].locus;\n+    location = set->location_adhoc_data_map.data[location\n+\t\t\t\t\t\t & MAX_SOURCE_LOCATION].locus;\n \n   linemap_assert (set && location >= RESERVED_LOCATION_COUNT);\n \n@@ -1124,8 +1129,8 @@ linemap_macro_loc_to_def_point (struct line_maps *set,\n   struct line_map *map;\n \n   if (IS_ADHOC_LOC (location))\n-    location = set->location_adhoc_data_map.data[\n-\tlocation & MAX_SOURCE_LOCATION].locus;\n+    location = set->location_adhoc_data_map.data[location\n+\t\t\t\t\t\t & MAX_SOURCE_LOCATION].locus;\n \n   linemap_assert (set && location >= RESERVED_LOCATION_COUNT);\n \n@@ -1166,8 +1171,8 @@ linemap_macro_loc_to_exp_point (struct line_maps *set,\n   struct line_map *map;\n \n   if (IS_ADHOC_LOC (location))\n-    location = set->location_adhoc_data_map.data[\n-\tlocation & MAX_SOURCE_LOCATION].locus;\n+    location = set->location_adhoc_data_map.data[location\n+\t\t\t\t\t\t & MAX_SOURCE_LOCATION].locus;\n \n   linemap_assert (set && location >= RESERVED_LOCATION_COUNT);\n \n@@ -1374,8 +1379,8 @@ linemap_expand_location (struct line_maps *set,\n   if (IS_ADHOC_LOC (loc))\n     {\n       loc = set->location_adhoc_data_map.data[loc & MAX_SOURCE_LOCATION].locus;\n-      xloc.data = set->location_adhoc_data_map.data[\n-\t  loc & MAX_SOURCE_LOCATION].data;\n+      xloc.data\n+\t= set->location_adhoc_data_map.data[loc & MAX_SOURCE_LOCATION].data;\n     }\n \n   if (loc < RESERVED_LOCATION_COUNT)"}]}