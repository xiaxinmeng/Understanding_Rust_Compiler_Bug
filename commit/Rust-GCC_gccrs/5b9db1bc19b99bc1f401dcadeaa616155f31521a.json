{"sha": "5b9db1bc19b99bc1f401dcadeaa616155f31521a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWI5ZGIxYmMxOWI5OWJjMWY0MDFkY2FkZWFhNjE2MTU1ZjMxNTIxYQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2013-01-21T17:16:57Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2013-01-21T17:16:57Z"}, "message": "re PR middle-end/56022 (ICE (segfault) at convert_memory_address_addr_space (explow.c:334))\n\n2013-01-21  Martin Jambor  <mjambor@suse.cz>\n\n\tPR middle-end/56022\n\t* function.c (allocate_struct_function): Call\n\tinvoke_set_current_function_hook earlier.\n\ntestsuite/\n\t* gcc.target/i386/pr56022.c: New test.\n\nFrom-SVN: r195341", "tree": {"sha": "cc5bb08d0366e222ced364bd242ff1fda185c1b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc5bb08d0366e222ced364bd242ff1fda185c1b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b9db1bc19b99bc1f401dcadeaa616155f31521a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b9db1bc19b99bc1f401dcadeaa616155f31521a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b9db1bc19b99bc1f401dcadeaa616155f31521a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b9db1bc19b99bc1f401dcadeaa616155f31521a/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f6c23342da3e640e0d4fb36c2e74eb9c2f418894", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6c23342da3e640e0d4fb36c2e74eb9c2f418894", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6c23342da3e640e0d4fb36c2e74eb9c2f418894"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "20f2073762c9965e36d994548718de9427491237", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b9db1bc19b99bc1f401dcadeaa616155f31521a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b9db1bc19b99bc1f401dcadeaa616155f31521a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5b9db1bc19b99bc1f401dcadeaa616155f31521a", "patch": "@@ -1,3 +1,9 @@\n+2013-01-21  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR middle-end/56022\n+\t* function.c (allocate_struct_function): Call\n+\tinvoke_set_current_function_hook earlier.\n+\n 2013-01-21  Jakub Jelinek  <jakub@redhat.com>\n \n \t* reload1.c (init_reload): Only initialize reload_obstack"}, {"sha": "4ce2259ef719ab118bf73d8fea177f1f75d853ef", "filename": "gcc/function.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b9db1bc19b99bc1f401dcadeaa616155f31521a/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b9db1bc19b99bc1f401dcadeaa616155f31521a/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=5b9db1bc19b99bc1f401dcadeaa616155f31521a", "patch": "@@ -4479,7 +4479,6 @@ get_last_funcdef_no (void)\n void\n allocate_struct_function (tree fndecl, bool abstract_p)\n {\n-  tree result;\n   tree fntype = fndecl ? TREE_TYPE (fndecl) : NULL_TREE;\n \n   cfun = ggc_alloc_cleared_function ();\n@@ -4498,8 +4497,13 @@ allocate_struct_function (tree fndecl, bool abstract_p)\n       DECL_STRUCT_FUNCTION (fndecl) = cfun;\n       cfun->decl = fndecl;\n       current_function_funcdef_no = get_next_funcdef_no ();\n+    }\n+\n+  invoke_set_current_function_hook (fndecl);\n \n-      result = DECL_RESULT (fndecl);\n+  if (fndecl != NULL_TREE)\n+    {\n+      tree result = DECL_RESULT (fndecl);\n       if (!abstract_p && aggregate_value_p (result, fndecl))\n \t{\n #ifdef PCC_STATIC_STRUCT_RETURN\n@@ -4518,8 +4522,6 @@ allocate_struct_function (tree fndecl, bool abstract_p)\n          but is this worth the hassle?  */\n       cfun->can_throw_non_call_exceptions = flag_non_call_exceptions;\n     }\n-\n-  invoke_set_current_function_hook (fndecl);\n }\n \n /* This is like allocate_struct_function, but pushes a new cfun for FNDECL"}, {"sha": "0b3d2b717680d94509b0ad0e749eb35c62e75212", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b9db1bc19b99bc1f401dcadeaa616155f31521a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b9db1bc19b99bc1f401dcadeaa616155f31521a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5b9db1bc19b99bc1f401dcadeaa616155f31521a", "patch": "@@ -1,3 +1,8 @@\n+2013-01-21  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR middle-end/56022\n+\t* gcc.target/i386/pr56022.c: New test.\n+\n 2013-01-21  Jason Merrill  <jason@redhat.com>\n \n \t* lib/target-supports.exp (check_effective_target_alias): New."}, {"sha": "db43162fbbd1f8d6732ddf5045d9906ebd11e3a9", "filename": "gcc/testsuite/gcc.target/i386/pr56022.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b9db1bc19b99bc1f401dcadeaa616155f31521a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr56022.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b9db1bc19b99bc1f401dcadeaa616155f31521a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr56022.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr56022.c?ref=5b9db1bc19b99bc1f401dcadeaa616155f31521a", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx\" } */\n+\n+typedef float __m256 __attribute__ ((__vector_size__ (32), __may_alias__));\n+__attribute__((target(\"no-avx\"))) static int currentImplementationSupported()\n+{}\n+__m256 foo0(__m256 a) {}"}]}