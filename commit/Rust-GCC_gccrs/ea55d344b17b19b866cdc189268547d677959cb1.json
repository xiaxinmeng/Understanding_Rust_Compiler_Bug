{"sha": "ea55d344b17b19b866cdc189268547d677959cb1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE1NWQzNDRiMTdiMTliODY2Y2RjMTg5MjY4NTQ3ZDY3Nzk1OWNiMQ==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2019-10-31T12:38:17Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-02T08:58:10Z"}, "message": "[Ada] Accept objects from nested packages in Initializes contract\n\n2020-06-02  Piotr Trojanek  <trojanek@adacore.com>\n\ngcc/ada/\n\n\t* sem_prag.adb (Collect_States_And_Objects): Call itself on\n\tdeclaration of nested packages; append abstract states\n\tone-by-one, so that in recursive call we do not overwrite the\n\tones that have been already collected.", "tree": {"sha": "998ae7a931f6a7ad7d7ba4a73462c2e3a1270bb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/998ae7a931f6a7ad7d7ba4a73462c2e3a1270bb0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea55d344b17b19b866cdc189268547d677959cb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea55d344b17b19b866cdc189268547d677959cb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea55d344b17b19b866cdc189268547d677959cb1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea55d344b17b19b866cdc189268547d677959cb1/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2f285434dc5dff1a396cc3616959c7a2b80a750", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2f285434dc5dff1a396cc3616959c7a2b80a750", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2f285434dc5dff1a396cc3616959c7a2b80a750"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "9dff1ce05b07961c1e5b900b97dcc0bbf47ba952", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea55d344b17b19b866cdc189268547d677959cb1/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea55d344b17b19b866cdc189268547d677959cb1/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=ea55d344b17b19b866cdc189268547d677959cb1", "patch": "@@ -2897,7 +2897,7 @@ package body Sem_Prag is\n       --  Verify the legality of a single initialization item followed by a\n       --  list of input items.\n \n-      procedure Collect_States_And_Objects;\n+      procedure Collect_States_And_Objects (Pack_Decl : Node_Id);\n       --  Inspect the visible declarations of the related package and gather\n       --  the entities of all abstract states and objects in States_And_Objs.\n \n@@ -3166,15 +3166,21 @@ package body Sem_Prag is\n       -- Collect_States_And_Objects --\n       --------------------------------\n \n-      procedure Collect_States_And_Objects is\n-         Pack_Spec : constant Node_Id := Specification (Pack_Decl);\n-         Decl      : Node_Id;\n+      procedure Collect_States_And_Objects (Pack_Decl : Node_Id) is\n+         Pack_Spec  : constant Node_Id := Specification (Pack_Decl);\n+         Pack_Id    : constant Entity_Id := Defining_Entity (Pack_Decl);\n+         Decl       : Node_Id;\n+         State_Elmt : Elmt_Id;\n \n       begin\n          --  Collect the abstract states defined in the package (if any)\n \n-         if Present (Abstract_States (Pack_Id)) then\n-            States_And_Objs := New_Copy_Elist (Abstract_States (Pack_Id));\n+         if Has_Non_Null_Abstract_State (Pack_Id) then\n+            State_Elmt := First_Elmt (Abstract_States (Pack_Id));\n+            while Present (State_Elmt) loop\n+               Append_New_Elmt (Node (State_Elmt), States_And_Objs);\n+               Next_Elmt (State_Elmt);\n+            end loop;\n          end if;\n \n          --  Collect all objects that appear in the visible declarations of the\n@@ -3189,6 +3195,9 @@ package body Sem_Prag is\n                then\n                   Append_New_Elmt (Defining_Entity (Decl), States_And_Objs);\n \n+               elsif Nkind (Decl) = N_Package_Declaration then\n+                  Collect_States_And_Objects (Decl);\n+\n                elsif Is_Single_Concurrent_Type_Declaration (Decl) then\n                   Append_New_Elmt\n                     (Anonymous_Object (Defining_Entity (Decl)),\n@@ -3228,7 +3237,7 @@ package body Sem_Prag is\n \n       --  Initialize the various lists used during analysis\n \n-      Collect_States_And_Objects;\n+      Collect_States_And_Objects (Pack_Decl);\n \n       if Present (Expressions (Inits)) then\n          Init := First (Expressions (Inits));"}]}