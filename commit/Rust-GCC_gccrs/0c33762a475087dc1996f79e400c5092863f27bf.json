{"sha": "0c33762a475087dc1996f79e400c5092863f27bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGMzMzc2MmE0NzUwODdkYzE5OTZmNzllNDAwYzUwOTI4NjNmMjdiZg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2006-04-01T00:21:46Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2006-04-01T00:21:46Z"}, "message": "dwarf2.h (DW64_CIE_ID): Define.\n\n\t* dwarf2.h (DW64_CIE_ID): Define.\n\t* dwarf2out.c (DWARF_CIE_ID): Define.\n\t(output_call_frame_info): Output 0xffffffff before standard 8-byte\n\tlength header.  Use DWARF_CIE_ID.\n\t(value_format): Use DW_FORM_data4 or DW_FORM_data8 for\n\tdw_val_class_loc_list depending on DWARF_OFFSET_SIZE.\n\nFrom-SVN: r112601", "tree": {"sha": "add6ca4e576419f3085163151567cac5bd7be27c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/add6ca4e576419f3085163151567cac5bd7be27c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c33762a475087dc1996f79e400c5092863f27bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c33762a475087dc1996f79e400c5092863f27bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c33762a475087dc1996f79e400c5092863f27bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c33762a475087dc1996f79e400c5092863f27bf/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "771cdc9426f20e51c26c136e42ccb9036c3b1f37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/771cdc9426f20e51c26c136e42ccb9036c3b1f37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/771cdc9426f20e51c26c136e42ccb9036c3b1f37"}], "stats": {"total": 31, "additions": 26, "deletions": 5}, "files": [{"sha": "2266b33b3b12aa4d34ec30615a0c23bc965cb1e1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c33762a475087dc1996f79e400c5092863f27bf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c33762a475087dc1996f79e400c5092863f27bf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0c33762a475087dc1996f79e400c5092863f27bf", "patch": "@@ -1,3 +1,12 @@\n+2006-04-01  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* dwarf2.h (DW64_CIE_ID): Define.\n+\t* dwarf2out.c (DWARF_CIE_ID): Define.\n+\t(output_call_frame_info): Output 0xffffffff before standard 8-byte\n+\tlength header.  Use DWARF_CIE_ID.\n+\t(value_format): Use DW_FORM_data4 or DW_FORM_data8 for\n+\tdw_val_class_loc_list depending on DWARF_OFFSET_SIZE.\n+\n 2006-03-31  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \t* config/sh/linux-atomic.asm: New file."}, {"sha": "31188372787718358c7422b9ab7a67aab0ccccef", "filename": "gcc/dwarf2.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c33762a475087dc1996f79e400c5092863f27bf/gcc%2Fdwarf2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c33762a475087dc1996f79e400c5092863f27bf/gcc%2Fdwarf2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2.h?ref=0c33762a475087dc1996f79e400c5092863f27bf", "patch": "@@ -757,6 +757,7 @@ enum dwarf_call_frame_info\n   };\n \n #define DW_CIE_ID\t  0xffffffff\n+#define DW64_CIE_ID\t  0xffffffffffffffffULL\n #define DW_CIE_VERSION\t  1\n \n #define DW_CFA_extended   0"}, {"sha": "e400eb3d048e9c31f2c07e3c966b3bec46713551", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c33762a475087dc1996f79e400c5092863f27bf/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c33762a475087dc1996f79e400c5092863f27bf/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=0c33762a475087dc1996f79e400c5092863f27bf", "patch": "@@ -288,6 +288,14 @@ dw_fde_node;\n #endif\n #endif\n \n+/* CIE identifier.  */\n+#if HOST_BITS_PER_WIDE_INT >= 64\n+#define DWARF_CIE_ID \\\n+  (unsigned HOST_WIDE_INT) (DWARF_OFFSET_SIZE == 4 ? DW_CIE_ID : DW64_CIE_ID)\n+#else\n+#define DWARF_CIE_ID DW_CIE_ID\n+#endif\n+\n /* A pointer to the base of a table that contains frame description\n    information for each routine.  */\n static GTY((length (\"fde_table_allocated\"))) dw_fde_ref fde_table;\n@@ -2218,14 +2226,17 @@ output_call_frame_info (int for_eh)\n   /* Output the CIE.  */\n   ASM_GENERATE_INTERNAL_LABEL (l1, CIE_AFTER_SIZE_LABEL, for_eh);\n   ASM_GENERATE_INTERNAL_LABEL (l2, CIE_END_LABEL, for_eh);\n+  if (DWARF_INITIAL_LENGTH_SIZE - DWARF_OFFSET_SIZE == 4 && !for_eh)\n+    dw2_asm_output_data (4, 0xffffffff,\n+      \"Initial length escape value indicating 64-bit DWARF extension\");\n   dw2_asm_output_delta (for_eh ? 4 : DWARF_OFFSET_SIZE, l2, l1,\n \t\t\t\"Length of Common Information Entry\");\n   ASM_OUTPUT_LABEL (asm_out_file, l1);\n \n   /* Now that the CIE pointer is PC-relative for EH,\n      use 0 to identify the CIE.  */\n   dw2_asm_output_data ((for_eh ? 4 : DWARF_OFFSET_SIZE),\n-\t\t       (for_eh ? 0 : DW_CIE_ID),\n+\t\t       (for_eh ? 0 : DWARF_CIE_ID),\n \t\t       \"CIE Identifier Tag\");\n \n   dw2_asm_output_data (1, DW_CIE_VERSION, \"CIE Version\");\n@@ -2350,6 +2361,9 @@ output_call_frame_info (int for_eh)\n       targetm.asm_out.internal_label (asm_out_file, FDE_LABEL, for_eh + i * 2);\n       ASM_GENERATE_INTERNAL_LABEL (l1, FDE_AFTER_SIZE_LABEL, for_eh + i * 2);\n       ASM_GENERATE_INTERNAL_LABEL (l2, FDE_END_LABEL, for_eh + i * 2);\n+      if (DWARF_INITIAL_LENGTH_SIZE - DWARF_OFFSET_SIZE == 4 && !for_eh)\n+\tdw2_asm_output_data (4, 0xffffffff,\n+\t\t\t     \"Initial length escape value indicating 64-bit DWARF extension\");\n       dw2_asm_output_delta (for_eh ? 4 : DWARF_OFFSET_SIZE, l2, l1,\n \t\t\t    \"FDE Length\");\n       ASM_OUTPUT_LABEL (asm_out_file, l1);\n@@ -6775,6 +6789,7 @@ value_format (dw_attr_ref a)\n       return DW_FORM_addr;\n     case dw_val_class_range_list:\n     case dw_val_class_offset:\n+    case dw_val_class_loc_list:\n       switch (DWARF_OFFSET_SIZE)\n \t{\n \tcase 4:\n@@ -6784,10 +6799,6 @@ value_format (dw_attr_ref a)\n \tdefault:\n \t  gcc_unreachable ();\n \t}\n-    case dw_val_class_loc_list:\n-      /* FIXME: Could be DW_FORM_data8, with a > 32 bit size\n-\t .debug_loc section */\n-      return DW_FORM_data4;\n     case dw_val_class_loc:\n       switch (constant_size (size_of_locs (AT_loc (a))))\n \t{"}]}