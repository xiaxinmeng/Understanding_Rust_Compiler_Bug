{"sha": "5e377d21f1f345d8b157b9bc306e02bb9bd45e01", "node_id": "C_kwDOANBUbNoAKDVlMzc3ZDIxZjFmMzQ1ZDhiMTU3YjliYzMwNmUwMmJiOWJkNDVlMDE", "commit": {"author": {"name": "Haochen Jiang", "email": "haochen.jiang@intel.com", "date": "2022-06-16T07:15:53Z"}, "committer": {"name": "Hongyu Wang", "email": "hongyu.wang@intel.com", "date": "2022-06-22T01:31:26Z"}, "message": "i386: Add syscall to enable AMX for latest kernels\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/i386/amx-check.h (request_perm_xtile_data):\n\tNew function to check if AMX is usable and enable AMX.\n\t(main): Run test if AMX is usable.", "tree": {"sha": "e7f6c90d7f250fa0919bc1335e7adcf460670aa6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7f6c90d7f250fa0919bc1335e7adcf460670aa6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e377d21f1f345d8b157b9bc306e02bb9bd45e01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e377d21f1f345d8b157b9bc306e02bb9bd45e01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e377d21f1f345d8b157b9bc306e02bb9bd45e01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e377d21f1f345d8b157b9bc306e02bb9bd45e01/comments", "author": {"login": "jianghc724", "id": 10798680, "node_id": "MDQ6VXNlcjEwNzk4Njgw", "avatar_url": "https://avatars.githubusercontent.com/u/10798680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jianghc724", "html_url": "https://github.com/jianghc724", "followers_url": "https://api.github.com/users/jianghc724/followers", "following_url": "https://api.github.com/users/jianghc724/following{/other_user}", "gists_url": "https://api.github.com/users/jianghc724/gists{/gist_id}", "starred_url": "https://api.github.com/users/jianghc724/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jianghc724/subscriptions", "organizations_url": "https://api.github.com/users/jianghc724/orgs", "repos_url": "https://api.github.com/users/jianghc724/repos", "events_url": "https://api.github.com/users/jianghc724/events{/privacy}", "received_events_url": "https://api.github.com/users/jianghc724/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wwwhhhyyy", "id": 5366075, "node_id": "MDQ6VXNlcjUzNjYwNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/5366075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wwwhhhyyy", "html_url": "https://github.com/wwwhhhyyy", "followers_url": "https://api.github.com/users/wwwhhhyyy/followers", "following_url": "https://api.github.com/users/wwwhhhyyy/following{/other_user}", "gists_url": "https://api.github.com/users/wwwhhhyyy/gists{/gist_id}", "starred_url": "https://api.github.com/users/wwwhhhyyy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wwwhhhyyy/subscriptions", "organizations_url": "https://api.github.com/users/wwwhhhyyy/orgs", "repos_url": "https://api.github.com/users/wwwhhhyyy/repos", "events_url": "https://api.github.com/users/wwwhhhyyy/events{/privacy}", "received_events_url": "https://api.github.com/users/wwwhhhyyy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec532b47f1823e71f822c0da781c531ffff67a52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec532b47f1823e71f822c0da781c531ffff67a52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec532b47f1823e71f822c0da781c531ffff67a52"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "6fff5ff4631cf43e9836199c2c403345a4b2f844", "filename": "gcc/testsuite/gcc.target/i386/amx-check.h", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e377d21f1f345d8b157b9bc306e02bb9bd45e01/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Famx-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e377d21f1f345d8b157b9bc306e02bb9bd45e01/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Famx-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Famx-check.h?ref=5e377d21f1f345d8b157b9bc306e02bb9bd45e01", "patch": "@@ -4,11 +4,24 @@\n #include <stdlib.h>\n #include <string.h>\n #include <stdint.h>\n+#include <unistd.h>\n+#ifdef __linux__\n+#include <sys/syscall.h>\n+#endif\n #ifdef DEBUG\n #include <stdio.h>\n #endif\n #include \"cpuid.h\"\n \n+#define XFEATURE_XTILECFG\t17\n+#define XFEATURE_XTILEDATA\t18\n+#define XFEATURE_MASK_XTILECFG\t(1 << XFEATURE_XTILECFG)\n+#define XFEATURE_MASK_XTILEDATA\t(1 << XFEATURE_XTILEDATA)\n+#define XFEATURE_MASK_XTILE\t(XFEATURE_MASK_XTILECFG | XFEATURE_MASK_XTILEDATA)\n+\n+#define ARCH_GET_XCOMP_PERM\t0x1022\n+#define ARCH_REQ_XCOMP_PERM\t0x1023\n+\n /* TODO: The tmm emulation is temporary for current\n    AMX implementation with no tmm regclass, should\n    be changed in the future. */\n@@ -44,6 +57,20 @@ typedef struct __tile\n /* Stride (colum width in byte) used for tileload/store */\n #define _STRIDE 64\n \n+#ifdef __linux__\n+/* We need syscall to use amx functions */\n+int request_perm_xtile_data()\n+{\n+  unsigned long bitmask;\n+\n+  if (syscall (SYS_arch_prctl, ARCH_REQ_XCOMP_PERM, XFEATURE_XTILEDATA) ||\n+      syscall (SYS_arch_prctl, ARCH_GET_XCOMP_PERM, &bitmask))\n+    return 0;\n+\n+  return (bitmask & XFEATURE_MASK_XTILE) != 0;\n+}\n+#endif\n+\n /* Initialize tile config by setting all tmm size to 16x64 */\n void init_tile_config (__tilecfg_u *dst)\n {\n@@ -185,6 +212,9 @@ main ()\n #endif\n #ifdef AMX_BF16\n       && __builtin_cpu_supports (\"amx-bf16\")\n+#endif\n+#ifdef __linux__\n+      && request_perm_xtile_data ()\n #endif\n       )\n     {"}]}