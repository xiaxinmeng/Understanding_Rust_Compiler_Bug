{"sha": "cf895a0159fe915e00213fa700fbe8a1bc838b7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Y4OTVhMDE1OWZlOTE1ZTAwMjEzZmE3MDBmYmU4YTFiYzgzOGI3YQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-10-13T16:17:09Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-10-13T16:17:09Z"}, "message": "[multiple changes]\n\n2013-10-13  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch3.adb: in Ada 2012 access_to_function types can have\n\tin-out parameters.\n\t(Derived_Type_Declaration): SPARK restriction\n\tmust be flagged on the original node, since it may have been\n\twritten as a subtype declaration.\n\t(Analyze_Subtype_Declaration): Do not enter name of\n\tentity in declaration if it is the current entity, because it may\n\thave been inserted in a previous analysis and it appears in the\n\telse_part of an if-statement that is rewritten during expansion.\n\n2013-10-13  Yannick Moy  <moy@adacore.com>\n\n\t* exp_spark.adb (Expand_SPARK_N_Attribute_Reference): Remove procedure.\n\t(Expand_SPARK): Remove call to Expand_SPARK_N_Attribute_Reference and\n\tExpand_SPARK_N_Simple_Return_Statement.\n\t(Expand_SPARK_N_Simple_Return_Statement,\n \tExpand_SPARK_Simple_Function_Return): Remove procedures.\n\nFrom-SVN: r203502", "tree": {"sha": "3c6492702c646f206d699248b305ad3f07f56a18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c6492702c646f206d699248b305ad3f07f56a18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf895a0159fe915e00213fa700fbe8a1bc838b7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf895a0159fe915e00213fa700fbe8a1bc838b7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf895a0159fe915e00213fa700fbe8a1bc838b7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf895a0159fe915e00213fa700fbe8a1bc838b7a/comments", "author": null, "committer": null, "parents": [{"sha": "409274f15563bfb31e55ca2a731b6d7bd3ea2f77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/409274f15563bfb31e55ca2a731b6d7bd3ea2f77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/409274f15563bfb31e55ca2a731b6d7bd3ea2f77"}], "stats": {"total": 145, "additions": 34, "deletions": 111}, "files": [{"sha": "b8483d48e00c19e7dc6436259d5854bf0757d0ac", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf895a0159fe915e00213fa700fbe8a1bc838b7a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf895a0159fe915e00213fa700fbe8a1bc838b7a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=cf895a0159fe915e00213fa700fbe8a1bc838b7a", "patch": "@@ -1,3 +1,23 @@\n+2013-10-13  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb: in Ada 2012 access_to_function types can have\n+\tin-out parameters.\n+\t(Derived_Type_Declaration): SPARK restriction\n+\tmust be flagged on the original node, since it may have been\n+\twritten as a subtype declaration.\n+\t(Analyze_Subtype_Declaration): Do not enter name of\n+\tentity in declaration if it is the current entity, because it may\n+\thave been inserted in a previous analysis and it appears in the\n+\telse_part of an if-statement that is rewritten during expansion.\n+\n+2013-10-13  Yannick Moy  <moy@adacore.com>\n+\n+\t* exp_spark.adb (Expand_SPARK_N_Attribute_Reference): Remove procedure.\n+\t(Expand_SPARK): Remove call to Expand_SPARK_N_Attribute_Reference and\n+\tExpand_SPARK_N_Simple_Return_Statement.\n+\t(Expand_SPARK_N_Simple_Return_Statement,\n+ \tExpand_SPARK_Simple_Function_Return): Remove procedures.\n+\n 2013-10-13  Vincent Celier  <celier@adacore.com>\n \n \t* gnat_ugn.texi: Minor editing."}, {"sha": "bd8932ecb6039bd3c78b90715d2e189d86327e67", "filename": "gcc/ada/exp_spark.adb", "status": "modified", "additions": 0, "deletions": 110, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf895a0159fe915e00213fa700fbe8a1bc838b7a/gcc%2Fada%2Fexp_spark.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf895a0159fe915e00213fa700fbe8a1bc838b7a/gcc%2Fada%2Fexp_spark.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_spark.adb?ref=cf895a0159fe915e00213fa700fbe8a1bc838b7a", "patch": "@@ -25,19 +25,15 @@\n \n with Atree;    use Atree;\n with Einfo;    use Einfo;\n-with Exp_Attr; use Exp_Attr;\n with Exp_Ch4;  use Exp_Ch4;\n with Exp_Ch6;  use Exp_Ch6;\n with Exp_Dbug; use Exp_Dbug;\n with Exp_Util; use Exp_Util;\n-with Rtsfind;  use Rtsfind;\n with Sem_Aux;  use Sem_Aux;\n with Sem_Res;  use Sem_Res;\n with Sem_Util; use Sem_Util;\n with Sinfo;    use Sinfo;\n-with Snames;   use Snames;\n with Stand;    use Stand;\n-with Tbuild;   use Tbuild;\n \n package body Exp_SPARK is\n \n@@ -51,18 +47,9 @@ package body Exp_SPARK is\n    --    * expansion of actuals to introduce necessary temporaries\n    --    * replacement of renaming by subprogram renamed\n \n-   procedure Expand_SPARK_N_Attribute_Reference (N : Node_Id);\n-   --  Expand attributes 'Old and 'Result only\n-\n    procedure Expand_SPARK_N_Object_Renaming_Declaration (N : Node_Id);\n    --  Perform name evaluation for a renamed object\n \n-   procedure Expand_SPARK_N_Simple_Return_Statement (N : Node_Id);\n-   --  Insert conversion on function return if necessary\n-\n-   procedure Expand_SPARK_Simple_Function_Return (N : Node_Id);\n-   --  Expand simple return from function\n-\n    procedure Expand_Potential_Renaming (N : Node_Id);\n    --  N denotes a N_Identifier or N_Expanded_Name. If N references a renaming,\n    --  replace N with the renamed object.\n@@ -74,8 +61,6 @@ package body Exp_SPARK is\n    procedure Expand_SPARK (N : Node_Id) is\n    begin\n       case Nkind (N) is\n-         when N_Attribute_Reference =>\n-            Expand_SPARK_N_Attribute_Reference (N);\n \n          --  Qualification of entity names in formal verification mode\n          --  is limited to the addition of a suffix for homonyms (see\n@@ -107,9 +92,6 @@ package body Exp_SPARK is\n          when N_Object_Renaming_Declaration =>\n             Expand_SPARK_N_Object_Renaming_Declaration (N);\n \n-         when N_Simple_Return_Statement =>\n-            Expand_SPARK_N_Simple_Return_Statement (N);\n-\n          --  In SPARK mode, no other constructs require expansion\n \n          when others =>\n@@ -179,24 +161,6 @@ package body Exp_SPARK is\n       end if;\n    end Expand_SPARK_Call;\n \n-   ----------------------------------------\n-   -- Expand_SPARK_N_Attribute_Reference --\n-   ----------------------------------------\n-\n-   procedure Expand_SPARK_N_Attribute_Reference (N : Node_Id) is\n-      Id : constant Attribute_Id := Get_Attribute_Id (Attribute_Name (N));\n-\n-   begin\n-      case Id is\n-         when Attribute_Old    |\n-              Attribute_Result =>\n-            Expand_N_Attribute_Reference (N);\n-\n-         when others =>\n-            null;\n-      end case;\n-   end Expand_SPARK_N_Attribute_Reference;\n-\n    ------------------------------------------------\n    -- Expand_SPARK_N_Object_Renaming_Declaration --\n    ------------------------------------------------\n@@ -208,80 +172,6 @@ package body Exp_SPARK is\n       Evaluate_Name (Name (N));\n    end Expand_SPARK_N_Object_Renaming_Declaration;\n \n-   --------------------------------------------\n-   -- Expand_SPARK_N_Simple_Return_Statement --\n-   --------------------------------------------\n-\n-   procedure Expand_SPARK_N_Simple_Return_Statement (N : Node_Id) is\n-   begin\n-      --  Defend against previous errors (i.e. the return statement calls a\n-      --  function that is not available in configurable runtime).\n-\n-      if Present (Expression (N))\n-        and then Nkind (Expression (N)) = N_Empty\n-      then\n-         return;\n-      end if;\n-\n-      --  Distinguish the function and non-function cases:\n-\n-      case Ekind (Return_Applies_To (Return_Statement_Entity (N))) is\n-\n-         when E_Function          |\n-              E_Generic_Function  =>\n-            Expand_SPARK_Simple_Function_Return (N);\n-\n-         when E_Procedure         |\n-              E_Generic_Procedure |\n-              E_Entry             |\n-              E_Entry_Family      |\n-              E_Return_Statement =>\n-            null;\n-\n-         when others =>\n-            raise Program_Error;\n-      end case;\n-\n-   exception\n-      when RE_Not_Available =>\n-         return;\n-   end Expand_SPARK_N_Simple_Return_Statement;\n-\n-   -----------------------------------------\n-   -- Expand_SPARK_Simple_Function_Return --\n-   -----------------------------------------\n-\n-   procedure Expand_SPARK_Simple_Function_Return (N : Node_Id) is\n-      Scope_Id : constant Entity_Id :=\n-                   Return_Applies_To (Return_Statement_Entity (N));\n-      --  The function we are returning from\n-\n-      R_Type : constant Entity_Id := Etype (Scope_Id);\n-      --  The result type of the function\n-\n-      Exp : constant Node_Id := Expression (N);\n-      pragma Assert (Present (Exp));\n-\n-      Exptyp : constant Entity_Id := Etype (Exp);\n-      --  The type of the expression (not necessarily the same as R_Type)\n-\n-   begin\n-      --  Check the result expression of a scalar function against the subtype\n-      --  of the function by inserting a conversion. This conversion must\n-      --  eventually be performed for other classes of types, but for now it's\n-      --  only done for scalars.\n-      --  ???\n-\n-      if Is_Scalar_Type (Exptyp) then\n-         Rewrite (Exp, Convert_To (R_Type, Exp));\n-\n-         --  The expression is resolved to ensure that the conversion gets\n-         --  expanded to generate a possible constraint check.\n-\n-         Analyze_And_Resolve (Exp, R_Type);\n-      end if;\n-   end Expand_SPARK_Simple_Function_Return;\n-\n    -------------------------------\n    -- Expand_Potential_Renaming --\n    -------------------------------"}, {"sha": "6b2e0a66b81899f88bdd1c24bda17b54819e4525", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf895a0159fe915e00213fa700fbe8a1bc838b7a/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf895a0159fe915e00213fa700fbe8a1bc838b7a/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=cf895a0159fe915e00213fa700fbe8a1bc838b7a", "patch": "@@ -1236,12 +1236,14 @@ package body Sem_Ch3 is\n       --  be updated when the full type declaration is seen. This only applies\n       --  to incomplete types declared in some enclosing scope, not to limited\n       --  views from other packages.\n+      --  Prior to Ada 2012, access to functions can only have in_parameters.\n \n       if Present (Formals) then\n          Formal := First_Formal (Desig_Type);\n          while Present (Formal) loop\n             if Ekind (Formal) /= E_In_Parameter\n               and then Nkind (T_Def) = N_Access_Function_Definition\n+              and then Ada_Version < Ada_2012\n             then\n                Error_Msg_N (\"functions can only have IN parameters\", Formal);\n             end if;\n@@ -4050,6 +4052,13 @@ package body Sem_Ch3 is\n       --  type with constraints. In this case the entity has been introduced\n       --  in the private declaration.\n \n+      --  Finally this happens in some complex cases  when validity checks are\n+      --  enabled, where the same subtype declaration may be analyzed twice.\n+      --  This can happen if the subtype is created by the pre-analysis of\n+      --  an attribute tht gives the range of a loop statement, and the loop\n+      --  itself appears within an if_statement that will be rewritten during\n+      --  expansion.\n+\n       if Skip\n         or else (Present (Etype (Id))\n                   and then (Is_Private_Type (Etype (Id))\n@@ -4058,6 +4067,9 @@ package body Sem_Ch3 is\n       then\n          null;\n \n+      elsif Current_Entity (Id) = Id then\n+         null;\n+\n       else\n          Enter_Name (Id);\n       end if;\n@@ -14804,7 +14816,8 @@ package body Sem_Ch3 is\n       --  extensions of tagged record types.\n \n       if No (Extension) then\n-         Check_SPARK_Restriction (\"derived type is not allowed\", N);\n+         Check_SPARK_Restriction\n+           (\"derived type is not allowed\", Original_Node (N));\n       end if;\n    end Derived_Type_Declaration;\n "}]}