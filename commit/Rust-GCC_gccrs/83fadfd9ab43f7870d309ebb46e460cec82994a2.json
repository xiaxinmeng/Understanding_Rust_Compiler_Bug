{"sha": "83fadfd9ab43f7870d309ebb46e460cec82994a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODNmYWRmZDlhYjQzZjc4NzBkMzA5ZWJiNDZlNDYwY2VjODI5OTRhMg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2018-08-21T14:44:51Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-08-21T14:44:51Z"}, "message": "[Ada] Set_Targ: add a CodePeer annotation\n\n2018-08-21  Arnaud Charlet  <charlet@adacore.com>\n\ngcc/ada/\n\n\t* set_targ.adb: Mark some CodePeer message as Intentional.\n\nFrom-SVN: r263711", "tree": {"sha": "aebc9d302b274e30a35d1f32100d516d3a61fdee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aebc9d302b274e30a35d1f32100d516d3a61fdee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83fadfd9ab43f7870d309ebb46e460cec82994a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83fadfd9ab43f7870d309ebb46e460cec82994a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83fadfd9ab43f7870d309ebb46e460cec82994a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83fadfd9ab43f7870d309ebb46e460cec82994a2/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8a2f6bbe45fe2dff64d613365fe2ddb2b1922e2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a2f6bbe45fe2dff64d613365fe2ddb2b1922e2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a2f6bbe45fe2dff64d613365fe2ddb2b1922e2f"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "809fd0af586d55268b60461f6619790d162ef1eb", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83fadfd9ab43f7870d309ebb46e460cec82994a2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83fadfd9ab43f7870d309ebb46e460cec82994a2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=83fadfd9ab43f7870d309ebb46e460cec82994a2", "patch": "@@ -1,3 +1,7 @@\n+2018-08-21  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* set_targ.adb: Mark some CodePeer message as Intentional.\n+\n 2018-08-21  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_res.adb (Resolve_Call): Force the freezing of an"}, {"sha": "4c717c5d7d393f22f43db6bdf694a30ffb18de75", "filename": "gcc/ada/set_targ.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83fadfd9ab43f7870d309ebb46e460cec82994a2/gcc%2Fada%2Fset_targ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83fadfd9ab43f7870d309ebb46e460cec82994a2/gcc%2Fada%2Fset_targ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fset_targ.adb?ref=83fadfd9ab43f7870d309ebb46e460cec82994a2", "patch": "@@ -917,6 +917,9 @@ begin\n            Get_Back_End_Config_File;\n       begin\n          if Back_End_Config_File /= null then\n+            pragma Gnat_Annotate\n+              (CodePeer, Intentional, \"test always false\",\n+               \"some variant body will return non null\");\n             Read_Target_Dependent_Values (Back_End_Config_File.all);\n \n          --  Otherwise we get all values from the back end directly"}]}