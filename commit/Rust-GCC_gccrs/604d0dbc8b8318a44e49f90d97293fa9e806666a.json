{"sha": "604d0dbc8b8318a44e49f90d97293fa9e806666a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjA0ZDBkYmM4YjgzMThhNDRlNDlmOTBkOTcyOTNmYTllODA2NjY2YQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-02-19T10:40:17Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-02-19T10:40:17Z"}, "message": "re PR tree-optimization/42944 (errno misoptimization around malloc call)\n\n2010-02-19  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/42944\n\t* tree-ssa-alias.c (call_may_clobber_ref_p_1): Massage\n\ttest for aliasing with errno.\n\nFrom-SVN: r156890", "tree": {"sha": "8f4159aeaa712c9acbb01ecab4492da1751f83bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f4159aeaa712c9acbb01ecab4492da1751f83bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/604d0dbc8b8318a44e49f90d97293fa9e806666a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/604d0dbc8b8318a44e49f90d97293fa9e806666a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/604d0dbc8b8318a44e49f90d97293fa9e806666a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/604d0dbc8b8318a44e49f90d97293fa9e806666a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "40e90eac9591b388ab335cac5f793906cc9a5b0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40e90eac9591b388ab335cac5f793906cc9a5b0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40e90eac9591b388ab335cac5f793906cc9a5b0a"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "607c31844a6a273def794f12433e1a75c4d980c3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/604d0dbc8b8318a44e49f90d97293fa9e806666a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/604d0dbc8b8318a44e49f90d97293fa9e806666a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=604d0dbc8b8318a44e49f90d97293fa9e806666a", "patch": "@@ -1,3 +1,9 @@\n+2010-02-19  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/42944\n+\t* tree-ssa-alias.c (call_may_clobber_ref_p_1): Massage\n+\ttest for aliasing with errno.\n+\n 2010-02-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/42233"}, {"sha": "b235eccf08e1a37c5e84c70a03724b6b6ac70708", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/604d0dbc8b8318a44e49f90d97293fa9e806666a/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/604d0dbc8b8318a44e49f90d97293fa9e806666a/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=604d0dbc8b8318a44e49f90d97293fa9e806666a", "patch": "@@ -1258,16 +1258,19 @@ call_may_clobber_ref_p_1 (gimple call, ao_ref *ref)\n \tcase BUILT_IN_CALLOC:\n \t  /* Unix98 specifies that errno is set on allocation failure.\n \t     Until we properly can track the errno location assume it\n-\t     is not a plain decl but anonymous storage in a different\n-\t     translation unit.  */\n-\t  if (flag_errno_math)\n+\t     is not a local decl but external or anonymous storage in\n+\t     a different translation unit.  Also assume it is of\n+\t     type int as required by the standard.  */\n+\t  if (flag_errno_math\n+\t      && TREE_TYPE (base) == integer_type_node)\n \t    {\n \t      struct ptr_info_def *pi;\n-\t      if (DECL_P (base))\n-\t\treturn false;\n-\t      if (INDIRECT_REF_P (base)\n-\t\t  && TREE_CODE (TREE_OPERAND (base, 0)) == SSA_NAME\n-\t\t  && (pi = SSA_NAME_PTR_INFO (TREE_OPERAND (base, 0))))\n+\t      if (DECL_P (base)\n+\t\t  && !TREE_STATIC (base))\n+\t\treturn true;\n+\t      else if (INDIRECT_REF_P (base)\n+\t\t       && TREE_CODE (TREE_OPERAND (base, 0)) == SSA_NAME\n+\t\t       && (pi = SSA_NAME_PTR_INFO (TREE_OPERAND (base, 0))))\n \t\treturn pi->pt.anything || pi->pt.nonlocal;\n \t    }\n \t  return false;"}]}