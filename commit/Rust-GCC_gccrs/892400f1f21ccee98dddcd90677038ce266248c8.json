{"sha": "892400f1f21ccee98dddcd90677038ce266248c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODkyNDAwZjFmMjFjY2VlOThkZGRjZDkwNjc3MDM4Y2UyNjYyNDhjOA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-09-02T15:08:25Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-09-02T17:22:32Z"}, "message": "libstdc++: Tweak whitespace in <atomic>\n\nSigned-off-by: Jonathan Wakely <jwakely@redhat.com>\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/atomic: Tweak whitespace.", "tree": {"sha": "988c4c3121a916a002aeebca286e43da036bec81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/988c4c3121a916a002aeebca286e43da036bec81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/892400f1f21ccee98dddcd90677038ce266248c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/892400f1f21ccee98dddcd90677038ce266248c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/892400f1f21ccee98dddcd90677038ce266248c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/892400f1f21ccee98dddcd90677038ce266248c8/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dba1ab212292839572fda60df00965e094a11252", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dba1ab212292839572fda60df00965e094a11252", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dba1ab212292839572fda60df00965e094a11252"}], "stats": {"total": 37, "additions": 21, "deletions": 16}, "files": [{"sha": "bdbbfd5c8f8189602def55f50ef3cc765161662b", "filename": "libstdc++-v3/include/std/atomic", "status": "modified", "additions": 21, "deletions": 16, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/892400f1f21ccee98dddcd90677038ce266248c8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fatomic", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/892400f1f21ccee98dddcd90677038ce266248c8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fatomic", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fatomic?ref=892400f1f21ccee98dddcd90677038ce266248c8", "patch": "@@ -560,7 +560,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       { return _M_b.is_lock_free(); }\n \n #if __cplusplus >= 201703L\n-    static constexpr bool is_always_lock_free = ATOMIC_POINTER_LOCK_FREE == 2;\n+      static constexpr bool is_always_lock_free\n+\t= ATOMIC_POINTER_LOCK_FREE == 2;\n #endif\n \n       void\n@@ -660,6 +661,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     notify_all() const noexcept\n     { _M_b.notify_all(); }\n #endif // __cpp_lib_atomic_wait\n+\n       __pointer_type\n       fetch_add(ptrdiff_t __d,\n \t\tmemory_order __m = memory_order_seq_cst) noexcept\n@@ -721,7 +723,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       using __base_type::operator=;\n \n #if __cplusplus >= 201703L\n-    static constexpr bool is_always_lock_free = ATOMIC_CHAR_LOCK_FREE == 2;\n+      static constexpr bool is_always_lock_free = ATOMIC_CHAR_LOCK_FREE == 2;\n #endif\n     };\n \n@@ -744,7 +746,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       using __base_type::operator=;\n \n #if __cplusplus >= 201703L\n-    static constexpr bool is_always_lock_free = ATOMIC_CHAR_LOCK_FREE == 2;\n+      static constexpr bool is_always_lock_free = ATOMIC_CHAR_LOCK_FREE == 2;\n #endif\n     };\n \n@@ -767,7 +769,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       using __base_type::operator=;\n \n #if __cplusplus >= 201703L\n-    static constexpr bool is_always_lock_free = ATOMIC_CHAR_LOCK_FREE == 2;\n+      static constexpr bool is_always_lock_free = ATOMIC_CHAR_LOCK_FREE == 2;\n #endif\n     };\n \n@@ -790,7 +792,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       using __base_type::operator=;\n \n #if __cplusplus >= 201703L\n-    static constexpr bool is_always_lock_free = ATOMIC_SHORT_LOCK_FREE == 2;\n+      static constexpr bool is_always_lock_free = ATOMIC_SHORT_LOCK_FREE == 2;\n #endif\n     };\n \n@@ -813,7 +815,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       using __base_type::operator=;\n \n #if __cplusplus >= 201703L\n-    static constexpr bool is_always_lock_free = ATOMIC_SHORT_LOCK_FREE == 2;\n+      static constexpr bool is_always_lock_free = ATOMIC_SHORT_LOCK_FREE == 2;\n #endif\n     };\n \n@@ -836,7 +838,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       using __base_type::operator=;\n \n #if __cplusplus >= 201703L\n-    static constexpr bool is_always_lock_free = ATOMIC_INT_LOCK_FREE == 2;\n+      static constexpr bool is_always_lock_free = ATOMIC_INT_LOCK_FREE == 2;\n #endif\n     };\n \n@@ -859,7 +861,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       using __base_type::operator=;\n \n #if __cplusplus >= 201703L\n-    static constexpr bool is_always_lock_free = ATOMIC_INT_LOCK_FREE == 2;\n+      static constexpr bool is_always_lock_free = ATOMIC_INT_LOCK_FREE == 2;\n #endif\n     };\n \n@@ -882,7 +884,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       using __base_type::operator=;\n \n #if __cplusplus >= 201703L\n-    static constexpr bool is_always_lock_free = ATOMIC_LONG_LOCK_FREE == 2;\n+      static constexpr bool is_always_lock_free = ATOMIC_LONG_LOCK_FREE == 2;\n #endif\n     };\n \n@@ -905,7 +907,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       using __base_type::operator=;\n \n #if __cplusplus >= 201703L\n-    static constexpr bool is_always_lock_free = ATOMIC_LONG_LOCK_FREE == 2;\n+      static constexpr bool is_always_lock_free = ATOMIC_LONG_LOCK_FREE == 2;\n #endif\n     };\n \n@@ -928,7 +930,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       using __base_type::operator=;\n \n #if __cplusplus >= 201703L\n-    static constexpr bool is_always_lock_free = ATOMIC_LLONG_LOCK_FREE == 2;\n+      static constexpr bool is_always_lock_free = ATOMIC_LLONG_LOCK_FREE == 2;\n #endif\n     };\n \n@@ -951,7 +953,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       using __base_type::operator=;\n \n #if __cplusplus >= 201703L\n-    static constexpr bool is_always_lock_free = ATOMIC_LLONG_LOCK_FREE == 2;\n+      static constexpr bool is_always_lock_free = ATOMIC_LLONG_LOCK_FREE == 2;\n #endif\n     };\n \n@@ -974,7 +976,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       using __base_type::operator=;\n \n #if __cplusplus >= 201703L\n-    static constexpr bool is_always_lock_free = ATOMIC_WCHAR_T_LOCK_FREE == 2;\n+      static constexpr bool is_always_lock_free = ATOMIC_WCHAR_T_LOCK_FREE == 2;\n #endif\n     };\n \n@@ -998,7 +1000,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       using __base_type::operator=;\n \n #if __cplusplus > 201402L\n-    static constexpr bool is_always_lock_free = ATOMIC_CHAR8_T_LOCK_FREE == 2;\n+      static constexpr bool is_always_lock_free\n+\t= ATOMIC_CHAR8_T_LOCK_FREE == 2;\n #endif\n     };\n #endif\n@@ -1022,7 +1025,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       using __base_type::operator=;\n \n #if __cplusplus >= 201703L\n-    static constexpr bool is_always_lock_free = ATOMIC_CHAR16_T_LOCK_FREE == 2;\n+      static constexpr bool is_always_lock_free\n+\t= ATOMIC_CHAR16_T_LOCK_FREE == 2;\n #endif\n     };\n \n@@ -1045,7 +1049,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       using __base_type::operator=;\n \n #if __cplusplus >= 201703L\n-    static constexpr bool is_always_lock_free = ATOMIC_CHAR32_T_LOCK_FREE == 2;\n+      static constexpr bool is_always_lock_free\n+\t= ATOMIC_CHAR32_T_LOCK_FREE == 2;\n #endif\n     };\n "}]}