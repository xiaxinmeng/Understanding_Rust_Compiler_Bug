{"sha": "7c7e8c7809deedd7777aafc91c763eaad99db166", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2M3ZThjNzgwOWRlZWRkNzc3N2FhZmM5MWM3NjNlYWFkOTlkYjE2Ng==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2012-10-23T23:43:21Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2012-10-23T23:43:21Z"}, "message": "re PR c++/54922 ([C++11][DR 1359] constexpr constructors require initialization of all union members)\n\n/cp\n2012-10-23  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/54922\n\t* semantics.c (cx_check_missing_mem_inits): Handle anonymous union\n\tmembers.\n\n/testsuite\n2012-10-23  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/54922\n\t* g++.dg/cpp0x/constexpr-union4.C: New.\n\nFrom-SVN: r192749", "tree": {"sha": "eeaa77dee41204f98682a892a92f5941c486cfd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eeaa77dee41204f98682a892a92f5941c486cfd7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c7e8c7809deedd7777aafc91c763eaad99db166", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c7e8c7809deedd7777aafc91c763eaad99db166", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c7e8c7809deedd7777aafc91c763eaad99db166", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c7e8c7809deedd7777aafc91c763eaad99db166/comments", "author": null, "committer": null, "parents": [{"sha": "0d6414b24c4041d9a5f7ceaf382d189230702084", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d6414b24c4041d9a5f7ceaf382d189230702084", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d6414b24c4041d9a5f7ceaf382d189230702084"}], "stats": {"total": 38, "additions": 34, "deletions": 4}, "files": [{"sha": "9e8d933e7459bfde355d53164d080eb0eff31a62", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c7e8c7809deedd7777aafc91c763eaad99db166/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c7e8c7809deedd7777aafc91c763eaad99db166/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7c7e8c7809deedd7777aafc91c763eaad99db166", "patch": "@@ -1,3 +1,9 @@\n+2012-10-23  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/54922\n+\t* semantics.c (cx_check_missing_mem_inits): Handle anonymous union\n+\tmembers.\n+\n 2012-10-23  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/54844"}, {"sha": "63b364c37de6cf78f919b1e09104499ee7188f5f", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c7e8c7809deedd7777aafc91c763eaad99db166/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c7e8c7809deedd7777aafc91c763eaad99db166/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=7c7e8c7809deedd7777aafc91c763eaad99db166", "patch": "@@ -6139,17 +6139,23 @@ cx_check_missing_mem_inits (tree fun, tree body, bool complain)\n   for (i = 0; i <= nelts; ++i)\n     {\n       tree index;\n+      tree anon_union_init_type = NULL_TREE;\n       if (i == nelts)\n \tindex = NULL_TREE;\n       else\n \t{\n \t  index = CONSTRUCTOR_ELT (body, i)->index;\n+\t  /* Handle anonymous union members.  */\n+\t  if (TREE_CODE (index) == COMPONENT_REF\n+\t      && ANON_UNION_TYPE_P (TREE_TYPE (TREE_OPERAND (index, 0))))\n+\t    anon_union_init_type = TREE_TYPE (TREE_OPERAND (index, 0));\n \t  /* Skip base and vtable inits.  */\n-\t  if (TREE_CODE (index) != FIELD_DECL\n-\t      || DECL_ARTIFICIAL (index))\n+\t  else if (TREE_CODE (index) != FIELD_DECL\n+\t\t   || DECL_ARTIFICIAL (index))\n \t    continue;\n \t}\n-      for (; field != index; field = DECL_CHAIN (field))\n+      for (; field != index && TREE_TYPE (field) != anon_union_init_type;\n+\t   field = DECL_CHAIN (field))\n \t{\n \t  tree ftype;\n \t  if (TREE_CODE (field) != FIELD_DECL"}, {"sha": "19556ce21615becfa04f299da163e96a02527734", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c7e8c7809deedd7777aafc91c763eaad99db166/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c7e8c7809deedd7777aafc91c763eaad99db166/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7c7e8c7809deedd7777aafc91c763eaad99db166", "patch": "@@ -1,3 +1,8 @@\n+2012-10-23  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/54922\n+\t* g++.dg/cpp0x/constexpr-union4.C: New.\n+\n 2012-10-23  Jeff Law  <law@redhat.com>\n \n \t* gcc.c-torture/execute/pr54985.c: New test.\n@@ -6,7 +11,7 @@\n \n \tPR debug/54508\n \t* g++.dg/debug/dwarf2/pr54508.C: New.\n-\t\n+\n 2012-10-23  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/54844"}, {"sha": "5695cb2ff7adec32d1ef690fdd519c76ab410075", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-union4.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c7e8c7809deedd7777aafc91c763eaad99db166/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-union4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c7e8c7809deedd7777aafc91c763eaad99db166/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-union4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-union4.C?ref=7c7e8c7809deedd7777aafc91c763eaad99db166", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/54922\n+// { dg-do compile { target c++11 } }\n+\n+class nullable_int\n+{\n+  bool init_;\n+  union {\n+    unsigned char for_value_init;\n+    int value_;\n+  };\n+public:\n+  constexpr nullable_int() : init_(false), for_value_init() {}\n+};"}]}