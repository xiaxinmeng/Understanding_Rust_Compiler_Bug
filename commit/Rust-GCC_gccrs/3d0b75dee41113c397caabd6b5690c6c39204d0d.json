{"sha": "3d0b75dee41113c397caabd6b5690c6c39204d0d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2QwYjc1ZGVlNDExMTNjMzk3Y2FhYmQ2YjU2OTBjNmMzOTIwNGQwZA==", "commit": {"author": {"name": "Guozhi Wei", "email": "carrot@google.com", "date": "2014-08-27T16:48:09Z"}, "committer": {"name": "Wei Guozhi", "email": "carrot@gcc.gnu.org", "date": "2014-08-27T16:48:09Z"}, "message": "re PR target/62262 (aarch64 gcc generates invalid assembler)\n\n\tPR target/62262\n\t* config/aarch64/aarch64.md (*andim_ashift<mode>_bfiz): Check the shift\n\tamount before using it.\n\n\t* gcc.target/aarch64/pr62262.c: New test.\n\nFrom-SVN: r214578", "tree": {"sha": "50d95b3ec5a31542890562a98fdfe72015237a6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50d95b3ec5a31542890562a98fdfe72015237a6d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d0b75dee41113c397caabd6b5690c6c39204d0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d0b75dee41113c397caabd6b5690c6c39204d0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d0b75dee41113c397caabd6b5690c6c39204d0d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d0b75dee41113c397caabd6b5690c6c39204d0d/comments", "author": {"login": "weiguozhi", "id": 57237827, "node_id": "MDQ6VXNlcjU3MjM3ODI3", "avatar_url": "https://avatars.githubusercontent.com/u/57237827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiguozhi", "html_url": "https://github.com/weiguozhi", "followers_url": "https://api.github.com/users/weiguozhi/followers", "following_url": "https://api.github.com/users/weiguozhi/following{/other_user}", "gists_url": "https://api.github.com/users/weiguozhi/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiguozhi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiguozhi/subscriptions", "organizations_url": "https://api.github.com/users/weiguozhi/orgs", "repos_url": "https://api.github.com/users/weiguozhi/repos", "events_url": "https://api.github.com/users/weiguozhi/events{/privacy}", "received_events_url": "https://api.github.com/users/weiguozhi/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dcb7fae249bd3b867d91dd85c2e66fd51eb2b45e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcb7fae249bd3b867d91dd85c2e66fd51eb2b45e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcb7fae249bd3b867d91dd85c2e66fd51eb2b45e"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "66eece0e809caae130196ffbd94430e676c34298", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d0b75dee41113c397caabd6b5690c6c39204d0d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d0b75dee41113c397caabd6b5690c6c39204d0d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3d0b75dee41113c397caabd6b5690c6c39204d0d", "patch": "@@ -1,3 +1,9 @@\n+2014-08-27  Guozhi Wei  <carrot@google.com>\n+\n+\tPR target/62262\n+\t* config/aarch64/aarch64.md (*andim_ashift<mode>_bfiz): Check the shift\n+\tamount before using it.\n+\n 2014-08-27  Richard Biener  <rguenther@suse.de>\n \n \t* gimple-fold.c (get_maxval_strlen): Add overload wrapping"}, {"sha": "1f7ab9151babde37b0d1db646db242136d02a5ad", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d0b75dee41113c397caabd6b5690c6c39204d0d/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d0b75dee41113c397caabd6b5690c6c39204d0d/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=3d0b75dee41113c397caabd6b5690c6c39204d0d", "patch": "@@ -3431,7 +3431,8 @@\n \t(and:GPI (ashift:GPI (match_operand:GPI 1 \"register_operand\" \"r\")\n \t\t\t     (match_operand 2 \"const_int_operand\" \"n\"))\n \t\t (match_operand 3 \"const_int_operand\" \"n\")))]\n-  \"exact_log2 ((INTVAL (operands[3]) >> INTVAL (operands[2])) + 1) >= 0\n+  \"(INTVAL (operands[2]) < (<GPI:sizen>))\n+   && exact_log2 ((INTVAL (operands[3]) >> INTVAL (operands[2])) + 1) >= 0\n    && (INTVAL (operands[3]) & ((1 << INTVAL (operands[2])) - 1)) == 0\"\n   \"ubfiz\\\\t%<w>0, %<w>1, %2, %P3\"\n   [(set_attr \"type\" \"bfm\")]"}, {"sha": "883582291b414453481b097a5e2c5aff854db886", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d0b75dee41113c397caabd6b5690c6c39204d0d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d0b75dee41113c397caabd6b5690c6c39204d0d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3d0b75dee41113c397caabd6b5690c6c39204d0d", "patch": "@@ -1,3 +1,8 @@\n+2014-08-27  Guozhi Wei  <carrot@google.com>\n+\n+\tPR target/62262\n+\t* gcc.target/aarch64/pr62262.c: New test.\n+\n 2014-08-26  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR target/60606"}, {"sha": "5bf90bf7fe3a984193c14f7386aaff2f5ada6b57", "filename": "gcc/testsuite/gcc.target/aarch64/pr62262.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d0b75dee41113c397caabd6b5690c6c39204d0d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr62262.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d0b75dee41113c397caabd6b5690c6c39204d0d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr62262.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr62262.c?ref=3d0b75dee41113c397caabd6b5690c6c39204d0d", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fprofile-use\" } */\n+\n+static inline int CLZ(int mask) {\n+   return mask ? __builtin_clz(mask) : 32;\n+}\n+\n+int foo(int value)\n+{\n+    if (value == 0)\n+        return 0;\n+\n+    int bias = CLZ(value);\n+    value >>= bias;\n+    int zeros = CLZ(value << 1);\n+    value <<= zeros;\n+\n+    int packed = (unsigned)(value << 9) >> 9;\n+    return packed;\n+}"}]}