{"sha": "dcfbe7c7d9bf93e65a27c44c0433ac5316610c2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGNmYmU3YzdkOWJmOTNlNjVhMjdjNDRjMDQzM2FjNTMxNjYxMGMyYw==", "commit": {"author": {"name": "Jerry Quinn", "email": "jlquinn@optonline.net", "date": "2004-06-30T22:47:39Z"}, "committer": {"name": "Jerry Quinn", "email": "jlquinn@gcc.gnu.org", "date": "2004-06-30T22:47:39Z"}, "message": "Statement.java (doExecute): Fix formatting.\n\n2004-06-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/beans/Statement.java (doExecute): Fix formatting.\n\nFrom-SVN: r83938", "tree": {"sha": "61d3a625d313760b2b2aab78687e885d586bd8eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61d3a625d313760b2b2aab78687e885d586bd8eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dcfbe7c7d9bf93e65a27c44c0433ac5316610c2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcfbe7c7d9bf93e65a27c44c0433ac5316610c2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcfbe7c7d9bf93e65a27c44c0433ac5316610c2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcfbe7c7d9bf93e65a27c44c0433ac5316610c2c/comments", "author": {"login": "jlquinn", "id": 826841, "node_id": "MDQ6VXNlcjgyNjg0MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/826841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlquinn", "html_url": "https://github.com/jlquinn", "followers_url": "https://api.github.com/users/jlquinn/followers", "following_url": "https://api.github.com/users/jlquinn/following{/other_user}", "gists_url": "https://api.github.com/users/jlquinn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlquinn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlquinn/subscriptions", "organizations_url": "https://api.github.com/users/jlquinn/orgs", "repos_url": "https://api.github.com/users/jlquinn/repos", "events_url": "https://api.github.com/users/jlquinn/events{/privacy}", "received_events_url": "https://api.github.com/users/jlquinn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dd66b8e81e3182b520ea5de41e1f45ba8eaedf5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd66b8e81e3182b520ea5de41e1f45ba8eaedf5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd66b8e81e3182b520ea5de41e1f45ba8eaedf5d"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "7d43c4878b8d7653d6933b7f7645eed1a24ccb5a", "filename": "libjava/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcfbe7c7d9bf93e65a27c44c0433ac5316610c2c/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcfbe7c7d9bf93e65a27c44c0433ac5316610c2c/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=dcfbe7c7d9bf93e65a27c44c0433ac5316610c2c", "patch": "@@ -1,3 +1,7 @@\n+2004-06-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/beans/Statement.java (doExecute): Fix formatting.\n+\n 2004-06-29  Per Bothner  <per@bothner.com>\n \n \t* jni.cc (_Jv_JNI_NewGlobalRef, JNICALL _Jv_JNI_DeleteGlobalRef,"}, {"sha": "9b3c7af0a1396b5a6b7eda7b7ffbff650a79033e", "filename": "libjava/java/beans/Statement.java", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcfbe7c7d9bf93e65a27c44c0433ac5316610c2c/libjava%2Fjava%2Fbeans%2FStatement.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcfbe7c7d9bf93e65a27c44c0433ac5316610c2c/libjava%2Fjava%2Fbeans%2FStatement.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fbeans%2FStatement.java?ref=dcfbe7c7d9bf93e65a27c44c0433ac5316610c2c", "patch": "@@ -243,10 +243,12 @@ else if (ctor != null)\n \t    }\n \t      \n \t    \n-\t    if (ptypes.length != args.length)  continue;\n+\t    if (ptypes.length != args.length)\n+\t      continue;\n \n \t    // Check if method matches\n-\t    if (!compatible(ptypes, argTypes)) continue;\n+\t    if (!compatible(ptypes, argTypes))\n+\t      continue;\n \n \t    // Use method[i] if it is more specific. \n \t    // FIXME: should this check both directions and throw if\n@@ -270,12 +272,15 @@ else if (ctor != null)\n     for (int i = 0; i < methods.length; i++)\n       {\n \t// Skip methods with wrong name or number of args.\n-\tif (!methods[i].getName().equals(methodName)) continue;\n+\tif (!methods[i].getName().equals(methodName))\n+\t  continue;\n \tClass ptypes[] = methods[i].getParameterTypes();\n-\tif (ptypes.length != args.length)  continue;\n+\tif (ptypes.length != args.length)\n+\t  continue;\n \n \t// Check if method matches\n-\tif (!compatible(ptypes, argTypes)) continue;\n+\tif (!compatible(ptypes, argTypes))\n+\t  continue;\n \n \t// Use method[i] if it is more specific. \n \t// FIXME: should this check both directions and throw if"}]}