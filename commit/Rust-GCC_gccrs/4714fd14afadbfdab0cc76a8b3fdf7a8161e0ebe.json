{"sha": "4714fd14afadbfdab0cc76a8b3fdf7a8161e0ebe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDcxNGZkMTRhZmFkYmZkYWIwY2M3NmE4YjNmZGY3YTgxNjFlMGViZQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-04-15T18:47:47Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-04-15T18:47:47Z"}, "message": "libstdc++: Add spaceship operator to std::type_index\n\nAnother C++20 change from P1614R2, \"The Mothership has Landed\".\n\n\t* include/std/typeindex (operator<=>): Define for C++20.\n\t* testsuite/20_util/typeindex/comparison_operators_c++20.cc: New test.", "tree": {"sha": "7275957c458d59dc97e0367bd8520be88b67ee9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7275957c458d59dc97e0367bd8520be88b67ee9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4714fd14afadbfdab0cc76a8b3fdf7a8161e0ebe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4714fd14afadbfdab0cc76a8b3fdf7a8161e0ebe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4714fd14afadbfdab0cc76a8b3fdf7a8161e0ebe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4714fd14afadbfdab0cc76a8b3fdf7a8161e0ebe/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49795733fdcc3a804dab59b63f86d5ebe4541374", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49795733fdcc3a804dab59b63f86d5ebe4541374", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49795733fdcc3a804dab59b63f86d5ebe4541374"}], "stats": {"total": 72, "additions": 72, "deletions": 0}, "files": [{"sha": "696a423e5c71dac9ea3d677f753fdebb185ddf91", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4714fd14afadbfdab0cc76a8b3fdf7a8161e0ebe/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4714fd14afadbfdab0cc76a8b3fdf7a8161e0ebe/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=4714fd14afadbfdab0cc76a8b3fdf7a8161e0ebe", "patch": "@@ -1,3 +1,8 @@\n+2020-04-15  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/typeindex (operator<=>): Define for C++20.\n+\t* testsuite/20_util/typeindex/comparison_operators_c++20.cc: New test.\n+\n 2020-04-14  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* libsupc++/compare (compare_three_way): Fix constraint so that"}, {"sha": "b4539f18ca009485ffde656ebc0ea33d2c60357d", "filename": "libstdc++-v3/include/std/typeindex", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4714fd14afadbfdab0cc76a8b3fdf7a8161e0ebe/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftypeindex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4714fd14afadbfdab0cc76a8b3fdf7a8161e0ebe/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftypeindex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftypeindex?ref=4714fd14afadbfdab0cc76a8b3fdf7a8161e0ebe", "patch": "@@ -36,6 +36,9 @@\n #else\n \n #include <typeinfo>\n+#if __cplusplus > 201703L\n+# include <compare>\n+#endif\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {\n@@ -58,9 +61,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator==(const type_index& __rhs) const noexcept\n     { return *_M_target == *__rhs._M_target; }\n \n+#if ! __cpp_lib_three_way_comparison\n     bool\n     operator!=(const type_index& __rhs) const noexcept\n     { return *_M_target != *__rhs._M_target; }\n+#endif\n \n     bool\n     operator<(const type_index& __rhs) const noexcept\n@@ -78,6 +83,18 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator>=(const type_index& __rhs) const noexcept\n     { return !_M_target->before(*__rhs._M_target); }\n \n+#if __cpp_lib_three_way_comparison\n+    strong_ordering\n+    operator<=>(const type_index& __rhs) const noexcept\n+    {\n+      if (*_M_target == *__rhs._M_target)\n+\treturn strong_ordering::equal;\n+      if (_M_target->before(*__rhs._M_target))\n+\treturn strong_ordering::less;\n+      return strong_ordering::greater;\n+    }\n+#endif\n+\n     size_t\n     hash_code() const noexcept\n     { return _M_target->hash_code(); }"}, {"sha": "27598c690c5dbcf426b882cc8b0fd4eb6945a099", "filename": "libstdc++-v3/testsuite/20_util/typeindex/comparison_operators_c++20.cc", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4714fd14afadbfdab0cc76a8b3fdf7a8161e0ebe/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftypeindex%2Fcomparison_operators_c%2B%2B20.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4714fd14afadbfdab0cc76a8b3fdf7a8161e0ebe/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftypeindex%2Fcomparison_operators_c%2B%2B20.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftypeindex%2Fcomparison_operators_c%2B%2B20.cc?ref=4714fd14afadbfdab0cc76a8b3fdf7a8161e0ebe", "patch": "@@ -0,0 +1,50 @@\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do run { target c++2a } }\n+\n+// Copyright (C) 2020 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <typeindex>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  class Abraca { };\n+  Abraca a1, a2_;\n+  const Abraca a2 = a2_;\n+\n+  const std::type_index arr[] = {\n+    typeid(int), typeid(double), typeid(Abraca), typeid(const Abraca),\n+    typeid(const Abraca&), typeid(a1), typeid(a2)\n+  };\n+\n+  for (const std::type_index& t1 : arr)\n+    for (const std::type_index& t2 : arr)\n+    {\n+      VERIFY( (t1 == t2) == std::is_eq(t1 <=> t2) );\n+      VERIFY( (t1 != t2) == std::is_neq(t1 <=> t2) );\n+      VERIFY( (t1 < t2) == std::is_lt(t1 <=> t2) );\n+      VERIFY( (t1 > t2) == std::is_gt(t1 <=> t2) );\n+      VERIFY( (t1 <= t2) == std::is_lteq(t1 <=> t2) );\n+      VERIFY( (t1 >= t2) == std::is_gteq(t1 <=> t2) );\n+    }\n+}\n+\n+int main()\n+{\n+  test01();\n+}"}]}