{"sha": "b4e0fcc38e745465c6a92390b1f86df6167b17a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRlMGZjYzM4ZTc0NTQ2NWM2YTkyMzkwYjFmODZkZjYxNjdiMTdhNQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2003-06-05T22:18:55Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-06-05T22:18:55Z"}, "message": "gcc-defs.exp (additional_sources): New variable.\n\n\t* lib/gcc-defs.exp (additional_sources): New variable.\n\t(dg-additional-sources): New function.\n\t(additional_files): New variable.\n\t(dg-additional-files): New function.\n\t(dg-additional-files-options): Likewise.\n\t* lib/gcc-dg.exp (dg-require-weak): New function.\n\t(dg-require-alias): Likewise.\n\t(dg-require-gc-sections): Likewise.\n\t* lib/target-supports.exp (check_alias_available): Remove testfile\n\tparameter.\n\t(check_gc_sections_available): New function.\n\t* lib/g++-dg.exp (dg-gpp-additional-sources): Remove.\n\t(dg-gpp-additional-files): Likewise.\n\t* lib/g++.exp (additional_sources): Remove.\n\t(additional_files): Likewise.\n\t(g++_target_compile): Use dg-additional-files-options.\n\n\t* gcc.dg/special/special.exp: Add \"ecos\" tests.  Remove complex\n\tTcl logic.\n\t* gcc.dg/special/ecos.exp: Remove.\n\t* gcc.dg/special/20000419-2.c: Use dg-require-*.\n\t* gcc.dg/special/alias-1.c: Likewise.\n\t* gcc.dg/special/alias-2.c: Likewise.\n\t* gcc.dg/special/gcsec-1.c: Likewise.\n\t* gcc.dg/special/weak-1.c: Likewise.\n\t* gcc.dg/special/weak-2.c: Likewise.\n\t* gcc.dg/special/wkali-1.c: Likewise.\n\t* gcc.dg/special/wkali-2.c: Likewise.\n\n\t* g++.dg/special/conpr-2.C: Use dg-additional-*, not\n\tdg-gpp-additional-*.\n\t* g++.dg/special/conpr-3.C: Likewise.\n\t* g++.dg/special/conpr-4.C: Likewise.\n\t* g++.old-deja/g++.abi/vtable3a.C: Likewise.\n\t* g++.old-deja/g++.abi/vtable3b.C: Likewise.\n\t* g++.old-deja/g++.abi/vtable3c.C: Likewise.\n\t* g++.old-deja/g++.abi/vtable3d.C: Likewise.\n\t* g++.old-deja/g++.abi/vtable3e.C: Likewise.\n\t* g++.old-deja/g++.abi/vtable3f.C: Likewise.\n\t* g++.old-deja/g++.abi/vtable3g.C: Likewise.\n\t* g++.old-deja/g++.abi/vtable3h.C: Likewise.\n\t* g++.old-deja/g++.abi/vtable3i.C: Likewise.\n\t* g++.old-deja/g++.abi/vtable3j.C: Likewise.\n\t* g++.old-deja/g++.oliva/linkage1.C: Likewise.\n\t* g++.old-deja/g++.other/comdat1.C: Likewise.\n\t* g++.old-deja/g++.other/comdat2.C: Likewise.\n\t* g++.old-deja/g++.other/comdat3.C: Likewise.\n\t* g++.old-deja/g++.other/ctor1.C: Likewise.\n\t* g++.old-deja/g++.pt/instantiate5.C: Likewise.\n\nFrom-SVN: r67514", "tree": {"sha": "547225b726e2ad55b59073d450463aa182ade18e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/547225b726e2ad55b59073d450463aa182ade18e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4e0fcc38e745465c6a92390b1f86df6167b17a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4e0fcc38e745465c6a92390b1f86df6167b17a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4e0fcc38e745465c6a92390b1f86df6167b17a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4e0fcc38e745465c6a92390b1f86df6167b17a5/comments", "author": null, "committer": null, "parents": [{"sha": "7786a3e47a6c81971f0eea5b4ebbc0745cdfbcb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7786a3e47a6c81971f0eea5b4ebbc0745cdfbcb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7786a3e47a6c81971f0eea5b4ebbc0745cdfbcb3"}], "stats": {"total": 500, "additions": 229, "deletions": 271}, "files": [{"sha": "daf275fe99892b412eb31f7dd5dd554c77ca4b46", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b4e0fcc38e745465c6a92390b1f86df6167b17a5", "patch": "@@ -1,3 +1,55 @@\n+2003-06-05  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* lib/gcc-defs.exp (additional_sources): New variable.\n+\t(dg-additional-sources): New function.\n+\t(additional_files): New variable.\n+\t(dg-additional-files): New function.\n+\t(dg-additional-files-options): Likewise.\n+\t* lib/gcc-dg.exp (dg-require-weak): New function.\n+\t(dg-require-alias): Likewise.\n+\t(dg-require-gc-sections): Likewise.\n+\t* lib/target-supports.exp (check_alias_available): Remove testfile\n+\tparameter.\n+\t(check_gc_sections_available): New function.\n+\t* lib/g++-dg.exp (dg-gpp-additional-sources): Remove.\n+\t(dg-gpp-additional-files): Likewise.\n+\t* lib/g++.exp (additional_sources): Remove.\n+\t(additional_files): Likewise.\n+\t(g++_target_compile): Use dg-additional-files-options.\n+\t\n+\t* gcc.dg/special/special.exp: Add \"ecos\" tests.  Remove complex\n+\tTcl logic.\n+\t* gcc.dg/special/ecos.exp: Remove.\n+\t* gcc.dg/special/20000419-2.c: Use dg-require-*.\n+\t* gcc.dg/special/alias-1.c: Likewise.\n+\t* gcc.dg/special/alias-2.c: Likewise.\n+\t* gcc.dg/special/gcsec-1.c: Likewise.\n+\t* gcc.dg/special/weak-1.c: Likewise.\n+\t* gcc.dg/special/weak-2.c: Likewise.\n+\t* gcc.dg/special/wkali-1.c: Likewise.\n+\t* gcc.dg/special/wkali-2.c: Likewise.\n+\t\n+\t* g++.dg/special/conpr-2.C: Use dg-additional-*, not\n+\tdg-gpp-additional-*.\n+\t* g++.dg/special/conpr-3.C: Likewise.\n+\t* g++.dg/special/conpr-4.C: Likewise.\n+\t* g++.old-deja/g++.abi/vtable3a.C: Likewise.\n+\t* g++.old-deja/g++.abi/vtable3b.C: Likewise.\n+\t* g++.old-deja/g++.abi/vtable3c.C: Likewise.\n+\t* g++.old-deja/g++.abi/vtable3d.C: Likewise.\n+\t* g++.old-deja/g++.abi/vtable3e.C: Likewise.\n+\t* g++.old-deja/g++.abi/vtable3f.C: Likewise.\n+\t* g++.old-deja/g++.abi/vtable3g.C: Likewise.\n+\t* g++.old-deja/g++.abi/vtable3h.C: Likewise.\n+\t* g++.old-deja/g++.abi/vtable3i.C: Likewise.\n+\t* g++.old-deja/g++.abi/vtable3j.C: Likewise.\n+\t* g++.old-deja/g++.oliva/linkage1.C: Likewise.\n+\t* g++.old-deja/g++.other/comdat1.C: Likewise.\n+\t* g++.old-deja/g++.other/comdat2.C: Likewise.\n+\t* g++.old-deja/g++.other/comdat3.C: Likewise.\n+\t* g++.old-deja/g++.other/ctor1.C: Likewise.\n+\t* g++.old-deja/g++.pt/instantiate5.C: Likewise.\n+\n 2003-06-05  Richard Henderson  <rth@redhat.com>\n \n \t* gcc.dg/debug/20030605-1.c: New."}, {"sha": "67333c8a98b7c58737249044d353dad9b54937e8", "filename": "gcc/testsuite/g++.dg/special/conpr-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspecial%2Fconpr-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspecial%2Fconpr-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspecial%2Fconpr-2.C?ref=b4e0fcc38e745465c6a92390b1f86df6167b17a5", "patch": "@@ -1,6 +1,6 @@\n /* This doesn't work on solaris2 for reasons described in PR 6482.  */\n /* { dg-do run { xfail *-*-solaris2* } } */\n-/* { dg-gpp-additional-sources \"conpr-2a.cc\" } */\n+/* { dg-additional-sources \"conpr-2a.cc\" } */\n \n #include <stdlib.h>\n "}, {"sha": "04a080bacefe61318433f6ca512c9050f87b86ff", "filename": "gcc/testsuite/g++.dg/special/conpr-3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspecial%2Fconpr-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspecial%2Fconpr-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspecial%2Fconpr-3.C?ref=b4e0fcc38e745465c6a92390b1f86df6167b17a5", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-gpp-additional-sources \"conpr-3a.cc conpr-3b.cc\" } */\n+/* { dg-additional-sources \"conpr-3a.cc conpr-3b.cc\" } */\n \n #include <stdlib.h>\n "}, {"sha": "c04d188ad70e48cff6e7ca05247900ee23fbc153", "filename": "gcc/testsuite/g++.dg/special/conpr-4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspecial%2Fconpr-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspecial%2Fconpr-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspecial%2Fconpr-4.C?ref=b4e0fcc38e745465c6a92390b1f86df6167b17a5", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-gpp-additional-sources \"conpr-3b.cc conpr-3a.cc\" } */\n+/* { dg-additional-sources \"conpr-3b.cc conpr-3a.cc\" } */\n \n #include <stdlib.h>\n "}, {"sha": "d2eaa562ddbf866f4d553a862aff304d593e7d7e", "filename": "gcc/testsuite/g++.old-deja/g++.abi/vtable3a.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvtable3a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvtable3a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvtable3a.C?ref=b4e0fcc38e745465c6a92390b1f86df6167b17a5", "patch": "@@ -1,5 +1,5 @@\n // { dg-do run  }\n-// { dg-gpp-additional-files \"vtable3.h\" }\n+// { dg-additional-files \"vtable3.h\" }\n \n // Copyright (C) 2000, 2003 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 4 February 2001 <nathan@codesourcery.com>"}, {"sha": "1a108f8cc1d4c503a50e3064ea9a01c5f3b9a589", "filename": "gcc/testsuite/g++.old-deja/g++.abi/vtable3b.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvtable3b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvtable3b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvtable3b.C?ref=b4e0fcc38e745465c6a92390b1f86df6167b17a5", "patch": "@@ -1,5 +1,5 @@\n // { dg-do run  }\n-// { dg-gpp-additional-files \"vtable3.h\" }\n+// { dg-additional-files \"vtable3.h\" }\n \n // Copyright (C) 2000, 2003 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 4 February 2001 <nathan@codesourcery.com>"}, {"sha": "c7b1365b67931006c9c7b3b451bf515c768d4229", "filename": "gcc/testsuite/g++.old-deja/g++.abi/vtable3c.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvtable3c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvtable3c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvtable3c.C?ref=b4e0fcc38e745465c6a92390b1f86df6167b17a5", "patch": "@@ -1,5 +1,5 @@\n // { dg-do run  }\n-// { dg-gpp-additional-files \"vtable3.h\" }\n+// { dg-additional-files \"vtable3.h\" }\n \n // Copyright (C) 2000, 2003 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 4 February 2001 <nathan@codesourcery.com>"}, {"sha": "82edae697d6934bcc5b7d6c309114eb12a8ce8cd", "filename": "gcc/testsuite/g++.old-deja/g++.abi/vtable3d.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvtable3d.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvtable3d.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvtable3d.C?ref=b4e0fcc38e745465c6a92390b1f86df6167b17a5", "patch": "@@ -1,5 +1,5 @@\n // { dg-do run  }\n-// { dg-gpp-additional-files \"vtable3.h\" }\n+// { dg-additional-files \"vtable3.h\" }\n \n // Copyright (C) 2000, 2003 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 4 February 2001 <nathan@codesourcery.com>"}, {"sha": "e8469cf422e6937c2e80e2637f406f8c49efb124", "filename": "gcc/testsuite/g++.old-deja/g++.abi/vtable3e.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvtable3e.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvtable3e.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvtable3e.C?ref=b4e0fcc38e745465c6a92390b1f86df6167b17a5", "patch": "@@ -1,5 +1,5 @@\n // { dg-do run  }\n-// { dg-gpp-additional-files \"vtable3.h\" }\n+// { dg-additional-files \"vtable3.h\" }\n \n // Copyright (C) 2000, 2003 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 4 February 2001 <nathan@codesourcery.com>"}, {"sha": "c604af88920f5fd3b45cc3d6dc4262c08733a1ba", "filename": "gcc/testsuite/g++.old-deja/g++.abi/vtable3f.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvtable3f.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvtable3f.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvtable3f.C?ref=b4e0fcc38e745465c6a92390b1f86df6167b17a5", "patch": "@@ -1,5 +1,5 @@\n // { dg-do run  }\n-// { dg-gpp-additional-files \"vtable3.h\" }\n+// { dg-additional-files \"vtable3.h\" }\n \n // Copyright (C) 2000, 2003 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 4 February 2001 <nathan@codesourcery.com>"}, {"sha": "9218f40776aebc360a20ba71195d7bfe005b36ec", "filename": "gcc/testsuite/g++.old-deja/g++.abi/vtable3g.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvtable3g.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvtable3g.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvtable3g.C?ref=b4e0fcc38e745465c6a92390b1f86df6167b17a5", "patch": "@@ -1,5 +1,5 @@\n // { dg-do run  }\n-// { dg-gpp-additional-files \"vtable3.h\" }\n+// { dg-additional-files \"vtable3.h\" }\n \n // Copyright (C) 2000, 2003 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 4 February 2001 <nathan@codesourcery.com>"}, {"sha": "1a756fe62d50e986a0923e3e56c2b8a93400f633", "filename": "gcc/testsuite/g++.old-deja/g++.abi/vtable3h.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvtable3h.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvtable3h.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvtable3h.C?ref=b4e0fcc38e745465c6a92390b1f86df6167b17a5", "patch": "@@ -1,5 +1,5 @@\n // { dg-do run  }\n-// { dg-gpp-additional-files \"vtable3.h\" }\n+// { dg-additional-files \"vtable3.h\" }\n \n // Copyright (C) 2000, 2003 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 4 February 2001 <nathan@codesourcery.com>"}, {"sha": "a71087bd4b3b930c3ca5c8a0943fa121e890fc19", "filename": "gcc/testsuite/g++.old-deja/g++.abi/vtable3i.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvtable3i.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvtable3i.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvtable3i.C?ref=b4e0fcc38e745465c6a92390b1f86df6167b17a5", "patch": "@@ -1,5 +1,5 @@\n // { dg-do run  }\n-// { dg-gpp-additional-files \"vtable3.h\" }\n+// { dg-additional-files \"vtable3.h\" }\n \n // Copyright (C) 2000, 2003 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 4 February 2001 <nathan@codesourcery.com>"}, {"sha": "de4f590def59c5a8be8a01cd9000ae8d5f546d36", "filename": "gcc/testsuite/g++.old-deja/g++.abi/vtable3j.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvtable3j.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvtable3j.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvtable3j.C?ref=b4e0fcc38e745465c6a92390b1f86df6167b17a5", "patch": "@@ -1,5 +1,5 @@\n // { dg-do run  }\n-// { dg-gpp-additional-files \"vtable3.h\" }\n+// { dg-additional-files \"vtable3.h\" }\n \n // Copyright (C) 2000, 2003 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 4 February 2001 <nathan@codesourcery.com>"}, {"sha": "23295ea363da7b926f49bec04c0ecfe8e69aa940", "filename": "gcc/testsuite/g++.old-deja/g++.oliva/linkage1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Flinkage1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Flinkage1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Flinkage1.C?ref=b4e0fcc38e745465c6a92390b1f86df6167b17a5", "patch": "@@ -1,5 +1,5 @@\n // { dg-do link }\n-// { dg-gpp-additional-sources \" linkage1-main.cc\" }\n+// { dg-additional-sources \" linkage1-main.cc\" }\n \n // Copyright 2002 Free Software Foundation\n "}, {"sha": "a60c865935cc40b413726975c8ea4e512ad24aae", "filename": "gcc/testsuite/g++.old-deja/g++.other/comdat1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcomdat1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcomdat1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcomdat1.C?ref=b4e0fcc38e745465c6a92390b1f86df6167b17a5", "patch": "@@ -1,5 +1,5 @@\n // { dg-do run  }\n-// { dg-gpp-additional-sources \" comdat1-aux.cc\" }\n+// { dg-additional-sources \" comdat1-aux.cc\" }\n // { dg-options \"-O\" }\n // Test that statics in inline functions are unified between\n // translation units.  Currently we handle this by just suppressing"}, {"sha": "5c44d0c33bdba74750050e77071d463b1bead9d8", "filename": "gcc/testsuite/g++.old-deja/g++.other/comdat2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcomdat2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcomdat2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcomdat2.C?ref=b4e0fcc38e745465c6a92390b1f86df6167b17a5", "patch": "@@ -1,5 +1,5 @@\n // { dg-do run  }\n-// { dg-gpp-additional-sources \" comdat2-aux.cc\" }\n+// { dg-additional-sources \" comdat2-aux.cc\" }\n // { dg-options \"-O\" }\n // Test that statics in inline functions are unified between\n // translation units.  Currently we handle this by just suppressing"}, {"sha": "2a538cad9241baf62b2ebadc411a3258408b0478", "filename": "gcc/testsuite/g++.old-deja/g++.other/comdat3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcomdat3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcomdat3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcomdat3.C?ref=b4e0fcc38e745465c6a92390b1f86df6167b17a5", "patch": "@@ -1,5 +1,5 @@\n // { dg-do run  }\n-// { dg-gpp-additional-sources \" comdat3-aux.cc\" }\n+// { dg-additional-sources \" comdat3-aux.cc\" }\n // Test that duplicate elimination of implicit instantiations of static\n // data members works properly.\n "}, {"sha": "e813d20b15b0640afecfe415f9980111ea00b7ff", "filename": "gcc/testsuite/g++.old-deja/g++.other/ctor1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fctor1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fctor1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fctor1.C?ref=b4e0fcc38e745465c6a92390b1f86df6167b17a5", "patch": "@@ -1,5 +1,5 @@\n // { dg-do run  }\n-// { dg-gpp-additional-sources \" ctor1-aux.cc\" }\n+// { dg-additional-sources \" ctor1-aux.cc\" }\n \n // Origin: Mark Mitchell <mark@codesourcery.com>\n "}, {"sha": "21d8b334732fd606afbb41dce4c6940902ae626c", "filename": "gcc/testsuite/g++.old-deja/g++.pt/instantiate5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Finstantiate5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Finstantiate5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Finstantiate5.C?ref=b4e0fcc38e745465c6a92390b1f86df6167b17a5", "patch": "@@ -1,5 +1,5 @@\n // { dg-do link  }\n-// { dg-gpp-additional-sources \" instantiate5.cc instantiate5-main.cc\" }\n+// { dg-additional-sources \" instantiate5.cc instantiate5-main.cc\" }\n \n // `global constructors' are given the same name, based on foo(), on\n // both translation units, which is wrong, because it must be possible"}, {"sha": "9b468115a944c1343d55da712fb6b872548fbe00", "filename": "gcc/testsuite/gcc.dg/special/20000419-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2F20000419-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2F20000419-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2F20000419-2.c?ref=b4e0fcc38e745465c6a92390b1f86df6167b17a5", "patch": "@@ -1,6 +1,7 @@\n /* A static function with a global alias should not get 'defined but\n    not used' warnings.  Exposed by Linux kernel.  */\n /* { dg-do compile } */\n+/* { dg-require-alias } */\n /* { dg-options \"-Wall\" } */\n \n extern void do_something (void);"}, {"sha": "6798c5be4c656ad8c0aa3b80541932795a6e20c0", "filename": "gcc/testsuite/gcc.dg/special/alias-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Falias-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Falias-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Falias-1.c?ref=b4e0fcc38e745465c6a92390b1f86df6167b17a5", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do link } */\n+/* { dg-require-alias \"\" } */\n \n #include <stdlib.h>\n "}, {"sha": "4cc8ce150f11fa32d93b61470ebf7696c113d14a", "filename": "gcc/testsuite/gcc.dg/special/alias-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Falias-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Falias-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Falias-2.c?ref=b4e0fcc38e745465c6a92390b1f86df6167b17a5", "patch": "@@ -1,5 +1,6 @@\n /* PR 3997 */\n /* { dg-do run } */\n+/* { dg-require-alias \"\" } */\n \n extern void abort (void);\n extern void exit (int);"}, {"sha": "835233f1d4b631f889b5ba11050140e0bc022de4", "filename": "gcc/testsuite/gcc.dg/special/ecos.exp", "status": "removed", "additions": 0, "deletions": 179, "changes": 179, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7786a3e47a6c81971f0eea5b4ebbc0745cdfbcb3/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fecos.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7786a3e47a6c81971f0eea5b4ebbc0745cdfbcb3/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fecos.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fecos.exp?ref=7786a3e47a6c81971f0eea5b4ebbc0745cdfbcb3", "patch": "@@ -1,179 +0,0 @@\n-#   Copyright (C) 1999, 2000, 2001 Free Software Foundation, Inc.\n-\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2 of the License, or\n-# (at your option) any later version.\n-# \n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-# \n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  \n-\n-# Please email any bugs, comments, and/or additions to this file to:\n-# jlarmour@cygnus.co.uk\n-\n-# This file was written by Jonathan Larmour (jlarmour@cygnus.co.uk).\n-\n-# GCC testsuite that uses the `dg.exp' driver.\n-\n-# Load support procs.\n-load_lib gcc-dg.exp\n-\n-###############################\n-# proc gcc_target_object_format {}\n-###############################\n-# has been moved to:  gcc/testsuite/lib/file-format.exp\n-\n-###############################\n-# proc check_weak_available { }\n-###############################\n-# has been moved to:  gcc/testsuite/lib/target-supports.exp\n-\n-##########\n-# weak-1.c\n-##########\n-\n-if { [ check_weak_available ] == 1 } {\n-    dg-init\n-\n-    set lines [gcc_target_compile \"$srcdir/$subdir/weak-1a.c\" \"weak-1a.o\" object \"\"]\n-    if ![string match \"\" $lines] then {\n-        fail \"weak-1a.o\"\n-    } else {\n-        dg-runtest \"$srcdir/$subdir/weak-1.c\" \"weak-1a.o\" \"\" \n-        file delete weak-1a.o\n-    }\n-    dg-finish\n-} elseif { [ check_weak_available ] == 0 } {\n-    unsupported \"weak-1.c\"\n-} else {\n-    unresolved \"weak-1.c\"\n-}\n-\n-##########\n-# weak-2.c\n-##########\n-\n-if { [ check_weak_available ] == 1 } {\n-    dg-init\n-    \n-    set lines [gcc_target_compile \"$srcdir/$subdir/weak-2a.c\" \"weak-2a.o\" object \"\"]\n-    if ![string match \"\" $lines] then {\n-        fail \"weak-2a.o\"\n-    } else {\n-        set lines [gcc_target_compile \"$srcdir/$subdir/weak-2b.c\" \"weak-2b.o\" object \"\"]\n-        if ![string match \"\" $lines] then {\n-            fail \"weak-2b.o\"\n-        } else {\n-            dg-runtest \"$srcdir/$subdir/weak-2.c\" \"weak-2a.o weak-2b.o\" \"\" \n-            file delete weak-2a.o weak-2b.o\n-        }\n-    }\n-    dg-finish\n-} elseif { [ check_weak_available ] == 0 } {\n-    unsupported \"weak-2.c\"\n-} else {\n-    unresolved \"weak-2.c\"\n-}\n-\n-###########\n-# alias-1.c\n-###########\n-\n-dg-init\n-switch [check_alias_available \"$srcdir/$subdir/alias-1.c\"] {\n-    yes     { dg-runtest \"$srcdir/$subdir/alias-1.c\" \"\" \"\" }\n-    no      { unsupported \"alias-1.c\" }\n-    default { fail \"alias-1.c\" }\n-}\n-dg-finish\n-\n-###########\n-# alias-2.c\n-###########\n-\n-dg-init\n-switch [check_alias_available \"$srcdir/$subdir/alias-2.c\"] {\n-    yes     { dg-runtest \"$srcdir/$subdir/alias-2.c\" \"\" \"\" }\n-    no      { unsupported \"alias-2.c\" }\n-    default { fail \"alias-2.c\" }\n-}\n-dg-finish\n-\n-###########\n-# wkali-1.c\n-###########\n-\n-if { [ check_weak_available ] == 1 } {\n-    dg-init\n-    switch [check_alias_available \"$srcdir/$subdir/wkali-1.c\"] {\n-        yes     { dg-runtest \"$srcdir/$subdir/wkali-1.c\" \"\" \"\" }\n-        no      { unsupported \"wkali-1.c\" }\n-        default { fail \"wkali-1.c\" }\n-    }\n-    dg-finish\n-} elseif { [ check_weak_available ] == 0 } {\n-    unsupported \"wkali-1.c\"\n-} else {\n-    unresolved \"wkali-1.c\"\n-}\n-\n-###########\n-# wkali-2.c\n-###########\n-\n-if { [ check_weak_available ] == 1 } {\n-    dg-init\n-    set lines [gcc_target_compile \"$srcdir/$subdir/wkali-2a.c\" \"wkali-2a.o\" object \"\"]\n-    if ![string match \"\" $lines] then {\n-        fail \"wkali-2a.o\"\n-    } else {\n-        set lines [gcc_target_compile \"$srcdir/$subdir/wkali-2b.c\" \"wkali-2b.o\" object \"\"]\n-        if [string match \"*only weak aliases*\" $lines] then {\n-\t    xfail \"wkali-2b.o\"\n-\t    file delete $srcdir/$subdir/wkali-2.exe\n-        } elseif ![string match \"\" $lines] then {\n-            fail \"wkali-2b.o\"\n-        } else {\n-            dg-runtest \"$srcdir/$subdir/wkali-2.c\" \"wkali-2a.o wkali-2b.o\" \"\"\n-            file delete wkali-2a.o wkali-2b.o\n-        }\n-    }\n-    dg-finish\n-} elseif { [ check_weak_available ] == 0 } {\n-    unsupported \"wkali-2.c\"\n-} else {\n-    unresolved \"wkali-2.c\"\n-}\n-\n-###########\n-# gcsec-1.c\n-###########\n-\n-# Check if the ld used by gcc supports --gc-sections.\n-set gcc_ld [lindex [gcc_target_compile \"-print-prog-name=ld\" \"\" \"none\" \"\"] 0]\n-set ld_output [remote_exec host \"$gcc_ld\" \"--help\"]\n-\n-# AIX gld supports garbage collection. But AIX gcc does not support \n-# -ffunction-sections or -fdata-sections.\n-if { [ string first \"--gc-sections\" $ld_output ] >= 0 \n-     && ! [istarget rs6000-*-aix*]\n-     && ! [istarget powerpc*-*-aix*] } {\n-\n-    dg-init\n-    if [isnative] {\n-\tdg-runtest \"$srcdir/$subdir/gcsec-1.c\" \"-ffunction-sections -fdata-sections -Wl,--gc-sections -static\" \"\"\n-    } else {\n-\tdg-runtest \"$srcdir/$subdir/gcsec-1.c\" \"-ffunction-sections -fdata-sections -Wl,--gc-sections\" \"\"\n-    }\n-    dg-finish\n-} else {\n-    unsupported \"gcsec-1.c\"\n-}\n-\n-### EOF ecos.exp"}, {"sha": "f2a63d1b520d2f6eccb0d4da6967c5a77ac6d469", "filename": "gcc/testsuite/gcc.dg/special/gcsec-1.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fgcsec-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fgcsec-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fgcsec-1.c?ref=b4e0fcc38e745465c6a92390b1f86df6167b17a5", "patch": "@@ -1,4 +1,10 @@\n-/* { dg-do run } */\n+/* AIX gld supports garbage collection. But AIX gcc does not support \n+   -ffunction-sections or -fdata-sections.  */\n+/* { dg-do run { xfail rs6000-*-aix* powerpc*-*-aix* } } */\n+/* { dg-require-gc-sections \"\" } */\n+\n+/* { dg-options \"-ffunction-sections -fdata-sections -Wl,--gc-sections -static\" } */\n+/* { dg-options \"-ffunction-sections -fdata-sections -Wl,--gc-sections -static\" { target native } } */\n \n #include <stdlib.h>\n "}, {"sha": "d661e053df6e4ec0a0183ffa94d9f67ad27e0eeb", "filename": "gcc/testsuite/gcc.dg/special/special.exp", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fspecial.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fspecial.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fspecial.exp?ref=b4e0fcc38e745465c6a92390b1f86df6167b17a5", "patch": "@@ -1,4 +1,4 @@\n-#   Copyright (C) 2001 Free Software Foundation, Inc.\n+#   Copyright (C) 2001, 2003 Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -24,17 +24,9 @@\n # Load support procs.\n load_lib gcc-dg.exp\n \n-##############\n-# 20000419-2.c\n-##############\n-\n dg-init\n-switch [check_alias_available \"$srcdir/$subdir/20000419-2.c\"] {\n-    yes     { dg-runtest \"$srcdir/$subdir/20000419-2.c\" \"\" \"\" }\n-    no      { unsupported \"20000419-2.c\" }\n-    default { fail \"20000419-2.c\" }\n-}\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*\\[1-9\\].c]] \\\n+\t\"\" \"\"\n dg-finish\n \n-\n ### EOF special.exp"}, {"sha": "b7fb909716a040cd1067ccb48312c03bdc82e84b", "filename": "gcc/testsuite/gcc.dg/special/weak-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fweak-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fweak-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fweak-1.c?ref=b4e0fcc38e745465c6a92390b1f86df6167b17a5", "patch": "@@ -1,4 +1,6 @@\n /* { dg-do run } */\n+/* { dg-require-weak \"\" } */\n+/* { dg-additional-sources weak-1a.c } */\n \n #include <stdlib.h>\n "}, {"sha": "bc481430eb5985bdfe0883861e6e650bd88a7084", "filename": "gcc/testsuite/gcc.dg/special/weak-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fweak-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fweak-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fweak-2.c?ref=b4e0fcc38e745465c6a92390b1f86df6167b17a5", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do run } */\n+/* { dg-additional-sources \"weak-2a.c weak-2b.c\" } */\n \n #include <stdlib.h>\n "}, {"sha": "9d97b8e1288295687c4f0b22d229df747c41b4db", "filename": "gcc/testsuite/gcc.dg/special/wkali-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fwkali-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fwkali-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fwkali-1.c?ref=b4e0fcc38e745465c6a92390b1f86df6167b17a5", "patch": "@@ -1,4 +1,6 @@\n /* { dg-do link } */\n+/* { dg-require-weak \"\" } */\n+/* { dg-require-alias \"\" } */\n \n #include <stdlib.h>\n "}, {"sha": "b53d4f270243e86882a95efc55c9a9eaa2b6f78a", "filename": "gcc/testsuite/gcc.dg/special/wkali-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fwkali-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fwkali-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fwkali-2.c?ref=b4e0fcc38e745465c6a92390b1f86df6167b17a5", "patch": "@@ -1,4 +1,6 @@\n /* { dg-do run } */\n+/* { dg-require-weak \"\" } */\n+/* { dg-additional-sources \"wkali-2a.c wkali-2b.c\" } */\n \n #include <stdlib.h>\n "}, {"sha": "1efb93d427251f74f4bc232a6dd5ba5c65ed81ec", "filename": "gcc/testsuite/lib/g++-dg.exp", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Flib%2Fg%2B%2B-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Flib%2Fg%2B%2B-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fg%2B%2B-dg.exp?ref=b4e0fcc38e745465c6a92390b1f86df6167b17a5", "patch": "@@ -26,20 +26,3 @@ proc g++-dg-test { prog do_what extra_tool_flags } {\n proc g++-dg-prune { system text } {\n     return [gcc-dg-prune $system $text]\n }\n-\n-# Record additional sources files that must be compiled along with the\n-# main source file.\n-\n-proc dg-gpp-additional-sources { args } {\n-    global additional_sources\n-    set additional_sources [lindex $args 1]\n-}\n-\n-# Record additional files -- other than source files -- that must be\n-# present on the system where the compiler runs.\n-\n-proc dg-gpp-additional-files { args } {\n-    global additional_files\n-    set additional_files [lindex $args 1]\n-}\n-"}, {"sha": "821c3d7c758bc9537b130166bac85d8d7395124b", "filename": "gcc/testsuite/lib/g++.exp", "status": "modified", "additions": 1, "deletions": 27, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp?ref=b4e0fcc38e745465c6a92390b1f86df6167b17a5", "patch": "@@ -31,8 +31,6 @@ load_lib gcc-defs.exp\n \n \n set gpp_compile_options \"\"\n-set additional_sources \"\"\n-set additional_files \"\"\n \n #\n # g++_version -- extract and print the version number of the compiler\n@@ -306,34 +304,10 @@ proc g++_target_compile { source dest type options } {\n \texec rm -f $rponame\n     }\n \n-    global additional_sources\n-    global additional_files\n-    set to_download \"\"\n-    if { $additional_sources != \"\" } then {\n-\tif [is_remote host] {\n-\t    lappend options \"additional_flags=$additional_sources\"\n-\t}\n-\tregsub -all \"^| \" $additional_sources \" [file dirname $source]/\" additional_sources\n-\tif ![is_remote host] {\n-\t    lappend options \"additional_flags=$additional_sources\"\n-\t}\n-\tset to_download [concat $to_download $additional_sources]\n-    }\n-    if { $additional_files != \"\" } then { \n-\tregsub -all \" \" $additional_files \" [file dirname $source]/\" additional_files\n-\tset to_download [concat $to_download $additional_files]\n-    }\n-    if [is_remote host] {\n-\tforeach file $to_download {\n-\t    remote_download host $file\n-\t}\n-    }\n+    set options [dg-additional-files-options $options $source]\n \n     set result [target_compile $source $dest $type $options]\n \n-    set additional_sources \"\"\n-    set additional_files \"\"\n-\n     return $result\n }\n "}, {"sha": "bb2369c21100b3e9a21b2a5198b5df1f7cdaaafd", "filename": "gcc/testsuite/lib/gcc-defs.exp", "status": "modified", "additions": 54, "deletions": 1, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Flib%2Fgcc-defs.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Flib%2Fgcc-defs.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-defs.exp?ref=b4e0fcc38e745465c6a92390b1f86df6167b17a5", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 2001 Free Software Foundation, Inc.\n+# Copyright (C) 2001, 2003 Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -164,3 +164,56 @@ if { [info procs runtest_file_p] == \"\" } then {\n \treturn 1\n     }\n }\n+\n+# Record additional sources files that must be compiled along with the\n+# main source file.\n+\n+set additional_sources \"\"\n+\n+proc dg-additional-sources { args } {\n+    global additional_sources\n+    set additional_sources [lindex $args 1]\n+}\n+\n+# Record additional files -- other than source files -- that must be\n+# present on the system where the compiler runs.\n+\n+set additional_files \"\"\n+\n+proc dg-additional-files { args } {\n+    global additional_files\n+    set additional_files [lindex $args 1]\n+}\n+\n+# Return an updated version of OPTIONS that mentions any additional\n+# source files registered with dg-additional-sources.  SOURCE is the\n+# name of the test case.\n+\n+proc dg-additional-files-options { options source } {\n+    global additional_sources\n+    global additional_files\n+    set to_download [list]\n+    if { $additional_sources != \"\" } then {\n+\tif [is_remote host] {\n+\t    lappend options \"additional_flags=$additional_sources\"\n+\t}\n+\tregsub -all \"^| \" $additional_sources \" [file dirname $source]/\" additional_sources\n+\tif ![is_remote host] {\n+\t    lappend options \"additional_flags=$additional_sources\"\n+\t}\n+\tset to_download [concat $to_download $additional_sources]\n+\tset additional_sources \"\"\n+    }\n+    if { $additional_files != \"\" } then { \n+\tregsub -all \" \" $additional_files \" [file dirname $source]/\" additional_files\n+\tset to_download [concat $to_download $additional_files]\n+\tset additional_files \"\"\n+    }\n+    if [is_remote host] {\n+\tforeach file $to_download {\n+\t    remote_download host $file\n+\t}\n+    }\n+\n+    return $options\n+}"}, {"sha": "09fd618d90a02ea60935fd2ea91f7acc1bcd43c1", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=b4e0fcc38e745465c6a92390b1f86df6167b17a5", "patch": "@@ -250,3 +250,47 @@ proc gcc-dg-debug-runtest { target_compile trivial opt_opts testcases } {\n \t}\n     }\n }\n+\n+# If this target does not support weak symbols, skip this test.\n+\n+proc dg-require-weak { args } {\n+    upvar dg-do-what dg-do-what\n+    upvar name name\n+\n+    set weak_available [ check_weak_available ]\n+    if { $weak_available == -1 } {\n+\tunresolved \"$name\"\n+    }\n+    if { $weak_available != 1 } {\n+\tset dg-do-what [list [lindex $dg_do_what 0] \"N\" \"P\"]\n+\treturn\n+    }\n+}\n+\n+# If this target does not support the \"alias\" attribute, skip this\n+# test.\n+\n+proc dg-require-alias { args } {\n+    upvar dg-do-what dg-do-what\n+    upvar name name\n+\n+    set alias_available [ check_alias_available ]\n+    if { $alias_available == -1 } {\n+\tunresolved \"$name\"\n+    }\n+    if { $alias_available < 2 } {\n+\tset dg-do-what [list [lindex $dg_do_what 0] \"N\" \"P\"]\n+\treturn\n+    }\n+}\n+\n+# If this target's linker does not support the --gc-sections flag,\n+# skip this test.\n+\n+proc dg-require-gc-sections { args } {\n+    if { ![ check_gc_sections_available ] } {\n+\tupvar dg-do-what dg-do-what\n+\tset dg-do-what [list [lindex $dg_do_what 0] \"N\" \"P\"]\n+\treturn\n+    }\n+}"}, {"sha": "bec0e2e42587e41ea7070216a4379e1b9662baeb", "filename": "gcc/testsuite/lib/gcc.exp", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Flib%2Fgcc.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Flib%2Fgcc.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc.exp?ref=b4e0fcc38e745465c6a92390b1f86df6167b17a5", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 1992, 1993, 1994, 1996, 1997, 1999, 2000, 2001 Free Software Foundation, Inc.\n+# Copyright (C) 1992, 1993, 1994, 1996, 1997, 1999, 2000, 2001, 2003 Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -153,5 +153,6 @@ proc gcc_target_compile { source dest type options } {\n \tlappend options \"timeout=[target_info gcc,timeout]\"\n     }\n     lappend options \"compiler=$GCC_UNDER_TEST\"\n+    set options [dg-additional-files-options $options $source]\n     return [target_compile $source $dest $type $options]\n }"}, {"sha": "0944777c9d27c4c12ad28ddf0d98574ed7c918a4", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 37, "deletions": 15, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0fcc38e745465c6a92390b1f86df6167b17a5/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=b4e0fcc38e745465c6a92390b1f86df6167b17a5", "patch": "@@ -1,4 +1,4 @@\n-#   Copyright (C) 1999, 2001 Free Software Foundation, Inc.\n+#   Copyright (C) 1999, 2001, 2003 Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -67,24 +67,28 @@ proc check_weak_available { } {\n ###############################\n \n # Determine if the target toolchain supports the alias attribute.\n-# Parameter is the pathname of a file that can be used to test the alias support.\n-# Returns yes if it does.\n-# Returns no if it does not.\n-# Returns dontknow if something went wrong\n-# For an example of the use of this function, see gcc.dg/special/ecos.exp\n \n-proc check_alias_available { testfile } {\n+# Returns 2 if the target supports aliases.  Returns 1 if the target\n+# only supports weak aliased.  Returns 0 if the target does not\n+# support aliases at all.  Returns -1 if support for aliases could not\n+# be determined.\n+\n+proc check_alias_available { } {\n     global alias_available_saved\n     \n     if [info exists alias_available_saved] {\n         verbose \"check_alias_available  returning saved $alias_available_saved\" 2\n     } else {\n-        verbose \"check_alias_available  compiling testfile $testfile\" 2\n-\tset lines [gcc_target_compile $testfile \"tmp.o\" object \"\"]\n-\t\n+        verbose \"check_alias_available  compiling testfile\" 2\n+\tset f [open \"tmp.c\" \"w\"]\n+\tputs $f \"void f() __attribute__((alias(\\\"g\\\")));\"\n+\tclose $f\n+\tset lines [gcc_target_compile \"tmp.c\" \"tmp.o\" object \"\"]\n+\tfile delete \"tmp.c\"\n+\n \tif [string match \"\" $lines] then {\n \t    # No error messages, everything is OK.\n-\t    set alias_available_saved yes\n+\t    set alias_available_saved 2\n \t} else {\n \t    if [regexp \"alias definitions not supported\" $lines] {\n \t\tverbose \"check_alias_available  target does not support aliases\" 2\n@@ -93,16 +97,16 @@ proc check_alias_available { testfile } {\n \n \t\tif { $objformat == \"elf\" } {\n \t\t    verbose \"check_alias_available  but target uses ELF format, so it ought to\" 2\n-\t\t    set alias_available_saved dontknow\n+\t\t    set alias_available_saved -1\n \t\t} else {\n-\t\t    set alias_available_saved no\n+\t\t    set alias_available_saved 0\n \t\t}\n \t    } else {\n \t\tif [regexp \"only weak aliases are supported\" $lines] {\n \t\tverbose \"check_alias_available  target supports only weak aliases\" 2\n-\t\tset alias_available_saved no\n+\t\tset alias_available_saved 1\n \t\t} else {\n-\t\t    set alias_available_saved dontknow\n+\t\t    set alias_available_saved -1\n \t\t}\n \t    }\n \t}\n@@ -112,3 +116,21 @@ proc check_alias_available { testfile } {\n \n     return $alias_available_saved\n }\n+\n+# Returns true if --gc-sections is supported on the target.\n+\n+proc check_gc_sections_available { } {\n+    global gc_sections_available_saved\n+\n+    if {![info exists alias_available_saved]} {\n+\t# Check if the ld used by gcc supports --gc-sections.\n+\tset gcc_ld [lindex [gcc_target_compile \"-print-prog-name=ld\" \"\" \"none\" \"\"] 0]\n+\tset ld_output [remote_exec host \"$gcc_ld\" \"--help\"]\n+\tif { [ string first \"--gc-sections\" $ld_output ] >= 0 } {\n+\t    set gc_sections_available_saved 1\n+\t} else {\n+\t    set gc_sections_available_saved 0\n+\t}\n+    }\n+    return $gc_sections_available_saved\n+}"}]}