{"sha": "7773dca7d22dad2a9e6d2385584411308913ab1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzc3M2RjYTdkMjJkYWQyYTllNmQyMzg1NTg0NDExMzA4OTEzYWIxYg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2017-09-05T19:57:09Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2017-09-05T19:57:09Z"}, "message": "(decimal_)float_mode_for_size in real.h\n\nThis patch makes the binary float macros in real.h use\nfloat_mode_for_size and adds a corresponding decimal_float_mode_for_size\nfor the decimal macros.\n\n2017-09-05  Richard Sandiford  <richard.sandiford@linaro.org>\n\ngcc/\n\t* machmode.h (decimal_float_mode_for_size): New function.\n\t* real.h (REAL_VALUE_TO_TARGET_LONG_DOUBLE): Use float_mode_for_size.\n\t(REAL_VALUE_TO_TARGET_DOUBLE): Likewise.\n\t(REAL_VALUE_TO_TARGET_SINGLE): Likewise.\n\t(REAL_VALUE_TO_TARGET_DECIMAL128): Use decimal_float_mode_for_size.\n\t(REAL_VALUE_TO_TARGET_DECIMAL64): Likewise.\n\t(REAL_VALUE_TO_TARGET_DECIMAL32): Likewise.\n\nFrom-SVN: r251727", "tree": {"sha": "9279a37b868d19fa66cea7d4844d640febbd9883", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9279a37b868d19fa66cea7d4844d640febbd9883"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7773dca7d22dad2a9e6d2385584411308913ab1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7773dca7d22dad2a9e6d2385584411308913ab1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7773dca7d22dad2a9e6d2385584411308913ab1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7773dca7d22dad2a9e6d2385584411308913ab1b/comments", "author": null, "committer": null, "parents": [{"sha": "f4b316470bf7cccab22fbb97d1b6c541fcfc2855", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4b316470bf7cccab22fbb97d1b6c541fcfc2855", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4b316470bf7cccab22fbb97d1b6c541fcfc2855"}], "stats": {"total": 32, "additions": 26, "deletions": 6}, "files": [{"sha": "7fbade74ed75ac18dfc14346cae5f9fa58163f81", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7773dca7d22dad2a9e6d2385584411308913ab1b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7773dca7d22dad2a9e6d2385584411308913ab1b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7773dca7d22dad2a9e6d2385584411308913ab1b", "patch": "@@ -1,3 +1,13 @@\n+2017-09-05  Richard Sandiford  <richard.sandiford@linaro.org>\n+\n+\t* machmode.h (decimal_float_mode_for_size): New function.\n+\t* real.h (REAL_VALUE_TO_TARGET_LONG_DOUBLE): Use float_mode_for_size.\n+\t(REAL_VALUE_TO_TARGET_DOUBLE): Likewise.\n+\t(REAL_VALUE_TO_TARGET_SINGLE): Likewise.\n+\t(REAL_VALUE_TO_TARGET_DECIMAL128): Use decimal_float_mode_for_size.\n+\t(REAL_VALUE_TO_TARGET_DECIMAL64): Likewise.\n+\t(REAL_VALUE_TO_TARGET_DECIMAL32): Likewise.\n+\n 2017-09-05  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \t* builtins.c (expand_builtin_powi): Use int_mode_for_size."}, {"sha": "d8344a9636996716a7057007dbc8a1c0dbecaffe", "filename": "gcc/machmode.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7773dca7d22dad2a9e6d2385584411308913ab1b/gcc%2Fmachmode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7773dca7d22dad2a9e6d2385584411308913ab1b/gcc%2Fmachmode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmachmode.h?ref=7773dca7d22dad2a9e6d2385584411308913ab1b", "patch": "@@ -652,6 +652,15 @@ float_mode_for_size (unsigned int size)\n   return dyn_cast <scalar_float_mode> (mode_for_size (size, MODE_FLOAT, 0));\n }\n \n+/* Likewise for MODE_DECIMAL_FLOAT.  */\n+\n+inline opt_scalar_float_mode\n+decimal_float_mode_for_size (unsigned int size)\n+{\n+  return dyn_cast <scalar_float_mode>\n+    (mode_for_size (size, MODE_DECIMAL_FLOAT, 0));\n+}\n+\n /* Similar to mode_for_size, but find the smallest mode for a given width.  */\n \n extern machine_mode smallest_mode_for_size (unsigned int, enum mode_class);"}, {"sha": "c034fd945cfe1e1cb908f1ee9560e09557361c92", "filename": "gcc/real.h", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7773dca7d22dad2a9e6d2385584411308913ab1b/gcc%2Freal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7773dca7d22dad2a9e6d2385584411308913ab1b/gcc%2Freal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.h?ref=7773dca7d22dad2a9e6d2385584411308913ab1b", "patch": "@@ -383,27 +383,28 @@ extern const struct real_format arm_half_format;\n /* IN is a REAL_VALUE_TYPE.  OUT is an array of longs.  */\n #define REAL_VALUE_TO_TARGET_LONG_DOUBLE(IN, OUT)\t\t\t\\\n   real_to_target (OUT, &(IN),\t\t\t\t\t\t\\\n-\t\t  mode_for_size (LONG_DOUBLE_TYPE_SIZE, MODE_FLOAT, 0))\n+\t\t  float_mode_for_size (LONG_DOUBLE_TYPE_SIZE).require ())\n \n #define REAL_VALUE_TO_TARGET_DOUBLE(IN, OUT) \\\n-  real_to_target (OUT, &(IN), mode_for_size (64, MODE_FLOAT, 0))\n+  real_to_target (OUT, &(IN), float_mode_for_size (64).require ())\n \n /* IN is a REAL_VALUE_TYPE.  OUT is a long.  */\n #define REAL_VALUE_TO_TARGET_SINGLE(IN, OUT) \\\n-  ((OUT) = real_to_target (NULL, &(IN), mode_for_size (32, MODE_FLOAT, 0)))\n+  ((OUT) = real_to_target (NULL, &(IN), float_mode_for_size (32).require ()))\n \n /* Real values to IEEE 754 decimal floats.  */\n \n /* IN is a REAL_VALUE_TYPE.  OUT is an array of longs.  */\n #define REAL_VALUE_TO_TARGET_DECIMAL128(IN, OUT) \\\n-  real_to_target (OUT, &(IN), mode_for_size (128, MODE_DECIMAL_FLOAT, 0))\n+  real_to_target (OUT, &(IN), decimal_float_mode_for_size (128).require ())\n \n #define REAL_VALUE_TO_TARGET_DECIMAL64(IN, OUT) \\\n-  real_to_target (OUT, &(IN), mode_for_size (64, MODE_DECIMAL_FLOAT, 0))\n+  real_to_target (OUT, &(IN), decimal_float_mode_for_size (64).require ())\n \n /* IN is a REAL_VALUE_TYPE.  OUT is a long.  */\n #define REAL_VALUE_TO_TARGET_DECIMAL32(IN, OUT) \\\n-  ((OUT) = real_to_target (NULL, &(IN), mode_for_size (32, MODE_DECIMAL_FLOAT, 0)))\n+  ((OUT) = real_to_target (NULL, &(IN), \\\n+\t\t\t   decimal_float_mode_for_size (32).require ()))\n \n extern REAL_VALUE_TYPE real_value_truncate (format_helper, REAL_VALUE_TYPE);\n "}]}