{"sha": "5bde96d27e87d819a33236ad3a3ee718fe633d37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJkZTk2ZDI3ZTg3ZDgxOWEzMzIzNmFkM2EzZWU3MThmZTYzM2QzNw==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2009-07-10T15:25:31Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2009-07-10T15:25:31Z"}, "message": "c99_functions.c (ccoshf, [...]): Fix errant minus.\n\n2009-07-10  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\t* c99_functions.c (ccoshf, ccosh, ccoshl, ctanhf, ctanh, ctanl):\n\tFix errant minus.\n\nFrom-SVN: r149479", "tree": {"sha": "21415703fb34923e790c050eaecd31c0d7748265", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21415703fb34923e790c050eaecd31c0d7748265"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bde96d27e87d819a33236ad3a3ee718fe633d37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bde96d27e87d819a33236ad3a3ee718fe633d37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bde96d27e87d819a33236ad3a3ee718fe633d37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bde96d27e87d819a33236ad3a3ee718fe633d37/comments", "author": null, "committer": null, "parents": [{"sha": "3c92a2b888436e11fbf7c78d3e8eb133b6d3fd4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c92a2b888436e11fbf7c78d3e8eb133b6d3fd4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c92a2b888436e11fbf7c78d3e8eb133b6d3fd4e"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "6ffd83d40ec3d0c833020c99e1b7e7d92551ac14", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bde96d27e87d819a33236ad3a3ee718fe633d37/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bde96d27e87d819a33236ad3a3ee718fe633d37/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=5bde96d27e87d819a33236ad3a3ee718fe633d37", "patch": "@@ -1,3 +1,8 @@\n+2009-07-10  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\t* c99_functions.c (ccoshf, ccosh, ccoshl, ctanhf, ctanh, ctanl):\n+\tFix errant minus.\n+ \n 2009-07-08  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libfortran/40330"}, {"sha": "63af2a51f3a0222493b97a972d4b11773b65fed9", "filename": "libgfortran/intrinsics/c99_functions.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bde96d27e87d819a33236ad3a3ee718fe633d37/libgfortran%2Fintrinsics%2Fc99_functions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bde96d27e87d819a33236ad3a3ee718fe633d37/libgfortran%2Fintrinsics%2Fc99_functions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fc99_functions.c?ref=5bde96d27e87d819a33236ad3a3ee718fe633d37", "patch": "@@ -1165,7 +1165,7 @@ csinhl (long double complex a)\n #endif\n \n \n-/* cosh(a + i b) = cosh(a) cos(b) - i sinh(a) sin(b)  */\n+/* cosh(a + i b) = cosh(a) cos(b) + i sinh(a) sin(b)  */\n #if !defined(HAVE_CCOSHF)\n #define HAVE_CCOSHF 1\n float complex\n@@ -1176,7 +1176,7 @@ ccoshf (float complex a)\n \n   r = REALPART (a);\n   i = IMAGPART (a);\n-  COMPLEX_ASSIGN (v, coshf (r) * cosf (i), - (sinhf (r) * sinf (i)));\n+  COMPLEX_ASSIGN (v, coshf (r) * cosf (i), sinhf (r) * sinf (i));\n   return v;\n }\n #endif\n@@ -1191,7 +1191,7 @@ ccosh (double complex a)\n \n   r = REALPART (a);\n   i = IMAGPART (a);\n-  COMPLEX_ASSIGN (v, cosh (r) * cos (i), - (sinh (r) * sin (i)));\n+  COMPLEX_ASSIGN (v, cosh (r) * cos (i),  sinh (r) * sin (i));\n   return v;\n }\n #endif\n@@ -1206,13 +1206,13 @@ ccoshl (long double complex a)\n \n   r = REALPART (a);\n   i = IMAGPART (a);\n-  COMPLEX_ASSIGN (v, coshl (r) * cosl (i), - (sinhl (r) * sinl (i)));\n+  COMPLEX_ASSIGN (v, coshl (r) * cosl (i), sinhl (r) * sinl (i));\n   return v;\n }\n #endif\n \n \n-/* tanh(a + i b) = (tanh(a) + i tan(b)) / (1 - i tanh(a) tan(b))  */\n+/* tanh(a + i b) = (tanh(a) + i tan(b)) / (1 + i tanh(a) tan(b))  */\n #if !defined(HAVE_CTANHF)\n #define HAVE_CTANHF 1\n float complex\n@@ -1224,7 +1224,7 @@ ctanhf (float complex a)\n   rt = tanhf (REALPART (a));\n   it = tanf (IMAGPART (a));\n   COMPLEX_ASSIGN (n, rt, it);\n-  COMPLEX_ASSIGN (d, 1, - (rt * it));\n+  COMPLEX_ASSIGN (d, 1, rt * it);\n \n   return n / d;\n }\n@@ -1241,7 +1241,7 @@ ctanh (double complex a)\n   rt = tanh (REALPART (a));\n   it = tan (IMAGPART (a));\n   COMPLEX_ASSIGN (n, rt, it);\n-  COMPLEX_ASSIGN (d, 1, - (rt * it));\n+  COMPLEX_ASSIGN (d, 1, rt * it);\n \n   return n / d;\n }\n@@ -1258,7 +1258,7 @@ ctanhl (long double complex a)\n   rt = tanhl (REALPART (a));\n   it = tanl (IMAGPART (a));\n   COMPLEX_ASSIGN (n, rt, it);\n-  COMPLEX_ASSIGN (d, 1, - (rt * it));\n+  COMPLEX_ASSIGN (d, 1, rt * it);\n \n   return n / d;\n }"}]}