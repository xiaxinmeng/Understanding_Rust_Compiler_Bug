{"sha": "9498a22f75b078e17591bb9fd2dd67c424e793a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQ5OGEyMmY3NWIwNzhlMTc1OTFiYjlmZDJkZDY3YzQyNGU3OTNhMw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2005-06-17T22:05:47Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-06-17T22:05:47Z"}, "message": "tree-vect-transform.c (vect_do_peeling_for_loop_bound): Use initialize_original_copy_tables and free_original_copy_tables.\n\n        * tree-vect-transform.c (vect_do_peeling_for_loop_bound): Use\n        initialize_original_copy_tables and free_original_copy_tables.\n        (vect_do_peeling_for_alignment): Likewise.\n\nFrom-SVN: r101140", "tree": {"sha": "771406ef318b419fb4f825bdb23a9db480bea5b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/771406ef318b419fb4f825bdb23a9db480bea5b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9498a22f75b078e17591bb9fd2dd67c424e793a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9498a22f75b078e17591bb9fd2dd67c424e793a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9498a22f75b078e17591bb9fd2dd67c424e793a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9498a22f75b078e17591bb9fd2dd67c424e793a3/comments", "author": null, "committer": null, "parents": [{"sha": "d5f261c135df1c044af3d998631066551868071f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5f261c135df1c044af3d998631066551868071f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5f261c135df1c044af3d998631066551868071f"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "f35e4fffb67f40d6d2654334a266aba47852fef6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9498a22f75b078e17591bb9fd2dd67c424e793a3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9498a22f75b078e17591bb9fd2dd67c424e793a3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9498a22f75b078e17591bb9fd2dd67c424e793a3", "patch": "@@ -1,3 +1,9 @@\n+2005-06-17  Richard Henderson  <rth@redhat.com>\n+\n+        * tree-vect-transform.c (vect_do_peeling_for_loop_bound): Use\n+        initialize_original_copy_tables and free_original_copy_tables.\n+        (vect_do_peeling_for_alignment): Likewise.\n+\n 2005-06-17  Pat Haugen  <pthaugen@us.ibm.com>\n \n \t* bb-reorder.c (find_traces_1_round): Use succ block frequency"}, {"sha": "4695e54ead437c109cfb763de1905de4f4f792fc", "filename": "gcc/tree-vect-transform.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9498a22f75b078e17591bb9fd2dd67c424e793a3/gcc%2Ftree-vect-transform.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9498a22f75b078e17591bb9fd2dd67c424e793a3/gcc%2Ftree-vect-transform.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-transform.c?ref=9498a22f75b078e17591bb9fd2dd67c424e793a3", "patch": "@@ -1765,7 +1765,6 @@ static void\n vect_do_peeling_for_loop_bound (loop_vec_info loop_vinfo, tree *ratio,\n \t\t\t\tstruct loops *loops)\n {\n-\n   tree ni_name, ratio_mult_vf_name;\n   struct loop *loop = LOOP_VINFO_LOOP (loop_vinfo);\n   struct loop *new_loop;\n@@ -1778,6 +1777,8 @@ vect_do_peeling_for_loop_bound (loop_vec_info loop_vinfo, tree *ratio,\n   if (vect_print_dump_info (REPORT_DETAILS, UNKNOWN_LOC))\n     fprintf (vect_dump, \"=== vect_do_peeling_for_loop_bound ===\");\n \n+  initialize_original_copy_tables ();\n+\n   /* Generate the following variables on the preheader of original loop:\n \t \n      ni_name = number of iteration the original loop executes\n@@ -1816,7 +1817,7 @@ vect_do_peeling_for_loop_bound (loop_vec_info loop_vinfo, tree *ratio,\n   /* After peeling we have to reset scalar evolution analyzer.  */\n   scev_reset ();\n \n-  return;\n+  free_original_copy_tables ();\n }\n \n \n@@ -2000,6 +2001,8 @@ vect_do_peeling_for_alignment (loop_vec_info loop_vinfo, struct loops *loops)\n   if (vect_print_dump_info (REPORT_DETAILS, UNKNOWN_LOC))\n     fprintf (vect_dump, \"=== vect_do_peeling_for_alignment ===\");\n \n+  initialize_original_copy_tables ();\n+\n   ni_name = vect_build_loop_niters (loop_vinfo);\n   niters_of_prolog_loop = vect_gen_niters_for_prolog_loop (loop_vinfo, ni_name);\n   \n@@ -2023,7 +2026,7 @@ vect_do_peeling_for_alignment (loop_vec_info loop_vinfo, struct loops *loops)\n   /* After peeling we have to reset scalar evolution analyzer.  */\n   scev_reset ();\n \n-  return;\n+  free_original_copy_tables ();\n }\n \n "}]}