{"sha": "42de0044766f78d4dc915b46f5de94a6a5846ae2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDJkZTAwNDQ3NjZmNzhkNGRjOTE1YjQ2ZjVkZTk0YTZhNTg0NmFlMg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-01-03T15:36:25Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-01-03T15:36:25Z"}, "message": "exp_aggr.adb (Packed_Array_Aggregate_Handled): The values of the bounds can be negative, and must be declared Int, not Nat.\n\n\t* exp_aggr.adb (Packed_Array_Aggregate_Handled): The values of the\n\tbounds can be negative, and must be declared Int, not Nat.\n\n\t* sem_elim.adb (Line_Num_Match): Correct wrong code when index in an\n\tarray is checked after using the index in the array.\n\n\t* makegpr.adb (Add_Switches): Check if there is a package for the\n\tprocessor. If there is no package, do not look for switches.\n\nFrom-SVN: r92835", "tree": {"sha": "0adf4bc70f43fad200dd4b7b096f51a799772df1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0adf4bc70f43fad200dd4b7b096f51a799772df1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42de0044766f78d4dc915b46f5de94a6a5846ae2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42de0044766f78d4dc915b46f5de94a6a5846ae2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42de0044766f78d4dc915b46f5de94a6a5846ae2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42de0044766f78d4dc915b46f5de94a6a5846ae2/comments", "author": null, "committer": null, "parents": [{"sha": "050d31e81515eeaaad6768904faf40fd0ce7f1dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/050d31e81515eeaaad6768904faf40fd0ce7f1dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/050d31e81515eeaaad6768904faf40fd0ce7f1dc"}], "stats": {"total": 89, "additions": 45, "deletions": 44}, "files": [{"sha": "5337391dde24b64ecf07e193efca153e2c2212b2", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42de0044766f78d4dc915b46f5de94a6a5846ae2/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42de0044766f78d4dc915b46f5de94a6a5846ae2/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=42de0044766f78d4dc915b46f5de94a6a5846ae2", "patch": "@@ -5019,8 +5019,8 @@ package body Exp_Aggr is\n          --  Otherwise we are all positional, so convert to proper value\n \n          declare\n-            Lov : constant Nat := UI_To_Int (Lob);\n-            Hiv : constant Nat := UI_To_Int (Hib);\n+            Lov : constant Int := UI_To_Int (Lob);\n+            Hiv : constant Int := UI_To_Int (Hib);\n \n             Len : constant Nat := Int'Max (0, Hiv - Lov + 1);\n             --  The length of the array (number of elements)"}, {"sha": "28b467044631f230b8e62e480a6d0cef2a2a5132", "filename": "gcc/ada/makegpr.adb", "status": "modified", "additions": 39, "deletions": 38, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42de0044766f78d4dc915b46f5de94a6a5846ae2/gcc%2Fada%2Fmakegpr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42de0044766f78d4dc915b46f5de94a6a5846ae2/gcc%2Fada%2Fmakegpr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakegpr.adb?ref=42de0044766f78d4dc915b46f5de94a6a5846ae2", "patch": "@@ -945,55 +945,56 @@ package body Makegpr is\n             Pkg := Value_Of (Name_Compiler, Data.Decl.Packages);\n       end case;\n \n-      --  Get the Switches (\"file name\"), if they exist\n+      if Pkg /= No_Package then\n+         --  Get the Switches (\"file name\"), if they exist\n \n-      Switches_Array := Prj.Util.Value_Of\n-        (Name      => Name_Switches,\n-         In_Arrays =>\n-           Packages.Table (Pkg).Decl.Arrays);\n-\n-      Switches :=\n-        Prj.Util.Value_Of\n-          (Index     => File_Name,\n-           Src_Index => 0,\n-           In_Array  => Switches_Array);\n+         Switches_Array := Prj.Util.Value_Of\n+           (Name      => Name_Switches,\n+            In_Arrays => Packages.Table (Pkg).Decl.Arrays);\n \n-      --  Otherwise, get the Default_Switches (\"language\"), if they exist\n+         Switches :=\n+           Prj.Util.Value_Of\n+             (Index     => File_Name,\n+              Src_Index => 0,\n+              In_Array  => Switches_Array);\n+\n+         --  Otherwise, get the Default_Switches (\"language\"), if they exist\n+\n+         if Switches = Nil_Variable_Value then\n+            Defaults := Prj.Util.Value_Of\n+              (Name      => Name_Default_Switches,\n+               In_Arrays => Packages.Table (Pkg).Decl.Arrays);\n+            Switches := Prj.Util.Value_Of\n+              (Index     => Language_Names.Table (Language),\n+               Src_Index => 0,\n+               In_Array  => Defaults);\n+         end if;\n \n-      if Switches = Nil_Variable_Value then\n-         Defaults := Prj.Util.Value_Of\n-           (Name      => Name_Default_Switches,\n-            In_Arrays => Packages.Table (Pkg).Decl.Arrays);\n-         Switches := Prj.Util.Value_Of\n-           (Index     => Language_Names.Table (Language),\n-            Src_Index => 0,\n-            In_Array  => Defaults);\n-      end if;\n+         --  If there are switches, add them to Arguments\n \n-      --  If there are switches, add them to Arguments\n+         if Switches /= Nil_Variable_Value then\n+            Element_Id := Switches.Values;\n+            while Element_Id /= Nil_String loop\n+               Element := String_Elements.Table (Element_Id);\n \n-      if Switches /= Nil_Variable_Value then\n-         Element_Id := Switches.Values;\n-         while Element_Id /= Nil_String loop\n-            Element := String_Elements.Table (Element_Id);\n+               if Element.Value /= No_Name then\n+                  Get_Name_String (Element.Value);\n \n-            if Element.Value /= No_Name then\n-               Get_Name_String (Element.Value);\n+                  if not Quiet_Output then\n \n-               if not Quiet_Output then\n+                     --  When not in quiet output (no -q), check that the\n+                     --  switch is not the concatenation of several valid\n+                     --  switches, such as \"-g -v\". If it is, issue a warning.\n \n-                  --  When not in quiet output (no -q), check that the switch\n-                  --  is not the concatenation of several valid switches,\n-                  --  such as \"-g -v\". If it is, issue a warning.\n+                     Check (Option => Name_Buffer (1 .. Name_Len));\n+                  end if;\n \n-                  Check (Option => Name_Buffer (1 .. Name_Len));\n+                  Add_Argument (Name_Buffer (1 .. Name_Len), True);\n                end if;\n \n-               Add_Argument (Name_Buffer (1 .. Name_Len), True);\n-            end if;\n-\n-            Element_Id := Element.Next;\n-         end loop;\n+               Element_Id := Element.Next;\n+            end loop;\n+         end if;\n       end if;\n    end Add_Switches;\n "}, {"sha": "b823b7bf78152ccf681a099bd54b0bb9fb9da98d", "filename": "gcc/ada/sem_elim.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42de0044766f78d4dc915b46f5de94a6a5846ae2/gcc%2Fada%2Fsem_elim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42de0044766f78d4dc915b46f5de94a6a5846ae2/gcc%2Fada%2Fsem_elim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elim.adb?ref=42de0044766f78d4dc915b46f5de94a6a5846ae2", "patch": "@@ -521,14 +521,14 @@ package body Sem_Elim is\n                         if Get_Physical_Line_Number (P) =\n                            Physical_Line_Number (N)\n                         then\n-                           while Sloc_Trace (Idx) /= '['\n-                               and then Idx <= Last\n+                           while Idx <= Last and then\n+                              Sloc_Trace (Idx) /= '['\n                            loop\n                               Idx := Idx + 1;\n                            end loop;\n \n-                           if Sloc_Trace (Idx) = '['\n-                             and then Idx < Last\n+                           if Idx <= Last and then\n+                             Sloc_Trace (Idx) = '['\n                            then\n                               Idx := Idx + 1;\n                               Idx := Skip_Spaces;"}]}