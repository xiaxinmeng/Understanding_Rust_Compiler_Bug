{"sha": "0fe797c5849ca33b50a69995ce5aaccb1476ec8a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZlNzk3YzU4NDljYTMzYjUwYTY5OTk1Y2U1YWFjY2IxNDc2ZWM4YQ==", "commit": {"author": {"name": "Steve Baird", "email": "baird@adacore.com", "date": "2015-11-12T10:44:37Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-11-12T10:44:37Z"}, "message": "2015-11-12  Steve Baird  <baird@adacore.com>\n\n\t* sem_ch6.adb (Analyze_Procedure_Call) If CodePeer_Mode is True,\n\tdo not analyze the expression of a machine code insertion.\n\t* sem_ch13.adb (Analyze_Code_Statement) If CodePeer_Mode is True,\n\tmark the N_Code_Statement node as analyzed and do nothing else.\n\nFrom-SVN: r230225", "tree": {"sha": "1b95a112ae8cd91ec9ac1bc5c0d148c29729f8f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b95a112ae8cd91ec9ac1bc5c0d148c29729f8f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0fe797c5849ca33b50a69995ce5aaccb1476ec8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fe797c5849ca33b50a69995ce5aaccb1476ec8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fe797c5849ca33b50a69995ce5aaccb1476ec8a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fe797c5849ca33b50a69995ce5aaccb1476ec8a/comments", "author": {"login": "swbaird", "id": 50751052, "node_id": "MDQ6VXNlcjUwNzUxMDUy", "avatar_url": "https://avatars.githubusercontent.com/u/50751052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swbaird", "html_url": "https://github.com/swbaird", "followers_url": "https://api.github.com/users/swbaird/followers", "following_url": "https://api.github.com/users/swbaird/following{/other_user}", "gists_url": "https://api.github.com/users/swbaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/swbaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swbaird/subscriptions", "organizations_url": "https://api.github.com/users/swbaird/orgs", "repos_url": "https://api.github.com/users/swbaird/repos", "events_url": "https://api.github.com/users/swbaird/events{/privacy}", "received_events_url": "https://api.github.com/users/swbaird/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b420ba79dea984c78388047f07ab542665b22ab4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b420ba79dea984c78388047f07ab542665b22ab4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b420ba79dea984c78388047f07ab542665b22ab4"}], "stats": {"total": 43, "additions": 32, "deletions": 11}, "files": [{"sha": "5144c2d2ba248fc16f3e0605dbfa31441b32aebb", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fe797c5849ca33b50a69995ce5aaccb1476ec8a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fe797c5849ca33b50a69995ce5aaccb1476ec8a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0fe797c5849ca33b50a69995ce5aaccb1476ec8a", "patch": "@@ -1,3 +1,10 @@\n+2015-11-12  Steve Baird  <baird@adacore.com>\n+\n+\t* sem_ch6.adb (Analyze_Procedure_Call) If CodePeer_Mode is True,\n+\tdo not analyze the expression of a machine code insertion.\n+\t* sem_ch13.adb (Analyze_Code_Statement) If CodePeer_Mode is True,\n+\tmark the N_Code_Statement node as analyzed and do nothing else.\n+\n 2015-11-12  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch6.adb (Check_Limited_Return): Make global to package"}, {"sha": "f368957c4ae7c91c27405f0fd460847e41285bdf", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fe797c5849ca33b50a69995ce5aaccb1476ec8a/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fe797c5849ca33b50a69995ce5aaccb1476ec8a/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=0fe797c5849ca33b50a69995ce5aaccb1476ec8a", "patch": "@@ -6043,9 +6043,17 @@ package body Sem_Ch13 is\n       DeclO : Node_Id;\n \n    begin\n+      --  Accept foreign code statements for CodePeer. The analysis is skipped\n+      --  to avoid rejecting unrecognized constructs.\n+\n+      if CodePeer_Mode then\n+         Set_Analyzed (N);\n+         return;\n+      end if;\n+\n       --  Analyze and check we get right type, note that this implements the\n-      --  requirement (RM 13.8(1)) that Machine_Code be with'ed, since that\n-      --  is the only way that Asm_Insn could possibly be visible.\n+      --  requirement (RM 13.8(1)) that Machine_Code be with'ed, since that is\n+      --  the only way that Asm_Insn could possibly be visible.\n \n       Analyze_And_Resolve (Expression (N));\n \n@@ -6058,8 +6066,8 @@ package body Sem_Ch13 is\n \n       Check_Code_Statement (N);\n \n-      --  Make sure we appear in the handled statement sequence of a\n-      --  subprogram (RM 13.8(3)).\n+      --  Make sure we appear in the handled statement sequence of a subprogram\n+      --  (RM 13.8(3)).\n \n       if Nkind (HSS) /= N_Handled_Sequence_Of_Statements\n         or else Nkind (SBody) /= N_Subprogram_Body\n@@ -6112,7 +6120,7 @@ package body Sem_Ch13 is\n          while Present (Stmt) loop\n             StmtO := Original_Node (Stmt);\n \n-            --  A procedure call transformed into a code statement is OK.\n+            --  A procedure call transformed into a code statement is OK\n \n             if Ada_Version >= Ada_2012\n               and then Nkind (StmtO) = N_Procedure_Call_Statement"}, {"sha": "91e41e259fac794d0ab1ae83547a90bd20c898d8", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fe797c5849ca33b50a69995ce5aaccb1476ec8a/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fe797c5849ca33b50a69995ce5aaccb1476ec8a/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=0fe797c5849ca33b50a69995ce5aaccb1476ec8a", "patch": "@@ -1559,11 +1559,17 @@ package body Sem_Ch6 is\n       --  parameterless member of an entry family. Resolution of these various\n       --  interpretations is delicate.\n \n-      Analyze (P);\n+      --  Do not analyze machine code statements to avoid rejecting them in\n+      --  CodePeer mode.\n \n-      --  If this is a call of the form Obj.Op, the call may have been\n-      --  analyzed and possibly rewritten into a block, in which case\n-      --  we are done.\n+      if CodePeer_Mode and then Nkind (P) = N_Qualified_Expression then\n+         Set_Etype (P, Standard_Void_Type);\n+      else\n+         Analyze (P);\n+      end if;\n+\n+      --  If this is a call of the form Obj.Op, the call may have been analyzed\n+      --  and possibly rewritten into a block, in which case we are done.\n \n       if Analyzed (N) then\n          return;\n@@ -1632,8 +1638,8 @@ package body Sem_Ch6 is\n \n          Analyze_Call_And_Resolve;\n \n-      --  If the prefix is the simple name of an entry family, this is\n-      --  a parameterless call from within the task body itself.\n+      --  If the prefix is the simple name of an entry family, this is a\n+      --  parameterless call from within the task body itself.\n \n       elsif Is_Entity_Name (P)\n         and then Nkind (P) = N_Identifier"}]}