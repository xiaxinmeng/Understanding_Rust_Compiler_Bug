{"sha": "2d29f3a1c523bb1bc1ba8f7b63ca9b0214b42f9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQyOWYzYTFjNTIzYmIxYmMxYmE4ZjdiNjNjYTliMDIxNGI0MmY5YQ==", "commit": {"author": {"name": "Anthony Green", "email": "green@redhat.com", "date": "2003-07-27T23:52:57Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2003-07-27T23:52:57Z"}, "message": "Fix USE_LDTL configury.\n\nFrom-SVN: r69864", "tree": {"sha": "9b5d205ca07149add19b3ea6dc13661d5f33f429", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b5d205ca07149add19b3ea6dc13661d5f33f429"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d29f3a1c523bb1bc1ba8f7b63ca9b0214b42f9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d29f3a1c523bb1bc1ba8f7b63ca9b0214b42f9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d29f3a1c523bb1bc1ba8f7b63ca9b0214b42f9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d29f3a1c523bb1bc1ba8f7b63ca9b0214b42f9a/comments", "author": {"login": "atgreen", "id": 89993, "node_id": "MDQ6VXNlcjg5OTkz", "avatar_url": "https://avatars.githubusercontent.com/u/89993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atgreen", "html_url": "https://github.com/atgreen", "followers_url": "https://api.github.com/users/atgreen/followers", "following_url": "https://api.github.com/users/atgreen/following{/other_user}", "gists_url": "https://api.github.com/users/atgreen/gists{/gist_id}", "starred_url": "https://api.github.com/users/atgreen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atgreen/subscriptions", "organizations_url": "https://api.github.com/users/atgreen/orgs", "repos_url": "https://api.github.com/users/atgreen/repos", "events_url": "https://api.github.com/users/atgreen/events{/privacy}", "received_events_url": "https://api.github.com/users/atgreen/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "66db6b625975e68716f897ecf6bf60632d9432ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66db6b625975e68716f897ecf6bf60632d9432ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66db6b625975e68716f897ecf6bf60632d9432ac"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "f7d6e0de3223a2f6170e9e585e7cd469f7d77081", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d29f3a1c523bb1bc1ba8f7b63ca9b0214b42f9a/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d29f3a1c523bb1bc1ba8f7b63ca9b0214b42f9a/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=2d29f3a1c523bb1bc1ba8f7b63ca9b0214b42f9a", "patch": "@@ -1,3 +1,8 @@\n+2003-07-27  Anthony Green  <green@redhat.com>\n+\n+\t* configure.in: Fix newlib check.\n+\t* configure: Rebuilt.\n+\n 2003-07-27  Thomas Fitzsimmons  <fitzsim@redhat.com>\n \n \t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEmbeddedWindowPeer.c:"}, {"sha": "baa3b268300f2aff8fa73ff98ff7af2f0c3acb76", "filename": "libjava/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d29f3a1c523bb1bc1ba8f7b63ca9b0214b42f9a/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d29f3a1c523bb1bc1ba8f7b63ca9b0214b42f9a/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=2d29f3a1c523bb1bc1ba8f7b63ca9b0214b42f9a", "patch": "@@ -1707,7 +1707,7 @@ LIBGCJ_JAVAFLAGS=\"${libgcj_javaflags}\"\n \n \n # Only use libltdl for non-newlib builds.\n-if test \"x${with_newlib}\" = \"xno\"; then\n+if test \"x${with_newlib}\" = \"x\" || test \"x${with_newlib}\" = \"xno\"; then\n      case $enable_ltdl_convenience in\n   no) { echo \"configure: error: this package needs a convenience libltdl\" 1>&2; exit 1; } ;;\n   \"\") enable_ltdl_convenience=yes"}, {"sha": "d57b77953bc08fd25b4b665f8b4f7cde30f6ef74", "filename": "libjava/configure.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d29f3a1c523bb1bc1ba8f7b63ca9b0214b42f9a/libjava%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d29f3a1c523bb1bc1ba8f7b63ca9b0214b42f9a/libjava%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.in?ref=2d29f3a1c523bb1bc1ba8f7b63ca9b0214b42f9a", "patch": "@@ -24,7 +24,7 @@ LIBGCJ_CONFIGURE(.)\n AM_CONFIG_HEADER(include/config.h gcj/libgcj-config.h)\n \n # Only use libltdl for non-newlib builds.\n-if test \"x${with_newlib}\" = \"xno\"; then\n+if test \"x${with_newlib}\" = \"x\" || test \"x${with_newlib}\" = \"xno\"; then\n    AC_LIBLTDL_CONVENIENCE\n    AC_LIBTOOL_DLOPEN\n    DIRLTDL=libltdl"}]}