{"sha": "6039cb96d1014373470a27f02e24c2c5e821a06c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjAzOWNiOTZkMTAxNDM3MzQ3MGEyN2YwMmUyNGMyYzVlODIxYTA2Yw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-07-13T20:52:03Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-07-14T13:11:53Z"}, "message": "core: add tree-node comments\n\nAs we've moved to 64-bit systems, the padding information has become\nconditionally inaccurate.  I also hit cases where invalid tree codes\ndid not get flagged as invalid.\n\n\tgcc/\n\t* tree-core.h (tree_decl_with_vis, tree_function_decl):\n\tNote additional padding on 64-bits\n\t* tree.c (cache_integer_cst): Note why no caching of enum literals.\n\t(get_tree_code_name): Robustify error case.", "tree": {"sha": "89687a0ebd054aca8b3de9d485f086e3e93325bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89687a0ebd054aca8b3de9d485f086e3e93325bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6039cb96d1014373470a27f02e24c2c5e821a06c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6039cb96d1014373470a27f02e24c2c5e821a06c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6039cb96d1014373470a27f02e24c2c5e821a06c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6039cb96d1014373470a27f02e24c2c5e821a06c/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ed9a5d02fbd446331593ea9804ff55624ad7fba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ed9a5d02fbd446331593ea9804ff55624ad7fba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ed9a5d02fbd446331593ea9804ff55624ad7fba"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "ba7f9ceb205aaf107ab3294ece86b602699234c2", "filename": "gcc/tree-core.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6039cb96d1014373470a27f02e24c2c5e821a06c/gcc%2Ftree-core.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6039cb96d1014373470a27f02e24c2c5e821a06c/gcc%2Ftree-core.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-core.h?ref=6039cb96d1014373470a27f02e24c2c5e821a06c", "patch": "@@ -1826,6 +1826,7 @@ struct GTY(()) tree_decl_with_vis {\n  /* Belong to FUNCTION_DECL exclusively.  */\n  unsigned regdecl_flag : 1;\n  /* 14 unused bits. */\n+ /* 32 more unused on 64 bit HW. */\n };\n \n struct GTY(()) tree_var_decl {\n@@ -1901,6 +1902,7 @@ struct GTY(()) tree_function_decl {\n   unsigned replaceable_operator : 1;\n \n   /* 11 bits left for future expansion.  */\n+  /* 32 bits on 64-bit HW.  */\n };\n \n struct GTY(()) tree_translation_unit_decl {"}, {"sha": "9102f8d4e543482c52196805dcd512777fdb37bb", "filename": "gcc/tree.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6039cb96d1014373470a27f02e24c2c5e821a06c/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6039cb96d1014373470a27f02e24c2c5e821a06c/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=6039cb96d1014373470a27f02e24c2c5e821a06c", "patch": "@@ -1771,6 +1771,8 @@ cache_integer_cst (tree t)\n       break;\n \n     case ENUMERAL_TYPE:\n+      /* The slot used by TYPE_CACHED_VALUES is used for the enum\n+\t members.  */\n       break;\n \n     default:\n@@ -13254,7 +13256,9 @@ get_tree_code_name (enum tree_code code)\n {\n   const char *invalid = \"<invalid tree code>\";\n \n-  if (code >= MAX_TREE_CODES)\n+  /* The tree_code enum promotes to signed, but we could be getting\n+     invalid values, so force an unsigned comparison.  */\n+  if (unsigned (code) >= MAX_TREE_CODES)\n     {\n       if (code == 0xa5a5)\n \treturn \"ggc_freed\";"}]}