{"sha": "8ae438811f695dd025fb1fef254bff920777b494", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFlNDM4ODExZjY5NWRkMDI1ZmIxZmVmMjU0YmZmOTIwNzc3YjQ5NA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-01-18T08:29:14Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-01-18T08:29:14Z"}, "message": "re PR c/61240 (Incorrect warning \"integer overflow in expression\" on pointer-pointer subtraction)\n\n\tPR c/61240\n\t* match.pd ((P + A) - P, P - (P + A), (P + A) - (P + B)): For\n\tpointer_diff optimizations use view_convert instead of convert.\n\n\t* gcc.dg/pr61240.c: New test.\n\nFrom-SVN: r256838", "tree": {"sha": "3ebe287328aa2352463c380f91f601c2002085b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ebe287328aa2352463c380f91f601c2002085b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ae438811f695dd025fb1fef254bff920777b494", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ae438811f695dd025fb1fef254bff920777b494", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ae438811f695dd025fb1fef254bff920777b494", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ae438811f695dd025fb1fef254bff920777b494/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fcf7923742d34c0cb7270594d4cdab4ea1199672", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcf7923742d34c0cb7270594d4cdab4ea1199672", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcf7923742d34c0cb7270594d4cdab4ea1199672"}], "stats": {"total": 47, "additions": 44, "deletions": 3}, "files": [{"sha": "577d19bd35035d4913cb6ed76b8a257f4bfe0553", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ae438811f695dd025fb1fef254bff920777b494/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ae438811f695dd025fb1fef254bff920777b494/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8ae438811f695dd025fb1fef254bff920777b494", "patch": "@@ -1,3 +1,9 @@\n+2018-01-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/61240\n+\t* match.pd ((P + A) - P, P - (P + A), (P + A) - (P + B)): For\n+\tpointer_diff optimizations use view_convert instead of convert.\n+\n 2018-01-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* config/rs6000/rs6000.md (*call_indirect_nonlocal_sysv<mode>):"}, {"sha": "b288a368dae351b2d66bc181f8b1213271d9ac77", "filename": "gcc/match.pd", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ae438811f695dd025fb1fef254bff920777b494/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ae438811f695dd025fb1fef254bff920777b494/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=8ae438811f695dd025fb1fef254bff920777b494", "patch": "@@ -1832,7 +1832,10 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n     /* The second argument of pointer_plus must be interpreted as signed, and\n        thus sign-extended if necessary.  */\n     (with { tree stype = signed_type_for (TREE_TYPE (@1)); }\n-     (convert (convert:stype @1))))\n+     /* Use view_convert instead of convert here, as POINTER_PLUS_EXPR\n+\tsecond arg is unsigned even when we need to consider it as signed,\n+\twe don't want to diagnose overflow here.  */\n+     (convert (view_convert:stype @1))))\n \n   /* (T)P - (T)(P + A) -> -(T) A */\n   (simplify\n@@ -1876,7 +1879,10 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n     /* The second argument of pointer_plus must be interpreted as signed, and\n        thus sign-extended if necessary.  */\n     (with { tree stype = signed_type_for (TREE_TYPE (@1)); }\n-     (negate (convert (convert:stype @1)))))\n+     /* Use view_convert instead of convert here, as POINTER_PLUS_EXPR\n+\tsecond arg is unsigned even when we need to consider it as signed,\n+\twe don't want to diagnose overflow here.  */\n+     (negate (convert (view_convert:stype @1)))))\n \n   /* (T)(P + A) - (T)(P + B) -> (T)A - (T)B */\n   (simplify\n@@ -1927,7 +1933,11 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n     /* The second argument of pointer_plus must be interpreted as signed, and\n        thus sign-extended if necessary.  */\n     (with { tree stype = signed_type_for (TREE_TYPE (@1)); }\n-     (minus (convert (convert:stype @1)) (convert (convert:stype @2)))))))\n+     /* Use view_convert instead of convert here, as POINTER_PLUS_EXPR\n+\tsecond arg is unsigned even when we need to consider it as signed,\n+\twe don't want to diagnose overflow here.  */\n+     (minus (convert (view_convert:stype @1))\n+\t    (convert (view_convert:stype @2)))))))\n \n \n /* Simplifications of MIN_EXPR, MAX_EXPR, fmin() and fmax().  */"}, {"sha": "014a15d0067e762429f1ec85bf56c6f947ee57b7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ae438811f695dd025fb1fef254bff920777b494/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ae438811f695dd025fb1fef254bff920777b494/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8ae438811f695dd025fb1fef254bff920777b494", "patch": "@@ -1,3 +1,8 @@\n+2018-01-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/61240\n+\t* gcc.dg/pr61240.c: New test.\n+\n 2018-01-17  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/83864"}, {"sha": "6332918f01f649cdddff246a59b89c8ebca6c55e", "filename": "gcc/testsuite/gcc.dg/pr61240.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ae438811f695dd025fb1fef254bff920777b494/gcc%2Ftestsuite%2Fgcc.dg%2Fpr61240.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ae438811f695dd025fb1fef254bff920777b494/gcc%2Ftestsuite%2Fgcc.dg%2Fpr61240.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr61240.c?ref=8ae438811f695dd025fb1fef254bff920777b494", "patch": "@@ -0,0 +1,20 @@\n+/* PR c/61240 */\n+/* { dg-do compile } */\n+\n+typedef __PTRDIFF_TYPE__ ptrdiff_t;\n+\n+ptrdiff_t\n+foo (ptrdiff_t a[4])\n+{\n+  int i[4];\n+  int *p = i + 2;\n+  static ptrdiff_t b = p - (p - 1);\t/* { dg-bogus \"integer overflow in expression\" } */\n+  static ptrdiff_t c = (p - 1) - p;\t/* { dg-bogus \"integer overflow in expression\" } */\n+  static ptrdiff_t d = (p - 2) - (p - 1);/* { dg-bogus \"integer overflow in expression\" } */\n+  static ptrdiff_t e = (p - 1) - (p - 2);/* { dg-bogus \"integer overflow in expression\" } */\n+  a[0] = p - (p - 1);\t\t\t/* { dg-bogus \"integer overflow in expression\" } */\n+  a[1] = (p - 1) - p;\t\t\t/* { dg-bogus \"integer overflow in expression\" } */\n+  a[2] = (p - 2) - (p - 1);\t\t/* { dg-bogus \"integer overflow in expression\" } */\n+  a[3] = (p - 1) - (p - 2);\t\t/* { dg-bogus \"integer overflow in expression\" } */\n+  return b + c + d + e;\n+}"}]}