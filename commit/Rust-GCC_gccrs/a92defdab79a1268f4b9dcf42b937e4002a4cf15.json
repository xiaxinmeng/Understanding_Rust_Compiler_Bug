{"sha": "a92defdab79a1268f4b9dcf42b937e4002a4cf15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTkyZGVmZGFiNzlhMTI2OGY0YjlkY2Y0MmI5MzdlNDAwMmE0Y2YxNQ==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2015-07-08T14:59:59Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2015-07-08T14:59:59Z"}, "message": "[nvptx offloading] Only 64-bit configurations are currently supported\n\n\tPR libgomp/65099\n\tgcc/\n\t* config/nvptx/mkoffload.c (main): Create an offload image only in\n\t64-bit configurations.\n\tlibgomp/\n\t* plugin/plugin-nvptx.c (nvptx_get_num_devices): Return 0 if not\n\tin a 64-bit configuration.\n\t* testsuite/libgomp.oacc-c++/c++.exp: Don't attempt nvidia\n\toffloading testing if no such device is available.\n\t* testsuite/libgomp.oacc-c/c.exp: Likewise.\n\t* testsuite/libgomp.oacc-fortran/fortran.exp: Likewise.\n\nFrom-SVN: r225560", "tree": {"sha": "49238907f42004f77228eb1e7c9ae4aa57f88eed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49238907f42004f77228eb1e7c9ae4aa57f88eed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a92defdab79a1268f4b9dcf42b937e4002a4cf15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a92defdab79a1268f4b9dcf42b937e4002a4cf15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a92defdab79a1268f4b9dcf42b937e4002a4cf15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a92defdab79a1268f4b9dcf42b937e4002a4cf15/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "18b80efb60bc598f1027d36c5d65539815e3bbad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18b80efb60bc598f1027d36c5d65539815e3bbad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18b80efb60bc598f1027d36c5d65539815e3bbad"}], "stats": {"total": 95, "additions": 70, "deletions": 25}, "files": [{"sha": "4c837231db2f7ed5fa958795e16acf619fb343cc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a92defdab79a1268f4b9dcf42b937e4002a4cf15/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a92defdab79a1268f4b9dcf42b937e4002a4cf15/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a92defdab79a1268f4b9dcf42b937e4002a4cf15", "patch": "@@ -1,3 +1,9 @@\n+2015-07-08  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR libgomp/65099\n+\t* config/nvptx/mkoffload.c (main): Create an offload image only in\n+\t64-bit configurations.\n+\n 2015-07-08  Martin Liska  <mliska@suse.cz>\n \n \tPR bootstrap/66744"}, {"sha": "8bc08bfeaeb15af2757f45b8a0c5b9ec23e06a38", "filename": "gcc/config/nvptx/mkoffload.c", "status": "modified", "additions": 31, "deletions": 25, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a92defdab79a1268f4b9dcf42b937e4002a4cf15/gcc%2Fconfig%2Fnvptx%2Fmkoffload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a92defdab79a1268f4b9dcf42b937e4002a4cf15/gcc%2Fconfig%2Fnvptx%2Fmkoffload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fmkoffload.c?ref=a92defdab79a1268f4b9dcf42b937e4002a4cf15", "patch": "@@ -993,37 +993,43 @@ main (int argc, char **argv)\n \tobstack_ptr_grow (&argv_obstack, argv[ix]);\n     }\n \n-  ptx_name = make_temp_file (\".mkoffload\");\n-  obstack_ptr_grow (&argv_obstack, \"-o\");\n-  obstack_ptr_grow (&argv_obstack, ptx_name);\n-  obstack_ptr_grow (&argv_obstack, NULL);\n-  const char **new_argv = XOBFINISH (&argv_obstack, const char **);\n-\n-  char *execpath = getenv (\"GCC_EXEC_PREFIX\");\n-  char *cpath = getenv (\"COMPILER_PATH\");\n-  char *lpath = getenv (\"LIBRARY_PATH\");\n-  unsetenv (\"GCC_EXEC_PREFIX\");\n-  unsetenv (\"COMPILER_PATH\");\n-  unsetenv (\"LIBRARY_PATH\");\n-\n-  fork_execute (new_argv[0], CONST_CAST (char **, new_argv), true);\n-  obstack_free (&argv_obstack, NULL);\n-\n-  xputenv (concat (\"GCC_EXEC_PREFIX=\", execpath, NULL));\n-  xputenv (concat (\"COMPILER_PATH=\", cpath, NULL));\n-  xputenv (concat (\"LIBRARY_PATH=\", lpath, NULL));\n-\n-  in = fopen (ptx_name, \"r\");\n-  if (!in)\n-    fatal_error (input_location, \"cannot open intermediate ptx file\");\n-\n   ptx_cfile_name = make_temp_file (\".c\");\n \n   out = fopen (ptx_cfile_name, \"w\");\n   if (!out)\n     fatal_error (input_location, \"cannot open '%s'\", ptx_cfile_name);\n \n-  process (in, out);\n+  /* PR libgomp/65099: Currently, we only support offloading in 64-bit\n+     configurations.  */\n+  if (!target_ilp32)\n+    {\n+      ptx_name = make_temp_file (\".mkoffload\");\n+      obstack_ptr_grow (&argv_obstack, \"-o\");\n+      obstack_ptr_grow (&argv_obstack, ptx_name);\n+      obstack_ptr_grow (&argv_obstack, NULL);\n+      const char **new_argv = XOBFINISH (&argv_obstack, const char **);\n+\n+      char *execpath = getenv (\"GCC_EXEC_PREFIX\");\n+      char *cpath = getenv (\"COMPILER_PATH\");\n+      char *lpath = getenv (\"LIBRARY_PATH\");\n+      unsetenv (\"GCC_EXEC_PREFIX\");\n+      unsetenv (\"COMPILER_PATH\");\n+      unsetenv (\"LIBRARY_PATH\");\n+\n+      fork_execute (new_argv[0], CONST_CAST (char **, new_argv), true);\n+      obstack_free (&argv_obstack, NULL);\n+\n+      xputenv (concat (\"GCC_EXEC_PREFIX=\", execpath, NULL));\n+      xputenv (concat (\"COMPILER_PATH=\", cpath, NULL));\n+      xputenv (concat (\"LIBRARY_PATH=\", lpath, NULL));\n+\n+      in = fopen (ptx_name, \"r\");\n+      if (!in)\n+\tfatal_error (input_location, \"cannot open intermediate ptx file\");\n+\n+      process (in, out);\n+    }\n+\n   fclose (out);\n \n   compile_native (ptx_cfile_name, outname, collect_gcc);"}, {"sha": "34f3a1c86db0c4569539b67ad1478007adf6021e", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a92defdab79a1268f4b9dcf42b937e4002a4cf15/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a92defdab79a1268f4b9dcf42b937e4002a4cf15/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=a92defdab79a1268f4b9dcf42b937e4002a4cf15", "patch": "@@ -1,3 +1,13 @@\n+2015-07-08  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR libgomp/65099\n+\t* plugin/plugin-nvptx.c (nvptx_get_num_devices): Return 0 if not\n+\tin a 64-bit configuration.\n+\t* testsuite/libgomp.oacc-c++/c++.exp: Don't attempt nvidia\n+\toffloading testing if no such device is available.\n+\t* testsuite/libgomp.oacc-c/c.exp: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/fortran.exp: Likewise.\n+\n 2015-07-08  Tom de Vries  <tom@codesourcery.com>\n \n \t* testsuite/libgomp.c/parloops-exit-first-loop-alt-3.c (main): Fix"}, {"sha": "b67d3015ca520a5188380e89412c2447a1cc51bb", "filename": "libgomp/plugin/plugin-nvptx.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a92defdab79a1268f4b9dcf42b937e4002a4cf15/libgomp%2Fplugin%2Fplugin-nvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a92defdab79a1268f4b9dcf42b937e4002a4cf15/libgomp%2Fplugin%2Fplugin-nvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fplugin%2Fplugin-nvptx.c?ref=a92defdab79a1268f4b9dcf42b937e4002a4cf15", "patch": "@@ -777,6 +777,11 @@ nvptx_get_num_devices (void)\n   int n;\n   CUresult r;\n \n+  /* PR libgomp/65099: Currently, we only support offloading in 64-bit\n+     configurations.  */\n+  if (sizeof (void *) != 8)\n+    return 0;\n+\n   /* This function will be called before the plugin has been initialized in\n      order to enumerate available devices, but CUDA API routines can't be used\n      until cuInit has been called.  Just call it now (but don't yet do any"}, {"sha": "3b97024492cd234b024c6ecf2f2bcfa230965b52", "filename": "libgomp/testsuite/libgomp.oacc-c++/c++.exp", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a92defdab79a1268f4b9dcf42b937e4002a4cf15/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2B%2B%2Fc%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a92defdab79a1268f4b9dcf42b937e4002a4cf15/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2B%2B%2Fc%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2B%2B%2Fc%2B%2B.exp?ref=a92defdab79a1268f4b9dcf42b937e4002a4cf15", "patch": "@@ -85,6 +85,12 @@ if { $lang_test_file_found } {\n \t\tset acc_mem_shared 0\n \t    }\n \t    nvidia {\n+\t\tif { ![check_effective_target_openacc_nvidia_accel_present] } {\n+\t\t    # Don't bother; execution testing is going to FAIL.\n+\t\t    untested \"$subdir $offload_target_openacc offloading\"\n+\t\t    continue\n+\t\t}\n+\n \t\t# Copy ptx file (TEMPORARY)\n \t\tremote_download host $srcdir/libgomp.oacc-c-c++-common/subr.ptx\n "}, {"sha": "326b988d99abc4cb627fd157bc3323968b30e3ea", "filename": "libgomp/testsuite/libgomp.oacc-c/c.exp", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a92defdab79a1268f4b9dcf42b937e4002a4cf15/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2Fc.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a92defdab79a1268f4b9dcf42b937e4002a4cf15/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2Fc.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2Fc.exp?ref=a92defdab79a1268f4b9dcf42b937e4002a4cf15", "patch": "@@ -48,6 +48,12 @@ foreach offload_target_openacc $offload_targets_s_openacc {\n \t    set acc_mem_shared 0\n \t}\n \tnvidia {\n+\t    if { ![check_effective_target_openacc_nvidia_accel_present] } {\n+\t\t# Don't bother; execution testing is going to FAIL.\n+\t\tuntested \"$subdir $offload_target_openacc offloading\"\n+\t\tcontinue\n+\t    }\n+\n \t    # Copy ptx file (TEMPORARY)\n \t    remote_download host $srcdir/libgomp.oacc-c-c++-common/subr.ptx\n "}, {"sha": "a8aaff0e2b17e7069f2f8cd38158e1eeb95963d8", "filename": "libgomp/testsuite/libgomp.oacc-fortran/fortran.exp", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a92defdab79a1268f4b9dcf42b937e4002a4cf15/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Ffortran.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a92defdab79a1268f4b9dcf42b937e4002a4cf15/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Ffortran.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Ffortran.exp?ref=a92defdab79a1268f4b9dcf42b937e4002a4cf15", "patch": "@@ -77,6 +77,12 @@ if { $lang_test_file_found } {\n \t\tset acc_mem_shared 0\n \t    }\n \t    nvidia {\n+\t\tif { ![check_effective_target_openacc_nvidia_accel_present] } {\n+\t\t    # Don't bother; execution testing is going to FAIL.\n+\t\t    untested \"$subdir $offload_target_openacc offloading\"\n+\t\t    continue\n+\t\t}\n+\n \t\tset acc_mem_shared 0\n \t    }\n \t    default {"}]}