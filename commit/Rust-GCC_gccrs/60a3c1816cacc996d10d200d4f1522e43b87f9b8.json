{"sha": "60a3c1816cacc996d10d200d4f1522e43b87f9b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBhM2MxODE2Y2FjYzk5NmQxMGQyMDBkNGYxNTIyZTQzYjg3ZjliOA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-08-29T21:28:30Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-08-29T21:28:30Z"}, "message": "ia64.md (reload_inti): Use a TImode scratch.\n\n        * config/ia64/ia64.md (reload_inti): Use a TImode scratch.  Use\n        the half that does not conflict with the reload register.\n        (reload_outti): Likewise.\n\nFrom-SVN: r36053", "tree": {"sha": "205f5c040ae4e33ea2f3acab193db21e48b14e8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/205f5c040ae4e33ea2f3acab193db21e48b14e8c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60a3c1816cacc996d10d200d4f1522e43b87f9b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60a3c1816cacc996d10d200d4f1522e43b87f9b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60a3c1816cacc996d10d200d4f1522e43b87f9b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60a3c1816cacc996d10d200d4f1522e43b87f9b8/comments", "author": null, "committer": null, "parents": [{"sha": "94aaab7af9eee21fd6ee757b0840f9b06b64de11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94aaab7af9eee21fd6ee757b0840f9b06b64de11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94aaab7af9eee21fd6ee757b0840f9b06b64de11"}], "stats": {"total": 98, "additions": 51, "deletions": 47}, "files": [{"sha": "c0a53059f460d591eed95af9db59e53e424d2b06", "filename": "gcc/ChangeLog", "status": "modified", "additions": 41, "deletions": 37, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60a3c1816cacc996d10d200d4f1522e43b87f9b8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60a3c1816cacc996d10d200d4f1522e43b87f9b8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=60a3c1816cacc996d10d200d4f1522e43b87f9b8", "patch": "@@ -3,6 +3,10 @@\n \t* reload.c (push_secondary_reload): Allow class == reload_class\n \tif we're using a reload_in/out pattern.\n \n+\t* config/ia64/ia64.md (reload_inti): Use a TImode scratch.  Use\n+\tthe half that does not conflict with the reload register.\n+\t(reload_outti): Likewise.\n+\n 2000-08-29  Kazu Hirata  <kazu@hxi.com>\n \n \t* reload.c: Fix formatting.\n@@ -763,13 +767,13 @@ Tue Aug 22 20:34:52 2000  Kaz Kojima <kkojima@rr.iij4u.or.jp>\n 2000-08-22  David Edelsohn  <edelsohn@gnu.org>\n \n \t* aix.h (ASM_DECLARE_FUNCTION_NAME): Call named_section() or\n-        text_section() as appropriate instead of emitting text csect\n+\ttext_section() as appropriate instead of emitting text csect\n \tpseudo-op directly.\n \t(TEXT_SECTION_ASM_OP): Only require default 32-bit alignment.\n \t(UNIQUE_SECTION): Define macro.\n \t(ASM_OUTPUT_SECTION_NAME): Define macro.\n \t* rs6000.c (rs6000_override_options): Disable -ffunction-sections\n-        on AIX if debugging and -fdata-sections always.\n+\ton AIX if debugging and -fdata-sections always.\n \n 2000-08-22  Steven King  <sxking@uswest.net>\n \n@@ -783,9 +787,9 @@ Tue Aug 22 20:34:52 2000  Kaz Kojima <kkojima@rr.iij4u.or.jp>\n \n 2000-08-22  Stan Cox  <scox@redhat.com>\n \n-        * Makefile.in (OBJS): Add dependence.o.\n-        * dependence.c: New file.\n-        \n+\t* Makefile.in (OBJS): Add dependence.o.\n+\t* dependence.c: New file.\n+\t\n 2000-08-22  Alexandre Oliva  <aoliva@redhat.com>, John David Anglin  <dave.anglin@nrc.ca>\n \n \t* calls.c (check_sibcall_argument_overlap_1): Adjust for\n@@ -874,19 +878,19 @@ Tue Aug 22 02:31:26 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \tRemove dead comment.\n \n \t* gcc.texi (The Configuration File): Document HOST_BIT_BUCKET.\n-        * system.h (HOST_BIT_BUCKET): Default to \"/dev/null\".\n-        * config/i386/xm-dos.h (HOST_BIT_BUCKET): Define as \"NUL\".\n-        * config/i386/xm-os2.h, config/winnt/winnt.h: Likewise.\n+\t* system.h (HOST_BIT_BUCKET): Default to \"/dev/null\".\n+\t* config/i386/xm-dos.h (HOST_BIT_BUCKET): Define as \"NUL\".\n+\t* config/i386/xm-os2.h, config/winnt/winnt.h: Likewise.\n \n-        * protoize.c (munge_compile_params): Use HOST_BIT_BUCKET (if\n+\t* protoize.c (munge_compile_params): Use HOST_BIT_BUCKET (if\n \twritable) instead of hardcoded value.\n \n \t* toplev.c (compile_file): Output to a file even if -fsyntax-only.\n \n-        * gcc.c, config/i386/xm-dos.h, config/i386/xm-os2.h: Kill\n-        MKTEMP_EACH_FILE.\n+\t* gcc.c, config/i386/xm-dos.h, config/i386/xm-os2.h: Kill\n+\tMKTEMP_EACH_FILE.\n \n-        * gcc.c (cc1_options): Do not process -o or run the assembler if\n+\t* gcc.c (cc1_options): Do not process -o or run the assembler if\n \t-fsyntax-only.\n \t* objc/lang-spec.h: Likewise.\n \n@@ -995,17 +999,17 @@ Mon Aug 21 07:41:12 2000  Jeffrey A Law  (law@cygnus.com)\n \n Sun Aug 20 01:41:35 2000  Dennis Chernoivanov  <cdi@sparc.spb.su>\n \n-        * cpplex.c (cpp_scan_buffer): Move `output_line_command' just\n-        before `process_directive' so that newlines won't be missed\n-        for directives.\n-        (cpp_printf): Increment `print->lineno' when newline is emitted.\n+\t* cpplex.c (cpp_scan_buffer): Move `output_line_command' just\n+\tbefore `process_directive' so that newlines won't be missed\n+\tfor directives.\n+\t(cpp_printf): Increment `print->lineno' when newline is emitted.\n \n-        * cppmain.c (cb_ident): Likewise.\n-        (cb_define): Likewise.\n-        (cb_undef): Likewise.\n-        (cb_include): Likewise.\n-        (cb_def_pragma): Likewise.\n-        (dump_macros_helper): Likewise.\n+\t* cppmain.c (cb_ident): Likewise.\n+\t(cb_define): Likewise.\n+\t(cb_undef): Likewise.\n+\t(cb_include): Likewise.\n+\t(cb_def_pragma): Likewise.\n+\t(dump_macros_helper): Likewise.\n \n 2000-08-20  Richard Henderson  <rth@cygnus.com>\n \n@@ -1613,17 +1617,17 @@ Thu Aug 10 22:47:09 2000  Ovidiu Predescu  <ovidiu@cup.hp.com>\n \n 2000-08-10  Kazu Hirata  <kazu@hxi.com>\n \n-        * h8300.c (expand_a_rotate): New.\n-        (emit_a_rotate): Likewise.\n-        (h8300_adjust_insn_length): Add support for the rotate insns.\n-        * h8300.md (rotlqi3): New.\n-        (*rotlqi3_1): Likewise.\n-        (rotlhi3): Likewise.\n-        (*rotlhi3_1): Likewise.\n-        (rotlhi3): Likewise.\n-        (*rotlhi3_1): Likewise.\n-        * h8300-proto.h: Add prototypes for expand_a_rotate and\n-        emit_a_rotate.\n+\t* h8300.c (expand_a_rotate): New.\n+\t(emit_a_rotate): Likewise.\n+\t(h8300_adjust_insn_length): Add support for the rotate insns.\n+\t* h8300.md (rotlqi3): New.\n+\t(*rotlqi3_1): Likewise.\n+\t(rotlhi3): Likewise.\n+\t(*rotlhi3_1): Likewise.\n+\t(rotlhi3): Likewise.\n+\t(*rotlhi3_1): Likewise.\n+\t* h8300-proto.h: Add prototypes for expand_a_rotate and\n+\temit_a_rotate.\n \n \t* h8300.c: Fix comment typos.\n \t(dosize): Declare the variable amount as unsigned.\n@@ -2052,8 +2056,8 @@ Sun Aug  6 00:54:42 2000  Ovidiu Predescu  <ovidiu@cup.hp.com>\n \n 2000-08-05  Herman A.J. ten Brugge <Haj.Ten.Brugge@net.HCC.nl>\n \n-        * config/c4x/c4x.md (return_indirect_internal): New.\n-        * config/c4x/c4x.c (c4x_expand_epilogue): Use it.\n+\t* config/c4x/c4x.md (return_indirect_internal): New.\n+\t* config/c4x/c4x.c (c4x_expand_epilogue): Use it.\n \n 2000-08-04  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n@@ -2357,8 +2361,8 @@ Fri Aug  4 06:53:46 2000  Clinton Popetz  <cpopetz@cygnus.com>\n \n 2000-08-03  Richard Henderson  <rth@cygnus.com>\n \n-        * config/i386/i386.md (return_indirect_internal): New.\n-        * config/i386/i386.c (ix86_expand_epilogue): Use it.\n+\t* config/i386/i386.md (return_indirect_internal): New.\n+\t* config/i386/i386.c (ix86_expand_epilogue): Use it.\n \n 2000-08-03  Zack Weinberg  <zack@wolery.cumb.org>\n "}, {"sha": "6bbf9921b55942a35650b2827f3e557177538906", "filename": "gcc/config/ia64/ia64.md", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60a3c1816cacc996d10d200d4f1522e43b87f9b8/gcc%2Fconfig%2Fia64%2Fia64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60a3c1816cacc996d10d200d4f1522e43b87f9b8/gcc%2Fconfig%2Fia64%2Fia64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.md?ref=60a3c1816cacc996d10d200d4f1522e43b87f9b8", "patch": "@@ -668,27 +668,27 @@\n (define_expand \"reload_inti\"\n   [(parallel [(set (match_operand:TI 0 \"register_operand\" \"=r\")\n \t\t   (match_operand:TI 1 \"\" \"m\"))\n-\t      (clobber (match_operand:DI 2 \"register_operand\" \"=&r\"))])]\n+\t      (clobber (match_operand:TI 2 \"register_operand\" \"=&r\"))])]\n   \"\"\n   \"\n {\n-  /* ??? Should now be enforced by tweeks to push_secondary_reload.  */\n-  if (reg_overlap_mentioned_p (operands[2], operands[0])\n-      || reg_overlap_mentioned_p (operands[2], operands[1]))\n-    abort ();\n+  unsigned int s_regno = REGNO (operands[2]);\n+  if (s_regno == REGNO (operands[0]))\n+    s_regno += 1;\n+  operands[2] = gen_rtx_REG (DImode, s_regno);\n }\")\n \n (define_expand \"reload_outti\"\n   [(parallel [(set (match_operand:TI 0 \"\" \"=m\")\n \t\t   (match_operand:TI 1 \"register_operand\" \"r\"))\n-\t      (clobber (match_operand:DI 2 \"register_operand\" \"=&r\"))])]\n+\t      (clobber (match_operand:TI 2 \"register_operand\" \"=&r\"))])]\n   \"\"\n   \"\n {\n-  /* ??? Should now be enforced by tweeks to push_secondary_reload.  */\n-  if (reg_overlap_mentioned_p (operands[2], operands[0])\n-      || reg_overlap_mentioned_p (operands[2], operands[1]))\n-    abort ();\n+  unsigned int s_regno = REGNO (operands[2]);\n+  if (s_regno == REGNO (operands[1]))\n+    s_regno += 1;\n+  operands[2] = gen_rtx_REG (DImode, s_regno);\n }\")\n \n ;; Floating Point Moves"}]}