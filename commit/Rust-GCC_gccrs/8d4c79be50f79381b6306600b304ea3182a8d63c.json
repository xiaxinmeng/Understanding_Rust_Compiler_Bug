{"sha": "8d4c79be50f79381b6306600b304ea3182a8d63c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ0Yzc5YmU1MGY3OTM4MWI2MzA2NjAwYjMwNGVhMzE4MmE4ZDYzYw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@markmitchell.com", "date": "1998-12-12T22:12:02Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1998-12-12T22:12:02Z"}, "message": "global.c (record_conflicts): Don't use an array of shorts to store an array of ints.\n\n\t* global.c (record_conflicts): Don't use an array of shorts to\n        store an array of ints.\n\t(global_conflicts): Likewise.\n\nFrom-SVN: r24282", "tree": {"sha": "712a56836ebce54cb8402b5e6dd622b53862cef3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/712a56836ebce54cb8402b5e6dd622b53862cef3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d4c79be50f79381b6306600b304ea3182a8d63c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d4c79be50f79381b6306600b304ea3182a8d63c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d4c79be50f79381b6306600b304ea3182a8d63c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d4c79be50f79381b6306600b304ea3182a8d63c/comments", "author": null, "committer": null, "parents": [{"sha": "e136860a83c8f3f93c400501124fa1ca1ac7ff1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e136860a83c8f3f93c400501124fa1ca1ac7ff1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e136860a83c8f3f93c400501124fa1ca1ac7ff1b"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "f2a101bda07dcbbe97657cb87ba0431c1bb4a7dc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4c79be50f79381b6306600b304ea3182a8d63c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4c79be50f79381b6306600b304ea3182a8d63c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8d4c79be50f79381b6306600b304ea3182a8d63c", "patch": "@@ -1,3 +1,9 @@\n+Sat Dec 12 22:13:02 1998  Mark Mitchell  <mark@markmitchell.com>\n+\n+\t* global.c (record_conflicts): Don't use an array of shorts to\n+        store an array of ints.\n+\t(global_conflicts): Likewise.\n+\n Sat Dec 12 16:49:24 1998  Richard Henderson  <rth@cygnus.com>\n \n \t* alpha.c (alpha_expand_block_move): mode_for_size expects"}, {"sha": "67201726e3cee1f1804d91a7779b41c3cfcaa6ba", "filename": "gcc/global.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4c79be50f79381b6306600b304ea3182a8d63c/gcc%2Fglobal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4c79be50f79381b6306600b304ea3182a8d63c/gcc%2Fglobal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fglobal.c?ref=8d4c79be50f79381b6306600b304ea3182a8d63c", "patch": "@@ -261,7 +261,7 @@ static void expand_preferences\tPROTO((void));\n static void prune_preferences\tPROTO((void));\n static void find_reg\t\tPROTO((int, HARD_REG_SET, int, int, int));\n static void record_one_conflict PROTO((int));\n-static void record_conflicts\tPROTO((short *, int));\n+static void record_conflicts\tPROTO((int *, int));\n static void mark_reg_store\tPROTO((rtx, rtx));\n static void mark_reg_clobber\tPROTO((rtx, rtx));\n static void mark_reg_conflicts\tPROTO((rtx));\n@@ -623,12 +623,12 @@ global_conflicts ()\n {\n   register int b, i;\n   register rtx insn;\n-  short *block_start_allocnos;\n+  int *block_start_allocnos;\n \n   /* Make a vector that mark_reg_{store,clobber} will store in.  */\n   regs_set = (rtx *) alloca (max_parallel * sizeof (rtx) * 2);\n \n-  block_start_allocnos = (short *) alloca (max_allocno * sizeof (short));\n+  block_start_allocnos = (int *) alloca (max_allocno * sizeof (int));\n \n   for (b = 0; b < n_basic_blocks; b++)\n     {\n@@ -1291,7 +1291,7 @@ record_one_conflict (regno)\n \n static void\n record_conflicts (allocno_vec, len)\n-     register short *allocno_vec;\n+     register int *allocno_vec;\n      register int len;\n {\n   register int allocno;"}]}