{"sha": "d1c1397eebc39be331ab210b57ade79bf51ced73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDFjMTM5N2VlYmMzOWJlMzMxYWIyMTBiNTdhZGU3OWJmNTFjZWQ3Mw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-04T21:50:56Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-04T21:50:56Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1161", "tree": {"sha": "0639dc67759ffe2d4ad2eeb4756341d06d1977c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0639dc67759ffe2d4ad2eeb4756341d06d1977c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1c1397eebc39be331ab210b57ade79bf51ced73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1c1397eebc39be331ab210b57ade79bf51ced73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1c1397eebc39be331ab210b57ade79bf51ced73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1c1397eebc39be331ab210b57ade79bf51ced73/comments", "author": null, "committer": null, "parents": [{"sha": "a9d91d6f8515e5327a22147aeff313e45840e7c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9d91d6f8515e5327a22147aeff313e45840e7c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9d91d6f8515e5327a22147aeff313e45840e7c9"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "526e7db13289f2d73e8afcfb37d853f9aadb59dd", "filename": "gcc/reload1.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1c1397eebc39be331ab210b57ade79bf51ced73/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1c1397eebc39be331ab210b57ade79bf51ced73/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=d1c1397eebc39be331ab210b57ade79bf51ced73", "patch": "@@ -1220,6 +1220,19 @@ reload (first, global, dumpfile)\n \n \t\t  if (caller_save_group_size > 1)\n \t\t    insn_total_groups = MAX (insn_total_groups, 1);\n+\n+\n+                /* Show that this basic block will need a register of\n+                   this class.  */\n+\n+                if (global\n+                    && ! (basic_block_needs[(int) caller_save_spill_class]\n+                          [this_block]))\n+                  {\n+                    basic_block_needs[(int) caller_save_spill_class]\n+                      [this_block] = 1;\n+                    new_basic_block_needs = 1;\n+                  }\n \t\t}\n \n #ifdef SMALL_REGISTER_CLASSES"}]}