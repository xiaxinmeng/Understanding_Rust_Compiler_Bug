{"sha": "e85ac860ae90213dc0ebc122667811fbae2a5f25", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTg1YWM4NjBhZTkwMjEzZGMwZWJjMTIyNjY3ODExZmJhZTJhNWYyNQ==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1999-03-27T16:05:27Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1999-03-27T16:05:27Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r26016", "tree": {"sha": "bdc06240bf8b335e72cfdeae40915a7955c01428", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bdc06240bf8b335e72cfdeae40915a7955c01428"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e85ac860ae90213dc0ebc122667811fbae2a5f25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e85ac860ae90213dc0ebc122667811fbae2a5f25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e85ac860ae90213dc0ebc122667811fbae2a5f25", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e85ac860ae90213dc0ebc122667811fbae2a5f25/comments", "author": null, "committer": null, "parents": [{"sha": "b635eb2fc0818aa3d8c2645dc21d33feb4a7865a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b635eb2fc0818aa3d8c2645dc21d33feb4a7865a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b635eb2fc0818aa3d8c2645dc21d33feb4a7865a"}], "stats": {"total": 1104, "additions": 526, "deletions": 578}, "files": [{"sha": "8b1269ff1161d82e0c2df926d262424203ace5e8", "filename": "gcc/java/parse.c", "status": "modified", "additions": 526, "deletions": 578, "changes": 1104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e85ac860ae90213dc0ebc122667811fbae2a5f25/gcc%2Fjava%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e85ac860ae90213dc0ebc122667811fbae2a5f25/gcc%2Fjava%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.c?ref=e85ac860ae90213dc0ebc122667811fbae2a5f25", "patch": "@@ -262,16 +262,15 @@ static tree add_stmt_to_compound PROTO ((tree, tree, tree));\n static tree add_stmt_to_block PROTO ((tree, tree, tree));\n static tree patch_exit_expr PROTO ((tree));\n static tree build_labeled_block PROTO ((int, tree));\n-static tree generate_labeled_block PROTO (());\n-static tree complete_labeled_statement PROTO ((tree, tree));\n+static tree finish_labeled_statement PROTO ((tree, tree));\n static tree build_bc_statement PROTO ((int, int, tree));\n static tree patch_bc_statement PROTO ((tree));\n static tree patch_loop_statement PROTO ((tree));\n static tree build_new_loop PROTO ((tree));\n static tree build_loop_body PROTO ((int, tree, int));\n-static tree complete_loop_body PROTO ((int, tree, tree, int));\n+static tree finish_loop_body PROTO ((int, tree, tree, int));\n static tree build_debugable_stmt PROTO ((int, tree));\n-static tree complete_for_loop PROTO ((int, tree, tree, tree));\n+static tree finish_for_loop PROTO ((int, tree, tree, tree));\n static tree patch_switch_statement PROTO ((tree));\n static tree string_constant_concatenation PROTO ((tree, tree));\n static tree build_string_concatenation PROTO ((tree, tree));\n@@ -286,7 +285,7 @@ static void check_thrown_exceptions PROTO ((int, tree));\n static int check_thrown_exceptions_do PROTO ((tree));\n static void purge_unchecked_exceptions PROTO ((tree));\n static void check_throws_clauses PROTO ((tree, tree, tree));\n-static void complete_method_declaration PROTO ((tree));\n+static void finish_method_declaration PROTO ((tree));\n static tree build_super_invocation PROTO (());\n static int verify_constructor_circularity PROTO ((tree, tree));\n static char *constructor_circularity_msg PROTO ((tree, tree));\n@@ -368,7 +367,7 @@ static tree java_lang_id = NULL_TREE;\n /* The \"java.lang.Cloneable\" qualified name.  */\n static tree java_lang_cloneable = NULL_TREE;\n \n-#line 296 \"./parse.y\"\n+#line 295 \"./parse.y\"\n typedef union {\n   tree node;\n   int sub_token;\n@@ -378,7 +377,7 @@ typedef union {\n   } operator;\n   int value;\n } YYSTYPE;\n-#line 306 \"./parse.y\"\n+#line 305 \"./parse.y\"\n \n #include \"lex.c\"\n #ifndef YYDEBUG\n@@ -675,56 +674,56 @@ static const short yyrhs[] = {   123,\n \n #if YYDEBUG != 0\n static const short yyrline[] = { 0,\n-   450,   456,   458,   459,   460,   461,   462,   466,   468,   471,\n-   473,   474,   477,   479,   482,   486,   490,   494,   500,   502,\n-   504,   506,   511,   513,   516,   520,   525,   530,   532,   533,\n-   534,   535,   536,   537,   538,   541,   546,   552,   554,   557,\n-   560,   562,   566,   568,   571,   598,   600,   604,   617,   619,\n-   623,   630,   631,   633,   643,   648,   663,   667,   670,   673,\n-   676,   678,   680,   685,   689,   691,   693,   695,   699,   701,\n-   703,   710,   716,   721,   725,   728,   732,   734,   737,   739,\n-   740,   741,   745,   747,   749,   750,   752,   757,   760,   770,\n-   773,   775,   779,   782,   789,   795,   803,   805,   807,   809,\n-   811,   815,   817,   821,   828,   829,   833,   836,   838,   840,\n-   842,   844,   846,   848,   850,   857,   860,   862,   871,   873,\n-   877,   882,   887,   891,   896,   898,   900,   907,   909,   911,\n-   915,   918,   920,   924,   926,   927,   932,   937,   943,   951,\n-   958,   961,   964,   968,   971,   975,   984,   986,   988,   993,\n-  1000,  1008,  1010,  1014,  1021,  1031,  1035,  1038,  1041,  1044,\n-  1047,  1050,  1053,  1056,  1058,  1062,  1068,  1073,  1075,  1079,\n-  1082,  1086,  1088,  1091,  1093,  1094,  1096,  1100,  1104,  1110,\n-  1115,  1118,  1120,  1124,  1130,  1134,  1139,  1142,  1146,  1151,\n-  1159,  1161,  1164,  1166,  1168,  1172,  1176,  1179,  1183,  1185,\n-  1186,  1187,  1188,  1189,  1199,  1201,  1202,  1203,  1204,  1207,\n-  1209,  1210,  1211,  1212,  1213,  1214,  1215,  1216,  1217,  1218,\n-  1221,  1226,  1237,  1244,  1248,  1259,  1269,  1275,  1281,  1287,\n-  1289,  1295,  1297,  1303,  1305,  1307,  1309,  1311,  1315,  1317,\n-  1318,  1319,  1320,  1321,  1322,  1325,  1331,  1333,  1335,  1339,\n-  1344,  1349,  1355,  1365,  1371,  1373,  1375,  1382,  1385,  1387,\n-  1389,  1393,  1395,  1398,  1402,  1404,  1407,  1414,  1420,  1422,\n-  1424,  1428,  1436,  1439,  1441,  1443,  1447,  1452,  1461,  1466,\n-  1469,  1476,  1478,  1480,  1484,  1487,  1496,  1503,  1505,  1509,\n-  1522,  1524,  1530,  1536,  1540,  1542,  1546,  1549,  1551,  1555,\n-  1558,  1560,  1562,  1566,  1569,  1571,  1573,  1577,  1580,  1582,\n-  1584,  1588,  1594,  1596,  1600,  1607,  1609,  1611,  1613,  1617,\n-  1625,  1628,  1630,  1635,  1639,  1641,  1648,  1656,  1673,  1675,\n-  1677,  1681,  1684,  1689,  1691,  1694,  1696,  1698,  1700,  1701,\n-  1702,  1703,  1707,  1709,  1711,  1716,  1718,  1720,  1722,  1724,\n-  1728,  1731,  1736,  1738,  1743,  1744,  1745,  1746,  1747,  1749,\n-  1751,  1753,  1755,  1757,  1761,  1763,  1766,  1772,  1777,  1781,\n-  1784,  1786,  1788,  1792,  1794,  1796,  1798,  1802,  1805,  1809,\n-  1815,  1817,  1825,  1852,  1854,  1858,  1863,  1870,  1874,  1877,\n-  1879,  1890,  1901,  1906,  1915,  1917,  1921,  1924,  1926,  1931,\n-  1936,  1941,  1948,  1950,  1951,  1952,  1955,  1960,  1965,  1967,\n-  1968,  1970,  1972,  1973,  1975,  1979,  1982,  1986,  1989,  1993,\n-  1995,  1997,  1999,  2000,  2002,  2006,  2015,  2017,  2019,  2032,\n-  2034,  2040,  2042,  2044,  2048,  2050,  2055,  2060,  2065,  2067,\n-  2069,  2073,  2075,  2080,  2085,  2087,  2091,  2093,  2098,  2103,\n-  2108,  2110,  2112,  2116,  2118,  2123,  2128,  2133,  2138,  2140,\n-  2142,  2144,  2146,  2148,  2152,  2154,  2159,  2164,  2166,  2170,\n-  2172,  2177,  2181,  2183,  2188,  2192,  2194,  2199,  2203,  2205,\n-  2210,  2214,  2216,  2221,  2225,  2227,  2232,  2238,  2240,  2244,\n-  2246,  2249,  2252,  2260,  2262,  2263,  2266,  2268,  2271,  2275\n+   449,   455,   457,   458,   459,   460,   461,   465,   467,   470,\n+   472,   473,   476,   478,   481,   485,   489,   493,   499,   501,\n+   503,   505,   510,   512,   515,   519,   524,   529,   531,   532,\n+   533,   534,   535,   536,   537,   540,   545,   551,   553,   556,\n+   559,   561,   565,   567,   570,   597,   599,   603,   616,   618,\n+   622,   629,   630,   632,   642,   647,   662,   666,   669,   672,\n+   675,   677,   679,   684,   688,   690,   692,   694,   698,   700,\n+   702,   709,   715,   720,   724,   727,   731,   733,   736,   738,\n+   739,   740,   744,   746,   748,   749,   751,   756,   759,   769,\n+   772,   774,   778,   781,   788,   794,   802,   804,   806,   808,\n+   810,   814,   816,   820,   827,   828,   832,   835,   837,   839,\n+   841,   843,   845,   847,   849,   856,   859,   861,   870,   872,\n+   876,   881,   886,   890,   895,   897,   899,   906,   908,   910,\n+   914,   917,   919,   923,   925,   926,   931,   936,   942,   950,\n+   957,   960,   963,   967,   970,   974,   983,   985,   987,   992,\n+   999,  1007,  1009,  1013,  1020,  1030,  1034,  1037,  1040,  1043,\n+  1046,  1049,  1052,  1055,  1057,  1061,  1067,  1072,  1074,  1078,\n+  1081,  1085,  1087,  1090,  1092,  1093,  1095,  1099,  1103,  1109,\n+  1114,  1117,  1119,  1123,  1129,  1133,  1138,  1141,  1145,  1150,\n+  1158,  1160,  1163,  1165,  1167,  1171,  1175,  1178,  1182,  1184,\n+  1185,  1186,  1187,  1188,  1198,  1200,  1201,  1202,  1203,  1206,\n+  1208,  1209,  1210,  1211,  1212,  1213,  1214,  1215,  1216,  1217,\n+  1220,  1225,  1236,  1239,  1243,  1250,  1260,  1266,  1272,  1278,\n+  1280,  1286,  1288,  1294,  1296,  1298,  1300,  1302,  1306,  1308,\n+  1309,  1310,  1311,  1312,  1313,  1316,  1322,  1324,  1326,  1330,\n+  1335,  1340,  1346,  1356,  1362,  1364,  1366,  1373,  1376,  1378,\n+  1380,  1384,  1386,  1389,  1393,  1395,  1398,  1405,  1411,  1413,\n+  1415,  1419,  1427,  1430,  1432,  1434,  1438,  1443,  1452,  1457,\n+  1460,  1467,  1469,  1471,  1475,  1478,  1487,  1494,  1496,  1500,\n+  1513,  1515,  1521,  1527,  1531,  1533,  1537,  1540,  1542,  1546,\n+  1549,  1551,  1553,  1557,  1560,  1562,  1564,  1568,  1571,  1573,\n+  1575,  1579,  1585,  1587,  1591,  1598,  1600,  1602,  1604,  1608,\n+  1616,  1619,  1621,  1626,  1630,  1632,  1639,  1647,  1664,  1666,\n+  1668,  1672,  1675,  1680,  1682,  1685,  1687,  1689,  1691,  1692,\n+  1693,  1694,  1698,  1700,  1702,  1707,  1709,  1711,  1713,  1715,\n+  1719,  1722,  1727,  1729,  1734,  1735,  1736,  1737,  1738,  1740,\n+  1742,  1744,  1746,  1748,  1752,  1754,  1757,  1763,  1768,  1772,\n+  1775,  1777,  1779,  1783,  1785,  1787,  1789,  1793,  1796,  1800,\n+  1806,  1808,  1816,  1843,  1845,  1849,  1854,  1861,  1865,  1868,\n+  1870,  1881,  1892,  1897,  1906,  1908,  1912,  1915,  1917,  1922,\n+  1927,  1932,  1939,  1941,  1942,  1943,  1946,  1951,  1956,  1958,\n+  1959,  1961,  1963,  1964,  1966,  1970,  1973,  1977,  1980,  1984,\n+  1986,  1988,  1990,  1991,  1993,  1997,  2006,  2008,  2010,  2023,\n+  2025,  2031,  2033,  2035,  2039,  2041,  2046,  2051,  2056,  2058,\n+  2060,  2064,  2066,  2071,  2076,  2078,  2082,  2084,  2089,  2094,\n+  2099,  2101,  2103,  2107,  2109,  2114,  2119,  2124,  2129,  2131,\n+  2133,  2135,  2137,  2139,  2143,  2145,  2150,  2155,  2157,  2161,\n+  2163,  2168,  2172,  2174,  2179,  2183,  2185,  2190,  2194,  2196,\n+  2201,  2205,  2207,  2212,  2216,  2218,  2223,  2229,  2231,  2235,\n+  2237,  2240,  2243,  2251,  2253,  2254,  2257,  2259,  2262,  2266\n };\n #endif\n \n@@ -2720,66 +2719,66 @@ yyparse(YYPARSE_PARAM_ARG)\n   switch (yyn) {\n \n case 1:\n-#line 452 \"./parse.y\"\n+#line 451 \"./parse.y\"\n {;\n     break;}\n case 18:\n-#line 496 \"./parse.y\"\n+#line 495 \"./parse.y\"\n { \n \t\t  yyval.node = build_java_array_type (yyvsp[-2].node, -1);\n \t\t  CLASS_LOADED_P (yyval.node) = 1;\n \t\t;\n     break;}\n case 19:\n-#line 501 \"./parse.y\"\n+#line 500 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 20:\n-#line 503 \"./parse.y\"\n+#line 502 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 21:\n-#line 505 \"./parse.y\"\n+#line 504 \"./parse.y\"\n {RULE (\"']' expected\"); RECOVER;;\n     break;}\n case 22:\n-#line 507 \"./parse.y\"\n+#line 506 \"./parse.y\"\n {RULE (\"']' expected\"); RECOVER;;\n     break;}\n case 26:\n-#line 522 \"./parse.y\"\n+#line 521 \"./parse.y\"\n { yyval.node = make_qualified_name (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 28:\n-#line 531 \"./parse.y\"\n+#line 530 \"./parse.y\"\n {yyval.node = NULL;;\n     break;}\n case 36:\n-#line 543 \"./parse.y\"\n+#line 542 \"./parse.y\"\n {\n \t\t  yyval.node = NULL;\n \t\t;\n     break;}\n case 37:\n-#line 547 \"./parse.y\"\n+#line 546 \"./parse.y\"\n {\n \t\t  yyval.node = NULL;\n \t\t;\n     break;}\n case 40:\n-#line 559 \"./parse.y\"\n+#line 558 \"./parse.y\"\n { ctxp->package = EXPR_WFL_NODE (yyvsp[-1].node); ;\n     break;}\n case 41:\n-#line 561 \"./parse.y\"\n+#line 560 \"./parse.y\"\n {yyerror (\"Missing name\"); RECOVER;;\n     break;}\n case 42:\n-#line 563 \"./parse.y\"\n+#line 562 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 45:\n-#line 573 \"./parse.y\"\n+#line 572 \"./parse.y\"\n {\n \t\t  tree name = EXPR_WFL_NODE (yyvsp[-1].node), node, last_name;\n \t\t  int   i = IDENTIFIER_LENGTH (name)-1;\n@@ -2807,15 +2806,15 @@ case 45:\n \t\t;\n     break;}\n case 46:\n-#line 599 \"./parse.y\"\n+#line 598 \"./parse.y\"\n {yyerror (\"Missing name\"); RECOVER;;\n     break;}\n case 47:\n-#line 601 \"./parse.y\"\n+#line 600 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 48:\n-#line 606 \"./parse.y\"\n+#line 605 \"./parse.y\"\n {\n \t\t  tree name = EXPR_WFL_NODE (yyvsp[-3].node);\n \t\t  /* Don't import java.lang.* twice. */\n@@ -2829,40 +2828,40 @@ case 48:\n \t\t;\n     break;}\n case 49:\n-#line 618 \"./parse.y\"\n+#line 617 \"./parse.y\"\n {yyerror (\"'*' expected\"); RECOVER;;\n     break;}\n case 50:\n-#line 620 \"./parse.y\"\n+#line 619 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 51:\n-#line 625 \"./parse.y\"\n+#line 624 \"./parse.y\"\n {\n \t\t  maybe_generate_finit ();\n \t\t  maybe_generate_clinit ();\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 53:\n-#line 632 \"./parse.y\"\n+#line 631 \"./parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 54:\n-#line 634 \"./parse.y\"\n+#line 633 \"./parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Class or interface declaration expected\");\n \t\t;\n     break;}\n case 55:\n-#line 645 \"./parse.y\"\n+#line 644 \"./parse.y\"\n {\n \t\t  yyval.value = (1 << yyvsp[0].value);\n \t\t;\n     break;}\n case 56:\n-#line 649 \"./parse.y\"\n+#line 648 \"./parse.y\"\n {\n \t\t  int acc = (1 << yyvsp[0].value);\n \t\t  if (yyval.value & acc)\n@@ -2876,123 +2875,123 @@ case 56:\n \t\t;\n     break;}\n case 57:\n-#line 665 \"./parse.y\"\n+#line 664 \"./parse.y\"\n { create_class (yyvsp[-4].value, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 58:\n-#line 667 \"./parse.y\"\n+#line 666 \"./parse.y\"\n { \n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 59:\n-#line 671 \"./parse.y\"\n+#line 670 \"./parse.y\"\n { create_class (0, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 60:\n-#line 673 \"./parse.y\"\n+#line 672 \"./parse.y\"\n { \t\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 61:\n-#line 677 \"./parse.y\"\n+#line 676 \"./parse.y\"\n {yyerror (\"Missing class name\"); RECOVER;;\n     break;}\n case 62:\n-#line 679 \"./parse.y\"\n+#line 678 \"./parse.y\"\n {yyerror (\"Missing class name\"); RECOVER;;\n     break;}\n case 63:\n-#line 681 \"./parse.y\"\n+#line 680 \"./parse.y\"\n {\n \t\t  if (!ctxp->class_err) yyerror (\"'{' expected\"); \n \t\t  DRECOVER(class1);\n \t\t;\n     break;}\n case 64:\n-#line 686 \"./parse.y\"\n+#line 685 \"./parse.y\"\n {if (!ctxp->class_err) yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 65:\n-#line 690 \"./parse.y\"\n+#line 689 \"./parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 66:\n-#line 692 \"./parse.y\"\n+#line 691 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 67:\n-#line 694 \"./parse.y\"\n+#line 693 \"./parse.y\"\n {yyerror (\"'{' expected\"); ctxp->class_err=1;;\n     break;}\n case 68:\n-#line 696 \"./parse.y\"\n+#line 695 \"./parse.y\"\n {yyerror (\"Missing super class name\"); ctxp->class_err=1;;\n     break;}\n case 69:\n-#line 700 \"./parse.y\"\n+#line 699 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 70:\n-#line 702 \"./parse.y\"\n+#line 701 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 71:\n-#line 704 \"./parse.y\"\n+#line 703 \"./parse.y\"\n {\n \t\t  ctxp->class_err=1;\n \t\t  yyerror (\"Missing interface name\"); \n \t\t;\n     break;}\n case 72:\n-#line 712 \"./parse.y\"\n+#line 711 \"./parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 73:\n-#line 717 \"./parse.y\"\n+#line 716 \"./parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 74:\n-#line 722 \"./parse.y\"\n+#line 721 \"./parse.y\"\n {yyerror (\"Missing interface name\"); RECOVER;;\n     break;}\n case 75:\n-#line 727 \"./parse.y\"\n+#line 726 \"./parse.y\"\n { yyval.node = ctxp->current_parsed_class; ;\n     break;}\n case 76:\n-#line 729 \"./parse.y\"\n+#line 728 \"./parse.y\"\n { yyval.node = ctxp->current_parsed_class; ;\n     break;}\n case 82:\n-#line 742 \"./parse.y\"\n+#line 741 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"instance initializer\"); ;\n     break;}\n case 84:\n-#line 748 \"./parse.y\"\n+#line 747 \"./parse.y\"\n { yyval.node = yyvsp[-1].node; ;\n     break;}\n case 86:\n-#line 751 \"./parse.y\"\n+#line 750 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner classe declaration\"); ;\n     break;}\n case 87:\n-#line 753 \"./parse.y\"\n+#line 752 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner interface declaration\"); ;\n     break;}\n case 88:\n-#line 759 \"./parse.y\"\n+#line 758 \"./parse.y\"\n { register_fields (0, yyvsp[-2].node, yyvsp[-1].node); ;\n     break;}\n case 89:\n-#line 761 \"./parse.y\"\n+#line 760 \"./parse.y\"\n {\n \t\t  check_modifiers \n \t\t    (\"Illegal modifier `%s' for field declaration\",\n@@ -3002,19 +3001,19 @@ case 89:\n \t\t;\n     break;}\n case 91:\n-#line 774 \"./parse.y\"\n+#line 773 \"./parse.y\"\n { yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 92:\n-#line 776 \"./parse.y\"\n+#line 775 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 93:\n-#line 781 \"./parse.y\"\n+#line 780 \"./parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 94:\n-#line 783 \"./parse.y\"\n+#line 782 \"./parse.y\"\n { \n \t\t  if (java_error_count)\n \t\t    yyvsp[0].node = NULL_TREE;\n@@ -3023,101 +3022,101 @@ case 94:\n \t\t;\n     break;}\n case 95:\n-#line 790 \"./parse.y\"\n+#line 789 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing variable initializer\");\n \t\t  yyval.node = build_tree_list (yyvsp[-2].node, NULL_TREE);\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 96:\n-#line 796 \"./parse.y\"\n+#line 795 \"./parse.y\"\n {\n \t\t  yyerror (\"';' expected\");\n \t\t  yyval.node = build_tree_list (yyvsp[-3].node, NULL_TREE);\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 98:\n-#line 806 \"./parse.y\"\n+#line 805 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 99:\n-#line 808 \"./parse.y\"\n+#line 807 \"./parse.y\"\n {yyerror (\"Invalid declaration\"); DRECOVER(vdi);;\n     break;}\n case 100:\n-#line 810 \"./parse.y\"\n+#line 809 \"./parse.y\"\n {yyerror (\"']' expected\"); DRECOVER(vdi);;\n     break;}\n case 101:\n-#line 812 \"./parse.y\"\n+#line 811 \"./parse.y\"\n {yyerror (\"Unbalanced ']'\"); DRECOVER(vdi);;\n     break;}\n case 104:\n-#line 823 \"./parse.y\"\n+#line 822 \"./parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  source_start_java_method (current_function_decl);\n \t\t;\n     break;}\n case 105:\n-#line 828 \"./parse.y\"\n-{ complete_method_declaration (yyvsp[0].node); ;\n+#line 827 \"./parse.y\"\n+{ finish_method_declaration (yyvsp[0].node); ;\n     break;}\n case 106:\n-#line 830 \"./parse.y\"\n+#line 829 \"./parse.y\"\n {YYNOT_TWICE yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 107:\n-#line 835 \"./parse.y\"\n+#line 834 \"./parse.y\"\n { yyval.node = method_header (0, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 108:\n-#line 837 \"./parse.y\"\n+#line 836 \"./parse.y\"\n { yyval.node = method_header (0, void_type_node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 109:\n-#line 839 \"./parse.y\"\n+#line 838 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-3].value, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 110:\n-#line 841 \"./parse.y\"\n+#line 840 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-3].value, void_type_node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 111:\n-#line 843 \"./parse.y\"\n+#line 842 \"./parse.y\"\n {RECOVER;;\n     break;}\n case 112:\n-#line 845 \"./parse.y\"\n+#line 844 \"./parse.y\"\n {RECOVER;;\n     break;}\n case 113:\n-#line 847 \"./parse.y\"\n+#line 846 \"./parse.y\"\n {yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 114:\n-#line 849 \"./parse.y\"\n+#line 848 \"./parse.y\"\n {yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 115:\n-#line 851 \"./parse.y\"\n+#line 850 \"./parse.y\"\n {\n \t\t  yyerror (\"Invalid method declaration, return type required\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 116:\n-#line 859 \"./parse.y\"\n+#line 858 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 117:\n-#line 861 \"./parse.y\"\n+#line 860 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 118:\n-#line 863 \"./parse.y\"\n+#line 862 \"./parse.y\"\n {\n \t\t  EXPR_WFL_LINECOL (wfl_operator) = yyvsp[-1].operator.location;\n \t\t  TREE_PURPOSE (yyvsp[-2].node) = \n@@ -3128,346 +3127,346 @@ case 118:\n \t\t;\n     break;}\n case 119:\n-#line 872 \"./parse.y\"\n+#line 871 \"./parse.y\"\n {yyerror (\"')' expected\"); DRECOVER(method_declarator);;\n     break;}\n case 120:\n-#line 874 \"./parse.y\"\n+#line 873 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 121:\n-#line 879 \"./parse.y\"\n+#line 878 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number = 1;\n \t\t;\n     break;}\n case 122:\n-#line 883 \"./parse.y\"\n+#line 882 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 123:\n-#line 888 \"./parse.y\"\n+#line 887 \"./parse.y\"\n {yyerror (\"Missing formal parameter term\"); RECOVER;;\n     break;}\n case 124:\n-#line 893 \"./parse.y\"\n+#line 892 \"./parse.y\"\n {\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, yyvsp[-1].node);\n \t\t;\n     break;}\n case 125:\n-#line 897 \"./parse.y\"\n+#line 896 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"final parameters\"); ;\n     break;}\n case 126:\n-#line 899 \"./parse.y\"\n+#line 898 \"./parse.y\"\n {yyerror (\"Missing identifier\"); RECOVER;;\n     break;}\n case 127:\n-#line 901 \"./parse.y\"\n+#line 900 \"./parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[-2].value));\n \t\t  yyerror (\"Missing identifier\"); RECOVER;\n \t\t;\n     break;}\n case 128:\n-#line 908 \"./parse.y\"\n+#line 907 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 129:\n-#line 910 \"./parse.y\"\n+#line 909 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 130:\n-#line 912 \"./parse.y\"\n+#line 911 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 131:\n-#line 917 \"./parse.y\"\n+#line 916 \"./parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, yyvsp[0].node); ;\n     break;}\n case 132:\n-#line 919 \"./parse.y\"\n+#line 918 \"./parse.y\"\n { yyval.node = tree_cons (yyvsp[0].node, yyvsp[0].node, yyvsp[-2].node); ;\n     break;}\n case 133:\n-#line 921 \"./parse.y\"\n+#line 920 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 136:\n-#line 928 \"./parse.y\"\n+#line 927 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 137:\n-#line 934 \"./parse.y\"\n+#line 933 \"./parse.y\"\n {\n \t\t  RULE (\"STATIC_INITIALIZER\");\n \t\t;\n     break;}\n case 138:\n-#line 938 \"./parse.y\"\n+#line 937 \"./parse.y\"\n {\n \t\t  RULE (\"STATIC_INITIALIZER\");\n \t\t;\n     break;}\n case 139:\n-#line 945 \"./parse.y\"\n+#line 944 \"./parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[0].value));\n \t\t;\n     break;}\n case 140:\n-#line 953 \"./parse.y\"\n+#line 952 \"./parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  source_start_java_method (current_function_decl);\n \t\t;\n     break;}\n case 141:\n-#line 958 \"./parse.y\"\n-{ complete_method_declaration (yyvsp[0].node); ;\n+#line 957 \"./parse.y\"\n+{ finish_method_declaration (yyvsp[0].node); ;\n     break;}\n case 142:\n-#line 963 \"./parse.y\"\n+#line 962 \"./parse.y\"\n { yyval.node = method_header (0, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 143:\n-#line 965 \"./parse.y\"\n+#line 964 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-2].value, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 144:\n-#line 970 \"./parse.y\"\n+#line 969 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 145:\n-#line 972 \"./parse.y\"\n+#line 971 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 146:\n-#line 980 \"./parse.y\"\n+#line 979 \"./parse.y\"\n { \n \t\t  BLOCK_EXPR_BODY (yyvsp[0].node) = empty_stmt_node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 147:\n-#line 985 \"./parse.y\"\n+#line 984 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 148:\n-#line 987 \"./parse.y\"\n+#line 986 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 149:\n-#line 989 \"./parse.y\"\n+#line 988 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 150:\n-#line 995 \"./parse.y\"\n+#line 994 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-3].node, NULL_TREE); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-3].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 151:\n-#line 1001 \"./parse.y\"\n+#line 1000 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-4].node, yyvsp[-2].node); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-4].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 152:\n-#line 1009 \"./parse.y\"\n+#line 1008 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 153:\n-#line 1011 \"./parse.y\"\n+#line 1010 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 154:\n-#line 1016 \"./parse.y\"\n+#line 1015 \"./parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (this_identifier_node);\n \t\t  EXPR_WFL_LINECOL (wfl) = yyvsp[0].operator.location;\n \t\t  yyval.node = wfl;\n \t\t;\n     break;}\n case 155:\n-#line 1022 \"./parse.y\"\n+#line 1021 \"./parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (super_identifier_node);\n \t\t  EXPR_WFL_LINECOL (wfl) = yyvsp[0].operator.location;\n \t\t  yyval.node = wfl;\n \t\t;\n     break;}\n case 156:\n-#line 1033 \"./parse.y\"\n+#line 1032 \"./parse.y\"\n { create_interface (0, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 157:\n-#line 1035 \"./parse.y\"\n+#line 1034 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 158:\n-#line 1039 \"./parse.y\"\n+#line 1038 \"./parse.y\"\n { create_interface (yyvsp[-2].value, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 159:\n-#line 1041 \"./parse.y\"\n+#line 1040 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 160:\n-#line 1045 \"./parse.y\"\n+#line 1044 \"./parse.y\"\n { create_interface (0, yyvsp[-1].node, yyvsp[0].node);\t;\n     break;}\n case 161:\n-#line 1047 \"./parse.y\"\n+#line 1046 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 162:\n-#line 1051 \"./parse.y\"\n+#line 1050 \"./parse.y\"\n { create_interface (yyvsp[-3].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 163:\n-#line 1053 \"./parse.y\"\n+#line 1052 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 164:\n-#line 1057 \"./parse.y\"\n+#line 1056 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 165:\n-#line 1059 \"./parse.y\"\n+#line 1058 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 166:\n-#line 1064 \"./parse.y\"\n+#line 1063 \"./parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 167:\n-#line 1069 \"./parse.y\"\n+#line 1068 \"./parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 168:\n-#line 1074 \"./parse.y\"\n+#line 1073 \"./parse.y\"\n {yyerror (\"Invalid interface type\"); RECOVER;;\n     break;}\n case 169:\n-#line 1076 \"./parse.y\"\n+#line 1075 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 170:\n-#line 1081 \"./parse.y\"\n+#line 1080 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 171:\n-#line 1083 \"./parse.y\"\n+#line 1082 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 176:\n-#line 1095 \"./parse.y\"\n+#line 1094 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 177:\n-#line 1097 \"./parse.y\"\n+#line 1096 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner interface declaration\"); ;\n     break;}\n case 179:\n-#line 1106 \"./parse.y\"\n+#line 1105 \"./parse.y\"\n { \n \t\t  check_abstract_method_header (yyvsp[-1].node);\n \t\t  current_function_decl = NULL_TREE; /* FIXME ? */\n \t\t;\n     break;}\n case 180:\n-#line 1111 \"./parse.y\"\n+#line 1110 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 181:\n-#line 1117 \"./parse.y\"\n+#line 1116 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 182:\n-#line 1119 \"./parse.y\"\n+#line 1118 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 183:\n-#line 1121 \"./parse.y\"\n+#line 1120 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-3].operator.location, yyvsp[-2].node); ;\n     break;}\n case 184:\n-#line 1126 \"./parse.y\"\n+#line 1125 \"./parse.y\"\n { \n \t\t  yyval.node = tree_cons (maybe_build_array_element_wfl (yyvsp[0].node), \n \t\t\t\t  yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 185:\n-#line 1131 \"./parse.y\"\n+#line 1130 \"./parse.y\"\n {\n \t\t  yyval.node = tree_cons (maybe_build_array_element_wfl (yyvsp[0].node), yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 186:\n-#line 1135 \"./parse.y\"\n+#line 1134 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 187:\n-#line 1141 \"./parse.y\"\n+#line 1140 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 188:\n-#line 1143 \"./parse.y\"\n+#line 1142 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 189:\n-#line 1148 \"./parse.y\"\n+#line 1147 \"./parse.y\"\n { enter_block (); ;\n     break;}\n case 190:\n-#line 1153 \"./parse.y\"\n+#line 1152 \"./parse.y\"\n { \n \t\t  maybe_absorb_scoping_blocks ();\n \t\t  yyval.node = exit_block ();\n \t\t;\n     break;}\n case 194:\n-#line 1167 \"./parse.y\"\n+#line 1166 \"./parse.y\"\n { java_method_add_stmt (current_function_decl, yyvsp[0].node); ;\n     break;}\n case 195:\n-#line 1169 \"./parse.y\"\n+#line 1168 \"./parse.y\"\n { parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 197:\n-#line 1178 \"./parse.y\"\n+#line 1177 \"./parse.y\"\n { declare_local_variables (0, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 198:\n-#line 1180 \"./parse.y\"\n+#line 1179 \"./parse.y\"\n { declare_local_variables (yyvsp[-2].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 204:\n-#line 1190 \"./parse.y\"\n+#line 1189 \"./parse.y\"\n { \n \t\t  /* If the for loop is unlabeled, we must return the\n \t\t     block it was defined it. It our last chance to\n@@ -3477,11 +3476,11 @@ case 204:\n \t\t;\n     break;}\n case 221:\n-#line 1223 \"./parse.y\"\n+#line 1222 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 222:\n-#line 1228 \"./parse.y\"\n+#line 1227 \"./parse.y\"\n {\n \t\t  yyval.node = build_labeled_block (EXPR_WFL_LINECOL (yyvsp[-1].node), \n \t\t\t\t\t    EXPR_WFL_NODE (yyvsp[-1].node));\n@@ -3491,27 +3490,19 @@ case 222:\n \t\t;\n     break;}\n case 223:\n-#line 1239 \"./parse.y\"\n-{ \n-\t\t  yyval.node = complete_labeled_statement (yyvsp[-1].node, yyvsp[0].node);\n-\t\t  pop_labeled_block ();\n-\t\t  POP_LABELED_BLOCK ();\n-\t\t;\n+#line 1238 \"./parse.y\"\n+{ yyval.node = finish_labeled_statement (yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 224:\n-#line 1245 \"./parse.y\"\n+#line 1240 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 225:\n-#line 1250 \"./parse.y\"\n-{ \n-\t\t  yyval.node = complete_labeled_statement (yyvsp[-1].node, yyvsp[0].node);\n-\t\t  pop_labeled_block ();\n-\t\t  POP_LABELED_BLOCK ();\n-\t\t;\n+#line 1245 \"./parse.y\"\n+{ yyval.node = finish_labeled_statement (yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 226:\n-#line 1261 \"./parse.y\"\n+#line 1252 \"./parse.y\"\n {\n \t\t  /* We have a statement. Generate a WFL around it so\n \t\t     we can debug it */\n@@ -3522,108 +3513,108 @@ case 226:\n \t\t;\n     break;}\n case 227:\n-#line 1270 \"./parse.y\"\n+#line 1261 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 228:\n-#line 1276 \"./parse.y\"\n+#line 1267 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 229:\n-#line 1282 \"./parse.y\"\n+#line 1273 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 230:\n-#line 1288 \"./parse.y\"\n+#line 1279 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 231:\n-#line 1290 \"./parse.y\"\n+#line 1281 \"./parse.y\"\n {\n \t\t  yyerror (\"Constructor invocation must be first \"\n \t\t\t   \"thing in a constructor\"); \n \t\t  RECOVER;\n \t\t;\n     break;}\n case 232:\n-#line 1296 \"./parse.y\"\n+#line 1287 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 233:\n-#line 1298 \"./parse.y\"\n+#line 1289 \"./parse.y\"\n {\n \t\t  yyerror (\"Constructor invocation must be first \"\n \t\t\t   \"thing in a constructor\"); \n \t\t  RECOVER;\n \t\t;\n     break;}\n case 234:\n-#line 1304 \"./parse.y\"\n+#line 1295 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 235:\n-#line 1306 \"./parse.y\"\n+#line 1297 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 236:\n-#line 1308 \"./parse.y\"\n+#line 1299 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 237:\n-#line 1310 \"./parse.y\"\n+#line 1301 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 238:\n-#line 1312 \"./parse.y\"\n+#line 1303 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 246:\n-#line 1327 \"./parse.y\"\n+#line 1318 \"./parse.y\"\n { \n \t\t  yyval.node = build_if_else_statement (yyvsp[-3].operator.location, yyvsp[-2].node, \n \t\t\t\t\t\tyyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 247:\n-#line 1332 \"./parse.y\"\n+#line 1323 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 248:\n-#line 1334 \"./parse.y\"\n+#line 1325 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 249:\n-#line 1336 \"./parse.y\"\n+#line 1327 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 250:\n-#line 1341 \"./parse.y\"\n+#line 1332 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 251:\n-#line 1346 \"./parse.y\"\n+#line 1337 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 252:\n-#line 1351 \"./parse.y\"\n+#line 1342 \"./parse.y\"\n {\n \t\t  enter_block ();\n \t\t;\n     break;}\n case 253:\n-#line 1355 \"./parse.y\"\n+#line 1346 \"./parse.y\"\n { \n \t\t  /* Make into \"proper list\" of COMPOUND_EXPRs.\n \t\t     I.e. make the last statment also have its own\n@@ -3634,162 +3625,162 @@ case 253:\n \t\t;\n     break;}\n case 254:\n-#line 1367 \"./parse.y\"\n+#line 1358 \"./parse.y\"\n { \n \t\t  yyval.node = build (SWITCH_EXPR, NULL_TREE, yyvsp[-1].node, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 255:\n-#line 1372 \"./parse.y\"\n+#line 1363 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 256:\n-#line 1374 \"./parse.y\"\n+#line 1365 \"./parse.y\"\n {yyerror (\"Missing term or ')'\"); DRECOVER(switch_statement);;\n     break;}\n case 257:\n-#line 1376 \"./parse.y\"\n+#line 1367 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 258:\n-#line 1384 \"./parse.y\"\n+#line 1375 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 259:\n-#line 1386 \"./parse.y\"\n+#line 1377 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 260:\n-#line 1388 \"./parse.y\"\n+#line 1379 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 261:\n-#line 1390 \"./parse.y\"\n+#line 1381 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 267:\n-#line 1409 \"./parse.y\"\n+#line 1400 \"./parse.y\"\n { \n \t\t  tree lab = build1 (CASE_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-2].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 268:\n-#line 1415 \"./parse.y\"\n+#line 1406 \"./parse.y\"\n { \n \t\t  tree lab = build1 (DEFAULT_EXPR, NULL_TREE, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-1].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 269:\n-#line 1421 \"./parse.y\"\n+#line 1412 \"./parse.y\"\n {yyerror (\"Missing or invalid constant expression\"); RECOVER;;\n     break;}\n case 270:\n-#line 1423 \"./parse.y\"\n+#line 1414 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 271:\n-#line 1425 \"./parse.y\"\n+#line 1416 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 272:\n-#line 1430 \"./parse.y\"\n+#line 1421 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (yyvsp[-2].operator.location, yyvsp[-1].node, 0);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 273:\n-#line 1438 \"./parse.y\"\n-{ yyval.node = complete_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n+#line 1429 \"./parse.y\"\n+{ yyval.node = finish_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 274:\n-#line 1440 \"./parse.y\"\n+#line 1431 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 275:\n-#line 1442 \"./parse.y\"\n+#line 1433 \"./parse.y\"\n {yyerror (\"Missing term and ')' expected\"); RECOVER;;\n     break;}\n case 276:\n-#line 1444 \"./parse.y\"\n+#line 1435 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 277:\n-#line 1449 \"./parse.y\"\n-{ yyval.node = complete_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n+#line 1440 \"./parse.y\"\n+{ yyval.node = finish_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 278:\n-#line 1454 \"./parse.y\"\n+#line 1445 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (0, NULL_TREE, 1);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 279:\n-#line 1463 \"./parse.y\"\n-{ yyval.node = complete_loop_body (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[-5].node, 1); ;\n+#line 1454 \"./parse.y\"\n+{ yyval.node = finish_loop_body (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[-5].node, 1); ;\n     break;}\n case 280:\n-#line 1468 \"./parse.y\"\n-{ yyval.node = complete_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n+#line 1459 \"./parse.y\"\n+{ yyval.node = finish_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 281:\n-#line 1470 \"./parse.y\"\n+#line 1461 \"./parse.y\"\n { \n-\t\t  yyval.node = complete_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n+\t\t  yyval.node = finish_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n \t\t  LOOP_EXPR_BODY_CONDITION_EXPR (LOOP_EXPR_BODY (yyval.node), 0) = \n \t\t    empty_stmt_node;\n \t\t;\n     break;}\n case 282:\n-#line 1477 \"./parse.y\"\n+#line 1468 \"./parse.y\"\n {yyerror (\"Invalid control expression\"); RECOVER;;\n     break;}\n case 283:\n-#line 1479 \"./parse.y\"\n+#line 1470 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 284:\n-#line 1481 \"./parse.y\"\n+#line 1472 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 285:\n-#line 1486 \"./parse.y\"\n-{ yyval.node = complete_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);;\n+#line 1477 \"./parse.y\"\n+{ yyval.node = finish_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);;\n     break;}\n case 286:\n-#line 1488 \"./parse.y\"\n+#line 1479 \"./parse.y\"\n { \n-\t\t  yyval.node = complete_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n+\t\t  yyval.node = finish_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n \t\t  LOOP_EXPR_BODY_CONDITION_EXPR (LOOP_EXPR_BODY (yyval.node), 0) = \n \t\t    empty_stmt_node;\n \t\t;\n     break;}\n case 287:\n-#line 1498 \"./parse.y\"\n+#line 1489 \"./parse.y\"\n { \n \t\t  /* This scope defined for local variable that may be\n                      defined within the scope of the for loop */\n \t\t  enter_block (); \n \t\t;\n     break;}\n case 288:\n-#line 1504 \"./parse.y\"\n+#line 1495 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(for_1);;\n     break;}\n case 289:\n-#line 1506 \"./parse.y\"\n+#line 1497 \"./parse.y\"\n {yyerror (\"Invalid init statement\"); RECOVER;;\n     break;}\n case 290:\n-#line 1511 \"./parse.y\"\n+#line 1502 \"./parse.y\"\n { \n \t\t  /* We now declare the loop body. The loop is\n                      declared as a for loop. */\n@@ -3802,179 +3793,179 @@ case 290:\n \t\t;\n     break;}\n case 291:\n-#line 1523 \"./parse.y\"\n+#line 1514 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 292:\n-#line 1525 \"./parse.y\"\n+#line 1516 \"./parse.y\"\n { \n \t\t  /* Init statement recorded within the previously\n                      defined block scope */\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t;\n     break;}\n case 293:\n-#line 1531 \"./parse.y\"\n+#line 1522 \"./parse.y\"\n { \n \t\t  /* Local variable are recorded within the previously\n \t\t     defined block scope */\n \t\t  yyval.node = NULL_TREE;\n \t\t;\n     break;}\n case 294:\n-#line 1537 \"./parse.y\"\n+#line 1528 \"./parse.y\"\n {yyerror (\"';' expected\"); DRECOVER(for_init_1);;\n     break;}\n case 295:\n-#line 1541 \"./parse.y\"\n+#line 1532 \"./parse.y\"\n {yyval.node = empty_stmt_node;;\n     break;}\n case 296:\n-#line 1543 \"./parse.y\"\n+#line 1534 \"./parse.y\"\n { yyval.node = build_debugable_stmt (BUILD_LOCATION (), yyvsp[0].node); ;\n     break;}\n case 297:\n-#line 1548 \"./parse.y\"\n+#line 1539 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (NULL_TREE, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 298:\n-#line 1550 \"./parse.y\"\n+#line 1541 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (yyvsp[-2].node, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 299:\n-#line 1552 \"./parse.y\"\n+#line 1543 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 300:\n-#line 1557 \"./parse.y\"\n+#line 1548 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 1, NULL_TREE); ;\n     break;}\n case 301:\n-#line 1559 \"./parse.y\"\n+#line 1550 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 1, yyvsp[-1].node); ;\n     break;}\n case 302:\n-#line 1561 \"./parse.y\"\n+#line 1552 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 303:\n-#line 1563 \"./parse.y\"\n+#line 1554 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 304:\n-#line 1568 \"./parse.y\"\n+#line 1559 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 0, NULL_TREE); ;\n     break;}\n case 305:\n-#line 1570 \"./parse.y\"\n+#line 1561 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 0, yyvsp[-1].node); ;\n     break;}\n case 306:\n-#line 1572 \"./parse.y\"\n+#line 1563 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 307:\n-#line 1574 \"./parse.y\"\n+#line 1565 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 308:\n-#line 1579 \"./parse.y\"\n+#line 1570 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 309:\n-#line 1581 \"./parse.y\"\n+#line 1572 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 310:\n-#line 1583 \"./parse.y\"\n+#line 1574 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 311:\n-#line 1585 \"./parse.y\"\n+#line 1576 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 312:\n-#line 1590 \"./parse.y\"\n+#line 1581 \"./parse.y\"\n { \n \t\t  yyval.node = build1 (THROW_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 313:\n-#line 1595 \"./parse.y\"\n+#line 1586 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 314:\n-#line 1597 \"./parse.y\"\n+#line 1588 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 315:\n-#line 1602 \"./parse.y\"\n+#line 1593 \"./parse.y\"\n { \n \t\t  yyval.node = build (SYNCHRONIZED_EXPR, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = \n \t\t    EXPR_WFL_LINECOL (MODIFIER_WFL (SYNCHRONIZED_TK));\n \t\t;\n     break;}\n case 316:\n-#line 1608 \"./parse.y\"\n+#line 1599 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 317:\n-#line 1610 \"./parse.y\"\n+#line 1601 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 318:\n-#line 1612 \"./parse.y\"\n+#line 1603 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 319:\n-#line 1614 \"./parse.y\"\n+#line 1605 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 320:\n-#line 1619 \"./parse.y\"\n+#line 1610 \"./parse.y\"\n {\n \t\t  if ((1 << yyvsp[0].value) != ACC_SYNCHRONIZED)\n \t\t    fatal (\"synchronized was '%d' - yyparse\", (1 << yyvsp[0].value));\n \t\t;\n     break;}\n case 321:\n-#line 1627 \"./parse.y\"\n+#line 1618 \"./parse.y\"\n { yyval.node = build_try_statement (yyvsp[-2].operator.location, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 322:\n-#line 1629 \"./parse.y\"\n+#line 1620 \"./parse.y\"\n { yyval.node = build_try_finally_statement (yyvsp[-2].operator.location, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 323:\n-#line 1631 \"./parse.y\"\n+#line 1622 \"./parse.y\"\n { yyval.node = build_try_finally_statement \n \t\t    (yyvsp[-3].operator.location, build_try_statement (yyvsp[-3].operator.location,\n \t\t\t\t\t\t       yyvsp[-2].node, yyvsp[-1].node), yyvsp[0].node);\n \t\t;\n     break;}\n case 324:\n-#line 1636 \"./parse.y\"\n+#line 1627 \"./parse.y\"\n {yyerror (\"'{' expected\"); DRECOVER (try_statement);;\n     break;}\n case 326:\n-#line 1642 \"./parse.y\"\n+#line 1633 \"./parse.y\"\n { \n \t\t  TREE_CHAIN (yyvsp[0].node) = yyvsp[-1].node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 327:\n-#line 1650 \"./parse.y\"\n+#line 1641 \"./parse.y\"\n { \n \t\t  java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t  exit_block ();\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 328:\n-#line 1658 \"./parse.y\"\n+#line 1649 \"./parse.y\"\n { \n \t\t  /* We add a block to define a scope for\n \t\t     formal_parameter (CCBP). The formal parameter is\n@@ -3992,184 +3983,184 @@ case 328:\n \t\t;\n     break;}\n case 329:\n-#line 1674 \"./parse.y\"\n+#line 1665 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 330:\n-#line 1676 \"./parse.y\"\n+#line 1667 \"./parse.y\"\n {yyerror (\"Missing term or ')' expected\"); DRECOVER (2);;\n     break;}\n case 331:\n-#line 1678 \"./parse.y\"\n+#line 1669 \"./parse.y\"\n {yyerror (\"')' expected\"); DRECOVER (1);;\n     break;}\n case 332:\n-#line 1683 \"./parse.y\"\n+#line 1674 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 333:\n-#line 1685 \"./parse.y\"\n+#line 1676 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER; ;\n     break;}\n case 337:\n-#line 1697 \"./parse.y\"\n+#line 1688 \"./parse.y\"\n { yyval.node = build_this (yyvsp[0].operator.location); ;\n     break;}\n case 338:\n-#line 1699 \"./parse.y\"\n+#line 1690 \"./parse.y\"\n {yyval.node = yyvsp[-1].node;;\n     break;}\n case 343:\n-#line 1708 \"./parse.y\"\n+#line 1699 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"named class literals\"); ;\n     break;}\n case 344:\n-#line 1710 \"./parse.y\"\n+#line 1701 \"./parse.y\"\n { yyval.node = build_class_ref (yyvsp[-2].node); ;\n     break;}\n case 345:\n-#line 1712 \"./parse.y\"\n+#line 1703 \"./parse.y\"\n { yyval.node = build_class_ref (void_type_node); ;\n     break;}\n case 346:\n-#line 1717 \"./parse.y\"\n+#line 1708 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"class literals\"); ;\n     break;}\n case 347:\n-#line 1719 \"./parse.y\"\n+#line 1710 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 348:\n-#line 1721 \"./parse.y\"\n+#line 1712 \"./parse.y\"\n {yyerror (\"'class' or 'this' expected\" ); RECOVER;;\n     break;}\n case 349:\n-#line 1723 \"./parse.y\"\n+#line 1714 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 350:\n-#line 1725 \"./parse.y\"\n+#line 1716 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 351:\n-#line 1730 \"./parse.y\"\n+#line 1721 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 352:\n-#line 1732 \"./parse.y\"\n+#line 1723 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 353:\n-#line 1737 \"./parse.y\"\n+#line 1728 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 354:\n-#line 1739 \"./parse.y\"\n+#line 1730 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 359:\n-#line 1748 \"./parse.y\"\n+#line 1739 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(new_1);;\n     break;}\n case 360:\n-#line 1750 \"./parse.y\"\n+#line 1741 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 361:\n-#line 1752 \"./parse.y\"\n+#line 1743 \"./parse.y\"\n {yyerror (\"')' or term expected\"); RECOVER;;\n     break;}\n case 362:\n-#line 1754 \"./parse.y\"\n+#line 1745 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 363:\n-#line 1756 \"./parse.y\"\n+#line 1747 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 364:\n-#line 1758 \"./parse.y\"\n+#line 1749 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 367:\n-#line 1768 \"./parse.y\"\n+#line 1759 \"./parse.y\"\n { \n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, NULL_TREE);\n \t\t  ctxp->formal_parameter_number = 1; \n \t\t;\n     break;}\n case 368:\n-#line 1773 \"./parse.y\"\n+#line 1764 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 369:\n-#line 1778 \"./parse.y\"\n+#line 1769 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 370:\n-#line 1783 \"./parse.y\"\n+#line 1774 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 371:\n-#line 1785 \"./parse.y\"\n+#line 1776 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 372:\n-#line 1787 \"./parse.y\"\n+#line 1778 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, CURRENT_OSB (ctxp));;\n     break;}\n case 373:\n-#line 1789 \"./parse.y\"\n+#line 1780 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, CURRENT_OSB (ctxp));;\n     break;}\n case 374:\n-#line 1793 \"./parse.y\"\n+#line 1784 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 375:\n-#line 1795 \"./parse.y\"\n+#line 1786 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 376:\n-#line 1797 \"./parse.y\"\n+#line 1788 \"./parse.y\"\n {yyerror (\"'[' expected\"); DRECOVER (\"]\");;\n     break;}\n case 377:\n-#line 1799 \"./parse.y\"\n+#line 1790 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 378:\n-#line 1804 \"./parse.y\"\n+#line 1795 \"./parse.y\"\n { yyval.node = build_tree_list (NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 379:\n-#line 1806 \"./parse.y\"\n+#line 1797 \"./parse.y\"\n { yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyval.node); ;\n     break;}\n case 380:\n-#line 1811 \"./parse.y\"\n+#line 1802 \"./parse.y\"\n { \n \t\t  EXPR_WFL_LINECOL (yyvsp[-1].node) = yyvsp[-2].operator.location;\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 381:\n-#line 1816 \"./parse.y\"\n+#line 1807 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 382:\n-#line 1818 \"./parse.y\"\n+#line 1809 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term\");\n \t\t  yyerror (\"']' expected\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 383:\n-#line 1827 \"./parse.y\"\n+#line 1818 \"./parse.y\"\n { \n \t\t  int allocate = 0;\n \t\t  /* If not initialized, allocate memory for the osb\n@@ -4197,19 +4188,19 @@ case 383:\n \t\t;\n     break;}\n case 384:\n-#line 1853 \"./parse.y\"\n+#line 1844 \"./parse.y\"\n { CURRENT_OSB (ctxp)++; ;\n     break;}\n case 385:\n-#line 1855 \"./parse.y\"\n+#line 1846 \"./parse.y\"\n { yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 386:\n-#line 1860 \"./parse.y\"\n+#line 1851 \"./parse.y\"\n { yyval.node = make_qualified_primary (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 387:\n-#line 1864 \"./parse.y\"\n+#line 1855 \"./parse.y\"\n {\n \t\t  tree super_wfl = \n \t\t    build_wfl_node (super_identifier_node);\n@@ -4218,19 +4209,19 @@ case 387:\n \t\t;\n     break;}\n case 388:\n-#line 1871 \"./parse.y\"\n+#line 1862 \"./parse.y\"\n {yyerror (\"Field expected\"); DRECOVER (super_field_acces);;\n     break;}\n case 389:\n-#line 1876 \"./parse.y\"\n+#line 1867 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 390:\n-#line 1878 \"./parse.y\"\n+#line 1869 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 391:\n-#line 1880 \"./parse.y\"\n+#line 1871 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-4].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4243,7 +4234,7 @@ case 391:\n \t\t;\n     break;}\n case 392:\n-#line 1891 \"./parse.y\"\n+#line 1882 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-5].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4256,121 +4247,121 @@ case 392:\n \t\t;\n     break;}\n case 393:\n-#line 1902 \"./parse.y\"\n+#line 1893 \"./parse.y\"\n { \n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-2].node, NULL_TREE, yyvsp[-4].operator.location, yyvsp[-3].operator.location);\n \t\t;\n     break;}\n case 394:\n-#line 1907 \"./parse.y\"\n+#line 1898 \"./parse.y\"\n {\n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-3].node, yyvsp[-1].node, yyvsp[-5].operator.location, yyvsp[-4].operator.location);\n \t\t;\n     break;}\n case 395:\n-#line 1916 \"./parse.y\"\n+#line 1907 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 396:\n-#line 1918 \"./parse.y\"\n+#line 1909 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 397:\n-#line 1923 \"./parse.y\"\n+#line 1914 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 398:\n-#line 1925 \"./parse.y\"\n+#line 1916 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 399:\n-#line 1927 \"./parse.y\"\n+#line 1918 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 400:\n-#line 1932 \"./parse.y\"\n+#line 1923 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 401:\n-#line 1937 \"./parse.y\"\n+#line 1928 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 402:\n-#line 1942 \"./parse.y\"\n+#line 1933 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 407:\n-#line 1957 \"./parse.y\"\n+#line 1948 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 408:\n-#line 1962 \"./parse.y\"\n+#line 1953 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 411:\n-#line 1969 \"./parse.y\"\n+#line 1960 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 412:\n-#line 1971 \"./parse.y\"\n+#line 1962 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 414:\n-#line 1974 \"./parse.y\"\n+#line 1965 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 415:\n-#line 1976 \"./parse.y\"\n+#line 1967 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 416:\n-#line 1981 \"./parse.y\"\n+#line 1972 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 417:\n-#line 1983 \"./parse.y\"\n+#line 1974 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 418:\n-#line 1988 \"./parse.y\"\n+#line 1979 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 419:\n-#line 1990 \"./parse.y\"\n+#line 1981 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 421:\n-#line 1996 \"./parse.y\"\n+#line 1987 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 422:\n-#line 1998 \"./parse.y\"\n+#line 1989 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 424:\n-#line 2001 \"./parse.y\"\n+#line 1992 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 425:\n-#line 2003 \"./parse.y\"\n+#line 1994 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 426:\n-#line 2008 \"./parse.y\"\n+#line 1999 \"./parse.y\"\n { \n \t\t  tree type = yyvsp[-3].node;\n \t\t  while (CURRENT_OSB (ctxp)--)\n@@ -4380,15 +4371,15 @@ case 426:\n \t\t;\n     break;}\n case 427:\n-#line 2016 \"./parse.y\"\n+#line 2007 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 428:\n-#line 2018 \"./parse.y\"\n+#line 2009 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 429:\n-#line 2020 \"./parse.y\"\n+#line 2011 \"./parse.y\"\n { \n \t\t  char *ptr;\n \t\t  while (CURRENT_OSB (ctxp)--)\n@@ -4403,275 +4394,275 @@ case 429:\n \t\t;\n     break;}\n case 430:\n-#line 2033 \"./parse.y\"\n+#line 2024 \"./parse.y\"\n {yyerror (\"']' expected, invalid type expression\");;\n     break;}\n case 431:\n-#line 2035 \"./parse.y\"\n+#line 2026 \"./parse.y\"\n {\n \t          if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid type expression\"); RECOVER;\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 432:\n-#line 2041 \"./parse.y\"\n+#line 2032 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 433:\n-#line 2043 \"./parse.y\"\n+#line 2034 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 434:\n-#line 2045 \"./parse.y\"\n+#line 2036 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 436:\n-#line 2051 \"./parse.y\"\n+#line 2042 \"./parse.y\"\n { \n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), \n \t\t\t\t    yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 437:\n-#line 2056 \"./parse.y\"\n+#line 2047 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 438:\n-#line 2061 \"./parse.y\"\n+#line 2052 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 439:\n-#line 2066 \"./parse.y\"\n+#line 2057 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 440:\n-#line 2068 \"./parse.y\"\n+#line 2059 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 441:\n-#line 2070 \"./parse.y\"\n+#line 2061 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 443:\n-#line 2076 \"./parse.y\"\n+#line 2067 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 444:\n-#line 2081 \"./parse.y\"\n+#line 2072 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 445:\n-#line 2086 \"./parse.y\"\n+#line 2077 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 446:\n-#line 2088 \"./parse.y\"\n+#line 2079 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 448:\n-#line 2094 \"./parse.y\"\n+#line 2085 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 449:\n-#line 2099 \"./parse.y\"\n+#line 2090 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 450:\n-#line 2104 \"./parse.y\"\n+#line 2095 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 451:\n-#line 2109 \"./parse.y\"\n+#line 2100 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 452:\n-#line 2111 \"./parse.y\"\n+#line 2102 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 453:\n-#line 2113 \"./parse.y\"\n+#line 2104 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 455:\n-#line 2119 \"./parse.y\"\n+#line 2110 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 456:\n-#line 2124 \"./parse.y\"\n+#line 2115 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 457:\n-#line 2129 \"./parse.y\"\n+#line 2120 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 458:\n-#line 2134 \"./parse.y\"\n+#line 2125 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 459:\n-#line 2139 \"./parse.y\"\n+#line 2130 \"./parse.y\"\n { yyval.node = build_binop (INSTANCEOF_EXPR, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 460:\n-#line 2141 \"./parse.y\"\n+#line 2132 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 461:\n-#line 2143 \"./parse.y\"\n+#line 2134 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 462:\n-#line 2145 \"./parse.y\"\n+#line 2136 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 463:\n-#line 2147 \"./parse.y\"\n+#line 2138 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 464:\n-#line 2149 \"./parse.y\"\n+#line 2140 \"./parse.y\"\n {yyerror (\"Invalid reference type\"); RECOVER;;\n     break;}\n case 466:\n-#line 2155 \"./parse.y\"\n+#line 2146 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 467:\n-#line 2160 \"./parse.y\"\n+#line 2151 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 468:\n-#line 2165 \"./parse.y\"\n+#line 2156 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 469:\n-#line 2167 \"./parse.y\"\n+#line 2158 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 471:\n-#line 2173 \"./parse.y\"\n+#line 2164 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 472:\n-#line 2178 \"./parse.y\"\n+#line 2169 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 474:\n-#line 2184 \"./parse.y\"\n+#line 2175 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 475:\n-#line 2189 \"./parse.y\"\n+#line 2180 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 477:\n-#line 2195 \"./parse.y\"\n+#line 2186 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 478:\n-#line 2200 \"./parse.y\"\n+#line 2191 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 480:\n-#line 2206 \"./parse.y\"\n+#line 2197 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 481:\n-#line 2211 \"./parse.y\"\n+#line 2202 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 483:\n-#line 2217 \"./parse.y\"\n+#line 2208 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 484:\n-#line 2222 \"./parse.y\"\n+#line 2213 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 486:\n-#line 2228 \"./parse.y\"\n+#line 2219 \"./parse.y\"\n {\n \t\t  yyval.node = build (CONDITIONAL_EXPR, NULL_TREE, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-3].operator.location;\n \t\t;\n     break;}\n case 487:\n-#line 2233 \"./parse.y\"\n+#line 2224 \"./parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Missing term\");\n \t\t  DRECOVER (1);\n \t\t;\n     break;}\n case 488:\n-#line 2239 \"./parse.y\"\n+#line 2230 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (2);;\n     break;}\n case 489:\n-#line 2241 \"./parse.y\"\n+#line 2232 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (3);;\n     break;}\n case 492:\n-#line 2251 \"./parse.y\"\n+#line 2242 \"./parse.y\"\n { yyval.node = build_assignment (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 493:\n-#line 2253 \"./parse.y\"\n+#line 2244 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Missing term\");\n@@ -4876,7 +4867,7 @@ case 493:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 2279 \"./parse.y\"\n+#line 2270 \"./parse.y\"\n \n \f\n \n@@ -6070,7 +6061,7 @@ fix_method_argument_names (orig_arg, meth)\n /* Complete the method declaration with METHOD_BODY.  */\n \n static void\n-complete_method_declaration (method_body)\n+finish_method_declaration (method_body)\n      tree method_body;\n {\n   BLOCK_EXPR_BODY (DECL_FUNCTION_BODY (current_function_decl)) = method_body;\n@@ -10418,15 +10409,18 @@ java_complete_lhs (node)\n \tnode = patch_switch_statement (node);\n \n       if (TREE_OPERAND (node, 0) == error_mark_node)\n-\treturn error_mark_node;\n-      TREE_TYPE (nn) = TREE_TYPE (node) = void_type_node;\n-      /* If we returned something different, that's because we\n-         inserted a label. Pop the label too. */\n-      if (nn != node)\n+\tnn = error_mark_node;\n+      else\n \t{\n-\t  if (CAN_COMPLETE_NORMALLY (node))\n-\t    CAN_COMPLETE_NORMALLY (nn) = 1;\n-\t  POP_LABELED_BLOCK ();\n+\t  TREE_TYPE (nn) = TREE_TYPE (node) = void_type_node;\n+\t  /* If we returned something different, that's because we\n+\t     inserted a label. Pop the label too. */\n+\t  if (nn != node)\n+\t    {\n+\t      if (CAN_COMPLETE_NORMALLY (node))\n+\t\tCAN_COMPLETE_NORMALLY (nn) = 1;\n+\t      POP_LABELED_BLOCK ();\n+\t    }\n \t}\n       POP_LOOP ();\n       return nn;\n@@ -12991,30 +12985,35 @@ patch_if_else_statement (node)\n \n /* Action taken when a lableled statement is parsed. a new\n    LABELED_BLOCK_EXPR is created. No statement is attached to the\n-   label, yet.  */\n+   label, yet.  LABEL can be NULL_TREE for artificially-generated blocks. */\n \n static tree\n build_labeled_block (location, label)\n      int location;\n      tree label;\n {\n-  tree label_name = merge_qualified_name (label_id, label);\n+  tree label_name ;\n   tree label_decl, node;\n-\n-  /* Issue an error if we try to reuse a label that was previously\n-     declared */\n-  if (IDENTIFIER_LOCAL_VALUE (label_name))\n+  if (label == NULL_TREE || label == continue_identifier_node)\n+    label_name = label;\n+  else\n     {\n-      EXPR_WFL_LINECOL (wfl_operator) = location;\n-      parse_error_context (wfl_operator, \"Declaration of `%s' shadows \"\n-\t\t\t     \"a previous label declaration\",\n-\t\t\t     IDENTIFIER_POINTER (label));\n-      EXPR_WFL_LINECOL (wfl_operator) = \n-        EXPR_WFL_LINECOL (IDENTIFIER_LOCAL_VALUE (label_name));\n-      parse_error_context (wfl_operator, \"This is the location of the \"\n-\t\t\t   \"previous declaration of label `%s'\",\n-\t\t\t   IDENTIFIER_POINTER (label));\n-      java_error_count--;\n+      label_name = merge_qualified_name (label_id, label);\n+      /* Issue an error if we try to reuse a label that was previously\n+\t declared */\n+      if (IDENTIFIER_LOCAL_VALUE (label_name))\n+\t{\n+\t  EXPR_WFL_LINECOL (wfl_operator) = location;\n+\t  parse_error_context (wfl_operator, \"Declaration of `%s' shadows \"\n+\t\t\t       \"a previous label declaration\",\n+\t\t\t       IDENTIFIER_POINTER (label));\n+\t  EXPR_WFL_LINECOL (wfl_operator) = \n+\t    EXPR_WFL_LINECOL (IDENTIFIER_LOCAL_VALUE (label_name));\n+\t  parse_error_context (wfl_operator, \"This is the location of the \"\n+\t\t\t       \"previous declaration of label `%s'\",\n+\t\t\t       IDENTIFIER_POINTER (label));\n+\t  java_error_count--;\n+\t}\n     }\n \n   label_decl = create_label_decl (label_name);\n@@ -13024,20 +13023,10 @@ build_labeled_block (location, label)\n   return node;\n }\n \n-/* Generate a label crafting a unique name for it. This is used to\n-   implicitely label loops that aren't the body part of labeled\n-   statement.  */\n-\n-static tree\n-generate_labeled_block ()\n-{\n-  return build_labeled_block (0, generate_name ());\n-}\n-\n /* A labeled statement LBE is attached a statement.  */\n \n static tree\n-complete_labeled_statement (lbe, statement)\n+finish_labeled_statement (lbe, statement)\n      tree lbe;\t\t\t/* Labeled block expr */\n      tree statement;\n {\n@@ -13050,9 +13039,10 @@ complete_labeled_statement (lbe, statement)\n   if (TREE_CODE (statement) == LOOP_EXPR && IS_FOR_LOOP_P (statement))\n     {\n       java_method_add_stmt (current_function_decl, lbe);\n-      return exit_block ();\n+      lbe = exit_block ();\n     }\n-\n+  pop_labeled_block ();\n+  POP_LABELED_BLOCK ();\n   return lbe;\n }\n \n@@ -13104,7 +13094,7 @@ build_loop_body (location, condition, reversed)\n   condition = build_debugable_stmt (location, condition);\n   TREE_SIDE_EFFECTS (condition) = 1;\n \n-  body = generate_labeled_block ();\n+  body = build_labeled_block (0, continue_identifier_node);\n   first = (reversed ? body : condition);\n   second = (reversed ? condition : body);\n   return \n@@ -13117,7 +13107,7 @@ build_loop_body (location, condition, reversed)\n    loop list.  */\n \n static tree\n-complete_loop_body (location, condition, body, reversed)\n+finish_loop_body (location, condition, body, reversed)\n      int location;\n      tree condition, body;\n      int reversed;\n@@ -13139,45 +13129,38 @@ complete_loop_body (location, condition, body, reversed)\n   return to_return;\n }\n \n-/* Tailored version of complete_loop_body for FOR loops, when FOR\n+/* Tailored version of finish_loop_body for FOR loops, when FOR\n    loops feature the condition part */\n \n static tree\n-complete_for_loop (location, condition, update, body)\n+finish_for_loop (location, condition, update, body)\n     int location;\n     tree condition, update, body;\n {\n   /* Put the condition and the loop body in place */\n-  tree loop = complete_loop_body (location, condition, body, 0);\n+  tree loop = finish_loop_body (location, condition, body, 0);\n   /* LOOP is the current loop which has been now popped of the loop\n      stack. Install the update block */\n   LOOP_EXPR_BODY_UPDATE_BLOCK (LOOP_EXPR_BODY (loop)) = update;\n   return loop;\n }\n \n /* If the loop isn't surrounded by a labeled statement, create one and\n-   insert LOOP as it's body.  */\n+   insert LOOP as its body.  */\n \n static tree\n patch_loop_statement (loop)\n      tree loop;\n {\n-  tree loop_label, to_return_as_loop;\n-\n-  if (LOOP_HAS_LABEL_P (loop))\n-    {\n-      loop_label = ctxp->current_labeled_block;\n-      to_return_as_loop = loop;\n-    }\n-  else\n+  if (! LOOP_HAS_LABEL_P (loop))\n     {\n-      loop_label = generate_labeled_block ();\n+      tree loop_label = build_labeled_block (0, NULL_TREE);\n       LABELED_BLOCK_BODY (loop_label) = loop;\n       PUSH_LABELED_BLOCK (loop_label);\n-      to_return_as_loop = loop_label;\n+      loop = loop_label;\n     }\n-  TREE_TYPE (to_return_as_loop) = void_type_node;\n-  return to_return_as_loop;\n+  TREE_TYPE (loop) = void_type_node;\n+  return loop;\n }\n \n /* 14.13, 14.14: break and continue Statements */\n@@ -13221,98 +13204,63 @@ patch_bc_statement (node)\n      tree node;\n {\n   tree bc_label = EXIT_BLOCK_LABELED_BLOCK (node), target_stmt;\n-  int is_unlabeled = 0;\n+  tree labeled_block = ctxp->current_labeled_block;\n   EXPR_WFL_LINECOL (wfl_operator) = EXPR_WFL_LINECOL (node);\n  \n-  /* Not having a target means that the break/continue statement is\n-     unlabeled. We try to find a decent label for it */\n-  if (!bc_label)\n-    {\n-      is_unlabeled = 1;\n-      /* There should be a loop/switch to branch to */\n-      if (ctxp->current_loop)\n-\t{\n-\t  if (TREE_CODE (ctxp->current_loop) == LOOP_EXPR)\n-\t    {\n-\t      /* At that stage, we're in the loop body, which is\n-\t\t encapsulated around a LABELED_BLOCK_EXPR. So searching\n-\t\t the current loop label requires us to consider the\n-\t\t labeled block before the current one. */\n-\t      if (!LOOP_HAS_LABEL_SKIP_P (ctxp->current_loop))\n-\t\tfatal (\"unlabeled loop has no installed label -- \"\n-\t\t       \"patch_bc_statement\");\n-\t      bc_label = TREE_CHAIN (ctxp->current_labeled_block);\n-\t    }\n-\t  /* For a SWITCH statement, this is the current one */\n-\t  else\n-\t    bc_label = ctxp->current_labeled_block;\n-\t}\n-      /* Not having a loop to break/continue to is an error */\n-      else\n-\t{\n-\t  parse_error_context (wfl_operator, \"`%s' must be in loop%s\",\n-\t\t\t       (IS_BREAK_STMT_P (node) ? \"break\" : \"continue\"),\n-\t\t\t       (IS_BREAK_STMT_P (node) ? \" or switch\" : \"\"));\n-\t  return error_mark_node;\n-\t}\n-    }\n   /* Having an identifier here means that the target is unknown. */\n-  else if (TREE_CODE (bc_label) == IDENTIFIER_NODE)\n+  if (bc_label != NULL_TREE && TREE_CODE (bc_label) == IDENTIFIER_NODE)\n     {\n       parse_error_context (wfl_operator, \"No label definition found for `%s'\",\n \t\t\t   IDENTIFIER_POINTER (bc_label));\n       return error_mark_node;\n     }\n-\n-  /* Find the statement we're targeting. */\n-  target_stmt = LABELED_BLOCK_BODY (bc_label);\n-\n-  /* Target loop is slightly burrowed in the case of a for loop, it\n-     appears at the first sight to be a block. */\n-  if (TREE_CODE (target_stmt) == BLOCK)\n-    {\n-      tree sub = BLOCK_SUBBLOCKS (target_stmt);\n-      if (sub && TREE_CODE (sub) == COMPOUND_EXPR && TREE_OPERAND (sub, 1)\n-\t  && TREE_CODE (TREE_OPERAND (sub, 1)) == LOOP_EXPR)\n-\ttarget_stmt = TREE_OPERAND (sub, 1);\n-    }\n-\n-  /* 14.13 The break Statement */\n-  if (IS_BREAK_STMT_P (node))\n+  if (! IS_BREAK_STMT_P (node))\n     {\n-      /* Named break are always fine, as far as they have a target\n-         (already verified). Anonymous break need to target\n-         while/do/for/switch */\n-      if (is_unlabeled &&\n-\t  !(TREE_CODE (target_stmt) == LOOP_EXPR        /* do/while/for */\n-\t    || TREE_CODE (target_stmt) == SWITCH_EXPR)) /* switch */\n+      /* It's a continue statement. */\n+      for (;; labeled_block = TREE_CHAIN (labeled_block))\n \t{\n-\t  parse_error_context (wfl_operator, \n-\t\t\t       \"`break' must be in loop or switch\");\n-\t  return error_mark_node;\n+\t  if (labeled_block == NULL_TREE)\n+\t    {\n+\t      if (bc_label == NULL_TREE)\n+\t\tparse_error_context (wfl_operator,\n+\t\t\t\t     \"`continue' must be in loop\");\n+\t      else\n+\t\tparse_error_context (wfl_operator,\n+\t\t\t\t     \"continue label `%d' does not name a loop\",\n+\t\t\t\t     IDENTIFIER_POINTER (bc_label));\n+\t      return error_mark_node;\n+\t    }\n+\t  if ((DECL_NAME (LABELED_BLOCK_LABEL (labeled_block))\n+\t       == continue_identifier_node)\n+\t      && (bc_label == NULL_TREE\n+\t\t  || TREE_CHAIN (labeled_block) == bc_label))\n+\t    {\n+\t      bc_label = labeled_block;\n+\t      break;\n+\t    }\n \t}\n-      /* If previously unlabeled, install the new found label */\n-      if (is_unlabeled)\n-\tEXIT_BLOCK_LABELED_BLOCK (node) = bc_label;\n     }\n-  /* 14.14 The continue Statement */\n-  /* The continue statement must always target a loop, unnamed or not. */\n-  else \n+  else if (!bc_label)\n     { \n-      if (TREE_CODE (target_stmt) != LOOP_EXPR) /* do/while/for */\n+      for (;; labeled_block = TREE_CHAIN (labeled_block))\n \t{\n-\t  parse_error_context (wfl_operator, \"`continue' must be in loop\");\n-\t  return error_mark_node;\n+\t  if (labeled_block == NULL_TREE)\n+\t    {\n+\t      parse_error_context (wfl_operator,\n+\t\t\t\t     \"`break' must be in loop or switch\");\n+\t      return error_mark_node;\n+\t    }\n+\t  target_stmt = LABELED_BLOCK_BODY (labeled_block);\n+\t  if (TREE_CODE (target_stmt) == SWITCH_EXPR\n+\t      || TREE_CODE (target_stmt) == LOOP_EXPR)\n+\t    {\n+\t      bc_label = labeled_block;\n+\t      break;\n+\t    }\n \t}\n-      /* Everything looks good. We can fix the `continue' jump to go\n-\t at the place in the loop were the continue is.  For unlabeled\n-\t continue, the continuation point is the current labeled\n-\t block, by construction. */\n-      if (is_unlabeled)\n-\tEXIT_BLOCK_LABELED_BLOCK (node) = \n-\t  bc_label = ctxp->current_labeled_block;\n     }\n \n+  EXIT_BLOCK_LABELED_BLOCK (node) = bc_label;\n   CAN_COMPLETE_NORMALLY (bc_label) = 1;\n \n   /* Our break/continue don't return values. */"}]}