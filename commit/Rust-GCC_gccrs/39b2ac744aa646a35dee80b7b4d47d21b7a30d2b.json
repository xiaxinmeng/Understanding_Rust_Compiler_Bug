{"sha": "39b2ac744aa646a35dee80b7b4d47d21b7a30d2b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzliMmFjNzQ0YWE2NDZhMzVkZWU4MGI3YjRkNDdkMjFiN2EzMGQyYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-03-14T08:10:55Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-03-14T08:10:55Z"}, "message": "re PR bootstrap/39454 (Bootstrap failure on sparcv9-linux with profiledbootstrap)\n\n\tPR bootstrap/39454\n\t* cse.c (fold_rtx): Don't modify original const_arg1 when\n\tcanonicalizing SHIFT_COUNT_TRUNCATED shift count, do it on a\n\tseparate variable instead.\n\t* rtlanal.c (nonzero_bits1) <case ASHIFTRT>: Don't assume anything\n\tfrom out of range shift counts.\n\t(num_sign_bit_copies1) <case ASHIFTRT, case ASHIFT>: Similarly.\n\nFrom-SVN: r144857", "tree": {"sha": "846f43789220854350a5292b7c8ad1aa4e0e2c86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/846f43789220854350a5292b7c8ad1aa4e0e2c86"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39b2ac744aa646a35dee80b7b4d47d21b7a30d2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39b2ac744aa646a35dee80b7b4d47d21b7a30d2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39b2ac744aa646a35dee80b7b4d47d21b7a30d2b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39b2ac744aa646a35dee80b7b4d47d21b7a30d2b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "037e4a3ed3ea9214e434b5664bb1fa72cb2dda34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/037e4a3ed3ea9214e434b5664bb1fa72cb2dda34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/037e4a3ed3ea9214e434b5664bb1fa72cb2dda34"}], "stats": {"total": 29, "additions": 22, "deletions": 7}, "files": [{"sha": "5cd91bd023b3a99f8c21739d9b2ab6d5c6290d07", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39b2ac744aa646a35dee80b7b4d47d21b7a30d2b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39b2ac744aa646a35dee80b7b4d47d21b7a30d2b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=39b2ac744aa646a35dee80b7b4d47d21b7a30d2b", "patch": "@@ -1,6 +1,15 @@\n+2009-03-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR bootstrap/39454\n+\t* cse.c (fold_rtx): Don't modify original const_arg1 when\n+\tcanonicalizing SHIFT_COUNT_TRUNCATED shift count, do it on a\n+\tseparate variable instead.\n+\t* rtlanal.c (nonzero_bits1) <case ASHIFTRT>: Don't assume anything\n+\tfrom out of range shift counts.\n+\t(num_sign_bit_copies1) <case ASHIFTRT, case ASHIFT>: Similarly.\n+\n 2008-03-13  Catherine Moore  <clm@codesourcery.com>\n \n-\tgcc/\n \t*  gcc/config/i386/x-mingw32 (host-mingw32.o): Replace\n \tdiagnostic.h with $(DIAGNOSTIC_H).\n "}, {"sha": "04f52fb7d77ddff228ede956db0c4f56e30739f4", "filename": "gcc/cse.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39b2ac744aa646a35dee80b7b4d47d21b7a30d2b/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39b2ac744aa646a35dee80b7b4d47d21b7a30d2b/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=39b2ac744aa646a35dee80b7b4d47d21b7a30d2b", "patch": "@@ -3464,15 +3464,17 @@ fold_rtx (rtx x, rtx insn)\n \t      int is_shift\n \t\t= (code == ASHIFT || code == ASHIFTRT || code == LSHIFTRT);\n \t      rtx y, inner_const, new_const;\n+\t      rtx canon_const_arg1 = const_arg1;\n \t      enum rtx_code associate_code;\n \n \t      if (is_shift\n \t\t  && (INTVAL (const_arg1) >= GET_MODE_BITSIZE (mode)\n \t\t      || INTVAL (const_arg1) < 0))\n \t\t{\n \t\t  if (SHIFT_COUNT_TRUNCATED)\n-\t\t    const_arg1 = GEN_INT (INTVAL (const_arg1)\n-\t\t\t\t\t  & (GET_MODE_BITSIZE (mode) - 1));\n+\t\t    canon_const_arg1 = GEN_INT (INTVAL (const_arg1)\n+\t\t\t\t\t\t& (GET_MODE_BITSIZE (mode)\n+\t\t\t\t\t\t   - 1));\n \t\t  else\n \t\t    break;\n \t\t}\n@@ -3531,7 +3533,8 @@ fold_rtx (rtx x, rtx insn)\n \t      associate_code = (is_shift || code == MINUS ? PLUS : code);\n \n \t      new_const = simplify_binary_operation (associate_code, mode,\n-\t\t\t\t\t\t     const_arg1, inner_const);\n+\t\t\t\t\t\t     canon_const_arg1,\n+\t\t\t\t\t\t     inner_const);\n \n \t      if (new_const == 0)\n \t\tbreak;"}, {"sha": "b35d774859cdc846f4af4b0bfe1b8dac6742a3c8", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39b2ac744aa646a35dee80b7b4d47d21b7a30d2b/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39b2ac744aa646a35dee80b7b4d47d21b7a30d2b/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=39b2ac744aa646a35dee80b7b4d47d21b7a30d2b", "patch": "@@ -4061,7 +4061,8 @@ nonzero_bits1 (const_rtx x, enum machine_mode mode, const_rtx known_x,\n \t low-order bits by left shifts.  */\n       if (GET_CODE (XEXP (x, 1)) == CONST_INT\n \t  && INTVAL (XEXP (x, 1)) >= 0\n-\t  && INTVAL (XEXP (x, 1)) < HOST_BITS_PER_WIDE_INT)\n+\t  && INTVAL (XEXP (x, 1)) < HOST_BITS_PER_WIDE_INT\n+\t  && INTVAL (XEXP (x, 1)) < GET_MODE_BITSIZE (GET_MODE (x)))\n \t{\n \t  enum machine_mode inner_mode = GET_MODE (x);\n \t  unsigned int width = GET_MODE_BITSIZE (inner_mode);\n@@ -4542,7 +4543,8 @@ num_sign_bit_copies1 (const_rtx x, enum machine_mode mode, const_rtx known_x,\n       num0 = cached_num_sign_bit_copies (XEXP (x, 0), mode,\n \t\t\t\t\t known_x, known_mode, known_ret);\n       if (GET_CODE (XEXP (x, 1)) == CONST_INT\n-\t  && INTVAL (XEXP (x, 1)) > 0)\n+\t  && INTVAL (XEXP (x, 1)) > 0\n+\t  && INTVAL (XEXP (x, 1)) < GET_MODE_BITSIZE (GET_MODE (x)))\n \tnum0 = MIN ((int) bitwidth, num0 + INTVAL (XEXP (x, 1)));\n \n       return num0;\n@@ -4551,7 +4553,8 @@ num_sign_bit_copies1 (const_rtx x, enum machine_mode mode, const_rtx known_x,\n       /* Left shifts destroy copies.  */\n       if (GET_CODE (XEXP (x, 1)) != CONST_INT\n \t  || INTVAL (XEXP (x, 1)) < 0\n-\t  || INTVAL (XEXP (x, 1)) >= (int) bitwidth)\n+\t  || INTVAL (XEXP (x, 1)) >= (int) bitwidth\n+\t  || INTVAL (XEXP (x, 1)) >= GET_MODE_BITSIZE (GET_MODE (x)))\n \treturn 1;\n \n       num0 = cached_num_sign_bit_copies (XEXP (x, 0), mode,"}]}