{"sha": "ac9e20f0fb74ccf91c03f52544f54177fd049810", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWM5ZTIwZjBmYjc0Y2NmOTFjMDNmNTI1NDRmNTQxNzdmZDA0OTgxMA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-08-08T21:08:00Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-08-08T21:08:00Z"}, "message": "(expand_function_start): Only use static_chain_incoming_rtx once if it\nis a REG and we have SMALL_REGISTER_CLASSES.\n\nFrom-SVN: r7873", "tree": {"sha": "0d899b78a6a01b5f807a5e67a45ffed65efe6acd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d899b78a6a01b5f807a5e67a45ffed65efe6acd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac9e20f0fb74ccf91c03f52544f54177fd049810", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac9e20f0fb74ccf91c03f52544f54177fd049810", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac9e20f0fb74ccf91c03f52544f54177fd049810", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac9e20f0fb74ccf91c03f52544f54177fd049810/comments", "author": null, "committer": null, "parents": [{"sha": "580d3230435c471a2f45d7d7e0789b6373f167c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/580d3230435c471a2f45d7d7e0789b6373f167c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/580d3230435c471a2f45d7d7e0789b6373f167c2"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "e482f1da4814a6f8c6ba1c590dc8a2737036a4b9", "filename": "gcc/function.c", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac9e20f0fb74ccf91c03f52544f54177fd049810/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac9e20f0fb74ccf91c03f52544f54177fd049810/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=ac9e20f0fb74ccf91c03f52544f54177fd049810", "patch": "@@ -4965,11 +4965,20 @@ expand_function_start (subr, parms_have_cleanups)\n \n   /* Fetch static chain values for containing functions.  */\n   tem = decl_function_context (current_function_decl);\n-  /* If not doing stupid register allocation, then start off with the static\n-     chain pointer in a pseudo register.  Otherwise, we use the stack\n-     address that was generated above.  */\n+  /* If not doing stupid register allocation copy the static chain\n+     pointer into a psuedo.  If we have small register classes, copy the\n+     value from memory if static_chain_incoming_rtx is a REG.  If we do\n+     stupid register allocation, we use the stack address generated above.  */\n   if (tem && ! obey_regdecls)\n-    last_ptr = copy_to_reg (static_chain_incoming_rtx);\n+    {\n+#ifdef SMALL_REGISTER_CLASSES\n+      if (GET_CODE (static_chain_incoming_rtx) == REG)\n+\tlast_ptr = copy_to_reg (last_ptr);\n+      else\n+#endif\n+\tlast_ptr = copy_to_reg (static_chain_incoming_rtx);\n+    }\n+\n   context_display = 0;\n   while (tem)\n     {"}]}