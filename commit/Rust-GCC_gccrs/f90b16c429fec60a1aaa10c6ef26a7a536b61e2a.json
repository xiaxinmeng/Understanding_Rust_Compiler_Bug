{"sha": "f90b16c429fec60a1aaa10c6ef26a7a536b61e2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjkwYjE2YzQyOWZlYzYwYTFhYWExMGM2ZWYyNmE3YTUzNmI2MWUyYQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-04-24T21:35:26Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-04-24T21:35:26Z"}, "message": "Make filesystem::path comparison operators hidden friends (LWG 3065)\n\nThis change revealed two testsuite bugs where some string comparisons\nonly compiled by converting the strings to filesystem::path objects.\n\n\t* include/bits/fs_path.h (operator<, operator<=, operator>)\n\t(operator>=, operator==, operator!=): Make hidden friends, as per\n\tLWG 3065.\n\t* testsuite/27_io/filesystem/path/native/string-char8_t.cc: Fix\n\tstring type in test.\n\t* testsuite/27_io/filesystem/path/native/string.cc: Likewise.\n\nFrom-SVN: r270558", "tree": {"sha": "5342a8d7159aa08ff7bd930aeaf6de872b652192", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5342a8d7159aa08ff7bd930aeaf6de872b652192"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f90b16c429fec60a1aaa10c6ef26a7a536b61e2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f90b16c429fec60a1aaa10c6ef26a7a536b61e2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f90b16c429fec60a1aaa10c6ef26a7a536b61e2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f90b16c429fec60a1aaa10c6ef26a7a536b61e2a/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f8aaa1ae95814217fa81692f08e01781fa5f747", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f8aaa1ae95814217fa81692f08e01781fa5f747", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f8aaa1ae95814217fa81692f08e01781fa5f747"}], "stats": {"total": 77, "additions": 43, "deletions": 34}, "files": [{"sha": "abd3b526d2b40485a04b40511a078b38a5931a99", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90b16c429fec60a1aaa10c6ef26a7a536b61e2a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90b16c429fec60a1aaa10c6ef26a7a536b61e2a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f90b16c429fec60a1aaa10c6ef26a7a536b61e2a", "patch": "@@ -1,5 +1,12 @@\n 2019-04-24  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/bits/fs_path.h (operator<, operator<=, operator>)\n+\t(operator>=, operator==, operator!=): Make hidden friends, as per\n+\tLWG 3065.\n+\t* testsuite/27_io/filesystem/path/native/string-char8_t.cc: Fix\n+\tstring type in test.\n+\t* testsuite/27_io/filesystem/path/native/string.cc: Likewise.\n+\n \t* include/std/any (any::any(ValueType&&)): Use __and_v.\n \t* include/std/numeric (midpoint(T, T, T), midpoint(T*, T*, T*)):\n \tLikewise."}, {"sha": "3674b4391f808a6888ece5145f4a5b9a1617b381", "filename": "libstdc++-v3/include/bits/fs_path.h", "status": "modified", "additions": 34, "deletions": 32, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90b16c429fec60a1aaa10c6ef26a7a536b61e2a/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_path.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90b16c429fec60a1aaa10c6ef26a7a536b61e2a/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_path.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_path.h?ref=f90b16c429fec60a1aaa10c6ef26a7a536b61e2a", "patch": "@@ -417,6 +417,40 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n \treturn __is;\n       }\n \n+    // non-member operators\n+\n+    /// Compare paths\n+    friend bool operator<(const path& __lhs, const path& __rhs) noexcept\n+    { return __lhs.compare(__rhs) < 0; }\n+\n+    /// Compare paths\n+    friend bool operator<=(const path& __lhs, const path& __rhs) noexcept\n+    { return !(__rhs < __lhs); }\n+\n+    /// Compare paths\n+    friend bool operator>(const path& __lhs, const path& __rhs) noexcept\n+    { return __rhs < __lhs; }\n+\n+    /// Compare paths\n+    friend bool operator>=(const path& __lhs, const path& __rhs) noexcept\n+    { return !(__lhs < __rhs); }\n+\n+    /// Compare paths\n+    friend bool operator==(const path& __lhs, const path& __rhs) noexcept\n+    { return __lhs.compare(__rhs) == 0; }\n+\n+    /// Compare paths\n+    friend bool operator!=(const path& __lhs, const path& __rhs) noexcept\n+    { return !(__lhs == __rhs); }\n+\n+    /// Append one path to another\n+    friend path operator/(const path& __lhs, const path& __rhs)\n+    {\n+      path __result(__lhs);\n+      __result /= __rhs;\n+      return __result;\n+    }\n+\n     // Create a basic_string by reading until a null character.\n     template<typename _InputIterator,\n \t     typename _Traits = std::iterator_traits<_InputIterator>,\n@@ -578,38 +612,6 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n \n   size_t hash_value(const path& __p) noexcept;\n \n-  /// Compare paths\n-  inline bool operator<(const path& __lhs, const path& __rhs) noexcept\n-  { return __lhs.compare(__rhs) < 0; }\n-\n-  /// Compare paths\n-  inline bool operator<=(const path& __lhs, const path& __rhs) noexcept\n-  { return !(__rhs < __lhs); }\n-\n-  /// Compare paths\n-  inline bool operator>(const path& __lhs, const path& __rhs) noexcept\n-  { return __rhs < __lhs; }\n-\n-  /// Compare paths\n-  inline bool operator>=(const path& __lhs, const path& __rhs) noexcept\n-  { return !(__lhs < __rhs); }\n-\n-  /// Compare paths\n-  inline bool operator==(const path& __lhs, const path& __rhs) noexcept\n-  { return __lhs.compare(__rhs) == 0; }\n-\n-  /// Compare paths\n-  inline bool operator!=(const path& __lhs, const path& __rhs) noexcept\n-  { return !(__lhs == __rhs); }\n-\n-  /// Append one path to another\n-  inline path operator/(const path& __lhs, const path& __rhs)\n-  {\n-    path __result(__lhs);\n-    __result /= __rhs;\n-    return __result;\n-  }\n-\n   template<typename _InputIterator>\n     inline auto\n     u8path(_InputIterator __first, _InputIterator __last)"}, {"sha": "f5bb1afca5d9a17dd2feb18e84df3750a5f04798", "filename": "libstdc++-v3/testsuite/27_io/filesystem/path/native/string-char8_t.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90b16c429fec60a1aaa10c6ef26a7a536b61e2a/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fnative%2Fstring-char8_t.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90b16c429fec60a1aaa10c6ef26a7a536b61e2a/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fnative%2Fstring-char8_t.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fnative%2Fstring-char8_t.cc?ref=f90b16c429fec60a1aaa10c6ef26a7a536b61e2a", "patch": "@@ -46,7 +46,7 @@ test02()\n   path p(s);\n \n   auto str = p.string<char>();\n-  VERIFY( str == u\"abc\" );\n+  VERIFY( str == \"abc\" );\n   VERIFY( str == p.string() );\n \n   auto strw = p.string<wchar_t>();"}, {"sha": "4d45c7e15dff89e34225278a7f54f61e35461aa2", "filename": "libstdc++-v3/testsuite/27_io/filesystem/path/native/string.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f90b16c429fec60a1aaa10c6ef26a7a536b61e2a/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fnative%2Fstring.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f90b16c429fec60a1aaa10c6ef26a7a536b61e2a/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fnative%2Fstring.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fnative%2Fstring.cc?ref=f90b16c429fec60a1aaa10c6ef26a7a536b61e2a", "patch": "@@ -46,7 +46,7 @@ test02()\n   path p(s);\n \n   auto str = p.string<char>();\n-  VERIFY( str == u\"abc\" );\n+  VERIFY( str == \"abc\" );\n   VERIFY( str == p.string() );\n \n   auto strw = p.string<wchar_t>();"}]}