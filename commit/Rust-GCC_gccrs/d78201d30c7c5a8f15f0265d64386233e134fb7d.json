{"sha": "d78201d30c7c5a8f15f0265d64386233e134fb7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDc4MjAxZDMwYzdjNWE4ZjE1ZjAyNjVkNjQzODYyMzNlMTM0ZmI3ZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-01-23T21:23:53Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-01-23T21:23:53Z"}, "message": "PR c++/83947 - ICE with auto declarations.\n\n\t* pt.c (do_auto_deduction): Don't deduce from an auto decl.\n\t* decl.c (undeduced_auto_decl): Limit to vars and fns.\n\nFrom-SVN: r257000", "tree": {"sha": "008dba49991a80ec4ff89d859da2dda52b3ec9d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/008dba49991a80ec4ff89d859da2dda52b3ec9d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d78201d30c7c5a8f15f0265d64386233e134fb7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d78201d30c7c5a8f15f0265d64386233e134fb7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d78201d30c7c5a8f15f0265d64386233e134fb7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d78201d30c7c5a8f15f0265d64386233e134fb7d/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7c719d0849416861fa96317ade2e2035d6ea071b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c719d0849416861fa96317ade2e2035d6ea071b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c719d0849416861fa96317ade2e2035d6ea071b"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "9c2cba991211c1ec7e2d8c6e11d4862dd28e6bdf", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78201d30c7c5a8f15f0265d64386233e134fb7d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78201d30c7c5a8f15f0265d64386233e134fb7d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d78201d30c7c5a8f15f0265d64386233e134fb7d", "patch": "@@ -1,3 +1,9 @@\n+2018-01-23  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/83947 - ICE with auto declarations.\n+\t* pt.c (do_auto_deduction): Don't deduce from an auto decl.\n+\t* decl.c (undeduced_auto_decl): Limit to vars and fns.\n+\n 2018-01-23  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR c++/83974"}, {"sha": "1970865f3670abe9f9cea427402375c8bd62e103", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78201d30c7c5a8f15f0265d64386233e134fb7d/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78201d30c7c5a8f15f0265d64386233e134fb7d/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=d78201d30c7c5a8f15f0265d64386233e134fb7d", "patch": "@@ -16195,15 +16195,17 @@ fndecl_declared_return_type (tree fn)\n   return TREE_TYPE (TREE_TYPE (fn));\n }\n \n-/* Returns true iff DECL was declared with an auto type and it has\n-   not yet been deduced to a real type.  */\n+/* Returns true iff DECL is a variable or function declared with an auto type\n+   that has not yet been deduced to a real type.  */\n \n bool\n undeduced_auto_decl (tree decl)\n {\n   if (cxx_dialect < cxx11)\n     return false;\n-  return type_uses_auto (TREE_TYPE (decl));\n+  return ((VAR_OR_FUNCTION_DECL_P (decl)\n+\t   || TREE_CODE (decl) == TEMPLATE_DECL)\n+\t  && type_uses_auto (TREE_TYPE (decl)));\n }\n \n /* Complain if DECL has an undeduced return type.  */"}, {"sha": "d39b54ed408d8ad3a4e7e276c9d7c77042a8d36a", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78201d30c7c5a8f15f0265d64386233e134fb7d/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78201d30c7c5a8f15f0265d64386233e134fb7d/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=d78201d30c7c5a8f15f0265d64386233e134fb7d", "patch": "@@ -25884,6 +25884,10 @@ do_auto_deduction (tree type, tree init, tree auto_node,\n        from ahead of time isn't worth the trouble.  */\n     return type;\n \n+  /* Similarly, we can't deduce from another undeduced decl.  */\n+  if (init && undeduced_auto_decl (init))\n+    return type;\n+\n   if (tree tmpl = CLASS_PLACEHOLDER_TEMPLATE (auto_node))\n     /* C++17 class template argument deduction.  */\n     return do_class_deduction (type, tmpl, init, flags, complain);"}, {"sha": "120a4dd9e7ca2446fb2d3580c70a17cf54976e68", "filename": "gcc/testsuite/g++.dg/cpp1y/auto-fn46.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78201d30c7c5a8f15f0265d64386233e134fb7d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-fn46.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78201d30c7c5a8f15f0265d64386233e134fb7d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-fn46.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-fn46.C?ref=d78201d30c7c5a8f15f0265d64386233e134fb7d", "patch": "@@ -0,0 +1,6 @@\n+// PR c++/83947\n+// { dg-do compile { target c++14 } }\n+\n+auto f ();\n+template < int > auto g (f);\t// { dg-error \"before deduction\" }\n+auto h = g < 0 > ();"}]}