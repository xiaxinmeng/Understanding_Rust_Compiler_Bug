{"sha": "7d1286f61e043074327839d3f2cd1c8d0039c3dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2QxMjg2ZjYxZTA0MzA3NDMyNzgzOWQzZjJjZDFjOGQwMDM5YzNkYw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-01-07T09:31:05Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-01-07T09:31:05Z"}, "message": "[multiple changes]\n\n2015-01-07  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch3.adb: Minor error message change.\n\n2015-01-07  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_prag.adb (Analyze_Pragma, case Preelaborable_Initialization):\n\tFollowing AI05-028, the pragam applies legally to any composite type.\n\nFrom-SVN: r219285", "tree": {"sha": "f640796aa2e81e149b4358baf593d7121d48a9b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f640796aa2e81e149b4358baf593d7121d48a9b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d1286f61e043074327839d3f2cd1c8d0039c3dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d1286f61e043074327839d3f2cd1c8d0039c3dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d1286f61e043074327839d3f2cd1c8d0039c3dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d1286f61e043074327839d3f2cd1c8d0039c3dc/comments", "author": null, "committer": null, "parents": [{"sha": "95e0ceefa50376f3135861b8ecfae1c89c540563", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95e0ceefa50376f3135861b8ecfae1c89c540563", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95e0ceefa50376f3135861b8ecfae1c89c540563"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "6a752d2582916a1ef503616cfad04537f10a6238", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d1286f61e043074327839d3f2cd1c8d0039c3dc/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d1286f61e043074327839d3f2cd1c8d0039c3dc/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7d1286f61e043074327839d3f2cd1c8d0039c3dc", "patch": "@@ -1,3 +1,12 @@\n+2015-01-07  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch3.adb: Minor error message change.\n+\n+2015-01-07  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Pragma, case Preelaborable_Initialization):\n+\tFollowing AI05-028, the pragam applies legally to any composite type.\n+\n 2015-01-07  Arnaud Charlet  <charlet@adacore.com>\n \n \t* s-osinte-vxworks.adb, s-osinte-vxworks.ads"}, {"sha": "ac52f08aeb974ba06fa4b122209cf57584ca9971", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d1286f61e043074327839d3f2cd1c8d0039c3dc/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d1286f61e043074327839d3f2cd1c8d0039c3dc/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=7d1286f61e043074327839d3f2cd1c8d0039c3dc", "patch": "@@ -18981,9 +18981,8 @@ package body Sem_Ch3 is\n \n                elsif Present (Expression (Discr)) then\n                   Error_Msg_N\n-                    (\"(Ada 2005) access discriminants of nonlimited types\",\n-                     Expression (Discr));\n-                  Error_Msg_N (\"\\cannot have defaults\", Expression (Discr));\n+                    (\"(Ada 2005) access discriminants of nonlimited types \"\n+                     & \"cannot have defaults\", Expression (Discr));\n                end if;\n             end if;\n          end if;"}, {"sha": "acae793f17c7c302c987b61d9d91943059688d4c", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d1286f61e043074327839d3f2cd1c8d0039c3dc/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d1286f61e043074327839d3f2cd1c8d0039c3dc/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=7d1286f61e043074327839d3f2cd1c8d0039c3dc", "patch": "@@ -17839,17 +17839,25 @@ package body Sem_Prag is\n             then\n                null;\n \n+            --  Check appropriate type argument\n+\n             elsif Is_Private_Type (Ent)\n               or else Is_Protected_Type (Ent)\n               or else (Is_Generic_Type (Ent) and then Is_Derived_Type (Ent))\n+\n+              --  AI05-0028: The pragma applies to all composite types. Note\n+              --  that we apply this binding intepretation to previous verions\n+              --  of Ada so there is no Ada 2012 guard. Seems a reasonable\n+              --  choice since there are other compilers that do the same.\n+\n+              or else Is_Composite_Type (Ent)\n             then\n                null;\n \n             else\n                Error_Pragma_Arg\n-                 (\"pragma % can only be applied to private, formal derived or \"\n-                  & \"protected type\",\n-                  Arg1);\n+                 (\"pragma % can only be applied to private, formal derived, \"\n+                  & \"protected, or composite type\", Arg1);\n             end if;\n \n             --  Give an error if the pragma is applied to a protected type that"}]}