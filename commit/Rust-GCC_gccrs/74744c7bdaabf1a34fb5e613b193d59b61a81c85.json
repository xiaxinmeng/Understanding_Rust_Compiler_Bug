{"sha": "74744c7bdaabf1a34fb5e613b193d59b61a81c85", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ3NDRjN2JkYWFiZjFhMzRmYjVlNjEzYjE5M2Q1OWI2MWE4MWM4NQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-24T13:23:31Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-24T13:23:31Z"}, "message": "Minor reformatting.\n\nFrom-SVN: r146718", "tree": {"sha": "80693c8467cde7f5a9f5f23f23dd2cad88fd03a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80693c8467cde7f5a9f5f23f23dd2cad88fd03a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74744c7bdaabf1a34fb5e613b193d59b61a81c85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74744c7bdaabf1a34fb5e613b193d59b61a81c85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74744c7bdaabf1a34fb5e613b193d59b61a81c85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74744c7bdaabf1a34fb5e613b193d59b61a81c85/comments", "author": null, "committer": null, "parents": [{"sha": "8eaf17236730f54c58707929d8c7e24cf37a8d2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eaf17236730f54c58707929d8c7e24cf37a8d2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8eaf17236730f54c58707929d8c7e24cf37a8d2e"}], "stats": {"total": 46, "additions": 22, "deletions": 24}, "files": [{"sha": "93dd6b551ab79d9c0dfae0f4322143e5f46cc3b2", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 22, "deletions": 24, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74744c7bdaabf1a34fb5e613b193d59b61a81c85/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74744c7bdaabf1a34fb5e613b193d59b61a81c85/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=74744c7bdaabf1a34fb5e613b193d59b61a81c85", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -100,6 +100,7 @@ package body Makeutl is\n          declare\n             New_Options : constant String_List_Access :=\n                             new String_List (1 .. To'Last * 2);\n+\n          begin\n             New_Options (To'Range) := To.all;\n \n@@ -195,10 +196,10 @@ package body Makeutl is\n       Exec_Name : constant String := Command_Name;\n \n       function Get_Install_Dir (S : String) return String;\n-      --  S is the executable name preceded by the absolute or relative\n-      --  path, e.g. \"c:\\usr\\bin\\gcc.exe\". Returns the absolute directory\n-      --  where \"bin\" lies (in the example \"C:\\usr\").\n-      --  If the executable is not in a \"bin\" directory, return \"\".\n+      --  S is the executable name preceded by the absolute or relative path,\n+      --  e.g. \"c:\\usr\\bin\\gcc.exe\". Returns the absolute directory where \"bin\"\n+      --  lies (in the example \"C:\\usr\"). If the executable is not in a \"bin\"\n+      --  directory, return \"\".\n \n       ---------------------\n       -- Get_Install_Dir --\n@@ -332,9 +333,7 @@ package body Makeutl is\n          Equal_Pos := Equal_Pos + 1;\n       end loop;\n \n-      if Equal_Pos = Start\n-        or else Equal_Pos > Finish\n-      then\n+      if Equal_Pos = Start or else Equal_Pos > Finish then\n          return False;\n       else\n          Prj.Ext.Add\n@@ -373,6 +372,7 @@ package body Makeutl is\n \n       procedure Recursive_Add (Proj : Project_Id; Dummy : in out Boolean) is\n          pragma Unreferenced (Dummy);\n+\n          Data           : Project_Data renames In_Tree.Projects.Table (Proj);\n          Linker_Package : Package_Id;\n          Options        : Variable_Value;\n@@ -383,6 +383,7 @@ package body Makeutl is\n              (Name        => Name_Linker,\n               In_Packages => Data.Decl.Packages,\n               In_Tree     => In_Tree);\n+\n          Options :=\n            Prj.Util.Value_Of\n              (Name                    => Name_Ada,\n@@ -403,6 +404,7 @@ package body Makeutl is\n \n       procedure For_All_Projects is\n         new For_Every_Project_Imported (Boolean, Recursive_Add);\n+\n       Dummy : Boolean := False;\n \n    --  Start of processing for Linker_Options_Switches\n@@ -418,7 +420,7 @@ package body Makeutl is\n          declare\n             Options : String_List_Id := Linker_Opts.Table (Index).Options;\n             Proj    : constant Project_Id :=\n-              Linker_Opts.Table (Index).Project;\n+                        Linker_Opts.Table (Index).Project;\n             Option  : Name_Id;\n \n          begin\n@@ -432,8 +434,7 @@ package body Makeutl is\n             end if;\n \n             while Options /= Nil_String loop\n-               Option :=\n-                 In_Tree.String_Elements.Table (Options).Value;\n+               Option := In_Tree.String_Elements.Table (Options).Value;\n                Get_Name_String (Option);\n \n                --  Do not consider empty linker options\n@@ -445,10 +446,8 @@ package body Makeutl is\n                   --  paths must be converted to absolute paths.\n \n                   Test_If_Relative_Path\n-                    (Switch =>\n-                       Linker_Options_Buffer (Last_Linker_Option),\n-                     Parent =>\n-                       In_Tree.Projects.Table (Proj).Dir_Path,\n+                    (Switch => Linker_Options_Buffer (Last_Linker_Option),\n+                     Parent => In_Tree.Projects.Table (Proj).Dir_Path,\n                      Including_L_Switch => True);\n                end if;\n \n@@ -612,7 +611,7 @@ package body Makeutl is\n    begin\n       if Switch /= null then\n          declare\n-            Sw : String (1 .. Switch'Length);\n+            Sw    : String (1 .. Switch'Length);\n             Start : Positive;\n \n          begin\n@@ -621,8 +620,8 @@ package body Makeutl is\n             if Sw (1) = '-' then\n                if Sw'Length >= 3\n                  and then (Sw (2) = 'A'\n-                           or else Sw (2) = 'I'\n-                           or else (Including_L_Switch and then Sw (2) = 'L'))\n+                            or else Sw (2) = 'I'\n+                            or else (Including_L_Switch and then Sw (2) = 'L'))\n                then\n                   Start := 3;\n \n@@ -632,8 +631,8 @@ package body Makeutl is\n \n                elsif Sw'Length >= 4\n                  and then (Sw (2 .. 3) = \"aL\"\n-                           or else Sw (2 .. 3) = \"aO\"\n-                           or else Sw (2 .. 3) = \"aI\")\n+                            or else Sw (2 .. 3) = \"aO\"\n+                            or else Sw (2 .. 3) = \"aI\")\n                then\n                   Start := 4;\n \n@@ -667,7 +666,6 @@ package body Makeutl is\n                   if Parent = null or else Parent'Length = 0 then\n                      Do_Fail\n                        (\"relative paths (\"\"\" & Sw & \"\"\") are not allowed\");\n-\n                   else\n                      Switch :=\n                        new String'(Parent.all & Directory_Separator & Sw);\n@@ -711,9 +709,9 @@ package body Makeutl is\n          Start := Start - 1;\n       end loop;\n \n-      --  If there are no digits, or if the digits are not preceded by\n-      --  the character that precedes a unit index, this is not the ALI file\n-      --  of a unit in a multi-unit source.\n+      --  If there are no digits, or if the digits are not preceded by the\n+      --  character that precedes a unit index, this is not the ALI file of\n+      --  a unit in a multi-unit source.\n \n       if Start > Finish\n         or else Start = 1"}]}