{"sha": "2ac999c3c2caafeee4b8693a9305562257152283", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFjOTk5YzNjMmNhYWZlZWU0Yjg2OTNhOTMwNTU2MjI1NzE1MjI4Mw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-11-04T15:28:12Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-11-04T15:28:12Z"}, "message": "entered into RCS\n\nFrom-SVN: r10545", "tree": {"sha": "bb4ee8b82c77fe18c73421fb7bbee888aa1c8696", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb4ee8b82c77fe18c73421fb7bbee888aa1c8696"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ac999c3c2caafeee4b8693a9305562257152283", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ac999c3c2caafeee4b8693a9305562257152283", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ac999c3c2caafeee4b8693a9305562257152283", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ac999c3c2caafeee4b8693a9305562257152283/comments", "author": null, "committer": null, "parents": [{"sha": "07674418af0855de6751d8e85ec7fec87f8c8ad3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07674418af0855de6751d8e85ec7fec87f8c8ad3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07674418af0855de6751d8e85ec7fec87f8c8ad3"}], "stats": {"total": 111, "additions": 111, "deletions": 0}, "files": [{"sha": "d29604f968acb41ebed57d4dc5da9cc16a5bd3d9", "filename": "gcc/README.RS6000", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ac999c3c2caafeee4b8693a9305562257152283/gcc%2FREADME.RS6000", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ac999c3c2caafeee4b8693a9305562257152283/gcc%2FREADME.RS6000", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FREADME.RS6000?ref=2ac999c3c2caafeee4b8693a9305562257152283", "patch": "@@ -0,0 +1,111 @@\n+\t\t     AIX 3.1 and 3.2 assembler problems\n+\n+Specifying the -g flag to GCC on the RS/6000 requires upgrading the\n+standard AIX assembler distributed with AIX 3.1 and versions of AIX\n+3.2 earlier than 3.2.4 with a replacement that is available from IBM.\n+Note that Makefile.in specifies the -g when compiling libgcc2.c.\n+\n+You can test for the presence of a fixed assembler by entering the following:\n+\t\t% as -u < /dev/null\n+If the command exits normally, the assembler fix already is installed.\n+If the assembler complains that \"-u\" is an unknown flag, you need to order\n+the fix.\n+\n+If you are running AIX 3.1 (lslpp -h bos.obj output reports\n+03.01.0005.XXXX where the 0005 can be any higher number and the XXXX\n+can be any value), call IBM Support at 800-237-5511 and ask for\n+shipment of AIX/6000 fix PTF U403044 for APAR IX22829 (.extern foo\n+conflicts with defining foo).\n+\n+If you are running AIX 3.2 but not 3.2.4 or later (lslpp -h bos.obj\n+output reports 03.02.0000.0000), a newer update to the assembler fix\n+is available.  Ask for shipment of AIX/6000 fix PTF U416277 for\n+IX32992 (.global prevents detection of duplicate symbol).\n+\n+If you are running AIX 3.2.4 or later, you already have the new\n+assembler.\n+\n+Any customer can order and get the replacement assembler, and install it on\n+one or more machines.  It is available on diskette from IBM Customer Support\n+and from the IBM Internet fix anonymous ftp server (FixDist) at\n+aix.boulder.ibm.com (198.17.57.66).\n+\n+If you contact IBM Customer Support, they may also ask you for your customer\n+number.  If you do not know it, you will still be able to get the fix, but\n+you will have to be persistent.  IBM has corresponding support organizations\n+outside of North America.  Call your IBM branch office and ask them to put\n+you in touch with the department that handles fixes for AIX/6000.  If that\n+doesn't work, ask for the department that handles software defect support\n+for AIX/6000 and ask for the APAR fix.\n+\n+If you use the GNU assembler instead of the system supplied assembler, you need\n+an assembler modified after October 16th, 1995 in order to build the GNU C\n+compiler.  This is because the GNU C compiler wants to build a variant of its\n+library, libgcc.a with the -mcpu=common switch to support building programs\n+that can run on either the Power or PowerPC machines.\n+\n+\n+\t\t\t      AIX NLS problems\n+\n+AIX on the RS/6000 provides support (NLS) for environments outside of\n+the United States.  Compilers and assemblers use NLS to support\n+locale-specific representations of various objects including\n+floating-point numbers (\".\" vs \",\" for separating decimal fractions).\n+There have been problems reported where the library linked with GCC does\n+not produce the same floating-point formats that the assembler accepts.\n+If you have this problem, set the LANG environment variable to \"C\" or\n+\"En_US\".\n+\n+\n+\t\t\t AIX 3.2.5 XLC-1.3 problems\n+\n+XLC version 1.3.0.0 distributed with AIX 3.2.5 will miscompile jump.c when\n+building the stage1 compiler during the bootstrap process.  This will cause\n+GCC to crash and the bootstrap to fail later while compiling libgcc2.c.  XLC\n+version 1.3.0.1 or later fixes this problem.  XLC-1.3.0.19 also cannot\n+bootstrap GCC so please avoid that release as well.  You can obtain\n+XLC-1.3.0.24 by requesting PTF 432238 from IBM, or just ask for the latest\n+release of XLC-1.3.\n+\n+There also have been reports of problems bootstrapping GCC with some older\n+releases of xlc-1.2.1, including xlc-1.2.1.8.  Newer releases of xlc-1.2.1\n+do not exhibit this problem: xlc-1.2.1.28 is known to bootstrap properly.\n+\n+\n+\t\t\tAIX 3.2 common-mode support\n+\n+AIX common-mode providing transparent support of both the POWER and PowerPC\n+architectures is usable in AIX 3.2.3 and above but an export file and\n+support for hidden export via libc.a will not exist until AIX 4.1.  libgcc.a\n+also must be compiled in common-mode.  Note that executables generated for\n+the POWER (RIOS1 and RSC) architecture will run directly on systems using\n+the MPC601 chip.  Common-mode only improves the performance of a single\n+executable run on both POWER and PowerPC architecture platforms by not using\n+POWER- or PowerPC-specific instructions and eliminating the need to trap to\n+emulation (for POWER instructions run on PowerPC).\n+\n+To link a common-mode application prior to AIX 4.1 and run it on a system at\n+AIX level 3.2.3 or above, use the text between the \"<>\" as an export file\n+(e.g. milli.exp)\n+\n+<><><><><><><><><><><>\n+#!\n+__mulh          0x3100\n+__mull          0x3180\n+__divss         0x3200\n+__divus         0x3280\n+__quoss         0x3300\n+__quous         0x3380\n+<><><><><><><><><><><>\n+\n+and then link with -Wl,-bI:milli.exp.\n+\n+\n+\t\t\t       AIX 4.1 binder\n+\n+Due to changes in the way that GCC invokes the binder (linker) for AIX 4.1,\n+the link step now may produce warnings of duplicate symbols which were not\n+reported before.  The assembly files generated by GCC for AIX always have\n+included multiple symbol definitions for certain global variable and\n+function declarations in the original program.  The warnings should not\n+prevent the linker from producing a correct library or runnable executable."}]}