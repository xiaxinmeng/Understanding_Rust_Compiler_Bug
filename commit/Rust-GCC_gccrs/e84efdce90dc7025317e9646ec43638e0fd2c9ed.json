{"sha": "e84efdce90dc7025317e9646ec43638e0fd2c9ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTg0ZWZkY2U5MGRjNzAyNTMxN2U5NjQ2ZWM0MzYzOGUwZmQyYzllZA==", "commit": {"author": {"name": "Laurent GUERBY", "email": "laurent@guerby.net", "date": "2009-05-06T21:22:56Z"}, "committer": {"name": "Laurent Guerby", "email": "guerby@gcc.gnu.org", "date": "2009-05-06T21:22:56Z"}, "message": "s-linux.ads, [...]: Define sa_handler_pos.\n\n2009-05-06  Laurent GUERBY <laurent@guerby.net>\n\n        * s-linux.ads, s-linux-alpha.ads, s-linux-hppa.ads, \n        osinte-linux.ads: Define sa_handler_pos.\n        * s-osinte-linux.ads: Use it.\n        * s-linux-mipsel.ads: New.\t\n        * system-linux-mips64el.ads: New.\n        * gcc-interface/Makefile.in: Multilib handling for\n        mipsel-linux and mips64el-linux.\n\nFrom-SVN: r147207", "tree": {"sha": "df53b1c38f0ef47884ed9cc27e0d428970b559dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df53b1c38f0ef47884ed9cc27e0d428970b559dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e84efdce90dc7025317e9646ec43638e0fd2c9ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e84efdce90dc7025317e9646ec43638e0fd2c9ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e84efdce90dc7025317e9646ec43638e0fd2c9ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e84efdce90dc7025317e9646ec43638e0fd2c9ed/comments", "author": {"login": "guerby", "id": 6659329, "node_id": "MDQ6VXNlcjY2NTkzMjk=", "avatar_url": "https://avatars.githubusercontent.com/u/6659329?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guerby", "html_url": "https://github.com/guerby", "followers_url": "https://api.github.com/users/guerby/followers", "following_url": "https://api.github.com/users/guerby/following{/other_user}", "gists_url": "https://api.github.com/users/guerby/gists{/gist_id}", "starred_url": "https://api.github.com/users/guerby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guerby/subscriptions", "organizations_url": "https://api.github.com/users/guerby/orgs", "repos_url": "https://api.github.com/users/guerby/repos", "events_url": "https://api.github.com/users/guerby/events{/privacy}", "received_events_url": "https://api.github.com/users/guerby/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "713485cc676555c25f30c477f8b147bf98061c52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/713485cc676555c25f30c477f8b147bf98061c52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/713485cc676555c25f30c477f8b147bf98061c52"}], "stats": {"total": 363, "additions": 351, "deletions": 12}, "files": [{"sha": "7aa209862ab4508148008a835b23e3707693a057", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e84efdce90dc7025317e9646ec43638e0fd2c9ed/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e84efdce90dc7025317e9646ec43638e0fd2c9ed/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e84efdce90dc7025317e9646ec43638e0fd2c9ed", "patch": "@@ -1,3 +1,13 @@\n+2009-05-06  Laurent GUERBY <laurent@guerby.net>\n+\n+        * s-linux.ads, s-linux-alpha.ads, s-linux-hppa.ads, \n+        osinte-linux.ads: Define sa_handler_pos.\n+        * s-osinte-linux.ads: Use it.\n+        * s-linux-mipsel.ads: New.\t\n+        * system-linux-mips64el.ads: New.\n+        * gcc-interface/Makefile.in: Multilib handling for\n+        mipsel-linux and mips64el-linux.\n+\t\n 2009-05-06  Arnaud Charlet  <charlet@adacore.com>\n \n \t* exp_ch5.adb, exp_util.adb, exp_attr.adb, sem_util.adb, sem_res.adb,"}, {"sha": "04553d4b2ce85f6d094ff4e3d1dd361212ff1b19", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 59, "deletions": 3, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e84efdce90dc7025317e9646ec43638e0fd2c9ed/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e84efdce90dc7025317e9646ec43638e0fd2c9ed/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=e84efdce90dc7025317e9646ec43638e0fd2c9ed", "patch": "@@ -1555,11 +1555,11 @@ ifeq ($(strip $(filter-out mips linux%,$(arch) $(osys))),)\n endif\n \n ifeq ($(strip $(filter-out mipsel linux%,$(arch) $(osys))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n+  LIBGNAT_TARGET_PAIRS_COMMON = \\\n   a-intnam.ads<a-intnam-linux.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n   s-intman.adb<s-intman-posix.adb \\\n-  s-linux.ads<s-linux.ads \\\n+  s-linux.ads<s-linux-mipsel.ads \\\n   s-osinte.adb<s-osinte-posix.adb \\\n   s-osinte.ads<s-osinte-linux.ads \\\n   s-osprim.adb<s-osprim-posix.adb \\\n@@ -1568,9 +1568,65 @@ ifeq ($(strip $(filter-out mipsel linux%,$(arch) $(osys))),)\n   s-tasinf.adb<s-tasinf-linux.adb \\\n   s-taspri.ads<s-taspri-posix-noaltstack.ads \\\n   s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n-  g-sercom.adb<g-sercom-linux.adb \\\n+  g-sercom.adb<g-sercom-linux.adb\n+\n+  LIBGNAT_TARGET_PAIRS_32 = \\\n   system.ads<system-linux-mipsel.ads\n \n+  LIBGNAT_TARGET_PAIRS_64 = \\\n+  system.ads<system-linux-mips64el.ads\n+\n+  ifeq ($(strip $(shell $(GCC_FOR_TARGET) $(GNATLIBCFLAGS) -print-multi-os-directory)),../lib64)\n+    LIBGNAT_TARGET_PAIRS = \\\n+    $(LIBGNAT_TARGET_PAIRS_COMMON) $(LIBGNAT_TARGET_PAIRS_64)\n+  else\n+    LIBGNAT_TARGET_PAIRS = \\\n+    $(LIBGNAT_TARGET_PAIRS_COMMON) $(LIBGNAT_TARGET_PAIRS_32)\n+  endif\n+\n+  TOOLS_TARGET_PAIRS =  \\\n+    mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb \\\n+    indepsw.adb<indepsw-gnu.adb\n+\n+  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n+  EH_MECHANISM=-gcc\n+  THREADSLIB = -lpthread\n+  GNATLIB_SHARED = gnatlib-shared-dual\n+  GMEM_LIB = gmemlib\n+  PREFIX_OBJS = $(PREFIX_REAL_OBJS)\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+endif\n+\n+ifeq ($(strip $(filter-out mips64el linux%,$(arch) $(osys))),)\n+  LIBGNAT_TARGET_PAIRS_COMMON = \\\n+  a-intnam.ads<a-intnam-linux.ads \\\n+  s-inmaop.adb<s-inmaop-posix.adb \\\n+  s-intman.adb<s-intman-posix.adb \\\n+  s-linux.ads<s-linux-mipsel.ads \\\n+  s-osinte.adb<s-osinte-posix.adb \\\n+  s-osinte.ads<s-osinte-linux.ads \\\n+  s-osprim.adb<s-osprim-posix.adb \\\n+  s-taprop.adb<s-taprop-linux.adb \\\n+  s-tasinf.ads<s-tasinf-linux.ads \\\n+  s-tasinf.adb<s-tasinf-linux.adb \\\n+  s-taspri.ads<s-taspri-posix-noaltstack.ads \\\n+  s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n+  g-sercom.adb<g-sercom-linux.adb\n+\n+  LIBGNAT_TARGET_PAIRS_32 = \\\n+  system.ads<system-linux-mipsel.ads\n+\n+  LIBGNAT_TARGET_PAIRS_64 = \\\n+  system.ads<system-linux-mips64el.ads\n+\n+  ifeq ($(strip $(shell $(GCC_FOR_TARGET) $(GNATLIBCFLAGS) -print-multi-os-directory)),../lib64)\n+    LIBGNAT_TARGET_PAIRS = \\\n+    $(LIBGNAT_TARGET_PAIRS_COMMON) $(LIBGNAT_TARGET_PAIRS_64)\n+  else\n+    LIBGNAT_TARGET_PAIRS = \\\n+    $(LIBGNAT_TARGET_PAIRS_COMMON) $(LIBGNAT_TARGET_PAIRS_32)\n+  endif\n+\n   TOOLS_TARGET_PAIRS =  \\\n     mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb \\\n     indepsw.adb<indepsw-gnu.adb"}, {"sha": "cdc716c727d3697b07fddc2613637700fafd218b", "filename": "gcc/ada/s-linux-alpha.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e84efdce90dc7025317e9646ec43638e0fd2c9ed/gcc%2Fada%2Fs-linux-alpha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e84efdce90dc7025317e9646ec43638e0fd2c9ed/gcc%2Fada%2Fs-linux-alpha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-linux-alpha.ads?ref=e84efdce90dc7025317e9646ec43638e0fd2c9ed", "patch": "@@ -104,8 +104,9 @@ package System.Linux is\n \n    --  struct_sigaction offsets\n \n-   sa_mask_pos  : constant := Standard'Address_Size / 8;\n-   sa_flags_pos : constant := 128 + sa_mask_pos;\n+   sa_handler_pos : constant := 0;\n+   sa_mask_pos    : constant := Standard'Address_Size / 8;\n+   sa_flags_pos   : constant := 128 + sa_mask_pos;\n \n    SA_SIGINFO  : constant := 16#40#;\n    SA_ONSTACK  : constant := 16#01#;"}, {"sha": "16393c539f6b3d4922dd85248249be053062d42f", "filename": "gcc/ada/s-linux-hppa.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e84efdce90dc7025317e9646ec43638e0fd2c9ed/gcc%2Fada%2Fs-linux-hppa.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e84efdce90dc7025317e9646ec43638e0fd2c9ed/gcc%2Fada%2Fs-linux-hppa.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-linux-hppa.ads?ref=e84efdce90dc7025317e9646ec43638e0fd2c9ed", "patch": "@@ -96,8 +96,9 @@ package System.Linux is\n \n    --  struct_sigaction offsets\n \n-   sa_flags_pos : constant := Standard'Address_Size / 8;\n-   sa_mask_pos  : constant := sa_flags_pos * 2;\n+   sa_handler_pos : constant := 0;\n+   sa_flags_pos   : constant := Standard'Address_Size / 8;\n+   sa_mask_pos    : constant := sa_flags_pos * 2;\n \n    SA_SIGINFO : constant := 16#10#;\n    SA_ONSTACK : constant := 16#01#;"}, {"sha": "c0911d8d16a7286fea5433de2aebc32f0de89f7a", "filename": "gcc/ada/s-linux-mipsel.ads", "status": "added", "additions": 118, "deletions": 0, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e84efdce90dc7025317e9646ec43638e0fd2c9ed/gcc%2Fada%2Fs-linux-mipsel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e84efdce90dc7025317e9646ec43638e0fd2c9ed/gcc%2Fada%2Fs-linux-mipsel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-linux-mipsel.ads?ref=e84efdce90dc7025317e9646ec43638e0fd2c9ed", "patch": "@@ -0,0 +1,118 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                GNU ADA RUN-TIME LIBRARY (GNARL) COMPONENTS               --\n+--                                                                          --\n+--                          S Y S T E M .  L I N U X                        --\n+--                                                                          --\n+--                                  S p e c                                 --\n+--                                                                          --\n+--             Copyright (C) 2009, Free Software Foundation, Inc.           --\n+--                                                                          --\n+-- GNARL is free software; you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This is the mipsel version of this package\n+\n+--  This package encapsulates cpu specific differences between implementations\n+--  of GNU/Linux, in order to share s-osinte-linux.ads.\n+\n+--  PLEASE DO NOT add any with-clauses to this package or remove the pragma\n+--  Preelaborate. This package is designed to be a bottom-level (leaf) package\n+\n+package System.Linux is\n+   pragma Preelaborate;\n+\n+   -----------\n+   -- Errno --\n+   -----------\n+\n+   EAGAIN    : constant := 11;\n+   EINTR     : constant := 4;\n+   EINVAL    : constant := 22;\n+   ENOMEM    : constant := 12;\n+   EPERM     : constant := 1;\n+   ETIMEDOUT : constant := 110;\n+\n+   -------------\n+   -- Signals --\n+   -------------\n+\n+   SIGHUP     : constant := 1; --  hangup\n+   SIGINT     : constant := 2; --  interrupt (rubout)\n+   SIGQUIT    : constant := 3; --  quit (ASCD FS)\n+   SIGILL     : constant := 4; --  illegal instruction (not reset)\n+   SIGTRAP    : constant := 5; --  trace trap (not reset)\n+   SIGIOT     : constant := 6; --  IOT instruction\n+   SIGABRT    : constant := 6; --  used by abort, replace SIGIOT in the  future\n+   SIGFPE     : constant := 8; --  floating point exception\n+   SIGKILL    : constant := 9; --  kill (cannot be caught or ignored)\n+   SIGBUS     : constant := 7; --  bus error\n+   SIGSEGV    : constant := 11; --  segmentation violation\n+   SIGPIPE    : constant := 13; --  write on a pipe with no one to read it\n+   SIGALRM    : constant := 14; --  alarm clock\n+   SIGTERM    : constant := 15; --  software termination signal from kill\n+   SIGUSR1    : constant := 10; --  user defined signal 1\n+   SIGUSR2    : constant := 12; --  user defined signal 2\n+   SIGCLD     : constant := 17; --  alias for SIGCHLD\n+   SIGCHLD    : constant := 17; --  child status change\n+   SIGPWR     : constant := 30; --  power-fail restart\n+   SIGWINCH   : constant := 28; --  window size change\n+   SIGURG     : constant := 23; --  urgent condition on IO channel\n+   SIGPOLL    : constant := 29; --  pollable event occurred\n+   SIGIO      : constant := 29; --  I/O now possible (4.2 BSD)\n+   SIGLOST    : constant := 29; --  File lock lost\n+   SIGSTOP    : constant := 19; --  stop (cannot be caught or ignored)\n+   SIGTSTP    : constant := 20; --  user stop requested from tty\n+   SIGCONT    : constant := 18; --  stopped process has been continued\n+   SIGTTIN    : constant := 21; --  background tty read attempted\n+   SIGTTOU    : constant := 22; --  background tty write attempted\n+   SIGVTALRM  : constant := 26; --  virtual timer expired\n+   SIGPROF    : constant := 27; --  profiling timer expired\n+   SIGXCPU    : constant := 24; --  CPU time limit exceeded\n+   SIGXFSZ    : constant := 25; --  filesize limit exceeded\n+   SIGUNUSED  : constant := 31; --  unused signal (GNU/Linux)\n+   SIGSTKFLT  : constant := 16; --  coprocessor stack fault (Linux)\n+   SIGLTHRRES : constant := 32; --  GNU/LinuxThreads restart signal\n+   SIGLTHRCAN : constant := 33; --  GNU/LinuxThreads cancel signal\n+   SIGLTHRDBG : constant := 34; --  GNU/LinuxThreads debugger signal\n+\n+   --  struct_sigaction offsets\n+\n+   sa_handler_pos : constant := Standard'Address_Size / 8;\n+   sa_mask_pos    : constant := 2 * Standard'Address_Size / 8;\n+   sa_flags_pos   : constant := 0;\n+\n+   SA_SIGINFO  : constant := 16#04#;\n+   SA_ONSTACK  : constant := 16#08000000#;\n+\n+   type struct_pthread_fast_lock is record\n+      status   : Long_Integer;\n+      spinlock : Integer;\n+   end record;\n+   pragma Convention (C, struct_pthread_fast_lock);\n+\n+   type pthread_mutex_t is record\n+      m_reserved : Integer;\n+      m_count    : Integer;\n+      m_owner    : System.Address;\n+      m_kind     : Integer;\n+      m_lock     : struct_pthread_fast_lock;\n+   end record;\n+   pragma Convention (C, pthread_mutex_t);\n+\n+end System.Linux;"}, {"sha": "83b07c018e68fefe1c554d536ef3046918841801", "filename": "gcc/ada/s-linux.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e84efdce90dc7025317e9646ec43638e0fd2c9ed/gcc%2Fada%2Fs-linux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e84efdce90dc7025317e9646ec43638e0fd2c9ed/gcc%2Fada%2Fs-linux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-linux.ads?ref=e84efdce90dc7025317e9646ec43638e0fd2c9ed", "patch": "@@ -94,8 +94,9 @@ package System.Linux is\n \n    --  struct_sigaction offsets\n \n-   sa_mask_pos  : constant := Standard'Address_Size / 8;\n-   sa_flags_pos : constant := 128 + sa_mask_pos;\n+   sa_handler_pos : constant := 0;\n+   sa_mask_pos    : constant := Standard'Address_Size / 8;\n+   sa_flags_pos   : constant := 128 + sa_mask_pos;\n \n    SA_SIGINFO  : constant := 16#04#;\n    SA_ONSTACK  : constant := 16#08000000#;"}, {"sha": "5d2fdccb69f7690c08e654633e89fa1d85b7bf6a", "filename": "gcc/ada/s-osinte-linux.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e84efdce90dc7025317e9646ec43638e0fd2c9ed/gcc%2Fada%2Fs-osinte-linux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e84efdce90dc7025317e9646ec43638e0fd2c9ed/gcc%2Fada%2Fs-osinte-linux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-linux.ads?ref=e84efdce90dc7025317e9646ec43638e0fd2c9ed", "patch": "@@ -513,9 +513,9 @@ private\n \n    pragma Warnings (Off);\n    for struct_sigaction use record\n-      sa_handler at                  0 range 0 .. Standard'Address_Size - 1;\n-      sa_mask    at Linux.sa_mask_pos  range 0 .. 1023;\n-      sa_flags   at Linux.sa_flags_pos range 0 .. Standard'Address_Size - 1;\n+      sa_handler at Linux.sa_handler_pos range 0 .. Standard'Address_Size - 1;\n+      sa_mask    at Linux.sa_mask_pos    range 0 .. 1023;\n+      sa_flags   at Linux.sa_flags_pos   range 0 .. Standard'Address_Size - 1;\n    end record;\n    --  We intentionally leave sa_restorer unspecified and let the compiler\n    --  append it after the last field, so disable corresponding warning."}, {"sha": "0c848717365912bc7299723ad73a21c8d708cfe3", "filename": "gcc/ada/system-linux-mips64el.ads", "status": "added", "additions": 152, "deletions": 0, "changes": 152, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e84efdce90dc7025317e9646ec43638e0fd2c9ed/gcc%2Fada%2Fsystem-linux-mips64el.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e84efdce90dc7025317e9646ec43638e0fd2c9ed/gcc%2Fada%2Fsystem-linux-mips64el.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-mips64el.ads?ref=e84efdce90dc7025317e9646ec43638e0fd2c9ed", "patch": "@@ -0,0 +1,152 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                        GNAT RUN-TIME COMPONENTS                          --\n+--                                                                          --\n+--                               S Y S T E M                                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                       (GNU-Linux/MIPS64EL Version)                       --\n+--                                                                          --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+package System is\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n+\n+   type Name is (SYSTEM_NAME_GNAT);\n+   System_Name : constant Name := SYSTEM_NAME_GNAT;\n+\n+   --  System-Dependent Named Numbers\n+\n+   Min_Int               : constant := Long_Long_Integer'First;\n+   Max_Int               : constant := Long_Long_Integer'Last;\n+\n+   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n+   Max_Nonbinary_Modulus : constant := Integer'Last;\n+\n+   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n+   Max_Digits            : constant := Long_Long_Float'Digits;\n+\n+   Max_Mantissa          : constant := 63;\n+   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n+\n+   Tick                  : constant := 0.000_001;\n+\n+   --  Storage-related Declarations\n+\n+   type Address is private;\n+   Null_Address : constant Address;\n+\n+   Storage_Unit : constant := 8;\n+   Word_Size    : constant := 64;\n+   Memory_Size  : constant := 2 ** 64;\n+\n+   --  Address comparison\n+\n+   function \"<\"  (Left, Right : Address) return Boolean;\n+   function \"<=\" (Left, Right : Address) return Boolean;\n+   function \">\"  (Left, Right : Address) return Boolean;\n+   function \">=\" (Left, Right : Address) return Boolean;\n+   function \"=\"  (Left, Right : Address) return Boolean;\n+\n+   pragma Import (Intrinsic, \"<\");\n+   pragma Import (Intrinsic, \"<=\");\n+   pragma Import (Intrinsic, \">\");\n+   pragma Import (Intrinsic, \">=\");\n+   pragma Import (Intrinsic, \"=\");\n+\n+   --  Other System-Dependent Declarations\n+\n+   type Bit_Order is (High_Order_First, Low_Order_First);\n+   Default_Bit_Order : constant Bit_Order := Low_Order_First;\n+   pragma Warnings (Off, Default_Bit_Order); -- kill constant condition warning\n+\n+   --  Priority-related Declarations (RM D.1)\n+\n+   Max_Priority           : constant Positive := 30;\n+   Max_Interrupt_Priority : constant Positive := 31;\n+\n+   subtype Any_Priority       is Integer      range  0 .. 31;\n+   subtype Priority           is Any_Priority range  0 .. 30;\n+   subtype Interrupt_Priority is Any_Priority range 31 .. 31;\n+\n+   Default_Priority : constant Priority := 15;\n+\n+private\n+\n+   type Address is mod Memory_Size;\n+   Null_Address : constant Address := 0;\n+\n+   --------------------------------------\n+   -- System Implementation Parameters --\n+   --------------------------------------\n+\n+   --  These parameters provide information about the target that is used\n+   --  by the compiler. They are in the private part of System, where they\n+   --  can be accessed using the special circuitry in the Targparm unit\n+   --  whose source should be consulted for more detailed descriptions\n+   --  of the individual switch values.\n+\n+   AAMP                      : constant Boolean := False;\n+   Backend_Divide_Checks     : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := False;\n+   Command_Line_Args         : constant Boolean := True;\n+   Compiler_System_Version   : constant Boolean := False;\n+   Configurable_Run_Time     : constant Boolean := False;\n+   Denorm                    : constant Boolean := True;\n+   Duration_32_Bits          : constant Boolean := False;\n+   Exit_Status_Supported     : constant Boolean := True;\n+   Fractional_Fixed_Ops      : constant Boolean := False;\n+   Frontend_Layout           : constant Boolean := False;\n+   Functions_Return_By_DSP   : constant Boolean := False;\n+   Machine_Overflows         : constant Boolean := False;\n+   Machine_Rounds            : constant Boolean := True;\n+   OpenVMS                   : constant Boolean := False;\n+   Preallocated_Stacks       : constant Boolean := False;\n+   Signed_Zeros              : constant Boolean := True;\n+   Stack_Check_Default       : constant Boolean := False;\n+   Stack_Check_Probes        : constant Boolean := False;\n+   Support_64_Bit_Divides    : constant Boolean := True;\n+   Support_Aggregates        : constant Boolean := True;\n+   Support_Composite_Assign  : constant Boolean := True;\n+   Support_Composite_Compare : constant Boolean := True;\n+   Support_Long_Shifts       : constant Boolean := True;\n+   Suppress_Standard_Library : constant Boolean := False;\n+   Use_Ada_Main_Program_Name : constant Boolean := False;\n+   ZCX_By_Default            : constant Boolean := True;\n+   GCC_ZCX_Support           : constant Boolean := True;\n+   Front_End_ZCX_Support     : constant Boolean := False;\n+\n+   --  Obsolete entries, to be removed eventually (bootstrap issues!)\n+\n+   High_Integrity_Mode       : constant Boolean := False;\n+   Long_Shifts_Inlined       : constant Boolean := True;\n+\n+end System;"}]}