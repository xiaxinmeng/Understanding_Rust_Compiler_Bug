{"sha": "88e5c02973116a576ca1b36bbd2fb81eb837342f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhlNWMwMjk3MzExNmE1NzZjYTFiMzZiYmQyZmI4MWViODM3MzQyZg==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-01-06T19:41:06Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-01-06T19:41:06Z"}, "message": "pa.c (fmpyaddoperands, [...]): Cleanups suggested by Tege.\n\n\t* pa.c (fmpyaddoperands, fmpysuboperands): Cleanups suggested by\n\tTege.\n\nFrom-SVN: r3124", "tree": {"sha": "65925bf0224497a0a6a953cf53869cf08023c3b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65925bf0224497a0a6a953cf53869cf08023c3b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88e5c02973116a576ca1b36bbd2fb81eb837342f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88e5c02973116a576ca1b36bbd2fb81eb837342f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88e5c02973116a576ca1b36bbd2fb81eb837342f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88e5c02973116a576ca1b36bbd2fb81eb837342f/comments", "author": null, "committer": null, "parents": [{"sha": "83692f15e04e2e75ad6afb2cc84754ef52e73e8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83692f15e04e2e75ad6afb2cc84754ef52e73e8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83692f15e04e2e75ad6afb2cc84754ef52e73e8e"}], "stats": {"total": 33, "additions": 10, "deletions": 23}, "files": [{"sha": "5df256c20f9f3a764a404dc8f015e17f56356bcc", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 10, "deletions": 23, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88e5c02973116a576ca1b36bbd2fb81eb837342f/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88e5c02973116a576ca1b36bbd2fb81eb837342f/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=88e5c02973116a576ca1b36bbd2fb81eb837342f", "patch": "@@ -2551,10 +2551,8 @@ function_label_operand  (op, mode)\n   return GET_CODE (op) == SYMBOL_REF && FUNCTION_NAME_P (XSTR (op, 0));\n }\n \n-/* Returns 1 if the 5 operands specified in OPERANDS are suitable for\n-   use in fmpyadd instructions.  Because of the inout operand in the\n-   add part this function may swap operands[3] and operands[4] to make them\n-   suitable for fmpyadd instructions.  */\n+/* Returns 1 if the 6 operands specified in OPERANDS are suitable for\n+   use in fmpyadd instructions.  */\n int\n fmpyaddoperands(operands)\n      rtx *operands;\n@@ -2573,7 +2571,8 @@ fmpyaddoperands(operands)\n   if (GET_MODE (operands[0]) != DFmode)\n     return 0;\n \n-  /* Only 2 real operands to the addition.  One input must be the output.  */\n+  /* Only 2 real operands to the addition.  One of the input operands must\n+     be the same as the output operand.  */\n   if (! rtx_equal_p (operands[3], operands[4])\n       && ! rtx_equal_p (operands[3], operands[5]))\n     return 0;\n@@ -2589,24 +2588,12 @@ fmpyaddoperands(operands)\n       || rtx_equal_p (operands[5], operands[0]))\n     return 0;\n \n-  /* Make the inout operand be operands[5] and operands[3].  Output template\n-     assumes operands[4] is the read-only add operand.  */\n-  if (rtx_equal_p (operands[3], operands[4]))\n-    {\n-      rtx tmp;\n-      tmp = operands[4];\n-      operands[4] = operands[5];\n-      operands[5] = tmp;\n-    }\n-\n   /* Passed.  Operands are suitable for fmpyadd.  */\n   return 1;\n }\n \n-/* Returns 1 if the 5 operands specified in OPERANDS are suitable for\n-   use in fmpysub instructions.  It is very similar to fmpyaddoperands\n-   above except operands[3] and operands[4] must be the same without\n-   swapping.  */\n+/* Returns 1 if the 6 operands specified in OPERANDS are suitable for\n+   use in fmpysub instructions.  */\n int\n fmpysuboperands(operands)\n      rtx *operands;\n@@ -2625,16 +2612,16 @@ fmpysuboperands(operands)\n   if (GET_MODE (operands[0]) != DFmode)\n     return 0;\n \n-  /* Only 2 real operands to the subtraction.  One input must be the output.  */\n+  /* Only 2 real operands to the subtraction.  Subtraction is not a commutative\n+     operation, so operands[4] must be the same as operand[3].  */\n   if (! rtx_equal_p (operands[3], operands[4]))\n     return 0;\n \n   /* multiply can not feed into subtraction.  */\n-  if (rtx_equal_p (operands[4], operands[0])\n-      || rtx_equal_p (operands[5], operands[0]))\n+  if (rtx_equal_p (operands[5], operands[0]))\n     return 0;\n \n-  /* Inout operand of add can not conflict with any operands from multiply.  */\n+  /* Inout operand of sub can not conflict with any operands from multiply.  */\n   if (rtx_equal_p (operands[3], operands[0])\n      || rtx_equal_p (operands[3], operands[1])\n      || rtx_equal_p (operands[3], operands[2]))"}]}