{"sha": "11c4c4ba47fce0a6be2125e2bd7ee3d16bc8d8af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTFjNGM0YmE0N2ZjZTBhNmJlMjEyNWUyYmQ3ZWUzZDE2YmM4ZDhhZg==", "commit": {"author": {"name": "Chung-Lin Tang", "email": "cltang@codesourcery.com", "date": "2016-08-17T12:08:30Z"}, "committer": {"name": "Chung-Lin Tang", "email": "cltang@gcc.gnu.org", "date": "2016-08-17T12:08:30Z"}, "message": "omp-low.c (lower_oacc_reductions): Adjust variable lookup to use maybe_lookup_decl...\n\n2016-08-17  Chung-Lin Tang  <cltang@codesourcery.com>\n\n\t* omp-low.c (lower_oacc_reductions): Adjust variable lookup to use\n\tmaybe_lookup_decl, to handle nested acc loop directives.\n\n\ttestsuite/\n\t* c-c++-common/goacc/reduction-6.c: New testcase.\n\nFrom-SVN: r239530", "tree": {"sha": "22f67221131bc8c5e54b3185038cc612ef12ab7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22f67221131bc8c5e54b3185038cc612ef12ab7f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11c4c4ba47fce0a6be2125e2bd7ee3d16bc8d8af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11c4c4ba47fce0a6be2125e2bd7ee3d16bc8d8af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11c4c4ba47fce0a6be2125e2bd7ee3d16bc8d8af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11c4c4ba47fce0a6be2125e2bd7ee3d16bc8d8af/comments", "author": {"login": "cltang", "id": 4055966, "node_id": "MDQ6VXNlcjQwNTU5NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/4055966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cltang", "html_url": "https://github.com/cltang", "followers_url": "https://api.github.com/users/cltang/followers", "following_url": "https://api.github.com/users/cltang/following{/other_user}", "gists_url": "https://api.github.com/users/cltang/gists{/gist_id}", "starred_url": "https://api.github.com/users/cltang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cltang/subscriptions", "organizations_url": "https://api.github.com/users/cltang/orgs", "repos_url": "https://api.github.com/users/cltang/repos", "events_url": "https://api.github.com/users/cltang/events{/privacy}", "received_events_url": "https://api.github.com/users/cltang/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "661d6efd62869911344c2d8bd57dd3ca8f4af1dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/661d6efd62869911344c2d8bd57dd3ca8f4af1dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/661d6efd62869911344c2d8bd57dd3ca8f4af1dc"}], "stats": {"total": 82, "additions": 79, "deletions": 3}, "files": [{"sha": "2f19c2585e1b97799f69037aaac415a4321c3efb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11c4c4ba47fce0a6be2125e2bd7ee3d16bc8d8af/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11c4c4ba47fce0a6be2125e2bd7ee3d16bc8d8af/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=11c4c4ba47fce0a6be2125e2bd7ee3d16bc8d8af", "patch": "@@ -1,3 +1,8 @@\n+2016-08-17  Chung-Lin Tang  <cltang@codesourcery.com>\n+\n+\t* omp-low.c (lower_oacc_reductions): Adjust variable lookup to use\n+\tmaybe_lookup_decl, to handle nested acc loop directives.\n+\n 2016-08-17  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/76490"}, {"sha": "3f7debf1fd1e9c5b5d5e9bf32390e4299a7f977a", "filename": "gcc/omp-low.c", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11c4c4ba47fce0a6be2125e2bd7ee3d16bc8d8af/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11c4c4ba47fce0a6be2125e2bd7ee3d16bc8d8af/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=11c4c4ba47fce0a6be2125e2bd7ee3d16bc8d8af", "patch": "@@ -5660,10 +5660,19 @@ lower_oacc_reductions (location_t loc, tree clauses, tree level, bool inner,\n \t\toutgoing = var;\n \t\tincoming = omp_reduction_init_op (loc, rcode, type);\n \t      }\n-\t    else if (ctx->outer)\n-\t      incoming = outgoing = lookup_decl (orig, ctx->outer);\n \t    else\n-\t      incoming = outgoing = orig;\n+\t      {\n+\t\t/* Try to look at enclosing contexts for reduction var,\n+\t\t   use original if no mapping found.  */\n+\t\ttree t = NULL_TREE;\n+\t\tomp_context *c = ctx->outer;\n+\t\twhile (c && !t)\n+\t\t  {\n+\t\t    t = maybe_lookup_decl (orig, c);\n+\t\t    c = c->outer;\n+\t\t  }\n+\t\tincoming = outgoing = (t ? t : orig);\n+\t      }\n \t      \n \t  has_outer_reduction:;\n \t  }"}, {"sha": "0595ceb9d75e54b9036fddab9eef8ba5ff109086", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11c4c4ba47fce0a6be2125e2bd7ee3d16bc8d8af/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11c4c4ba47fce0a6be2125e2bd7ee3d16bc8d8af/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=11c4c4ba47fce0a6be2125e2bd7ee3d16bc8d8af", "patch": "@@ -1,3 +1,7 @@\n+2016-08-17  Chung-Lin Tang  <cltang@codesourcery.com>\n+\n+\t* c-c++-common/goacc/reduction-6.c: New testcase.\n+\n 2016-08-17  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/76490"}, {"sha": "619f82b9d8b306186a7fc9f3c582d9ceb361faa8", "filename": "gcc/testsuite/c-c++-common/goacc/reduction-6.c", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11c4c4ba47fce0a6be2125e2bd7ee3d16bc8d8af/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Freduction-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11c4c4ba47fce0a6be2125e2bd7ee3d16bc8d8af/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Freduction-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Freduction-6.c?ref=11c4c4ba47fce0a6be2125e2bd7ee3d16bc8d8af", "patch": "@@ -0,0 +1,58 @@\n+/* Check if different occurences of the reduction clause on\n+   OpenACC loop nests will compile.  */\n+\n+int foo (int N)\n+{\n+  int a = 0, b = 0, c = 0, d = 0, e = 0;\n+\n+  #pragma acc parallel\n+  {\n+    #pragma acc loop\n+    for (int i = 0; i < N; i++)\n+      {\n+        #pragma acc loop reduction(+:a)\n+\tfor (int j = 0; j < N; j++)\n+\t  a += 1;\n+      }\n+  }\n+\n+  #pragma acc parallel\n+  {\n+    #pragma acc loop reduction(+:b)\n+    for (int i = 0; i < N; i++)\n+      {\n+        #pragma acc loop\n+\tfor (int j = 0; j < N; j++)\n+\t  b += 1;\n+      }\n+  }\n+\n+  #pragma acc parallel\n+  {\n+    #pragma acc loop reduction(+:c)\n+    for (int i = 0; i < N; i++)\n+      {\n+        #pragma acc loop reduction(+:c)\n+\tfor (int j = 0; j < N; j++)\n+\t  c += 1;\n+      }\n+  }\n+\n+  #pragma acc parallel loop\n+  for (int i = 0; i < N; i++)\n+    {\n+      #pragma acc loop reduction(+:d)\n+      for (int j = 0; j < N; j++)\n+\td += 1;\n+    }\n+\n+  #pragma acc parallel loop reduction(+:e)\n+  for (int i = 0; i < N; i++)\n+    {\n+      #pragma acc loop reduction(+:e)\n+      for (int j = 0; j < N; j++)\n+\te += 1;\n+    }\n+\n+  return a + b + c + d + e;\n+}"}]}