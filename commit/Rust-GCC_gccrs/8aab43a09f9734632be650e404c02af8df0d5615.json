{"sha": "8aab43a09f9734632be650e404c02af8df0d5615", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFhYjQzYTA5Zjk3MzQ2MzJiZTY1MGU0MDRjMDJhZjhkZjBkNTYxNQ==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2011-07-21T22:57:10Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2011-07-21T22:57:10Z"}, "message": "Add fixme comment.\n\n2011-07-21  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* graphite-clast-to-gimple.c (clast_get_body_of_loop): Add fixme\n\tcomment.\n\nFrom-SVN: r176600", "tree": {"sha": "95473332573ebbbee924d3cfabacf8df5de0f0d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95473332573ebbbee924d3cfabacf8df5de0f0d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8aab43a09f9734632be650e404c02af8df0d5615", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8aab43a09f9734632be650e404c02af8df0d5615", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8aab43a09f9734632be650e404c02af8df0d5615", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8aab43a09f9734632be650e404c02af8df0d5615/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf7eab7da2842e739c95d0f2f0c65882ec908d0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf7eab7da2842e739c95d0f2f0c65882ec908d0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf7eab7da2842e739c95d0f2f0c65882ec908d0f"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "7d1b47b90337caf8bfaf47996f955c61d764a3f1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aab43a09f9734632be650e404c02af8df0d5615/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aab43a09f9734632be650e404c02af8df0d5615/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8aab43a09f9734632be650e404c02af8df0d5615", "patch": "@@ -1,3 +1,8 @@\n+2011-07-21  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-clast-to-gimple.c (clast_get_body_of_loop): Add fixme\n+\tcomment.\n+\n 2011-07-21  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-clast-to-gimple.c (struct ivs_params): New."}, {"sha": "b7bfaa8a155ff65a7fdfe55257eaa2475ac8e497", "filename": "gcc/graphite-clast-to-gimple.c", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aab43a09f9734632be650e404c02af8df0d5615/gcc%2Fgraphite-clast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aab43a09f9734632be650e404c02af8df0d5615/gcc%2Fgraphite-clast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-clast-to-gimple.c?ref=8aab43a09f9734632be650e404c02af8df0d5615", "patch": "@@ -640,7 +640,24 @@ compute_type_for_level (poly_bb_p pbb, int level)\n }\n \n /* Walks a CLAST and returns the first statement in the body of a\n-   loop.  */\n+   loop.\n+\n+   FIXME: This function should not be used to get a PBB in the STMT\n+   loop in order to find out the iteration domain of the loop: the\n+   counter example from Tobias is:\n+\n+   | for (i = 0; i < 100; i++)\n+   |   {\n+   |     if (i == 0)\n+   |       S1;\n+   |     S2;\n+   |   }\n+\n+   This function would return S1 whose iteration domain contains only\n+   one point \"i = 0\", whereas the iteration domain of S2 has 100 points.\n+\n+   This should be implemented using some functionality existing in\n+   CLooG-ISL.  */\n \n static struct clast_user_stmt *\n clast_get_body_of_loop (struct clast_stmt *stmt)"}]}