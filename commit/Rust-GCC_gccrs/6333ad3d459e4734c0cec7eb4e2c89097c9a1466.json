{"sha": "6333ad3d459e4734c0cec7eb4e2c89097c9a1466", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjMzM2FkM2Q0NTllNDczNGMwY2VjN2ViNGUyYzg5MDk3YzlhMTQ2Ng==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-22T08:52:17Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-22T08:52:17Z"}, "message": "[multiple changes]\n\n2015-05-21  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_util.adb (Activate_Atomic_Synchronization): Do not set\n\tAtomic_Sync_Required for an object renaming declaration.\n\t* sem_ch8.adb (Analyze_Object_Renaming): Copy Is_Atomic and\n\tIs_Independent to renaming object.\n\n2015-05-21  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch5.adb (Analyze_Iterator_Specification): Diagnose\n\tvarious illegalities in iterators over arrays and containers:\n\ta) New function Get_Cursor_Type, to verify that the cursor is\n\tnot a limited type at the point of iteration.\n\tb) If the container is a constant, an element_iterator is illegal\n\tif the container type does not have a Constant_Indexing aspect.\n\tc) If the iterate function has an in-out controlling parameter,\n\tthe container cannot be a constant object.\n\td) Reject additional cases of iterators over a\n\tdiscriminant-dependent component of a mutable object.\n\nFrom-SVN: r223524", "tree": {"sha": "2e94024e05c74b0b303ac3cd026f30894f78ab05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e94024e05c74b0b303ac3cd026f30894f78ab05"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6333ad3d459e4734c0cec7eb4e2c89097c9a1466", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6333ad3d459e4734c0cec7eb4e2c89097c9a1466", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6333ad3d459e4734c0cec7eb4e2c89097c9a1466", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6333ad3d459e4734c0cec7eb4e2c89097c9a1466/comments", "author": null, "committer": null, "parents": [{"sha": "44ae5cd22f30de0a65c3a81ea146a85f07f33013", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44ae5cd22f30de0a65c3a81ea146a85f07f33013", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44ae5cd22f30de0a65c3a81ea146a85f07f33013"}], "stats": {"total": 84, "additions": 77, "deletions": 7}, "files": [{"sha": "2feb579a86eed08904488996c92f8335ae5fff6a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6333ad3d459e4734c0cec7eb4e2c89097c9a1466/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6333ad3d459e4734c0cec7eb4e2c89097c9a1466/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6333ad3d459e4734c0cec7eb4e2c89097c9a1466", "patch": "@@ -1,3 +1,23 @@\n+2015-05-21  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_util.adb (Activate_Atomic_Synchronization): Do not set\n+\tAtomic_Sync_Required for an object renaming declaration.\n+\t* sem_ch8.adb (Analyze_Object_Renaming): Copy Is_Atomic and\n+\tIs_Independent to renaming object.\n+\n+2015-05-21  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch5.adb (Analyze_Iterator_Specification): Diagnose\n+\tvarious illegalities in iterators over arrays and containers:\n+\ta) New function Get_Cursor_Type, to verify that the cursor is\n+\tnot a limited type at the point of iteration.\n+\tb) If the container is a constant, an element_iterator is illegal\n+\tif the container type does not have a Constant_Indexing aspect.\n+\tc) If the iterate function has an in-out controlling parameter,\n+\tthe container cannot be a constant object.\n+\td) Reject additional cases of iterators over a\n+\tdiscriminant-dependent component of a mutable object.\n+\n 2015-05-21  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* einfo.adb (Contract): This attribute now applies to constants."}, {"sha": "d7f989963302aceeafafa017e4580ce85988cae0", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6333ad3d459e4734c0cec7eb4e2c89097c9a1466/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6333ad3d459e4734c0cec7eb4e2c89097c9a1466/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=6333ad3d459e4734c0cec7eb4e2c89097c9a1466", "patch": "@@ -204,6 +204,13 @@ package body Exp_Util is\n          when others => null;\n       end case;\n \n+      --  Nothing to do for the identifier in an object renaming declaration,\n+      --  the renaming itself does not need atomic syncrhonization.\n+\n+      if Nkind (Parent (N)) = N_Object_Renaming_Declaration then\n+         return;\n+      end if;\n+\n       --  Go ahead and set the flag\n \n       Set_Atomic_Sync_Required (N);"}, {"sha": "1eb51db533cebf1335ee3112b45ae26dacc1916e", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 43, "deletions": 7, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6333ad3d459e4734c0cec7eb4e2c89097c9a1466/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6333ad3d459e4734c0cec7eb4e2c89097c9a1466/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=6333ad3d459e4734c0cec7eb4e2c89097c9a1466", "patch": "@@ -2015,10 +2015,11 @@ package body Sem_Ch5 is\n             --  mutable, to prevent a modification of the container in the\n             --  course of an iteration.\n \n-            if Is_Entity_Name (Iter_Name)\n-              and then Nkind (Original_Node (Iter_Name)) = N_Selected_Component\n+            --  Should comment on need to go to Original_Node ???\n+\n+            if Nkind (Original_Node (Iter_Name)) = N_Selected_Component\n               and then Is_Dependent_Component_Of_Mutable_Object\n-                         (Renamed_Object (Entity (Iter_Name)))\n+                         (Original_Node (Iter_Name))\n             then\n                Error_Msg_N\n                  (\"container cannot be a discriminant-dependent \"\n@@ -2089,6 +2090,8 @@ package body Sem_Ch5 is\n                declare\n                   Element     : constant Entity_Id :=\n                     Find_Value_Of_Aspect (Typ, Aspect_Iterator_Element);\n+                  Iterator    : constant Entity_Id :=\n+                    Find_Value_Of_Aspect (Typ, Aspect_Default_Iterator);\n                   Cursor_Type : Entity_Id;\n \n                begin\n@@ -2120,6 +2123,39 @@ package body Sem_Ch5 is\n                      if Has_Aspect (Typ, Aspect_Variable_Indexing) then\n                         Set_Ekind (Def_Id, E_Variable);\n                      end if;\n+\n+                     --  If the container is a constant, iterating over it\n+                     --  requires a Constant_Indexing operation.\n+\n+                     if not Is_Variable (Iter_Name)\n+                       and then not Has_Aspect (Typ, Aspect_Constant_Indexing)\n+                     then\n+                        Error_Msg_N (\"iteration over constant container \"\n+                          & \"require constant_indexing aspect\", N);\n+\n+                     --  The Iterate function may have an in_out parameter,\n+                     --  and a constant container is thus illegal.\n+\n+                     elsif Present (Iterator)\n+                       and then Ekind (Entity (Iterator)) = E_Function\n+                       and then Ekind (First_Formal (Entity (Iterator))) /=\n+                                  E_In_Parameter\n+                       and then not Is_Variable (Iter_Name)\n+                     then\n+                        Error_Msg_N\n+                          (\"variable container expected\", N);\n+                     end if;\n+\n+                     if Nkind (Original_Node (Iter_Name))\n+                        = N_Selected_Component\n+                       and then\n+                         Is_Dependent_Component_Of_Mutable_Object\n+                           (Original_Node (Iter_Name))\n+                     then\n+                        Error_Msg_N\n+                          (\"container cannot be a discriminant-dependent \"\n+                           & \"component of a mutable object\", N);\n+                     end if;\n                   end if;\n                end;\n             end if;\n@@ -2168,16 +2204,16 @@ package body Sem_Ch5 is\n \n             if Nkind (Iter_Name) = N_Identifier then\n                declare\n-                  Iter_Kind : constant Node_Kind :=\n-                                Nkind (Original_Node (Iter_Name));\n+                  Orig_Node : constant Node_Id := Original_Node (Iter_Name);\n+                  Iter_Kind : constant Node_Kind := Nkind (Orig_Node);\n                   Obj       : Node_Id;\n \n                begin\n                   if Iter_Kind = N_Selected_Component then\n-                     Obj := Prefix (Original_Node (Iter_Name));\n+                     Obj  := Prefix (Orig_Node);\n \n                   elsif Iter_Kind = N_Function_Call then\n-                     Obj := First_Actual (Original_Node (Iter_Name));\n+                     Obj  := First_Actual (Orig_Node);\n \n                   --  If neither, the name comes from source\n "}, {"sha": "c8c9f1f56dc78e4b0b0fbe66eb265ccc5478cf3b", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6333ad3d459e4734c0cec7eb4e2c89097c9a1466/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6333ad3d459e4734c0cec7eb4e2c89097c9a1466/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=6333ad3d459e4734c0cec7eb4e2c89097c9a1466", "patch": "@@ -1344,6 +1344,13 @@ package body Sem_Ch8 is\n \n       Set_Is_Volatile (Id, Is_Volatile_Object (Nam));\n \n+      --  Also copy settings of Is_Atomic and Is_Independent\n+\n+      if Is_Entity_Name (Nam) then\n+         Set_Is_Atomic      (Id, Is_Atomic      (Entity (Nam)));\n+         Set_Is_Independent (Id, Is_Independent (Entity (Nam)));\n+      end if;\n+\n       --  Treat as volatile if we just set the Volatile flag\n \n       if Is_Volatile (Id)"}]}