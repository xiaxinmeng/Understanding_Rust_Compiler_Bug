{"sha": "0ffbef9f3553b6f9841f01ac5ff61850af63b219", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZmYmVmOWYzNTUzYjZmOTg0MWYwMWFjNWZmNjE4NTBhZjYzYjIxOQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-10-09T15:04:53Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-10-09T15:04:53Z"}, "message": "[Ada] Spurious warning on uninitialized entity during code generation\n\nThis patch suppresses a spurious warning coming from the GCC backend, on\nan aggregate that cannot be built in place and for which a temporary\nvariable must be created. If the type of the aggregate is a packed\nboolean array, the generated code may appear to use an uninitialized\nvalue for a component of the array, when in fact the code simply sets a\nsingle bit of that array.\n\n2018-10-09  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* exp_aggr.adb (Expand_Array_Aggregate): If it is not possible\n\tto build in place an aggregate with component associations, set\n\tthe Warnings_Off flag on the generated temporary, to prevent\n\tspurious warnings from the backend when compiling with the\n\t-Wuninitialized gcc flag.\n\ngcc/testsuite/\n\n\t* gnat.dg/warn18.adb: New testcase.\n\nFrom-SVN: r264960", "tree": {"sha": "7f1033869d9a3a083734be3e352ad606478c95ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f1033869d9a3a083734be3e352ad606478c95ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ffbef9f3553b6f9841f01ac5ff61850af63b219", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ffbef9f3553b6f9841f01ac5ff61850af63b219", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ffbef9f3553b6f9841f01ac5ff61850af63b219", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ffbef9f3553b6f9841f01ac5ff61850af63b219/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "33b43b0d8cd2de722d177ef823930500948a7487", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33b43b0d8cd2de722d177ef823930500948a7487", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33b43b0d8cd2de722d177ef823930500948a7487"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "f6925bc9b501b6787fdb4c96f6346095c05d23ed", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ffbef9f3553b6f9841f01ac5ff61850af63b219/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ffbef9f3553b6f9841f01ac5ff61850af63b219/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0ffbef9f3553b6f9841f01ac5ff61850af63b219", "patch": "@@ -1,3 +1,11 @@\n+2018-10-09  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_aggr.adb (Expand_Array_Aggregate): If it is not possible\n+\tto build in place an aggregate with component associations, set\n+\tthe Warnings_Off flag on the generated temporary, to prevent\n+\tspurious warnings from the backend when compiling with the\n+\t-Wuninitialized gcc flag.\n+\n 2018-09-30  Alexandre Oliva <oliva@adacore.com>\n \n \t* gcc-interface/lang-specs.h (default_compilers): When given"}, {"sha": "1928cb9be3cdf22c356dcec41b498003ea545617", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ffbef9f3553b6f9841f01ac5ff61850af63b219/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ffbef9f3553b6f9841f01ac5ff61850af63b219/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=0ffbef9f3553b6f9841f01ac5ff61850af63b219", "patch": "@@ -6354,6 +6354,7 @@ package body Exp_Aggr is\n              Defining_Identifier => Tmp,\n              Object_Definition   => New_Occurrence_Of (Typ, Loc));\n          Set_No_Initialization (Tmp_Decl, True);\n+         Set_Warnings_Off (Tmp);\n \n          --  If we are within a loop, the temporary will be pushed on the\n          --  stack at each iteration. If the aggregate is the expression"}, {"sha": "8f84ace89c0bf5e8bd3370ee24076b83249d8d49", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ffbef9f3553b6f9841f01ac5ff61850af63b219/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ffbef9f3553b6f9841f01ac5ff61850af63b219/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0ffbef9f3553b6f9841f01ac5ff61850af63b219", "patch": "@@ -1,3 +1,7 @@\n+2018-10-09  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* gnat.dg/warn18.adb: New testcase.\n+\n 2018-10-09  Martin Liska  <mliska@suse.cz>\n \n \t* c-c++-common/asan/pr64820.c: Add line number to scanned"}, {"sha": "c990575ebf17a8b810c77ac8bf556e302420ec03", "filename": "gcc/testsuite/gnat.dg/warn18.adb", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ffbef9f3553b6f9841f01ac5ff61850af63b219/gcc%2Ftestsuite%2Fgnat.dg%2Fwarn18.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ffbef9f3553b6f9841f01ac5ff61850af63b219/gcc%2Ftestsuite%2Fgnat.dg%2Fwarn18.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fwarn18.adb?ref=0ffbef9f3553b6f9841f01ac5ff61850af63b219", "patch": "@@ -0,0 +1,13 @@\n+--  { dg-do compile }\n+--  { dg-options \"-Wuninitialized\" }\n+\n+with Ada.Text_IO; use Ada.Text_IO;\n+\n+procedure Warn18 is\n+   type Set is array (Natural range <>) of Boolean;\n+   pragma Pack (Set);\n+\n+   O : constant Set (0 .. 255) := (28 => True, others => False);\n+begin\n+   Put_Line (O (1)'Img);\n+end Warn18;"}]}