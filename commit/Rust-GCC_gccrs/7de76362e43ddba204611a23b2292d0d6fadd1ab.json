{"sha": "7de76362e43ddba204611a23b2292d0d6fadd1ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2RlNzYzNjJlNDNkZGJhMjA0NjExYTIzYjIyOTJkMGQ2ZmFkZDFhYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-09-23T16:58:40Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-09-23T16:58:40Z"}, "message": "sel-sched-ir.c (sel_global_bb_info, [...]): Remove unnecessary = vNULL initialization of file scope vec.\n\n\t* sel-sched-ir.c (sel_global_bb_info, sel_region_bb_info,\n\tloop_nests, s_i_d, last_added_blocks): Remove unnecessary\n\t= vNULL initialization of file scope vec.\n\t* passes.c (pass_tab, enabled_pass_uid_range_tab,\n\tdisabled_pass_uid_range_tab): Likewise.\n\t* haifa-sched.c (sched_luids, h_i_d): Likewise.\n\t* tree-chkp-opt.c (check_infos): Likewise.\n\t* sel-sched.c (vec_av_set, vec_temp_moveop_nops): Likewise.\nc/\n\t* c-parser.c (incomplete_record_decls): Remove unnecessary\n\t= vNULL initialization of file scope vec.\ncp/\n\t* constexpr.c (call_stack): Remove unnecessary\n\t= vNULL initialization of file scope vec.\n\nFrom-SVN: r240444", "tree": {"sha": "f1e2282a8b574a5d2e1bced27fcf070605de6dc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1e2282a8b574a5d2e1bced27fcf070605de6dc2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7de76362e43ddba204611a23b2292d0d6fadd1ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7de76362e43ddba204611a23b2292d0d6fadd1ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7de76362e43ddba204611a23b2292d0d6fadd1ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7de76362e43ddba204611a23b2292d0d6fadd1ab/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3d1ba08f49b0ccf9caba669564190f6b5afc7b6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d1ba08f49b0ccf9caba669564190f6b5afc7b6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d1ba08f49b0ccf9caba669564190f6b5afc7b6f"}], "stats": {"total": 52, "additions": 32, "deletions": 20}, "files": [{"sha": "e32b062ad5aab6009586563f96608410424c8f1c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7de76362e43ddba204611a23b2292d0d6fadd1ab/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7de76362e43ddba204611a23b2292d0d6fadd1ab/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7de76362e43ddba204611a23b2292d0d6fadd1ab", "patch": "@@ -1,5 +1,14 @@\n 2016-09-23  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* sel-sched-ir.c (sel_global_bb_info, sel_region_bb_info,\n+\tloop_nests, s_i_d, last_added_blocks): Remove unnecessary\n+\t= vNULL initialization of file scope vec.\n+\t* passes.c (pass_tab, enabled_pass_uid_range_tab,\n+\tdisabled_pass_uid_range_tab): Likewise.\n+\t* haifa-sched.c (sched_luids, h_i_d): Likewise.\n+\t* tree-chkp-opt.c (check_infos): Likewise.\n+\t* sel-sched.c (vec_av_set, vec_temp_moveop_nops): Likewise.\n+\n \t* vec.h (vnull::operator vec): Add constexpr keyword for\n \tC++11 and later.\n "}, {"sha": "283cfdacc2f33064887d2205f6e792324363f4c3", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7de76362e43ddba204611a23b2292d0d6fadd1ab/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7de76362e43ddba204611a23b2292d0d6fadd1ab/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=7de76362e43ddba204611a23b2292d0d6fadd1ab", "patch": "@@ -1,3 +1,8 @@\n+2016-09-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* c-parser.c (incomplete_record_decls): Remove unnecessary\n+\t= vNULL initialization of file scope vec.\n+\n 2016-09-16  Marek Polacek  <polacek@redhat.com>\n \n \t* c-typeck.c (lvalue_p): Use true and false instead of 1 and 0."}, {"sha": "5f610e9ad7b5dee2ce4d92a00c97dddae43e7620", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7de76362e43ddba204611a23b2292d0d6fadd1ab/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7de76362e43ddba204611a23b2292d0d6fadd1ab/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=7de76362e43ddba204611a23b2292d0d6fadd1ab", "patch": "@@ -67,7 +67,7 @@ along with GCC; see the file COPYING3.  If not see\n    In c_parser_translation_unit(), we iterate over incomplete_record_decls\n    and report error if any of the decls are still incomplete.  */ \n \n-vec<tree> incomplete_record_decls = vNULL;\n+vec<tree> incomplete_record_decls;\n \n void\n set_c_expr_source_range (c_expr *expr,"}, {"sha": "3900bba62503d38e12a47f5a388dce7cec28f696", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7de76362e43ddba204611a23b2292d0d6fadd1ab/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7de76362e43ddba204611a23b2292d0d6fadd1ab/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7de76362e43ddba204611a23b2292d0d6fadd1ab", "patch": "@@ -1,5 +1,8 @@\n 2016-09-23  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* constexpr.c (call_stack): Remove unnecessary\n+\t= vNULL initialization of file scope vec.\n+\n \t* name-lookup.c (store_bindings, store_class_bindings): Don't\n \tinitialize static local bindings_need_stored to vNULL.\n "}, {"sha": "c5dde151c2e5f16f0b9822caf99957d975738e27", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7de76362e43ddba204611a23b2292d0d6fadd1ab/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7de76362e43ddba204611a23b2292d0d6fadd1ab/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=7de76362e43ddba204611a23b2292d0d6fadd1ab", "patch": "@@ -1253,7 +1253,7 @@ cxx_bind_parameters_in_call (const constexpr_ctx *ctx, tree t,\n    These do not need to be marked for PCH or GC.  */\n \n /* FIXME remember and print actual constant arguments.  */\n-static vec<tree> call_stack = vNULL;\n+static vec<tree> call_stack;\n static int call_stack_tick;\n static int last_cx_error_tick;\n "}, {"sha": "0ad080f253cbadfb174c0bf2a6d16dbb5a5baa18", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7de76362e43ddba204611a23b2292d0d6fadd1ab/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7de76362e43ddba204611a23b2292d0d6fadd1ab/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=7de76362e43ddba204611a23b2292d0d6fadd1ab", "patch": "@@ -401,13 +401,13 @@ const struct common_sched_info_def haifa_common_sched_info =\n   };\n \n /* Mapping from instruction UID to its Logical UID.  */\n-vec<int> sched_luids = vNULL;\n+vec<int> sched_luids;\n \n /* Next LUID to assign to an instruction.  */\n int sched_max_luid = 1;\n \n /* Haifa Instruction Data.  */\n-vec<haifa_insn_data_def> h_i_d = vNULL;\n+vec<haifa_insn_data_def> h_i_d;\n \n void (* sched_init_only_bb) (basic_block, basic_block);\n "}, {"sha": "a210772eab8a8b5144407783584c86155347d112", "filename": "gcc/passes.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7de76362e43ddba204611a23b2292d0d6fadd1ab/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7de76362e43ddba204611a23b2292d0d6fadd1ab/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=7de76362e43ddba204611a23b2292d0d6fadd1ab", "patch": "@@ -862,7 +862,7 @@ pass_manager::register_pass_name (opt_pass *pass, const char *name)\n /* Map from pass id to canonicalized pass name.  */\n \n typedef const char *char_ptr;\n-static vec<char_ptr> pass_tab = vNULL;\n+static vec<char_ptr> pass_tab;\n \n /* Callback function for traversing NAME_TO_PASS_MAP.  */\n \n@@ -982,10 +982,8 @@ struct uid_range\n typedef struct uid_range *uid_range_p;\n \n \n-static vec<uid_range_p>\n-      enabled_pass_uid_range_tab = vNULL;\n-static vec<uid_range_p>\n-      disabled_pass_uid_range_tab = vNULL;\n+static vec<uid_range_p> enabled_pass_uid_range_tab;\n+static vec<uid_range_p> disabled_pass_uid_range_tab;\n \n \n /* Parse option string for -fdisable- and -fenable-"}, {"sha": "210b1e4edfb359a161cda4826704005ae9ab5a24", "filename": "gcc/sel-sched-ir.c", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7de76362e43ddba204611a23b2292d0d6fadd1ab/gcc%2Fsel-sched-ir.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7de76362e43ddba204611a23b2292d0d6fadd1ab/gcc%2Fsel-sched-ir.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched-ir.c?ref=7de76362e43ddba204611a23b2292d0d6fadd1ab", "patch": "@@ -45,12 +45,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"sel-sched-dump.h\"\n \n /* A vector holding bb info for whole scheduling pass.  */\n-vec<sel_global_bb_info_def>\n-    sel_global_bb_info = vNULL;\n+vec<sel_global_bb_info_def> sel_global_bb_info;\n \n /* A vector holding bb info.  */\n-vec<sel_region_bb_info_def>\n-    sel_region_bb_info = vNULL;\n+vec<sel_region_bb_info_def> sel_region_bb_info;\n \n /* A pool for allocating all lists.  */\n object_allocator<_list_node> sched_lists_pool (\"sel-sched-lists\");\n@@ -66,7 +64,7 @@ struct loop *current_loop_nest;\n \n /* LOOP_NESTS is a vector containing the corresponding loop nest for\n    each region.  */\n-static vec<loop_p> loop_nests = vNULL;\n+static vec<loop_p> loop_nests;\n \n /* Saves blocks already in loop regions, indexed by bb->index.  */\n static sbitmap bbs_in_loop_rgns = NULL;\n@@ -4163,7 +4161,7 @@ finish_region_bb_info (void)\n \f\n \n /* Data for each insn in current region.  */\n-vec<sel_insn_data_def> s_i_d = vNULL;\n+vec<sel_insn_data_def> s_i_d;\n \n /* Extend data structures for insns from current region.  */\n static void\n@@ -4499,8 +4497,7 @@ get_av_level (insn_t insn)\n \n /* The basic block that already has been processed by the sched_data_update (),\n    but hasn't been in sel_add_bb () yet.  */\n-static vec<basic_block>\n-    last_added_blocks = vNULL;\n+static vec<basic_block> last_added_blocks;\n \n /* A pool for allocating successor infos.  */\n static struct"}, {"sha": "1ed0d4bdca673126528bf97a463efc5f54b9fd1b", "filename": "gcc/sel-sched.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7de76362e43ddba204611a23b2292d0d6fadd1ab/gcc%2Fsel-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7de76362e43ddba204611a23b2292d0d6fadd1ab/gcc%2Fsel-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched.c?ref=7de76362e43ddba204611a23b2292d0d6fadd1ab", "patch": "@@ -494,7 +494,7 @@ static int max_ws;\n static int num_insns_scheduled;\n \n /* A vector of expressions is used to be able to sort them.  */\n-static vec<expr_t> vec_av_set = vNULL;\n+static vec<expr_t> vec_av_set;\n \n /* A vector of vinsns is used to hold temporary lists of vinsns.  */\n typedef vec<vinsn_t> vinsn_vec_t;\n@@ -512,7 +512,7 @@ static vinsn_vec_t vec_target_unavailable_vinsns = vinsn_vec_t ();\n \n /* Vector to store temporary nops inserted in move_op to prevent removal\n    of empty bbs.  */\n-static vec<insn_t> vec_temp_moveop_nops = vNULL;\n+static vec<insn_t> vec_temp_moveop_nops;\n \n /* These bitmaps record original instructions scheduled on the current\n    iteration and bookkeeping copies created by them.  */"}, {"sha": "6cf086c754c78623aaca4927eaf3960dca0965c3", "filename": "gcc/tree-chkp-opt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7de76362e43ddba204611a23b2292d0d6fadd1ab/gcc%2Ftree-chkp-opt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7de76362e43ddba204611a23b2292d0d6fadd1ab/gcc%2Ftree-chkp-opt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chkp-opt.c?ref=7de76362e43ddba204611a23b2292d0d6fadd1ab", "patch": "@@ -84,7 +84,7 @@ static void chkp_collect_value (tree ssa_name, address_t &res);\n #define chkp_checku_fndecl \\\n   (targetm.builtin_chkp_function (BUILT_IN_CHKP_BNDCU))\n \n-static vec<struct bb_checks, va_heap, vl_ptr> check_infos = vNULL;\n+static vec<struct bb_checks, va_heap, vl_ptr> check_infos;\n \n /* Comparator for pol_item structures I1 and I2 to be used\n    to find items with equal var.  Also used for polynomial"}]}