{"sha": "e771c08509c5bc959cd8a59aaa15965cfc04a48c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTc3MWMwODUwOWM1YmM5NTljZDhhNTlhYWExNTk2NWNmYzA0YTQ4Yw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-23T06:50:13Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-23T06:50:13Z"}, "message": "[multiple changes]\n\n2010-06-23  Javier Miranda  <miranda@adacore.com>\n\n\t* atree.ads (Set_Reporting_Proc): New subprogram.\n\t* atree.adb: Remove dependency on packages Opt and SCIL_LL.\n\t(Allocate_Initialize_Node, Replace, Rewrite): Replace direct calls\n\tto routines of package Scil_ll by indirect call to the registered\n\tsubprogram.\n\t(Set_Reporting_Proc): New subprogram. Used to register a subprogram\n\tthat is invoked when a node is allocated, replaced or rewritten.\n\t* scil_ll.adb (Copy_SCIL_Node): New routine that takes care of copying\n\tthe SCIL node. Used as argument for Set_Reporting_Proc.\n\t(Initialize): Register Copy_SCIL_Node as the reporting routine that\n\tis invoked by atree.\n\n2010-06-23  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_ch3.ads: Minor reformatting.\n\n2010-06-23  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch12.adb (Analyze_Package_Instantiation): In CodePeer mode,\n\talways analyze the generic body and instance, because it may be needed\n\tdownstream.\n\t(Mark_Context): Prepend the with clauses for needed generic units, so\n\tthey appear in a better order for CodePeer.\n\t* sem_util.adb, sem_util.ads: Prototype code for AI05-0144.\n\n2010-06-23  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj.ads, prj-nmsc.adb (Error_Or_Warning): New subprogram.\n\nFrom-SVN: r161252", "tree": {"sha": "2ec0a44a7df2f4c0418b8bc7e3d89f8f11b94c65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ec0a44a7df2f4c0418b8bc7e3d89f8f11b94c65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e771c08509c5bc959cd8a59aaa15965cfc04a48c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e771c08509c5bc959cd8a59aaa15965cfc04a48c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e771c08509c5bc959cd8a59aaa15965cfc04a48c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e771c08509c5bc959cd8a59aaa15965cfc04a48c/comments", "author": null, "committer": null, "parents": [{"sha": "5d791dfbcd073013a6145abc3d0b5f04dd2eaee5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d791dfbcd073013a6145abc3d0b5f04dd2eaee5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d791dfbcd073013a6145abc3d0b5f04dd2eaee5"}], "stats": {"total": 320, "additions": 238, "deletions": 82}, "files": [{"sha": "ba3b9e996505a11a22d22444ec25b946e0100b31", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e771c08509c5bc959cd8a59aaa15965cfc04a48c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e771c08509c5bc959cd8a59aaa15965cfc04a48c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e771c08509c5bc959cd8a59aaa15965cfc04a48c", "patch": "@@ -1,3 +1,34 @@\n+2010-06-23  Javier Miranda  <miranda@adacore.com>\n+\n+\t* atree.ads (Set_Reporting_Proc): New subprogram.\n+\t* atree.adb: Remove dependency on packages Opt and SCIL_LL.\n+\t(Allocate_Initialize_Node, Replace, Rewrite): Replace direct calls\n+\tto routines of package Scil_ll by indirect call to the registered\n+\tsubprogram.\n+\t(Set_Reporting_Proc): New subprogram. Used to register a subprogram\n+\tthat is invoked when a node is allocated, replaced or rewritten.\n+\t* scil_ll.adb (Copy_SCIL_Node): New routine that takes care of copying\n+\tthe SCIL node. Used as argument for Set_Reporting_Proc.\n+\t(Initialize): Register Copy_SCIL_Node as the reporting routine that\n+\tis invoked by atree.\n+\n+2010-06-23  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_ch3.ads: Minor reformatting.\n+\n+2010-06-23  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb (Analyze_Package_Instantiation): In CodePeer mode,\n+\talways analyze the generic body and instance, because it may be needed\n+\tdownstream.\n+\t(Mark_Context): Prepend the with clauses for needed generic units, so\n+\tthey appear in a better order for CodePeer.\n+\t* sem_util.adb, sem_util.ads: Prototype code for AI05-0144.\n+\n+2010-06-23  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj.ads, prj-nmsc.adb (Error_Or_Warning): New subprogram.\n+\n 2010-06-23  Robert Dewar  <dewar@adacore.com>\n \n \t* g-pehage.adb, exp_ch13.adb: Minor reformatting."}, {"sha": "807527230af499346f671c044781a79f16e05d87", "filename": "gcc/ada/atree.adb", "status": "modified", "additions": 22, "deletions": 11, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e771c08509c5bc959cd8a59aaa15965cfc04a48c/gcc%2Fada%2Fatree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e771c08509c5bc959cd8a59aaa15965cfc04a48c/gcc%2Fada%2Fatree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.adb?ref=e771c08509c5bc959cd8a59aaa15965cfc04a48c", "patch": "@@ -38,14 +38,15 @@ pragma Style_Checks (All_Checks);\n \n with Debug;   use Debug;\n with Nlists;  use Nlists;\n-with Opt;     use Opt;\n with Output;  use Output;\n with Sinput;  use Sinput;\n-with SCIL_LL; use SCIL_LL;\n with Tree_IO; use Tree_IO;\n \n package body Atree is\n \n+   Reporting_Proc : Report_Proc := null;\n+   --  Record argument to last call to Set_Reporting_Proc\n+\n    ---------------\n    -- Debugging --\n    ---------------\n@@ -534,10 +535,10 @@ package body Atree is\n       Orig_Nodes.Set_Last (Nodes.Last);\n       Allocate_List_Tables (Nodes.Last);\n \n-      --  Update the SCIL_Node field (if available)\n+      --  Invoke the reporting procedure (if available)\n \n-      if Generate_SCIL then\n-         Set_SCIL_Node (New_Id, Get_SCIL_Node (Src));\n+      if Reporting_Proc /= null then\n+         Reporting_Proc.all (Target => New_Id, Source => Src);\n       end if;\n \n       return New_Id;\n@@ -925,6 +926,16 @@ package body Atree is\n       return Ekind_In (Ekind (E), V1, V2, V3, V4, V5, V6);\n    end Ekind_In;\n \n+   ------------------------\n+   -- Set_Reporting_Proc --\n+   ------------------------\n+\n+   procedure Set_Reporting_Proc (P : Report_Proc) is\n+   begin\n+      pragma Assert (Reporting_Proc = null);\n+      Reporting_Proc := P;\n+   end Set_Reporting_Proc;\n+\n    ------------------\n    -- Error_Posted --\n    ------------------\n@@ -1580,10 +1591,10 @@ package body Atree is\n \n       Orig_Nodes.Table (Old_Node) := Old_Node;\n \n-      --  Update the SCIL_Node field (if available)\n+      --  Invoke the reporting procedure (if available)\n \n-      if Generate_SCIL then\n-         Set_SCIL_Node (Old_Node, Get_SCIL_Node (New_Node));\n+      if Reporting_Proc /= null then\n+         Reporting_Proc.all (Target => Old_Node, Source => New_Node);\n       end if;\n    end Replace;\n \n@@ -1644,10 +1655,10 @@ package body Atree is\n \n       Fix_Parents (Ref_Node => New_Node, Fix_Node => Old_Node);\n \n-      --  Update the SCIL_Node field (if available)\n+      --  Invoke the reporting procedure (if available)\n \n-      if Generate_SCIL then\n-         Set_SCIL_Node (Old_Node, Get_SCIL_Node (New_Node));\n+      if Reporting_Proc /= null then\n+         Reporting_Proc.all (Target => Old_Node, Source => New_Node);\n       end if;\n    end Rewrite;\n "}, {"sha": "11787bc116ebd2577daa7a9af31510fc3bffb947", "filename": "gcc/ada/atree.ads", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e771c08509c5bc959cd8a59aaa15965cfc04a48c/gcc%2Fada%2Fatree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e771c08509c5bc959cd8a59aaa15965cfc04a48c/gcc%2Fada%2Fatree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.ads?ref=e771c08509c5bc959cd8a59aaa15965cfc04a48c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -461,6 +461,12 @@ package Atree is\n    --  function is used only by Sinfo.CN to change nodes into their\n    --  corresponding entities.\n \n+   type Report_Proc is access procedure (Target : Node_Id; Source : Node_Id);\n+\n+   procedure Set_Reporting_Proc (P : Report_Proc);\n+   --  Register a procedure that is invoked when a node is allocated, replaced\n+   --  or rewritten.\n+\n    type Traverse_Result is (Abandon, OK, OK_Orig, Skip);\n    --  This is the type of the result returned by the Process function passed\n    --  to Traverse_Func and Traverse_Proc. See below for details."}, {"sha": "b502b2aebc9145f583cf009de85605b3bad8557b", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 47, "deletions": 56, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e771c08509c5bc959cd8a59aaa15965cfc04a48c/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e771c08509c5bc959cd8a59aaa15965cfc04a48c/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=e771c08509c5bc959cd8a59aaa15965cfc04a48c", "patch": "@@ -467,6 +467,32 @@ package body Prj.Nmsc is\n    --  Debug print a value for a specific property. Does nothing when not in\n    --  debug mode\n \n+   procedure Error_Or_Warning\n+     (Flags    : Processing_Flags;\n+      Kind     : Error_Warning;\n+      Msg      : String;\n+      Location : Source_Ptr;\n+      Project  : Project_Id);\n+   --  Emits either an error or warning message (or nothing), depending on Kind\n+\n+   ----------------------\n+   -- Error_Or_Warning --\n+   ----------------------\n+\n+   procedure Error_Or_Warning\n+     (Flags    : Processing_Flags;\n+      Kind     : Error_Warning;\n+      Msg      : String;\n+      Location : Source_Ptr;\n+      Project  : Project_Id) is\n+   begin\n+      case Kind is\n+         when Error   => Error_Msg (Flags, Msg, Location, Project);\n+         when Warning => Error_Msg (Flags, \"?\" & Msg, Location, Project);\n+         when Silent  => null;\n+      end case;\n+   end Error_Or_Warning;\n+\n    ------------------------------\n    -- Replace_Into_Name_Buffer --\n    ------------------------------\n@@ -5170,8 +5196,8 @@ package body Prj.Nmsc is\n             begin\n                if Root_Dir'Length = 0 then\n                   Err_Vars.Error_Msg_File_1 := Base_Dir;\n-                  Error_Msg\n-                    (Data.Flags,\n+                  Error_Or_Warning\n+                    (Data.Flags, Data.Flags.Missing_Source_Files,\n                      \"{ is not a valid directory.\", Location, Project);\n \n                else\n@@ -5210,8 +5236,8 @@ package body Prj.Nmsc is\n \n                if not Dir_Exists then\n                   Err_Vars.Error_Msg_File_1 := From;\n-                  Error_Msg\n-                    (Data.Flags,\n+                  Error_Or_Warning\n+                    (Data.Flags, Data.Flags.Missing_Source_Files,\n                      \"{ is not a valid directory\", Location, Project);\n \n                else\n@@ -5291,21 +5317,9 @@ package body Prj.Nmsc is\n \n                Err_Vars.Error_Msg_File_1 :=\n                  File_Name_Type (Object_Dir.Value);\n-\n-               case Data.Flags.Require_Obj_Dirs is\n-                  when Error =>\n-                     Error_Msg\n-                       (Data.Flags,\n-                        \"object directory { not found\",\n-                        Project.Location, Project);\n-                  when Warning =>\n-                     Error_Msg\n-                       (Data.Flags,\n-                        \"?object directory { not found\",\n-                        Project.Location, Project);\n-                  when Silent =>\n-                     null;\n-               end case;\n+               Error_Or_Warning\n+                 (Data.Flags, Data.Flags.Require_Obj_Dirs,\n+                  \"object directory { not found\", Project.Location, Project);\n             end if;\n          end if;\n \n@@ -6493,8 +6507,8 @@ package body Prj.Nmsc is\n                   if not Found then\n                      Error_Msg_Name_1 := Name_Id (Source.Display_File);\n                      Error_Msg_Name_2 := Name_Id (Source.Unit.Name);\n-                     Error_Msg\n-                       (Data.Flags,\n+                     Error_Or_Warning\n+                       (Data.Flags, Data.Flags.Missing_Source_Files,\n                         \"source file %% for unit %% not found\",\n                         No_Location, Project.Project);\n \n@@ -6536,41 +6550,18 @@ package body Prj.Nmsc is\n             while NL /= No_Name_Location loop\n                if not NL.Found then\n                   Err_Vars.Error_Msg_File_1 := NL.Name;\n-\n-                  case Data.Flags.Missing_Source_Files is\n-                     when Error =>\n-                        if First_Error then\n-                           Error_Msg\n-                             (Data.Flags,\n-                              \"source file { not found\",\n-                              NL.Location, Project.Project);\n-                           First_Error := False;\n-\n-                        else\n-                           Error_Msg\n-                             (Data.Flags,\n-                              \"\\source file { not found\",\n-                              NL.Location, Project.Project);\n-                        end if;\n-\n-                     when Warning =>\n-                        if First_Error then\n-                           Error_Msg\n-                             (Data.Flags,\n-                              \"?source file { not found\",\n-                              NL.Location, Project.Project);\n-                           First_Error := False;\n-\n-                        else\n-                           Error_Msg\n-                             (Data.Flags,\n-                              \"?\\source file { not found\",\n-                              NL.Location, Project.Project);\n-                        end if;\n-\n-                     when Silent =>\n-                        null;\n-                  end case;\n+                  if First_Error then\n+                     Error_Or_Warning\n+                       (Data.Flags, Data.Flags.Missing_Source_Files,\n+                        \"source file { not found\",\n+                        NL.Location, Project.Project);\n+                     First_Error := False;\n+                  else\n+                     Error_Or_Warning\n+                       (Data.Flags, Data.Flags.Missing_Source_Files,\n+                        \"\\source file { not found\",\n+                        NL.Location, Project.Project);\n+                  end if;\n                end if;\n \n                NL := Source_Names_Htable.Get_Next (Project.Source_Names);"}, {"sha": "75bb078b0631c1d9d8517e218fbca9a2dc73ec95", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e771c08509c5bc959cd8a59aaa15965cfc04a48c/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e771c08509c5bc959cd8a59aaa15965cfc04a48c/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=e771c08509c5bc959cd8a59aaa15965cfc04a48c", "patch": "@@ -1496,7 +1496,8 @@ package Prj is\n    --\n    --  Missing_Source_Files indicates whether it is an error or a warning that\n    --  a source file mentioned in the Source_Files attributes is not actually\n-   --  found in the source directories\n+   --  found in the source directories. This also impacts errors for missing\n+   --  source directories.\n \n    Gprbuild_Flags : constant Processing_Flags;\n    Gprclean_Flags : constant Processing_Flags;"}, {"sha": "4591d8ef28772ee489b33641d6b561fa4e52eb81", "filename": "gcc/ada/scil_ll.adb", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e771c08509c5bc959cd8a59aaa15965cfc04a48c/gcc%2Fada%2Fscil_ll.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e771c08509c5bc959cd8a59aaa15965cfc04a48c/gcc%2Fada%2Fscil_ll.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscil_ll.adb?ref=e771c08509c5bc959cd8a59aaa15965cfc04a48c", "patch": "@@ -37,6 +37,10 @@ with Table;\n \n package body SCIL_LL is\n \n+   procedure Copy_SCIL_Node (Target : Node_Id; Source : Node_Id);\n+   --  Copy the SCIL field from Source to Target (it is used as the argument\n+   --  for a call to Set_Reporting_Proc in package atree).\n+\n    function SCIL_Nodes_Table_Size return Pos;\n    --  Used to initialize the table of SCIL nodes because we do not want\n    --  to consume memory for this table if it is not required.\n@@ -64,13 +68,23 @@ package body SCIL_LL is\n    --  This table records the value of attribute SCIL_Node of all the\n    --  tree nodes.\n \n+   --------------------\n+   -- Copy_SCIL_Node --\n+   --------------------\n+\n+   procedure Copy_SCIL_Node (Target : Node_Id; Source : Node_Id) is\n+   begin\n+      Set_SCIL_Node (Target, Get_SCIL_Node (Source));\n+   end Copy_SCIL_Node;\n+\n    ----------------\n    -- Initialize --\n    ----------------\n \n    procedure Initialize is\n    begin\n       SCIL_Nodes.Init;\n+      Set_Reporting_Proc (Copy_SCIL_Node'Access);\n    end Initialize;\n \n    -------------------"}, {"sha": "757276b0009a098d780c37a64f84967023be6b50", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e771c08509c5bc959cd8a59aaa15965cfc04a48c/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e771c08509c5bc959cd8a59aaa15965cfc04a48c/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=e771c08509c5bc959cd8a59aaa15965cfc04a48c", "patch": "@@ -3237,7 +3237,8 @@ package body Sem_Ch12 is\n                   or else Enclosing_Body_Present\n                   or else Present (Corresponding_Body (Gen_Decl)))\n                 and then (Is_In_Main_Unit (N)\n-                           or else Might_Inline_Subp)\n+                           or else Might_Inline_Subp\n+                           or else CodePeer_Mode)\n                 and then not Is_Actual_Pack\n                 and then not Inline_Now\n                 and then (Operating_Mode = Generate_Code\n@@ -10421,7 +10422,7 @@ package body Sem_Ch12 is\n          Set_Implicit_With (Withn);\n          Set_Library_Unit (Withn, Cunit (CU));\n          Set_Withed_Body (Withn, Cunit (CU));\n-         Append (Withn, Context_Items (Cunit (Inst_CU)));\n+         Prepend (Withn, Context_Items (Cunit (Inst_CU)));\n       end Add_Implicit_With;\n \n    begin\n@@ -10433,9 +10434,15 @@ package body Sem_Ch12 is\n          return;\n       end if;\n \n-      --  If G is itself declared within an instance, indicate that the generic\n-      --  body of that instance is also needed by C. This must be done\n-      --  recursively.\n+      --  Nothing to do if G is local.\n+\n+      if Inst_CU = Gen_CU then\n+         return;\n+      end if;\n+\n+      --  If G is itself  declared within an instance, indicate that the\n+      --  generic body of that instance is also needed by C. This must be\n+      --  done recursively.\n \n       Scop := Scope (Defining_Entity (Gen_Decl));\n "}, {"sha": "18b585f04aa29f316ad99607ddbe7708a969c37e", "filename": "gcc/ada/sem_ch3.ads", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e771c08509c5bc959cd8a59aaa15965cfc04a48c/gcc%2Fada%2Fsem_ch3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e771c08509c5bc959cd8a59aaa15965cfc04a48c/gcc%2Fada%2Fsem_ch3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.ads?ref=e771c08509c5bc959cd8a59aaa15965cfc04a48c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -84,13 +84,11 @@ package Sem_Ch3 is\n    procedure Access_Type_Declaration (T : Entity_Id; Def : Node_Id);\n    --  Process an access type declaration\n \n-   procedure Build_Itype_Reference\n-     (Ityp : Entity_Id;\n-      Nod  : Node_Id);\n+   procedure Build_Itype_Reference (Ityp : Entity_Id; Nod : Node_Id);\n    --  Create a reference to an internal type, for use by Gigi. The back-end\n-   --  elaborates itypes on demand, i.e. when their first use is seen. This\n-   --  can lead to scope anomalies if the first use is within a scope that is\n-   --  nested within the scope that contains  the point of definition of the\n+   --  elaborates itypes on demand, i.e. when their first use is seen. This can\n+   --  lead to scope anomalies if the first use is within a scope that is\n+   --  nested within the scope that contains the point of definition of the\n    --  itype. The Itype_Reference node forces the elaboration of the itype\n    --  in the proper scope. The node is inserted after Nod, which is the\n    --  enclosing declaration that generated Ityp."}, {"sha": "cbc099ee059ec08c124edb403a2283d242138bb1", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 87, "deletions": 1, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e771c08509c5bc959cd8a59aaa15965cfc04a48c/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e771c08509c5bc959cd8a59aaa15965cfc04a48c/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=e771c08509c5bc959cd8a59aaa15965cfc04a48c", "patch": "@@ -56,6 +56,7 @@ with Sinput;   use Sinput;\n with Stand;    use Stand;\n with Style;\n with Stringt;  use Stringt;\n+with Table;\n with Targparm; use Targparm;\n with Tbuild;   use Tbuild;\n with Ttypes;   use Ttypes;\n@@ -93,6 +94,88 @@ package body Sem_Util is\n    subtype NCT_Header_Num is Int range 0 .. 511;\n    --  Defines range of headers in hash tables (512 headers)\n \n+   -----------------------------------\n+   -- Order dependence : AI05-0144  --\n+   -----------------------------------\n+\n+   --  Each actual in a call is entered into the table below. A flag\n+   --  indicates whether the corresponding formal is out or in out.\n+   --  Each top-level call (procedure call, condition, assignment)\n+   --  examines all the actuals for a possible order dependence.\n+   --  The table is reset after each such check.\n+\n+   type Actual_Name is record\n+      Act  : Node_Id;\n+      Is_Writable : Boolean;\n+   end record;\n+\n+   package Actuals_In_Call is new Table.Table (\n+      Table_Component_Type => Actual_Name,\n+      Table_Index_Type     => Int,\n+      Table_Low_Bound      => 0,\n+      Table_Initial        => 10,\n+      Table_Increment      => 10,\n+      Table_Name           => \"Actuals\");\n+\n+   procedure Save_Actual (N : Node_Id;  Writable : Boolean := False) is\n+   begin\n+      if Is_Entity_Name (N)\n+        or else Nkind_In (N,\n+                          N_Indexed_Component, N_Selected_Component, N_Slice)\n+        or else (Nkind (N) = N_Attribute_Reference\n+          and then Attribute_Name (N) = Name_Access)\n+\n+      then\n+         --  We are only interested in in out parameters of inner calls.\n+\n+         if not Writable\n+           or else Nkind (Parent (N)) = N_Function_Call\n+           or else Nkind (Parent (N)) in N_Op\n+         then\n+            Actuals_In_Call.Increment_Last;\n+            Actuals_In_Call.Table (Actuals_In_Call.Last) := (N, Writable);\n+         end if;\n+      end if;\n+   end Save_Actual;\n+\n+   procedure Check_Order_Dependence is\n+      Act1, Act2 : Node_Id;\n+   begin\n+      for J in 0 .. Actuals_In_Call.Last loop\n+\n+         if Actuals_In_Call.Table (J).Is_Writable then\n+            Act1 := Actuals_In_Call.Table (J).Act;\n+\n+            if Nkind (Act1) = N_Attribute_Reference then\n+               Act1 := Prefix (Act1);\n+            end if;\n+\n+            for K in 0 .. Actuals_In_Call.Last loop\n+               if K /= J then\n+                  Act2 := Actuals_In_Call.Table (K).Act;\n+                  if Nkind (Act2) = N_Attribute_Reference then\n+                     Act2 := Prefix (Act2);\n+                  end if;\n+\n+                  if Actuals_In_Call.Table (K).Is_Writable\n+                    and then K < J\n+                  then\n+                     --  already checked\n+                     null;\n+\n+                  elsif Denotes_Same_Object (Act1, Act2)\n+                    and then False\n+                  then\n+                     Error_Msg_N (\"?,mighty suspicious!!!\", Act1);\n+                  end if;\n+               end if;\n+            end loop;\n+         end if;\n+      end loop;\n+\n+      Actuals_In_Call.Set_Last (0);\n+   end Check_Order_Dependence;\n+\n    -----------------------\n    -- Local Subprograms --\n    -----------------------\n@@ -2251,7 +2334,9 @@ package body Sem_Util is\n \n    begin\n       if Is_Entity_Name (A1) then\n-         if Nkind_In (A2, N_Selected_Component, N_Indexed_Component) then\n+         if Nkind_In (A2, N_Selected_Component, N_Indexed_Component)\n+           and then not Is_Access_Type (Etype (A1))\n+         then\n             return Denotes_Same_Object (A1, Prefix (A2))\n               or else Denotes_Same_Prefix (A1, Prefix (A2));\n          else\n@@ -7862,6 +7947,7 @@ package body Sem_Util is\n          if Nkind (N) = N_Allocator then\n             if Is_Dynamic then\n                Set_Is_Dynamic_Coextension (N);\n+\n             else\n                Set_Is_Static_Coextension (N);\n             end if;"}, {"sha": "daa1c9dd2adfddf2a387412c2b2d37ebd4337314", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e771c08509c5bc959cd8a59aaa15965cfc04a48c/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e771c08509c5bc959cd8a59aaa15965cfc04a48c/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=e771c08509c5bc959cd8a59aaa15965cfc04a48c", "patch": "@@ -141,6 +141,11 @@ package Sem_Util is\n    --  is accessed inside a nested procedure, and set Has_Up_Level_Access flag\n    --  accordingly. This is currently only enabled for VM_Target /= No_VM.\n \n+   procedure Check_Order_Dependence;\n+   --  Examine the actuals in a top-level call to determine whether aliasing\n+   --  between two actuals, one of which is writable, can make the call\n+   --  order-dependent.\n+\n    procedure Check_Potentially_Blocking_Operation (N : Node_Id);\n    --  N is one of the statement forms that is a potentially blocking\n    --  operation. If it appears within a protected action, emit warning.\n@@ -1168,6 +1173,12 @@ package Sem_Util is\n    --  are only partially ordered, so Scope_Within_Or_Same (A,B) and\n    --  Scope_Within_Or_Same (B,A) can both be False for a given pair A,B.\n \n+   procedure Save_Actual (N : Node_Id;  Writable : Boolean := False);\n+   --  Enter an actual in a call in a table global, for subsequent check\n+   --  of possible order dependence in the presence of in out parameters\n+   --  for functions in Ada 2012 (or access parameters in older versions\n+   --  of the language).\n+\n    function Scope_Within (Scope1, Scope2 : Entity_Id) return Boolean;\n    --  Like Scope_Within_Or_Same, except that this function returns\n    --  False in the case where Scope1 and Scope2 are the same scope."}]}