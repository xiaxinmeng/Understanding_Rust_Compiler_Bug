{"sha": "253a01b4a68c55fa013bf94d73c60211b2e436a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjUzYTAxYjRhNjhjNTVmYTAxM2JmOTRkNzNjNjAyMTFiMmU0MzZhNw==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-10-08T05:18:17Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-10-08T05:18:17Z"}, "message": "Fix thinko in last change.\n\nFrom-SVN: r15874", "tree": {"sha": "64634e6d61bf9e5a2df481983c714ca63e164419", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64634e6d61bf9e5a2df481983c714ca63e164419"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/253a01b4a68c55fa013bf94d73c60211b2e436a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/253a01b4a68c55fa013bf94d73c60211b2e436a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/253a01b4a68c55fa013bf94d73c60211b2e436a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/253a01b4a68c55fa013bf94d73c60211b2e436a7/comments", "author": null, "committer": null, "parents": [{"sha": "a6f025879ba98efb5a0fc222e6d279b26dcdf216", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6f025879ba98efb5a0fc222e6d279b26dcdf216", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6f025879ba98efb5a0fc222e6d279b26dcdf216"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "71302c354fffc71ddf0693d973b3f25b185f13db", "filename": "gcc/integrate.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/253a01b4a68c55fa013bf94d73c60211b2e436a7/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/253a01b4a68c55fa013bf94d73c60211b2e436a7/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=253a01b4a68c55fa013bf94d73c60211b2e436a7", "patch": "@@ -1244,6 +1244,10 @@ expand_inline_function (fndecl, parms, target, ignore, type,\n   rtvec arg_vector = ORIGINAL_ARG_VECTOR (header);\n   rtx static_chain_value = 0;\n \n+  /* The pointer used to track the true location of the memory used\n+     for MAP->LABEL_MAP.  */\n+  rtx *real_label_map = 0;\n+\n   /* Allow for equivalences of the pseudos we make for virtual fp and ap.  */\n   max_regno = MAX_REGNUM (header) + 3;\n   if (max_regno < FIRST_PSEUDO_REGISTER)\n@@ -1383,8 +1387,9 @@ expand_inline_function (fndecl, parms, target, ignore, type,\n   /* We used to use alloca here, but the size of what it would try to\n      allocate would occasionally cause it to exceed the stack limit and\n      cause unpredictable core dumps.  */\n-  label_map = (rtx *) xmalloc ((max_labelno) * sizeof (rtx));\n-  map->label_map = label_map;\n+  real_label_map\n+    = (rtx *) xmalloc ((max_labelno) * sizeof (rtx));\n+  map->label_map = real_label_map;\n \n   map->insn_map = (rtx *) alloca (INSN_UID (header) * sizeof (rtx));\n   bzero ((char *) map->insn_map, INSN_UID (header) * sizeof (rtx));"}]}