{"sha": "24dcc9c5c1cdb83c1bd95e19708bd56aebf69022", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjRkY2M5YzVjMWNkYjgzYzFiZDk1ZTE5NzA4YmQ1NmFlYmY2OTAyMg==", "commit": {"author": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1996-07-17T14:26:56Z"}, "committer": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1996-07-17T14:26:56Z"}, "message": "(expand_mult_highpart): Revert last change.\n\nFrom-SVN: r12512", "tree": {"sha": "80e83bca521f5805e422524e618763c3e820c864", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80e83bca521f5805e422524e618763c3e820c864"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24dcc9c5c1cdb83c1bd95e19708bd56aebf69022", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24dcc9c5c1cdb83c1bd95e19708bd56aebf69022", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24dcc9c5c1cdb83c1bd95e19708bd56aebf69022", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24dcc9c5c1cdb83c1bd95e19708bd56aebf69022/comments", "author": null, "committer": null, "parents": [{"sha": "ae40770430dd80f662299525dfe9865c9fab65fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae40770430dd80f662299525dfe9865c9fab65fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae40770430dd80f662299525dfe9865c9fab65fe"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "2f6ff93101f9bf495f430ce7475437d4a2ad3a38", "filename": "gcc/expmed.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24dcc9c5c1cdb83c1bd95e19708bd56aebf69022/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24dcc9c5c1cdb83c1bd95e19708bd56aebf69022/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=24dcc9c5c1cdb83c1bd95e19708bd56aebf69022", "patch": "@@ -2596,7 +2596,7 @@ expand_mult_highpart (mode, op0, cnst1, target, unsignedp, max_cost)\n     {\n       mul_highpart_optab = unsignedp ? umul_highpart_optab : smul_highpart_optab;\n       target = expand_binop (mode, mul_highpart_optab,\n-\t\t\t     op0, op1, target, unsignedp, OPTAB_DIRECT);\n+\t\t\t     op0, wide_op1, target, unsignedp, OPTAB_DIRECT);\n       if (target)\n \treturn target;\n     }\n@@ -2607,7 +2607,7 @@ expand_mult_highpart (mode, op0, cnst1, target, unsignedp, max_cost)\n     {\n       mul_highpart_optab = unsignedp ? smul_highpart_optab : umul_highpart_optab;\n       target = expand_binop (mode, mul_highpart_optab,\n-\t\t\t     op0, op1, target, unsignedp, OPTAB_DIRECT);\n+\t\t\t     op0, wide_op1, target, unsignedp, OPTAB_DIRECT);\n       if (target)\n \t/* We used the wrong signedness.  Adjust the result.  */\n \treturn expand_mult_highpart_adjust (mode, target, op0,"}]}