{"sha": "1582c67762711468720324ddbfd6c305b7eee6b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU4MmM2Nzc2MjcxMTQ2ODcyMDMyNGRkYmZkNmMzMDViN2VlZTZiMQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2013-01-04T15:30:24Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-01-04T15:30:24Z"}, "message": "PR c++/54526 (again)\n\n/libcpp\n2013-01-04  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/54526 (again)\n\t* lex.c (_cpp_lex_direct): In C++11 mode, implement 2.5 p3, bullet 2.\n\n/gcc/cp\n2013-01-04  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/54526 (again)\n\t* parser.c (cp_parser_template_id): Revert core of previous change\n\t(keep adjusted inform message).\n\n/gcc/testsuite\n2013-01-04  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/54526 (again)\n\t* g++.dg/cpp0x/parse2.C: Extend.\n\t* g++.old-deja/g++.other/crash28.C: Adjust.\n\nFrom-SVN: r194909", "tree": {"sha": "d61301d5651cc179c551709fc872680586529a30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d61301d5651cc179c551709fc872680586529a30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1582c67762711468720324ddbfd6c305b7eee6b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1582c67762711468720324ddbfd6c305b7eee6b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1582c67762711468720324ddbfd6c305b7eee6b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1582c67762711468720324ddbfd6c305b7eee6b1/comments", "author": null, "committer": null, "parents": [{"sha": "361618ec53c981befde38b89365712c7ebe65abb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/361618ec53c981befde38b89365712c7ebe65abb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/361618ec53c981befde38b89365712c7ebe65abb"}], "stats": {"total": 47, "additions": 38, "deletions": 9}, "files": [{"sha": "0aef08d71265f5e3976419ff3d12a14742e8325c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1582c67762711468720324ddbfd6c305b7eee6b1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1582c67762711468720324ddbfd6c305b7eee6b1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1582c67762711468720324ddbfd6c305b7eee6b1", "patch": "@@ -1,3 +1,9 @@\n+2013-01-04  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/54526 (again)\n+\t* parser.c (cp_parser_template_id): Revert core of previous change\n+\t(keep adjusted inform message).\n+\n 2013-01-03  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/55419"}, {"sha": "872d419867273faaa696c3fb63cc45d53d362499", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1582c67762711468720324ddbfd6c305b7eee6b1/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1582c67762711468720324ddbfd6c305b7eee6b1/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=1582c67762711468720324ddbfd6c305b7eee6b1", "patch": "@@ -1,6 +1,6 @@\n /* C++ Parser.\n    Copyright (C) 2000, 2001, 2002, 2003, 2004,\n-   2005, 2007, 2008, 2009, 2010, 2011, 2012  Free Software Foundation, Inc.\n+   2005, 2007-2013  Free Software Foundation, Inc.\n    Written by Mark Mitchell <mark@codesourcery.com>.\n \n    This file is part of GCC.\n@@ -12655,11 +12655,9 @@ cp_parser_template_id (cp_parser *parser,\n \t  return error_mark_node;\n \t}\n       /* Otherwise, emit an error about the invalid digraph, but continue\n-\t parsing because we got our argument list.  In C++11 do not emit\n-\t any error, per 2.5/3.  */\n-      if (cxx_dialect < cxx0x\n-\t  && permerror (next_token->location,\n-\t\t\t\"%<<::%> cannot begin a template-argument list\"))\n+\t parsing because we got our argument list.  */\n+      if (permerror (next_token->location,\n+\t\t     \"%<<::%> cannot begin a template-argument list\"))\n \t{\n \t  static bool hint = false;\n \t  inform (next_token->location,"}, {"sha": "ceba87bd6ac1eb574097421666613a9b212ade36", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1582c67762711468720324ddbfd6c305b7eee6b1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1582c67762711468720324ddbfd6c305b7eee6b1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1582c67762711468720324ddbfd6c305b7eee6b1", "patch": "@@ -1,3 +1,9 @@\n+2013-01-04  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/54526 (again)\n+\t* g++.dg/cpp0x/parse2.C: Extend.\n+\t* g++.old-deja/g++.other/crash28.C: Adjust.\n+\n 2013-01-04  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/55862"}, {"sha": "77ea14a92a8c9f1c7fc75ca9ca4e3e8afdc68c63", "filename": "gcc/testsuite/g++.dg/cpp0x/parse2.C", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1582c67762711468720324ddbfd6c305b7eee6b1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fparse2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1582c67762711468720324ddbfd6c305b7eee6b1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fparse2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fparse2.C?ref=1582c67762711468720324ddbfd6c305b7eee6b1", "patch": "@@ -10,3 +10,6 @@ int main()\n {\n   X<::A> x;\n }\n+\n+int a;\n+bool b = 0<::a;"}, {"sha": "c0f4bfa66e6c6de94fe03e49facb1c80aa2bd00c", "filename": "gcc/testsuite/g++.old-deja/g++.other/crash28.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1582c67762711468720324ddbfd6c305b7eee6b1/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash28.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1582c67762711468720324ddbfd6c305b7eee6b1/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash28.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash28.C?ref=1582c67762711468720324ddbfd6c305b7eee6b1", "patch": "@@ -31,5 +31,5 @@ public:\n };\n void foo::x() throw(bar)\n {\n-  if (!b) throw bar (static_cast<::N::X*>(this));\t// { dg-error \"lambda expressions|expected\" } parse error\n+  if (!b) throw bar (static_cast<::N::X*>(this));\t// { dg-error \"lambda expressions|expected|invalid\" } parse error\n }"}, {"sha": "840bad343257389953db4b6b36993e8af39f9ee9", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1582c67762711468720324ddbfd6c305b7eee6b1/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1582c67762711468720324ddbfd6c305b7eee6b1/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=1582c67762711468720324ddbfd6c305b7eee6b1", "patch": "@@ -1,3 +1,8 @@\n+2013-01-04  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/54526 (again)\n+\t* lex.c (_cpp_lex_direct): In C++11 mode, implement 2.5 p3, bullet 2.\n+\n 2013-01-03  Marc Glisse  <marc.glisse@inria.fr>\n \n \tPR bootstrap/50177"}, {"sha": "866bb1156f1dbfacb7fb7c649b2f3b22ac37c16a", "filename": "libcpp/lex.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1582c67762711468720324ddbfd6c305b7eee6b1/libcpp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1582c67762711468720324ddbfd6c305b7eee6b1/libcpp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Flex.c?ref=1582c67762711468720324ddbfd6c305b7eee6b1", "patch": "@@ -1,6 +1,6 @@\n /* CPP Library - lexical analysis.\n-   Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010,\n-   2011, 2012 Free Software Foundation, Inc.\n+   Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2007-2013\n+   Free Software Foundation, Inc.\n    Contributed by Per Bothner, 1994-95.\n    Based on CCCP program by Paul Rubin, June 1986\n    Adapted to ANSI C, Richard Stallman, Jan 1987\n@@ -2290,6 +2290,17 @@ _cpp_lex_direct (cpp_reader *pfile)\n \t{\n \t  if (*buffer->cur == ':')\n \t    {\n+\t      /* C++11 [2.5/3 lex.pptoken], \"Otherwise, if the next\n+\t\t three characters are <:: and the subsequent character\n+\t\t is neither : nor >, the < is treated as a preprocessor\n+\t\t token by itself\".  */\n+\t      if (CPP_OPTION (pfile, cplusplus)\n+\t\t  && (CPP_OPTION (pfile, lang) == CLK_CXX11\n+\t\t      || CPP_OPTION (pfile, lang) == CLK_GNUCXX11)\n+\t\t  && buffer->cur[1] == ':'\n+\t\t  && buffer->cur[2] != ':' && buffer->cur[2] != '>')\n+\t\tbreak;\n+\n \t      buffer->cur++;\n \t      result->flags |= DIGRAPH;\n \t      result->type = CPP_OPEN_SQUARE;"}]}