{"sha": "3adbde603a190297ed93f9e0bd70ddb5538925ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FkYmRlNjAzYTE5MDI5N2VkOTNmOWUwYmQ3MGRkYjU1Mzg5MjVjZQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-03-05T23:28:32Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-03-05T23:28:32Z"}, "message": "(find_barrier): Set si_limit to 1018 instead of 1020, and\nhi_limit to 510 instead of 512.\n\nFrom-SVN: r11464", "tree": {"sha": "8b756656d534310f2b463c88f7e267c9eb7972b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b756656d534310f2b463c88f7e267c9eb7972b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3adbde603a190297ed93f9e0bd70ddb5538925ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3adbde603a190297ed93f9e0bd70ddb5538925ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3adbde603a190297ed93f9e0bd70ddb5538925ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3adbde603a190297ed93f9e0bd70ddb5538925ce/comments", "author": null, "committer": null, "parents": [{"sha": "04e1602e072dcc0b7a27c82d80f6b36a3c9e7d4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04e1602e072dcc0b7a27c82d80f6b36a3c9e7d4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04e1602e072dcc0b7a27c82d80f6b36a3c9e7d4c"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "144a5b09c403a92d7ad378e874393043a4891ba4", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3adbde603a190297ed93f9e0bd70ddb5538925ce/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3adbde603a190297ed93f9e0bd70ddb5538925ce/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=3adbde603a190297ed93f9e0bd70ddb5538925ce", "patch": "@@ -1257,11 +1257,15 @@ find_barrier (from)\n \n   /* For HImode: range is 510, add 4 because pc counts from address of\n      second instruction after this one, subtract 2 for the jump instruction\n-     that we may need to emit before the table.  This gives 512.\n+     that we may need to emit before the table, subtract 2 for the instruction\n+     that fills the jump delay slot (in very rare cases, reorg will take an\n+     instruction from after the constant pool or will leave the delay slot\n+     empty).  This gives 510.\n      For SImode: range is 1020, add 4 because pc counts from address of\n      second instruction after this one, subtract 2 in case pc is 2 byte\n      aligned, subtract 2 for the jump instruction that we may need to emit\n-     before the table.  This gives 1020.  */\n+     before the table, subtract 2 for the instruction that fills the jump\n+     delay slot.  This gives 1018.  */\n \n   /* If not optimizing, then it is possible that the jump instruction we add\n      won't be shortened, and thus will have a length of 14 instead of 2.\n@@ -1270,8 +1274,8 @@ find_barrier (from)\n \n   if (optimize)\n     {\n-      si_limit = 1020;\n-      hi_limit = 512;\n+      si_limit = 1018;\n+      hi_limit = 510;\n     }\n   else\n     {"}]}