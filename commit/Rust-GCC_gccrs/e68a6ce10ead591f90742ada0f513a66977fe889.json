{"sha": "e68a6ce10ead591f90742ada0f513a66977fe889", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTY4YTZjZTEwZWFkNTkxZjkwNzQyYWRhMGY1MTNhNjY5NzdmZTg4OQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2000-12-13T21:24:03Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2000-12-13T21:24:03Z"}, "message": "function.c (assign_parms): Optimize incoming PARALLELs into REGs if possible.\n\n* function.c (assign_parms): Optimize incoming PARALLELs into\nREGs if possible.\n\nFrom-SVN: r38233", "tree": {"sha": "4a996de2ddd3f5c1f463cf95ac72c5df06993459", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a996de2ddd3f5c1f463cf95ac72c5df06993459"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e68a6ce10ead591f90742ada0f513a66977fe889", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e68a6ce10ead591f90742ada0f513a66977fe889", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e68a6ce10ead591f90742ada0f513a66977fe889", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e68a6ce10ead591f90742ada0f513a66977fe889/comments", "author": null, "committer": null, "parents": [{"sha": "7c757aa48684aba8272a0ea3fe911fdb2445dd91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c757aa48684aba8272a0ea3fe911fdb2445dd91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c757aa48684aba8272a0ea3fe911fdb2445dd91"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "b3051b6df24d861933b37a948aa93d87f75c8925", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e68a6ce10ead591f90742ada0f513a66977fe889/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e68a6ce10ead591f90742ada0f513a66977fe889/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e68a6ce10ead591f90742ada0f513a66977fe889", "patch": "@@ -1,3 +1,8 @@\n+2000-12-13  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* function.c (assign_parms): Optimize incoming PARALLELs into\n+\tREGs if possible.\n+\n 2000-12-13  Bruce Korb  <bkorb@gnu.org>\n \n \t* fixinc/Makefile.in(*): substantial rewrite to accommodate systems"}, {"sha": "07992162067afb7cb6d47ffab73f5a37f9e93de9", "filename": "gcc/function.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e68a6ce10ead591f90742ada0f513a66977fe889/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e68a6ce10ead591f90742ada0f513a66977fe889/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=e68a6ce10ead591f90742ada0f513a66977fe889", "patch": "@@ -4549,6 +4549,26 @@ assign_parms (fndecl)\n \t  && nominal_mode != BLKmode && nominal_mode != passed_mode)\n \tstack_parm = 0;\n \n+      /* When an argument is passed in multiple locations, we can't\n+\t make use of this information, but we can save some copying if\n+\t the whole argument is passed in a single register.  */\n+      if (GET_CODE (entry_parm) == PARALLEL\n+\t  && nominal_mode != BLKmode && passed_mode != BLKmode)\n+\t{\n+\t  int i, len = XVECLEN (entry_parm, 0);\n+\n+\t  for (i = 0; i < len; i++)\n+\t    if (XEXP (XVECEXP (entry_parm, 0, i), 0) != NULL_RTX\n+\t\t&& GET_CODE (XEXP (XVECEXP (entry_parm, 0, i), 0)) == REG\n+\t\t&& (GET_MODE (XEXP (XVECEXP (entry_parm, 0, i), 0))\n+\t\t    == passed_mode)\n+\t\t&& XINT (XEXP (XVECEXP (entry_parm, 0, i), 1), 0) == 0)\n+\t      {\n+\t\tentry_parm = XEXP (XVECEXP (entry_parm, 0, i), 0);\n+\t\tbreak;\n+\t      }\n+\t}\n+\n       /* ENTRY_PARM is an RTX for the parameter as it arrives,\n \t in the mode in which it arrives.\n \t STACK_PARM is an RTX for a stack slot where the parameter can live"}]}