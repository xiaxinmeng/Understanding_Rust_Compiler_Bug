{"sha": "3deb00ce32493605cc011cc0ebf48bff62540d9d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2RlYjAwY2UzMjQ5MzYwNWNjMDExY2MwZWJmNDhiZmY2MjU0MGQ5ZA==", "commit": {"author": {"name": "Douglas B Rupp", "email": "rupp@gnat.com", "date": "2002-02-13T15:19:27Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2002-02-13T15:19:27Z"}, "message": "vms.h (MD_FALLBACK_FRAME_STATE_FOR): Handle register frame procedures.\n\n\t* config/alpha/vms.h (MD_FALLBACK_FRAME_STATE_FOR): Handle\n\tregister frame procedures. Optimize retrieving context.\n\nFrom-SVN: r49732", "tree": {"sha": "a6359750b4ee1e6984f567f05ed5acc2818bc9e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a6359750b4ee1e6984f567f05ed5acc2818bc9e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3deb00ce32493605cc011cc0ebf48bff62540d9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3deb00ce32493605cc011cc0ebf48bff62540d9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3deb00ce32493605cc011cc0ebf48bff62540d9d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3deb00ce32493605cc011cc0ebf48bff62540d9d/comments", "author": null, "committer": null, "parents": [{"sha": "09eb789b6d453a3f1388e7517182cd2033351eae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09eb789b6d453a3f1388e7517182cd2033351eae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09eb789b6d453a3f1388e7517182cd2033351eae"}], "stats": {"total": 30, "additions": 19, "deletions": 11}, "files": [{"sha": "db3004596ef00685acdfbd9a9062ef600332b345", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3deb00ce32493605cc011cc0ebf48bff62540d9d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3deb00ce32493605cc011cc0ebf48bff62540d9d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3deb00ce32493605cc011cc0ebf48bff62540d9d", "patch": "@@ -1,5 +1,8 @@\n 2002-02-13  Douglas B Rupp  <rupp@gnat.com>\n \n+\t* config/alpha/vms.h (MD_FALLBACK_FRAME_STATE_FOR): Handle\n+\tregister frame procedures. Optimize retrieving context.\n+\n \t* config/alpha/t-vms (MULTILIB_OPTIONS): Define.\n \t(MULTILIB_DIRNAME, LIBGCC, INSTALL_LIBGCC): Likewise.\n \t* config/alpha/vms.h (ASM_FILE_START): Write .arch directive."}, {"sha": "9cc3f70dc73319a35d6b8f3d31b63b61ea1e1b62", "filename": "gcc/config/alpha/vms.h", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3deb00ce32493605cc011cc0ebf48bff62540d9d/gcc%2Fconfig%2Falpha%2Fvms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3deb00ce32493605cc011cc0ebf48bff62540d9d/gcc%2Fconfig%2Falpha%2Fvms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fvms.h?ref=3deb00ce32493605cc011cc0ebf48bff62540d9d", "patch": "@@ -391,22 +391,14 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define LINK_EH_SPEC \"vms-dwarf2eh.o%s \"\n \n #ifdef IN_LIBGCC2\n-#include <libicb.h>\n #include <pdscdef.h>\n \n #define MD_FALLBACK_FRAME_STATE_FOR(CONTEXT, FS, SUCCESS)\t\t\\\n  do {\t\t\t\t\t\t\t\t\t\\\n-  unsigned long handle;\t\t\t\t\t\t\t\\\n-  PDSCDEF *pv;\t\t\t\t\t\t\t\t\\\n-  INVO_CONTEXT_BLK invo;\t\t\t\t\t\t\\\n+  PDSCDEF *pv = *((PDSCDEF **) (CONTEXT)->reg [29]);                    \\\n \t\t\t\t\t\t\t\t\t\\\n-  memset (&invo, 0, sizeof (INVO_CONTEXT_BLK));\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-  invo.libicb$q_ireg [29] = *((long long *) (CONTEXT)->reg [29]);\t\\\n-  invo.libicb$q_ireg [30] = (long long) (CONTEXT)->cfa;\t\t\t\\\n-  handle = LIB$GET_INVO_HANDLE (&invo);\t\t\t\t\t\\\n-  LIB$GET_INVO_CONTEXT (handle, &invo);\t\t\t\t\t\\\n-  pv = (PDSCDEF *) invo.libicb$ph_procedure_descriptor;\t\t\t\\\n+  if (pv && ((long) pv & 0x7) == 0) /* low bits 0 means address */      \\\n+    pv = *(PDSCDEF **) pv;                                              \\\n \t\t\t\t\t\t\t\t\t\\\n   if (pv && ((pv->pdsc$w_flags & 0xf) == PDSC$K_KIND_FP_STACK))\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n@@ -432,6 +424,19 @@ do {\t\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n       goto SUCCESS;\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n+  else if (pv && ((pv->pdsc$w_flags & 0xf) == PDSC$K_KIND_FP_REGISTER))\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      (FS)->cfa_offset = pv->pdsc$l_size;\t\t\t\t\\\n+      (FS)->cfa_reg = pv->pdsc$w_flags & PDSC$M_BASE_REG_IS_FP ? 29 : 30; \\\n+      (FS)->retaddr_column = 26;\t\t\t\t\t\\\n+      (FS)->cfa_how = CFA_REG_OFFSET;\t\t\t\t\t\\\n+      (FS)->regs.reg[26].loc.reg = pv->pdsc$b_save_ra;\t\t\t\\\n+      (FS)->regs.reg[26].how = REG_SAVED_REG;\t\t\t        \\\n+      (FS)->regs.reg[29].loc.reg = pv->pdsc$b_save_fp;\t\t\t\\\n+      (FS)->regs.reg[29].how = REG_SAVED_REG;\t\t\t        \\\n+\t\t\t\t\t\t\t\t\t\\\n+      goto SUCCESS;\t\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n } while (0)\n #endif\n "}]}