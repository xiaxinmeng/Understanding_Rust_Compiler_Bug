{"sha": "8df67f4fe595411dfc28a71118fc8c74e65e700e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGRmNjdmNGZlNTk1NDExZGZjMjhhNzExMThmYzhjNzRlNjVlNzAwZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-10-20T22:57:27Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-10-20T22:57:27Z"}, "message": "gimplify.c (gimplify_expr): Drop TREE_OVERFLOW from INTEGER_CSTs.\n\n\t* gimplify.c (gimplify_expr): Drop TREE_OVERFLOW from\n\tINTEGER_CSTs.\n\nFrom-SVN: r141251", "tree": {"sha": "4cd2ef773656a50da103f632bac5f1d1d5c131a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4cd2ef773656a50da103f632bac5f1d1d5c131a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8df67f4fe595411dfc28a71118fc8c74e65e700e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8df67f4fe595411dfc28a71118fc8c74e65e700e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8df67f4fe595411dfc28a71118fc8c74e65e700e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8df67f4fe595411dfc28a71118fc8c74e65e700e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "15d5fe337ee87efb5aaa8b65aeb44cb672d4be5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15d5fe337ee87efb5aaa8b65aeb44cb672d4be5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15d5fe337ee87efb5aaa8b65aeb44cb672d4be5a"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "c55ccfaae0b11319a45dd2de2d1eb13dd7877915", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8df67f4fe595411dfc28a71118fc8c74e65e700e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8df67f4fe595411dfc28a71118fc8c74e65e700e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8df67f4fe595411dfc28a71118fc8c74e65e700e", "patch": "@@ -1,3 +1,8 @@\n+2008-10-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gimplify.c (gimplify_expr): Drop TREE_OVERFLOW from\n+\tINTEGER_CSTs.\n+\n 2008-10-20  Daniel Berlin  <dberlin@dberlin.org>\n \n \t* tree-ssa-pre.c (insert_into_preds_of_block): Don't rewrite constant"}, {"sha": "d2625a7f7152afd8e1049ad48d3e6e6dca19d336", "filename": "gcc/gimplify.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8df67f4fe595411dfc28a71118fc8c74e65e700e/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8df67f4fe595411dfc28a71118fc8c74e65e700e/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=8df67f4fe595411dfc28a71118fc8c74e65e700e", "patch": "@@ -6441,6 +6441,16 @@ gimplify_expr (tree *expr_p, gimple_seq *pre_p, gimple_seq *post_p,\n \n \t  /* Constants need not be gimplified.  */\n \tcase INTEGER_CST:\n+\t  /* Don't preserve TREE_OVERFLOW flags, it only inhibits\n+\t     many optimizations and FEs should have taken care of\n+\t     reporting all the required diagnostics.  */\n+\t  if (TREE_OVERFLOW (*expr_p))\n+\t    *expr_p = build_int_cst_wide (TREE_TYPE (*expr_p),\n+\t\t\t\t\t  TREE_INT_CST_LOW (*expr_p),\n+\t\t\t\t\t  TREE_INT_CST_HIGH (*expr_p));\n+\t  ret = GS_ALL_DONE;\n+\t  break;\n+\n \tcase REAL_CST:\n \tcase FIXED_CST:\n \tcase STRING_CST:"}]}