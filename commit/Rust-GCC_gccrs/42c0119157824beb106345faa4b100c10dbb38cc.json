{"sha": "42c0119157824beb106345faa4b100c10dbb38cc", "node_id": "C_kwDOANBUbNoAKDQyYzAxMTkxNTc4MjRiZWIxMDYzNDVmYWE0YjEwMGMxMGRiYjM4Y2M", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2022-01-28T01:17:03Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-11T08:53:19Z"}, "message": "[Ada] Excess finalization on assignment with target name symbol\n\nIn cases where the Ada 2022 feature of target name symbols (@) is used\nand the evaluation of the name is side-effect free, the compiler creates\na temporary object to hold the value of the target object for use as\nthe value of \"@\" symbols in the right-hand side expression. In the case\nwhere the target's type is controlled, or has controlled subcomponents,\nthis can result in extra finalization calls (for the temporary object).\nThe correction is to bypass the use of a temp and fall back on the more\ngeneral approach of creating and calling a procedure with an in-out\nparameter for performing the assignment.\n\ngcc/ada/\n\n\t* exp_ch5.adb (Expand_Assign_With_Target_Names): Bypass the temp\n\tobject approach in the case where the type of the LHS is\n\tcontrolled or has controlled subcomponents (Needs_Finalization\n\tis True), and use the procedure approach instead.", "tree": {"sha": "55c101eaf07b37b63b826fa5ae3f212ac66821f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55c101eaf07b37b63b826fa5ae3f212ac66821f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42c0119157824beb106345faa4b100c10dbb38cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42c0119157824beb106345faa4b100c10dbb38cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42c0119157824beb106345faa4b100c10dbb38cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42c0119157824beb106345faa4b100c10dbb38cc/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6281d36342c29cdd9acb32032f59bf440953c942", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6281d36342c29cdd9acb32032f59bf440953c942", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6281d36342c29cdd9acb32032f59bf440953c942"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "2e401ca13efdac434b76bc688e81e97613fb74d4", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42c0119157824beb106345faa4b100c10dbb38cc/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42c0119157824beb106345faa4b100c10dbb38cc/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=42c0119157824beb106345faa4b100c10dbb38cc", "patch": "@@ -2246,9 +2246,15 @@ package body Exp_Ch5 is\n              Expression => New_RHS));\n \n       --  The left-hand side is not a direct name, but is side-effect free.\n-      --  Capture its value in a temporary to avoid multiple evaluations.\n-\n-      elsif Side_Effect_Free (LHS) then\n+      --  Capture its value in a temporary to avoid generating a procedure.\n+      --  We don't do this optimization if the target object's type may need\n+      --  finalization actions, because we don't want extra finalizations to\n+      --  be done for the temp object, and instead we use the more general\n+      --  procedure-based approach below.\n+\n+      elsif Side_Effect_Free (LHS)\n+        and then not Needs_Finalization (Etype (LHS))\n+      then\n          Ent := Make_Temporary (Loc, 'T');\n          Replace_Target_Name (New_RHS);\n "}]}