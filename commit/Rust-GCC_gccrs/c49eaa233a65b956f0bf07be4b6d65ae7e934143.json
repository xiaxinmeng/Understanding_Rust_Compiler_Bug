{"sha": "c49eaa233a65b956f0bf07be4b6d65ae7e934143", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQ5ZWFhMjMzYTY1Yjk1NmYwYmYwN2JlNGI2ZDY1YWU3ZTkzNDE0Mw==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2011-04-23T10:26:38Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2011-04-23T10:26:38Z"}, "message": "re PR fortran/18918 (Eventually support Fortran 2008's coarrays [co-arrays])\n\n2011-04-23  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/18918\n        * module.c (mio_array_spec): Set as->cotype on reading.\n        * resolve.c (resolve_allocate_expr): Fix allocating coarray\n        components.\n\n2011-04-23  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/18918\n        * gfortran.dg/coarray_19.f90: New.\n\nFrom-SVN: r172897", "tree": {"sha": "d725eeee3661c9060948a73ac3731d9ad58d3102", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d725eeee3661c9060948a73ac3731d9ad58d3102"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c49eaa233a65b956f0bf07be4b6d65ae7e934143", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c49eaa233a65b956f0bf07be4b6d65ae7e934143", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c49eaa233a65b956f0bf07be4b6d65ae7e934143", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c49eaa233a65b956f0bf07be4b6d65ae7e934143/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "16997bc01128f46cee9450237cd5e3e8fb3b12ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16997bc01128f46cee9450237cd5e3e8fb3b12ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16997bc01128f46cee9450237cd5e3e8fb3b12ad"}], "stats": {"total": 59, "additions": 58, "deletions": 1}, "files": [{"sha": "ec28bf4222da2e0e6b3fa0b2cf9434608b62f0d7", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c49eaa233a65b956f0bf07be4b6d65ae7e934143/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c49eaa233a65b956f0bf07be4b6d65ae7e934143/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c49eaa233a65b956f0bf07be4b6d65ae7e934143", "patch": "@@ -1,3 +1,10 @@\n+2011-04-23  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/18918\n+\t* module.c (mio_array_spec): Set as->cotype on reading.\n+\t* resolve.c (resolve_allocate_expr): Fix allocating coarray\n+\tcomponents.\n+\n 2011-04-21  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/48405"}, {"sha": "fb8de0e39b6d74ee6f236769658a73d4664a0885", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c49eaa233a65b956f0bf07be4b6d65ae7e934143/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c49eaa233a65b956f0bf07be4b6d65ae7e934143/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=c49eaa233a65b956f0bf07be4b6d65ae7e934143", "patch": "@@ -2203,6 +2203,9 @@ mio_array_spec (gfc_array_spec **asp)\n   mio_integer (&as->corank);\n   as->type = MIO_NAME (array_type) (as->type, array_spec_types);\n \n+  if (iomode == IO_INPUT && as->corank)\n+    as->cotype = (as->type == AS_DEFERRED) ? AS_DEFERRED : AS_EXPLICIT;\n+\n   for (i = 0; i < as->rank + as->corank; i++)\n     {\n       mio_expr (&as->lower[i]);"}, {"sha": "d7b95f51e1775b2bc414229e2e5f767d1674cc0c", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c49eaa233a65b956f0bf07be4b6d65ae7e934143/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c49eaa233a65b956f0bf07be4b6d65ae7e934143/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=c49eaa233a65b956f0bf07be4b6d65ae7e934143", "patch": "@@ -6636,6 +6636,7 @@ resolve_allocate_expr (gfc_expr *e, gfc_code *code)\n {\n   int i, pointer, allocatable, dimension, is_abstract;\n   int codimension;\n+  bool coindexed;\n   symbol_attribute attr;\n   gfc_ref *ref, *ref2;\n   gfc_expr *e2;\n@@ -6693,18 +6694,32 @@ resolve_allocate_expr (gfc_expr *e, gfc_code *code)\n \t  codimension = sym->attr.codimension;\n \t}\n \n+      coindexed = false;\n+\n       for (ref = e->ref; ref; ref2 = ref, ref = ref->next)\n \t{\n \t  switch (ref->type)\n \t    {\n  \t      case REF_ARRAY:\n+                if (ref->u.ar.codimen > 0)\n+\t\t  {\n+\t\t    int n;\n+\t\t    for (n = ref->u.ar.dimen;\n+\t\t\t n < ref->u.ar.dimen + ref->u.ar.codimen; n++)\n+\t\t      if (ref->u.ar.dimen_type[n] != DIMEN_THIS_IMAGE)\n+\t\t\t{\n+\t\t\t  coindexed = true;\n+\t\t\t  break;\n+\t\t\t}\n+\t\t   }\n+\n \t\tif (ref->next != NULL)\n \t\t  pointer = 0;\n \t\tbreak;\n \n \t      case REF_COMPONENT:\n \t\t/* F2008, C644.  */\n-\t\tif (gfc_is_coindexed (e))\n+\t\tif (coindexed)\n \t\t  {\n \t\t    gfc_error (\"Coindexed allocatable object at %L\",\n \t\t\t       &e->where);"}, {"sha": "dfb9929fbb74a54db00e333529e2deadde0fcce3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c49eaa233a65b956f0bf07be4b6d65ae7e934143/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c49eaa233a65b956f0bf07be4b6d65ae7e934143/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c49eaa233a65b956f0bf07be4b6d65ae7e934143", "patch": "@@ -1,3 +1,8 @@\n+2011-04-23  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/18918\n+\t* gfortran.dg/coarray_19.f90: New.\n+\n 2011-04-23  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/48685"}, {"sha": "cbb1dd20d8f4e446ae4b5962b4fdbe7cf04379a4", "filename": "gcc/testsuite/gfortran.dg/coarray_19.f90", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c49eaa233a65b956f0bf07be4b6d65ae7e934143/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_19.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c49eaa233a65b956f0bf07be4b6d65ae7e934143/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_19.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_19.f90?ref=c49eaa233a65b956f0bf07be4b6d65ae7e934143", "patch": "@@ -0,0 +1,27 @@\n+! { dg-do compile }\n+! { dg-options \"-fcoarray=single\" }\n+!\n+! PR fortran/18918\n+!\n+\n+! Was failing before as the \"x%a()[]\" was\n+! regarded as coindexed\n+subroutine test2()\n+  type t\n+    integer, allocatable :: a(:)[:]\n+  end type t\n+  type(t), SAVE :: x\n+  allocate(x%a(1)[*])\n+end subroutine test2\n+\n+\n+module m\n+  integer, allocatable :: a(:)[:]\n+end module m\n+\n+! Was failing as \"a\" was allocatable but\n+! as->cotype was not AS_DEFERERED.\n+use m\n+end\n+\n+! { dg-final { cleanup-modules \"m\" } }"}]}