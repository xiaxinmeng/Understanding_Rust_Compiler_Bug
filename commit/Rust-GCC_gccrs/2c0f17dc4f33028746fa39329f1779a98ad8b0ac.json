{"sha": "2c0f17dc4f33028746fa39329f1779a98ad8b0ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmMwZjE3ZGM0ZjMzMDI4NzQ2ZmEzOTMyOWYxNzc5YTk4YWQ4YjBhYw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-12-05T00:37:56Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-12-05T00:37:56Z"}, "message": "decl2.c (pending_statics_used): Make it a macro.\n\n\t* decl2.c (pending_statics_used): Make it a macro.\n\t(saved_inlines_used): Likewise.\n\t(finish_static_data_member_decl): Use VARRAY_PUSH_TREE.\n\t(mark_inline_for_output): Likewise.\n\t(ssdf_decls_used): Remove.\n\t(start_static_storage_duration_function): Use VARRAY_PUSH_TREE.\n\t(generate_ctor_or_dtor_function): Adjust accordingly.\n\nFrom-SVN: r30778", "tree": {"sha": "c4f652f2cc6a310cb0e76fe3419381d06cbe82ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4f652f2cc6a310cb0e76fe3419381d06cbe82ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c0f17dc4f33028746fa39329f1779a98ad8b0ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c0f17dc4f33028746fa39329f1779a98ad8b0ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c0f17dc4f33028746fa39329f1779a98ad8b0ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c0f17dc4f33028746fa39329f1779a98ad8b0ac/comments", "author": null, "committer": null, "parents": [{"sha": "a6873608446d86909cf4a60fea355091b1297e8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6873608446d86909cf4a60fea355091b1297e8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6873608446d86909cf4a60fea355091b1297e8d"}], "stats": {"total": 39, "additions": 19, "deletions": 20}, "files": [{"sha": "fa7e6c84bd848e3d4cc89acb6e844b46cc21dd1e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c0f17dc4f33028746fa39329f1779a98ad8b0ac/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c0f17dc4f33028746fa39329f1779a98ad8b0ac/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2c0f17dc4f33028746fa39329f1779a98ad8b0ac", "patch": "@@ -1,3 +1,13 @@\n+1999-12-04  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* decl2.c (pending_statics_used): Make it a macro.\n+\t(saved_inlines_used): Likewise.\n+\t(finish_static_data_member_decl): Use VARRAY_PUSH_TREE.\n+\t(mark_inline_for_output): Likewise.\n+\t(ssdf_decls_used): Remove.\n+\t(start_static_storage_duration_function): Use VARRAY_PUSH_TREE.\n+\t(generate_ctor_or_dtor_function): Adjust accordingly.\n+\t\n 1999-11-24  Geoffrey Keating  <geoffk@cygnus.com>\n             Greg McGary  <gkm@gnu.org>\n "}, {"sha": "ca142a8d43eeb35884b2b1065af782c70cd5d1b6", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 9, "deletions": 20, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c0f17dc4f33028746fa39329f1779a98ad8b0ac/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c0f17dc4f33028746fa39329f1779a98ad8b0ac/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=2c0f17dc4f33028746fa39329f1779a98ad8b0ac", "patch": "@@ -100,12 +100,14 @@ tree pending_vtables;\n    static class variable can be declared inside the class without\n    an initializer, and then initialized, staticly, outside the class.  */\n static varray_type pending_statics;\n-static size_t pending_statics_used;\n+#define pending_statics_used \\\n+  (pending_statics ? pending_statics->elements_used : 0)\n \n /* A list of functions which were declared inline, but which we\n    may need to emit outline anyway.  */\n static varray_type saved_inlines;\n-static size_t saved_inlines_used;\n+#define saved_inlines_used \\\n+  (saved_inlines ? saved_inlines->elements_used : 0)\n \n /* Same, but not reset.  Local temp variables and global temp variables\n    can have the same name.  */\n@@ -1484,12 +1486,7 @@ finish_static_data_member_decl (decl, init, asmspec_tree, flags)\n     {\n       if (!pending_statics)\n \tVARRAY_TREE_INIT (pending_statics, 32, \"pending_statics\");\n-\t\n-      if (pending_statics_used == pending_statics->num_elements)\n-\tVARRAY_GROW (pending_statics, \n-\t\t     2 * pending_statics->num_elements);\n-      VARRAY_TREE (pending_statics, pending_statics_used) = decl;\n-      ++pending_statics_used;\n+      VARRAY_PUSH_TREE (pending_statics, decl);\n     }\n \n   /* Static consts need not be initialized in the class definition.  */\n@@ -1966,12 +1963,8 @@ mark_inline_for_output (decl)\n   DECL_SAVED_INLINE (decl) = 1;\n   if (!saved_inlines)\n     VARRAY_TREE_INIT (saved_inlines, 32, \"saved_inlines\");\n-  \n-  if (saved_inlines_used == saved_inlines->num_elements)\n-    VARRAY_GROW (saved_inlines, \n-\t\t 2 * saved_inlines->num_elements);\n-  VARRAY_TREE (saved_inlines, saved_inlines_used) = decl;\n-  ++saved_inlines_used;\n+\n+  VARRAY_PUSH_TREE (saved_inlines, decl);\n }\n \n /* Hand off a unique name which can be used for variable we don't really\n@@ -2896,7 +2889,6 @@ static tree ssdf_decl;\n /* All the static storage duration functions created in this\n    translation unit.  */\n static varray_type ssdf_decls;\n-static size_t ssdf_decls_used;\n \n /* A map from priority levels to information about that priority\n    level.  There may be many such levels, so efficient lookup is\n@@ -2969,10 +2961,7 @@ start_static_storage_duration_function ()\n       get_priority_info (DEFAULT_INIT_PRIORITY);\n     }\n \n-  if (ssdf_decls_used == ssdf_decls->num_elements)\n-    VARRAY_GROW (ssdf_decls, 2 * ssdf_decls_used);\n-  VARRAY_TREE (ssdf_decls, ssdf_decls_used) = ssdf_decl;\n-  ++ssdf_decls_used;\n+  VARRAY_PUSH_TREE (ssdf_decls, ssdf_decl);\n \n   /* Create the argument list.  */\n   initialize_p_decl = build_decl (PARM_DECL,\n@@ -3324,7 +3313,7 @@ generate_ctor_or_dtor_function (constructor_p, priority)\n \n   /* Call the static storage duration function with appropriate\n      arguments.  */\n-  for (i = 0; i < ssdf_decls_used; ++i) \n+  for (i = 0; i < ssdf_decls->elements_used; ++i) \n     {\n       arguments = tree_cons (NULL_TREE, build_int_2 (priority, 0), \n \t\t\t     NULL_TREE);"}]}