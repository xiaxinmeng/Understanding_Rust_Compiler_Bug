{"sha": "09952accc413e24ff9b903a4f749c8dae0c41c00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDk5NTJhY2NjNDEzZTI0ZmY5YjkwM2E0Zjc0OWM4ZGFlMGM0MWMwMA==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2005-06-07T02:23:44Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2005-06-07T02:23:44Z"}, "message": "PR libstdc++/21770 (cont: debug-mode)\n\n2005-06-06  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/21770 (cont: debug-mode)\n\t* include/debug/deque: Use _Base typedefs for pointer, const_pointer,\n\treference, const_reference.\n\t* include/debug/list: Likewise.\n\t* include/debug/map.h: Likewise.\n\t* include/debug/multimap.h: Likewise.\n\t* include/debug/multiset.h: Likewise.\n\t* include/debug/set.h: Likewise.\n\t* include/debug/vector: Likewise.\n\nFrom-SVN: r100692", "tree": {"sha": "65fe426b2056bab92700d26f824c7ae34bef7f84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65fe426b2056bab92700d26f824c7ae34bef7f84"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09952accc413e24ff9b903a4f749c8dae0c41c00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09952accc413e24ff9b903a4f749c8dae0c41c00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09952accc413e24ff9b903a4f749c8dae0c41c00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09952accc413e24ff9b903a4f749c8dae0c41c00/comments", "author": null, "committer": null, "parents": [{"sha": "67daed71cad6e36170868d7bbd575520d7d8015c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67daed71cad6e36170868d7bbd575520d7d8015c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67daed71cad6e36170868d7bbd575520d7d8015c"}], "stats": {"total": 76, "additions": 44, "deletions": 32}, "files": [{"sha": "4580ebbad5e47a669c4022e074fc143d7bbfadad", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09952accc413e24ff9b903a4f749c8dae0c41c00/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09952accc413e24ff9b903a4f749c8dae0c41c00/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=09952accc413e24ff9b903a4f749c8dae0c41c00", "patch": "@@ -1,3 +1,15 @@\n+2005-06-06  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/21770 (cont: debug-mode)\n+\t* include/debug/deque: Use _Base typedefs for pointer, const_pointer,\n+\treference, const_reference.\n+\t* include/debug/list: Likewise.\n+\t* include/debug/map.h: Likewise.\n+\t* include/debug/multimap.h: Likewise.\n+\t* include/debug/multiset.h: Likewise.\n+\t* include/debug/set.h: Likewise.\n+\t* include/debug/vector: Likewise.\n+\n 2005-06-06  Paolo Carlini  <pcarlini@suse.de>\n \n         Port from libstdcxx_so_7-branch:"}, {"sha": "5d87cdaeb346b12f905f44a022889b8300591eca", "filename": "libstdc++-v3/include/debug/deque", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09952accc413e24ff9b903a4f749c8dae0c41c00/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fdeque", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09952accc413e24ff9b903a4f749c8dae0c41c00/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fdeque", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fdeque?ref=09952accc413e24ff9b903a4f749c8dae0c41c00", "patch": "@@ -1,6 +1,6 @@\n // Debugging deque implementation -*- C++ -*-\n \n-// Copyright (C) 2003, 2004\n+// Copyright (C) 2003, 2004, 2005\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -46,8 +46,8 @@ namespace __gnu_debug_def\n       typedef __gnu_debug::_Safe_sequence<deque> _Safe_base;\n \n     public:\n-      typedef typename _Allocator::reference        reference;\n-      typedef typename _Allocator::const_reference  const_reference;\n+      typedef typename _Base::reference             reference;\n+      typedef typename _Base::const_reference       const_reference;\n \n       typedef __gnu_debug::_Safe_iterator<typename _Base::iterator,deque>\n \t\t\t\t\t\t    iterator;\n@@ -59,8 +59,8 @@ namespace __gnu_debug_def\n \n       typedef _Tp\t\t\t\t    value_type;\n       typedef _Allocator\t\t\t    allocator_type;\n-      typedef typename _Allocator::pointer          pointer;\n-      typedef typename _Allocator::const_pointer    const_pointer;\n+      typedef typename _Base::pointer               pointer;\n+      typedef typename _Base::const_pointer         const_pointer;\n       typedef std::reverse_iterator<iterator>       reverse_iterator;\n       typedef std::reverse_iterator<const_iterator> const_reverse_iterator;\n "}, {"sha": "745f14ea7b75618928117a0a5fd3ed18b116dd3c", "filename": "libstdc++-v3/include/debug/list", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09952accc413e24ff9b903a4f749c8dae0c41c00/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Flist", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09952accc413e24ff9b903a4f749c8dae0c41c00/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Flist", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Flist?ref=09952accc413e24ff9b903a4f749c8dae0c41c00", "patch": "@@ -1,6 +1,6 @@\n // Debugging list implementation -*- C++ -*-\n \n-// Copyright (C) 2003, 2004\n+// Copyright (C) 2003, 2004, 2005\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -47,8 +47,8 @@ namespace __gnu_debug_def\n       typedef __gnu_debug::_Safe_sequence<list>  _Safe_base;\n \n     public:\n-      typedef typename _Allocator::reference        reference;\n-      typedef typename _Allocator::const_reference  const_reference;\n+      typedef typename _Base::reference             reference;\n+      typedef typename _Base::const_reference       const_reference;\n \n       typedef __gnu_debug::_Safe_iterator<typename _Base::iterator, list>\n \t\t\t\t\t\t    iterator;\n@@ -60,8 +60,8 @@ namespace __gnu_debug_def\n \n       typedef _Tp\t\t\t\t    value_type;\n       typedef _Allocator\t\t\t    allocator_type;\n-      typedef typename _Allocator::pointer          pointer;\n-      typedef typename _Allocator::const_pointer    const_pointer;\n+      typedef typename _Base::pointer               pointer;\n+      typedef typename _Base::const_pointer         const_pointer;\n       typedef std::reverse_iterator<iterator>       reverse_iterator;\n       typedef std::reverse_iterator<const_iterator> const_reverse_iterator;\n "}, {"sha": "75ae2f4bcf390c994f47c5a2d6833c9b1461c60b", "filename": "libstdc++-v3/include/debug/map.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09952accc413e24ff9b903a4f749c8dae0c41c00/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09952accc413e24ff9b903a4f749c8dae0c41c00/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmap.h?ref=09952accc413e24ff9b903a4f749c8dae0c41c00", "patch": "@@ -1,6 +1,6 @@\n // Debugging map implementation -*- C++ -*-\n \n-// Copyright (C) 2003, 2004\n+// Copyright (C) 2003, 2004, 2005\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -53,8 +53,8 @@ namespace __gnu_debug_def\n       typedef std::pair<const _Key, _Tp>            value_type;\n       typedef _Compare                              key_compare;\n       typedef _Allocator                            allocator_type;\n-      typedef typename _Allocator::reference        reference;\n-      typedef typename _Allocator::const_reference  const_reference;\n+      typedef typename _Base::reference             reference;\n+      typedef typename _Base::const_reference       const_reference;\n \n       typedef __gnu_debug::_Safe_iterator<typename _Base::iterator, map>\n                                                     iterator;\n@@ -63,8 +63,8 @@ namespace __gnu_debug_def\n \n       typedef typename _Base::size_type             size_type;\n       typedef typename _Base::difference_type       difference_type;\n-      typedef typename _Allocator::pointer          pointer;\n-      typedef typename _Allocator::const_pointer    const_pointer;\n+      typedef typename _Base::pointer               pointer;\n+      typedef typename _Base::const_pointer         const_pointer;\n       typedef std::reverse_iterator<iterator>       reverse_iterator;\n       typedef std::reverse_iterator<const_iterator> const_reverse_iterator;\n "}, {"sha": "d5dbe5c2f71e5a2d22886bf700c24b7100348963", "filename": "libstdc++-v3/include/debug/multimap.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09952accc413e24ff9b903a4f749c8dae0c41c00/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmultimap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09952accc413e24ff9b903a4f749c8dae0c41c00/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmultimap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmultimap.h?ref=09952accc413e24ff9b903a4f749c8dae0c41c00", "patch": "@@ -1,6 +1,6 @@\n // Debugging multimap implementation -*- C++ -*-\n \n-// Copyright (C) 2003, 2004\n+// Copyright (C) 2003, 2004, 2005\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -53,8 +53,8 @@ namespace __gnu_debug_def\n       typedef std::pair<const _Key, _Tp>             value_type;\n       typedef _Compare                               key_compare;\n       typedef _Allocator                             allocator_type;\n-      typedef typename _Allocator::reference         reference;\n-      typedef typename _Allocator::const_reference   const_reference;\n+      typedef typename _Base::reference              reference;\n+      typedef typename _Base::const_reference        const_reference;\n \n       typedef __gnu_debug::_Safe_iterator<typename _Base::iterator, multimap>\n                                                      iterator;\n@@ -63,8 +63,8 @@ namespace __gnu_debug_def\n \n       typedef typename _Base::size_type              size_type;\n       typedef typename _Base::difference_type        difference_type;\n-      typedef typename _Allocator::pointer           pointer;\n-      typedef typename _Allocator::const_pointer     const_pointer;\n+      typedef typename _Base::pointer                pointer;\n+      typedef typename _Base::const_pointer          const_pointer;\n       typedef std::reverse_iterator<iterator>        reverse_iterator;\n       typedef std::reverse_iterator<const_iterator>  const_reverse_iterator;\n "}, {"sha": "879e2feb59a84e256a9ea941c0e470328a96d6ff", "filename": "libstdc++-v3/include/debug/multiset.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09952accc413e24ff9b903a4f749c8dae0c41c00/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmultiset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09952accc413e24ff9b903a4f749c8dae0c41c00/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmultiset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmultiset.h?ref=09952accc413e24ff9b903a4f749c8dae0c41c00", "patch": "@@ -1,6 +1,6 @@\n // Debugging multiset implementation -*- C++ -*-\n \n-// Copyright (C) 2003, 2004\n+// Copyright (C) 2003, 2004, 2005\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -53,8 +53,8 @@ namespace __gnu_debug_def\n       typedef _Compare\t\t\t\t     key_compare;\n       typedef _Compare\t\t\t\t     value_compare;\n       typedef _Allocator\t\t\t     allocator_type;\n-      typedef typename _Allocator::reference\t     reference;\n-      typedef typename _Allocator::const_reference   const_reference;\n+      typedef typename _Base::reference\t             reference;\n+      typedef typename _Base::const_reference        const_reference;\n \n       typedef __gnu_debug::_Safe_iterator<typename _Base::iterator, multiset>\n       iterator;\n@@ -63,8 +63,8 @@ namespace __gnu_debug_def\n \n       typedef typename _Base::size_type              size_type;\n       typedef typename _Base::difference_type        difference_type;\n-      typedef typename _Allocator::pointer           pointer;\n-      typedef typename _Allocator::const_pointer     const_pointer;\n+      typedef typename _Base::pointer                pointer;\n+      typedef typename _Base::const_pointer          const_pointer;\n       typedef std::reverse_iterator<iterator>        reverse_iterator;\n       typedef std::reverse_iterator<const_iterator>  const_reverse_iterator;\n "}, {"sha": "f6fd451e1b95f894390a67f56dbbd1cd03947413", "filename": "libstdc++-v3/include/debug/set.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09952accc413e24ff9b903a4f749c8dae0c41c00/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09952accc413e24ff9b903a4f749c8dae0c41c00/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fset.h?ref=09952accc413e24ff9b903a4f749c8dae0c41c00", "patch": "@@ -1,6 +1,6 @@\n // Debugging set implementation -*- C++ -*-\n \n-// Copyright (C) 2003, 2004\n+// Copyright (C) 2003, 2004, 2005\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -53,8 +53,8 @@ namespace __gnu_debug_def\n       typedef _Compare\t\t\t\t    key_compare;\n       typedef _Compare\t\t\t\t    value_compare;\n       typedef _Allocator\t\t\t    allocator_type;\n-      typedef typename _Allocator::reference        reference;\n-      typedef typename _Allocator::const_reference  const_reference;\n+      typedef typename _Base::reference             reference;\n+      typedef typename _Base::const_reference       const_reference;\n \n       typedef __gnu_debug::_Safe_iterator<typename _Base::iterator, set>\n                                                     iterator;\n@@ -63,8 +63,8 @@ namespace __gnu_debug_def\n \n       typedef typename _Base::size_type             size_type;\n       typedef typename _Base::difference_type       difference_type;\n-      typedef typename _Allocator::pointer          pointer;\n-      typedef typename _Allocator::const_pointer    const_pointer;\n+      typedef typename _Base::pointer               pointer;\n+      typedef typename _Base::const_pointer         const_pointer;\n       typedef std::reverse_iterator<iterator>       reverse_iterator;\n       typedef std::reverse_iterator<const_iterator> const_reverse_iterator;\n "}, {"sha": "05c15ec18d35ff6a3305f5f9bcd7b6f98c35b7ed", "filename": "libstdc++-v3/include/debug/vector", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09952accc413e24ff9b903a4f749c8dae0c41c00/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09952accc413e24ff9b903a4f749c8dae0c41c00/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector?ref=09952accc413e24ff9b903a4f749c8dae0c41c00", "patch": "@@ -64,8 +64,8 @@ namespace __gnu_debug_def\n \n       typedef _Tp\t\t\t\t    value_type;\n       typedef _Allocator\t\t\t    allocator_type;\n-      typedef typename _Allocator::pointer          pointer;\n-      typedef typename _Allocator::const_pointer    const_pointer;\n+      typedef typename _Base::pointer               pointer;\n+      typedef typename _Base::const_pointer         const_pointer;\n       typedef std::reverse_iterator<iterator>       reverse_iterator;\n       typedef std::reverse_iterator<const_iterator> const_reverse_iterator;\n "}]}