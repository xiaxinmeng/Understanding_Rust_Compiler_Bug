{"sha": "5dcf6b7f1cfee8b04d3bbe6f0f1b526b0c628742", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRjZjZiN2YxY2ZlZThiMDRkM2JiZTZmMGYxYjUyNmIwYzYyODc0Mg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-06-26T08:02:20Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-06-26T08:02:20Z"}, "message": "re PR tree-optimization/53748 (ice in fold_convert_loc)\n\n\tPR tree-optimization/53748\n\t* tree-ssa-phiopt.c (conditional_replacement): Only optimize\n\tif arg0/arg1 have integral or pointer types.\n\n\t* gcc.c-torture/compile/pr53748.c: New test.\n\nFrom-SVN: r188975", "tree": {"sha": "daf4ca99cd6ee7a4f6237322a757f37ce436bda1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/daf4ca99cd6ee7a4f6237322a757f37ce436bda1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5dcf6b7f1cfee8b04d3bbe6f0f1b526b0c628742", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dcf6b7f1cfee8b04d3bbe6f0f1b526b0c628742", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dcf6b7f1cfee8b04d3bbe6f0f1b526b0c628742", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dcf6b7f1cfee8b04d3bbe6f0f1b526b0c628742/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eaccea2afa9be40d1d976292da8450cb36439d5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaccea2afa9be40d1d976292da8450cb36439d5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eaccea2afa9be40d1d976292da8450cb36439d5f"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "d662298de990b8b8bca849911537cf96223fc804", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dcf6b7f1cfee8b04d3bbe6f0f1b526b0c628742/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dcf6b7f1cfee8b04d3bbe6f0f1b526b0c628742/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5dcf6b7f1cfee8b04d3bbe6f0f1b526b0c628742", "patch": "@@ -1,3 +1,9 @@\n+2012-06-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/53748\n+\t* tree-ssa-phiopt.c (conditional_replacement): Only optimize\n+\tif arg0/arg1 have integral or pointer types.\n+\n 2012-06-25  Richard Henderson  <rth@redhat.com>\n \n \t* config/i386/sse.md (sse2_sse4_1): Remove code attr."}, {"sha": "a307459156382b592432c1769b065aa26bdd6fbe", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dcf6b7f1cfee8b04d3bbe6f0f1b526b0c628742/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dcf6b7f1cfee8b04d3bbe6f0f1b526b0c628742/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5dcf6b7f1cfee8b04d3bbe6f0f1b526b0c628742", "patch": "@@ -1,3 +1,8 @@\n+2012-06-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/53748\n+\t* gcc.c-torture/compile/pr53748.c: New test.\n+\n 2012-06-25  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/53498"}, {"sha": "9aad70dd73aa3a36154010941877a5c8ef1e75f0", "filename": "gcc/testsuite/gcc.c-torture/compile/pr53748.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dcf6b7f1cfee8b04d3bbe6f0f1b526b0c628742/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr53748.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dcf6b7f1cfee8b04d3bbe6f0f1b526b0c628742/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr53748.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr53748.c?ref=5dcf6b7f1cfee8b04d3bbe6f0f1b526b0c628742", "patch": "@@ -0,0 +1,9 @@\n+/* PR tree-optimization/53748 */\n+\n+typedef unsigned int V __attribute__ ((__vector_size__ (sizeof (int) * 4)));\n+\n+void\n+foo (int x, V *y)\n+{\n+  *y = x ? ((V) { ~0U, ~0U, ~0U, ~0U }) : ((V) { 0, 0, 0, 0 });\n+}"}, {"sha": "46d8a2c4e603bad441d96faebceedb539ba068b4", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dcf6b7f1cfee8b04d3bbe6f0f1b526b0c628742/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dcf6b7f1cfee8b04d3bbe6f0f1b526b0c628742/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=5dcf6b7f1cfee8b04d3bbe6f0f1b526b0c628742", "patch": "@@ -615,8 +615,12 @@ conditional_replacement (basic_block cond_bb, basic_block middle_bb,\n   bool neg;\n \n   /* FIXME: Gimplification of complex type is too hard for now.  */\n-  if (TREE_CODE (TREE_TYPE (arg0)) == COMPLEX_TYPE\n-      || TREE_CODE (TREE_TYPE (arg1)) == COMPLEX_TYPE)\n+  /* We aren't prepared to handle vectors either (and it is a question\n+     if it would be worthwhile anyway).  */\n+  if (!(INTEGRAL_TYPE_P (TREE_TYPE (arg0))\n+\t|| POINTER_TYPE_P (TREE_TYPE (arg0)))\n+      || !(INTEGRAL_TYPE_P (TREE_TYPE (arg1))\n+\t   || POINTER_TYPE_P (TREE_TYPE (arg1))))\n     return false;\n \n   /* The PHI arguments have the constants 0 and 1, or 0 and -1, then"}]}