{"sha": "a3d1ca0127cf4ca6bb8d0da5a525d17dfc58cbc9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTNkMWNhMDEyN2NmNGNhNmJiOGQwZGE1YTUyNWQxN2RmYzU4Y2JjOQ==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2019-07-11T08:01:39Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-11T08:01:39Z"}, "message": "[Ada] Missing finalization of private protected type\n\nThis patch updates the analysis of protected types to properly mark the\ntype as having controlled components when it contains at least one such\ncomponent. This in turn marks a potential partial view as requiring\nfinalization actions.\n\n------------\n-- Source --\n------------\n\n--  types.ads\n\nwith Ada.Finalization; use Ada.Finalization;\n\npackage Types is\n   type Ctrl_Typ is new Controlled with null record;\n   procedure Finalize (Obj : in out Ctrl_Typ);\n\n   type Prot_Typ is limited private;\n\nprivate\n   protected type Prot_Typ is\n   private\n      Comp : Ctrl_Typ;\n   end Prot_Typ;\nend Types;\n\n--  types.adb\n\nwith Ada.Text_IO; use Ada.Text_IO;\n\npackage body Types is\n   procedure Finalize (Obj : in out Ctrl_Typ) is\n   begin\n      Put_Line (\"finalize\");\n   end Finalize;\n\n   protected body Prot_Typ is\n   end Prot_Typ;\nend Types;\n\n--  main.adb\n\nwith Types; use Types;\n\nprocedure Main is\n   Obj : Prot_Typ;\nbegin\n   null;\nend Main;\n\n2019-07-11  Hristian Kirtchev  <kirtchev@adacore.com>\n\ngcc/ada/\n\n\t* exp_util.ads, exp_util.adb (Needs_Finalization): Move to\n\tSem_Util.\n\t* sem_ch9.adb (Analyze_Protected_Definition): Code cleanup. Mark\n\tthe protected type as having controlled components when it\n\tcontains at least one such component.\n\t* sem_util.ads, sem_util.adb (Needs_Finalization): New\n\tfunction.\n\nFrom-SVN: r273383", "tree": {"sha": "08358a7861132e462da9dc251181ad271b2ebad9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08358a7861132e462da9dc251181ad271b2ebad9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3d1ca0127cf4ca6bb8d0da5a525d17dfc58cbc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3d1ca0127cf4ca6bb8d0da5a525d17dfc58cbc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3d1ca0127cf4ca6bb8d0da5a525d17dfc58cbc9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3d1ca0127cf4ca6bb8d0da5a525d17dfc58cbc9/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6c1657116a2c9cf7c0c14b6dfa7f8bbb7672d3c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c1657116a2c9cf7c0c14b6dfa7f8bbb7672d3c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c1657116a2c9cf7c0c14b6dfa7f8bbb7672d3c8"}], "stats": {"total": 246, "additions": 129, "deletions": 117}, "files": [{"sha": "93a6fdc5db516926caac2992f86e98cc3f34dc1d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3d1ca0127cf4ca6bb8d0da5a525d17dfc58cbc9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3d1ca0127cf4ca6bb8d0da5a525d17dfc58cbc9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a3d1ca0127cf4ca6bb8d0da5a525d17dfc58cbc9", "patch": "@@ -1,3 +1,13 @@\n+2019-07-11  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_util.ads, exp_util.adb (Needs_Finalization): Move to\n+\tSem_Util.\n+\t* sem_ch9.adb (Analyze_Protected_Definition): Code cleanup. Mark\n+\tthe protected type as having controlled components when it\n+\tcontains at least one such component.\n+\t* sem_util.ads, sem_util.adb (Needs_Finalization): New\n+\tfunction.\n+\n 2019-07-11  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* alloc.ads (Rep_JSON_Table_Initial): New constant."}, {"sha": "b677a72587d2dc3822342d48f827512f21a065fc", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 1, "deletions": 91, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3d1ca0127cf4ca6bb8d0da5a525d17dfc58cbc9/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3d1ca0127cf4ca6bb8d0da5a525d17dfc58cbc9/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=a3d1ca0127cf4ca6bb8d0da5a525d17dfc58cbc9", "patch": "@@ -10554,94 +10554,6 @@ package body Exp_Util is\n       end if;\n    end Needs_Constant_Address;\n \n-   ------------------------\n-   -- Needs_Finalization --\n-   ------------------------\n-\n-   function Needs_Finalization (Typ : Entity_Id) return Boolean is\n-      function Has_Some_Controlled_Component\n-        (Input_Typ : Entity_Id) return Boolean;\n-      --  Determine whether type Input_Typ has at least one controlled\n-      --  component.\n-\n-      -----------------------------------\n-      -- Has_Some_Controlled_Component --\n-      -----------------------------------\n-\n-      function Has_Some_Controlled_Component\n-        (Input_Typ : Entity_Id) return Boolean\n-      is\n-         Comp : Entity_Id;\n-\n-      begin\n-         --  When a type is already frozen and has at least one controlled\n-         --  component, or is manually decorated, it is sufficient to inspect\n-         --  flag Has_Controlled_Component.\n-\n-         if Has_Controlled_Component (Input_Typ) then\n-            return True;\n-\n-         --  Otherwise inspect the internals of the type\n-\n-         elsif not Is_Frozen (Input_Typ) then\n-            if Is_Array_Type (Input_Typ) then\n-               return Needs_Finalization (Component_Type (Input_Typ));\n-\n-            elsif Is_Record_Type (Input_Typ) then\n-               Comp := First_Component (Input_Typ);\n-               while Present (Comp) loop\n-                  if Needs_Finalization (Etype (Comp)) then\n-                     return True;\n-                  end if;\n-\n-                  Next_Component (Comp);\n-               end loop;\n-            end if;\n-         end if;\n-\n-         return False;\n-      end Has_Some_Controlled_Component;\n-\n-   --  Start of processing for Needs_Finalization\n-\n-   begin\n-      --  Certain run-time configurations and targets do not provide support\n-      --  for controlled types.\n-\n-      if Restriction_Active (No_Finalization) then\n-         return False;\n-\n-      --  C++ types are not considered controlled. It is assumed that the non-\n-      --  Ada side will handle their clean up.\n-\n-      elsif Convention (Typ) = Convention_CPP then\n-         return False;\n-\n-      --  Class-wide types are treated as controlled because derivations from\n-      --  the root type may introduce controlled components.\n-\n-      elsif Is_Class_Wide_Type (Typ) then\n-         return True;\n-\n-      --  Concurrent types are controlled as long as their corresponding record\n-      --  is controlled.\n-\n-      elsif Is_Concurrent_Type (Typ)\n-        and then Present (Corresponding_Record_Type (Typ))\n-        and then Needs_Finalization (Corresponding_Record_Type (Typ))\n-      then\n-         return True;\n-\n-      --  Otherwise the type is controlled when it is either derived from type\n-      --  [Limited_]Controlled and not subject to aspect Disable_Controlled, or\n-      --  contains at least one controlled component.\n-\n-      else\n-         return\n-           Is_Controlled (Typ) or else Has_Some_Controlled_Component (Typ);\n-      end if;\n-   end Needs_Finalization;\n-\n    ----------------------------\n    -- New_Class_Wide_Subtype --\n    ----------------------------\n@@ -12170,9 +12082,7 @@ package body Exp_Util is\n       Typ     : Entity_Id;\n \n    begin\n-      if No (L)\n-        or else Is_Empty_List (L)\n-      then\n+      if No (L) or else Is_Empty_List (L) then\n          return False;\n       end if;\n "}, {"sha": "c0848c7c65dbd45818dbf6830d0bfc17192cca67", "filename": "gcc/ada/exp_util.ads", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3d1ca0127cf4ca6bb8d0da5a525d17dfc58cbc9/gcc%2Fada%2Fexp_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3d1ca0127cf4ca6bb8d0da5a525d17dfc58cbc9/gcc%2Fada%2Fexp_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.ads?ref=a3d1ca0127cf4ca6bb8d0da5a525d17dfc58cbc9", "patch": "@@ -944,10 +944,6 @@ package Exp_Util is\n    --  consist of constants, when the object has a nontrivial initialization\n    --  or is controlled.\n \n-   function Needs_Finalization (Typ : Entity_Id) return Boolean;\n-   --  Determine whether type Typ is controlled and this requires finalization\n-   --  actions.\n-\n    function Non_Limited_Designated_Type (T : Entity_Id) return Entity_Id;\n    --  An anonymous access type may designate a limited view. Check whether\n    --  non-limited view is available during expansion, to examine components"}, {"sha": "0696f928e3855a3f75d95eb27c4d3212dd4b976e", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 26, "deletions": 22, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3d1ca0127cf4ca6bb8d0da5a525d17dfc58cbc9/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3d1ca0127cf4ca6bb8d0da5a525d17dfc58cbc9/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=a3d1ca0127cf4ca6bb8d0da5a525d17dfc58cbc9", "patch": "@@ -1897,9 +1897,6 @@ package body Sem_Ch9 is\n    ----------------------------------\n \n    procedure Analyze_Protected_Definition (N : Node_Id) is\n-      E : Entity_Id;\n-      L : Entity_Id;\n-\n       procedure Undelay_Itypes (T : Entity_Id);\n       --  Itypes created for the private components of a protected type\n       --  do not receive freeze nodes, because there is no scope in which\n@@ -1932,19 +1929,15 @@ package body Sem_Ch9 is\n          end if;\n \n          while Present (Comp) loop\n-            if Is_Type (Comp)\n-              and then Is_Itype (Comp)\n-            then\n+            if Is_Type (Comp) and then Is_Itype (Comp) then\n                Set_Has_Delayed_Freeze (Comp, False);\n                Set_Is_Frozen (Comp);\n \n                if Is_Access_Type (Comp) then\n                   Layout_Type (Comp);\n                end if;\n \n-               if Is_Record_Type (Comp)\n-                 or else Is_Protected_Type (Comp)\n-               then\n+               if Is_Record_Type (Comp) or else Is_Protected_Type (Comp) then\n                   Undelay_Itypes (Comp);\n                end if;\n             end if;\n@@ -1953,6 +1946,12 @@ package body Sem_Ch9 is\n          end loop;\n       end Undelay_Itypes;\n \n+      --  Local variables\n+\n+      Prot_Typ : constant Entity_Id := Current_Scope;\n+      Item_Id  : Entity_Id;\n+      Last_Id  : Entity_Id;\n+\n    --  Start of processing for Analyze_Protected_Definition\n \n    begin\n@@ -1963,32 +1962,37 @@ package body Sem_Ch9 is\n       if Present (Private_Declarations (N))\n         and then not Is_Empty_List (Private_Declarations (N))\n       then\n-         L := Last_Entity (Current_Scope);\n+         Last_Id := Last_Entity (Prot_Typ);\n          Analyze_Declarations (Private_Declarations (N));\n \n-         if Present (L) then\n-            Set_First_Private_Entity (Current_Scope, Next_Entity (L));\n+         if Present (Last_Id) then\n+            Set_First_Private_Entity (Prot_Typ, Next_Entity (Last_Id));\n          else\n-            Set_First_Private_Entity (Current_Scope,\n-              First_Entity (Current_Scope));\n+            Set_First_Private_Entity (Prot_Typ, First_Entity (Prot_Typ));\n          end if;\n       end if;\n \n-      E := First_Entity (Current_Scope);\n-      while Present (E) loop\n-         if Ekind_In (E, E_Function, E_Procedure) then\n-            Set_Convention (E, Convention_Protected);\n+      Item_Id := First_Entity (Prot_Typ);\n+      while Present (Item_Id) loop\n+         if Ekind_In (Item_Id, E_Function, E_Procedure) then\n+            Set_Convention (Item_Id, Convention_Protected);\n          else\n-            Propagate_Concurrent_Flags (Current_Scope, Etype (E));\n+            Propagate_Concurrent_Flags (Prot_Typ, Etype (Item_Id));\n+\n+            if Chars (Item_Id) /= Name_uParent\n+              and then Needs_Finalization (Etype (Item_Id))\n+            then\n+               Set_Has_Controlled_Component (Prot_Typ);\n+            end if;\n          end if;\n \n-         Next_Entity (E);\n+         Next_Entity (Item_Id);\n       end loop;\n \n-      Undelay_Itypes (Current_Scope);\n+      Undelay_Itypes (Prot_Typ);\n \n       Check_Max_Entries (N, Max_Protected_Entries);\n-      Process_End_Label (N, 'e', Current_Scope);\n+      Process_End_Label (N, 'e', Prot_Typ);\n    end Analyze_Protected_Definition;\n \n    ----------------------------------------"}, {"sha": "147c281c79756c2078f8356d77be4350b28e7dc4", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3d1ca0127cf4ca6bb8d0da5a525d17dfc58cbc9/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3d1ca0127cf4ca6bb8d0da5a525d17dfc58cbc9/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=a3d1ca0127cf4ca6bb8d0da5a525d17dfc58cbc9", "patch": "@@ -19418,6 +19418,94 @@ package body Sem_Util is\n       return Empty;\n    end Nearest_Enclosing_Instance;\n \n+   ------------------------\n+   -- Needs_Finalization --\n+   ------------------------\n+\n+   function Needs_Finalization (Typ : Entity_Id) return Boolean is\n+      function Has_Some_Controlled_Component\n+        (Input_Typ : Entity_Id) return Boolean;\n+      --  Determine whether type Input_Typ has at least one controlled\n+      --  component.\n+\n+      -----------------------------------\n+      -- Has_Some_Controlled_Component --\n+      -----------------------------------\n+\n+      function Has_Some_Controlled_Component\n+        (Input_Typ : Entity_Id) return Boolean\n+      is\n+         Comp : Entity_Id;\n+\n+      begin\n+         --  When a type is already frozen and has at least one controlled\n+         --  component, or is manually decorated, it is sufficient to inspect\n+         --  flag Has_Controlled_Component.\n+\n+         if Has_Controlled_Component (Input_Typ) then\n+            return True;\n+\n+         --  Otherwise inspect the internals of the type\n+\n+         elsif not Is_Frozen (Input_Typ) then\n+            if Is_Array_Type (Input_Typ) then\n+               return Needs_Finalization (Component_Type (Input_Typ));\n+\n+            elsif Is_Record_Type (Input_Typ) then\n+               Comp := First_Component (Input_Typ);\n+               while Present (Comp) loop\n+                  if Needs_Finalization (Etype (Comp)) then\n+                     return True;\n+                  end if;\n+\n+                  Next_Component (Comp);\n+               end loop;\n+            end if;\n+         end if;\n+\n+         return False;\n+      end Has_Some_Controlled_Component;\n+\n+   --  Start of processing for Needs_Finalization\n+\n+   begin\n+      --  Certain run-time configurations and targets do not provide support\n+      --  for controlled types.\n+\n+      if Restriction_Active (No_Finalization) then\n+         return False;\n+\n+      --  C++ types are not considered controlled. It is assumed that the non-\n+      --  Ada side will handle their clean up.\n+\n+      elsif Convention (Typ) = Convention_CPP then\n+         return False;\n+\n+      --  Class-wide types are treated as controlled because derivations from\n+      --  the root type may introduce controlled components.\n+\n+      elsif Is_Class_Wide_Type (Typ) then\n+         return True;\n+\n+      --  Concurrent types are controlled as long as their corresponding record\n+      --  is controlled.\n+\n+      elsif Is_Concurrent_Type (Typ)\n+        and then Present (Corresponding_Record_Type (Typ))\n+        and then Needs_Finalization (Corresponding_Record_Type (Typ))\n+      then\n+         return True;\n+\n+      --  Otherwise the type is controlled when it is either derived from type\n+      --  [Limited_]Controlled and not subject to aspect Disable_Controlled, or\n+      --  contains at least one controlled component.\n+\n+      else\n+         return\n+           Is_Controlled (Typ) or else Has_Some_Controlled_Component (Typ);\n+      end if;\n+   end Needs_Finalization;\n+\n    ----------------------\n    -- Needs_One_Actual --\n    ----------------------"}, {"sha": "35ef1114b2ded1790ddc9f3c89b16eaba79d23fd", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3d1ca0127cf4ca6bb8d0da5a525d17dfc58cbc9/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3d1ca0127cf4ca6bb8d0da5a525d17dfc58cbc9/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=a3d1ca0127cf4ca6bb8d0da5a525d17dfc58cbc9", "patch": "@@ -2220,6 +2220,10 @@ package Sem_Util is\n    --  Return the entity of the nearest enclosing instance which encapsulates\n    --  entity E. If no such instance exits, return Empty.\n \n+   function Needs_Finalization (Typ : Entity_Id) return Boolean;\n+   --  Determine whether type Typ is controlled and this requires finalization\n+   --  actions.\n+\n    function Needs_One_Actual (E : Entity_Id) return Boolean;\n    --  Returns True if a function has defaults for all but its first formal,\n    --  which is a controlling formal. Used in Ada 2005 mode to solve the"}]}