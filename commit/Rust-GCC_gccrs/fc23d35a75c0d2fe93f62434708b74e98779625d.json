{"sha": "fc23d35a75c0d2fe93f62434708b74e98779625d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmMyM2QzNWE3NWMwZDJmZTkzZjYyNDM0NzA4Yjc0ZTk4Nzc5NjI1ZA==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2017-04-21T20:47:12Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2017-04-21T20:47:12Z"}, "message": "re PR fortran/80392 ([OOP] ICE with allocatable polymorphic function result in a procedure pointer component)\n\n2017-04-21  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/80392\n\t* trans-types.c (gfc_get_derived_type): Prevent an infinite loop when\n\tbuilding a derived type that includes a procedure pointer component\n\twith a polymorphic result.\n\n2017-04-21  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/80392\n\t* gfortran.dg/proc_ptr_comp_49.f90: New test case.\n\nFrom-SVN: r247069", "tree": {"sha": "27c7dd2a8af35690db4996949e9f410e31d1498d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27c7dd2a8af35690db4996949e9f410e31d1498d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc23d35a75c0d2fe93f62434708b74e98779625d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc23d35a75c0d2fe93f62434708b74e98779625d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc23d35a75c0d2fe93f62434708b74e98779625d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc23d35a75c0d2fe93f62434708b74e98779625d/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "176e79b51e9e778a768e9e33bd4daa47600300fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/176e79b51e9e778a768e9e33bd4daa47600300fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/176e79b51e9e778a768e9e33bd4daa47600300fd"}], "stats": {"total": 40, "additions": 37, "deletions": 3}, "files": [{"sha": "7058511d5655ed1e550b645500763292344bce66", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc23d35a75c0d2fe93f62434708b74e98779625d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc23d35a75c0d2fe93f62434708b74e98779625d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=fc23d35a75c0d2fe93f62434708b74e98779625d", "patch": "@@ -1,3 +1,10 @@\n+2017-04-21  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/80392\n+\t* trans-types.c (gfc_get_derived_type): Prevent an infinite loop when\n+\tbuilding a derived type that includes a procedure pointer component\n+\twith a polymorphic result.\n+\n 2017-04-17  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/80440"}, {"sha": "8617cd51a7c6f57c3ae138fe401fd5efa4ac3124", "filename": "gcc/fortran/trans-types.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc23d35a75c0d2fe93f62434708b74e98779625d/gcc%2Ffortran%2Ftrans-types.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc23d35a75c0d2fe93f62434708b74e98779625d/gcc%2Ffortran%2Ftrans-types.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-types.c?ref=fc23d35a75c0d2fe93f62434708b74e98779625d", "patch": "@@ -2617,9 +2617,10 @@ gfc_get_derived_type (gfc_symbol * derived, int codimen)\n \t the same as derived, by forcing the procedure pointer component to\n \t be built as if the explicit interface does not exist.  */\n       if (c->attr.proc_pointer\n-\t  && ((c->ts.type != BT_DERIVED && c->ts.type != BT_CLASS)\n-\t       || (c->ts.u.derived\n-\t\t   && !gfc_compare_derived_types (derived, c->ts.u.derived))))\n+\t  && (c->ts.type != BT_DERIVED || (c->ts.u.derived\n+\t\t    && !gfc_compare_derived_types (derived, c->ts.u.derived)))\n+\t  && (c->ts.type != BT_CLASS || (CLASS_DATA (c)->ts.u.derived\n+\t\t    && !gfc_compare_derived_types (derived, CLASS_DATA (c)->ts.u.derived))))\n \tfield_type = gfc_get_ppc_type (c);\n       else if (c->attr.proc_pointer && derived->backend_decl)\n \t{"}, {"sha": "6f4dc8d50959896bec017a7ba8bffbe6d46a4c37", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc23d35a75c0d2fe93f62434708b74e98779625d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc23d35a75c0d2fe93f62434708b74e98779625d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fc23d35a75c0d2fe93f62434708b74e98779625d", "patch": "@@ -1,3 +1,8 @@\n+2017-04-21  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/80392\n+\t* gfortran.dg/proc_ptr_comp_49.f90: New test case.\n+\n 2017-04-21  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.target/i386/pr79804.c: Add additional dg-error directive."}, {"sha": "e89791f728c37a18bbbc25aae93ffa5de74e33c2", "filename": "gcc/testsuite/gfortran.dg/proc_ptr_comp_49.f90", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc23d35a75c0d2fe93f62434708b74e98779625d/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_49.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc23d35a75c0d2fe93f62434708b74e98779625d/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_49.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_49.f90?ref=fc23d35a75c0d2fe93f62434708b74e98779625d", "patch": "@@ -0,0 +1,21 @@\n+! { dg-do compile }\n+!\n+! PR 80392: [5/6/7 Regression] [OOP] ICE with allocatable polymorphic function result in a procedure pointer component\n+!\n+! Contributed by <zed.three@gmail.com>\n+\n+module mwe\n+\n+  implicit none\n+\n+  type :: MyType\n+     procedure(my_op), nopass, pointer :: op\n+  end type\n+\n+contains\n+\n+  function my_op() result(foo)\n+    class(MyType), allocatable :: foo\n+  end function\n+\n+end module"}]}