{"sha": "5e4adfbabc05f6e37ed5ae233b0a43f144fef4f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWU0YWRmYmFiYzA1ZjZlMzdlZDVhZTIzM2IwYTQzZjE0NGZlZjRmNg==", "commit": {"author": {"name": "Philipp Thomas", "email": "pthomas@suse.de", "date": "2000-06-28T23:46:27Z"}, "committer": {"name": "Philipp Thomas", "email": "pthomas@gcc.gnu.org", "date": "2000-06-28T23:46:27Z"}, "message": "c-decl.c: Mark strings for translation.\n\n2000-06-28  Philipp Thomas  <pthomas@suse.de>\n\n\t* c-decl.c : Mark strings for translation.\n\t(parmlist_tags_warning): Use distinct messages instead\n\tof conditional expressions.\n\t* diagnostic.c (v_message_with_decl): Mark string for translation.\n\t* gcc.c: Mark messages for translation.\n\t(display_help): Combine messages into one string where necessary.\n\t* mips-tfile.c: Add intl.h. Mark messages for translation.\n\t* rtl.c (fatal_with_file_and_line): Modify function for NLS. Mark\n\tmessages for translation.\n\t* timevar.c: Mark messages for translation.\n\t* tlink.c: Likewise.\n\t* toplev.c: Likewise.\n\nFrom-SVN: r34773", "tree": {"sha": "cf84960b7dcda6445f2020417d413146c796651f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf84960b7dcda6445f2020417d413146c796651f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e4adfbabc05f6e37ed5ae233b0a43f144fef4f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e4adfbabc05f6e37ed5ae233b0a43f144fef4f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e4adfbabc05f6e37ed5ae233b0a43f144fef4f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e4adfbabc05f6e37ed5ae233b0a43f144fef4f6/comments", "author": null, "committer": null, "parents": [{"sha": "3153b3b70c358fe8e4db599c2086f1444b2c4d21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3153b3b70c358fe8e4db599c2086f1444b2c4d21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3153b3b70c358fe8e4db599c2086f1444b2c4d21"}], "stats": {"total": 262, "additions": 143, "deletions": 119}, "files": [{"sha": "9f0a8893f28deebf069219eb4c4054e03e455f40", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e4adfbabc05f6e37ed5ae233b0a43f144fef4f6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e4adfbabc05f6e37ed5ae233b0a43f144fef4f6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5e4adfbabc05f6e37ed5ae233b0a43f144fef4f6", "patch": "@@ -1,3 +1,18 @@\n+2000-06-28  Philipp Thomas  <pthomas@suse.de>\n+\n+\t* c-decl.c : Mark strings for translation.\n+\t(parmlist_tags_warning): Use distinct messages instead\n+\tof conditional expressions.\n+\t* diagnostic.c (v_message_with_decl): Mark string for translation.\n+\t* gcc.c: Mark messages for translation.\n+\t(display_help): Combine messages into one string where necessary.\n+\t* mips-tfile: Add intl.h. Mark messages for translation.\n+\t* rtl.c (fatal_with_file_and_line): Modify function for NLS. Mark\n+\tmessages for translation.\n+\t* timevar.c: Mark messages for translation.\n+\t* tlink.c: Likewise.\n+\t* toplev.c: Likewise.\n+\n Wed Jun 28 15:39:26 2000  Donn Terry (donnte@microsoft.com)\n \n \t* i386-interix.h (STRIP_NAME_ENCODING): Declare _new_name properly."}, {"sha": "fea89c72b8b1977ddccd2276e39772196c57e617", "filename": "gcc/c-decl.c", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e4adfbabc05f6e37ed5ae233b0a43f144fef4f6/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e4adfbabc05f6e37ed5ae233b0a43f144fef4f6/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=5e4adfbabc05f6e37ed5ae233b0a43f144fef4f6", "patch": "@@ -5059,11 +5059,15 @@ parmlist_tags_warning ()\n \t\t  : \"enum\"),\n \t\t IDENTIFIER_POINTER (TREE_PURPOSE (elt)));\n       else\n-\twarning (\"anonymous %s declared inside parameter list\",\n-\t\t (code == RECORD_TYPE ? \"struct\"\n-\t\t  : code == UNION_TYPE ? \"union\"\n-\t\t  : \"enum\"));\n-\n+        {\n+          /* For translation these need to be seperate warnings */\n+          if (code == RECORD_TYPE)\n+\t    warning (\"anonymous struct declared inside parameter list\");\n+\t  else if (code == UNION_TYPE)\n+\t    warning (\"anonymous union declared inside parameter list\");\n+\t  else\t  \n+\t    warning (\"anonymous enum declared inside parameter list\");\n+\t}\n       if (! already)\n \t{\n \t  warning (\"its scope is only this definition or declaration, which is probably not what you want.\");\n@@ -5207,10 +5211,10 @@ finish_struct (t, fieldlist, attributes)\n       {\n \tif (pedantic)\n \t  pedwarn (\"%s defined inside parms\",\n-\t\t   TREE_CODE (t) == UNION_TYPE ? \"union\" : \"structure\");\n+\t\t   TREE_CODE (t) == UNION_TYPE ? _(\"union\") : _(\"structure\"));\n \telse if (! flag_traditional)\n \t  warning (\"%s defined inside parms\",\n-\t\t   TREE_CODE (t) == UNION_TYPE ? \"union\" : \"structure\");\n+\t\t   TREE_CODE (t) == UNION_TYPE ? _(\"union\") : _(\"structure\"));\n       }\n \n   if (pedantic)\n@@ -5220,9 +5224,9 @@ finish_struct (t, fieldlist, attributes)\n \t  break;\n \n       if (x == 0)\n-\tpedwarn (\"%s has no %smembers\",\n-\t\t TREE_CODE (t) == UNION_TYPE ? \"union\" : \"struct\",\n-\t\t fieldlist ? \"named \" : \"\");\n+\tpedwarn (\"%s has no %s\",\n+\t\t TREE_CODE (t) == UNION_TYPE ? _(\"union\") : _(\"struct\"),\n+\t\t fieldlist ? _(\"named members\") : _(\"members\"));\n     }\n \n   /* Install struct as DECL_CONTEXT of each field decl."}, {"sha": "634ff5106cc18c3969bc9ca250e00a99fa4ad27c", "filename": "gcc/diagnostic.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e4adfbabc05f6e37ed5ae233b0a43f144fef4f6/gcc%2Fdiagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e4adfbabc05f6e37ed5ae233b0a43f144fef4f6/gcc%2Fdiagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.c?ref=5e4adfbabc05f6e37ed5ae233b0a43f144fef4f6", "patch": "@@ -729,7 +729,7 @@ v_message_with_decl (decl, warn, msgid, ap)\n     {\n       const char *n = (DECL_NAME (decl)\n \t\t ? (*decl_printable_name) (decl, 2)\n-\t\t : \"((anonymous))\");\n+\t\t : _(\"((anonymous))\"));\n       if (doing_line_wrapping ())\n         output_add_string (&buffer, n);\n       else"}, {"sha": "696dbd0eb791a88045b0487c75d0095e496c2758", "filename": "gcc/gcc.c", "status": "modified", "additions": 49, "deletions": 46, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e4adfbabc05f6e37ed5ae233b0a43f144fef4f6/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e4adfbabc05f6e37ed5ae233b0a43f144fef4f6/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=5e4adfbabc05f6e37ed5ae233b0a43f144fef4f6", "patch": "@@ -2804,49 +2804,52 @@ convert_filename (name, do_exe)\n static void\n display_help ()\n {\n-  printf (\"Usage: %s [options] file...\\n\", programname);\n-  printf (\"Options:\\n\");\n+  printf (_(\"Usage: %s [options] file...\\n\"), programname);\n+  fputs (_(\"Options:\\n\"), stdout);\n \n-  printf (\"  -pass-exit-codes         Exit with highest error code from a phase\\n\");\n-  printf (\"  --help                   Display this information\\n\");\n+  fputs (_(\"  -pass-exit-codes         Exit with highest error code from a phase\\n\"), stdout);\n+  fputs (_(\"  --help                   Display this information\\n\"), stdout);\n   if (! verbose_flag)\n-    printf (\"  (Use '-v --help' to display command line options of sub-processes)\\n\");\n-  printf (\"  -dumpspecs               Display all of the built in spec strings\\n\");\n-  printf (\"  -dumpversion             Display the version of the compiler\\n\");\n-  printf (\"  -dumpmachine             Display the compiler's target processor\\n\");\n-  printf (\"  -print-search-dirs       Display the directories in the compiler's search path\\n\");\n-  printf (\"  -print-libgcc-file-name  Display the name of the compiler's companion library\\n\");\n-  printf (\"  -print-file-name=<lib>   Display the full path to library <lib>\\n\");\n-  printf (\"  -print-prog-name=<prog>  Display the full path to compiler component <prog>\\n\");\n-  printf (\"  -print-multi-directory   Display the root directory for versions of libgcc\\n\");\n-  printf (\"  -print-multi-lib         Display the mapping between command line options and\\n\");\n-  printf (\"                            multiple library search directories\\n\");\n-  printf (\"  -Wa,<options>            Pass comma-separated <options> on to the assembler\\n\");\n-  printf (\"  -Wp,<options>            Pass comma-separated <options> on to the preprocessor\\n\");\n-  printf (\"  -Wl,<options>            Pass comma-separated <options> on to the linker\\n\");\n-  printf (\"  -Xlinker <arg>           Pass <arg> on to the linker\\n\");\n-  printf (\"  -save-temps              Do not delete intermediate files\\n\");\n-  printf (\"  -pipe                    Use pipes rather than intermediate files\\n\");\n-  printf (\"  -time                    Time the execution of each subprocess\\n\");\n-  printf (\"  -specs=<file>            Override builtin specs with the contents of <file>\\n\");\n-  printf (\"  -std=<standard>          Assume that the input sources are for <standard>\\n\");\n-  printf (\"  -B <directory>           Add <directory> to the compiler's search paths\\n\");\n-  printf (\"  -b <machine>             Run gcc for target <machine>, if installed\\n\");\n-  printf (\"  -V <version>             Run gcc version number <version>, if installed\\n\");\n-  printf (\"  -v                       Display the programs invoked by the compiler\\n\");\n-  printf (\"  -E                       Preprocess only; do not compile, assemble or link\\n\");\n-  printf (\"  -S                       Compile only; do not assemble or link\\n\");\n-  printf (\"  -c                       Compile and assemble, but do not link\\n\");\n-  printf (\"  -o <file>                Place the output into <file>\\n\");\n-  printf (\"  -x <language>            Specify the language of the following input files\\n\");\n-  printf (\"                            Permissable languages include: c c++ assembler none\\n\");\n-  printf (\"                            'none' means revert to the default behaviour of\\n\");\n-  printf (\"                            guessing the language based on the file's extension\\n\");\n-\n-  printf (\"\\nOptions starting with -g, -f, -m, -O or -W are automatically passed on to\\n\");\n-  printf (\"the various sub-processes invoked by %s.  In order to pass other options\\n\",\n-\t  programname);\n-  printf (\"on to these processes the -W<letter> options must be used.\\n\");\n+    fputs (_(\"  (Use '-v --help' to display command line options of sub-processes)\\n\"), stdout);\n+  fputs (_(\"  -dumpspecs               Display all of the built in spec strings\\n\"), stdout);\n+  fputs (_(\"  -dumpversion             Display the version of the compiler\\n\"), stdout);\n+  fputs (_(\"  -dumpmachine             Display the compiler's target processor\\n\"), stdout);\n+  fputs (_(\"  -print-search-dirs       Display the directories in the compiler's search path\\n\"), stdout);\n+  fputs (_(\"  -print-libgcc-file-name  Display the name of the compiler's companion library\\n\"), stdout);\n+  fputs (_(\"  -print-file-name=<lib>   Display the full path to library <lib>\\n\"), stdout);\n+  fputs (_(\"  -print-prog-name=<prog>  Display the full path to compiler component <prog>\\n\"), stdout);\n+  fputs (_(\"  -print-multi-directory   Display the root directory for versions of libgcc\\n\"), stdout);\n+  fputs (_(\"\\\n+  -print-multi-lib         Display the mapping between command line options and\\n\\\n+                           multiple library search directories\\n\"), stdout);\n+  fputs (_(\"  -Wa,<options>            Pass comma-separated <options> on to the assembler\\n\"), stdout);\n+  fputs (_(\"  -Wp,<options>            Pass comma-separated <options> on to the preprocessor\\n\"), stdout);\n+  fputs (_(\"  -Wl,<options>            Pass comma-separated <options> on to the linker\\n\"), stdout);\n+  fputs (_(\"  -Xlinker <arg>           Pass <arg> on to the linker\\n\"), stdout);\n+  fputs (_(\"  -save-temps              Do not delete intermediate files\\n\"), stdout);\n+  fputs (_(\"  -pipe                    Use pipes rather than intermediate files\\n\"), stdout);\n+  fputs (_(\"  -time                    Time the execution of each subprocess\\n\"), stdout);\n+  fputs (_(\"  -specs=<file>            Override builtin specs with the contents of <file>\\n\"), stdout);\n+  fputs (_(\"  -std=<standard>          Assume that the input sources are for <standard>\\n\"), stdout);\n+  fputs (_(\"  -B <directory>           Add <directory> to the compiler's search paths\\n\"), stdout);\n+  fputs (_(\"  -b <machine>             Run gcc for target <machine>, if installed\\n\"), stdout);\n+  fputs (_(\"  -V <version>             Run gcc version number <version>, if installed\\n\"), stdout);\n+  fputs (_(\"  -v                       Display the programs invoked by the compiler\\n\"), stdout);\n+  fputs (_(\"  -E                       Preprocess only; do not compile, assemble or link\\n\"), stdout);\n+  fputs (_(\"  -S                       Compile only; do not assemble or link\\n\"), stdout);\n+  fputs (_(\"  -c                       Compile and assemble, but do not link\\n\"), stdout);\n+  fputs (_(\"  -o <file>                Place the output into <file>\\n\"), stdout);\n+  fputs (_(\"\\\n+  -x <language>            Specify the language of the following input files\\n\\\n+                           Permissable languages include: c c++ assembler none\\n\\\n+                           'none' means revert to the default behaviour of\\n\\\n+                           guessing the language based on the file's extension\\n\\\n+\"), stdout);\n+\n+  printf (_(\"\\n\\\n+Options starting with -g, -f, -m, -O or -W are automatically passed on to\\n\\\n+the various sub-processes invoked by %s.  In order to pass other options\\n\\\n+on to these processes the -W<letter> options must be used.\\n\\\"), programname);\n \n   /* The rest of the options are displayed by invocations of the various\n      sub-processes.  */\n@@ -5428,9 +5431,9 @@ main (argc, argv)\n \n   if (print_search_dirs)\n     {\n-      printf (\"install: %s%s\\n\", standard_exec_prefix, machine_suffix);\n-      printf (\"programs: %s\\n\", build_search_list (&exec_prefixes, \"\", 0));\n-      printf (\"libraries: %s\\n\", build_search_list (&startfile_prefixes, \"\", 0));\n+      printf (_(\"install: %s%s\\n\"), standard_exec_prefix, machine_suffix);\n+      printf (_(\"programs: %s\\n\"), build_search_list (&exec_prefixes, \"\", 0));\n+      printf (_(\"libraries: %s\\n\"), build_search_list (&startfile_prefixes, \"\", 0));\n       return (0);\n     }\n \n@@ -5468,7 +5471,7 @@ main (argc, argv)\n \n       if (! verbose_flag)\n \t{\n-\t  printf (\"\\nFor bug reporting instructions, please see:\\n\");\n+\t  printf (_(\"\\nFor bug reporting instructions, please see:\\n\"));\n \t  printf (\"%s.\\n\", GCCBUGURL);\n \t  \n \t  return (0);\n@@ -5645,7 +5648,7 @@ main (argc, argv)\n \n   if (print_help_list)\n     {\n-      printf (\"\\nFor bug reporting instructions, please see:\\n\");\n+      printf ((\"\\nFor bug reporting instructions, please see:\\n\"));\n       printf (\"%s\\n\", GCCBUGURL);\n     }\n   "}, {"sha": "ee0afe581dbe2ced6d5b64afa6a78f8cb521d8f1", "filename": "gcc/mips-tfile.c", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e4adfbabc05f6e37ed5ae233b0a43f144fef4f6/gcc%2Fmips-tfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e4adfbabc05f6e37ed5ae233b0a43f144fef4f6/gcc%2Fmips-tfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmips-tfile.c?ref=5e4adfbabc05f6e37ed5ae233b0a43f144fef4f6", "patch": "@@ -603,6 +603,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"config.h\"\n #include \"system.h\"\n #include \"version.h\"\n+#include \"intl.h\"\n \n #ifndef __SABER__\n #define saber_stop()\n@@ -4947,23 +4948,23 @@ main (argc, argv)\n \n   if (object_name == (char *) 0 || had_errors || optind != argc - 1)\n     {\n-      fprintf (stderr, \"Calling Sequence:\\n\");\n-      fprintf (stderr, \"\\tmips-tfile [-d <num>] [-v] [-i <o-in-file>] -o <o-out-file> <s-file> (or)\\n\");\n-      fprintf (stderr, \"\\tmips-tfile [-d <num>] [-v] [-I <o-in-file>] -o <o-out-file> <s-file> (or)\\n\");\n-      fprintf (stderr, \"\\tmips-tfile [-d <num>] [-v] <s-file> <o-in-file> <o-out-file>\\n\");\n+      fprintf (stderr, _(\"Calling Sequence:\\n\"));\n+      fprintf (stderr, _(\"\\tmips-tfile [-d <num>] [-v] [-i <o-in-file>] -o <o-out-file> <s-file> (or)\\n\"));\n+      fprintf (stderr, _(\"\\tmips-tfile [-d <num>] [-v] [-I <o-in-file>] -o <o-out-file> <s-file> (or)\\n\"));\n+      fprintf (stderr, _(\"\\tmips-tfile [-d <num>] [-v] <s-file> <o-in-file> <o-out-file>\\n\"));\n       fprintf (stderr, \"\\n\");\n-      fprintf (stderr, \"Debug levels are:\\n\");\n-      fprintf (stderr, \"    1\\tGeneral debug + trace functions/blocks.\\n\");\n-      fprintf (stderr, \"    2\\tDebug level 1 + trace externals.\\n\");\n-      fprintf (stderr, \"    3\\tDebug level 2 + trace all symbols.\\n\");\n-      fprintf (stderr, \"    4\\tDebug level 3 + trace memory allocations.\\n\");\n+      fprintf (stderr, _(\"Debug levels are:\\n\"));\n+      fprintf (stderr, _(\"    1\\tGeneral debug + trace functions/blocks.\\n\"));\n+      fprintf (stderr, _(\"    2\\tDebug level 1 + trace externals.\\n\"));\n+      fprintf (stderr, _(\"    3\\tDebug level 2 + trace all symbols.\\n\"));\n+      fprintf (stderr, _(\"    4\\tDebug level 3 + trace memory allocations.\\n\"));\n       return 1;\n     }\n \n \n   if (version)\n     {\n-      fprintf (stderr, \"mips-tfile version %s\", version_string);\n+      fprintf (stderr, _(\"mips-tfile version %s\"), version_string);\n #ifdef TARGET_VERSION\n       TARGET_VERSION;\n #endif"}, {"sha": "cf889640c052dd582b2b00cc2737b8e4e8ea1adc", "filename": "gcc/rtl.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e4adfbabc05f6e37ed5ae233b0a43f144fef4f6/gcc%2Frtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e4adfbabc05f6e37ed5ae233b0a43f144fef4f6/gcc%2Frtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.c?ref=5e4adfbabc05f6e37ed5ae233b0a43f144fef4f6", "patch": "@@ -684,26 +684,26 @@ int read_rtx_lineno = 1;\n const char *read_rtx_filename = \"<unknown>\";\n \n static void\n-fatal_with_file_and_line VPARAMS ((FILE *infile, const char *msg, ...))\n+fatal_with_file_and_line VPARAMS ((FILE *infile, const char *msgid, ...))\n {\n #ifndef ANSI_PROTOTYPES\n   FILE *infile;\n-  const char *msg;\n+  const char *msgid;\n #endif\n   va_list ap;\n   char context[64];\n   size_t i;\n   int c;\n \n-  VA_START (ap, msg);\n+  VA_START (ap, msgid);\n \n #ifndef ANSI_PROTOTYPES\n   infile = va_arg (ap, FILE *);\n   msg = va_arg (ap, const char *);\n #endif\n \n   fprintf (stderr, \"%s:%d: \", read_rtx_filename, read_rtx_lineno);\n-  vfprintf (stderr, msg, ap);\n+  vfprintf (stderr, _(msgid), ap);\n   putc ('\\n', stderr);\n \n   /* Gather some following context.  */\n@@ -718,7 +718,7 @@ fatal_with_file_and_line VPARAMS ((FILE *infile, const char *msg, ...))\n     }\n   context[i] = '\\0';\n \n-  fprintf (stderr, \"%s:%d: following context is `%s'\\n\",\n+  fprintf (stderr, _(\"%s:%d: following context is `%s'\\n\"),\n \t   read_rtx_filename, read_rtx_lineno, context);\n \n   va_end (ap);"}, {"sha": "44526cb4cbae1e9231580d49b86b663cd327c308", "filename": "gcc/timevar.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e4adfbabc05f6e37ed5ae233b0a43f144fef4f6/gcc%2Ftimevar.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e4adfbabc05f6e37ed5ae233b0a43f144fef4f6/gcc%2Ftimevar.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftimevar.c?ref=5e4adfbabc05f6e37ed5ae233b0a43f144fef4f6", "patch": "@@ -427,7 +427,7 @@ timevar_print (fp)\n      TIMEVAR. */\n   start_time = now;\n \n-  fprintf (fp, \"\\nExecution times (seconds)\\n\");\n+  fprintf (fp, _(\"\\nExecution times (seconds)\\n\"));\n   for (id = 0; id < TIMEVAR_LAST; ++id)\n     {\n       struct timevar_def *tv = &timevars[id];\n@@ -475,7 +475,7 @@ timevar_print (fp)\n     }\n \n   /* Print total time.  */\n-  fprintf (fp, \" TOTAL                 :\");\n+  fprintf (fp, _(\" TOTAL                 :\"));\n #ifdef HAVE_USER_TIME\n   fprintf (fp, \"%4ld.%02ld          \", \n \t   total->user / 1000000, (total->user % 1000000) / 10000);\n@@ -514,7 +514,7 @@ print_time (str, total)\n {\n   long all_time = get_run_time ();\n   fprintf (stderr,\n-\t   \"time in %s: %ld.%06ld (%ld%%)\\n\",\n+\t   _(\"time in %s: %ld.%06ld (%ld%%)\\n\"),\n \t   str, total / 1000000, total % 1000000,\n  \t   all_time == 0 ? 0\n  \t   : (long) (((100.0 * (double) total) / (double) all_time) + .5));"}, {"sha": "cafa0c6978ce96c6eb2bbb5dc2c888a5307d9aba", "filename": "gcc/tlink.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e4adfbabc05f6e37ed5ae233b0a43f144fef4f6/gcc%2Ftlink.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e4adfbabc05f6e37ed5ae233b0a43f144fef4f6/gcc%2Ftlink.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftlink.c?ref=5e4adfbabc05f6e37ed5ae233b0a43f144fef4f6", "patch": "@@ -424,7 +424,7 @@ read_repo_file (f)\n   FILE *stream = fopen ((char*) f->root.key, \"r\");\n \n   if (tlink_verbose >= 2)\n-    fprintf (stderr, \"collect: reading %s\\n\", \n+    fprintf (stderr, _(\"collect: reading %s\\n\"), \n \t     (char*) f->root.key);\n \n   while (fscanf (stream, \"%c \", &c) == 1)\n@@ -525,7 +525,7 @@ recompile_files ()\n       command = obstack_copy0 (&temporary_obstack, f->main, strlen (f->main));\n \n       if (tlink_verbose)\n-\tfprintf (stderr, \"collect: recompiling %s\\n\", f->main);\n+\tfprintf (stderr, _(\"collect: recompiling %s\\n\"), f->main);\n       if (tlink_verbose >= 3)\n \tfprintf (stderr, \"%s\\n\", command);\n \n@@ -676,7 +676,7 @@ scan_linker_output (fname)\n       if (sym && !sym->tweaking)\n \t{\n \t  if (tlink_verbose >= 2)\n-\t    fprintf (stderr, \"collect: tweaking %s in %s\\n\",\n+\t    fprintf (stderr, _(\"collect: tweaking %s in %s\\n\"),\n \t\t     (char*) sym->root.key, (char*) sym->file->root.key);\n \t  sym->tweaking = 1;\n \t  file_push (sym->file);\n@@ -723,7 +723,7 @@ do_tlink (ld_argv, object_lst)\n \t    if (! recompile_files ())\n \t      break;\n \t    if (tlink_verbose)\n-\t      fprintf (stderr, \"collect: relinking\\n\");\n+\t      fprintf (stderr, _(\"collect: relinking\\n\"));\n \t    exit = tlink_execute (\"ld\", ld_argv, ldout);\n \t  }\n     }"}, {"sha": "87c80fcc4b51a07f0dc3a93e1cde3351d9cf748d", "filename": "gcc/toplev.c", "status": "modified", "additions": 41, "deletions": 40, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e4adfbabc05f6e37ed5ae233b0a43f144fef4f6/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e4adfbabc05f6e37ed5ae233b0a43f144fef4f6/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=5e4adfbabc05f6e37ed5ae233b0a43f144fef4f6", "patch": "@@ -3696,15 +3696,15 @@ display_help ()\n   const char * lang;\n   \n #ifndef USE_CPPLIB  \n-  printf (\"Usage: %s input [switches]\\n\", progname);\n-  printf (\"Switches:\\n\");\n+  printf (_(\"Usage: %s input [switches]\\n\"), progname);\n+  printf (_(\"Switches:\\n\"));\n #endif\n-  printf (\"  -ffixed-<register>      Mark <register> as being unavailable to the compiler\\n\");\n-  printf (\"  -fcall-used-<register>  Mark <register> as being corrupted by function calls\\n\");\n-  printf (\"  -fcall-saved-<register> Mark <register> as being preserved across functions\\n\");\n-  printf (\"  -finline-limit=<number> Limits the size of inlined functions to <number>\\n\");\n-  printf (\"  -fmessage-length=<number> Limits diagnostics messages lengths to <number> characters per line.  0 suppresses line-wrapping\\n\");\n-  printf (\"  -fdiagnostics-show-location=[once | never] Indicates how often source location information should be emitted, as prefix, at the beginning of diagnostics when line-wrapping\\n\");\n+  printf (_(\"  -ffixed-<register>      Mark <register> as being unavailable to the compiler\\n\"));\n+  printf (_(\"  -fcall-used-<register>  Mark <register> as being corrupted by function calls\\n\"));\n+  printf (_(\"  -fcall-saved-<register> Mark <register> as being preserved across functions\\n\"));\n+  printf (_(\"  -finline-limit=<number> Limits the size of inlined functions to <number>\\n\"));\n+  printf (_(\"  -fmessage-length=<number> Limits diagnostics messages lengths to <number> characters per line.  0 suppresses line-wrapping\\n\"));\n+  printf (_(\"  -fdiagnostics-show-location=[once | never] Indicates how often source location information should be emitted, as prefix, at the beginning of diagnostics when line-wrapping\\n\"));\n \n   for (i = NUM_ELEM (f_options); i--;)\n     {\n@@ -3715,12 +3715,12 @@ display_help ()\n \t\tf_options[i].string, description);\n     }\n   \n-  printf (\"  -O[number]              Set optimisation level to [number]\\n\");\n-  printf (\"  -Os                     Optimise for space rather than speed\\n\");\n-  printf (\"  -pedantic               Issue warnings needed by strict compliance to ANSI C\\n\");\n-  printf (\"  -pedantic-errors        Like -pedantic except that errors are produced\\n\");\n-  printf (\"  -w                      Suppress warnings\\n\");\n-  printf (\"  -W                      Enable extra warnings\\n\");\n+  printf (_(\"  -O[number]              Set optimisation level to [number]\\n\"));\n+  printf (_(\"  -Os                     Optimise for space rather than speed\\n\"));\n+  printf (_(\"  -pedantic               Issue warnings needed by strict compliance to ANSI C\\n\"));\n+  printf (_(\"  -pedantic-errors        Like -pedantic except that errors are produced\\n\"));\n+  printf (_(\"  -w                      Suppress warnings\\n\"));\n+  printf (_(\"  -W                      Enable extra warnings\\n\"));\n   \n   for (i = NUM_ELEM (W_options); i--;)\n     {\n@@ -3731,35 +3731,36 @@ display_help ()\n \t\tW_options[i].string, description);\n     }\n   \n-  printf (\"  -Wunused                Enable unused warnings\\n\");\n-  printf (\"  -Wid-clash-<num>        Warn if 2 identifiers have the same first <num> chars\\n\");\n-  printf (\"  -Wlarger-than-<number>  Warn if an object is larger than <number> bytes\\n\");\n-  printf (\"  -p                      Enable function profiling\\n\");\n+  printf (_(\"  -Wunused                Enable unused warnings\\n\"));\n+  printf (_(\"  -Wid-clash-<num>        Warn if 2 identifiers have the same first <num> chars\\n\"));\n+  printf (_(\"  -Wlarger-than-<number>  Warn if an object is larger than <number> bytes\\n\"));\n+  printf (_(\"  -p                      Enable function profiling\\n\"));\n #if defined (BLOCK_PROFILER) || defined (FUNCTION_BLOCK_PROFILER)\n-  printf (\"  -a                      Enable block profiling \\n\");\n+  printf (_(\"  -a                      Enable block profiling \\n\"));\n #endif  \n #if defined (BLOCK_PROFILER) || defined (FUNCTION_BLOCK_PROFILER) || defined FUNCTION_BLOCK_PROFILER_EXIT\n-  printf (\"  -ax                     Enable jump profiling \\n\");\n+  printf (_(\"  -ax                     Enable jump profiling \\n\"));\n #endif  \n-  printf (\"  -o <file>               Place output into <file> \\n\");\n-  printf (\"  -G <number>             Put global and static data smaller than <number>\\n\");\n-  printf (\"                           bytes into a special section (on some targets)\\n\");\n+  printf (_(\"  -o <file>               Place output into <file> \\n\"));\n+  printf (_(\"\\\n+  -G <number>             Put global and static data smaller than <number>\\n\\\n+                          bytes into a special section (on some targets)\\n\"));\n   \n   for (i = NUM_ELEM (debug_args); i--;)\n     {\n       if (debug_args[i].description != NULL)\n \tprintf (\"  -g%-21s %s\\n\", debug_args[i].arg, debug_args[i].description);\n     }\n   \n-  printf (\"  -aux-info <file>        Emit declaration info into <file>.X\\n\");\n-  printf (\"  -quiet                  Do not display functions compiled or elapsed time\\n\");\n-  printf (\"  -version                Display the compiler's version\\n\");\n-  printf (\"  -d[letters]             Enable dumps from specific passes of the compiler\\n\");\n-  printf (\"  -dumpbase <file>        Base name to be used for dumps from specific passes\\n\");\n+  printf (_(\"  -aux-info <file>        Emit declaration info into <file>.X\\n\"));\n+  printf (_(\"  -quiet                  Do not display functions compiled or elapsed time\\n\"));\n+  printf (_(\"  -version                Display the compiler's version\\n\"));\n+  printf (_(\"  -d[letters]             Enable dumps from specific passes of the compiler\\n\"));\n+  printf (_(\"  -dumpbase <file>        Base name to be used for dumps from specific passes\\n\"));\n #if defined INSN_SCHEDULING\n-  printf (\"  -fsched-verbose=<number> Set the verbosity level of the scheduler\\n\");\n+  printf (_(\"  -fsched-verbose=<number> Set the verbosity level of the scheduler\\n\"));\n #endif\n-  printf (\"  --help                  Display this information\\n\");\n+  printf (_(\"  --help                  Display this information\\n\"));\n \n   undoc = 0;\n   lang  = \"language\";\n@@ -3774,7 +3775,7 @@ display_help ()\n   \n   if (NUM_ELEM (documented_lang_options) > 1)\n     {\n-      printf (\"\\nLanguage specific options:\\n\");\n+      printf (_(\"\\nLanguage specific options:\\n\"));\n \n       for (i = 0; i < NUM_ELEM (documented_lang_options); i++)\n \t{\n@@ -3786,19 +3787,19 @@ display_help ()\n \t      undoc = 1;\n \n \t      if (extra_warnings)\n-\t\tprintf (\"  %-23.23s [undocumented]\\n\", option);\n+\t\tprintf (_(\"  %-23.23s [undocumented]\\n\"), option);\n \t    }\n \t  else if (* description == 0)\n \t    continue;\n \t  else if (option == NULL)\n \t    {\n \t      if (undoc)\n \t\tprintf\n-\t\t  (\"\\nThere are undocumented %s specific options as well.\\n\",\n+\t\t  (_(\"\\nThere are undocumented %s specific options as well.\\n\"),\n \t\t\tlang);\n \t      undoc = 0;\n \t      \n-\t      printf (\"\\n Options for %s:\\n\", description);\n+\t      printf (_(\"\\n Options for %s:\\n\"), description);\n \n \t      lang = description;\n \t    }\n@@ -3808,7 +3809,7 @@ display_help ()\n     }\n \n   if (undoc)\n-    printf (\"\\nThere are undocumented %s specific options as well.\\n\", lang);\n+    printf (_(\"\\nThere are undocumented %s specific options as well.\\n\"), lang);\n \n   if (NUM_ELEM (target_switches) > 1\n #ifdef TARGET_OPTIONS\n@@ -3820,7 +3821,7 @@ display_help ()\n       \n       undoc = 0;\n   \n-      printf (\"\\nTarget specific options:\\n\");\n+      printf (_(\"\\nTarget specific options:\\n\"));\n \n       for (i = NUM_ELEM (target_switches); i--;)\n \t{\n@@ -3834,7 +3835,7 @@ display_help ()\n \t      undoc = 1;\n \t      \n \t      if (extra_warnings)\n-\t\tprintf (\"  -m%-21.21s [undocumented]\\n\", option);\n+\t\tprintf (_(\"  -m%-21.21s [undocumented]\\n\"), option);\n \t    }\n \t  else if (* description != 0)\n \t    doc += printf (\"  -m%-21.21s %s\\n\", option, description);\n@@ -3853,7 +3854,7 @@ display_help ()\n \t      undoc = 1;\n \t      \n \t      if (extra_warnings)\n-\t\tprintf (\"  -m%-21.21s [undocumented]\\n\", option);\n+\t\tprintf (_(\"  -m%-21.21s [undocumented]\\n\"), option);\n \t    }\n \t  else if (* description != 0)\n \t    doc += printf (\"  -m%-21.21s %s\\n\", option, description);\n@@ -3862,9 +3863,9 @@ display_help ()\n       if (undoc)\n \t{\n \t  if (doc)\n-\t    printf (\"\\nThere are undocumented target specific options as well.\\n\");\n+\t    printf (_(\"\\nThere are undocumented target specific options as well.\\n\"));\n \t  else\n-\t    printf (\"  They exist, but they are not documented.\\n\");\n+\t    printf (_(\"  They exist, but they are not documented.\\n\"));\n \t}\n     }\n }"}]}