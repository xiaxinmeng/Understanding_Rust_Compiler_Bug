{"sha": "7c99ecef0b605466c522f4c170811761339dac16", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2M5OWVjZWYwYjYwNTQ2NmM1MjJmNGMxNzA4MTE3NjEzMzlkYWMxNg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-09-29T11:26:46Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-09-29T11:26:46Z"}, "message": "tree.c (build_opaque_vector_type): Make opaque vectors variant types of the corresponding non-opaque type.\n\n2011-09-29  Richard Guenther  <rguenther@suse.de>\n\n\t* tree.c (build_opaque_vector_type): Make opaque vectors\n\tvariant types of the corresponding non-opaque type.  Make\n\tsure to share opaque vector types properly.\n\nFrom-SVN: r179341", "tree": {"sha": "8e4792c5afb79495862d51086e8f761ee701d601", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e4792c5afb79495862d51086e8f761ee701d601"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c99ecef0b605466c522f4c170811761339dac16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c99ecef0b605466c522f4c170811761339dac16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c99ecef0b605466c522f4c170811761339dac16", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c99ecef0b605466c522f4c170811761339dac16/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9b0c7202806ee655e11548dcd0c704b79cdf5bb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b0c7202806ee655e11548dcd0c704b79cdf5bb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b0c7202806ee655e11548dcd0c704b79cdf5bb4"}], "stats": {"total": 32, "additions": 25, "deletions": 7}, "files": [{"sha": "30fa460b1395ec16489635d6fb2173b0620f1df7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c99ecef0b605466c522f4c170811761339dac16/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c99ecef0b605466c522f4c170811761339dac16/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7c99ecef0b605466c522f4c170811761339dac16", "patch": "@@ -1,3 +1,9 @@\n+2011-09-29  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree.c (build_opaque_vector_type): Make opaque vectors\n+\tvariant types of the corresponding non-opaque type.  Make\n+\tsure to share opaque vector types properly.\n+\n 2011-09-29  David S. Miller  <davem@davemloft.net>\n \n \t* config/sparc/sparc.md (UNSPEC_ARRAY8, UNSPEC_ARRAY16,"}, {"sha": "bcdda5034aa7f4822cdd9a17afa665fb21e78b3d", "filename": "gcc/tree.c", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c99ecef0b605466c522f4c170811761339dac16/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c99ecef0b605466c522f4c170811761339dac16/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=7c99ecef0b605466c522f4c170811761339dac16", "patch": "@@ -9752,17 +9752,29 @@ build_vector_type (tree innertype, int nunits)\n   return make_vector_type (innertype, nunits, VOIDmode);\n }\n \n-/* Similarly, but takes the inner type and number of units, which must be\n-   a power of two.  */\n+/* Similarly, but builds a variant type with TYPE_VECTOR_OPAQUE set.  */\n \n tree\n build_opaque_vector_type (tree innertype, int nunits)\n {\n-  tree t;\n-  innertype = build_distinct_type_copy (innertype);\n-  t = make_vector_type (innertype, nunits, VOIDmode);\n-  TYPE_VECTOR_OPAQUE (t) = true;\n-  return t;\n+  tree t = make_vector_type (innertype, nunits, VOIDmode);\n+  tree cand;\n+  /* We always build the non-opaque variant before the opaque one,\n+     so if it already exists, it is TYPE_NEXT_VARIANT of this one.  */\n+  cand = TYPE_NEXT_VARIANT (t);\n+  if (cand\n+      && TYPE_VECTOR_OPAQUE (cand)\n+      && check_qualified_type (cand, t, TYPE_QUALS (t)))\n+    return cand;\n+  /* Othewise build a variant type and make sure to queue it after\n+     the non-opaque type.  */\n+  cand = build_distinct_type_copy (t);\n+  TYPE_VECTOR_OPAQUE (cand) = true;\n+  TYPE_CANONICAL (cand) = TYPE_CANONICAL (t);\n+  TYPE_NEXT_VARIANT (cand) = TYPE_NEXT_VARIANT (t);\n+  TYPE_NEXT_VARIANT (t) = cand;\n+  TYPE_MAIN_VARIANT (cand) = TYPE_MAIN_VARIANT (t);\n+  return cand;\n }\n \n "}]}