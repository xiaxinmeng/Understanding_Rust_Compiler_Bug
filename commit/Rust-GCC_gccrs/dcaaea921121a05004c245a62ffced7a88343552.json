{"sha": "dcaaea921121a05004c245a62ffced7a88343552", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGNhYWVhOTIxMTIxYTA1MDA0YzI0NWE2MmZmY2VkN2E4ODM0MzU1Mg==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1991-12-05T15:39:53Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1991-12-05T15:39:53Z"}, "message": "Initial revision\n\nFrom-SVN: r101", "tree": {"sha": "9082b64f904296f1bff79e15fb3dc800d66ad1eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9082b64f904296f1bff79e15fb3dc800d66ad1eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dcaaea921121a05004c245a62ffced7a88343552", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcaaea921121a05004c245a62ffced7a88343552", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcaaea921121a05004c245a62ffced7a88343552", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcaaea921121a05004c245a62ffced7a88343552/comments", "author": null, "committer": null, "parents": [{"sha": "175160e7aaf4fd3dda9a76ba86602cf37dd2d23d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/175160e7aaf4fd3dda9a76ba86602cf37dd2d23d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/175160e7aaf4fd3dda9a76ba86602cf37dd2d23d"}], "stats": {"total": 61, "additions": 61, "deletions": 0}, "files": [{"sha": "d627ee39d1f9bfed89ad13594454ece8d301944a", "filename": "gcc/glimits.h", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcaaea921121a05004c245a62ffced7a88343552/gcc%2Fglimits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcaaea921121a05004c245a62ffced7a88343552/gcc%2Fglimits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fglimits.h?ref=dcaaea921121a05004c245a62ffced7a88343552", "patch": "@@ -0,0 +1,61 @@\n+/* Number of bits in a `char'.  */\n+#undef CHAR_BIT\n+#define CHAR_BIT 8\n+\n+/* No multibyte characters supported yet.  */\n+#undef MB_LEN_MAX\n+#define MB_LEN_MAX 1\n+\n+/* Minimum and maximum values a `signed char' can hold.  */\n+#undef SCHAR_MIN\n+#define SCHAR_MIN (-128)\n+#undef SCHAR_MAX\n+#define SCHAR_MAX 127\n+\n+/* Maximum value an `unsigned char' can hold.  (Minimum is 0).  */\n+#undef UCHAR_MAX\n+#define UCHAR_MAX 255\n+\n+/* Minimum and maximum values a `char' can hold.  */\n+#ifdef __CHAR_UNSIGNED__\n+#undef CHAR_MIN\n+#define CHAR_MIN 0\n+#undef CHAR_MAX\n+#define CHAR_MAX 255\n+#else\n+#undef CHAR_MIN\n+#define CHAR_MIN (-128)\n+#undef CHAR_MAX\n+#define CHAR_MAX 127\n+#endif\n+\n+/* Minimum and maximum values a `signed short int' can hold.  */\n+#undef SHRT_MIN\n+#define SHRT_MIN (-32768)\n+#undef SHRT_MAX\n+#define SHRT_MAX 32767\n+\n+/* Maximum value an `unsigned short int' can hold.  (Minimum is 0).  */\n+#undef USHRT_MAX\n+#define USHRT_MAX 65535\n+\n+/* Minimum and maximum values a `signed int' can hold.  */\n+#undef INT_MIN\n+#define INT_MIN (-INT_MAX-1)\n+#undef INT_MAX\n+#define INT_MAX 2147483647\n+\n+/* Maximum value an `unsigned int' can hold.  (Minimum is 0).  */\n+#undef UINT_MAX\n+#define UINT_MAX 4294967295U\n+\n+/* Minimum and maximum values a `signed long int' can hold.\n+   (Same as `int').  */\n+#undef LONG_MIN\n+#define LONG_MIN (-LONG_MAX-1)\n+#undef LONG_MAX\n+#define LONG_MAX 2147483647L\n+\n+/* Maximum value an `unsigned long int' can hold.  (Minimum is 0).  */\n+#undef ULONG_MAX\n+#define ULONG_MAX 4294967295UL"}]}