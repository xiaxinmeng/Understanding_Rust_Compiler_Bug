{"sha": "ac193ee73ca85cae3e7c761f1bda491620b4ccab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWMxOTNlZTczY2E4NWNhZTNlN2M3NjFmMWJkYTQ5MTYyMGI0Y2NhYg==", "commit": {"author": {"name": "Louis Krupp", "email": "louis.krupp@zoho.com", "date": "2016-10-07T02:02:13Z"}, "committer": {"name": "Louis Krupp", "email": "lkrupp@gcc.gnu.org", "date": "2016-10-07T02:02:13Z"}, "message": "2016_10-06  Louis Krupp  <louis.krupp@zoho.com>\n\n\tPR fortran/57910\n\t* gfortran.dg/pr57910.f90: New test.\n\n2016-10-05  Louis Krupp  <louis.krupp@zoho.com>\n\n\tPR fortran/57910\n\t* trans-expr.c (gfc_add_interface_mapping): Don't try to\n\tdereference call-by-value scalar argument\n\nFrom-SVN: r240850", "tree": {"sha": "119ae41e8db5840e6f6ee3f69e192e2ea3f6b7d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/119ae41e8db5840e6f6ee3f69e192e2ea3f6b7d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac193ee73ca85cae3e7c761f1bda491620b4ccab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac193ee73ca85cae3e7c761f1bda491620b4ccab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac193ee73ca85cae3e7c761f1bda491620b4ccab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac193ee73ca85cae3e7c761f1bda491620b4ccab/comments", "author": null, "committer": null, "parents": [{"sha": "fe37b0f08625cc57b5a92578dfa518100d3171e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe37b0f08625cc57b5a92578dfa518100d3171e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe37b0f08625cc57b5a92578dfa518100d3171e1"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "874779b92dd0fc49ff9b0075e75784c136b8a6e8", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac193ee73ca85cae3e7c761f1bda491620b4ccab/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac193ee73ca85cae3e7c761f1bda491620b4ccab/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ac193ee73ca85cae3e7c761f1bda491620b4ccab", "patch": "@@ -1,3 +1,9 @@\n+2016-10-05  Louis Krupp  <louis.krupp@zoho.com>\n+\n+\tPR fortran/57910\n+\t* trans-expr.c (gfc_add_interface_mapping): Don't try to\n+\tdereference call-by-value scalar argument\n+\n 2016-10-05  Steven G. Kargl  <kargls@gcc.gnu.org>\n \n \tPR fortran/58991"}, {"sha": "1de2818a6b203b9c7eeb597079ce2b7922f2e61b", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac193ee73ca85cae3e7c761f1bda491620b4ccab/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac193ee73ca85cae3e7c761f1bda491620b4ccab/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=ac193ee73ca85cae3e7c761f1bda491620b4ccab", "patch": "@@ -4009,6 +4009,10 @@ gfc_add_interface_mapping (gfc_interface_mapping * mapping,\n   if (sym->attr.flavor == FL_PROCEDURE)\n     value = se->expr;\n \n+  /* If the argument is a pass-by-value scalar, use the value as is.  */\n+  else if (!sym->attr.dimension && sym->attr.value)\n+    value = se->expr;\n+\n   /* If the argument is either a string or a pointer to a string,\n      convert it to a boundless character type.  */\n   else if (!sym->attr.dimension && sym->ts.type == BT_CHARACTER)"}, {"sha": "18c1a17242fbf3f054cd971b2ebfbac6210a8fbc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac193ee73ca85cae3e7c761f1bda491620b4ccab/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac193ee73ca85cae3e7c761f1bda491620b4ccab/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ac193ee73ca85cae3e7c761f1bda491620b4ccab", "patch": "@@ -1,3 +1,8 @@\n+2016_10-06  Louis Krupp  <louis.krupp@zoho.com>\n+\n+\tPR fortran/57910\n+\t* gfortran.dg/pr57910.f90: New test.\n+\n 2016-10-06  Jakub Jelinek  <jakub@redhat.com>\n \n \t* g++.dg/cpp1z/has-unique-obj-representations1.C: New test."}, {"sha": "c3666a6fcd8978f7d2bf93366c6f0965c32ba855", "filename": "gcc/testsuite/gfortran.dg/pr57910.f90", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac193ee73ca85cae3e7c761f1bda491620b4ccab/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr57910.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac193ee73ca85cae3e7c761f1bda491620b4ccab/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr57910.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr57910.f90?ref=ac193ee73ca85cae3e7c761f1bda491620b4ccab", "patch": "@@ -0,0 +1,26 @@\n+! { dg-do run }\n+program strtest\n+\n+  implicit none\n+\n+  character(len=:), allocatable:: my_str\n+\n+  integer, parameter :: slen_init = 7\n+  integer :: slen = slen_init\n+\n+  my_str = fstr(slen)\n+  if (slen /= slen_init .or. len(my_str) /= slen .or. my_str /= ' ') then\n+    call abort\n+  endif\n+\n+contains\n+\n+  function fstr(strlen)\n+    integer, value :: strlen\n+    character(len=strlen)::fstr\n+\n+    strlen = 17  ! Make sure strlen was really passed by value\n+    fstr = ' '\n+  end function fstr\n+\n+end program strtest"}]}