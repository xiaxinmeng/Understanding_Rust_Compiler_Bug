{"sha": "afc41460c20441cf4a8d7af1288502a4694bd149", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZjNDE0NjBjMjA0NDFjZjRhOGQ3YWYxMjg4NTAyYTQ2OTRiZDE0OQ==", "commit": {"author": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2003-02-19T02:37:29Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2003-02-19T02:37:29Z"}, "message": "reordered fixes\n\nFrom-SVN: r63085", "tree": {"sha": "bc4b26d996bf26725891c647b255910ef54e48bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc4b26d996bf26725891c647b255910ef54e48bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/afc41460c20441cf4a8d7af1288502a4694bd149", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afc41460c20441cf4a8d7af1288502a4694bd149", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afc41460c20441cf4a8d7af1288502a4694bd149", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afc41460c20441cf4a8d7af1288502a4694bd149/comments", "author": null, "committer": null, "parents": [{"sha": "9f3a9a0809f65d74496810557542663a3ceabe0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f3a9a0809f65d74496810557542663a3ceabe0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f3a9a0809f65d74496810557542663a3ceabe0e"}], "stats": {"total": 364, "additions": 182, "deletions": 182}, "files": [{"sha": "ba29403d9031a573efc2580050f01ecd25d5a76c", "filename": "gcc/fixinc/fixincl.x", "status": "modified", "additions": 182, "deletions": 182, "changes": 364, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afc41460c20441cf4a8d7af1288502a4694bd149/gcc%2Ffixinc%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afc41460c20441cf4a8d7af1288502a4694bd149/gcc%2Ffixinc%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.x?ref=afc41460c20441cf4a8d7af1288502a4694bd149", "patch": "@@ -1660,81 +1660,155 @@ static const char* apzHpux11_Cpp_Pow_InlinePatch[] = {\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n- *  Description of Hpux11_Abs fix\n+ *  Description of Hpux10_Ctype_Declarations1 fix\n  */\n-tSCC zHpux11_AbsName[] =\n-     \"hpux11_abs\";\n+tSCC zHpux10_Ctype_Declarations1Name[] =\n+     \"hpux10_ctype_declarations1\";\n \n /*\n  *  File name selection pattern\n  */\n-tSCC zHpux11_AbsList[] =\n-  \"|stdlib.h|\";\n+tSCC zHpux10_Ctype_Declarations1List[] =\n+  \"|ctype.h|\";\n /*\n  *  Machine/OS name selection pattern\n  */\n-tSCC* apzHpux11_AbsMachs[] = {\n-        \"ia64-hp-hpux11*\",\n-        (const char*)NULL };\n+#define apzHpux10_Ctype_Declarations1Machs (const char**)NULL\n \n /*\n  *  content selection pattern - do fix if pattern found\n  */\n-tSCC zHpux11_AbsSelect0[] =\n-       \"ifndef _MATH_INCLUDED\";\n+tSCC zHpux10_Ctype_Declarations1Select0[] =\n+       \"^#[ \\t]*define _toupper\\\\(__c\\\\)[ \\t]*__toupper\\\\(__c\\\\)\";\n \n-#define    HPUX11_ABS_TEST_CT  1\n-static tTestDesc aHpux11_AbsTests[] = {\n-  { TT_EGREP,    zHpux11_AbsSelect0, (regex_t*)NULL }, };\n+/*\n+ *  content bypass pattern - skip fix if pattern found\n+ */\n+tSCC zHpux10_Ctype_Declarations1Bypass0[] =\n+       \"^[ \\t]*extern[ \\t]*int[ \\t]*__tolower[ \\t]*\\\\(\";\n+\n+#define    HPUX10_CTYPE_DECLARATIONS1_TEST_CT  2\n+static tTestDesc aHpux10_Ctype_Declarations1Tests[] = {\n+  { TT_NEGREP,   zHpux10_Ctype_Declarations1Bypass0, (regex_t*)NULL },\n+  { TT_EGREP,    zHpux10_Ctype_Declarations1Select0, (regex_t*)NULL }, };\n \n /*\n- *  Fix Command Arguments for Hpux11_Abs\n+ *  Fix Command Arguments for Hpux10_Ctype_Declarations1\n  */\n-static const char* apzHpux11_AbsPatch[] = {\n+static const char* apzHpux10_Ctype_Declarations1Patch[] = {\n     \"format\",\n-    \"if !defined(_MATH_INCLUDED) || defined(__GNUG__)\",\n+    \"#ifdef _PROTOTYPES\\n\\\n+extern int __tolower(int);\\n\\\n+extern int __toupper(int);\\n\\\n+#else /* NOT _PROTOTYPES */\\n\\\n+extern int __tolower();\\n\\\n+extern int __toupper();\\n\\\n+#endif /* _PROTOTYPES */\\n\\n\\\n+%0\\n\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n- *  Description of Hpux_Long_Double fix\n+ *  Description of Hpux10_Ctype_Declarations2 fix\n  */\n-tSCC zHpux_Long_DoubleName[] =\n-     \"hpux_long_double\";\n+tSCC zHpux10_Ctype_Declarations2Name[] =\n+     \"hpux10_ctype_declarations2\";\n \n /*\n  *  File name selection pattern\n  */\n-tSCC zHpux_Long_DoubleList[] =\n-  \"|stdlib.h|\";\n+tSCC zHpux10_Ctype_Declarations2List[] =\n+  \"|ctype.h|\";\n /*\n  *  Machine/OS name selection pattern\n  */\n-#define apzHpux_Long_DoubleMachs (const char**)NULL\n+#define apzHpux10_Ctype_Declarations2Machs (const char**)NULL\n \n /*\n  *  content selection pattern - do fix if pattern found\n  */\n-tSCC zHpux_Long_DoubleSelect0[] =\n-       \"extern[ \\t]long_double[ \\t]strtold\";\n+tSCC zHpux10_Ctype_Declarations2Select0[] =\n+       \"^#  if defined\\\\(_SB_CTYPE_MACROS\\\\) && \\\\!defined\\\\(__lint\\\\)\";\n \n /*\n  *  content bypass pattern - skip fix if pattern found\n  */\n-tSCC zHpux_Long_DoubleBypass0[] =\n-       \"long_double_t\";\n+tSCC zHpux10_Ctype_Declarations2Bypass0[] =\n+       \"^[ \\t]*extern[ \\t]*int[ \\t]*_isalnum[ \\t]*\\\\(\";\n \n-#define    HPUX_LONG_DOUBLE_TEST_CT  2\n-static tTestDesc aHpux_Long_DoubleTests[] = {\n-  { TT_NEGREP,   zHpux_Long_DoubleBypass0, (regex_t*)NULL },\n-  { TT_EGREP,    zHpux_Long_DoubleSelect0, (regex_t*)NULL }, };\n+#define    HPUX10_CTYPE_DECLARATIONS2_TEST_CT  2\n+static tTestDesc aHpux10_Ctype_Declarations2Tests[] = {\n+  { TT_NEGREP,   zHpux10_Ctype_Declarations2Bypass0, (regex_t*)NULL },\n+  { TT_EGREP,    zHpux10_Ctype_Declarations2Select0, (regex_t*)NULL }, };\n \n /*\n- *  Fix Command Arguments for Hpux_Long_Double\n+ *  Fix Command Arguments for Hpux10_Ctype_Declarations2\n  */\n-static const char* apzHpux_Long_DoublePatch[] = { \"sed\",\n-    \"-e\", \"/^#[ \\t]*ifndef _LONG_DOUBLE/,/\\\\/\\\\* _LONG_DOUBLE \\\\*\\\\//D\",\n-    \"-e\", \"s/long_double/long double/g\",\n+static const char* apzHpux10_Ctype_Declarations2Patch[] = {\n+    \"format\",\n+    \"%0\\n\\n\\\n+#ifdef _PROTOTYPES\\n\\\n+     extern int _isalnum(int);\\n\\\n+     extern int _isalpha(int);\\n\\\n+     extern int _iscntrl(int);\\n\\\n+     extern int _isdigit(int);\\n\\\n+     extern int _isgraph(int);\\n\\\n+     extern int _islower(int);\\n\\\n+     extern int _isprint(int);\\n\\\n+     extern int _ispunct(int);\\n\\\n+     extern int _isspace(int);\\n\\\n+     extern int _isupper(int);\\n\\\n+     extern int _isxdigit(int);\\n\\\n+#  else /* not _PROTOTYPES */\\n\\\n+     extern int _isalnum();\\n\\\n+     extern int _isalpha();\\n\\\n+     extern int _iscntrl();\\n\\\n+     extern int _isdigit();\\n\\\n+     extern int _isgraph();\\n\\\n+     extern int _islower();\\n\\\n+     extern int _isprint();\\n\\\n+     extern int _ispunct();\\n\\\n+     extern int _isspace();\\n\\\n+     extern int _isupper();\\n\\\n+     extern int _isxdigit();\\n\\\n+#endif /* _PROTOTYPES */\\n\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Hpux11_Abs fix\n+ */\n+tSCC zHpux11_AbsName[] =\n+     \"hpux11_abs\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zHpux11_AbsList[] =\n+  \"|stdlib.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzHpux11_AbsMachs[] = {\n+        \"ia64-hp-hpux11*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zHpux11_AbsSelect0[] =\n+       \"ifndef _MATH_INCLUDED\";\n+\n+#define    HPUX11_ABS_TEST_CT  1\n+static tTestDesc aHpux11_AbsTests[] = {\n+  { TT_EGREP,    zHpux11_AbsSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Hpux11_Abs\n+ */\n+static const char* apzHpux11_AbsPatch[] = {\n+    \"format\",\n+    \"if !defined(_MATH_INCLUDED) || defined(__GNUG__)\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1854,118 +1928,74 @@ static const char* apzHpux11_Uint32_CPatch[] = {\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n- *  Description of Hpux10_Ctype_Declarations1 fix\n+ *  Description of Hpux11_Vsnprintf fix\n  */\n-tSCC zHpux10_Ctype_Declarations1Name[] =\n-     \"hpux10_ctype_declarations1\";\n+tSCC zHpux11_VsnprintfName[] =\n+     \"hpux11_vsnprintf\";\n \n /*\n  *  File name selection pattern\n  */\n-tSCC zHpux10_Ctype_Declarations1List[] =\n-  \"|ctype.h|\";\n+tSCC zHpux11_VsnprintfList[] =\n+  \"|stdio.h|\";\n /*\n  *  Machine/OS name selection pattern\n  */\n-#define apzHpux10_Ctype_Declarations1Machs (const char**)NULL\n+#define apzHpux11_VsnprintfMachs (const char**)NULL\n \n /*\n  *  content selection pattern - do fix if pattern found\n  */\n-tSCC zHpux10_Ctype_Declarations1Select0[] =\n-       \"^#[ \\t]*define _toupper\\\\(__c\\\\)[ \\t]*__toupper\\\\(__c\\\\)\";\n-\n-/*\n- *  content bypass pattern - skip fix if pattern found\n- */\n-tSCC zHpux10_Ctype_Declarations1Bypass0[] =\n-       \"^[ \\t]*extern[ \\t]*int[ \\t]*__tolower[ \\t]*\\\\(\";\n+tSCC zHpux11_VsnprintfSelect0[] =\n+       \"(extern int vsnprintf\\\\(char \\\\*, _[hpux]*_size_t, const char \\\\*,) __va__list\\\\);\";\n \n-#define    HPUX10_CTYPE_DECLARATIONS1_TEST_CT  2\n-static tTestDesc aHpux10_Ctype_Declarations1Tests[] = {\n-  { TT_NEGREP,   zHpux10_Ctype_Declarations1Bypass0, (regex_t*)NULL },\n-  { TT_EGREP,    zHpux10_Ctype_Declarations1Select0, (regex_t*)NULL }, };\n+#define    HPUX11_VSNPRINTF_TEST_CT  1\n+static tTestDesc aHpux11_VsnprintfTests[] = {\n+  { TT_EGREP,    zHpux11_VsnprintfSelect0, (regex_t*)NULL }, };\n \n /*\n- *  Fix Command Arguments for Hpux10_Ctype_Declarations1\n+ *  Fix Command Arguments for Hpux11_Vsnprintf\n  */\n-static const char* apzHpux10_Ctype_Declarations1Patch[] = {\n+static const char* apzHpux11_VsnprintfPatch[] = {\n     \"format\",\n-    \"#ifdef _PROTOTYPES\\n\\\n-extern int __tolower(int);\\n\\\n-extern int __toupper(int);\\n\\\n-#else /* NOT _PROTOTYPES */\\n\\\n-extern int __tolower();\\n\\\n-extern int __toupper();\\n\\\n-#endif /* _PROTOTYPES */\\n\\n\\\n-%0\\n\",\n+    \"%1 __va_list);\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n- *  Description of Hpux10_Ctype_Declarations2 fix\n+ *  Description of Hpux8_Bogus_Inlines fix\n  */\n-tSCC zHpux10_Ctype_Declarations2Name[] =\n-     \"hpux10_ctype_declarations2\";\n+tSCC zHpux8_Bogus_InlinesName[] =\n+     \"hpux8_bogus_inlines\";\n \n /*\n  *  File name selection pattern\n  */\n-tSCC zHpux10_Ctype_Declarations2List[] =\n-  \"|ctype.h|\";\n+tSCC zHpux8_Bogus_InlinesList[] =\n+  \"|math.h|\";\n /*\n  *  Machine/OS name selection pattern\n  */\n-#define apzHpux10_Ctype_Declarations2Machs (const char**)NULL\n+#define apzHpux8_Bogus_InlinesMachs (const char**)NULL\n \n /*\n  *  content selection pattern - do fix if pattern found\n  */\n-tSCC zHpux10_Ctype_Declarations2Select0[] =\n-       \"^#  if defined\\\\(_SB_CTYPE_MACROS\\\\) && \\\\!defined\\\\(__lint\\\\)\";\n-\n-/*\n- *  content bypass pattern - skip fix if pattern found\n- */\n-tSCC zHpux10_Ctype_Declarations2Bypass0[] =\n-       \"^[ \\t]*extern[ \\t]*int[ \\t]*_isalnum[ \\t]*\\\\(\";\n+tSCC zHpux8_Bogus_InlinesSelect0[] =\n+       \"inline\";\n \n-#define    HPUX10_CTYPE_DECLARATIONS2_TEST_CT  2\n-static tTestDesc aHpux10_Ctype_Declarations2Tests[] = {\n-  { TT_NEGREP,   zHpux10_Ctype_Declarations2Bypass0, (regex_t*)NULL },\n-  { TT_EGREP,    zHpux10_Ctype_Declarations2Select0, (regex_t*)NULL }, };\n+#define    HPUX8_BOGUS_INLINES_TEST_CT  1\n+static tTestDesc aHpux8_Bogus_InlinesTests[] = {\n+  { TT_EGREP,    zHpux8_Bogus_InlinesSelect0, (regex_t*)NULL }, };\n \n /*\n- *  Fix Command Arguments for Hpux10_Ctype_Declarations2\n+ *  Fix Command Arguments for Hpux8_Bogus_Inlines\n  */\n-static const char* apzHpux10_Ctype_Declarations2Patch[] = {\n-    \"format\",\n-    \"%0\\n\\n\\\n-#ifdef _PROTOTYPES\\n\\\n-     extern int _isalnum(int);\\n\\\n-     extern int _isalpha(int);\\n\\\n-     extern int _iscntrl(int);\\n\\\n-     extern int _isdigit(int);\\n\\\n-     extern int _isgraph(int);\\n\\\n-     extern int _islower(int);\\n\\\n-     extern int _isprint(int);\\n\\\n-     extern int _ispunct(int);\\n\\\n-     extern int _isspace(int);\\n\\\n-     extern int _isupper(int);\\n\\\n-     extern int _isxdigit(int);\\n\\\n-#  else /* not _PROTOTYPES */\\n\\\n-     extern int _isalnum();\\n\\\n-     extern int _isalpha();\\n\\\n-     extern int _iscntrl();\\n\\\n-     extern int _isdigit();\\n\\\n-     extern int _isgraph();\\n\\\n-     extern int _islower();\\n\\\n-     extern int _isprint();\\n\\\n-     extern int _ispunct();\\n\\\n-     extern int _isspace();\\n\\\n-     extern int _isupper();\\n\\\n-     extern int _isxdigit();\\n\\\n-#endif /* _PROTOTYPES */\\n\",\n+static const char* apzHpux8_Bogus_InlinesPatch[] = { \"sed\",\n+    \"-e\", \"s@inline int abs(int [a-z][a-z]*) {.*}@extern \\\"C\\\" int abs(int);@\",\n+    \"-e\", \"s@inline double abs(double [a-z][a-z]*) {.*}@@\",\n+    \"-e\", \"s@inline int sqr(int [a-z][a-z]*) {.*}@@\",\n+    \"-e\", \"s@inline double sqr(double [a-z][a-z]*) {.*}@@\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -2005,74 +2035,44 @@ static const char* apzHpux_Ctype_MacrosPatch[] = {\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n- *  Description of Hpux11_Vsnprintf fix\n+ *  Description of Hpux_Long_Double fix\n  */\n-tSCC zHpux11_VsnprintfName[] =\n-     \"hpux11_vsnprintf\";\n+tSCC zHpux_Long_DoubleName[] =\n+     \"hpux_long_double\";\n \n /*\n  *  File name selection pattern\n  */\n-tSCC zHpux11_VsnprintfList[] =\n-  \"|stdio.h|\";\n+tSCC zHpux_Long_DoubleList[] =\n+  \"|stdlib.h|\";\n /*\n  *  Machine/OS name selection pattern\n  */\n-#define apzHpux11_VsnprintfMachs (const char**)NULL\n+#define apzHpux_Long_DoubleMachs (const char**)NULL\n \n /*\n  *  content selection pattern - do fix if pattern found\n  */\n-tSCC zHpux11_VsnprintfSelect0[] =\n-       \"(extern int vsnprintf\\\\(char \\\\*, _[hpux]*_size_t, const char \\\\*,) __va__list\\\\);\";\n-\n-#define    HPUX11_VSNPRINTF_TEST_CT  1\n-static tTestDesc aHpux11_VsnprintfTests[] = {\n-  { TT_EGREP,    zHpux11_VsnprintfSelect0, (regex_t*)NULL }, };\n-\n-/*\n- *  Fix Command Arguments for Hpux11_Vsnprintf\n- */\n-static const char* apzHpux11_VsnprintfPatch[] = {\n-    \"format\",\n-    \"%1 __va_list);\",\n-    (char*)NULL };\n-\n-/* * * * * * * * * * * * * * * * * * * * * * * * * *\n- *\n- *  Description of Hpux8_Bogus_Inlines fix\n- */\n-tSCC zHpux8_Bogus_InlinesName[] =\n-     \"hpux8_bogus_inlines\";\n-\n-/*\n- *  File name selection pattern\n- */\n-tSCC zHpux8_Bogus_InlinesList[] =\n-  \"|math.h|\";\n-/*\n- *  Machine/OS name selection pattern\n- */\n-#define apzHpux8_Bogus_InlinesMachs (const char**)NULL\n+tSCC zHpux_Long_DoubleSelect0[] =\n+       \"extern[ \\t]long_double[ \\t]strtold\";\n \n /*\n- *  content selection pattern - do fix if pattern found\n+ *  content bypass pattern - skip fix if pattern found\n  */\n-tSCC zHpux8_Bogus_InlinesSelect0[] =\n-       \"inline\";\n+tSCC zHpux_Long_DoubleBypass0[] =\n+       \"long_double_t\";\n \n-#define    HPUX8_BOGUS_INLINES_TEST_CT  1\n-static tTestDesc aHpux8_Bogus_InlinesTests[] = {\n-  { TT_EGREP,    zHpux8_Bogus_InlinesSelect0, (regex_t*)NULL }, };\n+#define    HPUX_LONG_DOUBLE_TEST_CT  2\n+static tTestDesc aHpux_Long_DoubleTests[] = {\n+  { TT_NEGREP,   zHpux_Long_DoubleBypass0, (regex_t*)NULL },\n+  { TT_EGREP,    zHpux_Long_DoubleSelect0, (regex_t*)NULL }, };\n \n /*\n- *  Fix Command Arguments for Hpux8_Bogus_Inlines\n+ *  Fix Command Arguments for Hpux_Long_Double\n  */\n-static const char* apzHpux8_Bogus_InlinesPatch[] = { \"sed\",\n-    \"-e\", \"s@inline int abs(int [a-z][a-z]*) {.*}@extern \\\"C\\\" int abs(int);@\",\n-    \"-e\", \"s@inline double abs(double [a-z][a-z]*) {.*}@@\",\n-    \"-e\", \"s@inline int sqr(int [a-z][a-z]*) {.*}@@\",\n-    \"-e\", \"s@inline double sqr(double [a-z][a-z]*) {.*}@@\",\n+static const char* apzHpux_Long_DoublePatch[] = { \"sed\",\n+    \"-e\", \"/^#[ \\t]*ifndef _LONG_DOUBLE/,/\\\\/\\\\* _LONG_DOUBLE \\\\*\\\\//D\",\n+    \"-e\", \"s/long_double/long double/g\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -5692,16 +5692,16 @@ typedef enum {\n     HP_SYSFILE_FIXIDX,\n     HPUX10_CPP_POW_INLINE_FIXIDX,\n     HPUX11_CPP_POW_INLINE_FIXIDX,\n+    HPUX10_CTYPE_DECLARATIONS1_FIXIDX,\n+    HPUX10_CTYPE_DECLARATIONS2_FIXIDX,\n     HPUX11_ABS_FIXIDX,\n-    HPUX_LONG_DOUBLE_FIXIDX,\n     HPUX11_FABSF_FIXIDX,\n     HPUX11_SIZE_T_FIXIDX,\n     HPUX11_UINT32_C_FIXIDX,\n-    HPUX10_CTYPE_DECLARATIONS1_FIXIDX,\n-    HPUX10_CTYPE_DECLARATIONS2_FIXIDX,\n-    HPUX_CTYPE_MACROS_FIXIDX,\n     HPUX11_VSNPRINTF_FIXIDX,\n     HPUX8_BOGUS_INLINES_FIXIDX,\n+    HPUX_CTYPE_MACROS_FIXIDX,\n+    HPUX_LONG_DOUBLE_FIXIDX,\n     HPUX_MAXINT_FIXIDX,\n     HPUX_SYSTIME_FIXIDX,\n     INT_ABORT_FREE_AND_EXIT_FIXIDX,\n@@ -5994,16 +5994,21 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      HPUX11_CPP_POW_INLINE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aHpux11_Cpp_Pow_InlineTests,   apzHpux11_Cpp_Pow_InlinePatch, 0 },\n \n+  {  zHpux10_Ctype_Declarations1Name,    zHpux10_Ctype_Declarations1List,\n+     apzHpux10_Ctype_Declarations1Machs,\n+     HPUX10_CTYPE_DECLARATIONS1_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aHpux10_Ctype_Declarations1Tests,   apzHpux10_Ctype_Declarations1Patch, 0 },\n+\n+  {  zHpux10_Ctype_Declarations2Name,    zHpux10_Ctype_Declarations2List,\n+     apzHpux10_Ctype_Declarations2Machs,\n+     HPUX10_CTYPE_DECLARATIONS2_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aHpux10_Ctype_Declarations2Tests,   apzHpux10_Ctype_Declarations2Patch, 0 },\n+\n   {  zHpux11_AbsName,    zHpux11_AbsList,\n      apzHpux11_AbsMachs,\n      HPUX11_ABS_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aHpux11_AbsTests,   apzHpux11_AbsPatch, 0 },\n \n-  {  zHpux_Long_DoubleName,    zHpux_Long_DoubleList,\n-     apzHpux_Long_DoubleMachs,\n-     HPUX_LONG_DOUBLE_TEST_CT, FD_MACH_ONLY,\n-     aHpux_Long_DoubleTests,   apzHpux_Long_DoublePatch, 0 },\n-\n   {  zHpux11_FabsfName,    zHpux11_FabsfList,\n      apzHpux11_FabsfMachs,\n      HPUX11_FABSF_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n@@ -6019,21 +6024,6 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      HPUX11_UINT32_C_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aHpux11_Uint32_CTests,   apzHpux11_Uint32_CPatch, 0 },\n \n-  {  zHpux10_Ctype_Declarations1Name,    zHpux10_Ctype_Declarations1List,\n-     apzHpux10_Ctype_Declarations1Machs,\n-     HPUX10_CTYPE_DECLARATIONS1_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n-     aHpux10_Ctype_Declarations1Tests,   apzHpux10_Ctype_Declarations1Patch, 0 },\n-\n-  {  zHpux10_Ctype_Declarations2Name,    zHpux10_Ctype_Declarations2List,\n-     apzHpux10_Ctype_Declarations2Machs,\n-     HPUX10_CTYPE_DECLARATIONS2_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n-     aHpux10_Ctype_Declarations2Tests,   apzHpux10_Ctype_Declarations2Patch, 0 },\n-\n-  {  zHpux_Ctype_MacrosName,    zHpux_Ctype_MacrosList,\n-     apzHpux_Ctype_MacrosMachs,\n-     HPUX_CTYPE_MACROS_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n-     aHpux_Ctype_MacrosTests,   apzHpux_Ctype_MacrosPatch, 0 },\n-\n   {  zHpux11_VsnprintfName,    zHpux11_VsnprintfList,\n      apzHpux11_VsnprintfMachs,\n      HPUX11_VSNPRINTF_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n@@ -6044,6 +6034,16 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      HPUX8_BOGUS_INLINES_TEST_CT, FD_MACH_ONLY,\n      aHpux8_Bogus_InlinesTests,   apzHpux8_Bogus_InlinesPatch, 0 },\n \n+  {  zHpux_Ctype_MacrosName,    zHpux_Ctype_MacrosList,\n+     apzHpux_Ctype_MacrosMachs,\n+     HPUX_CTYPE_MACROS_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aHpux_Ctype_MacrosTests,   apzHpux_Ctype_MacrosPatch, 0 },\n+\n+  {  zHpux_Long_DoubleName,    zHpux_Long_DoubleList,\n+     apzHpux_Long_DoubleMachs,\n+     HPUX_LONG_DOUBLE_TEST_CT, FD_MACH_ONLY,\n+     aHpux_Long_DoubleTests,   apzHpux_Long_DoublePatch, 0 },\n+\n   {  zHpux_MaxintName,    zHpux_MaxintList,\n      apzHpux_MaxintMachs,\n      HPUX_MAXINT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}]}