{"sha": "f71c65420c128b6a6323094c0cbcab6a720dfa96", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjcxYzY1NDIwYzEyOGI2YTYzMjMwOTRjMGNiY2FiNmE3MjBkZmE5Ng==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@fillmore.constant.com", "date": "2001-06-09T17:55:10Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-06-09T17:55:10Z"}, "message": "unwind-pe.h: Conditionally qualify references to abort with std::.\n\n\n2001-06-09  Benjamin Kosnik  <bkoz@fillmore.constant.com>\n\n\t* unwind-pe.h: Conditionally qualify references to abort with\n\tstd::.\n\nFrom-SVN: r43082", "tree": {"sha": "91ec8d2e75d914281f3ab8a6cb86fef4444a1460", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91ec8d2e75d914281f3ab8a6cb86fef4444a1460"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f71c65420c128b6a6323094c0cbcab6a720dfa96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f71c65420c128b6a6323094c0cbcab6a720dfa96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f71c65420c128b6a6323094c0cbcab6a720dfa96", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f71c65420c128b6a6323094c0cbcab6a720dfa96/comments", "author": null, "committer": null, "parents": [{"sha": "b27820143dba68c5db8509fbd365370c2ad7e373", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b27820143dba68c5db8509fbd365370c2ad7e373", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b27820143dba68c5db8509fbd365370c2ad7e373"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "f8a1e0c4d2a5b3431e68b6a8d7ffe28f98955298", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f71c65420c128b6a6323094c0cbcab6a720dfa96/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f71c65420c128b6a6323094c0cbcab6a720dfa96/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f71c65420c128b6a6323094c0cbcab6a720dfa96", "patch": "@@ -1,3 +1,8 @@\n+2001-06-08  Benjamin Kosnik  <bkoz@fillmore.constant.com>\n+\n+\t* unwind-pe.h: Conditionally qualify references to abort with\n+\tstd::.\n+\n 2001-06-09  Julian Foad <julian_foad@hotmail.com>\n \n \t* doc/invoke.texi: Remove superfluous text."}, {"sha": "d6f368f779c03ccd8d1f3dba74679d567d771b66", "filename": "gcc/unwind-pe.h", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f71c65420c128b6a6323094c0cbcab6a720dfa96/gcc%2Funwind-pe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f71c65420c128b6a6323094c0cbcab6a720dfa96/gcc%2Funwind-pe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funwind-pe.h?ref=f71c65420c128b6a6323094c0cbcab6a720dfa96", "patch": "@@ -22,6 +22,13 @@\n    compatibility problems with the base ABI.  This is slightly better\n    than duplicating code, however.  */\n \n+/* If using C++, references to abort have to be qualified with std::. */\n+#if __cplusplus\n+#define __gxx_abort std::abort\n+#else\n+#define __gxx_abort abort\n+#endif\n+\n /* Pointer encodings, from dwarf2.h.  */\n #define DW_EH_PE_absptr         0x00\n #define DW_EH_PE_omit           0xff\n@@ -66,7 +73,7 @@ size_of_encoded_value (unsigned char encoding)\n     case DW_EH_PE_udata8:\n       return 8;\n     }\n-  abort ();\n+  __gxx_abort ();\n }\n \n /* Given an encoding and an _Unwind_Context, return the base to which\n@@ -94,7 +101,7 @@ base_of_encoded_value (unsigned char encoding, struct _Unwind_Context *context)\n     case DW_EH_PE_funcrel:\n       return _Unwind_GetRegionStart (context);\n     }\n-  abort ();\n+  __gxx_abort ();\n }\n \n /* Load an encoded value from memory at P.  The value is returned in VAL;\n@@ -197,7 +204,7 @@ read_encoded_value_with_base (unsigned char encoding, _Unwind_Ptr base,\n \t  break;\n \n \tdefault:\n-\t  abort ();\n+\t  __gxx_abort ();\n \t}\n \n       if (result != 0)"}]}