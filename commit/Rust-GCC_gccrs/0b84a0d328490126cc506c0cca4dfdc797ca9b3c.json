{"sha": "0b84a0d328490126cc506c0cca4dfdc797ca9b3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGI4NGEwZDMyODQ5MDEyNmNjNTA2YzBjY2E0ZGZkYzc5N2NhOWIzYw==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1994-12-01T01:43:50Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1994-12-01T01:43:50Z"}, "message": "reorg.c (fill_slots_from_thread): Create a USE insn for any redundant insn we pretend to fill a delay slot with.\n\n\t* reorg.c (fill_slots_from_thread): Create a USE insn for any\n\tredundant insn we pretend to fill a delay slot with.  Continue\n\tsearching for a suitable delay slot insn at the new USE insn.\n\nFrom-SVN: r8595", "tree": {"sha": "2940215860d8db6b19d171a952a5eac0613283f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2940215860d8db6b19d171a952a5eac0613283f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b84a0d328490126cc506c0cca4dfdc797ca9b3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b84a0d328490126cc506c0cca4dfdc797ca9b3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b84a0d328490126cc506c0cca4dfdc797ca9b3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b84a0d328490126cc506c0cca4dfdc797ca9b3c/comments", "author": null, "committer": null, "parents": [{"sha": "ca89d290d8ccb0fd7b5d9e41f69ed9870a833974", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca89d290d8ccb0fd7b5d9e41f69ed9870a833974", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca89d290d8ccb0fd7b5d9e41f69ed9870a833974"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "eef6f06c0474a176608a2d33f593f151490dfe8c", "filename": "gcc/reorg.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b84a0d328490126cc506c0cca4dfdc797ca9b3c/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b84a0d328490126cc506c0cca4dfdc797ca9b3c/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=0b84a0d328490126cc506c0cca4dfdc797ca9b3c", "patch": "@@ -3329,7 +3329,20 @@ fill_slots_from_thread (insn, condition, thread, opposite_thread, likely,\n \t      else\n \t\t{\n \t\t  update_reg_unused_notes (prior_insn, trial);\n-\t\t  new_thread = next_active_insn (trial);\n+\n+\t\t  /* Even if we don't own the the thread, we still need\n+\t\t     call update_block to get our special USE insn inserted.\n+\n+\t\t     Furthermore, new_thread should point to the USE insn\n+\t\t     so the USE insn will be after any label created before\n+\t\t     new_thread later in reorg.  Also note next_active_insn\n+\t\t     skips the USE insn.\n+\n+\t\t     If we do not do this mark_target_live_regs may fail\n+\t\t     to realize any insn set by the redundant insn was\n+\t\t     live at new_thread.  */\n+\t\t  update_block (trial, next_active_insn (thread));\n+\t\t  new_thread = PREV_INSN (next_active_insn (trial));\n \t\t}\n \n \t      continue;"}]}