{"sha": "f4d28290bb69d2e2ac1b17a8d23d4952582eaa00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRkMjgyOTBiYjY5ZDJlMmFjMWIxN2E4ZDIzZDQ5NTI1ODJlYWEwMA==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.vnet.ibm.com", "date": "2015-06-24T06:44:59Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2015-06-24T06:44:59Z"}, "message": "S/390: Make builtin creation conditional.\n\ngcc/ChangeLog:\n\n2015-06-24  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n\n\t* config/s390/s390-builtin-types.def: Add flag to indicate the\n\toptions under which the function type is needed.\n\t* config/s390/s390-builtins.def: Add flag to indicate the options\n\tunder which the builtin is enabled.\n\t* config/s390/s390-builtins.h: Add flags parameter to macro\n\tdefinitions.\n\t(bflags_for_builtin): New function.\n\t(flags_for_builtin): Renamed to ...\n\t(opflags_for_builtin): ... this.\n\t* config/s390/s390-c.c (s390_resolve_overloaded_builtin): Rename\n\tflags_for_builtin to bflags_for_builtin and\n\tflags_overloaded_builtin_var to opflags_overloaded_builtin_var.\n\t* config/s390/s390.c: Add initialization of bflags_builtin and\n\topflags_builtin arrays.\n\tRemove code for flags_builtin.\n\t(s390_init_builtins): Only create builtin function types if one of\n\ttheir flags is active.\n\tOnly create builtins if all of their flags are active.\n\t(s390_expand_builtin): Rename flags_for_builtin to\n\topflags_for_builtin.\n\nFrom-SVN: r224872", "tree": {"sha": "f616c9fa1b656b9be9d618f4f2d6cc6eaa3b46fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f616c9fa1b656b9be9d618f4f2d6cc6eaa3b46fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4d28290bb69d2e2ac1b17a8d23d4952582eaa00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4d28290bb69d2e2ac1b17a8d23d4952582eaa00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4d28290bb69d2e2ac1b17a8d23d4952582eaa00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4d28290bb69d2e2ac1b17a8d23d4952582eaa00/comments", "author": null, "committer": null, "parents": [{"sha": "f1497499e1b50528355e8f3ec6816f166dd6bf93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1497499e1b50528355e8f3ec6816f166dd6bf93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1497499e1b50528355e8f3ec6816f166dd6bf93"}], "stats": {"total": 1983, "additions": 1028, "deletions": 955}, "files": [{"sha": "9e1fdddca5ae25072fae6445d39c0bc2d9ecf380", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4d28290bb69d2e2ac1b17a8d23d4952582eaa00/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4d28290bb69d2e2ac1b17a8d23d4952582eaa00/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f4d28290bb69d2e2ac1b17a8d23d4952582eaa00", "patch": "@@ -1,3 +1,26 @@\n+2015-06-24  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n+\n+\t* config/s390/s390-builtin-types.def: Add flag to indicate the\n+\toptions under which the function type is needed.\n+\t* config/s390/s390-builtins.def: Add flag to indicate the options\n+\tunder which the builtin is enabled.\n+\t* config/s390/s390-builtins.h: Add flags parameter to macro\n+\tdefinitions.\n+\t(bflags_for_builtin): New function.\n+\t(flags_for_builtin): Renamed to ...\n+\t(opflags_for_builtin): ... this.\n+\t* config/s390/s390-c.c (s390_resolve_overloaded_builtin): Rename\n+\tflags_for_builtin to bflags_for_builtin and\n+\tflags_overloaded_builtin_var to opflags_overloaded_builtin_var.\n+\t* config/s390/s390.c: Add initialization of bflags_builtin and\n+\topflags_builtin arrays.\n+\tRemove code for flags_builtin.\n+\t(s390_init_builtins): Only create builtin function types if one of\n+\ttheir flags is active.\n+\tOnly create builtins if all of their flags are active.\n+\t(s390_expand_builtin): Rename flags_for_builtin to\n+\topflags_for_builtin.\n+\n 2015-06-24  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* config/s390/vecintrin.h: Remove internal builtins."}, {"sha": "245d5382512cda7fba38376e4903d92e7ce311e2", "filename": "gcc/config/s390/s390-builtin-types.def", "status": "modified", "additions": 295, "deletions": 290, "changes": 585, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4d28290bb69d2e2ac1b17a8d23d4952582eaa00/gcc%2Fconfig%2Fs390%2Fs390-builtin-types.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4d28290bb69d2e2ac1b17a8d23d4952582eaa00/gcc%2Fconfig%2Fs390%2Fs390-builtin-types.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390-builtin-types.def?ref=f4d28290bb69d2e2ac1b17a8d23d4952582eaa00", "patch": "@@ -19,309 +19,314 @@\n    along with GCC; see the file COPYING3.  If not see\n    <http://www.gnu.org/licenses/>.  */\n \n-#define DEF_FN_TYPE_1(FN_TYPE, T1)\t\t\\\n+#define DEF_FN_TYPE_1(FN_TYPE, FLAGS, T1)\t\\\n   DEF_FN_TYPE (FN_TYPE,\t\t\t\t\\\n+\t       FLAGS,\t\t\t\t\\\n \t       s390_builtin_types[T1])\n-#define DEF_FN_TYPE_2(FN_TYPE, T1, T2)\t\t\\\n+#define DEF_FN_TYPE_2(FN_TYPE, FLAGS, T1, T2)\t\\\n   DEF_FN_TYPE (FN_TYPE,\t\t\t\t\\\n+\t       FLAGS,\t\t\t\t\\\n \t       s390_builtin_types[T1],\t\t\\\n \t       s390_builtin_types[T2])\n-#define DEF_FN_TYPE_3(FN_TYPE, T1, T2, T3)\t\\\n-  DEF_FN_TYPE (FN_TYPE,\t\t\t\t\\\n-\t       s390_builtin_types[T1],\t\t\\\n-\t       s390_builtin_types[T2],\t\t\\\n-\t       s390_builtin_types[T3])\n-#define DEF_FN_TYPE_4(FN_TYPE, T1, T2, T3, T4)\t\\\n-  DEF_FN_TYPE (FN_TYPE,\t\t\t\t\\\n-\t       s390_builtin_types[T1],\t\t\\\n-\t       s390_builtin_types[T2],\t\t\\\n-\t       s390_builtin_types[T3],\t\t\\\n-\t       s390_builtin_types[T4])\n-#define DEF_FN_TYPE_5(FN_TYPE, T1, T2, T3, T4, T5)\t\\\n+#define DEF_FN_TYPE_3(FN_TYPE, FLAGS, T1, T2, T3)\t\\\n   DEF_FN_TYPE (FN_TYPE,\t\t\t\t\t\\\n+\t       FLAGS,\t\t\t\t\t\\\n \t       s390_builtin_types[T1],\t\t\t\\\n \t       s390_builtin_types[T2],\t\t\t\\\n-\t       s390_builtin_types[T3],\t\t\t\\\n-\t       s390_builtin_types[T4],\t\t\t\\\n-\t       s390_builtin_types[T5])\n-#define DEF_FN_TYPE_6(FN_TYPE, T1, T2, T3, T4, T5, T6)\t\\\n+\t       s390_builtin_types[T3])\n+#define DEF_FN_TYPE_4(FN_TYPE, FLAGS, T1, T2, T3, T4)\t\\\n   DEF_FN_TYPE (FN_TYPE,\t\t\t\t\t\\\n+\t       FLAGS,\t\t\t\t\t\\\n \t       s390_builtin_types[T1],\t\t\t\\\n \t       s390_builtin_types[T2],\t\t\t\\\n \t       s390_builtin_types[T3],\t\t\t\\\n-\t       s390_builtin_types[T4],\t\t\t\\\n-\t       s390_builtin_types[T5],\t\t\t\\\n+\t       s390_builtin_types[T4])\n+#define DEF_FN_TYPE_5(FN_TYPE, FLAGS, T1, T2, T3, T4, T5)\t\\\n+  DEF_FN_TYPE (FN_TYPE,\t\t\t\t\t\t\\\n+\t       FLAGS,\t\t\t\t\t\t\\\n+\t       s390_builtin_types[T1],\t\t\t\t\\\n+\t       s390_builtin_types[T2],\t\t\t\t\\\n+\t       s390_builtin_types[T3],\t\t\t\t\\\n+\t       s390_builtin_types[T4],\t\t\t\t\\\n+\t       s390_builtin_types[T5])\n+#define DEF_FN_TYPE_6(FN_TYPE, FLAGS, T1, T2, T3, T4, T5, T6)\t\\\n+  DEF_FN_TYPE (FN_TYPE,\t\t\t\t\t\t\\\n+\t       FLAGS,\t\t\t\t\t\t\\\n+\t       s390_builtin_types[T1],\t\t\t\t\\\n+\t       s390_builtin_types[T2],\t\t\t\t\\\n+\t       s390_builtin_types[T3],\t\t\t\t\\\n+\t       s390_builtin_types[T4],\t\t\t\t\\\n+\t       s390_builtin_types[T5],\t\t\t\t\\\n \t       s390_builtin_types[T6])\n-\n-DEF_TYPE (BT_DBL, double_type_node, 0)\n-DEF_TYPE (BT_DBLCONST, double_type_node, 1)\n-DEF_TYPE (BT_FLTCONST, float_type_node, 1)\n-DEF_TYPE (BT_FLT, float_type_node, 0)\n-DEF_TYPE (BT_INTCONST, integer_type_node, 1)\n-DEF_TYPE (BT_INT, integer_type_node, 0)\n-DEF_TYPE (BT_LONG, long_integer_type_node, 0)\n-DEF_TYPE (BT_LONGLONGCONST, long_long_integer_type_node, 1)\n-DEF_TYPE (BT_LONGLONG, long_long_integer_type_node, 0)\n-DEF_TYPE (BT_UCHAR, unsigned_char_type_node, 0)\n-DEF_TYPE (BT_SCHAR, signed_char_type_node, 0)\n-DEF_TYPE (BT_SCHARCONST, signed_char_type_node, 1)\n-DEF_TYPE (BT_SHORTCONST, short_integer_type_node, 1)\n-DEF_TYPE (BT_SHORT, short_integer_type_node, 0)\n-DEF_TYPE (BT_UINT64, c_uint64_type_node, 0)\n-DEF_TYPE (BT_UINT, unsigned_type_node, 0)\n-DEF_TYPE (BT_UCHARCONST, unsigned_char_type_node, 1)\n-DEF_TYPE (BT_UINTCONST, unsigned_type_node, 1)\n-DEF_TYPE (BT_ULONGLONGCONST, long_long_unsigned_type_node, 1)\n-DEF_TYPE (BT_USHORTCONST, short_unsigned_type_node, 1)\n-DEF_TYPE (BT_VOIDCONST, void_type_node, 1)\n-DEF_TYPE (BT_VOID, void_type_node, 0)\n-DEF_TYPE (BT_ULONG, long_unsigned_type_node, 0)\n-DEF_TYPE (BT_ULONGLONG, long_long_unsigned_type_node, 0)\n-DEF_TYPE (BT_USHORT, short_unsigned_type_node, 0)\n-DEF_DISTINCT_TYPE (BT_BCHAR, BT_UCHAR)\n-DEF_DISTINCT_TYPE (BT_BINT, BT_UINT)\n-DEF_DISTINCT_TYPE (BT_BLONGLONG, BT_ULONGLONG)\n-DEF_DISTINCT_TYPE (BT_BSHORT, BT_USHORT)\n-DEF_POINTER_TYPE (BT_DBLPTR, BT_DBL)\n-DEF_POINTER_TYPE (BT_DBLCONSTPTR, BT_DBLCONST)\n-DEF_POINTER_TYPE (BT_FLTPTR, BT_FLT)\n-DEF_POINTER_TYPE (BT_FLTCONSTPTR, BT_FLTCONST)\n-DEF_POINTER_TYPE (BT_INTCONSTPTR, BT_INTCONST)\n-DEF_POINTER_TYPE (BT_INTPTR, BT_INT)\n-DEF_POINTER_TYPE (BT_LONGLONGCONSTPTR, BT_LONGLONGCONST)\n-DEF_POINTER_TYPE (BT_LONGLONGPTR, BT_LONGLONG)\n-DEF_POINTER_TYPE (BT_SCHARCONSTPTR, BT_SCHARCONST)\n-DEF_POINTER_TYPE (BT_SCHARPTR, BT_SCHAR)\n-DEF_POINTER_TYPE (BT_SHORTPTR, BT_SHORT)\n-DEF_POINTER_TYPE (BT_SHORTCONSTPTR, BT_SHORTCONST)\n-DEF_POINTER_TYPE (BT_UCHARPTR, BT_UCHAR)\n-DEF_POINTER_TYPE (BT_UCHARCONSTPTR, BT_UCHARCONST)\n-DEF_POINTER_TYPE (BT_UINTPTR, BT_UINT)\n-DEF_POINTER_TYPE (BT_UINTCONSTPTR, BT_UINTCONST)\n-DEF_POINTER_TYPE (BT_UINT64PTR, BT_UINT64)\n-DEF_POINTER_TYPE (BT_ULONGLONGPTR, BT_ULONGLONG)\n-DEF_POINTER_TYPE (BT_ULONGLONGCONSTPTR, BT_ULONGLONGCONST)\n-DEF_POINTER_TYPE (BT_USHORTCONSTPTR, BT_USHORTCONST)\n-DEF_POINTER_TYPE (BT_USHORTPTR, BT_USHORT)\n-DEF_POINTER_TYPE (BT_VOIDPTR, BT_VOID)\n-DEF_POINTER_TYPE (BT_VOIDCONSTPTR, BT_VOIDCONST)\n-DEF_VECTOR_TYPE (BT_V16QI, BT_SCHAR, 16)\n-DEF_VECTOR_TYPE (BT_V2DF, BT_DBL, 2)\n-DEF_VECTOR_TYPE (BT_V2DI, BT_LONGLONG, 2)\n-DEF_VECTOR_TYPE (BT_V4SI, BT_INT, 4)\n-DEF_VECTOR_TYPE (BT_V8HI, BT_SHORT, 8)\n-DEF_VECTOR_TYPE (BT_UV16QI, BT_UCHAR, 16)\n-DEF_VECTOR_TYPE (BT_UV2DI, BT_ULONGLONG, 2)\n-DEF_VECTOR_TYPE (BT_UV4SI, BT_UINT, 4)\n-DEF_VECTOR_TYPE (BT_UV8HI, BT_USHORT, 8)\n-DEF_OPAQUE_VECTOR_TYPE (BT_OV2DI, BT_LONGLONG, 2)\n-DEF_OPAQUE_VECTOR_TYPE (BT_OV4SI, BT_INT, 4)\n-DEF_OPAQUE_VECTOR_TYPE (BT_OUV4SI, BT_UINT, 4)\n-DEF_OPAQUE_VECTOR_TYPE (BT_BV16QI, BT_BCHAR, 16)\n-DEF_OPAQUE_VECTOR_TYPE (BT_BV2DI, BT_BLONGLONG, 2)\n-DEF_OPAQUE_VECTOR_TYPE (BT_BV4SI, BT_BINT, 4)\n-DEF_OPAQUE_VECTOR_TYPE (BT_BV8HI, BT_BSHORT, 8)\n-DEF_FN_TYPE_1 (BT_FN_UINT, BT_UINT)\n-DEF_FN_TYPE_1 (BT_FN_INT, BT_INT)\n-DEF_FN_TYPE_2 (BT_FN_VOID_UINT, BT_VOID, BT_UINT)\n-DEF_FN_TYPE_2 (BT_FN_VOID_INT, BT_VOID, BT_INT)\n-DEF_FN_TYPE_2 (BT_FN_INT_INT, BT_INT, BT_INT)\n-DEF_FN_TYPE_2 (BT_FN_INT_VOIDPTR, BT_INT, BT_VOIDPTR)\n-DEF_FN_TYPE_2 (BT_FN_UV16QI_UCHARCONSTPTR, BT_UV16QI, BT_UCHARCONSTPTR)\n-DEF_FN_TYPE_2 (BT_FN_UV16QI_USHORT, BT_UV16QI, BT_USHORT)\n-DEF_FN_TYPE_2 (BT_FN_UV16QI_UCHAR, BT_UV16QI, BT_UCHAR)\n-DEF_FN_TYPE_2 (BT_FN_UV16QI_UV16QI, BT_UV16QI, BT_UV16QI)\n-DEF_FN_TYPE_2 (BT_FN_UV2DI_ULONGLONG, BT_UV2DI, BT_ULONGLONG)\n-DEF_FN_TYPE_2 (BT_FN_UV2DI_ULONGLONGCONSTPTR, BT_UV2DI, BT_ULONGLONGCONSTPTR)\n-DEF_FN_TYPE_2 (BT_FN_UV2DI_UV2DI, BT_UV2DI, BT_UV2DI)\n-DEF_FN_TYPE_2 (BT_FN_UV2DI_UV4SI, BT_UV2DI, BT_UV4SI)\n-DEF_FN_TYPE_2 (BT_FN_OV4SI_INTCONSTPTR, BT_OV4SI, BT_INTCONSTPTR)\n-DEF_FN_TYPE_2 (BT_FN_UV4SI_UV4SI, BT_UV4SI, BT_UV4SI)\n-DEF_FN_TYPE_2 (BT_FN_OV4SI_INT, BT_OV4SI, BT_INT)\n-DEF_FN_TYPE_2 (BT_FN_OV4SI_OV4SI, BT_OV4SI, BT_OV4SI)\n-DEF_FN_TYPE_2 (BT_FN_UV4SI_UINTCONSTPTR, BT_UV4SI, BT_UINTCONSTPTR)\n-DEF_FN_TYPE_2 (BT_FN_UV4SI_UV8HI, BT_UV4SI, BT_UV8HI)\n-DEF_FN_TYPE_2 (BT_FN_UV4SI_UINT, BT_UV4SI, BT_UINT)\n-DEF_FN_TYPE_2 (BT_FN_UV8HI_USHORT, BT_UV8HI, BT_USHORT)\n-DEF_FN_TYPE_2 (BT_FN_UV8HI_UV16QI, BT_UV8HI, BT_UV16QI)\n-DEF_FN_TYPE_2 (BT_FN_UV8HI_UV8HI, BT_UV8HI, BT_UV8HI)\n-DEF_FN_TYPE_2 (BT_FN_UV8HI_USHORTCONSTPTR, BT_UV8HI, BT_USHORTCONSTPTR)\n-DEF_FN_TYPE_2 (BT_FN_V16QI_UCHAR, BT_V16QI, BT_UCHAR)\n-DEF_FN_TYPE_2 (BT_FN_V16QI_V16QI, BT_V16QI, BT_V16QI)\n-DEF_FN_TYPE_2 (BT_FN_V2DI_V16QI, BT_V2DI, BT_V16QI)\n-DEF_FN_TYPE_2 (BT_FN_V2DI_V2DI, BT_V2DI, BT_V2DI)\n-DEF_FN_TYPE_2 (BT_FN_V2DI_SHORT, BT_V2DI, BT_SHORT)\n-DEF_FN_TYPE_2 (BT_FN_V2DF_V2DF, BT_V2DF, BT_V2DF)\n-DEF_FN_TYPE_2 (BT_FN_V2DI_V8HI, BT_V2DI, BT_V8HI)\n-DEF_FN_TYPE_2 (BT_FN_V2DF_FLTCONSTPTR, BT_V2DF, BT_FLTCONSTPTR)\n-DEF_FN_TYPE_2 (BT_FN_V2DI_V4SI, BT_V2DI, BT_V4SI)\n-DEF_FN_TYPE_2 (BT_FN_V2DF_DBL, BT_V2DF, BT_DBL)\n-DEF_FN_TYPE_2 (BT_FN_V4SI_V8HI, BT_V4SI, BT_V8HI)\n-DEF_FN_TYPE_2 (BT_FN_V4SI_V4SI, BT_V4SI, BT_V4SI)\n-DEF_FN_TYPE_2 (BT_FN_V4SI_SHORT, BT_V4SI, BT_SHORT)\n-DEF_FN_TYPE_2 (BT_FN_V8HI_V16QI, BT_V8HI, BT_V16QI)\n-DEF_FN_TYPE_2 (BT_FN_V8HI_V8HI, BT_V8HI, BT_V8HI)\n-DEF_FN_TYPE_2 (BT_FN_V8HI_SHORT, BT_V8HI, BT_SHORT)\n-DEF_FN_TYPE_3 (BT_FN_INT_V2DI_V2DI, BT_INT, BT_V2DI, BT_V2DI)\n-DEF_FN_TYPE_3 (BT_FN_INT_OV4SI_OV4SI, BT_INT, BT_OV4SI, BT_OV4SI)\n-DEF_FN_TYPE_3 (BT_FN_INT_V2DF_V2DF, BT_INT, BT_V2DF, BT_V2DF)\n-DEF_FN_TYPE_3 (BT_FN_USHORT_UV8HI_INT, BT_USHORT, BT_UV8HI, BT_INT)\n-DEF_FN_TYPE_3 (BT_FN_INT_UV2DI_UV2DI, BT_INT, BT_UV2DI, BT_UV2DI)\n-DEF_FN_TYPE_3 (BT_FN_ULONGLONG_UV2DI_INT, BT_ULONGLONG, BT_UV2DI, BT_INT)\n-DEF_FN_TYPE_3 (BT_FN_INT_UV4SI_UV4SI, BT_INT, BT_UV4SI, BT_UV4SI)\n-DEF_FN_TYPE_3 (BT_FN_UCHAR_UV16QI_INT, BT_UCHAR, BT_UV16QI, BT_INT)\n-DEF_FN_TYPE_3 (BT_FN_INT_UV8HI_UV8HI, BT_INT, BT_UV8HI, BT_UV8HI)\n-DEF_FN_TYPE_3 (BT_FN_INT_V4SI_V4SI, BT_INT, BT_V4SI, BT_V4SI)\n-DEF_FN_TYPE_3 (BT_FN_INT_UV16QI_UV16QI, BT_INT, BT_UV16QI, BT_UV16QI)\n-DEF_FN_TYPE_3 (BT_FN_INT_V16QI_V16QI, BT_INT, BT_V16QI, BT_V16QI)\n-DEF_FN_TYPE_3 (BT_FN_INT_VOIDPTR_INT, BT_INT, BT_VOIDPTR, BT_INT)\n-DEF_FN_TYPE_3 (BT_FN_DBL_V2DF_INT, BT_DBL, BT_V2DF, BT_INT)\n-DEF_FN_TYPE_3 (BT_FN_VOID_UINT64PTR_UINT64, BT_VOID, BT_UINT64PTR, BT_UINT64)\n-DEF_FN_TYPE_3 (BT_FN_INT_V8HI_V8HI, BT_INT, BT_V8HI, BT_V8HI)\n-DEF_FN_TYPE_3 (BT_FN_UINT_VOIDCONSTPTR_INT, BT_UINT, BT_VOIDCONSTPTR, BT_INT)\n-DEF_FN_TYPE_3 (BT_FN_INT_OV4SI_INT, BT_INT, BT_OV4SI, BT_INT)\n-DEF_FN_TYPE_3 (BT_FN_VOID_V2DF_FLTPTR, BT_VOID, BT_V2DF, BT_FLTPTR)\n-DEF_FN_TYPE_3 (BT_FN_UINT_UV4SI_INT, BT_UINT, BT_UV4SI, BT_INT)\n-DEF_FN_TYPE_3 (BT_FN_UV16QI_UV8HI_UV8HI, BT_UV16QI, BT_UV8HI, BT_UV8HI)\n-DEF_FN_TYPE_3 (BT_FN_UV16QI_UCHARCONSTPTR_USHORT, BT_UV16QI, BT_UCHARCONSTPTR, BT_USHORT)\n-DEF_FN_TYPE_3 (BT_FN_UV16QI_UV16QI_UV16QI, BT_UV16QI, BT_UV16QI, BT_UV16QI)\n-DEF_FN_TYPE_3 (BT_FN_UV16QI_UV16QI_UCHAR, BT_UV16QI, BT_UV16QI, BT_UCHAR)\n-DEF_FN_TYPE_3 (BT_FN_UV16QI_UV4SI_UV4SI, BT_UV16QI, BT_UV4SI, BT_UV4SI)\n-DEF_FN_TYPE_3 (BT_FN_UV16QI_UCHAR_UCHAR, BT_UV16QI, BT_UCHAR, BT_UCHAR)\n-DEF_FN_TYPE_3 (BT_FN_UV16QI_UCHAR_INT, BT_UV16QI, BT_UCHAR, BT_INT)\n-DEF_FN_TYPE_3 (BT_FN_UV16QI_UV2DI_UV2DI, BT_UV16QI, BT_UV2DI, BT_UV2DI)\n-DEF_FN_TYPE_3 (BT_FN_UV16QI_UV16QI_UINT, BT_UV16QI, BT_UV16QI, BT_UINT)\n-DEF_FN_TYPE_3 (BT_FN_UV16QI_UV16QI_INTPTR, BT_UV16QI, BT_UV16QI, BT_INTPTR)\n-DEF_FN_TYPE_3 (BT_FN_UV2DI_V2DF_INT, BT_UV2DI, BT_V2DF, BT_INT)\n-DEF_FN_TYPE_3 (BT_FN_UV2DI_UV2DI_UINT, BT_UV2DI, BT_UV2DI, BT_UINT)\n-DEF_FN_TYPE_3 (BT_FN_OV2DI_LONGLONG_LONGLONG, BT_OV2DI, BT_LONGLONG, BT_LONGLONG)\n-DEF_FN_TYPE_3 (BT_FN_UV2DI_UV2DI_UV2DI, BT_UV2DI, BT_UV2DI, BT_UV2DI)\n-DEF_FN_TYPE_3 (BT_FN_UV2DI_UV2DI_UCHAR, BT_UV2DI, BT_UV2DI, BT_UCHAR)\n-DEF_FN_TYPE_3 (BT_FN_UV2DI_ULONGLONG_INT, BT_UV2DI, BT_ULONGLONG, BT_INT)\n-DEF_FN_TYPE_3 (BT_FN_UV2DI_UV8HI_UV8HI, BT_UV2DI, BT_UV8HI, BT_UV8HI)\n-DEF_FN_TYPE_3 (BT_FN_UV2DI_UCHAR_UCHAR, BT_UV2DI, BT_UCHAR, BT_UCHAR)\n-DEF_FN_TYPE_3 (BT_FN_UV2DI_UV4SI_UV4SI, BT_UV2DI, BT_UV4SI, BT_UV4SI)\n-DEF_FN_TYPE_3 (BT_FN_OV4SI_INT_INT, BT_OV4SI, BT_INT, BT_INT)\n-DEF_FN_TYPE_3 (BT_FN_UV4SI_UINT_INT, BT_UV4SI, BT_UINT, BT_INT)\n-DEF_FN_TYPE_3 (BT_FN_UV4SI_UV4SI_UV4SI, BT_UV4SI, BT_UV4SI, BT_UV4SI)\n-DEF_FN_TYPE_3 (BT_FN_UV4SI_UV4SI_UCHAR, BT_UV4SI, BT_UV4SI, BT_UCHAR)\n-DEF_FN_TYPE_3 (BT_FN_UV4SI_UV8HI_UV8HI, BT_UV4SI, BT_UV8HI, BT_UV8HI)\n-DEF_FN_TYPE_3 (BT_FN_OV4SI_OV4SI_UCHAR, BT_OV4SI, BT_OV4SI, BT_UCHAR)\n-DEF_FN_TYPE_3 (BT_FN_UV4SI_UV4SI_UINT, BT_UV4SI, BT_UV4SI, BT_UINT)\n-DEF_FN_TYPE_3 (BT_FN_UV4SI_UV16QI_UV16QI, BT_UV4SI, BT_UV16QI, BT_UV16QI)\n-DEF_FN_TYPE_3 (BT_FN_OV4SI_INTCONSTPTR_INT, BT_OV4SI, BT_INTCONSTPTR, BT_INT)\n-DEF_FN_TYPE_3 (BT_FN_OV4SI_OV4SI_INTPTR, BT_OV4SI, BT_OV4SI, BT_INTPTR)\n-DEF_FN_TYPE_3 (BT_FN_UV4SI_UV2DI_UV2DI, BT_UV4SI, BT_UV2DI, BT_UV2DI)\n-DEF_FN_TYPE_3 (BT_FN_OV4SI_INTCONSTPTR_UINT, BT_OV4SI, BT_INTCONSTPTR, BT_UINT)\n-DEF_FN_TYPE_3 (BT_FN_OV4SI_OV4SI_ULONG, BT_OV4SI, BT_OV4SI, BT_ULONG)\n-DEF_FN_TYPE_3 (BT_FN_OV4SI_OV4SI_OV4SI, BT_OV4SI, BT_OV4SI, BT_OV4SI)\n-DEF_FN_TYPE_3 (BT_FN_UV4SI_UCHAR_UCHAR, BT_UV4SI, BT_UCHAR, BT_UCHAR)\n-DEF_FN_TYPE_3 (BT_FN_UV4SI_UV4SI_INTPTR, BT_UV4SI, BT_UV4SI, BT_INTPTR)\n-DEF_FN_TYPE_3 (BT_FN_UV8HI_UV4SI_UV4SI, BT_UV8HI, BT_UV4SI, BT_UV4SI)\n-DEF_FN_TYPE_3 (BT_FN_UV8HI_UV16QI_UV16QI, BT_UV8HI, BT_UV16QI, BT_UV16QI)\n-DEF_FN_TYPE_3 (BT_FN_UV8HI_UCHAR_UCHAR, BT_UV8HI, BT_UCHAR, BT_UCHAR)\n-DEF_FN_TYPE_3 (BT_FN_UV8HI_UV8HI_UV8HI, BT_UV8HI, BT_UV8HI, BT_UV8HI)\n-DEF_FN_TYPE_3 (BT_FN_UV8HI_UV8HI_UCHAR, BT_UV8HI, BT_UV8HI, BT_UCHAR)\n-DEF_FN_TYPE_3 (BT_FN_UV8HI_UV8HI_INTPTR, BT_UV8HI, BT_UV8HI, BT_INTPTR)\n-DEF_FN_TYPE_3 (BT_FN_UV8HI_UV8HI_UINT, BT_UV8HI, BT_UV8HI, BT_UINT)\n-DEF_FN_TYPE_3 (BT_FN_UV8HI_USHORT_INT, BT_UV8HI, BT_USHORT, BT_INT)\n-DEF_FN_TYPE_3 (BT_FN_V16QI_UV16QI_UV16QI, BT_V16QI, BT_UV16QI, BT_UV16QI)\n-DEF_FN_TYPE_3 (BT_FN_V16QI_UINT_VOIDCONSTPTR, BT_V16QI, BT_UINT, BT_VOIDCONSTPTR)\n-DEF_FN_TYPE_3 (BT_FN_V16QI_V8HI_V8HI, BT_V16QI, BT_V8HI, BT_V8HI)\n-DEF_FN_TYPE_3 (BT_FN_V16QI_BV16QI_V16QI, BT_V16QI, BT_BV16QI, BT_V16QI)\n-DEF_FN_TYPE_3 (BT_FN_V16QI_V16QI_V16QI, BT_V16QI, BT_V16QI, BT_V16QI)\n-DEF_FN_TYPE_3 (BT_FN_V2DI_V2DF_INT, BT_V2DI, BT_V2DF, BT_INT)\n-DEF_FN_TYPE_3 (BT_FN_V2DI_V2DF_V2DF, BT_V2DI, BT_V2DF, BT_V2DF)\n-DEF_FN_TYPE_3 (BT_FN_V2DI_V4SI_V4SI, BT_V2DI, BT_V4SI, BT_V4SI)\n-DEF_FN_TYPE_3 (BT_FN_V2DI_UV2DI_UV2DI, BT_V2DI, BT_UV2DI, BT_UV2DI)\n-DEF_FN_TYPE_3 (BT_FN_V2DI_V2DI_V2DI, BT_V2DI, BT_V2DI, BT_V2DI)\n-DEF_FN_TYPE_3 (BT_FN_V2DF_V2DI_INT, BT_V2DF, BT_V2DI, BT_INT)\n-DEF_FN_TYPE_3 (BT_FN_V2DF_UV2DI_INT, BT_V2DF, BT_UV2DI, BT_INT)\n-DEF_FN_TYPE_3 (BT_FN_V2DF_V2DF_V2DF, BT_V2DF, BT_V2DF, BT_V2DF)\n-DEF_FN_TYPE_3 (BT_FN_V2DF_DBL_INT, BT_V2DF, BT_DBL, BT_INT)\n-DEF_FN_TYPE_3 (BT_FN_V2DI_BV2DI_V2DI, BT_V2DI, BT_BV2DI, BT_V2DI)\n-DEF_FN_TYPE_3 (BT_FN_V2DF_UV4SI_INT, BT_V2DF, BT_UV4SI, BT_INT)\n-DEF_FN_TYPE_3 (BT_FN_V4SI_V4SI_V4SI, BT_V4SI, BT_V4SI, BT_V4SI)\n-DEF_FN_TYPE_3 (BT_FN_V4SI_V8HI_V8HI, BT_V4SI, BT_V8HI, BT_V8HI)\n-DEF_FN_TYPE_3 (BT_FN_V4SI_INT_VOIDPTR, BT_V4SI, BT_INT, BT_VOIDPTR)\n-DEF_FN_TYPE_3 (BT_FN_V4SI_V2DI_V2DI, BT_V4SI, BT_V2DI, BT_V2DI)\n-DEF_FN_TYPE_3 (BT_FN_V4SI_UV4SI_UV4SI, BT_V4SI, BT_UV4SI, BT_UV4SI)\n-DEF_FN_TYPE_3 (BT_FN_V4SI_BV4SI_V4SI, BT_V4SI, BT_BV4SI, BT_V4SI)\n-DEF_FN_TYPE_3 (BT_FN_V8HI_BV8HI_V8HI, BT_V8HI, BT_BV8HI, BT_V8HI)\n-DEF_FN_TYPE_3 (BT_FN_V8HI_V16QI_V16QI, BT_V8HI, BT_V16QI, BT_V16QI)\n-DEF_FN_TYPE_3 (BT_FN_V8HI_V4SI_V4SI, BT_V8HI, BT_V4SI, BT_V4SI)\n-DEF_FN_TYPE_3 (BT_FN_V8HI_UV8HI_UV8HI, BT_V8HI, BT_UV8HI, BT_UV8HI)\n-DEF_FN_TYPE_3 (BT_FN_V8HI_V8HI_V8HI, BT_V8HI, BT_V8HI, BT_V8HI)\n-DEF_FN_TYPE_4 (BT_FN_VOID_OV4SI_VOIDPTR_UINT, BT_VOID, BT_OV4SI, BT_VOIDPTR, BT_UINT)\n-DEF_FN_TYPE_4 (BT_FN_INT_OV4SI_OV4SI_INTPTR, BT_INT, BT_OV4SI, BT_OV4SI, BT_INTPTR)\n-DEF_FN_TYPE_4 (BT_FN_VOID_V16QI_UINT_VOIDPTR, BT_VOID, BT_V16QI, BT_UINT, BT_VOIDPTR)\n-DEF_FN_TYPE_4 (BT_FN_VOID_OV4SI_INT_VOIDPTR, BT_VOID, BT_OV4SI, BT_INT, BT_VOIDPTR)\n-DEF_FN_TYPE_4 (BT_FN_UV16QI_UV16QI_UV16QI_INTPTR, BT_UV16QI, BT_UV16QI, BT_UV16QI, BT_INTPTR)\n-DEF_FN_TYPE_4 (BT_FN_UV16QI_UV16QI_UV16QI_INT, BT_UV16QI, BT_UV16QI, BT_UV16QI, BT_INT)\n-DEF_FN_TYPE_4 (BT_FN_UV16QI_UV16QI_UCHAR_INT, BT_UV16QI, BT_UV16QI, BT_UCHAR, BT_INT)\n-DEF_FN_TYPE_4 (BT_FN_UV16QI_UV16QI_UV16QI_UV16QI, BT_UV16QI, BT_UV16QI, BT_UV16QI, BT_UV16QI)\n-DEF_FN_TYPE_4 (BT_FN_UV16QI_UV8HI_UV8HI_INTPTR, BT_UV16QI, BT_UV8HI, BT_UV8HI, BT_INTPTR)\n-DEF_FN_TYPE_4 (BT_FN_UV16QI_UV2DI_UV2DI_UV16QI, BT_UV16QI, BT_UV2DI, BT_UV2DI, BT_UV16QI)\n-DEF_FN_TYPE_4 (BT_FN_UV2DI_UV2DI_UV2DI_INT, BT_UV2DI, BT_UV2DI, BT_UV2DI, BT_INT)\n-DEF_FN_TYPE_4 (BT_FN_UV2DI_UV4SI_UV4SI_UV2DI, BT_UV2DI, BT_UV4SI, BT_UV4SI, BT_UV2DI)\n-DEF_FN_TYPE_4 (BT_FN_UV2DI_UV2DI_ULONGLONG_INT, BT_UV2DI, BT_UV2DI, BT_ULONGLONG, BT_INT)\n-DEF_FN_TYPE_4 (BT_FN_UV4SI_UV2DI_UV2DI_INTPTR, BT_UV4SI, BT_UV2DI, BT_UV2DI, BT_INTPTR)\n-DEF_FN_TYPE_4 (BT_FN_UV4SI_UV4SI_UV4SI_UV4SI, BT_UV4SI, BT_UV4SI, BT_UV4SI, BT_UV4SI)\n-DEF_FN_TYPE_4 (BT_FN_OV4SI_OV4SI_OV4SI_INTPTR, BT_OV4SI, BT_OV4SI, BT_OV4SI, BT_INTPTR)\n-DEF_FN_TYPE_4 (BT_FN_OV4SI_OV4SI_OV4SI_INT, BT_OV4SI, BT_OV4SI, BT_OV4SI, BT_INT)\n-DEF_FN_TYPE_4 (BT_FN_UV4SI_UV4SI_UV4SI_INTPTR, BT_UV4SI, BT_UV4SI, BT_UV4SI, BT_INTPTR)\n-DEF_FN_TYPE_4 (BT_FN_OV4SI_INT_OV4SI_INT, BT_OV4SI, BT_INT, BT_OV4SI, BT_INT)\n-DEF_FN_TYPE_4 (BT_FN_UV4SI_UV4SI_UV4SI_INT, BT_UV4SI, BT_UV4SI, BT_UV4SI, BT_INT)\n-DEF_FN_TYPE_4 (BT_FN_OV4SI_OV4SI_OV4SI_ULONGLONG, BT_OV4SI, BT_OV4SI, BT_OV4SI, BT_ULONGLONG)\n-DEF_FN_TYPE_4 (BT_FN_OV4SI_OV4SI_OV4SI_OV4SI, BT_OV4SI, BT_OV4SI, BT_OV4SI, BT_OV4SI)\n-DEF_FN_TYPE_4 (BT_FN_UV4SI_UV8HI_UV8HI_UV4SI, BT_UV4SI, BT_UV8HI, BT_UV8HI, BT_UV4SI)\n-DEF_FN_TYPE_4 (BT_FN_UV4SI_UV4SI_UINT_INT, BT_UV4SI, BT_UV4SI, BT_UINT, BT_INT)\n-DEF_FN_TYPE_4 (BT_FN_OV4SI_OV4SI_OV4SI_UCHAR, BT_OV4SI, BT_OV4SI, BT_OV4SI, BT_UCHAR)\n-DEF_FN_TYPE_4 (BT_FN_UV8HI_UV4SI_UV4SI_INTPTR, BT_UV8HI, BT_UV4SI, BT_UV4SI, BT_INTPTR)\n-DEF_FN_TYPE_4 (BT_FN_UV8HI_UV8HI_UV8HI_INT, BT_UV8HI, BT_UV8HI, BT_UV8HI, BT_INT)\n-DEF_FN_TYPE_4 (BT_FN_UV8HI_UV8HI_UV8HI_UV8HI, BT_UV8HI, BT_UV8HI, BT_UV8HI, BT_UV8HI)\n-DEF_FN_TYPE_4 (BT_FN_UV8HI_UV16QI_UV16QI_UV8HI, BT_UV8HI, BT_UV16QI, BT_UV16QI, BT_UV8HI)\n-DEF_FN_TYPE_4 (BT_FN_UV8HI_UV8HI_UV8HI_INTPTR, BT_UV8HI, BT_UV8HI, BT_UV8HI, BT_INTPTR)\n-DEF_FN_TYPE_4 (BT_FN_UV8HI_UV8HI_USHORT_INT, BT_UV8HI, BT_UV8HI, BT_USHORT, BT_INT)\n-DEF_FN_TYPE_4 (BT_FN_V16QI_V8HI_V8HI_INTPTR, BT_V16QI, BT_V8HI, BT_V8HI, BT_INTPTR)\n-DEF_FN_TYPE_4 (BT_FN_V16QI_V16QI_V16QI_INTPTR, BT_V16QI, BT_V16QI, BT_V16QI, BT_INTPTR)\n-DEF_FN_TYPE_4 (BT_FN_V16QI_UV16QI_UV16QI_INTPTR, BT_V16QI, BT_UV16QI, BT_UV16QI, BT_INTPTR)\n-DEF_FN_TYPE_4 (BT_FN_V16QI_V16QI_V16QI_V16QI, BT_V16QI, BT_V16QI, BT_V16QI, BT_V16QI)\n-DEF_FN_TYPE_4 (BT_FN_V2DI_V2DF_INT_INTPTR, BT_V2DI, BT_V2DF, BT_INT, BT_INTPTR)\n-DEF_FN_TYPE_4 (BT_FN_V2DI_V2DI_V2DI_INTPTR, BT_V2DI, BT_V2DI, BT_V2DI, BT_INTPTR)\n-DEF_FN_TYPE_4 (BT_FN_V2DF_V2DF_DBL_INT, BT_V2DF, BT_V2DF, BT_DBL, BT_INT)\n-DEF_FN_TYPE_4 (BT_FN_V2DF_V2DF_UCHAR_UCHAR, BT_V2DF, BT_V2DF, BT_UCHAR, BT_UCHAR)\n-DEF_FN_TYPE_4 (BT_FN_V2DI_V2DF_V2DF_INTPTR, BT_V2DI, BT_V2DF, BT_V2DF, BT_INTPTR)\n-DEF_FN_TYPE_4 (BT_FN_V2DI_V4SI_V4SI_V2DI, BT_V2DI, BT_V4SI, BT_V4SI, BT_V2DI)\n-DEF_FN_TYPE_4 (BT_FN_V2DF_V2DF_V2DF_V2DF, BT_V2DF, BT_V2DF, BT_V2DF, BT_V2DF)\n-DEF_FN_TYPE_4 (BT_FN_V2DI_UV2DI_UV2DI_INTPTR, BT_V2DI, BT_UV2DI, BT_UV2DI, BT_INTPTR)\n-DEF_FN_TYPE_4 (BT_FN_V4SI_V8HI_V8HI_V4SI, BT_V4SI, BT_V8HI, BT_V8HI, BT_V4SI)\n-DEF_FN_TYPE_4 (BT_FN_V4SI_UV4SI_UV4SI_INTPTR, BT_V4SI, BT_UV4SI, BT_UV4SI, BT_INTPTR)\n-DEF_FN_TYPE_4 (BT_FN_V4SI_V2DI_V2DI_INTPTR, BT_V4SI, BT_V2DI, BT_V2DI, BT_INTPTR)\n-DEF_FN_TYPE_4 (BT_FN_V4SI_V4SI_V4SI_INTPTR, BT_V4SI, BT_V4SI, BT_V4SI, BT_INTPTR)\n-DEF_FN_TYPE_4 (BT_FN_V4SI_V4SI_V4SI_V4SI, BT_V4SI, BT_V4SI, BT_V4SI, BT_V4SI)\n-DEF_FN_TYPE_4 (BT_FN_V8HI_V8HI_V8HI_V8HI, BT_V8HI, BT_V8HI, BT_V8HI, BT_V8HI)\n-DEF_FN_TYPE_4 (BT_FN_V8HI_UV8HI_UV8HI_INTPTR, BT_V8HI, BT_UV8HI, BT_UV8HI, BT_INTPTR)\n-DEF_FN_TYPE_4 (BT_FN_V8HI_V16QI_V16QI_V8HI, BT_V8HI, BT_V16QI, BT_V16QI, BT_V8HI)\n-DEF_FN_TYPE_4 (BT_FN_V8HI_V8HI_V8HI_INTPTR, BT_V8HI, BT_V8HI, BT_V8HI, BT_INTPTR)\n-DEF_FN_TYPE_4 (BT_FN_V8HI_V4SI_V4SI_INTPTR, BT_V8HI, BT_V4SI, BT_V4SI, BT_INTPTR)\n-DEF_FN_TYPE_5 (BT_FN_VOID_UV4SI_UV4SI_UINTPTR_ULONGLONG, BT_VOID, BT_UV4SI, BT_UV4SI, BT_UINTPTR, BT_ULONGLONG)\n-DEF_FN_TYPE_5 (BT_FN_VOID_UV2DI_UV2DI_ULONGLONGPTR_ULONGLONG, BT_VOID, BT_UV2DI, BT_UV2DI, BT_ULONGLONGPTR, BT_ULONGLONG)\n-DEF_FN_TYPE_5 (BT_FN_VOID_V4SI_V4SI_INTPTR_ULONGLONG, BT_VOID, BT_V4SI, BT_V4SI, BT_INTPTR, BT_ULONGLONG)\n-DEF_FN_TYPE_5 (BT_FN_UV16QI_UV16QI_UV16QI_INT_INTPTR, BT_UV16QI, BT_UV16QI, BT_UV16QI, BT_INT, BT_INTPTR)\n-DEF_FN_TYPE_5 (BT_FN_UV16QI_UV16QI_UV16QI_UV16QI_INT, BT_UV16QI, BT_UV16QI, BT_UV16QI, BT_UV16QI, BT_INT)\n-DEF_FN_TYPE_5 (BT_FN_UV2DI_UV2DI_UV2DI_UV2DI_INT, BT_UV2DI, BT_UV2DI, BT_UV2DI, BT_UV2DI, BT_INT)\n-DEF_FN_TYPE_5 (BT_FN_UV2DI_UV2DI_UV2DI_ULONGLONGCONSTPTR_UCHAR, BT_UV2DI, BT_UV2DI, BT_UV2DI, BT_ULONGLONGCONSTPTR, BT_UCHAR)\n-DEF_FN_TYPE_5 (BT_FN_UV4SI_UV4SI_UV4SI_UV4SI_INT, BT_UV4SI, BT_UV4SI, BT_UV4SI, BT_UV4SI, BT_INT)\n-DEF_FN_TYPE_5 (BT_FN_UV4SI_UV4SI_UV4SI_INT_INTPTR, BT_UV4SI, BT_UV4SI, BT_UV4SI, BT_INT, BT_INTPTR)\n-DEF_FN_TYPE_5 (BT_FN_OV4SI_OV4SI_OV4SI_OV4SI_INTPTR, BT_OV4SI, BT_OV4SI, BT_OV4SI, BT_OV4SI, BT_INTPTR)\n-DEF_FN_TYPE_5 (BT_FN_OV4SI_OV4SI_OUV4SI_INTCONSTPTR_UCHAR, BT_OV4SI, BT_OV4SI, BT_OUV4SI, BT_INTCONSTPTR, BT_UCHAR)\n-DEF_FN_TYPE_5 (BT_FN_UV4SI_UV4SI_UV4SI_UINTCONSTPTR_UCHAR, BT_UV4SI, BT_UV4SI, BT_UV4SI, BT_UINTCONSTPTR, BT_UCHAR)\n-DEF_FN_TYPE_5 (BT_FN_UV8HI_UV8HI_UV8HI_UV8HI_INT, BT_UV8HI, BT_UV8HI, BT_UV8HI, BT_UV8HI, BT_INT)\n-DEF_FN_TYPE_5 (BT_FN_UV8HI_UV8HI_UV8HI_INT_INTPTR, BT_UV8HI, BT_UV8HI, BT_UV8HI, BT_INT, BT_INTPTR)\n-DEF_FN_TYPE_6 (BT_FN_UV16QI_UV16QI_UV16QI_UV16QI_INT_INTPTR, BT_UV16QI, BT_UV16QI, BT_UV16QI, BT_UV16QI, BT_INT, BT_INTPTR)\n-DEF_FN_TYPE_6 (BT_FN_UV4SI_UV4SI_UV4SI_UV4SI_INT_INTPTR, BT_UV4SI, BT_UV4SI, BT_UV4SI, BT_UV4SI, BT_INT, BT_INTPTR)\n-DEF_FN_TYPE_6 (BT_FN_UV8HI_UV8HI_UV8HI_UV8HI_INT_INTPTR, BT_UV8HI, BT_UV8HI, BT_UV8HI, BT_UV8HI, BT_INT, BT_INTPTR)\n+DEF_TYPE (BT_DBL, B_VX, double_type_node, 0)\n+DEF_TYPE (BT_DBLCONST, B_VX, double_type_node, 1)\n+DEF_TYPE (BT_FLT, B_VX, float_type_node, 0)\n+DEF_TYPE (BT_FLTCONST, B_VX, float_type_node, 1)\n+DEF_TYPE (BT_INTCONST, B_VX, integer_type_node, 1)\n+DEF_TYPE (BT_INT, B_HTM | B_VX, integer_type_node, 0)\n+DEF_TYPE (BT_LONGLONGCONST, B_VX, long_long_integer_type_node, 1)\n+DEF_TYPE (BT_LONGLONG, B_VX, long_long_integer_type_node, 0)\n+DEF_TYPE (BT_LONG, B_VX, long_integer_type_node, 0)\n+DEF_TYPE (BT_UCHAR, B_VX, unsigned_char_type_node, 0)\n+DEF_TYPE (BT_SCHAR, B_VX, signed_char_type_node, 0)\n+DEF_TYPE (BT_SCHARCONST, B_VX, signed_char_type_node, 1)\n+DEF_TYPE (BT_SHORTCONST, B_VX, short_integer_type_node, 1)\n+DEF_TYPE (BT_SHORT, B_VX, short_integer_type_node, 0)\n+DEF_TYPE (BT_UINT, 0, unsigned_type_node, 0)\n+DEF_TYPE (BT_UINT64, B_HTM, c_uint64_type_node, 0)\n+DEF_TYPE (BT_UCHARCONST, B_VX, unsigned_char_type_node, 1)\n+DEF_TYPE (BT_UINTCONST, B_VX, unsigned_type_node, 1)\n+DEF_TYPE (BT_ULONGLONGCONST, B_VX, long_long_unsigned_type_node, 1)\n+DEF_TYPE (BT_USHORTCONST, B_VX, short_unsigned_type_node, 1)\n+DEF_TYPE (BT_VOIDCONST, B_VX, void_type_node, 1)\n+DEF_TYPE (BT_VOID, 0, void_type_node, 0)\n+DEF_TYPE (BT_ULONG, B_VX, long_unsigned_type_node, 0)\n+DEF_TYPE (BT_ULONGLONG, B_VX, long_long_unsigned_type_node, 0)\n+DEF_TYPE (BT_USHORT, B_VX, short_unsigned_type_node, 0)\n+DEF_DISTINCT_TYPE (BT_BCHAR, B_VX, BT_UCHAR)\n+DEF_DISTINCT_TYPE (BT_BINT, B_VX, BT_UINT)\n+DEF_DISTINCT_TYPE (BT_BLONGLONG, B_VX, BT_ULONGLONG)\n+DEF_DISTINCT_TYPE (BT_BSHORT, B_VX, BT_USHORT)\n+DEF_POINTER_TYPE (BT_DBLPTR, B_VX, BT_DBL)\n+DEF_POINTER_TYPE (BT_DBLCONSTPTR, B_VX, BT_DBLCONST)\n+DEF_POINTER_TYPE (BT_FLTPTR, B_VX, BT_FLT)\n+DEF_POINTER_TYPE (BT_FLTCONSTPTR, B_VX, BT_FLTCONST)\n+DEF_POINTER_TYPE (BT_INTCONSTPTR, B_VX, BT_INTCONST)\n+DEF_POINTER_TYPE (BT_INTPTR, B_VX, BT_INT)\n+DEF_POINTER_TYPE (BT_LONGLONGCONSTPTR, B_VX, BT_LONGLONGCONST)\n+DEF_POINTER_TYPE (BT_LONGLONGPTR, B_VX, BT_LONGLONG)\n+DEF_POINTER_TYPE (BT_SCHARCONSTPTR, B_VX, BT_SCHARCONST)\n+DEF_POINTER_TYPE (BT_SCHARPTR, B_VX, BT_SCHAR)\n+DEF_POINTER_TYPE (BT_SHORTCONSTPTR, B_VX, BT_SHORTCONST)\n+DEF_POINTER_TYPE (BT_SHORTPTR, B_VX, BT_SHORT)\n+DEF_POINTER_TYPE (BT_UCHARCONSTPTR, B_VX, BT_UCHARCONST)\n+DEF_POINTER_TYPE (BT_UCHARPTR, B_VX, BT_UCHAR)\n+DEF_POINTER_TYPE (BT_UINTPTR, B_VX, BT_UINT)\n+DEF_POINTER_TYPE (BT_UINTCONSTPTR, B_VX, BT_UINTCONST)\n+DEF_POINTER_TYPE (BT_UINT64PTR, B_HTM, BT_UINT64)\n+DEF_POINTER_TYPE (BT_ULONGLONGCONSTPTR, B_VX, BT_ULONGLONGCONST)\n+DEF_POINTER_TYPE (BT_ULONGLONGPTR, B_VX, BT_ULONGLONG)\n+DEF_POINTER_TYPE (BT_USHORTPTR, B_VX, BT_USHORT)\n+DEF_POINTER_TYPE (BT_USHORTCONSTPTR, B_VX, BT_USHORTCONST)\n+DEF_POINTER_TYPE (BT_VOIDPTR, B_HTM | B_VX, BT_VOID)\n+DEF_POINTER_TYPE (BT_VOIDCONSTPTR, B_VX, BT_VOIDCONST)\n+DEF_VECTOR_TYPE (BT_V16QI, B_VX, BT_SCHAR, 16)\n+DEF_VECTOR_TYPE (BT_V2DI, B_VX, BT_LONGLONG, 2)\n+DEF_VECTOR_TYPE (BT_V2DF, B_VX, BT_DBL, 2)\n+DEF_VECTOR_TYPE (BT_V4SI, B_VX, BT_INT, 4)\n+DEF_VECTOR_TYPE (BT_V8HI, B_VX, BT_SHORT, 8)\n+DEF_VECTOR_TYPE (BT_UV16QI, B_VX, BT_UCHAR, 16)\n+DEF_VECTOR_TYPE (BT_UV2DI, B_VX, BT_ULONGLONG, 2)\n+DEF_VECTOR_TYPE (BT_UV4SI, B_VX, BT_UINT, 4)\n+DEF_VECTOR_TYPE (BT_UV8HI, B_VX, BT_USHORT, 8)\n+DEF_OPAQUE_VECTOR_TYPE (BT_OV2DI, B_VX, BT_LONGLONG, 2)\n+DEF_OPAQUE_VECTOR_TYPE (BT_OV4SI, B_VX, BT_INT, 4)\n+DEF_OPAQUE_VECTOR_TYPE (BT_OUV4SI, B_VX, BT_UINT, 4)\n+DEF_OPAQUE_VECTOR_TYPE (BT_BV16QI, B_VX, BT_BCHAR, 16)\n+DEF_OPAQUE_VECTOR_TYPE (BT_BV2DI, B_VX, BT_BLONGLONG, 2)\n+DEF_OPAQUE_VECTOR_TYPE (BT_BV4SI, B_VX, BT_BINT, 4)\n+DEF_OPAQUE_VECTOR_TYPE (BT_BV8HI, B_VX, BT_BSHORT, 8)\n+DEF_FN_TYPE_1 (BT_FN_UINT, 0, BT_UINT)\n+DEF_FN_TYPE_1 (BT_FN_INT, B_HTM, BT_INT)\n+DEF_FN_TYPE_2 (BT_FN_VOID_UINT, 0, BT_VOID, BT_UINT)\n+DEF_FN_TYPE_2 (BT_FN_VOID_INT, B_HTM, BT_VOID, BT_INT)\n+DEF_FN_TYPE_2 (BT_FN_INT_INT, B_VX, BT_INT, BT_INT)\n+DEF_FN_TYPE_2 (BT_FN_INT_VOIDPTR, B_HTM, BT_INT, BT_VOIDPTR)\n+DEF_FN_TYPE_2 (BT_FN_UV16QI_UCHARCONSTPTR, B_VX, BT_UV16QI, BT_UCHARCONSTPTR)\n+DEF_FN_TYPE_2 (BT_FN_UV16QI_USHORT, B_VX, BT_UV16QI, BT_USHORT)\n+DEF_FN_TYPE_2 (BT_FN_UV16QI_UCHAR, B_VX, BT_UV16QI, BT_UCHAR)\n+DEF_FN_TYPE_2 (BT_FN_UV16QI_UV16QI, B_VX, BT_UV16QI, BT_UV16QI)\n+DEF_FN_TYPE_2 (BT_FN_UV2DI_ULONGLONG, B_VX, BT_UV2DI, BT_ULONGLONG)\n+DEF_FN_TYPE_2 (BT_FN_UV2DI_ULONGLONGCONSTPTR, B_VX, BT_UV2DI, BT_ULONGLONGCONSTPTR)\n+DEF_FN_TYPE_2 (BT_FN_UV2DI_UV2DI, B_VX, BT_UV2DI, BT_UV2DI)\n+DEF_FN_TYPE_2 (BT_FN_UV2DI_UV4SI, B_VX, BT_UV2DI, BT_UV4SI)\n+DEF_FN_TYPE_2 (BT_FN_OV4SI_INTCONSTPTR, B_VX, BT_OV4SI, BT_INTCONSTPTR)\n+DEF_FN_TYPE_2 (BT_FN_UV4SI_UV4SI, B_VX, BT_UV4SI, BT_UV4SI)\n+DEF_FN_TYPE_2 (BT_FN_OV4SI_INT, B_VX, BT_OV4SI, BT_INT)\n+DEF_FN_TYPE_2 (BT_FN_OV4SI_OV4SI, B_VX, BT_OV4SI, BT_OV4SI)\n+DEF_FN_TYPE_2 (BT_FN_UV4SI_UINTCONSTPTR, B_VX, BT_UV4SI, BT_UINTCONSTPTR)\n+DEF_FN_TYPE_2 (BT_FN_UV4SI_UV8HI, B_VX, BT_UV4SI, BT_UV8HI)\n+DEF_FN_TYPE_2 (BT_FN_UV4SI_UINT, B_VX, BT_UV4SI, BT_UINT)\n+DEF_FN_TYPE_2 (BT_FN_UV8HI_USHORT, B_VX, BT_UV8HI, BT_USHORT)\n+DEF_FN_TYPE_2 (BT_FN_UV8HI_UV16QI, B_VX, BT_UV8HI, BT_UV16QI)\n+DEF_FN_TYPE_2 (BT_FN_UV8HI_UV8HI, B_VX, BT_UV8HI, BT_UV8HI)\n+DEF_FN_TYPE_2 (BT_FN_UV8HI_USHORTCONSTPTR, B_VX, BT_UV8HI, BT_USHORTCONSTPTR)\n+DEF_FN_TYPE_2 (BT_FN_V16QI_UCHAR, B_VX, BT_V16QI, BT_UCHAR)\n+DEF_FN_TYPE_2 (BT_FN_V16QI_V16QI, B_VX, BT_V16QI, BT_V16QI)\n+DEF_FN_TYPE_2 (BT_FN_V2DI_V16QI, B_VX, BT_V2DI, BT_V16QI)\n+DEF_FN_TYPE_2 (BT_FN_V2DI_V2DI, B_VX, BT_V2DI, BT_V2DI)\n+DEF_FN_TYPE_2 (BT_FN_V2DI_SHORT, B_VX, BT_V2DI, BT_SHORT)\n+DEF_FN_TYPE_2 (BT_FN_V2DF_V2DF, B_VX, BT_V2DF, BT_V2DF)\n+DEF_FN_TYPE_2 (BT_FN_V2DI_V8HI, B_VX, BT_V2DI, BT_V8HI)\n+DEF_FN_TYPE_2 (BT_FN_V2DF_FLTCONSTPTR, B_VX, BT_V2DF, BT_FLTCONSTPTR)\n+DEF_FN_TYPE_2 (BT_FN_V2DI_V4SI, B_VX, BT_V2DI, BT_V4SI)\n+DEF_FN_TYPE_2 (BT_FN_V2DF_DBL, B_VX, BT_V2DF, BT_DBL)\n+DEF_FN_TYPE_2 (BT_FN_V4SI_V8HI, B_VX, BT_V4SI, BT_V8HI)\n+DEF_FN_TYPE_2 (BT_FN_V4SI_V4SI, B_VX, BT_V4SI, BT_V4SI)\n+DEF_FN_TYPE_2 (BT_FN_V4SI_SHORT, B_VX, BT_V4SI, BT_SHORT)\n+DEF_FN_TYPE_2 (BT_FN_V8HI_V16QI, B_VX, BT_V8HI, BT_V16QI)\n+DEF_FN_TYPE_2 (BT_FN_V8HI_V8HI, B_VX, BT_V8HI, BT_V8HI)\n+DEF_FN_TYPE_2 (BT_FN_V8HI_SHORT, B_VX, BT_V8HI, BT_SHORT)\n+DEF_FN_TYPE_3 (BT_FN_INT_V2DI_V2DI, B_VX, BT_INT, BT_V2DI, BT_V2DI)\n+DEF_FN_TYPE_3 (BT_FN_INT_OV4SI_OV4SI, B_VX, BT_INT, BT_OV4SI, BT_OV4SI)\n+DEF_FN_TYPE_3 (BT_FN_INT_V2DF_V2DF, B_VX, BT_INT, BT_V2DF, BT_V2DF)\n+DEF_FN_TYPE_3 (BT_FN_USHORT_UV8HI_INT, B_VX, BT_USHORT, BT_UV8HI, BT_INT)\n+DEF_FN_TYPE_3 (BT_FN_INT_UV2DI_UV2DI, B_VX, BT_INT, BT_UV2DI, BT_UV2DI)\n+DEF_FN_TYPE_3 (BT_FN_ULONGLONG_UV2DI_INT, B_VX, BT_ULONGLONG, BT_UV2DI, BT_INT)\n+DEF_FN_TYPE_3 (BT_FN_INT_UV4SI_UV4SI, B_VX, BT_INT, BT_UV4SI, BT_UV4SI)\n+DEF_FN_TYPE_3 (BT_FN_UCHAR_UV16QI_INT, B_VX, BT_UCHAR, BT_UV16QI, BT_INT)\n+DEF_FN_TYPE_3 (BT_FN_INT_UV8HI_UV8HI, B_VX, BT_INT, BT_UV8HI, BT_UV8HI)\n+DEF_FN_TYPE_3 (BT_FN_INT_V4SI_V4SI, B_VX, BT_INT, BT_V4SI, BT_V4SI)\n+DEF_FN_TYPE_3 (BT_FN_INT_UV16QI_UV16QI, B_VX, BT_INT, BT_UV16QI, BT_UV16QI)\n+DEF_FN_TYPE_3 (BT_FN_INT_V16QI_V16QI, B_VX, BT_INT, BT_V16QI, BT_V16QI)\n+DEF_FN_TYPE_3 (BT_FN_INT_VOIDPTR_INT, B_HTM, BT_INT, BT_VOIDPTR, BT_INT)\n+DEF_FN_TYPE_3 (BT_FN_DBL_V2DF_INT, B_VX, BT_DBL, BT_V2DF, BT_INT)\n+DEF_FN_TYPE_3 (BT_FN_VOID_UINT64PTR_UINT64, B_HTM, BT_VOID, BT_UINT64PTR, BT_UINT64)\n+DEF_FN_TYPE_3 (BT_FN_INT_V8HI_V8HI, B_VX, BT_INT, BT_V8HI, BT_V8HI)\n+DEF_FN_TYPE_3 (BT_FN_UINT_VOIDCONSTPTR_INT, B_VX, BT_UINT, BT_VOIDCONSTPTR, BT_INT)\n+DEF_FN_TYPE_3 (BT_FN_INT_OV4SI_INT, B_VX, BT_INT, BT_OV4SI, BT_INT)\n+DEF_FN_TYPE_3 (BT_FN_VOID_V2DF_FLTPTR, B_VX, BT_VOID, BT_V2DF, BT_FLTPTR)\n+DEF_FN_TYPE_3 (BT_FN_UINT_UV4SI_INT, B_VX, BT_UINT, BT_UV4SI, BT_INT)\n+DEF_FN_TYPE_3 (BT_FN_UV16QI_UV8HI_UV8HI, B_VX, BT_UV16QI, BT_UV8HI, BT_UV8HI)\n+DEF_FN_TYPE_3 (BT_FN_UV16QI_UCHARCONSTPTR_USHORT, B_VX, BT_UV16QI, BT_UCHARCONSTPTR, BT_USHORT)\n+DEF_FN_TYPE_3 (BT_FN_UV16QI_UV16QI_UV16QI, B_VX, BT_UV16QI, BT_UV16QI, BT_UV16QI)\n+DEF_FN_TYPE_3 (BT_FN_UV16QI_UV16QI_UCHAR, B_VX, BT_UV16QI, BT_UV16QI, BT_UCHAR)\n+DEF_FN_TYPE_3 (BT_FN_UV16QI_UV4SI_UV4SI, B_VX, BT_UV16QI, BT_UV4SI, BT_UV4SI)\n+DEF_FN_TYPE_3 (BT_FN_UV16QI_UCHAR_UCHAR, B_VX, BT_UV16QI, BT_UCHAR, BT_UCHAR)\n+DEF_FN_TYPE_3 (BT_FN_UV16QI_UCHAR_INT, B_VX, BT_UV16QI, BT_UCHAR, BT_INT)\n+DEF_FN_TYPE_3 (BT_FN_UV16QI_UV2DI_UV2DI, B_VX, BT_UV16QI, BT_UV2DI, BT_UV2DI)\n+DEF_FN_TYPE_3 (BT_FN_UV16QI_UV16QI_UINT, B_VX, BT_UV16QI, BT_UV16QI, BT_UINT)\n+DEF_FN_TYPE_3 (BT_FN_UV16QI_UV16QI_INTPTR, B_VX, BT_UV16QI, BT_UV16QI, BT_INTPTR)\n+DEF_FN_TYPE_3 (BT_FN_UV2DI_V2DF_INT, B_VX, BT_UV2DI, BT_V2DF, BT_INT)\n+DEF_FN_TYPE_3 (BT_FN_UV2DI_UV2DI_UINT, B_VX, BT_UV2DI, BT_UV2DI, BT_UINT)\n+DEF_FN_TYPE_3 (BT_FN_OV2DI_LONGLONG_LONGLONG, B_VX, BT_OV2DI, BT_LONGLONG, BT_LONGLONG)\n+DEF_FN_TYPE_3 (BT_FN_UV2DI_UV2DI_UV2DI, B_VX, BT_UV2DI, BT_UV2DI, BT_UV2DI)\n+DEF_FN_TYPE_3 (BT_FN_UV2DI_UV2DI_UCHAR, B_VX, BT_UV2DI, BT_UV2DI, BT_UCHAR)\n+DEF_FN_TYPE_3 (BT_FN_UV2DI_ULONGLONG_INT, B_VX, BT_UV2DI, BT_ULONGLONG, BT_INT)\n+DEF_FN_TYPE_3 (BT_FN_UV2DI_UV8HI_UV8HI, B_VX, BT_UV2DI, BT_UV8HI, BT_UV8HI)\n+DEF_FN_TYPE_3 (BT_FN_UV2DI_UCHAR_UCHAR, B_VX, BT_UV2DI, BT_UCHAR, BT_UCHAR)\n+DEF_FN_TYPE_3 (BT_FN_UV2DI_UV4SI_UV4SI, B_VX, BT_UV2DI, BT_UV4SI, BT_UV4SI)\n+DEF_FN_TYPE_3 (BT_FN_OV4SI_INT_INT, B_VX, BT_OV4SI, BT_INT, BT_INT)\n+DEF_FN_TYPE_3 (BT_FN_UV4SI_UINT_INT, B_VX, BT_UV4SI, BT_UINT, BT_INT)\n+DEF_FN_TYPE_3 (BT_FN_UV4SI_UV4SI_UV4SI, B_VX, BT_UV4SI, BT_UV4SI, BT_UV4SI)\n+DEF_FN_TYPE_3 (BT_FN_UV4SI_UV4SI_UCHAR, B_VX, BT_UV4SI, BT_UV4SI, BT_UCHAR)\n+DEF_FN_TYPE_3 (BT_FN_UV4SI_UV8HI_UV8HI, B_VX, BT_UV4SI, BT_UV8HI, BT_UV8HI)\n+DEF_FN_TYPE_3 (BT_FN_OV4SI_OV4SI_UCHAR, B_VX, BT_OV4SI, BT_OV4SI, BT_UCHAR)\n+DEF_FN_TYPE_3 (BT_FN_UV4SI_UV4SI_UINT, B_VX, BT_UV4SI, BT_UV4SI, BT_UINT)\n+DEF_FN_TYPE_3 (BT_FN_UV4SI_UV16QI_UV16QI, B_VX, BT_UV4SI, BT_UV16QI, BT_UV16QI)\n+DEF_FN_TYPE_3 (BT_FN_OV4SI_INTCONSTPTR_INT, B_VX, BT_OV4SI, BT_INTCONSTPTR, BT_INT)\n+DEF_FN_TYPE_3 (BT_FN_OV4SI_OV4SI_INTPTR, B_VX, BT_OV4SI, BT_OV4SI, BT_INTPTR)\n+DEF_FN_TYPE_3 (BT_FN_UV4SI_UV2DI_UV2DI, B_VX, BT_UV4SI, BT_UV2DI, BT_UV2DI)\n+DEF_FN_TYPE_3 (BT_FN_OV4SI_INTCONSTPTR_UINT, B_VX, BT_OV4SI, BT_INTCONSTPTR, BT_UINT)\n+DEF_FN_TYPE_3 (BT_FN_OV4SI_OV4SI_ULONG, B_VX, BT_OV4SI, BT_OV4SI, BT_ULONG)\n+DEF_FN_TYPE_3 (BT_FN_OV4SI_OV4SI_OV4SI, B_VX, BT_OV4SI, BT_OV4SI, BT_OV4SI)\n+DEF_FN_TYPE_3 (BT_FN_UV4SI_UCHAR_UCHAR, B_VX, BT_UV4SI, BT_UCHAR, BT_UCHAR)\n+DEF_FN_TYPE_3 (BT_FN_UV4SI_UV4SI_INTPTR, B_VX, BT_UV4SI, BT_UV4SI, BT_INTPTR)\n+DEF_FN_TYPE_3 (BT_FN_UV8HI_UV4SI_UV4SI, B_VX, BT_UV8HI, BT_UV4SI, BT_UV4SI)\n+DEF_FN_TYPE_3 (BT_FN_UV8HI_UV16QI_UV16QI, B_VX, BT_UV8HI, BT_UV16QI, BT_UV16QI)\n+DEF_FN_TYPE_3 (BT_FN_UV8HI_UCHAR_UCHAR, B_VX, BT_UV8HI, BT_UCHAR, BT_UCHAR)\n+DEF_FN_TYPE_3 (BT_FN_UV8HI_UV8HI_UV8HI, B_VX, BT_UV8HI, BT_UV8HI, BT_UV8HI)\n+DEF_FN_TYPE_3 (BT_FN_UV8HI_UV8HI_UCHAR, B_VX, BT_UV8HI, BT_UV8HI, BT_UCHAR)\n+DEF_FN_TYPE_3 (BT_FN_UV8HI_UV8HI_INTPTR, B_VX, BT_UV8HI, BT_UV8HI, BT_INTPTR)\n+DEF_FN_TYPE_3 (BT_FN_UV8HI_UV8HI_UINT, B_VX, BT_UV8HI, BT_UV8HI, BT_UINT)\n+DEF_FN_TYPE_3 (BT_FN_UV8HI_USHORT_INT, B_VX, BT_UV8HI, BT_USHORT, BT_INT)\n+DEF_FN_TYPE_3 (BT_FN_V16QI_UV16QI_UV16QI, B_VX, BT_V16QI, BT_UV16QI, BT_UV16QI)\n+DEF_FN_TYPE_3 (BT_FN_V16QI_UINT_VOIDCONSTPTR, B_VX, BT_V16QI, BT_UINT, BT_VOIDCONSTPTR)\n+DEF_FN_TYPE_3 (BT_FN_V16QI_V8HI_V8HI, B_VX, BT_V16QI, BT_V8HI, BT_V8HI)\n+DEF_FN_TYPE_3 (BT_FN_V16QI_BV16QI_V16QI, B_VX, BT_V16QI, BT_BV16QI, BT_V16QI)\n+DEF_FN_TYPE_3 (BT_FN_V16QI_V16QI_V16QI, B_VX, BT_V16QI, BT_V16QI, BT_V16QI)\n+DEF_FN_TYPE_3 (BT_FN_V2DI_V2DF_INT, B_VX, BT_V2DI, BT_V2DF, BT_INT)\n+DEF_FN_TYPE_3 (BT_FN_V2DI_V2DF_V2DF, B_VX, BT_V2DI, BT_V2DF, BT_V2DF)\n+DEF_FN_TYPE_3 (BT_FN_V2DI_V4SI_V4SI, B_VX, BT_V2DI, BT_V4SI, BT_V4SI)\n+DEF_FN_TYPE_3 (BT_FN_V2DI_UV2DI_UV2DI, B_VX, BT_V2DI, BT_UV2DI, BT_UV2DI)\n+DEF_FN_TYPE_3 (BT_FN_V2DI_V2DI_V2DI, B_VX, BT_V2DI, BT_V2DI, BT_V2DI)\n+DEF_FN_TYPE_3 (BT_FN_V2DF_V2DI_INT, B_VX, BT_V2DF, BT_V2DI, BT_INT)\n+DEF_FN_TYPE_3 (BT_FN_V2DF_UV2DI_INT, B_VX, BT_V2DF, BT_UV2DI, BT_INT)\n+DEF_FN_TYPE_3 (BT_FN_V2DF_V2DF_V2DF, B_VX, BT_V2DF, BT_V2DF, BT_V2DF)\n+DEF_FN_TYPE_3 (BT_FN_V2DF_DBL_INT, B_VX, BT_V2DF, BT_DBL, BT_INT)\n+DEF_FN_TYPE_3 (BT_FN_V2DI_BV2DI_V2DI, B_VX, BT_V2DI, BT_BV2DI, BT_V2DI)\n+DEF_FN_TYPE_3 (BT_FN_V2DF_UV4SI_INT, B_VX, BT_V2DF, BT_UV4SI, BT_INT)\n+DEF_FN_TYPE_3 (BT_FN_V4SI_V4SI_V4SI, B_VX, BT_V4SI, BT_V4SI, BT_V4SI)\n+DEF_FN_TYPE_3 (BT_FN_V4SI_V8HI_V8HI, B_VX, BT_V4SI, BT_V8HI, BT_V8HI)\n+DEF_FN_TYPE_3 (BT_FN_V4SI_INT_VOIDPTR, B_VX, BT_V4SI, BT_INT, BT_VOIDPTR)\n+DEF_FN_TYPE_3 (BT_FN_V4SI_V2DI_V2DI, B_VX, BT_V4SI, BT_V2DI, BT_V2DI)\n+DEF_FN_TYPE_3 (BT_FN_V4SI_UV4SI_UV4SI, B_VX, BT_V4SI, BT_UV4SI, BT_UV4SI)\n+DEF_FN_TYPE_3 (BT_FN_V4SI_BV4SI_V4SI, B_VX, BT_V4SI, BT_BV4SI, BT_V4SI)\n+DEF_FN_TYPE_3 (BT_FN_V8HI_BV8HI_V8HI, B_VX, BT_V8HI, BT_BV8HI, BT_V8HI)\n+DEF_FN_TYPE_3 (BT_FN_V8HI_V16QI_V16QI, B_VX, BT_V8HI, BT_V16QI, BT_V16QI)\n+DEF_FN_TYPE_3 (BT_FN_V8HI_V4SI_V4SI, B_VX, BT_V8HI, BT_V4SI, BT_V4SI)\n+DEF_FN_TYPE_3 (BT_FN_V8HI_UV8HI_UV8HI, B_VX, BT_V8HI, BT_UV8HI, BT_UV8HI)\n+DEF_FN_TYPE_3 (BT_FN_V8HI_V8HI_V8HI, B_VX, BT_V8HI, BT_V8HI, BT_V8HI)\n+DEF_FN_TYPE_4 (BT_FN_VOID_OV4SI_VOIDPTR_UINT, B_VX, BT_VOID, BT_OV4SI, BT_VOIDPTR, BT_UINT)\n+DEF_FN_TYPE_4 (BT_FN_INT_OV4SI_OV4SI_INTPTR, B_VX, BT_INT, BT_OV4SI, BT_OV4SI, BT_INTPTR)\n+DEF_FN_TYPE_4 (BT_FN_VOID_V16QI_UINT_VOIDPTR, B_VX, BT_VOID, BT_V16QI, BT_UINT, BT_VOIDPTR)\n+DEF_FN_TYPE_4 (BT_FN_VOID_OV4SI_INT_VOIDPTR, B_VX, BT_VOID, BT_OV4SI, BT_INT, BT_VOIDPTR)\n+DEF_FN_TYPE_4 (BT_FN_UV16QI_UV16QI_UV16QI_INTPTR, B_VX, BT_UV16QI, BT_UV16QI, BT_UV16QI, BT_INTPTR)\n+DEF_FN_TYPE_4 (BT_FN_UV16QI_UV16QI_UV16QI_INT, B_VX, BT_UV16QI, BT_UV16QI, BT_UV16QI, BT_INT)\n+DEF_FN_TYPE_4 (BT_FN_UV16QI_UV16QI_UCHAR_INT, B_VX, BT_UV16QI, BT_UV16QI, BT_UCHAR, BT_INT)\n+DEF_FN_TYPE_4 (BT_FN_UV16QI_UV16QI_UV16QI_UV16QI, B_VX, BT_UV16QI, BT_UV16QI, BT_UV16QI, BT_UV16QI)\n+DEF_FN_TYPE_4 (BT_FN_UV16QI_UV8HI_UV8HI_INTPTR, B_VX, BT_UV16QI, BT_UV8HI, BT_UV8HI, BT_INTPTR)\n+DEF_FN_TYPE_4 (BT_FN_UV16QI_UV2DI_UV2DI_UV16QI, B_VX, BT_UV16QI, BT_UV2DI, BT_UV2DI, BT_UV16QI)\n+DEF_FN_TYPE_4 (BT_FN_UV2DI_UV2DI_UV2DI_INT, B_VX, BT_UV2DI, BT_UV2DI, BT_UV2DI, BT_INT)\n+DEF_FN_TYPE_4 (BT_FN_UV2DI_UV4SI_UV4SI_UV2DI, B_VX, BT_UV2DI, BT_UV4SI, BT_UV4SI, BT_UV2DI)\n+DEF_FN_TYPE_4 (BT_FN_UV2DI_UV2DI_ULONGLONG_INT, B_VX, BT_UV2DI, BT_UV2DI, BT_ULONGLONG, BT_INT)\n+DEF_FN_TYPE_4 (BT_FN_UV4SI_UV2DI_UV2DI_INTPTR, B_VX, BT_UV4SI, BT_UV2DI, BT_UV2DI, BT_INTPTR)\n+DEF_FN_TYPE_4 (BT_FN_UV4SI_UV4SI_UV4SI_UV4SI, B_VX, BT_UV4SI, BT_UV4SI, BT_UV4SI, BT_UV4SI)\n+DEF_FN_TYPE_4 (BT_FN_OV4SI_OV4SI_OV4SI_INTPTR, B_VX, BT_OV4SI, BT_OV4SI, BT_OV4SI, BT_INTPTR)\n+DEF_FN_TYPE_4 (BT_FN_OV4SI_OV4SI_OV4SI_INT, B_VX, BT_OV4SI, BT_OV4SI, BT_OV4SI, BT_INT)\n+DEF_FN_TYPE_4 (BT_FN_UV4SI_UV4SI_UV4SI_INTPTR, B_VX, BT_UV4SI, BT_UV4SI, BT_UV4SI, BT_INTPTR)\n+DEF_FN_TYPE_4 (BT_FN_OV4SI_INT_OV4SI_INT, B_VX, BT_OV4SI, BT_INT, BT_OV4SI, BT_INT)\n+DEF_FN_TYPE_4 (BT_FN_UV4SI_UV4SI_UV4SI_INT, B_VX, BT_UV4SI, BT_UV4SI, BT_UV4SI, BT_INT)\n+DEF_FN_TYPE_4 (BT_FN_OV4SI_OV4SI_OV4SI_ULONGLONG, B_VX, BT_OV4SI, BT_OV4SI, BT_OV4SI, BT_ULONGLONG)\n+DEF_FN_TYPE_4 (BT_FN_OV4SI_OV4SI_OV4SI_OV4SI, B_VX, BT_OV4SI, BT_OV4SI, BT_OV4SI, BT_OV4SI)\n+DEF_FN_TYPE_4 (BT_FN_UV4SI_UV8HI_UV8HI_UV4SI, B_VX, BT_UV4SI, BT_UV8HI, BT_UV8HI, BT_UV4SI)\n+DEF_FN_TYPE_4 (BT_FN_UV4SI_UV4SI_UINT_INT, B_VX, BT_UV4SI, BT_UV4SI, BT_UINT, BT_INT)\n+DEF_FN_TYPE_4 (BT_FN_OV4SI_OV4SI_OV4SI_UCHAR, B_VX, BT_OV4SI, BT_OV4SI, BT_OV4SI, BT_UCHAR)\n+DEF_FN_TYPE_4 (BT_FN_UV8HI_UV4SI_UV4SI_INTPTR, B_VX, BT_UV8HI, BT_UV4SI, BT_UV4SI, BT_INTPTR)\n+DEF_FN_TYPE_4 (BT_FN_UV8HI_UV8HI_UV8HI_INT, B_VX, BT_UV8HI, BT_UV8HI, BT_UV8HI, BT_INT)\n+DEF_FN_TYPE_4 (BT_FN_UV8HI_UV8HI_UV8HI_UV8HI, B_VX, BT_UV8HI, BT_UV8HI, BT_UV8HI, BT_UV8HI)\n+DEF_FN_TYPE_4 (BT_FN_UV8HI_UV16QI_UV16QI_UV8HI, B_VX, BT_UV8HI, BT_UV16QI, BT_UV16QI, BT_UV8HI)\n+DEF_FN_TYPE_4 (BT_FN_UV8HI_UV8HI_UV8HI_INTPTR, B_VX, BT_UV8HI, BT_UV8HI, BT_UV8HI, BT_INTPTR)\n+DEF_FN_TYPE_4 (BT_FN_UV8HI_UV8HI_USHORT_INT, B_VX, BT_UV8HI, BT_UV8HI, BT_USHORT, BT_INT)\n+DEF_FN_TYPE_4 (BT_FN_V16QI_V8HI_V8HI_INTPTR, B_VX, BT_V16QI, BT_V8HI, BT_V8HI, BT_INTPTR)\n+DEF_FN_TYPE_4 (BT_FN_V16QI_V16QI_V16QI_INTPTR, B_VX, BT_V16QI, BT_V16QI, BT_V16QI, BT_INTPTR)\n+DEF_FN_TYPE_4 (BT_FN_V16QI_UV16QI_UV16QI_INTPTR, B_VX, BT_V16QI, BT_UV16QI, BT_UV16QI, BT_INTPTR)\n+DEF_FN_TYPE_4 (BT_FN_V16QI_V16QI_V16QI_V16QI, B_VX, BT_V16QI, BT_V16QI, BT_V16QI, BT_V16QI)\n+DEF_FN_TYPE_4 (BT_FN_V2DI_V2DF_INT_INTPTR, B_VX, BT_V2DI, BT_V2DF, BT_INT, BT_INTPTR)\n+DEF_FN_TYPE_4 (BT_FN_V2DI_V2DI_V2DI_INTPTR, B_VX, BT_V2DI, BT_V2DI, BT_V2DI, BT_INTPTR)\n+DEF_FN_TYPE_4 (BT_FN_V2DF_V2DF_DBL_INT, B_VX, BT_V2DF, BT_V2DF, BT_DBL, BT_INT)\n+DEF_FN_TYPE_4 (BT_FN_V2DF_V2DF_UCHAR_UCHAR, B_VX, BT_V2DF, BT_V2DF, BT_UCHAR, BT_UCHAR)\n+DEF_FN_TYPE_4 (BT_FN_V2DI_V2DF_V2DF_INTPTR, B_VX, BT_V2DI, BT_V2DF, BT_V2DF, BT_INTPTR)\n+DEF_FN_TYPE_4 (BT_FN_V2DI_V4SI_V4SI_V2DI, B_VX, BT_V2DI, BT_V4SI, BT_V4SI, BT_V2DI)\n+DEF_FN_TYPE_4 (BT_FN_V2DF_V2DF_V2DF_V2DF, B_VX, BT_V2DF, BT_V2DF, BT_V2DF, BT_V2DF)\n+DEF_FN_TYPE_4 (BT_FN_V2DI_UV2DI_UV2DI_INTPTR, B_VX, BT_V2DI, BT_UV2DI, BT_UV2DI, BT_INTPTR)\n+DEF_FN_TYPE_4 (BT_FN_V4SI_V8HI_V8HI_V4SI, B_VX, BT_V4SI, BT_V8HI, BT_V8HI, BT_V4SI)\n+DEF_FN_TYPE_4 (BT_FN_V4SI_UV4SI_UV4SI_INTPTR, B_VX, BT_V4SI, BT_UV4SI, BT_UV4SI, BT_INTPTR)\n+DEF_FN_TYPE_4 (BT_FN_V4SI_V2DI_V2DI_INTPTR, B_VX, BT_V4SI, BT_V2DI, BT_V2DI, BT_INTPTR)\n+DEF_FN_TYPE_4 (BT_FN_V4SI_V4SI_V4SI_INTPTR, B_VX, BT_V4SI, BT_V4SI, BT_V4SI, BT_INTPTR)\n+DEF_FN_TYPE_4 (BT_FN_V4SI_V4SI_V4SI_V4SI, B_VX, BT_V4SI, BT_V4SI, BT_V4SI, BT_V4SI)\n+DEF_FN_TYPE_4 (BT_FN_V8HI_V8HI_V8HI_V8HI, B_VX, BT_V8HI, BT_V8HI, BT_V8HI, BT_V8HI)\n+DEF_FN_TYPE_4 (BT_FN_V8HI_UV8HI_UV8HI_INTPTR, B_VX, BT_V8HI, BT_UV8HI, BT_UV8HI, BT_INTPTR)\n+DEF_FN_TYPE_4 (BT_FN_V8HI_V16QI_V16QI_V8HI, B_VX, BT_V8HI, BT_V16QI, BT_V16QI, BT_V8HI)\n+DEF_FN_TYPE_4 (BT_FN_V8HI_V8HI_V8HI_INTPTR, B_VX, BT_V8HI, BT_V8HI, BT_V8HI, BT_INTPTR)\n+DEF_FN_TYPE_4 (BT_FN_V8HI_V4SI_V4SI_INTPTR, B_VX, BT_V8HI, BT_V4SI, BT_V4SI, BT_INTPTR)\n+DEF_FN_TYPE_5 (BT_FN_VOID_UV4SI_UV4SI_UINTPTR_ULONGLONG, B_VX, BT_VOID, BT_UV4SI, BT_UV4SI, BT_UINTPTR, BT_ULONGLONG)\n+DEF_FN_TYPE_5 (BT_FN_VOID_UV2DI_UV2DI_ULONGLONGPTR_ULONGLONG, B_VX, BT_VOID, BT_UV2DI, BT_UV2DI, BT_ULONGLONGPTR, BT_ULONGLONG)\n+DEF_FN_TYPE_5 (BT_FN_VOID_V4SI_V4SI_INTPTR_ULONGLONG, B_VX, BT_VOID, BT_V4SI, BT_V4SI, BT_INTPTR, BT_ULONGLONG)\n+DEF_FN_TYPE_5 (BT_FN_UV16QI_UV16QI_UV16QI_INT_INTPTR, B_VX, BT_UV16QI, BT_UV16QI, BT_UV16QI, BT_INT, BT_INTPTR)\n+DEF_FN_TYPE_5 (BT_FN_UV16QI_UV16QI_UV16QI_UV16QI_INT, B_VX, BT_UV16QI, BT_UV16QI, BT_UV16QI, BT_UV16QI, BT_INT)\n+DEF_FN_TYPE_5 (BT_FN_UV2DI_UV2DI_UV2DI_UV2DI_INT, B_VX, BT_UV2DI, BT_UV2DI, BT_UV2DI, BT_UV2DI, BT_INT)\n+DEF_FN_TYPE_5 (BT_FN_UV2DI_UV2DI_UV2DI_ULONGLONGCONSTPTR_UCHAR, B_VX, BT_UV2DI, BT_UV2DI, BT_UV2DI, BT_ULONGLONGCONSTPTR, BT_UCHAR)\n+DEF_FN_TYPE_5 (BT_FN_UV4SI_UV4SI_UV4SI_UV4SI_INT, B_VX, BT_UV4SI, BT_UV4SI, BT_UV4SI, BT_UV4SI, BT_INT)\n+DEF_FN_TYPE_5 (BT_FN_UV4SI_UV4SI_UV4SI_INT_INTPTR, B_VX, BT_UV4SI, BT_UV4SI, BT_UV4SI, BT_INT, BT_INTPTR)\n+DEF_FN_TYPE_5 (BT_FN_OV4SI_OV4SI_OV4SI_OV4SI_INTPTR, B_VX, BT_OV4SI, BT_OV4SI, BT_OV4SI, BT_OV4SI, BT_INTPTR)\n+DEF_FN_TYPE_5 (BT_FN_OV4SI_OV4SI_OUV4SI_INTCONSTPTR_UCHAR, B_VX, BT_OV4SI, BT_OV4SI, BT_OUV4SI, BT_INTCONSTPTR, BT_UCHAR)\n+DEF_FN_TYPE_5 (BT_FN_UV4SI_UV4SI_UV4SI_UINTCONSTPTR_UCHAR, B_VX, BT_UV4SI, BT_UV4SI, BT_UV4SI, BT_UINTCONSTPTR, BT_UCHAR)\n+DEF_FN_TYPE_5 (BT_FN_UV8HI_UV8HI_UV8HI_UV8HI_INT, B_VX, BT_UV8HI, BT_UV8HI, BT_UV8HI, BT_UV8HI, BT_INT)\n+DEF_FN_TYPE_5 (BT_FN_UV8HI_UV8HI_UV8HI_INT_INTPTR, B_VX, BT_UV8HI, BT_UV8HI, BT_UV8HI, BT_INT, BT_INTPTR)\n+DEF_FN_TYPE_6 (BT_FN_UV16QI_UV16QI_UV16QI_UV16QI_INT_INTPTR, B_VX, BT_UV16QI, BT_UV16QI, BT_UV16QI, BT_UV16QI, BT_INT, BT_INTPTR)\n+DEF_FN_TYPE_6 (BT_FN_UV4SI_UV4SI_UV4SI_UV4SI_INT_INTPTR, B_VX, BT_UV4SI, BT_UV4SI, BT_UV4SI, BT_UV4SI, BT_INT, BT_INTPTR)\n+DEF_FN_TYPE_6 (BT_FN_UV8HI_UV8HI_UV8HI_UV8HI_INT_INTPTR, B_VX, BT_UV8HI, BT_UV8HI, BT_UV8HI, BT_UV8HI, BT_INT, BT_INTPTR)\n DEF_OV_TYPE (BT_OV_BV16QI_BV16QI, BT_BV16QI, BT_BV16QI)\n DEF_OV_TYPE (BT_OV_UV16QI_UV16QI, BT_UV16QI, BT_UV16QI)\n DEF_OV_TYPE (BT_OV_UV16QI_UCHAR, BT_UV16QI, BT_UCHAR)"}, {"sha": "17f9c85b18fbe5a8389b141c91e74b8804491d75", "filename": "gcc/config/s390/s390-builtins.def", "status": "modified", "additions": 604, "deletions": 611, "changes": 1215, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4d28290bb69d2e2ac1b17a8d23d4952582eaa00/gcc%2Fconfig%2Fs390%2Fs390-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4d28290bb69d2e2ac1b17a8d23d4952582eaa00/gcc%2Fconfig%2Fs390%2Fs390-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390-builtins.def?ref=f4d28290bb69d2e2ac1b17a8d23d4952582eaa00"}, {"sha": "f8f010ddad6565cf4be0af4de8653c9a8826e03a", "filename": "gcc/config/s390/s390-builtins.h", "status": "modified", "additions": 26, "deletions": 11, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4d28290bb69d2e2ac1b17a8d23d4952582eaa00/gcc%2Fconfig%2Fs390%2Fs390-builtins.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4d28290bb69d2e2ac1b17a8d23d4952582eaa00/gcc%2Fconfig%2Fs390%2Fs390-builtins.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390-builtins.h?ref=f4d28290bb69d2e2ac1b17a8d23d4952582eaa00", "patch": "@@ -35,11 +35,11 @@ enum s390_builtin_type_index\n #undef DEF_OPAQUE_VECTOR_TYPE\n #undef DEF_FN_TYPE\n #undef DEF_OV_TYPE\n-#define DEF_TYPE(INDEX, NODE, CONST_P) INDEX,\n-#define DEF_POINTER_TYPE(INDEX, INDEX2) INDEX,\n-#define DEF_DISTINCT_TYPE(INDEX, INDEX2) INDEX,\n-#define DEF_VECTOR_TYPE(INDEX, INDEX2, ELEMENTS) INDEX,\n-#define DEF_OPAQUE_VECTOR_TYPE(INDEX, INDEX2, ELEMENTS) INDEX,\n+#define DEF_TYPE(INDEX, ...) INDEX,\n+#define DEF_POINTER_TYPE(INDEX, ...) INDEX,\n+#define DEF_DISTINCT_TYPE(INDEX, ...) INDEX,\n+#define DEF_VECTOR_TYPE(INDEX, ...) INDEX,\n+#define DEF_OPAQUE_VECTOR_TYPE(INDEX, ...) INDEX,\n #define DEF_FN_TYPE(...)\n #define DEF_OV_TYPE(...)\n #include \"s390-builtin-types.def\"\n@@ -139,20 +139,35 @@ S390_OVERLOADED_BUILTIN_VAR_MAX\n   (S390_BUILTIN_MAX + S390_OVERLOADED_BUILTIN_MAX +\t\\\n    S390_OVERLOADED_BUILTIN_VAR_MAX)\n \n-extern const unsigned int flags_builtin[S390_BUILTIN_MAX + 1];\n+extern const unsigned int bflags_builtin[S390_BUILTIN_MAX + 1];\n+extern const unsigned int opflags_builtin[S390_BUILTIN_MAX + 1];\n+\n+extern const unsigned int\n+  bflags_overloaded_builtin[S390_OVERLOADED_BUILTIN_MAX + 1];\n extern const unsigned int\n-  flags_overloaded_builtin_var[S390_OVERLOADED_BUILTIN_VAR_MAX + 1];\n+  opflags_overloaded_builtin_var[S390_OVERLOADED_BUILTIN_VAR_MAX + 1];\n+\n+static inline unsigned int\n+bflags_for_builtin (int fcode)\n+{\n+  if (fcode >= S390_OVERLOADED_BUILTIN_VAR_OFFSET)\n+    gcc_unreachable ();\n+  else if (fcode >= S390_OVERLOADED_BUILTIN_OFFSET)\n+    return bflags_overloaded_builtin[fcode - S390_BUILTIN_MAX];\n+  else\n+    return bflags_builtin[fcode];\n+}\n \n static inline unsigned int\n-flags_for_builtin (int fcode)\n+opflags_for_builtin (int fcode)\n {\n   if (fcode >= S390_OVERLOADED_BUILTIN_VAR_OFFSET)\n-    return flags_overloaded_builtin_var[fcode -\n-\t\t\t\t\tS390_OVERLOADED_BUILTIN_VAR_OFFSET];\n+    return opflags_overloaded_builtin_var[fcode -\n+\t\t\t\t\t  S390_OVERLOADED_BUILTIN_VAR_OFFSET];\n   else if (fcode >= S390_OVERLOADED_BUILTIN_OFFSET)\n     gcc_unreachable ();\n   else\n-    return flags_builtin[fcode];\n+    return opflags_builtin[fcode];\n }\n \n extern tree s390_builtin_decls[S390_BUILTIN_MAX +"}, {"sha": "acb320d0a3173deeef96efccf92026cb3cc1d036", "filename": "gcc/config/s390/s390-c.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4d28290bb69d2e2ac1b17a8d23d4952582eaa00/gcc%2Fconfig%2Fs390%2Fs390-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4d28290bb69d2e2ac1b17a8d23d4952582eaa00/gcc%2Fconfig%2Fs390%2Fs390-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390-c.c?ref=f4d28290bb69d2e2ac1b17a8d23d4952582eaa00", "patch": "@@ -82,7 +82,7 @@ desc_start_for_overloaded_builtin[S390_OVERLOADED_BUILTIN_MAX + 1] =\n #undef OB_DEF\n #undef OB_DEF_VAR\n #define B_DEF(...)\n-#define OB_DEF(NAME, FIRST_VAR_NAME, LAST_VAR_NAME, FNTYPE)\t\\\n+#define OB_DEF(NAME, FIRST_VAR_NAME,...)\t\\\n     S390_OVERLOADED_BUILTIN_VAR_##FIRST_VAR_NAME,\n #define OB_DEF_VAR(...)\n     #include \"s390-builtins.def\"\n@@ -99,7 +99,7 @@ desc_end_for_overloaded_builtin[S390_OVERLOADED_BUILTIN_MAX + 1] =\n #undef OB_DEF\n #undef OB_DEF_VAR\n #define B_DEF(...)\n-#define OB_DEF(NAME, FIRST_VAR_NAME, LAST_VAR_NAME, FNTYPE)\t\\\n+#define OB_DEF(NAME, FIRST_VAR_NAME, LAST_VAR_NAME,...)\t\\\n     S390_OVERLOADED_BUILTIN_VAR_##LAST_VAR_NAME,\n #define OB_DEF_VAR(...)\n     #include \"s390-builtins.def\"\n@@ -126,7 +126,8 @@ s390_builtin_ov_types[BT_OV_MAX][MAX_OV_OPERANDS] =\n #include \"s390-builtin-types.def\"\n   };\n \n-static const enum s390_builtins bt_for_overloaded_builtin_var[S390_OVERLOADED_BUILTIN_VAR_MAX] = {\n+static const enum s390_builtins\n+bt_for_overloaded_builtin_var[S390_OVERLOADED_BUILTIN_VAR_MAX] = {\n #undef B_DEF\n #undef OB_DEF\n #undef OB_DEF_VAR\n@@ -751,7 +752,7 @@ s390_resolve_overloaded_builtin (location_t loc,\n   /* 0...S390_BUILTIN_MAX-1 is for non-overloaded builtins.  */\n   if (ob_fcode < S390_BUILTIN_MAX)\n     {\n-      if (flags_for_builtin(ob_fcode) & B_INT)\n+      if (bflags_for_builtin(ob_fcode) & B_INT)\n \t{\n \t  error_at (loc,\n \t\t    \"Builtin %qF is for GCC internal use only.\",\n@@ -835,7 +836,7 @@ s390_resolve_overloaded_builtin (location_t loc,\n   else\n     target_builtin_decl = s390_builtin_decls[bt_for_overloaded_builtin_var[last_match_index]];\n \n-  all_op_flags = flags_overloaded_builtin_var[last_match_index];\n+  all_op_flags = opflags_overloaded_builtin_var[last_match_index];\n   return_type = s390_builtin_types[s390_builtin_ov_types[last_match_fntype_index][0]];\n \n   /* Check for the operand flags in the overloaded builtin variant.  */"}, {"sha": "6cb323e7fd95d5e61a0617df912b0ff48251f221", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 74, "deletions": 38, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4d28290bb69d2e2ac1b17a8d23d4952582eaa00/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4d28290bb69d2e2ac1b17a8d23d4952582eaa00/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=f4d28290bb69d2e2ac1b17a8d23d4952582eaa00", "patch": "@@ -547,19 +547,44 @@ s390_check_type_for_vector_abi (const_tree type, bool arg_p, bool in_struct_p)\n \n #include \"s390-builtins.h\"\n \n-const unsigned int flags_builtin[S390_BUILTIN_MAX + 1] =\n+const unsigned int bflags_builtin[S390_BUILTIN_MAX + 1] =\n   {\n #undef B_DEF\n #undef OB_DEF\n #undef OB_DEF_VAR\n-#define B_DEF(NAME, PATTERN, ATTRS, FLAGS, FNTYPE) FLAGS,\n+#define B_DEF(NAME, PATTERN, ATTRS, BFLAGS, ...) BFLAGS,\n #define OB_DEF(...)\n #define OB_DEF_VAR(...)\n #include \"s390-builtins.def\"\n     0\n   };\n \n-const unsigned int flags_overloaded_builtin_var[S390_OVERLOADED_BUILTIN_VAR_MAX + 1] =\n+const unsigned int opflags_builtin[S390_BUILTIN_MAX + 1] =\n+  {\n+#undef B_DEF\n+#undef OB_DEF\n+#undef OB_DEF_VAR\n+#define B_DEF(NAME, PATTERN, ATTRS, BFLAGS, OPFLAGS, ...) OPFLAGS,\n+#define OB_DEF(...)\n+#define OB_DEF_VAR(...)\n+#include \"s390-builtins.def\"\n+    0\n+  };\n+\n+const unsigned int bflags_overloaded_builtin[S390_OVERLOADED_BUILTIN_MAX + 1] =\n+  {\n+#undef B_DEF\n+#undef OB_DEF\n+#undef OB_DEF_VAR\n+#define B_DEF(...)\n+#define OB_DEF(NAME, FIRST_VAR_NAME, LAST_VAR_NAME, BFLAGS, ...) BFLAGS,\n+#define OB_DEF_VAR(...)\n+#include \"s390-builtins.def\"\n+    0\n+  };\n+\n+const unsigned int\n+opflags_overloaded_builtin_var[S390_OVERLOADED_BUILTIN_VAR_MAX + 1] =\n   {\n #undef B_DEF\n #undef OB_DEF\n@@ -597,6 +622,10 @@ s390_init_builtins (void)\n \t\t\t\t       NULL, NULL);\n   tree noreturn_attr = tree_cons (get_identifier (\"noreturn\"), NULL, NULL);\n   tree c_uint64_type_node;\n+  unsigned int bflags_mask = (BFLAGS_MASK_INIT);\n+\n+  bflags_mask |= (TARGET_VX)  ? B_VX  : 0;\n+  bflags_mask |= (TARGET_HTM) ? B_HTM : 0;\n \n   /* The uint64_type_node from tree.c is not compatible to the C99\n      uint64_t data type.  What we want is c_uint64_type_node from\n@@ -608,56 +637,64 @@ s390_init_builtins (void)\n     c_uint64_type_node = long_long_unsigned_type_node;\n \n #undef DEF_TYPE\n-#define DEF_TYPE(INDEX, NODE, CONST_P)\t\t\t\\\n-  s390_builtin_types[INDEX] = (!CONST_P) ?\t\t\\\n-    (NODE) : build_type_variant ((NODE), 1, 0);\n+#define DEF_TYPE(INDEX, BFLAGS, NODE, CONST_P)\t\t\\\n+  if ((BFLAGS) == 0 || ((BFLAGS) & bflags_mask))\t\\\n+    s390_builtin_types[INDEX] = (!CONST_P) ?\t\t\\\n+      (NODE) : build_type_variant ((NODE), 1, 0);\n \n #undef DEF_POINTER_TYPE\n-#define DEF_POINTER_TYPE(INDEX, INDEX_BASE)\t\t\t\t\\\n-  s390_builtin_types[INDEX] =\t\t\t\t\t\t\\\n-    build_pointer_type (s390_builtin_types[INDEX_BASE]);\n+#define DEF_POINTER_TYPE(INDEX, BFLAGS, INDEX_BASE)\t\t\t\\\n+  if ((BFLAGS) == 0 || ((BFLAGS) & bflags_mask))\t\t\t\\\n+    s390_builtin_types[INDEX] =\t\t\t\t\t\t\\\n+      build_pointer_type (s390_builtin_types[INDEX_BASE]);\n \n #undef DEF_DISTINCT_TYPE\n-#define DEF_DISTINCT_TYPE(INDEX, INDEX_BASE)\t\t\t\t\\\n-  s390_builtin_types[INDEX] =\t\t\t\t\t\t\\\n-    build_distinct_type_copy (s390_builtin_types[INDEX_BASE]);\n+#define DEF_DISTINCT_TYPE(INDEX, BFLAGS, INDEX_BASE)\t\t\t\\\n+  if ((BFLAGS) == 0 || ((BFLAGS) & bflags_mask))\t\t\t\\\n+    s390_builtin_types[INDEX] =\t\t\t\t\t\t\\\n+      build_distinct_type_copy (s390_builtin_types[INDEX_BASE]);\n \n #undef DEF_VECTOR_TYPE\n-#define DEF_VECTOR_TYPE(INDEX, INDEX_BASE, ELEMENTS)\t\t\t\\\n-  s390_builtin_types[INDEX] =\t\t\t\t\t\t\\\n-    build_vector_type (s390_builtin_types[INDEX_BASE], ELEMENTS);\n+#define DEF_VECTOR_TYPE(INDEX, BFLAGS, INDEX_BASE, ELEMENTS)\t\t\\\n+  if ((BFLAGS) == 0 || ((BFLAGS) & bflags_mask))\t\t\t\\\n+    s390_builtin_types[INDEX] =\t\t\t\t\t\t\\\n+      build_vector_type (s390_builtin_types[INDEX_BASE], ELEMENTS);\n \n #undef DEF_OPAQUE_VECTOR_TYPE\n-#define DEF_OPAQUE_VECTOR_TYPE(INDEX, INDEX_BASE, ELEMENTS)\t\t\\\n-  s390_builtin_types[INDEX] =\t\t\t\t\t\t\\\n-    build_opaque_vector_type (s390_builtin_types[INDEX_BASE], ELEMENTS);\n+#define DEF_OPAQUE_VECTOR_TYPE(INDEX, BFLAGS, INDEX_BASE, ELEMENTS)\t\\\n+  if ((BFLAGS) == 0 || ((BFLAGS) & bflags_mask))\t\t\t\\\n+    s390_builtin_types[INDEX] =\t\t\t\t\t\t\\\n+      build_opaque_vector_type (s390_builtin_types[INDEX_BASE], ELEMENTS);\n \n #undef DEF_FN_TYPE\n-#define DEF_FN_TYPE(INDEX, args...)\t\t\t\t\\\n-  s390_builtin_fn_types[INDEX] =\t\t\t\t\\\n+#define DEF_FN_TYPE(INDEX, BFLAGS, args...)\t\t\t\\\n+  if ((BFLAGS) == 0 || ((BFLAGS) & bflags_mask))\t\t\\\n+    s390_builtin_fn_types[INDEX] =\t\t\t\t\\\n     build_function_type_list (args, NULL_TREE);\n #undef DEF_OV_TYPE\n #define DEF_OV_TYPE(...)\n #include \"s390-builtin-types.def\"\n \n #undef B_DEF\n-#define B_DEF(NAME, PATTERN, ATTRS, FLAGS, FNTYPE)\t\t\t\\\n-  s390_builtin_decls[S390_BUILTIN_##NAME] =\t\t\t\t\\\n-  add_builtin_function (\"__builtin_\" #NAME,\t\t\t\t\\\n-\t\t\ts390_builtin_fn_types[FNTYPE],\t\t\t\\\n-\t\t\tS390_BUILTIN_##NAME,\t\t\t\t\\\n-\t\t\tBUILT_IN_MD,\t\t\t\t\t\\\n-\t\t\tNULL,\t\t\t\t\t\t\\\n-\t\t\tATTRS);\n+#define B_DEF(NAME, PATTERN, ATTRS, BFLAGS, OPFLAGS, FNTYPE)\t\t\\\n+  if (((BFLAGS) & ~bflags_mask) == 0)\t\t\t\t\t\\\n+    s390_builtin_decls[S390_BUILTIN_##NAME] =\t\t\t\t\\\n+      add_builtin_function (\"__builtin_\" #NAME,\t\t\t\t\\\n+\t\t\t    s390_builtin_fn_types[FNTYPE],\t\t\\\n+\t\t\t    S390_BUILTIN_##NAME,\t\t\t\\\n+\t\t\t    BUILT_IN_MD,\t\t\t\t\\\n+\t\t\t    NULL,\t\t\t\t\t\\\n+\t\t\t    ATTRS);\n #undef OB_DEF\n-#define OB_DEF(NAME, FIRST_VAR_NAME, LAST_VAR_NAME, FNTYPE)\t\t\\\n-  s390_builtin_decls[S390_OVERLOADED_BUILTIN_##NAME + S390_BUILTIN_MAX] = \\\n-  add_builtin_function (\"__builtin_\" #NAME,\t\t\t\t\\\n-\t\t\ts390_builtin_fn_types[FNTYPE],\t\t\t\\\n-\t\t\tS390_OVERLOADED_BUILTIN_##NAME + S390_BUILTIN_MAX, \\\n-\t\t\tBUILT_IN_MD,\t\t\t\t\t\\\n-\t\t\tNULL,\t\t\t\t\t\t\\\n-\t\t\t0);\n+#define OB_DEF(NAME, FIRST_VAR_NAME, LAST_VAR_NAME, BFLAGS, FNTYPE)\t\\\n+  if (((BFLAGS) & ~bflags_mask) == 0)\t\t\t\t\t\\\n+    s390_builtin_decls[S390_OVERLOADED_BUILTIN_##NAME + S390_BUILTIN_MAX] = \\\n+      add_builtin_function (\"__builtin_\" #NAME,\t\t\t\t\\\n+\t\t\t    s390_builtin_fn_types[FNTYPE],\t\t\\\n+\t\t\t    S390_OVERLOADED_BUILTIN_##NAME + S390_BUILTIN_MAX, \\\n+\t\t\t    BUILT_IN_MD,\t\t\t\t\\\n+\t\t\t    NULL,\t\t\t\t\t\\\n+\t\t\t    0);\n #undef OB_DEF_VAR\n #define OB_DEF_VAR(...)\n #include \"s390-builtins.def\"\n@@ -728,7 +765,7 @@ s390_expand_builtin (tree exp, rtx target, rtx subtarget ATTRIBUTE_UNUSED,\n   bool nonvoid;\n   tree arg;\n   call_expr_arg_iterator iter;\n-  unsigned int all_op_flags = flags_for_builtin (fcode);\n+  unsigned int all_op_flags = opflags_for_builtin (fcode);\n   machine_mode last_vec_mode = VOIDmode;\n \n   if (TARGET_DEBUG_ARG)\n@@ -738,7 +775,6 @@ s390_expand_builtin (tree exp, rtx target, rtx subtarget ATTRIBUTE_UNUSED,\n \t       (int)fcode, IDENTIFIER_POINTER (DECL_NAME (fndecl)));\n     }\n \n-\n   if (fcode >= S390_OVERLOADED_BUILTIN_VAR_OFFSET\n       && fcode < S390_ALL_BUILTIN_MAX)\n     {"}]}