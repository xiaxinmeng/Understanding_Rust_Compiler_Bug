{"sha": "b718216c5ad4bc0054646d701d3b4fa67d74c96b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjcxODIxNmM1YWQ0YmMwMDU0NjQ2ZDcwMWQzYjRmYTY3ZDc0Yzk2Yg==", "commit": {"author": {"name": "Seongbae Park", "email": "seongbae.park@gmail.com", "date": "2007-06-12T21:28:16Z"}, "committer": {"name": "Kenneth Zadeck", "email": "zadeck@gcc.gnu.org", "date": "2007-06-12T21:28:16Z"}, "message": "df-scan.c (df_get_exit-block_use_set): Always add the stack pointer to the exit block use set.\n\n2007-06-12 Seongbae Park <seongbae.park@gmail.com>\n\n       * df-scan.c (df_get_exit-block_use_set): Always add the stack pointer\n       to the exit block use set.\n       * gcse.c (cpro_jump): Don't emit barrier in cfglayout mode.\n       * config/sparc/sparc.c (sparc_check_64): Check df != NULL.\n\nFrom-SVN: r125658", "tree": {"sha": "f1a52028038cb9c4d4237adcf534a3b7dfc762b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1a52028038cb9c4d4237adcf534a3b7dfc762b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b718216c5ad4bc0054646d701d3b4fa67d74c96b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b718216c5ad4bc0054646d701d3b4fa67d74c96b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b718216c5ad4bc0054646d701d3b4fa67d74c96b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b718216c5ad4bc0054646d701d3b4fa67d74c96b/comments", "author": null, "committer": null, "parents": [{"sha": "0a090f42f6f1a646830a7b51c8b267fe27da383c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a090f42f6f1a646830a7b51c8b267fe27da383c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a090f42f6f1a646830a7b51c8b267fe27da383c"}], "stats": {"total": 34, "additions": 13, "deletions": 21}, "files": [{"sha": "becb6449abf40ec15e54ea14578257355f4b7ab5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b718216c5ad4bc0054646d701d3b4fa67d74c96b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b718216c5ad4bc0054646d701d3b4fa67d74c96b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b718216c5ad4bc0054646d701d3b4fa67d74c96b", "patch": "@@ -1,3 +1,10 @@\n+2007-06-12 Seongbae Park <seongbae.park@gmail.com>\n+\n+       * df-scan.c (df_get_exit-block_use_set): Always add the stack pointer\n+       to the exit block use set.\n+       * gcse.c (cpro_jump): Don't emit barrier in cfglayout mode.\n+       * config/sparc/sparc.c (sparc_check_64): Check df != NULL.\n+\n 2007-06-12  Seongbae Park  <seongbae.park@gmail.com>\n \n \t* opts.c (common_handle_option): Handle new option -fdbg-cnt-list."}, {"sha": "e8c539e64b4426d28351db36a2b8c0aa015b9abc", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b718216c5ad4bc0054646d701d3b4fa67d74c96b/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b718216c5ad4bc0054646d701d3b4fa67d74c96b/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=b718216c5ad4bc0054646d701d3b4fa67d74c96b", "patch": "@@ -7674,7 +7674,7 @@ sparc_check_64 (rtx x, rtx insn)\n     y = gen_rtx_REG (SImode, REGNO (x) + WORDS_BIG_ENDIAN);\n \n   if (flag_expensive_optimizations\n-      && DF_REG_DEF_COUNT (REGNO (y)) == 1)\n+      && df && DF_REG_DEF_COUNT (REGNO (y)) == 1)\n     set_once = 1;\n \n   if (insn == 0)"}, {"sha": "ff33aa396cb4ad594c3469e4e86a1f81be7f6bd2", "filename": "gcc/df-scan.c", "status": "modified", "additions": 5, "deletions": 14, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b718216c5ad4bc0054646d701d3b4fa67d74c96b/gcc%2Fdf-scan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b718216c5ad4bc0054646d701d3b4fa67d74c96b/gcc%2Fdf-scan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-scan.c?ref=b718216c5ad4bc0054646d701d3b4fa67d74c96b", "patch": "@@ -1005,7 +1005,7 @@ df_insn_delete (basic_block bb, unsigned int uid)\n \t  bitmap_set_bit (df->insns_to_delete, uid);\n \t}\n       if (dump_file)\n-\tfprintf (dump_file, \"defering deletion of insn with uid = %d.\\n\", uid);\n+\tfprintf (dump_file, \"deferring deletion of insn with uid = %d.\\n\", uid);\n       return;\n     }\n \n@@ -1116,7 +1116,7 @@ df_insn_rescan (rtx insn)\n \t  insn_info->mw_hardregs = df_null_mw_rec;\n \t}\n       if (dump_file)\n-\tfprintf (dump_file, \"defering rescan insn with uid = %d.\\n\", uid);\n+\tfprintf (dump_file, \"deferring rescan insn with uid = %d.\\n\", uid);\n     \n       bitmap_clear_bit (df->insns_to_delete, uid);\n       bitmap_clear_bit (df->insns_to_notes_rescan, uid);\n@@ -3682,18 +3682,9 @@ df_get_exit_block_use_set (bitmap exit_block_uses)\n   unsigned int i; \n \n   bitmap_clear (exit_block_uses);\n-  \n-  /* If exiting needs the right stack value, consider the stack\n-     pointer live at the end of the function.  */\n-  if ((HAVE_epilogue && epilogue_completed)\n-      || !EXIT_IGNORE_STACK\n-      || (!FRAME_POINTER_REQUIRED\n-\t  && !current_function_calls_alloca\n-\t  && flag_omit_frame_pointer)\n-      || current_function_sp_is_unchanging)\n-    {\n-      bitmap_set_bit (exit_block_uses, STACK_POINTER_REGNUM);\n-    }\n+\n+  /* Stack pointer is always live at the exit.  */\n+  bitmap_set_bit (exit_block_uses, STACK_POINTER_REGNUM);\n   \n   /* Mark the frame pointer if needed at the end of the function.\n      If we end up eliminating it, it will be removed from the live"}, {"sha": "8517e38ec0053b390e72e6b937ebafc0b6e47f3b", "filename": "gcc/gcse.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b718216c5ad4bc0054646d701d3b4fa67d74c96b/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b718216c5ad4bc0054646d701d3b4fa67d74c96b/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=b718216c5ad4bc0054646d701d3b4fa67d74c96b", "patch": "@@ -2850,12 +2850,6 @@ cprop_jump (basic_block bb, rtx setcc, rtx jump, rtx from, rtx src)\n       /* Remove REG_EQUAL note after simplification.  */\n       if (note_src)\n \tremove_note (jump, note);\n-\n-      /* If this has turned into an unconditional jump,\n-\t then put a barrier after it so that the unreachable\n-\t code will be deleted.  */\n-      if (GET_CODE (SET_SRC (set)) == LABEL_REF)\n-\temit_barrier_after (jump);\n      }\n \n #ifdef HAVE_cc0"}]}