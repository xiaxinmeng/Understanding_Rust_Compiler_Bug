{"sha": "98fb1d299e1edc713698419379a7423a446bc8e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThmYjFkMjk5ZTFlZGM3MTM2OTg0MTkzNzlhNzQyM2E0NDZiYzhlNQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2006-01-29T15:56:16Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-01-29T15:56:16Z"}, "message": "re PR libstdc++/26006 (tr1/8_c_compatibility/cfenv/functions.cc (test for excess errors) fails with pre-C99-TC1 libc)\n\n2006-01-29  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/26006\n\t* acinclude.m4 ([GLIBCXX_CHECK_C99_TR1]): Tighten <ctype.h> and\n\t<fenv.h> checks.\n\t* configure: Regenerate.\n\nFrom-SVN: r110373", "tree": {"sha": "7d87dfc209e3fb5d00a03e299d94ab76beed0df8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d87dfc209e3fb5d00a03e299d94ab76beed0df8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98fb1d299e1edc713698419379a7423a446bc8e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98fb1d299e1edc713698419379a7423a446bc8e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98fb1d299e1edc713698419379a7423a446bc8e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98fb1d299e1edc713698419379a7423a446bc8e5/comments", "author": null, "committer": null, "parents": [{"sha": "a8a4fe0c599b1565b9fda3924d376239b91f69df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8a4fe0c599b1565b9fda3924d376239b91f69df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8a4fe0c599b1565b9fda3924d376239b91f69df"}], "stats": {"total": 59, "additions": 35, "deletions": 24}, "files": [{"sha": "31e008f4892209f24b14006c7f121e12974e76e0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98fb1d299e1edc713698419379a7423a446bc8e5/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98fb1d299e1edc713698419379a7423a446bc8e5/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=98fb1d299e1edc713698419379a7423a446bc8e5", "patch": "@@ -1,3 +1,10 @@\n+2006-01-29  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/26006\n+\t* acinclude.m4 ([GLIBCXX_CHECK_C99_TR1]): Tighten <ctype.h> and\n+\t<fenv.h> checks.\n+\t* configure: Regenerate.\n+\n 2006-01-26  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/std/std_bitset.h (bitset<>::_M_copy_to_string):"}, {"sha": "881186dbe004a34ecd2720a20bb310e0cc713399", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98fb1d299e1edc713698419379a7423a446bc8e5/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98fb1d299e1edc713698419379a7423a446bc8e5/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=98fb1d299e1edc713698419379a7423a446bc8e5", "patch": "@@ -1099,7 +1099,8 @@ AC_DEFUN([GLIBCXX_CHECK_C99_TR1], [\n   AC_CACHE_VAL(ac_c99_ctype_tr1, [\n   AC_TRY_COMPILE([#include <ctype.h>],\n \t         [int ch;\n-\t          isblank(ch);\n+\t          int ret;\n+\t          ret = isblank(ch);\n \t\t ],[ac_c99_ctype_tr1=yes], [ac_c99_ctype_tr1=no])\n   ])\n   AC_MSG_RESULT($ac_c99_ctype_tr1)\n@@ -1118,17 +1119,18 @@ AC_DEFUN([GLIBCXX_CHECK_C99_TR1], [\n \t           [int except, mode;\n \t            fexcept_t* pflag;\n                     fenv_t* penv;\n-\t            feclearexcept(except);\n-                    fegetexceptflag(pflag, except);\n-\t            feraiseexcept(except);\n-\t            fesetexceptflag(pflag, except);\n-\t            fetestexcept(except);\n-\t            fegetround();\n-\t            fesetround(mode);\n-\t            fegetenv(penv);\n-\t            feholdexcept(penv);\n-\t            fesetenv(penv);\n-\t            feupdateenv(penv);\n+\t            int ret;\n+\t            ret = feclearexcept(except);\n+\t            ret = fegetexceptflag(pflag, except);\n+\t            ret = feraiseexcept(except);\n+\t            ret = fesetexceptflag(pflag, except);\n+\t            ret = fetestexcept(except);\n+\t            ret = fegetround();\n+\t            ret = fesetround(mode);\n+\t            ret = fegetenv(penv);\n+\t            ret = feholdexcept(penv);\n+\t            ret = fesetenv(penv);\n+\t            ret = feupdateenv(penv);\n \t\t   ],[ac_c99_fenv_tr1=yes], [ac_c99_fenv_tr1=no])\n   fi\n   AC_MSG_RESULT($ac_c99_fenv_tr1)"}, {"sha": "9f601bc4f9948b0382349960d83a8effad13e42c", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98fb1d299e1edc713698419379a7423a446bc8e5/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98fb1d299e1edc713698419379a7423a446bc8e5/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=98fb1d299e1edc713698419379a7423a446bc8e5", "patch": "@@ -30239,7 +30239,8 @@ int\n main ()\n {\n int ch;\n-\t          isblank(ch);\n+\t          int ret;\n+\t          ret = isblank(ch);\n \n   ;\n   return 0;\n@@ -30458,17 +30459,18 @@ main ()\n int except, mode;\n \t            fexcept_t* pflag;\n                     fenv_t* penv;\n-\t            feclearexcept(except);\n-                    fegetexceptflag(pflag, except);\n-\t            feraiseexcept(except);\n-\t            fesetexceptflag(pflag, except);\n-\t            fetestexcept(except);\n-\t            fegetround();\n-\t            fesetround(mode);\n-\t            fegetenv(penv);\n-\t            feholdexcept(penv);\n-\t            fesetenv(penv);\n-\t            feupdateenv(penv);\n+\t            int ret;\n+\t            ret = feclearexcept(except);\n+\t            ret = fegetexceptflag(pflag, except);\n+\t            ret = feraiseexcept(except);\n+\t            ret = fesetexceptflag(pflag, except);\n+\t            ret = fetestexcept(except);\n+\t            ret = fegetround();\n+\t            ret = fesetround(mode);\n+\t            ret = fegetenv(penv);\n+\t            ret = feholdexcept(penv);\n+\t            ret = fesetenv(penv);\n+\t            ret = feupdateenv(penv);\n \n   ;\n   return 0;"}]}