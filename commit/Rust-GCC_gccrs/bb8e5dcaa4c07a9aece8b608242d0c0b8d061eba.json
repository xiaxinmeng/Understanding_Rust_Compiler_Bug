{"sha": "bb8e5dcaa4c07a9aece8b608242d0c0b8d061eba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmI4ZTVkY2FhNGMwN2E5YWVjZThiNjA4MjQyZDBjMGI4ZDA2MWViYQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2010-06-28T16:47:55Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2010-06-28T16:47:55Z"}, "message": "tree-sra.c (convert_callers): New parameter, change fndecls of recursive calls.\n\n2010-06-26  Martin Jambor  <mjambor@suse.cz>\n\n\t* tree-sra.c (convert_callers): New parameter, change fndecls of\n\trecursive calls.\n\t(modify_function): Pass the old decl to convert_callers.\n\n\t* testsuite/gcc.dg/ipa/ipa-sra-6.c: New test.\n\nFrom-SVN: r161503", "tree": {"sha": "7f5474e587011fe850696418c42a153f09e865dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f5474e587011fe850696418c42a153f09e865dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb8e5dcaa4c07a9aece8b608242d0c0b8d061eba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb8e5dcaa4c07a9aece8b608242d0c0b8d061eba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb8e5dcaa4c07a9aece8b608242d0c0b8d061eba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb8e5dcaa4c07a9aece8b608242d0c0b8d061eba/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f5d3b85519066d84021a53e00dffaa71754b893c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5d3b85519066d84021a53e00dffaa71754b893c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5d3b85519066d84021a53e00dffaa71754b893c"}], "stats": {"total": 50, "additions": 47, "deletions": 3}, "files": [{"sha": "f723b698dd09314f5cc592a1754c6ad600cf0784", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb8e5dcaa4c07a9aece8b608242d0c0b8d061eba/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb8e5dcaa4c07a9aece8b608242d0c0b8d061eba/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bb8e5dcaa4c07a9aece8b608242d0c0b8d061eba", "patch": "@@ -1,3 +1,9 @@\n+2010-06-28  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* tree-sra.c (convert_callers): New parameter, change fndecls of\n+\trecursive calls.\n+\t(modify_function): Pass the old decl to convert_callers.\n+\n 2010-06-28  Martin Jambor  <mjambor@suse.cz>\n \n \t* ipa-cp.c (ipcp_init_cloned_node): Replace calls to"}, {"sha": "ffec3e5ea85099ce170aad7fcf2403fbf3072293", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb8e5dcaa4c07a9aece8b608242d0c0b8d061eba/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb8e5dcaa4c07a9aece8b608242d0c0b8d061eba/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bb8e5dcaa4c07a9aece8b608242d0c0b8d061eba", "patch": "@@ -1,3 +1,7 @@\n+2010-06-28  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* testsuite/gcc.dg/ipa/ipa-sra-6.c: New test.\n+\n 2010-06-28  Jan Hubicka  <jh@suse.cz>\n \n \tPR tree-optimization/44687"}, {"sha": "c9a766d9e8f28ef4f30d9d20ee5ffb15e1702b4c", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-sra-6.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb8e5dcaa4c07a9aece8b608242d0c0b8d061eba/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-sra-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb8e5dcaa4c07a9aece8b608242d0c0b8d061eba/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-sra-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-sra-6.c?ref=bb8e5dcaa4c07a9aece8b608242d0c0b8d061eba", "patch": "@@ -0,0 +1,32 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fipa-sra -fdump-tree-eipa_sra-slim\"  } */\n+\n+struct bovid\n+{\n+  float a;\n+  int b;\n+  struct bovid *next;\n+};\n+\n+static int\n+__attribute__((noinline))\n+foo (struct bovid *cow, int i)\n+{\n+  i++;\n+  if (cow->next)\n+    foo (cow->next, i);\n+  return i;\n+}\n+\n+int main (int argc, char *argv[])\n+{\n+  struct bovid cow;\n+\n+  cow.a = 7.4;\n+  cow.b = 6;\n+  cow.next = (struct bovid *) 0;\n+\n+  return foo (&cow, 0);\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"foo \" 1 \"eipa_sra\"  } } */"}, {"sha": "84d950f770f4935d96af9a3c45ce4295e1f4fb81", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb8e5dcaa4c07a9aece8b608242d0c0b8d061eba/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb8e5dcaa4c07a9aece8b608242d0c0b8d061eba/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=bb8e5dcaa4c07a9aece8b608242d0c0b8d061eba", "patch": "@@ -4167,7 +4167,8 @@ all_callers_have_enough_arguments_p (struct cgraph_node *node)\n /* Convert all callers of NODE to pass parameters as given in ADJUSTMENTS.  */\n \n static void\n-convert_callers (struct cgraph_node *node, ipa_parm_adjustment_vec adjustments)\n+convert_callers (struct cgraph_node *node, tree old_decl,\n+\t\t ipa_parm_adjustment_vec adjustments)\n {\n   tree old_cur_fndecl = current_function_decl;\n   struct cgraph_edge *cs;\n@@ -4214,10 +4215,11 @@ convert_callers (struct cgraph_node *node, ipa_parm_adjustment_vec adjustments)\n \t  if (gimple_code (stmt) != GIMPLE_CALL)\n \t    continue;\n \t  call_fndecl = gimple_call_fndecl (stmt);\n-\t  if (call_fndecl && cgraph_get_node (call_fndecl) == node)\n+\t  if (call_fndecl == old_decl)\n \t    {\n \t      if (dump_file)\n \t\tfprintf (dump_file, \"Adjusting recursive call\");\n+\t      gimple_call_set_fndecl (stmt, node->decl);\n \t      ipa_modify_call_arguments (NULL, stmt, adjustments);\n \t    }\n \t}\n@@ -4256,7 +4258,7 @@ modify_function (struct cgraph_node *node, ipa_parm_adjustment_vec adjustments)\n   ipa_modify_formal_parameters (current_function_decl, adjustments, \"ISRA\");\n   ipa_sra_modify_function_body (adjustments);\n   sra_ipa_reset_debug_stmts (adjustments);\n-  convert_callers (new_node, adjustments);\n+  convert_callers (new_node, node->decl, adjustments);\n   cgraph_make_node_local (new_node);\n   return;\n }"}]}