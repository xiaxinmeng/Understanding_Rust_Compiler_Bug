{"sha": "8217640552c471fe1e10c1fb8203770f31f031a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODIxNzY0MDU1MmM0NzFmZTFlMTBjMWZiODIwMzc3MGYzMWYwMzFhOA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2002-06-17T21:32:01Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-06-17T21:32:01Z"}, "message": "javaprims.h: Updated class declaration list.\n\n\t* gcj/javaprims.h: Updated class declaration list.\n\t* Makefile.in: Rebuilt.\n\t* Makefile.am (core_java_source_files): Added new file.\n\t* java/util/EventListenerProxy.java: New file.\n\t* java/util/EventListener.java: Re-merge with Classpath.\n\t* java/util/EventObject.java: Re-merge with Classpath.\n\nFrom-SVN: r54720", "tree": {"sha": "3dbac456e9c6f8922043007964a911fa1318f858", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3dbac456e9c6f8922043007964a911fa1318f858"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8217640552c471fe1e10c1fb8203770f31f031a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8217640552c471fe1e10c1fb8203770f31f031a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8217640552c471fe1e10c1fb8203770f31f031a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8217640552c471fe1e10c1fb8203770f31f031a8/comments", "author": null, "committer": null, "parents": [{"sha": "390de76932ff3924137305697272777d104eec13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/390de76932ff3924137305697272777d104eec13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/390de76932ff3924137305697272777d104eec13"}], "stats": {"total": 174, "additions": 140, "deletions": 34}, "files": [{"sha": "04542a7d1843532920a23a4f329f7602619afb0c", "filename": "libjava/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8217640552c471fe1e10c1fb8203770f31f031a8/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8217640552c471fe1e10c1fb8203770f31f031a8/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=8217640552c471fe1e10c1fb8203770f31f031a8", "patch": "@@ -1,3 +1,12 @@\n+2002-06-17  Tom Tromey  <tromey@redhat.com>\n+\n+\t* gcj/javaprims.h: Updated class declaration list.\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am (core_java_source_files): Added new file.\n+\t* java/util/EventListenerProxy.java: New file.\n+\t* java/util/EventListener.java: Re-merge with Classpath.\n+\t* java/util/EventObject.java: Re-merge with Classpath.\n+\n 2002-06-17  Nathanael Nerode  <neroden@twcny.rr.com>\n \n \t* java/lang/ClassNotFoundException.java: New Classpath version."}, {"sha": "3ccd548d6e8b6cf44a224d0abc1e347b86daf6e0", "filename": "libjava/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8217640552c471fe1e10c1fb8203770f31f031a8/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8217640552c471fe1e10c1fb8203770f31f031a8/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=8217640552c471fe1e10c1fb8203770f31f031a8", "patch": "@@ -1198,6 +1198,7 @@ java/util/Dictionary.java \\\n java/util/EmptyStackException.java \\\n java/util/Enumeration.java \\\n java/util/EventListener.java \\\n+java/util/EventListenerProxy.java \\\n java/util/EventObject.java \\\n java/util/GregorianCalendar.java \\\n java/util/HashMap.java \\"}, {"sha": "222746dc8fd6febecb8cca81499248290c651bd6", "filename": "libjava/Makefile.in", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8217640552c471fe1e10c1fb8203770f31f031a8/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8217640552c471fe1e10c1fb8203770f31f031a8/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=8217640552c471fe1e10c1fb8203770f31f031a8", "patch": "@@ -965,6 +965,7 @@ java/util/Dictionary.java \\\n java/util/EmptyStackException.java \\\n java/util/Enumeration.java \\\n java/util/EventListener.java \\\n+java/util/EventListenerProxy.java \\\n java/util/EventObject.java \\\n java/util/GregorianCalendar.java \\\n java/util/HashMap.java \\\n@@ -2237,10 +2238,9 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/java/lang/ArithmeticException.P \\\n .deps/java/lang/ArrayIndexOutOfBoundsException.P \\\n .deps/java/lang/ArrayStoreException.P .deps/java/lang/AssertionError.P \\\n-.deps/java/lang/Boolean.P \\\n-.deps/java/lang/Byte.P .deps/java/lang/CharSequence.P \\\n-.deps/java/lang/Character.P .deps/java/lang/Class.P \\\n-.deps/java/lang/ClassCastException.P \\\n+.deps/java/lang/Boolean.P .deps/java/lang/Byte.P \\\n+.deps/java/lang/CharSequence.P .deps/java/lang/Character.P \\\n+.deps/java/lang/Class.P .deps/java/lang/ClassCastException.P \\\n .deps/java/lang/ClassCircularityError.P \\\n .deps/java/lang/ClassFormatError.P .deps/java/lang/ClassLoader.P \\\n .deps/java/lang/ClassNotFoundException.P \\\n@@ -2538,15 +2538,15 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/java/util/ConcurrentModificationException.P \\\n .deps/java/util/Date.P .deps/java/util/Dictionary.P \\\n .deps/java/util/EmptyStackException.P .deps/java/util/Enumeration.P \\\n-.deps/java/util/EventListener.P .deps/java/util/EventObject.P \\\n-.deps/java/util/GregorianCalendar.P .deps/java/util/HashMap.P \\\n-.deps/java/util/HashSet.P .deps/java/util/Hashtable.P \\\n-.deps/java/util/IdentityHashMap.P .deps/java/util/Iterator.P \\\n-.deps/java/util/LinkedHashMap.P .deps/java/util/LinkedHashSet.P \\\n-.deps/java/util/LinkedList.P .deps/java/util/List.P \\\n-.deps/java/util/ListIterator.P .deps/java/util/ListResourceBundle.P \\\n-.deps/java/util/Locale.P .deps/java/util/Map.P \\\n-.deps/java/util/MissingResourceException.P \\\n+.deps/java/util/EventListener.P .deps/java/util/EventListenerProxy.P \\\n+.deps/java/util/EventObject.P .deps/java/util/GregorianCalendar.P \\\n+.deps/java/util/HashMap.P .deps/java/util/HashSet.P \\\n+.deps/java/util/Hashtable.P .deps/java/util/IdentityHashMap.P \\\n+.deps/java/util/Iterator.P .deps/java/util/LinkedHashMap.P \\\n+.deps/java/util/LinkedHashSet.P .deps/java/util/LinkedList.P \\\n+.deps/java/util/List.P .deps/java/util/ListIterator.P \\\n+.deps/java/util/ListResourceBundle.P .deps/java/util/Locale.P \\\n+.deps/java/util/Map.P .deps/java/util/MissingResourceException.P \\\n .deps/java/util/NoSuchElementException.P .deps/java/util/Observable.P \\\n .deps/java/util/Observer.P .deps/java/util/Properties.P \\\n .deps/java/util/PropertyPermission.P \\"}, {"sha": "eefd2982f88484dc4d0db6d665cb02a366f2e41f", "filename": "libjava/gcj/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8217640552c471fe1e10c1fb8203770f31f031a8/libjava%2Fgcj%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8217640552c471fe1e10c1fb8203770f31f031a8/libjava%2Fgcj%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgcj%2FMakefile.in?ref=8217640552c471fe1e10c1fb8203770f31f031a8", "patch": "@@ -1,4 +1,4 @@\n-# Makefile.in generated automatically by automake 1.4-p4 from Makefile.am\n+# Makefile.in generated automatically by automake 1.4 from Makefile.am\n \n # Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n@@ -146,7 +146,7 @@ DIST_COMMON =  ./stamp-h2.in Makefile.am Makefile.in libgcj-config.h.in\n \n DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n \n-TAR = tar\n+TAR = gtar\n GZIP_ENV = --best\n all: all-redirect\n .SUFFIXES:"}, {"sha": "10315035c83ba3fd15b7ed0d4f7435b22e7021b8", "filename": "libjava/gcj/javaprims.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8217640552c471fe1e10c1fb8203770f31f031a8/libjava%2Fgcj%2Fjavaprims.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8217640552c471fe1e10c1fb8203770f31f031a8/libjava%2Fgcj%2Fjavaprims.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgcj%2Fjavaprims.h?ref=8217640552c471fe1e10c1fb8203770f31f031a8", "patch": "@@ -288,6 +288,7 @@ extern \"Java\"\n       class EmptyStackException;\n       class Enumeration;\n       class EventListener;\n+      class EventListenerProxy;\n       class EventObject;\n       class GregorianCalendar;\n       class HashMap;"}, {"sha": "539ef743578dabb461091271a8e99145d1ad1000", "filename": "libjava/include/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8217640552c471fe1e10c1fb8203770f31f031a8/libjava%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8217640552c471fe1e10c1fb8203770f31f031a8/libjava%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2FMakefile.in?ref=8217640552c471fe1e10c1fb8203770f31f031a8", "patch": "@@ -1,4 +1,4 @@\n-# Makefile.in generated automatically by automake 1.4-p4 from Makefile.am\n+# Makefile.in generated automatically by automake 1.4 from Makefile.am\n \n # Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n@@ -142,7 +142,7 @@ DIST_COMMON =  ./stamp-h1.in Makefile.am Makefile.in config.h.in\n \n DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n \n-TAR = tar\n+TAR = gtar\n GZIP_ENV = --best\n all: all-redirect\n .SUFFIXES:"}, {"sha": "f8443314bde9c444d59d2f9ad5f50c50158bf58b", "filename": "libjava/java/util/EventListener.java", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8217640552c471fe1e10c1fb8203770f31f031a8/libjava%2Fjava%2Futil%2FEventListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8217640552c471fe1e10c1fb8203770f31f031a8/libjava%2Fjava%2Futil%2FEventListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FEventListener.java?ref=8217640552c471fe1e10c1fb8203770f31f031a8", "patch": "@@ -1,5 +1,5 @@\n-/* An interface that all event listener interfaces must extend\n-   Copyright (C) 1998, 1999, 2001 Free Software Foundation, Inc.\n+/* EventListener.java -- tagging interface for all event listeners\n+   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,11 +38,6 @@\n \n package java.util;\n \n-/* Written using \"Java Class Libraries\", 2nd edition, ISBN 0-201-31002-3\n- * \"The Java Language Specification\", ISBN 0-201-63451-1\n- * Status:  Believed complete and correct.\n- */\n-\n /**\n  * Empty interface that is implemented by classes that need to receive\n  * events. Subinterfaces define methods that can be called to fire an\n@@ -51,7 +46,8 @@\n  * take as argument an subclass of <code>EventObject</code>.\n  *\n  * @author Tom Tromey <tromey@cygnus.com>\n- * @date December 12, 1998\n+ * @see EventObject\n+ * @status updated to 1.4\n  */\n public interface EventListener\n {"}, {"sha": "2955f455f73461f992ce2abd4696cf9ec82a5739", "filename": "libjava/java/util/EventListenerProxy.java", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8217640552c471fe1e10c1fb8203770f31f031a8/libjava%2Fjava%2Futil%2FEventListenerProxy.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8217640552c471fe1e10c1fb8203770f31f031a8/libjava%2Fjava%2Futil%2FEventListenerProxy.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FEventListenerProxy.java?ref=8217640552c471fe1e10c1fb8203770f31f031a8", "patch": "@@ -0,0 +1,75 @@\n+/* EventListenerProxy.java -- abstract wrapper for event listeners\n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.util;\n+\n+/**\n+ * An abstract wrapper for event listeners.  This allows subclasses to\n+ * attach additional parameters to an existing event listener to create\n+ * a new one.  Subclasses are expected to add methods to set and retrieve\n+ * any attached properties.\n+ *\n+ * @author Eric Blake <ebb9@email.byu.edu>\n+ * @since 1.4\n+ * @status updated to 1.4\n+ */\n+public abstract class EventListenerProxy implements EventListener\n+{\n+  /** The listener that this proxy wraps. */\n+  private final EventListener listener;\n+\n+  /**\n+   * Construct a proxy event listener, given an existing one to augment.\n+   *\n+   * @param listener the listener to wrap\n+   */\n+  public EventListenerProxy(EventListener listener)\n+  {\n+    this.listener = listener;\n+  }\n+\n+  /**\n+   * Return the wrapped event listener.\n+   *\n+   * @return the listener associated with this proxy\n+   */\n+  public EventListener getListener()\n+  {\n+    return listener;\n+  }\n+} // class EventListenerProxy"}, {"sha": "3ccb6ecd29a1f33091c5711e1e936e80cc33bd9b", "filename": "libjava/java/util/EventObject.java", "status": "modified", "additions": 31, "deletions": 7, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8217640552c471fe1e10c1fb8203770f31f031a8/libjava%2Fjava%2Futil%2FEventObject.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8217640552c471fe1e10c1fb8203770f31f031a8/libjava%2Fjava%2Futil%2FEventObject.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FEventObject.java?ref=8217640552c471fe1e10c1fb8203770f31f031a8", "patch": "@@ -1,5 +1,5 @@\n-/* EventObject.java - Represent events fired by objects.\n-   Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n+/* EventObject.java -- represents an event on an object\n+   Copyright (C) 1999, 2000, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -43,35 +43,59 @@\n /**\n  * Represents Events fired by Objects.\n  *\n+ * @author Eric Blake <ebb9@email.byu.edu>\n  * @see EventListener\n+ * @since 1.1\n+ * @status updated to 1.4\n  */\n public class EventObject implements Serializable\n {\n+  /**\n+   * Compatible with JDK 1.1+.\n+   */\n   private static final long serialVersionUID = 5516075349620653480L;\n+\n+  /**\n+   * The source object; in other words, the object which this event takes\n+   * place on.\n+   */\n   protected transient Object source;\n \n   /**\n    * Constructs an EventObject with the specified source.\n+   *\n+   * @param source the source of the event\n+   * @throws IllegalArgumentException if source is null (This is not\n+   *         specified, but matches the behavior of the JDK)\n    */\n   public EventObject(Object source)\n   {\n+    // This check for null is stupid, if you ask me, since source is\n+    // protected and non-final, so a subclass can set it to null later on.\n+    if (source == null)\n+      throw new IllegalArgumentException();\n     this.source = source;\n   }\n \n   /**\n-   * @return The source of the Event.\n+   * Returns the source of the event.\n+   *\n+   * @return the event source\n    */\n   public Object getSource()\n   {\n     return source;\n   }\n \n   /**\n-   * @return String representation of the Event.\n-   * @override toString in class Object\n+   * Converts the event to a String. The format is not specified, but by\n+   * observation, the JDK uses:\n+   * <code>getClass().getName() + \"[source=\" + source + \"]\";</code>.\n+   *\n+   * @return String representation of the Event\n    */\n   public String toString()\n   {\n-    return this.getClass() + \"[source=\" + source.toString() + \"]\";\n+    return getClass().getName() + \"[source=\" + source + \"]\";\n   }\n-}\n+} // class EventObject"}, {"sha": "d0be8ad75bbb9b5045e14c8bd27a7288f64fec6d", "filename": "libjava/testsuite/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8217640552c471fe1e10c1fb8203770f31f031a8/libjava%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8217640552c471fe1e10c1fb8203770f31f031a8/libjava%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FMakefile.in?ref=8217640552c471fe1e10c1fb8203770f31f031a8", "patch": "@@ -151,7 +151,7 @@ DIST_COMMON =  ChangeLog Makefile.am Makefile.in\n \n DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n \n-TAR = tar\n+TAR = gtar\n GZIP_ENV = --best\n all: all-redirect\n .SUFFIXES:\n@@ -179,7 +179,7 @@ distdir: $(DISTFILES)\n \t@for file in $(DISTFILES); do \\\n \t  d=$(srcdir); \\\n \t  if test -d $$d/$$file; then \\\n-\t    cp -pr $$/$$file $(distdir)/$$file; \\\n+\t    cp -pr $$d/$$file $(distdir)/$$file; \\\n \t  else \\\n \t    test -f $(distdir)/$$file \\\n \t    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \\"}]}