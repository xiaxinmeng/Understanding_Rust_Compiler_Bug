{"sha": "10050f74a3151e7aa333bbbffb38dde95cb5e001", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTAwNTBmNzRhMzE1MWU3YWEzMzNiYmJmZmIzOGRkZTk1Y2I1ZTAwMQ==", "commit": {"author": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2007-05-08T22:22:49Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2007-05-08T22:22:49Z"}, "message": "re PR rtl-optimization/28011 ([SH] g++ generates wrong code, if '-fno-exceptions' and '-O' options are specified)\n\n\tPR rtl-optimization/28011\n\t* reload.c (push_reload): Set dont_share if IN appears in OUT\n\talso when IN is a PLUS rtx.\n\t(reg_overlap_mentioned_for_reload_p): Return true if X and IN\n\tare same PLUS rtx.\n\nFrom-SVN: r124557", "tree": {"sha": "bbacb408bfa0e6c90376ee5831eee0aa8f6664d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bbacb408bfa0e6c90376ee5831eee0aa8f6664d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10050f74a3151e7aa333bbbffb38dde95cb5e001", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10050f74a3151e7aa333bbbffb38dde95cb5e001", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10050f74a3151e7aa333bbbffb38dde95cb5e001", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10050f74a3151e7aa333bbbffb38dde95cb5e001/comments", "author": null, "committer": null, "parents": [{"sha": "b4aaa77b1f090aa6377451d55f13d7467c30886f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4aaa77b1f090aa6377451d55f13d7467c30886f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4aaa77b1f090aa6377451d55f13d7467c30886f"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "1d0e9055128fc18c1cdaaa4145c641a9b41df2d8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10050f74a3151e7aa333bbbffb38dde95cb5e001/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10050f74a3151e7aa333bbbffb38dde95cb5e001/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=10050f74a3151e7aa333bbbffb38dde95cb5e001", "patch": "@@ -1,3 +1,11 @@\n+2007-05-08  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\tPR rtl-optimization/28011\n+\t* reload.c (push_reload): Set dont_share if IN appears in OUT\n+\talso when IN is a PLUS rtx.\n+\t(reg_overlap_mentioned_for_reload_p): Return true if X and IN\n+\tare same PLUS rtx.\n+\n 2007-05-08  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* emit-rtl.c (unshare_all_rtl_1): Don't copy DECL_RTL.  Don't"}, {"sha": "bf220ef6bc097c6dfa6cd8c6e366923a26ec223f", "filename": "gcc/reload.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10050f74a3151e7aa333bbbffb38dde95cb5e001/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10050f74a3151e7aa333bbbffb38dde95cb5e001/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=10050f74a3151e7aa333bbbffb38dde95cb5e001", "patch": "@@ -1180,7 +1180,7 @@ push_reload (rtx in, rtx out, rtx *inloc, rtx *outloc,\n \n   /* If IN appears in OUT, we can't share any input-only reload for IN.  */\n   if (in != 0 && out != 0 && MEM_P (out)\n-      && (REG_P (in) || MEM_P (in))\n+      && (REG_P (in) || MEM_P (in) || GET_CODE (in) == PLUS)\n       && reg_overlap_mentioned_for_reload_p (in, XEXP (out, 0)))\n     dont_share = 1;\n \n@@ -6516,7 +6516,8 @@ reg_overlap_mentioned_for_reload_p (rtx x, rtx in)\n       if (REG_P (in))\n \treturn 0;\n       else if (GET_CODE (in) == PLUS)\n-\treturn (reg_overlap_mentioned_for_reload_p (x, XEXP (in, 0))\n+\treturn (rtx_equal_p (x, in)\n+\t\t|| reg_overlap_mentioned_for_reload_p (x, XEXP (in, 0))\n \t\t|| reg_overlap_mentioned_for_reload_p (x, XEXP (in, 1)));\n       else return (reg_overlap_mentioned_for_reload_p (XEXP (x, 0), in)\n \t\t   || reg_overlap_mentioned_for_reload_p (XEXP (x, 1), in));"}]}