{"sha": "ab561e667b7da048887a49d6cd53e7817504d0a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWI1NjFlNjY3YjdkYTA0ODg4N2E0OWQ2Y2Q1M2U3ODE3NTA0ZDBhNg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-11-19T11:26:05Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-11-19T11:26:05Z"}, "message": "(print_operand, case 'c', case 'd'): New cases.\n\nFrom-SVN: r8523", "tree": {"sha": "399be41fffb74de1e6501f451d3acdcf6b07e0c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/399be41fffb74de1e6501f451d3acdcf6b07e0c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab561e667b7da048887a49d6cd53e7817504d0a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab561e667b7da048887a49d6cd53e7817504d0a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab561e667b7da048887a49d6cd53e7817504d0a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab561e667b7da048887a49d6cd53e7817504d0a6/comments", "author": null, "committer": null, "parents": [{"sha": "58f0f574692fc0b36458b288d740ea9451e8c30c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58f0f574692fc0b36458b288d740ea9451e8c30c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58f0f574692fc0b36458b288d740ea9451e8c30c"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "5533aabddffdf398c601004e77578d45ad295992", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab561e667b7da048887a49d6cd53e7817504d0a6/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab561e667b7da048887a49d6cd53e7817504d0a6/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=ab561e667b7da048887a49d6cd53e7817504d0a6", "patch": "@@ -1053,6 +1053,23 @@ print_operand (file, x, code)\n       fprintf (file, \"%s\", GET_RTX_NAME (reverse_condition (GET_CODE (x))));\n       break;\n \n+    case 'c':\n+      /* Similar to `c', but swap.  We can't get unsigned here either.  */\n+      if (GET_RTX_CLASS (GET_CODE (x)) != '<')\n+\toutput_operand_lossage (\"invalid %%D value\");\n+\n+      fprintf (file, \"%s\", GET_RTX_NAME (swap_condition (GET_CODE (x))));\n+      break;\n+\n+    case 'd':\n+      /* Similar, but reverse and swap.  We can't get unsigned here either.  */\n+      if (GET_RTX_CLASS (GET_CODE (x)) != '<')\n+\toutput_operand_lossage (\"invalid %%D value\");\n+\n+      fprintf (file, \"%s\",\n+\t       GET_RTX_NAME (swap_condition (reverse_condition ((GET_CODE (x))))));\n+      break;\n+\n     case 'E':\n       /* Write the divide or modulus operator.  */\n       switch (GET_CODE (x))"}]}