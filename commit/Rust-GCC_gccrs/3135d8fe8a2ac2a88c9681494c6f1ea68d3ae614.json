{"sha": "3135d8fe8a2ac2a88c9681494c6f1ea68d3ae614", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzEzNWQ4ZmU4YTJhYzJhODhjOTY4MTQ5NGM2ZjFlYTY4ZDNhZTYxNA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2016-11-23T03:17:14Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2016-11-23T03:17:14Z"}, "message": "re PR tree-optimization/78455 (ICE in operator[], at vec.h:732)\n\n\tPR tree-optimization/78455\n\t* tree-ssa-uninit.c (can_chain_union_be_invalidated_p): Fix typo.\n\n\t* gcc.dg/uninit-23.c: New.\n\nFrom-SVN: r242733", "tree": {"sha": "8bf57dac5cb7a92b92178044937046342418d98f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8bf57dac5cb7a92b92178044937046342418d98f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3135d8fe8a2ac2a88c9681494c6f1ea68d3ae614", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3135d8fe8a2ac2a88c9681494c6f1ea68d3ae614", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3135d8fe8a2ac2a88c9681494c6f1ea68d3ae614", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3135d8fe8a2ac2a88c9681494c6f1ea68d3ae614/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c0137dcc605b4306dfb583f34434b15acd5471e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0137dcc605b4306dfb583f34434b15acd5471e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0137dcc605b4306dfb583f34434b15acd5471e4"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "8d11c29d1a6fae96b875cefefc35d604b6caa278", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3135d8fe8a2ac2a88c9681494c6f1ea68d3ae614/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3135d8fe8a2ac2a88c9681494c6f1ea68d3ae614/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3135d8fe8a2ac2a88c9681494c6f1ea68d3ae614", "patch": "@@ -1,3 +1,8 @@\n+2016-11-22  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR tree-optimization/78455\n+\t* tree-ssa-uninit.c (can_chain_union_be_invalidated_p): Fix typo.\n+\n 2016-11-22  Ian Lance Taylor  <iant@golang.org>\n \n \tPR go/78431"}, {"sha": "9e8b74682901dc4d0d605075f4bca434f833bcbe", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3135d8fe8a2ac2a88c9681494c6f1ea68d3ae614/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3135d8fe8a2ac2a88c9681494c6f1ea68d3ae614/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3135d8fe8a2ac2a88c9681494c6f1ea68d3ae614", "patch": "@@ -1,3 +1,8 @@\n+2016-11-22  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR tree-optimization/78455\n+\t* gcc.dg/uninit-23.c: New.\n+\n 2016-11-22  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/78479"}, {"sha": "b38e1d08eabd00ac121d9156608307bf88e222f3", "filename": "gcc/testsuite/gcc.dg/uninit-23.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3135d8fe8a2ac2a88c9681494c6f1ea68d3ae614/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-23.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3135d8fe8a2ac2a88c9681494c6f1ea68d3ae614/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-23.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-23.c?ref=3135d8fe8a2ac2a88c9681494c6f1ea68d3ae614", "patch": "@@ -0,0 +1,27 @@\n+/* PR tree-optimization/78455 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Wuninitialized\" } */\n+\n+int ij;\n+\n+void\n+ql (void)\n+{\n+  int m5 = 0;\n+\n+  for (;;)\n+  {\n+    if (0)\n+      for (;;)\n+      {\n+        int *go;\n+        int *t4 = go;\n+\n+ l1:\n+        *t4 = (*t4 != 0) ? 0 : 2; /* { dg-warning \"may be used uninitialized\" } */\n+      }\n+\n+    if (ij != 0)\n+      goto l1;\n+  }\n+}"}, {"sha": "4557403d9347168987c9e679b7083f7c90ec059a", "filename": "gcc/tree-ssa-uninit.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3135d8fe8a2ac2a88c9681494c6f1ea68d3ae614/gcc%2Ftree-ssa-uninit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3135d8fe8a2ac2a88c9681494c6f1ea68d3ae614/gcc%2Ftree-ssa-uninit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-uninit.c?ref=3135d8fe8a2ac2a88c9681494c6f1ea68d3ae614", "patch": "@@ -2192,7 +2192,7 @@ can_chain_union_be_invalidated_p (pred_chain_union use_preds,\n       pred_chain c = use_preds[i];\n       bool entire_pred_chain_invalidated = false;\n       for (size_t j = 0; j < c.length (); ++j)\n-\tif (can_one_predicate_be_invalidated_p (c[i], worklist))\n+\tif (can_one_predicate_be_invalidated_p (c[j], worklist))\n \t  {\n \t    entire_pred_chain_invalidated = true;\n \t    break;"}]}