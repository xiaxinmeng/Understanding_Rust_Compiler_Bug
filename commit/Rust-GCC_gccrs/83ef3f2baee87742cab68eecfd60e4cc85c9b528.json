{"sha": "83ef3f2baee87742cab68eecfd60e4cc85c9b528", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODNlZjNmMmJhZWU4Nzc0MmNhYjY4ZWVjZmQ2MGU0Y2M4NWM5YjUyOA==", "commit": {"author": {"name": "Jerry Quinn", "email": "jlquinn@optonline.net", "date": "2004-04-22T05:34:30Z"}, "committer": {"name": "Jerry Quinn", "email": "jlquinn@gcc.gnu.org", "date": "2004-04-22T05:34:30Z"}, "message": "Font.java (deriveFont): Implement missing variants.\n\n2004-04-22  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/awt/Font.java (deriveFont): Implement missing variants.\n\t* gnu/java/awt/peer/ClasspathFontPeer.java (deriveFont): Implement\n\tmissing variants.\n\nFrom-SVN: r81002", "tree": {"sha": "6cb06df5e40b6dd5d96bf879374df74955299a58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6cb06df5e40b6dd5d96bf879374df74955299a58"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83ef3f2baee87742cab68eecfd60e4cc85c9b528", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83ef3f2baee87742cab68eecfd60e4cc85c9b528", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83ef3f2baee87742cab68eecfd60e4cc85c9b528", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83ef3f2baee87742cab68eecfd60e4cc85c9b528/comments", "author": {"login": "jlquinn", "id": 826841, "node_id": "MDQ6VXNlcjgyNjg0MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/826841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlquinn", "html_url": "https://github.com/jlquinn", "followers_url": "https://api.github.com/users/jlquinn/followers", "following_url": "https://api.github.com/users/jlquinn/following{/other_user}", "gists_url": "https://api.github.com/users/jlquinn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlquinn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlquinn/subscriptions", "organizations_url": "https://api.github.com/users/jlquinn/orgs", "repos_url": "https://api.github.com/users/jlquinn/repos", "events_url": "https://api.github.com/users/jlquinn/events{/privacy}", "received_events_url": "https://api.github.com/users/jlquinn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aa26a3f64864253d4aa1ab10f8ec7d6e25c4088d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa26a3f64864253d4aa1ab10f8ec7d6e25c4088d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa26a3f64864253d4aa1ab10f8ec7d6e25c4088d"}], "stats": {"total": 80, "additions": 78, "deletions": 2}, "files": [{"sha": "ae285939f4208c1004bd54be5a0dcb6a3f70cd49", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83ef3f2baee87742cab68eecfd60e4cc85c9b528/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83ef3f2baee87742cab68eecfd60e4cc85c9b528/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=83ef3f2baee87742cab68eecfd60e4cc85c9b528", "patch": "@@ -1,3 +1,9 @@\n+2004-04-22  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/awt/Font.java (deriveFont): Implement missing variants.\n+\t* gnu/java/awt/peer/ClasspathFontPeer.java (deriveFont): Implement\n+\tmissing variants.\n+\n 2004-04-21  Bryce McKinlay  <mckinlay@redhat.com>\n \n \t* java/lang/natClass.cc (_Jv_LayoutInterfaceMethods): New method."}, {"sha": "6b753aa15ec523a93031ffd7e016c753f40b267b", "filename": "libjava/gnu/java/awt/peer/ClasspathFontPeer.java", "status": "modified", "additions": 34, "deletions": 1, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83ef3f2baee87742cab68eecfd60e4cc85c9b528/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2FClasspathFontPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83ef3f2baee87742cab68eecfd60e4cc85c9b528/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2FClasspathFontPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2FClasspathFontPeer.java?ref=83ef3f2baee87742cab68eecfd60e4cc85c9b528", "patch": "@@ -1,5 +1,5 @@\n /* ClasspathFontPeer.java -- Font peer used by GNU Classpath.\n-   Copyright (C) 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -394,6 +394,23 @@ public boolean isItalic (Font font)\n     return ((style & Font.ITALIC) == Font.ITALIC); \n   }\n \n+  /** \n+   * Implementation of {@link Font#deriveFont(int, float)}\n+   *\n+   * @param font the font this peer is being called from. This may be\n+   * useful if you are sharing peers between Font objects. Otherwise it may\n+   * be ignored.\n+   */\n+\n+  public Font deriveFont (Font font, int style, float size)\n+  {\n+    Map attrs = new HashMap ();\n+    getStandardAttributes (attrs);\n+    copyStyleToAttrs (style, attrs);\n+    copySizeToAttrs (size, attrs);\n+    return tk().getFont (logicalName, attrs);\n+  }\n+\n   /** \n    * Implementation of {@link Font#deriveFont(float)}\n    *\n@@ -443,6 +460,22 @@ public Font deriveFont (Font font, int style, AffineTransform t)\n     return tk().getFont (logicalName, attrs);\n   }\n \n+  /** \n+   * Implementation of {@link Font#deriveFont(AffineTransform)}\n+   *\n+   * @param font the font this peer is being called from. This may be\n+   * useful if you are sharing peers between Font objects. Otherwise it may\n+   * be ignored.\n+   */\n+\n+  public Font deriveFont (Font font, AffineTransform t)\n+  {\n+    Map attrs = new HashMap ();\n+    getStandardAttributes (attrs);\n+    copyTransformToAttrs (t, attrs);\n+    return tk().getFont (logicalName, attrs);\n+  }\n+\n   /** \n    * Implementation of {@link Font#deriveFont(Map)}\n    *"}, {"sha": "4c70c735797d08e793715265f72dfaf77e539db1", "filename": "libjava/java/awt/Font.java", "status": "modified", "additions": 38, "deletions": 1, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83ef3f2baee87742cab68eecfd60e4cc85c9b528/libjava%2Fjava%2Fawt%2FFont.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83ef3f2baee87742cab68eecfd60e4cc85c9b528/libjava%2Fjava%2Fawt%2FFont.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FFont.java?ref=83ef3f2baee87742cab68eecfd60e4cc85c9b528", "patch": "@@ -1,5 +1,5 @@\n /* Font.java -- Font object\n-   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2004 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -648,6 +648,22 @@ public GlyphVector createGlyphVector (FontRenderContext ctx, int[] glyphCodes)\n     return peer.createGlyphVector (this, ctx, glyphCodes);\n }\n \n+/**\n+  * Produces a new {@link Font} based on the current font, adjusted to a\n+  * new size and style.\n+  *\n+  * @param style The style of the newly created font.\n+  * @param size The size of the newly created font.\n+  *\n+  * @return A clone of the current font, with the specified size and style.\n+  *\n+  * @since 1.2\n+  */\n+  public Font deriveFont (int style, float size)\n+{\n+    return peer.deriveFont (this, style, size);\n+}\n+\n /**\n   * Produces a new {@link Font} based on the current font, adjusted to a\n   * new size.\n@@ -701,6 +717,27 @@ public Font deriveFont (int style, AffineTransform a)\n     return peer.deriveFont (this, style, a);\n }\n \n+/**\n+  * Produces a new {@link Font} based on the current font, subjected\n+  * to a new affine transformation.\n+  *\n+  * @param a The transformation to apply.\n+  *\n+  * @return A clone of the current font, with the specified transform.\n+  *\n+  * @throws IllegalArgumentException If transformation is\n+  * <code>null</code>.\n+  *\n+  * @since 1.2\n+  */\n+  public Font deriveFont (AffineTransform a)\n+{\n+    if (a == null)\n+      throw new IllegalArgumentException (\"Affine transformation is null\");\n+\n+    return peer.deriveFont (this, a);\n+}\n+\n /**\n   * Produces a new {@link Font} based on the current font, adjusted to a\n   * new set of attributes."}]}