{"sha": "b4eb03fef0038be54957aea4e18b2e79c4452937", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRlYjAzZmVmMDAzOGJlNTQ5NTdhZWE0ZTE4YjJlNzljNDQ1MjkzNw==", "commit": {"author": {"name": "Jason Thorpe", "email": "thorpej@wasabisystems.com", "date": "2002-05-31T01:31:26Z"}, "committer": {"name": "Jason Thorpe", "email": "thorpej@gcc.gnu.org", "date": "2002-05-31T01:31:26Z"}, "message": "config.gcc (sh[123456789l]*-*-*): Set cpu_type to sh.\n\n* config.gcc (sh[123456789l]*-*-*): Set cpu_type to sh.\n(sh-*-netbsdelf*)\n(shl*-*-netbsdelf*): New targets.\n* config/sh/netbsd-elf.h: New file.\n\nFrom-SVN: r54079", "tree": {"sha": "ebee8bc6cfc925fdd877623f42e647f17007517b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebee8bc6cfc925fdd877623f42e647f17007517b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4eb03fef0038be54957aea4e18b2e79c4452937", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4eb03fef0038be54957aea4e18b2e79c4452937", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4eb03fef0038be54957aea4e18b2e79c4452937", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4eb03fef0038be54957aea4e18b2e79c4452937/comments", "author": null, "committer": null, "parents": [{"sha": "261376e723399348ac2633631aaae6a10042c264", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/261376e723399348ac2633631aaae6a10042c264", "html_url": "https://github.com/Rust-GCC/gccrs/commit/261376e723399348ac2633631aaae6a10042c264"}], "stats": {"total": 113, "additions": 112, "deletions": 1}, "files": [{"sha": "0a59a301caa570be0dbb1691f9401bb284e1db38", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4eb03fef0038be54957aea4e18b2e79c4452937/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4eb03fef0038be54957aea4e18b2e79c4452937/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b4eb03fef0038be54957aea4e18b2e79c4452937", "patch": "@@ -1,3 +1,10 @@\n+2002-05-30  Jason Thorpe  <thorpej@wasabisystems.com>\n+\n+\t* config.gcc (sh[123456789l]*-*-*): Set cpu_type to sh.\n+\t(sh-*-netbsdelf*)\n+\t(shl*-*-netbsdelf*): New targets.\n+\t* config/sh/netbsd-elf.h: New file.\n+\n 2002-05-30  Richard Henderson  <rth@redhat.com>\n \t    Eric Botcazou  <ebotcazou@multimania.com>\n "}, {"sha": "73e423a0552a3e118e2b93ef8d6e57c393e3f5c6", "filename": "gcc/config.gcc", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4eb03fef0038be54957aea4e18b2e79c4452937/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4eb03fef0038be54957aea4e18b2e79c4452937/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=b4eb03fef0038be54957aea4e18b2e79c4452937", "patch": "@@ -276,7 +276,8 @@ powerpc*-*-*)\n sparc*-*-*)\n \tcpu_type=sparc\n \t;;\n-sh64-*-*)\n+# Note the 'l'; we need to be able to match e.g. \"shle\" or \"shl\".\n+sh[123456789l]*-*-*)\n \tcpu_type=sh\n \t;;\n esac\n@@ -2247,6 +2248,21 @@ sh-*-linux*)\n \tfi\n \tfloat_format=sh\n \t;;\n+sh-*-netbsdelf* | shl*-*-netbsdelf*)\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h sh/elf.h netbsd.h netbsd-elf.h sh/netbsd-elf.h\"\n+\ttmake_file=\"${tmake_file} sh/t-sh sh/t-elf\"\n+\tcase $machine in\n+\tsh*l*-*)\n+\t\ttm_file=\"sh/little.h ${tm_file}\"\n+\t\ttmake_file=\"${tmake_file} sh/t-le\"\n+\t\t;;\n+\t*)\n+\t\ttmake_file=\"${tmake_file} sh/t-be\"\n+\t\t;;\n+\tesac\n+\ttmake_file=\"${tmake_file} sh/t-netbsd\"\n+\tfloat_format=sh\n+\t;;\n sh-*-*)\n \ttm_file=\"${tm_file} sh/coff.h\"\n \tfloat_format=sh"}, {"sha": "951f2a6b7483d9f395e5b67e94b051baf8b6b994", "filename": "gcc/config/sh/netbsd-elf.h", "status": "added", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4eb03fef0038be54957aea4e18b2e79c4452937/gcc%2Fconfig%2Fsh%2Fnetbsd-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4eb03fef0038be54957aea4e18b2e79c4452937/gcc%2Fconfig%2Fsh%2Fnetbsd-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fnetbsd-elf.h?ref=b4eb03fef0038be54957aea4e18b2e79c4452937", "patch": "@@ -0,0 +1,88 @@\n+/* Definitions for SH running NetBSD using ELF\n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Contributed by Wasabi Systems, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with this program; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+/* Run-time Target Specification.  */\n+#undef TARGET_VERSION\n+#if TARGET_ENDIAN_DEFAULT == LITTLE_ENDIAN_BIT\n+#define TARGET_VERSION  fputs (\" (NetBSD/shle ELF)\", stderr);\n+#else\n+#define TARGET_VERSION\tfputs (\" (NetBSD/sh ELF)\", stderr);\n+#endif\n+\n+#define TARGET_OS_CPP_BUILTINS()\t\t\t\t\t\\\n+  do\t\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      NETBSD_OS_CPP_BUILTINS_ELF();\t\t\t\t\t\\\n+      builtin_define (\"__NO_LEADING_UNDERSCORES__\");\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  while (0)\n+\n+/* Provide a LINK_SPEC appropriate for a NetBSD/sh ELF target.\n+   This is a copy of LINK_SPEC from <netbsd-elf.h> tweaked for\n+   the SH target.  */\n+\n+#undef LINK_SPEC\n+#define LINK_SPEC\t\t\t\t\t\t\t\\\n+  \"%{assert*} %{R*}\t\t\t\t\t\t\t\\\n+   %{mb:-m shelf_nbsd}\t\t\t\t\t\t\t\\\n+   %{ml:-m shlelf_nbsd}\t\t\t\t\t\t\t\\\n+   %{mrelax:-relax}\t\t\t\t\t\t\t\\\n+   %{shared:-shared}\t\t\t\t\t\t\t\\\n+   %{!shared:\t\t\t\t\t\t\t\t\\\n+     -dc -dp\t\t\t\t\t\t\t\t\\\n+     %{!nostdlib:\t\t\t\t\t\t\t\\\n+       %{!r*:\t\t\t\t\t\t\t\t\\\n+\t %{!e*:-e __start}}}\t\t\t\t\t\t\\\n+     %{!static:\t\t\t\t\t\t\t\t\\\n+       %{rdynamic:-export-dynamic}\t\t\t\t\t\\\n+       %{!dynamic-linker:-dynamic-linker /usr/libexec/ld.elf_so}}\t\\\n+     %{static:-static}}\"\n+\n+\n+/* Provide a CPP_SPEC appropriate for NetBSD.  */\n+#undef SUBTARGET_CPP_SPEC\n+#define SUBTARGET_CPP_SPEC NETBSD_CPP_SPEC\n+\n+/* Restore the ASM_SPEC from sh/sh.h; sh/elf.h clobbers it.  */\n+#undef ASM_SPEC\n+#define ASM_SPEC  \"%(subtarget_asm_endian_spec) %{mrelax:-relax}\"\n+\n+#undef TARGET_DEFAULT\n+#define TARGET_DEFAULT \\\n+  (SH1_BIT|SH2_BIT|SH3_BIT | USERMODE_BIT | TARGET_ENDIAN_DEFAULT)\n+\n+ \n+#undef FUNCTION_PROFILER\n+#define FUNCTION_PROFILER(STREAM,LABELNO)\t\t\t\t\\\n+do\t\t\t\t\t\t\t\t\t\\\n+  {\t\t\t\t\t\t\t\t\t\\\n+    fprintf((STREAM), \"\\tmov.l\\t%cLP%d,r1\\n\",\t\t\t\t\\\n+            LOCAL_LABEL_PREFIX, (LABELNO));\t\t\t\t\\\n+    fprintf((STREAM), \"\\tmova\\t%cLP%dr,r0\\n\",\t\t\t\t\\\n+            LOCAL_LABEL_PREFIX, (LABELNO));\t\t\t\t\\\n+    fprintf((STREAM), \"\\tjmp\\t@r1\\n\");\t\t\t\t\t\\\n+    fprintf((STREAM), \"\\tnop\\n\");\t\t\t\t\t\\\n+    fprintf((STREAM), \"\\t.align\\t2\\n\");\t\t\t\t\t\\\n+    fprintf((STREAM), \"%cLP%d:\\t.long\\t__mcount\\n\",\t\t\t\\\n+            LOCAL_LABEL_PREFIX, (LABELNO));\t\t\t\t\\\n+    fprintf((STREAM), \"%cLP%dr:\\n\", LOCAL_LABEL_PREFIX, (LABELNO));\t\\\n+  }\t\t\t\t\t\t\t\t\t\\\n+while (0)"}]}