{"sha": "04b03edb56633f6e77d7834022d4e49a74f3cce5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDRiMDNlZGI1NjYzM2Y2ZTc3ZDc4MzQwMjJkNGU0OWE3NGYzY2NlNQ==", "commit": {"author": {"name": "Rafael Avila de Espindola", "email": "espindola@google.com", "date": "2008-05-08T22:16:59Z"}, "committer": {"name": "Rafael Espindola", "email": "espindola@gcc.gnu.org", "date": "2008-05-08T22:16:59Z"}, "message": "tree-complex.c (expand_complex_div_wide): Don't create CONDs that trap.\n\n\t* tree-complex.c (expand_complex_div_wide): Don't create CONDs that\n\ttrap.\n\t* tree-gimple.c (is_gimple_condexpr): Check that the expression doesn't\n\ttrap and that both operands are gimple values.\n\t(canonicalize_cond_expr_cond): Use is_gimple_condexpr.\n\t* gcc/tree-eh.c (tree_could_trap_p): Correctly detect if a comparison\n\tis a fp operation.\n\n\t* gcc/testsuite/gcc.dg/vect/vect-111.c: Rename to no-trapping-math-vect-111.c\n\t* gcc/testsuite/gcc.dg/vect/vect-ifcvt-11.c: Rename to no-trapping-math-vect-ifcvt-11.c\n\t* gcc/testsuite/gcc.dg/vect/vect-ifcvt-12.c: Rename to no-trapping-math-vect-ifcvt-12.c\n\t* gcc/testsuite/gcc.dg/vect/vect-ifcvt-13.c: Rename to no-trapping-math-vect-ifcvt-13.c\n\t* gcc/testsuite/gcc.dg/vect/vect-ifcvt-14.c: Rename to no-trapping-math-vect-ifcvt-14.c\n\t* gcc/testsuite/gcc.dg/vect/vect-ifcvt-15.c: Rename to no-trapping-math-vect-ifcvt-15.c\n\nFrom-SVN: r135093", "tree": {"sha": "465e7779ecfa60e33ba35e94156083288329e034", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/465e7779ecfa60e33ba35e94156083288329e034"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04b03edb56633f6e77d7834022d4e49a74f3cce5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04b03edb56633f6e77d7834022d4e49a74f3cce5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04b03edb56633f6e77d7834022d4e49a74f3cce5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04b03edb56633f6e77d7834022d4e49a74f3cce5/comments", "author": null, "committer": null, "parents": [{"sha": "96c92f4763242fbf74d70ca52dc5ebecc3c0ce95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96c92f4763242fbf74d70ca52dc5ebecc3c0ce95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96c92f4763242fbf74d70ca52dc5ebecc3c0ce95"}], "stats": {"total": 58, "additions": 43, "deletions": 15}, "files": [{"sha": "7d0a3afacafc0d4aa3e43002527129ecb75c52c4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b03edb56633f6e77d7834022d4e49a74f3cce5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b03edb56633f6e77d7834022d4e49a74f3cce5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=04b03edb56633f6e77d7834022d4e49a74f3cce5", "patch": "@@ -1,3 +1,13 @@\n+2008-05-08  Rafael Espindola  <espindola@google.com>\n+\n+\t* tree-complex.c (expand_complex_div_wide): Don't create CONDs that\n+\ttrap.\n+\t* tree-gimple.c (is_gimple_condexpr): Check that the expression doesn't\n+\ttrap and that both operands are gimple values.\n+\t(canonicalize_cond_expr_cond): Use is_gimple_condexpr.\n+\t* gcc/tree-eh.c (tree_could_trap_p): Correctly detect if a comparison\n+\tis a fp operation.\n+\n 2008-05-08  Richard Sandiford  <rsandifo@nildram.co.uk>\n \n \t* read-rtl.c (join_c_conditions): Return the first string if the"}, {"sha": "9e3a1f148a91234658555a4a7b0d79e0b4d07e97", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b03edb56633f6e77d7834022d4e49a74f3cce5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b03edb56633f6e77d7834022d4e49a74f3cce5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=04b03edb56633f6e77d7834022d4e49a74f3cce5", "patch": "@@ -1,3 +1,12 @@\n+2008-05-08  Rafael Espindola  <espindola@google.com>\n+\n+\t* gcc.dg/vect/vect-111.c: Rename to no-trapping-math-vect-111.c\n+\t* gcc.dg/vect/vect-ifcvt-11.c: Rename to no-trapping-math-vect-ifcvt-11.c\n+\t* gcc.dg/vect/vect-ifcvt-12.c: Rename to no-trapping-math-vect-ifcvt-12.c\n+\t* gcc.dg/vect/vect-ifcvt-13.c: Rename to no-trapping-math-vect-ifcvt-13.c\n+\t* gcc.dg/vect/vect-ifcvt-14.c: Rename to no-trapping-math-vect-ifcvt-14.c\n+\t* gcc.dg/vect/vect-ifcvt-15.c: Rename to no-trapping-math-vect-ifcvt-15.c\n+\n 2008-05-08  David Daney  <ddaney@avtrex.com>\n \n \t* lib/target-supports.exp (check_effective_target_sync_int_long): Add"}, {"sha": "413c7ef42267d84b137bef802fdc565569bcf403", "filename": "gcc/testsuite/gcc.dg/vect/no-trapping-math-vect-111.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b03edb56633f6e77d7834022d4e49a74f3cce5/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-vect-111.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b03edb56633f6e77d7834022d4e49a74f3cce5/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-vect-111.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-vect-111.c?ref=04b03edb56633f6e77d7834022d4e49a74f3cce5", "previous_filename": "gcc/testsuite/gcc.dg/vect/vect-111.c"}, {"sha": "560b5bc73df5f4f093f99d435c165b088d304925", "filename": "gcc/testsuite/gcc.dg/vect/no-trapping-math-vect-ifcvt-11.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b03edb56633f6e77d7834022d4e49a74f3cce5/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-vect-ifcvt-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b03edb56633f6e77d7834022d4e49a74f3cce5/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-vect-ifcvt-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-vect-ifcvt-11.c?ref=04b03edb56633f6e77d7834022d4e49a74f3cce5", "previous_filename": "gcc/testsuite/gcc.dg/vect/vect-ifcvt-11.c"}, {"sha": "5f132b8ba81ac175353305ebb9837d163ec5a27c", "filename": "gcc/testsuite/gcc.dg/vect/no-trapping-math-vect-ifcvt-12.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b03edb56633f6e77d7834022d4e49a74f3cce5/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-vect-ifcvt-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b03edb56633f6e77d7834022d4e49a74f3cce5/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-vect-ifcvt-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-vect-ifcvt-12.c?ref=04b03edb56633f6e77d7834022d4e49a74f3cce5", "previous_filename": "gcc/testsuite/gcc.dg/vect/vect-ifcvt-12.c"}, {"sha": "a5a59366bdce0376e768138179648603f1b7c1b1", "filename": "gcc/testsuite/gcc.dg/vect/no-trapping-math-vect-ifcvt-13.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b03edb56633f6e77d7834022d4e49a74f3cce5/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-vect-ifcvt-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b03edb56633f6e77d7834022d4e49a74f3cce5/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-vect-ifcvt-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-vect-ifcvt-13.c?ref=04b03edb56633f6e77d7834022d4e49a74f3cce5", "previous_filename": "gcc/testsuite/gcc.dg/vect/vect-ifcvt-13.c"}, {"sha": "a5a59366bdce0376e768138179648603f1b7c1b1", "filename": "gcc/testsuite/gcc.dg/vect/no-trapping-math-vect-ifcvt-14.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b03edb56633f6e77d7834022d4e49a74f3cce5/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-vect-ifcvt-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b03edb56633f6e77d7834022d4e49a74f3cce5/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-vect-ifcvt-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-vect-ifcvt-14.c?ref=04b03edb56633f6e77d7834022d4e49a74f3cce5", "previous_filename": "gcc/testsuite/gcc.dg/vect/vect-ifcvt-14.c"}, {"sha": "67d7ebe60c68d2f883e1bc0aee0010504b534d55", "filename": "gcc/testsuite/gcc.dg/vect/no-trapping-math-vect-ifcvt-15.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b03edb56633f6e77d7834022d4e49a74f3cce5/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-vect-ifcvt-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b03edb56633f6e77d7834022d4e49a74f3cce5/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-vect-ifcvt-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-trapping-math-vect-ifcvt-15.c?ref=04b03edb56633f6e77d7834022d4e49a74f3cce5", "previous_filename": "gcc/testsuite/gcc.dg/vect/vect-ifcvt-15.c"}, {"sha": "8d680dfa6bf02205d55714459a524f7972780370", "filename": "gcc/tree-complex.c", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b03edb56633f6e77d7834022d4e49a74f3cce5/gcc%2Ftree-complex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b03edb56633f6e77d7834022d4e49a74f3cce5/gcc%2Ftree-complex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-complex.c?ref=04b03edb56633f6e77d7834022d4e49a74f3cce5", "patch": "@@ -1047,22 +1047,30 @@ expand_complex_div_wide (block_stmt_iterator *bsi, tree inner_type,\n \t\t\t tree ar, tree ai, tree br, tree bi,\n \t\t\t enum tree_code code)\n {\n-  tree rr, ri, ratio, div, t1, t2, tr, ti, cond;\n+  tree rr, ri, ratio, div, t1, t2, tr, ti, compare;\n   basic_block bb_cond, bb_true, bb_false, bb_join;\n \n   /* Examine |br| < |bi|, and branch.  */\n   t1 = gimplify_build1 (bsi, ABS_EXPR, inner_type, br);\n   t2 = gimplify_build1 (bsi, ABS_EXPR, inner_type, bi);\n-  cond = fold_build2 (LT_EXPR, boolean_type_node, t1, t2);\n-  STRIP_NOPS (cond);\n+  compare = fold_build2 (LT_EXPR, boolean_type_node, t1, t2);\n+  STRIP_NOPS (compare);\n \n   bb_cond = bb_true = bb_false = bb_join = NULL;\n   rr = ri = tr = ti = NULL;\n-  if (!TREE_CONSTANT (cond))\n+  if (!TREE_CONSTANT (compare))\n     {\n       edge e;\n+      tree cond, tmp;\n \n-      cond = build3 (COND_EXPR, void_type_node, cond, NULL_TREE, NULL_TREE);\n+      tmp = create_tmp_var (boolean_type_node, NULL);\n+      cond = build_gimple_modify_stmt (tmp, compare);\n+      if (gimple_in_ssa_p (cfun))\n+\ttmp = make_ssa_name (tmp,  cond);\n+      GIMPLE_STMT_OPERAND (cond, 0) = tmp;\n+      bsi_insert_before (bsi, cond, BSI_SAME_STMT);\n+\n+      cond = build3 (COND_EXPR, void_type_node, tmp, NULL_TREE, NULL_TREE);\n       bsi_insert_before (bsi, cond, BSI_SAME_STMT);\n \n       /* Split the original block, and create the TRUE and FALSE blocks.  */\n@@ -1098,7 +1106,7 @@ expand_complex_div_wide (block_stmt_iterator *bsi, tree inner_type,\n       ti = (ai * ratio) - ar;\n       tr = tr / div;\n       ti = ti / div;  */\n-  if (bb_true || integer_nonzerop (cond))\n+  if (bb_true || integer_nonzerop (compare))\n     {\n       if (bb_true)\n \t{\n@@ -1137,7 +1145,7 @@ expand_complex_div_wide (block_stmt_iterator *bsi, tree inner_type,\n       ti = b - (a * ratio);\n       tr = tr / div;\n       ti = ti / div;  */\n-  if (bb_false || integer_zerop (cond))\n+  if (bb_false || integer_zerop (compare))\n     {\n       if (bb_false)\n \t{"}, {"sha": "9428e38c54e30eb3faf69092cde36de0887debc5", "filename": "gcc/tree-eh.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b03edb56633f6e77d7834022d4e49a74f3cce5/gcc%2Ftree-eh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b03edb56633f6e77d7834022d4e49a74f3cce5/gcc%2Ftree-eh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-eh.c?ref=04b03edb56633f6e77d7834022d4e49a74f3cce5", "patch": "@@ -1896,7 +1896,10 @@ tree_could_trap_p (tree expr)\n       || TREE_CODE_CLASS (code) == tcc_binary)\n     {\n       t = TREE_TYPE (expr);\n-      fp_operation = FLOAT_TYPE_P (t);\n+      if (COMPARISON_CLASS_P (expr))\n+\tfp_operation = FLOAT_TYPE_P (TREE_TYPE (TREE_OPERAND (expr, 0)));\n+      else\n+\tfp_operation = FLOAT_TYPE_P (t);\n       if (fp_operation)\n \t{\n \t  honor_nans = flag_trapping_math && !flag_finite_math_only;"}, {"sha": "101dfd17c2ba7b4502d1e4b8103f4424e4fa5375", "filename": "gcc/tree-gimple.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b03edb56633f6e77d7834022d4e49a74f3cce5/gcc%2Ftree-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b03edb56633f6e77d7834022d4e49a74f3cce5/gcc%2Ftree-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-gimple.c?ref=04b03edb56633f6e77d7834022d4e49a74f3cce5", "patch": "@@ -155,7 +155,10 @@ is_gimple_lvalue (tree t)\n bool\n is_gimple_condexpr (tree t)\n {\n-  return (is_gimple_val (t) || COMPARISON_CLASS_P (t));\n+  return (is_gimple_val (t) || (COMPARISON_CLASS_P (t)\n+\t\t\t\t&& !tree_could_trap_p (t)\n+\t\t\t\t&& is_gimple_val (TREE_OPERAND (t, 0))\n+\t\t\t\t&& is_gimple_val (TREE_OPERAND (t, 1))));\n }\n \n /*  Return true if T is something whose address can be taken.  */\n@@ -648,12 +651,7 @@ canonicalize_cond_expr_cond (tree t)\n \t\t  TREE_OPERAND (top0, 0), TREE_OPERAND (top0, 1));\n     }\n \n-  /* A valid conditional for a COND_EXPR is either a gimple value\n-     or a comparison with two gimple value operands.  */\n-  if (is_gimple_val (t)\n-      || (COMPARISON_CLASS_P (t)\n-\t  && is_gimple_val (TREE_OPERAND (t, 0))\n-\t  && is_gimple_val (TREE_OPERAND (t, 1))))\n+  if (is_gimple_condexpr (t))\n     return t;\n \n   return NULL_TREE;"}]}