{"sha": "ffabb76185e08d4db5d09c615fdeb99b06a234b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmZhYmI3NjE4NWUwOGQ0ZGI1ZDA5YzYxNWZkZWI5OWIwNmEyMzRiNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-01-03T20:36:14Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-01-03T20:36:14Z"}, "message": "re PR c++/55842 (C++11 ICE with boost multi-precision and boost variant)\n\n\tPR c++/55842\n\t* semantics.c (trait_expr_value): Call maybe_instantiate_noexcept.\n\nFrom-SVN: r194869", "tree": {"sha": "e8dea07d2da5de94ecd9db084fdc29dc41549691", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8dea07d2da5de94ecd9db084fdc29dc41549691"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ffabb76185e08d4db5d09c615fdeb99b06a234b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffabb76185e08d4db5d09c615fdeb99b06a234b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffabb76185e08d4db5d09c615fdeb99b06a234b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffabb76185e08d4db5d09c615fdeb99b06a234b6/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8ac16127cf8c60a4fd33288cb044043cbf014bd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ac16127cf8c60a4fd33288cb044043cbf014bd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ac16127cf8c60a4fd33288cb044043cbf014bd6"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "56fcfa669adcadec4e77eab63d68e938655ed412", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffabb76185e08d4db5d09c615fdeb99b06a234b6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffabb76185e08d4db5d09c615fdeb99b06a234b6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ffabb76185e08d4db5d09c615fdeb99b06a234b6", "patch": "@@ -1,5 +1,8 @@\n 2013-01-03  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/55842\n+\t* semantics.c (trait_expr_value): Call maybe_instantiate_noexcept.\n+\n \tPR c++/55856\n \t* semantics.c (build_data_member_initialization): Handle DECL_EXPR.\n "}, {"sha": "2e022958211d3de35d37367a792b5b53dfd6fc13", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffabb76185e08d4db5d09c615fdeb99b06a234b6/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffabb76185e08d4db5d09c615fdeb99b06a234b6/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=ffabb76185e08d4db5d09c615fdeb99b06a234b6", "patch": "@@ -5454,7 +5454,8 @@ trait_expr_value (cp_trait_kind kind, tree type1, tree type2)\n       return (trait_expr_value (CPTK_HAS_TRIVIAL_CONSTRUCTOR, type1, type2) \n \t      || (CLASS_TYPE_P (type1)\n \t\t  && (t = locate_ctor (type1))\n-\t\t  && TYPE_NOTHROW_P (TREE_TYPE (t))));\n+\t\t  && (maybe_instantiate_noexcept (t),\n+\t\t      TYPE_NOTHROW_P (TREE_TYPE (t)))));\n \n     case CPTK_HAS_TRIVIAL_CONSTRUCTOR:\n       type1 = strip_array_types (type1);"}, {"sha": "9191c3e97f8d97f06ab0fc6fac13d7873c8210f5", "filename": "gcc/testsuite/g++.dg/ext/has_nothrow_constructor-2.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffabb76185e08d4db5d09c615fdeb99b06a234b6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fhas_nothrow_constructor-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffabb76185e08d4db5d09c615fdeb99b06a234b6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fhas_nothrow_constructor-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fhas_nothrow_constructor-2.C?ref=ffabb76185e08d4db5d09c615fdeb99b06a234b6", "patch": "@@ -0,0 +1,7 @@\n+// PR c++/55842\n+// { dg-options -std=c++11 }\n+\n+template <class=void> struct number {\n+  number() noexcept(noexcept(0)) { }\n+};\n+const int z=__has_nothrow_constructor(number<>);"}]}