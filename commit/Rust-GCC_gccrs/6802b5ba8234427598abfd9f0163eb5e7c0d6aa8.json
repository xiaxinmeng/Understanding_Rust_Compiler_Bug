{"sha": "6802b5ba8234427598abfd9f0163eb5e7c0d6aa8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjgwMmI1YmE4MjM0NDI3NTk4YWJmZDlmMDE2M2ViNWU3YzBkNmFhOA==", "commit": {"author": {"name": "Joe Ramsay", "email": "joe.ramsay@arm.com", "date": "2020-05-29T07:44:37Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-05-29T07:44:37Z"}, "message": "aarch64: add support for unpacked EOR, ORR and AND\n\nExtended patterns for these instructions to support unpacked vectors.\nBIC will have to wait, as there is not currently support for unpacked\nNOT.\n\n2020-05-29  Joe Ramsay  <joe.ramsay@arm.com>\n\ngcc/\n\t* config/aarch64/aarch64-sve.md (<LOGICAL:optab><mode>3): Add support\n\tfor unpacked EOR, ORR, AND.\n\ngcc/testsuite/\n\t* gcc.target/aarch64/sve/load_const_offset_2.c: Force using packed\n\tvectors.\n\t* gcc.target/aarch64/sve/logical_unpacked_and_1.c: New test.\n\t* gcc.target/aarch64/sve/logical_unpacked_and_2.c: New test.\n\t* gcc.target/aarch64/sve/logical_unpacked_and_3.c: New test.\n\t* gcc.target/aarch64/sve/logical_unpacked_and_4.c: New test.\n\t* gcc.target/aarch64/sve/logical_unpacked_and_5.c: New test.\n\t* gcc.target/aarch64/sve/logical_unpacked_and_6.c: New test.\n\t* gcc.target/aarch64/sve/logical_unpacked_and_7.c: New test.\n\t* gcc.target/aarch64/sve/logical_unpacked_eor_1.c: New test.\n\t* gcc.target/aarch64/sve/logical_unpacked_eor_2.c: New test.\n\t* gcc.target/aarch64/sve/logical_unpacked_eor_3.c: New test.\n\t* gcc.target/aarch64/sve/logical_unpacked_eor_4.c: New test.\n\t* gcc.target/aarch64/sve/logical_unpacked_eor_5.c: New test.\n\t* gcc.target/aarch64/sve/logical_unpacked_eor_6.c: New test.\n\t* gcc.target/aarch64/sve/logical_unpacked_eor_7.c: New test.\n\t* gcc.target/aarch64/sve/logical_unpacked_orr_1.c: New test.\n\t* gcc.target/aarch64/sve/logical_unpacked_orr_2.c: New test.\n\t* gcc.target/aarch64/sve/logical_unpacked_orr_3.c: New test.\n\t* gcc.target/aarch64/sve/logical_unpacked_orr_4.c: New test.\n\t* gcc.target/aarch64/sve/logical_unpacked_orr_5.c: New test.\n\t* gcc.target/aarch64/sve/logical_unpacked_orr_6.c: New test.\n\t* gcc.target/aarch64/sve/logical_unpacked_orr_7.c: New test.\n\t* gcc.target/aarch64/sve/scatter_store_6.c: Force using packed vectors.\n\t* gcc.target/aarch64/sve/scatter_store_7.c: Force using packed vectors.\n\t* gcc.target/aarch64/sve/strided_load_3.c: Force using packed vectors.\n\t* gcc.target/aarch64/sve/strided_store_3.c: Force using packed vectors.\n\t* gcc.target/aarch64/sve/unpack_signed_1.c: Force using packed vectors.", "tree": {"sha": "094fe3e2e66e99029a44eb37c80837e3d6b2a367", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/094fe3e2e66e99029a44eb37c80837e3d6b2a367"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/comments", "author": {"login": "joeramsay", "id": 78039542, "node_id": "MDQ6VXNlcjc4MDM5NTQy", "avatar_url": "https://avatars.githubusercontent.com/u/78039542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joeramsay", "html_url": "https://github.com/joeramsay", "followers_url": "https://api.github.com/users/joeramsay/followers", "following_url": "https://api.github.com/users/joeramsay/following{/other_user}", "gists_url": "https://api.github.com/users/joeramsay/gists{/gist_id}", "starred_url": "https://api.github.com/users/joeramsay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joeramsay/subscriptions", "organizations_url": "https://api.github.com/users/joeramsay/orgs", "repos_url": "https://api.github.com/users/joeramsay/repos", "events_url": "https://api.github.com/users/joeramsay/events{/privacy}", "received_events_url": "https://api.github.com/users/joeramsay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "697eab1b3e8936fd6932cc81646934651337cc39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/697eab1b3e8936fd6932cc81646934651337cc39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/697eab1b3e8936fd6932cc81646934651337cc39"}], "stats": {"total": 368, "additions": 358, "deletions": 10}, "files": [{"sha": "8f0944c2992427adb65f265b84b3ed4b10ae117c", "filename": "gcc/config/aarch64/aarch64-sve.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md?ref=6802b5ba8234427598abfd9f0163eb5e7c0d6aa8", "patch": "@@ -4211,10 +4211,10 @@\n \n ;; Unpredicated integer binary logical operations.\n (define_insn \"<optab><mode>3\"\n-  [(set (match_operand:SVE_FULL_I 0 \"register_operand\" \"=w, ?w, w\")\n-\t(LOGICAL:SVE_FULL_I\n-\t  (match_operand:SVE_FULL_I 1 \"register_operand\" \"%0, w, w\")\n-\t  (match_operand:SVE_FULL_I 2 \"aarch64_sve_logical_operand\" \"vsl, vsl, w\")))]\n+  [(set (match_operand:SVE_I 0 \"register_operand\" \"=w, ?w, w\")\n+\t(LOGICAL:SVE_I\n+\t  (match_operand:SVE_I 1 \"register_operand\" \"%0, w, w\")\n+\t  (match_operand:SVE_I 2 \"aarch64_sve_logical_operand\" \"vsl, vsl, w\")))]\n   \"TARGET_SVE\"\n   \"@\n    <logical>\\t%0.<Vetype>, %0.<Vetype>, #%C2"}, {"sha": "0aab81b8560652b49f5b2a84e3a4f7c382b2d05b", "filename": "gcc/testsuite/gcc.target/aarch64/sve/load_const_offset_2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fload_const_offset_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fload_const_offset_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fload_const_offset_2.c?ref=6802b5ba8234427598abfd9f0163eb5e7c0d6aa8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do assemble { target aarch64_asm_sve_ok } } */\n-/* { dg-options \"-O2 -ftree-vectorize -save-temps\" } */\n+/* { dg-options \"-O2 -ftree-vectorize -save-temps --param aarch64-sve-compare-costs=0\" } */\n \n #include <stdint.h>\n "}, {"sha": "784035528f782e0e9a36f1cfc52263c2effb335f", "filename": "gcc/testsuite/gcc.target/aarch64/sve/logical_unpacked_and_1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_and_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_and_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_and_1.c?ref=6802b5ba8234427598abfd9f0163eb5e7c0d6aa8", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-options \"-O3 -msve-vector-bits=256\" } */\n+\n+#include <stdint.h>\n+\n+void\n+f (uint32_t *restrict dst, uint16_t *restrict src1, uint8_t *restrict src2)\n+{\n+  for (int i = 0; i < 7; ++i)\n+    dst[i] = (uint16_t) (src1[i] & src2[i]);\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tld1h\\tz[0-9]+\\.s,} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tld1b\\tz[0-9]+\\.s,} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tand\\tz[0-9]+\\.d, z[0-9]+\\.d, z[0-9]+\\.d\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tuxth\\tz[0-9]+\\.s,} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tst1w\\tz[0-9]+\\.s,} 1 } } */"}, {"sha": "08b274512e1c6ce8f5845084a664b2fa0456dafe", "filename": "gcc/testsuite/gcc.target/aarch64/sve/logical_unpacked_and_2.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_and_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_and_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_and_2.c?ref=6802b5ba8234427598abfd9f0163eb5e7c0d6aa8", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-options \"-O3 -msve-vector-bits=256\" } */\n+\n+#include <stdint.h>\n+\n+void\n+f (uint64_t *restrict dst, uint16_t *restrict src1, uint8_t *restrict src2)\n+{\n+  for (int i = 0; i < 7; ++i)\n+    dst[i] = (uint16_t) (src1[i] & src2[i]);\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tld1h\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tld1b\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tuxtb\\tz[0-9]+\\.h,} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tand\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tuxth\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tst1d\\tz[0-9]+\\.d,} 2 } } */"}, {"sha": "c823470ca925ee66929475f74fa8d94bc4735594", "filename": "gcc/testsuite/gcc.target/aarch64/sve/logical_unpacked_and_3.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_and_3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_and_3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_and_3.c?ref=6802b5ba8234427598abfd9f0163eb5e7c0d6aa8", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-options \"-O3 -msve-vector-bits=256\" } */\n+\n+#include <stdint.h>\n+\n+void\n+f (uint64_t *restrict dst, uint32_t *restrict src1, uint8_t *restrict src2)\n+{\n+  for (int i = 0; i < 7; ++i)\n+    dst[i] = (uint32_t) (src1[i] & src2[i]);\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tld1w\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tld1b\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tuxtb\\tz[0-9]+\\.s,} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tand\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tuxtw\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tst1d\\tz[0-9]+\\.d,} 2 } } */"}, {"sha": "52c92911d9b548662d43b23816e4d450a9e67846", "filename": "gcc/testsuite/gcc.target/aarch64/sve/logical_unpacked_and_4.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_and_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_and_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_and_4.c?ref=6802b5ba8234427598abfd9f0163eb5e7c0d6aa8", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-options \"-O3 -msve-vector-bits=256\" } */\n+\n+#include <stdint.h>\n+\n+void\n+f (uint64_t *restrict dst, uint32_t *restrict src1, uint16_t *restrict src2)\n+{\n+  for (int i = 0; i < 7; ++i)\n+    dst[i] = (uint32_t) (src1[i] & src2[i]);\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tld1w\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tld1h\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tuxth\\tz[0-9]+\\.s,} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tand\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tuxtw\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tst1d\\tz[0-9]+\\.d,} 2 } } */"}, {"sha": "784035528f782e0e9a36f1cfc52263c2effb335f", "filename": "gcc/testsuite/gcc.target/aarch64/sve/logical_unpacked_and_5.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_and_5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_and_5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_and_5.c?ref=6802b5ba8234427598abfd9f0163eb5e7c0d6aa8", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-options \"-O3 -msve-vector-bits=256\" } */\n+\n+#include <stdint.h>\n+\n+void\n+f (uint32_t *restrict dst, uint16_t *restrict src1, uint8_t *restrict src2)\n+{\n+  for (int i = 0; i < 7; ++i)\n+    dst[i] = (uint16_t) (src1[i] & src2[i]);\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tld1h\\tz[0-9]+\\.s,} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tld1b\\tz[0-9]+\\.s,} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tand\\tz[0-9]+\\.d, z[0-9]+\\.d, z[0-9]+\\.d\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tuxth\\tz[0-9]+\\.s,} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tst1w\\tz[0-9]+\\.s,} 1 } } */"}, {"sha": "1552ed85302373bb16ad8265f5c84cea71ccbc66", "filename": "gcc/testsuite/gcc.target/aarch64/sve/logical_unpacked_and_6.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_and_6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_and_6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_and_6.c?ref=6802b5ba8234427598abfd9f0163eb5e7c0d6aa8", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-options \"-O3 -msve-vector-bits=256\" } */\n+\n+#include <stdint.h>\n+\n+void\n+f (uint64_t *restrict dst, uint16_t *restrict src1, uint8_t *restrict src2)\n+{\n+  for (int i = 0; i < 7; ++i)\n+    dst[i] = (uint16_t) (src1[i] & src2[i]);\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tld1h\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tld1b\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tuxtb\\tz[0-9]+\\.h,} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tand\\tz[0-9]+\\.d, z[0-9]+\\.d, z[0-9]+\\.d\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tuxth\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tst1d\\tz[0-9]+\\.d,} 2 } } */"}, {"sha": "484d9daf38f0779109484eab5a2a03a626c16fe8", "filename": "gcc/testsuite/gcc.target/aarch64/sve/logical_unpacked_and_7.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_and_7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_and_7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_and_7.c?ref=6802b5ba8234427598abfd9f0163eb5e7c0d6aa8", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-options \"-O3 -msve-vector-bits=256\" } */\n+\n+#include <stdint.h>\n+\n+void\n+f (uint64_t *restrict dst, uint32_t *restrict src1, uint8_t *restrict src2){\n+  for (int i = 0; i < 7; ++i)\n+    dst[i] = (uint32_t) (src1[i] & src2[i]);\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tld1w\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tld1b\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tuxtb\\tz[0-9]+\\.s,} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tand\\tz[0-9]+\\.d, z[0-9]+\\.d, z[0-9]+\\.d\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tuxtw\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tst1d\\tz[0-9]+\\.d,} 2 } } */"}, {"sha": "36a0b8c0c022f9f0e6ebb950c80f40bbecf8dba7", "filename": "gcc/testsuite/gcc.target/aarch64/sve/logical_unpacked_eor_1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_eor_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_eor_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_eor_1.c?ref=6802b5ba8234427598abfd9f0163eb5e7c0d6aa8", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-options \"-O3 -msve-vector-bits=256\" } */\n+\n+#include <stdint.h>\n+\n+void\n+f (uint32_t *restrict dst, uint16_t *restrict src1, uint8_t *restrict src2)\n+{\n+  for (int i = 0; i < 7; ++i)\n+    dst[i] = (uint16_t) (src1[i] ^ src2[i]);\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tld1h\\tz[0-9]+\\.s,} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tld1b\\tz[0-9]+\\.s,} 1 } } */\n+/* { dg-final { scan-assembler-times {\\teor\\tz[0-9]+\\.d, z[0-9]+\\.d, z[0-9]+\\.d\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tuxth\\tz[0-9]+\\.s,} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tst1w\\tz[0-9]+\\.s,} 1 } } */"}, {"sha": "23ddeb9f9b11f80783e1b173696a15d1d73762a3", "filename": "gcc/testsuite/gcc.target/aarch64/sve/logical_unpacked_eor_2.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_eor_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_eor_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_eor_2.c?ref=6802b5ba8234427598abfd9f0163eb5e7c0d6aa8", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-options \"-O3 -msve-vector-bits=256\" } */\n+\n+#include <stdint.h>\n+\n+void\n+f (uint64_t *restrict dst, uint16_t *restrict src1, uint8_t *restrict src2)\n+{\n+  for (int i = 0; i < 7; ++i)\n+    dst[i] = (uint16_t) (src1[i] ^ src2[i]);\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tld1h\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tld1b\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tuxtb\\tz[0-9]+\\.h,} 1 } } */\n+/* { dg-final { scan-assembler-times {\\teor\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tuxth\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tst1d\\tz[0-9]+\\.d,} 2 } } */"}, {"sha": "4dd1e085646c6d0e6d3d4e02534c94ea592ea7be", "filename": "gcc/testsuite/gcc.target/aarch64/sve/logical_unpacked_eor_3.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_eor_3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_eor_3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_eor_3.c?ref=6802b5ba8234427598abfd9f0163eb5e7c0d6aa8", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-options \"-O3 -msve-vector-bits=256\" } */\n+\n+#include <stdint.h>\n+\n+void\n+f (uint64_t *restrict dst, uint32_t *restrict src1, uint8_t *restrict src2)\n+{\n+  for (int i = 0; i < 7; ++i)\n+    dst[i] = (uint32_t) (src1[i] ^ src2[i]);\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tld1w\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tld1b\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tuxtb\\tz[0-9]+\\.s,} 1 } } */\n+/* { dg-final { scan-assembler-times {\\teor\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tuxtw\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tst1d\\tz[0-9]+\\.d,} 2 } } */"}, {"sha": "a31a2d425faa11c6faa5306d4c0a7e5a5fa086d8", "filename": "gcc/testsuite/gcc.target/aarch64/sve/logical_unpacked_eor_4.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_eor_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_eor_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_eor_4.c?ref=6802b5ba8234427598abfd9f0163eb5e7c0d6aa8", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-options \"-O3 -msve-vector-bits=256\" } */\n+\n+#include <stdint.h>\n+\n+void\n+f (uint64_t *restrict dst, uint32_t *restrict src1, uint16_t *restrict src2)\n+{\n+  for (int i = 0; i < 7; ++i)\n+    dst[i] = (uint32_t) (src1[i] ^ src2[i]);\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tld1w\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tld1h\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tuxth\\tz[0-9]+\\.s,} 1 } } */\n+/* { dg-final { scan-assembler-times {\\teor\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tuxtw\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tst1d\\tz[0-9]+\\.d,} 2 } } */"}, {"sha": "36a0b8c0c022f9f0e6ebb950c80f40bbecf8dba7", "filename": "gcc/testsuite/gcc.target/aarch64/sve/logical_unpacked_eor_5.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_eor_5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_eor_5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_eor_5.c?ref=6802b5ba8234427598abfd9f0163eb5e7c0d6aa8", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-options \"-O3 -msve-vector-bits=256\" } */\n+\n+#include <stdint.h>\n+\n+void\n+f (uint32_t *restrict dst, uint16_t *restrict src1, uint8_t *restrict src2)\n+{\n+  for (int i = 0; i < 7; ++i)\n+    dst[i] = (uint16_t) (src1[i] ^ src2[i]);\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tld1h\\tz[0-9]+\\.s,} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tld1b\\tz[0-9]+\\.s,} 1 } } */\n+/* { dg-final { scan-assembler-times {\\teor\\tz[0-9]+\\.d, z[0-9]+\\.d, z[0-9]+\\.d\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tuxth\\tz[0-9]+\\.s,} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tst1w\\tz[0-9]+\\.s,} 1 } } */"}, {"sha": "416567b21f703d6e0ff3792d2089b923ecde0441", "filename": "gcc/testsuite/gcc.target/aarch64/sve/logical_unpacked_eor_6.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_eor_6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_eor_6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_eor_6.c?ref=6802b5ba8234427598abfd9f0163eb5e7c0d6aa8", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-options \"-O3 -msve-vector-bits=256\" } */\n+\n+#include <stdint.h>\n+\n+void\n+f (uint64_t *restrict dst, uint16_t *restrict src1, uint8_t *restrict src2)\n+{\n+  for (int i = 0; i < 7; ++i)\n+    dst[i] = (uint16_t) (src1[i] ^ src2[i]);\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tld1h\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tld1b\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tuxtb\\tz[0-9]+\\.h,} 1 } } */\n+/* { dg-final { scan-assembler-times {\\teor\\tz[0-9]+\\.d, z[0-9]+\\.d, z[0-9]+\\.d\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tuxth\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tst1d\\tz[0-9]+\\.d,} 2 } } */"}, {"sha": "3f7c3ddbba8a986e01fbdbe51b307bdc3990da37", "filename": "gcc/testsuite/gcc.target/aarch64/sve/logical_unpacked_eor_7.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_eor_7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_eor_7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_eor_7.c?ref=6802b5ba8234427598abfd9f0163eb5e7c0d6aa8", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-options \"-O3 -msve-vector-bits=256\" } */\n+\n+#include <stdint.h>\n+\n+void\n+f (uint64_t *restrict dst, uint32_t *restrict src1, uint8_t *restrict src2){\n+  for (int i = 0; i < 7; ++i)\n+    dst[i] = (uint32_t) (src1[i] ^ src2[i]);\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tld1w\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tld1b\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tuxtb\\tz[0-9]+\\.s,} 1 } } */\n+/* { dg-final { scan-assembler-times {\\teor\\tz[0-9]+\\.d, z[0-9]+\\.d, z[0-9]+\\.d\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tuxtw\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tst1d\\tz[0-9]+\\.d,} 2 } } */"}, {"sha": "6131792c82fa64372df07977b87ddd78d7588d46", "filename": "gcc/testsuite/gcc.target/aarch64/sve/logical_unpacked_orr_1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_orr_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_orr_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_orr_1.c?ref=6802b5ba8234427598abfd9f0163eb5e7c0d6aa8", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-options \"-O3 -msve-vector-bits=256\" } */\n+\n+#include <stdint.h>\n+\n+void\n+f (uint32_t *restrict dst, uint16_t *restrict src1, uint8_t *restrict src2)\n+{\n+  for (int i = 0; i < 7; ++i)\n+    dst[i] = (uint16_t) (src1[i] | src2[i]);\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tld1h\\tz[0-9]+\\.s,} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tld1b\\tz[0-9]+\\.s,} 1 } } */\n+/* { dg-final { scan-assembler-times {\\torr\\tz[0-9]+\\.d, z[0-9]+\\.d, z[0-9]+\\.d\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tuxth\\tz[0-9]+\\.s,} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tst1w\\tz[0-9]+\\.s,} 1 } } */"}, {"sha": "593de65a02cd2a16acb48a6dd05163a4e66b7b27", "filename": "gcc/testsuite/gcc.target/aarch64/sve/logical_unpacked_orr_2.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_orr_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_orr_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_orr_2.c?ref=6802b5ba8234427598abfd9f0163eb5e7c0d6aa8", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-options \"-O3 -msve-vector-bits=256\" } */\n+\n+#include <stdint.h>\n+\n+void\n+f (uint64_t *restrict dst, uint16_t *restrict src1, uint8_t *restrict src2)\n+{\n+  for (int i = 0; i < 7; ++i)\n+    dst[i] = (uint16_t) (src1[i] | src2[i]);\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tld1h\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tld1b\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tuxtb\\tz[0-9]+\\.h,} 1 } } */\n+/* { dg-final { scan-assembler-times {\\torr\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tuxth\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tst1d\\tz[0-9]+\\.d,} 2 } } */"}, {"sha": "ec34e753eabf0709696cc4724a0bde2b825c6231", "filename": "gcc/testsuite/gcc.target/aarch64/sve/logical_unpacked_orr_3.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_orr_3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_orr_3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_orr_3.c?ref=6802b5ba8234427598abfd9f0163eb5e7c0d6aa8", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-options \"-O3 -msve-vector-bits=256\" } */\n+\n+#include <stdint.h>\n+\n+void\n+f (uint64_t *restrict dst, uint32_t *restrict src1, uint8_t *restrict src2)\n+{\n+  for (int i = 0; i < 7; ++i)\n+    dst[i] = (uint32_t) (src1[i] | src2[i]);\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tld1w\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tld1b\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tuxtb\\tz[0-9]+\\.s,} 1 } } */\n+/* { dg-final { scan-assembler-times {\\torr\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tuxtw\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tst1d\\tz[0-9]+\\.d,} 2 } } */"}, {"sha": "561a104a23f00759af457e03e8e175589282aeb5", "filename": "gcc/testsuite/gcc.target/aarch64/sve/logical_unpacked_orr_4.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_orr_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_orr_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_orr_4.c?ref=6802b5ba8234427598abfd9f0163eb5e7c0d6aa8", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-options \"-O3 -msve-vector-bits=256\" } */\n+\n+#include <stdint.h>\n+\n+void\n+f (uint64_t *restrict dst, uint32_t *restrict src1, uint16_t *restrict src2)\n+{\n+  for (int i = 0; i < 7; ++i)\n+    dst[i] = (uint32_t) (src1[i] | src2[i]);\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tld1w\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tld1h\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tuxth\\tz[0-9]+\\.s,} 1 } } */\n+/* { dg-final { scan-assembler-times {\\torr\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tuxtw\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tst1d\\tz[0-9]+\\.d,} 2 } } */"}, {"sha": "6131792c82fa64372df07977b87ddd78d7588d46", "filename": "gcc/testsuite/gcc.target/aarch64/sve/logical_unpacked_orr_5.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_orr_5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_orr_5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_orr_5.c?ref=6802b5ba8234427598abfd9f0163eb5e7c0d6aa8", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-options \"-O3 -msve-vector-bits=256\" } */\n+\n+#include <stdint.h>\n+\n+void\n+f (uint32_t *restrict dst, uint16_t *restrict src1, uint8_t *restrict src2)\n+{\n+  for (int i = 0; i < 7; ++i)\n+    dst[i] = (uint16_t) (src1[i] | src2[i]);\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tld1h\\tz[0-9]+\\.s,} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tld1b\\tz[0-9]+\\.s,} 1 } } */\n+/* { dg-final { scan-assembler-times {\\torr\\tz[0-9]+\\.d, z[0-9]+\\.d, z[0-9]+\\.d\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tuxth\\tz[0-9]+\\.s,} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tst1w\\tz[0-9]+\\.s,} 1 } } */"}, {"sha": "3ce1c3fb1e636c7f8ebcf2a7fbaafe20f3b7cfa0", "filename": "gcc/testsuite/gcc.target/aarch64/sve/logical_unpacked_orr_6.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_orr_6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_orr_6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_orr_6.c?ref=6802b5ba8234427598abfd9f0163eb5e7c0d6aa8", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-options \"-O3 -msve-vector-bits=256\" } */\n+\n+#include <stdint.h>\n+\n+void\n+f (uint64_t *restrict dst, uint16_t *restrict src1, uint8_t *restrict src2)\n+{\n+  for (int i = 0; i < 7; ++i)\n+    dst[i] = (uint16_t) (src1[i] | src2[i]);\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tld1h\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tld1b\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tuxtb\\tz[0-9]+\\.h,} 1 } } */\n+/* { dg-final { scan-assembler-times {\\torr\\tz[0-9]+\\.d, z[0-9]+\\.d, z[0-9]+\\.d\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tuxth\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tst1d\\tz[0-9]+\\.d,} 2 } } */"}, {"sha": "e6a429167ea38dbbbc7e653cd6d47ffbe0bc768d", "filename": "gcc/testsuite/gcc.target/aarch64/sve/logical_unpacked_orr_7.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_orr_7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_orr_7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_orr_7.c?ref=6802b5ba8234427598abfd9f0163eb5e7c0d6aa8", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-options \"-O3 -msve-vector-bits=256\" } */\n+\n+#include <stdint.h>\n+\n+void\n+f (uint64_t *restrict dst, uint32_t *restrict src1, uint8_t *restrict src2){\n+  for (int i = 0; i < 7; ++i)\n+    dst[i] = (uint32_t) (src1[i] | src2[i]);\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tld1w\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tld1b\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tuxtb\\tz[0-9]+\\.s,} 1 } } */\n+/* { dg-final { scan-assembler-times {\\torr\\tz[0-9]+\\.d, z[0-9]+\\.d, z[0-9]+\\.d\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tuxtw\\tz[0-9]+\\.d,} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tst1d\\tz[0-9]+\\.d,} 2 } } */"}, {"sha": "a9c37c4414b2020e99c2efe032ca91121b10c0d4", "filename": "gcc/testsuite/gcc.target/aarch64/sve/scatter_store_6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fscatter_store_6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fscatter_store_6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fscatter_store_6.c?ref=6802b5ba8234427598abfd9f0163eb5e7c0d6aa8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do assemble { target aarch64_asm_sve_ok } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fwrapv --save-temps\" } */\n+/* { dg-options \"-O2 -ftree-vectorize -fwrapv --save-temps --param aarch64-sve-compare-costs=0\" } */\n \n #include <stdint.h>\n "}, {"sha": "147eadc63a42939f7494e545a2ce009fadcc7dae", "filename": "gcc/testsuite/gcc.target/aarch64/sve/scatter_store_7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fscatter_store_7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fscatter_store_7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fscatter_store_7.c?ref=6802b5ba8234427598abfd9f0163eb5e7c0d6aa8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do assemble { target aarch64_asm_sve_ok } } */\n-/* { dg-options \"-O2 -ftree-vectorize --save-temps\" } */\n+/* { dg-options \"-O2 -ftree-vectorize --save-temps --param aarch64-sve-compare-costs=0\" } */\n \n #define INDEX16 uint16_t\n #define INDEX32 uint32_t"}, {"sha": "2e7cd98e9060758b512db23a3c4e6096f5a7f05b", "filename": "gcc/testsuite/gcc.target/aarch64/sve/strided_load_3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fstrided_load_3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fstrided_load_3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fstrided_load_3.c?ref=6802b5ba8234427598abfd9f0163eb5e7c0d6aa8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do assemble { target aarch64_asm_sve_ok } } */\n-/* { dg-options \"-O2 -ftree-vectorize --save-temps\" } */\n+/* { dg-options \"-O2 -ftree-vectorize --save-temps --param aarch64-sve-compare-costs=0\" } */\n \n #include <stdint.h>\n "}, {"sha": "335f99bb5a9b1d856f47206fbd0733cb0cd225db", "filename": "gcc/testsuite/gcc.target/aarch64/sve/strided_store_3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fstrided_store_3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fstrided_store_3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fstrided_store_3.c?ref=6802b5ba8234427598abfd9f0163eb5e7c0d6aa8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do assemble { target aarch64_asm_sve_ok } } */\n-/* { dg-options \"-O2 -ftree-vectorize --save-temps\" } */\n+/* { dg-options \"-O2 -ftree-vectorize --save-temps --param aarch64-sve-compare-costs=0\" } */\n \n #include <stdint.h>\n "}, {"sha": "ecb6e99400ca2f7b216eaeb3644dc9c95e9223fe", "filename": "gcc/testsuite/gcc.target/aarch64/sve/unpack_signed_1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Funpack_signed_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6802b5ba8234427598abfd9f0163eb5e7c0d6aa8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Funpack_signed_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Funpack_signed_1.c?ref=6802b5ba8234427598abfd9f0163eb5e7c0d6aa8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -ftree-vectorize -fno-inline\" } */\n+/* { dg-options \"-O2 -ftree-vectorize -fno-inline --param aarch64-sve-compare-costs=0\" } */\n \n #include <stdint.h>\n "}]}