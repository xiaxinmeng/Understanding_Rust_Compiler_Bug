{"sha": "24db2556253540529a7b11ed42683b2ea9bb8989", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjRkYjI1NTYyNTM1NDA1MjlhN2IxMWVkNDI2ODNiMmVhOWJiODk4OQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-02-08T13:29:15Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-02-08T13:29:15Z"}, "message": "re PR middle-end/84233 (ICE (segfault) in gimple_assign_rhs_code)\n\n2018-02-08  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/84233\n\t* tree-ssa-phiprop.c (propagate_with_phi): Use separate\n\tchanged flag instead of boguously re-using phi_inserted.\n\n\t* g++.dg/torture/pr84233.C: New testcase.\n\nFrom-SVN: r257486", "tree": {"sha": "c5f4c37badfc0bb93dd13c20c4b36192bb6013a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5f4c37badfc0bb93dd13c20c4b36192bb6013a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24db2556253540529a7b11ed42683b2ea9bb8989", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24db2556253540529a7b11ed42683b2ea9bb8989", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24db2556253540529a7b11ed42683b2ea9bb8989", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24db2556253540529a7b11ed42683b2ea9bb8989/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3d2249215e948493d5aa7ad1aaaa9d9de73207c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d2249215e948493d5aa7ad1aaaa9d9de73207c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d2249215e948493d5aa7ad1aaaa9d9de73207c6"}], "stats": {"total": 44, "additions": 42, "deletions": 2}, "files": [{"sha": "f26472ada037d335d48ed7c42a863844f6c30be3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24db2556253540529a7b11ed42683b2ea9bb8989/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24db2556253540529a7b11ed42683b2ea9bb8989/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=24db2556253540529a7b11ed42683b2ea9bb8989", "patch": "@@ -1,3 +1,9 @@\n+2018-02-08  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/84233\n+\t* tree-ssa-phiprop.c (propagate_with_phi): Use separate\n+\tchanged flag instead of boguously re-using phi_inserted.\n+\n 2018-02-08  Martin Jambor  <mjambor@suse.cz>\n \n \t* hsa-gen.c (get_symbol_for_decl): Set program allocation for"}, {"sha": "5b83f3aff8e61da03595827914189c8cd12a4358", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24db2556253540529a7b11ed42683b2ea9bb8989/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24db2556253540529a7b11ed42683b2ea9bb8989/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=24db2556253540529a7b11ed42683b2ea9bb8989", "patch": "@@ -1,3 +1,8 @@\n+2018-02-08  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/84233\n+\t* g++.dg/torture/pr84233.C: New testcase.\n+\n 2018-02-08  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/84278"}, {"sha": "d45a830bf630bc6501c90466c3faecb0e25bbc78", "filename": "gcc/testsuite/g++.dg/torture/pr84233.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24db2556253540529a7b11ed42683b2ea9bb8989/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr84233.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24db2556253540529a7b11ed42683b2ea9bb8989/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr84233.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr84233.C?ref=24db2556253540529a7b11ed42683b2ea9bb8989", "patch": "@@ -0,0 +1,25 @@\n+// { dg-do compile }\n+// { dg-additional-options \"-w\" }\n+\n+void a(const char *, int, const char *, const char *);\n+template <typename b> void c(b);\n+struct d {\n+    long e;\n+    template <typename> union f;\n+    template <typename h> union f<h *> {\n+\tf(h *i) : j(i) {}\n+\th *j;\n+\tlong bits;\n+    };\n+    static int k(volatile long &i) { return *(int *)f<volatile long *>(&i).bits; }\n+    typedef long g;\n+    operator g() volatile {\n+\tint l = k(e);\n+\tc(l);\n+    }\n+};\n+struct : d {\n+\t } m, n;\n+bool o;\n+void p() { (o ? m : n) ? (void)0 : a(\"\", 5, \"\", \"\"); }\n+"}, {"sha": "03dbb390bf87bb14fe01480eca9a748feaecfa13", "filename": "gcc/tree-ssa-phiprop.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24db2556253540529a7b11ed42683b2ea9bb8989/gcc%2Ftree-ssa-phiprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24db2556253540529a7b11ed42683b2ea9bb8989/gcc%2Ftree-ssa-phiprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiprop.c?ref=24db2556253540529a7b11ed42683b2ea9bb8989", "patch": "@@ -270,6 +270,7 @@ propagate_with_phi (basic_block bb, gphi *phi, struct phiprop_d *phivn,\n   use_operand_p arg_p, use;\n   ssa_op_iter i;\n   bool phi_inserted;\n+  bool changed;\n   tree type = NULL_TREE;\n \n   if (!POINTER_TYPE_P (TREE_TYPE (ptr))\n@@ -317,6 +318,7 @@ propagate_with_phi (basic_block bb, gphi *phi, struct phiprop_d *phivn,\n   /* Replace the first dereference of *ptr if there is one and if we\n      can move the loads to the place of the ptr phi node.  */\n   phi_inserted = false;\n+  changed = false;\n   FOR_EACH_IMM_USE_STMT (use_stmt, ui, ptr)\n     {\n       gimple *def_stmt;\n@@ -403,7 +405,7 @@ propagate_with_phi (basic_block bb, gphi *phi, struct phiprop_d *phivn,\n \t  unlink_stmt_vdef (use_stmt);\n \t  gsi_remove (&gsi, true);\n \n-\t  phi_inserted = true;\n+\t  changed = true;\n \t}\n \n       /* Found a proper dereference.  Insert a phi node if this\n@@ -424,20 +426,22 @@ propagate_with_phi (basic_block bb, gphi *phi, struct phiprop_d *phivn,\n \t  gsi_remove (&gsi, true);\n \n \t  phi_inserted = true;\n+\t  changed = true;\n \t}\n       else\n \t{\n \t  /* Further replacements are easy, just make a copy out of the\n \t     load.  */\n \t  gimple_assign_set_rhs1 (use_stmt, res);\n \t  update_stmt (use_stmt);\n+\t  changed = true;\n \t}\n \n next:;\n       /* Continue searching for a proper dereference.  */\n     }\n \n-  return phi_inserted;\n+  return changed;\n }\n \n /* Main entry for phiprop pass.  */"}]}