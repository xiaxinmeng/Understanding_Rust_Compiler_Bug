{"sha": "7fb754a1ad3d542eca7724a944fa54e8bebbbff4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ZiNzU0YTFhZDNkNTQyZWNhNzcyNGE5NDRmYTU0ZThiZWJiYmZmNA==", "commit": {"author": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2001-12-11T23:01:00Z"}, "committer": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2001-12-11T23:01:00Z"}, "message": "freeze.adb: Make Freeze_Fixed_Point_Type visible, for use in sem_attr.\n\n\t* freeze.adb: Make Freeze_Fixed_Point_Type visible, for use in\n\tsem_attr.\n\n\t* sem_attr.adb: Simplify previous fix for Address.\n\t(Set_Bounds): If prefix is a non-frozen fixed-point type, freeze now,\n\tto avoid anomalies where the bound of the type appears to raise\n\tconstraint error.\n\n\t* lib-xref.adb (Output_Refs): Make sure pointers are always properly\n\thandled.\n\n\t* sem_ch12.adb (Analyze_Subprogram_Instantiation): Check for a\n\trenamed unit before checking for recursive instantiations.\n\n\t* prj.ads: Add comments for some of the fields.\n\nFrom-SVN: r47902", "tree": {"sha": "11d29e57da04b303a82bfe15ecbabc386ef4ea29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11d29e57da04b303a82bfe15ecbabc386ef4ea29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7fb754a1ad3d542eca7724a944fa54e8bebbbff4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fb754a1ad3d542eca7724a944fa54e8bebbbff4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fb754a1ad3d542eca7724a944fa54e8bebbbff4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fb754a1ad3d542eca7724a944fa54e8bebbbff4/comments", "author": null, "committer": null, "parents": [{"sha": "0873bafcaa07ec24cc51e2bced0458252b5d028e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0873bafcaa07ec24cc51e2bced0458252b5d028e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0873bafcaa07ec24cc51e2bced0458252b5d028e"}], "stats": {"total": 79, "additions": 60, "deletions": 19}, "files": [{"sha": "5f65705ee6473864807f456464ae8c0faeec0419", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb754a1ad3d542eca7724a944fa54e8bebbbff4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb754a1ad3d542eca7724a944fa54e8bebbbff4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7fb754a1ad3d542eca7724a944fa54e8bebbbff4", "patch": "@@ -1,3 +1,27 @@\n+2001-12-11  Ed Schonberg <schonber@gnat.com>\n+\n+\t* freeze.adb: Make Freeze_Fixed_Point_Type visible, for use in\n+\tsem_attr.\n+\t\n+\t* sem_attr.adb: Simplify previous fix for Address.\n+\t(Set_Bounds): If prefix is a non-frozen fixed-point type, freeze now, \n+\tto avoid anomalies where the bound of the type appears to raise \n+\tconstraint error.\n+\n+2001-12-11  Robert Dewar <dewar@gnat.com>\n+\n+\t* lib-xref.adb (Output_Refs): Make sure pointers are always properly \n+\thandled.\n+\t\n+2001-12-11  Ed Schonberg <schonber@gnat.com>\n+\n+\t* sem_ch12.adb (Analyze_Subprogram_Instantiation): Check for a \n+\trenamed unit before checking for recursive instantiations.\n+\t\n+2001-12-11  Emmanuel Briot <briot@gnat.com>\n+\n+\t* prj.ads: Add comments for some of the fields.\n+\n 2001-12-11  Robert Dewar <dewar@gnat.com>\n \n \t* lib-xref.adb (Output_Refs): Don't output type references outside \n@@ -23,7 +47,7 @@\n \t\n \t* Makefile.in: Added g-diopit.o to GNATRTL_NONTASKING_OBJS\n \t\n-2001-12-11  Richard Kenner <dewar@gnat.com>\n+2001-12-11  Robert Dewar <dewar@gnat.com>\n \n \t* sem_attr.adb: Minor reformatting\n "}, {"sha": "55a98104f5764b964926635a106ee8d4ef416046", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb754a1ad3d542eca7724a944fa54e8bebbbff4/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb754a1ad3d542eca7724a944fa54e8bebbbff4/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=7fb754a1ad3d542eca7724a944fa54e8bebbbff4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision: 1.281 $\n+--                            $Revision$\n --                                                                          --\n --          Copyright (C) 1992-2001, Free Software Foundation, Inc.         --\n --                                                                          --\n@@ -105,11 +105,6 @@ package body Freeze is\n    --  that if a foreign convention is specified, and no specific size\n    --  is given, then the size must be at least Integer'Size.\n \n-   procedure Freeze_Fixed_Point_Type (Typ : Entity_Id);\n-   --  Freeze fixed point type. For fixed-point types, we have to defer\n-   --  setting the size and bounds till the freeze point, since they are\n-   --  potentially affected by the presence of size and small clauses.\n-\n    procedure Freeze_Static_Object (E : Entity_Id);\n    --  If an object is frozen which has Is_Statically_Allocated set, then\n    --  all referenced types must also be marked with this flag. This routine"}, {"sha": "c5b5b7d532c3fed24a36e5160f725f2e3ebd9ea6", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb754a1ad3d542eca7724a944fa54e8bebbbff4/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb754a1ad3d542eca7724a944fa54e8bebbbff4/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=7fb754a1ad3d542eca7724a944fa54e8bebbbff4", "patch": "@@ -698,8 +698,15 @@ package body Lib.Xref is\n \n                               if Tref /= Etype (Tref) then\n                                  Tref := First_Subtype (Etype (Tref));\n-                                 Left := '<';\n-                                 Right := '>';\n+\n+                                 --  Set brackets for derived type, but don't\n+                                 --  override pointer case since the fact that\n+                                 --  something is a pointer is more important\n+\n+                                 if Left /= '(' then\n+                                    Left := '<';\n+                                    Right := '>';\n+                                 end if;\n \n                               --  If non-derived ptr, get designated type\n "}, {"sha": "d4b47784445ee86594daf79d5be29daace4cabd7", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb754a1ad3d542eca7724a944fa54e8bebbbff4/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb754a1ad3d542eca7724a944fa54e8bebbbff4/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=7fb754a1ad3d542eca7724a944fa54e8bebbbff4", "patch": "@@ -86,7 +86,8 @@ package Prj is\n             Value : String_Id := No_String;\n       end case;\n    end record;\n-   --  Values for variables and array elements\n+   --  Values for variables and array elements.\n+   --  Default is True if the current value is the default one for the variable\n \n    Nil_Variable_Value : constant Variable_Value :=\n      (Kind     => Undefined,\n@@ -383,10 +384,14 @@ package Prj is\n       Include_Path : String_Access := null;\n       --  The cached value of ADA_INCLUDE_PATH for this project file.\n       --  Set by gnatmake (prj.Env.Set_Ada_Paths).\n+      --  Do not use this field directly outside of the compiler, use\n+      --  Prj.Env.Ada_Source_Path instead.\n \n       Objects_Path : String_Access := null;\n       --  The cached value of ADA_OBJECTS_PATH for this project file.\n       --  Set by gnatmake (prj.Env.Set_Ada_Paths).\n+      --  Do not use this field directly outside of the compiler, use\n+      --  Prj.Env.Ada_Source_Path instead.\n \n       Config_File_Name : Name_Id := No_Name;\n       --  The name of the configuration pragmas file, if any."}, {"sha": "a8e2306d816be053d41d0ef0da3349e2c3627f27", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb754a1ad3d542eca7724a944fa54e8bebbbff4/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb754a1ad3d542eca7724a944fa54e8bebbbff4/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=7fb754a1ad3d542eca7724a944fa54e8bebbbff4", "patch": "@@ -1555,8 +1555,7 @@ package body Sem_Attr is\n             then\n                Set_Address_Taken (Entity (P));\n \n-            elsif ((Ekind (Entity (P)) = E_Task_Type\n-                      or else Ekind (Entity (P)) = E_Protected_Type)\n+            elsif (Is_Concurrent_Type (Etype (Entity (P)))\n                     and then Etype (Entity (P)) = Base_Type (Entity (P)))\n               or else Ekind (Entity (P)) = E_Package\n               or else Is_Generic_Unit (Entity (P))\n@@ -3740,7 +3739,8 @@ package body Sem_Attr is\n       --  array subtype. Sets the variables Index_Lo and Index_Hi to the low\n       --  and high bound expressions for the index referenced by the attribute\n       --  designator (i.e. the first index if no expression is present, and\n-      --  the N'th index if the value N is present as an expression).\n+      --  the N'th index if the value N is present as an expression). Also\n+      --  used for First and Last of scalar types.\n \n       ---------------\n       -- Aft_Value --\n@@ -4016,6 +4016,14 @@ package body Sem_Attr is\n          elsif Is_Scalar_Type (P_Type) then\n             Ityp := P_Type;\n \n+            if Is_Fixed_Point_Type (P_Type)\n+              and then not Is_Frozen (Base_Type (P_Type))\n+              and then Compile_Time_Known_Value (Type_Low_Bound (P_Type))\n+              and then Compile_Time_Known_Value (Type_High_Bound (P_Type))\n+            then\n+               Freeze_Fixed_Point_Type (Base_Type (P_Type));\n+            end if;\n+\n          --  For array case, get type of proper index\n \n          else"}, {"sha": "71604f68c56ea9e60559cfc2dfd5e6f5f8c3fcbf", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb754a1ad3d542eca7724a944fa54e8bebbbff4/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb754a1ad3d542eca7724a944fa54e8bebbbff4/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=7fb754a1ad3d542eca7724a944fa54e8bebbbff4", "patch": "@@ -3050,12 +3050,6 @@ package body Sem_Ch12 is\n       elsif In_Open_Scopes (Gen_Unit) then\n          Error_Msg_NE (\"instantiation of & within itself\", N, Gen_Unit);\n \n-      elsif Contains_Instance_Of (Gen_Unit, Current_Scope, Gen_Id) then\n-         Error_Msg_Node_2 := Current_Scope;\n-         Error_Msg_NE\n-           (\"circular Instantiation: & instantiated in &!\", N, Gen_Unit);\n-         Circularity_Detected := True;\n-\n       elsif K = E_Procedure\n         and then Ekind (Gen_Unit) /= E_Generic_Procedure\n       then\n@@ -3090,6 +3084,14 @@ package body Sem_Ch12 is\n             Set_Entity (Gen_Id, Gen_Unit);\n          end if;\n \n+         if Contains_Instance_Of (Gen_Unit, Current_Scope, Gen_Id) then\n+            Error_Msg_Node_2 := Current_Scope;\n+            Error_Msg_NE\n+              (\"circular Instantiation: & instantiated in &!\", N, Gen_Unit);\n+            Circularity_Detected := True;\n+            return;\n+         end if;\n+\n          if In_Extended_Main_Source_Unit (N) then\n             Set_Is_Instantiated (Gen_Unit);\n             Generate_Reference  (Gen_Unit, N);"}]}