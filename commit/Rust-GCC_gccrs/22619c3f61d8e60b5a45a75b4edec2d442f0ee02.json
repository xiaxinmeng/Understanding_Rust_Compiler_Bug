{"sha": "22619c3f61d8e60b5a45a75b4edec2d442f0ee02", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI2MTljM2Y2MWQ4ZTYwYjVhNDVhNzViNGVkZWMyZDQ0MmYwZWUwMg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-10-06T11:25:21Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-10-06T11:25:21Z"}, "message": "(store_expr): Don't clobber TEMP with address.\n\nFrom-SVN: r8227", "tree": {"sha": "d6eab528be0a0e69347a7278050b3902e599be23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6eab528be0a0e69347a7278050b3902e599be23"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22619c3f61d8e60b5a45a75b4edec2d442f0ee02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22619c3f61d8e60b5a45a75b4edec2d442f0ee02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22619c3f61d8e60b5a45a75b4edec2d442f0ee02", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22619c3f61d8e60b5a45a75b4edec2d442f0ee02/comments", "author": null, "committer": null, "parents": [{"sha": "ce15adaa116fa31401863c4d2f94dd507e935af2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce15adaa116fa31401863c4d2f94dd507e935af2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce15adaa116fa31401863c4d2f94dd507e935af2"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "f7a9f8e65178c88c05141d67386125330240e9ed", "filename": "gcc/expr.c", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22619c3f61d8e60b5a45a75b4edec2d442f0ee02/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22619c3f61d8e60b5a45a75b4edec2d442f0ee02/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=22619c3f61d8e60b5a45a75b4edec2d442f0ee02", "patch": "@@ -2743,6 +2743,7 @@ store_expr (exp, target, want_value)\n \t     The string constant may be shorter than the array.\n \t     So copy just the string's actual length, and clear the rest.  */\n \t  rtx size;\n+\t  rtx addr;\n \n \t  /* Get the size of the data type of the string,\n \t     which is actually the size of the target.  */\n@@ -2771,17 +2772,16 @@ store_expr (exp, target, want_value)\n \t\t that we have to clear.  */\n \t      if (GET_CODE (copy_size_rtx) == CONST_INT)\n \t\t{\n-\t\t  temp = plus_constant (XEXP (target, 0),\n+\t\t  addr = plus_constant (XEXP (target, 0),\n \t\t\t\t\tTREE_STRING_LENGTH (exp));\n-\t\t  size = plus_constant (size,\n-\t\t\t\t\t- TREE_STRING_LENGTH (exp));\n+\t\t  size = plus_constant (size, - TREE_STRING_LENGTH (exp));\n \t\t}\n \t      else\n \t\t{\n \t\t  enum machine_mode size_mode = Pmode;\n \n-\t\t  temp = force_reg (Pmode, XEXP (target, 0));\n-\t\t  temp = expand_binop (size_mode, add_optab, temp,\n+\t\t  addr = force_reg (Pmode, XEXP (target, 0));\n+\t\t  addr = expand_binop (size_mode, add_optab, addr,\n \t\t\t\t       copy_size_rtx, NULL_RTX, 0,\n \t\t\t\t       OPTAB_LIB_WIDEN);\n \n@@ -2798,13 +2798,14 @@ store_expr (exp, target, want_value)\n \t      if (size != const0_rtx)\n \t\t{\n #ifdef TARGET_MEM_FUNCTIONS\n-\t\t  emit_library_call (memset_libfunc, 0, VOIDmode, 3,\n-\t\t\t\t     temp, Pmode, const0_rtx, Pmode, size, Pmode);\n+\t\t  emit_library_call (memset_libfunc, 0, VOIDmode, 3, addr,\n+\t\t\t\t     Pmode, const0_rtx, Pmode, size, Pmode);\n #else\n \t\t  emit_library_call (bzero_libfunc, 0, VOIDmode, 2,\n-\t\t\t\t     temp, Pmode, size, Pmode);\n+\t\t\t\t     addr, Pmode, size, Pmode);\n #endif\n \t\t}\n+\n \t      if (label)\n \t\temit_label (label);\n \t    }"}]}