{"sha": "6d1333ef46cba6ed9e1ace817f9cc649b7f7a1df", "node_id": "C_kwDOANBUbNoAKDZkMTMzM2VmNDZjYmE2ZWQ5ZTFhY2U4MTdmOWNjNjQ5YjdmN2ExZGY", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-11-15T18:31:38Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-11-16T15:10:48Z"}, "message": "LazyBooleanExpr does not need a nullptr check", "tree": {"sha": "55051cad7f474f411d79ca1e86cc23d63138716d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55051cad7f474f411d79ca1e86cc23d63138716d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d1333ef46cba6ed9e1ace817f9cc649b7f7a1df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d1333ef46cba6ed9e1ace817f9cc649b7f7a1df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d1333ef46cba6ed9e1ace817f9cc649b7f7a1df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d1333ef46cba6ed9e1ace817f9cc649b7f7a1df/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04a49acfa3caa7a85a1a9edd24d69da0ad575ad5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04a49acfa3caa7a85a1a9edd24d69da0ad575ad5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04a49acfa3caa7a85a1a9edd24d69da0ad575ad5"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "99696aec3fb3b15cf9e21a59548d98e80e531f09", "filename": "gcc/rust/typecheck/rust-hir-type-check-expr.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d1333ef46cba6ed9e1ace817f9cc649b7f7a1df/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d1333ef46cba6ed9e1ace817f9cc649b7f7a1df/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h?ref=6d1333ef46cba6ed9e1ace817f9cc649b7f7a1df", "patch": "@@ -774,17 +774,15 @@ class TypeCheckExpr : public TypeCheckBase\n     // we expect the lhs and rhs must be bools at this point\n     TyTy::BoolType elhs (expr.get_mappings ().get_hirid ());\n     lhs = elhs.unify (lhs);\n-    if (lhs == nullptr || lhs->get_kind () == TyTy::TypeKind::ERROR)\n+    if (lhs->get_kind () == TyTy::TypeKind::ERROR)\n       return;\n \n     TyTy::BoolType rlhs (expr.get_mappings ().get_hirid ());\n     rhs = elhs.unify (rhs);\n-    if (lhs == nullptr || lhs->get_kind () == TyTy::TypeKind::ERROR)\n+    if (lhs->get_kind () == TyTy::TypeKind::ERROR)\n       return;\n \n     infered = lhs->unify (rhs);\n-    infered->append_reference (lhs->get_ref ());\n-    infered->append_reference (rhs->get_ref ());\n   }\n \n   void visit (HIR::NegationExpr &expr) override"}]}