{"sha": "3de37a5d22c6f7add3457929d3572d2de678d6c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2RlMzdhNWQyMmM2ZjdhZGQzNDU3OTI5ZDM1NzJkMmRlNjc4ZDZjMg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-06-28T07:07:40Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-06-28T07:07:40Z"}, "message": "Introduce auto_string_vec class.\n\n2018-06-28  Martin Liska  <mliska@suse.cz>\n\n\t* vec.h (class auto_string_vec): New (moved from auto_argvec).\n\t(auto_string_vec::~auto_string_vec): Likewise.\n2018-06-28  Martin Liska  <mliska@suse.cz>\n\n\t* jit-playback.c (class auto_argvec): Moved to vec.h.\n\t(auto_argvec::~auto_argvec): Likewise.\n\t(compile): Use the renamed name.\n\t(invoke_driver): Likewise.\n\nFrom-SVN: r262208", "tree": {"sha": "4b5ffaf029ffb10382491dd44284f867ab19ba8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b5ffaf029ffb10382491dd44284f867ab19ba8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3de37a5d22c6f7add3457929d3572d2de678d6c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3de37a5d22c6f7add3457929d3572d2de678d6c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3de37a5d22c6f7add3457929d3572d2de678d6c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3de37a5d22c6f7add3457929d3572d2de678d6c2/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fb18c0c9fe26a77541dd63ca351832194969bef9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb18c0c9fe26a77541dd63ca351832194969bef9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb18c0c9fe26a77541dd63ca351832194969bef9"}], "stats": {"total": 57, "additions": 35, "deletions": 22}, "files": [{"sha": "a5a6ace9d04c45c9dba3c0df7272d999032691a6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3de37a5d22c6f7add3457929d3572d2de678d6c2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3de37a5d22c6f7add3457929d3572d2de678d6c2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3de37a5d22c6f7add3457929d3572d2de678d6c2", "patch": "@@ -1,3 +1,8 @@\n+2018-06-28  Martin Liska  <mliska@suse.cz>\n+\n+\t* vec.h (class auto_string_vec): New (moved from auto_argvec).\n+\t(auto_string_vec::~auto_string_vec): Likewise.\n+\n 2018-06-28  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* tree-inline.c (remap_gimple_stmt): Force input_location on the new"}, {"sha": "059cbb886bf357a0067ce276018b01b58472ecdf", "filename": "gcc/jit/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3de37a5d22c6f7add3457929d3572d2de678d6c2/gcc%2Fjit%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3de37a5d22c6f7add3457929d3572d2de678d6c2/gcc%2Fjit%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2FChangeLog?ref=3de37a5d22c6f7add3457929d3572d2de678d6c2", "patch": "@@ -1,3 +1,10 @@\n+2018-06-28  Martin Liska  <mliska@suse.cz>\n+\n+\t* jit-playback.c (class auto_argvec): Moved to vec.h.\n+\t(auto_argvec::~auto_argvec): Likewise.\n+\t(compile): Use the renamed name.\n+\t(invoke_driver): Likewise.\n+\n 2018-03-21  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR jit/84288"}, {"sha": "01c4567de0571e4b322168aacd038199b5b9d53d", "filename": "gcc/jit/jit-playback.c", "status": "modified", "additions": 2, "deletions": 22, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3de37a5d22c6f7add3457929d3572d2de678d6c2/gcc%2Fjit%2Fjit-playback.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3de37a5d22c6f7add3457929d3572d2de678d6c2/gcc%2Fjit%2Fjit-playback.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fjit-playback.c?ref=3de37a5d22c6f7add3457929d3572d2de678d6c2", "patch": "@@ -1749,26 +1749,6 @@ block (function *func,\n   m_label_expr = NULL;\n }\n \n-/* A subclass of auto_vec <char *> that frees all of its elements on\n-   deletion.  */\n-\n-class auto_argvec : public auto_vec <char *>\n-{\n- public:\n-  ~auto_argvec ();\n-};\n-\n-/* auto_argvec's dtor, freeing all contained strings, automatically\n-   chaining up to ~auto_vec <char *>, which frees the internal buffer.  */\n-\n-auto_argvec::~auto_argvec ()\n-{\n-  int i;\n-  char *str;\n-  FOR_EACH_VEC_ELT (*this, i, str)\n-    free (str);\n-}\n-\n /* Compile a playback::context:\n \n    - Use the context's options to cconstruct command-line options, and\n@@ -1822,7 +1802,7 @@ compile ()\n   /* Acquire the JIT mutex and set \"this\" as the active playback ctxt.  */\n   acquire_mutex ();\n \n-  auto_argvec fake_args;\n+  auto_string_vec fake_args;\n   make_fake_args (&fake_args, ctxt_progname, &requested_dumps);\n   if (errors_occurred ())\n     {\n@@ -2440,7 +2420,7 @@ invoke_driver (const char *ctxt_progname,\n   /* Currently this lumps together both assembling and linking into\n      TV_ASSEMBLE.  */\n   auto_timevar assemble_timevar (get_timer (), tv_id);\n-  auto_argvec argvec;\n+  auto_string_vec argvec;\n #define ADD_ARG(arg) argvec.safe_push (xstrdup (arg))\n \n   ADD_ARG (gcc_driver_name);"}, {"sha": "0af5187782e0b31c83e000d0409fd79f31fcbf00", "filename": "gcc/vec.h", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3de37a5d22c6f7add3457929d3572d2de678d6c2/gcc%2Fvec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3de37a5d22c6f7add3457929d3572d2de678d6c2/gcc%2Fvec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvec.h?ref=3de37a5d22c6f7add3457929d3572d2de678d6c2", "patch": "@@ -1462,6 +1462,15 @@ vec_alloc (vec<T> *&v, unsigned nelems CXX_MEM_STAT_INFO)\n }\n \n \n+/* A subclass of auto_vec <char *> that frees all of its elements on\n+   deletion.  */\n+\n+class auto_string_vec : public auto_vec <char *>\n+{\n+ public:\n+  ~auto_string_vec ();\n+};\n+\n /* Conditionally allocate heap memory for VEC and its internal vector.  */\n \n template<typename T>\n@@ -1554,6 +1563,18 @@ vec<T, va_heap, vl_ptr>::iterate (unsigned ix, T **ptr) const\n        vec_safe_iterate ((V), (I), &(P));\t\\\n        (I)--)\n \n+/* auto_string_vec's dtor, freeing all contained strings, automatically\n+   chaining up to ~auto_vec <char *>, which frees the internal buffer.  */\n+\n+inline\n+auto_string_vec::~auto_string_vec ()\n+{\n+  int i;\n+  char *str;\n+  FOR_EACH_VEC_ELT (*this, i, str)\n+    free (str);\n+}\n+\n \n /* Return a copy of this vector.  */\n "}]}