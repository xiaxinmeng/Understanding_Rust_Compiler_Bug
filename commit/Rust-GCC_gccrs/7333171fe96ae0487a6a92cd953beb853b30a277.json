{"sha": "7333171fe96ae0487a6a92cd953beb853b30a277", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzMzMzE3MWZlOTZhZTA0ODdhNmE5MmNkOTUzYmViODUzYjMwYTI3Nw==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2003-09-25T21:38:43Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2003-09-25T21:38:43Z"}, "message": "s390.c (s390_emit_prologue): Simplify accesses to FPR slots in the save area.\n\n\t* config/s390/s390.c (s390_emit_prologue): Simplify accesses to\n\tFPR slots in the save area.\n\t(s390_emit_epilogue): Likewise.\n\nFrom-SVN: r71799", "tree": {"sha": "4f8b5b2b58772ea9abfa06311f3a946b30002cf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f8b5b2b58772ea9abfa06311f3a946b30002cf4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7333171fe96ae0487a6a92cd953beb853b30a277", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7333171fe96ae0487a6a92cd953beb853b30a277", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7333171fe96ae0487a6a92cd953beb853b30a277", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7333171fe96ae0487a6a92cd953beb853b30a277/comments", "author": null, "committer": null, "parents": [{"sha": "775ee48ed2474c0bbff42201ef30ab8f14358859", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/775ee48ed2474c0bbff42201ef30ab8f14358859", "html_url": "https://github.com/Rust-GCC/gccrs/commit/775ee48ed2474c0bbff42201ef30ab8f14358859"}], "stats": {"total": 68, "additions": 24, "deletions": 44}, "files": [{"sha": "903c128d14c99b2bf4c57f834ccfa13f3511212e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7333171fe96ae0487a6a92cd953beb853b30a277/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7333171fe96ae0487a6a92cd953beb853b30a277/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7333171fe96ae0487a6a92cd953beb853b30a277", "patch": "@@ -1,3 +1,9 @@\n+2003-09-25  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* config/s390/s390.c (s390_emit_prologue): Simplify accesses to\n+\tFPR slots in the save area.\n+\t(s390_emit_epilogue): Likewise.\n+\n 2003-09-25  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* cgraph.h (cgraph_remove_edge): Declare."}, {"sha": "cf68a5210278e7f3eef6dc52454e428902526159", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 18, "deletions": 44, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7333171fe96ae0487a6a92cd953beb853b30a277/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7333171fe96ae0487a6a92cd953beb853b30a277/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=7333171fe96ae0487a6a92cd953beb853b30a277", "patch": "@@ -5493,37 +5493,18 @@ s390_emit_prologue (void)\n   /* Save fprs for variable args.  */\n \n   if (current_function_stdarg)\n-    {\n-      /* Save fpr 0 and 2.  */\n-\n-      save_fpr (stack_pointer_rtx, STACK_POINTER_OFFSET - 32, 16);\n-      save_fpr (stack_pointer_rtx, STACK_POINTER_OFFSET - 24, 17);\n-\n-      if (TARGET_64BIT)\n-\t{\n-\t  /* Save fpr 4 and 6.  */\n-\n-\t  save_fpr (stack_pointer_rtx, STACK_POINTER_OFFSET - 16, 18);\n-\t  save_fpr (stack_pointer_rtx, STACK_POINTER_OFFSET - 8, 19);\n-\t}\n-    }\n+    for (i = 16; i < (TARGET_64BIT ? 20 : 18); i++)\n+      save_fpr (stack_pointer_rtx, 16*UNITS_PER_WORD + 8*(i-16), i);\n \n   /* Save fprs 4 and 6 if used (31 bit ABI).  */\n \n   if (!TARGET_64BIT)\n-    {\n-      /* Save fpr 4 and 6.  */\n-      if (regs_ever_live[18] && !global_regs[18])\n-\t{\n-\t  insn = save_fpr (stack_pointer_rtx, STACK_POINTER_OFFSET - 16, 18);\n-\t  RTX_FRAME_RELATED_P (insn) = 1;\n-\t}\n-      if (regs_ever_live[19] && !global_regs[19])\n+    for (i = 18; i < 20; i++)\n+      if (regs_ever_live[i] && !global_regs[i])\n \t{\n-\t  insn = save_fpr (stack_pointer_rtx, STACK_POINTER_OFFSET - 8, 19);\n+\t  insn = save_fpr (stack_pointer_rtx, 16*UNITS_PER_WORD + 8*(i-16), i);\n \t  RTX_FRAME_RELATED_P (insn) = 1;\n \t}\n-    }\n \n   /* Decrement stack pointer.  */\n \n@@ -5650,6 +5631,7 @@ s390_emit_epilogue (void)\n   rtx frame_pointer, return_reg;\n   int area_bottom, area_top, offset = 0;\n   rtvec p;\n+  int i;\n \n   if (TARGET_TPF)\n     {\n@@ -5705,20 +5687,14 @@ s390_emit_epilogue (void)\n     }\n   else\n     {\n-      if (regs_ever_live[18] && !global_regs[18])\n-\t{\n-\t  if (area_bottom > STACK_POINTER_OFFSET - 16)\n-\t    area_bottom = STACK_POINTER_OFFSET - 16;\n-\t  if (area_top < STACK_POINTER_OFFSET - 8)\n-\t    area_top = STACK_POINTER_OFFSET - 8;\n-\t}\n-      if (regs_ever_live[19] && !global_regs[19])\n-\t{\n-\t  if (area_bottom > STACK_POINTER_OFFSET - 8)\n-\t    area_bottom = STACK_POINTER_OFFSET - 8;\n-\t  if (area_top < STACK_POINTER_OFFSET)\n-\t    area_top = STACK_POINTER_OFFSET;\n-\t}\n+      for (i = 18; i < 20; i++)\n+\tif (regs_ever_live[i] && !global_regs[i])\n+\t  {\n+\t    if (area_bottom > 16*UNITS_PER_WORD + 8*(i-16))\n+\t      area_bottom = 16*UNITS_PER_WORD + 8*(i-16);\n+\t    if (area_top < 16*UNITS_PER_WORD + 8*(i-16) + 8)\n+\t      area_top = 16*UNITS_PER_WORD + 8*(i-16) + 8;\n+\t  } \n     }\n \n   /* Check whether we can access the register save area.\n@@ -5760,8 +5736,6 @@ s390_emit_epilogue (void)\n \n   if (TARGET_64BIT)\n     {\n-      int i;\n-\n       if (cfun->machine->save_fprs_p)\n \tfor (i = 24; i < 32; i++)\n \t  if (regs_ever_live[i] && !global_regs[i])\n@@ -5770,10 +5744,10 @@ s390_emit_epilogue (void)\n     }\n   else\n     {\n-      if (regs_ever_live[18] && !global_regs[18])\n-\trestore_fpr (frame_pointer, offset + STACK_POINTER_OFFSET - 16, 18);\n-      if (regs_ever_live[19] && !global_regs[19])\n-\trestore_fpr (frame_pointer, offset + STACK_POINTER_OFFSET - 8, 19);\n+      for (i = 18; i < 20; i++)\n+\tif (regs_ever_live[i] && !global_regs[i])\n+\t  restore_fpr (frame_pointer, \n+\t\t       offset + 16*UNITS_PER_WORD + 8*(i-16), i);\n     }\n \n   /* Return register.  */"}]}