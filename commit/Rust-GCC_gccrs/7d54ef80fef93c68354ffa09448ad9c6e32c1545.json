{"sha": "7d54ef80fef93c68354ffa09448ad9c6e32c1545", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Q1NGVmODBmZWY5M2M2ODM1NGZmYTA5NDQ4YWQ5YzZlMzJjMTU0NQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2010-08-15T15:47:11Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2010-08-15T15:47:11Z"}, "message": "interface.c (compare_pointer, ): Allow passing TARGETs to pointers dummies with intent(in).\n\n2010-08-15  Tobias Burnus  <burnus@net-b.de>\n\n        * interface.c (compare_pointer, ): Allow passing TARGETs to\n        pointers dummies with intent(in).\n\n2010-08-15  Tobias Burnus  <burnus@net-b.de>\n\n        * gfortran.dg/pointer_target_1.f90: New.\n        * gfortran.dg/pointer_target_2.f90: New.\n        * gfortran.dg/pointer_target_3.f90: New.\n\nFrom-SVN: r163262", "tree": {"sha": "d4d7313d4da26b28bb2ce6b89e5dbe342e1c4118", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4d7313d4da26b28bb2ce6b89e5dbe342e1c4118"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d54ef80fef93c68354ffa09448ad9c6e32c1545", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d54ef80fef93c68354ffa09448ad9c6e32c1545", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d54ef80fef93c68354ffa09448ad9c6e32c1545", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d54ef80fef93c68354ffa09448ad9c6e32c1545/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e6c148988cfe585abf4eb2d3f1839f97a83cc1a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6c148988cfe585abf4eb2d3f1839f97a83cc1a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6c148988cfe585abf4eb2d3f1839f97a83cc1a9"}], "stats": {"total": 88, "additions": 88, "deletions": 0}, "files": [{"sha": "63a3927c58ecbbc1440f5fe433186385e9c7964d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d54ef80fef93c68354ffa09448ad9c6e32c1545/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d54ef80fef93c68354ffa09448ad9c6e32c1545/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=7d54ef80fef93c68354ffa09448ad9c6e32c1545", "patch": "@@ -1,3 +1,8 @@\n+2010-08-15  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* interface.c (compare_pointer, ): Allow passing TARGETs to pointers\n+\tdummies with intent(in).\n+\n 2010-08-15  Daniel Kraft  <d@domob.eu>\n \n \tPR fortran/45197"}, {"sha": "fa32c5c6999d8147d60486ca28e6af133c655ed9", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d54ef80fef93c68354ffa09448ad9c6e32c1545/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d54ef80fef93c68354ffa09448ad9c6e32c1545/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=7d54ef80fef93c68354ffa09448ad9c6e32c1545", "patch": "@@ -1368,6 +1368,11 @@ compare_pointer (gfc_symbol *formal, gfc_expr *actual)\n   if (formal->attr.pointer)\n     {\n       attr = gfc_expr_attr (actual);\n+\n+      /* Fortran 2008 allows non-pointer actual arguments.  */\n+      if (!attr.pointer && attr.target && formal->attr.intent == INTENT_IN)\n+\treturn 2;\n+\n       if (!attr.pointer)\n \treturn 0;\n     }\n@@ -2113,6 +2118,17 @@ compare_actual_formal (gfc_actual_arglist **ap, gfc_formal_arglist *formal,\n \t  return 0;\n \t}\n \n+      if (a->expr->expr_type != EXPR_NULL\n+\t  && (gfc_option.allow_std & GFC_STD_F2008) == 0\n+\t  && compare_pointer (f->sym, a->expr) == 2)\n+\t{\n+\t  if (where)\n+\t    gfc_error (\"Fortran 2008: Non-pointer actual argument at %L to \"\n+\t\t       \"pointer dummy '%s'\", &a->expr->where,f->sym->name);\n+\t  return 0;\n+\t}\n+\t\n+\n       /* Fortran 2008, C1242.  */\n       if (f->sym->attr.pointer && gfc_is_coindexed (a->expr))\n \t{"}, {"sha": "3cdef810b02857d906c626ee84787f8b23607dd6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d54ef80fef93c68354ffa09448ad9c6e32c1545/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d54ef80fef93c68354ffa09448ad9c6e32c1545/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7d54ef80fef93c68354ffa09448ad9c6e32c1545", "patch": "@@ -1,3 +1,9 @@\n+2010-08-15  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* gfortran.dg/pointer_target_1.f90: New.\n+\t* gfortran.dg/pointer_target_2.f90: New.\n+\t* gfortran.dg/pointer_target_3.f90: New.\n+\n 2010-08-15  Daniel Kraft  <d@domob.eu>\n \n \tPR fortran/45197"}, {"sha": "0f1b7129b8b3935b7aedcb23bcf9d25323edd1bd", "filename": "gcc/testsuite/gfortran.dg/pointer_target_1.f90", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d54ef80fef93c68354ffa09448ad9c6e32c1545/gcc%2Ftestsuite%2Fgfortran.dg%2Fpointer_target_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d54ef80fef93c68354ffa09448ad9c6e32c1545/gcc%2Ftestsuite%2Fgfortran.dg%2Fpointer_target_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpointer_target_1.f90?ref=7d54ef80fef93c68354ffa09448ad9c6e32c1545", "patch": "@@ -0,0 +1,20 @@\n+! { dg-do run }\n+!\n+! TARGET actual to POINTER dummy with INTENT(IN)\n+!\n+program test\n+  implicit none\n+  integer, target :: a\n+  a = 66\n+  call foo(a)\n+  if (a /= 647) call abort()\n+contains\n+  subroutine foo(p)\n+    integer, pointer, intent(in) :: p\n+    if (a /= 66) call abort()\n+    if (p /= 66) call abort()\n+    p = 647\n+    if (p /= 647) call abort()\n+    if (a /= 647) call abort()\n+  end subroutine foo\n+end program test"}, {"sha": "95c3e5f7956fada6a1dadaeb3dde4af9cbdb736f", "filename": "gcc/testsuite/gfortran.dg/pointer_target_2.f90", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d54ef80fef93c68354ffa09448ad9c6e32c1545/gcc%2Ftestsuite%2Fgfortran.dg%2Fpointer_target_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d54ef80fef93c68354ffa09448ad9c6e32c1545/gcc%2Ftestsuite%2Fgfortran.dg%2Fpointer_target_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpointer_target_2.f90?ref=7d54ef80fef93c68354ffa09448ad9c6e32c1545", "patch": "@@ -0,0 +1,21 @@\n+! { dg-do compile }\n+! { dg-options \"-std=f2003\" }\n+!\n+! TARGET actual to POINTER dummy with INTENT(IN)\n+!\n+program test\n+  implicit none\n+  integer, target :: a\n+  a = 66\n+  call foo(a) ! { dg-error \"Fortran 2008: Non-pointer actual argument\" }\n+  if (a /= 647) call abort()\n+contains\n+  subroutine foo(p)\n+    integer, pointer, intent(in) :: p\n+    if (a /= 66) call abort()\n+    if (p /= 66) call abort()\n+    p = 647\n+    if (p /= 647) call abort()\n+    if (a /= 647) call abort()\n+  end subroutine foo\n+end program test"}, {"sha": "85e4981cacff12b565b59c0d68da5443583828c3", "filename": "gcc/testsuite/gfortran.dg/pointer_target_3.f90", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d54ef80fef93c68354ffa09448ad9c6e32c1545/gcc%2Ftestsuite%2Fgfortran.dg%2Fpointer_target_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d54ef80fef93c68354ffa09448ad9c6e32c1545/gcc%2Ftestsuite%2Fgfortran.dg%2Fpointer_target_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpointer_target_3.f90?ref=7d54ef80fef93c68354ffa09448ad9c6e32c1545", "patch": "@@ -0,0 +1,20 @@\n+! { dg-do compile }\n+!\n+! TARGET actual to POINTER dummy with INTENT(IN)\n+!\n+program test\n+  implicit none\n+  integer, target :: a\n+  integer :: b\n+  call foo(a) ! OK\n+  call foo(b) ! { dg-error \"must be a pointer\" }\n+  call bar(a) ! { dg-error \"must be a pointer\" }\n+  call bar(b) ! { dg-error \"must be a pointer\" }\n+contains\n+  subroutine foo(p)\n+    integer, pointer, intent(in) :: p\n+  end subroutine foo\n+  subroutine bar(p)\n+    integer, pointer :: p\n+  end subroutine bar\n+end program test"}]}