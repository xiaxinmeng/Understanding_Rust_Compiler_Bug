{"sha": "17dc14cb4b0819532376a22b592b26dd6ffc364f", "node_id": "C_kwDOANBUbNoAKDE3ZGMxNGNiNGIwODE5NTMyMzc2YTIyYjU5MmIyNmRkNmZmYzM2NGY", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-11-05T12:32:44Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-11-05T12:45:32Z"}, "message": "Support forward declared items within blocks\n\nThis changes the BlockExpr resolution to iterate Items first, then the\nStmts. This could be handled in HIR by desugaring the BlockExpr by lowering\nthe block into { <items>; <stmts>; } would also work. But the HIR lowering\nof blocks is a little messy right now and we need to clean up the\nunreachable lint.\n\nFixes #531", "tree": {"sha": "9286859b3eac842bcb0f76f1fc1d6ce987d488b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9286859b3eac842bcb0f76f1fc1d6ce987d488b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17dc14cb4b0819532376a22b592b26dd6ffc364f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17dc14cb4b0819532376a22b592b26dd6ffc364f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17dc14cb4b0819532376a22b592b26dd6ffc364f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17dc14cb4b0819532376a22b592b26dd6ffc364f/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2f92e6a73338c986601a071b8641c051e700aba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2f92e6a73338c986601a071b8641c051e700aba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2f92e6a73338c986601a071b8641c051e700aba"}], "stats": {"total": 102, "additions": 68, "deletions": 34}, "files": [{"sha": "575d1f66a861a266e48a53ac20eb7d26fc90182e", "filename": "gcc/rust/hir/tree/rust-hir-expr.h", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17dc14cb4b0819532376a22b592b26dd6ffc364f/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17dc14cb4b0819532376a22b592b26dd6ffc364f/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h?ref=17dc14cb4b0819532376a22b592b26dd6ffc364f", "patch": "@@ -2007,15 +2007,6 @@ class BlockExpr : public ExprWithBlock\n \n   void accept_vis (HIRVisitor &vis) override;\n \n-  void iterate_stmts (std::function<bool (Stmt *)> cb)\n-  {\n-    for (auto it = statements.begin (); it != statements.end (); it++)\n-      {\n-\tif (!cb (it->get ()))\n-\t  return;\n-      }\n-  }\n-\n   bool is_final_stmt (Stmt *stmt) { return statements.back ().get () == stmt; }\n \n   Location get_closing_locus ()"}, {"sha": "ca5d8945c290c86448b72924b8d8f75400389fe6", "filename": "gcc/rust/lint/rust-lint-marklive.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17dc14cb4b0819532376a22b592b26dd6ffc364f/gcc%2Frust%2Flint%2Frust-lint-marklive.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17dc14cb4b0819532376a22b592b26dd6ffc364f/gcc%2Frust%2Flint%2Frust-lint-marklive.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flint%2Frust-lint-marklive.h?ref=17dc14cb4b0819532376a22b592b26dd6ffc364f", "patch": "@@ -97,10 +97,10 @@ class MarkLive : public MarkLiveBase\n \n   void visit (HIR::BlockExpr &expr) override\n   {\n-    expr.iterate_stmts ([&] (HIR::Stmt *s) mutable -> bool {\n-      s->accept_vis (*this);\n-      return true;\n-    });\n+    for (auto &s : expr.get_statements ())\n+      {\n+\ts->accept_vis (*this);\n+      }\n     if (expr.has_expr ())\n       {\n \texpr.get_final_expr ()->accept_vis (*this);"}, {"sha": "2758c83595d5985a4bb6dabca022198cd4a2b435", "filename": "gcc/rust/resolve/rust-ast-resolve.cc", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17dc14cb4b0819532376a22b592b26dd6ffc364f/gcc%2Frust%2Fresolve%2Frust-ast-resolve.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17dc14cb4b0819532376a22b592b26dd6ffc364f/gcc%2Frust%2Fresolve%2Frust-ast-resolve.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve.cc?ref=17dc14cb4b0819532376a22b592b26dd6ffc364f", "patch": "@@ -349,7 +349,16 @@ ResolveExpr::visit (AST::BlockExpr &expr)\n   resolver->push_new_label_rib (resolver->get_type_scope ().peek ());\n \n   for (auto &s : expr.get_statements ())\n-    ResolveStmt::go (s.get (), s->get_node_id ());\n+    {\n+      if (s->is_item ())\n+\tResolveStmt::go (s.get (), s->get_node_id ());\n+    }\n+\n+  for (auto &s : expr.get_statements ())\n+    {\n+      if (!s->is_item ())\n+\tResolveStmt::go (s.get (), s->get_node_id ());\n+    }\n \n   if (expr.has_tail_expr ())\n     ResolveExpr::go (expr.get_tail_expr ().get (), expr.get_node_id ());"}, {"sha": "ca4842a1630237ce21c9d96c317dfa09040bf7a7", "filename": "gcc/rust/typecheck/rust-hir-type-check.cc", "status": "modified", "additions": 29, "deletions": 14, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17dc14cb4b0819532376a22b592b26dd6ffc364f/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17dc14cb4b0819532376a22b592b26dd6ffc364f/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check.cc?ref=17dc14cb4b0819532376a22b592b26dd6ffc364f", "patch": "@@ -93,22 +93,37 @@ TypeResolution::Resolve (HIR::Crate &crate)\n void\n TypeCheckExpr::visit (HIR::BlockExpr &expr)\n {\n-  expr.iterate_stmts ([&] (HIR::Stmt *s) mutable -> bool {\n-    auto resolved = TypeCheckStmt::Resolve (s, inside_loop);\n-    if (resolved == nullptr)\n-      {\n-\trust_error_at (s->get_locus (), \"failure to resolve type\");\n-\treturn false;\n-      }\n+  for (auto &s : expr.get_statements ())\n+    {\n+      if (!s->is_item ())\n+\tcontinue;\n \n-    if (s->is_unit_check_needed () && !resolved->is_unit ())\n-      {\n-\tauto unit = new TyTy::TupleType (s->get_mappings ().get_hirid ());\n-\tresolved = unit->unify (resolved);\n-      }\n+      auto resolved = TypeCheckStmt::Resolve (s.get (), inside_loop);\n+      if (resolved == nullptr)\n+\t{\n+\t  rust_error_at (s->get_locus (), \"failure to resolve type\");\n+\t  return;\n+\t}\n+    }\n \n-    return true;\n-  });\n+  for (auto &s : expr.get_statements ())\n+    {\n+      if (s->is_item ())\n+\tcontinue;\n+\n+      auto resolved = TypeCheckStmt::Resolve (s.get (), inside_loop);\n+      if (resolved == nullptr)\n+\t{\n+\t  rust_error_at (s->get_locus (), \"failure to resolve type\");\n+\t  return;\n+\t}\n+\n+      if (s->is_unit_check_needed () && !resolved->is_unit ())\n+\t{\n+\t  auto unit = new TyTy::TupleType (s->get_mappings ().get_hirid ());\n+\t  resolved = unit->unify (resolved);\n+\t}\n+    }\n \n   if (expr.has_expr ())\n     infered"}, {"sha": "c305d48bec38bb93f5bd149062f6f820e90a1b4c", "filename": "gcc/rust/typecheck/rust-tycheck-dump.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17dc14cb4b0819532376a22b592b26dd6ffc364f/gcc%2Frust%2Ftypecheck%2Frust-tycheck-dump.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17dc14cb4b0819532376a22b592b26dd6ffc364f/gcc%2Frust%2Ftypecheck%2Frust-tycheck-dump.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tycheck-dump.h?ref=17dc14cb4b0819532376a22b592b26dd6ffc364f", "patch": "@@ -94,12 +94,12 @@ class TypeResolverDump : public TypeCheckBase\n   {\n     indentation_level++;\n \n-    expr.iterate_stmts ([&] (HIR::Stmt *s) mutable -> bool {\n-      dump += indent ();\n-      s->accept_vis (*this);\n-      dump += \";\\n\";\n-      return true;\n-    });\n+    for (auto &s : expr.get_statements ())\n+      {\n+\tdump += indent ();\n+\ts->accept_vis (*this);\n+\tdump += \";\\n\";\n+      }\n \n     if (expr.has_expr ())\n       {"}, {"sha": "73a47fe061bbf8ddaee5ff0e7f6f1e430bcaf918", "filename": "gcc/testsuite/rust/compile/torture/forward_decl_5.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17dc14cb4b0819532376a22b592b26dd6ffc364f/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fforward_decl_5.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17dc14cb4b0819532376a22b592b26dd6ffc364f/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fforward_decl_5.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fforward_decl_5.rs?ref=17dc14cb4b0819532376a22b592b26dd6ffc364f", "patch": "@@ -0,0 +1,19 @@\n+pub fn main() {\n+    let a;\n+    a = foo { a: 123, b: 456f32 };\n+\n+    let mut a = 123;\n+    a = bar(a);\n+\n+    let mut b = 456f32;\n+    b = bar(b);\n+\n+    fn bar<T>(x: T) -> T {\n+        x\n+    }\n+\n+    struct foo {\n+        a: i32,\n+        b: f32,\n+    };\n+}"}]}