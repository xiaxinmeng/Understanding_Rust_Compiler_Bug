{"sha": "921b13d09390034dea6d11ee47471efcca865ba6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTIxYjEzZDA5MzkwMDM0ZGVhNmQxMWVlNDc0NzFlZmNjYTg2NWJhNg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-06-10T11:44:47Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-06-10T11:44:47Z"}, "message": "gimple-fold.c (gimple_fold_builtin_memory_op): Make sure to fold the RHS to a constant if possible.\n\n2016-06-10  Richard Biener  <rguenther@suse.de>\n\n\t* gimple-fold.c (gimple_fold_builtin_memory_op): Make sure\n\tto fold the RHS to a constant if possible.\n\nFrom-SVN: r237301", "tree": {"sha": "5aa058652db38b6b331b933f9da2106f041395ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5aa058652db38b6b331b933f9da2106f041395ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/921b13d09390034dea6d11ee47471efcca865ba6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/921b13d09390034dea6d11ee47471efcca865ba6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/921b13d09390034dea6d11ee47471efcca865ba6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/921b13d09390034dea6d11ee47471efcca865ba6/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2cfab6c0f78dbb079737861ab7346420642d1b47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cfab6c0f78dbb079737861ab7346420642d1b47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cfab6c0f78dbb079737861ab7346420642d1b47"}], "stats": {"total": 27, "additions": 19, "deletions": 8}, "files": [{"sha": "5038f751ae3465997399a53fe83ab51decd8305e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/921b13d09390034dea6d11ee47471efcca865ba6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/921b13d09390034dea6d11ee47471efcca865ba6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=921b13d09390034dea6d11ee47471efcca865ba6", "patch": "@@ -1,3 +1,8 @@\n+2016-06-10  Richard Biener  <rguenther@suse.de>\n+\n+\t* gimple-fold.c (gimple_fold_builtin_memory_op): Make sure\n+\tto fold the RHS to a constant if possible.\n+\n 2016-06-10  Thomas Schwinge  <thomas@codesourcery.com>\n \n \tPR middle-end/71373"}, {"sha": "885367e911494a4a03bb24a532f5e73fecd7a1b1", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/921b13d09390034dea6d11ee47471efcca865ba6/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/921b13d09390034dea6d11ee47471efcca865ba6/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=921b13d09390034dea6d11ee47471efcca865ba6", "patch": "@@ -1020,14 +1020,20 @@ gimple_fold_builtin_memory_op (gimple_stmt_iterator *gsi,\n       gimple *new_stmt;\n       if (is_gimple_reg_type (TREE_TYPE (srcvar)))\n \t{\n-\t  new_stmt = gimple_build_assign (NULL_TREE, srcvar);\n-\t  if (gimple_in_ssa_p (cfun))\n-\t    srcvar = make_ssa_name (TREE_TYPE (srcvar), new_stmt);\n-\t  else\n-\t    srcvar = create_tmp_reg (TREE_TYPE (srcvar));\n-\t  gimple_assign_set_lhs (new_stmt, srcvar);\n-\t  gimple_set_vuse (new_stmt, gimple_vuse (stmt));\n-\t  gsi_insert_before (gsi, new_stmt, GSI_SAME_STMT);\n+\t  tree tem = fold_const_aggregate_ref (srcvar);\n+\t  if (tem)\n+\t    srcvar = tem;\n+\t  if (! is_gimple_min_invariant (srcvar))\n+\t    {\n+\t      new_stmt = gimple_build_assign (NULL_TREE, srcvar);\n+\t      if (gimple_in_ssa_p (cfun))\n+\t\tsrcvar = make_ssa_name (TREE_TYPE (srcvar), new_stmt);\n+\t      else\n+\t\tsrcvar = create_tmp_reg (TREE_TYPE (srcvar));\n+\t      gimple_assign_set_lhs (new_stmt, srcvar);\n+\t      gimple_set_vuse (new_stmt, gimple_vuse (stmt));\n+\t      gsi_insert_before (gsi, new_stmt, GSI_SAME_STMT);\n+\t    }\n \t}\n       new_stmt = gimple_build_assign (destvar, srcvar);\n       gimple_set_vuse (new_stmt, gimple_vuse (stmt));"}]}