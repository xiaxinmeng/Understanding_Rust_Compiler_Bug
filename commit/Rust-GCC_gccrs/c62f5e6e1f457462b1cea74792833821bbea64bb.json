{"sha": "c62f5e6e1f457462b1cea74792833821bbea64bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzYyZjVlNmUxZjQ1NzQ2MmIxY2VhNzQ3OTI4MzM4MjFiYmVhNjRiYg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-03-16T22:53:42Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-03-16T22:53:42Z"}, "message": "libstdc++: Add default constructor to net::service_already_exists (PR 94199)\n\nThe service_already_exists exception type specified in the TS doesn't\nhave any constructors defined. Since its base class isn't default\nconstructible, that means has no usable constructors. This may be a\ndefect in the TS.\n\nThis patch fixes it by adding a default constructor, but making it\nprivate. The make_service function is declared as a friend to be able to\ncall that private constructor.\n\n\tPR libstdc++/94199\n\t* include/experimental/executor (service_already_exists): Add default\n\tconstructor. Declare make_service to be a friend.\n\t* testsuite/experimental/net/execution_context/make_service.cc: New\n\ttest.", "tree": {"sha": "8c462df02fbe620b680dab49a4771f12bca12e65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c462df02fbe620b680dab49a4771f12bca12e65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c62f5e6e1f457462b1cea74792833821bbea64bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c62f5e6e1f457462b1cea74792833821bbea64bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c62f5e6e1f457462b1cea74792833821bbea64bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c62f5e6e1f457462b1cea74792833821bbea64bb/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "447d196e75d97a9ac7c6a548dc9d0fe367adf6be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/447d196e75d97a9ac7c6a548dc9d0fe367adf6be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/447d196e75d97a9ac7c6a548dc9d0fe367adf6be"}], "stats": {"total": 53, "additions": 52, "deletions": 1}, "files": [{"sha": "66acdb08cda1d62e46e4b05945d6de76f23c88e0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c62f5e6e1f457462b1cea74792833821bbea64bb/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c62f5e6e1f457462b1cea74792833821bbea64bb/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c62f5e6e1f457462b1cea74792833821bbea64bb", "patch": "@@ -1,3 +1,11 @@\n+2020-03-16  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/94199\n+\t* include/experimental/executor (service_already_exists): Add default\n+\tconstructor. Declare make_service to be a friend.\n+\t* testsuite/experimental/net/execution_context/make_service.cc: New\n+\ttest.\n+\n 2020-03-12  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* testsuite/tr1/8_c_compatibility/cstdlib/functions.cc: Do not pass"}, {"sha": "6955ead6bf5f308176b2a42d92a1449554a3a381", "filename": "libstdc++-v3/include/experimental/executor", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c62f5e6e1f457462b1cea74792833821bbea64bb/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fexecutor", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c62f5e6e1f457462b1cea74792833821bbea64bb/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fexecutor", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fexecutor?ref=c62f5e6e1f457462b1cea74792833821bbea64bb", "patch": "@@ -127,7 +127,14 @@ inline namespace v1\n   /// An extensible, type-safe, polymorphic set of services.\n   class execution_context;\n \n-  class service_already_exists : public logic_error { };\n+  class service_already_exists : public logic_error\n+  {\n+    template<typename _Service, typename... _Args>\n+      friend _Service&\n+      make_service(execution_context&, _Args&&...);\n+\n+    service_already_exists() : logic_error(\"service already exists\") { }\n+  };\n \n   template<typename _Tp> struct is_executor;\n "}, {"sha": "f134add48b5b373f5bef4b13b9f9a915d5c84f0e", "filename": "libstdc++-v3/testsuite/experimental/net/execution_context/make_service.cc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c62f5e6e1f457462b1cea74792833821bbea64bb/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fnet%2Fexecution_context%2Fmake_service.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c62f5e6e1f457462b1cea74792833821bbea64bb/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fnet%2Fexecution_context%2Fmake_service.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fnet%2Fexecution_context%2Fmake_service.cc?ref=c62f5e6e1f457462b1cea74792833821bbea64bb", "patch": "@@ -0,0 +1,36 @@\n+// Copyright (C) 2020 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do compile { target c++14 } }\n+\n+#include <experimental/executor>\n+\n+namespace net = std::experimental::net;\n+\n+struct S : net::execution_context::service\n+{\n+  using key_type = S;\n+\n+  S(net::execution_context&);\n+\n+  void shutdown() noexcept override { }\n+};\n+\n+void test01(net::execution_context& c)\n+{\n+  net::make_service<S>(c);\n+}"}]}