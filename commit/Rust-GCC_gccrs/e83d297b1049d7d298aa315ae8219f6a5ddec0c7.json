{"sha": "e83d297b1049d7d298aa315ae8219f6a5ddec0c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTgzZDI5N2IxMDQ5ZDdkMjk4YWEzMTVhZTgyMTlmNmE1ZGRlYzBjNw==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2001-12-07T01:42:35Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2001-12-07T01:42:35Z"}, "message": "builtin-types.def (BT_FN_VOID_PTR_VAR): New.\n\n\t* builtin-types.def (BT_FN_VOID_PTR_VAR): New.\n\t* builtins.def (BUILT_IN_PREFETCH): Change arguments.\n\t* builtins.c (expand_builtin_prefetch): Two arguments are now optional,\n\twith defaults for read prefetch with high degree of locality.\n\t* doc/extend.texi (__builtin_prefetch): Update documentation.\n\t* doc/md.texi (prefetch): Add documentation.\n\nFrom-SVN: r47741", "tree": {"sha": "baf0c96827241d6794dcca8eb20a81c5076a34e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/baf0c96827241d6794dcca8eb20a81c5076a34e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e83d297b1049d7d298aa315ae8219f6a5ddec0c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e83d297b1049d7d298aa315ae8219f6a5ddec0c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e83d297b1049d7d298aa315ae8219f6a5ddec0c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e83d297b1049d7d298aa315ae8219f6a5ddec0c7/comments", "author": null, "committer": null, "parents": [{"sha": "e94c6dee73d9ffdaf8bae0f9cfdde6db3e4840b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e94c6dee73d9ffdaf8bae0f9cfdde6db3e4840b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e94c6dee73d9ffdaf8bae0f9cfdde6db3e4840b1"}], "stats": {"total": 59, "additions": 53, "deletions": 6}, "files": [{"sha": "809c5857a4d8c4916f9a6f669573d2f3ae3e25eb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e83d297b1049d7d298aa315ae8219f6a5ddec0c7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e83d297b1049d7d298aa315ae8219f6a5ddec0c7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e83d297b1049d7d298aa315ae8219f6a5ddec0c7", "patch": "@@ -1,3 +1,12 @@\n+2001-12-06  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* builtin-types.def (BT_FN_VOID_PTR_VAR): New.\n+\t* builtins.def (BUILT_IN_PREFETCH): Change arguments.\n+\t* builtins.c (expand_builtin_prefetch): Two arguments are now optional,\n+\twith defaults for read prefetch with high degree of locality.\n+\t* doc/extend.texi (__builtin_prefetch): Update documentation.\n+\t* doc/md.texi (prefetch): Add documentation.\n+\n 2001-12-06  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \n \t* fixinc/inclhack.def (stdio_va_list): Handle __VA_LIST__ in Tru64"}, {"sha": "f24f5c7952435bdc380ed29499901e5c824cf603", "filename": "gcc/builtin-types.def", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e83d297b1049d7d298aa315ae8219f6a5ddec0c7/gcc%2Fbuiltin-types.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e83d297b1049d7d298aa315ae8219f6a5ddec0c7/gcc%2Fbuiltin-types.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltin-types.def?ref=e83d297b1049d7d298aa315ae8219f6a5ddec0c7", "patch": "@@ -167,6 +167,8 @@ DEF_FUNCTION_TYPE_VAR_0 (BT_FN_PTR_VAR, BT_PTR)\n \n DEF_FUNCTION_TYPE_VAR_1 (BT_FN_VOID_VALIST_REF_VAR, \n \t\t\t BT_VOID, BT_VALIST_REF)\n+DEF_FUNCTION_TYPE_VAR_1 (BT_FN_VOID_PTR_VAR,\n+\t\t\t BT_VOID, BT_PTR)\n DEF_FUNCTION_TYPE_VAR_1 (BT_FN_INT_CONST_STRING_VAR,\n \t                 BT_INT, BT_CONST_STRING)\n "}, {"sha": "515b75220a11c599c8eec9d0184083b6360e253f", "filename": "gcc/builtins.c", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e83d297b1049d7d298aa315ae8219f6a5ddec0c7/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e83d297b1049d7d298aa315ae8219f6a5ddec0c7/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=e83d297b1049d7d298aa315ae8219f6a5ddec0c7", "patch": "@@ -727,9 +727,26 @@ expand_builtin_prefetch (arglist)\n   tree arg0, arg1, arg2;\n   rtx op0, op1, op2;\n \n+  if (!validate_arglist (arglist, POINTER_TYPE, 0))\n+    return;\n+\n   arg0 = TREE_VALUE (arglist);\n-  arg1 = TREE_VALUE (TREE_CHAIN (arglist));\n-  arg2 = TREE_VALUE (TREE_CHAIN (TREE_CHAIN (arglist)));\n+  /* Arguments 1 and 2 are optional; argument 1 (read/write) defaults to\n+     zero (read) and argument 2 (locality) defaults to 3 (high degree of\n+     locality).  */\n+  if (TREE_CHAIN (arglist))\n+    {\n+      arg1 = TREE_VALUE (TREE_CHAIN (arglist));\n+      if (TREE_CHAIN (TREE_CHAIN (arglist)))\n+        arg2 = TREE_VALUE (TREE_CHAIN (TREE_CHAIN (arglist)));\n+      else\n+\targ2 = build_int_2 (3, 0);\n+    }\n+  else\n+    {\n+      arg1 = integer_zero_node;\n+      arg2 = build_int_2 (3, 0);\n+    }\n \n   /* Argument 0 is an address.  */\n   op0 = expand_expr (arg0, NULL_RTX, Pmode, EXPAND_NORMAL);"}, {"sha": "118f1d5a5af3c553ada0b833f40ff72357ad1a18", "filename": "gcc/builtins.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e83d297b1049d7d298aa315ae8219f6a5ddec0c7/gcc%2Fbuiltins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e83d297b1049d7d298aa315ae8219f6a5ddec0c7/gcc%2Fbuiltins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.def?ref=e83d297b1049d7d298aa315ae8219f6a5ddec0c7", "patch": "@@ -338,7 +338,7 @@ DEF_GCC_BUILTIN(BUILT_IN_TRAP,\n \t\tBT_FN_VOID)\n DEF_GCC_BUILTIN(BUILT_IN_PREFETCH,\n \t\t\"__builtin_prefetch\",\n-\t\tBT_FN_VOID_PTR_INT_INT)\n+\t\tBT_FN_VOID_PTR_VAR)\n \n /* Stdio builtins.  */\n DEF_FALLBACK_BUILTIN(BUILT_IN_PUTCHAR,"}, {"sha": "a6853d8206e3e7c41d737ace2716db3c17b55b96", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e83d297b1049d7d298aa315ae8219f6a5ddec0c7/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e83d297b1049d7d298aa315ae8219f6a5ddec0c7/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=e83d297b1049d7d298aa315ae8219f6a5ddec0c7", "patch": "@@ -4442,7 +4442,7 @@ if (__builtin_expect (ptr != NULL, 1))\n when testing pointer or floating-point values.\n @end deftypefn\n \n-@deftypefn {Built-in Function} void __builtin_prefetch (void *@var{addr}, int @var{rw}, int @var{locality})\n+@deftypefn {Built-in Function} void __builtin_prefetch (void *@var{addr}, ...)\n This function is used to minimize cache-miss latency by moving data into\n a cache before it is accessed.\n You can insert calls to @code{__builtin_prefetch} into code for which\n@@ -4452,14 +4452,17 @@ If the prefetch is done early enough before the access then the data will\n be in the cache by the time it is accessed.\n \n The value of @var{addr} is the address of the memory to prefetch.\n+There are two optional arguments, @var{rw} and @var{locality}.\n The value of @var{rw} is a compile-time constant one or zero; one\n-means that the prefetch is preparing for a write to the memory address.\n+means that the prefetch is preparing for a write to the memory address\n+and zero, the default, means that the prefetch is preparing for a read.\n The value @var{locality} must be a compile-time constant integer between\n zero and three.  A value of zero means that the data has no temporal\n locality, so it need not be left in the cache after the access.  A value\n of three means that the data has a high degree of temporal locality and\n should be left in all levels of cache possible.  Values of one and two\n-mean, respectively, a low or moderate degree of temporal locality.\n+mean, respectively, a low or moderate degree of temporal locality.  The\n+default is three.\n \n @smallexample\n for (i = 0; i < n; i++)"}, {"sha": "23154cdc08f990e84264a2f8fb711717fb001937", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e83d297b1049d7d298aa315ae8219f6a5ddec0c7/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e83d297b1049d7d298aa315ae8219f6a5ddec0c7/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=e83d297b1049d7d298aa315ae8219f6a5ddec0c7", "patch": "@@ -3015,6 +3015,22 @@ A typical @code{conditional_trap} pattern looks like\n   \"@dots{}\")\n @end smallexample\n \n+@cindex @code{prefetch} instruction pattern\n+@item @samp{prefetch}\n+\n+This pattern, if defined, emits code for a non-faulting data prefetch\n+instruction.  Operand 0 is the address of the memory to prefetch.  Operand 1\n+is a constant 1 if the prefetch is preparing for a write to the memory\n+address, or a constant 0 otherwise.  Operand 2 is the expected degree of\n+temporal locality of the data and is a value between 0 and 3, inclusive; 0\n+means that the data has no temporal locality, so it need not be left in the\n+cache after the access; 3 means that the data has a high degree of temporal\n+locality and should be left in all levels of cache possible;  1 and 2 mean,\n+respectively, a low or moderate degree of temporal locality.\n+\n+Targets that do not support write prefetches or locality hints can ignore\n+the values of operands 1 and 2.\n+\n @cindex @code{cycle_display} instruction pattern\n @item @samp{cycle_display}\n "}]}