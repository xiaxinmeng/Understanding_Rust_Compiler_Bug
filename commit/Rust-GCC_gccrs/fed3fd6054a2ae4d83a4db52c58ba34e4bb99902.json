{"sha": "fed3fd6054a2ae4d83a4db52c58ba34e4bb99902", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmVkM2ZkNjA1NGEyYWU0ZDgzYTRkYjUyYzU4YmEzNGU0YmI5OTkwMg==", "commit": {"author": {"name": "SimplyTheOther", "email": "simplytheother@gmail.com", "date": "2020-07-14T11:24:48Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2020-11-28T21:13:19Z"}, "message": "Added Renesas RX target hook (or at least provisional one)", "tree": {"sha": "67c78b98b98bf4759e7b2a13083c943f80d421e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67c78b98b98bf4759e7b2a13083c943f80d421e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fed3fd6054a2ae4d83a4db52c58ba34e4bb99902", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fed3fd6054a2ae4d83a4db52c58ba34e4bb99902", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fed3fd6054a2ae4d83a4db52c58ba34e4bb99902", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fed3fd6054a2ae4d83a4db52c58ba34e4bb99902/comments", "author": {"login": "SimplyTheOther", "id": 19371469, "node_id": "MDQ6VXNlcjE5MzcxNDY5", "avatar_url": "https://avatars.githubusercontent.com/u/19371469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimplyTheOther", "html_url": "https://github.com/SimplyTheOther", "followers_url": "https://api.github.com/users/SimplyTheOther/followers", "following_url": "https://api.github.com/users/SimplyTheOther/following{/other_user}", "gists_url": "https://api.github.com/users/SimplyTheOther/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimplyTheOther/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimplyTheOther/subscriptions", "organizations_url": "https://api.github.com/users/SimplyTheOther/orgs", "repos_url": "https://api.github.com/users/SimplyTheOther/repos", "events_url": "https://api.github.com/users/SimplyTheOther/events{/privacy}", "received_events_url": "https://api.github.com/users/SimplyTheOther/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51e1554100dc5abc53c0e4fea82a62b26281ab98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51e1554100dc5abc53c0e4fea82a62b26281ab98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51e1554100dc5abc53c0e4fea82a62b26281ab98"}], "stats": {"total": 86, "additions": 86, "deletions": 0}, "files": [{"sha": "62865844c96c452107309a443f2ebc192135ea77", "filename": "gcc/config.gcc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fed3fd6054a2ae4d83a4db52c58ba34e4bb99902/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fed3fd6054a2ae4d83a4db52c58ba34e4bb99902/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=fed3fd6054a2ae4d83a4db52c58ba34e4bb99902", "patch": "@@ -3135,10 +3135,12 @@ rx-*-elf*)\n \ttm_file=\"dbxelf.h elfos.h newlib-stdint.h ${tm_file}\"\n \ttmake_file=\"${tmake_file} rx/t-rx\"\n \textra_options=\"${extra_options} rx/elf.opt\"\n+\trust_target_objs=\"rx-rust.o\"\n \t;;\n rx-*-linux*)\n \ttm_file=\"elfos.h linux.h glibc-stdint.h rx/linux.h ../../libgcc/config/rx/rx-abi.h\"\n \ttmake_file=\"${tmake_file} rx/t-linux\"\n+\trust_target_objs=\"rx-rust.o\"\n \t;;\n s390-*-linux*)\n \ttm_file=\"s390/s390.h dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h s390/linux.h\""}, {"sha": "9a1585d17b297f913915fb7743f461024f0d857a", "filename": "gcc/config/rx/rx-protos.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fed3fd6054a2ae4d83a4db52c58ba34e4bb99902/gcc%2Fconfig%2Frx%2Frx-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fed3fd6054a2ae4d83a4db52c58ba34e4bb99902/gcc%2Fconfig%2Frx%2Frx-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx-protos.h?ref=fed3fd6054a2ae4d83a4db52c58ba34e4bb99902", "patch": "@@ -171,4 +171,7 @@ rx_find_use_of_reg (rtx reg, rtx_insn* insn, F stepfunc)\n \n #endif\n \n+/* Routines implemented in rx-rust.c  */\n+extern void rx_rust_target_cpu_info (void);\n+\n #endif /* GCC_RX_PROTOS_H */"}, {"sha": "5c2e186a0227e351a477ae2ee242417e47914f5a", "filename": "gcc/config/rx/rx-rust.c", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fed3fd6054a2ae4d83a4db52c58ba34e4bb99902/gcc%2Fconfig%2Frx%2Frx-rust.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fed3fd6054a2ae4d83a4db52c58ba34e4bb99902/gcc%2Fconfig%2Frx%2Frx-rust.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx-rust.c?ref=fed3fd6054a2ae4d83a4db52c58ba34e4bb99902", "patch": "@@ -0,0 +1,75 @@\n+/* Subroutines for the Rust front end for the Renesas RX architecture.\n+   Copyright (C) 2020 Free Software Foundation, Inc.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n+#include \"tm_p.h\"\n+#include \"rust/rust-target.h\"\n+#include \"rust/rust-target-def.h\"\n+\n+/* Implement TARGET_RUST_CPU_INFO for RX targets.  */\n+\n+void rx_rust_target_cpu_info(void) {\n+    rust_add_target_info(\"target_arch\", \"rx\");\n+\n+    // llvm appears to have no (current or historical) support, so names made up by me\n+    if (TARGET_64BIT_DOUBLES) \n+        rust_add_target_info(\"target_feature\", \"64bit-doubles\");\n+    if (NO_USE_FPU)\n+        rust_add_target_info(\"target_feature\", \"nofpu\");\n+    // TODO: ensure below switch and variable works\n+    switch (rx_cpu_type) {\n+        case RX610:\n+            rust_add_target_info(\"target_feature\", \"cpu-rx610\");\n+            break;\n+        case RX200:\n+            rust_add_target_info(\"target_feature\", \"cpu-rx200\");\n+            break;\n+        case RX600:\n+            rust_add_target_info(\"target_feature\", \"cpu-rx600\");\n+            break;\n+        case RX100:\n+            rust_add_target_info(\"target_feature\", \"cpu-rx100\");\n+            break;\n+        default: // should this be an error? probably shouldn't happen\n+            break;\n+    }\n+    if (TARGET_BIG_ENDIAN_DATA)\n+        rust_add_target_info(\"target_feature\", \"big-endian-data\");\n+    // TODO: find way of having small-data-limit, max-constant-size, int-register as defines\n+    // TODO: find way of getting info for relax\n+    if (TARGET_SAVE_ACC_REGISTER)\n+        rust_add_target_info(\"target_feature\", \"save-acc-in-interrupts\");\n+    if (TARGET_PID)\n+        rust_add_target_info(\"target_feature\", \"pid\");\n+    // TODO: ensure below variable works\n+    if (rx_warn_multiple_fast_interrupts)\n+        rust_add_target_info(\"target_feature\", \"warn-multiple-fast-interrupts\");\n+    if (TARGET_GCC_ABI)\n+        rust_add_target_info(\"target_feature\", \"gcc-abi\");\n+    else \n+        rust_add_target_info(\"target_feature\", \"rx-abi\");\n+    if (TARGET_ENABLE_LRA)\n+        rust_add_target_info(\"target_feature\", \"lra\");\n+    // TODO: ensure below variable works\n+    if (rx_allow_string_insns)\n+        rust_add_target_info(\"target_feature\", \"allow-string-insns\");\n+    if (TARGET_JSR)\n+        rust_add_target_info(\"target_feature\", \"jsr\");\n+}"}, {"sha": "25b55ab9f39a2adc6ed6a6094336e20ef0d549a4", "filename": "gcc/config/rx/rx.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fed3fd6054a2ae4d83a4db52c58ba34e4bb99902/gcc%2Fconfig%2Frx%2Frx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fed3fd6054a2ae4d83a4db52c58ba34e4bb99902/gcc%2Fconfig%2Frx%2Frx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx.h?ref=fed3fd6054a2ae4d83a4db52c58ba34e4bb99902", "patch": "@@ -75,6 +75,8 @@\n     }                                           \\\n   while (0)\n \n+#define TARGET_RUST_CPU_INFO rx_rust_target_cpu_info\n+\n #undef  CC1_SPEC\n #define CC1_SPEC \"\\\n   %{mas100-syntax:%{gdwarf*:%e-mas100-syntax is incompatible with -gdwarf}} \\"}, {"sha": "bd920010dbf05f5aeeaab9f786d76a0861681a61", "filename": "gcc/config/rx/t-rx", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fed3fd6054a2ae4d83a4db52c58ba34e4bb99902/gcc%2Fconfig%2Frx%2Ft-rx", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fed3fd6054a2ae4d83a4db52c58ba34e4bb99902/gcc%2Fconfig%2Frx%2Ft-rx", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Ft-rx?ref=fed3fd6054a2ae4d83a4db52c58ba34e4bb99902", "patch": "@@ -35,3 +35,7 @@ MULTILIB_MATCHES    = nofpu=mnofpu  nofpu=mcpu?rx200  nofpu=mcpu?rx100\n \n MULTILIB_EXCEPTIONS =\n MULTILIB_EXTRA_OPTS = \n+\n+rx-rust.o: $(srcdir)/config/rx/rx-rust.c \\\n+  $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_COMMON_H)\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n\\ No newline at end of file"}]}