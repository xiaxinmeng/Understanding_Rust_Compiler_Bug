{"sha": "1c3d6bb26fdfe129a7b087a1843ed4d0b051013b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWMzZDZiYjI2ZmRmZTEyOWE3YjA4N2ExODQzZWQ0ZDBiMDUxMDEzYg==", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@klomp.org", "date": "2004-04-21T05:48:51Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-04-21T05:48:51Z"}, "message": "JFrame.java: Implement WindowConstants.\n\n2004-04-21  Mark Wielaard  <mark@klomp.org>\n\n\t* javax/awt/JFrame.java: Implement WindowConstants. Remove final\n\tstatic fields defined in interface.\n\t* javax/awt/JDialog.java: Likewise.\n\t(JDialog): Make constructors public.\n\t(getDefaultCloseOperation): Make public.\n\t(processWindowEvent): Call System.exit(0) when EXIT_ON_CLOSE set.\n\t(setDefaultCloseOperation): Make public. Check argument. Add API doc.\n\t* javax/swing/JViewport.java (JViewport): Make constructor public.\n\nFrom-SVN: r80945", "tree": {"sha": "39e7e83260ed41189cf968ced901bead6477f7fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39e7e83260ed41189cf968ced901bead6477f7fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c3d6bb26fdfe129a7b087a1843ed4d0b051013b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c3d6bb26fdfe129a7b087a1843ed4d0b051013b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c3d6bb26fdfe129a7b087a1843ed4d0b051013b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c3d6bb26fdfe129a7b087a1843ed4d0b051013b/comments", "author": null, "committer": null, "parents": [{"sha": "387fa012f2b0c6e44cf834400a59f73ede9bc2db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/387fa012f2b0c6e44cf834400a59f73ede9bc2db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/387fa012f2b0c6e44cf834400a59f73ede9bc2db"}], "stats": {"total": 116, "additions": 84, "deletions": 32}, "files": [{"sha": "cf7cf4e22061a82827b77d8cf888188f2c144523", "filename": "libjava/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c3d6bb26fdfe129a7b087a1843ed4d0b051013b/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c3d6bb26fdfe129a7b087a1843ed4d0b051013b/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=1c3d6bb26fdfe129a7b087a1843ed4d0b051013b", "patch": "@@ -1,3 +1,14 @@\n+2004-04-21  Mark Wielaard  <mark@klomp.org>\n+\n+\t* javax/awt/JFrame.java: Implement WindowConstants. Remove final\n+\tstatic fields defined in interface.\n+\t* javax/awt/JDialog.java: Likewise.\n+\t(JDialog): Make constructors public.\n+\t(getDefaultCloseOperation): Make public.\n+\t(processWindowEvent): Call System.exit(0) when EXIT_ON_CLOSE set.\n+\t(setDefaultCloseOperation): Make public. Check argument. Add API doc.\n+\t* javax/swing/JViewport.java (JViewport): Make constructor public.\n+\n 2004-04-21  Michael Koch  <konqueror@gmx.de>\n \n \t* java/util/Map.java"}, {"sha": "8d43b761d96f3ccc923dd5068eb46c389674b49c", "filename": "libjava/javax/swing/JDialog.java", "status": "modified", "additions": 42, "deletions": 18, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c3d6bb26fdfe129a7b087a1843ed4d0b051013b/libjava%2Fjavax%2Fswing%2FJDialog.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c3d6bb26fdfe129a7b087a1843ed4d0b051013b/libjava%2Fjavax%2Fswing%2FJDialog.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJDialog.java?ref=1c3d6bb26fdfe129a7b087a1843ed4d0b051013b", "patch": "@@ -1,5 +1,5 @@\n /* JDialog.java --\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -57,12 +57,8 @@\n  *\n  * @author Ronald Veldema (rveldema@cs.vu.nl)\n  */\n-public class JDialog extends Dialog implements Accessible\n+public class JDialog extends Dialog implements Accessible, WindowConstants\n {\n-    public final static int HIDE_ON_CLOSE        = 0;\n-    public final static int DISPOSE_ON_CLOSE     = 1;\n-    public final static int DO_NOTHING_ON_CLOSE  = 2;\n-\n     protected  AccessibleContext accessibleContext;\n \n     private int close_action = HIDE_ON_CLOSE;    \n@@ -75,42 +71,42 @@ public class JDialog extends Dialog implements Accessible\n      *\n      *************/\n \n-    JDialog(Frame owner)\n+    public JDialog(Frame owner)\n     {\n \tthis(owner, \"dialog\");\n     }\n     \n-    JDialog(Frame owner,\n+    public JDialog(Frame owner,\n \t    String s)\n     {\n \tthis(owner, s, true);\n     }\n     \n-  JDialog(Frame owner,\n+  public JDialog(Frame owner,\n \t  String s,\n \t  boolean modeld)\n     {\n \tsuper(owner, s, modeld);\n     }\n \n-  JDialog(Frame owner,\n+  public JDialog(Frame owner,\n \t  //  String s,\n \t  boolean modeld)\n     {\n \tsuper(owner, \"JDialog\", modeld);\n     }\n-  JDialog(Dialog owner)\n+  public JDialog(Dialog owner)\n   {\n       this(owner, \"dialog\");\n   }\n     \n-    JDialog(Dialog owner,\n+    public JDialog(Dialog owner,\n \t    String s)\n     {\n \tthis(owner, s, true);\n     }\n     \n-  JDialog(Dialog owner,\n+  public JDialog(Dialog owner,\n \t  String s,\n \t  boolean modeld)\n     {\n@@ -221,18 +217,20 @@ protected  void processKeyEvent(KeyEvent e)\n \n     protected  void processWindowEvent(WindowEvent e)\n     {\n-\t//\tSystem.out.println(\"PROCESS_WIN_EV-1: \" + e);\n \tsuper.processWindowEvent(e); \n-\t//\tSystem.out.println(\"PROCESS_WIN_EV-2: \" + e);\n \tswitch (e.getID())\n \t    {\n \t    case WindowEvent.WINDOW_CLOSING:\n \t\t{\n \t\t    switch(close_action)\n \t\t\t{\n+\t\t\tcase EXIT_ON_CLOSE:\n+\t\t\t  {\n+\t\t\t    System.exit(0);\n+\t\t\t    break;\n+\t\t\t  }\n \t\t\tcase DISPOSE_ON_CLOSE:\n \t\t\t    {\n-\t\t\t\tSystem.out.println(\"user requested dispose on close\");\n \t\t\t\tdispose();\n \t\t\t\tbreak;\n \t\t\t    }\n@@ -258,8 +256,34 @@ protected  void processWindowEvent(WindowEvent e)\n     }   \n  \n \n-    void setDefaultCloseOperation(int operation)\n-    {  close_action = operation;   }\n+  /**\n+   * Defines what happens when this frame is closed. Can be one off\n+   * <code>EXIT_ON_CLOSE</code>,\n+   * <code>DISPOSE_ON_CLOSE</code>,\n+   * <code>HIDE_ON_CLOSE</code> or\n+   * <code>DO_NOTHING_ON_CLOSE</code>.\n+   * The default is <code>HIDE_ON_CLOSE</code>.\n+   * When <code>EXIT_ON_CLOSE</code> is specified this method calls\n+   * <code>SecurityManager.checkExit(0)</code> which might throw a\n+   * <code>SecurityException</code>. When the specified operation is\n+   * not one of the above a <code>IllegalArgumentException</code> is\n+   * thrown.\n+   */\n+  public void setDefaultCloseOperation(int operation)\n+  {\n+    SecurityManager sm = System.getSecurityManager();\n+    if (sm != null && operation == EXIT_ON_CLOSE)\n+      sm.checkExit(0);\n+    \n+    if (operation != EXIT_ON_CLOSE && operation != DISPOSE_ON_CLOSE\n+\t&& operation != HIDE_ON_CLOSE && operation != DO_NOTHING_ON_CLOSE)\n+      throw new IllegalArgumentException(\"operation = \" + operation);\n+    \n+    close_action = operation;\n+  }\n+  \n+  public int getDefaultCloseOperation()\n+  {    return close_action;   }\n \n     protected  String paramString()\n     {   return \"JDialog\";     }"}, {"sha": "89d109f660ee72999e96e669bbc4fbd348dd1875", "filename": "libjava/javax/swing/JFrame.java", "status": "modified", "additions": 30, "deletions": 13, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c3d6bb26fdfe129a7b087a1843ed4d0b051013b/libjava%2Fjavax%2Fswing%2FJFrame.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c3d6bb26fdfe129a7b087a1843ed4d0b051013b/libjava%2Fjavax%2Fswing%2FJFrame.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJFrame.java?ref=1c3d6bb26fdfe129a7b087a1843ed4d0b051013b", "patch": "@@ -1,5 +1,5 @@\n /* JFrame.java --\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -57,16 +57,11 @@\n  *\n  * @author Ronald Veldema (rveldema@cs.vu.nl)\n  */\n-public class JFrame extends Frame\n+public class JFrame extends Frame implements WindowConstants\n {\n-    public final static int HIDE_ON_CLOSE        = 0;\n-    public final static int EXIT_ON_CLOSE        = 1;\n-    public final static int DISPOSE_ON_CLOSE     = 2;\n-    public final static int DO_NOTHING_ON_CLOSE  = 3;\n-\n     protected  AccessibleContext accessibleContext;\n \n-    private int close_action = EXIT_ON_CLOSE;    \n+    private int close_action = HIDE_ON_CLOSE;    \n     \n \n     /***************************************************\n@@ -192,7 +187,7 @@ public AccessibleContext getAccessibleContext()\n     return accessibleContext;\n   }\n   \n-    int getDefaultCloseOperation()\n+    public int getDefaultCloseOperation()\n     {    return close_action;   }\n \n     \n@@ -212,7 +207,7 @@ protected  void processWindowEvent(WindowEvent e)\n \t\t\t{\n \t\t\tcase EXIT_ON_CLOSE:\n \t\t\t    {\n-\t\t\t\tSystem.exit(1);\n+\t\t\t\tSystem.exit(0);\n \t\t\t\tbreak;\n \t\t\t    }\n \t\t\tcase DISPOSE_ON_CLOSE:\n@@ -241,8 +236,30 @@ protected  void processWindowEvent(WindowEvent e)\n \t    }\n     }   \n  \n-\n-    void setDefaultCloseOperation(int operation)\n-    {  close_action = operation;   }\n+    /**\n+     * Defines what happens when this frame is closed. Can be one off\n+     * <code>EXIT_ON_CLOSE</code>,\n+     * <code>DISPOSE_ON_CLOSE</code>,\n+     * <code>HIDE_ON_CLOSE</code> or\n+     * <code>DO_NOTHING_ON_CLOSE</code>.\n+     * The default is <code>HIDE_ON_CLOSE</code>.\n+     * When <code>EXIT_ON_CLOSE</code> is specified this method calls\n+     * <code>SecurityManager.checkExit(0)</code> which might throw a\n+     * <code>SecurityException</code>. When the specified operation is\n+     * not one of the above a <code>IllegalArgumentException</code> is\n+     * thrown.\n+     */\n+    public void setDefaultCloseOperation(int operation)\n+    {\n+      SecurityManager sm = System.getSecurityManager();\n+      if (sm != null && operation == EXIT_ON_CLOSE)\n+\tsm.checkExit(0);\n+\n+      if (operation != EXIT_ON_CLOSE && operation != DISPOSE_ON_CLOSE\n+\t  && operation != HIDE_ON_CLOSE && operation != DO_NOTHING_ON_CLOSE)\n+\tthrow new IllegalArgumentException(\"operation = \" + operation);\n+\t  \n+      close_action = operation;\n+    }\n \n }"}, {"sha": "66a9865a767b8407ac067656bcd1172fbbd94ce0", "filename": "libjava/javax/swing/JViewport.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c3d6bb26fdfe129a7b087a1843ed4d0b051013b/libjava%2Fjavax%2Fswing%2FJViewport.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c3d6bb26fdfe129a7b087a1843ed4d0b051013b/libjava%2Fjavax%2Fswing%2FJViewport.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJViewport.java?ref=1c3d6bb26fdfe129a7b087a1843ed4d0b051013b", "patch": "@@ -121,7 +121,7 @@ public class JViewport extends JComponent\n \n   Point lastPaintPosition;\n \n-  JViewport()\n+  public JViewport()\n   {\n     setOpaque(true);\n     updateUI();"}]}