{"sha": "90bc462321f77fb63a04bb3d73bfa54267087b26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBiYzQ2MjMyMWY3N2ZiNjNhMDRiYjNkNzNiZmE1NDI2NzA4N2IyNg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-05-02T13:11:27Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-05-02T13:11:27Z"}, "message": "re PR tree-optimization/48822 (G++ gets stucks and never finishes compilation when enabling -O2/3 optimization options.)\n\n2011-05-02  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/48822\n\t* tree-ssa-sccvn.c (set_ssa_val_to): Never go up the lattice.\n\t(process_scc): Indicate which iteration we start.\n\n\t* gcc.dg/torture/pr48822.c: New testcase.\n\nFrom-SVN: r173250", "tree": {"sha": "2bebdc1626ad94e349f185dd860edaef39f741f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2bebdc1626ad94e349f185dd860edaef39f741f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90bc462321f77fb63a04bb3d73bfa54267087b26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90bc462321f77fb63a04bb3d73bfa54267087b26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90bc462321f77fb63a04bb3d73bfa54267087b26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90bc462321f77fb63a04bb3d73bfa54267087b26/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9fd15228e24f6f1420437deeac052dd7342444a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fd15228e24f6f1420437deeac052dd7342444a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fd15228e24f6f1420437deeac052dd7342444a4"}], "stats": {"total": 59, "additions": 52, "deletions": 7}, "files": [{"sha": "8d20385cf6e1a0ad09f99f230929b377691c497b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90bc462321f77fb63a04bb3d73bfa54267087b26/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90bc462321f77fb63a04bb3d73bfa54267087b26/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=90bc462321f77fb63a04bb3d73bfa54267087b26", "patch": "@@ -1,3 +1,9 @@\n+2011-05-02  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/48822\n+\t* tree-ssa-sccvn.c (set_ssa_val_to): Never go up the lattice.\n+\t(process_scc): Indicate which iteration we start.\n+\n 2011-05-02  Jan Hubicka  <jh@suse.cz>\n \n \t* lto-section-in.c (lto_input_1_unsigned): Move to lto-streamer.h"}, {"sha": "02722cf34022392da90b75d59a6e8c4e7d2c530f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90bc462321f77fb63a04bb3d73bfa54267087b26/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90bc462321f77fb63a04bb3d73bfa54267087b26/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=90bc462321f77fb63a04bb3d73bfa54267087b26", "patch": "@@ -1,3 +1,8 @@\n+2011-05-02  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/48822\n+\t* gcc.dg/torture/pr48822.c: New testcase.\n+\n 2011-05-02  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/47969"}, {"sha": "b619f369b4fb1973afa8bf58b37f5df749889d13", "filename": "gcc/testsuite/gcc.dg/torture/pr48822.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90bc462321f77fb63a04bb3d73bfa54267087b26/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr48822.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90bc462321f77fb63a04bb3d73bfa54267087b26/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr48822.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr48822.c?ref=90bc462321f77fb63a04bb3d73bfa54267087b26", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+\n+void foo (int *, int *);\n+int bar ()\n+{\n+  int a = 0;\n+  int b = 0;\n+  if (b != 0)\n+    {\n+      int ax = a;\n+      int bx = b;\n+      while (bx != 0)\n+\t{\n+\t  int tem = ax % bx;\n+\t  ax = bx;\n+\t  bx = tem;\n+\t}\n+    }\n+  foo (&a, &b);\n+}"}, {"sha": "8f96d6c0356da08b2fcfd556929b4dbaf3b16b6c", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 21, "deletions": 7, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90bc462321f77fb63a04bb3d73bfa54267087b26/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90bc462321f77fb63a04bb3d73bfa54267087b26/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=90bc462321f77fb63a04bb3d73bfa54267087b26", "patch": "@@ -2241,12 +2241,26 @@ print_scc (FILE *out, VEC (tree, heap) *scc)\n static inline bool\n set_ssa_val_to (tree from, tree to)\n {\n-  tree currval;\n+  tree currval = SSA_VAL (from);\n \n-  if (from != to\n-      && TREE_CODE (to) == SSA_NAME\n-      && SSA_NAME_OCCURS_IN_ABNORMAL_PHI (to))\n-    to = from;\n+  if (from != to)\n+    {\n+      if (currval == from)\n+\t{\n+\t  if (dump_file && (dump_flags & TDF_DETAILS))\n+\t    {\n+\t      fprintf (dump_file, \"Not changing value number of \");\n+\t      print_generic_expr (dump_file, from, 0);\n+\t      fprintf (dump_file, \" from VARYING to \");\n+\t      print_generic_expr (dump_file, to, 0);\n+\t      fprintf (dump_file, \"\\n\");\n+\t    }\n+\t  return false;\n+\t}\n+      else if (TREE_CODE (to) == SSA_NAME\n+\t       && SSA_NAME_OCCURS_IN_ABNORMAL_PHI (to))\n+\tto = from;\n+    }\n \n   /* The only thing we allow as value numbers are VN_TOP, ssa_names\n      and invariants.  So assert that here.  */\n@@ -2263,8 +2277,6 @@ set_ssa_val_to (tree from, tree to)\n       print_generic_expr (dump_file, to, 0);\n     }\n \n-  currval = SSA_VAL (from);\n-\n   if (currval != to  && !operand_equal_p (currval, to, OEP_PURE_SAME))\n     {\n       VN_INFO (from)->valnum = to;\n@@ -3280,6 +3292,8 @@ process_scc (VEC (tree, heap) *scc)\n     {\n       changed = false;\n       iterations++;\n+      if (dump_file && (dump_flags & TDF_DETAILS))\n+\tfprintf (dump_file, \"Starting iteration %d\\n\", iterations);\n       /* As we are value-numbering optimistically we have to\n \t clear the expression tables and the simplified expressions\n \t in each iteration until we converge.  */"}]}