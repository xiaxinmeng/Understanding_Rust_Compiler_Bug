{"sha": "e90d06c544733165d2e58b86213070f7ebd79f61", "node_id": "C_kwDOANBUbNoAKGU5MGQwNmM1NDQ3MzMxNjVkMmU1OGI4NjIxMzA3MGY3ZWJkNzlmNjE", "commit": {"author": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2023-02-06T17:48:06Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2023-04-06T08:47:23Z"}, "message": "gccrs: Add new virtual function HIR::ImplItem::get_impl_item_name\n\nSigned-off-by: Philip Herron <herron.philip@googlemail.com>\n\ngcc/rust/ChangeLog:\n\n\t* hir/tree/rust-hir-item.h: implement virtual function\n\t* hir/tree/rust-hir.h: add virtual function", "tree": {"sha": "30985c863049bfae65d1a804a707bfdd11fe0b78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30985c863049bfae65d1a804a707bfdd11fe0b78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e90d06c544733165d2e58b86213070f7ebd79f61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e90d06c544733165d2e58b86213070f7ebd79f61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e90d06c544733165d2e58b86213070f7ebd79f61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e90d06c544733165d2e58b86213070f7ebd79f61/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c627781b8f6c2539ea17a9240458e6a53b00f262", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c627781b8f6c2539ea17a9240458e6a53b00f262", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c627781b8f6c2539ea17a9240458e6a53b00f262"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "03e1f71abb53777ce75ae1a8d421758fd06f961c", "filename": "gcc/rust/hir/tree/rust-hir-item.h", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e90d06c544733165d2e58b86213070f7ebd79f61/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-item.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e90d06c544733165d2e58b86213070f7ebd79f61/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-item.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-item.h?ref=e90d06c544733165d2e58b86213070f7ebd79f61", "patch": "@@ -1226,6 +1226,11 @@ class Function : public VisItem, public ImplItem\n \n   SelfParam &get_self_param () { return self; }\n \n+  std::string get_impl_item_name () const override final\n+  {\n+    return get_function_name ();\n+  }\n+\n protected:\n   /* Use covariance to implement clone function as returning this object\n    * rather than base */\n@@ -1345,6 +1350,11 @@ class TypeAlias : public VisItem, public ImplItem\n     return get_mappings ();\n   };\n \n+  std::string get_impl_item_name () const override final\n+  {\n+    return get_new_type_name ();\n+  }\n+\n protected:\n   /* Use covariance to implement clone function as returning this object\n    * rather than base */\n@@ -2116,7 +2126,7 @@ class ConstantItem : public VisItem, public ImplItem\n \n   Expr *get_expr () { return const_expr.get (); }\n \n-  std::string get_identifier () { return identifier; }\n+  std::string get_identifier () const { return identifier; }\n \n   Analysis::NodeMapping get_impl_mappings () const override\n   {\n@@ -2130,6 +2140,11 @@ class ConstantItem : public VisItem, public ImplItem\n \n   ItemKind get_item_kind () const override { return ItemKind::Constant; }\n \n+  std::string get_impl_item_name () const override final\n+  {\n+    return get_identifier ();\n+  }\n+\n protected:\n   /* Use covariance to implement clone function as returning this object\n    * rather than base */"}, {"sha": "28f1f21a6bb4b2ef5e01756e09483b54508bc747", "filename": "gcc/rust/hir/tree/rust-hir.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e90d06c544733165d2e58b86213070f7ebd79f61/gcc%2Frust%2Fhir%2Ftree%2Frust-hir.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e90d06c544733165d2e58b86213070f7ebd79f61/gcc%2Frust%2Fhir%2Ftree%2Frust-hir.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir.h?ref=e90d06c544733165d2e58b86213070f7ebd79f61", "patch": "@@ -839,6 +839,8 @@ class ImplItem : public Node\n \n   virtual ImplItemType get_impl_item_type () const = 0;\n \n+  virtual std::string get_impl_item_name () const = 0;\n+\n protected:\n   // Clone function implementation as pure virtual method\n   virtual ImplItem *clone_inherent_impl_item_impl () const = 0;"}]}