{"sha": "dfd2c92f3f5d204619bd218aa72b162997690796", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGZkMmM5MmYzZjVkMjA0NjE5YmQyMThhYTcyYjE2Mjk5NzY5MDc5Ng==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2021-05-05T14:50:55Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2021-05-05T14:53:58Z"}, "message": "Fix PR rtl-optimization/100411\n\nThis is the bootstrap failure of GCC 11 on MinGW64 configured with --enable-\ntune=nocona.  The bottom line is that SEH does not support CFI for epilogues\nbut the x86 back-end nevertheless attaches it to instructions, so we have to\nfilter it out and this is done by detecting the end of the prologue by means\nof the NOTE_INSN_PROLOGUE_END note.\n\nBut the compiler manages to generate a second epilogue before this note in\nthe RTL stream and this fools the aforementioned logic.  The root cause is\ncross-jumping, which inserts a jump before the end of the prologue, in fact\njust before the note; the rest (CFG cleanup, BB reordering, etc) is downhill\nfrom there.\n\ngcc/\n\tPR rtl-optimization/100411\n\t* cfgcleanup.c (try_crossjump_to_edge): Also skip end of prologue\n\tand beginning of function markers.", "tree": {"sha": "e28add6a3413e829b25ba4676365a604b01bf436", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e28add6a3413e829b25ba4676365a604b01bf436"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dfd2c92f3f5d204619bd218aa72b162997690796", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfd2c92f3f5d204619bd218aa72b162997690796", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfd2c92f3f5d204619bd218aa72b162997690796", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfd2c92f3f5d204619bd218aa72b162997690796/comments", "author": null, "committer": null, "parents": [{"sha": "14cf6aab8578132ec89ccb46e69899ae6008ff63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14cf6aab8578132ec89ccb46e69899ae6008ff63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14cf6aab8578132ec89ccb46e69899ae6008ff63"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "17edc4f37adeca54b5df30b226919523a6c595f6", "filename": "gcc/cfgcleanup.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfd2c92f3f5d204619bd218aa72b162997690796/gcc%2Fcfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfd2c92f3f5d204619bd218aa72b162997690796/gcc%2Fcfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgcleanup.c?ref=dfd2c92f3f5d204619bd218aa72b162997690796", "patch": "@@ -2145,7 +2145,11 @@ try_crossjump_to_edge (int mode, edge e1, edge e2,\n   if (NOTE_INSN_BASIC_BLOCK_P (newpos1))\n     newpos1 = NEXT_INSN (newpos1);\n \n-  while (DEBUG_INSN_P (newpos1))\n+  /* Skip also prologue and function markers.  */\n+  while (DEBUG_INSN_P (newpos1)\n+\t || (NOTE_P (newpos1)\n+\t     && (NOTE_KIND (newpos1) == NOTE_INSN_PROLOGUE_END\n+\t\t || NOTE_KIND (newpos1) == NOTE_INSN_FUNCTION_BEG)))\n     newpos1 = NEXT_INSN (newpos1);\n \n   redirect_from = split_block (src1, PREV_INSN (newpos1))->src;"}]}