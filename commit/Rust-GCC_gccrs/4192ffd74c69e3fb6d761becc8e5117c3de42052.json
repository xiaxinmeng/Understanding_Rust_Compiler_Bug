{"sha": "4192ffd74c69e3fb6d761becc8e5117c3de42052", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDE5MmZmZDc0YzY5ZTNmYjZkNzYxYmVjYzhlNTExN2MzZGU0MjA1Mg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-11-30T19:53:24Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-12-02T19:34:38Z"}, "message": "c++: Fix tsubst ICE with invalid code [PR97993, PR97187]\n\nI had a strong sense of deja vu when looking into this, and no wonder,\nsince this is almost identical to c++/95728.\n\nSince r11-423 tsubst_copy_and_build/TREE_LIST uses tsubst_tree_list\ninstead of open coding it.  While the latter could return an error\nnode wrapped in a TREE_LIST, the former can return a naked error node.\n\nThat broke in tsubst_copy_and_build/NEW_EXPR, because we were accessing\nTREE_VALUE of an error node.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/97187\n\tPR c++/97993\n\t* pt.c (tsubst_copy_and_build) <case NEW_EXPR>: Return error_mark_node\n\tif init is erroneous.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/97187\n\tPR c++/97993\n\t* g++.dg/eh/crash2.C: New test.\n\t* g++.dg/template/crash132.C: New test.", "tree": {"sha": "48954a81d48f8b5cf2ac3dc60e36dfa1360af84e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48954a81d48f8b5cf2ac3dc60e36dfa1360af84e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4192ffd74c69e3fb6d761becc8e5117c3de42052", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4192ffd74c69e3fb6d761becc8e5117c3de42052", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4192ffd74c69e3fb6d761becc8e5117c3de42052", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4192ffd74c69e3fb6d761becc8e5117c3de42052/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c68cae86bbe78100f263cc73ba9cbe452778f9e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c68cae86bbe78100f263cc73ba9cbe452778f9e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c68cae86bbe78100f263cc73ba9cbe452778f9e4"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "72d6cc3ad9854c920fc020b35423c19e198037da", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4192ffd74c69e3fb6d761becc8e5117c3de42052/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4192ffd74c69e3fb6d761becc8e5117c3de42052/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=4192ffd74c69e3fb6d761becc8e5117c3de42052", "patch": "@@ -19829,6 +19829,8 @@ tsubst_copy_and_build (tree t,\n \t   parameter packs are of length zero.  */\n \tif (init == NULL_TREE && TREE_OPERAND (t, 3) == NULL_TREE)\n \t  init_vec = NULL;\n+\telse if (init == error_mark_node)\n+\t  RETURN (error_mark_node);\n \telse\n \t  {\n \t    init_vec = make_tree_vector ();"}, {"sha": "fff8e142fd605aebb005103bc41979b1637cd0a9", "filename": "gcc/testsuite/g++.dg/eh/crash2.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4192ffd74c69e3fb6d761becc8e5117c3de42052/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fcrash2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4192ffd74c69e3fb6d761becc8e5117c3de42052/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fcrash2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fcrash2.C?ref=4192ffd74c69e3fb6d761becc8e5117c3de42052", "patch": "@@ -0,0 +1,20 @@\n+// PR c++/97187\n+// { dg-do compile { target c++14 } }\n+// { dg-options \"-fno-exceptions\" }\n+\n+auto yp = [] { return 0; };\n+\n+template <class DI>\n+DI\n+zl ()\n+{\n+  auto au = [] () -> DI { return *new auto (true ? yp : throw); }; // { dg-error \"exception handling disabled\" }\n+\n+  return au ();\n+}\n+\n+auto\n+vd ()\n+{\n+  return zl <decltype (yp)> ();\n+}"}, {"sha": "f6f4863e937370436f80bdca5ffdaa4c8be90661", "filename": "gcc/testsuite/g++.dg/template/crash132.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4192ffd74c69e3fb6d761becc8e5117c3de42052/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash132.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4192ffd74c69e3fb6d761becc8e5117c3de42052/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash132.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash132.C?ref=4192ffd74c69e3fb6d761becc8e5117c3de42052", "patch": "@@ -0,0 +1,6 @@\n+// PR c++/97993\n+// { dg-do compile { target c++14 } }\n+\n+template <class T> T a;\n+template <class T, class A, class=decltype(::new T (A()))> auto foo ();\n+struct S decltype (foo <int, S>); // { dg-error \"\" }"}]}