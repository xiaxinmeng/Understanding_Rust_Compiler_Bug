{"sha": "f3b39ebadc9dbfe6ad5c96ea5acdcb15e2c1fa5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjNiMzllYmFkYzlkYmZlNmFkNWM5NmVhNWFjZGNiMTVlMmMxZmE1Zg==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-04-09T00:44:30Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-04-09T00:44:30Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r711", "tree": {"sha": "24e11b49528597739034bf1fc8a4ac7660b70c54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24e11b49528597739034bf1fc8a4ac7660b70c54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3b39ebadc9dbfe6ad5c96ea5acdcb15e2c1fa5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3b39ebadc9dbfe6ad5c96ea5acdcb15e2c1fa5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3b39ebadc9dbfe6ad5c96ea5acdcb15e2c1fa5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3b39ebadc9dbfe6ad5c96ea5acdcb15e2c1fa5f/comments", "author": null, "committer": null, "parents": [{"sha": "58891cf9e614622fca52dd4b06d467ae08e47314", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58891cf9e614622fca52dd4b06d467ae08e47314", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58891cf9e614622fca52dd4b06d467ae08e47314"}], "stats": {"total": 73, "additions": 46, "deletions": 27}, "files": [{"sha": "3d4b9279fb27f709097352cb8d0cadfcd9a7cf90", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 14, "deletions": 17, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3b39ebadc9dbfe6ad5c96ea5acdcb15e2c1fa5f/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3b39ebadc9dbfe6ad5c96ea5acdcb15e2c1fa5f/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=f3b39ebadc9dbfe6ad5c96ea5acdcb15e2c1fa5f", "patch": "@@ -158,6 +158,7 @@ extern void\t\ttext_section ();\n #ifndef HALF_PIC_P\n #define HALF_PIC_P() 0\n #define HALF_PIC_ENCODE(DECL)\n+#define HALF_PIC_DECLARE(NAME)\n #define HALF_PIC_INIT()\terror (\"half-pic init called on systems that don't support it.\")\n #define HALF_PIC_ADDRESS_P(X) 0\n #define HALF_PIC_PTR(X) X\n@@ -2906,7 +2907,12 @@ do {\t\t\t\t\t\t\t\t\t\\\n    in the usual manner as a label (by means of `ASM_OUTPUT_LABEL').  */\n \n #define ASM_DECLARE_OBJECT_NAME(STREAM, NAME, DECL)\t\t\t\\\n-  mips_declare_object (STREAM, NAME, \"\", \":\\n\", 0);\n+do\t\t\t\t\t\t\t\t\t\\\n+ {\t\t\t\t\t\t\t\t\t\\\n+   mips_declare_object (STREAM, NAME, \"\", \":\\n\", 0);\t\t\t\\\n+   HALF_PIC_DECLARE (NAME);\t\t\t\t\t\t\\\n+ }\t\t\t\t\t\t\t\t\t\\\n+while (0)\n \n \n /* This is how to output a command to make the user-level label named NAME\n@@ -2957,6 +2963,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n     STREAM = asm_out_text_file;\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n   current_function_name = NAME;\t\t\t\t\t\t\\\n+  HALF_PIC_DECLARE (NAME);\t\t\t\t\t\t\\\n }\n \n /* This is how to output a reference to a user-level label named NAME.\n@@ -3152,22 +3159,12 @@ do {\t\t\t\t\t\t\t\t\t\\\n }\n \f\n \n-/* Output before read-only data.  */\n-\n-#define TEXT_SECTION_ASM_OP \".text\"\n-\n-/* Output before writable data.  */\n-\n-#define DATA_SECTION_ASM_OP \".data\"\n-\n-/* Output before writable  short data.  */\n-\n-#define SDATA_SECTION_ASM_OP \".sdata\"\n-\n-/* Output before read-only data.  */\n-\n-#define RDATA_SECTION_ASM_OP \".rdata\"\n-#define READONLY_DATA_SECTION rdata_section\n+/* Define the strings to put out for each section in the object file.  */\n+#define TEXT_SECTION_ASM_OP\t\"\\t.text\"\t/* instructions */\n+#define DATA_SECTION_ASM_OP\t\"\\t.data\"\t/* large data */\n+#define SDATA_SECTION_ASM_OP\t\"\\t.sdata\"\t/* small data */\n+#define RDATA_SECTION_ASM_OP\t\"\\t.rdata\"\t/* read-only data */\n+#define READONLY_DATA_SECTION\trdata_section\n \n /* What other sections we support other than the normal .data/.text.  */\n "}, {"sha": "dd74f08431f608abcece5fc4209104d96731205c", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 30, "deletions": 7, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3b39ebadc9dbfe6ad5c96ea5acdcb15e2c1fa5f/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3b39ebadc9dbfe6ad5c96ea5acdcb15e2c1fa5f/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=f3b39ebadc9dbfe6ad5c96ea5acdcb15e2c1fa5f", "patch": "@@ -65,7 +65,7 @@\n \n ;; whether or not an instruction has a mandatory delay slot\n (define_attr \"dslot\" \"no,yes\"\n-  (if_then_else (eq_attr \"type\" \"branch,jump,call,load,xfer,hilo,fcmp\")\n+  (if_then_else (eq_attr \"type\" \"branch,jump,call,load,xfer,hilo,fcmp,pic\")\n \t\t(const_string \"yes\")\n \t\t(const_string \"no\")))\n \n@@ -1792,7 +1792,30 @@ move\\\\t%0,%z4\\\\n\\\\\n ;; different predicates, because register spilling and other parts of\n ;; the compiler, have memoized the insn number already.\n \n-(define_insn \"movsi\"\n+(define_expand \"movsi\"\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n+\t(match_operand:SI 1 \"general_operand\" \"\"))]\n+  \"\"\n+  \"\n+{\n+  /* If this is a half-pic address being moved to a register, convert the\n+     address into a load, so that scheduling and stuff works properly.  */\n+\n+  if (HALF_PIC_P()\n+      && GET_CODE (operands[0]) == REG\n+      && GET_CODE (operands[1]) == SYMBOL_REF\n+      && HALF_PIC_ADDRESS_P (operands[1]))\n+    {\n+      rtx ptr = HALF_PIC_PTR (operands[1]);\n+      if (XSTR (ptr, 0) != XSTR (operands[1], 0))\n+\t{\n+\t  emit_move_insn (operands[0], gen_rtx (MEM, Pmode, ptr));\n+\t  DONE;\n+\t}\n+    }\n+}\")\n+\n+(define_insn \"movsi_internal\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=d,d,d,d,d,d,R,m,*d,*fs,*f,*f,*f,*R,*m,*x,*d\")\n \t(match_operand:SI 1 \"general_operand\" \"d,S,IKL,Mnis,R,m,dJ,dJ,*fs,*d,*f,*R,*m,*f,*f,*d,*x\"))]\n   \"\"\n@@ -1891,12 +1914,12 @@ move\\\\t%0,%z4\\\\n\\\\\n ;; Insn generated by block moves\n \n (define_insn \"movstrsi_internal\"\n-  [(set (match_operand:BLK 0 \"memory_operand\" \"Ro\")\n+  [(set (match_operand:BLK 0 \"memory_operand\" \"=Ro\")\n \t(match_operand:BLK 1 \"memory_operand\" \"Ro\"))\n-   (clobber (match_scratch:SI 4 \"d\"))\n-   (clobber (match_scratch:SI 5 \"d\"))\n-   (clobber (match_scratch:SI 6 \"d\"))\n-   (clobber (match_scratch:SI 7 \"d\"))\n+   (clobber (match_scratch:SI 4 \"=d\"))\n+   (clobber (match_scratch:SI 5 \"=d\"))\n+   (clobber (match_scratch:SI 6 \"=d\"))\n+   (clobber (match_scratch:SI 7 \"=d\"))\n    (use (match_operand:SI 2 \"small_int\" \"I\"))\n    (use (match_operand:SI 3 \"small_int\" \"I\"))]\n   \"\""}, {"sha": "82da2d7b92f352566598f96b79f49849a414b78d", "filename": "gcc/config/mips/osfrose.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3b39ebadc9dbfe6ad5c96ea5acdcb15e2c1fa5f/gcc%2Fconfig%2Fmips%2Fosfrose.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3b39ebadc9dbfe6ad5c96ea5acdcb15e2c1fa5f/gcc%2Fconfig%2Fmips%2Fosfrose.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fosfrose.h?ref=f3b39ebadc9dbfe6ad5c96ea5acdcb15e2c1fa5f", "patch": "@@ -64,9 +64,8 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \t%{bestGnum}} \\\n %{!mmips-as: \\\n  \t%{v*: -v} \\\n-\t%{pic-none: -noshrlib} %{noshrlib} \\\n-\t%{pic-lib: %{!noshrlib: -warn_nopic}} \\\n-\t%{nostdlib} %{glue}}\"\n+\t%{!noshrlib: %{pic-none: -noshrlib} %{!pic-none: -warn_nopic}} \\\n+\t%{nostdlib} %{noshrlib} %{glue}}\"\n \n #define LIB_SPEC \"-lc\"\n "}]}