{"sha": "7c5867495bbfce161cd0461b002f626f9339b78f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2M1ODY3NDk1YmJmY2UxNjFjZDA0NjFiMDAyZjYyNmY5MzM5Yjc4Zg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2017-02-17T20:28:38Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2017-02-17T20:28:38Z"}, "message": "PR c++/78690 - ICE with using and global type with same name\n\n\t* pt.c (type_dependent_object_expression_p): True for\n\tIDENTIFIER_NODE.\n\nFrom-SVN: r245549", "tree": {"sha": "944e3f2408dbdc26f8b77dfd24a0e1f5230b31b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/944e3f2408dbdc26f8b77dfd24a0e1f5230b31b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c5867495bbfce161cd0461b002f626f9339b78f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c5867495bbfce161cd0461b002f626f9339b78f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c5867495bbfce161cd0461b002f626f9339b78f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c5867495bbfce161cd0461b002f626f9339b78f/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a530e1816779c1c8d4fe5ddaeb5cc313f2136152", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a530e1816779c1c8d4fe5ddaeb5cc313f2136152", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a530e1816779c1c8d4fe5ddaeb5cc313f2136152"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "2e2cd6c48c5580fb0ccec761d25f5dff0f6f07d4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c5867495bbfce161cd0461b002f626f9339b78f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c5867495bbfce161cd0461b002f626f9339b78f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7c5867495bbfce161cd0461b002f626f9339b78f", "patch": "@@ -1,5 +1,9 @@\n 2017-02-17  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/78690 - ICE with using and global type with same name\n+\t* pt.c (type_dependent_object_expression_p): True for\n+\tIDENTIFIER_NODE.\n+\n \tPR c++/79549 - C++17 ICE with non-type auto template parameter pack\n \t* pt.c (convert_template_argument): Just return an auto arg pack.\n \t(tsubst_template_args): Don't tsubst an auto pack type."}, {"sha": "9e6ce8d51def88cb54b50ba95f5714432956d90c", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c5867495bbfce161cd0461b002f626f9339b78f/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c5867495bbfce161cd0461b002f626f9339b78f/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=7c5867495bbfce161cd0461b002f626f9339b78f", "patch": "@@ -23932,6 +23932,10 @@ type_dependent_expression_p (tree expression)\n bool\n type_dependent_object_expression_p (tree object)\n {\n+  /* An IDENTIFIER_NODE can sometimes have a TREE_TYPE, but it's still\n+     dependent.  */\n+  if (TREE_CODE (object) == IDENTIFIER_NODE)\n+    return true;\n   tree scope = TREE_TYPE (object);\n   return (!scope || dependent_scope_p (scope));\n }"}, {"sha": "a5c18c4629cb8b550d0c1d4fc6109e40c98bede3", "filename": "gcc/testsuite/g++.dg/template/dependent-scope1.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c5867495bbfce161cd0461b002f626f9339b78f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdependent-scope1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c5867495bbfce161cd0461b002f626f9339b78f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdependent-scope1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdependent-scope1.C?ref=7c5867495bbfce161cd0461b002f626f9339b78f", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/78690\n+\n+struct C;\n+\n+template <typename T>\n+struct A\n+{\n+  struct C { static void bar (); };\n+};\n+\n+template <typename T>\n+struct B\n+{\n+  using A<T>::C;\n+  void\n+  foo () { C.bar (); }\n+};"}]}