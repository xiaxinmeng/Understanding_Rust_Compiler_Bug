{"sha": "f18fd95634f28d650b077651d4688ef8667451a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjE4ZmQ5NTYzNGYyOGQ2NTBiMDc3NjUxZDQ2ODhlZjg2Njc0NTFhMQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-01-02T09:53:53Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-01-02T09:53:53Z"}, "message": "(TOOLDIR_PREFIX): Define if not defined.\n\n(tooldir_prefix, tooldir_base_prefix): New variables.\n(main): Set tooldir_prefix.  Add it (plus `bin' or `lib') to search paths.\n\nFrom-SVN: r3057", "tree": {"sha": "8f9a41ce4a0f9120cd8bc7b70e487472610aaf97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f9a41ce4a0f9120cd8bc7b70e487472610aaf97"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f18fd95634f28d650b077651d4688ef8667451a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f18fd95634f28d650b077651d4688ef8667451a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f18fd95634f28d650b077651d4688ef8667451a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f18fd95634f28d650b077651d4688ef8667451a1/comments", "author": null, "committer": null, "parents": [{"sha": "b8aa9be0a5c8f7648a76c410bcfd7db5c40bcfa3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8aa9be0a5c8f7648a76c410bcfd7db5c40bcfa3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8aa9be0a5c8f7648a76c410bcfd7db5c40bcfa3"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "39a897881ccbb64d75775d4aa9e39dc2dba8d278", "filename": "gcc/gcc.c", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f18fd95634f28d650b077651d4688ef8667451a1/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f18fd95634f28d650b077651d4688ef8667451a1/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=f18fd95634f28d650b077651d4688ef8667451a1", "patch": "@@ -937,6 +937,12 @@ static char *standard_startfile_prefix = STANDARD_STARTFILE_PREFIX;\n static char *standard_startfile_prefix_1 = \"/lib/\";\n static char *standard_startfile_prefix_2 = \"/usr/lib/\";\n \n+#ifndef TOOLDIR_PREFIX\n+#define TOOLDIR_PREFIX \"/usr/local/\"\n+#endif\n+static char *tooldir_base_prefix = TOOLDIR_PREFIX;\n+static char *tooldir_prefix;\n+\n /* Clear out the vector of arguments (after a command is executed).  */\n \n static void\n@@ -2129,6 +2135,24 @@ process_command (argc, argv)\n \tn_infiles++;\n     }\n \n+  tooldir_prefix = concat (tooldir_base_prefix, spec_machine, \"/\");\n+\n+  /* If tooldir is relative, base it on exec_prefix.  A relative\n+     tooldir lets us move the installed tree as a unit.  */\n+\n+  if (*tooldir_prefix != '/')\n+    {\n+      if (gcc_exec_prefix)\n+\ttooldir_prefix = concat (concat (gcc_exec_prefix, spec_machine, \"/\"),\n+\t\t\t\t concat (spec_version, \"/\", tooldir_prefix),\n+\t\t\t\t \"\");\n+      else\n+\ttooldir_prefix = concat (concat (standard_exec_prefix, spec_machine, \"/\"),\n+\t\t\t\t concat (spec_version, \"/\", tooldir_prefix),\n+\t\t\t\t \"\");\n+    }\n+\n+\n   /* Set up the search paths before we go looking for config files.  */\n \n   /* These come before the md prefixes so that we will find gcc's subcommands\n@@ -2141,6 +2165,11 @@ process_command (argc, argv)\n   add_prefix (&startfile_prefix, standard_exec_prefix, 0, 1, NULL_PTR);\n   add_prefix (&startfile_prefix, standard_exec_prefix_1, 0, 1, NULL_PTR);\n \n+  add_prefix (&exec_prefix, concat (tooldir_prefix, \"bin\", \"/\"),\n+\t      0, 0, NULL_PTR);\n+  add_prefix (&startfile_prefix, concat (tooldir_prefix, \"lib\", \"/\"),\n+\t      0, 0, NULL_PTR);\n+\n   /* More prefixes are enabled in main, after we read the specs file\n      and determine whether this is cross-compilation or not.  */\n "}]}