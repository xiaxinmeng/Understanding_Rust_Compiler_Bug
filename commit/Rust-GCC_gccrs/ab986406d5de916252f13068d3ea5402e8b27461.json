{"sha": "ab986406d5de916252f13068d3ea5402e8b27461", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWI5ODY0MDZkNWRlOTE2MjUyZjEzMDY4ZDNlYTU0MDJlOGIyNzQ2MQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-24T15:02:48Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-24T15:02:48Z"}, "message": "[multiple changes]\n\n2014-01-24  Robert Dewar  <dewar@adacore.com>\n\n\t* sinfo.ads, make.adb, prj-env.adb: Minor reformatting.\n\n2014-01-24  Vincent Celier  <celier@adacore.com>\n\n\t* prj.adb (Add_Aggregated_Project): Do not add a project in\n\tthe list if it is already there.\n\n2014-01-24  Yannick Moy  <moy@adacore.com>\n\n\t* lib-xref-spark_specific.adb (Enclosing_Subprogram_Or_Package):\n\tCorrect the search for a subrogram declaration to which a pragma is\n\tattached.\n\n2014-01-24  Bob Duff  <duff@adacore.com>\n\n\t* gnat_ugn.texi: Document --decimal-grouping and\n\t--based-grouping switches in gnatpp.\n\nFrom-SVN: r207042", "tree": {"sha": "4c313edbb10b708f9b35aa93db411411bd2d4e93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c313edbb10b708f9b35aa93db411411bd2d4e93"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab986406d5de916252f13068d3ea5402e8b27461", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab986406d5de916252f13068d3ea5402e8b27461", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab986406d5de916252f13068d3ea5402e8b27461", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab986406d5de916252f13068d3ea5402e8b27461/comments", "author": null, "committer": null, "parents": [{"sha": "979b94ea4d04a42e00b11d5bb9aa415410f31b06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/979b94ea4d04a42e00b11d5bb9aa415410f31b06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/979b94ea4d04a42e00b11d5bb9aa415410f31b06"}], "stats": {"total": 120, "additions": 81, "deletions": 39}, "files": [{"sha": "576d30643bb6afa39af86533c067b7650b97a77f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab986406d5de916252f13068d3ea5402e8b27461/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab986406d5de916252f13068d3ea5402e8b27461/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ab986406d5de916252f13068d3ea5402e8b27461", "patch": "@@ -1,3 +1,23 @@\n+2014-01-24  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sinfo.ads, make.adb, prj-env.adb: Minor reformatting.\n+\n+2014-01-24  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj.adb (Add_Aggregated_Project): Do not add a project in\n+\tthe list if it is already there.\n+\n+2014-01-24  Yannick Moy  <moy@adacore.com>\n+\n+\t* lib-xref-spark_specific.adb (Enclosing_Subprogram_Or_Package):\n+\tCorrect the search for a subrogram declaration to which a pragma is\n+\tattached.\n+\n+2014-01-24  Bob Duff  <duff@adacore.com>\n+\n+\t* gnat_ugn.texi: Document --decimal-grouping and\n+\t--based-grouping switches in gnatpp.\n+\n 2014-01-24  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sinfo.ads: Documentation update."}, {"sha": "ca3eacc86ce9f03067c0cd12f2029487073077cc", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab986406d5de916252f13068d3ea5402e8b27461/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab986406d5de916252f13068d3ea5402e8b27461/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=ab986406d5de916252f13068d3ea5402e8b27461", "patch": "@@ -14324,9 +14324,23 @@ line indentation is also 1)\n \n @noindent\n These switches control the inclusion of missing end/exit labels, and\n-the indentation level in @b{case} statements.\n+the indentation level in @b{case} statements, etc.\n \n @table @option\n+@item --decimal-grouping=@var{n}\n+@cindex @option{--decimal-grouping} @command{gnatpp}\n+Put underscores in decimal literals (numeric literals without a base)\n+every @var{n} characters. If a literal already has one or more\n+underscores, it is not modified. For example, with\n+@code{--decimal-grouping=3}, @code{1000000} will be changed to\n+@code{1_000_000}.\n+\n+@item --based-grouping=@var{n}\n+@cindex @option{--based-grouping} @command{gnatpp}\n+Same as @code{--decimal-grouping}, but for based literals. For\n+example, with @code{--based-grouping=4}, @code{16#0001FFFE#} will be\n+changed to @code{16#0001_FFFE#}.\n+\n @item ^-e^/NO_MISSED_LABELS^\n @cindex @option{^-e^/NO_MISSED_LABELS^} (@command{gnatpp})\n Do not insert missing end/exit labels. An end label is the name of"}, {"sha": "9328be84b5de4ca08997f5a2e40ca25cdfd4818c", "filename": "gcc/ada/lib-xref-spark_specific.adb", "status": "modified", "additions": 12, "deletions": 19, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab986406d5de916252f13068d3ea5402e8b27461/gcc%2Fada%2Flib-xref-spark_specific.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab986406d5de916252f13068d3ea5402e8b27461/gcc%2Fada%2Flib-xref-spark_specific.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref-spark_specific.adb?ref=ab986406d5de916252f13068d3ea5402e8b27461", "patch": "@@ -1023,25 +1023,18 @@ package body SPARK_Specific is\n             when N_Pragma =>\n \n                --  The enclosing subprogram for a precondition, postcondition,\n-               --  or contract case should be the subprogram to which the\n-               --  pragma is attached, which can be found by following\n-               --  previous elements in the list to which the pragma belongs.\n-\n-               if Get_Pragma_Id (Result) = Pragma_Precondition\n-                    or else\n-                  Get_Pragma_Id (Result) = Pragma_Postcondition\n-                    or else\n-                  Get_Pragma_Id (Result) = Pragma_Contract_Cases\n-               then\n-                  if Is_List_Member (Result)\n-                    and then Present (Prev (Result))\n-                  then\n-                     Result := Prev (Result);\n-                  else\n-                     Result := Parent (Result);\n-                  end if;\n-\n-               else\n+               --  or contract case should be the declaration preceding the\n+               --  pragma (skipping any other pragmas between this pragma and\n+               --  this declaration.\n+\n+               while Nkind (Result) = N_Pragma\n+                 and then Is_List_Member (Result)\n+                 and then Present (Prev (Result))\n+               loop\n+                  Result := Prev (Result);\n+               end loop;\n+\n+               if Nkind (Result) = N_Pragma then\n                   Result := Parent (Result);\n                end if;\n "}, {"sha": "c8c605313e10498af1069bd70fa60c156c0d8214", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab986406d5de916252f13068d3ea5402e8b27461/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab986406d5de916252f13068d3ea5402e8b27461/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=ab986406d5de916252f13068d3ea5402e8b27461", "patch": "@@ -4556,14 +4556,13 @@ package body Make is\n \n       if Main_Project /= No_Project then\n \n-         --  Put all the source directories in ADA_INCLUDE_PATH,\n-         --  and all the object directories in ADA_OBJECTS_PATH,\n-         --  except those of library projects.\n+         --  Put all the source directories in ADA_INCLUDE_PATH, and all the\n+         --  object directories in ADA_OBJECTS_PATH.\n \n          Prj.Env.Set_Ada_Paths\n            (Project             => Main_Project,\n             In_Tree             => Project_Tree,\n-            Including_Libraries => False,\n+            Including_Libraries => True,\n             Include_Path        => Use_Include_Path_File);\n \n          --  If switch -C was specified, create a binder mapping file"}, {"sha": "b50481e0d2fe98b4987af7da26cb091d26bb1f8c", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab986406d5de916252f13068d3ea5402e8b27461/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab986406d5de916252f13068d3ea5402e8b27461/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=ab986406d5de916252f13068d3ea5402e8b27461", "patch": "@@ -147,8 +147,8 @@ package body Prj.Env is\n    begin\n       if Recursive then\n \n-         --  If it is the first time we call this function for\n-         --  this project, compute the source path\n+         --  If it is the first time we call this function for this project,\n+         --  compute the source path\n \n          if Project.Ada_Include_Path = null then\n             Buffer := new String (1 .. Buffer_Initial);"}, {"sha": "d7e2bc74a6bd05712c0f6f0dd070995b1cc09650", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab986406d5de916252f13068d3ea5402e8b27461/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab986406d5de916252f13068d3ea5402e8b27461/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=ab986406d5de916252f13068d3ea5402e8b27461", "patch": "@@ -1083,8 +1083,24 @@ package body Prj is\n    ----------------------------\n \n    procedure Add_Aggregated_Project\n-     (Project : Project_Id; Path : Path_Name_Type) is\n+     (Project : Project_Id;\n+      Path    : Path_Name_Type)\n+   is\n+      Aggregated : Aggregated_Project_List;\n+\n    begin\n+      --  Check if the project is already in the aggregated project list. If it\n+      --  is, do not add it again.\n+\n+      Aggregated := Project.Aggregated_Projects;\n+      while Aggregated /= null loop\n+         if Path = Aggregated.Path then\n+            return;\n+         else\n+            Aggregated := Aggregated.Next;\n+         end if;\n+      end loop;\n+\n       Project.Aggregated_Projects := new Aggregated_Project'\n         (Path    => Path,\n          Project => No_Project,"}, {"sha": "61c7da4c7c46887626ec74b79a75150c205cbc7f", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab986406d5de916252f13068d3ea5402e8b27461/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab986406d5de916252f13068d3ea5402e8b27461/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=ab986406d5de916252f13068d3ea5402e8b27461", "patch": "@@ -517,7 +517,7 @@ package Sinfo is\n    --  form that meets additional requirements.\n \n    --  This light expansion does two transformations of the tree that cannot\n-   --  be postponed after semantic analysis:\n+   --  be postponed till after semantic analysis:\n \n    --    1. Replace object renamings by renamed object. This requires the\n    --       introduction of temporaries at the point of the renaming, which\n@@ -555,15 +555,15 @@ package Sinfo is\n \n    --  The following flag fields appear in expression nodes:\n \n-   --  Do_Division_Check\n-   --  Do_Overflow_Check\n-   --  Do_Range_Check\n+   --    Do_Division_Check\n+   --    Do_Overflow_Check\n+   --    Do_Range_Check\n \n    --  These three flags are always set by the front end during semantic\n    --  analysis, on expression nodes that may trigger the corresponding\n-   --  check. The front end then inserts or not the check during expansion.\n-   --  In particular, these flags should also be correctly set in ASIS mode\n-   --  and GNATprove mode.\n+   --  check. The front end then inserts or not the check during expansion. In\n+   --  particular, these flags should also be correctly set in ASIS mode and\n+   --  GNATprove mode.\n \n    --  Note that this accounts for all nodes that trigger the corresponding\n    --  checks, except for range checks on subtype_indications, which may be\n@@ -572,11 +572,11 @@ package Sinfo is\n \n    --  The following flag fields appear in various nodes:\n \n-   --  Do_Accessibility_Check\n-   --  Do_Discriminant_Check\n-   --  Do_Length_Check\n-   --  Do_Storage_Check\n-   --  Do_Tag_Check\n+   --    Do_Accessibility_Check\n+   --    Do_Discriminant_Check\n+   --    Do_Length_Check\n+   --    Do_Storage_Check\n+   --    Do_Tag_Check\n \n    --  These flags are used in some specific cases by the front end, either\n    --  during semantic analysis or during expansion, and cannot be expected"}]}