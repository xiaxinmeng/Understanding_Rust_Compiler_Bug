{"sha": "5284fba56ec3392a61b2fe066027253868274156", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTI4NGZiYTU2ZWMzMzkyYTYxYjJmZTA2NjAyNzI1Mzg2ODI3NDE1Ng==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2019-10-13T16:51:33Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2019-10-13T16:51:33Z"}, "message": "re PR fortran/90297 (gcc/fortran/resolve.c: 2 * possibly redundant code ?)\n\n2019-10-13  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/90297\n\t* resolve.c (resolve_typebound_function): Remove code with no\n\tfunctional effect.\n\nFrom-SVN: r276940", "tree": {"sha": "440304801b4dca0ad485781fde4bf1fc224238ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/440304801b4dca0ad485781fde4bf1fc224238ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5284fba56ec3392a61b2fe066027253868274156", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5284fba56ec3392a61b2fe066027253868274156", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5284fba56ec3392a61b2fe066027253868274156", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5284fba56ec3392a61b2fe066027253868274156/comments", "author": null, "committer": null, "parents": [{"sha": "ad671098740b0dc798a89bc55833088f3948038b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad671098740b0dc798a89bc55833088f3948038b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad671098740b0dc798a89bc55833088f3948038b"}], "stats": {"total": 21, "additions": 6, "deletions": 15}, "files": [{"sha": "e215763a862920999fc37da28edc2d81856d0ada", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5284fba56ec3392a61b2fe066027253868274156/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5284fba56ec3392a61b2fe066027253868274156/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=5284fba56ec3392a61b2fe066027253868274156", "patch": "@@ -1,3 +1,9 @@\n+2019-10-13  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/90297\n+\t* resolve.c (resolve_typebound_function): Remove code with no\n+\tfunctional effect.\n+\n 2019-10-13  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/92017"}, {"sha": "10da8f9a00d9b188e5a4b281336569277cfa1210", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5284fba56ec3392a61b2fe066027253868274156/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5284fba56ec3392a61b2fe066027253868274156/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=5284fba56ec3392a61b2fe066027253868274156", "patch": "@@ -6548,21 +6548,6 @@ resolve_typebound_function (gfc_expr* e)\n   overridable = !e->value.compcall.tbp->non_overridable;\n   if (expr && expr->ts.type == BT_CLASS && e->value.compcall.name)\n     {\n-      /* If the base_object is not a variable, the corresponding actual\n-\t argument expression must be stored in e->base_expression so\n-\t that the corresponding tree temporary can be used as the base\n-\t object in gfc_conv_procedure_call.  */\n-      if (expr->expr_type != EXPR_VARIABLE)\n-\t{\n-\t  gfc_actual_arglist *args;\n-\n-\t  for (args= e->value.function.actual; args; args = args->next)\n-\t    {\n-\t      if (expr == args->expr)\n-\t\texpr = args->expr;\n-\t    }\n-\t}\n-\n       /* Since the typebound operators are generic, we have to ensure\n \t that any delays in resolution are corrected and that the vtab\n \t is present.  */"}]}