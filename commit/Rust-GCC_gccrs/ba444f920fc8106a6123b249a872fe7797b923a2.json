{"sha": "ba444f920fc8106a6123b249a872fe7797b923a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmE0NDRmOTIwZmM4MTA2YTYxMjNiMjQ5YTg3MmZlNzc5N2I5MjNhMg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-11-15T18:39:07Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-11-15T18:39:07Z"}, "message": "(gen_rtvec_vv): New function.\n\n(copy_rtx_if_shared): Call it.\n\nFrom-SVN: r13167", "tree": {"sha": "c29a33d2871f86521a59aa02ff8333ba9a4f2a63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c29a33d2871f86521a59aa02ff8333ba9a4f2a63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba444f920fc8106a6123b249a872fe7797b923a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba444f920fc8106a6123b249a872fe7797b923a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba444f920fc8106a6123b249a872fe7797b923a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba444f920fc8106a6123b249a872fe7797b923a2/comments", "author": null, "committer": null, "parents": [{"sha": "59888de215eb75774c958582e4b4cc91bdb3d232", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59888de215eb75774c958582e4b4cc91bdb3d232", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59888de215eb75774c958582e4b4cc91bdb3d232"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "f328d7a741b03936921690fbf91d52b21d044d87", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba444f920fc8106a6123b249a872fe7797b923a2/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba444f920fc8106a6123b249a872fe7797b923a2/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=ba444f920fc8106a6123b249a872fe7797b923a2", "patch": "@@ -470,6 +470,25 @@ gen_rtvec_v (n, argp)\n \n   return rt_val;\n }\n+\n+rtvec\n+gen_rtvec_vv (n, argp)\n+     int n;\n+     rtunion *argp;\n+{\n+  register int i;\n+  register rtvec rt_val;\n+\n+  if (n == 0)\n+    return NULL_RTVEC;\t\t/* Don't allocate an empty rtvec...\t*/\n+\n+  rt_val = rtvec_alloc (n);\t/* Allocate an rtvec...\t\t\t*/\n+\n+  for (i = 0; i < n; i++)\n+    rt_val->elem[i].rtx = (argp++)->rtx;\n+\n+  return rt_val;\n+}\n \f\n /* Generate a REG rtx for a new pseudo register of mode MODE.\n    This pseudo is assigned the next sequential register number.  */\n@@ -1664,7 +1683,7 @@ copy_rtx_if_shared (orig)\n \t      int len = XVECLEN (x, i);\n \n \t      if (copied && len > 0)\n-\t\tXVEC (x, i) = gen_rtvec_v (len, &XVECEXP (x, i, 0));\n+\t\tXVEC (x, i) = gen_rtvec_vv (len, XVEC (x, i)->elem);\n \t      for (j = 0; j < len; j++)\n \t\tXVECEXP (x, i, j) = copy_rtx_if_shared (XVECEXP (x, i, j));\n \t    }"}]}