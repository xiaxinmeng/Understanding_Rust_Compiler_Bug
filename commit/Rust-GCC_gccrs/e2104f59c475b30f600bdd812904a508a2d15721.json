{"sha": "e2104f59c475b30f600bdd812904a508a2d15721", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTIxMDRmNTljNDc1YjMwZjYwMGJkZDgxMjkwNGE1MDhhMmQxNTcyMQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-08-20T15:58:47Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-08-20T15:58:47Z"}, "message": "tree-ssa-ccp.c (maybe_fold_stmt_indirect): Do not mess with TREE_THIS_VOLATILE on shared nodes.\n\n2008-08-20  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-ccp.c (maybe_fold_stmt_indirect): Do not mess\n\twith TREE_THIS_VOLATILE on shared nodes.\n\t(fold_stmt_r): Likewise.\n\n\t* gcc.c-torture/compile/20080820-1.c: New testcase.\n\nFrom-SVN: r139325", "tree": {"sha": "261cdcc0eab7aad499e58deaf8abb7f55131cb0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/261cdcc0eab7aad499e58deaf8abb7f55131cb0c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2104f59c475b30f600bdd812904a508a2d15721", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2104f59c475b30f600bdd812904a508a2d15721", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2104f59c475b30f600bdd812904a508a2d15721", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2104f59c475b30f600bdd812904a508a2d15721/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5e5dc75a3ef9ebff03bbf57fc7152e17e2449737", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e5dc75a3ef9ebff03bbf57fc7152e17e2449737", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e5dc75a3ef9ebff03bbf57fc7152e17e2449737"}], "stats": {"total": 28, "additions": 25, "deletions": 3}, "files": [{"sha": "940cec6215e4ff0311656b11d042b770cb8f29c2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2104f59c475b30f600bdd812904a508a2d15721/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2104f59c475b30f600bdd812904a508a2d15721/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e2104f59c475b30f600bdd812904a508a2d15721", "patch": "@@ -1,3 +1,9 @@\n+2008-08-20  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-ccp.c (maybe_fold_stmt_indirect): Do not mess\n+\twith TREE_THIS_VOLATILE on shared nodes.\n+\t(fold_stmt_r): Likewise.\n+\n 2008-08-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/37171"}, {"sha": "fd849c4c17c00ca46b57c14b34eea9746a6ce195", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2104f59c475b30f600bdd812904a508a2d15721/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2104f59c475b30f600bdd812904a508a2d15721/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e2104f59c475b30f600bdd812904a508a2d15721", "patch": "@@ -1,3 +1,7 @@\n+2008-08-20  Richard Guenther  <rguenther@suse.de>\n+\n+\t* gcc.c-torture/compile/20080820-1.c: New testcase.\n+\n 2008-08-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/37171"}, {"sha": "a4d4375ad2ee1bb085e3fa076f04aeb232983306", "filename": "gcc/testsuite/gcc.c-torture/compile/20080820-1.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2104f59c475b30f600bdd812904a508a2d15721/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20080820-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2104f59c475b30f600bdd812904a508a2d15721/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20080820-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20080820-1.c?ref=e2104f59c475b30f600bdd812904a508a2d15721", "patch": "@@ -0,0 +1,5 @@\n+extern unsigned long volatile jiffies;\n+void do_timer(void)\n+{\n+  (*(unsigned long *)&jiffies)++;\n+}"}, {"sha": "c89bd2cda949e7ae791c7926fbf5b980909a477e", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2104f59c475b30f600bdd812904a508a2d15721/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2104f59c475b30f600bdd812904a508a2d15721/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=e2104f59c475b30f600bdd812904a508a2d15721", "patch": "@@ -2118,7 +2118,11 @@ maybe_fold_stmt_indirect (tree expr, tree base, tree offset)\n \t\t\t\t\t  TREE_TYPE (expr));\n       if (t)\n \t{\n-\t  TREE_THIS_VOLATILE (t) = volatile_p;\n+\t  /* Preserve volatileness of the original expression.\n+\t     We can end up with a plain decl here which is shared\n+\t     and we shouldn't mess with its flags.  */\n+\t  if (!SSA_VAR_P (t))\n+\t    TREE_THIS_VOLATILE (t) = volatile_p;\n \t  return t;\n \t}\n     }\n@@ -2404,8 +2408,11 @@ fold_stmt_r (tree *expr_p, int *walk_subtrees, void *data)\n \n   if (t)\n     {\n-      /* Preserve volatileness of the original expression.  */\n-      TREE_THIS_VOLATILE (t) = volatile_p;\n+      /* Preserve volatileness of the original expression.\n+\t We can end up with a plain decl here which is shared\n+\t and we shouldn't mess with its flags.  */\n+      if (!SSA_VAR_P (t))\n+\tTREE_THIS_VOLATILE (t) = volatile_p;\n       *expr_p = t;\n       *changed_p = true;\n     }"}]}