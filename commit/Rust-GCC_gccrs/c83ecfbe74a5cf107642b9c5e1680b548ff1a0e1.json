{"sha": "c83ecfbe74a5cf107642b9c5e1680b548ff1a0e1", "node_id": "C_kwDOANBUbNoAKGM4M2VjZmJlNzRhNWNmMTA3NjQyYjljNWUxNjgwYjU0OGZmMWEwZTE", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-01-05T16:25:47Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-01-06T14:56:12Z"}, "message": "libstdc++: Do not use std::isdigit in <charconv> [PR103911]\n\nThis avoids a potential race condition if std::setlocale is used\nconcurrently with std::from_chars.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/103911\n\t* include/std/charconv (__from_chars_alpha_to_num): Return\n\tchar instead of unsigned char. Change invalid return value to\n\t127 instead of using numeric trait.\n\t(__from_chars_alnum): Fix comment. Do not use std::isdigit.\n\tChange type of variable to char.", "tree": {"sha": "eea29434abec921fcbfba59696757331bc9bf47f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eea29434abec921fcbfba59696757331bc9bf47f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c83ecfbe74a5cf107642b9c5e1680b548ff1a0e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c83ecfbe74a5cf107642b9c5e1680b548ff1a0e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c83ecfbe74a5cf107642b9c5e1680b548ff1a0e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c83ecfbe74a5cf107642b9c5e1680b548ff1a0e1/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db33b1059bcee3eeb36d174d59abf19f2bef5d66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db33b1059bcee3eeb36d174d59abf19f2bef5d66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db33b1059bcee3eeb36d174d59abf19f2bef5d66"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "a3f8c7718b218255167c5fcb72130f24cb767aef", "filename": "libstdc++-v3/include/std/charconv", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83ecfbe74a5cf107642b9c5e1680b548ff1a0e1/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcharconv", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83ecfbe74a5cf107642b9c5e1680b548ff1a0e1/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcharconv", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcharconv?ref=c83ecfbe74a5cf107642b9c5e1680b548ff1a0e1", "patch": "@@ -39,7 +39,6 @@\n \n #include <type_traits>\n #include <bit>\t\t\t// for __bit_width\n-#include <cctype>\t\t// for isdigit\n #include <bits/charconv.h>\t// for __to_chars_len, __to_chars_10_impl\n #include <bits/error_constants.h> // for std::errc\n #include <ext/numeric_traits.h>\n@@ -466,7 +465,7 @@ namespace __detail\n       return true;\n     }\n \n-  constexpr unsigned char\n+  constexpr char\n   __from_chars_alpha_to_num(char __c)\n   {\n     switch (__c)\n@@ -550,10 +549,10 @@ namespace __detail\n     case 'Z':\n       return 35;\n     }\n-    return __gnu_cxx::__int_traits<unsigned char>::__max;\n+    return 127;\n   }\n \n-  /// std::from_chars implementation for integers in bases 11 to 26.\n+  /// std::from_chars implementation for integers in bases 11 to 36.\n   template<typename _Tp>\n     bool\n     __from_chars_alnum(const char*& __first, const char* __last, _Tp& __val,\n@@ -562,8 +561,8 @@ namespace __detail\n       bool __valid = true;\n       while (__first != __last)\n \t{\n-\t  unsigned char __c = *__first;\n-\t  if (std::isdigit(__c))\n+\t  char __c = *__first;\n+\t  if ('0' <= __c && __c <= '9') // isdigit\n \t    __c -= '0';\n \t  else\n \t    {"}]}