{"sha": "d3db0b3ba7e3993aed0ce013f6c3a4aca85297a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDNkYjBiM2JhN2UzOTkzYWVkMGNlMDEzZjZjM2E0YWNhODUyOTdhNQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2018-11-01T18:29:44Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2018-11-01T18:29:44Z"}, "message": "* g++.dg/cpp1z/constexpr-lambda22.C: New test,\n\nFrom-SVN: r265725", "tree": {"sha": "2ee9792f4d314a140e04c22bc85d69e383975a78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ee9792f4d314a140e04c22bc85d69e383975a78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3db0b3ba7e3993aed0ce013f6c3a4aca85297a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3db0b3ba7e3993aed0ce013f6c3a4aca85297a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3db0b3ba7e3993aed0ce013f6c3a4aca85297a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3db0b3ba7e3993aed0ce013f6c3a4aca85297a5/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d8b3b4f4b22e2986a83bce7870d9726fa725ab4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8b3b4f4b22e2986a83bce7870d9726fa725ab4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8b3b4f4b22e2986a83bce7870d9726fa725ab4d"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "e85b37cdb8a7a501fbeaeca5deae5ff782dfba9f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3db0b3ba7e3993aed0ce013f6c3a4aca85297a5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3db0b3ba7e3993aed0ce013f6c3a4aca85297a5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d3db0b3ba7e3993aed0ce013f6c3a4aca85297a5", "patch": "@@ -1,3 +1,7 @@\n+2018-11-01  Marek Polacek  <polacek@redhat.com>\n+\n+\t* g++.dg/cpp1z/constexpr-lambda22.C: New test,\n+\n 2018-11-01  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n \n \t* gcc.dg/tree-ssa/cunroll-13.c: Add missing cast from literal to int32."}, {"sha": "fcb6ff96d588a4c2eda6e31b791b009b0509e491", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-lambda22.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3db0b3ba7e3993aed0ce013f6c3a4aca85297a5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3db0b3ba7e3993aed0ce013f6c3a4aca85297a5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-lambda22.C?ref=d3db0b3ba7e3993aed0ce013f6c3a4aca85297a5", "patch": "@@ -0,0 +1,20 @@\n+// { dg-do compile }\n+// { dg-options -std=c++17 }\n+\n+#define SA(X) static_assert((X),#X)\n+\n+template<typename>\n+constexpr int\n+foo ()\n+{\n+  constexpr int a[] = { 1, 2, 3, 4, 5 };\n+  int i = 0;\n+  auto j = [&] {\n+    for (auto x : a)\n+      i++;\n+    return i;\n+  }();\n+  return j;\n+}\n+\n+SA (foo<int>() == 5);"}]}