{"sha": "714fc568abfd02d7dc28607ff60301902f830917", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzE0ZmM1NjhhYmZkMDJkN2RjMjg2MDdmZjYwMzAxOTAyZjgzMDkxNw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-11-08T09:30:52Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-11-08T09:30:52Z"}, "message": "re PR tree-optimization/92324 (ICE in expand_direct_optab_fn, at internal-fn.c:2890)\n\n2019-11-08  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/92324\n\t* tree-vect-loop.c (vect_create_epilog_for_reduction): Use\n\tSTMT_VINFO_REDUC_VECTYPE for all computations, inserting\n\tsign-conversions as necessary.\n\t(vectorizable_reduction): Reject conversions in the chain\n\tthat are not sign-conversions, base analysis on a non-converting\n\tstmt and its operation sign.  Set STMT_VINFO_REDUC_VECTYPE.\n\t* tree-vect-stmts.c (vect_stmt_relevant_p): Don't dump anything\n\tfor debug stmts.\n\t* tree-vectorizer.h (_stmt_vec_info::reduc_vectype): New.\n\t(STMT_VINFO_REDUC_VECTYPE): Likewise.\n\n\t* gcc.dg/vect/pr92205.c: XFAIL.\n\t* gcc.dg/vect/pr92324-1.c: New testcase.\n\t* gcc.dg/vect/pr92324-2.c: Likewise.\n\nFrom-SVN: r277958", "tree": {"sha": "e5c1085ffa34fbee4ef8ee45d098ddb2c0179969", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5c1085ffa34fbee4ef8ee45d098ddb2c0179969"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/714fc568abfd02d7dc28607ff60301902f830917", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/714fc568abfd02d7dc28607ff60301902f830917", "html_url": "https://github.com/Rust-GCC/gccrs/commit/714fc568abfd02d7dc28607ff60301902f830917", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/714fc568abfd02d7dc28607ff60301902f830917/comments", "author": null, "committer": null, "parents": [{"sha": "be5f7eccf766a4c3a59b821f77ce320001df838f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be5f7eccf766a4c3a59b821f77ce320001df838f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be5f7eccf766a4c3a59b821f77ce320001df838f"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "e37fa781dd258cf8c1a4f66e657d6a61e21422ac", "filename": "gcc/testsuite/gcc.dg/vect/pr92324-1.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/714fc568abfd02d7dc28607ff60301902f830917/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr92324-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/714fc568abfd02d7dc28607ff60301902f830917/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr92324-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr92324-1.c?ref=714fc568abfd02d7dc28607ff60301902f830917", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+\n+unsigned a, b;\n+int c, d;\n+unsigned e(int f) {\n+  if (a > f)\n+    return a;\n+  return f;\n+}\n+void g() {\n+  for (; c; c++)\n+    d = e(d);\n+  b = d;\n+}"}, {"sha": "c7805fc62de131f071129eadd1b43eceef457769", "filename": "gcc/testsuite/gcc.dg/vect/pr92324-2.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/714fc568abfd02d7dc28607ff60301902f830917/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr92324-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/714fc568abfd02d7dc28607ff60301902f830917/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr92324-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr92324-2.c?ref=714fc568abfd02d7dc28607ff60301902f830917", "patch": "@@ -0,0 +1,21 @@\n+#include \"tree-vect.h\"\n+\n+unsigned b[1024];\n+\n+int __attribute__((noipa))\n+foo (int n)\n+{\n+  int res = 0;\n+  for (int i = 0; i < n; ++i)\n+    res = res > b[i] ? res : b[i];\n+  return res;\n+}\n+\n+int main ()\n+{\n+  check_vect ();\n+  b[15] = (unsigned)__INT_MAX__ + 1;\n+  if (foo (16) != -__INT_MAX__ - 1)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}