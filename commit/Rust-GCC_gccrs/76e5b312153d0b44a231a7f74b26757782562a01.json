{"sha": "76e5b312153d0b44a231a7f74b26757782562a01", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzZlNWIzMTIxNTNkMGI0NGEyMzFhN2Y3NGIyNjc1Nzc4MjU2MmEwMQ==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-01-16T16:09:07Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-01-16T16:09:07Z"}, "message": "gcc.c: Revert previous -fsyntax-only-related change; move to cp/g++spec.c.\n\n2001-01-16  Phil Edwards  <pme@sources.redhat.com>\n\n\t* gcc.c:  Revert previous -fsyntax-only-related change; move\n\t  to cp/g++spec.c.\n\nFrom-SVN: r39068", "tree": {"sha": "8039c383bbb6ee3a89519e86e16b2e96fc8fd7c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8039c383bbb6ee3a89519e86e16b2e96fc8fd7c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76e5b312153d0b44a231a7f74b26757782562a01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76e5b312153d0b44a231a7f74b26757782562a01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76e5b312153d0b44a231a7f74b26757782562a01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76e5b312153d0b44a231a7f74b26757782562a01/comments", "author": null, "committer": null, "parents": [{"sha": "b62d22a25cfcfec93cec3ed0ed9f837b7fab3d7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b62d22a25cfcfec93cec3ed0ed9f837b7fab3d7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b62d22a25cfcfec93cec3ed0ed9f837b7fab3d7f"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "a891cb466fc739e81abee4c58d82d5ccaadc1ee8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76e5b312153d0b44a231a7f74b26757782562a01/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76e5b312153d0b44a231a7f74b26757782562a01/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=76e5b312153d0b44a231a7f74b26757782562a01", "patch": "@@ -1,3 +1,8 @@\n+2001-01-16  Phil Edwards  <pme@sources.redhat.com>\n+\n+\t* gcc.c:  Revert previous -fsyntax-only-related change; move\n+\t  to cp/g++spec.c.\n+\n 2001-01-16  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/i386/i386.c (fcmov_comparison_operator): Only initialize"}, {"sha": "34a5cfeeb9f4ca2d7c1455970506835ee82444ed", "filename": "gcc/gcc.c", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76e5b312153d0b44a231a7f74b26757782562a01/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76e5b312153d0b44a231a7f74b26757782562a01/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=76e5b312153d0b44a231a7f74b26757782562a01", "patch": "@@ -96,9 +96,6 @@ static char dir_separator_str[] = { DIR_SEPARATOR, 0 };\n \n #define MIN_FATAL_STATUS 1\n \n-/* If nonzero, -fsyntax-only was passed. */\n-static int flag_syntax_only;\n-\n /* Flag saying to pass the greatest exit code returned by a sub-process\n    to the calling program.  */\n static int pass_exit_codes;\n@@ -3158,11 +3155,6 @@ process_command (argc, argv)\n \t  printf (\"%s\\n\", spec_machine);\n \t  exit (0);\n \t}\n-      else if (strcmp (argv[i], \"-fsyntax-only\") == 0)\n-\t{\n-\t  /* remember this so we don't complain about libraries */\n-\t  flag_syntax_only = 1;\n-\t}\n       else if (strcmp (argv[i], \"-fhelp\") == 0)\n \t{\n \t  /* translate_options () has turned --help into -fhelp.  */\n@@ -3789,7 +3781,6 @@ process_command (argc, argv)\n \t  switches[n_switches].ordering = 0;\n \t  /* These are always valid, since gcc.c itself understands it.  */\n \t  if (!strcmp (p, \"save-temps\")\n-\t      || !strcmp (p, \"fsyntax-only\")\n \t      || !strcmp (p, \"static-libgcc\")\n \t      || !strcmp (p, \"shared-libgcc\"))\n \t    switches[n_switches].validated = 1;\n@@ -5858,7 +5849,7 @@ main (argc, argv)\n   /* If options said don't run linker,\n      complain about input files to be given to the linker.  */\n \n-  if (! linker_was_run && error_count == 0 && flag_syntax_only == 0)\n+  if (! linker_was_run && error_count == 0)\n     for (i = 0; (int) i < n_infiles; i++)\n       if (explicit_link_files[i])\n \terror (\"%s: linker input file unused because linking not done\","}]}