{"sha": "dd3b81b4218512cfedc271dfde65c6011b6aefe9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQzYjgxYjQyMTg1MTJjZmVkYzI3MWRmZGU2NWM2MDExYjZhZWZlOQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2000-11-17T04:16:55Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2000-11-17T04:16:55Z"}, "message": "mcore.c (mcore_expand_prolog): Call xmalloc/xrealloc, not malloc/realloc.\n\n\t* mcore.c (mcore_expand_prolog): Call xmalloc/xrealloc, not\n\tmalloc/realloc.\n\n\t* cpplib.c (glue_header_name): Likewise.\n\n\t* fixincl.c (run_compiles, start_fixer): Likewise.\n\n\t* fixlib.c (load_file_data): Likewise.\n\n\t* mkdeps.c (munge): Likewise.\n\nf:\n\t* malloc.c (malloc_init): Call xmalloc, not malloc.\n\nFrom-SVN: r37511", "tree": {"sha": "c69e8960a6ca95cfcc6c3cf270e4d450862696db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c69e8960a6ca95cfcc6c3cf270e4d450862696db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd3b81b4218512cfedc271dfde65c6011b6aefe9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd3b81b4218512cfedc271dfde65c6011b6aefe9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd3b81b4218512cfedc271dfde65c6011b6aefe9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd3b81b4218512cfedc271dfde65c6011b6aefe9/comments", "author": null, "committer": null, "parents": [{"sha": "5074c1fe97ed929e8bdbf49600bbe83c3722a5ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5074c1fe97ed929e8bdbf49600bbe83c3722a5ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5074c1fe97ed929e8bdbf49600bbe83c3722a5ec"}], "stats": {"total": 53, "additions": 27, "deletions": 26}, "files": [{"sha": "79a01946dea6e6d90916b5ae364109c8812aec8a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd3b81b4218512cfedc271dfde65c6011b6aefe9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd3b81b4218512cfedc271dfde65c6011b6aefe9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dd3b81b4218512cfedc271dfde65c6011b6aefe9", "patch": "@@ -1,3 +1,16 @@\n+2000-11-16  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* mcore.c (mcore_expand_prolog): Call xmalloc/xrealloc, not\n+\tmalloc/realloc.\n+\n+\t* cpplib.c (glue_header_name): Likewise.\n+\n+\t* fixincl.c (run_compiles, start_fixer): Likewise.\n+\n+\t* fixlib.c (load_file_data): Likewise.\n+\n+\t* mkdeps.c (munge): Likewise.\n+\n 2000-11-17  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* defaults.h [EH_FRAME_SECTION_ASM_OP] (EH_FRAME_SECTION): Remove"}, {"sha": "c4650232fa579838bcc0619f59e373c0d2a10e98", "filename": "gcc/config/mcore/mcore.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd3b81b4218512cfedc271dfde65c6011b6aefe9/gcc%2Fconfig%2Fmcore%2Fmcore.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd3b81b4218512cfedc271dfde65c6011b6aefe9/gcc%2Fconfig%2Fmcore%2Fmcore.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore.c?ref=dd3b81b4218512cfedc271dfde65c6011b6aefe9", "patch": "@@ -2324,7 +2324,7 @@ mcore_expand_prolog ()\n \tfree (mcore_current_function_name);\n       \n       len = strlen (XSTR (x, 0)) + 1;\n-      mcore_current_function_name = (char *) malloc (len);\n+      mcore_current_function_name = (char *) xmalloc (len);\n       \n       memcpy (mcore_current_function_name, XSTR (x, 0), len);\n       "}, {"sha": "3094385aabb13433b08e130ddbf02448cbe2f955", "filename": "gcc/cpplib.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd3b81b4218512cfedc271dfde65c6011b6aefe9/gcc%2Fcpplib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd3b81b4218512cfedc271dfde65c6011b6aefe9/gcc%2Fcpplib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.c?ref=dd3b81b4218512cfedc271dfde65c6011b6aefe9", "patch": "@@ -528,7 +528,7 @@ glue_header_name (pfile, header)\n       if (total_len + len > capacity)\n \t{\n \t  capacity = (capacity + len) * 2;\n-\t  buffer = (unsigned char *) realloc (buffer, capacity);\n+\t  buffer = (unsigned char *) xrealloc (buffer, capacity);\n \t}\n \n       if (token.flags & PREV_WHITE)"}, {"sha": "f1cf409489444092be7a275d226ade6eacf6ad04", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd3b81b4218512cfedc271dfde65c6011b6aefe9/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd3b81b4218512cfedc271dfde65c6011b6aefe9/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=dd3b81b4218512cfedc271dfde65c6011b6aefe9", "patch": "@@ -1,3 +1,7 @@\n+Thu Nov 16 23:14:07 2000  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* malloc.c (malloc_init): Call xmalloc, not malloc.\n+\n 2000-11-10  Rodney Brown  <RodneyBrown@mynd.com>\n \n \t* Make-lang.in: Remove OUTPUT_OPTION from g77version.o target."}, {"sha": "032c2bfdfbf835386b317ee7260f6c6152ed2613", "filename": "gcc/f/malloc.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd3b81b4218512cfedc271dfde65c6011b6aefe9/gcc%2Ff%2Fmalloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd3b81b4218512cfedc271dfde65c6011b6aefe9/gcc%2Ff%2Fmalloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fmalloc.c?ref=dd3b81b4218512cfedc271dfde65c6011b6aefe9", "patch": "@@ -140,8 +140,7 @@ malloc_init ()\n {\n   if (malloc_reserve_ != NULL)\n     return;\n-  malloc_reserve_ = malloc (20 * 1024);\t/* In case of crash, free this first. */\n-  assert (malloc_reserve_ != NULL);\n+  malloc_reserve_ = xmalloc (20 * 1024); /* In case of crash, free this first. */\n }\n \n /* malloc_pool_display -- Display a pool"}, {"sha": "a1d681720b671d3f41a5e55da5cef75a43ff3588", "filename": "gcc/fixinc/fixincl.c", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd3b81b4218512cfedc271dfde65c6011b6aefe9/gcc%2Ffixinc%2Ffixincl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd3b81b4218512cfedc271dfde65c6011b6aefe9/gcc%2Ffixinc%2Ffixincl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.c?ref=dd3b81b4218512cfedc271dfde65c6011b6aefe9", "patch": "@@ -474,14 +474,7 @@ run_compiles ()\n {\n   tFixDesc *p_fixd = fixDescList;\n   int fix_ct = FIX_COUNT;\n-  regex_t *p_re = (regex_t *) malloc (REGEX_COUNT * sizeof (regex_t));\n-\n-  if (p_re == (regex_t *) NULL)\n-    {\n-      fprintf (stderr, \"fixincl ERROR:  cannot allocate %d bytes for regex\\n\",\n-               REGEX_COUNT * sizeof (regex_t));\n-      exit (EXIT_FAILURE);\n-    }\n+  regex_t *p_re = (regex_t *) xmalloc (REGEX_COUNT * sizeof (regex_t));\n \n   /*  Make sure compile_re does not stumble across invalid data */\n \n@@ -1036,14 +1029,9 @@ start_fixer (read_fd, p_fixd, pz_fix_file)\n   else\n     {\n       tSCC z_cmd_fmt[] = \"file='%s'\\n%s\";\n-      pz_cmd = (char*)malloc (strlen (p_fixd->patch_args[2])\n-                               + sizeof( z_cmd_fmt )\n-                               + strlen( pz_fix_file ));\n-      if (pz_cmd == (char*)NULL)\n-        {\n-          fputs (\"allocation failure\\n\", stderr);\n-          exit (EXIT_FAILURE);\n-        }\n+      pz_cmd = (char*) xmalloc (strlen (p_fixd->patch_args[2])\n+\t\t\t\t+ sizeof( z_cmd_fmt )\n+\t\t\t\t+ strlen( pz_fix_file ));\n       sprintf (pz_cmd, z_cmd_fmt, pz_fix_file, p_fixd->patch_args[2]);\n       pz_cmd_save = p_fixd->patch_args[2];\n       p_fixd->patch_args[2] = pz_cmd;"}, {"sha": "d09474a2faace142d79c91bf9c3c284ef6f4ba46", "filename": "gcc/fixinc/fixlib.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd3b81b4218512cfedc271dfde65c6011b6aefe9/gcc%2Ffixinc%2Ffixlib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd3b81b4218512cfedc271dfde65c6011b6aefe9/gcc%2Ffixinc%2Ffixlib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixlib.c?ref=dd3b81b4218512cfedc271dfde65c6011b6aefe9", "patch": "@@ -46,10 +46,7 @@ load_file_data (fp)\n       if (space_left < 1024)\n         {\n           space_left += 4096;\n-         if (pz_data)\n-            pz_data = realloc ((void*)pz_data, space_left + space_used + 1 );\n-         else\n-            pz_data = malloc (space_left + space_used + 1 );\n+\t  pz_data = xrealloc ((void*)pz_data, space_left + space_used + 1 );\n         }\n       size_read = fread (pz_data + space_used, 1, space_left, fp);\n \n@@ -74,7 +71,7 @@ load_file_data (fp)\n       space_used += size_read;\n     } while (! feof (fp));\n \n-  pz_data = realloc ((void*)pz_data, space_used+1 );\n+  pz_data = xrealloc ((void*)pz_data, space_used+1 );\n   pz_data[ space_used ] = NUL;\n   fclose (fp);\n "}, {"sha": "66417d00fee9c9a162246ca2f32023d36ab08a79", "filename": "gcc/mkdeps.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd3b81b4218512cfedc271dfde65c6011b6aefe9/gcc%2Fmkdeps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd3b81b4218512cfedc271dfde65c6011b6aefe9/gcc%2Fmkdeps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmkdeps.c?ref=dd3b81b4218512cfedc271dfde65c6011b6aefe9", "patch": "@@ -72,7 +72,7 @@ munge (filename)\n     }\n \n   /* Now we know how big to make the buffer.  */\n-  buffer = malloc (len + 1);\n+  buffer = xmalloc (len + 1);\n \n   for (p = filename, dst = buffer; *p; p++, dst++)\n     {"}]}