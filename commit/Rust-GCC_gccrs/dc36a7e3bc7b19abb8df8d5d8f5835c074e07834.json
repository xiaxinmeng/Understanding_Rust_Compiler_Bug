{"sha": "dc36a7e3bc7b19abb8df8d5d8f5835c074e07834", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGMzNmE3ZTNiYzdiMTlhYmI4ZGY4ZDVkOGY1ODM1YzA3NGUwNzgzNA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2011-09-02T09:28:52Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-02T09:28:52Z"}, "message": "exp_util.adb, [...]: Minor reformatting.\n\n2011-09-02  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_util.adb, exp_ch9.adb, sem_attr.adb, sem_ch6.adb: Minor\n\treformatting.\n\nFrom-SVN: r178450", "tree": {"sha": "fe34ef6c58c1a93d975ee7e97fca2c2f594e48ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe34ef6c58c1a93d975ee7e97fca2c2f594e48ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc36a7e3bc7b19abb8df8d5d8f5835c074e07834", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc36a7e3bc7b19abb8df8d5d8f5835c074e07834", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc36a7e3bc7b19abb8df8d5d8f5835c074e07834", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc36a7e3bc7b19abb8df8d5d8f5835c074e07834/comments", "author": null, "committer": null, "parents": [{"sha": "d5aa443cb48c9eeb9f27c945684d31bde90a41ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5aa443cb48c9eeb9f27c945684d31bde90a41ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5aa443cb48c9eeb9f27c945684d31bde90a41ed"}], "stats": {"total": 62, "additions": 33, "deletions": 29}, "files": [{"sha": "e5539734efc8cb80300818f22e9d152d4c2c1a96", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc36a7e3bc7b19abb8df8d5d8f5835c074e07834/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc36a7e3bc7b19abb8df8d5d8f5835c074e07834/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=dc36a7e3bc7b19abb8df8d5d8f5835c074e07834", "patch": "@@ -1,3 +1,8 @@\n+2011-09-02  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_util.adb, exp_ch9.adb, sem_attr.adb, sem_ch6.adb: Minor\n+\treformatting.\n+\n 2011-09-02  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* exp_ch9.adb (Install_Private_Data_Declarations): Add guards"}, {"sha": "ad7f6b1d06c02838b49d2e3de5ba8d81f3af12e3", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc36a7e3bc7b19abb8df8d5d8f5835c074e07834/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc36a7e3bc7b19abb8df8d5d8f5835c074e07834/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=dc36a7e3bc7b19abb8df8d5d8f5835c074e07834", "patch": "@@ -12481,11 +12481,11 @@ package body Exp_Ch9 is\n         or else Has_Interfaces (Protect_Rec)\n         or else\n           ((Has_Attach_Handler (Ptyp) or else Has_Interrupt_Handler (Ptyp))\n-              and then not Restriction_Active (No_Dynamic_Attachment))\n+             and then not Restriction_Active (No_Dynamic_Attachment))\n       then\n          declare\n-            Pkg_Id      : constant RTU_Id  :=\n-                            Corresponding_Runtime_Package (Ptyp);\n+            Pkg_Id : constant RTU_Id  := Corresponding_Runtime_Package (Ptyp);\n+\n             Called_Subp : RE_Id;\n \n          begin\n@@ -12536,8 +12536,7 @@ package body Exp_Ch9 is\n \n                   Append_To (Args,\n                     Make_Attribute_Reference (Loc,\n-                      Prefix =>\n-                        New_Reference_To (P_Arr, Loc),\n+                      Prefix         => New_Reference_To (P_Arr, Loc),\n                       Attribute_Name => Name_Unrestricted_Access));\n \n                   --  Build_Entry_Names generation flag. When set to true, the"}, {"sha": "f3d4c9a234690defaa1bc00f822b61726e5a53b8", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc36a7e3bc7b19abb8df8d5d8f5835c074e07834/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc36a7e3bc7b19abb8df8d5d8f5835c074e07834/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=dc36a7e3bc7b19abb8df8d5d8f5835c074e07834", "patch": "@@ -1526,14 +1526,14 @@ package body Exp_Util is\n            or else Present (Interface_List (Parent (Typ)))\n            or else\n              (((Has_Attach_Handler (Typ) and then not Restricted_Profile)\n-                  or else Has_Interrupt_Handler (Typ))\n+                 or else Has_Interrupt_Handler (Typ))\n                and then not Restriction_Active (No_Dynamic_Attachment))\n          then\n             if Abort_Allowed\n               or else Restriction_Active (No_Entry_Queue) = False\n               or else Number_Entries (Typ) > 1\n               or else (Has_Attach_Handler (Typ)\n-                         and then not Restricted_Profile)\n+                        and then not Restricted_Profile)\n             then\n                Pkg_Id := System_Tasking_Protected_Objects_Entries;\n             else\n@@ -1560,10 +1560,8 @@ package body Exp_Util is\n \n       if Act_ST = Etype (Exp) then\n          return;\n-\n       else\n-         Rewrite (Exp,\n-           Convert_To (Act_ST, Relocate_Node (Exp)));\n+         Rewrite (Exp, Convert_To (Act_ST, Relocate_Node (Exp)));\n          Analyze_And_Resolve (Exp, Act_ST);\n       end if;\n    end Convert_To_Actual_Subtype;\n@@ -1644,7 +1642,6 @@ package body Exp_Util is\n       Name_Req : Boolean := False) return Node_Id\n    is\n       New_Exp : Node_Id;\n-\n    begin\n       Remove_Side_Effects (Exp, Name_Req);\n       New_Exp := New_Copy_Tree (Exp);"}, {"sha": "789cb4763d447abf9bd84958d4f5a331611fb1b5", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc36a7e3bc7b19abb8df8d5d8f5835c074e07834/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc36a7e3bc7b19abb8df8d5d8f5835c074e07834/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=dc36a7e3bc7b19abb8df8d5d8f5835c074e07834", "patch": "@@ -4939,12 +4939,15 @@ package body Sem_Attr is\n       --  all scope checks and checks for aliased views are omitted.\n \n       when Attribute_Unrestricted_Access =>\n+\n+         --  If from source, deal with relevant restrictions\n+\n          if Comes_From_Source (N) then\n             Check_Restriction (No_Unchecked_Access, N);\n \n             if Nkind (P) in N_Has_Entity\n-                 and then Present (Entity (P))\n-                 and then Is_Object (Entity (P))\n+              and then Present (Entity (P))\n+              and then Is_Object (Entity (P))\n             then\n                Check_Restriction (No_Implicit_Aliasing, N);\n             end if;"}, {"sha": "9133046523b0237e0fc1f0b24055e5cf7169bf9c", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc36a7e3bc7b19abb8df8d5d8f5835c074e07834/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc36a7e3bc7b19abb8df8d5d8f5835c074e07834/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=dc36a7e3bc7b19abb8df8d5d8f5835c074e07834", "patch": "@@ -5462,23 +5462,25 @@ package body Sem_Ch6 is\n \n --        Inherited : constant Subprogram_List :=\n --                      Inherited_Subprograms (Spec_Id);\n-      --  List of subprograms inherited by this subprogram\n+--        --  List of subprograms inherited by this subprogram\n+      --  Code is currently commented out as, in some cases, it causes crashes\n+      --  because Direct_Primitive_Operations is not available for a private\n+      --  type???\n \n-      Last_Postcondition         : Node_Id := Empty;\n+      Last_Postcondition : Node_Id := Empty;\n       --  Last postcondition on the subprogram, or else Empty if either no\n       --  postcondition or only inherited postconditions.\n \n       Attribute_Result_Mentioned : Boolean := False;\n       --  Whether attribute 'Result is mentioned in a postcondition\n \n-      Post_State_Mentioned       : Boolean := False;\n+      Post_State_Mentioned : Boolean := False;\n       --  Whether some expression mentioned in a postcondition can have a\n       --  different value in the post-state than in the pre-state.\n \n       function Check_Attr_Result (N : Node_Id) return Traverse_Result;\n-      --  Check whether N is a reference to the attribute 'Result, and if so\n-      --  set Attribute_Result_Mentioned and return Abandon. Otherwise return\n-      --  OK.\n+      --  Check if N is a reference to the attribute 'Result, and if so set\n+      --  Attribute_Result_Mentioned and return Abandon. Otherwise return OK.\n \n       function Check_Post_State (N : Node_Id) return Traverse_Result;\n       --  Check whether the value of evaluating N can be different in the\n@@ -5487,9 +5489,7 @@ package body Sem_Ch6 is\n       --  reference to attribute 'Old, in order to ignore its prefix, which\n       --  is precisely evaluated in the pre-state. Otherwise return OK.\n \n-      procedure Process_Post_Conditions\n-        (Spec  : Node_Id;\n-         Class : Boolean);\n+      procedure Process_Post_Conditions (Spec : Node_Id; Class : Boolean);\n       --  This processes the Spec_PPC_List from Spec, processing any\n       --  postconditions from the list. If Class is True, then only\n       --  postconditions marked with Class_Present are considered. The\n@@ -5506,8 +5506,7 @@ package body Sem_Ch6 is\n       function Check_Attr_Result (N : Node_Id) return Traverse_Result is\n       begin\n          if Nkind (N) = N_Attribute_Reference\n-           and then\n-             Get_Attribute_Id (Attribute_Name (N)) = Attribute_Result\n+           and then Get_Attribute_Id (Attribute_Name (N)) = Attribute_Result\n          then\n             Attribute_Result_Mentioned := True;\n             return Abandon;\n@@ -5531,6 +5530,7 @@ package body Sem_Ch6 is\n \n             when N_Identifier    |\n                  N_Expanded_Name =>\n+\n                declare\n                   E : constant Entity_Id := Entity (N);\n                begin\n@@ -5583,7 +5583,7 @@ package body Sem_Ch6 is\n          loop\n             Arg := First (Pragma_Argument_Associations (Prag));\n \n-            --  Since pre- and postconditions are listed in reverse order, the\n+            --  Since pre- and post-conditions are listed in reverse order, the\n             --  first postcondition in the list is the last in the source.\n \n             if Pragma_Name (Prag) = Name_Postcondition\n@@ -5607,7 +5607,7 @@ package body Sem_Ch6 is\n               and then not Class\n             then\n                Post_State_Mentioned := False;\n-               Ignored              := Find_Post_State (Arg);\n+               Ignored := Find_Post_State (Arg);\n \n                if not Post_State_Mentioned then\n                   Error_Msg_N (\"?postcondition only refers to pre-state\",\n@@ -5635,7 +5635,7 @@ package body Sem_Ch6 is\n \n       --  Code is currently commented out as, in some cases, it causes crashes\n       --  because Direct_Primitive_Operations is not available for a private\n-      --  type. This may cause more warnings to be issued than necessary.\n+      --  type. This may cause more warnings to be issued than necessary. ???\n \n --        for J in Inherited'Range loop\n --           if Present (Spec_PPC_List (Contract (Inherited (J)))) then\n@@ -5662,8 +5662,8 @@ package body Sem_Ch6 is\n    procedure Check_Subprogram_Order (N : Node_Id) is\n \n       function Subprogram_Name_Greater (S1, S2 : String) return Boolean;\n-      --  This is used to check if S1 > S2 in the sense required by this\n-      --  test, for example nameab < namec, but name2 < name10.\n+      --  This is used to check if S1 > S2 in the sense required by this test,\n+      --  for example nameab < namec, but name2 < name10.\n \n       -----------------------------\n       -- Subprogram_Name_Greater --"}]}