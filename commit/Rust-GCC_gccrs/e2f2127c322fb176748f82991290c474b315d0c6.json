{"sha": "e2f2127c322fb176748f82991290c474b315d0c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJmMjEyN2MzMjJmYjE3Njc0OGY4Mjk5MTI5MGM0NzRiMzE1ZDBjNg==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-07-12T02:00:57Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-07-12T02:00:57Z"}, "message": "Make andsi/iorsi/xorsi match actual machine\n\nFrom-SVN: r1564", "tree": {"sha": "e0f56498aea6111db691e986cff591f632ae638d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0f56498aea6111db691e986cff591f632ae638d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2f2127c322fb176748f82991290c474b315d0c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2f2127c322fb176748f82991290c474b315d0c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2f2127c322fb176748f82991290c474b315d0c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2f2127c322fb176748f82991290c474b315d0c6/comments", "author": null, "committer": null, "parents": [{"sha": "d0ff7286ba9825c4d02c2bc8ba09be59201d2cbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0ff7286ba9825c4d02c2bc8ba09be59201d2cbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0ff7286ba9825c4d02c2bc8ba09be59201d2cbc"}], "stats": {"total": 19, "additions": 6, "deletions": 13}, "files": [{"sha": "65c9764452e186d50f4061a2351690b8df05a670", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2f2127c322fb176748f82991290c474b315d0c6/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2f2127c322fb176748f82991290c474b315d0c6/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=e2f2127c322fb176748f82991290c474b315d0c6", "patch": "@@ -1148,17 +1148,10 @@ move\\\\t%0,%z4\\\\n\\\\\n ;;  ....................\n ;;\n \n-;; Be more liberal in allowing logical operations than the machine\n-;; actually supports, until the reload phase forces the large integers\n-;; into registers.  This causes better code to be generated for\n-;; bitfields, since the optimizer can fold things together, at the\n-;; expense of not CSE'ing or moving the constant out of loops, and\n-;; having reload load the constant into a scratch register.\n-\n (define_insn \"andsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n-\t(and:SI (match_operand:SI 1 \"arith32_operand\" \"%d,d\")\n-\t\t(match_operand:SI 2 \"arith32_operand\" \"d,K\")))]\n+\t(and:SI (match_operand:SI 1 \"uns_arith_operand\" \"%d,d\")\n+\t\t(match_operand:SI 2 \"uns_arith_operand\" \"d,K\")))]\n   \"\"\n   \"@\n    and\\\\t%0,%1,%2\n@@ -1192,8 +1185,8 @@ move\\\\t%0,%z4\\\\n\\\\\n \n (define_insn \"iorsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n-\t(ior:SI (match_operand:SI 1 \"arith32_operand\" \"%d,d\")\n-\t\t(match_operand:SI 2 \"arith32_operand\" \"d,K\")))]\n+\t(ior:SI (match_operand:SI 1 \"uns_arith_operand\" \"%d,d\")\n+\t\t(match_operand:SI 2 \"uns_arith_operand\" \"d,K\")))]\n   \"\"\n   \"@\n    or\\\\t%0,%1,%2\n@@ -1227,8 +1220,8 @@ move\\\\t%0,%z4\\\\n\\\\\n \n (define_insn \"xorsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n-\t(xor:SI (match_operand:SI 1 \"arith32_operand\" \"%d,d\")\n-\t\t(match_operand:SI 2 \"arith32_operand\" \"d,K\")))]\n+\t(xor:SI (match_operand:SI 1 \"uns_arith_operand\" \"%d,d\")\n+\t\t(match_operand:SI 2 \"uns_arith_operand\" \"d,K\")))]\n   \"\"\n   \"@\n    xor\\\\t%0,%1,%2"}]}