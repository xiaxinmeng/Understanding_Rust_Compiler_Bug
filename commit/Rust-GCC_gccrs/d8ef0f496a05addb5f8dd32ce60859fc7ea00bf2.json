{"sha": "d8ef0f496a05addb5f8dd32ce60859fc7ea00bf2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDhlZjBmNDk2YTA1YWRkYjVmOGRkMzJjZTYwODU5ZmM3ZWEwMGJmMg==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2010-11-09T10:26:09Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2010-11-09T10:26:09Z"}, "message": "inclhack.def (irix_pthread_init): New fix.\n\n\t* inclhack.def (irix_pthread_init): New fix.\n\t* fixincl.x: Regenerate.\n\t* tests/base/pthread.h [IRIX_PTHREAD_INIT_CHECK]: New test.\n\nFrom-SVN: r166478", "tree": {"sha": "14e9f4f1d8ec4a6d7e6b3a446ffad4829e0fadc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14e9f4f1d8ec4a6d7e6b3a446ffad4829e0fadc7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8ef0f496a05addb5f8dd32ce60859fc7ea00bf2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8ef0f496a05addb5f8dd32ce60859fc7ea00bf2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8ef0f496a05addb5f8dd32ce60859fc7ea00bf2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8ef0f496a05addb5f8dd32ce60859fc7ea00bf2/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c0f8c3b4f10005d9c88e24cc4a8d1377fd11db28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0f8c3b4f10005d9c88e24cc4a8d1377fd11db28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0f8c3b4f10005d9c88e24cc4a8d1377fd11db28"}], "stats": {"total": 84, "additions": 79, "deletions": 5}, "files": [{"sha": "b507d65a9f330032bda2d528ebb7dbd45966ecd9", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8ef0f496a05addb5f8dd32ce60859fc7ea00bf2/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8ef0f496a05addb5f8dd32ce60859fc7ea00bf2/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=d8ef0f496a05addb5f8dd32ce60859fc7ea00bf2", "patch": "@@ -1,3 +1,9 @@\n+2010-11-09  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* inclhack.def (irix_pthread_init): New fix.\n+\t* fixincl.x: Regenerate.\n+\t* tests/base/pthread.h [IRIX_PTHREAD_INIT_CHECK]: New test.\n+\n 2010-10-20  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR c++/46024"}, {"sha": "d9117d8e3fd5bf8575b38beb286c3a0fab1c3eae", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 48, "deletions": 5, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8ef0f496a05addb5f8dd32ce60859fc7ea00bf2/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8ef0f496a05addb5f8dd32ce60859fc7ea00bf2/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=d8ef0f496a05addb5f8dd32ce60859fc7ea00bf2", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Monday October 18, 2010 at 11:11:18 PM MEST\n+ * It has been AutoGen-ed  Monday November  8, 2010 at 08:33:47 PM MET\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Mon Oct 18 23:11:18 MEST 2010\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Mon Nov  8 20:33:47 MET 2010\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 209 fixup descriptions.\n+ * This file contains 210 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -4663,6 +4663,43 @@ static const char* apzIrix_Limits_ConstPatch[] = {\n     \"extern __const \",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Irix_Pthread_Init fix\n+ */\n+tSCC zIrix_Pthread_InitName[] =\n+     \"irix_pthread_init\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zIrix_Pthread_InitList[] =\n+  \"pthread.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzIrix_Pthread_InitMachs[] = {\n+        \"mips-sgi-irix6.5\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zIrix_Pthread_InitSelect0[] =\n+       \"^(#define[ \\t]+PTHREAD_.*_INITIALIZER[ \\t]+)(\\\\{ 0 \\\\})\";\n+\n+#define    IRIX_PTHREAD_INIT_TEST_CT  1\n+static tTestDesc aIrix_Pthread_InitTests[] = {\n+  { TT_EGREP,    zIrix_Pthread_InitSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Irix_Pthread_Init\n+ */\n+static const char* apzIrix_Pthread_InitPatch[] = {\n+    \"format\",\n+    \"%1{ %2 }\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Irix_Socklen_T fix\n@@ -8515,9 +8552,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          248\n+#define REGEX_COUNT          249\n #define MACH_LIST_SIZE_LIMIT 181\n-#define FIX_COUNT            209\n+#define FIX_COUNT            210\n \n /*\n  *  Enumerate the fixes\n@@ -8636,6 +8673,7 @@ typedef enum {\n     IRIX_ASM_APOSTROPHE_FIXIDX,\n     IRIX_COMPLEX_FIXIDX,\n     IRIX_LIMITS_CONST_FIXIDX,\n+    IRIX_PTHREAD_INIT_FIXIDX,\n     IRIX_SOCKLEN_T_FIXIDX,\n     IRIX_STDINT_C99_MODE_FIXIDX,\n     IRIX_STDINT_C99_TYPES_FIXIDX,\n@@ -9300,6 +9338,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      IRIX_LIMITS_CONST_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aIrix_Limits_ConstTests,   apzIrix_Limits_ConstPatch, 0 },\n \n+  {  zIrix_Pthread_InitName,    zIrix_Pthread_InitList,\n+     apzIrix_Pthread_InitMachs,\n+     IRIX_PTHREAD_INIT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aIrix_Pthread_InitTests,   apzIrix_Pthread_InitPatch, 0 },\n+\n   {  zIrix_Socklen_TName,    zIrix_Socklen_TList,\n      apzIrix_Socklen_TMachs,\n      IRIX_SOCKLEN_T_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "ac8f795834b13a3e210c44f10eb42d9ff51b10d2", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8ef0f496a05addb5f8dd32ce60859fc7ea00bf2/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8ef0f496a05addb5f8dd32ce60859fc7ea00bf2/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=d8ef0f496a05addb5f8dd32ce60859fc7ea00bf2", "patch": "@@ -2483,6 +2483,24 @@ fix = {\n };\n \n \n+/*\n+ *  IRIX 6.5 PTHREAD_*_INITIALIZER need an additional level of braces in\n+ *  <pthread.h>.\n+ */\n+fix = {\n+    hackname    = irix_pthread_init;\n+    files       = pthread.h;\n+    select      = \"^(#define[ \\t]+PTHREAD_.*_INITIALIZER[ \\t]+)(\\\\{ 0 \\\\})\";\n+\n+    mach\t= \"mips-sgi-irix6.5\";\n+    c_fix       = format;\n+    c_fix_arg   = \"%1{ %2 }\";\n+    test_text   = \"#define PTHREAD_MUTEX_INITIALIZER\t{ 0 }\\n\"\n+\t\t  \"#define PTHREAD_COND_INITIALIZER\t{ 0 }\\n\"\n+\t\t  \"#define PTHREAD_RWLOCK_INITIALIZER\t{ 0 }\";\n+};\n+\n+\n /*\n  *  IRIX 6.5.1[78] <sys/socket.h> has a broken definition of socklen_t.\n  *  Various socket function prototypes use different types instead,"}, {"sha": "834f0519ed2f2489acd4d67d082cb0bdde58c572", "filename": "fixincludes/tests/base/pthread.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8ef0f496a05addb5f8dd32ce60859fc7ea00bf2/fixincludes%2Ftests%2Fbase%2Fpthread.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8ef0f496a05addb5f8dd32ce60859fc7ea00bf2/fixincludes%2Ftests%2Fbase%2Fpthread.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fpthread.h?ref=d8ef0f496a05addb5f8dd32ce60859fc7ea00bf2", "patch": "@@ -96,6 +96,13 @@\n #endif  /* GLIBC_MUTEX_INIT_CHECK */\n \n \n+#if defined( IRIX_PTHREAD_INIT_CHECK )\n+#define PTHREAD_MUTEX_INITIALIZER\t{ { 0 } }\n+#define PTHREAD_COND_INITIALIZER\t{ { 0 } }\n+#define PTHREAD_RWLOCK_INITIALIZER\t{ { 0 } }\n+#endif  /* IRIX_PTHREAD_INIT_CHECK */\n+\n+\n #if defined( PTHREAD_INCOMPLETE_STRUCT_ARGUMENT_CHECK )\n extern int __sigsetjmp (struct __jmp_buf_tag *__env, int __savemask);\n #endif  /* PTHREAD_INCOMPLETE_STRUCT_ARGUMENT_CHECK */"}]}