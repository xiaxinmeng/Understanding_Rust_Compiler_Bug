{"sha": "69a0c1741e5727e98cb037dffbc98d82e60dc474", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjlhMGMxNzQxZTU3MjdlOThjYjAzN2RmZmJjOThkODJlNjBkYzQ3NA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-05-06T09:29:35Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-05-06T09:29:35Z"}, "message": "[multiple changes]\n\n2009-05-06  Gary Dismukes  <dismukes@adacore.com>\n\n\t* gnat_ugn.texi: Fix typo.\n\n2009-05-06  Thomas Quinot  <quinot@adacore.com>\n\n\t* g-debuti.adb: Minor reformatting\n\n\t* exp_attr.adb: Minor reformatting\n\n2009-05-06  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_aggr.adb: Minor reformatting.\n\n\t* g-socthi-vms.adb: Minor reformatting\n\n2009-05-06  Bob Duff  <duff@adacore.com>\n\n\t* g-table.ads, g-table.adb, g-dyntab.ads, g-dyntab.adb:\n\t(Append_All): Add Append_All to g-table and g-dyntab, similar to table.\n\nFrom-SVN: r147162", "tree": {"sha": "1030629a237c775cfc1245c850a629994e35ccdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1030629a237c775cfc1245c850a629994e35ccdd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69a0c1741e5727e98cb037dffbc98d82e60dc474", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69a0c1741e5727e98cb037dffbc98d82e60dc474", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69a0c1741e5727e98cb037dffbc98d82e60dc474", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69a0c1741e5727e98cb037dffbc98d82e60dc474/comments", "author": null, "committer": null, "parents": [{"sha": "4e0d20ca84575c7e202a444e24291b888b86920e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e0d20ca84575c7e202a444e24291b888b86920e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e0d20ca84575c7e202a444e24291b888b86920e"}], "stats": {"total": 76, "additions": 64, "deletions": 12}, "files": [{"sha": "d5b500565d12cf1bbacca03f5526d826e89c15a8", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69a0c1741e5727e98cb037dffbc98d82e60dc474/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69a0c1741e5727e98cb037dffbc98d82e60dc474/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=69a0c1741e5727e98cb037dffbc98d82e60dc474", "patch": "@@ -1,3 +1,24 @@\n+2009-05-06  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* gnat_ugn.texi: Fix typo.\n+\n+2009-05-06  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* g-debuti.adb: Minor reformatting\n+\n+\t* exp_attr.adb: Minor reformatting\n+\n+2009-05-06  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_aggr.adb: Minor reformatting.\n+\n+\t* g-socthi-vms.adb: Minor reformatting\n+\n+2009-05-06  Bob Duff  <duff@adacore.com>\n+\n+\t* g-table.ads, g-table.adb, g-dyntab.ads, g-dyntab.adb:\n+\t(Append_All): Add Append_All to g-table and g-dyntab, similar to table.\n+\n 2009-05-06  Bob Duff  <duff@adacore.com>\n \n \t* gnat_ugn.texi, gnat_rm.texi: Add missing documentation for warnings"}, {"sha": "6d8351698414971fa50c98070dd4298a9d73d19a", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69a0c1741e5727e98cb037dffbc98d82e60dc474/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69a0c1741e5727e98cb037dffbc98d82e60dc474/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=69a0c1741e5727e98cb037dffbc98d82e60dc474", "patch": "@@ -1218,7 +1218,7 @@ package body Exp_Attr is\n       --  A reference to P'Body_Version or P'Version is expanded to\n \n       --     Vnn : Unsigned;\n-      --     pragma Import (C, Vnn, \"uuuuT\";\n+      --     pragma Import (C, Vnn, \"uuuuT\");\n       --     ...\n       --     Get_Version_String (Vnn)\n "}, {"sha": "20731fb0c2d539a89a71208f9f666b5d9cfc1569", "filename": "gcc/ada/g-debuti.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69a0c1741e5727e98cb037dffbc98d82e60dc474/gcc%2Fada%2Fg-debuti.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69a0c1741e5727e98cb037dffbc98d82e60dc474/gcc%2Fada%2Fg-debuti.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-debuti.adb?ref=69a0c1741e5727e98cb037dffbc98d82e60dc474", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1997-2005, AdaCore                     --\n+--                     Copyright (C) 1997-2009, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -36,8 +36,8 @@ with System.Storage_Elements; use System.Storage_Elements;\n \n package body GNAT.Debug_Utilities is\n \n-      H : constant array (0 .. 15) of Character := \"0123456789ABCDEF\";\n-      --  Table of hex digits\n+   H : constant array (0 .. 15) of Character := \"0123456789ABCDEF\";\n+   --  Table of hex digits\n \n    -----------\n    -- Image --"}, {"sha": "1ebebe4d95d8474e0d9696638bc13d86edca52d3", "filename": "gcc/ada/g-dyntab.adb", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69a0c1741e5727e98cb037dffbc98d82e60dc474/gcc%2Fada%2Fg-dyntab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69a0c1741e5727e98cb037dffbc98d82e60dc474/gcc%2Fada%2Fg-dyntab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dyntab.adb?ref=69a0c1741e5727e98cb037dffbc98d82e60dc474", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2000-2008, AdaCore                     --\n+--                     Copyright (C) 2000-2009, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -85,6 +85,17 @@ package body GNAT.Dynamic_Tables is\n       Set_Item (T, Table_Index_Type (T.P.Last_Val + 1), New_Val);\n    end Append;\n \n+   ----------------\n+   -- Append_All --\n+   ----------------\n+\n+   procedure Append_All (T : in out Instance; New_Vals : Table_Type) is\n+   begin\n+      for J in New_Vals'Range loop\n+         Append (T, New_Vals (J));\n+      end loop;\n+   end Append_All;\n+\n    --------------------\n    -- Decrement_Last --\n    --------------------"}, {"sha": "897d7008f82022ac0f957aa3971c5fa0474ff8a1", "filename": "gcc/ada/g-dyntab.ads", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69a0c1741e5727e98cb037dffbc98d82e60dc474/gcc%2Fada%2Fg-dyntab.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69a0c1741e5727e98cb037dffbc98d82e60dc474/gcc%2Fada%2Fg-dyntab.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dyntab.ads?ref=69a0c1741e5727e98cb037dffbc98d82e60dc474", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 2000-2008, AdaCore                     --\n+--                     Copyright (C) 2000-2009, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -169,6 +169,9 @@ package GNAT.Dynamic_Tables is\n    --  i.e. the table size is increased by one, and the given new item\n    --  stored in the newly created table element.\n \n+   procedure Append_All (T : in out Instance; New_Vals : Table_Type);\n+   --  Appends all components of New_Vals\n+\n    procedure Set_Item\n      (T     : in out Instance;\n       Index : Table_Index_Type;"}, {"sha": "6384598f07ab0fa20dd971158edcff57df5516d2", "filename": "gcc/ada/g-socthi-vms.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69a0c1741e5727e98cb037dffbc98d82e60dc474/gcc%2Fada%2Fg-socthi-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69a0c1741e5727e98cb037dffbc98d82e60dc474/gcc%2Fada%2Fg-socthi-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vms.adb?ref=69a0c1741e5727e98cb037dffbc98d82e60dc474", "patch": "@@ -51,7 +51,7 @@ package body GNAT.Sockets.Thin is\n    --  when a thread wants to perform a blocking IO operation. But the user can\n    --  also set a socket in non-blocking mode by purpose. In order to make a\n    --  difference between these two situations, we track the origin of\n-   --  non-blocking mode in Non_Blocking_Sockets. If S is in\n+   --  non-blocking mode in Non_Blocking_Sockets. Note that if S is in\n    --  Non_Blocking_Sockets, it has been set in non-blocking mode by the user.\n \n    Quantum : constant Duration := 0.2;\n@@ -215,7 +215,6 @@ package body GNAT.Sockets.Thin is\n \n       if Res = Failure and then Errno = SOSC.EISCONN then\n          return Thin_Common.Success;\n-\n       else\n          return Res;\n       end if;\n@@ -310,6 +309,7 @@ package body GNAT.Sockets.Thin is\n       pragma Import (Ada, GNAT_Msg);\n \n       VMS_Msg : aliased VMS_Msghdr := VMS_Msghdr (GNAT_Msg);\n+\n    begin\n       loop\n          Res := Syscall_Recvmsg (S, VMS_Msg'Address, Flags);\n@@ -319,6 +319,7 @@ package body GNAT.Sockets.Thin is\n            or else Errno /= SOSC.EWOULDBLOCK;\n          delay Quantum;\n       end loop;\n+\n       GNAT_Msg := Msghdr (VMS_Msg);\n \n       return ssize_t (Res);\n@@ -350,6 +351,7 @@ package body GNAT.Sockets.Thin is\n            or else Errno /= SOSC.EWOULDBLOCK;\n          delay Quantum;\n       end loop;\n+\n       GNAT_Msg := Msghdr (VMS_Msg);\n \n       return ssize_t (Res);"}, {"sha": "bcc025f42a70dee1728d39152b0c476af6566394", "filename": "gcc/ada/g-table.adb", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69a0c1741e5727e98cb037dffbc98d82e60dc474/gcc%2Fada%2Fg-table.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69a0c1741e5727e98cb037dffbc98d82e60dc474/gcc%2Fada%2Fg-table.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-table.adb?ref=69a0c1741e5727e98cb037dffbc98d82e60dc474", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1998-2008, AdaCore                     --\n+--                     Copyright (C) 1998-2009, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -96,6 +96,17 @@ package body GNAT.Table is\n       Set_Item (Table_Index_Type (Last_Val + 1), New_Val);\n    end Append;\n \n+   ----------------\n+   -- Append_All --\n+   ----------------\n+\n+   procedure Append_All (New_Vals : Table_Type) is\n+   begin\n+      for J in New_Vals'Range loop\n+         Append (New_Vals (J));\n+      end loop;\n+   end Append_All;\n+\n    --------------------\n    -- Decrement_Last --\n    --------------------"}, {"sha": "3a344a532f34377861b86e682f67a17fc48e079c", "filename": "gcc/ada/g-table.ads", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69a0c1741e5727e98cb037dffbc98d82e60dc474/gcc%2Fada%2Fg-table.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69a0c1741e5727e98cb037dffbc98d82e60dc474/gcc%2Fada%2Fg-table.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-table.ads?ref=69a0c1741e5727e98cb037dffbc98d82e60dc474", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1998-2008, AdaCore                     --\n+--                     Copyright (C) 1998-2009, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -184,6 +184,9 @@ package GNAT.Table is\n    --  i.e. the table size is increased by one, and the given new item\n    --  stored in the newly created table element.\n \n+   procedure Append_All (New_Vals : Table_Type);\n+   --  Appends all components of New_Vals\n+\n    procedure Set_Item\n      (Index : Table_Index_Type;\n       Item  : Table_Component_Type);"}, {"sha": "10ca8ff7cc07871cf174e571b0f1e355b7c3f995", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69a0c1741e5727e98cb037dffbc98d82e60dc474/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69a0c1741e5727e98cb037dffbc98d82e60dc474/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=69a0c1741e5727e98cb037dffbc98d82e60dc474", "patch": "@@ -3345,7 +3345,7 @@ In this case the components DT inherited from the C++ side must be\n initialized by a C++ constructor, and the additional Ada components\n of type DT are initialized by GNAT. The initialization of such an\n object is done either by default, or by means of a function returning\n-an aggregate of type DT, or by means of an extended aggregate.\n+an aggregate of type DT, or by means of an extension aggregate.\n \n @smallexample @c ada\n   Obj5 : DT;"}, {"sha": "6bd6e636f7a7926033e67ff64789a3902d4741e6", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69a0c1741e5727e98cb037dffbc98d82e60dc474/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69a0c1741e5727e98cb037dffbc98d82e60dc474/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=69a0c1741e5727e98cb037dffbc98d82e60dc474", "patch": "@@ -3083,6 +3083,7 @@ package body Sem_Aggr is\n                else\n                   Root_Typ := Base_Type (Etype (Ancestor_Part (N)));\n                end if;\n+\n             else\n                Root_Typ := Root_Type (Typ);\n \n@@ -3461,7 +3462,7 @@ package body Sem_Aggr is\n                                    (Inner_Comp, New_Aggr,\n                                      Component_Associations (Aggr));\n \n-                                 --  Collect disciminant values, and recurse.\n+                                 --  Collect disciminant values and recurse\n \n                                  Add_Discriminant_Values\n                                    (New_Aggr, Assoc_List);"}]}