{"sha": "53e0077e6f0a0240e7c92c2450b92f2f008f360d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTNlMDA3N2U2ZjBhMDI0MGU3YzkyYzI0NTBiOTJmMmYwMDhmMzYwZA==", "commit": {"author": {"name": "Bob Wilson", "email": "bob.wilson@acm.org", "date": "2005-05-10T15:56:54Z"}, "committer": {"name": "Bob Wilson", "email": "bwilson@gcc.gnu.org", "date": "2005-05-10T15:56:54Z"}, "message": "lib1funcs.asm (__udivsi3, __divsi3): Rearrange special case code to avoid one move instruction.\n\n\t* config/xtensa/lib1funcs.asm (__udivsi3, __divsi3): Rearrange special\n\tcase code to avoid one move instruction.\n\t(__umodsi3, __modsi3): Merge duplicated code sequences.\n\nFrom-SVN: r99520", "tree": {"sha": "4715ee966d698dfff465a73c768442861f0c32b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4715ee966d698dfff465a73c768442861f0c32b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53e0077e6f0a0240e7c92c2450b92f2f008f360d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53e0077e6f0a0240e7c92c2450b92f2f008f360d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53e0077e6f0a0240e7c92c2450b92f2f008f360d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53e0077e6f0a0240e7c92c2450b92f2f008f360d/comments", "author": null, "committer": null, "parents": [{"sha": "ee58dffdbc2874e053c60629b2f1c04384e2248d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee58dffdbc2874e053c60629b2f1c04384e2248d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee58dffdbc2874e053c60629b2f1c04384e2248d"}], "stats": {"total": 59, "additions": 28, "deletions": 31}, "files": [{"sha": "8b9235fa4e8848547ae52b97ec0416703806c531", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53e0077e6f0a0240e7c92c2450b92f2f008f360d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53e0077e6f0a0240e7c92c2450b92f2f008f360d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=53e0077e6f0a0240e7c92c2450b92f2f008f360d", "patch": "@@ -1,3 +1,9 @@\n+2005-05-10  Bob Wilson  <bob.wilson@acm.org>\n+\n+\t* config/xtensa/lib1funcs.asm (__udivsi3, __divsi3): Rearrange special\n+\tcase code to avoid one move instruction.\n+\t(__umodsi3, __modsi3): Merge duplicated code sequences.\n+\n 2005-05-10  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/mips/24k.md, config/sh/divtab.c, config/sh/sh.c,"}, {"sha": "bc3c45218f04e3c54122812010c5ba25f92ef6e0", "filename": "gcc/config/xtensa/lib1funcs.asm", "status": "modified", "additions": 22, "deletions": 31, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53e0077e6f0a0240e7c92c2450b92f2f008f360d/gcc%2Fconfig%2Fxtensa%2Flib1funcs.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53e0077e6f0a0240e7c92c2450b92f2f008f360d/gcc%2Fconfig%2Fxtensa%2Flib1funcs.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Flib1funcs.asm?ref=53e0077e6f0a0240e7c92c2450b92f2f008f360d", "patch": "@@ -299,19 +299,21 @@ __udivsi3:\n .Lreturn:\n \tabi_return\n \n+.Lle_one:\n+\tbeqz\ta3, .Lerror\t# if divisor == 1, return the dividend\n+\tabi_return\n+\n .Lspecial:\n \t# return dividend >= divisor\n-\tmovi\ta2, 0\n-\tbltu\ta6, a3, .Lreturn2\n+\tbltu\ta6, a3, .Lreturn0\n \tmovi\ta2, 1\n-.Lreturn2:\n \tabi_return\n \n-.Lle_one:\n-\tbeqz\ta3, .Lerror\t# if divisor == 1, return the dividend\n-\tabi_return\n .Lerror:\n-\tmovi\ta2, 0\t\t# just return 0; could throw an exception\n+\t# just return 0; could throw an exception\n+\n+.Lreturn0:\n+\tmovi\ta2, 0\n \tabi_return\n \t.size\t__udivsi3,.-__udivsi3\n \n@@ -361,22 +363,24 @@ __divsi3:\n \tmovltz\ta2, a5, a7\t# return (sign < 0) ? -quotient : quotient\n \tabi_return\n \n+.Lle_one:\n+\tbeqz\ta3, .Lerror\n+\tneg\ta2, a6\t\t# if udivisor == 1, then return...\n+\tmovgez\ta2, a6, a7\t# (sign < 0) ? -udividend : udividend\n+\tabi_return\n+\n .Lspecial:\n-\tmovi\ta2, 0\n-\tbltu\ta6, a3, .Lreturn2 #  if dividend < divisor, return 0\n+\tbltu\ta6, a3, .Lreturn0 #  if dividend < divisor, return 0\n \tmovi\ta2, 1\n \tmovi\ta4, -1\n \tmovltz\ta2, a4, a7\t# else return (sign < 0) ? -1 :\t 1 \n-.Lreturn2:\n \tabi_return\n \n-.Lle_one:\n-\tbeqz\ta3, .Lerror\n-\tneg\ta2, a6\t\t# if udivisor == 1, then return...\n-\tmovgez\ta2, a6, a7\t# (sign < 0) ? -udividend : udividend\n-\tabi_return\n .Lerror:\n-\tmovi\ta2, 0\t\t# just return 0; could throw an exception\n+\t# just return 0; could throw an exception\n+\n+.Lreturn0:\n+\tmovi\ta2, 0\n \tabi_return\n \t.size\t__divsi3,.-__divsi3\n \n@@ -414,17 +418,12 @@ __umodsi3:\n #endif /* !XCHAL_HAVE_LOOPS */\n .Lloopend:\n \n+.Lspecial:\n \tbltu\ta2, a3, .Lreturn\n \tsub\ta2, a2, a3\t# subtract once more if dividend >= divisor\n .Lreturn:\n \tabi_return\n \n-.Lspecial:\n-\tbltu\ta2, a3, .Lreturn2\n-\tsub\ta2, a2, a3\t# subtract once if dividend >= divisor\n-.Lreturn2:\n-\tabi_return\n-\n .Lle_one:\n \t# the divisor is either 0 or 1, so just return 0.\n \t# someday we may want to throw an exception if the divisor is 0.\n@@ -468,6 +467,7 @@ __modsi3:\n #endif /* !XCHAL_HAVE_LOOPS */\n .Lloopend:\n \n+.Lspecial:\n \tbltu\ta2, a3, .Lreturn\n \tsub\ta2, a2, a3\t# subtract once more if udividend >= udivisor\n .Lreturn:\n@@ -476,15 +476,6 @@ __modsi3:\n .Lpositive:\t\n \tabi_return\n \n-.Lspecial:\n-\tbltu\ta2, a3, .Lreturn2\n-\tsub\ta2, a2, a3\t# subtract once if dividend >= divisor\n-.Lreturn2:\n-\tbgez\ta7, .Lpositive2\n-\tneg\ta2, a2\t\t# if (dividend < 0), return -udividend\n-.Lpositive2:\t\n-\tabi_return\n-\n .Lle_one:\n \t# udivisor is either 0 or 1, so just return 0.\n \t# someday we may want to throw an exception if udivisor is 0."}]}