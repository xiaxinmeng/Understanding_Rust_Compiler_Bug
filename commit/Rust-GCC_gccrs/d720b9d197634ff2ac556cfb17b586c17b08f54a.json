{"sha": "d720b9d197634ff2ac556cfb17b586c17b08f54a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDcyMGI5ZDE5NzYzNGZmMmFjNTU2Y2ZiMTdiNTg2YzE3YjA4ZjU0YQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-27T18:56:31Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-27T18:56:31Z"}, "message": "(expand_expr...\n\n(expand_expr, case CONSTRUCTOR): If constant and large enough for\nmemcpy to be used, build constructor into static memory.\n\nFrom-SVN: r7365", "tree": {"sha": "97cfe692c0df086b77ca442dcbafe94bcecf8d35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97cfe692c0df086b77ca442dcbafe94bcecf8d35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d720b9d197634ff2ac556cfb17b586c17b08f54a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d720b9d197634ff2ac556cfb17b586c17b08f54a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d720b9d197634ff2ac556cfb17b586c17b08f54a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d720b9d197634ff2ac556cfb17b586c17b08f54a/comments", "author": null, "committer": null, "parents": [{"sha": "d0c84fdaa3b80b4ecb0c6f7afa44082b92fa457b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0c84fdaa3b80b4ecb0c6f7afa44082b92fa457b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0c84fdaa3b80b4ecb0c6f7afa44082b92fa457b"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "9c5f0a4229f3d9a9809c3cfdf0c263625b50bd98", "filename": "gcc/expr.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d720b9d197634ff2ac556cfb17b586c17b08f54a/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d720b9d197634ff2ac556cfb17b586c17b08f54a/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=d720b9d197634ff2ac556cfb17b586c17b08f54a", "patch": "@@ -4102,12 +4102,18 @@ expand_expr (exp, target, tmode, modifier)\n \t if this is a non-BLKmode mode, let it store a field at a time\n \t since that should make a CONST_INT or CONST_DOUBLE when we\n \t fold.  Likewise, if we have a target we can use, it is best to\n-\t store directly into the target.  If we are making an initializer and\n+\t store directly into the target unless the type is large enough\n+\t that memcpy will be used.  If we are making an initializer and\n \t all operands are constant, put it in memory as well.  */\n       else if ((TREE_STATIC (exp)\n \t\t&& ((mode == BLKmode\n \t\t     && ! (target != 0 && safe_from_p (target, exp)))\n-\t\t    || TREE_ADDRESSABLE (exp)))\n+\t\t    || TREE_ADDRESSABLE (exp)\n+\t\t    || (TREE_CODE (TYPE_SIZE (type)) == INTEGER_CST\n+\t\t\t&& (move_by_pieces_ninsns\n+\t\t\t    (TREE_INT_CST_LOW (TYPE_SIZE (type)),\n+\t\t\t     TYPE_ALIGN (type))\n+\t\t\t    > MOVE_RATIO))))\n \t       || (modifier == EXPAND_INITIALIZER && TREE_CONSTANT (exp)))\n \t{\n \t  rtx constructor = output_constant_def (exp);"}]}