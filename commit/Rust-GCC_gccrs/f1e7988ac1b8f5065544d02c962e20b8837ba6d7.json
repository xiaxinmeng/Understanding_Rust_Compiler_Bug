{"sha": "f1e7988ac1b8f5065544d02c962e20b8837ba6d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFlNzk4OGFjMWI4ZjUwNjU1NDRkMDJjOTYyZTIwYjg4MzdiYTZkNw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2003-10-29T16:20:34Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-10-29T16:20:34Z"}, "message": "locale_facets.tcc (time_get::do_get_year): Absolutely avoid dereferencing end iterators.\n\n2003-10-29  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/locale_facets.tcc (time_get::do_get_year):\n\tAbsolutely avoid dereferencing end iterators.\n\t(time_put::put): Minor clean up.\n\n\t* include/bits/locale_facets.tcc: Cosmetic reformattings.\n\nFrom-SVN: r73049", "tree": {"sha": "4c37367e9308e791ecc794e23c9b63363c3b46cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c37367e9308e791ecc794e23c9b63363c3b46cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1e7988ac1b8f5065544d02c962e20b8837ba6d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1e7988ac1b8f5065544d02c962e20b8837ba6d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1e7988ac1b8f5065544d02c962e20b8837ba6d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1e7988ac1b8f5065544d02c962e20b8837ba6d7/comments", "author": null, "committer": null, "parents": [{"sha": "45967a8a28379fe5fbaa4b284eacc2db0dcf7c1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45967a8a28379fe5fbaa4b284eacc2db0dcf7c1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45967a8a28379fe5fbaa4b284eacc2db0dcf7c1c"}], "stats": {"total": 100, "additions": 51, "deletions": 49}, "files": [{"sha": "dd2dc9b2cca8bf0b76789dba87ac6b3c1c749849", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e7988ac1b8f5065544d02c962e20b8837ba6d7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e7988ac1b8f5065544d02c962e20b8837ba6d7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f1e7988ac1b8f5065544d02c962e20b8837ba6d7", "patch": "@@ -1,3 +1,11 @@\n+2003-10-29  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/locale_facets.tcc (time_get::do_get_year):\n+\tAbsolutely avoid dereferencing end iterators.\n+\t(time_put::put): Minor clean up.\n+\n+\t* include/bits/locale_facets.tcc: Cosmetic reformattings.\n+\n 2003-10-29  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/locale_facets.tcc (num_get::_M_extract_float):"}, {"sha": "c827ba322e027f093a3a2b2c49e01637f347b3a7", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 43, "deletions": 49, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e7988ac1b8f5065544d02c962e20b8837ba6d7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e7988ac1b8f5065544d02c962e20b8837ba6d7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=f1e7988ac1b8f5065544d02c962e20b8837ba6d7", "patch": "@@ -1958,15 +1958,11 @@ namespace std\n       const locale __loc = __io.getloc();\n       const ctype<_CharT>& __ctype = use_facet<ctype<_CharT> >(__loc); \n \n-      char_type __c = *__beg;\n       size_t __i = 0;\n       string __digits;\n-      while (__i < 4 && __beg != __end && __ctype.is(ctype_base::digit, __c))\n-\t{\n-\t  __digits += __ctype.narrow(__c, 0);\n-\t  __c = *(++__beg);\n-\t  ++__i;\n-\t}\n+      for (; __i < 4 && __beg != __end\n+\t     && __ctype.is(ctype_base::digit, *__beg); ++__beg, ++__i)\n+\t__digits += __ctype.narrow(*__beg, 0);\n       if (__i == 2 || __i == 4)\n \t{\n \t  long __l;\n@@ -1994,32 +1990,30 @@ namespace std\n       const locale __loc = __io.getloc();\n       ctype<_CharT> const& __ctype = use_facet<ctype<_CharT> >(__loc);\n       for (; __beg != __end; ++__beg)\n-\t{\n-\t  if (__ctype.narrow(*__beg, 0) != '%')\n-\t    {\n-\t      *__s = *__beg;\n-\t      ++__s;\n-\t    }\n-\t  else if (++__beg != __end)\n-\t    {\n-\t      char __format;\n-\t      char __mod = 0;\n-\t      const char __c = __ctype.narrow(*__beg, 0);\n-\t      if (__c != 'E' && __c != 'O')\n-\t\t__format = __c;\n-\t      else if (++__beg != __end)\n-\t\t{\n-\t\t  __mod = __c;\n-\t\t  __format = __ctype.narrow(*__beg, 0);\n-\t\t}\n-\t      else\n-\t\tbreak;\n-\t      __s = this->do_put(__s, __io, __fill, __tm,\n-\t\t\t\t __format, __mod);\n-\t    }\n-\t  else\n-\t    break;\n-\t}\n+\tif (__ctype.narrow(*__beg, 0) != '%')\n+\t  {\n+\t    *__s = *__beg;\n+\t    ++__s;\n+\t  }\n+\telse if (++__beg != __end)\n+\t  {\n+\t    char __format;\n+\t    char __mod = 0;\n+\t    const char __c = __ctype.narrow(*__beg, 0);\n+\t    if (__c != 'E' && __c != 'O')\n+\t      __format = __c;\n+\t    else if (++__beg != __end)\n+\t      {\n+\t\t__mod = __c;\n+\t\t__format = __ctype.narrow(*__beg, 0);\n+\t      }\n+\t    else\n+\t      break;\n+\t    __s = this->do_put(__s, __io, __fill, __tm,\n+\t\t\t       __format, __mod);\n+\t  }\n+\telse\n+\t  break;\n       return __s;\n     }\n \n@@ -2115,7 +2109,7 @@ namespace std\n \t}\n     }\n \n- template<typename _CharT>\n+  template<typename _CharT>\n     typename collate<_CharT>::string_type\n     collate<_CharT>::\n     do_transform(const _CharT* __lo, const _CharT* __hi) const\n@@ -2159,7 +2153,7 @@ namespace std\n \t}\n     }\n \n- template<typename _CharT>\n+  template<typename _CharT>\n     long\n     collate<_CharT>::\n     do_hash(const _CharT* __lo, const _CharT* __hi) const\n@@ -2265,20 +2259,20 @@ namespace std\n     __add_grouping(_CharT* __s, _CharT __sep,  \n \t\t   const char* __gbeg, const char* __gend, \n \t\t   const _CharT* __first, const _CharT* __last)\n-    {\n-      if (__last - __first > *__gbeg)\n-        {\n-\t  const bool __bump = __gbeg + 1 != __gend;\n-          __s = std::__add_grouping(__s,  __sep, __gbeg + __bump,\n-\t\t\t\t    __gend, __first, __last - *__gbeg);\n-          __first = __last - *__gbeg;\n-          *__s++ = __sep;\n-        }\n-      do\n-\t*__s++ = *__first++;\n-      while (__first != __last);\n-      return __s;\n-    }\n+  {\n+    if (__last - __first > *__gbeg)\n+      {\n+\tconst bool __bump = __gbeg + 1 != __gend;\n+\t__s = std::__add_grouping(__s,  __sep, __gbeg + __bump,\n+\t\t\t\t  __gend, __first, __last - *__gbeg);\n+\t__first = __last - *__gbeg;\n+\t*__s++ = __sep;\n+      }\n+    do\n+      *__s++ = *__first++;\n+    while (__first != __last);\n+    return __s;\n+  }\n \n   // Inhibit implicit instantiations for required instantiations,\n   // which are defined via explicit instantiations elsewhere.  "}]}