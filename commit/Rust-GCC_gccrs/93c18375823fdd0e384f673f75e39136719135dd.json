{"sha": "93c18375823fdd0e384f673f75e39136719135dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTNjMTgzNzU4MjNmZGQwZTM4NGY2NzNmNzVlMzkxMzY3MTkxMzVkZA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-06-21T12:52:14Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-06-21T12:52:14Z"}, "message": "Rework cold and hot label attributes in predict.c.\n\n2017-06-21  Martin Liska  <mliska@suse.cz>\n\n\t* gimplify.c (gimplify_label_expr): Insert GIMPLE_PREDICT\n\tstatements on cold and hot labels.\n\t* predict.c (tree_estimate_probability_bb): Remove the\n\tprediction from this place.\n2017-06-21  Martin Liska  <mliska@suse.cz>\n\n\t* gcc.dg/tree-ssa/attr-hotcold-2.c: Update scanned patterns.\n\nFrom-SVN: r249451", "tree": {"sha": "d25acabcbf72c143c997ccd8e7b212c5930584ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d25acabcbf72c143c997ccd8e7b212c5930584ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93c18375823fdd0e384f673f75e39136719135dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93c18375823fdd0e384f673f75e39136719135dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93c18375823fdd0e384f673f75e39136719135dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93c18375823fdd0e384f673f75e39136719135dd/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e59a1c22fb249388e82b4fd004f33615abe36d2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e59a1c22fb249388e82b4fd004f33615abe36d2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e59a1c22fb249388e82b4fd004f33615abe36d2e"}], "stats": {"total": 48, "additions": 22, "deletions": 26}, "files": [{"sha": "2308d352d94bc98cba4671e4be07678be25b6f28", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c18375823fdd0e384f673f75e39136719135dd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c18375823fdd0e384f673f75e39136719135dd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=93c18375823fdd0e384f673f75e39136719135dd", "patch": "@@ -1,3 +1,10 @@\n+2017-06-21  Martin Liska  <mliska@suse.cz>\n+\n+\t* gimplify.c (gimplify_label_expr): Insert GIMPLE_PREDICT\n+\tstatements on cold and hot labels.\n+\t* predict.c (tree_estimate_probability_bb): Remove the\n+\tprediction from this place.\n+\n 2017-06-21  Martin Liska  <mliska@suse.cz>\n \n \tPR tree-optimization/79489"}, {"sha": "641a8210dad66075fe2a351e7f1a7c8893619aab", "filename": "gcc/gimplify.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c18375823fdd0e384f673f75e39136719135dd/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c18375823fdd0e384f673f75e39136719135dd/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=93c18375823fdd0e384f673f75e39136719135dd", "patch": "@@ -2357,10 +2357,18 @@ gimplify_label_expr (tree *expr_p, gimple_seq *pre_p)\n   gcc_assert (decl_function_context (LABEL_EXPR_LABEL (*expr_p))\n \t      == current_function_decl);\n \n-  glabel *label_stmt = gimple_build_label (LABEL_EXPR_LABEL (*expr_p));\n+  tree label = LABEL_EXPR_LABEL (*expr_p);\n+  glabel *label_stmt = gimple_build_label (label);\n   gimple_set_location (label_stmt, EXPR_LOCATION (*expr_p));\n   gimplify_seq_add_stmt (pre_p, label_stmt);\n \n+  if (lookup_attribute (\"cold\", DECL_ATTRIBUTES (label)))\n+    gimple_seq_add_stmt (pre_p, gimple_build_predict (PRED_COLD_LABEL,\n+\t\t\t\t\t\t      NOT_TAKEN));\n+  else if (lookup_attribute (\"hot\", DECL_ATTRIBUTES (label)))\n+    gimple_seq_add_stmt (pre_p, gimple_build_predict (PRED_HOT_LABEL,\n+\t\t\t\t\t\t      TAKEN));\n+\n   return GS_ALL_DONE;\n }\n "}, {"sha": "44151bc2e6ce3e0c1a42303f6178a6da0cb9c700", "filename": "gcc/predict.c", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c18375823fdd0e384f673f75e39136719135dd/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c18375823fdd0e384f673f75e39136719135dd/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=93c18375823fdd0e384f673f75e39136719135dd", "patch": "@@ -2742,29 +2742,6 @@ tree_estimate_probability_bb (basic_block bb, bool local_only)\n \n   FOR_EACH_EDGE (e, ei, bb->succs)\n     {\n-      /* Predict edges to user labels with attributes.  */\n-      if (e->dest != EXIT_BLOCK_PTR_FOR_FN (cfun))\n-\t{\n-\t  gimple_stmt_iterator gi;\n-\t  for (gi = gsi_start_bb (e->dest); !gsi_end_p (gi); gsi_next (&gi))\n-\t    {\n-\t      glabel *label_stmt = dyn_cast <glabel *> (gsi_stmt (gi));\n-\t      tree decl;\n-\n-\t      if (!label_stmt)\n-\t\tbreak;\n-\t      decl = gimple_label_label (label_stmt);\n-\t      if (DECL_ARTIFICIAL (decl))\n-\t\tcontinue;\n-\n-\t      /* Finally, we have a user-defined label.  */\n-\t      if (lookup_attribute (\"cold\", DECL_ATTRIBUTES (decl)))\n-\t\tpredict_edge_def (e, PRED_COLD_LABEL, NOT_TAKEN);\n-\t      else if (lookup_attribute (\"hot\", DECL_ATTRIBUTES (decl)))\n-\t\tpredict_edge_def (e, PRED_HOT_LABEL, TAKEN);\n-\t    }\n-\t}\n-\n       /* Look for block we are guarding (ie we dominate it,\n \t but it doesn't postdominate us).  */\n       if (e->dest != EXIT_BLOCK_PTR_FOR_FN (cfun) && e->dest != bb"}, {"sha": "b45fc5725433dfc36d0859093e354a59f844b2de", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c18375823fdd0e384f673f75e39136719135dd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c18375823fdd0e384f673f75e39136719135dd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=93c18375823fdd0e384f673f75e39136719135dd", "patch": "@@ -1,3 +1,7 @@\n+2017-06-21  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc.dg/tree-ssa/attr-hotcold-2.c: Update scanned patterns.\n+\n 2017-06-21  Pierre-Marie de Rodat  <derodat@adacore.com>\n \n \t* gnat.dg/debug11_pkg.adb, gnat.dg/debug11_pkg.ads,"}, {"sha": "184dd10ddaef6d70455dab2e08a4b3d65e55b0ed", "filename": "gcc/testsuite/gcc.dg/tree-ssa/attr-hotcold-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c18375823fdd0e384f673f75e39136719135dd/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fattr-hotcold-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c18375823fdd0e384f673f75e39136719135dd/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fattr-hotcold-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fattr-hotcold-2.c?ref=93c18375823fdd0e384f673f75e39136719135dd", "patch": "@@ -20,9 +20,9 @@ void f(int x, int y)\n \n /* { dg-final { scan-tree-dump-times \"hot label heuristics\" 1 \"profile_estimate\" } } */\n /* { dg-final { scan-tree-dump-times \"cold label heuristics\" 1 \"profile_estimate\" } } */\n-/* { dg-final { scan-tree-dump-times \"block 4, loop depth 0, freq \\[1-4\\]\\[^0-9\\]\" 3 \"profile_estimate\" } } */\n+/* { dg-final { scan-tree-dump \"A \\\\\\[0\\\\\\..*\\\\\\]\" \"profile_estimate\" } } */\n \n /* Note: we're attempting to match some number > 6000, i.e. > 60%.\n    The exact number ought to be tweekable without having to juggle\n    the testcase around too much.  */\n-/* { dg-final { scan-tree-dump-times \"block 5, loop depth 0, freq \\[6-9\\]\\[0-9\\]\\[0-9\\]\\[0-9\\]\" 3 \"profile_estimate\" } } */\n+/* { dg-final { scan-tree-dump \"B \\\\\\[\\[6-9\\]\\[0-9\\]\\\\\\..*\\\\\\]\" \"profile_estimate\" } } */"}]}