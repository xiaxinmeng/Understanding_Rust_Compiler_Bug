{"sha": "2e4e72b1c01b0e4a9802e480fa241526bf4e47aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmU0ZTcyYjFjMDFiMGU0YTk4MDJlNDgwZmEyNDE1MjZiZjRlNDdhYQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@codesourcery.com", "date": "2004-08-03T23:37:34Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2004-08-03T23:37:34Z"}, "message": "defaults.h (LEGITIMATE_PIC_OPERAND_P): Provide default definition.\n\n\t* defaults.h (LEGITIMATE_PIC_OPERAND_P): Provide default definition.\n\t* recog.c (general_operand, immediate_operand, nonmemory_operand)\n\t(asm_operand_ok): Remove #ifdefs on LEGITIMATE_PICOPERAND_P.\n\t* regclass.c (record_reg_classes): Likewise.\n\t* reload.c (find_reloads): Likewise.\n\t* reload1.c (reload): Likewise.\n\nFrom-SVN: r85512", "tree": {"sha": "fcbe8c744f966ea82947350fe8a6c968235df084", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fcbe8c744f966ea82947350fe8a6c968235df084"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e4e72b1c01b0e4a9802e480fa241526bf4e47aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e4e72b1c01b0e4a9802e480fa241526bf4e47aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e4e72b1c01b0e4a9802e480fa241526bf4e47aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e4e72b1c01b0e4a9802e480fa241526bf4e47aa/comments", "author": null, "committer": null, "parents": [{"sha": "f9942f4e14ff2f47c29638078db93c0ba8e7b54e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9942f4e14ff2f47c29638078db93c0ba8e7b54e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9942f4e14ff2f47c29638078db93c0ba8e7b54e"}], "stats": {"total": 47, "additions": 18, "deletions": 29}, "files": [{"sha": "be575fbe4c78e4aaa066352a705bc2862e4d564b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e4e72b1c01b0e4a9802e480fa241526bf4e47aa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e4e72b1c01b0e4a9802e480fa241526bf4e47aa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2e4e72b1c01b0e4a9802e480fa241526bf4e47aa", "patch": "@@ -1,3 +1,12 @@\n+2004-08-03  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* defaults.h (LEGITIMATE_PIC_OPERAND_P): Provide default definition.\n+\t* recog.c (general_operand, immediate_operand, nonmemory_operand)\n+\t(asm_operand_ok): Remove #ifdefs on LEGITIMATE_PICOPERAND_P.\n+\t* regclass.c (record_reg_classes): Likewise.\n+\t* reload.c (find_reloads): Likewise.\n+\t* reload1.c (reload): Likewise.\n+\n 2004-08-03  Zack Weinberg  <zack@codesourcery.com>\n \n \t* gensupport.c (init_md_reader_args_cb): Renamed from"}, {"sha": "cd45f9180ec5b500a741927f77a73cf3b7c10982", "filename": "gcc/defaults.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e4e72b1c01b0e4a9802e480fa241526bf4e47aa/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e4e72b1c01b0e4a9802e480fa241526bf4e47aa/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=2e4e72b1c01b0e4a9802e480fa241526bf4e47aa", "patch": "@@ -768,6 +768,10 @@ You Lose!  You must define PREFERRED_DEBUGGING_TYPE!\n #define LEGITIMIZE_ADDRESS(X, OLDX, MODE, WIN)\n #endif\n \n+#ifndef LEGITIMATE_PIC_OPERAND_P\n+#define LEGITIMATE_PIC_OPERAND_P(X) 1\n+#endif\n+\n #ifndef REVERSIBLE_CC_MODE\n #define REVERSIBLE_CC_MODE(MODE) 0\n #endif"}, {"sha": "12b0fbf68a15496c26933514ed56d782af4a62a1", "filename": "gcc/recog.c", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e4e72b1c01b0e4a9802e480fa241526bf4e47aa/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e4e72b1c01b0e4a9802e480fa241526bf4e47aa/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=2e4e72b1c01b0e4a9802e480fa241526bf4e47aa", "patch": "@@ -922,9 +922,7 @@ general_operand (rtx op, enum machine_mode mode)\n   if (CONSTANT_P (op))\n     return ((GET_MODE (op) == VOIDmode || GET_MODE (op) == mode\n \t     || mode == VOIDmode)\n-#ifdef LEGITIMATE_PIC_OPERAND_P\n \t    && (! flag_pic || LEGITIMATE_PIC_OPERAND_P (op))\n-#endif\n \t    && LEGITIMATE_CONSTANT_P (op));\n \n   /* Except for certain constants with VOIDmode, already checked for,\n@@ -1102,9 +1100,7 @@ immediate_operand (rtx op, enum machine_mode mode)\n   return (CONSTANT_P (op)\n \t  && (GET_MODE (op) == mode || mode == VOIDmode\n \t      || GET_MODE (op) == VOIDmode)\n-#ifdef LEGITIMATE_PIC_OPERAND_P\n \t  && (! flag_pic || LEGITIMATE_PIC_OPERAND_P (op))\n-#endif\n \t  && LEGITIMATE_CONSTANT_P (op));\n }\n \n@@ -1170,9 +1166,7 @@ nonmemory_operand (rtx op, enum machine_mode mode)\n \n       return ((GET_MODE (op) == VOIDmode || GET_MODE (op) == mode\n \t       || mode == VOIDmode)\n-#ifdef LEGITIMATE_PIC_OPERAND_P\n \t      && (! flag_pic || LEGITIMATE_PIC_OPERAND_P (op))\n-#endif\n \t      && LEGITIMATE_CONSTANT_P (op));\n     }\n \n@@ -1677,11 +1671,7 @@ asm_operand_ok (rtx op, const char *constraint)\n \t  /* Fall through.  */\n \n \tcase 'i':\n-\t  if (CONSTANT_P (op)\n-#ifdef LEGITIMATE_PIC_OPERAND_P\n-\t      && (! flag_pic || LEGITIMATE_PIC_OPERAND_P (op))\n-#endif\n-\t      )\n+\t  if (CONSTANT_P (op) && (! flag_pic || LEGITIMATE_PIC_OPERAND_P (op)))\n \t    result = 1;\n \t  break;\n "}, {"sha": "1f51af610c2f135f22113036bd683d6a4d9200c5", "filename": "gcc/regclass.c", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e4e72b1c01b0e4a9802e480fa241526bf4e47aa/gcc%2Fregclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e4e72b1c01b0e4a9802e480fa241526bf4e47aa/gcc%2Fregclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregclass.c?ref=2e4e72b1c01b0e4a9802e480fa241526bf4e47aa", "patch": "@@ -1614,10 +1614,7 @@ record_reg_classes (int n_alts, int n_ops, rtx *ops,\n \t\t    break;\n \t\tcase 'i':\n \t\t  if (CONSTANT_P (op)\n-#ifdef LEGITIMATE_PIC_OPERAND_P\n-\t\t      && (! flag_pic || LEGITIMATE_PIC_OPERAND_P (op))\n-#endif\n-\t\t      )\n+\t\t      && (! flag_pic || LEGITIMATE_PIC_OPERAND_P (op)))\n \t\t    win = 1;\n \t\t  break;\n \n@@ -1648,10 +1645,7 @@ record_reg_classes (int n_alts, int n_ops, rtx *ops,\n \t\tcase 'g':\n \t\t  if (MEM_P (op)\n \t\t      || (CONSTANT_P (op)\n-#ifdef LEGITIMATE_PIC_OPERAND_P\n-\t\t\t  && (! flag_pic || LEGITIMATE_PIC_OPERAND_P (op))\n-#endif\n-\t\t\t  ))\n+\t\t\t  && (! flag_pic || LEGITIMATE_PIC_OPERAND_P (op))))\n \t\t    win = 1;\n \t\t  allows_mem[i] = 1;\n \t\tcase 'r':"}, {"sha": "0996511020455cd86cb84fa2e37777bf5a6ad5cd", "filename": "gcc/reload.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e4e72b1c01b0e4a9802e480fa241526bf4e47aa/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e4e72b1c01b0e4a9802e480fa241526bf4e47aa/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=2e4e72b1c01b0e4a9802e480fa241526bf4e47aa", "patch": "@@ -3228,10 +3228,7 @@ find_reloads (rtx insn, int replace, int ind_levels, int live_known,\n \t\t  break;\n \t      case 'i':\n \t\tif (CONSTANT_P (operand)\n-#ifdef LEGITIMATE_PIC_OPERAND_P\n-\t\t    && (! flag_pic || LEGITIMATE_PIC_OPERAND_P (operand))\n-#endif\n-\t\t    )\n+\t\t    && (! flag_pic || LEGITIMATE_PIC_OPERAND_P (operand)))\n \t\t  win = 1;\n \t\tbreak;\n \n@@ -3266,11 +3263,9 @@ find_reloads (rtx insn, int replace, int ind_levels, int live_known,\n \t\t    && GET_CODE (operand) != PLUS\n \t\t    /* A SCRATCH is not a valid operand.  */\n \t\t    && GET_CODE (operand) != SCRATCH\n-#ifdef LEGITIMATE_PIC_OPERAND_P\n \t\t    && (! CONSTANT_P (operand)\n \t\t\t|| ! flag_pic\n \t\t\t|| LEGITIMATE_PIC_OPERAND_P (operand))\n-#endif\n \t\t    && (GENERAL_REGS == ALL_REGS\n \t\t\t|| !REG_P (operand)\n \t\t\t|| (REGNO (operand) >= FIRST_PSEUDO_REGISTER"}, {"sha": "3eb20b02ff80bedb030ac556938c06babf153aae", "filename": "gcc/reload1.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e4e72b1c01b0e4a9802e480fa241526bf4e47aa/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e4e72b1c01b0e4a9802e480fa241526bf4e47aa/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=2e4e72b1c01b0e4a9802e480fa241526bf4e47aa", "patch": "@@ -734,16 +734,13 @@ reload (rtx first, int global)\n \t{\n \t  rtx note = find_reg_note (insn, REG_EQUIV, NULL_RTX);\n \t  if (note\n-#ifdef LEGITIMATE_PIC_OPERAND_P\n \t      && (! function_invariant_p (XEXP (note, 0))\n \t\t  || ! flag_pic\n \t\t  /* A function invariant is often CONSTANT_P but may\n \t\t     include a register.  We promise to only pass\n \t\t     CONSTANT_P objects to LEGITIMATE_PIC_OPERAND_P.  */\n \t\t  || (CONSTANT_P (XEXP (note, 0))\n-\t\t      && LEGITIMATE_PIC_OPERAND_P (XEXP (note, 0))))\n-#endif\n-\t      )\n+\t\t      && LEGITIMATE_PIC_OPERAND_P (XEXP (note, 0)))))\n \t    {\n \t      rtx x = XEXP (note, 0);\n \t      i = REGNO (SET_DEST (set));"}]}