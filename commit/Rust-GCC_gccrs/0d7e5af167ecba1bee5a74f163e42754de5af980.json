{"sha": "0d7e5af167ecba1bee5a74f163e42754de5af980", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ3ZTVhZjE2N2VjYmExYmVlNWE3NGYxNjNlNDI3NTRkZTVhZjk4MA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2009-09-22T15:13:36Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2009-09-22T15:13:36Z"}, "message": "m68hc11.c (TARGET_TRAMPOLINE_INIT): New.\n\n\t* config/m68hc11/m68hc11.c (TARGET_TRAMPOLINE_INIT): New.\n\t(m68hc11_trampoline_init): Rename from m68hc11_initialize_trampoline;\n\tmake static; update for hook parameters.\n\t* config/m68hc11/m68hc11-protos.h: Update.\n\t* config/m68hc11/m68hc11.h (INITIALIZE_TRAMPOLINE): Remove.\n\nFrom-SVN: r151998", "tree": {"sha": "83f22f3a6f4d6f8701d6effbd999b39ec4562b37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83f22f3a6f4d6f8701d6effbd999b39ec4562b37"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d7e5af167ecba1bee5a74f163e42754de5af980", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d7e5af167ecba1bee5a74f163e42754de5af980", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d7e5af167ecba1bee5a74f163e42754de5af980", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d7e5af167ecba1bee5a74f163e42754de5af980/comments", "author": null, "committer": null, "parents": [{"sha": "1548bf05145ddec6edf90ae59aecae1c39274bc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1548bf05145ddec6edf90ae59aecae1c39274bc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1548bf05145ddec6edf90ae59aecae1c39274bc7"}], "stats": {"total": 63, "additions": 37, "deletions": 26}, "files": [{"sha": "61bb869bc3f38048c77d7970c70f5ba4a9e75420", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d7e5af167ecba1bee5a74f163e42754de5af980/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d7e5af167ecba1bee5a74f163e42754de5af980/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0d7e5af167ecba1bee5a74f163e42754de5af980", "patch": "@@ -135,6 +135,12 @@\n \t* config/m32r/m32r.h (INITIALIZE_TRAMPOLINE): Move code to\n \tm32r_trampoline_init.\n \n+\t* config/m68hc11/m68hc11.c (TARGET_TRAMPOLINE_INIT): New.\n+\t(m68hc11_trampoline_init): Rename from m68hc11_initialize_trampoline;\n+\tmake static; update for hook parameters.\n+\t* config/m68hc11/m68hc11-protos.h: Update.\n+\t* config/m68hc11/m68hc11.h (INITIALIZE_TRAMPOLINE): Remove.\n+\n 2009-09-22  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/rs6000/rs6000.c (bdesc_2arg): Fix CODE_FOR_vector_gt* codes"}, {"sha": "59154faf00b0846856cca1f79aab6f012a790732", "filename": "gcc/config/m68hc11/m68hc11-protos.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d7e5af167ecba1bee5a74f163e42754de5af980/gcc%2Fconfig%2Fm68hc11%2Fm68hc11-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d7e5af167ecba1bee5a74f163e42754de5af980/gcc%2Fconfig%2Fm68hc11%2Fm68hc11-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11-protos.h?ref=0d7e5af167ecba1bee5a74f163e42754de5af980", "patch": "@@ -43,8 +43,6 @@ extern void m68hc11_function_arg_advance (CUMULATIVE_ARGS*,\n #ifdef RTX_CODE\n extern int m68hc11_auto_inc_p (rtx);\n \n-extern void m68hc11_initialize_trampoline (rtx, rtx, rtx);\n-\n extern rtx m68hc11_expand_compare_and_branch (enum rtx_code, rtx, rtx, rtx);\n extern enum reg_class preferred_reload_class (rtx, enum reg_class);\n "}, {"sha": "5f8011c664f3ee1dbde54a9a43c6b396fa9b6510", "filename": "gcc/config/m68hc11/m68hc11.c", "status": "modified", "additions": 30, "deletions": 16, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d7e5af167ecba1bee5a74f163e42754de5af980/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d7e5af167ecba1bee5a74f163e42754de5af980/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c?ref=0d7e5af167ecba1bee5a74f163e42754de5af980", "patch": "@@ -92,6 +92,7 @@ static void m68hc11_init_libfuncs (void);\n static rtx m68hc11_struct_value_rtx (tree, int);\n static bool m68hc11_return_in_memory (const_tree, const_tree);\n static bool m68hc11_can_eliminate (const int, const int);\n+static void m68hc11_trampoline_init (rtx, tree, rtx);\n \n /* Must be set to 1 to produce debug messages.  */\n int debug_m6811 = 0;\n@@ -282,6 +283,9 @@ static const struct attribute_spec m68hc11_attribute_table[] =\n #undef TARGET_CAN_ELIMINATE\n #define TARGET_CAN_ELIMINATE m68hc11_can_eliminate\n \n+#undef TARGET_TRAMPOLINE_INIT\n+#define TARGET_TRAMPOLINE_INIT m68hc11_trampoline_init\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \f\n int\n@@ -1072,39 +1076,49 @@ symbolic_memory_operand (rtx op, enum machine_mode mode)\n    jmp FNADDR\n \n */\n-void\n-m68hc11_initialize_trampoline (rtx tramp, rtx fnaddr, rtx cxt)\n+static void\n+m68hc11_trampoline_init (rtx m_tramp, tree fndecl, rtx cxt)\n {\n   const char *static_chain_reg = reg_names[STATIC_CHAIN_REGNUM];\n+  rtx fnaddr = XEXP (DECL_RTL (fndecl), 0);\n+  rtx mem;\n \n   /* Skip the '*'.  */\n   if (*static_chain_reg == '*')\n     static_chain_reg++;\n   if (TARGET_M6811)\n     {\n-      emit_move_insn (gen_rtx_MEM (HImode, tramp), GEN_INT (0x18ce));\n-      emit_move_insn (gen_rtx_MEM (HImode, plus_constant (tramp, 2)), cxt);\n-      emit_move_insn (gen_rtx_MEM (HImode, plus_constant (tramp, 4)),\n-                      GEN_INT (0x18df));\n-      emit_move_insn (gen_rtx_MEM (QImode, plus_constant (tramp, 6)),\n+      mem = adjust_address (m_tramp, HImode, 0);\n+      emit_move_insn (mem, GEN_INT (0x18ce));\n+      mem = adjust_address (m_tramp, HImode, 2);\n+      emit_move_insn (mem, cxt);\n+      mem = adjust_address (m_tramp, HImode, 4);\n+      emit_move_insn (mem, GEN_INT (0x18df));\n+      mem = adjust_address (m_tramp, QImode, 6);\n+      emit_move_insn (mem,\n                       gen_rtx_CONST (QImode,\n                                      gen_rtx_SYMBOL_REF (Pmode,\n                                                          static_chain_reg)));\n-      emit_move_insn (gen_rtx_MEM (QImode, plus_constant (tramp, 7)),\n-                      GEN_INT (0x7e));\n-      emit_move_insn (gen_rtx_MEM (HImode, plus_constant (tramp, 8)), fnaddr);\n+      mem = adjust_address (m_tramp, QImode, 7);\n+      emit_move_insn (mem, GEN_INT (0x7e));\n+      mem = adjust_address (m_tramp, HImode, 8);\n+      emit_move_insn (mem, fnaddr);\n     }\n   else\n     {\n-      emit_move_insn (gen_rtx_MEM (HImode, tramp), GEN_INT (0x1803));\n-      emit_move_insn (gen_rtx_MEM (HImode, plus_constant (tramp, 2)), cxt);\n-      emit_move_insn (gen_rtx_MEM (HImode, plus_constant (tramp, 4)),\n+      mem = adjust_address (m_tramp, HImode, 0);\n+      emit_move_insn (mem, GEN_INT (0x1803));\n+      mem = adjust_address (m_tramp, HImode, 2);\n+      emit_move_insn (mem, cxt);\n+      mem = adjust_address (m_tramp, HImode, 4);\n+      emit_move_insn (mem,\n                       gen_rtx_CONST (HImode,\n                                      gen_rtx_SYMBOL_REF (Pmode,\n                                                          static_chain_reg)));\n-      emit_move_insn (gen_rtx_MEM (QImode, plus_constant (tramp, 6)),\n-                      GEN_INT (0x06));\n-      emit_move_insn (gen_rtx_MEM (HImode, plus_constant (tramp, 7)), fnaddr);\n+      mem = adjust_address (m_tramp, QImode, 6);\n+      emit_move_insn (mem, GEN_INT (0x06));\n+      mem = adjust_address (m_tramp, HImode, 7);\n+      emit_move_insn (mem, fnaddr);\n     }\n }\n \f"}, {"sha": "ee0f9f67fca2229e73893c39e1345e09a80089f0", "filename": "gcc/config/m68hc11/m68hc11.h", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d7e5af167ecba1bee5a74f163e42754de5af980/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d7e5af167ecba1bee5a74f163e42754de5af980/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.h?ref=0d7e5af167ecba1bee5a74f163e42754de5af980", "patch": "@@ -1005,17 +1005,10 @@ typedef struct m68hc11_args\n    for profiling a function entry.  */\n #define FUNCTION_PROFILER(FILE, LABELNO)\t\t\\\n     fprintf (FILE, \"\\tldy\\t.LP%d\\n\\tjsr mcount\\n\", (LABELNO))\n+\n /* Length in units of the trampoline for entering a nested function.  */\n #define TRAMPOLINE_SIZE\t\t(TARGET_M6811 ? 11 : 9)\n \n-/* A C statement to initialize the variable parts of a trampoline.\n-   ADDR is an RTX for the address of the trampoline; FNADDR is an\n-   RTX for the address of the nested function; STATIC_CHAIN is an\n-   RTX for the static chain value that should be passed to the\n-   function when it is called.  */\n-#define INITIALIZE_TRAMPOLINE(TRAMP, FNADDR, CXT) \\\n-  m68hc11_initialize_trampoline ((TRAMP), (FNADDR), (CXT))\n-\n \f\n /* Addressing modes, and classification of registers for them.  */\n "}]}