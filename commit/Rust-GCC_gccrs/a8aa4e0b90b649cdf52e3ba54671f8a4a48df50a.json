{"sha": "a8aa4e0b90b649cdf52e3ba54671f8a4a48df50a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YThhYTRlMGI5MGI2NDljZGY1MmUzYmE1NDY3MWY4YTRhNDhkZjUwYQ==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@cygnus.co.uk", "date": "1998-03-11T07:12:31Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "1998-03-11T07:12:31Z"}, "message": "final.c (shorten_branches): Remove conditionalizing on SHORTEN_WITH_ADJUST_INSN_LENGTH\n\n\t* final.c (shorten_branches): Remove conditionalizing on\n\tSHORTEN_WITH_ADJUST_INSN_LENGTH\n\t* sh.h, pa.h (SHORTEN_WITH_ADJUST_INSN_LENGTH): Remove.\n\nFrom-SVN: r18470", "tree": {"sha": "b75589bcc86f0a7fbf0f1f409b6becd7e63d3054", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b75589bcc86f0a7fbf0f1f409b6becd7e63d3054"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8aa4e0b90b649cdf52e3ba54671f8a4a48df50a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8aa4e0b90b649cdf52e3ba54671f8a4a48df50a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8aa4e0b90b649cdf52e3ba54671f8a4a48df50a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8aa4e0b90b649cdf52e3ba54671f8a4a48df50a/comments", "author": null, "committer": null, "parents": [{"sha": "6af3488510bf96c43ef3aecb5f93c6ba1ad43387", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6af3488510bf96c43ef3aecb5f93c6ba1ad43387", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6af3488510bf96c43ef3aecb5f93c6ba1ad43387"}], "stats": {"total": 19, "additions": 7, "deletions": 12}, "files": [{"sha": "fc7ae4113a6721377642ea2ccb155fd54d91e530", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8aa4e0b90b649cdf52e3ba54671f8a4a48df50a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8aa4e0b90b649cdf52e3ba54671f8a4a48df50a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a8aa4e0b90b649cdf52e3ba54671f8a4a48df50a", "patch": "@@ -1,3 +1,9 @@\n+Wed Mar 11 15:07:18 1998  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+\t* final.c (shorten_branches): Remove conditionalizing on\n+\tSHORTEN_WITH_ADJUST_INSN_LENGTH\n+\t* sh.h, pa.h (SHORTEN_WITH_ADJUST_INSN_LENGTH): Remove.\n+\n Wed Mar 11 02:37:41 1998  Jeffrey A Law  (law@cygnus.com)\n \n \t* flow.c (find_basic_blocks_1): Keep the cfg accurate when removing"}, {"sha": "3f3c2d0f1bb9322ed04c1b6fb92f04bc74a72b00", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8aa4e0b90b649cdf52e3ba54671f8a4a48df50a/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8aa4e0b90b649cdf52e3ba54671f8a4a48df50a/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=a8aa4e0b90b649cdf52e3ba54671f8a4a48df50a", "patch": "@@ -1926,9 +1926,6 @@ while (0)\n #define ADJUST_INSN_LENGTH(INSN, LENGTH)\t\\\n   LENGTH += pa_adjust_insn_length (INSN, LENGTH);\n \n-/* Enable a bug fix.  (This is for extra caution.)  */\n-#define SHORTEN_WITH_ADJUST_INSN_LENGTH\n-\n /* Millicode insns are actually function calls with some special\n    constraints on arguments and register usage.\n "}, {"sha": "9e590162ed8c4d39ddd3a6c96a9394fc5357ccf5", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8aa4e0b90b649cdf52e3ba54671f8a4a48df50a/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8aa4e0b90b649cdf52e3ba54671f8a4a48df50a/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=a8aa4e0b90b649cdf52e3ba54671f8a4a48df50a", "patch": "@@ -1788,9 +1788,6 @@ sh_valid_machine_decl_attribute (DECL, ATTRIBUTES, IDENTIFIER, ARGS)\n       && GET_CODE (PATTERN (NEXT_INSN (PREV_INSN (X)))) != SEQUENCE \\\n       && get_attr_needs_delay_slot (X) == NEEDS_DELAY_SLOT_YES)\t\\\n     (LENGTH) += 2;\n-\n-/* Enable a bug fix for the shorten_branches pass.  */\n-#define SHORTEN_WITH_ADJUST_INSN_LENGTH\n \f\n /* Define the codes that are matched by predicates in sh.c.  */\n #define PREDICATE_CODES \\"}, {"sha": "b1a870708b72b7e1ae02435708718fa2fe456361", "filename": "gcc/final.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8aa4e0b90b649cdf52e3ba54671f8a4a48df50a/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8aa4e0b90b649cdf52e3ba54671f8a4a48df50a/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=a8aa4e0b90b649cdf52e3ba54671f8a4a48df50a", "patch": "@@ -1266,10 +1266,8 @@ shorten_branches (first)\n \t   insn = NEXT_INSN (insn))\n \t{\n \t  int new_length;\n-#ifdef SHORTEN_WITH_ADJUST_INSN_LENGTH\n #ifdef ADJUST_INSN_LENGTH\n \t  int tmp_length;\n-#endif\n #endif\n \t  int length_align;\n \n@@ -1444,13 +1442,11 @@ shorten_branches (first)\n \t      insn_current_address += new_length;\n \t    }\n \n-#ifdef SHORTEN_WITH_ADJUST_INSN_LENGTH\n #ifdef ADJUST_INSN_LENGTH\n \t  /* If needed, do any adjustment.  */\n \t  tmp_length = new_length;\n \t  ADJUST_INSN_LENGTH (insn, new_length);\n \t  insn_current_address += (new_length - tmp_length);\n-#endif\n #endif\n \n \t  if (new_length != insn_lengths[uid])"}, {"sha": "b7c9a5f3722df85b6cb493210f645cf6e83d92fa", "filename": "gcc/md.texi", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8aa4e0b90b649cdf52e3ba54671f8a4a48df50a/gcc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8aa4e0b90b649cdf52e3ba54671f8a4a48df50a/gcc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmd.texi?ref=a8aa4e0b90b649cdf52e3ba54671f8a4a48df50a", "patch": "@@ -3900,8 +3900,7 @@ not specified, 0 is used.\n If defined, modifies the length assigned to instruction @var{insn} as a\n function of the context in which it is used.  @var{length} is an lvalue\n that contains the initially computed length of the insn and should be\n-updated with the correct length of the insn.  If updating is required,\n-@var{insn} must not be a varying-length insn.\n+updated with the correct length of the insn.\n \n This macro will normally not be required.  A case in which it is\n required is the ROMP.  On this machine, the size of an @code{addr_vec}"}]}