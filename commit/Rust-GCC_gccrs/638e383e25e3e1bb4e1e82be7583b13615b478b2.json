{"sha": "638e383e25e3e1bb4e1e82be7583b13615b478b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM4ZTM4M2UyNWUzZTFiYjRlMWU4MmJlNzU4M2IxMzYxNWI0NzhiMg==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "2001-10-28T12:56:08Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2001-10-28T12:56:08Z"}, "message": "86numaux.adb, [...]: Fix spelling errors.\n\n\t* 86numaux.adb, a-tigeau.ads, a-wtgeau.ads, decl.c, exp_ch6.adb,\n\texp_ch9.adb, exp_util.adb, fname-sf.ads, freeze.ads, g-awk.adb,\n\tg-comlin.ads, g-dirope.adb, g-dyntab.ads, g-socket.ads,\n\tg-table.ads, g-traceb.ads, gnat-style.texi, gnatchop.adb, init.c,\n\tlayout.adb, layout.ads, mdllfile.ads, mlib-fil.ads, osint.ads,\n\ts-fatgen.adb, s-imgrea.adb, s-taprop.ads, s-tasdeb.ads,\n\tsem_aggr.adb, sem_attr.adb, sem_case.ads, sem_ch13.adb,\n\tsem_ch3.adb, sem_elab.adb, sem_maps.ads, sem_res.adb,\n\tsem_util.ads, sinfo.ads, sinput.ads, table.adb, table.ads,\n\ttypes.ads, urealp.adb: Fix spelling errors.\n\nFrom-SVN: r46581", "tree": {"sha": "fbb57f6a0d3c44ef1d9fbad080ccc7b3dba33605", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fbb57f6a0d3c44ef1d9fbad080ccc7b3dba33605"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/638e383e25e3e1bb4e1e82be7583b13615b478b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/638e383e25e3e1bb4e1e82be7583b13615b478b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/638e383e25e3e1bb4e1e82be7583b13615b478b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/638e383e25e3e1bb4e1e82be7583b13615b478b2/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f63d1bf775e8c15c877f5a9bf0e3f6fbb021686b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f63d1bf775e8c15c877f5a9bf0e3f6fbb021686b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f63d1bf775e8c15c877f5a9bf0e3f6fbb021686b"}], "stats": {"total": 213, "additions": 113, "deletions": 100}, "files": [{"sha": "779e63711ce9af654dc876e6b31de6442af5bd69", "filename": "gcc/ada/86numaux.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2F86numaux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2F86numaux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F86numaux.adb?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -7,7 +7,7 @@\n --                                 B o d y                                  --\n --                        (Machine Version for x86)                         --\n --                                                                          --\n---                            $Revision: 1.15 $\n+--                            $Revision: 1.1 $\n --                                                                          --\n --          Copyright (C) 1998-2000 Free Software Foundation, Inc.          --\n --                                                                          --\n@@ -49,7 +49,7 @@ package body Ada.Numerics.Aux is\n    for FPU_Stack_Pointer'Size use 3;\n \n    type FPU_Status_Word is record\n-      B   : Boolean; -- FPU Busy (for 8087 compatability only)\n+      B   : Boolean; -- FPU Busy (for 8087 compatibility only)\n       ES  : Boolean; -- Error Summary Status\n       SF  : Boolean; -- Stack Fault\n "}, {"sha": "b3670c0cbf06477c280b554dd8b1f0282d2cf1ce", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -1,3 +1,16 @@\n+2001-10-28  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* 86numaux.adb, a-tigeau.ads, a-wtgeau.ads, decl.c, exp_ch6.adb,\n+\texp_ch9.adb, exp_util.adb, fname-sf.ads, freeze.ads, g-awk.adb,\n+\tg-comlin.ads, g-dirope.adb, g-dyntab.ads, g-socket.ads,\n+\tg-table.ads, g-traceb.ads, gnat-style.texi, gnatchop.adb, init.c,\n+\tlayout.adb, layout.ads, mdllfile.ads, mlib-fil.ads, osint.ads,\n+\ts-fatgen.adb, s-imgrea.adb, s-taprop.ads, s-tasdeb.ads,\n+\tsem_aggr.adb, sem_attr.adb, sem_case.ads, sem_ch13.adb,\n+\tsem_ch3.adb, sem_elab.adb, sem_maps.ads, sem_res.adb,\n+\tsem_util.ads, sinfo.ads, sinput.ads, table.adb, table.ads,\n+\ttypes.ads, urealp.adb: Fix spelling errors.\n+\n 2001-10-27  Laurent Guerby <guerby@acm.org>\n \n \t* trans.c (gigi): Fix non determinism leading to bootstrap"}, {"sha": "cec0e2cf7668e2f2490ec25140c8569720b7cfd1", "filename": "gcc/ada/a-tigeau.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fa-tigeau.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fa-tigeau.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tigeau.ads?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                            $Revision: 1.13 $                             --\n+--                            $Revision: 1.1 $                             --\n --                                                                          --\n --          Copyright (C) 1992-1997 Free Software Foundation, Inc.          --\n --                                                                          --\n@@ -68,7 +68,7 @@ private package Ada.Text_IO.Generic_Aux is\n    procedure Check_On_One_Line (File : File_Type; Length : Integer);\n    --  Check to see if item of length Integer characters can fit on\n    --  current line. Call New_Line if not, first checking that the\n-   --  line length can accomodate Length characters, raise Layout_Error\n+   --  line length can accommodate Length characters, raise Layout_Error\n    --  if item is too large for a single line.\n \n    function Getc (File : File_Type) return Integer;"}, {"sha": "1571b373bd650237f13ee95a84199805d6872afa", "filename": "gcc/ada/a-wtgeau.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fa-wtgeau.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fa-wtgeau.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtgeau.ads?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                            $Revision: 1.3 $                              --\n+--                            $Revision: 1.1 $                              --\n --                                                                          --\n --          Copyright (C) 1992-1997 Free Software Foundation, Inc.          --\n --                                                                          --\n@@ -74,7 +74,7 @@ package Ada.Wide_Text_IO.Generic_Aux is\n    procedure Check_On_One_Line (File : File_Type; Length : Integer);\n    --  Check to see if item of length Integer characters can fit on\n    --  current line. Call New_Line if not, first checking that the\n-   --  line length can accomodate Length characters, raise Layout_Error\n+   --  line length can accommodate Length characters, raise Layout_Error\n    --  if item is too large for a single line.\n \n    function Is_Blank (C : Character) return Boolean;"}, {"sha": "aca20c0b69cf2f377f0014a48e2865a55244f268", "filename": "gcc/ada/decl.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdecl.c?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *                            $Revision$\n+ *                            $Revision: 1.5 $\n  *                                                                          *\n  *          Copyright (C) 1992-2001, Free Software Foundation, Inc.         *\n  *                                                                          *\n@@ -3395,7 +3395,7 @@ gnat_to_gnu_entity (gnat_entity, gnu_expr, definition)\n \t\t\t\t returns_by_ref,\n \t\t\t\t Function_Returns_With_DSP (gnat_entity));\n \n-\t/* ??? For now, don't consider nested fuctions pure.  */\n+\t/* ??? For now, don't consider nested functions pure.  */\n \tif (! global_bindings_p ())\n \t  pure_flag = 0;\n "}, {"sha": "493a8c11854813c974d997d238152b37dfe4d581", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision: 1.343 $\n+--                            $Revision: 1.1 $\n --                                                                          --\n --          Copyright (C) 1992-2001, Free Software Foundation, Inc.         --\n --                                                                          --\n@@ -887,7 +887,7 @@ package body Exp_Ch6 is\n             --  Deal with access types where the actual subtpe and the\n             --  formal subtype are not the same, requiring a check.\n \n-            --  It is neccessary to exclude tagged types because of \"downward\n+            --  It is necessary to exclude tagged types because of \"downward\n             --  conversion\" errors and a strange assertion error in namet\n             --  from gnatf in bug 1215-001 ???\n "}, {"sha": "8e45b4387c5ffb4ac4b9059df39390902854ef51", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision: 1.438 $\n+--                            $Revision: 1.1 $\n --                                                                          --\n --          Copyright (C) 1992-2001, Free Software Foundation, Inc.         --\n --                                                                          --\n@@ -8534,7 +8534,7 @@ package body Exp_Ch9 is\n \n       procedure Traverse is new Traverse_Proc;\n \n-   --  Start of processsing for Update_Prival_Subtypes\n+   --  Start of processing for Update_Prival_Subtypes\n \n    begin\n       Traverse (N);"}, {"sha": "52c1998915089d81f7c0dbc8564bdabf3f8ec7ec", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision$\n+--                            $Revision: 1.2 $\n --                                                                          --\n --          Copyright (C) 1992-2001, Free Software Foundation, Inc.         --\n --                                                                          --\n@@ -1072,12 +1072,12 @@ package body Exp_Util is\n    --    Val : T := Expr;\n    --\n    --  <elsif Expr is an entity_name>\n-   --    Val : T (contraints taken from Expr) := Expr;\n+   --    Val : T (constraints taken from Expr) := Expr;\n    --\n    --  <else>\n    --    type Axxx is access all T;\n    --    Rval : Axxx := Expr'ref;\n-   --    Val  : T (contraints taken from Rval) := Rval.all;\n+   --    Val  : T (constraints taken from Rval) := Rval.all;\n \n    --    ??? note: when the Expression is allocated in the secondary stack\n    --              we could use it directly instead of copying it by declaring"}, {"sha": "0f180edb7dbe512369cb7cbb3c8f7048ecc7d9f8", "filename": "gcc/ada/fname-sf.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Ffname-sf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Ffname-sf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffname-sf.ads?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -39,7 +39,7 @@\n --    from tools that do not want to include the compiler front end.\n \n --  Note that this unit does depend on several of the compiler front-end\n---  sources, including osint. If it is necesary to scan source file name\n+--  sources, including osint. If it is necessary to scan source file name\n --  pragmas with less dependence on such sources, look at unit SFN_Scan.\n \n package Fname.SF is"}, {"sha": "9f24a6892fbb7aa5f374e0b6f86ad870f6691035", "filename": "gcc/ada/freeze.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Ffreeze.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Ffreeze.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.ads?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                            $Revision: 1.14 $\n+--                            $Revision: 1.1 $\n --                                                                          --\n --          Copyright (C) 1992-2000, Free Software Foundation, Inc.         --\n --                                                                          --\n@@ -102,7 +102,7 @@ package Freeze is\n    --      These have a delayed freeze. Gigi will generate code to evaluate\n    --      the initialization expression if present and store it in a temp.\n    --      The actual object is created at the point of the freeze, and if\n-   --      neccessary initialized by copying the value of this temporary.\n+   --      necessary initialized by copying the value of this temporary.\n \n    --    Formal Parameters\n    --"}, {"sha": "654e11c494cbfaf40082456ce1a691ee3e6005d1", "filename": "gcc/ada/g-awk.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fg-awk.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fg-awk.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-awk.adb?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision: 1.10 $\n+--                            $Revision: 1.1 $\n --                                                                          --\n --            Copyright (C) 2000-2001 Ada Core Technologies, Inc.           --\n --                                                                          --\n@@ -662,7 +662,7 @@ package body GNAT.AWK is\n       Results : Boolean := False;\n \n    begin\n-      --  Iterate throught the filters table, if pattern match call action.\n+      --  Iterate through the filters table, if pattern match call action.\n \n       for F in 1 .. Pattern_Action_Table.Last (Filters) loop\n          if Patterns.Match (Filters.Table (F).Pattern.all, Session) then"}, {"sha": "f1ee5c4a60360e050d646281ce0c31d058ed212b", "filename": "gcc/ada/g-comlin.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fg-comlin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fg-comlin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-comlin.ads?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                            $Revision: 1.24 $\n+--                            $Revision: 1.1 $\n --                                                                          --\n --            Copyright (C) 1999-2001 Ada Core Technologies, Inc.           --\n --                                                                          --\n@@ -227,7 +227,7 @@ package GNAT.Command_Line is\n    --  Returns parameter associated with the last switch returned by Getopt.\n    --  If no parameter was associated with the last switch, or no previous\n    --  call has been made to Get_Argument, raises Invalid_Parameter.\n-   --  If the last switch was associated with an optionnal argument and this\n+   --  If the last switch was associated with an optional argument and this\n    --  argument was not found on the command line, Parameter returns an empty\n    --  string\n "}, {"sha": "677f5c4527a3d855cffc410a8b5ee604363a9d01", "filename": "gcc/ada/g-dirope.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fg-dirope.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fg-dirope.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dirope.adb?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision$\n+--                            $Revision: 1.2 $\n --                                                                          --\n --            Copyright (C) 1998-2001 Ada Core Technologies, Inc.           --\n --                                                                          --\n@@ -228,7 +228,7 @@ package body GNAT.Directory_Operations is\n \n       procedure Var (K : in out Positive);\n       --  Translate variable name starting at position K with the associated\n-      --  environement value.\n+      --  environment value.\n \n       procedure Free is\n          new Unchecked_Deallocation (String, OS_Lib.String_Access);\n@@ -304,7 +304,7 @@ package body GNAT.Directory_Operations is\n \n             if Path (E) = '}' then\n \n-               --  OK found, translate with environement value\n+               --  OK found, translate with environment value\n \n                declare\n                   Env : OS_Lib.String_Access :="}, {"sha": "246e36addbbce89a6660c29572e1d7139e783916", "filename": "gcc/ada/g-dyntab.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fg-dyntab.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fg-dyntab.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dyntab.ads?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                            $Revision: 1.11 $\n+--                            $Revision: 1.1 $\n --                                                                          --\n --            Copyright (C) 2000-2001 Ada Core Technologies, Inc.           --\n --                                                                          --\n@@ -142,7 +142,7 @@ package GNAT.Dynamic_Tables is\n    procedure Set_Last (T : in out Instance; New_Val : Table_Index_Type);\n    pragma Inline (Set_Last);\n    --  This procedure sets Last to the indicated value. If necessary the\n-   --  table is reallocated to accomodate the new value (i.e. on return\n+   --  table is reallocated to accommodate the new value (i.e. on return\n    --  the allocated table has an upper bound of at least Last). If\n    --  Set_Last reduces the size of the table, then logically entries are\n    --  removed from the table. If Set_Last increases the size of the"}, {"sha": "4837ecef966058ef99974fb376b4eea191c34c96", "filename": "gcc/ada/g-socket.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fg-socket.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fg-socket.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.ads?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                            $Revision: 1.22 $\n+--                            $Revision: 1.1 $\n --                                                                          --\n --              Copyright (C) 2001 Ada Core Technologies, Inc.              --\n --                                                                          --\n@@ -48,7 +48,7 @@ package GNAT.Sockets is\n    --  Sockets are designed to provide a consistent communication\n    --  facility between applications. This package provides an\n    --  Ada-like interface similar to the one proposed as part of the\n-   --  BSD socket layer. This is a system independant thick binding.\n+   --  BSD socket layer. This is a system independent thick binding.\n    --  Here is a typical example of what you can do.\n \n    --  with GNAT.Sockets; use GNAT.Sockets;\n@@ -771,7 +771,7 @@ package GNAT.Sockets is\n    --  Return True if Socket is present in Item\n \n    --  C select() waits for a number of file descriptors to change\n-   --  status. Usually, three independant sets of descriptors are\n+   --  status. Usually, three independent sets of descriptors are\n    --  watched (read, write and exception). A timeout gives an upper\n    --  bound on the amount of time elapsed before select returns.\n    --  This function blocks until an event occurs. On some platforms,"}, {"sha": "6074509636d639bfbfe03a483cb59ccc974e001d", "filename": "gcc/ada/g-table.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fg-table.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fg-table.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-table.ads?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                            $Revision: 1.12 $\n+--                            $Revision: 1.1 $\n --                                                                          --\n --            Copyright (C) 1998-2001 Ada Core Technologies, Inc.           --\n --                                                                          --\n@@ -148,7 +148,7 @@ pragma Elaborate_Body (Table);\n    procedure Set_Last (New_Val : Table_Index_Type);\n    pragma Inline (Set_Last);\n    --  This procedure sets Last to the indicated value. If necessary the\n-   --  table is reallocated to accomodate the new value (i.e. on return\n+   --  table is reallocated to accommodate the new value (i.e. on return\n    --  the allocated table has an upper bound of at least Last). If Set_Last\n    --  reduces the size of the table, then logically entries are removed\n    --  from the table. If Set_Last increases the size of the table, then"}, {"sha": "4010611107610fb2cc0e9cdd9fa20feaf0a0dfdc", "filename": "gcc/ada/g-traceb.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fg-traceb.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fg-traceb.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-traceb.ads?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                            $Revision: 1.11 $\n+--                            $Revision: 1.1 $\n --                                                                          --\n --           Copyright (C) 1999-2000 Ada Core Technologies, Inc.            --\n --                                                                          --\n@@ -45,7 +45,7 @@\n \n --  To analyze the code locations later using addr2line or gdb, the necessary\n --  units must be compiled with the debugging switch -g in the usual manner.\n---  Note that it is not necesary to compile with -g to use Call_Chain. In\n+--  Note that it is not necessary to compile with -g to use Call_Chain. In\n --  other words, the following sequence of steps can be used:\n \n --     Compile without -g"}, {"sha": "def4d03e5d757757d8f4ac7cd03028f59c835210", "filename": "gcc/ada/gnat-style.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fgnat-style.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fgnat-style.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat-style.texi?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -366,7 +366,7 @@ a follows:\n \n @noindent\n The \"elsif\", \"else\" and \"end if\" always line up with the \"if\" keyword. The\n-prefered location for splitting the line is before \"and\" or \"or\". The\n+preferred location for splitting the line is before \"and\" or \"or\". The\n continuation of a condition is indented with two spaces or as many as needed\n to make nesting clear.\n As exception, if conditions are closely related either of the following is"}, {"sha": "6d444c1fb825692ae7435915fdcd56e19685ebd2", "filename": "gcc/ada/gnatchop.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fgnatchop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fgnatchop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatchop.adb?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision: 1.44 $\n+--                            $Revision: 1.1 $\n --                                                                          --\n --            Copyright (C) 1998-2001 Ada Core Technologies, Inc.           --\n --                                                                          --\n@@ -596,7 +596,7 @@ procedure Gnatchop is\n \n       --  Call Gnat on the source filename argument with special options\n       --  to generate offset information. If this special compilation completes\n-      --  succesfully then we can do the actual gnatchop operation.\n+      --  successfully then we can do the actual gnatchop operation.\n \n       Spawn (Gnat_Cmd.all, Gnat_Args.all & Chop_Name, Success);\n "}, {"sha": "d20c9cbad97ffcd627a7777aef1a8228327f3f99", "filename": "gcc/ada/init.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -4,7 +4,7 @@\n  *                                                                          *\n  *                                 I N I T                                  *\n  *                                                                          *\n- *                            $Revision$\n+ *                            $Revision: 1.2 $\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n@@ -344,7 +344,7 @@ __gnat_error_handler (sig, sip, context)\n \t}\n       else\n \t{\n-\t  /* See if the page before the faulting page is accessable.  Do that\n+\t  /* See if the page before the faulting page is accessible.  Do that\n \t     by trying to access it.  We'd like to simply try to access\n \t     4096 + the faulting address, but it's not guaranteed to be\n \t     the actual address, just to be on the same page.  */\n@@ -703,7 +703,7 @@ __gnat_error_handler (info)\n \t}\n       else\n \t{\n-\t  /* See if the page before the faulting page is accessable.  Do that\n+\t  /* See if the page before the faulting page is accessible.  Do that\n \t     by trying to access it. */\n \t  recurse++;\n \t  * ((volatile char *) (info->ExceptionRecord->ExceptionInformation[1]\n@@ -1126,7 +1126,7 @@ __gnat_error_handler (sig, sip)\n \t}\n       else\n \t{\n-\t  /* See if the page before the faulting page is accessable.  Do that\n+\t  /* See if the page before the faulting page is accessible.  Do that\n \t     by trying to access it.  We'd like to simply try to access\n \t     4096 + the faulting address, but it's not guaranteed to be\n \t     the actual address, just to be on the same page.  */"}, {"sha": "5778ea9814fa782b9b47f70a8ae53a01cb766c69", "filename": "gcc/ada/layout.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Flayout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Flayout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flayout.adb?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision: 1.33 $\n+--                            $Revision: 1.1 $\n --                                                                          --\n --            Copyright (C) 2001 Free Software Foundation, Inc.             --\n --                                                                          --\n@@ -2042,7 +2042,7 @@ package body Layout is\n \n       --  For access types, set size/alignment. This is system address\n       --  size, except for fat pointers (unconstrained array access types),\n-      --  where the size is two times the address size, to accomodate the\n+      --  where the size is two times the address size, to accommodate the\n       --  two pointers that are required for a fat pointer (data and\n       --  template). Note that E_Access_Protected_Subprogram_Type is not\n       --  an access type for this purpose since it is not a pointer but is\n@@ -2072,7 +2072,7 @@ package body Layout is\n \n          --  For other access types, we use either address size, or, if\n          --  a fat pointer is used (pointer-to-unconstrained array case),\n-         --  twice the address size to accomodate a fat pointer.\n+         --  twice the address size to accommodate a fat pointer.\n \n          else\n             declare"}, {"sha": "af547f738f5beb417e48e60db405271d87294363", "filename": "gcc/ada/layout.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Flayout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Flayout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flayout.ads?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                            $Revision: 1.3 $\n+--                            $Revision: 1.1 $\n --                                                                          --\n --          Copyright (C) 2000-2001 Free Software Foundation, Inc.          --\n --                                                                          --\n@@ -64,7 +64,7 @@ package Layout is\n \n    procedure Set_Discrete_RM_Size (Def_Id : Entity_Id);\n    --  Set proper RM_Size for discrete size, this is normally the minimum\n-   --  number of bits to accomodate the range given, except in the case\n+   --  number of bits to accommodate the range given, except in the case\n    --  where the subtype statically matches the first subtype, in which\n    --  case the size must be copied from the first subtype. For generic\n    --  types, the RM_Size is simply set to zero. This routine also sets"}, {"sha": "9f2bb2a2215924e1b410df8a540bd73273bac439", "filename": "gcc/ada/mdllfile.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fmdllfile.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fmdllfile.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmdllfile.ads?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -34,7 +34,7 @@ package MDLL.Files is\n \n    function Get_Ext (Filename : in String)\n                      return String;\n-   --  return filename's extention.\n+   --  return filename's extension.\n \n    function Is_Ali (Filename : in String)\n                     return Boolean;\n@@ -47,6 +47,6 @@ package MDLL.Files is\n    function Ext_To (Filename : in String;\n                     New_Ext  : in String := No_Ext)\n                     return String;\n-   --  return Filename with the extention change to New_Ext.\n+   --  return Filename with the extension change to New_Ext.\n \n end MDLL.Files;"}, {"sha": "474aafffdd164347e77df2762256397e50db44c5", "filename": "gcc/ada/mlib-fil.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fmlib-fil.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fmlib-fil.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-fil.ads?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                            $Revision: 1.2 $\n+--                            $Revision: 1.1 $\n --                                                                          --\n --              Copyright (C) 2001, Ada Core Technologies, Inc.             --\n --                                                                          --\n@@ -34,10 +34,10 @@ package MLib.Fil is\n      (Filename : String;\n       New_Ext  : String := \"\")\n       return     String;\n-   --  Return Filename with the extention change to New_Ext.\n+   --  Return Filename with the extension change to New_Ext.\n \n    function Get_Ext (Filename : in String) return String;\n-   --  Return extention of filename.\n+   --  Return extension of filename.\n \n    function Is_Archive (Filename : String) return Boolean;\n    --  Test if filename is an archive"}, {"sha": "fdb3278a61f0f2620b34631ab938c4a7a4fd82ad", "filename": "gcc/ada/osint.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fosint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fosint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.ads?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                            $Revision: 1.108 $\n+--                            $Revision: 1.1 $\n --                                                                          --\n --          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n --                                                                          --\n@@ -113,7 +113,7 @@ package Osint is\n    --\n    --  Initialize may terminate execution if the parameters are invalid or some\n    --  other fatal error is encountered. The interface is set up to\n-   --  accomodate scanning a series of files (e.g. as the result of\n+   --  accommodate scanning a series of files (e.g. as the result of\n    --  wild card references in DOS, or an expanded list of source files\n    --  in Unix). Of course it is perfectly possible to ignore this in\n    --  the implementation and provide for opening only one file.\n@@ -425,7 +425,7 @@ package Osint is\n    --    3. The information could be written to a separate file, whose name is\n    --       related to the name of the source file by a fixed convention.\n \n-   --  Which of these three methods is chosen depends on the contraints of the\n+   --  Which of these three methods is chosen depends on the constraints of the\n    --  host operating system. The interface described here is independent of\n    --  which of these approaches is used.\n "}, {"sha": "b100aca6cf1b2239b017fd7a7eaaa2582cfb2710", "filename": "gcc/ada/s-fatgen.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fs-fatgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fs-fatgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fatgen.adb?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision: 1.19 $\n+--                            $Revision: 1.1 $\n --                                                                          --\n --          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n --                                                                          --\n@@ -174,7 +174,7 @@ package body System.Fat_Gen is\n \n          --  More useful would be defining Expo to be T'Machine_Emin - 1 or\n          --  T'Machine_Emin - T'Machine_Mantissa, which would preserve\n-         --  monotonicity of the exponent fuction ???\n+         --  monotonicity of the exponent function ???\n \n       --  Check for infinities, transfinites, whatnot.\n "}, {"sha": "9c21436874d34d4f65fa692f18c54ded44350c7a", "filename": "gcc/ada/s-imgrea.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fs-imgrea.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fs-imgrea.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-imgrea.adb?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision: 1.45 $\n+--                            $Revision: 1.1 $\n --                                                                          --\n --          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n --                                                                          --\n@@ -158,7 +158,7 @@ package body System.Img_Real is\n \n       Digs : String (1 .. 2 * Field_Max + 16);\n       --  Array used to hold digits of converted integer value. This is a\n-      --  large enough buffer to accomodate ludicrous values of Fore and Aft.\n+      --  large enough buffer to accommodate ludicrous values of Fore and Aft.\n \n       Ndigs : Natural;\n       --  Number of digits stored in Digs (and also subscript of last digit)"}, {"sha": "8271648db4680ff2b31bd30ba9c527c5fef5ac1d", "filename": "gcc/ada/s-taprop.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fs-taprop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fs-taprop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop.ads?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---                             $Revision: 1.40 $\n+--                             $Revision: 1.1 $\n --                                                                          --\n --          Copyright (C) 1992-2001, Free Software Foundation, Inc.         --\n --                                                                          --\n@@ -453,7 +453,7 @@ package System.Task_Primitives.Operations is\n    --  Suspend a specific task when the underlying thread library provides\n    --  such functionality, unless the thread associated with T is\n    --  Thread_Self.\n-   --  Such functionnality is needed by gdb on some targets (e.g VxWorks)\n+   --  Such functionality is needed by gdb on some targets (e.g VxWorks)\n    --  Return True is the operation is successful\n \n    function Resume_Task\n@@ -462,7 +462,7 @@ package System.Task_Primitives.Operations is\n    --  Resume a specific task when the underlying thread library provides\n    --  such functionality, unless the thread associated with T is\n    --  Thread_Self.\n-   --  Such functionnality is needed by gdb on some targets (e.g VxWorks)\n+   --  Such functionality is needed by gdb on some targets (e.g VxWorks)\n    --  Return True is the operation is successful\n \n    procedure Lock_All_Tasks_List;"}, {"sha": "6dc221f6797aa5821a9ca79ba128f10a006620b9", "filename": "gcc/ada/s-tasdeb.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fs-tasdeb.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fs-tasdeb.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasdeb.ads?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---                             $Revision: 1.16 $\n+--                             $Revision: 1.1 $\n --                                                                          --\n --          Copyright (C) 1997-1998, Free Software Foundation, Inc.         --\n --                                                                          --\n@@ -117,14 +117,14 @@ package System.Tasking.Debug is\n    --  Suspend all the tasks except the one whose associated thread is\n    --  Thread_Self by traversing All_Tasks_Lists and calling\n    --  System.Task_Primitives.Operations.Suspend_Task\n-   --  Such functionnality is needed by gdb on some targets (e.g VxWorks)\n+   --  Such functionality is needed by gdb on some targets (e.g VxWorks)\n    --  Warning: for efficiency purposes, there is no locking.\n \n    procedure Resume_All_Tasks (Thread_Self : OS_Interface.Thread_Id);\n    --  Resume all the tasks except the one whose associated thread is\n    --  Thread_Self by traversing All_Tasks_Lists and calling\n    --  System.Task_Primitives.Operations.Continue_Task\n-   --  Such functionnality is needed by gdb on some targets (e.g VxWorks)\n+   --  Such functionality is needed by gdb on some targets (e.g VxWorks)\n    --  Warning: for efficiency purposes, there is no locking.\n \n end System.Tasking.Debug;"}, {"sha": "6bb3cccc6d4a4a79f25944e788e7ae947ba1c80d", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision: 1.232 $\n+--                            $Revision: 1.1 $\n --                                                                          --\n --          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n --                                                                          --\n@@ -2011,7 +2011,7 @@ package body Sem_Aggr is\n \n       procedure Resolve_Aggr_Expr (Expr : Node_Id; Component : Node_Id);\n       --  Analyzes and resolves expression Expr against the Etype of the\n-      --  Component. This routine also applies all appropiate checks to Expr.\n+      --  Component. This routine also applies all appropriate checks to Expr.\n       --  It finally saves a Expr in the newly created association list that\n       --  will be attached to the final record aggregate. Note that if the\n       --  Parent pointer of Expr is not set then Expr was produced with a"}, {"sha": "287064542a2cbd221ebc75cd8e9a8904587cbc41", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision: 1.552 $\n+--                            $Revision: 1.1 $\n --                                                                          --\n --          Copyright (C) 1992-2001, Free Software Foundation, Inc.         --\n --                                                                          --\n@@ -5457,7 +5457,7 @@ package body Sem_Attr is\n \n       when Attribute_Small =>\n \n-         --  The floating-point case is present only for Ada 83 compatability.\n+         --  The floating-point case is present only for Ada 83 compatibility.\n          --  Note that strictly this is an illegal addition, since we are\n          --  extending an Ada 95 defined attribute, but we anticipate an\n          --  ARG ruling that will permit this."}, {"sha": "c1f172bcd52b135ae9cc1768726dddb04bc433df", "filename": "gcc/ada/sem_case.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fsem_case.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fsem_case.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_case.ads?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                            $Revision: 1.5 $                              --\n+--                            $Revision: 1.1 $                              --\n --                                                                          --\n --            Copyright (C) 1996 Free Software Foundation, Inc.             --\n --                                                                          --\n@@ -28,7 +28,7 @@\n \n with Types; use Types;\n \n---  Package containing all the routines to proces a list of discrete choices.\n+--  Package containing all the routines to process a list of discrete choices.\n --  Such lists can occur in 3 different constructs: case statements, array\n --  aggregates and record variants. We have factorized what used to be 3 very\n --  similar sets of routines here. If you didn't figure it out already Choi"}, {"sha": "3fb6334d3ce4aaea61819fe28cf02d4390b16b31", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision: 1.390 $\n+--                            $Revision: 1.1 $\n --                                                                          --\n --          Copyright (C) 1992-2001, Free Software Foundation, Inc.         --\n --                                                                          --\n@@ -3049,8 +3049,8 @@ package body Sem_Ch13 is\n          S := 1;\n          B := Uint_1;\n \n-         --  S = size, B = 2 ** (size - 1) (can accomodate -B .. +(B - 1))\n-         --  Note that we accomodate the case where the bounds cross. This\n+         --  S = size, B = 2 ** (size - 1) (can accommodate -B .. +(B - 1))\n+         --  Note that we accommodate the case where the bounds cross. This\n          --  can happen either because of the way the bounds are declared\n          --  or because of the algorithm in Freeze_Fixed_Point_Type.\n \n@@ -3075,7 +3075,7 @@ package body Sem_Ch13 is\n             Hi := Lo;\n          end if;\n \n-         --  S = size, (can accomodate 0 .. (2**size - 1))\n+         --  S = size, (can accommodate 0 .. (2**size - 1))\n \n          S := 0;\n          while Hi >= Uint_2 ** S loop"}, {"sha": "f3b0de02651eb76ffe67421737a36eaa15759f48", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision$\n+--                            $Revision: 1.2 $\n --                                                                          --\n --          Copyright (C) 1992-2001, Free Software Foundation, Inc.         --\n --                                                                          --\n@@ -5259,7 +5259,7 @@ package body Sem_Ch3 is\n \n                   --  The following is only useful for the benefit of generic\n                   --  instances but it does not interfere with other\n-                  --  processsing for the non-generic case so we do it in all\n+                  --  processing for the non-generic case so we do it in all\n                   --  cases (for generics this statement is executed when\n                   --  processing the generic definition, see comment at the\n                   --  begining of this if statement)."}, {"sha": "9efa7ca022cecee112d7365edcbfb484ee08414f", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision$\n+--                            $Revision: 1.3 $\n --                                                                          --\n --          Copyright (C) 1997-2001 Free Software Foundation, Inc.          --\n --                                                                          --\n@@ -1035,7 +1035,7 @@ package body Sem_Elab is\n \n       --  If none of those cases holds, but Dynamic_Elaboration_Checks mode\n       --  is set, then we will do the check, but only in the inter-unit case\n-      --  (this is to accomodate unguarded elaboration calls from other units\n+      --  (this is to accommodate unguarded elaboration calls from other units\n       --  in which this same mode is set). We don't want warnings in this case,\n       --  it would generate warnings having nothing to do with elaboration.\n \n@@ -1164,7 +1164,7 @@ package body Sem_Elab is\n \n       --  If none of those cases holds, but Dynamic_Elaboration_Checks mode\n       --  is set, then we will do the check, but only in the inter-unit case\n-      --  (this is to accomodate unguarded elaboration calls from other units\n+      --  (this is to accommodate unguarded elaboration calls from other units\n       --  in which this same mode is set). We inhibit warnings in this case,\n       --  since this instantiation is not occurring in elaboration code.\n "}, {"sha": "de0f52cb5545fa03d3451d717085ac50048b5acb", "filename": "gcc/ada/sem_maps.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fsem_maps.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fsem_maps.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_maps.ads?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                              $Revision: 1.4 $\n+--                              $Revision: 1.1 $\n --                                                                          --\n --          Copyright (C) 1996-1999 Free Software Foundation, Inc.          --\n --                                                                          --\n@@ -98,7 +98,7 @@ private\n    --  maps have a fixed size and never need to be reallocated. Furthermore,\n    --  the headers of the hash table of a dynamically allocated map can be\n    --  chosen according to the total number of entries in the map, to\n-   --  accomodate efficiently generic units of different sizes (Unchecked_\n+   --  accommodate efficiently generic units of different sizes (Unchecked_\n    --  Conversion vs. Generic_Elementary_Functions, for example). So in\n    --  fact both components of a map have fixed size, and can be allocated\n    --  using the standard table mechanism. A Maps_Table holds records that"}, {"sha": "e48319ff055b2237a294ed85c94afe02eb1b74c8", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision$\n+--                            $Revision: 1.4 $\n --                                                                          --\n --          Copyright (C) 1992-2001, Free Software Foundation, Inc.         --\n --                                                                          --\n@@ -787,7 +787,7 @@ package body Sem_Res is\n       type Kind_Test is access function (E : Entity_Id) return Boolean;\n \n       function Is_Definite_Access_Type (E : Entity_Id) return Boolean;\n-      --  Determine whether E is an acess type declared by an access decla-\n+      --  Determine whether E is an access type declared by an access decla-\n       --  ration, and  not an (anonymous) allocator type.\n \n       function Operand_Type_In_Scope (S : Entity_Id) return Boolean;\n@@ -5008,7 +5008,7 @@ package body Sem_Res is\n \n       --  If we are taking the reference of a volatile entity, then treat\n       --  it as a potential modification of this entity. This is much too\n-      --  conservative, but is neccessary because remove side effects can\n+      --  conservative, but is necessary because remove side effects can\n       --  result in transformations of normal assignments into reference\n       --  sequences that otherwise fail to notice the modification.\n "}, {"sha": "f31738df9b186aa0e12a2a35af9c3734d3be0545", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                            $Revision: 1.225 $\n+--                            $Revision: 1.1 $\n --                                                                          --\n --          Copyright (C) 1992-2001, Free Software Foundation, Inc.         --\n --                                                                          --\n@@ -591,7 +591,7 @@ package Sem_Util is\n    --  Determines if T1 and T2 represent exactly the same type. Two types\n    --  are the same if they are identical, or if one is an unconstrained\n    --  subtype of the other, or they are both common subtypes of the same\n-   --  type with identical contraints. The result returned is conservative.\n+   --  type with identical constraints. The result returned is conservative.\n    --  It is True if the types are known to be the same, but a result of\n    --  False is indecisive (e.g. the compiler may not be able to tell that\n    --  two constraints are identical)."}, {"sha": "8cb5b4b9401b045ec779c70fd0b503a9a56217f3", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                            $Revision: 1.2 $\n+--                            $Revision: 1.3 $\n --                                                                          --\n --          Copyright (C) 1992-2001, Free Software Foundation, Inc.         --\n --                                                                          --\n@@ -6208,7 +6208,7 @@ package Sinfo is\n       --  to unchecked conversion, and these are most conveniently performed\n       --  in the specialized back-end.\n \n-      --  To accomodate this requirement, for such back ends, the following\n+      --  To accommodate this requirement, for such back ends, the following\n       --  special node is generated recording an unchecked conversion that\n       --  needs to be validated. The back end should post an appropriate\n       --  error message if the unchecked conversion is invalid or warrants"}, {"sha": "13e0c3220180898fadfde64935373d28d9c630a8", "filename": "gcc/ada/sinput.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fsinput.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Fsinput.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput.ads?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                            $Revision$\n+--                            $Revision: 1.2 $\n --                                                                          --\n --          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n --                                                                          --\n@@ -619,7 +619,7 @@ private\n      (S       : in out Source_File_Record;\n       New_Max : Nat);\n    --  Allocate or reallocate the lines table for the given source file so\n-   --  that it can accomodate at least New_Max lines. Also allocates or\n+   --  that it can accommodate at least New_Max lines. Also allocates or\n    --  reallocates logical lines table if source ref pragmas are present.\n \n    procedure Add_Line_Tables_Entry"}, {"sha": "f8084691e35a80fc21ed0491c1899b5792017fb8", "filename": "gcc/ada/table.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Ftable.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Ftable.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftable.adb?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision: 1.44 $\n+--                            $Revision: 1.1 $\n --                                                                          --\n --          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n --                                                                          --\n@@ -306,7 +306,7 @@ package body Table is\n       -- Tree_Read --\n       ---------------\n \n-      --  Note: we allocate only the space required to accomodate the data\n+      --  Note: we allocate only the space required to accommodate the data\n       --  actually written, which means that a Tree_Write/Tree_Read sequence\n       --  does an implicit Release.\n "}, {"sha": "b0e2c8dd47b4f8a09fa34bd6f2c65f0af315236a", "filename": "gcc/ada/table.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Ftable.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Ftable.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftable.ads?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                            $Revision: 1.38 $\n+--                            $Revision: 1.1 $\n --                                                                          --\n --          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n --                                                                          --\n@@ -155,7 +155,7 @@ pragma Elaborate_Body (Table);\n       procedure Set_Last (New_Val : Table_Index_Type);\n       pragma Inline (Set_Last);\n       --  This procedure sets Last to the indicated value. If necessary the\n-      --  table is reallocated to accomodate the new value (i.e. on return\n+      --  table is reallocated to accommodate the new value (i.e. on return\n       --  the allocated table has an upper bound of at least Last). If Set_Last\n       --  reduces the size of the table, then logically entries are removed\n       --  from the table. If Set_Last increases the size of the table, then"}, {"sha": "53c47c3fb95f1fd982162c16a104c2954cff8640", "filename": "gcc/ada/types.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Ftypes.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Ftypes.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftypes.ads?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                            $Revision$\n+--                            $Revision: 1.2 $\n --                                                                          --\n --          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n --                                                                          --\n@@ -199,7 +199,7 @@ pragma Preelaborate (Types);\n    --  character in the source buffer. As noted above, diffferent source\n    --  buffers have different ranges, so it is possible to tell from a\n    --  Source_Ptr value which source it refers to. Note that negative numbers\n-   --  are allowed to accomodate the following special values.\n+   --  are allowed to accommodate the following special values.\n \n    No_Location : constant Source_Ptr := -1;\n    --  Value used to indicate no source position set in a node"}, {"sha": "bb2d510cffab54ad1a2624473b99f7e12bdec461", "filename": "gcc/ada/urealp.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Furealp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e383e25e3e1bb4e1e82be7583b13615b478b2/gcc%2Fada%2Furealp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Furealp.adb?ref=638e383e25e3e1bb4e1e82be7583b13615b478b2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                             $Revision: 1.60 $\n+--                             $Revision: 1.1 $\n --                                                                          --\n --          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n --                                                                          --\n@@ -162,7 +162,7 @@ package body Urealp is\n \n       --  For based numbers, just subtract the decimal exponent from the\n       --  high estimate of the number of digits in the numerator and add\n-      --  one to accomodate possible round off errors for non-decimal\n+      --  one to accommodate possible round off errors for non-decimal\n       --  bases. For example:\n \n       --     1_500_000 / 10**4 = 1.50E-2\n@@ -202,7 +202,7 @@ package body Urealp is\n \n       --  For based numbers, just subtract the decimal exponent from the\n       --  low estimate of the number of digits in the numerator and subtract\n-      --  one to accomodate possible round off errors for non-decimal\n+      --  one to accommodate possible round off errors for non-decimal\n       --  bases. For example:\n \n       --     1_500_000 / 10**4 = 1.50E-2\n@@ -988,7 +988,7 @@ package body Urealp is\n          return UR_Is_Negative (Left);\n \n       --  If we fall through, full gruesome test is required. This happens\n-      --  if the numbers are close together, or in some wierd (/=10) base.\n+      --  if the numbers are close together, or in some weird (/=10) base.\n \n       else\n          declare"}]}