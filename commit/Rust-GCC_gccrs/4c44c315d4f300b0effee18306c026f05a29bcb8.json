{"sha": "4c44c315d4f300b0effee18306c026f05a29bcb8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGM0NGMzMTVkNGYzMDBiMGVmZmVlMTgzMDZjMDI2ZjA1YTI5YmNiOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-07-08T16:34:37Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-07-08T16:34:37Z"}, "message": "tree-sra.c (sra_build_assignment): Handle CONVERT_EXPR_P dst.\n\n\t* tree-sra.c (sra_build_assignment): Handle CONVERT_EXPR_P\n\tdst.\n\nFrom-SVN: r137633", "tree": {"sha": "a8975fb9c41eb56aa01f13bb3de2d9eef818b190", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8975fb9c41eb56aa01f13bb3de2d9eef818b190"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c44c315d4f300b0effee18306c026f05a29bcb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c44c315d4f300b0effee18306c026f05a29bcb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c44c315d4f300b0effee18306c026f05a29bcb8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c44c315d4f300b0effee18306c026f05a29bcb8/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c91457541d06789db54fa7ce42fba6a91f53bafe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c91457541d06789db54fa7ce42fba6a91f53bafe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c91457541d06789db54fa7ce42fba6a91f53bafe"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "b93a55d879d2978d53752cb85be2c26e97c8f2f4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c44c315d4f300b0effee18306c026f05a29bcb8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c44c315d4f300b0effee18306c026f05a29bcb8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4c44c315d4f300b0effee18306c026f05a29bcb8", "patch": "@@ -1,3 +1,8 @@\n+2008-07-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* tree-sra.c (sra_build_assignment): Handle CONVERT_EXPR_P\n+\tdst.\n+\n 2008-07-05  Daniel Berlin  <dberlin@dberlin.org>\n \t\n \tFix PR tree-optimization/23455"}, {"sha": "16f719e5ecb2b2471f077304f22841e352d41a50", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c44c315d4f300b0effee18306c026f05a29bcb8/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c44c315d4f300b0effee18306c026f05a29bcb8/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=4c44c315d4f300b0effee18306c026f05a29bcb8", "patch": "@@ -2282,6 +2282,9 @@ sra_build_assignment (tree dst, tree src)\n \t  var = utmp;\n \t}\n \n+      /* fold_build3 (BIT_FIELD_REF, ...) sometimes returns a cast.  */\n+      STRIP_NOPS (dst);\n+\n       /* Finally, move and convert to the destination.  */\n       if (!useless_type_conversion_p (TREE_TYPE (dst), TREE_TYPE (var)))\n \t{\n@@ -2306,6 +2309,12 @@ sra_build_assignment (tree dst, tree src)\n       return list;\n     }\n \n+  /* fold_build3 (BIT_FIELD_REF, ...) sometimes returns a cast.  */\n+  if (CONVERT_EXPR_P (dst))\n+    {\n+      STRIP_NOPS (dst);\n+      src = fold_convert (TREE_TYPE (dst), src);\n+    }\n   /* It was hoped that we could perform some type sanity checking\n      here, but since front-ends can emit accesses of fields in types\n      different from their nominal types and copy structures containing\n@@ -2316,8 +2325,8 @@ sra_build_assignment (tree dst, tree src)\n      So we just assume type differences at this point are ok.\n      The only exception we make here are pointer types, which can be different\n      in e.g. structurally equal, but non-identical RECORD_TYPEs.  */\n-  if (POINTER_TYPE_P (TREE_TYPE (dst))\n-      && !useless_type_conversion_p (TREE_TYPE (dst), TREE_TYPE (src)))\n+  else if (POINTER_TYPE_P (TREE_TYPE (dst))\n+\t   && !useless_type_conversion_p (TREE_TYPE (dst), TREE_TYPE (src)))\n     src = fold_convert (TREE_TYPE (dst), src);\n \n   return build_gimple_modify_stmt (dst, src);"}]}