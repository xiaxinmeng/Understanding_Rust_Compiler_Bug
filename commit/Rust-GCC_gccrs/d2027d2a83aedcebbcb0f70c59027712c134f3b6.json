{"sha": "d2027d2a83aedcebbcb0f70c59027712c134f3b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDIwMjdkMmE4M2FlZGNlYmJjYjBmNzBjNTkwMjc3MTJjMTM0ZjNiNg==", "commit": {"author": {"name": "Ed Smith-Rowland", "email": "3dw4rd@verizon.net", "date": "2011-11-14T20:05:12Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-11-14T20:05:12Z"}, "message": "re PR c++/51107 ([C++11] Accepts invalid literal operator with void argument list.)\n\n\tPR c++/51107\n\t* typeck.c (check_literal_operator_args): Add processing_specialization\n\tto check for void template fn. Test for exact arity for non-template fn.\n\nFrom-SVN: r181363", "tree": {"sha": "b100efadc50bdae9660a11be08c3a1185bc733c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b100efadc50bdae9660a11be08c3a1185bc733c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2027d2a83aedcebbcb0f70c59027712c134f3b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2027d2a83aedcebbcb0f70c59027712c134f3b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2027d2a83aedcebbcb0f70c59027712c134f3b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2027d2a83aedcebbcb0f70c59027712c134f3b6/comments", "author": {"login": "emsr", "id": 1936479, "node_id": "MDQ6VXNlcjE5MzY0Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1936479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emsr", "html_url": "https://github.com/emsr", "followers_url": "https://api.github.com/users/emsr/followers", "following_url": "https://api.github.com/users/emsr/following{/other_user}", "gists_url": "https://api.github.com/users/emsr/gists{/gist_id}", "starred_url": "https://api.github.com/users/emsr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emsr/subscriptions", "organizations_url": "https://api.github.com/users/emsr/orgs", "repos_url": "https://api.github.com/users/emsr/repos", "events_url": "https://api.github.com/users/emsr/events{/privacy}", "received_events_url": "https://api.github.com/users/emsr/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eab880cf621b82e4f38aed74b58d2bd76f89c46a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eab880cf621b82e4f38aed74b58d2bd76f89c46a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eab880cf621b82e4f38aed74b58d2bd76f89c46a"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "cf91451775c1678d776a004d7c56d769ec04a0ff", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2027d2a83aedcebbcb0f70c59027712c134f3b6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2027d2a83aedcebbcb0f70c59027712c134f3b6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d2027d2a83aedcebbcb0f70c59027712c134f3b6", "patch": "@@ -1,3 +1,9 @@\n+2011-11-14  Ed Smith-Rowland  <3dw4rd@verizon.net>\n+\n+\tPR c++/51107\n+\t* typeck.c (check_literal_operator_args): Add processing_specialization\n+\tto check for void template fn. Test for exact arity for non-template fn.\n+\n 2011-11-14  Fabien Ch\u00eane  <fabien@gcc.gnu.org>\n \n \tPR c++/6936"}, {"sha": "b8d4c10c8ca29687dcee1ba56b95c9ec2151b97a", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2027d2a83aedcebbcb0f70c59027712c134f3b6/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2027d2a83aedcebbcb0f70c59027712c134f3b6/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=d2027d2a83aedcebbcb0f70c59027712c134f3b6", "patch": "@@ -8423,9 +8423,8 @@ check_literal_operator_args (const_tree decl,\n \t\t\t     bool *long_long_unsigned_p, bool *long_double_p)\n {\n   tree argtypes = TYPE_ARG_TYPES (TREE_TYPE (decl));\n-  if (processing_template_decl)\n-    return (argtypes == NULL_TREE\n-\t    || same_type_p (TREE_VALUE (argtypes), void_type_node));\n+  if (processing_template_decl || processing_specialization)\n+    return argtypes == void_list_node;\n   else\n     {\n       tree argtype;\n@@ -8494,7 +8493,7 @@ check_literal_operator_args (const_tree decl,\n       if (!argtype)\n \treturn false; /* Found ellipsis.  */\n \n-      if (arity > max_arity)\n+      if (arity != max_arity)\n \treturn false;\n \n       return true;"}, {"sha": "b30ee641923a4ac8dbbdbe8b595207ffe871ed2f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2027d2a83aedcebbcb0f70c59027712c134f3b6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2027d2a83aedcebbcb0f70c59027712c134f3b6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d2027d2a83aedcebbcb0f70c59027712c134f3b6", "patch": "@@ -1,3 +1,9 @@\n+2011-11-14  Ed Smith-Rowland  <3dw4rd@verizon.net>\n+\n+\tPR c++/51107\n+\t* g++.dg/cpp0x/udlit-args-neg.C: Add check for void argument non-\n+\ttemplate literal operator.\n+\n 2011-11-14  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.target/i386/sse4_1-floor-sfix-vec.c: New test."}, {"sha": "df7b7281c3d9b3381ef002772f16044cc689a57c", "filename": "gcc/testsuite/g++.dg/cpp0x/udlit-args-neg.C", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2027d2a83aedcebbcb0f70c59027712c134f3b6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fudlit-args-neg.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2027d2a83aedcebbcb0f70c59027712c134f3b6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fudlit-args-neg.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fudlit-args-neg.C?ref=d2027d2a83aedcebbcb0f70c59027712c134f3b6", "patch": "@@ -4,6 +4,9 @@\n \n class Foo { };\n \n+int\n+operator\"\" _Foo();\t// { dg-error \"has invalid argument list\" }\n+\n Foo\n operator\"\" _Foo(int *);\t// { dg-error \"has invalid argument list\" }\n "}]}