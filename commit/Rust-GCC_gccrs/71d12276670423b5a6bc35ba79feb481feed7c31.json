{"sha": "71d12276670423b5a6bc35ba79feb481feed7c31", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzFkMTIyNzY2NzA0MjNiNWE2YmMzNWJhNzlmZWI0ODFmZWVkN2MzMQ==", "commit": {"author": {"name": "Dodji Seketeli", "email": "dodji@redhat.com", "date": "2011-01-13T09:48:04Z"}, "committer": {"name": "Dodji Seketeli", "email": "dodji@gcc.gnu.org", "date": "2011-01-13T09:48:04Z"}, "message": "Fix PR debug/PR46973\n\ngcc/\n\n\t* dwarf2out.c (prune_unused_types_mark_generic_parms_dies): New\n\tstatic function.\n\t(prune_unused_types_mark): Use it.\n\ngcc/testsuite/\n\n\t* g++.dg/debug/dwarf2/template-params-9.C: New test.\n\nFrom-SVN: r168743", "tree": {"sha": "6039297f3e55f62ba5f887b004cb69b057c680d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6039297f3e55f62ba5f887b004cb69b057c680d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71d12276670423b5a6bc35ba79feb481feed7c31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71d12276670423b5a6bc35ba79feb481feed7c31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71d12276670423b5a6bc35ba79feb481feed7c31", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71d12276670423b5a6bc35ba79feb481feed7c31/comments", "author": null, "committer": null, "parents": [{"sha": "9b0f04e708f22d60c2093354798db28641e982a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b0f04e708f22d60c2093354798db28641e982a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b0f04e708f22d60c2093354798db28641e982a1"}], "stats": {"total": 71, "additions": 71, "deletions": 0}, "files": [{"sha": "2ae86134ea2ebca6ccbee30798265631388368db", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d12276670423b5a6bc35ba79feb481feed7c31/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d12276670423b5a6bc35ba79feb481feed7c31/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=71d12276670423b5a6bc35ba79feb481feed7c31", "patch": "@@ -1,3 +1,10 @@\n+2011-01-13  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tPR debug/PR46973\n+\t* dwarf2out.c (prune_unused_types_mark_generic_parms_dies): New\n+\tstatic function.\n+    \t(prune_unused_types_mark): Use it.\n+\n 2011-01-13  Andrey Belevantsev  <abel@ispras.ru>\n \n \tPR rtl-optimization/45352"}, {"sha": "ca1796746327c4efd4d1c117bfb30c786c04e3a1", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d12276670423b5a6bc35ba79feb481feed7c31/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d12276670423b5a6bc35ba79feb481feed7c31/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=71d12276670423b5a6bc35ba79feb481feed7c31", "patch": "@@ -6477,6 +6477,7 @@ static void output_loc_list (dw_loc_list_ref);\n static char *gen_internal_sym (const char *);\n \n static void prune_unmark_dies (dw_die_ref);\n+static void prune_unused_types_mark_generic_parms_dies (dw_die_ref);\n static void prune_unused_types_mark (dw_die_ref, int);\n static void prune_unused_types_walk (dw_die_ref);\n static void prune_unused_types_walk_attribs (dw_die_ref);\n@@ -22245,6 +22246,32 @@ prune_unused_types_walk_attribs (dw_die_ref die)\n     }\n }\n \n+/* Mark the generic parameters and arguments children DIEs of DIE.  */\n+\n+static void\n+prune_unused_types_mark_generic_parms_dies (dw_die_ref die)\n+{\n+  dw_die_ref c;\n+\n+  if (die == NULL || die->die_child == NULL)\n+    return;\n+  c = die->die_child;\n+  do\n+    {\n+      switch (c->die_tag)\n+\t{\n+\tcase DW_TAG_template_type_param:\n+\tcase DW_TAG_template_value_param:\n+\tcase DW_TAG_GNU_template_template_param:\n+\tcase DW_TAG_GNU_template_parameter_pack:\n+\t  prune_unused_types_mark (c, 1);\n+\t  break;\n+\tdefault:\n+\t  break;\n+\t}\n+      c = c->die_sib;\n+    } while (c && c != die->die_child);\n+}\n \n /* Mark DIE as being used.  If DOKIDS is true, then walk down\n    to DIE's children.  */\n@@ -22258,6 +22285,10 @@ prune_unused_types_mark (dw_die_ref die, int dokids)\n     {\n       /* We haven't done this node yet.  Mark it as used.  */\n       die->die_mark = 1;\n+      /* If this is the DIE of a generic type instantiation,\n+\t mark the children DIEs that describe its generic parms and\n+\t args.  */\n+      prune_unused_types_mark_generic_parms_dies (die);\n \n       /* We also have to mark its parents as used.\n \t (But we don't want to mark our parents' kids due to this.)  */"}, {"sha": "f0b7c3362a13ae14b13502c0a5add7b11181b6d3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d12276670423b5a6bc35ba79feb481feed7c31/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d12276670423b5a6bc35ba79feb481feed7c31/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=71d12276670423b5a6bc35ba79feb481feed7c31", "patch": "@@ -1,3 +1,8 @@\n+2011-01-13  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tPR debug/PR46973\n+\t* g++.dg/debug/dwarf2/template-params-9.C: New test.\n+\n 2011-01-13  Andrey Belevantsev  <abel@ispras.ru>\n \n \tPR rtl-optimization/45352"}, {"sha": "7af1d9192f867c57fe7d7c89e8ac9a23ed03e593", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/template-params-9.C", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d12276670423b5a6bc35ba79feb481feed7c31/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftemplate-params-9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d12276670423b5a6bc35ba79feb481feed7c31/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftemplate-params-9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftemplate-params-9.C?ref=71d12276670423b5a6bc35ba79feb481feed7c31", "patch": "@@ -0,0 +1,28 @@\n+// Origin PR debug/PR46973\n+// { dg-options \"-g -dA\" }\n+// { dg-do compile }\n+\n+struct S\n+{\n+  int f;\n+};\n+\n+template<typename T, int I, int *P, int S::*MP>\n+struct Base\n+{\n+  template<typename Z>\n+  struct Inner\n+  {\n+  };\n+};\n+\n+int a_global;\n+\n+int main ()\n+{\n+  Base<long, 47, &a_global, &S::f>::Inner<float> inner;\n+  return 0;\n+}\n+\n+// { dg-final { scan-assembler-times \"DIE \\\\(\\[^\\n\\r\\]*\\\\) DW_TAG_template_type_param\" 2 } }\n+// { dg-final { scan-assembler-times \"DIE \\\\(\\[^\\n\\r\\]*\\\\) DW_TAG_template_value_param\" 3 } }"}]}