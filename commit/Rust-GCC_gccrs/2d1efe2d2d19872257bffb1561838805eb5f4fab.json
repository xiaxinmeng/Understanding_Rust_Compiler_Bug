{"sha": "2d1efe2d2d19872257bffb1561838805eb5f4fab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQxZWZlMmQyZDE5ODcyMjU3YmZmYjE1NjE4Mzg4MDVlYjVmNGZhYg==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2011-07-13T09:57:08Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2011-07-13T09:57:08Z"}, "message": "Makefile.in (CRT0STUFF_T_CFLAGS): Remove.\n\n\tgcc:\n\t* Makefile.in (CRT0STUFF_T_CFLAGS): Remove.\n\t($(T)crt0.o, $(T)mcrt0.o, s-crt0): Remove.\n\t* config/i386/netware-crt0.c: Move to ../libgcc/config/i386.\n\t* config/i386/t-nwld (CRTSTUFF_T_CFLAGS, CRT0STUFF_T_CFLAGS): Remove.\n\t(CRT0_S, MCRT0_S): Remove.\n\t($(T)libgcc.def, $(T)libc.def, $(T)libcpre.def, $(T)posixpre.def):\n\tRemove.\n\t(s-crt0): Remove.\n\t* config.gcc (i[3456x]86-*-netware*): Remove extra_parts.\n\n\tlibgcc:\n\t* config/i386/netware-crt0.c: New file.\n\t* config/i386/t-nwld: Rename to ...\n\t* config/i386/t-slibgcc-nwld: ... this.\n\t* config/i386/t-nwld: New file.\n\t* config.host (i[3456x]86-*-netware*): Add i386/t-slibgcc-nwld to\n\ttmake_file.\n\tAdd crt0.o, libgcc.def, libc.def, libcpre.def, posixpre.def to\n\textra_parts.\n\nFrom-SVN: r176225", "tree": {"sha": "cbc547366cfc0f946a4235b8ca7d0cdbd6bb3499", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbc547366cfc0f946a4235b8ca7d0cdbd6bb3499"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d1efe2d2d19872257bffb1561838805eb5f4fab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d1efe2d2d19872257bffb1561838805eb5f4fab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d1efe2d2d19872257bffb1561838805eb5f4fab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d1efe2d2d19872257bffb1561838805eb5f4fab/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "09df293c7aa620c7c5494c7d7dbab2be2da0b040", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09df293c7aa620c7c5494c7d7dbab2be2da0b040", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09df293c7aa620c7c5494c7d7dbab2be2da0b040"}], "stats": {"total": 164, "additions": 93, "deletions": 71}, "files": [{"sha": "6b83a43b016f9f32b848a54735923c4bbcf6ea61", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d1efe2d2d19872257bffb1561838805eb5f4fab/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d1efe2d2d19872257bffb1561838805eb5f4fab/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2d1efe2d2d19872257bffb1561838805eb5f4fab", "patch": "@@ -1,3 +1,15 @@\n+2011-07-13  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* Makefile.in (CRT0STUFF_T_CFLAGS): Remove.\n+\t($(T)crt0.o, $(T)mcrt0.o, s-crt0): Remove.\n+\t* config/i386/netware-crt0.c: Move to ../libgcc/config/i386.\n+\t* config/i386/t-nwld (CRTSTUFF_T_CFLAGS, CRT0STUFF_T_CFLAGS): Remove.\n+\t(CRT0_S, MCRT0_S): Remove.\n+\t($(T)libgcc.def, $(T)libc.def, $(T)libcpre.def, $(T)posixpre.def):\n+\tRemove.\n+\t(s-crt0): Remove.\n+\t* config.gcc (i[3456x]86-*-netware*): Remove extra_parts.\n+\n 2011-07-12  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* cse.c (insert_with_costs): Put semi-colon after empty loop body"}, {"sha": "fcc8b7e203cadfcfcba6e70be7c0acd026a882ca", "filename": "gcc/Makefile.in", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d1efe2d2d19872257bffb1561838805eb5f4fab/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d1efe2d2d19872257bffb1561838805eb5f4fab/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=2d1efe2d2d19872257bffb1561838805eb5f4fab", "patch": "@@ -813,9 +813,6 @@ RUNTESTFLAGS =\n # Extra flags to use when compiling crt{begin,end}.o.\n CRTSTUFF_T_CFLAGS =\n \n-# Extra flags to use when compiling [m]crt0.o.\n-CRT0STUFF_T_CFLAGS =\n-\n # \"t\" or nothing, for building multilibbed versions of, say, crtbegin.o.\n T =\n \n@@ -1995,18 +1992,6 @@ $(T)crtbeginT.o: crtstuff.c $(GCC_PASSES) $(TCONFIG_H) auto-host.h \\\n \t$(GCC_FOR_TARGET) $(CRTSTUFF_CFLAGS) $(CRTSTUFF_T_CFLAGS) \\\n \t  -c $(srcdir)/crtstuff.c -DCRT_BEGIN -DCRTSTUFFT_O \\\n \t  -o $(T)crtbeginT$(objext)\n-\n-# Compile the start modules crt0.o and mcrt0.o that are linked with\n-# every program\n-$(T)crt0.o: s-crt0 ; @true\n-$(T)mcrt0.o: s-crt0; @true\n-\n-s-crt0:\t$(CRT0_S) $(MCRT0_S) $(GCC_PASSES) $(CONFIG_H)\n-\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(CRT0STUFF_T_CFLAGS) \\\n-\t  -o $(T)crt0.o -c $(CRT0_S)\n-\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(CRT0STUFF_T_CFLAGS) \\\n-\t  -o $(T)mcrt0.o -c $(MCRT0_S)\n-\t$(STAMP) s-crt0\n #\f\n # Compiling object files from source files.\n "}, {"sha": "c9dab55c63dc01006ab29503ee9471ef3541e22a", "filename": "gcc/config.gcc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d1efe2d2d19872257bffb1561838805eb5f4fab/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d1efe2d2d19872257bffb1561838805eb5f4fab/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=2d1efe2d2d19872257bffb1561838805eb5f4fab", "patch": "@@ -1370,7 +1370,6 @@ i[3456x]86-*-netware*)\n \t\textra_objs=\"$extra_objs nwld.o\"\n \t\ttm_file=\"${tm_file} i386/nwld.h\"\n \t \ttmake_file=\"${tmake_file} i386/t-nwld t-slibgcc-dummy\"\n-\t\textra_parts=\"crt0.o libgcc.def libc.def libcpre.def posixpre.def\"\n \t\t;;\n \tesac\n \tcase x${enable_threads} in"}, {"sha": "ecd1a3bfccc8000558ae2e755bbb8869e250b37a", "filename": "gcc/config/i386/t-nwld", "status": "modified", "additions": 1, "deletions": 26, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d1efe2d2d19872257bffb1561838805eb5f4fab/gcc%2Fconfig%2Fi386%2Ft-nwld", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d1efe2d2d19872257bffb1561838805eb5f4fab/gcc%2Fconfig%2Fi386%2Ft-nwld", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-nwld?ref=2d1efe2d2d19872257bffb1561838805eb5f4fab", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009\n+# Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009, 2011\n # Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n@@ -17,31 +17,6 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-CRTSTUFF_T_CFLAGS = -mpreferred-stack-boundary=2\n-CRT0STUFF_T_CFLAGS = -mpreferred-stack-boundary=2 $(INCLUDES)\n-# this is a slight misuse (it's not an assembler file)\n-CRT0_S = $(srcdir)/config/i386/netware-crt0.c\n-MCRT0_S = $(srcdir)/config/i386/netware-crt0.c\n-\n-$(T)libgcc.def: $(srcdir)/config/i386/t-nwld\n-\techo \"module libgcc_s\" >$@\n-\n-$(T)libc.def: $(srcdir)/config/i386/t-nwld\n-\techo \"module libc\" >$@\n-\n-$(T)libcpre.def: $(srcdir)/config/i386/t-nwld\n-\techo \"start _LibCPrelude\" >$@\n-\techo \"exit _LibCPostlude\" >>$@\n-\techo \"check _LibCCheckUnload\" >>$@\n-\n-$(T)posixpre.def: $(srcdir)/config/i386/t-nwld\n-\techo \"start POSIX_Start\" >$@\n-\techo \"exit POSIX_Stop\" >>$@\n-\techo \"check POSIX_CheckUnload\" >>$@\n-\n nwld.o: $(srcdir)/config/i386/nwld.c $(RTL_H) $(TREE_H) $(CONFIG_H) $(TM_P_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/i386/nwld.c\n-\n-\n-s-crt0: $(srcdir)/unwind-dw2-fde.h"}, {"sha": "c358ae4126a439b72e17f24986f86dd4b0894607", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d1efe2d2d19872257bffb1561838805eb5f4fab/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d1efe2d2d19872257bffb1561838805eb5f4fab/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=2d1efe2d2d19872257bffb1561838805eb5f4fab", "patch": "@@ -1,3 +1,14 @@\n+2011-07-13  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* config/i386/netware-crt0.c: New file.\n+\t* config/i386/t-nwld: Rename to ...\n+\t* config/i386/t-slibgcc-nwld: ... this.\n+\t* config/i386/t-nwld: New file.\n+\t* config.host (i[3456x]86-*-netware*): Add i386/t-slibgcc-nwld to\n+\ttmake_file.\n+\tAdd crt0.o, libgcc.def, libc.def, libcpre.def, posixpre.def to\n+\textra_parts.\n+\n 2011-07-11  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* configure.ac (i?86-*-solaris2*): Use libgcc copy of"}, {"sha": "6b6caffde95043a433777238b98214258ddb681c", "filename": "libgcc/config.host", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d1efe2d2d19872257bffb1561838805eb5f4fab/libgcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d1efe2d2d19872257bffb1561838805eb5f4fab/libgcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.host?ref=2d1efe2d2d19872257bffb1561838805eb5f4fab", "patch": "@@ -369,7 +369,8 @@ i[34567]86-*-lynxos*)\n i[3456x]86-*-netware*)\n \tcase /${with_ld} in\n \t*/nwld)\n-\t \ttmake_file=\"${tmake_file} i386/t-nwld\"\n+\t \ttmake_file=\"${tmake_file} i386/t-nwld i386/t-slibgcc-nwld\"\n+\t\textra_parts=\"${extra_parts} crt0.o libgcc.def libc.def libcpre.def posixpre.def\"\n \t\t;;\n \tesac\n \t;;"}, {"sha": "03141ab9987980cb50fe539396d9ad299b069cdc", "filename": "libgcc/config/i386/netware-crt0.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d1efe2d2d19872257bffb1561838805eb5f4fab/libgcc%2Fconfig%2Fi386%2Fnetware-crt0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d1efe2d2d19872257bffb1561838805eb5f4fab/libgcc%2Fconfig%2Fi386%2Fnetware-crt0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Fnetware-crt0.c?ref=2d1efe2d2d19872257bffb1561838805eb5f4fab", "previous_filename": "gcc/config/i386/netware-crt0.c"}, {"sha": "d08e2827f65aa197d6f039128ce2e84e15afcb85", "filename": "libgcc/config/i386/t-nwld", "status": "modified", "additions": 36, "deletions": 28, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d1efe2d2d19872257bffb1561838805eb5f4fab/libgcc%2Fconfig%2Fi386%2Ft-nwld", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d1efe2d2d19872257bffb1561838805eb5f4fab/libgcc%2Fconfig%2Fi386%2Ft-nwld", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Ft-nwld?ref=2d1efe2d2d19872257bffb1561838805eb5f4fab", "patch": "@@ -1,31 +1,39 @@\n-# Build a shared libgcc library for NetWare.\n+# Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009, 2011\n+# Free Software Foundation, Inc.\n+#\n+# This file is part of GCC.\n+#\n+# GCC is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3, or (at your option)\n+# any later version.\n+#\n+# GCC is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n \n-SHLIB_EXT = .nlm\n-SHLIB_NAME = @shlib_base_name@.nlm\n-SHLIB_SLIBDIR_QUAL = @shlib_slibdir_qual@\n-SHLIB_DEF = $(gcc_srcdir)/config/i386/netware-libgcc.def\n-SHLIB_MAP = $(gcc_srcdir)/config/i386/netware-libgcc.exp\n-SHLIB_SRC = $(gcc_srcdir)/config/i386/netware-libgcc.c\n+crt0.o: $(srcdir)/config/i386/netware-crt0.c\n+\t$(crt_compile) $(CRTSTUFF_T_CFLAGS) -c $<\n \n-SHLIB_LINK = set -e; \\\n-\tcat $(SHLIB_DEF) >@shlib_base_name@.def; \\\n-\techo \"name $(SHLIB_NAME)\" >>@shlib_base_name@.def; \\\n-\techo \"version $(version)\" | sed \"s!\\.!,!g\" >>@shlib_base_name@.def; \\\n-\ttouch build; \\\n-\techo \"build $$(expr $$(<build) + 0)\" >>@shlib_base_name@.def; \\\n-\techo \"export @$(SHLIB_MAP)\" >>@shlib_base_name@.def; \\\n-\tif mpkxdc -n -p @shlib_base_name@.xdc; \\\n-\t\tthen echo \"xdcdata @shlib_base_name@.xdc\" >>@shlib_base_name@.def; \\\n-\t\telse echo \"WARNING: $(SHLIB_NAME) built without XDC data will not work well.\" 1>&2; \\\n-\tfi; \\\n-\t$(CC) $(LIBGCC2_CFLAGS) -o $(SHLIB_NAME) \\\n-\t\t$(SHLIB_SRC) -posix -static-libgcc -lnetware \\\n-\t\t-Wl,--Map,--map-info,full,--strip-all,--def-file,@shlib_base_name@.def; \\\n-\trm -f @shlib_base_name@.imp; $(LN_S) $(SHLIB_MAP) @shlib_base_name@.imp; \\\n-\trm -f libgcc.imp; $(LN_S) @shlib_base_name@.imp libgcc.imp; \\\n-\texpr $$(<build) + 1 >build\n+CRTSTUFF_T_CFLAGS = -mpreferred-stack-boundary=2\n \n-SHLIB_INSTALL = \\\n-\t$(SHELL) $(srcdir)/mkinstalldirs $(slibdir)$(SHLIB_SLIBDIR_QUAL); \\\n-\t$(INSTALL_DATA) $(SHLIB_NAME) $(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_NAME); \\\n-\t$(INSTALL_DATA) @shlib_base_name@.imp $(DESTDIR)$(libsubdir)/\n+libgcc.def: $(srcdir)/config/i386/t-nwld\n+\techo \"module libgcc_s\" >$@\n+\n+libc.def: $(srcdir)/config/i386/t-nwld\n+\techo \"module libc\" >$@\n+\n+libcpre.def: $(srcdir)/config/i386/t-nwld\n+\techo \"start _LibCPrelude\" >$@\n+\techo \"exit _LibCPostlude\" >>$@\n+\techo \"check _LibCCheckUnload\" >>$@\n+\n+posixpre.def: $(srcdir)/config/i386/t-nwld\n+\techo \"start POSIX_Start\" >$@\n+\techo \"exit POSIX_Stop\" >>$@\n+\techo \"check POSIX_CheckUnload\" >>$@"}, {"sha": "408587273da6405956feb06eeffb5010043b0d0a", "filename": "libgcc/config/i386/t-slibgcc-nwld", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d1efe2d2d19872257bffb1561838805eb5f4fab/libgcc%2Fconfig%2Fi386%2Ft-slibgcc-nwld", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d1efe2d2d19872257bffb1561838805eb5f4fab/libgcc%2Fconfig%2Fi386%2Ft-slibgcc-nwld", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Ft-slibgcc-nwld?ref=2d1efe2d2d19872257bffb1561838805eb5f4fab", "patch": "@@ -0,0 +1,31 @@\n+# Build a shared libgcc library for NetWare.\n+\n+SHLIB_EXT = .nlm\n+SHLIB_NAME = @shlib_base_name@.nlm\n+SHLIB_SLIBDIR_QUAL = @shlib_slibdir_qual@\n+SHLIB_DEF = $(gcc_srcdir)/config/i386/netware-libgcc.def\n+SHLIB_MAP = $(gcc_srcdir)/config/i386/netware-libgcc.exp\n+SHLIB_SRC = $(gcc_srcdir)/config/i386/netware-libgcc.c\n+\n+SHLIB_LINK = set -e; \\\n+\tcat $(SHLIB_DEF) >@shlib_base_name@.def; \\\n+\techo \"name $(SHLIB_NAME)\" >>@shlib_base_name@.def; \\\n+\techo \"version $(version)\" | sed \"s!\\.!,!g\" >>@shlib_base_name@.def; \\\n+\ttouch build; \\\n+\techo \"build $$(expr $$(<build) + 0)\" >>@shlib_base_name@.def; \\\n+\techo \"export @$(SHLIB_MAP)\" >>@shlib_base_name@.def; \\\n+\tif mpkxdc -n -p @shlib_base_name@.xdc; \\\n+\t\tthen echo \"xdcdata @shlib_base_name@.xdc\" >>@shlib_base_name@.def; \\\n+\t\telse echo \"WARNING: $(SHLIB_NAME) built without XDC data will not work well.\" 1>&2; \\\n+\tfi; \\\n+\t$(CC) $(LIBGCC2_CFLAGS) -o $(SHLIB_NAME) \\\n+\t\t$(SHLIB_SRC) -posix -static-libgcc -lnetware \\\n+\t\t-Wl,--Map,--map-info,full,--strip-all,--def-file,@shlib_base_name@.def; \\\n+\trm -f @shlib_base_name@.imp; $(LN_S) $(SHLIB_MAP) @shlib_base_name@.imp; \\\n+\trm -f libgcc.imp; $(LN_S) @shlib_base_name@.imp libgcc.imp; \\\n+\texpr $$(<build) + 1 >build\n+\n+SHLIB_INSTALL = \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(slibdir)$(SHLIB_SLIBDIR_QUAL); \\\n+\t$(INSTALL_DATA) $(SHLIB_NAME) $(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_NAME); \\\n+\t$(INSTALL_DATA) @shlib_base_name@.imp $(DESTDIR)$(libsubdir)/"}]}