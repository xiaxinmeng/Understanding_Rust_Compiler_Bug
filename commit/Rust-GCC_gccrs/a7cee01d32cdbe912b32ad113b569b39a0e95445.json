{"sha": "a7cee01d32cdbe912b32ad113b569b39a0e95445", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdjZWUwMWQzMmNkYmU5MTJiMzJhZDExM2I1NjliMzlhMGU5NTQ0NQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2011-09-27T02:39:34Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-09-27T02:39:34Z"}, "message": "re PR libstdc++/50529 ([C++0x] std::vector::erase invokes undefined behavior with empty range)\n\n2011-09-26  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/50529\n\t* include/bits/vector.tcc (vector<>::erase(iterator, iterator)):\n\tFix to do nothing if the range is empty.\n\t* include/bits/stl_bvector.h: Likewise.\n\t* include/bits/deque.tcc: Likewise.\n\t* include/debug/vector: Adjust.\n\t* include/debug/deque: Likewise.\n\t* testsuite/23_containers/vector/modifiers/erase/50529.cc: New.\n\t* testsuite/23_containers/deque/modifiers/erase/50529.cc: Likewise.\n\t* testsuite/23_containers/deque/modifiers/erase/3.cc: Adjust.\n\nFrom-SVN: r179234", "tree": {"sha": "b6525343983bf3112c8c0936acc632df1f36f60b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6525343983bf3112c8c0936acc632df1f36f60b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7cee01d32cdbe912b32ad113b569b39a0e95445", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7cee01d32cdbe912b32ad113b569b39a0e95445", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7cee01d32cdbe912b32ad113b569b39a0e95445", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7cee01d32cdbe912b32ad113b569b39a0e95445/comments", "author": null, "committer": null, "parents": [{"sha": "b92edfe52d92baaf258a9d3234a964411a2b94b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b92edfe52d92baaf258a9d3234a964411a2b94b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b92edfe52d92baaf258a9d3234a964411a2b94b7"}], "stats": {"total": 132, "additions": 119, "deletions": 13}, "files": [{"sha": "140bdb1a5b652ee4bf2f4eecc30538b172e57488", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7cee01d32cdbe912b32ad113b569b39a0e95445/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7cee01d32cdbe912b32ad113b569b39a0e95445/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a7cee01d32cdbe912b32ad113b569b39a0e95445", "patch": "@@ -1,3 +1,16 @@\n+2011-09-26  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/50529\n+\t* include/bits/vector.tcc (vector<>::erase(iterator, iterator)):\n+\tFix to do nothing if the range is empty.\n+\t* include/bits/stl_bvector.h: Likewise.\n+\t* include/bits/deque.tcc: Likewise.\n+\t* include/debug/vector: Adjust.\n+\t* include/debug/deque: Likewise.\n+\t* testsuite/23_containers/vector/modifiers/erase/50529.cc: New.\n+\t* testsuite/23_containers/deque/modifiers/erase/50529.cc: Likewise.\n+\t* testsuite/23_containers/deque/modifiers/erase/3.cc: Adjust.\n+\n 2011-09-25  Benjamin Kosnik  <bkoz@redhat.com\n             Jonathan Wakely  <jwakely.gcc@gmail.com>\n "}, {"sha": "5b56875b4936a2b44f14f189a7415c3a6965d0f5", "filename": "libstdc++-v3/include/bits/deque.tcc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7cee01d32cdbe912b32ad113b569b39a0e95445/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdeque.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7cee01d32cdbe912b32ad113b569b39a0e95445/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdeque.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdeque.tcc?ref=a7cee01d32cdbe912b32ad113b569b39a0e95445", "patch": "@@ -218,7 +218,9 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n     deque<_Tp, _Alloc>::\n     erase(iterator __first, iterator __last)\n     {\n-      if (__first == begin() && __last == end())\n+      if (__first == __last)\n+\treturn __first;\n+      else if (__first == begin() && __last == end())\n \t{\n \t  clear();\n \t  return end();"}, {"sha": "bddecb0d4c51eb217b7ad6724976ffddf52a52c7", "filename": "libstdc++-v3/include/bits/stl_bvector.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7cee01d32cdbe912b32ad113b569b39a0e95445/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_bvector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7cee01d32cdbe912b32ad113b569b39a0e95445/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_bvector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_bvector.h?ref=a7cee01d32cdbe912b32ad113b569b39a0e95445", "patch": "@@ -838,7 +838,8 @@ template<typename _Alloc>\n     iterator\n     erase(iterator __first, iterator __last)\n     {\n-      _M_erase_at_end(std::copy(__last, end(), __first));\n+      if (__first != __last)\n+\t_M_erase_at_end(std::copy(__last, end(), __first));\n       return __first;\n     }\n "}, {"sha": "b74684228c1a9c5842a33863811491ee99065cae", "filename": "libstdc++-v3/include/bits/vector.tcc", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7cee01d32cdbe912b32ad113b569b39a0e95445/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvector.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7cee01d32cdbe912b32ad113b569b39a0e95445/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvector.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvector.tcc?ref=a7cee01d32cdbe912b32ad113b569b39a0e95445", "patch": "@@ -147,9 +147,12 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n     vector<_Tp, _Alloc>::\n     erase(iterator __first, iterator __last)\n     {\n-      if (__last != end())\n-\t_GLIBCXX_MOVE3(__last, end(), __first);\n-      _M_erase_at_end(__first.base() + (end() - __last));\n+      if (__first != __last)\n+\t{\n+\t  if (__last != end())\n+\t    _GLIBCXX_MOVE3(__last, end(), __first);\n+\t  _M_erase_at_end(__first.base() + (end() - __last));\n+\t}\n       return __first;\n     }\n "}, {"sha": "2bce99281d6961518a50674b66c5719ba0e6afdd", "filename": "libstdc++-v3/include/debug/deque", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7cee01d32cdbe912b32ad113b569b39a0e95445/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fdeque", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7cee01d32cdbe912b32ad113b569b39a0e95445/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fdeque", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fdeque?ref=a7cee01d32cdbe912b32ad113b569b39a0e95445", "patch": "@@ -464,7 +464,11 @@ namespace __debug\n \t// _GLIBCXX_RESOLVE_LIB_DEFECTS\n \t// 151. can't currently clear() empty container\n \t__glibcxx_check_erase_range(__first, __last);\n-        if (__first.base() == _Base::begin() || __last.base() == _Base::end())\n+\n+\tif (__first == __last)\n+\t  return __first;\n+        else if (__first.base() == _Base::begin()\n+\t\t || __last.base() == _Base::end())\n \t  {\n \t    this->_M_detach_singular();\n \t    for (_Base_iterator __position = __first.base();"}, {"sha": "865c27564549e630177718f4ed24fe9d960a7849", "filename": "libstdc++-v3/include/debug/vector", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7cee01d32cdbe912b32ad113b569b39a0e95445/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7cee01d32cdbe912b32ad113b569b39a0e95445/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector?ref=a7cee01d32cdbe912b32ad113b569b39a0e95445", "patch": "@@ -499,11 +499,16 @@ namespace __debug\n \t// 151. can't currently clear() empty container\n \t__glibcxx_check_erase_range(__first, __last);\n \n-\tdifference_type __offset = __first.base() - _Base::begin();\n-\t_Base_iterator __res = _Base::erase(__first.base(),\n-\t\t\t\t\t\t      __last.base());\n-\tthis->_M_invalidate_after_nth(__offset);\n-\treturn iterator(__res, this);\n+\tif (__first != __last)\n+\t  {\n+\t    difference_type __offset = __first.base() - _Base::begin();\n+\t    _Base_iterator __res = _Base::erase(__first.base(),\n+\t\t\t\t\t\t__last.base());\n+\t    this->_M_invalidate_after_nth(__offset);\n+\t    return iterator(__res, this);\n+\t  }\n+\telse\n+\t  return __first;\n       }\n \n       void"}, {"sha": "79a046ed75eed18f1148e1173f684c80a66a32ca", "filename": "libstdc++-v3/testsuite/23_containers/deque/modifiers/erase/3.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7cee01d32cdbe912b32ad113b569b39a0e95445/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Ferase%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7cee01d32cdbe912b32ad113b569b39a0e95445/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Ferase%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Ferase%2F3.cc?ref=a7cee01d32cdbe912b32ad113b569b39a0e95445", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2007, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2009, 2010, 2011 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -31,7 +31,9 @@ void erase(size_t num_elm, size_t elm_strt, size_t elm_end)\n   \n   x.erase(x.begin() + elm_strt, x.begin() + elm_end);\n   \n-  const size_t min_num_cpy = std::min(elm_strt, num_elm - elm_end);\n+  const size_t min_num_cpy\n+    = elm_strt == elm_end ? 0 : std::min(elm_strt, num_elm - elm_end);\n+\n   VERIFY( assignment_operator::count() == min_num_cpy );\n }\n "}, {"sha": "f534758a9d179c40ee7bc2b586e794c505d7cba1", "filename": "libstdc++-v3/testsuite/23_containers/deque/modifiers/erase/50529.cc", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7cee01d32cdbe912b32ad113b569b39a0e95445/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Ferase%2F50529.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7cee01d32cdbe912b32ad113b569b39a0e95445/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Ferase%2F50529.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Ferase%2F50529.cc?ref=a7cee01d32cdbe912b32ad113b569b39a0e95445", "patch": "@@ -0,0 +1,38 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2011-09-26  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <deque>\n+#include <testsuite_rvalref.h>\n+\n+// libstdc++/50529\n+void test01()\n+{\n+  std::deque<__gnu_test::rvalstruct> d(10);\n+\n+  for (auto it = d.begin(); it != d.end(); ++it)\n+    d.erase(it, it);\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "d76bed53cef73d6709914777ee7e2b77df06c31b", "filename": "libstdc++-v3/testsuite/23_containers/vector/modifiers/erase/50529.cc", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7cee01d32cdbe912b32ad113b569b39a0e95445/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fmodifiers%2Ferase%2F50529.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7cee01d32cdbe912b32ad113b569b39a0e95445/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fmodifiers%2Ferase%2F50529.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fmodifiers%2Ferase%2F50529.cc?ref=a7cee01d32cdbe912b32ad113b569b39a0e95445", "patch": "@@ -0,0 +1,38 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2011-09-26  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <vector>\n+#include <testsuite_rvalref.h>\n+\n+// libstdc++/50529\n+void test01()\n+{\n+  std::vector<__gnu_test::rvalstruct> v(10);\n+\n+  for (auto it = v.begin(); it != v.end(); ++it)\n+    v.erase(it, it);\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}