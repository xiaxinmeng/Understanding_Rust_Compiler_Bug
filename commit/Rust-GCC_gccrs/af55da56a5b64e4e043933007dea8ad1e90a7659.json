{"sha": "af55da56a5b64e4e043933007dea8ad1e90a7659", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWY1NWRhNTZhNWI2NGU0ZTA0MzkzMzAwN2RlYThhZDFlOTBhNzY1OQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-04-27T22:50:50Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-04-27T22:50:50Z"}, "message": "(expand_return): When returning BLKmode structure...\n\n(expand_return): When returning BLKmode structure, use\noperand_subword instead of doing arithmetic on the register number.\nAlso, for structures smaller than word_mode, copy it into a word_mode\ntemporary and then subreg it.\n\nFrom-SVN: r9516", "tree": {"sha": "13ae052a5e6cc3cb30bc67dbf6127792209446db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13ae052a5e6cc3cb30bc67dbf6127792209446db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af55da56a5b64e4e043933007dea8ad1e90a7659", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af55da56a5b64e4e043933007dea8ad1e90a7659", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af55da56a5b64e4e043933007dea8ad1e90a7659", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af55da56a5b64e4e043933007dea8ad1e90a7659/comments", "author": null, "committer": null, "parents": [{"sha": "46fccf9e3392b0300f4847c34abf2e671b37d402", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46fccf9e3392b0300f4847c34abf2e671b37d402", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46fccf9e3392b0300f4847c34abf2e671b37d402"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "6b2e80b6ba30195c312625af5c33bdd8e2e9535c", "filename": "gcc/stmt.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af55da56a5b64e4e043933007dea8ad1e90a7659/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af55da56a5b64e4e043933007dea8ad1e90a7659/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=af55da56a5b64e4e043933007dea8ad1e90a7659", "patch": "@@ -2694,7 +2694,7 @@ expand_return (retval)\n       rtx *result_pseudos = (rtx *) alloca (sizeof (rtx) * n_regs);\n       rtx result_reg;\n       rtx result_val = expand_expr (retval_rhs, NULL_RTX, VOIDmode, 0);\n-      enum machine_mode tmpmode;\n+      enum machine_mode tmpmode, result_reg_mode;\n \n       /* Structures smaller than a word are aligned to the least significant\n \t byte (to the right).  On a BYTES_BIG_ENDIAN machine, this means we\n@@ -2751,16 +2751,24 @@ expand_return (retval)\n       if (tmpmode == MAX_MACHINE_MODE)\n \tabort ();\n \n-      result_reg = gen_reg_rtx (tmpmode);\n       PUT_MODE (DECL_RTL (DECL_RESULT (current_function_decl)), tmpmode);\n \n+      if (GET_MODE_SIZE (tmpmode) < GET_MODE_SIZE (word_mode))\n+\tresult_reg_mode = word_mode;\n+      else\n+\tresult_reg_mode = tmpmode;\n+      result_reg = gen_reg_rtx (result_reg_mode);\n+\n       /* Now that the value is in pseudos, copy it to the result reg(s).  */\n       emit_queue ();\n       free_temp_slots ();\n       for (i = 0; i < n_regs; i++)\n-\temit_move_insn (gen_rtx (REG, word_mode, REGNO (result_reg) + i),\n+\temit_move_insn (operand_subword (result_reg, i, 0, result_reg_mode),\n \t\t\tresult_pseudos[i]);\n \n+      if (tmpmode != result_reg_mode)\n+\tresult_reg = gen_lowpart (tmpmode, result_reg);\n+\n       expand_value_return (result_reg);\n     }\n   else if (cleanups"}]}