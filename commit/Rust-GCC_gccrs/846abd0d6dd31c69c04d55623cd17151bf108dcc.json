{"sha": "846abd0d6dd31c69c04d55623cd17151bf108dcc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ2YWJkMGQ2ZGQzMWM2OWMwNGQ1NTYyM2NkMTcxNTFiZjEwOGRjYw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-11-07T11:33:03Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-11-07T11:33:03Z"}, "message": "tree-ssa-ccp.c (canonicalize_float_value): Rename to ...\n\n2013-11-07  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-ccp.c (canonicalize_float_value): Rename to ...\n\t(canonicalize_value): ... this.  Also handle stripping of\n\tTREE_OVERFLOW.\n\t(get_value, set_lattice_value, get_value_for_expr): Adjust.\n\t* gimple-fold.c (canonicalize_constructor_val): Strip\n\tTREE_OVERFLOW.\n\t* tree-ssa-threadedge.c (set_ssa_name_value): Likewise.\n\nFrom-SVN: r204506", "tree": {"sha": "f52c4c351d6548f9f04017536c937c708d92d3ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f52c4c351d6548f9f04017536c937c708d92d3ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/846abd0d6dd31c69c04d55623cd17151bf108dcc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/846abd0d6dd31c69c04d55623cd17151bf108dcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/846abd0d6dd31c69c04d55623cd17151bf108dcc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/846abd0d6dd31c69c04d55623cd17151bf108dcc/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b0a9217cca911f6f79c1e6769b0badebbb66d8c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0a9217cca911f6f79c1e6769b0badebbb66d8c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0a9217cca911f6f79c1e6769b0badebbb66d8c6"}], "stats": {"total": 37, "additions": 29, "deletions": 8}, "files": [{"sha": "72dd1c2b3e215e92fd2ebd3d90b2f64427c947ce", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/846abd0d6dd31c69c04d55623cd17151bf108dcc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/846abd0d6dd31c69c04d55623cd17151bf108dcc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=846abd0d6dd31c69c04d55623cd17151bf108dcc", "patch": "@@ -1,3 +1,13 @@\n+2013-11-07  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-ccp.c (canonicalize_float_value): Rename to ...\n+\t(canonicalize_value): ... this.  Also handle stripping of\n+\tTREE_OVERFLOW.\n+\t(get_value, set_lattice_value, get_value_for_expr): Adjust.\n+\t* gimple-fold.c (canonicalize_constructor_val): Strip\n+\tTREE_OVERFLOW.\n+\t* tree-ssa-threadedge.c (set_ssa_name_value): Likewise.\n+\n 2013-11-07  Richard Biener  <rguenther@suse.de>\n \n \t* tree-dfa.c (get_ref_base_and_extent): Fix casting."}, {"sha": "a4be3aae4d554c183ee9ef6190b3fc6d386e91d1", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/846abd0d6dd31c69c04d55623cd17151bf108dcc/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/846abd0d6dd31c69c04d55623cd17151bf108dcc/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=846abd0d6dd31c69c04d55623cd17151bf108dcc", "patch": "@@ -205,6 +205,8 @@ canonicalize_constructor_val (tree cval, tree from_decl)\n \tcval = fold_convert (TREE_TYPE (orig_cval), cval);\n       return cval;\n     }\n+  if (TREE_OVERFLOW_P (cval))\n+    return drop_tree_overflow (cval);\n   return orig_cval;\n }\n "}, {"sha": "b4dfd4928cdcdbb9de1659c76f90768e32b6fc15", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/846abd0d6dd31c69c04d55623cd17151bf108dcc/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/846abd0d6dd31c69c04d55623cd17151bf108dcc/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=846abd0d6dd31c69c04d55623cd17151bf108dcc", "patch": "@@ -168,7 +168,7 @@ typedef struct prop_value_d prop_value_t;\n static prop_value_t *const_val;\n static unsigned n_const_val;\n \n-static void canonicalize_float_value (prop_value_t *);\n+static void canonicalize_value (prop_value_t *);\n static bool ccp_fold_stmt (gimple_stmt_iterator *);\n \n /* Dump constant propagation value VAL to file OUTF prefixed by PREFIX.  */\n@@ -326,7 +326,7 @@ get_value (tree var)\n   if (val->lattice_val == UNINITIALIZED)\n     *val = get_default_value (var);\n \n-  canonicalize_float_value (val);\n+  canonicalize_value (val);\n \n   return val;\n }\n@@ -378,17 +378,24 @@ set_value_varying (tree var)\n      that HONOR_NANS is false, and we try to change the value of x to 0,\n      causing an ICE.  With HONOR_NANS being false, the real appearance of\n      NaN would cause undefined behavior, though, so claiming that y (and x)\n-     are UNDEFINED initially is correct.  */\n+     are UNDEFINED initially is correct.\n+\n+  For other constants, make sure to drop TREE_OVERFLOW.  */\n \n static void\n-canonicalize_float_value (prop_value_t *val)\n+canonicalize_value (prop_value_t *val)\n {\n   enum machine_mode mode;\n   tree type;\n   REAL_VALUE_TYPE d;\n \n-  if (val->lattice_val != CONSTANT\n-      || TREE_CODE (val->value) != REAL_CST)\n+  if (val->lattice_val != CONSTANT)\n+    return;\n+\n+  if (TREE_OVERFLOW_P (val->value))\n+    val->value = drop_tree_overflow (val->value);\n+\n+  if (TREE_CODE (val->value) != REAL_CST)\n     return;\n \n   d = TREE_REAL_CST (val->value);\n@@ -454,7 +461,7 @@ set_lattice_value (tree var, prop_value_t new_val)\n   /* We can deal with old UNINITIALIZED values just fine here.  */\n   prop_value_t *old_val = &const_val[SSA_NAME_VERSION (var)];\n \n-  canonicalize_float_value (&new_val);\n+  canonicalize_value (&new_val);\n \n   /* We have to be careful to not go up the bitwise lattice\n      represented by the mask.\n@@ -569,7 +576,7 @@ get_value_for_expr (tree expr, bool for_bits_p)\n       val.lattice_val = CONSTANT;\n       val.value = expr;\n       val.mask = double_int_zero;\n-      canonicalize_float_value (&val);\n+      canonicalize_value (&val);\n     }\n   else if (TREE_CODE (expr) == ADDR_EXPR)\n     val = get_value_from_alignment (expr);"}, {"sha": "4cff16d6846b5f3281cb35c74199e479d1cf3726", "filename": "gcc/tree-ssa-threadedge.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/846abd0d6dd31c69c04d55623cd17151bf108dcc/gcc%2Ftree-ssa-threadedge.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/846abd0d6dd31c69c04d55623cd17151bf108dcc/gcc%2Ftree-ssa-threadedge.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadedge.c?ref=846abd0d6dd31c69c04d55623cd17151bf108dcc", "patch": "@@ -58,6 +58,8 @@ set_ssa_name_value (tree name, tree value)\n {\n   if (SSA_NAME_VERSION (name) >= ssa_name_values.length ())\n     ssa_name_values.safe_grow_cleared (SSA_NAME_VERSION (name) + 1);\n+  if (value && TREE_OVERFLOW_P (value))\n+    value = drop_tree_overflow (value);\n   ssa_name_values[SSA_NAME_VERSION (name)] = value;\n }\n "}]}