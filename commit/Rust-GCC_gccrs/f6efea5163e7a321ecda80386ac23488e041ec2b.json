{"sha": "f6efea5163e7a321ecda80386ac23488e041ec2b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZlZmVhNTE2M2U3YTMyMWVjZGE4MDM4NmFjMjM0ODhlMDQxZWMyYg==", "commit": {"author": {"name": "Markus Trippelsdorf", "email": "markus@trippelsdorf.de", "date": "2017-01-18T08:40:05Z"}, "committer": {"name": "Markus Trippelsdorf", "email": "trippels@gcc.gnu.org", "date": "2017-01-18T08:40:05Z"}, "message": "Fix PR77489 -- mangling of discriminator >= 1\n\nlibiberty:\n\n\tPR c++/77489\n\t* cp-demangle.c (d_discriminator): Handle discriminator >= 10.\n\t* testsuite/demangle-expected: Add tests for discriminator.\n\ngcc:\n\tPR c++/77489\n\t* doc/invoke.texi (fabi-version): Document discriminator mangling.\n\ngcc/cp:\n\n\tPR c++/77489\n\t* mangle.c (write_discriminator): Handle discriminator >= 10.\n\nFrom-SVN: r244566", "tree": {"sha": "1b2783df9fcda5852973bca7fca843bd8a07e970", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b2783df9fcda5852973bca7fca843bd8a07e970"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6efea5163e7a321ecda80386ac23488e041ec2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6efea5163e7a321ecda80386ac23488e041ec2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6efea5163e7a321ecda80386ac23488e041ec2b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6efea5163e7a321ecda80386ac23488e041ec2b/comments", "author": null, "committer": null, "parents": [{"sha": "4701fba31cd2c7d5d6cd0af9a971ef802afc89e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4701fba31cd2c7d5d6cd0af9a971ef802afc89e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4701fba31cd2c7d5d6cd0af9a971ef802afc89e3"}], "stats": {"total": 132, "additions": 128, "deletions": 4}, "files": [{"sha": "13a7015ccc274340ee7e46c316b03eb3d91b0703", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6efea5163e7a321ecda80386ac23488e041ec2b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6efea5163e7a321ecda80386ac23488e041ec2b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f6efea5163e7a321ecda80386ac23488e041ec2b", "patch": "@@ -1,3 +1,8 @@\n+2017-01-18  Markus Trippelsdorf  <markus@trippelsdorf.de>\n+\n+\tPR c++/77489\n+\t* doc/invoke.texi (fabi-version): Document discriminator mangling.\n+\n 2017-01-17  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR target/78875"}, {"sha": "86669ae13710742ee44d105d03fdf4fee80d6b15", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6efea5163e7a321ecda80386ac23488e041ec2b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6efea5163e7a321ecda80386ac23488e041ec2b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f6efea5163e7a321ecda80386ac23488e041ec2b", "patch": "@@ -1,3 +1,8 @@\n+2017-01-18  Markus Trippelsdorf  <markus@trippelsdorf.de>\n+\n+\tPR c++/77489\n+\t* mangle.c (write_discriminator): Handle discriminator >= 10.\n+\n 2017-01-17  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/61636"}, {"sha": "67ec5c31f170f4eeb6ce84cac36a6d0c5e2aed21", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6efea5163e7a321ecda80386ac23488e041ec2b/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6efea5163e7a321ecda80386ac23488e041ec2b/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=f6efea5163e7a321ecda80386ac23488e041ec2b", "patch": "@@ -1952,7 +1952,8 @@ discriminator_for_string_literal (tree /*function*/,\n   return 0;\n }\n \n-/*   <discriminator> := _ <number>\n+/*   <discriminator> := _ <number>    # when number < 10\n+                     := __ <number> _ # when number >= 10\n \n    The discriminator is used only for the second and later occurrences\n    of the same name within a single function. In this case <number> is\n@@ -1965,7 +1966,15 @@ write_discriminator (const int discriminator)\n   if (discriminator > 0)\n     {\n       write_char ('_');\n+      if (abi_version_at_least (11) && discriminator - 1 >= 10)\n+\t{\n+\t  write_char ('_');\n+\t  if (abi_warn_or_compat_version_crosses (11))\n+\t    G.need_abi_warning = 1;\n+\t}\n       write_unsigned_number (discriminator - 1);\n+      if (abi_version_at_least (11) && discriminator - 1 >= 10)\n+\twrite_char ('_');\n     }\n }\n "}, {"sha": "767c8f42fee9409754cd6cdfe2439eae8fcb8de9", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6efea5163e7a321ecda80386ac23488e041ec2b/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6efea5163e7a321ecda80386ac23488e041ec2b/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=f6efea5163e7a321ecda80386ac23488e041ec2b", "patch": "@@ -2252,7 +2252,9 @@ attributes that affect type identity, such as ia32 calling convention\n attributes (e.g. @samp{stdcall}).\n \n Version 11, which first appeared in G++ 7, corrects the mangling of\n-sizeof... expressions.  It also implies\n+sizeof... expressions.  For multiple entities with the same name within\n+a function, that are declared in different scopes, the mangling now\n+changes starting with the eighth occurence.  It also implies\n @option{-fnew-inheriting-ctors}.\n \n See also @option{-Wabi}."}, {"sha": "13c41cc0acfa4e7483b541625a72f31e41d2695a", "filename": "gcc/testsuite/g++.dg/abi/pr77489.C", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6efea5163e7a321ecda80386ac23488e041ec2b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpr77489.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6efea5163e7a321ecda80386ac23488e041ec2b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpr77489.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpr77489.C?ref=f6efea5163e7a321ecda80386ac23488e041ec2b", "patch": "@@ -0,0 +1,63 @@\n+// { dg-options -fabi-version=11 }\n+\n+extern void bar(int*);\n+\n+void foo()\n+{\n+  {\n+    static int localVar = 0;\n+    bar(&localVar);\n+  }\n+  {\n+    static int localVar = 1;\n+    bar(&localVar);\n+  }\n+  {\n+    static int localVar = 2;\n+    bar(&localVar);\n+  }\n+  {\n+    static int localVar = 3;\n+    bar(&localVar);\n+  }\n+  {\n+    static int localVar = 4;\n+    bar(&localVar);\n+  }\n+  {\n+    static int localVar = 5;\n+    bar(&localVar);\n+  }\n+  {\n+    static int localVar = 6;\n+    bar(&localVar);\n+  }\n+  {\n+    static int localVar = 7;\n+    bar(&localVar);\n+  }\n+  {\n+    static int localVar = 8;\n+    bar(&localVar);\n+  }\n+  {\n+    static int localVar = 9;\n+    bar(&localVar);\n+  }\n+  {\n+    static int localVar = 10;\n+    bar(&localVar);\n+  }\n+  {\n+    static int localVar = 11;\n+    bar(&localVar);\n+  }\n+  {\n+    static int localVar = 12;\n+    bar(&localVar);\n+  }\n+}\n+\n+// { dg-final { scan-assembler \"_ZZ3foovE8localVar_9\" } }\n+// { dg-final { scan-assembler \"_ZZ3foovE8localVar__10_\" } }\n+// { dg-final { scan-assembler \"_ZZ3foovE8localVar__11_\" } }"}, {"sha": "104907c84c8613ded82659fc38ce85cd9efbcae4", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6efea5163e7a321ecda80386ac23488e041ec2b/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6efea5163e7a321ecda80386ac23488e041ec2b/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=f6efea5163e7a321ecda80386ac23488e041ec2b", "patch": "@@ -1,3 +1,9 @@\n+2017-01-18  Markus Trippelsdorf  <markus@trippelsdorf.de>\n+\n+\tPR c++/77489\n+\t* cp-demangle.c (d_discriminator): Handle discriminator >= 10.\n+\t* testsuite/demangle-expected: Add tests for discriminator.\n+\n 2017-01-04  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "d84929eca20ddd052fa243e09342ecfb547df090", "filename": "libiberty/cp-demangle.c", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6efea5163e7a321ecda80386ac23488e041ec2b/libiberty%2Fcp-demangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6efea5163e7a321ecda80386ac23488e041ec2b/libiberty%2Fcp-demangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcp-demangle.c?ref=f6efea5163e7a321ecda80386ac23488e041ec2b", "patch": "@@ -3609,22 +3609,40 @@ d_local_name (struct d_info *di)\n     }\n }\n \n-/* <discriminator> ::= _ <(non-negative) number>\n+/* <discriminator> ::= _ <number>    # when number < 10\n+                   ::= __ <number> _ # when number >= 10\n+\n+   <discriminator> ::= _ <number>    # when number >=10\n+   is also accepted to support gcc versions that wrongly mangled that way.\n \n    We demangle the discriminator, but we don't print it out.  FIXME:\n    We should print it out in verbose mode.  */\n \n static int\n d_discriminator (struct d_info *di)\n {\n-  int discrim;\n+  int discrim, num_underscores = 1;\n \n   if (d_peek_char (di) != '_')\n     return 1;\n   d_advance (di, 1);\n+  if (d_peek_char (di) == '_')\n+    {\n+      ++num_underscores;\n+      d_advance (di, 1);\n+    }\n+\n   discrim = d_number (di);\n   if (discrim < 0)\n     return 0;\n+  if (num_underscores > 1 && discrim >= 10)\n+    {\n+      if (d_peek_char (di) == '_')\n+\td_advance (di, 1);\n+      else\n+\treturn 0;\n+    }\n+\n   return 1;\n }\n "}, {"sha": "07e258fe58b36fc2b82f81fe397a56da5002601b", "filename": "libiberty/testsuite/demangle-expected", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6efea5163e7a321ecda80386ac23488e041ec2b/libiberty%2Ftestsuite%2Fdemangle-expected", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6efea5163e7a321ecda80386ac23488e041ec2b/libiberty%2Ftestsuite%2Fdemangle-expected", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ftestsuite%2Fdemangle-expected?ref=f6efea5163e7a321ecda80386ac23488e041ec2b", "patch": "@@ -4666,3 +4666,19 @@ void eat<int*, Foo()::{lambda(auto:1*, auto:2*)#6}>(int*&, Foo()::{lambda(auto:1\n \n _Z3eatIPiZ3BarIsEvvEUlPsPT_PT0_E0_EvRS3_RS5_\n void eat<int*, void Bar<short>()::{lambda(short*, auto:1*, auto:2*)#2}>(int*&, void Bar<short>()::{lambda(short*, auto:1*, auto:2*)#2}&)\n+\n+# PR 77489\n+_ZZ3foovE8localVar_9\n+foo()::localVar\n+\n+_ZZ3foovE8localVar_10\n+foo()::localVar\n+\n+_ZZ3foovE8localVar__10_\n+foo()::localVar\n+\n+_ZZ3foovE8localVar__9_\n+_ZZ3foovE8localVar__9_\n+\n+_ZZ3foovE8localVar__12\n+_ZZ3foovE8localVar__12"}]}