{"sha": "f93f0868919ab32bfbc24adb40158298031a4d58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjkzZjA4Njg5MTlhYjMyYmZiYzI0YWRiNDAxNTgyOTgwMzFhNGQ1OA==", "commit": {"author": {"name": "Xi Ruoyao", "email": "xry111@mengyan1223.wang", "date": "2021-08-20T14:52:57Z"}, "committer": {"name": "Xi Ruoyao", "email": "xry111@mengyan1223.wang", "date": "2021-08-23T05:24:50Z"}, "message": "mips: msa: truncate immediate shift amount [PR101922]\n\nWhen -mloongson-mmi is enabled, SHIFT_COUNT_TRUNCATED is turned off.\nThis causes untruncated immediate shift amount outputed into the asm,\nand the GNU assembler refuses to assemble it.\n\nTruncate immediate shift amount when outputing the asm instruction to\nmake GAS happy again.\n\ngcc/\n\n\tPR target/101922\n\t* config/mips/mips-protos.h (mips_msa_output_shift_immediate):\n\t  Declare.\n\t* config/mips/mips.c (mips_msa_output_shift_immediate): New\n\t  function.\n\t* config/mips/mips-msa.md (vashl<mode>3, vashr<mode>3,\n\t  vlshr<mode>3): Call it.\n\ngcc/testsuite/\n\n\tPR target/101922\n\t* gcc.target/mips/pr101922.c: New test.", "tree": {"sha": "4986ce90586c766deb6d15c092e3c6532d47e289", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4986ce90586c766deb6d15c092e3c6532d47e289"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f93f0868919ab32bfbc24adb40158298031a4d58", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEEunTLnZqV9wGnXaw2V5HFsy7NNwFAmEjMSIACgkQ2V5HFsy7\nNNzP1xAAihK/5ys23Q1lT5TBOHPAz42zJqa369GM7wjV1heXAnu7Y7/rnBilcIDz\nD2+m+PNpM4jC08CQRHABeU5LglB1BmxqPkqUKC9abjXq+CmOpFJfJFuH1S+6ArgM\nAHkJZns3Noew6IYat26l5b3P0IABGsIc8qEVCh4jW1PL7CMcsq00BvoHX6clmYfV\nVBpRdvpvOJ/zc7O1+ixcbE9z4yOlJSxGXAdL5oudHKW2QucXWYKH2mbTswb9xbsk\nt/XK5mwIPIOVWGNt22PvkkbCdUk5UTSqmAcYHsAr0r4Zjbp2CGxlGy4xImsJNchz\n/CVJhMud5Q+ZVjxncNvVE6mTFk0MslATLybI/jRbenDsxzAAiRoJOHYRQ75syIeG\nlEW6m12pKE1GDMikQrfkdkiX2jzekULaQi2YE5C4m4UsPxEh/QodcwB2Ba/PIaBK\nyj/i80S6w5SkzyDPYy0LepvO3mwSpIzDjYRwzRpLu3e58dxZWqHg0AVfDyULpPiF\n5Lm8KVMYgJIdymGsjE7iKs9saukS9ANGR3hW7sGEiL+MbT8TLqQsI/aUhKe+8Oi9\n88BhUAYy3y5jR7aBDjA9OBrFHz4Yq2EnmmzzMkJCl1kHRfsTfU0kG3MxjnlI1TUH\nsVGj3bwKxvBlaITMnQnAj86EKleitLbhX/RGCCIXBhj0Z9UopNg=\n=aoVY\n-----END PGP SIGNATURE-----", "payload": "tree 4986ce90586c766deb6d15c092e3c6532d47e289\nparent 4a4616e53f440e15d0f3e91e23b67a3b5c84dddf\nauthor Xi Ruoyao <xry111@mengyan1223.wang> 1629471177 +0800\ncommitter Xi Ruoyao <xry111@mengyan1223.wang> 1629696290 +0800\n\nmips: msa: truncate immediate shift amount [PR101922]\n\nWhen -mloongson-mmi is enabled, SHIFT_COUNT_TRUNCATED is turned off.\nThis causes untruncated immediate shift amount outputed into the asm,\nand the GNU assembler refuses to assemble it.\n\nTruncate immediate shift amount when outputing the asm instruction to\nmake GAS happy again.\n\ngcc/\n\n\tPR target/101922\n\t* config/mips/mips-protos.h (mips_msa_output_shift_immediate):\n\t  Declare.\n\t* config/mips/mips.c (mips_msa_output_shift_immediate): New\n\t  function.\n\t* config/mips/mips-msa.md (vashl<mode>3, vashr<mode>3,\n\t  vlshr<mode>3): Call it.\n\ngcc/testsuite/\n\n\tPR target/101922\n\t* gcc.target/mips/pr101922.c: New test.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f93f0868919ab32bfbc24adb40158298031a4d58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f93f0868919ab32bfbc24adb40158298031a4d58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f93f0868919ab32bfbc24adb40158298031a4d58/comments", "author": {"login": "xry111", "id": 8733039, "node_id": "MDQ6VXNlcjg3MzMwMzk=", "avatar_url": "https://avatars.githubusercontent.com/u/8733039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xry111", "html_url": "https://github.com/xry111", "followers_url": "https://api.github.com/users/xry111/followers", "following_url": "https://api.github.com/users/xry111/following{/other_user}", "gists_url": "https://api.github.com/users/xry111/gists{/gist_id}", "starred_url": "https://api.github.com/users/xry111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xry111/subscriptions", "organizations_url": "https://api.github.com/users/xry111/orgs", "repos_url": "https://api.github.com/users/xry111/repos", "events_url": "https://api.github.com/users/xry111/events{/privacy}", "received_events_url": "https://api.github.com/users/xry111/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xry111", "id": 8733039, "node_id": "MDQ6VXNlcjg3MzMwMzk=", "avatar_url": "https://avatars.githubusercontent.com/u/8733039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xry111", "html_url": "https://github.com/xry111", "followers_url": "https://api.github.com/users/xry111/followers", "following_url": "https://api.github.com/users/xry111/following{/other_user}", "gists_url": "https://api.github.com/users/xry111/gists{/gist_id}", "starred_url": "https://api.github.com/users/xry111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xry111/subscriptions", "organizations_url": "https://api.github.com/users/xry111/orgs", "repos_url": "https://api.github.com/users/xry111/repos", "events_url": "https://api.github.com/users/xry111/events{/privacy}", "received_events_url": "https://api.github.com/users/xry111/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a4616e53f440e15d0f3e91e23b67a3b5c84dddf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a4616e53f440e15d0f3e91e23b67a3b5c84dddf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a4616e53f440e15d0f3e91e23b67a3b5c84dddf"}], "stats": {"total": 68, "additions": 59, "deletions": 9}, "files": [{"sha": "d3b27d132ad494db9c35ac5b435b1408523cebfd", "filename": "gcc/config/mips/mips-msa.md", "status": "modified", "additions": 18, "deletions": 9, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f93f0868919ab32bfbc24adb40158298031a4d58/gcc%2Fconfig%2Fmips%2Fmips-msa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f93f0868919ab32bfbc24adb40158298031a4d58/gcc%2Fconfig%2Fmips%2Fmips-msa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-msa.md?ref=f93f0868919ab32bfbc24adb40158298031a4d58", "patch": "@@ -870,9 +870,12 @@\n \t  (match_operand:IMSA 1 \"register_operand\" \"f,f\")\n \t  (match_operand:IMSA 2 \"reg_or_vector_same_uimm6_operand\" \"f,Uuv6\")))]\n   \"ISA_HAS_MSA\"\n-  \"@\n-   srl.<msafmt>\\t%w0,%w1,%w2\n-   srli.<msafmt>\\t%w0,%w1,%E2\"\n+{\n+  if (which_alternative == 0)\n+    return \"srl.<msafmt>\\t%w0,%w1,%w2\";\n+\n+  return mips_msa_output_shift_immediate(\"srli.<msafmt>\\t%w0,%w1,%E2\", operands);\n+}\n   [(set_attr \"type\" \"simd_shift\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n@@ -882,9 +885,12 @@\n \t  (match_operand:IMSA 1 \"register_operand\" \"f,f\")\n \t  (match_operand:IMSA 2 \"reg_or_vector_same_uimm6_operand\" \"f,Uuv6\")))]\n   \"ISA_HAS_MSA\"\n-  \"@\n-   sra.<msafmt>\\t%w0,%w1,%w2\n-   srai.<msafmt>\\t%w0,%w1,%E2\"\n+{\n+  if (which_alternative == 0)\n+    return \"sra.<msafmt>\\t%w0,%w1,%w2\";\n+\n+  return mips_msa_output_shift_immediate(\"srai.<msafmt>\\t%w0,%w1,%E2\", operands);\n+}\n   [(set_attr \"type\" \"simd_shift\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n@@ -894,9 +900,12 @@\n \t  (match_operand:IMSA 1 \"register_operand\" \"f,f\")\n \t  (match_operand:IMSA 2 \"reg_or_vector_same_uimm6_operand\" \"f,Uuv6\")))]\n   \"ISA_HAS_MSA\"\n-  \"@\n-   sll.<msafmt>\\t%w0,%w1,%w2\n-   slli.<msafmt>\\t%w0,%w1,%E2\"\n+{\n+  if (which_alternative == 0)\n+    return \"sll.<msafmt>\\t%w0,%w1,%w2\";\n+\n+  return mips_msa_output_shift_immediate(\"slli.<msafmt>\\t%w0,%w1,%E2\", operands);\n+}\n   [(set_attr \"type\" \"simd_shift\")\n    (set_attr \"mode\" \"<MODE>\")])\n "}, {"sha": "8d97eb361254e22c24ed04b7c9c9a7e4a3b90545", "filename": "gcc/config/mips/mips-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f93f0868919ab32bfbc24adb40158298031a4d58/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f93f0868919ab32bfbc24adb40158298031a4d58/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-protos.h?ref=f93f0868919ab32bfbc24adb40158298031a4d58", "patch": "@@ -317,6 +317,7 @@ extern const char *mips_output_sync_loop (rtx_insn *, rtx *);\n extern unsigned int mips_sync_loop_insns (rtx_insn *, rtx *);\n extern const char *mips_output_division (const char *, rtx *);\n extern const char *mips_msa_output_division (const char *, rtx *);\n+extern const char *mips_msa_output_shift_immediate (const char *, rtx *);\n extern const char *mips_output_probe_stack_range (rtx, rtx);\n extern bool mips_hard_regno_rename_ok (unsigned int, unsigned int);\n extern bool mips_linked_madd_p (rtx_insn *, rtx_insn *);"}, {"sha": "2f7ffe846d8863397e920638b19f5d14ca7af976", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f93f0868919ab32bfbc24adb40158298031a4d58/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f93f0868919ab32bfbc24adb40158298031a4d58/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=f93f0868919ab32bfbc24adb40158298031a4d58", "patch": "@@ -14459,6 +14459,27 @@ mips_msa_output_division (const char *division, rtx *operands)\n     }\n   return s;\n }\n+\n+/* Return the assembly code for MSA immediate shift instructions,\n+   which has the operands given by OPERANDS.  Truncate the shift amount\n+   to make GAS happy.  */\n+\n+const char *\n+mips_msa_output_shift_immediate (const char *shift, rtx *operands)\n+{\n+  rtx amount = operands[2];\n+  machine_mode mode = amount->mode;\n+\n+  unsigned val = UINTVAL (CONST_VECTOR_ELT (amount, 0));\n+  val &= GET_MODE_UNIT_BITSIZE (mode) - 1;\n+  if (!val)\n+    return \"\";\n+\n+  rtx c = gen_int_mode (val, GET_MODE_INNER (mode));\n+  operands[2] = gen_const_vec_duplicate (mode, c);\n+\n+  return shift;\n+}\n \f\n /* Return true if destination of IN_INSN is used as add source in\n    OUT_INSN. Both IN_INSN and OUT_INSN are of type fmadd. Example:"}, {"sha": "00a6e495ba253dbbfeffea498785c908a4ffd3ca", "filename": "gcc/testsuite/gcc.target/mips/pr101922.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f93f0868919ab32bfbc24adb40158298031a4d58/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr101922.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f93f0868919ab32bfbc24adb40158298031a4d58/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr101922.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr101922.c?ref=f93f0868919ab32bfbc24adb40158298031a4d58", "patch": "@@ -0,0 +1,19 @@\n+/* PR target/101922\n+   This was triggering an assembler error with -O3 -mmsa -mloongson-mmi. */\n+\n+/* { dg-do assemble } */\n+/* { dg-options \"-mmsa -mloongson-mmi\" } */\n+\n+typedef __INT8_TYPE__ i8;\n+typedef __INT32_TYPE__ i32;\n+\n+i8 d[16];\n+\n+i32 f(i32 x) {\n+  int i;\n+  for (i = 0; i < 16; i++) {\n+    i32 t = (i32) d[i] >> 31;\n+    x &= t;\n+  }\n+  return x;\n+}"}]}