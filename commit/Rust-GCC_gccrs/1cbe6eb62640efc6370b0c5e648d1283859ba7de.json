{"sha": "1cbe6eb62640efc6370b0c5e648d1283859ba7de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWNiZTZlYjYyNjQwZWZjNjM3MGIwYzVlNjQ4ZDEyODM4NTliYTdkZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-09-21T14:11:35Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-09-21T14:11:35Z"}, "message": "toplev.c (rest_of_compilation): Skip compiling anything with DECL_EXTERNAL set...\n\n\t* toplev.c (rest_of_compilation): Skip compiling anything with\n\tDECL_EXTERNAL set, not just if it has DECL_INLINE as well.\n\nFrom-SVN: r22530", "tree": {"sha": "e37701056014134c1cefeeb9c343240b021fbc46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e37701056014134c1cefeeb9c343240b021fbc46"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1cbe6eb62640efc6370b0c5e648d1283859ba7de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cbe6eb62640efc6370b0c5e648d1283859ba7de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cbe6eb62640efc6370b0c5e648d1283859ba7de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cbe6eb62640efc6370b0c5e648d1283859ba7de/comments", "author": null, "committer": null, "parents": [{"sha": "d06c63899f3052740b85775a104db5ff7921c845", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d06c63899f3052740b85775a104db5ff7921c845", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d06c63899f3052740b85775a104db5ff7921c845"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "a6a00886ebc811c8d2ff9bfc119bf6faeb516dc2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cbe6eb62640efc6370b0c5e648d1283859ba7de/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cbe6eb62640efc6370b0c5e648d1283859ba7de/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1cbe6eb62640efc6370b0c5e648d1283859ba7de", "patch": "@@ -1,3 +1,8 @@\n+Mon Sep 21 14:10:51 1998  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* toplev.c (rest_of_compilation): Skip compiling anything with\n+\tDECL_EXTERNAL set, not just if it has DECL_INLINE as well.\n+\n Mon Sep 21 13:51:05 1998  Jim Wilson  <wilson@cygnus.com>\n \n \t* flow.c (find_basic_blocks): Delete check for in_libcall_block when\n@@ -184,6 +189,7 @@ Fri Sep 18 23:50:56 1998  David Edelsohn  <edelsohn@mhpcc.edu>\n \t(REG_ALLOC_ORDER): Allocate highest numbered condition regsiters\n \tfirst; cr1 can be used for FP record condition insns.\n \n+>>>>>>> 1.2125\n Fri Sep 18 09:44:55 1998  Nick Clifton  <nickc@cygnus.com>\n \n \t* config/m32r/m32r.h (m32r_block_immediate_operand): Add to\n@@ -352,11 +358,13 @@ Tue Sep 15 19:09:06 1998  Richard Henderson  <rth@cygnus.com>\n \t* m68h.h (ARG_POINTER_CFA_OFFSET): New.\n \t* sparc.h (ARG_POINTER_CFA_OFFSET): New.\n \n+>>>>>>> 1.2099\n Tue Sep 15 19:31:58 1998  Michael Meissner  <meissner@cygnus.com>\n \n \t* i960.h (CONST_COSTS): Fix thinko.  Test flag, not the constant\n \tflag bit mask.\n \n+>>>>>>> 1.2079\n Tue Sep 15 14:10:54 EDT 1998  Andrew MacLeod  <amacleod@cygnus.com>\n \n \t* except.h (struct eh_entry): Add false_label field."}, {"sha": "6da9b493283f498da10282fd51c2f6e258da9bd1", "filename": "gcc/toplev.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cbe6eb62640efc6370b0c5e648d1283859ba7de/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cbe6eb62640efc6370b0c5e648d1283859ba7de/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=1cbe6eb62640efc6370b0c5e648d1283859ba7de", "patch": "@@ -3376,8 +3376,9 @@ rest_of_compilation (decl)\n \t}\n \n       /* If specified extern inline but we aren't inlining it, we are\n-\t done.  */\n-      if (DECL_INLINE (decl) && DECL_EXTERNAL (decl))\n+\t done.  This goes for anything that gets here with DECL_EXTERNAL\n+\t set, not just things with DECL_INLINE.  */\n+      if (DECL_EXTERNAL (decl))\n \tgoto exit_rest_of_compilation;\n     }\n "}]}