{"sha": "f94f48ffacd568e76d526f2cb8f7347c599affda", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjk0ZjQ4ZmZhY2Q1NjhlNzZkNTI2ZjJjYjhmNzM0N2M1OTlhZmZkYQ==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2017-07-18T09:36:21Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2017-07-18T09:36:21Z"}, "message": "re PR target/81473 ([avr] build fails due to INT8_MIN and friends.)\n\ngcc/\n\tPR target/81473\n\t* config/avr/avr.c (avr_optimize_casesi): Don't use\n\tINT8_MIN, INT8_MAX, UINT8_MAX, INT16_MIN, INT16_MAX, UINT16_MAX.\n\nFrom-SVN: r250301", "tree": {"sha": "8f031064e708c11e5f92d36eb404295220f2deb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f031064e708c11e5f92d36eb404295220f2deb2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f94f48ffacd568e76d526f2cb8f7347c599affda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f94f48ffacd568e76d526f2cb8f7347c599affda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f94f48ffacd568e76d526f2cb8f7347c599affda", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f94f48ffacd568e76d526f2cb8f7347c599affda/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec15a152077b766a2b61c36f86172af05aa03ab5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec15a152077b766a2b61c36f86172af05aa03ab5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec15a152077b766a2b61c36f86172af05aa03ab5"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "e2212364af4e3b94485a46f793011a62d316d356", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f94f48ffacd568e76d526f2cb8f7347c599affda/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f94f48ffacd568e76d526f2cb8f7347c599affda/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f94f48ffacd568e76d526f2cb8f7347c599affda", "patch": "@@ -1,3 +1,9 @@\n+2017-07-18  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR target/81473\n+\t* config/avr/avr.c (avr_optimize_casesi): Don't use\n+\tINT8_MIN, INT8_MAX, UINT8_MAX, INT16_MIN, INT16_MAX, UINT16_MAX.\n+\n 2017-07-18  Robin Dapp  <rdapp@linux.vnet.ibm.com>\n \n         * tree-vect-data-refs.c (vect_enhance_data_refs_alignment): Remove"}, {"sha": "1f333ccc1b2dc25010e61b16a8772100bfdb41ac", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f94f48ffacd568e76d526f2cb8f7347c599affda/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f94f48ffacd568e76d526f2cb8f7347c599affda/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=f94f48ffacd568e76d526f2cb8f7347c599affda", "patch": "@@ -553,9 +553,9 @@ avr_optimize_casesi (rtx_insn *insns[6], rtx *xop)\n   HOST_WIDE_INT hig_idx = low_idx + num_idx;\n \n   // Maximum ranges of (un)signed QImode resp. HImode.\n-  int imin = QImode == mode ? INT8_MIN : INT16_MIN;\n-  int imax = QImode == mode ? INT8_MAX : INT16_MAX;\n-  unsigned umax = QImode == mode ? UINT8_MAX : UINT16_MAX;\n+  unsigned umax = QImode == mode ? 0xff : 0xffff;\n+  int imax = QImode == mode ? 0x7f : 0x7fff;\n+  int imin = -imax - 1;\n \n   // Testing the case range and whether it fits into the range of the\n   // (un)signed mode.  This test should actually always pass because it"}]}