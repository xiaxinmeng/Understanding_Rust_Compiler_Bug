{"sha": "14a981b922e03f200af99b1db09f599842d8eb7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTRhOTgxYjkyMmUwM2YyMDBhZjk5YjFkYjA5ZjU5OTg0MmQ4ZWI3ZA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2013-11-27T08:02:48Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2013-11-27T08:02:48Z"}, "message": "ubsan.c (ubsan_type_descriptor): If varpool_get_node returns NULL for a decl, recreate that decl.\n\n2013-11-27  Marek Polacek  <polacek@redhat.com>\n\n\t* ubsan.c (ubsan_type_descriptor): If varpool_get_node returns NULL\n\tfor a decl, recreate that decl.  Save into the hash table VAR_DECLs\n\trather than ADDR_EXPRs.\ntestsuite/\n\t* c-c++-common/ubsan/undefined-1.c: New test.\n\nFrom-SVN: r205433", "tree": {"sha": "7b0bd7c1d1c52fe4a301a4ef1b40bb08444d2459", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b0bd7c1d1c52fe4a301a4ef1b40bb08444d2459"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14a981b922e03f200af99b1db09f599842d8eb7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14a981b922e03f200af99b1db09f599842d8eb7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14a981b922e03f200af99b1db09f599842d8eb7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14a981b922e03f200af99b1db09f599842d8eb7d/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "199299e8e54ad29fd3b140adae78e08bbbfef8c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/199299e8e54ad29fd3b140adae78e08bbbfef8c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/199299e8e54ad29fd3b140adae78e08bbbfef8c4"}], "stats": {"total": 49, "additions": 44, "deletions": 5}, "files": [{"sha": "736b2c2b8f91b9e2cd3d6157848dd433f7a67be2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14a981b922e03f200af99b1db09f599842d8eb7d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14a981b922e03f200af99b1db09f599842d8eb7d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=14a981b922e03f200af99b1db09f599842d8eb7d", "patch": "@@ -1,3 +1,9 @@\n+2013-11-27  Marek Polacek  <polacek@redhat.com>\n+\n+\t* ubsan.c (ubsan_type_descriptor): If varpool_get_node returns NULL\n+\tfor a decl, recreate that decl.  Save into the hash table VAR_DECLs\n+\trather than ADDR_EXPRs.\n+\n 2013-11-27  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n \n \t* config/ia64/hpux.h (TARGET_LIBC_HAS_FUNCTION): Fix typo."}, {"sha": "61fe795127f93a2b1d79372d2c000506de95b1f0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14a981b922e03f200af99b1db09f599842d8eb7d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14a981b922e03f200af99b1db09f599842d8eb7d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=14a981b922e03f200af99b1db09f599842d8eb7d", "patch": "@@ -1,3 +1,7 @@\n+2013-11-27  Marek Polacek  <polacek@redhat.com>\n+\n+\t* c-c++-common/ubsan/undefined-1.c: New test.\n+\n 2013-11-26  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/59014"}, {"sha": "1229b711fe92147a3ac484bb714e730ec5be77d9", "filename": "gcc/testsuite/c-c++-common/ubsan/undefined-1.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14a981b922e03f200af99b1db09f599842d8eb7d/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fundefined-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14a981b922e03f200af99b1db09f599842d8eb7d/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fundefined-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fundefined-1.c?ref=14a981b922e03f200af99b1db09f599842d8eb7d", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-do run } */\n+/* { dg-options \"-fsanitize=undefined\" } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-flto\" } { \"\" } } */\n+\n+int\n+foo (int x, int y)\n+{\n+  const int z = 2;\n+  if (z & 1)\n+    return x << y;\n+  return 0;\n+}\n+\n+int\n+bar (int x, int y)\n+{\n+  return x + y;\n+}\n+\n+int\n+main (void)\n+{\n+  foo (3, 2);\n+  bar (12, 42);\n+  return 0;\n+}"}, {"sha": "fa6b42a868f2423447faca3a8a7ca28b8d976936", "filename": "gcc/ubsan.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14a981b922e03f200af99b1db09f599842d8eb7d/gcc%2Fubsan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14a981b922e03f200af99b1db09f599842d8eb7d/gcc%2Fubsan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fubsan.c?ref=14a981b922e03f200af99b1db09f599842d8eb7d", "patch": "@@ -272,8 +272,12 @@ ubsan_type_descriptor (tree type, bool want_pointer_type_p)\n   type = TYPE_MAIN_VARIANT (type);\n \n   tree decl = decl_for_type_lookup (type);\n-  if (decl != NULL_TREE)\n-    return decl;\n+  /* It is possible that some of the earlier created DECLs were found\n+     unused, in that case they weren't emitted and varpool_get_node\n+     returns NULL node on them.  But now we really need them.  Thus,\n+     renew them here.  */\n+  if (decl != NULL_TREE && varpool_get_node (decl))\n+    return build_fold_addr_expr (decl);\n \n   tree dtype = ubsan_type_descriptor_type ();\n   tree type2 = type;\n@@ -372,11 +376,10 @@ ubsan_type_descriptor (tree type, bool want_pointer_type_p)\n   DECL_INITIAL (decl) = ctor;\n   rest_of_decl_compilation (decl, 1, 0);\n \n-  /* Save the address of the VAR_DECL into the hash table.  */\n-  decl = build_fold_addr_expr (decl);\n+  /* Save the VAR_DECL into the hash table.  */\n   decl_for_type_insert (type, decl);\n \n-  return decl;\n+  return build_fold_addr_expr (decl);\n }\n \n /* Create a structure for the ubsan library.  NAME is a name of the new"}]}