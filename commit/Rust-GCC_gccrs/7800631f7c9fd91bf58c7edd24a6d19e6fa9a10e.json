{"sha": "7800631f7c9fd91bf58c7edd24a6d19e6fa9a10e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzgwMDYzMWY3YzlmZDkxYmY1OGM3ZWRkMjRhNmQxOWU2ZmE5YTEwZQ==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2019-12-30T21:26:08Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2019-12-30T21:26:08Z"}, "message": "Improve recursion protection for VxWorks limits.h\n\n2019-12-30  Olivier Hainque  <hainque@adacore.com>\n            Jerome Lambourg  <labourg@adacore.com>\n\n   \t* config/t-vxworks: Arrange to alter/restore glimits.h\n   \tbefore/after stmp-int-hdrs, so it uses a different macro\n   \tname to protect itself against recursive inclusions.\n\nCo-Authored-By: Jerome Lambourg <lambourg@adacore.com>\n\nFrom-SVN: r279777", "tree": {"sha": "6ed03fc7527161ffd25da3b4748b07f31f6212fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ed03fc7527161ffd25da3b4748b07f31f6212fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7800631f7c9fd91bf58c7edd24a6d19e6fa9a10e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7800631f7c9fd91bf58c7edd24a6d19e6fa9a10e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7800631f7c9fd91bf58c7edd24a6d19e6fa9a10e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7800631f7c9fd91bf58c7edd24a6d19e6fa9a10e/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d7f5094aa3dc482b86861d633b6d35c59c289c8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7f5094aa3dc482b86861d633b6d35c59c289c8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7f5094aa3dc482b86861d633b6d35c59c289c8b"}], "stats": {"total": 44, "additions": 41, "deletions": 3}, "files": [{"sha": "d474caa89a64aaef076dd90c19429d83a4b4a2e1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7800631f7c9fd91bf58c7edd24a6d19e6fa9a10e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7800631f7c9fd91bf58c7edd24a6d19e6fa9a10e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7800631f7c9fd91bf58c7edd24a6d19e6fa9a10e", "patch": "@@ -1,3 +1,10 @@\n+2019-12-30  Olivier Hainque  <hainque@adacore.com>\n+            Jerome Lambourg  <labourg@adacore.com>\n+\n+\t* config/t-vxworks: Arrange to alter/restore glimits.h\n+\tbefore/after stmp-int-hdrs, so it uses a different macro\n+\tname to protect itself against recursive inclusions.\n+\n 2019-12-30  Peter Bergner <bergner@linux.ibm.com>\n \n \tPR target/92923"}, {"sha": "86b26cc1ecc5b70c1a42a84f657003e576e133ed", "filename": "gcc/config/t-vxworks", "status": "modified", "additions": 34, "deletions": 3, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7800631f7c9fd91bf58c7edd24a6d19e6fa9a10e/gcc%2Fconfig%2Ft-vxworks", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7800631f7c9fd91bf58c7edd24a6d19e6fa9a10e/gcc%2Fconfig%2Ft-vxworks", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-vxworks?ref=7800631f7c9fd91bf58c7edd24a6d19e6fa9a10e", "patch": "@@ -16,9 +16,40 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-# Both the kernel and RTP headers provide limits.h.\n-LIMITS_H_TEST = true\n-\n vxworks.o: $(srcdir)/config/vxworks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n \t$(TARGET_H) output.h $(TM_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n+\n+# Both the kernel and RTP headers provide limits.h.  They embed VxWorks\n+# specificities and are dated on some configurations so we both need to\n+# provide our own version and make sure the system one gets exposed.\n+\n+LIMITS_H_TEST = true\n+STMP_FIXINC = stmp-fixinc\n+\n+# VxWorks system environments have been GCC based for a long time and we need\n+# to make sure that our files and the system ones use distinct macro names to\n+# protect against recursive inclusions.  We achieve this by temporarily\n+# substituting the headers used by stmp-int-headers with alternative versions\n+# where we add some version indication in the inclusion-protection macro\n+# names.\n+\n+# Before the standard stmp-int-headers operations take place, arrange to\n+# copy the current version of the relevant header files locally, generate\n+# the alternate version and replace the original version with ours:\n+\n+stmp-int-hdrs: subst-glimits.h\n+\n+subst-%.h:\n+\tcp -p $(srcdir)/$*.h orig-$*.h\n+\tID=$$(echo $(BASEVER_c) | sed -e 's/\\./_/g'); \\\n+\tsed -e \"s/_LIMITS_H__/_LIMITS_H_$${ID}_/\" < $(srcdir)/$*.h > $@\n+\tcp $@ $(srcdir)/$*.h\n+\n+# Then arrange to restore the original versions after the standard\n+# operations have taken place:\n+\n+INSTALL_HEADERS += restore-glimits.h\n+\n+restore-glimits.h: stmp-int-hdrs\n+\tcp -p orig-glimits.h $(srcdir)/glimits.h"}]}