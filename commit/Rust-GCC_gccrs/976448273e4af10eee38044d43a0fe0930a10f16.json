{"sha": "976448273e4af10eee38044d43a0fe0930a10f16", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc2NDQ4MjczZTRhZjEwZWVlMzgwNDRkNDNhMGZlMDkzMGExMGYxNg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2001-01-12T21:24:15Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-01-12T21:24:15Z"}, "message": "basic_string.h (_S_find(const _CharT* __beg, const _CharT* __end, _CharT __c): Remove.\n\n\n2001-01-12  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* include/bits/basic_string.h (_S_find(const _CharT* __beg, const\n\t_CharT* __end, _CharT __c): Remove.\n\t* include/bits/basic_string.tcc: Substitute traits::find for _S_find.\n\t* include/bits/char_traits.h: Tweak.\n\nFrom-SVN: r38961", "tree": {"sha": "ddf0393ed28e0500798eb5d4b28856c1d72ca8d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ddf0393ed28e0500798eb5d4b28856c1d72ca8d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/976448273e4af10eee38044d43a0fe0930a10f16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/976448273e4af10eee38044d43a0fe0930a10f16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/976448273e4af10eee38044d43a0fe0930a10f16", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/976448273e4af10eee38044d43a0fe0930a10f16/comments", "author": null, "committer": null, "parents": [{"sha": "d02853261b8e14a4de5dc8bf98002753495fd5eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d02853261b8e14a4de5dc8bf98002753495fd5eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d02853261b8e14a4de5dc8bf98002753495fd5eb"}], "stats": {"total": 50, "additions": 22, "deletions": 28}, "files": [{"sha": "84efd3bf0bdd4d4645ad72c2850a34bbcce5c31b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/976448273e4af10eee38044d43a0fe0930a10f16/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/976448273e4af10eee38044d43a0fe0930a10f16/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=976448273e4af10eee38044d43a0fe0930a10f16", "patch": "@@ -1,3 +1,10 @@\n+2001-01-12  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* include/bits/basic_string.h (_S_find(const _CharT* __beg, const\n+\t_CharT* __end, _CharT __c): Remove.\n+\t* include/bits/basic_string.tcc: Substitute traits::find for _S_find.\n+\t* include/bits/char_traits.h: Tweak.\n+\n 2001-01-12  Laurynas Biveinis  <lauras@softhome.net>\n \n \t* acinclude.m4 (GLIBCPP_CHECK_CTYPE_SUPPORT): check for DJGPP <ctype.h>"}, {"sha": "06b0820afbf00b26b5bfb835784b87cb6e6eb32f", "filename": "libstdc++-v3/include/bits/basic_string.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/976448273e4af10eee38044d43a0fe0930a10f16/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/976448273e4af10eee38044d43a0fe0930a10f16/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h?ref=976448273e4af10eee38044d43a0fe0930a10f16", "patch": "@@ -1,6 +1,6 @@\n // Components for manipulating sequences of characters -*- C++ -*-\n \n-// Copyright (C) 1997, 1998, 1999, 2000 Free Software Foundation, Inc.\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -839,10 +839,6 @@ namespace std {\n       int \n       compare(size_type __pos, size_type __n1, const _CharT* __s, \n \t      size_type __n2 = npos) const;\n- \n-    private:\n-      static const _CharT* \n-      _S_find(const _CharT* __beg, const _CharT* __end, _CharT __c);\n   };\n \n "}, {"sha": "27b0faddd8c736752c29e82cfad7f7b79100f38b", "filename": "libstdc++-v3/include/bits/basic_string.tcc", "status": "modified", "additions": 11, "deletions": 21, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/976448273e4af10eee38044d43a0fe0930a10f16/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/976448273e4af10eee38044d43a0fe0930a10f16/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.tcc?ref=976448273e4af10eee38044d43a0fe0930a10f16", "patch": "@@ -574,23 +574,15 @@ namespace std\n       return __n;\n     }\n \n-  // String operations\n-  template<typename _CharT, typename _Traits, typename _Alloc>\n-    const _CharT*\n-    basic_string<_CharT, _Traits, _Alloc>::\n-    _S_find(const _CharT* __beg, const _CharT* __end, _CharT __c)\n-    {\n-      return find_if(__beg, __end, _Char_traits_match<_CharT, _Traits>(__c));\n-    }\n-\n   template<typename _CharT, typename _Traits, typename _Alloc>\n     basic_string<_CharT, _Traits, _Alloc>::size_type\n     basic_string<_CharT, _Traits, _Alloc>::\n     find(const _CharT* __s, size_type __pos, size_type __n) const\n     {\n+      size_type __size = this->size();\n       size_t __xpos = __pos;\n       const _CharT* __data = _M_data();\n-      for (; __xpos + __n <= this->size(); ++__xpos)\n+      for (; __xpos + __n <= __size; ++__xpos)\n \tif (traits_type::compare(__data + __xpos, __s, __n) == 0)\n \t  return __xpos;\n       return npos;\n@@ -606,9 +598,9 @@ namespace std\n       if (__pos < __size)\n \t{\n \t  const _CharT* __data = _M_data();\n-\t  const _CharT* __end = __data + __size;\n-\t  const _CharT* __p = _S_find(__data + __pos, __end, __c);\n-\t  if (__p != __end)\n+\t  size_type __n = __size - __pos;\n+\t  const _CharT* __p = traits_type::find(__data + __pos, __n, __c);\n+\t  if (__p)\n \t    __ret = __p - __data;\n \t}\n       return __ret;\n@@ -659,11 +651,10 @@ namespace std\n     basic_string<_CharT, _Traits, _Alloc>::\n     find_first_of(const _CharT* __s, size_type __pos, size_type __n) const\n     {\n-      const _CharT* __end = __s + __n;\n       for (; __n && __pos < this->size(); ++__pos)\n \t{\n-\t  const _CharT* __p = _S_find(__s, __end, _M_data()[__pos]);\n-\t  if (__p != __end)\n+\t  const _CharT* __p = traits_type::find(__s, __n, _M_data()[__pos]);\n+\t  if (__p)\n \t    return __pos;\n \t}\n       return npos;\n@@ -681,8 +672,7 @@ namespace std\n \t    __size = __pos;\n \t  do\n \t    {\n-\t      const _CharT* __p = _S_find(__s, __s + __n, _M_data()[__size]);\n-\t      if (__p  != __s + __n)\n+\t      if (traits_type::find(__s, __n, _M_data()[__size]))\n \t\treturn __size;\n \t    } \n \t  while (__size-- != 0);\n@@ -697,7 +687,7 @@ namespace std\n     {\n       size_t __xpos = __pos;\n       for (; __n && __xpos < this->size(); ++__xpos)\n-\tif (_S_find(__s, __s + __n, _M_data()[__xpos]) == __s + __n)\n+\tif (!traits_type::find(__s, __n, _M_data()[__xpos]))\n \t  return __xpos;\n       return npos;\n     }\n@@ -708,7 +698,7 @@ namespace std\n     find_first_not_of(_CharT __c, size_type __pos) const\n     {\n       size_t __xpos = __pos;\n-      for (; __xpos < size(); ++__xpos)\n+      for (; __xpos < this->size(); ++__xpos)\n \tif (!traits_type::eq(_M_data()[__xpos], __c))\n \t  return __xpos;\n       return npos;\n@@ -726,7 +716,7 @@ namespace std\n \t    __size = __pos;\n \t  do\n \t    {\n-\t      if (_S_find(__s, __s + __n, _M_data()[__size]) == __s + __n)\n+\t      if (!traits_type::find(__s, __n, _M_data()[__size]))\n \t\treturn __size;\n \t    } \n \t  while (__size--);"}, {"sha": "4d7833240ea57fddbff49741cb0ff85639fbfbd5", "filename": "libstdc++-v3/include/bits/char_traits.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/976448273e4af10eee38044d43a0fe0930a10f16/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/976448273e4af10eee38044d43a0fe0930a10f16/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h?ref=976448273e4af10eee38044d43a0fe0930a10f16", "patch": "@@ -1,6 +1,6 @@\n // Character Traits for use by standard string and iostream -*- C++ -*-\n \n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -144,6 +144,7 @@ namespace std {\n       { return eq_int_type(__c, eof()) ? int_type(0) : __c; }\n     };\n \n+\n   // 21.1.4  char_traits specializations\n   template<>\n     struct char_traits<char>\n@@ -297,7 +298,7 @@ namespace std {\n       _Char_traits_match(_CharT const& __c) : _M_c(__c) { }\n \n       bool \n-      operator()(_CharT const& __a) { return _Traits::eq(_M_c,__a); }\n+      operator()(_CharT const& __a) { return _Traits::eq(_M_c, __a); }\n     };\n \n } // namespace std"}]}