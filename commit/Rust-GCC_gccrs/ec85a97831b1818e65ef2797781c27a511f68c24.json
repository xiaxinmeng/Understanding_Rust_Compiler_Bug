{"sha": "ec85a97831b1818e65ef2797781c27a511f68c24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWM4NWE5NzgzMWIxODE4ZTY1ZWYyNzk3NzgxYzI3YTUxMWY2OGMyNA==", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2017-01-07T22:37:55Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@gcc.gnu.org", "date": "2017-01-07T22:37:55Z"}, "message": "cppdiropts.texi: Merge documentation of -I, -iquote, -isystem, and -idirafter.\n\n2017-01-07  Sandra Loosemore  <sandra@codesourcery.com>\n\n\tgcc/\n\t* doc/cppdiropts.texi: Merge documentation of -I, -iquote,\n\t-isystem, and -idirafter.  Copy-edit.\n\t* doc/cppopts.texi: Copy-edit.  Remove contradiction about \n\tdefault for -ftrack-macro-expansion.  Delete obsolete and \n\tbadly-formatted implementation details about -fdebug-cpp output.\n\t* doc/cppwarnopts.texi: Copy-edit.\n\nFrom-SVN: r244200", "tree": {"sha": "3dbd6e31708be21742165f23453422a1f321e5ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3dbd6e31708be21742165f23453422a1f321e5ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec85a97831b1818e65ef2797781c27a511f68c24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec85a97831b1818e65ef2797781c27a511f68c24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec85a97831b1818e65ef2797781c27a511f68c24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec85a97831b1818e65ef2797781c27a511f68c24/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5ccf1d8d1073544f3d3c24e2168fc12e983dfa47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ccf1d8d1073544f3d3c24e2168fc12e983dfa47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ccf1d8d1073544f3d3c24e2168fc12e983dfa47"}], "stats": {"total": 177, "additions": 99, "deletions": 78}, "files": [{"sha": "c35032cd21f95160198268343343bd59e694478f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec85a97831b1818e65ef2797781c27a511f68c24/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec85a97831b1818e65ef2797781c27a511f68c24/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ec85a97831b1818e65ef2797781c27a511f68c24", "patch": "@@ -1,3 +1,12 @@\n+2017-01-07  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* doc/cppdiropts.texi: Merge documentation of -I, -iquote,\n+\t-isystem, and -idirafter.  Copy-edit.\n+\t* doc/cppopts.texi: Copy-edit.  Remove contradiction about \n+\tdefault for -ftrack-macro-expansion.  Delete obsolete and \n+\tbadly-formatted implementation details about -fdebug-cpp output.\n+\t* doc/cppwarnopts.texi: Copy-edit.\n+\n 2017-01-07  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR c++/72803"}, {"sha": "1f72649937c5618be22c9da28f361df11e22e28e", "filename": "gcc/doc/cppdiropts.texi", "status": "modified", "additions": 63, "deletions": 45, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec85a97831b1818e65ef2797781c27a511f68c24/gcc%2Fdoc%2Fcppdiropts.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec85a97831b1818e65ef2797781c27a511f68c24/gcc%2Fdoc%2Fcppdiropts.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcppdiropts.texi?ref=ec85a97831b1818e65ef2797781c27a511f68c24", "patch": "@@ -10,61 +10,85 @@\n @c formatted for inclusion in the CPP manual; otherwise the main GCC manual.\n \n @item -I @var{dir}\n+@itemx -iquote @var{dir}\n+@itemx -isystem @var{dir}\n+@itemx -idirafter @var{dir}\n @opindex I\n+@opindex iquote\n+@opindex isystem\n+@opindex idirafter\n Add the directory @var{dir} to the list of directories to be searched\n-for header files.\n+for header files during preprocessing.\n @ifset cppmanual\n @xref{Search Path}.\n @end ifset\n-If you use more than\n-one @option{-I} option, the directories are scanned in left-to-right\n-order; the standard system directories come after.\n+If @var{dir} begins with @samp{=}, then the @samp{=} is replaced\n+by the sysroot prefix; see @option{--sysroot} and @option{-isysroot}.\n+\n+Directories specified with @option{-iquote} apply only to the quote \n+form of the directive, @code{@w{#include \"@var{file}\"}}.\n+Directories specified with @option{-I}, @option{-isystem}, \n+or @option{-idirafter} apply to lookup for both the\n+@code{@w{#include \"@var{file}\"}} and\n+@code{@w{#include <@var{file}>}} directives.\n+\n+You can specify any number or combination of these options on the \n+command line to search for header files in several directories.  \n+The lookup order is as follows:\n+\n+@enumerate\n+@item\n+For the quote form of the include directive, the directory of the current\n+file is searched first.\n+\n+@item\n+For the quote form of the include directive, the directories specified\n+by @option{-iquote} options are searched in left-to-right order,\n+as they appear on the command line.\n+\n+@item\n+Directories specified with @option{-I} options are scanned in\n+left-to-right order.\n \n-This can be used to override a system header\n+@item\n+Directories specified with @option{-isystem} options are scanned in\n+left-to-right order.\n+\n+@item\n+Standard system directories are scanned.\n+\n+@item\n+Directories specified with @option{-idirafter} options are scanned in\n+left-to-right order.\n+@end enumerate\n+\n+You can use @option{-I} to override a system header\n file, substituting your own version, since these directories are\n-searched before the system header file directories.  However, you should\n+searched before the standard system header file directories.  \n+However, you should\n not use this option to add directories that contain vendor-supplied\n-system header files (use @option{-isystem} for that).\n+system header files; use @option{-isystem} for that.\n+\n+The @option{-isystem} and @option{-idirafter} options also mark the directory\n+as a system directory, so that it gets the same special treatment that\n+is applied to the standard system directories.\n+@ifset cppmanual\n+@xref{System Headers}.\n+@end ifset\n \n If a standard system include directory, or a directory specified with\n @option{-isystem}, is also specified with @option{-I}, the @option{-I}\n option is ignored.  The directory is still searched but as a\n system directory at its normal position in the system include chain.\n This is to ensure that GCC's procedure to fix buggy system headers and\n-the ordering for the @code{include_next} directive are not inadvertently changed.\n+the ordering for the @code{#include_next} directive are not inadvertently\n+changed.\n If you really need to change the search order for system directories,\n use the @option{-nostdinc} and/or @option{-isystem} options.\n @ifset cppmanual\n @xref{System Headers}.\n @end ifset\n \n-If @var{dir} begins with @code{=}, then the @code{=} is replaced\n-by the sysroot prefix; see @option{--sysroot} and @option{-isysroot}.\n-\n-@item -iquote @var{dir}\n-@opindex iquote\n-Search @var{dir} only for header files requested with\n-@code{@w{#include \"@var{file}\"}}; they are not searched for\n-@code{@w{#include <@var{file}>}}, before all directories specified by\n-@option{-I} and before the standard system directories.\n-@ifset cppmanual\n-@xref{Search Path}.\n-@end ifset\n-If @var{dir} begins with @code{=}, then the @code{=} is replaced\n-by the sysroot prefix; see @option{--sysroot} and @option{-isysroot}.\n-\n-@item -isystem @var{dir}\n-@opindex isystem\n-Search @var{dir} for header files, after all directories specified by\n-@option{-I} but before the standard system directories.  Mark it\n-as a system directory, so that it gets the same special treatment as\n-is applied to the standard system directories.\n-@ifset cppmanual\n-@xref{System Headers}.\n-@end ifset\n-If @var{dir} begins with @code{=}, then the @code{=} is replaced\n-by the sysroot prefix; see @option{--sysroot} and @option{-isysroot}.\n-\n @item -I-\n @opindex I-\n Split the include path.\n@@ -86,14 +110,6 @@ file directory as the first search directory for @code{@w{#include\n @xref{Search Path}.\n @end ifset\n \n-@item -idirafter @var{dir}\n-@opindex idirafter\n-Search @var{dir} for header files, but do it @emph{after} all\n-directories specified with @option{-I} and the standard system directories\n-have been exhausted.  @var{dir} is treated as a system include directory.\n-If @var{dir} begins with @code{=}, then the @code{=} will be replaced\n-by the sysroot prefix; see @option{--sysroot} and @option{-isysroot}.\n-\n @item -iprefix @var{prefix}\n @opindex iprefix\n Specify @var{prefix} as the prefix for subsequent @option{-iwithprefix}\n@@ -124,8 +140,10 @@ target-specific C++ headers.\n @item -nostdinc\n @opindex nostdinc\n Do not search the standard system directories for header files.\n-Only the directories you have specified with @option{-I} options\n-(and the directory of the current file, if appropriate) are searched.\n+Only the directories explicitly specified with @option{-I},\n+@option{-iquote}, @option{-isystem}, and/or @option{-idirafter}\n+options (and the directory of the current file, if appropriate) \n+are searched.\n \n @item -nostdinc++\n @opindex nostdinc++"}, {"sha": "44e714940e1a9b3359bb8f2ade959aea3e99d703", "filename": "gcc/doc/cppopts.texi", "status": "modified", "additions": 22, "deletions": 27, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec85a97831b1818e65ef2797781c27a511f68c24/gcc%2Fdoc%2Fcppopts.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec85a97831b1818e65ef2797781c27a511f68c24/gcc%2Fdoc%2Fcppopts.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcppopts.texi?ref=ec85a97831b1818e65ef2797781c27a511f68c24", "patch": "@@ -16,7 +16,7 @@ Predefine @var{name} as a macro, with definition @code{1}.\n @item -D @var{name}=@var{definition}\n The contents of @var{definition} are tokenized and processed as if\n they appeared during translation phase three in a @samp{#define}\n-directive.  In particular, the definition will be truncated by\n+directive.  In particular, the definition is truncated by\n embedded newline characters.\n \n If you are invoking the preprocessor from a shell or shell-like\n@@ -25,8 +25,8 @@ characters such as spaces that have a meaning in the shell syntax.\n \n If you wish to define a function-like macro on the command line, write\n its argument list with surrounding parentheses before the equals sign\n-(if any).  Parentheses are meaningful to most shells, so you will need\n-to quote the option.  With @command{sh} and @command{csh},\n+(if any).  Parentheses are meaningful to most shells, so you should\n+quote the option.  With @command{sh} and @command{csh},\n @option{-D'@var{name}(@var{args@dots{}})=@var{definition}'} works.\n \n @option{-D} and @option{-U} options are processed in the order they\n@@ -92,7 +92,7 @@ This option does not suppress the preprocessor's debug output, such as\n rules you should explicitly specify the dependency output file with\n @option{-MF}, or use an environment variable like\n @env{DEPENDENCIES_OUTPUT} (@pxref{Environment Variables}).  Debug output\n-will still be sent to the regular output stream as normal.\n+is still sent to the regular output stream as normal.\n \n Passing @option{-M} to the driver implies @option{-E}, and suppresses\n warnings with an implicit @option{-w}.\n@@ -105,15 +105,14 @@ directly or indirectly, from such a header.\n \n This implies that the choice of angle brackets or double quotes in an\n @samp{#include} directive does not in itself determine whether that\n-header will appear in @option{-MM} dependency output.  This is a\n-slight change in semantics from GCC versions 3.0 and earlier.\n+header appears in @option{-MM} dependency output.\n \n @anchor{dashMF}\n @item -MF @var{file}\n @opindex MF\n When used with @option{-M} or @option{-MM}, specifies a\n file to write the dependencies to.  If no @option{-MF} switch is given\n-the preprocessor sends the rules to the same place it would have sent\n+the preprocessor sends the rules to the same place it would send\n preprocessed output.\n \n When used with the driver options @option{-MD} or @option{-MMD},\n@@ -154,7 +153,7 @@ default CPP takes the name of the main input file, deletes any\n directory components and any file suffix such as @samp{.c}, and\n appends the platform's usual object suffix.  The result is the target.\n \n-An @option{-MT} option will set the target to be exactly the string you\n+An @option{-MT} option sets the target to be exactly the string you\n specify.  If you want multiple targets, you can specify them as a single\n argument to @option{-MT}, or use multiple @option{-MT} options.\n \n@@ -269,8 +268,7 @@ option makes the preprocessor and the compiler consume more\n memory. The @var{level} parameter can be used to choose the level of\n precision of token location tracking thus decreasing the memory\n consumption if necessary. Value @samp{0} of @var{level} de-activates\n-this option just as if no @option{-ftrack-macro-expansion} was present\n-on the command line. Value @samp{1} tracks tokens locations in a\n+this option. Value @samp{1} tracks tokens locations in a\n degraded mode for the sake of minimal memory overhead. In this mode\n all tokens resulting from the expansion of an argument of a\n function-like macro have the same location. Value @samp{2} tracks\n@@ -312,10 +310,10 @@ supported by the system's @code{iconv} library routine.\n @item -fpch-deps\n @opindex fpch-deps\n When using precompiled headers (@pxref{Precompiled Headers}), this flag\n-will cause the dependency-output flags to also list the files from the\n-precompiled header's dependencies.  If not specified only the\n-precompiled header would be listed and not the files that were used to\n-create it because those files are not consulted when a precompiled\n+causes the dependency-output flags to also list the files from the\n+precompiled header's dependencies.  If not specified, only the\n+precompiled header are listed and not the files that were used to\n+create it, because those files are not consulted when a precompiled\n header is used.\n \n @item -fpch-preprocess\n@@ -340,11 +338,11 @@ current directory.\n @item -fworking-directory\n @opindex fworking-directory\n @opindex fno-working-directory\n-Enable generation of linemarkers in the preprocessor output that will\n+Enable generation of linemarkers in the preprocessor output that\n let the compiler know the current working directory at the time of\n-preprocessing.  When this option is enabled, the preprocessor will\n-emit, after the initial linemarker, a second linemarker with the\n-current working directory followed by two slashes.  GCC will use this\n+preprocessing.  When this option is enabled, the preprocessor\n+emits, after the initial linemarker, a second linemarker with the\n+current working directory followed by two slashes.  GCC uses this\n directory, when it's present in the preprocessed input, as the\n directory emitted as the current working directory in some debugging\n information formats.  This option is implicitly enabled if debugging\n@@ -380,6 +378,7 @@ directive line have the effect of turning that line into an ordinary\n source line, since the first token on the line is no longer a @samp{#}.\n \n @item -CC\n+@opindex CC\n Do not discard comments, including during macro expansion.  This is\n like @option{-C}, except that comments contained within macros are\n also passed through to the output file where the macro is expanded.\n@@ -480,7 +479,7 @@ touch foo.h; cpp -dM foo.h\n @end smallexample\n \n @noindent\n-will show all the predefined macros.\n+shows all the predefined macros.\n \n @ifclear cppmanual\n If you use @option{-dM} without the @option{-E} option, @option{-dM} is\n@@ -515,14 +514,10 @@ undefined at the time.\n \n @item -fdebug-cpp\n @opindex fdebug-cpp\n-This option is only useful for debugging GCC.  When used with\n-@option{-E}, dumps debugging information about location maps.  Every\n+This option is only useful for debugging GCC.  When used from CPP or with\n+@option{-E}, it dumps debugging information about location maps.  Every\n token in the output is preceded by the dump of the map its location\n-belongs to.  The dump of the map holding the location of a token would\n-be:\n-@smallexample\n-@{@samp{P}:@file{/file/path};@samp{F}:@file{/includer/path};@samp{L}:@var{line_num};@samp{C}:@var{col_num};@samp{S}:@var{system_header_p};@samp{M}:@var{map_address};@samp{E}:@var{macro_expansion_p},@samp{loc}:@var{location}@}\n-@end smallexample\n+belongs to.\n \n-When used without @option{-E}, this option has no effect.\n+When used from GCC without @option{-E}, this option has no effect.\n "}, {"sha": "35761e38592409febbdde7a519887f47ed242784", "filename": "gcc/doc/cppwarnopts.texi", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec85a97831b1818e65ef2797781c27a511f68c24/gcc%2Fdoc%2Fcppwarnopts.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec85a97831b1818e65ef2797781c27a511f68c24/gcc%2Fdoc%2Fcppwarnopts.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcppwarnopts.texi?ref=ec85a97831b1818e65ef2797781c27a511f68c24", "patch": "@@ -46,14 +46,14 @@ This warning is also enabled by @option{-Wpedantic} and @option{-Wextra}.\n @opindex Wunused-macros\n Warn about macros defined in the main file that are unused.  A macro\n is @dfn{used} if it is expanded or tested for existence at least once.\n-The preprocessor will also warn if the macro has not been used at the\n+The preprocessor also warns if the macro has not been used at the\n time it is redefined or undefined.\n \n Built-in macros, macros defined on the command line, and macros\n defined in include files are not warned about.\n \n @emph{Note:} If a macro is actually used, but only used in skipped\n-conditional blocks, then CPP will report it as unused.  To avoid the\n+conditional blocks, then the preprocessor reports it as unused.  To avoid the\n warning in such a case, you might improve the scope of the macro's\n definition by, for example, moving it into the first skipped block.\n Alternatively, you could provide a dummy use with something like:\n@@ -67,7 +67,7 @@ Alternatively, you could provide a dummy use with something like:\n @opindex Wno-endif-labels\n @opindex Wendif-labels\n Do not warn whenever an @code{#else} or an @code{#endif} are followed by text.\n-This usually happens in code of the form\n+This sometimes happens in older programs with code of the form\n \n @smallexample\n #if FOO\n@@ -78,6 +78,5 @@ This usually happens in code of the form\n @end smallexample\n \n @noindent\n-The second and third @code{FOO} should be in comments, but often are not\n-in older programs.  This warning is on by default.\n-\n+The second and third @code{FOO} should be in comments.\n+This warning is on by default."}]}