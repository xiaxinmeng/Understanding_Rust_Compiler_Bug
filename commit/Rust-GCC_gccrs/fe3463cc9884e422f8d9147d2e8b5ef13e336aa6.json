{"sha": "fe3463cc9884e422f8d9147d2e8b5ef13e336aa6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmUzNDYzY2M5ODg0ZTQyMmY4ZDkxNDdkMmU4YjVlZjEzZTMzNmFhNg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2020-06-21T16:58:55Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-15T09:39:07Z"}, "message": "[Ada] Ada_2020: Add aspect Aggregate to standard container units\n\ngcc/ada/\n\n\t* exp_aggr.adb (Expand_N_Aggregate): A record aggregate requires\n\ta non-private type.\n\t* sem_ch13.adb (Valid_Assign_Indexed): New subprogram local to\n\tResolve_Aspect_Aggregate, to handle the case when the\n\tcorresponding name appearing in the aspect specification for an\n\tindexed aggregate is an overloaded operation.\n\t* libgnat/a-convec.ads, libgnat/a-convec.adb,\n\tlibgnat/a-coinve.ads, libgnat/a-coinve.adb,\n\tlibgnat/a-cobove.ads, libgnat/a-cobove.adb,\n\tlibgnat/a-cdlili.ads, libgnat/a-cdlili.adb,\n\tlibgnat/a-cbdlli.ads, libgnat/a-cbdlli.adb,\n\tlibgnat/a-cohama.ads, libgnat/a-cihama.ads,\n\tlibgnat/a-cbhama.ads, libgnat/a-cborma.ads,\n\tlibgnat/a-ciorma.ads, libgnat/a-coorma.ads,\n\tlibgnat/a-cihase.ads, libgnat/a-cohase.ads,\n\tlibgnat/a-cbhase.ads, libgnat/a-cborse.ads,\n\tlibgnat/a-ciorse.ads, libgnat/a-coorse.ads: Add Ada_2020 aspect\n\tAggregate to types declared in standard containers, as well as\n\tnew subprograms where required.", "tree": {"sha": "6b3cfae5cec846be406044f707ee4cdff056dc28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b3cfae5cec846be406044f707ee4cdff056dc28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d588b8b40c4da4c9efe9671f0b12dbdf11afe027", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d588b8b40c4da4c9efe9671f0b12dbdf11afe027", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d588b8b40c4da4c9efe9671f0b12dbdf11afe027"}], "stats": {"total": 226, "additions": 200, "deletions": 26}, "files": [{"sha": "c24588a4ae704b2a479ee116b327da2e00afd30a", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=fe3463cc9884e422f8d9147d2e8b5ef13e336aa6", "patch": "@@ -6758,7 +6758,9 @@ package body Exp_Aggr is\n    begin\n       --  Record aggregate case\n \n-      if Is_Record_Type (Etype (N)) then\n+      if Is_Record_Type (Etype (N))\n+        and then not Is_Private_Type (Etype (N))\n+      then\n          Expand_Record_Aggregate (N);\n \n       elsif Has_Aspect (Etype (N), Aspect_Aggregate) then"}, {"sha": "8f40d6c0b8d1e60562bf16ef148353f6c7cc7a82", "filename": "gcc/ada/libgnat/a-cbdlli.adb", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-cbdlli.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-cbdlli.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cbdlli.adb?ref=fe3463cc9884e422f8d9147d2e8b5ef13e336aa6", "patch": "@@ -204,6 +204,18 @@ is\n       Insert (Container, No_Element, New_Item, Count);\n    end Append;\n \n+   ---------------\n+   -- Append_One --\n+   ---------------\n+\n+   procedure Append_One\n+     (Container : in out List;\n+      New_Item  : Element_Type)\n+   is\n+   begin\n+      Insert (Container, No_Element, New_Item, 1);\n+   end Append_One;\n+\n    ------------\n    -- Assign --\n    ------------"}, {"sha": "62624f34e074fd37dfab188583498ed7014eee0e", "filename": "gcc/ada/libgnat/a-cbdlli.ads", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-cbdlli.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-cbdlli.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cbdlli.ads?ref=fe3463cc9884e422f8d9147d2e8b5ef13e336aa6", "patch": "@@ -54,8 +54,9 @@ is\n       Constant_Indexing => Constant_Reference,\n       Variable_Indexing => Reference,\n       Default_Iterator  => Iterate,\n-      Iterator_Element  => Element_Type;\n-\n+      Iterator_Element  => Element_Type,\n+      Aggregate         => (Empty        => Empty_List,\n+                            Add_Unnamed  => Append_One);\n    pragma Preelaborable_Initialization (List);\n \n    type Cursor is private;\n@@ -149,6 +150,10 @@ is\n       New_Item  : Element_Type;\n       Count     : Count_Type := 1);\n \n+   procedure Append_One\n+     (Container : in out List;\n+      New_Item  : Element_Type);\n+\n    procedure Delete\n      (Container : in out List;\n       Position  : in out Cursor;"}, {"sha": "d1225e090a3e613242978383778ef5382e215fb1", "filename": "gcc/ada/libgnat/a-cbhama.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-cbhama.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-cbhama.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cbhama.ads?ref=fe3463cc9884e422f8d9147d2e8b5ef13e336aa6", "patch": "@@ -56,7 +56,9 @@ is\n       Constant_Indexing => Constant_Reference,\n       Variable_Indexing => Reference,\n       Default_Iterator  => Iterate,\n-      Iterator_Element  => Element_Type;\n+      Iterator_Element  => Element_Type,\n+      Aggregate         => (Empty     => Empty_Map,\n+                            Add_Named => Insert);\n \n    pragma Preelaborable_Initialization (Map);\n "}, {"sha": "32e9d927e1cb7575b3b5bfd24875869ce4e387cf", "filename": "gcc/ada/libgnat/a-cbhase.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-cbhase.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-cbhase.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cbhase.ads?ref=fe3463cc9884e422f8d9147d2e8b5ef13e336aa6", "patch": "@@ -58,7 +58,9 @@ is\n    type Set (Capacity : Count_Type; Modulus : Hash_Type) is tagged private\n      with Constant_Indexing => Constant_Reference,\n           Default_Iterator  => Iterate,\n-          Iterator_Element  => Element_Type;\n+          Iterator_Element  => Element_Type,\n+          Aggregate         => (Empty       => Empty_Set,\n+                                Add_Unnamed => Include);\n \n    pragma Preelaborable_Initialization (Set);\n "}, {"sha": "6dac0504e9cbd14df9a18ef14a5ecbafb85b46e4", "filename": "gcc/ada/libgnat/a-cborma.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-cborma.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-cborma.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cborma.ads?ref=fe3463cc9884e422f8d9147d2e8b5ef13e336aa6", "patch": "@@ -57,7 +57,9 @@ is\n       Constant_Indexing => Constant_Reference,\n       Variable_Indexing => Reference,\n       Default_Iterator  => Iterate,\n-      Iterator_Element  => Element_Type;\n+      Iterator_Element  => Element_Type,\n+      Aggregate         => (Empty     => Empty_Map,\n+                            Add_Named => Insert);\n \n    pragma Preelaborable_Initialization (Map);\n "}, {"sha": "1b711c413704d5571acedc4a7d10c1a99c5ca705", "filename": "gcc/ada/libgnat/a-cborse.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-cborse.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-cborse.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cborse.ads?ref=fe3463cc9884e422f8d9147d2e8b5ef13e336aa6", "patch": "@@ -56,7 +56,9 @@ is\n    type Set (Capacity : Count_Type) is tagged private\n    with Constant_Indexing => Constant_Reference,\n         Default_Iterator  => Iterate,\n-        Iterator_Element  => Element_Type;\n+        Iterator_Element  => Element_Type,\n+        Aggregate         => (Empty       => Empty_Set,\n+                              Add_Unnamed => Include);\n \n    pragma Preelaborable_Initialization (Set);\n "}, {"sha": "0e25418368bfd6fb51cbe095f258e2e9840d40bf", "filename": "gcc/ada/libgnat/a-cdlili.adb", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-cdlili.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-cdlili.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cdlili.adb?ref=fe3463cc9884e422f8d9147d2e8b5ef13e336aa6", "patch": "@@ -163,6 +163,18 @@ is\n       Insert (Container, No_Element, New_Item, Count);\n    end Append;\n \n+   ---------------\n+   -- Append_One --\n+   ---------------\n+\n+   procedure Append_One\n+     (Container : in out List;\n+      New_Item  : Element_Type)\n+   is\n+   begin\n+      Insert (Container, No_Element, New_Item, 1);\n+   end Append_One;\n+\n    ------------\n    -- Assign --\n    ------------"}, {"sha": "6d369c06652e3a39e3966e9d9181b706486c3461", "filename": "gcc/ada/libgnat/a-cdlili.ads", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-cdlili.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-cdlili.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cdlili.ads?ref=fe3463cc9884e422f8d9147d2e8b5ef13e336aa6", "patch": "@@ -55,7 +55,9 @@ is\n       Constant_Indexing => Constant_Reference,\n       Variable_Indexing => Reference,\n       Default_Iterator  => Iterate,\n-      Iterator_Element  => Element_Type;\n+      Iterator_Element  => Element_Type,\n+      Aggregate         => (Empty       => Empty_List,\n+                            Add_Unnamed => Append_One);\n \n    pragma Preelaborable_Initialization (List);\n \n@@ -152,6 +154,10 @@ is\n       New_Item  : Element_Type;\n       Count     : Count_Type := 1);\n \n+   procedure Append_One\n+     (Container : in out List;\n+      New_Item  : Element_Type);\n+\n    procedure Delete\n      (Container : in out List;\n       Position  : in out Cursor;"}, {"sha": "d29cbb402f74bf5580e7c2aed73c87f6b20da82c", "filename": "gcc/ada/libgnat/a-cihama.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-cihama.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-cihama.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cihama.ads?ref=fe3463cc9884e422f8d9147d2e8b5ef13e336aa6", "patch": "@@ -56,7 +56,9 @@ is\n       Constant_Indexing => Constant_Reference,\n       Variable_Indexing => Reference,\n       Default_Iterator  => Iterate,\n-      Iterator_Element  => Element_Type;\n+      Iterator_Element  => Element_Type,\n+      Aggregate         => (Empty     => Empty_Map,\n+                            Add_Named => Insert);\n \n    pragma Preelaborable_Initialization (Map);\n "}, {"sha": "8af0b7d19e053d395c306ce2f4a9394bbaccdbb4", "filename": "gcc/ada/libgnat/a-cihase.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-cihase.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-cihase.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cihase.ads?ref=fe3463cc9884e422f8d9147d2e8b5ef13e336aa6", "patch": "@@ -58,7 +58,9 @@ is\n    type Set is tagged private\n      with Constant_Indexing => Constant_Reference,\n           Default_Iterator  => Iterate,\n-          Iterator_Element  => Element_Type;\n+          Iterator_Element  => Element_Type,\n+          Aggregate         => (Empty       => Empty_Set,\n+                                Add_Unnamed => Include);\n \n    pragma Preelaborable_Initialization (Set);\n "}, {"sha": "909ab7af9417df0c9cbdfe33e90aef9470a1abb7", "filename": "gcc/ada/libgnat/a-ciorma.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-ciorma.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-ciorma.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ciorma.ads?ref=fe3463cc9884e422f8d9147d2e8b5ef13e336aa6", "patch": "@@ -57,7 +57,9 @@ is\n    with Constant_Indexing => Constant_Reference,\n         Variable_Indexing => Reference,\n         Default_Iterator  => Iterate,\n-        Iterator_Element  => Element_Type;\n+        Iterator_Element  => Element_Type,\n+        Aggregate         => (Empty     => Empty_Map,\n+                              Add_Named => Insert);\n \n    pragma Preelaborable_Initialization (Map);\n "}, {"sha": "84c680ac7136fc128bd2f8c859d800eeaf0f231f", "filename": "gcc/ada/libgnat/a-ciorse.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-ciorse.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-ciorse.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ciorse.ads?ref=fe3463cc9884e422f8d9147d2e8b5ef13e336aa6", "patch": "@@ -56,7 +56,9 @@ is\n    type Set is tagged private with\n       Constant_Indexing => Constant_Reference,\n       Default_Iterator  => Iterate,\n-      Iterator_Element  => Element_Type;\n+      Iterator_Element  => Element_Type,\n+      Aggregate         => (Empty       => Empty_Set,\n+                            Add_Unnamed => Include);\n \n    pragma Preelaborable_Initialization (Set);\n "}, {"sha": "410686b42bb8270e8a9eca179c4816c257a73c79", "filename": "gcc/ada/libgnat/a-cobove.adb", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-cobove.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-cobove.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cobove.adb?ref=fe3463cc9884e422f8d9147d2e8b5ef13e336aa6", "patch": "@@ -350,6 +350,17 @@ package body Ada.Containers.Bounded_Vectors is\n       Container.Insert (Container.Last + 1, New_Item, Count);\n    end Append;\n \n+   ----------------\n+   -- Append_One --\n+   ----------------\n+\n+   procedure Append_One (Container : in out Vector;\n+                         New_Item  :        Element_Type)\n+   is\n+   begin\n+      Insert (Container, Last_Index (Container) + 1, New_Item, 1);\n+   end Append_One;\n+\n    --------------\n    -- Capacity --\n    --------------\n@@ -824,6 +835,16 @@ package body Ada.Containers.Bounded_Vectors is\n       return Index_Type'First;\n    end First_Index;\n \n+   -----------------\n+   -- New_Vector --\n+   -----------------\n+\n+   function New_Vector (First, Last : Index_Type) return Vector\n+   is\n+   begin\n+      return (To_Vector (Count_Type (Last - First + 1)));\n+   end New_Vector;\n+\n    ---------------------\n    -- Generic_Sorting --\n    ---------------------"}, {"sha": "265fd52675a64018f782c45d2fc25b3e42a1e4f1", "filename": "gcc/ada/libgnat/a-cobove.ads", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-cobove.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-cobove.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cobove.ads?ref=fe3463cc9884e422f8d9147d2e8b5ef13e336aa6", "patch": "@@ -58,7 +58,11 @@ package Ada.Containers.Bounded_Vectors is\n       Constant_Indexing => Constant_Reference,\n       Variable_Indexing => Reference,\n       Default_Iterator  => Iterate,\n-      Iterator_Element  => Element_Type;\n+      Iterator_Element  => Element_Type,\n+      Aggregate         => (Empty          => Empty_Vector,\n+                            Add_Unnamed    => Append_One,\n+                            New_Indexed    => New_Vector,\n+                            Assign_Indexed => Replace_Element);\n \n    pragma Preelaborable_Initialization (Vector);\n \n@@ -76,6 +80,10 @@ package Ada.Containers.Bounded_Vectors is\n \n    overriding function \"=\" (Left, Right : Vector) return Boolean;\n \n+   function New_Vector (First, Last : Index_Type) return Vector\n+     with Pre => First = Index_Type'First;\n+   --  Ada_2020 aggregate operation.\n+\n    function To_Vector (Length : Count_Type) return Vector;\n \n    function To_Vector\n@@ -243,6 +251,10 @@ package Ada.Containers.Bounded_Vectors is\n       New_Item  : Element_Type;\n       Count     : Count_Type := 1);\n \n+   procedure Append_One (Container : in out Vector;\n+                         New_Item  :        Element_Type);\n+   --  Ada_2020 aggregate operation.\n+\n    procedure Insert_Space\n      (Container : in out Vector;\n       Before    : Extended_Index;"}, {"sha": "4c87aeae29436412a07f884d7ee77e8fba86cca3", "filename": "gcc/ada/libgnat/a-cohama.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-cohama.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-cohama.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cohama.ads?ref=fe3463cc9884e422f8d9147d2e8b5ef13e336aa6", "patch": "@@ -100,7 +100,9 @@ is\n       Constant_Indexing => Constant_Reference,\n       Variable_Indexing => Reference,\n       Default_Iterator  => Iterate,\n-      Iterator_Element  => Element_Type;\n+      Iterator_Element  => Element_Type,\n+      Aggregate         => (Empty     => Empty_Map,\n+                            Add_Named => Insert);\n \n    pragma Preelaborable_Initialization (Map);\n "}, {"sha": "38d079fbbcc6909cb8ac3988bff9baa883cedead", "filename": "gcc/ada/libgnat/a-cohase.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-cohase.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-cohase.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cohase.ads?ref=fe3463cc9884e422f8d9147d2e8b5ef13e336aa6", "patch": "@@ -59,7 +59,9 @@ is\n    with\n       Constant_Indexing => Constant_Reference,\n       Default_Iterator  => Iterate,\n-      Iterator_Element  => Element_Type;\n+      Iterator_Element  => Element_Type,\n+      Aggregate         => (Empty       => Empty_Set,\n+                            Add_Unnamed => Include);\n \n    pragma Preelaborable_Initialization (Set);\n "}, {"sha": "19a6659e8947410016ede234dc8ee40fd5aa9299", "filename": "gcc/ada/libgnat/a-coinve.adb", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-coinve.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-coinve.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-coinve.adb?ref=fe3463cc9884e422f8d9147d2e8b5ef13e336aa6", "patch": "@@ -228,6 +228,17 @@ is\n       end if;\n    end Append;\n \n+   ----------------\n+   -- Append_One --\n+   ----------------\n+\n+   procedure Append_One (Container : in out Vector;\n+                        New_Item   :        Element_Type)\n+   is\n+   begin\n+      Insert (Container, Last_Index (Container) + 1, New_Item, 1);\n+   end Append_One;\n+\n    ----------------------\n    -- Append_Slow_Path --\n    ----------------------\n@@ -871,6 +882,16 @@ is\n       end;\n    end First_Element;\n \n+   -----------------\n+   -- New_Vector --\n+   -----------------\n+\n+   function New_Vector (First, Last : Index_Type) return Vector\n+   is\n+   begin\n+      return (To_Vector (Count_Type (Last - First + 1)));\n+   end New_Vector;\n+\n    -----------------\n    -- First_Index --\n    -----------------"}, {"sha": "2220d939678f5c5366ef75bd5ffb9c916bcf9908", "filename": "gcc/ada/libgnat/a-coinve.ads", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-coinve.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-coinve.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-coinve.ads?ref=fe3463cc9884e422f8d9147d2e8b5ef13e336aa6", "patch": "@@ -61,7 +61,11 @@ is\n      Constant_Indexing => Constant_Reference,\n      Variable_Indexing => Reference,\n      Default_Iterator  => Iterate,\n-     Iterator_Element  => Element_Type;\n+     Iterator_Element  => Element_Type,\n+     Aggregate         => (Empty          => Empty_Vector,\n+                           Add_Unnamed    => Append_One,\n+                           New_Indexed    => New_Vector,\n+                           Assign_Indexed => Replace_Element);\n \n    pragma Preelaborable_Initialization (Vector);\n \n@@ -79,6 +83,9 @@ is\n \n    overriding function \"=\" (Left, Right : Vector) return Boolean;\n \n+   function New_Vector (First, Last : Index_Type) return Vector\n+     with Pre => First = Index_Type'First;\n+\n    function To_Vector (Length : Count_Type) return Vector;\n \n    function To_Vector\n@@ -238,6 +245,9 @@ is\n       New_Item  : Element_Type;\n       Count     : Count_Type := 1);\n \n+   procedure Append_One (Container : in out Vector;\n+                        New_Item  :        Element_Type);\n+\n    procedure Insert_Space\n      (Container : in out Vector;\n       Before    : Extended_Index;"}, {"sha": "0a793763500bd4454666253647c700b931b7d30a", "filename": "gcc/ada/libgnat/a-convec.adb", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-convec.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-convec.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-convec.adb?ref=fe3463cc9884e422f8d9147d2e8b5ef13e336aa6", "patch": "@@ -210,6 +210,17 @@ is\n       end if;\n    end Append;\n \n+   ----------------\n+   -- Append_One --\n+   ----------------\n+\n+   procedure Append_One (Container : in out Vector;\n+                         New_Item  :        Element_Type)\n+   is\n+   begin\n+      Insert (Container, Last_Index (Container) + 1, New_Item, 1);\n+   end Append_One;\n+\n    ----------------------\n    -- Append_Slow_Path --\n    ----------------------\n@@ -742,6 +753,16 @@ is\n       return Index_Type'First;\n    end First_Index;\n \n+   -----------------\n+   -- New_Vector --\n+   -----------------\n+\n+   function New_Vector (First, Last : Index_Type) return Vector\n+   is\n+   begin\n+      return (To_Vector (Count_Type (Last - First + 1)));\n+   end New_Vector;\n+\n    ---------------------\n    -- Generic_Sorting --\n    ---------------------"}, {"sha": "ebc90cf576617d669aeaa02791ad445c60830bac", "filename": "gcc/ada/libgnat/a-convec.ads", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-convec.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-convec.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-convec.ads?ref=fe3463cc9884e422f8d9147d2e8b5ef13e336aa6", "patch": "@@ -93,7 +93,12 @@ is\n       Constant_Indexing => Constant_Reference,\n       Variable_Indexing => Reference,\n       Default_Iterator  => Iterate,\n-      Iterator_Element  => Element_Type;\n+      Iterator_Element  => Element_Type,\n+      Aggregate         => (Empty          => Empty_Vector,\n+                            Add_Unnamed    => Append_One,\n+                            New_Indexed    => New_Vector,\n+                            Assign_Indexed => Replace_Element);\n+\n    pragma Preelaborable_Initialization (Vector);\n    --  Vector type, to be instantiated by users of this package. If an object\n    --  of type Vector is not otherwise initialized, it is initialized to\n@@ -323,6 +328,10 @@ is\n    --  Source is removed from Source and inserted into Target in the original\n    --  order. The length of Source is 0 after a successful call to Move.\n \n+   function New_Vector (First, Last : Index_Type) return Vector\n+     with Pre => First = Index_Type'First;\n+   --  Ada_2020 aggregate operation.\n+\n    procedure Insert\n      (Container : in out Vector;\n       Before    : Extended_Index;\n@@ -438,6 +447,10 @@ is\n    --  Equivalent to Insert (Container, Last_Index (Container) + 1, New_Item,\n    --  Count).\n \n+   procedure Append_One (Container : in out Vector;\n+                         New_Item  :        Element_Type);\n+   --  Ada_2020 aggregate operation.\n+\n    procedure Insert_Space\n      (Container : in out Vector;\n       Before    : Extended_Index;"}, {"sha": "524aa048fc0d59f15af98862c52739676cb1e098", "filename": "gcc/ada/libgnat/a-coorma.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-coorma.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-coorma.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-coorma.ads?ref=fe3463cc9884e422f8d9147d2e8b5ef13e336aa6", "patch": "@@ -57,7 +57,9 @@ is\n       Constant_Indexing => Constant_Reference,\n       Variable_Indexing => Reference,\n       Default_Iterator  => Iterate,\n-      Iterator_Element  => Element_Type;\n+      Iterator_Element  => Element_Type,\n+      Aggregate         => (Empty     => Empty_Map,\n+                            Add_Named => Insert);\n \n    type Cursor is private;\n    pragma Preelaborable_Initialization (Cursor);"}, {"sha": "c08d4957d99e1e7769ff7c710509bcdffe172175", "filename": "gcc/ada/libgnat/a-coorse.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-coorse.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Flibgnat%2Fa-coorse.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-coorse.ads?ref=fe3463cc9884e422f8d9147d2e8b5ef13e336aa6", "patch": "@@ -57,6 +57,8 @@ is\n    with Constant_Indexing => Constant_Reference,\n         Default_Iterator  => Iterate,\n         Iterator_Element  => Element_Type;\n+        --  Aggregate         => (Empty       => Empty_Set,\n+        --                        Add_Unnamed => Include);\n \n    pragma Preelaborable_Initialization (Set);\n "}, {"sha": "60660bcbfb797db6c13665363bcb4328b98beffc", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 23, "deletions": 8, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe3463cc9884e422f8d9147d2e8b5ef13e336aa6/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=fe3463cc9884e422f8d9147d2e8b5ef13e336aa6", "patch": "@@ -15142,19 +15142,33 @@ package body Sem_Ch13 is\n       --  Predicates that establish the legality of each possible operation in\n       --  an Aggregate aspect.\n \n-      function Valid_Empty          (E : Entity_Id) return Boolean;\n-      function Valid_Add_Named      (E : Entity_Id) return Boolean;\n-      function Valid_Add_Unnamed    (E : Entity_Id) return Boolean;\n-      function Valid_New_Indexed    (E : Entity_Id) return Boolean;\n-\n-      --  Note: The legality rules for Assign_Indexed are the same as for\n-      --  Add_Named.\n+      function Valid_Empty             (E : Entity_Id) return Boolean;\n+      function Valid_Add_Named         (E : Entity_Id) return Boolean;\n+      function Valid_Add_Unnamed       (E : Entity_Id) return Boolean;\n+      function Valid_New_Indexed       (E : Entity_Id) return Boolean;\n+      function Valid_Assign_Indexed    (E : Entity_Id) return Boolean;\n \n       generic\n         with function Pred (Id : Node_Id) return Boolean;\n       procedure Resolve_Operation (Subp_Id : Node_Id);\n       --  Common processing to resolve each aggregate operation.\n \n+      ------------------------\n+      -- Valid_Assign_Index --\n+      ------------------------\n+\n+      function Valid_Assign_Indexed (E : Entity_Id) return Boolean is\n+      begin\n+         --  The profile must be the same as for Add_Named, with the added\n+         --  requirement that the key_type be a discrete type.\n+\n+         if Valid_Add_Named (E) then\n+            return Is_Discrete_Type (Etype (Next_Formal (First_Formal (E))));\n+         else\n+            return False;\n+         end if;\n+      end Valid_Assign_Indexed;\n+\n       -----------------\n       -- Valid_Emoty --\n       -----------------\n@@ -15278,7 +15292,8 @@ package body Sem_Ch13 is\n       procedure Resolve_Named   is new Resolve_Operation (Valid_Add_Named);\n       procedure Resolve_Indexed is new Resolve_Operation (Valid_New_Indexed);\n       procedure Resolve_Assign_Indexed\n-                                is new Resolve_Operation (Valid_Add_Named);\n+                                is new Resolve_Operation\n+                                                      (Valid_Assign_Indexed);\n    begin\n       Assoc := First (Component_Associations (Expr));\n "}]}