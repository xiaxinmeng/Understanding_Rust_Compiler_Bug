{"sha": "a687fbb9ece39f225fd15ea2bbb319e3b4c58a39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTY4N2ZiYjllY2UzOWYyMjVmZDE1ZWEyYmJiMzE5ZTNiNGM1OGEzOQ==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2007-08-31T10:20:21Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-08-31T10:20:21Z"}, "message": "a-tags.adb (Internal_Tag): Protect the run-time against wrong internal tags.\n\n2007-08-31  Javier Miranda  <miranda@adacore.com>\n\n\t* a-tags.adb (Internal_Tag): Protect the run-time against wrong\n\tinternal tags.\n\nFrom-SVN: r127968", "tree": {"sha": "36b886e9216522a418785d1765794bad6be7002c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36b886e9216522a418785d1765794bad6be7002c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a687fbb9ece39f225fd15ea2bbb319e3b4c58a39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a687fbb9ece39f225fd15ea2bbb319e3b4c58a39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a687fbb9ece39f225fd15ea2bbb319e3b4c58a39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a687fbb9ece39f225fd15ea2bbb319e3b4c58a39/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "41c8951a8d4f38efb8a3550195aac0e3c68cfbe5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41c8951a8d4f38efb8a3550195aac0e3c68cfbe5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41c8951a8d4f38efb8a3550195aac0e3c68cfbe5"}], "stats": {"total": 47, "additions": 44, "deletions": 3}, "files": [{"sha": "33f0be3a6bee80a8d4fb255f9bafb6a444c61504", "filename": "gcc/ada/a-tags.adb", "status": "modified", "additions": 44, "deletions": 3, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a687fbb9ece39f225fd15ea2bbb319e3b4c58a39/gcc%2Fada%2Fa-tags.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a687fbb9ece39f225fd15ea2bbb319e3b4c58a39/gcc%2Fada%2Fa-tags.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tags.adb?ref=a687fbb9ece39f225fd15ea2bbb319e3b4c58a39", "patch": "@@ -628,9 +628,50 @@ package body Ada.Tags is\n             end loop;\n \n             if Addr_Last <= External'Last then\n-               Addr :=\n-                 Integer_Address'Value (External (Addr_First .. Addr_Last));\n-               return To_Tag (Addr);\n+\n+               --  Protect the run-time against wrong internal tags. We\n+               --  cannot use exception handlers here because it would\n+               --  disable the use of this run-time compiling with\n+               --  restriction No_Exception_Handler.\n+\n+               declare\n+                  C         : Character;\n+                  Wrong_Tag : Boolean := False;\n+\n+               begin\n+                  if External (Addr_First) /= '1'\n+                    or else External (Addr_First + 1) /= '6'\n+                    or else External (Addr_First + 2) /= '#'\n+                  then\n+                     Wrong_Tag := True;\n+\n+                  else\n+                     for J in Addr_First + 3 .. Addr_Last - 1 loop\n+                        C := External (J);\n+\n+                        if not (C in '0' .. '9')\n+                          and then not (C in 'A' .. 'F')\n+                          and then not (C in 'a' .. 'f')\n+                        then\n+                           Wrong_Tag := True;\n+                           exit;\n+                        end if;\n+                     end loop;\n+                  end if;\n+\n+                  --  Convert the numeric value into a tag\n+\n+                  if not Wrong_Tag then\n+                     Addr := Integer_Address'Value\n+                               (External (Addr_First .. Addr_Last));\n+\n+                     --  Internal tags never have value 0\n+\n+                     if Addr /= 0 then\n+                        return To_Tag (Addr);\n+                     end if;\n+                  end if;\n+               end;\n             end if;\n          end;\n "}]}