{"sha": "55ba61f31a031b29b0d081577de019dff0c22a3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTViYTYxZjMxYTAzMWIyOWIwZDA4MTU3N2RlMDE5ZGZmMGMyMmEzYw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2002-10-31T17:16:52Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2002-10-31T17:16:52Z"}, "message": "i386.c (override_options): Set defaults for flag_omit_frame_pointer...\n\n\t* i386.c (override_options): Set defaults for flag_omit_frame_pointer,\n\tflag_asynchronous_unwind_tables, flag_pcc_struct_return.\n\t* i386.c (optimization_options): Set flag_omit_frame_pointer,\n\tflag_asynchronous_unwind_tables, flag_pcc_struct_return to 2.\n\tDo not clear -momit-leaf-frame-pointer when profiling.\n\t(ix86_frame_pointer_required): Frame pointer is allways required when\n\tprofiling.\n\nFrom-SVN: r58681", "tree": {"sha": "3050adb2e07655be14c00817b06e87dec5f3ead6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3050adb2e07655be14c00817b06e87dec5f3ead6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55ba61f31a031b29b0d081577de019dff0c22a3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55ba61f31a031b29b0d081577de019dff0c22a3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55ba61f31a031b29b0d081577de019dff0c22a3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55ba61f31a031b29b0d081577de019dff0c22a3c/comments", "author": null, "committer": null, "parents": [{"sha": "14b4829dfde2a20e4f8277eeaaa00e119ba97471", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14b4829dfde2a20e4f8277eeaaa00e119ba97471", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14b4829dfde2a20e4f8277eeaaa00e119ba97471"}], "stats": {"total": 57, "additions": 44, "deletions": 13}, "files": [{"sha": "03c3499a6485399ce35f71271de35637e1a1bbb6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ba61f31a031b29b0d081577de019dff0c22a3c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ba61f31a031b29b0d081577de019dff0c22a3c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=55ba61f31a031b29b0d081577de019dff0c22a3c", "patch": "@@ -1,3 +1,13 @@\n+Thu Oct 31 18:08:00 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.c (override_options): Set defaults for flag_omit_frame_pointer,\n+\tflag_asynchronous_unwind_tables, flag_pcc_struct_return.\n+\t* i386.c (optimization_options): Set flag_omit_frame_pointer,\n+\tflag_asynchronous_unwind_tables, flag_pcc_struct_return to 2.\n+\tDo not clear -momit-leaf-frame-pointer when profiling.\n+\t(ix86_frame_pointer_required): Frame pointer is allways required when\n+\tprofiling.\n+\n Thu Oct 31 16:09:44 CET 2002  Jan Hubicka  <jh@suse.cz>\n \n \t* i386.md (negdf2_ifs_rex64): Don't allow GPR operand."}, {"sha": "b4d2087bcd78884013d9c2f273f92f13ebafc857", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 34, "deletions": 13, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ba61f31a031b29b0d081577de019dff0c22a3c/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ba61f31a031b29b0d081577de019dff0c22a3c/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=55ba61f31a031b29b0d081577de019dff0c22a3c", "patch": "@@ -1000,6 +1000,27 @@ override_options ()\n   real_format_for_mode[XFmode - QFmode] = &ieee_extended_intel_96_format;\n   real_format_for_mode[TFmode - QFmode] = &ieee_extended_intel_128_format;\n \n+  /* Set the default values for switches whose defualt depends on TARGET_64BIT\n+     in case they wasn't overwriten by command line options.  */\n+  if (TARGET_64BIT)\n+    {\n+      if (flag_omit_frame_pointer == 2)\n+\tflag_omit_frame_pointer = 1;\n+      if (flag_asynchronous_unwind_tables == 2)\n+\tflag_asynchronous_unwind_tables = 1;\n+      if (flag_pcc_struct_return == 2)\n+\tflag_pcc_struct_return = 0;\n+    }\n+  else\n+    {\n+      if (flag_omit_frame_pointer == 2)\n+\tflag_omit_frame_pointer = 0;\n+      if (flag_asynchronous_unwind_tables == 2)\n+\tflag_asynchronous_unwind_tables = 0;\n+      if (flag_pcc_struct_return == 2)\n+\tflag_pcc_struct_return = 1;\n+    }\n+\n #ifdef SUBTARGET_OVERRIDE_OPTIONS\n   SUBTARGET_OVERRIDE_OPTIONS;\n #endif\n@@ -1212,9 +1233,6 @@ override_options ()\n \t       ix86_tls_dialect_string);\n     }\n \n-  if (profile_flag)\n-    target_flags &= ~MASK_OMIT_LEAF_FRAME_POINTER;\n-\n   /* Keep nonleaf frame pointers.  */\n   if (TARGET_OMIT_LEAF_FRAME_POINTER)\n     flag_omit_frame_pointer = 1;\n@@ -1319,15 +1337,15 @@ optimization_options (level, size)\n   if (level > 1)\n     flag_schedule_insns = 0;\n #endif\n-  if (TARGET_64BIT && optimize >= 1)\n-    flag_omit_frame_pointer = 1;\n-  if (TARGET_64BIT)\n-    {\n-      flag_pcc_struct_return = 0;\n-      flag_asynchronous_unwind_tables = 1;\n-    }\n-  if (profile_flag)\n-    flag_omit_frame_pointer = 0;\n+\n+  /* The default values of these switches depend on the TARGET_64BIT\n+     that is not known at this moment.  Mark these values with 2 and\n+     let user the to override these.  In case there is no command line option\n+     specifying them, we will set the defaults in override_options.  */\n+  if (optimize >= 1)\n+    flag_omit_frame_pointer = 2;\n+  flag_pcc_struct_return = 2;\n+  flag_asynchronous_unwind_tables = 2;\n }\n \f\n /* Table of valid machine attributes.  */\n@@ -4045,7 +4063,10 @@ ix86_frame_pointer_required ()\n      the frame pointer by default.  Turn it back on now if we've not\n      got a leaf function.  */\n   if (TARGET_OMIT_LEAF_FRAME_POINTER\n-      && (!current_function_is_leaf || current_function_profile))\n+      && (!current_function_is_leaf))\n+    return 1;\n+\n+  if (current_function_profile)\n     return 1;\n \n   return 0;"}]}