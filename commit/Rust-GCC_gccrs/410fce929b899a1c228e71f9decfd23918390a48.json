{"sha": "410fce929b899a1c228e71f9decfd23918390a48", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDEwZmNlOTI5Yjg5OWExYzIyOGU3MWY5ZGVjZmQyMzkxODM5MGE0OA==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2006-06-10T03:39:38Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-06-10T03:39:38Z"}, "message": "random (random_device::random_device(const std::string& = \"/dev/urandom\")): Open in binary mode.\n\n2006-06-09  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/tr1/random (random_device::random_device(const\n\tstd::string& = \"/dev/urandom\")): Open in binary mode.\n\n\t* include/tr1/random (random_device::random_device(const\n\tstd::string& = \"rand\")): Use mersenne_twister.\n\t(random_device::_M_strtoul): New.\n\t(random_device::operator()()): Update.\n\n\t* include/tr1/random: Minor stylistic changes, consistently\n\tqualify with std::.\n\nFrom-SVN: r114539", "tree": {"sha": "b17a5f89259723bcaf6c001aadd80ea0d2a5b029", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b17a5f89259723bcaf6c001aadd80ea0d2a5b029"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/410fce929b899a1c228e71f9decfd23918390a48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/410fce929b899a1c228e71f9decfd23918390a48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/410fce929b899a1c228e71f9decfd23918390a48", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/410fce929b899a1c228e71f9decfd23918390a48/comments", "author": null, "committer": null, "parents": [{"sha": "53e959214508975762e0ae4da1702f412fb8d6de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53e959214508975762e0ae4da1702f412fb8d6de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53e959214508975762e0ae4da1702f412fb8d6de"}], "stats": {"total": 125, "additions": 75, "deletions": 50}, "files": [{"sha": "69b390267ac95cdd204f7c617d17bf46a9f7b58c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/410fce929b899a1c228e71f9decfd23918390a48/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/410fce929b899a1c228e71f9decfd23918390a48/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=410fce929b899a1c228e71f9decfd23918390a48", "patch": "@@ -1,3 +1,16 @@\n+2006-06-09  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/tr1/random (random_device::random_device(const\n+\tstd::string& = \"/dev/urandom\")): Open in binary mode.\n+\n+\t* include/tr1/random (random_device::random_device(const\n+\tstd::string& = \"rand\")): Use mersenne_twister.\n+\t(random_device::_M_strtoul): New.\n+\t(random_device::operator()()): Update.\n+\n+\t* include/tr1/random: Minor stylistic changes, consistently\n+\tqualify with std::.\n+\n 2006-06-09  Paolo Carlini  <pcarlini@suse.de>\n \n \t* acinclude.m4 ([GLIBCXX_CHECK_RANDOM_TR1]): New, check for"}, {"sha": "4ecaccaf58a43fbd86e970b5f88b5c903c414533", "filename": "libstdc++-v3/include/tr1/random", "status": "modified", "additions": 62, "deletions": 50, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/410fce929b899a1c228e71f9decfd23918390a48/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Frandom", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/410fce929b899a1c228e71f9decfd23918390a48/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Frandom", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Frandom?ref=410fce929b899a1c228e71f9decfd23918390a48", "patch": "@@ -44,7 +44,6 @@\n #include <iosfwd>\n #include <limits>\n #include <tr1/type_traits>\n-#include <sstream>\n #include <fstream>\n \n namespace std\n@@ -560,8 +559,8 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n        * an error state.\n        */\n       template<typename _CharT, typename _Traits>\n-        friend basic_ostream<_CharT, _Traits>&\n-        operator<<(basic_ostream<_CharT, _Traits>& __os,\n+        friend std::basic_ostream<_CharT, _Traits>&\n+        operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n \t\t   const mersenne_twister& __x)\n         {\n \t  std::copy(__x._M_x, __x._M_x + state_size,\n@@ -580,8 +579,8 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n        * an error state.\n        */\n       template<typename _CharT, typename _Traits>\n-        friend basic_istream<_CharT, _Traits>&\n-        operator>>(basic_istream<_CharT, _Traits>& __is,\n+        friend std::basic_istream<_CharT, _Traits>&\n+        operator>>(std::basic_istream<_CharT, _Traits>& __is,\n \t\t   mersenne_twister& __x)\n         {\n \t  for (int __i = 0; __i < state_size; ++__i)\n@@ -769,8 +768,8 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n        * an error state.\n        */\n       template<typename _CharT, typename _Traits>\n-        friend basic_ostream<_CharT, _Traits>&\n-        operator<<(basic_ostream<_CharT, _Traits>& __os,\n+        friend std::basic_ostream<_CharT, _Traits>&\n+        operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n \t\t   const subtract_with_carry& __x)\n         {\n \t  std::copy(__x._M_x, __x._M_x + long_lag,\n@@ -789,8 +788,8 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n        * an error state.\n        */\n       template<typename _CharT, typename _Traits>\n-        friend basic_istream<_CharT, _Traits>&\n-        operator>>(basic_istream<_CharT, _Traits>& __is,\n+        friend std::basic_istream<_CharT, _Traits>&\n+        operator>>(std::basic_istream<_CharT, _Traits>& __is,\n \t\t   subtract_with_carry& __x)\n         {\n \t  for (int __i = 0; __i < long_lag; ++__i)\n@@ -961,8 +960,8 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n        * an error state.\n        */\n       template<typename _CharT, typename _Traits>\n-        friend basic_ostream<_CharT, _Traits>&\n-        operator<<(basic_ostream<_CharT, _Traits>& __os,\n+        friend std::basic_ostream<_CharT, _Traits>&\n+        operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n \t\t   const discard_block& __x)\n         { return __os << __x._M_b << \" \" << __x._M_n; }\n \n@@ -977,8 +976,8 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n        * an error state.\n        */\n       template<typename _CharT, typename _Traits>\n-        friend basic_istream<_CharT, _Traits>&\n-        operator>>(basic_istream<_CharT, _Traits>& __is,\n+        friend std::basic_istream<_CharT, _Traits>&\n+        operator>>(std::basic_istream<_CharT, _Traits>& __is,\n \t\t   discard_block& __x)\n         { return __is >> __x._M_b >> __x._M_n; }\n \n@@ -1129,8 +1128,8 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n        * an error state.\n        */\n       template<typename _CharT, typename _Traits>\n-        friend basic_ostream<_CharT, _Traits>&\n-        operator<<(basic_ostream<_CharT, _Traits>& __os,\n+        friend std::basic_ostream<_CharT, _Traits>&\n+        operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n \t\t   const xor_combine& __x)\n         { return __os << __x.base1() << \" \" << __x.base1(); }\n \n@@ -1145,8 +1144,8 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n        * an error state.\n        */\n       template<typename _CharT, typename _Traits>\n-        friend basic_istream<_CharT, _Traits>&\n-        operator>>(basic_istream<_CharT, _Traits>& __is,\n+        friend std::basic_istream<_CharT, _Traits>&\n+        operator>>(std::basic_istream<_CharT, _Traits>& __is,\n \t\t   xor_combine& __x)\n         { return __is >> __x._M_b1 >> __x._M_b2; }\n \n@@ -1165,15 +1164,17 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n   public:\n     // types\n     typedef unsigned int result_type;\n-    \n+\n     // constructors, destructors and member functions\n \n #ifdef _GLIBCXX_USE_RANDOM_TR1\n+\n     explicit\n     random_device(const std::string& __token = \"/dev/urandom\")\n     {\n       if ((__token != \"/dev/urandom\" && __token != \"/dev/random\")\n-\t  || !_M_filebuf.open(__token.c_str(), std::ios_base::in))\n+\t  || !_M_filebuf.open(__token.c_str(),\n+\t\t\t      std::ios_base::in | std::ios_base::binary))\n \tstd::__throw_runtime_error(__N(\"random_device::\"\n \t\t\t\t       \"random_device(const std::string&)\"));\n     }\n@@ -1182,21 +1183,30 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n     { _M_filebuf.close(); }\n \n #else\n+\n     explicit\n     random_device(const std::string& __token = \"rand\")\n+    : _M_mt(_M_strtoul(__token)) { }\n+\n+  private:\n+    static unsigned long\n+    _M_strtoul(const std::string& __str)\n     {\n-      if (__token != \"rand\")\n+      unsigned long __ret = 5489UL;\n+      if (__str != \"rand\")\n \t{\n-\t  std::stringstream __ss(__token);\n-\t  unsigned int __seed;\n-\t  __ss >> __seed;\n-\t  if (__ss.fail())\n-\t    std::__throw_runtime_error(__N(\"random_device::random_device\"\n+\t  const char* __nptr = __str.c_str();\n+\t  char* __endptr;\n+\t  __ret = std::strtoul(__nptr, &__endptr, 0);\n+\t  if (*__nptr == '\\0' || *__endptr != '\\0')\n+\t    std::__throw_runtime_error(__N(\"random_device::_M_strtoul\"\n \t\t\t\t\t   \"(const std::string&)\"));\n-\t  else\n-\t    std::srand(__seed);\n \t}\n+      return __ret;\n     }\n+\n+  public:\n+\n #endif\n \n     result_type\n@@ -1219,7 +1229,7 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n       _M_filebuf.sgetn(reinterpret_cast<char*>(&__ret), sizeof(result_type));\n       return __ret;\n #else\n-      return max() * (std::rand() / double(RAND_MAX));\n+      return _M_mt();\n #endif\n     }\n \n@@ -1229,7 +1239,9 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n \n #ifdef _GLIBCXX_USE_RANDOM_TR1\n     std::filebuf _M_filebuf;\n-#endif    \n+#else\n+    mt19937      _M_mt;\n+#endif\n   };\n \n   /* @} */ // group tr1_random_generators\n@@ -1325,8 +1337,8 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n        * an error state.\n        */\n       template<typename _CharT, typename _Traits>\n-        friend basic_ostream<_CharT, _Traits>&\n-        operator<<(basic_ostream<_CharT, _Traits>& __os,\n+        friend std::basic_ostream<_CharT, _Traits>&\n+        operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n \t\t   const uniform_int& __x)\n         { return __os << __x._M_min << \" \" << __x._M_max; }\n \n@@ -1340,8 +1352,8 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n        * @returns The input stream with @p __u extracted or in an error state.\n        */\n       template<typename _CharT, typename _Traits>\n-        friend basic_istream<_CharT, _Traits>&\n-        operator>>(basic_istream<_CharT, _Traits>& __is, uniform_int& __u)\n+        friend std::basic_istream<_CharT, _Traits>&\n+        operator>>(std::basic_istream<_CharT, _Traits>& __is, uniform_int& __u)\n         { return __is >> __u._M_min >> __u._M_max; }\n \n     private:\n@@ -1428,8 +1440,8 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n      * an error state.\n      */\n     template<typename _CharT, typename _Traits>\n-      friend basic_ostream<_CharT, _Traits>&\n-      operator<<(basic_ostream<_CharT, _Traits>& __os,\n+      friend std::basic_ostream<_CharT, _Traits>&\n+      operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n \t\t const bernoulli_distribution& __x)\n       { return __os << __x.p(); }\n \n@@ -1443,8 +1455,8 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n      * @returns The input stream with @p __u extracted or in an error state.\n      */\n     template<typename _CharT, typename _Traits>\n-      friend basic_istream<_CharT, _Traits>&\n-      operator>>(basic_istream<_CharT, _Traits>& __is,\n+      friend std::basic_istream<_CharT, _Traits>&\n+      operator>>(std::basic_istream<_CharT, _Traits>& __is,\n \t\t bernoulli_distribution& __u)\n       { return __is >> __u._M_p; }\n \n@@ -1518,8 +1530,8 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n        * an error state.\n        */\n       template<typename _CharT, typename _Traits>\n-        friend basic_ostream<_CharT, _Traits>&\n-        operator<<(basic_ostream<_CharT, _Traits>& __os,\n+        friend std::basic_ostream<_CharT, _Traits>&\n+        operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n \t\t   const geometric_distribution& __x)\n         { return __os << __x.p(); }\n \n@@ -1533,8 +1545,8 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n        * @returns The input stream with @p __u extracted or in an error state.\n        */\n       template<typename _CharT, typename _Traits>\n-        friend basic_istream<_CharT, _Traits>&\n-        operator>>(basic_istream<_CharT, _Traits>& __is,\n+        friend std::basic_istream<_CharT, _Traits>&\n+        operator>>(std::basic_istream<_CharT, _Traits>& __is,\n \t\t   geometric_distribution& __u)\n         {\n \t  __is >> __u._M_p;\n@@ -1605,8 +1617,8 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n        * an error state.\n        */\n       template<typename _CharT, typename _Traits>\n-        friend basic_ostream<_CharT, _Traits>&\n-        operator<<(basic_ostream<_CharT, _Traits>& __os,\n+        friend std::basic_ostream<_CharT, _Traits>&\n+        operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n \t\t   const uniform_real& __x)\n         { return __os << __x.min() << \" \" << __x.max(); }\n \n@@ -1620,9 +1632,9 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n        * @returns The input stream with @p __u extracted or in an error state.\n        */\n       template<typename _CharT, typename _Traits>\n-        friend basic_istream<_CharT, _Traits>&\n-        operator>>(basic_istream<_CharT, _Traits>& __is,\n-\t\t uniform_real& __u)\n+        friend std::basic_istream<_CharT, _Traits>&\n+        operator>>(std::basic_istream<_CharT, _Traits>& __is,\n+\t\t   uniform_real& __u)\n         { return __is >> __u._M_min >> __u._M_max; }\n \n     protected:\n@@ -1694,8 +1706,8 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n        * an error state.\n        */\n       template<typename _CharT, typename _Traits>\n-        friend basic_ostream<_CharT, _Traits>&\n-        operator<<(basic_ostream<_CharT, _Traits>& __os,\n+        friend std::basic_ostream<_CharT, _Traits>&\n+        operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n \t\t   const exponential_distribution& __x)\n         { return __os << __x.lambda(); }\n \n@@ -1709,8 +1721,8 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n        * @returns The input stream with @p __u extracted or in an error state.\n        */\n       template<typename _CharT, typename _Traits>\n-        friend basic_istream<_CharT, _Traits>&\n-        operator>>(basic_istream<_CharT, _Traits>& __is,\n+        friend std::basic_istream<_CharT, _Traits>&\n+        operator>>(std::basic_istream<_CharT, _Traits>& __is,\n \t\t   exponential_distribution& __u)\n         { return __is >> __u._M_lambda; }\n "}]}