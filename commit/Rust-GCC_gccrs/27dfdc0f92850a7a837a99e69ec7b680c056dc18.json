{"sha": "27dfdc0f92850a7a837a99e69ec7b680c056dc18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdkZmRjMGY5Mjg1MGE3YTgzN2E5OWU2OWVjN2I2ODBjMDU2ZGMxOA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2019-10-10T22:54:33Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2019-10-10T22:54:33Z"}, "message": "Update DFP macros in float.h for C2x and TS 18661-2.\n\nGCC's <float.h> includes various macros for decimal floating-point\ntypes, defined if __STDC_WANT_DEC_FP__, as defined in TS 24732.\n\nTS 18661-2 and C2X make some changes to those macros.  In TS 18661-2,\nthey are to be defined if __STDC_WANT_IEC_60559_DFP_EXT__, and the\n*_SUBNORMAL_MIN macros are renamed to *_TRUE_MIN.  In C2X, the macros\nare to be defined whenever DFP is supported, without needing any\nfeature test macro to be defined.\n\nThis patch updates the header accordingly.  There is no existing\npredefined macro for whether the target supports DFP; rather than\nadding a new macro for that purpose, this patch changes the predefined\nmacros used in <float.h> so that they are only defined when DFP is\nsupported and thus can be used as conditionals; this is the same way\npredefined macros for _FloatN and _FloatNx types work.  Although\nformally TR 24732 and TS 18661-2 say nothing about implementations\nlacking DFP support, it seems appropriate to avoid defining the macros\nin <float.h>, in the absence of DFP support, even if the respective\nfeature test macros are defined.\n\nBootstrapped with no regressions on x86_64-pc-linux-gnu.  Also tested\nthe c2x-float-no-dfp-* tests for aarch64-linux-gnu to make sure they\ndo pass in a no-DFP configuration.\n\ngcc:\n\t* ginclude/float.h [!__DEC32_MANT_DIG__]: Do not define DFP\n\tmacros.\n\t[__STDC_WANT_IEC_60559_DFP_EXT__ || __STDC_VERSION__ > 201710L]:\n\tAlso define DFP macros for these conditions.\n\t[!__STDC_WANT_DEC_FP__] (DEC32_SUBNORMAL_MIN, DEC64_SUBNORMAL_MIN,\n\tDEC128_SUBNORMAL_MIN): Do not define.\n\t[__STDC_WANT_IEC_60559_DFP_EXT__ || __STDC_VERSION__ > 201710L]\n\t(DEC32_TRUE_MIN, DEC64_TRUE_MIN, DEC128_TRUE_MIN): New macros.\n\ngcc/c-family:\n\t* c-cppbuiltin.c (c_cpp_builtins): Do not define macros for DFP\n\ttypes if DFP not supported.\n\ngcc/testsuite:\n\t* gcc.dg/c11-float-dfp-1.c, gcc.dg/c2x-float-no-dfp-1.c,\n\tgcc.dg/c2x-float-no-dfp-2.c, gcc.dg/dfp/c2x-float-dfp-1.c,\n\tgcc.dg/dfp/c2x-float-dfp-2.c, gcc.dg/dfp/c2x-float-dfp-3.c,\n\tgcc.dg/dfp/tr24732-float-dfp-1.c,\n\tgcc.dg/dfp/ts18661-2-float-dfp-1.c: New tests.\n\nFrom-SVN: r276854", "tree": {"sha": "321e69249d0f45d05234f0269d8f8735fea48911", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/321e69249d0f45d05234f0269d8f8735fea48911"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27dfdc0f92850a7a837a99e69ec7b680c056dc18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27dfdc0f92850a7a837a99e69ec7b680c056dc18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27dfdc0f92850a7a837a99e69ec7b680c056dc18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27dfdc0f92850a7a837a99e69ec7b680c056dc18/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8faf3ed95357002fdc53890d80c931784beb74eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8faf3ed95357002fdc53890d80c931784beb74eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8faf3ed95357002fdc53890d80c931784beb74eb"}], "stats": {"total": 528, "additions": 512, "deletions": 16}, "files": [{"sha": "3d9af72764ab30a56c4bf4b7b54566eca41b769f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27dfdc0f92850a7a837a99e69ec7b680c056dc18/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27dfdc0f92850a7a837a99e69ec7b680c056dc18/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=27dfdc0f92850a7a837a99e69ec7b680c056dc18", "patch": "@@ -1,3 +1,14 @@\n+2019-10-10  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* ginclude/float.h [!__DEC32_MANT_DIG__]: Do not define DFP\n+\tmacros.\n+\t[__STDC_WANT_IEC_60559_DFP_EXT__ || __STDC_VERSION__ > 201710L]:\n+\tAlso define DFP macros for these conditions.\n+\t[!__STDC_WANT_DEC_FP__] (DEC32_SUBNORMAL_MIN, DEC64_SUBNORMAL_MIN,\n+\tDEC128_SUBNORMAL_MIN): Do not define.\n+\t[__STDC_WANT_IEC_60559_DFP_EXT__ || __STDC_VERSION__ > 201710L]\n+\t(DEC32_TRUE_MIN, DEC64_TRUE_MIN, DEC128_TRUE_MIN): New macros.\n+\n 2019-10-10  Xiong Hu Luo  <luoxhu@linux.ibm.com>\n \t    Sandra Loosemore  <sandra@codesourcery.com>\n "}, {"sha": "a41e910f1c23b67e1036193a20415029687ccbb6", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27dfdc0f92850a7a837a99e69ec7b680c056dc18/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27dfdc0f92850a7a837a99e69ec7b680c056dc18/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=27dfdc0f92850a7a837a99e69ec7b680c056dc18", "patch": "@@ -1,3 +1,8 @@\n+2019-10-10  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* c-cppbuiltin.c (c_cpp_builtins): Do not define macros for DFP\n+\ttypes if DFP not supported.\n+\n 2019-10-10  Jakub Jelinek  <jakub@redhat.com>\n \n \t* c-common.h (c_omp_check_context_selector,"}, {"sha": "8a66c911aec33d965b70b9cd0f34249587fef270", "filename": "gcc/c-family/c-cppbuiltin.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27dfdc0f92850a7a837a99e69ec7b680c056dc18/gcc%2Fc-family%2Fc-cppbuiltin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27dfdc0f92850a7a837a99e69ec7b680c056dc18/gcc%2Fc-family%2Fc-cppbuiltin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-cppbuiltin.c?ref=27dfdc0f92850a7a837a99e69ec7b680c056dc18", "patch": "@@ -1151,10 +1151,16 @@ c_cpp_builtins (cpp_reader *pfile)\n \t\t\t\t      csuffix, FLOATN_NX_TYPE_NODE (i));\n     }\n \n-  /* For decfloat.h.  */\n-  builtin_define_decimal_float_constants (\"DEC32\", \"DF\", dfloat32_type_node);\n-  builtin_define_decimal_float_constants (\"DEC64\", \"DD\", dfloat64_type_node);\n-  builtin_define_decimal_float_constants (\"DEC128\", \"DL\", dfloat128_type_node);\n+  /* For float.h.  */\n+  if (targetm.decimal_float_supported_p ())\n+    {\n+      builtin_define_decimal_float_constants (\"DEC32\", \"DF\",\n+\t\t\t\t\t      dfloat32_type_node);\n+      builtin_define_decimal_float_constants (\"DEC64\", \"DD\",\n+\t\t\t\t\t      dfloat64_type_node);\n+      builtin_define_decimal_float_constants (\"DEC128\", \"DL\",\n+\t\t\t\t\t      dfloat128_type_node);\n+    }\n \n   /* For fixed-point fibt, ibit, max, min, and epsilon.  */\n   if (targetm.fixed_point_supported_p ())"}, {"sha": "dc91c75603e0471b1f16a49ea1233bc7d937372d", "filename": "gcc/ginclude/float.h", "status": "modified", "additions": 35, "deletions": 12, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27dfdc0f92850a7a837a99e69ec7b680c056dc18/gcc%2Fginclude%2Ffloat.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27dfdc0f92850a7a837a99e69ec7b680c056dc18/gcc%2Fginclude%2Ffloat.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Ffloat.h?ref=27dfdc0f92850a7a837a99e69ec7b680c056dc18", "patch": "@@ -426,9 +426,13 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #endif /* __STDC_WANT_IEC_60559_TYPES_EXT__.  */\n \n-#ifdef __STDC_WANT_DEC_FP__\n-/* Draft Technical Report 24732, extension for decimal floating-point\n-   arithmetic: Characteristic of decimal floating types <float.h>.  */\n+#ifdef __DEC32_MANT_DIG__\n+#if (defined __STDC_WANT_DEC_FP__ \\\n+     || defined __STDC_WANT_IEC_60559_DFP_EXT__ \\\n+     || (defined __STDC_VERSION__ && __STDC_VERSION__ > 201710L))\n+/* C2X; formerly Technical Report 24732, extension for decimal\n+   floating-point arithmetic: Characteristic of decimal floating types\n+   <float.h>, and TS 18661-2.  */\n \n /* Number of base-FLT_RADIX digits in the significand, p.  */\n #undef DEC32_MANT_DIG\n@@ -480,14 +484,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define DEC64_MIN\t__DEC64_MIN__\n #define DEC128_MIN\t__DEC128_MIN__\n \n-/* Minimum subnormal positive floating-point number. */\n-#undef DEC32_SUBNORMAL_MIN\n-#undef DEC64_SUBNORMAL_MIN\n-#undef DEC128_SUBNORMAL_MIN\n-#define DEC32_SUBNORMAL_MIN       __DEC32_SUBNORMAL_MIN__\n-#define DEC64_SUBNORMAL_MIN       __DEC64_SUBNORMAL_MIN__\n-#define DEC128_SUBNORMAL_MIN      __DEC128_SUBNORMAL_MIN__\n-\n /* The floating-point expression evaluation method.\n          -1  indeterminate\n          0  evaluate all operations and constants just to the range and\n@@ -502,6 +498,33 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #undef DEC_EVAL_METHOD\n #define DEC_EVAL_METHOD\t__DEC_EVAL_METHOD__\n \n-#endif /* __STDC_WANT_DEC_FP__ */\n+#endif /* __STDC_WANT_DEC_FP__ || __STDC_WANT_IEC_60559_DFP_EXT__ || C2X.  */\n+\n+#ifdef __STDC_WANT_DEC_FP__\n+\n+/* Minimum subnormal positive floating-point number. */\n+#undef DEC32_SUBNORMAL_MIN\n+#undef DEC64_SUBNORMAL_MIN\n+#undef DEC128_SUBNORMAL_MIN\n+#define DEC32_SUBNORMAL_MIN       __DEC32_SUBNORMAL_MIN__\n+#define DEC64_SUBNORMAL_MIN       __DEC64_SUBNORMAL_MIN__\n+#define DEC128_SUBNORMAL_MIN      __DEC128_SUBNORMAL_MIN__\n+\n+#endif /* __STDC_WANT_DEC_FP__.  */\n+\n+#if (defined __STDC_WANT_IEC_60559_DFP_EXT__ \\\n+     || (defined __STDC_VERSION__ && __STDC_VERSION__ > 201710L))\n+\n+/* Minimum subnormal positive floating-point number. */\n+#undef DEC32_TRUE_MIN\n+#undef DEC64_TRUE_MIN\n+#undef DEC128_TRUE_MIN\n+#define DEC32_TRUE_MIN       __DEC32_SUBNORMAL_MIN__\n+#define DEC64_TRUE_MIN       __DEC64_SUBNORMAL_MIN__\n+#define DEC128_TRUE_MIN      __DEC128_SUBNORMAL_MIN__\n+\n+#endif /* __STDC_WANT_IEC_60559_DFP_EXT__ || C2X.  */\n+\n+#endif /* __DEC32_MANT_DIG__ */\n \n #endif /* _FLOAT_H___ */"}, {"sha": "76e634e176141072c4630bfc02237ee1eb0fe8ac", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27dfdc0f92850a7a837a99e69ec7b680c056dc18/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27dfdc0f92850a7a837a99e69ec7b680c056dc18/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=27dfdc0f92850a7a837a99e69ec7b680c056dc18", "patch": "@@ -1,3 +1,11 @@\n+2019-10-10  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.dg/c11-float-dfp-1.c, gcc.dg/c2x-float-no-dfp-1.c,\n+\tgcc.dg/c2x-float-no-dfp-2.c, gcc.dg/dfp/c2x-float-dfp-1.c,\n+\tgcc.dg/dfp/c2x-float-dfp-2.c, gcc.dg/dfp/c2x-float-dfp-3.c,\n+\tgcc.dg/dfp/tr24732-float-dfp-1.c,\n+\tgcc.dg/dfp/ts18661-2-float-dfp-1.c: New tests.\n+\n 2019-10-10  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR 87488"}, {"sha": "8d86b1bf2383106985baec085e42d85f350dd4ae", "filename": "gcc/testsuite/gcc.dg/c11-float-dfp-1.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27dfdc0f92850a7a837a99e69ec7b680c056dc18/gcc%2Ftestsuite%2Fgcc.dg%2Fc11-float-dfp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27dfdc0f92850a7a837a99e69ec7b680c056dc18/gcc%2Ftestsuite%2Fgcc.dg%2Fc11-float-dfp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc11-float-dfp-1.c?ref=27dfdc0f92850a7a837a99e69ec7b680c056dc18", "patch": "@@ -0,0 +1,5 @@\n+/* Test DFP macros not defined in <float.h> for C11.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=c11\" } */\n+\n+#include \"c2x-float-no-dfp-1.c\""}, {"sha": "73610c8524c24cfb08cbea6a1b900d0946e34dd9", "filename": "gcc/testsuite/gcc.dg/c2x-float-no-dfp-1.c", "status": "added", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27dfdc0f92850a7a837a99e69ec7b680c056dc18/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-float-no-dfp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27dfdc0f92850a7a837a99e69ec7b680c056dc18/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-float-no-dfp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-float-no-dfp-1.c?ref=27dfdc0f92850a7a837a99e69ec7b680c056dc18", "patch": "@@ -0,0 +1,101 @@\n+/* Test DFP macros not defined in <float.h> if no DFP support.  */\n+/* { dg-do compile { target { ! dfp } } } */\n+/* { dg-options \"-std=c2x\" } */\n+\n+#include <float.h>\n+\n+#ifdef DEC32_MANT_DIG\n+# error \"DEC32_MANT_DIG defined\"\n+#endif\n+\n+#ifdef DEC64_MANT_DIG\n+# error \"DEC64_MANT_DIG defined\"\n+#endif\n+\n+#ifdef DEC128_MANT_DIG\n+# error \"DEC128_MANT_DIG defined\"\n+#endif\n+\n+#ifdef DEC32_MIN_EXP\n+# error \"DEC32_MIN_EXP defined\"\n+#endif\n+\n+#ifdef DEC64_MIN_EXP\n+# error \"DEC64_MIN_EXP defined\"\n+#endif\n+\n+#ifdef DEC128_MIN_EXP\n+# error \"DEC128_MIN_EXP defined\"\n+#endif\n+\n+#ifdef DEC32_MAX_EXP\n+# error \"DEC32_MAX_EXP defined\"\n+#endif\n+\n+#ifdef DEC64_MAX_EXP\n+# error \"DEC64_MAX_EXP defined\"\n+#endif\n+\n+#ifdef DEC128_MAX_EXP\n+# error \"DEC128_MAX_EXP defined\"\n+#endif\n+\n+#ifdef DEC32_MAX\n+# error \"DEC32_MAX defined\"\n+#endif\n+\n+#ifdef DEC64_MAX\n+# error \"DEC64_MAX defined\"\n+#endif\n+\n+#ifdef DEC128_MAX\n+# error \"DEC128_MAX defined\"\n+#endif\n+\n+#ifdef DEC32_EPSILON\n+# error \"DEC32_EPSILON defined\"\n+#endif\n+\n+#ifdef DEC64_EPSILON\n+# error \"DEC64_EPSILON defined\"\n+#endif\n+\n+#ifdef DEC128_EPSILON\n+# error \"DEC128_EPSILON defined\"\n+#endif\n+\n+#ifdef DEC32_MIN\n+# error \"DEC32_MIN defined\"\n+#endif\n+\n+#ifdef DEC64_MIN\n+# error \"DEC64_MIN defined\"\n+#endif\n+\n+#ifdef DEC128_MIN\n+# error \"DEC128_MIN defined\"\n+#endif\n+\n+#ifdef DEC32_TRUE_MIN\n+# error \"DEC32_TRUE_MIN defined\"\n+#endif\n+\n+#ifdef DEC64_TRUE_MIN\n+# error \"DEC64_TRUE_MIN defined\"\n+#endif\n+\n+#ifdef DEC128_TRUE_MIN\n+# error \"DEC128_TRUE_MIN defined\"\n+#endif\n+\n+#ifdef DEC32_SUBNORMAL_MIN\n+# error \"DEC32_SUBNORMAL_MIN defined\"\n+#endif\n+\n+#ifdef DEC64_SUBNORMAL_MIN\n+# error \"DEC64_SUBNORMAL_MIN defined\"\n+#endif\n+\n+#ifdef DEC128_SUBNORMAL_MIN\n+# error \"DEC128_SUBNORMAL_MIN defined\"\n+#endif"}, {"sha": "730ce89c4cc7311949fd2fbaa26bed9907ce6232", "filename": "gcc/testsuite/gcc.dg/c2x-float-no-dfp-2.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27dfdc0f92850a7a837a99e69ec7b680c056dc18/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-float-no-dfp-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27dfdc0f92850a7a837a99e69ec7b680c056dc18/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-float-no-dfp-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-float-no-dfp-2.c?ref=27dfdc0f92850a7a837a99e69ec7b680c056dc18", "patch": "@@ -0,0 +1,9 @@\n+/* Test DFP macros not defined in <float.h> if no DFP support.  Test\n+   with feature test macros defined.  */\n+/* { dg-do compile { target { ! dfp } } } */\n+/* { dg-options \"-std=c2x\" } */\n+\n+#define __STDC_WANT_DEC_FP__\n+#define __STDC_WANT_IEC_60559_DFP_EXT__\n+\n+#include \"c2x-float-no-dfp-1.c\""}, {"sha": "ee5e67896179061298201bc9387b1fac0adfca24", "filename": "gcc/testsuite/gcc.dg/dfp/c2x-float-dfp-1.c", "status": "added", "additions": 103, "deletions": 0, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27dfdc0f92850a7a837a99e69ec7b680c056dc18/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fc2x-float-dfp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27dfdc0f92850a7a837a99e69ec7b680c056dc18/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fc2x-float-dfp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fc2x-float-dfp-1.c?ref=27dfdc0f92850a7a837a99e69ec7b680c056dc18", "patch": "@@ -0,0 +1,103 @@\n+/* Test DFP macros defined in <float.h> with DFP support.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=c2x\" } */\n+\n+#include <float.h>\n+\n+#ifndef DEC32_MANT_DIG\n+# error \"DEC32_MANT_DIG not defined\"\n+#endif\n+\n+#ifndef DEC64_MANT_DIG\n+# error \"DEC64_MANT_DIG not defined\"\n+#endif\n+\n+#ifndef DEC128_MANT_DIG\n+# error \"DEC128_MANT_DIG not defined\"\n+#endif\n+\n+#ifndef DEC32_MIN_EXP\n+# error \"DEC32_MIN_EXP not defined\"\n+#endif\n+\n+#ifndef DEC64_MIN_EXP\n+# error \"DEC64_MIN_EXP not defined\"\n+#endif\n+\n+#ifndef DEC128_MIN_EXP\n+# error \"DEC128_MIN_EXP not defined\"\n+#endif\n+\n+#ifndef DEC32_MAX_EXP\n+# error \"DEC32_MAX_EXP not defined\"\n+#endif\n+\n+#ifndef DEC64_MAX_EXP\n+# error \"DEC64_MAX_EXP not defined\"\n+#endif\n+\n+#ifndef DEC128_MAX_EXP\n+# error \"DEC128_MAX_EXP not defined\"\n+#endif\n+\n+#ifndef DEC32_MAX\n+# error \"DEC32_MAX not defined\"\n+#endif\n+\n+#ifndef DEC64_MAX\n+# error \"DEC64_MAX not defined\"\n+#endif\n+\n+#ifndef DEC128_MAX\n+# error \"DEC128_MAX not defined\"\n+#endif\n+\n+#ifndef DEC32_EPSILON\n+# error \"DEC32_EPSILON not defined\"\n+#endif\n+\n+#ifndef DEC64_EPSILON\n+# error \"DEC64_EPSILON not defined\"\n+#endif\n+\n+#ifndef DEC128_EPSILON\n+# error \"DEC128_EPSILON not defined\"\n+#endif\n+\n+#ifndef DEC32_MIN\n+# error \"DEC32_MIN not defined\"\n+#endif\n+\n+#ifndef DEC64_MIN\n+# error \"DEC64_MIN not defined\"\n+#endif\n+\n+#ifndef DEC128_MIN\n+# error \"DEC128_MIN not defined\"\n+#endif\n+\n+#ifndef DEC32_TRUE_MIN\n+# error \"DEC32_TRUE_MIN not defined\"\n+#endif\n+\n+#ifndef DEC64_TRUE_MIN\n+# error \"DEC64_TRUE_MIN not defined\"\n+#endif\n+\n+#ifndef DEC128_TRUE_MIN\n+# error \"DEC128_TRUE_MIN not defined\"\n+#endif\n+\n+/* These macros from TR 24732 should not be defined.  */\n+\n+#ifdef DEC32_SUBNORMAL_MIN\n+# error \"DEC32_SUBNORMAL_MIN defined\"\n+#endif\n+\n+#ifdef DEC64_SUBNORMAL_MIN\n+# error \"DEC64_SUBNORMAL_MIN defined\"\n+#endif\n+\n+#ifdef DEC128_SUBNORMAL_MIN\n+# error \"DEC128_SUBNORMAL_MIN defined\"\n+#endif"}, {"sha": "9ba5690e686ab46833ecb461455170a2ed263a2c", "filename": "gcc/testsuite/gcc.dg/dfp/c2x-float-dfp-2.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27dfdc0f92850a7a837a99e69ec7b680c056dc18/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fc2x-float-dfp-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27dfdc0f92850a7a837a99e69ec7b680c056dc18/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fc2x-float-dfp-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fc2x-float-dfp-2.c?ref=27dfdc0f92850a7a837a99e69ec7b680c056dc18", "patch": "@@ -0,0 +1,8 @@\n+/* Test DFP macros defined in <float.h> with DFP support.  TS 18661-2\n+   feature test macro does not change what is defined.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=c2x\" } */\n+\n+#define __STDC_WANT_IEC_60559_DFP_EXT__\n+\n+#include \"c2x-float-dfp-1.c\""}, {"sha": "00b51a4c3f50d74ea56a9307475ffc72de8088b9", "filename": "gcc/testsuite/gcc.dg/dfp/c2x-float-dfp-3.c", "status": "added", "additions": 103, "deletions": 0, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27dfdc0f92850a7a837a99e69ec7b680c056dc18/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fc2x-float-dfp-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27dfdc0f92850a7a837a99e69ec7b680c056dc18/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fc2x-float-dfp-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fc2x-float-dfp-3.c?ref=27dfdc0f92850a7a837a99e69ec7b680c056dc18", "patch": "@@ -0,0 +1,103 @@\n+/* Test DFP macros defined in <float.h> with DFP support.  TR 24732\n+   feature test macro causes *_SUBNORMAL_MIN macros to be defined.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=c2x\" } */\n+\n+#define __STDC_WANT_DEC_FP__\n+#include <float.h>\n+\n+#ifndef DEC32_MANT_DIG\n+# error \"DEC32_MANT_DIG not defined\"\n+#endif\n+\n+#ifndef DEC64_MANT_DIG\n+# error \"DEC64_MANT_DIG not defined\"\n+#endif\n+\n+#ifndef DEC128_MANT_DIG\n+# error \"DEC128_MANT_DIG not defined\"\n+#endif\n+\n+#ifndef DEC32_MIN_EXP\n+# error \"DEC32_MIN_EXP not defined\"\n+#endif\n+\n+#ifndef DEC64_MIN_EXP\n+# error \"DEC64_MIN_EXP not defined\"\n+#endif\n+\n+#ifndef DEC128_MIN_EXP\n+# error \"DEC128_MIN_EXP not defined\"\n+#endif\n+\n+#ifndef DEC32_MAX_EXP\n+# error \"DEC32_MAX_EXP not defined\"\n+#endif\n+\n+#ifndef DEC64_MAX_EXP\n+# error \"DEC64_MAX_EXP not defined\"\n+#endif\n+\n+#ifndef DEC128_MAX_EXP\n+# error \"DEC128_MAX_EXP not defined\"\n+#endif\n+\n+#ifndef DEC32_MAX\n+# error \"DEC32_MAX not defined\"\n+#endif\n+\n+#ifndef DEC64_MAX\n+# error \"DEC64_MAX not defined\"\n+#endif\n+\n+#ifndef DEC128_MAX\n+# error \"DEC128_MAX not defined\"\n+#endif\n+\n+#ifndef DEC32_EPSILON\n+# error \"DEC32_EPSILON not defined\"\n+#endif\n+\n+#ifndef DEC64_EPSILON\n+# error \"DEC64_EPSILON not defined\"\n+#endif\n+\n+#ifndef DEC128_EPSILON\n+# error \"DEC128_EPSILON not defined\"\n+#endif\n+\n+#ifndef DEC32_MIN\n+# error \"DEC32_MIN not defined\"\n+#endif\n+\n+#ifndef DEC64_MIN\n+# error \"DEC64_MIN not defined\"\n+#endif\n+\n+#ifndef DEC128_MIN\n+# error \"DEC128_MIN not defined\"\n+#endif\n+\n+#ifndef DEC32_TRUE_MIN\n+# error \"DEC32_TRUE_MIN not defined\"\n+#endif\n+\n+#ifndef DEC64_TRUE_MIN\n+# error \"DEC64_TRUE_MIN not defined\"\n+#endif\n+\n+#ifndef DEC128_TRUE_MIN\n+# error \"DEC128_TRUE_MIN not defined\"\n+#endif\n+\n+#ifndef DEC32_SUBNORMAL_MIN\n+# error \"DEC32_SUBNORMAL_MIN not defined\"\n+#endif\n+\n+#ifndef DEC64_SUBNORMAL_MIN\n+# error \"DEC64_SUBNORMAL_MIN not defined\"\n+#endif\n+\n+#ifndef DEC128_SUBNORMAL_MIN\n+# error \"DEC128_SUBNORMAL_MIN not defined\"\n+#endif"}, {"sha": "c196816ac4cff008f3590cba64ce5043173603b7", "filename": "gcc/testsuite/gcc.dg/dfp/tr24732-float-dfp-1.c", "status": "added", "additions": 106, "deletions": 0, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27dfdc0f92850a7a837a99e69ec7b680c056dc18/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Ftr24732-float-dfp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27dfdc0f92850a7a837a99e69ec7b680c056dc18/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Ftr24732-float-dfp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Ftr24732-float-dfp-1.c?ref=27dfdc0f92850a7a837a99e69ec7b680c056dc18", "patch": "@@ -0,0 +1,106 @@\n+/* Test DFP macros defined in <float.h> with DFP support.  TR 24732\n+   feature test macro causes SUBNORMAL_MIN macros to be defined but\n+   not TRUE_MIN ones.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=gnu99\" } */\n+\n+#define __STDC_WANT_DEC_FP__\n+#include <float.h>\n+\n+#ifndef DEC32_MANT_DIG\n+# error \"DEC32_MANT_DIG not defined\"\n+#endif\n+\n+#ifndef DEC64_MANT_DIG\n+# error \"DEC64_MANT_DIG not defined\"\n+#endif\n+\n+#ifndef DEC128_MANT_DIG\n+# error \"DEC128_MANT_DIG not defined\"\n+#endif\n+\n+#ifndef DEC32_MIN_EXP\n+# error \"DEC32_MIN_EXP not defined\"\n+#endif\n+\n+#ifndef DEC64_MIN_EXP\n+# error \"DEC64_MIN_EXP not defined\"\n+#endif\n+\n+#ifndef DEC128_MIN_EXP\n+# error \"DEC128_MIN_EXP not defined\"\n+#endif\n+\n+#ifndef DEC32_MAX_EXP\n+# error \"DEC32_MAX_EXP not defined\"\n+#endif\n+\n+#ifndef DEC64_MAX_EXP\n+# error \"DEC64_MAX_EXP not defined\"\n+#endif\n+\n+#ifndef DEC128_MAX_EXP\n+# error \"DEC128_MAX_EXP not defined\"\n+#endif\n+\n+#ifndef DEC32_MAX\n+# error \"DEC32_MAX not defined\"\n+#endif\n+\n+#ifndef DEC64_MAX\n+# error \"DEC64_MAX not defined\"\n+#endif\n+\n+#ifndef DEC128_MAX\n+# error \"DEC128_MAX not defined\"\n+#endif\n+\n+#ifndef DEC32_EPSILON\n+# error \"DEC32_EPSILON not defined\"\n+#endif\n+\n+#ifndef DEC64_EPSILON\n+# error \"DEC64_EPSILON not defined\"\n+#endif\n+\n+#ifndef DEC128_EPSILON\n+# error \"DEC128_EPSILON not defined\"\n+#endif\n+\n+#ifndef DEC32_MIN\n+# error \"DEC32_MIN not defined\"\n+#endif\n+\n+#ifndef DEC64_MIN\n+# error \"DEC64_MIN not defined\"\n+#endif\n+\n+#ifndef DEC128_MIN\n+# error \"DEC128_MIN not defined\"\n+#endif\n+\n+#ifndef DEC32_SUBNORMAL_MIN\n+# error \"DEC32_SUBNORMAL_MIN not defined\"\n+#endif\n+\n+#ifndef DEC64_SUBNORMAL_MIN\n+# error \"DEC64_SUBNORMAL_MIN not defined\"\n+#endif\n+\n+#ifndef DEC128_SUBNORMAL_MIN\n+# error \"DEC128_SUBNORMAL_MIN not defined\"\n+#endif\n+\n+/* These macros from C2X should not be defined.  */\n+\n+#ifdef DEC32_TRUE_MIN\n+# error \"DEC32_TRUE_MIN defined\"\n+#endif\n+\n+#ifdef DEC64_TRUE_MIN\n+# error \"DEC64_TRUE_MIN defined\"\n+#endif\n+\n+#ifdef DEC128_TRUE_MIN\n+# error \"DEC128_TRUE_MIN defined\"\n+#endif"}, {"sha": "f0a08246688a27cd16e9dac5517097790a9abfb3", "filename": "gcc/testsuite/gcc.dg/dfp/ts18661-2-float-dfp-1.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27dfdc0f92850a7a837a99e69ec7b680c056dc18/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fts18661-2-float-dfp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27dfdc0f92850a7a837a99e69ec7b680c056dc18/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fts18661-2-float-dfp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fts18661-2-float-dfp-1.c?ref=27dfdc0f92850a7a837a99e69ec7b680c056dc18", "patch": "@@ -0,0 +1,8 @@\n+/* Test DFP macros defined in <float.h> with DFP support.  TS 18661-2\n+   feature test macro causes same macros to be defined as for C2X.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=gnu99\" } */\n+\n+#define __STDC_WANT_IEC_60559_DFP_EXT__\n+\n+#include \"c2x-float-dfp-1.c\""}]}