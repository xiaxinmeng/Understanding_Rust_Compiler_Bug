{"sha": "f3981e7ecd207d68bdb246587c7ca1c71a083e85", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjM5ODFlN2VjZDIwN2Q2OGJkYjI0NjU4N2M3Y2ExYzcxYTA4M2U4NQ==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.vnet.ibm.com", "date": "2017-01-18T15:03:18Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2017-01-18T15:03:18Z"}, "message": "S/390: Downcase first letter of error messages.\n\ngcc/testsuite/ChangeLog:\n\n2017-01-18  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n\n\t* gcc.target/s390/htm-builtins-compile-2.c (must_not_compile1):\n\t(must_not_compile2): Downcase first letter of error messages.\n\t* gcc.target/s390/target-attribute/tattr-13.c (b): Likewise.\n\t* gcc.target/s390/vector/vec-abi-vararg-2.c: Likewise.\n\ngcc/ChangeLog:\n\n2017-01-18  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n\n\t* config/s390/s390-c.c (s390_expand_overloaded_builtin): Downcase\n\tfirst letter of error messages.\n\t(s390_resolve_overloaded_builtin): Likewise.\n\t* config/s390/s390.c (s390_expand_builtin): Likewise.\n\t(s390_invalid_arg_for_unprototyped_fn): Likewise.\n\t(s390_valid_target_attribute_inner_p): Likewise.\n\t* config/s390/s390.md (\"tabort\"): Likewise.\n\nFrom-SVN: r244577", "tree": {"sha": "6a666ec851242e67b938521601d4ba991de00155", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a666ec851242e67b938521601d4ba991de00155"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3981e7ecd207d68bdb246587c7ca1c71a083e85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3981e7ecd207d68bdb246587c7ca1c71a083e85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3981e7ecd207d68bdb246587c7ca1c71a083e85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3981e7ecd207d68bdb246587c7ca1c71a083e85/comments", "author": null, "committer": null, "parents": [{"sha": "96176bb3f185bdb1251f1b427c2a50b0088ac80f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96176bb3f185bdb1251f1b427c2a50b0088ac80f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96176bb3f185bdb1251f1b427c2a50b0088ac80f"}], "stats": {"total": 51, "additions": 35, "deletions": 16}, "files": [{"sha": "43ab6209971992a418fffc9d9864ff89904123da", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3981e7ecd207d68bdb246587c7ca1c71a083e85/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3981e7ecd207d68bdb246587c7ca1c71a083e85/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f3981e7ecd207d68bdb246587c7ca1c71a083e85", "patch": "@@ -1,3 +1,13 @@\n+2017-01-18  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n+\n+\t* config/s390/s390-c.c (s390_expand_overloaded_builtin): Downcase\n+\tfirst letter of error messages.\n+\t(s390_resolve_overloaded_builtin): Likewise.\n+\t* config/s390/s390.c (s390_expand_builtin): Likewise.\n+\t(s390_invalid_arg_for_unprototyped_fn): Likewise.\n+\t(s390_valid_target_attribute_inner_p): Likewise.\n+\t* config/s390/s390.md (\"tabort\"): Likewise.\n+\n 2017-01-18  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.target/s390/target-attribute/tattr-2.c: Add -fno-ipa-icf"}, {"sha": "bf842696136819f0b7aa442cb0ab6b9034dbd814", "filename": "gcc/config/s390/s390-c.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3981e7ecd207d68bdb246587c7ca1c71a083e85/gcc%2Fconfig%2Fs390%2Fs390-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3981e7ecd207d68bdb246587c7ca1c71a083e85/gcc%2Fconfig%2Fs390%2Fs390-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390-c.c?ref=f3981e7ecd207d68bdb246587c7ca1c71a083e85", "patch": "@@ -466,7 +466,7 @@ s390_expand_overloaded_builtin (location_t loc,\n     case S390_OVERLOADED_BUILTIN_s390_vec_step:\n       if (TREE_CODE (TREE_TYPE ((*arglist)[0])) != VECTOR_TYPE)\n \t{\n-\t  error_at (loc, \"Builtin vec_step can only be used on vector types.\");\n+\t  error_at (loc, \"builtin vec_step can only be used on vector types.\");\n \t  return error_mark_node;\n \t}\n       return build_int_cst (NULL_TREE,\n@@ -856,7 +856,7 @@ s390_resolve_overloaded_builtin (location_t loc,\n       if (bflags_for_builtin(ob_fcode) & B_INT)\n \t{\n \t  error_at (loc,\n-\t\t    \"Builtin %qF is for GCC internal use only.\",\n+\t\t    \"builtin %qF is for GCC internal use only.\",\n \t\t    ob_fndecl);\n \t  return error_mark_node;\n \t}\n@@ -873,7 +873,7 @@ s390_resolve_overloaded_builtin (location_t loc,\n   if (ob_args_num != in_args_num)\n     {\n       error_at (loc,\n-\t\t\"Mismatch in number of arguments for builtin %qF. \"\n+\t\t\"mismatch in number of arguments for builtin %qF. \"\n \t\t\"Expected: %d got %d\", ob_fndecl,\n \t\tob_args_num, in_args_num);\n       return error_mark_node;"}, {"sha": "fe65846a4f2e9949ca9c654333450b315274387c", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3981e7ecd207d68bdb246587c7ca1c71a083e85/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3981e7ecd207d68bdb246587c7ca1c71a083e85/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=f3981e7ecd207d68bdb246587c7ca1c71a083e85", "patch": "@@ -820,13 +820,13 @@ s390_expand_builtin (tree exp, rtx target, rtx subtarget ATTRIBUTE_UNUSED,\n       bflags = bflags_for_builtin (fcode);\n       if ((bflags & B_HTM) && !TARGET_HTM)\n \t{\n-\t  error (\"Builtin %qF is not supported without -mhtm \"\n+\t  error (\"builtin %qF is not supported without -mhtm \"\n \t\t \"(default with -march=zEC12 and higher).\", fndecl);\n \t  return const0_rtx;\n \t}\n       if ((bflags & B_VX) && !TARGET_VX)\n \t{\n-\t  error (\"Builtin %qF is not supported without -mvx \"\n+\t  error (\"builtin %qF is not supported without -mvx \"\n \t\t \"(default with -march=z13 and higher).\", fndecl);\n \t  return const0_rtx;\n \t}\n@@ -846,7 +846,7 @@ s390_expand_builtin (tree exp, rtx target, rtx subtarget ATTRIBUTE_UNUSED,\n     }\n   else if (fcode < S390_OVERLOADED_BUILTIN_VAR_OFFSET)\n     {\n-      error (\"Unresolved overloaded builtin\");\n+      error (\"unresolved overloaded builtin\");\n       return const0_rtx;\n     }\n   else\n@@ -981,7 +981,7 @@ s390_expand_builtin (tree exp, rtx target, rtx subtarget ATTRIBUTE_UNUSED,\n \n       if (!insn_op->predicate (op[arity], insn_op->mode))\n \t{\n-\t  error (\"Invalid argument %d for builtin %qF\", arity + 1, fndecl);\n+\t  error (\"invalid argument %d for builtin %qF\", arity + 1, fndecl);\n \t  return const0_rtx;\n \t}\n       arity++;\n@@ -11558,7 +11558,7 @@ s390_invalid_arg_for_unprototyped_fn (const_tree typelist, const_tree funcdecl,\n \t   && (funcdecl == NULL_TREE\n \t       || (TREE_CODE (funcdecl) == FUNCTION_DECL\n \t\t   && DECL_BUILT_IN_CLASS (funcdecl) != BUILT_IN_MD)))\n-\t  ? N_(\"Vector argument passed to unprototyped function\")\n+\t  ? N_(\"vector argument passed to unprototyped function\")\n \t  : NULL);\n }\n \n@@ -14938,7 +14938,7 @@ s390_valid_target_attribute_inner_p (tree args,\n       else if (attrs[i].only_as_pragma && !force_pragma)\n \t{\n \t  /* Value is not allowed for the target attribute.  */\n-\t  error (\"Value %qs is not supported by attribute %<target%>\",\n+\t  error (\"value %qs is not supported by attribute %<target%>\",\n \t\t attrs[i].string);\n \t  return false;\n \t}"}, {"sha": "ee7ca7398d47448ef34148e47c22f9cf980aa46f", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3981e7ecd207d68bdb246587c7ca1c71a083e85/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3981e7ecd207d68bdb246587c7ca1c71a083e85/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=f3981e7ecd207d68bdb246587c7ca1c71a083e85", "patch": "@@ -11006,7 +11006,7 @@\n   if (CONST_INT_P (operands[0])\n       && INTVAL (operands[0]) >= 0 && INTVAL (operands[0]) <= 255)\n     {\n-      error (\"Invalid transaction abort code: \" HOST_WIDE_INT_PRINT_DEC\n+      error (\"invalid transaction abort code: \" HOST_WIDE_INT_PRINT_DEC\n \t     \".  Values in range 0 through 255 are reserved.\",\n \t     INTVAL (operands[0]));\n       FAIL;"}, {"sha": "6cde48793876e2fca96eff36df181aee79d51a08", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3981e7ecd207d68bdb246587c7ca1c71a083e85/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3981e7ecd207d68bdb246587c7ca1c71a083e85/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f3981e7ecd207d68bdb246587c7ca1c71a083e85", "patch": "@@ -1,3 +1,10 @@\n+2017-01-18  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n+\n+\t* gcc.target/s390/htm-builtins-compile-2.c (must_not_compile1):\n+\t(must_not_compile2): Downcase first letter of error messages.\n+\t* gcc.target/s390/target-attribute/tattr-13.c (b): Likewise.\n+\t* gcc.target/s390/vector/vec-abi-vararg-2.c: Likewise.\n+\n 2017-01-18  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/79091"}, {"sha": "53c8f5b28709fe115b128d29af7e9054c6f5a24d", "filename": "gcc/testsuite/gcc.target/s390/htm-builtins-compile-2.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3981e7ecd207d68bdb246587c7ca1c71a083e85/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fhtm-builtins-compile-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3981e7ecd207d68bdb246587c7ca1c71a083e85/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fhtm-builtins-compile-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fhtm-builtins-compile-2.c?ref=f3981e7ecd207d68bdb246587c7ca1c71a083e85", "patch": "@@ -1,12 +1,14 @@\n /* { dg-do compile } */\n /* { dg-options \"-O3 -march=zEC12 -mzarch\" } */\n \n-void must_not_compile1 (void)\n+void\n+must_not_compile1 (void)\n {\n-  __builtin_tabort (0); /* { dg-error \"Invalid transaction abort code:\" } */\n+  __builtin_tabort (0); /* { dg-error \"invalid transaction abort code:\" } */\n }\n \n-void must_not_compile2 (void)\n+void\n+must_not_compile2 (void)\n {\n-  __builtin_tabort (255); /* { dg-error \"Invalid transaction abort code:\" } */\n+  __builtin_tabort (255); /* { dg-error \"invalid transaction abort code:\" } */\n }"}, {"sha": "5bec108b82bf5146f72c9141cf92c53e7425ae13", "filename": "gcc/testsuite/gcc.target/s390/target-attribute/tattr-13.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3981e7ecd207d68bdb246587c7ca1c71a083e85/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Ftarget-attribute%2Ftattr-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3981e7ecd207d68bdb246587c7ca1c71a083e85/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Ftarget-attribute%2Ftattr-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Ftarget-attribute%2Ftattr-13.c?ref=f3981e7ecd207d68bdb246587c7ca1c71a083e85", "patch": "@@ -14,5 +14,5 @@ void a(void)\n __attribute__ ((target(\"zvector\",\"arch=z13\")))\n void\n b(void)\n-{ /* { dg-error \"Value .zvector. is not supported by attribute .target.\" } */\n+{ /* { dg-error \"value .zvector. is not supported by attribute .target.\" } */\n }"}, {"sha": "7dd81ef6a15a7647609036b790aba536e72c2d0a", "filename": "gcc/testsuite/gcc.target/s390/vector/vec-abi-vararg-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3981e7ecd207d68bdb246587c7ca1c71a083e85/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvec-abi-vararg-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3981e7ecd207d68bdb246587c7ca1c71a083e85/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvec-abi-vararg-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvec-abi-vararg-2.c?ref=f3981e7ecd207d68bdb246587c7ca1c71a083e85", "patch": "@@ -15,4 +15,4 @@ v2di bar3 (v2di a) { return foo1 (1, a); }\n v2di bar4 (v2di a) { return foo3 (1, a); }\n \n int bar5 (int a)  { return foo4 (1, a); }\n-int bar6 (v2di a) { return foo4 (1, a); } /* { dg-error \"Vector argument passed to unprototyped function\" } */\n+int bar6 (v2di a) { return foo4 (1, a); } /* { dg-error \"vector argument passed to unprototyped function\" } */"}]}