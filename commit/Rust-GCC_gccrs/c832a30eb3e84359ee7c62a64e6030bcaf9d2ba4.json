{"sha": "c832a30eb3e84359ee7c62a64e6030bcaf9d2ba4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzgzMmEzMGViM2U4NDM1OWVlN2M2MmE2NGU2MDMwYmNhZjlkMmJhNA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-14T18:45:50Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-14T18:45:50Z"}, "message": "(yylex): Warn about integers so large that they are unsigned.\n\nFrom-SVN: r2120", "tree": {"sha": "f53fc945e8625f92eed9df99e5d2c3778267664d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f53fc945e8625f92eed9df99e5d2c3778267664d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c832a30eb3e84359ee7c62a64e6030bcaf9d2ba4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c832a30eb3e84359ee7c62a64e6030bcaf9d2ba4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c832a30eb3e84359ee7c62a64e6030bcaf9d2ba4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c832a30eb3e84359ee7c62a64e6030bcaf9d2ba4/comments", "author": null, "committer": null, "parents": [{"sha": "57caa638af543fe30bd9456b448b8a03b6b4b970", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57caa638af543fe30bd9456b448b8a03b6b4b970", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57caa638af543fe30bd9456b448b8a03b6b4b970"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "054615015e70a52fd8e49c473124e1de6391b4ba", "filename": "gcc/c-lex.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c832a30eb3e84359ee7c62a64e6030bcaf9d2ba4/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c832a30eb3e84359ee7c62a64e6030bcaf9d2ba4/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=c832a30eb3e84359ee7c62a64e6030bcaf9d2ba4", "patch": "@@ -1585,6 +1585,9 @@ yylex ()\n \t\t&& !warn)\n \t      pedwarn (\"integer constant out of range\");\n \n+\t    if (base == 10 && ! spec_unsigned && TREE_UNSIGNED (type))\n+\t      warning (\"integer constant is so large that it is unsigned\");\n+\n \t    if (flag_traditional && !int_fits_type_p (yylval.ttype, type))\n \t      /* The traditional constant 0x80000000 is signed\n \t\t but doesn't fit in the range of int."}]}