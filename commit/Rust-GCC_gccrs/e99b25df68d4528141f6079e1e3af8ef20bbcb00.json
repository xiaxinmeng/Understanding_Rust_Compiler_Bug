{"sha": "e99b25df68d4528141f6079e1e3af8ef20bbcb00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTk5YjI1ZGY2OGQ0NTI4MTQxZjYwNzllMWUzYWY4ZWYyMGJiY2IwMA==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.ibm.com", "date": "2021-03-08T11:49:22Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@linux.ibm.com", "date": "2021-03-08T11:49:36Z"}, "message": "IBM Z: Fix vcond-shift.c testcase.\n\nDue to a common code change the comparison in the testcase is emitted\nvia vec_cmp instead of vcond.  The testcase checks for an optimization\ncurrently only available via vcond.\n\nFixed by implementing the same optimization also in\ns390_expand_vec_compare.\n\ngcc/ChangeLog:\n\n\t* config/s390/s390.c (s390_expand_vec_compare): Implement <0\n\tcomparison with arithmetic right shift.\n\t(s390_expand_vcond): No need for a force_reg anymore.\n\ts390_vec_compare will do it.\n\t* config/s390/vector.md (\"vec_cmp<mode><tointvec>\"): Accept also\n\timmediate operands.", "tree": {"sha": "87695d5df61ee32b16c4c06d151d00a88c12b9e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87695d5df61ee32b16c4c06d151d00a88c12b9e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e99b25df68d4528141f6079e1e3af8ef20bbcb00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e99b25df68d4528141f6079e1e3af8ef20bbcb00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e99b25df68d4528141f6079e1e3af8ef20bbcb00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e99b25df68d4528141f6079e1e3af8ef20bbcb00/comments", "author": {"login": "Andreas-Krebbel", "id": 38103320, "node_id": "MDQ6VXNlcjM4MTAzMzIw", "avatar_url": "https://avatars.githubusercontent.com/u/38103320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andreas-Krebbel", "html_url": "https://github.com/Andreas-Krebbel", "followers_url": "https://api.github.com/users/Andreas-Krebbel/followers", "following_url": "https://api.github.com/users/Andreas-Krebbel/following{/other_user}", "gists_url": "https://api.github.com/users/Andreas-Krebbel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andreas-Krebbel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andreas-Krebbel/subscriptions", "organizations_url": "https://api.github.com/users/Andreas-Krebbel/orgs", "repos_url": "https://api.github.com/users/Andreas-Krebbel/repos", "events_url": "https://api.github.com/users/Andreas-Krebbel/events{/privacy}", "received_events_url": "https://api.github.com/users/Andreas-Krebbel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Andreas-Krebbel", "id": 38103320, "node_id": "MDQ6VXNlcjM4MTAzMzIw", "avatar_url": "https://avatars.githubusercontent.com/u/38103320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andreas-Krebbel", "html_url": "https://github.com/Andreas-Krebbel", "followers_url": "https://api.github.com/users/Andreas-Krebbel/followers", "following_url": "https://api.github.com/users/Andreas-Krebbel/following{/other_user}", "gists_url": "https://api.github.com/users/Andreas-Krebbel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andreas-Krebbel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andreas-Krebbel/subscriptions", "organizations_url": "https://api.github.com/users/Andreas-Krebbel/orgs", "repos_url": "https://api.github.com/users/Andreas-Krebbel/repos", "events_url": "https://api.github.com/users/Andreas-Krebbel/events{/privacy}", "received_events_url": "https://api.github.com/users/Andreas-Krebbel/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b48d76c4e6bd3b88f23979ede4ff12f875e0ad60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b48d76c4e6bd3b88f23979ede4ff12f875e0ad60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b48d76c4e6bd3b88f23979ede4ff12f875e0ad60"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "c9aea21fe409114a7c506460080aad0117fd3c07", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e99b25df68d4528141f6079e1e3af8ef20bbcb00/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e99b25df68d4528141f6079e1e3af8ef20bbcb00/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=e99b25df68d4528141f6079e1e3af8ef20bbcb00", "patch": "@@ -6569,6 +6569,7 @@ s390_expand_vec_compare (rtx target, enum rtx_code cond,\n \n   if (GET_MODE_CLASS (GET_MODE (cmp_op1)) == MODE_VECTOR_FLOAT)\n     {\n+      cmp_op2 = force_reg (GET_MODE (cmp_op1), cmp_op2);\n       switch (cond)\n \t{\n \t  /* NE a != b -> !(a == b) */\n@@ -6607,6 +6608,19 @@ s390_expand_vec_compare (rtx target, enum rtx_code cond,\n     }\n   else\n     {\n+      /* Turn x < 0 into x >> (bits per element - 1)  */\n+      if (cond == LT && cmp_op2 == CONST0_RTX (mode))\n+\t{\n+\t  int shift = GET_MODE_BITSIZE (GET_MODE_INNER (mode)) - 1;\n+\t  rtx res = expand_simple_binop (mode, ASHIFTRT, cmp_op1,\n+\t\t\t\t\t GEN_INT (shift), target,\n+\t\t\t\t\t 0, OPTAB_DIRECT);\n+\t  if (res != target)\n+\t    emit_move_insn (target, res);\n+\t  return;\n+\t}\n+      cmp_op2 = force_reg (GET_MODE (cmp_op1), cmp_op2);\n+\n       switch (cond)\n \t{\n \t  /* NE: a != b -> !(a == b) */\n@@ -6824,11 +6838,7 @@ s390_expand_vcond (rtx target, rtx then, rtx els,\n   if (!REG_P (cmp_op1))\n     cmp_op1 = force_reg (GET_MODE (cmp_op1), cmp_op1);\n \n-  if (!REG_P (cmp_op2))\n-    cmp_op2 = force_reg (GET_MODE (cmp_op2), cmp_op2);\n-\n-  s390_expand_vec_compare (result_target, cond,\n-\t\t\t   cmp_op1, cmp_op2);\n+  s390_expand_vec_compare (result_target, cond, cmp_op1, cmp_op2);\n \n   /* If the results are supposed to be either -1 or 0 we are done\n      since this is what our compare instructions generate anyway.  */"}, {"sha": "c80d582a300db0fb4575238c19907890f9233292", "filename": "gcc/config/s390/vector.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e99b25df68d4528141f6079e1e3af8ef20bbcb00/gcc%2Fconfig%2Fs390%2Fvector.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e99b25df68d4528141f6079e1e3af8ef20bbcb00/gcc%2Fconfig%2Fs390%2Fvector.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fvector.md?ref=e99b25df68d4528141f6079e1e3af8ef20bbcb00", "patch": "@@ -1589,7 +1589,7 @@\n   [(set (match_operand:<TOINTVEC>  0 \"register_operand\" \"\")\n \t(match_operator:<TOINTVEC> 1 \"vcond_comparison_operator\"\n \t  [(match_operand:V_HW     2 \"register_operand\" \"\")\n-\t   (match_operand:V_HW     3 \"register_operand\" \"\")]))]\n+\t   (match_operand:V_HW     3 \"nonmemory_operand\" \"\")]))]\n   \"TARGET_VX\"\n {\n   s390_expand_vec_compare (operands[0], GET_CODE(operands[1]), operands[2], operands[3]);"}]}