{"sha": "43c6e0cb2115c752aaa0d7dbc9f04587cb43f350", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNjNmUwY2IyMTE1Yzc1MmFhYTBkN2RiYzlmMDQ1ODdjYjQzZjM1MA==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2008-04-08T06:44:39Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-04-08T06:44:39Z"}, "message": "g-expect-vms.adb, [...]: Fix incorrect casing of ASCII.NUL throughout.\n\n2008-04-08  Thomas Quinot  <quinot@adacore.com>\n\n\t* g-expect-vms.adb, a-textio.adb, a-witeio.adb, exp_dbug.adb,\n\tg-expect.adb, g-locfil.adb, gnatchop.adb, gnatdll.adb, gnatlbr.adb,\n\tgnatmem.adb, g-regist.adb, i-vxwork.ads, mlib-utl.adb, i-vxwork-x86.ads,\n\ta-ztexio.adb, g-enblsp-vms-alpha.adb, g-enblsp-vms-ia64.adb,\n\ts-os_lib.adb, s-regpat.adb, s-regpat.ads: Fix incorrect casing of\n\tASCII.NUL throughout.\n\nFrom-SVN: r134008", "tree": {"sha": "1cd07ea7df0ca9424be5c1aeeb3c449637cf1100", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1cd07ea7df0ca9424be5c1aeeb3c449637cf1100"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/comments", "author": null, "committer": null, "parents": [{"sha": "9df6385a0c162f4acf1b932944d7f5cb86a8b209", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9df6385a0c162f4acf1b932944d7f5cb86a8b209", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9df6385a0c162f4acf1b932944d7f5cb86a8b209"}], "stats": {"total": 146, "additions": 73, "deletions": 73}, "files": [{"sha": "9247ba7f7aa22aaf2b4cb31e3c9de81b13d4cd50", "filename": "gcc/ada/a-textio.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fa-textio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fa-textio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-textio.adb?ref=43c6e0cb2115c752aaa0d7dbc9f04587cb43f350", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -858,8 +858,8 @@ package body Ada.Text_IO is\n       Result := WC_In (C, File.WC_Method);\n \n       if Wide_Character'Pos (Result) > 16#FF# then\n-         raise Constraint_Error\n-           with \"invalid wide character in Text_'I'O input\";\n+         raise Constraint_Error with\n+           \"invalid wide character in Text_'I'O input\";\n       else\n          return Character'Val (Wide_Character'Pos (Result));\n       end if;\n@@ -901,8 +901,8 @@ package body Ada.Text_IO is\n       Result := WC_In (C, File.WC_Method);\n \n       if Wide_Character'Pos (Result) > 16#FF# then\n-         raise Constraint_Error\n-           with \"invalid wide character in Text_'I'O input\";\n+         raise Constraint_Error with\n+           \"invalid wide character in Text_'I'O input\";\n       else\n          return Character'Val (Wide_Character'Pos (Result));\n       end if;\n@@ -2212,9 +2212,9 @@ package body Ada.Text_IO is\n    --  null character in the runtime, here the null characters are added just\n    --  to have a correct filename length.\n \n-   Err_Name : aliased String := \"*stderr\" & ASCII.Nul;\n-   In_Name  : aliased String := \"*stdin\" & ASCII.Nul;\n-   Out_Name : aliased String := \"*stdout\" & ASCII.Nul;\n+   Err_Name : aliased String := \"*stderr\" & ASCII.NUL;\n+   In_Name  : aliased String := \"*stdin\" & ASCII.NUL;\n+   Out_Name : aliased String := \"*stdout\" & ASCII.NUL;\n \n begin\n    -------------------------------"}, {"sha": "25d265c218ea16e95e8c7f3fed3f18b12f3bb699", "filename": "gcc/ada/a-witeio.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fa-witeio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fa-witeio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-witeio.adb?ref=43c6e0cb2115c752aaa0d7dbc9f04587cb43f350", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1848,9 +1848,9 @@ package body Ada.Wide_Text_IO is\n    --  a null character in the runtime, here the null characters are added\n    --  just to have a correct filename length.\n \n-   Err_Name : aliased String := \"*stderr\" & ASCII.Nul;\n-   In_Name  : aliased String := \"*stdin\" & ASCII.Nul;\n-   Out_Name : aliased String := \"*stdout\" & ASCII.Nul;\n+   Err_Name : aliased String := \"*stderr\" & ASCII.NUL;\n+   In_Name  : aliased String := \"*stdin\" & ASCII.NUL;\n+   Out_Name : aliased String := \"*stdout\" & ASCII.NUL;\n \n begin\n    -------------------------------"}, {"sha": "a85cdb30998dd129e2dad0f3c272a8bdc0518833", "filename": "gcc/ada/a-ztexio.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fa-ztexio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fa-ztexio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztexio.adb?ref=43c6e0cb2115c752aaa0d7dbc9f04587cb43f350", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1848,9 +1848,9 @@ package body Ada.Wide_Wide_Text_IO is\n    --  a null character in the runtime, here the null characters are added\n    --  just to have a correct filename length.\n \n-   Err_Name : aliased String := \"*stderr\" & ASCII.Nul;\n-   In_Name  : aliased String := \"*stdin\" & ASCII.Nul;\n-   Out_Name : aliased String := \"*stdout\" & ASCII.Nul;\n+   Err_Name : aliased String := \"*stderr\" & ASCII.NUL;\n+   In_Name  : aliased String := \"*stdin\" & ASCII.NUL;\n+   Out_Name : aliased String := \"*stdout\" & ASCII.NUL;\n \n begin\n    -------------------------------"}, {"sha": "0a48868b3e0a1c9ad06ad4707a5e7b4c12a4901e", "filename": "gcc/ada/exp_dbug.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fexp_dbug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fexp_dbug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.adb?ref=43c6e0cb2115c752aaa0d7dbc9f04587cb43f350", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -535,7 +535,7 @@ package body Exp_Dbug is\n       --  For all these cases, just return the name unchanged\n \n       then\n-         Name_Buffer (Name_Len + 1) := ASCII.Nul;\n+         Name_Buffer (Name_Len + 1) := ASCII.NUL;\n          return;\n       end if;\n \n@@ -751,7 +751,7 @@ package body Exp_Dbug is\n          Get_Qualified_Name_And_Append (E);\n       end if;\n \n-      Name_Buffer (Name_Len + 1) := ASCII.Nul;\n+      Name_Buffer (Name_Len + 1) := ASCII.NUL;\n    end Get_External_Name;\n \n    -----------------------------------\n@@ -784,7 +784,7 @@ package body Exp_Dbug is\n       if Has_Suffix then\n          Add_Str_To_Name_Buffer (\"___\");\n          Add_Str_To_Name_Buffer (Suffix);\n-         Name_Buffer (Name_Len + 1) := ASCII.Nul;\n+         Name_Buffer (Name_Len + 1) := ASCII.NUL;\n       end if;\n    end Get_External_Name_With_Suffix;\n "}, {"sha": "4b703263f591fe79bfc574910299a9a19fe0dfec", "filename": "gcc/ada/g-enblsp-vms-alpha.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fg-enblsp-vms-alpha.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fg-enblsp-vms-alpha.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-enblsp-vms-alpha.adb?ref=43c6e0cb2115c752aaa0d7dbc9f04587cb43f350", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                       Copyright (C) 2005, AdaCore                        --\n+--                    Copyright (C) 2005-2008, AdaCore                      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -91,13 +91,13 @@ begin\n \n       Arg   := new String (1 .. Command_With_Path'Length + 1);\n       Arg (1 .. Command_With_Path'Length) := Command_With_Path.all;\n-      Arg (Arg'Last)        := ASCII.Nul;\n+      Arg (Arg'Last)        := ASCII.NUL;\n       Arg_List (1)          := Arg.all'Address;\n \n       for J in Args'Range loop\n          Arg                     := new String (1 .. Args (J)'Length + 1);\n          Arg (1 .. Args (J)'Length)  := Args (J).all;\n-         Arg (Arg'Last)              := ASCII.Nul;\n+         Arg (Arg'Last)              := ASCII.NUL;\n          Arg_List (J + 2 - Args'First) := Arg.all'Address;\n       end loop;\n "}, {"sha": "b7a9d3400729915ac2d16c7b560d4a06c5aaf565", "filename": "gcc/ada/g-enblsp-vms-ia64.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fg-enblsp-vms-ia64.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fg-enblsp-vms-ia64.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-enblsp-vms-ia64.adb?ref=43c6e0cb2115c752aaa0d7dbc9f04587cb43f350", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                       Copyright (C) 2005, AdaCore                        --\n+--                    Copyright (C) 2005-2008, AdaCore                      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -89,13 +89,13 @@ begin\n \n       Arg   := new String (1 .. Command_With_Path'Length + 1);\n       Arg (1 .. Command_With_Path'Length) := Command_With_Path.all;\n-      Arg (Arg'Last)        := ASCII.Nul;\n+      Arg (Arg'Last)        := ASCII.NUL;\n       Arg_List (1)          := Arg.all'Address;\n \n       for J in Args'Range loop\n          Arg                     := new String (1 .. Args (J)'Length + 1);\n          Arg (1 .. Args (J)'Length)  := Args (J).all;\n-         Arg (Arg'Last)              := ASCII.Nul;\n+         Arg (Arg'Last)              := ASCII.NUL;\n          Arg_List (J + 2 - Args'First) := Arg.all'Address;\n       end loop;\n "}, {"sha": "bc74a5d261e656f7eb5d300c1cef18c4d88e992b", "filename": "gcc/ada/g-expect-vms.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fg-expect-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fg-expect-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-expect-vms.adb?ref=43c6e0cb2115c752aaa0d7dbc9f04587cb43f350", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2002-2007, AdaCore                     --\n+--                     Copyright (C) 2002-2008, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1109,7 +1109,7 @@ package body GNAT.Expect is\n       Dup2 (Pipe2.Output, GNAT.OS_Lib.Standout);\n       Dup2 (Pipe3.Output, GNAT.OS_Lib.Standerr);\n \n-      Portable_Execvp (Pid.Pid'Access, Cmd & ASCII.Nul, Args);\n+      Portable_Execvp (Pid.Pid'Access, Cmd & ASCII.NUL, Args);\n    end Set_Up_Child_Communications;\n \n    ---------------------------"}, {"sha": "124d43983a51d6d0706da8e98c20a2d5c713b5c3", "filename": "gcc/ada/g-expect.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fg-expect.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fg-expect.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-expect.adb?ref=43c6e0cb2115c752aaa0d7dbc9f04587cb43f350", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2000-2007, AdaCore                     --\n+--                     Copyright (C) 2000-2008, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1220,7 +1220,7 @@ package body GNAT.Expect is\n       Dup2 (Pipe2.Output, GNAT.OS_Lib.Standout);\n       Dup2 (Pipe3.Output, GNAT.OS_Lib.Standerr);\n \n-      Portable_Execvp (Pid.Pid'Access, Cmd & ASCII.Nul, Args);\n+      Portable_Execvp (Pid.Pid'Access, Cmd & ASCII.NUL, Args);\n \n       --  The following commands are not executed on Unix systems, and are\n       --  only required for Windows systems. We are now in the parent process."}, {"sha": "d00c7ec3db7bd19ed342cf4c7e63545f09b5eb87", "filename": "gcc/ada/g-locfil.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fg-locfil.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fg-locfil.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-locfil.adb?ref=43c6e0cb2115c752aaa0d7dbc9f04587cb43f350", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1998-2001 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1998-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -61,7 +61,7 @@ package body GNAT.Lock_Files is\n       if Directory (Directory'Last) = Dir_Separator\n         or else Directory (Directory'Last) = '/'\n       then\n-         Dir (Dir'Last - 1) := ASCII.Nul;\n+         Dir (Dir'Last - 1) := ASCII.NUL;\n       end if;\n \n       --  Try to lock the file Retries times"}, {"sha": "0319ff6e7258ee0875f75c19d89b89dbbb3c369c", "filename": "gcc/ada/g-regist.adb", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fg-regist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fg-regist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-regist.adb?ref=43c6e0cb2115c752aaa0d7dbc9f04587cb43f350", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---           Copyright (C) 2001-2007, Free Software Foundation, Inc.        --\n+--           Copyright (C) 2001-2008, Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -184,8 +184,8 @@ package body GNAT.Registry is\n \n       REG_OPTION_NON_VOLATILE : constant := 16#0#;\n \n-      C_Sub_Key : constant String := Sub_Key & ASCII.Nul;\n-      C_Class   : constant String := \"\" & ASCII.Nul;\n+      C_Sub_Key : constant String := Sub_Key & ASCII.NUL;\n+      C_Class   : constant String := \"\" & ASCII.NUL;\n       C_Mode    : constant REGSAM := To_C_Mode (Mode);\n \n       New_Key : aliased HKEY;\n@@ -214,7 +214,7 @@ package body GNAT.Registry is\n    ----------------\n \n    procedure Delete_Key (From_Key : HKEY; Sub_Key : String) is\n-      C_Sub_Key : constant String := Sub_Key & ASCII.Nul;\n+      C_Sub_Key : constant String := Sub_Key & ASCII.NUL;\n       Result    : LONG;\n    begin\n       Result := RegDeleteKey (From_Key, C_Sub_Key (C_Sub_Key'First)'Address);\n@@ -226,7 +226,7 @@ package body GNAT.Registry is\n    ------------------\n \n    procedure Delete_Value (From_Key : HKEY; Sub_Key : String) is\n-      C_Sub_Key : constant String := Sub_Key & ASCII.Nul;\n+      C_Sub_Key : constant String := Sub_Key & ASCII.NUL;\n       Result    : LONG;\n    begin\n       Result := RegDeleteValue (From_Key, C_Sub_Key (C_Sub_Key'First)'Address);\n@@ -339,7 +339,7 @@ package body GNAT.Registry is\n    is\n       use type REGSAM;\n \n-      C_Sub_Key : constant String := Sub_Key & ASCII.Nul;\n+      C_Sub_Key : constant String := Sub_Key & ASCII.NUL;\n       C_Mode    : constant REGSAM := To_C_Mode (Mode);\n \n       New_Key : aliased HKEY;\n@@ -377,7 +377,7 @@ package body GNAT.Registry is\n       Size_Value : aliased ULONG;\n       Type_Value : aliased DWORD;\n \n-      C_Sub_Key : constant String := Sub_Key & ASCII.Nul;\n+      C_Sub_Key : constant String := Sub_Key & ASCII.NUL;\n       Result    : LONG;\n \n    begin\n@@ -412,8 +412,8 @@ package body GNAT.Registry is\n        Value    : String;\n        Expand   : Boolean := False)\n    is\n-      C_Sub_Key : constant String := Sub_Key & ASCII.Nul;\n-      C_Value   : constant String := Value & ASCII.Nul;\n+      C_Sub_Key : constant String := Sub_Key & ASCII.NUL;\n+      C_Value   : constant String := Value & ASCII.NUL;\n \n       Value_Type : DWORD;\n       Result     : LONG;"}, {"sha": "e7cacadcdd4ceb182702758fa2d004990515b1b1", "filename": "gcc/ada/gnatchop.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fgnatchop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fgnatchop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatchop.adb?ref=43c6e0cb2115c752aaa0d7dbc9f04587cb43f350", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1998-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -425,7 +425,7 @@ procedure Gnatchop is\n       Info    : Unit_Info renames Unit.Table (U);\n       FD      : File_Descriptor;\n       Name    : aliased constant String :=\n-                  File.Table (Input).Name.all & ASCII.Nul;\n+                  File.Table (Input).Name.all & ASCII.NUL;\n       Length  : File_Offset;\n       Buffer  : String_Access;\n       Result  : String_Access;\n@@ -1413,7 +1413,7 @@ procedure Gnatchop is\n \n    function Write_Chopped_Files (Input : File_Num) return Boolean is\n       Name    : aliased constant String :=\n-                  File.Table (Input).Name.all & ASCII.Nul;\n+                  File.Table (Input).Name.all & ASCII.NUL;\n       FD      : File_Descriptor;\n       Buffer  : String_Access;\n       Success : Boolean;\n@@ -1660,7 +1660,7 @@ procedure Gnatchop is\n \n       declare\n          E_Name      : constant String := OS_Name (1 .. O_Length);\n-         C_Name      : aliased constant String := E_Name & ASCII.Nul;\n+         C_Name      : aliased constant String := E_Name & ASCII.NUL;\n          OS_Encoding : constant String := Encoding (1 .. E_Length);\n          File        : Stream_IO.File_Type;\n       begin"}, {"sha": "6917e631d08fe741c4fafca994d2b11d92f950d6", "filename": "gcc/ada/gnatdll.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fgnatdll.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fgnatdll.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatdll.adb?ref=43c6e0cb2115c752aaa0d7dbc9f04587cb43f350", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1997-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1997-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -270,7 +270,7 @@ procedure Gnatdll is\n       loop\n          case Getopt (\"g h v q k a? b: d: e: l: n m I:\") is\n \n-            when ASCII.Nul =>\n+            when ASCII.NUL =>\n                exit;\n \n             when 'h' =>\n@@ -381,7 +381,7 @@ procedure Gnatdll is\n \n       loop\n          case Getopt (\"*\") is\n-            when ASCII.Nul =>\n+            when ASCII.NUL =>\n                exit;\n \n             when others =>\n@@ -397,7 +397,7 @@ procedure Gnatdll is\n       loop\n          case Getopt (\"*\") is\n \n-            when ASCII.Nul =>\n+            when ASCII.NUL =>\n                exit;\n \n             when others =>"}, {"sha": "7be1d494baf02ace04c777df7f57a1f78cf74b0d", "filename": "gcc/ada/gnatlbr.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fgnatlbr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fgnatlbr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlbr.adb?ref=43c6e0cb2115c752aaa0d7dbc9f04587cb43f350", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1997-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1997-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -156,8 +156,8 @@ begin\n          Create_Block : declare\n             Success        : Boolean;\n             Make_Args      : Argument_List (1 .. 9);\n-            C_Lib_Dir      : String := Lib_Dir.all & ASCII.Nul;\n-            C_ADC_File     : String := ADC_File.all & ASCII.Nul;\n+            C_Lib_Dir      : String := Lib_Dir.all & ASCII.NUL;\n+            C_ADC_File     : String := ADC_File.all & ASCII.NUL;\n             F_ADC_File     : String (1 .. max_path_len);\n             F_ADC_File_Len : Integer := max_path_len;\n             Include_Dirs   : Integer;\n@@ -177,7 +177,7 @@ begin\n             full_name (C_ADC_File'Address, F_ADC_File'Address);\n \n             for I in 1 .. max_path_len loop\n-               if F_ADC_File (I) = ASCII.Nul then\n+               if F_ADC_File (I) = ASCII.NUL then\n                   F_ADC_File_Len := I - 1;\n                   exit;\n                end if;"}, {"sha": "d6ac07834a9d249d371e6394ccb2b1bb75548e1f", "filename": "gcc/ada/gnatmem.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fgnatmem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fgnatmem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatmem.adb?ref=43c6e0cb2115c752aaa0d7dbc9f04587cb43f350", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1997-2007, AdaCore                     --\n+--                     Copyright (C) 1997-2008, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -307,7 +307,7 @@ procedure Gnatmem is\n \n       loop\n          case Getopt (\"b: dd m: i: q s:\") is\n-            when ASCII.Nul => exit;\n+            when ASCII.NUL => exit;\n \n             when 'b' =>\n                begin"}, {"sha": "506966e13e7e0e2910874bdce085a21624abfc25", "filename": "gcc/ada/i-vxwork-x86.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fi-vxwork-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fi-vxwork-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-vxwork-x86.ads?ref=43c6e0cb2115c752aaa0d7dbc9f04587cb43f350", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                   S p e c                                --\n --                                                                          --\n---                     Copyright (C) 1999-2007, AdaCore                     --\n+--                     Copyright (C) 1999-2008, AdaCore                     --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -76,7 +76,7 @@ package Interfaces.VxWorks is\n    --     procedure Handler (Parameter : System.Address) is\n    --     begin\n    --        Count := Count + 1;\n-   --        logMsg (\"received an interrupt\" & ASCII.LF & ASCII.Nul);\n+   --        logMsg (\"received an interrupt\" & ASCII.LF & ASCII.NUL);\n    --     end Handler;\n    --  end P;\n    --"}, {"sha": "902f9e7ea351bc1fb03e732d8da40fffa6c27ac9", "filename": "gcc/ada/i-vxwork.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fi-vxwork.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fi-vxwork.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-vxwork.ads?ref=43c6e0cb2115c752aaa0d7dbc9f04587cb43f350", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                   S p e c                                --\n --                                                                          --\n---                     Copyright (C) 1999-2007, AdaCore                     --\n+--                     Copyright (C) 1999-2008, AdaCore                     --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -80,7 +80,7 @@ package Interfaces.VxWorks is\n    --        S : STATUS;\n    --     begin\n    --        Count := Count + 1;\n-   --        logMsg (\"received an interrupt\" & ASCII.LF & ASCII.Nul);\n+   --        logMsg (\"received an interrupt\" & ASCII.LF & ASCII.NUL);\n    --\n    --        --  Acknowledge VME interrupt\n    --        S := sysBusIntAck (intLevel => Level);"}, {"sha": "2eceb15db0356da41d2f08e8d8c863626df954a8", "filename": "gcc/ada/mlib-utl.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fmlib-utl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fmlib-utl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-utl.adb?ref=43c6e0cb2115c752aaa0d7dbc9f04587cb43f350", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2002-2007, AdaCore                     --\n+--                     Copyright (C) 2002-2008, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -299,7 +299,7 @@ package body MLib.Utl is\n    -----------------\n \n    procedure Delete_File (Filename : String) is\n-      File    : constant String := Filename & ASCII.Nul;\n+      File    : constant String := Filename & ASCII.NUL;\n       Success : Boolean;\n \n    begin"}, {"sha": "3c89fd38184d5a8ad89281e500e1370c16ce3802", "filename": "gcc/ada/s-os_lib.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fs-os_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fs-os_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.adb?ref=43c6e0cb2115c752aaa0d7dbc9f04587cb43f350", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1995-2007, AdaCore                     --\n+--                     Copyright (C) 1995-2008, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -458,10 +458,10 @@ package body System.OS_Lib is\n          --  Copy attributes\n \n          C_From (1 .. Name'Length) := Name;\n-         C_From (C_From'Last) := ASCII.Nul;\n+         C_From (C_From'Last) := ASCII.NUL;\n \n          C_To (1 .. To_Name'Length) := To_Name;\n-         C_To (C_To'Last) := ASCII.Nul;\n+         C_To (C_To'Last) := ASCII.NUL;\n \n          case Preserve is\n \n@@ -1622,10 +1622,10 @@ package body System.OS_Lib is\n \n                --  If null terminated string, put the quote before\n \n-               if Res (J) = ASCII.Nul then\n+               if Res (J) = ASCII.NUL then\n                   Res (J) := '\"';\n                   J := J + 1;\n-                  Res (J) := ASCII.Nul;\n+                  Res (J) := ASCII.NUL;\n \n                --  If argument is terminated by '\\', then double it. Otherwise\n                --  the ending quote will be taken as-is. This is quite strange"}, {"sha": "95bc4bc16b1f51396fe6c17112fc27fce3939d1b", "filename": "gcc/ada/s-regpat.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fs-regpat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fs-regpat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-regpat.adb?ref=43c6e0cb2115c752aaa0d7dbc9f04587cb43f350", "patch": "@@ -7,7 +7,7 @@\n --                                 B o d y                                  --\n --                                                                          --\n --               Copyright (C) 1986 by University of Toronto.               --\n---                      Copyright (C) 1999-2007, AdaCore                    --\n+--                      Copyright (C) 1999-2008, AdaCore                    --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1195,7 +1195,7 @@ package body System.Regpat is\n          In_Range    : Boolean := False;\n          Named_Class : Std_Class := ANYOF_NONE;\n          Value       : Character;\n-         Last_Value  : Character := ASCII.Nul;\n+         Last_Value  : Character := ASCII.NUL;\n \n       begin\n          Reset_Class (Bitmap);\n@@ -2192,7 +2192,7 @@ package body System.Regpat is\n                when ANYOF =>  null;\n                   declare\n                      Bitmap  : Character_Class;\n-                     Last    : Character := ASCII.Nul;\n+                     Last    : Character := ASCII.NUL;\n                      Current : Natural := 0;\n \n                      Current_Char : Character;\n@@ -2858,7 +2858,7 @@ package body System.Regpat is\n          Next   : Pointer;\n          Greedy : Boolean) return Boolean\n       is\n-         Next_Char       : Character := ASCII.Nul;\n+         Next_Char       : Character := ASCII.NUL;\n          Next_Char_Known : Boolean := False;\n          No              : Integer;  --  Can be negative\n          Min             : Natural;"}, {"sha": "64429b246428d8db0e01cedf2895081f075126a4", "filename": "gcc/ada/s-regpat.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fs-regpat.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c6e0cb2115c752aaa0d7dbc9f04587cb43f350/gcc%2Fada%2Fs-regpat.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-regpat.ads?ref=43c6e0cb2115c752aaa0d7dbc9f04587cb43f350", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                                                                          --\n --               Copyright (C) 1986 by University of Toronto.               --\n---                     Copyright (C) 1996-2007, AdaCore                     --\n+--                     Copyright (C) 1996-2008, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -604,7 +604,7 @@ private\n    --  compile to execute that permits the execute phase to run lots faster on\n    --  simple cases. They are:\n \n-   --     First              character that must begin a match or ASCII.Nul\n+   --     First              character that must begin a match or ASCII.NUL\n    --     Anchored           true iff match must start at beginning of line\n    --     Must_Have          pointer to string that match must include or null\n    --     Must_Have_Length   length of Must_Have string\n@@ -621,7 +621,7 @@ private\n \n    --  The initialization is meant to fail-safe in case the user of this\n    --  package tries to use an uninitialized matcher. This takes advantage\n-   --  of the knowledge that ASCII.Nul translates to the end-of-program (EOP)\n+   --  of the knowledge that ASCII.NUL translates to the end-of-program (EOP)\n    --  instruction code of the state machine.\n \n    No_Flags         : constant Regexp_Flags := 0;"}]}