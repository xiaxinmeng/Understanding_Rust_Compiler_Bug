{"sha": "1b0be822208349b2795381deace2352e998c1ad0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWIwYmU4MjIyMDgzNDliMjc5NTM4MWRlYWNlMjM1MmU5OThjMWFkMA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-08-17T15:53:45Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-08-18T00:45:53Z"}, "message": "analyzer: fix ICE on unhandled tree codes in gassign [PR96640]\n\nPR analyzer/96640 reports a ICE within region_model::on_assignment when\nfailing to handle a WIDEN_MULT_EVEN_EXPR, and various other tree codes.\n\nThe old implementation of region_model::on_assignment gracefully handled\ntree codes it didn't understand, returning \"UNKNOWN\", whereas the new\nimplementation (r11-2694-g808f4dfeb3a95f50f15e71148e5c1067f90a126d) had\na \"sorry_at\" and an assertion left over from development, leading to ICEs.\n\nThis patch restores the old behavior for these cases, and marks various\nvector operations as leading to unknown results.\n\ngcc/analyzer/ChangeLog:\n\tPR analyzer/96640\n\t* region-model.cc (region_model::get_gassign_result): Handle various\n\tVEC_* tree codes by returning UNKNOWN.\n\t(region_model::on_assignment): Handle unrecognized tree codes by\n\tsetting lhs to an unknown value, rather than issuing a \"sorry\" and\n\tasserting.", "tree": {"sha": "eee5c1a4412343e249b2df49c2720378231369d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eee5c1a4412343e249b2df49c2720378231369d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b0be822208349b2795381deace2352e998c1ad0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b0be822208349b2795381deace2352e998c1ad0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b0be822208349b2795381deace2352e998c1ad0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b0be822208349b2795381deace2352e998c1ad0/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "deee2322a2b36c5f03802e63895a7ce9e814969c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/deee2322a2b36c5f03802e63895a7ce9e814969c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/deee2322a2b36c5f03802e63895a7ce9e814969c"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "cd74c0f6195076fd6cdf00552893b5ba045d4823", "filename": "gcc/analyzer/region-model.cc", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b0be822208349b2795381deace2352e998c1ad0/gcc%2Fanalyzer%2Fregion-model.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b0be822208349b2795381deace2352e998c1ad0/gcc%2Fanalyzer%2Fregion-model.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model.cc?ref=1b0be822208349b2795381deace2352e998c1ad0", "patch": "@@ -526,6 +526,22 @@ region_model::get_gassign_result (const gassign *assign,\n     case VEC_SERIES_EXPR:\n     case VEC_COND_EXPR:\n     case VEC_PERM_EXPR:\n+    case VEC_WIDEN_MULT_HI_EXPR:\n+    case VEC_WIDEN_MULT_LO_EXPR:\n+    case VEC_WIDEN_MULT_EVEN_EXPR:\n+    case VEC_WIDEN_MULT_ODD_EXPR:\n+    case VEC_UNPACK_HI_EXPR:\n+    case VEC_UNPACK_LO_EXPR:\n+    case VEC_UNPACK_FLOAT_HI_EXPR:\n+    case VEC_UNPACK_FLOAT_LO_EXPR:\n+    case VEC_UNPACK_FIX_TRUNC_HI_EXPR:\n+    case VEC_UNPACK_FIX_TRUNC_LO_EXPR:\n+    case VEC_PACK_TRUNC_EXPR:\n+    case VEC_PACK_SAT_EXPR:\n+    case VEC_PACK_FIX_TRUNC_EXPR:\n+    case VEC_PACK_FLOAT_EXPR:\n+    case VEC_WIDEN_LSHIFT_HI_EXPR:\n+    case VEC_WIDEN_LSHIFT_LO_EXPR:\n       return m_mgr->get_or_create_unknown_svalue (TREE_TYPE (lhs));\n     }\n }\n@@ -555,10 +571,12 @@ region_model::on_assignment (const gassign *assign, region_model_context *ctxt)\n     {\n     default:\n       {\n-\tif (1)\n+\tif (0)\n \t  sorry_at (assign->location, \"unhandled assignment op: %qs\",\n \t\t    get_tree_code_name (op));\n-\tgcc_unreachable ();\n+\tconst svalue *unknown_sval\n+\t  = m_mgr->get_or_create_unknown_svalue (TREE_TYPE (lhs));\n+\tset_value (lhs_reg, unknown_sval, ctxt);\n       }\n       break;\n "}]}