{"sha": "6796826ca45e79481eddb18b387f8e1f8f03c4fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njc5NjgyNmNhNDVlNzk0ODFlZGRiMThiMzg3ZjhlMWY4ZjAzYzRmYQ==", "commit": {"author": {"name": "Guilhem Lavaux", "email": "guilhem@kaffe.org", "date": "2003-11-26T15:48:08Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-11-26T15:48:08Z"}, "message": "URLStreamHandler (parseUrl): Fixed URL parsing ('@' should be checked to distinguish port from userinfo).\n\n2003-11-26  Guilhem Lavaux  <guilhem@kaffe.org>\n\t    Mark Wielaard  <mark@klomp.org>\n\n\t* java/net/URLStreamHandler (parseUrl): Fixed URL parsing\n\t('@' should be checked to distinguish port from userinfo).\n\t(toExternalForm): Add @ userInfo if necessary.\n\nCo-Authored-By: Mark Wielaard <mark@klomp.org>\n\nFrom-SVN: r73953", "tree": {"sha": "d9d3d5824f030e82e8fb36e4f3addef46ce7aa1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9d3d5824f030e82e8fb36e4f3addef46ce7aa1a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6796826ca45e79481eddb18b387f8e1f8f03c4fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6796826ca45e79481eddb18b387f8e1f8f03c4fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6796826ca45e79481eddb18b387f8e1f8f03c4fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6796826ca45e79481eddb18b387f8e1f8f03c4fa/comments", "author": null, "committer": null, "parents": [{"sha": "dddfde5fc33619e2788b4264812d68bbcfd0f82a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dddfde5fc33619e2788b4264812d68bbcfd0f82a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dddfde5fc33619e2788b4264812d68bbcfd0f82a"}], "stats": {"total": 40, "additions": 33, "deletions": 7}, "files": [{"sha": "c81bee7aa12cff86205f040c89598a07d3be58c0", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6796826ca45e79481eddb18b387f8e1f8f03c4fa/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6796826ca45e79481eddb18b387f8e1f8f03c4fa/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=6796826ca45e79481eddb18b387f8e1f8f03c4fa", "patch": "@@ -1,3 +1,11 @@\n+2003-11-26  Guilhem Lavaux  <guilhem@kaffe.org>\n+\t    Mark Wielaard  <mark@klomp.org>\n+\n+\t* java/net/URLStreamHandler (parseUrl): Fixed URL parsing\n+\t('@' should be checked to distinguish port from userinfo).\n+\t(toExternalForm): Add @ userInfo if necessary.\n+\n+\n 2003-11-26  Michael Koch  <konqueror@gmx.de>\n \n \t* java/net/DatagramSocket.java"}, {"sha": "816f8dc2ab9f609737f799a7d70ce1028de541af", "filename": "libjava/java/net/URLStreamHandler.java", "status": "modified", "additions": 25, "deletions": 7, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6796826ca45e79481eddb18b387f8e1f8f03c4fa/libjava%2Fjava%2Fnet%2FURLStreamHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6796826ca45e79481eddb18b387f8e1f8f03c4fa/libjava%2Fjava%2Fnet%2FURLStreamHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FURLStreamHandler.java?ref=6796826ca45e79481eddb18b387f8e1f8f03c4fa", "patch": "@@ -129,36 +129,50 @@ protected void parseURL(URL url, String spec, int start, int end)\n     \n     if (spec.regionMatches (start, \"//\", 0, 2))\n       {\n+\tString genuineHost;\n \tint hostEnd;\n-\tint colon;\n+\tint colon, at_host;\n \n \tstart += 2;\n-\tint slash = spec.indexOf('/', start);\n+\tint slash = spec.indexOf ('/', start);\n \tif (slash >= 0) \n \t  hostEnd = slash;\n         else\n \t  hostEnd = end;\n \n \thost = spec.substring (start, hostEnd);\n \t\n+\t// We first need a genuine host name (with userinfo).\n+\t// So we check for '@': if it's present check the port in the\n+\t// section after '@' in the other case check it in the full string.\n+\t// P.S.: We don't care having '@' at the beginning of the string.\n+\tif ((at_host = host.indexOf ('@')) >= 0)\n+\t  genuineHost = host.substring (at_host);\n+\telse\n+\t  genuineHost = host;\n+\n \t// Look for optional port number.  It is valid for the non-port\n \t// part of the host name to be null (e.g. a URL \"http://:80\").\n \t// TBD: JDK 1.2 in this case sets host to null rather than \"\";\n \t// this is undocumented and likely an unintended side effect in 1.2\n \t// so we'll be simple here and stick with \"\". Note that\n \t// \"http://\" or \"http:///\" produce a \"\" host in JDK 1.2.\n-\tif ((colon = host.indexOf(':')) >= 0)\n+\tif ((colon = genuineHost.indexOf (':')) >= 0)\n \t  {\n \t    try\n \t      {\n-\t\tport = Integer.parseInt(host.substring(colon + 1));\n+\t\tport = Integer.parseInt (genuineHost.substring (colon + 1));\n \t      }\n \t    catch (NumberFormatException e)\n \t      {\n \t\t; // Ignore invalid port values; port is already set to u's\n \t\t  // port.\n \t      }\n-\t    host = host.substring(0, colon);\n+\t    // Now we must cut the port number in the original string.\n+\t    if (at_host >= 0)\n+\t      host = host.substring (0, at_host + colon);\n+\t    else\n+\t      host = host.substring (0, colon);\n \t  }\n \tfile = null;\n \tstart = hostEnd;\n@@ -451,7 +465,7 @@ protected int hashCode (URL url)\n    */\n   protected String toExternalForm(URL u)\n   {\n-    String protocol, host, file, ref;\n+    String protocol, host, file, ref, user;\n     int port;\n \n     protocol = u.getProtocol();\n@@ -465,6 +479,7 @@ protected String toExternalForm(URL u)\n     port = u.getPort();\n     file = u.getFile();\n     ref = u.getRef();\n+    user = u.getUserInfo();\n \n     // Guess a reasonable size for the string buffer so we have to resize\n     // at most once.\n@@ -479,7 +494,10 @@ protected String toExternalForm(URL u)\n \n     if (host.length() != 0)\n       {\n-        sb.append(\"//\").append(host);\n+\tsb.append(\"//\");\n+\tif (user != null && !\"\".equals(user))\n+\t  sb.append(user).append('@');\n+\tsb.append(host);\n \n         // Append port if port was in URL spec.\n         if (port >= 0)"}]}