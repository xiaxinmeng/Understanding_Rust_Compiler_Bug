{"sha": "8fce9db0148391e5bc6853c413867a9810c68e75", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZjZTlkYjAxNDgzOTFlNWJjNjg1M2M0MTM4NjdhOTgxMGM2OGU3NQ==", "commit": {"author": {"name": "Anthony Green", "email": "green@redhat.com", "date": "2006-07-14T18:16:39Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2006-07-14T18:16:39Z"}, "message": "natFilePosix.cc (performSetLastModified): Return true on success, false otherwise.\n\n2006-07-14  Anthony Green  <green@redhat.com>\n\n\t* java/io/natFilePosix.cc (performSetLastModified): Return true on\n\tsuccess, false otherwise.\n\nFrom-SVN: r115452", "tree": {"sha": "edea7c3d4da01b817cda548b81c1fc89719415fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/edea7c3d4da01b817cda548b81c1fc89719415fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8fce9db0148391e5bc6853c413867a9810c68e75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fce9db0148391e5bc6853c413867a9810c68e75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fce9db0148391e5bc6853c413867a9810c68e75", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fce9db0148391e5bc6853c413867a9810c68e75/comments", "author": {"login": "atgreen", "id": 89993, "node_id": "MDQ6VXNlcjg5OTkz", "avatar_url": "https://avatars.githubusercontent.com/u/89993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atgreen", "html_url": "https://github.com/atgreen", "followers_url": "https://api.github.com/users/atgreen/followers", "following_url": "https://api.github.com/users/atgreen/following{/other_user}", "gists_url": "https://api.github.com/users/atgreen/gists{/gist_id}", "starred_url": "https://api.github.com/users/atgreen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atgreen/subscriptions", "organizations_url": "https://api.github.com/users/atgreen/orgs", "repos_url": "https://api.github.com/users/atgreen/repos", "events_url": "https://api.github.com/users/atgreen/events{/privacy}", "received_events_url": "https://api.github.com/users/atgreen/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "27714d4372fb987b0680ebf509833b2dea5126fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27714d4372fb987b0680ebf509833b2dea5126fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27714d4372fb987b0680ebf509833b2dea5126fe"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "667eeae13638c5ddef26cd66c87c3d85a05f0857", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fce9db0148391e5bc6853c413867a9810c68e75/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fce9db0148391e5bc6853c413867a9810c68e75/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=8fce9db0148391e5bc6853c413867a9810c68e75", "patch": "@@ -1,3 +1,8 @@\n+2006-07-14  Anthony Green  <green@redhat.com>\n+\n+\t* java/io/natFilePosix.cc (performSetLastModified): Return true on\n+\tsuccess, false otherwise.\n+\n 2006-07-14  Ranjit Mathew  <rmathew@gcc.gnu.org>\n \n \t* stacktrace.cc (_Jv_StackTrace::GetStackTrace): Unconditionally use"}, {"sha": "ff634b0c2d429851872cb8242b50242510a1cd96", "filename": "libjava/java/io/natFilePosix.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fce9db0148391e5bc6853c413867a9810c68e75/libjava%2Fjava%2Fio%2FnatFilePosix.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fce9db0148391e5bc6853c413867a9810c68e75/libjava%2Fjava%2Fio%2FnatFilePosix.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FnatFilePosix.cc?ref=8fce9db0148391e5bc6853c413867a9810c68e75", "patch": "@@ -403,7 +403,7 @@ java::io::File::performSetLastModified (jlong time)\n   \n   tb.actime = time / 1000;\n   tb.modtime = time / 1000;\n-  return ::utime (buf, &tb);\n+  return (::utime (buf, &tb) == 0);\n #else\n   return false;\n #endif"}]}