{"sha": "7351d8da1bdd94d04d276ce75e11897bbc8e3832", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM1MWQ4ZGExYmRkOTRkMDRkMjc2Y2U3NWUxMTg5N2JiYzhlMzgzMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-05-31T19:12:25Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-05-31T19:12:25Z"}, "message": "re PR target/48688 ([x64]: shift/or instead of lea)\n\n\tPR target/48688\n\t* config/i386/i386.md (*lea_general_4): New define_insn_and_split.\n\n\t* gcc.target/i386/pr48688.c: New test.\n\nFrom-SVN: r174507", "tree": {"sha": "32335e82377d6b6140801eee20c711d3e0bf2ef4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32335e82377d6b6140801eee20c711d3e0bf2ef4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7351d8da1bdd94d04d276ce75e11897bbc8e3832", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7351d8da1bdd94d04d276ce75e11897bbc8e3832", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7351d8da1bdd94d04d276ce75e11897bbc8e3832", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7351d8da1bdd94d04d276ce75e11897bbc8e3832/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ff7714547ff7aaaac44011e2184fc876945ad0a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff7714547ff7aaaac44011e2184fc876945ad0a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff7714547ff7aaaac44011e2184fc876945ad0a5"}], "stats": {"total": 68, "additions": 68, "deletions": 0}, "files": [{"sha": "0c6454076d75870b8a056b4bb8cabc542717f72c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7351d8da1bdd94d04d276ce75e11897bbc8e3832/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7351d8da1bdd94d04d276ce75e11897bbc8e3832/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7351d8da1bdd94d04d276ce75e11897bbc8e3832", "patch": "@@ -1,3 +1,8 @@\n+2011-05-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/48688\n+\t* config/i386/i386.md (*lea_general_4): New define_insn_and_split.\n+\n 2011-05-31  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md: Use SWI248x instead of X87MODEI, SWI24 instead"}, {"sha": "6032924d66ab002966bb7deef79b496b84432d55", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7351d8da1bdd94d04d276ce75e11897bbc8e3832/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7351d8da1bdd94d04d276ce75e11897bbc8e3832/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=7351d8da1bdd94d04d276ce75e11897bbc8e3832", "patch": "@@ -6413,6 +6413,40 @@\n }\n   [(set_attr \"type\" \"lea\")\n    (set_attr \"mode\" \"SI\")])\n+\n+(define_insn_and_split \"*lea_general_4\"\n+  [(set (match_operand:SWI 0 \"register_operand\" \"=r\")\n+\t(any_or:SWI (ashift:SWI (match_operand:SWI 1 \"index_register_operand\" \"l\")\n+\t\t\t\t(match_operand:SWI 2 \"const_int_operand\" \"n\"))\n+\t\t    (match_operand 3 \"const_int_operand\" \"n\")))]\n+  \"(<MODE>mode == DImode\n+    || <MODE>mode == SImode\n+    || !TARGET_PARTIAL_REG_STALL\n+    || optimize_function_for_size_p (cfun))\n+   && ((unsigned HOST_WIDE_INT) INTVAL (operands[2])) - 1 < 3\n+   && ((unsigned HOST_WIDE_INT) INTVAL (operands[3])\n+       <= ((unsigned HOST_WIDE_INT) 1 << INTVAL (operands[2])))\"\n+  \"#\"\n+  \"&& reload_completed\"\n+  [(const_int 0)]\n+{\n+  rtx pat;\n+  if (<MODE>mode != DImode)\n+    operands[0] = gen_lowpart (SImode, operands[0]);\n+  operands[1] = gen_lowpart (Pmode, operands[1]);\n+  operands[2] = GEN_INT (1 << INTVAL (operands[2]));\n+  pat = plus_constant (gen_rtx_MULT (Pmode, operands[1], operands[2]),\n+\t\t       INTVAL (operands[3]));\n+  if (Pmode != SImode && <MODE>mode != DImode)\n+    pat = gen_rtx_SUBREG (SImode, pat, 0);\n+  emit_insn (gen_rtx_SET (VOIDmode, operands[0], pat));\n+  DONE;\n+}\n+  [(set_attr \"type\" \"lea\")\n+   (set (attr \"mode\")\n+      (if_then_else (eq (symbol_ref \"<MODE>mode == DImode\") (const_int 0))\n+\t(const_string \"SI\")\n+\t(const_string \"DI\")))])\n \f\n ;; Subtract instructions\n "}, {"sha": "dea716252edb90038dc99d12278efe06c9172dad", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7351d8da1bdd94d04d276ce75e11897bbc8e3832/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7351d8da1bdd94d04d276ce75e11897bbc8e3832/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7351d8da1bdd94d04d276ce75e11897bbc8e3832", "patch": "@@ -1,3 +1,8 @@\n+2011-05-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/48688\n+\t* gcc.target/i386/pr48688.c: New test.\n+\n 2010-11-15  Fabien Ch\u00eane  <fabien@gcc.gnu.org>\n \n \tPR c++/48010"}, {"sha": "f4d663a210b4f07bc7f0e2db2ada3e2f19f5ca0d", "filename": "gcc/testsuite/gcc.target/i386/pr48688.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7351d8da1bdd94d04d276ce75e11897bbc8e3832/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr48688.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7351d8da1bdd94d04d276ce75e11897bbc8e3832/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr48688.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr48688.c?ref=7351d8da1bdd94d04d276ce75e11897bbc8e3832", "patch": "@@ -0,0 +1,24 @@\n+/* PR target/48688 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+int fn1 (int x) { return (x << 3) | 5; }\n+int fn2 (int x) { return (x * 8) | 5; }\n+int fn3 (int x) { return (x << 3) + 5; }\n+int fn4 (int x) { return (x * 8) + 5; }\n+int fn5 (int x) { return (x << 3) ^ 5; }\n+int fn6 (int x) { return (x * 8) ^ 5; }\n+long fn7 (long x) { return (x << 3) | 5; }\n+long fn8 (long x) { return (x * 8) | 5; }\n+long fn9 (long x) { return (x << 3) + 5; }\n+long fn10 (long x) { return (x * 8) + 5; }\n+long fn11 (long x) { return (x << 3) ^ 5; }\n+long fn12 (long x) { return (x * 8) ^ 5; }\n+long fn13 (unsigned x) { return (x << 3) | 5; }\n+long fn14 (unsigned x) { return (x * 8) | 5; }\n+long fn15 (unsigned x) { return (x << 3) + 5; }\n+long fn16 (unsigned x) { return (x * 8) + 5; }\n+long fn17 (unsigned x) { return (x << 3) ^ 5; }\n+long fn18 (unsigned x) { return (x * 8) ^ 5; }\n+\n+/* { dg-final { scan-assembler-not \"\\[ \\t\\]x?or\\[bwlq\\]\\[ \\t\\]\" } } */"}]}