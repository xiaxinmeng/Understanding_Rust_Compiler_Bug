{"sha": "c1329fc84c8f7ee892070cb4aa514c4dbab70625", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzEzMjlmYzg0YzhmN2VlODkyMDcwY2I0YWE1MTRjNGRiYWI3MDYyNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-12-31T23:51:14Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-12-31T23:51:14Z"}, "message": "re PR tree-optimization/83609 (ICE in read_complex_part at gcc/expr.c:3202)\n\n\tPR middle-end/83609\n\t* expr.c (expand_assignment): Fix up a typo in simplify_gen_subreg\n\tlast argument when extracting from CONCAT.  If either from_real or\n\tfrom_imag is NULL, use expansion through memory.  If result is not\n\ta CONCAT and simplify_gen_subreg fails, try to simplify_gen_subreg\n\tthe parts directly to inner mode, if even that fails, use expansion\n\tthrough memory.\n\n\t* gcc.dg/pr83609.c: New test.\n\t* g++.dg/opt/pr83609.C: New test.\n\nFrom-SVN: r256052", "tree": {"sha": "99327b117c62805bc20eb2ed91a3f21228c802e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/99327b117c62805bc20eb2ed91a3f21228c802e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1329fc84c8f7ee892070cb4aa514c4dbab70625", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1329fc84c8f7ee892070cb4aa514c4dbab70625", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1329fc84c8f7ee892070cb4aa514c4dbab70625", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1329fc84c8f7ee892070cb4aa514c4dbab70625/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d235d09b7c86a2955bebdcb1991cd21758bcc21b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d235d09b7c86a2955bebdcb1991cd21758bcc21b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d235d09b7c86a2955bebdcb1991cd21758bcc21b"}], "stats": {"total": 102, "additions": 97, "deletions": 5}, "files": [{"sha": "98073e8f9427382001a339ea5c142e125c6e1a35", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1329fc84c8f7ee892070cb4aa514c4dbab70625/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1329fc84c8f7ee892070cb4aa514c4dbab70625/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c1329fc84c8f7ee892070cb4aa514c4dbab70625", "patch": "@@ -1,5 +1,13 @@\n 2018-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/83609\n+\t* expr.c (expand_assignment): Fix up a typo in simplify_gen_subreg\n+\tlast argument when extracting from CONCAT.  If either from_real or\n+\tfrom_imag is NULL, use expansion through memory.  If result is not\n+\ta CONCAT and simplify_gen_subreg fails, try to simplify_gen_subreg\n+\tthe parts directly to inner mode, if even that fails, use expansion\n+\tthrough memory.\n+\n \tPR middle-end/83623\n \t* expmed.c (expand_shift_1): For 2-byte rotates by BITS_PER_UNIT,\n \tcheck for bswap in mode rather than HImode and use that in expand_unop"}, {"sha": "0a735762e51da8e873e03f337d3090a56bb171ce", "filename": "gcc/expr.c", "status": "modified", "additions": 28, "deletions": 5, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1329fc84c8f7ee892070cb4aa514c4dbab70625/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1329fc84c8f7ee892070cb4aa514c4dbab70625/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=c1329fc84c8f7ee892070cb4aa514c4dbab70625", "patch": "@@ -5158,7 +5158,9 @@ expand_assignment (tree to, tree from, bool nontemporal)\n \t\t\t\t\t   from_mode, 0);\n \t\t  rtx from_imag\n \t\t    = simplify_gen_subreg (to_mode, XEXP (result, 1),\n-\t\t\t\t\t   from_mode, 1);\n+\t\t\t\t\t   from_mode, 0);\n+\t\t  if (!from_real || !from_imag)\n+\t\t    goto concat_store_slow;\n \t\t  emit_move_insn (XEXP (to_rtx, 0), from_real);\n \t\t  emit_move_insn (XEXP (to_rtx, 1), from_imag);\n \t\t}\n@@ -5167,14 +5169,35 @@ expand_assignment (tree to, tree from, bool nontemporal)\n \t\t  rtx from_rtx\n \t\t    = simplify_gen_subreg (GET_MODE (to_rtx), result,\n \t\t\t\t\t   TYPE_MODE (TREE_TYPE (from)), 0);\n-\t\t  emit_move_insn (XEXP (to_rtx, 0),\n-\t\t\t\t  read_complex_part (from_rtx, false));\n-\t\t  emit_move_insn (XEXP (to_rtx, 1),\n-\t\t\t\t  read_complex_part (from_rtx, true));\n+\t\t  if (from_rtx)\n+\t\t    {\n+\t\t      emit_move_insn (XEXP (to_rtx, 0),\n+\t\t\t\t      read_complex_part (from_rtx, false));\n+\t\t      emit_move_insn (XEXP (to_rtx, 1),\n+\t\t\t\t      read_complex_part (from_rtx, true));\n+\t\t    }\n+\t\t  else\n+\t\t    {\n+\t\t      machine_mode to_mode\n+\t\t\t= GET_MODE_INNER (GET_MODE (to_rtx));\n+\t\t      rtx from_real\n+\t\t\t= simplify_gen_subreg (to_mode, result,\n+\t\t\t\t\t       TYPE_MODE (TREE_TYPE (from)),\n+\t\t\t\t\t       0);\n+\t\t      rtx from_imag\n+\t\t\t= simplify_gen_subreg (to_mode, result,\n+\t\t\t\t\t       TYPE_MODE (TREE_TYPE (from)),\n+\t\t\t\t\t       GET_MODE_SIZE (to_mode));\n+\t\t      if (!from_real || !from_imag)\n+\t\t\tgoto concat_store_slow;\n+\t\t      emit_move_insn (XEXP (to_rtx, 0), from_real);\n+\t\t      emit_move_insn (XEXP (to_rtx, 1), from_imag);\n+\t\t    }\n \t\t}\n \t    }\n \t  else\n \t    {\n+\t    concat_store_slow:;\n \t      rtx temp = assign_stack_temp (GET_MODE (to_rtx),\n \t\t\t\t\t    GET_MODE_SIZE (GET_MODE (to_rtx)));\n \t      write_complex_part (temp, XEXP (to_rtx, 0), false);"}, {"sha": "59c9543de5fa26a822e7e647381d3cbcfd372fbf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1329fc84c8f7ee892070cb4aa514c4dbab70625/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1329fc84c8f7ee892070cb4aa514c4dbab70625/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c1329fc84c8f7ee892070cb4aa514c4dbab70625", "patch": "@@ -1,5 +1,9 @@\n 2018-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/83609\n+\t* gcc.dg/pr83609.c: New test.\n+\t* g++.dg/opt/pr83609.C: New test.\n+\n \tPR middle-end/83623\n \t* gcc.dg/pr83623.c: New test.\n "}, {"sha": "a43d2916d9d87428d0104abeb48a8f193e0cabe8", "filename": "gcc/testsuite/g++.dg/opt/pr83609.C", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1329fc84c8f7ee892070cb4aa514c4dbab70625/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr83609.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1329fc84c8f7ee892070cb4aa514c4dbab70625/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr83609.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr83609.C?ref=c1329fc84c8f7ee892070cb4aa514c4dbab70625", "patch": "@@ -0,0 +1,28 @@\n+// PR middle-end/83609\n+// { dg-do compile }\n+// { dg-options \"-O2 -fno-tree-forwprop\" }\n+\n+template <typename> class B;\n+template <> struct B<float>\n+{\n+  float foo () { return __real__ b; }\n+  _Complex float b;\n+};\n+\n+void bar (int);\n+\n+template <class T>\n+void\n+baz ()\n+{\n+  B<T> h;\n+  T *a = (T *) &h;\n+  a[0] = a[1] = 6;\n+  h.foo () ? void () : bar (7);\n+}\n+\n+int\n+main ()\n+{\n+  baz<float> ();\n+}"}, {"sha": "eac11fca9361c970f4b0f095c44c7cd618508809", "filename": "gcc/testsuite/gcc.dg/pr83609.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1329fc84c8f7ee892070cb4aa514c4dbab70625/gcc%2Ftestsuite%2Fgcc.dg%2Fpr83609.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1329fc84c8f7ee892070cb4aa514c4dbab70625/gcc%2Ftestsuite%2Fgcc.dg%2Fpr83609.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr83609.c?ref=c1329fc84c8f7ee892070cb4aa514c4dbab70625", "patch": "@@ -0,0 +1,29 @@\n+/* PR middle-end/83609 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -fno-tree-forwprop -fno-tree-ccp -fno-tree-fre -fno-tree-pre -fno-code-hoisting\" } */\n+\n+#if __SIZEOF_LONG_LONG__ == 2 * __SIZEOF_FLOAT__\n+_Complex float\n+foo (void)\n+{\n+  _Complex float c;\n+  *((unsigned long long *)&c) = 0x123456789abcdef0ULL;\n+  return c;\n+}\n+\n+int\n+main ()\n+{\n+  union { _Complex float c; unsigned long long l; } u;\n+  u.c = foo ();\n+  if (u.l != 0x123456789abcdef0ULL)\n+    __builtin_abort ();\n+  return 0;\n+}\n+#else\n+int\n+main ()\n+{\n+  return 0;\n+}\n+#endif"}]}