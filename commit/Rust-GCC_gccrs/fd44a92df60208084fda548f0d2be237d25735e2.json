{"sha": "fd44a92df60208084fda548f0d2be237d25735e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQ0NGE5MmRmNjAyMDgwODRmZGE1NDhmMGQyYmUyMzdkMjU3MzVlMg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2002-09-25T20:40:09Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-09-25T20:40:09Z"}, "message": "resolve.cc: Include StringBuffer.\n\n\t* resolve.cc: Include StringBuffer.\n\t(_Jv_ResolvePoolEntry): Use StringBuffer to create error string.\n\nFrom-SVN: r57515", "tree": {"sha": "7a95909ce5f317195493ac83a8616500c5760369", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a95909ce5f317195493ac83a8616500c5760369"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd44a92df60208084fda548f0d2be237d25735e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd44a92df60208084fda548f0d2be237d25735e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd44a92df60208084fda548f0d2be237d25735e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd44a92df60208084fda548f0d2be237d25735e2/comments", "author": null, "committer": null, "parents": [{"sha": "7ea082bbb514fb2b9afbb8f081e21f287ba86431", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ea082bbb514fb2b9afbb8f081e21f287ba86431", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ea082bbb514fb2b9afbb8f081e21f287ba86431"}], "stats": {"total": 30, "additions": 18, "deletions": 12}, "files": [{"sha": "2e5a4120e5ea66da5a4a04e24ac9f531ceb1ef18", "filename": "libjava/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd44a92df60208084fda548f0d2be237d25735e2/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd44a92df60208084fda548f0d2be237d25735e2/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=fd44a92df60208084fda548f0d2be237d25735e2", "patch": "@@ -1,5 +1,8 @@\n 2002-09-25  Tom Tromey  <tromey@redhat.com>\n \n+\t* resolve.cc: Include StringBuffer.\n+\t(_Jv_ResolvePoolEntry): Use StringBuffer to create error string.\n+\n \t* boehm.cc (_Jv_MarkObj): Don't fail if class object has been\n \tallocated but not initialized.\n "}, {"sha": "90df67b8ab96b8ac2d9f52992b965a03dff02cdd", "filename": "libjava/resolve.cc", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd44a92df60208084fda548f0d2be237d25735e2/libjava%2Fresolve.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd44a92df60208084fda548f0d2be237d25735e2/libjava%2Fresolve.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fresolve.cc?ref=fd44a92df60208084fda548f0d2be237d25735e2", "patch": "@@ -20,6 +20,7 @@ details.  */\n #include <java-cpool.h>\n #include <java/lang/Class.h>\n #include <java/lang/String.h>\n+#include <java/lang/StringBuffer.h>\n #include <java/lang/Thread.h>\n #include <java/lang/InternalError.h>\n #include <java/lang/VirtualMachineError.h>\n@@ -201,12 +202,13 @@ _Jv_ResolvePoolEntry (jclass klass, int index)\n     end_of_field_search:\n       if (the_field == 0)\n \t{\n-\t  jstring msg = JvNewStringLatin1 (\"field \");\n-\t  msg = msg->concat (owner->getName ());\n-\t  msg = msg->concat (JvNewStringLatin1(\".\"));\n-\t  msg = msg->concat (_Jv_NewStringUTF (field_name->data));\n-\t  msg = msg->concat (JvNewStringLatin1(\" was not found.\"));\n-\t  throw_incompatible_class_change_error (msg);\n+\t  java::lang::StringBuffer *sb = new java::lang::StringBuffer();\n+\t  sb->append(JvNewStringLatin1(\"field \"));\n+\t  sb->append(owner->getName());\n+\t  sb->append(JvNewStringLatin1(\".\"));\n+\t  sb->append(_Jv_NewStringUTF(field_name->data));\n+\t  sb->append(JvNewStringLatin1(\" was not found.\"));\n+\t  throw_incompatible_class_change_error(sb->toString());\n \t}\n \n       pool->data[index].field = the_field;\n@@ -312,12 +314,13 @@ _Jv_ResolvePoolEntry (jclass klass, int index)\n \n       if (the_method == 0)\n \t{\n-\t  jstring msg = JvNewStringLatin1 (\"method \");\n-\t  msg = msg->concat (owner->getName ());\n-\t  msg = msg->concat (JvNewStringLatin1(\".\"));\n-\t  msg = msg->concat (_Jv_NewStringUTF (method_name->data));\n-\t  msg = msg->concat (JvNewStringLatin1(\" was not found.\"));\n-\t  throw new java::lang::NoSuchMethodError (msg);\n+\t  java::lang::StringBuffer *sb = new java::lang::StringBuffer();\n+\t  sb->append(JvNewStringLatin1(\"method \"));\n+\t  sb->append(owner->getName());\n+\t  sb->append(JvNewStringLatin1(\".\"));\n+\t  sb->append(_Jv_NewStringUTF(method_name->data));\n+\t  sb->append(JvNewStringLatin1(\" was not found.\"));\n+\t  throw new java::lang::NoSuchMethodError (sb->toString());\n \t}\n       \n       pool->data[index].rmethod = "}]}