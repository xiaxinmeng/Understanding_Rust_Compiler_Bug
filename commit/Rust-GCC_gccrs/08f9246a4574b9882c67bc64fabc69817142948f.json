{"sha": "08f9246a4574b9882c67bc64fabc69817142948f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhmOTI0NmE0NTc0Yjk4ODJjNjdiYzY0ZmFiYzY5ODE3MTQyOTQ4Zg==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-04-01T17:32:20Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-04-01T17:32:20Z"}, "message": "re PR libfortran/31052 ([4.2 only] Bad IOSTAT values when readings NAMELISTs past EOF)\n\n2007-04-01  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libgfortran/31052\n\t* io/open.c (test_endfile): Delete this function.\n\t(edit_modes): Delete call to test_endfile.\n\t(new_unit): Likewise.\n\t* io/io.h: Delete prototype for test_endfile.\n\t* io/transfer.c (next_record_r): Remove use of test_endfile.\n\t(st_read):  Add test for end file condition and adjust status.\n\nFrom-SVN: r123403", "tree": {"sha": "33215bd612d3c257ba2f81ab28d1449710cbb577", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33215bd612d3c257ba2f81ab28d1449710cbb577"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08f9246a4574b9882c67bc64fabc69817142948f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08f9246a4574b9882c67bc64fabc69817142948f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08f9246a4574b9882c67bc64fabc69817142948f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08f9246a4574b9882c67bc64fabc69817142948f/comments", "author": null, "committer": null, "parents": [{"sha": "201c811d49e228c5e88f1e794f05d145b50e9128", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/201c811d49e228c5e88f1e794f05d145b50e9128", "html_url": "https://github.com/Rust-GCC/gccrs/commit/201c811d49e228c5e88f1e794f05d145b50e9128"}], "stats": {"total": 42, "additions": 13, "deletions": 29}, "files": [{"sha": "d360b6cb0c52669f8190eb456cb5e19fd12b50d6", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08f9246a4574b9882c67bc64fabc69817142948f/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08f9246a4574b9882c67bc64fabc69817142948f/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=08f9246a4574b9882c67bc64fabc69817142948f", "patch": "@@ -1,3 +1,13 @@\n+2007-04-01  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/31052\n+\t* io/open.c (test_endfile): Delete this function.\n+\t(edit_modes): Delete call to test_endfile.\n+\t(new_unit): Likewise.\n+\t* io/io.h: Delete prototype for test_endfile.\n+\t* io/transfer.c (next_record_r): Remove use of test_endfile.\n+\t(st_read):  Add test for end file condition and adjust status. \n+\n 2007-04-01  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/31366"}, {"sha": "df006693b28233e83e0ac89ed307247a3480f38e", "filename": "libgfortran/io/io.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08f9246a4574b9882c67bc64fabc69817142948f/libgfortran%2Fio%2Fio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08f9246a4574b9882c67bc64fabc69817142948f/libgfortran%2Fio%2Fio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fio.h?ref=08f9246a4574b9882c67bc64fabc69817142948f", "patch": "@@ -695,9 +695,6 @@ internal_proto(unlock_unit);\n \n /* open.c */\n \n-extern void test_endfile (gfc_unit *);\n-internal_proto(test_endfile);\n-\n extern gfc_unit *new_unit (st_parameter_open *, gfc_unit *, unit_flags *);\n internal_proto(new_unit);\n "}, {"sha": "742610a3ef67b20be532bd96479258429581a44b", "filename": "libgfortran/io/open.c", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08f9246a4574b9882c67bc64fabc69817142948f/libgfortran%2Fio%2Fopen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08f9246a4574b9882c67bc64fabc69817142948f/libgfortran%2Fio%2Fopen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fopen.c?ref=08f9246a4574b9882c67bc64fabc69817142948f", "patch": "@@ -109,19 +109,6 @@ static const st_option convert_opt[] =\n   { NULL, 0}\n };\n \n-/* Given a unit, test to see if the file is positioned at the terminal\n-   point, and if so, change state from NO_ENDFILE flag to AT_ENDFILE.\n-   This prevents us from changing the state from AFTER_ENDFILE to\n-   AT_ENDFILE.  */\n-\n-void\n-test_endfile (gfc_unit * u)\n-{\n-  if (u->endfile == NO_ENDFILE && file_length (u->s) == file_position (u->s))\n-    u->endfile = AT_ENDFILE;\n-}\n-\n-\n /* Change the modes of a file, those that are allowed * to be\n    changed.  */\n \n@@ -208,8 +195,6 @@ edit_modes (st_parameter_open *opp, gfc_unit * u, unit_flags * flags)\n \n       u->current_record = 0;\n       u->last_record = 0;\n-\n-      test_endfile (u);\t\t/* We might be at the end.  */\n       break;\n \n     case POSITION_APPEND:\n@@ -487,13 +472,6 @@ new_unit (st_parameter_open *opp, gfc_unit *u, unit_flags * flags)\n   memmove (u->file, opp->file, opp->file_len);\n   u->file_len = opp->file_len;\n \n-  /* Curiously, the standard requires that the\n-     position specifier be ignored for new files so a newly connected\n-     file starts out at the initial point.  We still need to figure\n-     out if the file is at the end or not.  */\n-\n-  test_endfile (u);\n-\n   if (flags->status == STATUS_SCRATCH && opp->file != NULL)\n     free_mem (opp->file);\n   return u;"}, {"sha": "65d83ef465c499d0646c9c66b1e156f039d7ddb2", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08f9246a4574b9882c67bc64fabc69817142948f/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08f9246a4574b9882c67bc64fabc69817142948f/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=08f9246a4574b9882c67bc64fabc69817142948f", "patch": "@@ -2226,10 +2226,6 @@ next_record_r (st_parameter_dt *dtp)\n \n       break;\n     }\n-\n-  if (dtp->u.p.current_unit->flags.access == ACCESS_SEQUENTIAL\n-      && !dtp->u.p.namelist_mode)\n-    test_endfile (dtp->u.p.current_unit);\n }\n \n \n@@ -2702,6 +2698,9 @@ st_read (st_parameter_dt *dtp)\n     switch (dtp->u.p.current_unit->endfile)\n       {\n       case NO_ENDFILE:\n+\tif (file_length (dtp->u.p.current_unit->s)\n+\t    == file_position (dtp->u.p.current_unit->s))\n+\t  dtp->u.p.current_unit->endfile = AT_ENDFILE;\n \tbreak;\n \n       case AT_ENDFILE:"}]}