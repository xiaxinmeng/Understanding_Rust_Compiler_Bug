{"sha": "ac4ee457756c19ef2f0f10d49686de8c30ef9d88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWM0ZWU0NTc3NTZjMTllZjJmMGYxMGQ0OTY4NmRlOGMzMGVmOWQ4OA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2015-07-15T07:39:30Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-07-15T07:39:30Z"}, "message": "re PR target/58066 (__tls_get_addr is called with misaligned stack on x86-64)\n\n\tPR rtl-optimization/58066\n\t* calls.c (expand_call): Precompute register parameters before stack\n\talignment is performed.\n\nFrom-SVN: r225807", "tree": {"sha": "93404c2111747f460750cfb0b2b6d9d2e7515cf5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93404c2111747f460750cfb0b2b6d9d2e7515cf5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac4ee457756c19ef2f0f10d49686de8c30ef9d88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac4ee457756c19ef2f0f10d49686de8c30ef9d88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac4ee457756c19ef2f0f10d49686de8c30ef9d88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac4ee457756c19ef2f0f10d49686de8c30ef9d88/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7a708f68bfb52c2986e2ef39bfa40a7bb3fbb51e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a708f68bfb52c2986e2ef39bfa40a7bb3fbb51e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a708f68bfb52c2986e2ef39bfa40a7bb3fbb51e"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "6340afe464f8329a164728862aa960d6aa5983e8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac4ee457756c19ef2f0f10d49686de8c30ef9d88/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac4ee457756c19ef2f0f10d49686de8c30ef9d88/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ac4ee457756c19ef2f0f10d49686de8c30ef9d88", "patch": "@@ -1,3 +1,9 @@\n+2015-07-15  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR rtl-optimization/58066\n+\t* calls.c (expand_call): Precompute register parameters before stack\n+\talignment is performed.\n+\n 2015-07-15  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR rtl-optimization/66838"}, {"sha": "2a297b0dc95aee01f02a2211ed0e4bfbfdd6e89d", "filename": "gcc/calls.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac4ee457756c19ef2f0f10d49686de8c30ef9d88/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac4ee457756c19ef2f0f10d49686de8c30ef9d88/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=ac4ee457756c19ef2f0f10d49686de8c30ef9d88", "patch": "@@ -3144,6 +3144,13 @@ expand_call (tree exp, rtx target, int ignore)\n \n       compute_argument_addresses (args, argblock, num_actuals);\n \n+      /* Precompute all register parameters.  It isn't safe to compute\n+\t anything once we have started filling any specific hard regs.\n+\t TLS symbols sometimes need a call to resolve.  Precompute\n+\t register parameters before any stack pointer manipulation\n+\t to avoid unaligned stack in the called function.  */\n+      precompute_register_parameters (num_actuals, args, &reg_parm_seen);\n+\n       /* Perform stack alignment before the first push (the last arg).  */\n       if (argblock == 0\n           && adjusted_args_size.constant > reg_parm_stack_space\n@@ -3184,10 +3191,6 @@ expand_call (tree exp, rtx target, int ignore)\n \n       funexp = rtx_for_function_call (fndecl, addr);\n \n-      /* Precompute all register parameters.  It isn't safe to compute anything\n-\t once we have started filling any specific hard regs.  */\n-      precompute_register_parameters (num_actuals, args, &reg_parm_seen);\n-\n       if (CALL_EXPR_STATIC_CHAIN (exp))\n \tstatic_chain_value = expand_normal (CALL_EXPR_STATIC_CHAIN (exp));\n       else"}]}